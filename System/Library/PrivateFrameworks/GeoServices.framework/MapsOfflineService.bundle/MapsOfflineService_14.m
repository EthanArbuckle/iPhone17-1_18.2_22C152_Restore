void sub_6528E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, void **a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, void *a18, uint64_t a19, void **a20,uint64_t a21,void **a22,void **a23,char *a24,_Unwind_Exception *exception_object)
{
  uint64_t v25;
  uint64_t v26;
  void **v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  void *v34;
  void **v35;
  void **v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void **v41;
  void *v42;
  void *v43;
  void *v44;

  v32 = *(void **)(v25 + 12304);
  if (v32) {
    operator delete(v32);
  }
  sub_5917F0(v26);
  sub_591864(v31);
  sub_591918((void **)(v25 + 12080));
  v33 = *(void **)(v25 + 12056);
  if (v33)
  {
    *(void *)(v25 + 12064) = v33;
    operator delete(v33);
    v34 = (void *)(v25 + 11688);
    v35 = (void **)(v25 + 11952);
    v36 = (void **)(v25 + 11976);
    v37 = *(void **)(v25 + 12024);
    if (!v37)
    {
LABEL_5:
      if ((*(char *)(v28 + 831) & 0x80000000) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
  }
  else
  {
    v34 = (void *)(v25 + 11688);
    v35 = (void **)(v25 + 11952);
    v36 = (void **)(v25 + 11976);
    v37 = *(void **)(v25 + 12024);
    if (!v37) {
      goto LABEL_5;
    }
  }
  *(void *)(v25 + 12032) = v37;
  operator delete(v37);
  if ((*(char *)(v28 + 831) & 0x80000000) == 0)
  {
LABEL_7:
    sub_28F14C(v36);
    sub_5919CC(v35);
    sub_591A38(v34);
    v38 = *(void **)(v25 + 11664);
    if (v38)
    {
      *(void *)(v25 + 11672) = v38;
      operator delete(v38);
      v39 = *(void **)(v25 + 11632);
      if (v39)
      {
LABEL_17:
        *(void *)(v25 + 11640) = v39;
        operator delete(v39);
        sub_4B1DB4((void **)(v25 + 11608));
        sub_4B1DB4((void **)(v25 + 11584));
        v40 = *v27;
        if (!*v27) {
          goto LABEL_15;
        }
        goto LABEL_14;
      }
    }
    else
    {
      v39 = *(void **)(v25 + 11632);
      if (v39) {
        goto LABEL_17;
      }
    }
    sub_4B1DB4((void **)(v25 + 11608));
    sub_4B1DB4((void **)(v25 + 11584));
    v40 = *v27;
    if (!*v27)
    {
LABEL_15:
      sub_52F970(v30);
      sub_52F970(v29);
      sub_591AC8((uint64_t **)(v25 + 10176));
      sub_591B4C(a10);
      if (a24[2704] < 0) {
        operator delete(*(void **)(v25 + 10080));
      }
      sub_591C10((void **)(v25 + 10056));
      sub_591C10((void **)(v25 + 10032));
      sub_591C10((void **)(v25 + 10008));
      sub_591CA4((void **)(v25 + 9984));
      sub_591D1C(a11);
      sub_4D4B58(a12);
      sub_4D4B58(a13);
      sub_4D4B58(a14);
      sub_4D4B58(a15);
      sub_4D4B58(a16);
      sub_52F090(a17);
      sub_52F090(a18);
      v41 = (void **)(v25 + 7328);
      sub_591DA0((void **)(v25 + 7496));
      sub_591DFC((void *)(v25 + 7472));
      sub_591E78((void **)(v25 + 7448));
      sub_1A668((void **)(v25 + 7424));
      if (a24[24] < 0)
      {
        operator delete(*(void **)(v25 + 7400));
        if ((*a24 & 0x80000000) == 0)
        {
LABEL_23:
          sub_50E790((void **)(v25 + 7352));
          v42 = *v41;
          if (!*v41) {
            goto LABEL_25;
          }
          goto LABEL_24;
        }
      }
      else if ((*a24 & 0x80000000) == 0)
      {
        goto LABEL_23;
      }
      operator delete(*(void **)(v25 + 7376));
      sub_50E790((void **)(v25 + 7352));
      v42 = *v41;
      if (!*v41)
      {
LABEL_25:
        sub_4D4B58(a19);
        sub_1A668(a20);
        sub_575104(a21);
        sub_4F2BD0(a22);
        if (*(char *)(v25 + 1255) < 0) {
          operator delete(*(void **)(v25 + 1232));
        }
        if (*(char *)(v25 + 1231) < 0)
        {
          operator delete(*(void **)(v25 + 1208));
          sub_4A6814((uint64_t *)(v25 + 1184));
          v43 = *(void **)(v25 + 1160);
          if (!v43)
          {
LABEL_29:
            v44 = *(void **)(v25 + 1136);
            if (!v44) {
              goto LABEL_31;
            }
            goto LABEL_30;
          }
        }
        else
        {
          sub_4A6814((uint64_t *)(v25 + 1184));
          v43 = *(void **)(v25 + 1160);
          if (!v43) {
            goto LABEL_29;
          }
        }
        *(void *)(v25 + 1168) = v43;
        operator delete(v43);
        v44 = *(void **)(v25 + 1136);
        if (!v44)
        {
LABEL_31:
          sub_591648((void **)(v25 + 1112));
          sub_591ED4((void **)(v25 + 1088));
          sub_591ED4(a23);
          sub_3AFFFC(v25);
          _Unwind_Resume(a1);
        }
LABEL_30:
        *(void *)(v25 + 1144) = v44;
        operator delete(v44);
        goto LABEL_31;
      }
LABEL_24:
      *(void *)(v25 + 7336) = v42;
      operator delete(v42);
      goto LABEL_25;
    }
LABEL_14:
    *(void *)(v25 + 11568) = v40;
    operator delete(v40);
    goto LABEL_15;
  }
LABEL_6:
  operator delete(*(void **)(v25 + 12000));
  goto LABEL_7;
}

void sub_652CD4()
{
}

void sub_652CDC()
{
}

void sub_652CE4()
{
}

void sub_652CEC()
{
}

void sub_652CF4()
{
}

void sub_652CFC()
{
}

void sub_652D04()
{
}

void sub_652D0C()
{
}

void sub_652D14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void **a22)
{
  sub_4F2BD0(a22);
  if ((*(char *)(v22 + 1255) & 0x80000000) == 0) {
    JUMPOUT(0x652C24);
  }
  JUMPOUT(0x652C1CLL);
}

void sub_652D30()
{
  if ((*(char *)(v0 + 1255) & 0x80000000) == 0) {
    JUMPOUT(0x652C24);
  }
  JUMPOUT(0x652C1CLL);
}

uint64_t *sub_652D48(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 9984);
  if (v2 == *(void *)(a1 + 9992))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F69F8, memory_order_acquire) & 1) != 0
      || !__cxa_guard_acquire(&qword_24F69F8))
    {
      return &qword_24F69E0;
    }
    else
    {
      qword_24F69E0 = 0;
      *(void *)algn_24F69E8 = 0;
      qword_24F69F0 = 0;
      __cxa_guard_release(&qword_24F69F8);
      return &qword_24F69E0;
    }
  }
  else
  {
    return (uint64_t *)nullsub_1(v2 + 40 * a2);
  }
}

char *sub_652DE4(char **a1, _OWORD *a2)
{
  v5 = a1[1];
  unint64_t v4 = (unint64_t)a1[2];
  if ((unint64_t)v5 >= v4)
  {
    v9 = *a1;
    unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((v5 - *a1) >> 4);
    unint64_t v11 = v10 + 1;
    if (v10 + 1 > 0x555555555555555) {
      sub_2E00();
    }
    unint64_t v12 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v4 - (void)v9) >> 4);
    if (2 * v12 > v11) {
      unint64_t v11 = 2 * v12;
    }
    if (v12 >= 0x2AAAAAAAAAAAAAALL) {
      unint64_t v13 = 0x555555555555555;
    }
    else {
      unint64_t v13 = v11;
    }
    if (v13)
    {
      if (v13 > 0x555555555555555) {
        sub_188D718();
      }
      v14 = (char *)operator new(48 * v13);
    }
    else
    {
      v14 = 0;
    }
    v15 = &v14[48 * v10];
    long long v16 = a2[1];
    *(_OWORD *)v15 = *a2;
    *((_OWORD *)v15 + 1) = v16;
    *((_OWORD *)v15 + 2) = a2[2];
    v8 = v15 + 48;
    if (v5 != v9)
    {
      do
      {
        long long v17 = *((_OWORD *)v5 - 3);
        long long v18 = *((_OWORD *)v5 - 1);
        *((_OWORD *)v15 - 2) = *((_OWORD *)v5 - 2);
        *((_OWORD *)v15 - 1) = v18;
        *((_OWORD *)v15 - 3) = v17;
        v15 -= 48;
        v5 -= 48;
      }
      while (v5 != v9);
      v5 = *a1;
    }
    *a1 = v15;
    a1[1] = v8;
    a1[2] = &v14[48 * v13];
    if (v5) {
      operator delete(v5);
    }
  }
  else
  {
    long long v6 = *a2;
    long long v7 = a2[2];
    *((_OWORD *)v5 + 1) = a2[1];
    *((_OWORD *)v5 + 2) = v7;
    *(_OWORD *)v5 = v6;
    v8 = v5 + 48;
  }
  a1[1] = v8;
  return v8 - 48;
}

BOOL sub_652F28(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 1072);
  if (*(void *)(a1 + 1064) == v1) {
    return 0;
  }
  int v2 = *(unsigned __int8 *)(v1 - 2072);
  return v2 != 2 && v2 != 5;
}

BOOL sub_652F58(uint64_t a1, int a2)
{
  uint64_t v2 = *(void *)(a1 + 1072);
  if (*(void *)(a1 + 1064) == v2) {
    return 1;
  }
  int v3 = *(unsigned __int8 *)(v2 - 2072);
  return a2 == 2 && v3 == 5 || v3 == a2;
}

uint64_t sub_652F8C(void *a1, unint64_t a2, uint64_t a3, double a4)
{
  uint64_t result = sub_46CCC8(a1, a2, a4);
  if (result)
  {
    double v8 = (double)a3;
    double v9 = (double)a3 / (double)result;
    uint64_t v10 = a1[67] - a1[66];
    if (sub_46C760(a1) == v10 >> 2)
    {
      uint64_t v11 = a1[66];
    }
    else
    {
      uint64_t v12 = a1[70] - a1[69];
      if (sub_46C760(a1) != v12 >> 2)
      {
        uint64_t v15 = sub_46C8EC(a1, a2);
        if (*(unsigned char *)(v15 + 38)) {
          long long v16 = (int **)(v15 + 24);
        }
        else {
          long long v16 = (int **)(v15 + 16);
        }
        long long v17 = *v16;
        double v18 = -1.0;
        if (v17)
        {
          v19 = (unsigned __int16 *)((char *)v17 - *v17);
          if (*v19 >= 9u)
          {
            uint64_t v20 = v19[4];
            if (v20)
            {
              unsigned int v21 = *(unsigned __int16 *)((char *)v17 + v20);
              if ((unsigned __int16)(v21 - 1) <= 0xFFFDu)
              {
                double v18 = (double)v21 / 100.0;
                if (v18 == 0.0) {
                  return 0;
                }
              }
            }
          }
        }
        double v13 = v8 / 100.0 / (v18 / 3.6) * 10.0;
        if (v13 < 0.0)
        {
LABEL_7:
          if (v13 > -4.50359963e15)
          {
            uint64_t v14 = (uint64_t)(v13 + v13);
            if (v14 >= 1) {
              --v14;
            }
            goto LABEL_23;
          }
          return (int)v13;
        }
LABEL_21:
        if (v13 < 4.50359963e15)
        {
          uint64_t v14 = (uint64_t)(v13 + v13) + 1;
LABEL_23:
          double v13 = (double)(v14 >> 1);
        }
        return (int)v13;
      }
      uint64_t v11 = a1[69];
    }
    double v13 = v9 * (double)*(int *)(v11 + 4 * a2);
    if (v13 < 0.0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
  return result;
}

uint64_t sub_653138(void *a1, unint64_t a2, int a3, double a4)
{
  if (!a3) {
    return 0;
  }
  uint64_t v7 = sub_46CCC8(a1, a2, a4);
  uint64_t v8 = (uint64_t)(a1[67] - a1[66]) >> 2;
  unint64_t v9 = sub_46C760(a1);
  uint64_t v10 = (uint64_t)(a1[70] - a1[69]) >> 2;
  unint64_t v11 = sub_46C760(a1);
  if (v8 != v9 && v10 != v11)
  {
    uint64_t v19 = sub_46C8EC(a1, a2);
    if (*(unsigned char *)(v19 + 38)) {
      uint64_t v20 = (int **)(v19 + 24);
    }
    else {
      uint64_t v20 = (int **)(v19 + 16);
    }
    unsigned int v21 = *v20;
    double v22 = -1.0;
    if (v21)
    {
      v23 = (unsigned __int16 *)((char *)v21 - *v21);
      if (*v23 >= 9u)
      {
        uint64_t v24 = v23[4];
        if (v24)
        {
          unsigned int v25 = *(unsigned __int16 *)((char *)v21 + v24);
          if ((unsigned __int16)(v25 - 1) <= 0xFFFDu) {
            double v22 = (double)v25 / 100.0;
          }
        }
      }
    }
    double v15 = (double)a3 / 10.0 * (v22 / 3.6) * 100.0;
    if (v15 >= 0.0)
    {
      double v26 = v15;
      if (v15 >= 4.50359963e15) {
        goto LABEL_32;
      }
      uint64_t v27 = (uint64_t)(v15 + v15) + 1;
    }
    else
    {
      double v26 = v15;
      if (v15 <= -4.50359963e15) {
        goto LABEL_32;
      }
      uint64_t v27 = (uint64_t)(v15 + v15);
      if (v27 >= 1) {
        --v27;
      }
    }
    double v26 = (double)(v27 >> 1);
LABEL_32:
    if (v26 < 9.22337204e18) {
      goto LABEL_33;
    }
    return 0x7FFFFFFFFFFFFFFELL;
  }
  double v13 = a1 + 66;
  if (v8 != v9) {
    double v13 = a1 + 69;
  }
  int v14 = *(_DWORD *)(*v13 + 4 * a2);
  if (!v14) {
    return 0;
  }
  double v15 = (double)a3 / 10.0 * ((double)v7 / 100.0 / ((double)v14 / 10.0) * 3.6 / 3.6) * 100.0;
  if (v15 >= 0.0)
  {
    double v16 = (double)a3 / 10.0 * ((double)v7 / 100.0 / ((double)v14 / 10.0) * 3.6 / 3.6) * 100.0;
    if (v15 >= 4.50359963e15) {
      goto LABEL_45;
    }
    uint64_t v17 = (uint64_t)(v15 + v15) + 1;
  }
  else
  {
    double v16 = (double)a3 / 10.0 * ((double)v7 / 100.0 / ((double)v14 / 10.0) * 3.6 / 3.6) * 100.0;
    if (v15 <= -4.50359963e15) {
      goto LABEL_45;
    }
    uint64_t v17 = (uint64_t)(v15 + v15);
    if (v17 >= 1) {
      --v17;
    }
  }
  double v16 = (double)(v17 >> 1);
LABEL_45:
  if (v16 < 9.22337204e18)
  {
LABEL_33:
    if (v15 >= 0.0)
    {
      if (v15 < 4.50359963e15)
      {
        uint64_t v28 = (uint64_t)(v15 + v15) + 1;
        return (uint64_t)(double)(v28 >> 1);
      }
    }
    else if (v15 > -4.50359963e15)
    {
      uint64_t v28 = (uint64_t)(v15 + v15);
      if (v28 >= 1) {
        --v28;
      }
      return (uint64_t)(double)(v28 >> 1);
    }
    return (uint64_t)v15;
  }
  return 0x7FFFFFFFFFFFFFFELL;
}

uint64_t sub_653410(void *a1, unint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, double a7)
{
  if (a5 < 1)
  {
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v11 = a3;
    unint64_t v12 = a2;
    int v13 = sub_652F8C(a1, a2, a3, a7);
    if (v13 <= a5)
    {
      if (v12)
      {
        int v15 = v13;
        --v12;
        do
        {
          if (v15 >= a5) {
            break;
          }
          uint64_t v16 = sub_46CCC8(a1, v12, v14);
          int v18 = sub_652F8C(a1, v12, v16, v17);
          if (v18 + v15 > a5) {
            goto LABEL_4;
          }
          v11 += v16;
          --v12;
          v15 += v18;
        }
        while (v12 != -1);
      }
    }
    else
    {
      uint64_t v11 = 0;
      int v15 = 0;
LABEL_4:
      v11 += sub_653138(a1, v12, a5 - v15, v14);
    }
  }
  uint64_t v19 = a4 - v11;
  if (a4 <= v11) {
    uint64_t v19 = 0;
  }
  uint64_t v20 = a1[63];
  uint64_t v21 = v20 - a4;
  if (v20 <= a4) {
    uint64_t v21 = 0;
  }
  uint64_t v22 = v21 + v11;
  if (v22 < v20) {
    uint64_t v20 = v22;
  }
  if (a6) {
    return v19;
  }
  else {
    return v20;
  }
}

uint64_t sub_653518(void *a1, unint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  unint64_t v7 = a2;
  uint64_t v10 = 0;
  if (sub_46C760(a1) > a2 && a5 >= 1)
  {
    uint64_t v10 = sub_46CCC8(a1, v7, v9) - a3;
    int v12 = sub_652F8C(a1, v7, v10, v11);
    if (v12 > a5)
    {
      int v14 = 0;
      uint64_t v10 = 0;
LABEL_15:
      v10 += sub_653138(a1, v7, a5 - v14, v13);
      goto LABEL_16;
    }
    int v14 = v12;
    if (v7 + 1 < sub_46C760(a1) && v14 < a5)
    {
      uint64_t v16 = 0;
      while (1)
      {
        uint64_t v17 = v7 + v16;
        unint64_t v18 = v7 + v16 + 1;
        uint64_t v19 = sub_46CCC8(a1, v18, v15);
        BOOL v21 = __CFADD__(v16++, 1);
        uint64_t v22 = a3;
        if (!v21) {
          uint64_t v22 = 0;
        }
        uint64_t v23 = v19 - v22;
        int v24 = sub_652F8C(a1, v18, v19 - v22, v20) + v14;
        if (v24 > a5) {
          break;
        }
        v10 += v23;
        if (v17 + 2 < sub_46C760(a1))
        {
          int v14 = v24;
          if (v24 < a5) {
            continue;
          }
        }
        goto LABEL_16;
      }
      unint64_t v7 = v18;
      goto LABEL_15;
    }
  }
LABEL_16:
  uint64_t v25 = v10 + a4;
  uint64_t v26 = a1[63];
  if (v26 < v10 + a4) {
    uint64_t v25 = a1[63];
  }
  BOOL v27 = v26 <= a4;
  uint64_t v28 = v26 - a4;
  if (v27) {
    uint64_t v28 = 0;
  }
  BOOL v27 = v28 < v10;
  uint64_t v29 = v28 - v10;
  if (v27) {
    uint64_t v29 = 0;
  }
  if (a6) {
    return v25;
  }
  else {
    return v29;
  }
}

void *sub_653698(uint64_t a1, unint64_t *a2, uint64_t a3, void **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v7 >= v8) {
        unint64_t v4 = v7 % v8;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
    uint64_t v10 = *(void **)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      double v11 = (void *)*v10;
      if (*v10)
      {
        if (v9.u32[0] < 2uLL)
        {
          while (1)
          {
            uint64_t v13 = v11[1];
            if (v13 == v7)
            {
              if (v11[2] == v7) {
                return v11;
              }
            }
            else if ((v13 & (v8 - 1)) != v4)
            {
              goto LABEL_23;
            }
            double v11 = (void *)*v11;
            if (!v11) {
              goto LABEL_23;
            }
          }
        }
        do
        {
          unint64_t v12 = v11[1];
          if (v12 == v7)
          {
            if (v11[2] == v7) {
              return v11;
            }
          }
          else
          {
            if (v12 >= v8) {
              v12 %= v8;
            }
            if (v12 != v4) {
              break;
            }
          }
          double v11 = (void *)*v11;
        }
        while (v11);
      }
    }
  }
LABEL_23:
  double v15 = operator new(0x20uLL);
  void *v15 = 0;
  v15[1] = v7;
  v15[2] = **a4;
  *((_DWORD *)v15 + 6) = 0;
  float v16 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v17 = *(float *)(a1 + 32);
  if (v8 && (float)(v17 * (float)v8) >= v16)
  {
    uint64_t v18 = *(void *)a1;
    uint64_t v19 = *(void **)(*(void *)a1 + 8 * v4);
    if (v19)
    {
LABEL_26:
      void *v15 = *v19;
LABEL_61:
      void *v19 = v15;
      goto LABEL_62;
    }
  }
  else
  {
    BOOL v20 = 1;
    if (v8 >= 3) {
      BOOL v20 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v21 = v20 | (2 * v8);
    unint64_t v22 = vcvtps_u32_f32(v16 / v17);
    if (v21 <= v22) {
      size_t prime = v22;
    }
    else {
      size_t prime = v21;
    }
    if (prime == 1)
    {
      size_t prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      size_t prime = std::__next_prime(prime);
      unint64_t v8 = *(void *)(a1 + 8);
    }
    if (prime > v8) {
      goto LABEL_37;
    }
    if (prime < v8)
    {
      unint64_t v24 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v8 < 3 || (uint8x8_t v25 = (uint8x8_t)vcnt_s8((int8x8_t)v8), v25.i16[0] = vaddlv_u8(v25), v25.u32[0] > 1uLL))
      {
        unint64_t v24 = std::__next_prime(v24);
      }
      else
      {
        uint64_t v26 = 1 << -(char)__clz(v24 - 1);
        if (v24 >= 2) {
          unint64_t v24 = v26;
        }
      }
      if (prime <= v24) {
        size_t prime = v24;
      }
      if (prime < v8) {
LABEL_37:
      }
        sub_B6C0(a1, prime);
    }
    unint64_t v8 = *(void *)(a1 + 8);
    unint64_t v27 = v8 - 1;
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8)
      {
        unint64_t v4 = v7 % v8;
        uint64_t v18 = *(void *)a1;
        uint64_t v19 = *(void **)(*(void *)a1 + 8 * (v7 % v8));
        if (v19) {
          goto LABEL_26;
        }
      }
      else
      {
        unint64_t v4 = v7;
        uint64_t v18 = *(void *)a1;
        uint64_t v19 = *(void **)(*(void *)a1 + 8 * v7);
        if (v19) {
          goto LABEL_26;
        }
      }
    }
    else
    {
      unint64_t v4 = v27 & v7;
      uint64_t v18 = *(void *)a1;
      uint64_t v19 = *(void **)(*(void *)a1 + 8 * (v27 & v7));
      if (v19) {
        goto LABEL_26;
      }
    }
  }
  void *v15 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v15;
  *(void *)(v18 + 8 * v4) = a1 + 16;
  if (*v15)
  {
    unint64_t v28 = *(void *)(*v15 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v28 >= v8) {
        v28 %= v8;
      }
    }
    else
    {
      v28 &= v8 - 1;
    }
    uint64_t v19 = (void *)(*(void *)a1 + 8 * v28);
    goto LABEL_61;
  }
LABEL_62:
  ++*(void *)(a1 + 24);
  return v15;
}

void sub_6539B0(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_6539C4(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v6 = *a2;
  unint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    uint8x8_t v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      unint64_t v3 = *a2;
      if (v6 >= v7) {
        unint64_t v3 = v6 % v7;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & v6;
    }
    uint8x8_t v9 = *(void **)(*(void *)a1 + 8 * v3);
    if (v9)
    {
      uint64_t v10 = (void *)*v9;
      if (*v9)
      {
        if (v8.u32[0] < 2uLL)
        {
          while (1)
          {
            uint64_t v12 = v10[1];
            if (v12 == v6)
            {
              if (v10[2] == v6) {
                return v10;
              }
            }
            else if ((v12 & (v7 - 1)) != v3)
            {
              goto LABEL_23;
            }
            uint64_t v10 = (void *)*v10;
            if (!v10) {
              goto LABEL_23;
            }
          }
        }
        do
        {
          unint64_t v11 = v10[1];
          if (v11 == v6)
          {
            if (v10[2] == v6) {
              return v10;
            }
          }
          else
          {
            if (v11 >= v7) {
              v11 %= v7;
            }
            if (v11 != v3) {
              break;
            }
          }
          uint64_t v10 = (void *)*v10;
        }
        while (v10);
      }
    }
  }
LABEL_23:
  int v14 = operator new(0x20uLL);
  void *v14 = 0;
  v14[1] = v6;
  v14[2] = *(void *)a3;
  *((_DWORD *)v14 + 6) = *(_DWORD *)(a3 + 8);
  float v15 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v16 = *(float *)(a1 + 32);
  if (v7 && (float)(v16 * (float)v7) >= v15)
  {
    uint64_t v17 = *(void *)a1;
    uint64_t v18 = *(void **)(*(void *)a1 + 8 * v3);
    if (v18)
    {
LABEL_26:
      void *v14 = *v18;
LABEL_61:
      *uint64_t v18 = v14;
      goto LABEL_62;
    }
  }
  else
  {
    BOOL v19 = 1;
    if (v7 >= 3) {
      BOOL v19 = (v7 & (v7 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v7);
    unint64_t v21 = vcvtps_u32_f32(v15 / v16);
    if (v20 <= v21) {
      size_t prime = v21;
    }
    else {
      size_t prime = v20;
    }
    if (prime == 1)
    {
      size_t prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      size_t prime = std::__next_prime(prime);
      unint64_t v7 = *(void *)(a1 + 8);
    }
    if (prime > v7) {
      goto LABEL_37;
    }
    if (prime < v7)
    {
      unint64_t v23 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v7 < 3 || (uint8x8_t v24 = (uint8x8_t)vcnt_s8((int8x8_t)v7), v24.i16[0] = vaddlv_u8(v24), v24.u32[0] > 1uLL))
      {
        unint64_t v23 = std::__next_prime(v23);
      }
      else
      {
        uint64_t v25 = 1 << -(char)__clz(v23 - 1);
        if (v23 >= 2) {
          unint64_t v23 = v25;
        }
      }
      if (prime <= v23) {
        size_t prime = v23;
      }
      if (prime < v7) {
LABEL_37:
      }
        sub_B6C0(a1, prime);
    }
    unint64_t v7 = *(void *)(a1 + 8);
    unint64_t v26 = v7 - 1;
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v6 >= v7)
      {
        unint64_t v3 = v6 % v7;
        uint64_t v17 = *(void *)a1;
        uint64_t v18 = *(void **)(*(void *)a1 + 8 * (v6 % v7));
        if (v18) {
          goto LABEL_26;
        }
      }
      else
      {
        unint64_t v3 = v6;
        uint64_t v17 = *(void *)a1;
        uint64_t v18 = *(void **)(*(void *)a1 + 8 * v6);
        if (v18) {
          goto LABEL_26;
        }
      }
    }
    else
    {
      unint64_t v3 = v26 & v6;
      uint64_t v17 = *(void *)a1;
      uint64_t v18 = *(void **)(*(void *)a1 + 8 * (v26 & v6));
      if (v18) {
        goto LABEL_26;
      }
    }
  }
  void *v14 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v14;
  *(void *)(v17 + 8 * v3) = a1 + 16;
  if (*v14)
  {
    unint64_t v27 = *(void *)(*v14 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v27 >= v7) {
        v27 %= v7;
      }
    }
    else
    {
      v27 &= v7 - 1;
    }
    uint64_t v18 = (void *)(*(void *)a1 + 8 * v27);
    goto LABEL_61;
  }
LABEL_62:
  ++*(void *)(a1 + 24);
  return v14;
}

void sub_653CDC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_653CF0(uint64_t a1, uint64_t a2)
{
  return a2;
}

double sub_653D08()
{
  byte_259833F = 1;
  word_2598328 = 65;
  byte_2598357 = 1;
  word_2598340 = 65;
  char v4 = 7;
  strcpy((char *)v3, "UNKNOWN");
  int v5 = 0;
  char v7 = 14;
  strcpy((char *)v6, "ROUTES_THROUGH");
  int v8 = 1;
  char v10 = 9;
  strcpy((char *)__p, "ROUTES_TO");
  int v11 = 3;
  char v13 = 11;
  strcpy((char *)v12, "ROUTES_FROM");
  int v14 = 2;
  xmmword_2598388 = 0u;
  *(_OWORD *)&qword_2598398 = 0u;
  dword_25983A8 = 1065353216;
  sub_3A6EF0((uint64_t)&xmmword_2598388, (uint64_t)v3, (uint64_t)v3);
  sub_3A6EF0((uint64_t)&xmmword_2598388, (uint64_t)v6, (uint64_t)v6);
  sub_3A6EF0((uint64_t)&xmmword_2598388, (uint64_t)__p, (uint64_t)__p);
  sub_3A6EF0((uint64_t)&xmmword_2598388, (uint64_t)v12, (uint64_t)v12);
  if (v13 < 0)
  {
    operator delete(v12[0]);
    if ((v10 & 0x80000000) == 0)
    {
LABEL_3:
      if ((v7 & 0x80000000) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      operator delete(v6[0]);
      if ((v4 & 0x80000000) == 0) {
        goto LABEL_5;
      }
LABEL_9:
      operator delete(v3[0]);
      goto LABEL_5;
    }
  }
  else if ((v10 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p[0]);
  if (v7 < 0) {
    goto LABEL_8;
  }
LABEL_4:
  if (v4 < 0) {
    goto LABEL_9;
  }
LABEL_5:
  qword_2598360 = 0;
  qword_2598368 = 0;
  qword_2598358 = 0;
  uint64_t v0 = operator new(9uLL);
  *(void *)uint64_t v0 = 0x4020C000103050DLL;
  v0[8] = 6;
  qword_2598358 = (uint64_t)v0;
  qword_2598360 = (uint64_t)(v0 + 9);
  qword_2598368 = (uint64_t)(v0 + 9);
  qword_2598370 = 0;
  qword_2598378 = 0;
  unk_2598380 = 0;
  uint64_t v1 = (char *)operator new(9uLL);
  qword_2598378 = (uint64_t)(v1 + 9);
  unk_2598380 = v1 + 9;
  double result = 1.10224369e-279;
  *(void *)uint64_t v1 = 0x604020C00010305;
  v1[8] = 13;
  qword_2598370 = (uint64_t)v1;
  return result;
}

void sub_653F44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  if (qword_2598398) {
    sub_20AA658((void **)qword_2598398);
  }
  v37 = (void *)xmmword_2598388;
  *(void *)&xmmword_2598388 = 0;
  if (v37)
  {
    operator delete(v37);
    if ((a36 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a29 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_11;
    }
  }
  else if ((a36 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(__p);
  if ((a29 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a22 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_12;
  }
LABEL_11:
  operator delete(a24);
  if ((a22 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a15 & 0x80000000) == 0) {
LABEL_14:
    }
      _Unwind_Resume(exception_object);
LABEL_13:
    operator delete(a10);
    _Unwind_Resume(exception_object);
  }
LABEL_12:
  operator delete(a17);
  if ((a15 & 0x80000000) == 0) {
    goto LABEL_14;
  }
  goto LABEL_13;
}

void sub_653FE4(std::string **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1 != v2)
  {
    do
    {
      sub_65402C(v1);
      v1 += 315;
    }
    while (v1 != v2);
  }
}

void sub_65402C(std::string *a1)
{
  uint64_t v2 = nullsub_1(a1);
  unint64_t v3 = *(void **)v2;
  char v4 = *(void **)(v2 + 8);
  if (*(void **)v2 == v4) {
    return;
  }
  while (1)
  {
    unint64_t v5 = sub_46C760(v3);
    if (v5) {
      break;
    }
LABEL_3:
    v3 += 1541;
    if (v3 == v4) {
      return;
    }
  }
  unint64_t v6 = v5;
  unint64_t v7 = 0;
  while (1)
  {
    int v8 = (int **)sub_46C8EC(v3, v7);
    uint8x8_t v9 = (unsigned __int16 *)((char *)*v8 - **v8);
    if (*v9 < 0xBu || (uint64_t v10 = v9[5]) == 0 || (*((unsigned char *)*v8 + v10 + 1) & 1) == 0)
    {
      int v11 = v8[1];
      uint64_t v12 = (unsigned __int16 *)((char *)v11 - *v11);
      if (*v12 < 0x11u) {
        goto LABEL_6;
      }
      uint64_t v13 = v12[8];
      if (!v13 || (*(_WORD *)((unsigned char *)v11 + v13) & 0x10) == 0 || !*(_DWORD *)(sub_6477D4((uint64_t)a1) + 52)) {
        goto LABEL_6;
      }
    }
    uint64_t v14 = sub_612A40(v3 + 928, v7);
    if (*(char *)(v14 + 23) < 0)
    {
      sub_4200(__dst, *(void **)v14, *(void *)(v14 + 8));
    }
    else
    {
      long long v15 = *(_OWORD *)v14;
      uint64_t v18 = *(void *)(v14 + 16);
      *(_OWORD *)__dst = v15;
    }
    sub_64C48((unsigned __int8 *)__dst, &__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      break;
    }
    if (*((unsigned char *)&__p.__r_.__value_.__s + 23)) {
      goto LABEL_24;
    }
    if (SHIBYTE(v18) < 0) {
LABEL_23:
    }
      operator delete(__dst[0]);
LABEL_6:
    if (v6 == ++v7) {
      goto LABEL_3;
    }
  }
  if (!__p.__r_.__value_.__l.__size_)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if (SHIBYTE(v18) < 0) {
      goto LABEL_23;
    }
    goto LABEL_6;
  }
LABEL_24:
  sub_648E74(a1, &__p);
  if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v18) & 0x80000000) == 0) {
      return;
    }
LABEL_28:
    operator delete(__dst[0]);
    return;
  }
  operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v18) < 0) {
    goto LABEL_28;
  }
}

void sub_6541E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void sub_65422C(uint64_t *a1@<X0>, void **a2@<X8>)
{
  uint64_t v4 = *a1;
  if (v4 == a1[1]) {
    goto LABEL_27;
  }
  BOOL v5 = sub_647280(v4);
  unint64_t v6 = (char *)*a1;
  unint64_t v7 = (char *)a1[1];
  if (!v5)
  {
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
    uint64_t v29 = v7 - v6;
    if (v7 != v6)
    {
      if (v29 < 0) {
        sub_2E00();
      }
      unint64_t v30 = 0xBAA6550FFBAA6551 * (v29 >> 3);
      unint64_t v31 = ((v30 - 1) >> 6) + 1;
      *a2 = operator new(8 * v31);
      a2[1] = 0;
      a2[2] = (void *)v31;
      sub_43284(a2, v30, 0);
    }
    return;
  }
  v55 = 0;
  v56 = 0;
  v57 = 0;
  if (v6 == v7)
  {
LABEL_27:
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
    return;
  }
  v54 = a1;
  do
  {
    uint64_t v9 = sub_404F30(v6);
    uint64_t v10 = v9;
    int v11 = v56;
    if (v56 < v57)
    {
      uint64_t *v56 = v9;
      int v8 = v11 + 1;
      goto LABEL_6;
    }
    uint64_t v12 = v55;
    int64_t v13 = (char *)v56 - (char *)v55;
    uint64_t v14 = v56 - v55;
    unint64_t v15 = v14 + 1;
    if ((unint64_t)(v14 + 1) >> 61) {
      sub_2E00();
    }
    uint64_t v16 = (char *)v57 - (char *)v55;
    if (((char *)v57 - (char *)v55) >> 2 > v15) {
      unint64_t v15 = v16 >> 2;
    }
    if ((unint64_t)v16 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v17 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v17 = v15;
    }
    if (v17)
    {
      if (v17 >> 61) {
        sub_188D718();
      }
      uint64_t v18 = (char *)operator new(8 * v17);
      BOOL v19 = (uint64_t *)&v18[8 * v14];
      uint64_t *v19 = v10;
      int v8 = v19 + 1;
      if (v11 == v12) {
        goto LABEL_25;
      }
LABEL_19:
      unint64_t v20 = (char *)(v11 - 1) - (char *)v12;
      if (v20 < 0x58) {
        goto LABEL_79;
      }
      if ((unint64_t)((char *)v11 - &v18[v13]) < 0x20) {
        goto LABEL_79;
      }
      uint64_t v21 = (v20 >> 3) + 1;
      uint64_t v22 = 8 * (v21 & 0x3FFFFFFFFFFFFFFCLL);
      unint64_t v23 = &v11[v22 / 0xFFFFFFFFFFFFFFF8];
      BOOL v19 = (uint64_t *)((char *)v19 - v22);
      uint8x8_t v24 = &v18[8 * v14 - 16];
      uint64_t v25 = v11 - 2;
      uint64_t v26 = v21 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        long long v27 = *(_OWORD *)v25;
        *((_OWORD *)v24 - 1) = *((_OWORD *)v25 - 1);
        *(_OWORD *)uint8x8_t v24 = v27;
        v24 -= 32;
        v25 -= 4;
        v26 -= 4;
      }
      while (v26);
      int v11 = v23;
      if (v21 != (v21 & 0x3FFFFFFFFFFFFFFCLL))
      {
LABEL_79:
        do
        {
          uint64_t v28 = *--v11;
          *--BOOL v19 = v28;
        }
        while (v11 != v12);
      }
      goto LABEL_25;
    }
    uint64_t v18 = 0;
    BOOL v19 = (uint64_t *)(8 * v14);
    *(void *)(8 * v14) = v10;
    int v8 = (uint64_t *)(8 * v14 + 8);
    if (v11 != v12) {
      goto LABEL_19;
    }
LABEL_25:
    v55 = v19;
    v57 = (uint64_t *)&v18[8 * v17];
    if (v12) {
      operator delete(v12);
    }
LABEL_6:
    v56 = v8;
    v6 += 7560;
  }
  while (v6 != v7);
  v32 = v55;
  v33 = v55 + 1;
  if (v55 != v8 && v33 != v8)
  {
    unint64_t v35 = *v55;
    v36 = v55;
    v37 = v55 + 1;
    do
    {
      unint64_t v39 = *v37++;
      unint64_t v38 = v39;
      BOOL v40 = v35 >= v39;
      if (v35 <= v39) {
        unint64_t v35 = v38;
      }
      if (!v40) {
        v36 = v33;
      }
      v33 = v37;
    }
    while (v37 != v8);
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
    goto LABEL_46;
  }
  *a2 = 0;
  a2[1] = 0;
  v36 = v32;
  a2[2] = 0;
  if (v32 == v8)
  {
LABEL_70:
    v56 = v8;
    operator delete(v8);
  }
  else
  {
LABEL_46:
    unint64_t v41 = 0;
    uint64_t v42 = v36 - v32;
    uint64_t v43 = v8 - v32;
    do
    {
      while (1)
      {
        uint64_t v44 = sub_576B88(v54, v41);
        v45 = (void *)sub_6546E8(&v55, v41);
        if (v42 == v41 || *v45 >= (unint64_t)v55[v42] || !*(unsigned char *)(sub_6477D4(v44) + 25)) {
          break;
        }
        unint64_t v46 = (unint64_t)a2[1];
        v47 = a2[2];
        if (v46 == (void)v47 << 6)
        {
          if ((uint64_t)(v46 + 1) < 0) {
            sub_2E00();
          }
          unint64_t v48 = (void)v47 << 7;
          if (v48 <= (v46 & 0xFFFFFFFFFFFFFFC0) + 64) {
            unint64_t v48 = (v46 & 0xFFFFFFFFFFFFFFC0) + 64;
          }
          if (v46 <= 0x3FFFFFFFFFFFFFFELL) {
            unint64_t v49 = v48;
          }
          else {
            unint64_t v49 = 0x7FFFFFFFFFFFFFFFLL;
          }
          sub_3D110((uint64_t)a2, v49);
          unint64_t v46 = (unint64_t)a2[1];
        }
        a2[1] = (void *)(v46 + 1);
        *(void *)((char *)*a2 + ((v46 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v46;
        if (v43 == ++v41) {
          goto LABEL_69;
        }
      }
      unint64_t v50 = (unint64_t)a2[1];
      v51 = a2[2];
      if (v50 == (void)v51 << 6)
      {
        if ((uint64_t)(v50 + 1) < 0) {
          sub_2E00();
        }
        unint64_t v52 = (void)v51 << 7;
        if (v52 <= (v50 & 0xFFFFFFFFFFFFFFC0) + 64) {
          unint64_t v52 = (v50 & 0xFFFFFFFFFFFFFFC0) + 64;
        }
        if (v50 <= 0x3FFFFFFFFFFFFFFELL) {
          unint64_t v53 = v52;
        }
        else {
          unint64_t v53 = 0x7FFFFFFFFFFFFFFFLL;
        }
        sub_3D110((uint64_t)a2, v53);
        unint64_t v50 = (unint64_t)a2[1];
      }
      a2[1] = (void *)(v50 + 1);
      *(void *)((char *)*a2 + ((v50 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= ~(1 << v50);
      ++v41;
    }
    while (v43 != v41);
LABEL_69:
    int v8 = v55;
    if (v55) {
      goto LABEL_70;
    }
  }
}

void sub_65467C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (*v11)
  {
    operator delete(*v11);
    int64_t v13 = __p;
    if (!__p) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    int64_t v13 = __p;
    if (!__p) {
      goto LABEL_3;
    }
  }
  operator delete(v13);
  _Unwind_Resume(exception_object);
}

uint64_t sub_6546E8(void *a1, unint64_t a2)
{
  if (a2 >= (uint64_t)(a1[1] - *a1) >> 3)
  {
    exception = __cxa_allocate_exception(0x40uLL);
    std::to_string(&v16, a2);
    unint64_t v6 = std::string::insert(&v16, 0, "Out-of-bounds access in Vector::at with index=");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v17.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    int v8 = std::string::append(&v17, ",size=");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v18.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v18.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v15, (uint64_t)(a1[1] - *a1) >> 3);
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v10 = &v15;
    }
    else {
      uint64_t v10 = (std::string *)v15.__r_.__value_.__r.__words[0];
    }
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v15.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v15.__r_.__value_.__l.__size_;
    }
    uint64_t v12 = std::string::append(&v18, (const std::string::value_type *)v10, size);
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    std::string::size_type v20 = v12->__r_.__value_.__r.__words[2];
    long long v19 = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    uint64_t v14 = (void *)sub_2F404((uint64_t)exception, &v19);
  }
  return *a1 + 8 * a2;
}

void sub_654818(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 41) < 0) {
    operator delete(*(void **)(v33 - 64));
  }
  if (a14 < 0)
  {
    operator delete(a9);
    if ((a33 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a26 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_10;
    }
  }
  else if ((a33 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(a28);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_7;
  }
LABEL_10:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0) {
LABEL_11:
  }
    _Unwind_Resume(a1);
LABEL_7:
  operator delete(__p);
  goto LABEL_11;
}

BOOL sub_6548F8(_DWORD *a1, uint64_t *a2, double a3)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  if (*a2 == v4) {
    return 1;
  }
  for (uint64_t i = v3 + 7560; i != v4; i += 7560)
  {
    int v8 = sub_646CE8(i);
    if (v8 < (int)sub_646CE8(v3)) {
      uint64_t v3 = i;
    }
  }
  double v9 = (double)(int)sub_646CE8(v3) * a3;
  if (v9 >= 0.0)
  {
    if (v9 < 4.50359963e15)
    {
      uint64_t v10 = (uint64_t)(v9 + v9) + 1;
LABEL_14:
      double v9 = (double)(v10 >> 1);
    }
  }
  else if (v9 > -4.50359963e15)
  {
    uint64_t v10 = (uint64_t)(v9 + v9);
    if (v10 >= 1) {
      --v10;
    }
    goto LABEL_14;
  }
  return *a1 < (int)v9;
}

uint64_t sub_654A08(uint64_t a1, uint64_t a2, int a3)
{
  BOOL v5 = (int **)sub_46C8EC((void *)a1, a2);
  int v6 = *(unsigned __int8 *)(a1 + 12176);
  long long v7 = *v5;
  int v8 = (unsigned __int16 *)((char *)v7 - *v7);
  if (*v8 >= 0xBu)
  {
    uint64_t v9 = v8[5];
    if (v9)
    {
      int v10 = *(int *)((char *)v7 + v9);
      if ((v10 & 0x400) != 0) {
        return 9;
      }
      if ((v10 & 0x800) != 0) {
        return 10;
      }
    }
  }
  if (sub_654D70(v7, *((unsigned char *)v5 + 38)))
  {
    BOOL v11 = a3 == 0;
    unsigned int v12 = 12;
LABEL_24:
    if (v11) {
      return v12;
    }
    else {
      return 6;
    }
  }
  if (sub_654F1C(*v5, *((unsigned __int8 *)v5 + 38)))
  {
    if (v6)
    {
      long long v13 = *v5;
      uint64_t v14 = (unsigned __int16 *)((char *)*v5 - **v5);
      if (*v14 >= 0x2Fu)
      {
        if (v14[23])
        {
          unsigned int v15 = *((unsigned __int8 *)v13 + v14[23]);
          BOOL v16 = v15 > 0x2B;
          uint64_t v17 = (1 << v15) & 0x80000001040;
          if (!v16 && v17 != 0)
          {
            uint64_t v19 = v14[5];
            if (!v19 || (*((unsigned char *)v13 + v19 + 2) & 0x20) == 0) {
              return 11;
            }
          }
        }
      }
    }
    BOOL v11 = a3 == 0;
    unsigned int v12 = 3;
    goto LABEL_24;
  }
  uint64_t v21 = *v5;
  uint64_t v22 = (unsigned __int16 *)((char *)*v5 - **v5);
  unsigned int v23 = *v22;
  if (*((unsigned char *)v5 + 38))
  {
    if (v23 < 0x47)
    {
      if (v23 < 0xB) {
        return 0;
      }
      goto LABEL_38;
    }
    if (v22[35])
    {
      int v24 = *(int *)((char *)v21 + v22[35]);
      if ((v24 & 0x1000) == 0)
      {
        int v25 = 256;
        goto LABEL_33;
      }
      return 2;
    }
  }
  else
  {
    if (v23 < 0x47)
    {
      if (v23 <= 0xA) {
        return 0;
      }
      goto LABEL_38;
    }
    if (v22[35])
    {
      int v24 = *(int *)((char *)v21 + v22[35]);
      if ((v24 & 0x800) == 0)
      {
        int v25 = 128;
LABEL_33:
        if ((v24 & v25) != 0) {
          return 1;
        }
        goto LABEL_38;
      }
      return 2;
    }
  }
LABEL_38:
  uint64_t v26 = v22[5];
  if (v22[5] && (*((unsigned char *)v21 + v26 + 2) & 0x20) != 0) {
    goto LABEL_54;
  }
  if (*((unsigned char *)v5 + 38))
  {
    if (v23 >= 0x47)
    {
      if (!v22[35] || (*((unsigned char *)v21 + v22[35]) & 2) == 0 || !v22[5]) {
        goto LABEL_55;
      }
      int v27 = 2;
      goto LABEL_52;
    }
    goto LABEL_54;
  }
  if (v23 < 0x47)
  {
LABEL_54:
    if (v23 >= 0x2F) {
      goto LABEL_55;
    }
    return 0;
  }
  if (!v22[35] || (*((unsigned char *)v21 + v22[35]) & 1) == 0 || !v22[5]) {
    goto LABEL_55;
  }
  int v27 = 1;
LABEL_52:
  if ((*(int *)((char *)v21 + v26) & v27) != 0) {
    return 4;
  }
LABEL_55:
  uint64_t v28 = v22[23];
  if (!v28) {
    return 0;
  }
  int v29 = *((unsigned __int8 *)v21 + v28);
  uint64_t result = 5;
  switch(v29)
  {
    case 6:
    case 12:
    case 43:
      uint64_t result = 6;
      break;
    case 44:
      return result;
    default:
      uint64_t result = 8 * (v29 == 8);
      break;
  }
  return result;
}

BOOL sub_654D70(int *a1, char a2)
{
  uint64_t v2 = (unsigned __int16 *)((char *)a1 - *a1);
  unsigned int v3 = *v2;
  if ((a2 & 1) == 0)
  {
    if (v3 >= 0x47)
    {
      uint64_t v4 = v2[35];
      if (!v2[35]) {
        return v4;
      }
      if (*(int *)((char *)a1 + v2[35])) {
        goto LABEL_9;
      }
    }
    return 0;
  }
  if (v3 < 0x47) {
    return 0;
  }
  uint64_t v4 = v2[35];
  if (!v2[35]) {
    return v4;
  }
  if ((*(int *)((char *)a1 + v2[35]) & 2) == 0) {
    return 0;
  }
LABEL_9:
  if (!v2[23]) {
    return 0;
  }
  uint64_t v4 = 0;
  switch(*((unsigned char *)a1 + v2[23]))
  {
    case 6:
    case 0xC:
    case 0x2B:
      if (v2[5] && (*((unsigned char *)a1 + v2[5] + 2) & 0x20) != 0) {
        return 0;
      }
      break;
    case 0x2C:
      break;
    default:
      return v4;
  }
  uint64_t v4 = v2[28];
  if ((a2 & 1) == 0)
  {
    if (v2[28])
    {
      int v5 = *(int *)((char *)a1 + v4);
      if (v5) {
        return !sub_654F1C(a1, a2);
      }
      goto LABEL_19;
    }
    return v4;
  }
  if (!v2[28]) {
    return v4;
  }
  int v5 = *(int *)((char *)a1 + v4);
  if ((v5 & 2) != 0) {
    return !sub_654F1C(a1, a2);
  }
LABEL_19:
  if ((v5 & 7) != 4 && (v5 & 0x23) != 0x20) {
    return 0;
  }
  return !sub_654F1C(a1, a2);
}

BOOL sub_654F1C(int *a1, int a2)
{
  uint64_t v2 = (unsigned __int16 *)((char *)a1 - *a1);
  unsigned int v3 = *v2;
  if ((a2 & 1) == 0)
  {
    if (v3 >= 0x47)
    {
      uint64_t v4 = v2[35];
      if (!v2[35]) {
        return v4;
      }
      int v5 = *(int *)((char *)a1 + v2[35]);
      if (v5) {
        goto LABEL_9;
      }
    }
    return 0;
  }
  if (v3 < 0x47) {
    return 0;
  }
  uint64_t v4 = v2[35];
  if (!v2[35]) {
    return v4;
  }
  int v5 = *(int *)((char *)a1 + v2[35]);
  if ((v5 & 2) == 0) {
    return 0;
  }
LABEL_9:
  if (!v2[23]) {
    return 0;
  }
  uint64_t v4 = 0;
  switch(*((unsigned char *)a1 + v2[23]))
  {
    case 6:
    case 0xC:
    case 0x2B:
      if (v2[5] && (*((unsigned char *)a1 + v2[5] + 2) & 0x20) != 0) {
        return 0;
      }
      break;
    case 0x2C:
      break;
    default:
      return v4;
  }
  if (a2)
  {
    if ((v5 & 0x141510) != 0) {
      return 1;
    }
    int v7 = 64;
  }
  else
  {
    if ((v5 & 0xA0A88) != 0) {
      return 1;
    }
    int v7 = 32;
  }
  return (v5 & v7) != 0;
}

double sub_6550B0()
{
  byte_25983C7 = 1;
  word_25983B0 = 65;
  byte_25983DF = 1;
  word_25983C8 = 65;
  char v4 = 7;
  strcpy((char *)v3, "UNKNOWN");
  int v5 = 0;
  char v7 = 14;
  strcpy((char *)v6, "ROUTES_THROUGH");
  int v8 = 1;
  char v10 = 9;
  strcpy((char *)__p, "ROUTES_TO");
  int v11 = 3;
  char v13 = 11;
  strcpy((char *)v12, "ROUTES_FROM");
  int v14 = 2;
  xmmword_2598470 = 0u;
  *(_OWORD *)&qword_2598480 = 0u;
  dword_2598490 = 1065353216;
  sub_3A6EF0((uint64_t)&xmmword_2598470, (uint64_t)v3, (uint64_t)v3);
  sub_3A6EF0((uint64_t)&xmmword_2598470, (uint64_t)v6, (uint64_t)v6);
  sub_3A6EF0((uint64_t)&xmmword_2598470, (uint64_t)__p, (uint64_t)__p);
  sub_3A6EF0((uint64_t)&xmmword_2598470, (uint64_t)v12, (uint64_t)v12);
  if (v13 < 0)
  {
    operator delete(v12[0]);
    if ((v10 & 0x80000000) == 0)
    {
LABEL_3:
      if ((v7 & 0x80000000) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      operator delete(v6[0]);
      if ((v4 & 0x80000000) == 0) {
        goto LABEL_5;
      }
LABEL_9:
      operator delete(v3[0]);
      goto LABEL_5;
    }
  }
  else if ((v10 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p[0]);
  if (v7 < 0) {
    goto LABEL_8;
  }
LABEL_4:
  if (v4 < 0) {
    goto LABEL_9;
  }
LABEL_5:
  byte_25983F7 = 8;
  strcpy((char *)&qword_25983E0, "any_mode");
  byte_259840F = 7;
  strcpy((char *)&dword_25983F8, "cycling");
  byte_2598427 = 7;
  strcpy((char *)&dword_2598410, "driving");
  byte_259843F = 7;
  strcpy((char *)&dword_2598428, "walking");
  qword_2598448 = 0;
  qword_2598450 = 0;
  qword_2598440 = 0;
  uint64_t v0 = operator new(9uLL);
  *(void *)uint64_t v0 = 0x4020C000103050DLL;
  v0[8] = 6;
  qword_2598440 = (uint64_t)v0;
  qword_2598448 = (uint64_t)(v0 + 9);
  qword_2598450 = (uint64_t)(v0 + 9);
  qword_2598458 = 0;
  qword_2598460 = 0;
  unk_2598468 = 0;
  uint64_t v1 = (char *)operator new(9uLL);
  qword_2598460 = (uint64_t)(v1 + 9);
  unk_2598468 = v1 + 9;
  double result = 1.10224369e-279;
  *(void *)uint64_t v1 = 0x604020C00010305;
  v1[8] = 13;
  qword_2598458 = (uint64_t)v1;
  return result;
}

void sub_655378(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  if (qword_2598480) {
    sub_20AA69C((void **)qword_2598480);
  }
  v37 = (void *)xmmword_2598470;
  *(void *)&xmmword_2598470 = 0;
  if (v37)
  {
    operator delete(v37);
    if ((a36 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a29 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_11;
    }
  }
  else if ((a36 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(__p);
  if ((a29 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a22 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_12;
  }
LABEL_11:
  operator delete(a24);
  if ((a22 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a15 & 0x80000000) == 0) {
LABEL_14:
    }
      _Unwind_Resume(exception_object);
LABEL_13:
    operator delete(a10);
    _Unwind_Resume(exception_object);
  }
LABEL_12:
  operator delete(a17);
  if ((a15 & 0x80000000) == 0) {
    goto LABEL_14;
  }
  goto LABEL_13;
}

uint64_t sub_655418(uint64_t a1, void *a2, uint64_t a3)
{
  sub_3E6160((uint64_t *)a1, a2, (long long *)a3);
  *(void *)(a1 + 40) = sub_3750CC(a2);
  BOOL v16 = operator new(0x28uLL);
  long long v17 = xmmword_20B9390;
  strcpy((char *)v16, "InfrastructureObservationBuilder");
  if (*(char *)(a3 + 23) < 0)
  {
    sub_4200(&__dst, *(void **)a3, *(void *)(a3 + 8));
  }
  else
  {
    long long __dst = *(_OWORD *)a3;
    uint64_t v21 = *(void *)(a3 + 16);
  }
  sub_28C774(&v14, (uint64_t)&__dst, 1uLL);
  int v6 = sub_374CDC((uint64_t)a2, (uint64_t)&v16, (uint64_t *)&v14);
  sub_3CB2F0(v6, (uint64_t)__p);
  sub_656214((BOOL *)(a1 + 48), __p);
  char v7 = v19;
  if (v19)
  {
    do
    {
      unsigned int v12 = *(char **)v7;
      sub_57AC8((uint64_t *)v7 + 5);
      if (v7[39] < 0) {
        operator delete(*((void **)v7 + 2));
      }
      operator delete(v7);
      char v7 = v12;
    }
    while (v12);
  }
  int v8 = __p[0];
  __p[0] = 0;
  if (v8) {
    operator delete(v8);
  }
  uint64_t v9 = (void **)v14;
  if (v14)
  {
    char v10 = v15;
    int v11 = v14;
    if (v15 != v14)
    {
      do
      {
        if (*((char *)v10 - 1) < 0) {
          operator delete(*(v10 - 3));
        }
        v10 -= 3;
      }
      while (v10 != v9);
      int v11 = v14;
    }
    unsigned int v15 = v9;
    operator delete(v11);
  }
  if (SHIBYTE(v21) < 0)
  {
    operator delete((void *)__dst);
    if ((SHIBYTE(v17) & 0x80000000) == 0) {
      return a1;
    }
LABEL_22:
    operator delete(v16);
    return a1;
  }
  if (SHIBYTE(v17) < 0) {
    goto LABEL_22;
  }
  return a1;
}

void sub_6555EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if ((a18 & 0x80000000) == 0) {
    _Unwind_Resume(exception_object);
  }
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_65565C(uint64_t a1, uint64_t a2)
{
  double result = (uint64_t *)nullsub_1(a2);
  uint64_t v4 = *result;
  uint64_t v5 = result[1];
  if (*result != v5)
  {
    do
    {
      double result = (uint64_t *)sub_6556B4(a1, v4);
      v4 += 12328;
    }
    while (v4 != v5);
  }
  return result;
}

unint64_t sub_6556B4(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a2 + 12176);
  unint64_t result = sub_46C760((void *)a2);
  if (result)
  {
    unint64_t v6 = result;
    uint64_t v7 = 0;
    int v8 = 1;
    do
    {
      char v10 = (char **)sub_46C8EC((void *)a2, v7);
      BOOL v11 = sub_3E6E08(a1, v10);
      if (!v7 || !v11)
      {
        int v42 = 0;
        goto LABEL_28;
      }
      unsigned int v12 = &(*v10)[-*(int *)*v10];
      unsigned int v13 = *(unsigned __int16 *)v12;
      if (*((unsigned char *)v10 + 38))
      {
        if (v13 >= 0x47)
        {
          int v14 = *((unsigned __int16 *)v12 + 35);
          if (v14)
          {
            int v15 = 2;
LABEL_15:
            BOOL v16 = (*(_DWORD *)&(*v10)[v14] & v15) != 0;
            goto LABEL_17;
          }
        }
      }
      else if (v13 >= 0x47)
      {
        int v14 = *((unsigned __int16 *)v12 + 35);
        if (v14)
        {
          int v15 = 1;
          goto LABEL_15;
        }
      }
      BOOL v16 = 0;
LABEL_17:
      long long v17 = (int **)sub_46C8EC((void *)a2, v7 - 1);
      std::string v18 = (char *)*v17;
      uint64_t v19 = (unsigned __int16 *)((char *)*v17 - **v17);
      unsigned int v20 = *v19;
      if (*((unsigned char *)v17 + 38))
      {
        if (v20 >= 0x47)
        {
          unsigned int v21 = v19[35];
          if (v21)
          {
            BOOL v22 = (*(_DWORD *)&v18[v21] & 2) != 0;
            int v42 = 0;
            if (((v16 ^ v22) & 1) == 0) {
              goto LABEL_21;
            }
            goto LABEL_28;
          }
        }
      }
      else if (v20 >= 0x47)
      {
        unsigned int v25 = v19[35];
        if (v25)
        {
          BOOL v26 = (*(_DWORD *)&v18[v25] & 1) != 0;
          int v42 = 0;
          if (((v16 ^ v26) & 1) == 0) {
            goto LABEL_21;
          }
          goto LABEL_28;
        }
      }
      int v42 = 0;
      if (!v16)
      {
LABEL_21:
        int v42 = v8;
        unsigned int v23 = *v10;
        int v24 = &(*v10)[-*(int *)*v10];
        if (*(unsigned __int16 *)v24 < 0xBu) {
          goto LABEL_50;
        }
        goto LABEL_45;
      }
LABEL_28:
      char v27 = sub_655A2C(a1, (uint64_t)v10, v4 != 0);
      v42 |= 1 << v27;
      sub_657AC4(*(void *)(a1 + 40), (uint64_t)v10, (uint64_t)v40);
      if (!*(unsigned char *)(a1 + 48) || !v41 || !v40[0] || !v40[1])
      {
LABEL_42:
        unsigned int v23 = *v10;
        int v24 = &(*v10)[-*(int *)*v10];
        if (*(unsigned __int16 *)v24 < 0xBu) {
          goto LABEL_50;
        }
        goto LABEL_45;
      }
      uint64_t v28 = *v10;
      int v29 = &(*v10)[-*(int *)*v10];
      unsigned int v30 = *(unsigned __int16 *)v29;
      if (*((unsigned char *)v10 + 38))
      {
        if (v30 >= 0x47)
        {
          uint64_t v31 = *((unsigned __int16 *)v29 + 35);
          if (v31)
          {
            int v32 = *(_DWORD *)&v28[v31];
            if ((v32 & 0x141510) != 0 || (v32 & 0x40) != 0) {
              goto LABEL_42;
            }
          }
        }
      }
      else if (v30 >= 0x47)
      {
        uint64_t v33 = *((unsigned __int16 *)v29 + 35);
        if (v33)
        {
          int v34 = *(_DWORD *)&v28[v33];
          if ((v34 & 0xA0A88) != 0 || (v34 & 0x20) != 0) {
            goto LABEL_42;
          }
        }
      }
      char v35 = sub_655A2C(a1, (uint64_t)v40, v4 != 0);
      v42 |= 1 << v35;
      unsigned int v23 = *v10;
      int v24 = &(*v10)[-*(int *)*v10];
      if (*(unsigned __int16 *)v24 < 0xBu) {
        goto LABEL_50;
      }
LABEL_45:
      uint64_t v36 = *((unsigned __int16 *)v24 + 5);
      if (v36 && (v23[v36] & 3) != 0 && ((v42 & 4) != 0 || sub_3E6428(a1, (int **)v10)))
      {
        uint64_t v37 = sub_46CCC8((void *)a2, v7, v9);
        goto LABEL_51;
      }
LABEL_50:
      uint64_t v37 = 0;
LABEL_51:
      *(void *)(a2 + 12048) += v37;
      uint64_t v38 = *(void *)(a2 + 11672);
      if (*(void *)(a2 + 11664) == v38 || *(_DWORD *)(v38 - 24) != v42)
      {
        uint64_t v39 = 0;
        v40[0] = v7;
        sub_657CE8((char **)(a2 + 11664), &v42, v40, &v39);
      }
      unint64_t result = sub_46CCC8((void *)a2, v7, v9);
      *(void *)(*(void *)(a2 + 11672) - 8) += result;
      int v8 = v42;
      ++v7;
    }
    while (v6 != v7);
  }
  return result;
}

uint64_t sub_655A2C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = (int *)sub_2D5D58(v5, v6 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v5 + 7772))
  {
    int v8 = sub_2DB8E0(v5 + 3896, v6, 0);
    double v9 = &v8[-*(int *)v8];
    if (*(unsigned __int16 *)v9 < 5u)
    {
      uint64_t v10 = 0;
    }
    else
    {
      uint64_t v10 = *((unsigned __int16 *)v9 + 2);
      if (v10) {
        v10 += (uint64_t)&v8[*(unsigned int *)&v8[v10]];
      }
    }
    BOOL v11 = (int *)(v10 + 4 * WORD2(v6) + 4 + *(unsigned int *)(v10 + 4 * WORD2(v6) + 4));
  }
  else
  {
    BOOL v11 = 0;
  }
  v14[0] = v7;
  v14[1] = v11;
  v14[2] = (int *)sub_2E5C38(v5, v6 & 0xFFFFFFFFFFFFLL, 1);
  v14[3] = v12;
  int v15 = v6;
  __int16 v16 = WORD2(v6);
  BOOL v17 = (v6 & 0xFF000000000000) != 0;
  if (*(unsigned char *)(a1 + 49)) {
    return sub_655B4C(a1, v14);
  }
  else {
    return sub_655D10(a1, v14, a3);
  }
}

uint64_t sub_655B4C(uint64_t a1, int **a2)
{
  uint64_t v2 = *a2;
  unsigned int v3 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v4 = *v3;
  if (*((unsigned char *)a2 + 38))
  {
    if (v4 < 0x47 || !v3[35]) {
      return sub_655FA4(a1, a2);
    }
    if ((*(int *)((char *)v2 + v3[35]) & 0x40010) != 0) {
      return 7;
    }
    int v6 = *(int *)((char *)v2 + v3[35]);
    if ((v6 & 2) == 0) {
      return sub_655FA4(a1, a2);
    }
  }
  else
  {
    if (v4 < 0x47 || !v3[35]) {
      return sub_655FA4(a1, a2);
    }
    if ((*(int *)((char *)v2 + v3[35]) & 0x20008) != 0) {
      return 7;
    }
    int v6 = *(int *)((char *)v2 + v3[35]);
    if ((v6 & 1) == 0) {
      return sub_655FA4(a1, a2);
    }
  }
  if (v3[23])
  {
    switch(*((unsigned char *)v2 + v3[23]))
    {
      case 6:
      case 0xC:
      case 0x2B:
        if (v3[5] && (*((unsigned char *)v2 + v3[5] + 2) & 0x20) != 0) {
          break;
        }
        return 16;
      case 0x2C:
        return 16;
      default:
        break;
    }
  }
  if (*((unsigned char *)a2 + 38))
  {
    if ((v6 & 0x141510) == 0)
    {
      int v7 = 64;
      goto LABEL_22;
    }
    return 16;
  }
  if ((v6 & 0xA0A88) != 0) {
    return 16;
  }
  int v7 = 32;
LABEL_22:
  if ((v7 & v6) != 0) {
    return 16;
  }
  return sub_655FA4(a1, a2);
}

uint64_t sub_655D10(uint64_t a1, int **a2, int a3)
{
  int v6 = *a2;
  int v7 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v8 = *v7;
  if (*((unsigned char *)a2 + 38))
  {
    if (v8 < 0x47) {
      goto LABEL_16;
    }
    if (!v7[35]) {
      goto LABEL_16;
    }
    int v9 = *(int *)((char *)v6 + v7[35]);
    if ((v9 & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    if (v8 < 0x47) {
      goto LABEL_16;
    }
    if (!v7[35]) {
      goto LABEL_16;
    }
    int v9 = *(int *)((char *)v6 + v7[35]);
    if ((v9 & 1) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v10 = v7[23];
  if (v10 && *((unsigned char *)v6 + v10) == 44)
  {
    int v11 = *((unsigned char *)a2 + 38) ? 256 : 128;
    if ((v9 & v11) != 0) {
      return 3;
    }
  }
LABEL_16:
  if (sub_654D70(v6, *((unsigned char *)a2 + 38) != 0)) {
    return 15;
  }
  if (sub_654F1C(*a2, *((unsigned __int8 *)a2 + 38)))
  {
    if (a3)
    {
      unsigned int v13 = *a2;
      int v14 = (unsigned __int16 *)((char *)*a2 - **a2);
      unsigned int v15 = *v14;
      if (v15 >= 0xB)
      {
        if (v14[5])
        {
          if (v15 < 0x2F || (*(int *)((char *)v13 + v14[5]) & 0x200000) != 0) {
            return 4;
          }
LABEL_42:
          uint64_t v23 = v14[23];
          if (v23)
          {
            unsigned int v24 = *((unsigned __int8 *)v13 + v23);
            BOOL v25 = v24 > 0x2B;
            uint64_t v26 = (1 << v24) & 0x80000001040;
            if (!v25 && v26 != 0) {
              return 10;
            }
          }
          return 4;
        }
        if (v15 >= 0x2F) {
          goto LABEL_42;
        }
      }
    }
    return 4;
  }
  BOOL v17 = *a2;
  std::string v18 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v19 = *v18;
  if (*((unsigned char *)a2 + 38))
  {
    if (v19 < 0x47) {
      goto LABEL_54;
    }
    uint64_t v20 = v18[35];
    if (!v20) {
      goto LABEL_54;
    }
    int v21 = *(int *)((char *)v17 + v20);
    if ((v21 & 0x1000) == 0)
    {
      if ((v21 & 0x100) == 0)
      {
        if ((v21 & 0x40010) != 0) {
          return 7;
        }
        int v28 = 0x100000;
        goto LABEL_52;
      }
      return 6;
    }
    return 5;
  }
  if (v19 < 0x47) {
    goto LABEL_54;
  }
  uint64_t v20 = v18[35];
  if (!v20) {
    goto LABEL_54;
  }
  int v22 = *(int *)((char *)v17 + v20);
  if ((v22 & 0x800) != 0) {
    return 5;
  }
  if ((v22 & 0x80) != 0) {
    return 6;
  }
  if ((v22 & 0x20008) != 0) {
    return 7;
  }
  int v28 = 0x80000;
LABEL_52:
  if ((*(int *)((char *)v17 + v20) & v28) != 0) {
    return 16;
  }
LABEL_54:

  return sub_655FA4(a1, a2);
}

uint64_t sub_655FA4(uint64_t a1, int **a2)
{
  if (sub_3E6164(a1, a2)) {
    return 2;
  }
  if (sub_3E7284(a1, a2)) {
    return 1;
  }
  int v6 = *a2;
  int v7 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v8 = *v7;
  if (v8 >= 0xB)
  {
    if (v7[5] && (*((unsigned char *)v6 + v7[5]) & 8) != 0) {
      return 14;
    }
    if (v8 >= 0x2F && v7[23] && *((unsigned char *)v6 + v7[23]) == 9) {
      return 13;
    }
  }
  if (!*((unsigned char *)a2 + 38))
  {
    if (v8 < 0x47)
    {
      if (v8 <= 0x38) {
        goto LABEL_33;
      }
    }
    else if (v7[35] && (*((unsigned char *)v6 + v7[35]) & 1) != 0)
    {
      goto LABEL_34;
    }
    if (!v7[28]) {
      goto LABEL_34;
    }
    int v9 = *(int *)((char *)v6 + v7[28]);
    if ((v9 & 1) == 0)
    {
LABEL_25:
      unsigned __int8 v4 = 8;
      if ((v9 & 7) == 4 || (v9 & 0x23) == 0x20) {
        return v4;
      }
      goto LABEL_34;
    }
    return 8;
  }
  if (v8 >= 0x47)
  {
    if (v7[35] && (*((unsigned char *)v6 + v7[35]) & 2) != 0) {
      goto LABEL_34;
    }
LABEL_23:
    if (!v7[28]) {
      goto LABEL_34;
    }
    int v9 = *(int *)((char *)v6 + v7[28]);
    if ((v9 & 2) == 0) {
      goto LABEL_25;
    }
    return 8;
  }
  if (v8 > 0x38) {
    goto LABEL_23;
  }
LABEL_33:
  if (v8 < 0xB) {
    return 10;
  }
LABEL_34:
  if (!v7[5] || (*((unsigned char *)v6 + v7[5] + 2) & 0x20) == 0) {
    return 10;
  }
  if (!*((unsigned char *)a2 + 38))
  {
    if (v8 >= 0x47)
    {
      unsigned int v10 = v7[35];
      if (v10)
      {
        int v11 = 1;
        goto LABEL_44;
      }
    }
    return 11;
  }
  if (v8 < 0x47) {
    return 11;
  }
  unsigned int v10 = v7[35];
  if (!v10) {
    return 11;
  }
  int v11 = 2;
LABEL_44:
  unsigned __int8 v4 = 11;
  if ((*(int *)((char *)v6 + v10) & v11) == 0) {
    return v4;
  }
  if (sub_6561B0(a2)) {
    return 12;
  }
  else {
    return 11;
  }
}

BOOL sub_6561B0(int **a1)
{
  uint64_t v1 = (char *)*a1;
  uint64_t v2 = (unsigned __int16 *)((char *)*a1 - **a1);
  unsigned int v3 = *v2;
  if (*((unsigned char *)a1 + 38))
  {
    if (v3 >= 0xB)
    {
      unsigned int v4 = v2[5];
      if (v4) {
        return (*(_DWORD *)&v1[v4] & 2) != 0;
      }
    }
  }
  else if (v3 >= 0xB)
  {
    unsigned int v6 = v2[5];
    if (v6) {
      return (*(_DWORD *)&v1[v6] & 1) != 0;
    }
  }
  return 0;
}

BOOL *sub_656214(BOOL *a1, void *a2)
{
  HIBYTE(__p[2]) = 19;
  strcpy((char *)__p, "add_multiple_labels");
  BOOL v4 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *a1 = v4;
  __p[0] = operator new(0x28uLL);
  *(_OWORD *)&__p[1] = xmmword_20B93A0;
  strcpy((char *)__p[0], "use_simplified_infrastructure_types");
  BOOL v5 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  a1[1] = v5;
  return a1;
}

void sub_6562F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_656314(uint64_t a1, void *a2, uint64_t a3)
{
  sub_3E6738((uint64_t *)a1, a2, (long long *)a3);
  *(void *)(a1 + 40) = sub_3750CC(a2);
  __int16 v16 = operator new(0x28uLL);
  long long v17 = xmmword_20B9390;
  strcpy((char *)v16, "InfrastructureObservationBuilder");
  if (*(char *)(a3 + 23) < 0)
  {
    sub_4200(&__dst, *(void **)a3, *(void *)(a3 + 8));
  }
  else
  {
    long long __dst = *(_OWORD *)a3;
    uint64_t v21 = *(void *)(a3 + 16);
  }
  sub_28C774(&v14, (uint64_t)&__dst, 1uLL);
  unsigned int v6 = sub_374CDC((uint64_t)a2, (uint64_t)&v16, (uint64_t *)&v14);
  sub_3CB560(v6, (uint64_t)__p);
  sub_656CDC((BOOL *)(a1 + 48), __p);
  int v7 = v19;
  if (v19)
  {
    do
    {
      unsigned int v12 = *(char **)v7;
      sub_57AC8((uint64_t *)v7 + 5);
      if (v7[39] < 0) {
        operator delete(*((void **)v7 + 2));
      }
      operator delete(v7);
      int v7 = v12;
    }
    while (v12);
  }
  unsigned int v8 = __p[0];
  __p[0] = 0;
  if (v8) {
    operator delete(v8);
  }
  int v9 = (void **)v14;
  if (v14)
  {
    unsigned int v10 = v15;
    int v11 = v14;
    if (v15 != v14)
    {
      do
      {
        if (*((char *)v10 - 1) < 0) {
          operator delete(*(v10 - 3));
        }
        v10 -= 3;
      }
      while (v10 != v9);
      int v11 = v14;
    }
    unsigned int v15 = v9;
    operator delete(v11);
  }
  if (SHIBYTE(v21) < 0)
  {
    operator delete((void *)__dst);
    if ((SHIBYTE(v17) & 0x80000000) == 0) {
      return a1;
    }
LABEL_22:
    operator delete(v16);
    return a1;
  }
  if (SHIBYTE(v17) < 0) {
    goto LABEL_22;
  }
  return a1;
}

void sub_6564E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if ((a18 & 0x80000000) == 0) {
    _Unwind_Resume(exception_object);
  }
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_656558(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a2 + 32);
  int v7 = (int *)sub_2D5D58(v5, v6 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v5 + 7772))
  {
    unsigned int v8 = sub_2DB8E0(v5 + 3896, v6, 0);
    int v9 = &v8[-*(int *)v8];
    if (*(unsigned __int16 *)v9 < 5u)
    {
      uint64_t v10 = 0;
    }
    else
    {
      uint64_t v10 = *((unsigned __int16 *)v9 + 2);
      if (v10) {
        v10 += (uint64_t)&v8[*(unsigned int *)&v8[v10]];
      }
    }
    int v11 = (int *)(v10 + 4 * WORD2(v6) + 4 + *(unsigned int *)(v10 + 4 * WORD2(v6) + 4));
  }
  else
  {
    int v11 = 0;
  }
  v14[0] = v7;
  v14[1] = v11;
  v14[2] = (int *)sub_2E5C38(v5, v6 & 0xFFFFFFFFFFFFLL, 1);
  v14[3] = v12;
  int v15 = v6;
  __int16 v16 = WORD2(v6);
  BOOL v17 = (v6 & 0xFF000000000000) != 0;
  if (*(unsigned char *)(a1 + 49)) {
    return sub_656678(a1, v14);
  }
  else {
    return sub_65683C(a1, v14, a3);
  }
}

uint64_t sub_656678(uint64_t a1, int **a2)
{
  uint64_t v2 = *a2;
  unsigned int v3 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v4 = *v3;
  if (*((unsigned char *)a2 + 38))
  {
    if (v4 < 0x47 || !v3[35]) {
      return sub_656AD0(a1, a2);
    }
    if ((*(int *)((char *)v2 + v3[35]) & 0x40010) != 0) {
      return 7;
    }
    int v6 = *(int *)((char *)v2 + v3[35]);
    if ((v6 & 2) == 0) {
      return sub_656AD0(a1, a2);
    }
  }
  else
  {
    if (v4 < 0x47 || !v3[35]) {
      return sub_656AD0(a1, a2);
    }
    if ((*(int *)((char *)v2 + v3[35]) & 0x20008) != 0) {
      return 7;
    }
    int v6 = *(int *)((char *)v2 + v3[35]);
    if ((v6 & 1) == 0) {
      return sub_656AD0(a1, a2);
    }
  }
  if (v3[23])
  {
    switch(*((unsigned char *)v2 + v3[23]))
    {
      case 6:
      case 0xC:
      case 0x2B:
        if (v3[5] && (*((unsigned char *)v2 + v3[5] + 2) & 0x20) != 0) {
          break;
        }
        return 16;
      case 0x2C:
        return 16;
      default:
        break;
    }
  }
  if (*((unsigned char *)a2 + 38))
  {
    if ((v6 & 0x141510) == 0)
    {
      int v7 = 64;
      goto LABEL_22;
    }
    return 16;
  }
  if ((v6 & 0xA0A88) != 0) {
    return 16;
  }
  int v7 = 32;
LABEL_22:
  if ((v7 & v6) != 0) {
    return 16;
  }
  return sub_656AD0(a1, a2);
}

uint64_t sub_65683C(uint64_t a1, int **a2, int a3)
{
  int v6 = *a2;
  int v7 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v8 = *v7;
  if (*((unsigned char *)a2 + 38))
  {
    if (v8 < 0x47) {
      goto LABEL_16;
    }
    if (!v7[35]) {
      goto LABEL_16;
    }
    int v9 = *(int *)((char *)v6 + v7[35]);
    if ((v9 & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    if (v8 < 0x47) {
      goto LABEL_16;
    }
    if (!v7[35]) {
      goto LABEL_16;
    }
    int v9 = *(int *)((char *)v6 + v7[35]);
    if ((v9 & 1) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v10 = v7[23];
  if (v10 && *((unsigned char *)v6 + v10) == 44)
  {
    int v11 = *((unsigned char *)a2 + 38) ? 256 : 128;
    if ((v9 & v11) != 0) {
      return 3;
    }
  }
LABEL_16:
  if (sub_654D70(v6, *((unsigned char *)a2 + 38) != 0)) {
    return 15;
  }
  if (sub_654F1C(*a2, *((unsigned __int8 *)a2 + 38)))
  {
    if (a3)
    {
      unsigned int v13 = *a2;
      int v14 = (unsigned __int16 *)((char *)*a2 - **a2);
      unsigned int v15 = *v14;
      if (v15 >= 0xB)
      {
        if (v14[5])
        {
          if (v15 < 0x2F || (*(int *)((char *)v13 + v14[5]) & 0x200000) != 0) {
            return 4;
          }
LABEL_42:
          uint64_t v23 = v14[23];
          if (v23)
          {
            unsigned int v24 = *((unsigned __int8 *)v13 + v23);
            BOOL v25 = v24 > 0x2B;
            uint64_t v26 = (1 << v24) & 0x80000001040;
            if (!v25 && v26 != 0) {
              return 10;
            }
          }
          return 4;
        }
        if (v15 >= 0x2F) {
          goto LABEL_42;
        }
      }
    }
    return 4;
  }
  BOOL v17 = *a2;
  std::string v18 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v19 = *v18;
  if (*((unsigned char *)a2 + 38))
  {
    if (v19 < 0x47) {
      goto LABEL_54;
    }
    uint64_t v20 = v18[35];
    if (!v20) {
      goto LABEL_54;
    }
    int v21 = *(int *)((char *)v17 + v20);
    if ((v21 & 0x1000) == 0)
    {
      if ((v21 & 0x100) == 0)
      {
        if ((v21 & 0x40010) != 0) {
          return 7;
        }
        int v28 = 0x100000;
        goto LABEL_52;
      }
      return 6;
    }
    return 5;
  }
  if (v19 < 0x47) {
    goto LABEL_54;
  }
  uint64_t v20 = v18[35];
  if (!v20) {
    goto LABEL_54;
  }
  int v22 = *(int *)((char *)v17 + v20);
  if ((v22 & 0x800) != 0) {
    return 5;
  }
  if ((v22 & 0x80) != 0) {
    return 6;
  }
  if ((v22 & 0x20008) != 0) {
    return 7;
  }
  int v28 = 0x80000;
LABEL_52:
  if ((*(int *)((char *)v17 + v20) & v28) != 0) {
    return 16;
  }
LABEL_54:

  return sub_656AD0(a1, a2);
}

uint64_t sub_656AD0(uint64_t a1, int **a2)
{
  if (sub_3E673C(a1, a2)) {
    return 2;
  }
  if (sub_35E640()) {
    return 1;
  }
  uint64_t v5 = *a2;
  int v6 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v7 = *v6;
  if (v7 >= 0xB)
  {
    if (v6[5] && (*((unsigned char *)v5 + v6[5]) & 8) != 0) {
      return 14;
    }
    if (v7 >= 0x2F && v6[23] && *((unsigned char *)v5 + v6[23]) == 9) {
      return 13;
    }
  }
  if (!*((unsigned char *)a2 + 38))
  {
    if (v7 < 0x47)
    {
      if (v7 <= 0x38) {
        goto LABEL_33;
      }
    }
    else if (v6[35] && (*((unsigned char *)v5 + v6[35]) & 1) != 0)
    {
      goto LABEL_34;
    }
    if (!v6[28]) {
      goto LABEL_34;
    }
    int v8 = *(int *)((char *)v5 + v6[28]);
    if ((v8 & 1) == 0)
    {
LABEL_25:
      unsigned __int8 v3 = 8;
      if ((v8 & 7) == 4 || (v8 & 0x23) == 0x20) {
        return v3;
      }
      goto LABEL_34;
    }
    return 8;
  }
  if (v7 >= 0x47)
  {
    if (v6[35] && (*((unsigned char *)v5 + v6[35]) & 2) != 0) {
      goto LABEL_34;
    }
LABEL_23:
    if (!v6[28]) {
      goto LABEL_34;
    }
    int v8 = *(int *)((char *)v5 + v6[28]);
    if ((v8 & 2) == 0) {
      goto LABEL_25;
    }
    return 8;
  }
  if (v7 > 0x38) {
    goto LABEL_23;
  }
LABEL_33:
  if (v7 < 0xB) {
    return 10;
  }
LABEL_34:
  if (!v6[5] || (*((unsigned char *)v5 + v6[5] + 2) & 0x20) == 0) {
    return 10;
  }
  if (!*((unsigned char *)a2 + 38))
  {
    if (v7 >= 0x47)
    {
      unsigned int v9 = v6[35];
      if (v9)
      {
        int v10 = 1;
        goto LABEL_44;
      }
    }
    return 11;
  }
  if (v7 < 0x47) {
    return 11;
  }
  unsigned int v9 = v6[35];
  if (!v9) {
    return 11;
  }
  int v10 = 2;
LABEL_44:
  unsigned __int8 v3 = 11;
  if ((*(int *)((char *)v5 + v9) & v10) == 0) {
    return v3;
  }
  if (sub_6561B0(a2)) {
    return 12;
  }
  else {
    return 11;
  }
}

BOOL *sub_656CDC(BOOL *a1, void *a2)
{
  HIBYTE(__p[2]) = 19;
  strcpy((char *)__p, "add_multiple_labels");
  BOOL v4 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *a1 = v4;
  __p[0] = operator new(0x28uLL);
  *(_OWORD *)&__p[1] = xmmword_20B93A0;
  strcpy((char *)__p[0], "use_simplified_infrastructure_types");
  BOOL v5 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  a1[1] = v5;
  return a1;
}

void sub_656DBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_656DDC(uint64_t a1, void *a2, uint64_t a3)
{
  sub_3E69D4((uint64_t *)a1, a2, (long long *)a3);
  *(void *)(a1 + 40) = sub_3750CC(a2);
  __int16 v16 = operator new(0x28uLL);
  long long v17 = xmmword_20B9390;
  strcpy((char *)v16, "InfrastructureObservationBuilder");
  if (*(char *)(a3 + 23) < 0)
  {
    sub_4200(&__dst, *(void **)a3, *(void *)(a3 + 8));
  }
  else
  {
    long long __dst = *(_OWORD *)a3;
    uint64_t v21 = *(void *)(a3 + 16);
  }
  sub_28C774(&v14, (uint64_t)&__dst, 1uLL);
  int v6 = sub_374CDC((uint64_t)a2, (uint64_t)&v16, (uint64_t *)&v14);
  sub_3CB5E0(v6, (uint64_t)__p);
  sub_6579C4((BOOL *)(a1 + 48), __p);
  unsigned int v7 = v19;
  if (v19)
  {
    do
    {
      unsigned int v12 = *(char **)v7;
      sub_57AC8((uint64_t *)v7 + 5);
      if (v7[39] < 0) {
        operator delete(*((void **)v7 + 2));
      }
      operator delete(v7);
      unsigned int v7 = v12;
    }
    while (v12);
  }
  int v8 = __p[0];
  __p[0] = 0;
  if (v8) {
    operator delete(v8);
  }
  unsigned int v9 = (void **)v14;
  if (v14)
  {
    int v10 = v15;
    int v11 = v14;
    if (v15 != v14)
    {
      do
      {
        if (*((char *)v10 - 1) < 0) {
          operator delete(*(v10 - 3));
        }
        v10 -= 3;
      }
      while (v10 != v9);
      int v11 = v14;
    }
    unsigned int v15 = v9;
    operator delete(v11);
  }
  if (SHIBYTE(v21) < 0)
  {
    operator delete((void *)__dst);
    if ((SHIBYTE(v17) & 0x80000000) == 0) {
      return a1;
    }
LABEL_22:
    operator delete(v16);
    return a1;
  }
  if (SHIBYTE(v17) < 0) {
    goto LABEL_22;
  }
  return a1;
}

void sub_656FB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if ((a18 & 0x80000000) == 0) {
    _Unwind_Resume(exception_object);
  }
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

unint64_t sub_657020(uint64_t a1, uint64_t a2)
{
  unint64_t result = nullsub_1(a2);
  BOOL v4 = *(void **)result;
  BOOL v5 = *(void **)(result + 8);
  if (*(void **)result != v5)
  {
    do
    {
      unint64_t result = sub_657078(a1, v4);
      v4 += 1541;
    }
    while (v4 != v5);
  }
  return result;
}

unint64_t sub_657078(uint64_t a1, void *a2)
{
  unint64_t result = sub_470ADC(a2);
  unint64_t v23 = result;
  if (result)
  {
    unint64_t v4 = 0;
    do
    {
      BOOL v5 = (unsigned int *)sub_470B40(a2, v4);
      uint64_t v6 = *(void *)(a1 + 40);
      uint64_t v7 = *v5;
      unint64_t v8 = ((unint64_t)(v5[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v5[1] << 32) | v7;
      char v9 = BYTE6(v8) ^ 1;
      unint64_t v10 = (v8 ^ 0x1000000000000) >> 32;
      unint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
      unsigned int v12 = (int *)sub_2D5D58(v6, v8 & 0xFFFFFFFFFFFFLL);
      if (*(unsigned char *)(v6 + 7772))
      {
        unsigned int v13 = sub_2DB8E0(v6 + 3896, v7, 0);
        int v14 = &v13[-*(int *)v13];
        if (*(unsigned __int16 *)v14 < 5u)
        {
          uint64_t v15 = 0;
        }
        else
        {
          uint64_t v15 = *((unsigned __int16 *)v14 + 2);
          if (v15) {
            v15 += (uint64_t)&v13[*(unsigned int *)&v13[v15]];
          }
        }
        __int16 v16 = (int *)(v15 + 4 * (unsigned __int16)v10 + 4 + *(unsigned int *)(v15 + 4 * (unsigned __int16)v10 + 4));
      }
      else
      {
        __int16 v16 = 0;
      }
      long long v17 = (int *)sub_2E5C38(v6, v11, 1);
      v25[0] = v12;
      v25[1] = v16;
      v25[2] = v17;
      v25[3] = v18;
      int v26 = v7;
      __int16 v27 = v10;
      char v28 = v9;
      unsigned int v19 = (int *)*((void *)v5 + 1);
      uint64_t v20 = (unsigned __int16 *)((char *)v19 - *v19);
      if (*v20 >= 0xBu && (uint64_t v21 = v20[5]) != 0 && (*((unsigned char *)v19 + v21) & 3) != 0 && sub_3E6A48(a1, v25)) {
        unint64_t result = sub_470F2C(a2, v4, v22);
      }
      else {
        unint64_t result = 0;
      }
      a2[1506] += result;
      ++v4;
    }
    while (v23 != v4);
  }
  return result;
}

uint64_t sub_657224(uint64_t a1, unsigned int *a2, int a3)
{
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *a2;
  unint64_t v7 = ((unint64_t)(a2[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)a2[1] << 32) | v6;
  char v8 = BYTE6(v7) ^ 1;
  unint64_t v9 = (v7 ^ 0x1000000000000) >> 32;
  unint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  unint64_t v11 = (int *)sub_2D5D58(v5, v7 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v5 + 7772))
  {
    unsigned int v12 = sub_2DB8E0(v5 + 3896, v6, 0);
    unsigned int v13 = &v12[-*(int *)v12];
    if (*(unsigned __int16 *)v13 < 5u)
    {
      uint64_t v14 = 0;
    }
    else
    {
      uint64_t v14 = *((unsigned __int16 *)v13 + 2);
      if (v14) {
        v14 += (uint64_t)&v12[*(unsigned int *)&v12[v14]];
      }
    }
    uint64_t v15 = (int *)(v14 + 4 * (unsigned __int16)v9 + 4 + *(unsigned int *)(v14 + 4 * (unsigned __int16)v9 + 4));
  }
  else
  {
    uint64_t v15 = 0;
  }
  v18[0] = v11;
  v18[1] = v15;
  v18[2] = (int *)sub_2E5C38(v5, v10, 1);
  v18[3] = v16;
  int v19 = v6;
  __int16 v20 = v9;
  char v21 = v8;
  if (*(unsigned char *)(a1 + 49)) {
    return sub_657360(a1, v18);
  }
  else {
    return sub_657524(a1, v18, a3);
  }
}

uint64_t sub_657360(uint64_t a1, int **a2)
{
  uint64_t v2 = *a2;
  unsigned __int8 v3 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v4 = *v3;
  if (*((unsigned char *)a2 + 38))
  {
    if (v4 < 0x47 || !v3[35]) {
      return sub_6577B8(a1, a2);
    }
    if ((*(int *)((char *)v2 + v3[35]) & 0x40010) != 0) {
      return 7;
    }
    int v6 = *(int *)((char *)v2 + v3[35]);
    if ((v6 & 2) == 0) {
      return sub_6577B8(a1, a2);
    }
  }
  else
  {
    if (v4 < 0x47 || !v3[35]) {
      return sub_6577B8(a1, a2);
    }
    if ((*(int *)((char *)v2 + v3[35]) & 0x20008) != 0) {
      return 7;
    }
    int v6 = *(int *)((char *)v2 + v3[35]);
    if ((v6 & 1) == 0) {
      return sub_6577B8(a1, a2);
    }
  }
  if (v3[23])
  {
    switch(*((unsigned char *)v2 + v3[23]))
    {
      case 6:
      case 0xC:
      case 0x2B:
        if (v3[5] && (*((unsigned char *)v2 + v3[5] + 2) & 0x20) != 0) {
          break;
        }
        return 16;
      case 0x2C:
        return 16;
      default:
        break;
    }
  }
  if (*((unsigned char *)a2 + 38))
  {
    if ((v6 & 0x141510) == 0)
    {
      int v7 = 64;
      goto LABEL_22;
    }
    return 16;
  }
  if ((v6 & 0xA0A88) != 0) {
    return 16;
  }
  int v7 = 32;
LABEL_22:
  if ((v7 & v6) != 0) {
    return 16;
  }
  return sub_6577B8(a1, a2);
}

uint64_t sub_657524(uint64_t a1, int **a2, int a3)
{
  int v6 = *a2;
  int v7 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v8 = *v7;
  if (*((unsigned char *)a2 + 38))
  {
    if (v8 < 0x47) {
      goto LABEL_16;
    }
    if (!v7[35]) {
      goto LABEL_16;
    }
    int v9 = *(int *)((char *)v6 + v7[35]);
    if ((v9 & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    if (v8 < 0x47) {
      goto LABEL_16;
    }
    if (!v7[35]) {
      goto LABEL_16;
    }
    int v9 = *(int *)((char *)v6 + v7[35]);
    if ((v9 & 1) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v10 = v7[23];
  if (v10 && *((unsigned char *)v6 + v10) == 44)
  {
    int v11 = *((unsigned char *)a2 + 38) ? 256 : 128;
    if ((v9 & v11) != 0) {
      return 3;
    }
  }
LABEL_16:
  if (sub_654D70(v6, *((unsigned char *)a2 + 38) != 0)) {
    return 15;
  }
  if (sub_654F1C(*a2, *((unsigned __int8 *)a2 + 38)))
  {
    if (a3)
    {
      unsigned int v13 = *a2;
      uint64_t v14 = (unsigned __int16 *)((char *)*a2 - **a2);
      unsigned int v15 = *v14;
      if (v15 >= 0xB)
      {
        if (v14[5])
        {
          if (v15 < 0x2F || (*(int *)((char *)v13 + v14[5]) & 0x200000) != 0) {
            return 4;
          }
LABEL_42:
          uint64_t v23 = v14[23];
          if (v23)
          {
            unsigned int v24 = *((unsigned __int8 *)v13 + v23);
            BOOL v25 = v24 > 0x2B;
            uint64_t v26 = (1 << v24) & 0x80000001040;
            if (!v25 && v26 != 0) {
              return 10;
            }
          }
          return 4;
        }
        if (v15 >= 0x2F) {
          goto LABEL_42;
        }
      }
    }
    return 4;
  }
  long long v17 = *a2;
  std::string v18 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v19 = *v18;
  if (*((unsigned char *)a2 + 38))
  {
    if (v19 < 0x47) {
      goto LABEL_54;
    }
    uint64_t v20 = v18[35];
    if (!v20) {
      goto LABEL_54;
    }
    int v21 = *(int *)((char *)v17 + v20);
    if ((v21 & 0x1000) == 0)
    {
      if ((v21 & 0x100) == 0)
      {
        if ((v21 & 0x40010) != 0) {
          return 7;
        }
        int v28 = 0x100000;
        goto LABEL_52;
      }
      return 6;
    }
    return 5;
  }
  if (v19 < 0x47) {
    goto LABEL_54;
  }
  uint64_t v20 = v18[35];
  if (!v20) {
    goto LABEL_54;
  }
  int v22 = *(int *)((char *)v17 + v20);
  if ((v22 & 0x800) != 0) {
    return 5;
  }
  if ((v22 & 0x80) != 0) {
    return 6;
  }
  if ((v22 & 0x20008) != 0) {
    return 7;
  }
  int v28 = 0x80000;
LABEL_52:
  if ((*(int *)((char *)v17 + v20) & v28) != 0) {
    return 16;
  }
LABEL_54:

  return sub_6577B8(a1, a2);
}

uint64_t sub_6577B8(uint64_t a1, int **a2)
{
  if (sub_3E69D8(a1, a2)) {
    return 2;
  }
  if (sub_35E640()) {
    return 1;
  }
  uint64_t v5 = *a2;
  int v6 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v7 = *v6;
  if (v7 >= 0xB)
  {
    if (v6[5] && (*((unsigned char *)v5 + v6[5]) & 8) != 0) {
      return 14;
    }
    if (v7 >= 0x2F && v6[23] && *((unsigned char *)v5 + v6[23]) == 9) {
      return 13;
    }
  }
  if (!*((unsigned char *)a2 + 38))
  {
    if (v7 < 0x47)
    {
      if (v7 <= 0x38) {
        goto LABEL_33;
      }
    }
    else if (v6[35] && (*((unsigned char *)v5 + v6[35]) & 1) != 0)
    {
      goto LABEL_34;
    }
    if (!v6[28]) {
      goto LABEL_34;
    }
    int v8 = *(int *)((char *)v5 + v6[28]);
    if ((v8 & 1) == 0)
    {
LABEL_25:
      unsigned __int8 v3 = 8;
      if ((v8 & 7) == 4 || (v8 & 0x23) == 0x20) {
        return v3;
      }
      goto LABEL_34;
    }
    return 8;
  }
  if (v7 >= 0x47)
  {
    if (v6[35] && (*((unsigned char *)v5 + v6[35]) & 2) != 0) {
      goto LABEL_34;
    }
LABEL_23:
    if (!v6[28]) {
      goto LABEL_34;
    }
    int v8 = *(int *)((char *)v5 + v6[28]);
    if ((v8 & 2) == 0) {
      goto LABEL_25;
    }
    return 8;
  }
  if (v7 > 0x38) {
    goto LABEL_23;
  }
LABEL_33:
  if (v7 < 0xB) {
    return 10;
  }
LABEL_34:
  if (!v6[5] || (*((unsigned char *)v5 + v6[5] + 2) & 0x20) == 0) {
    return 10;
  }
  if (!*((unsigned char *)a2 + 38))
  {
    if (v7 >= 0x47)
    {
      unsigned int v9 = v6[35];
      if (v9)
      {
        int v10 = 1;
        goto LABEL_44;
      }
    }
    return 11;
  }
  if (v7 < 0x47) {
    return 11;
  }
  unsigned int v9 = v6[35];
  if (!v9) {
    return 11;
  }
  int v10 = 2;
LABEL_44:
  unsigned __int8 v3 = 11;
  if ((*(int *)((char *)v5 + v9) & v10) == 0) {
    return v3;
  }
  if (sub_6561B0(a2)) {
    return 12;
  }
  else {
    return 11;
  }
}

BOOL *sub_6579C4(BOOL *a1, void *a2)
{
  HIBYTE(__p[2]) = 19;
  strcpy((char *)__p, "add_multiple_labels");
  BOOL v4 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *a1 = v4;
  __p[0] = operator new(0x28uLL);
  *(_OWORD *)&__p[1] = xmmword_20B93A0;
  strcpy((char *)__p[0], "use_simplified_infrastructure_types");
  BOOL v5 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  a1[1] = v5;
  return a1;
}

void sub_657AA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_657AC4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  BOOL v25 = 0;
  unint64_t v4 = *(unsigned int *)(a2 + 32) | ((unint64_t)*(unsigned __int16 *)(a2 + 36) << 32);
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  int v28 = &v25;
  sub_2E719C(a1, v4, 3, (uint64_t)&v28);
  BOOL v5 = v25;
  int v6 = v26;
  if (v25 == v26)
  {
LABEL_28:
    int v22 = v25;
    *(_DWORD *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_WORD *)(a3 + 36) = -1;
    *(unsigned char *)(a3 + 38) = 0;
    if (!v22) {
      return;
    }
    goto LABEL_29;
  }
  while (1)
  {
    uint64_t v7 = *v5;
    unint64_t v8 = *v5 & 0xFFFFFFFFFFFFLL;
    unsigned int v9 = (int *)sub_2D5D58(a1, v8);
    if (*(unsigned char *)(a1 + 7772))
    {
      int v10 = sub_2DB8E0(a1 + 3896, v7, 0);
      int v11 = &v10[-*(int *)v10];
      if (*(unsigned __int16 *)v11 < 5u)
      {
        uint64_t v12 = 0;
      }
      else
      {
        uint64_t v12 = *((unsigned __int16 *)v11 + 2);
        if (v12) {
          v12 += (uint64_t)&v10[*(unsigned int *)&v10[v12]];
        }
      }
      uint64_t v13 = v12 + 4 * WORD2(v7) + 4 + *(unsigned int *)(v12 + 4 * WORD2(v7) + 4);
    }
    else
    {
      uint64_t v13 = 0;
    }
    uint64_t v14 = sub_2E5C38(a1, v8, 1);
    if (!v7) {
      goto LABEL_27;
    }
    if (!v9 || v13 == 0) {
      goto LABEL_27;
    }
    long long v17 = (unsigned __int16 *)((char *)v9 - *v9);
    unsigned int v18 = *v17;
    uint64_t v19 = v7 & 0xFF000000000000;
    if ((v7 & 0xFF000000000000) != 0) {
      break;
    }
    if (v18 >= 0x47)
    {
      uint64_t v21 = v17[35];
      if (v21)
      {
        if (*((unsigned char *)v9 + v21))
        {
LABEL_31:
          BOOL v23 = v19 != 0;
          goto LABEL_33;
        }
        if ((*(int *)((char *)v9 + v21) & 2) != 0) {
          goto LABEL_32;
        }
      }
    }
LABEL_27:
    v5 += 3;
    if (v5 == v6) {
      goto LABEL_28;
    }
  }
  if (v18 < 0x47) {
    goto LABEL_27;
  }
  uint64_t v20 = v17[35];
  if (!v20) {
    goto LABEL_27;
  }
  if ((*((unsigned char *)v9 + v20) & 2) != 0) {
    goto LABEL_31;
  }
  if ((*(int *)((char *)v9 + v20) & 1) == 0) {
    goto LABEL_27;
  }
LABEL_32:
  BOOL v23 = v19 == 0;
LABEL_33:
  *(void *)a3 = v9;
  *(void *)(a3 + 8) = v13;
  *(void *)(a3 + 16) = v14;
  *(void *)(a3 + 24) = v15;
  *(_DWORD *)(a3 + 32) = v7;
  *(_WORD *)(a3 + 36) = WORD2(v7);
  *(unsigned char *)(a3 + 38) = v23;
  int v22 = v25;
  if (v25)
  {
LABEL_29:
    uint64_t v26 = v22;
    operator delete(v22);
  }
}

void sub_657CC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

char *sub_657CE8(char **a1, _DWORD *a2, uint64_t *a3, uint64_t *a4)
{
  unsigned int v9 = a1[1];
  unint64_t v8 = (unint64_t)a1[2];
  if ((unint64_t)v9 < v8)
  {
    uint64_t v10 = *a3;
    uint64_t v11 = *a4;
    *(_DWORD *)unsigned int v9 = *a2;
    *((void *)v9 + 1) = v10;
    *((void *)v9 + 2) = v11;
    uint64_t v12 = v9 + 24;
    goto LABEL_14;
  }
  uint64_t v13 = *a1;
  unint64_t v14 = 0xAAAAAAAAAAAAAAABLL * ((v9 - *a1) >> 3);
  unint64_t v15 = v14 + 1;
  if (v14 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_2E00();
  }
  unint64_t v16 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v8 - (void)v13) >> 3);
  if (2 * v16 > v15) {
    unint64_t v15 = 2 * v16;
  }
  if (v16 >= 0x555555555555555) {
    unint64_t v17 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v17 = v15;
  }
  if (v17 > 0xAAAAAAAAAAAAAAALL) {
    sub_188D718();
  }
  uint64_t v18 = 24 * v17;
  uint64_t v19 = (char *)operator new(24 * v17);
  uint64_t v20 = &v19[24 * v14];
  uint64_t v21 = &v19[v18];
  uint64_t v22 = *a3;
  uint64_t v23 = *a4;
  *(_DWORD *)uint64_t v20 = *a2;
  *((void *)v20 + 1) = v22;
  *((void *)v20 + 2) = v23;
  uint64_t v12 = v20 + 24;
  if (v9 == v13)
  {
    *a1 = v20;
    a1[1] = v12;
    a1[2] = v21;
    if (!v13) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  do
  {
    long long v24 = *(_OWORD *)(v9 - 24);
    BOOL v25 = v20 - 24;
    *((void *)v20 - 1) = *((void *)v9 - 1);
    *(_OWORD *)(v20 - 24) = v24;
    v9 -= 24;
    v20 -= 24;
  }
  while (v9 != v13);
  *a1 = v25;
  a1[1] = v12;
  a1[2] = v21;
  if (v13) {
LABEL_13:
  }
    operator delete(v13);
LABEL_14:
  a1[1] = v12;
  return v12 - 24;
}

double sub_657E50()
{
  byte_25984AF = 1;
  word_2598498 = 65;
  byte_25984C7 = 1;
  word_25984B0 = 65;
  byte_25984DF = 8;
  strcpy((char *)&qword_25984C8, "any_mode");
  byte_25984F7 = 7;
  strcpy((char *)&dword_25984E0, "cycling");
  byte_259850F = 7;
  strcpy((char *)&dword_25984F8, "driving");
  byte_2598527 = 7;
  strcpy((char *)&dword_2598510, "walking");
  char v4 = 7;
  strcpy((char *)v3, "UNKNOWN");
  int v5 = 0;
  char v7 = 14;
  strcpy((char *)v6, "ROUTES_THROUGH");
  int v8 = 1;
  char v10 = 9;
  strcpy((char *)__p, "ROUTES_TO");
  int v11 = 3;
  char v13 = 11;
  strcpy((char *)v12, "ROUTES_FROM");
  int v14 = 2;
  xmmword_2598558 = 0u;
  *(_OWORD *)&qword_2598568 = 0u;
  dword_2598578 = 1065353216;
  sub_3A6EF0((uint64_t)&xmmword_2598558, (uint64_t)v3, (uint64_t)v3);
  sub_3A6EF0((uint64_t)&xmmword_2598558, (uint64_t)v6, (uint64_t)v6);
  sub_3A6EF0((uint64_t)&xmmword_2598558, (uint64_t)__p, (uint64_t)__p);
  sub_3A6EF0((uint64_t)&xmmword_2598558, (uint64_t)v12, (uint64_t)v12);
  if (v13 < 0)
  {
    operator delete(v12[0]);
    if ((v10 & 0x80000000) == 0)
    {
LABEL_3:
      if ((v7 & 0x80000000) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      operator delete(v6[0]);
      if ((v4 & 0x80000000) == 0) {
        goto LABEL_5;
      }
LABEL_9:
      operator delete(v3[0]);
      goto LABEL_5;
    }
  }
  else if ((v10 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p[0]);
  if (v7 < 0) {
    goto LABEL_8;
  }
LABEL_4:
  if (v4 < 0) {
    goto LABEL_9;
  }
LABEL_5:
  qword_2598530 = 0;
  qword_2598538 = 0;
  qword_2598528 = 0;
  uint64_t v0 = operator new(9uLL);
  *(void *)uint64_t v0 = 0x4020C000103050DLL;
  v0[8] = 6;
  qword_2598528 = (uint64_t)v0;
  qword_2598530 = (uint64_t)(v0 + 9);
  qword_2598538 = (uint64_t)(v0 + 9);
  qword_2598540 = 0;
  qword_2598548 = 0;
  unk_2598550 = 0;
  uint64_t v1 = (char *)operator new(9uLL);
  qword_2598548 = (uint64_t)(v1 + 9);
  unk_2598550 = v1 + 9;
  double result = 1.10224369e-279;
  *(void *)uint64_t v1 = 0x604020C00010305;
  v1[8] = 13;
  qword_2598540 = (uint64_t)v1;
  return result;
}

void sub_65810C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  if (qword_2598568) {
    sub_20AA6E0((void **)qword_2598568);
  }
  uint64_t v37 = (void *)xmmword_2598558;
  *(void *)&xmmword_2598558 = 0;
  if (v37)
  {
    operator delete(v37);
    if ((a36 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a29 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_11;
    }
  }
  else if ((a36 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(__p);
  if ((a29 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a22 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_12;
  }
LABEL_11:
  operator delete(a24);
  if ((a22 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a15 & 0x80000000) == 0) {
LABEL_14:
    }
      _Unwind_Resume(exception_object);
LABEL_13:
    operator delete(a10);
    _Unwind_Resume(exception_object);
  }
LABEL_12:
  operator delete(a17);
  if ((a15 & 0x80000000) == 0) {
    goto LABEL_14;
  }
  goto LABEL_13;
}

void sub_6581AC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, std::string *a5@<X8>)
{
  int v8 = sub_8D7730(a3, a1);
  if (*((char *)v8 + 23) < 0)
  {
    sub_4200(&__p, (void *)*v8, v8[1]);
  }
  else
  {
    long long v9 = *(_OWORD *)v8;
    __p.__r_.__value_.__r.__words[2] = v8[2];
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v9;
  }
  std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  int v11 = *(char **)(a2 + 16);
  if (size) {
    BOOL v12 = v11 == 0;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    do
    {
      sub_625E4(&__p, v11 + 16, (uint64_t)(v11 + 40));
      int v11 = *(char **)v11;
    }
    while (v11);
  }
  if (a4)
  {
    sub_6FC2EC((char *)&__p, (uint64_t)a5);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    *a5 = __p;
  }
}

void sub_6582B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_6582D0(std::string *this, uint64_t a2)
{
  uint64_t v2 = *(char **)(a2 + 16);
  if (v2)
  {
    unsigned __int8 v3 = this;
    do
    {
      this = sub_625E4(v3, v2 + 16, (uint64_t)(v2 + 40));
      uint64_t v2 = *(char **)v2;
    }
    while (v2);
  }
  return this;
}

void sub_658310(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, int a4@<W3>, std::string *a5@<X8>)
{
  uint64_t v5 = *a3;
  if (v5)
  {
    sub_6581AC(a1, a2, v5, a4, a5);
  }
  else
  {
    a5->__r_.__value_.__r.__words[0] = 0;
    a5->__r_.__value_.__l.__size_ = 0;
    a5->__r_.__value_.__r.__words[2] = 0;
  }
}

uint64_t sub_658328(char **a1)
{
  if (sub_65837C((uint64_t)a1)) {
    return 3;
  }
  if (sub_6586DC(a1)) {
    return 2;
  }
  else {
    return 1;
  }
}

BOOL sub_65837C(uint64_t a1)
{
  char v1 = *(unsigned char *)(a1 + 23);
  if (v1 >= 0) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = *(void *)a1;
  }
  if (byte_2599D97 >= 0) {
    unsigned __int8 v3 = &qword_2599D80;
  }
  else {
    unsigned __int8 v3 = (uint64_t *)qword_2599D80;
  }
  if (byte_2599D97 >= 0) {
    int64_t v4 = byte_2599D97;
  }
  else {
    int64_t v4 = unk_2599D88;
  }
  if (!v4) {
    return 1;
  }
  if (v1 >= 0) {
    int64_t v6 = *(unsigned __int8 *)(a1 + 23);
  }
  else {
    int64_t v6 = *(void *)(a1 + 8);
  }
  char v7 = (char *)(v2 + v6);
  if (v6 >= v4)
  {
    int v17 = *(char *)v3;
    int64_t v18 = v6;
    uint64_t v19 = (void *)v2;
    do
    {
      int64_t v20 = v18 - v4;
      if (v20 == -1) {
        break;
      }
      uint64_t v21 = (char *)memchr(v19, v17, v20 + 1);
      if (!v21) {
        break;
      }
      uint64_t v22 = v21;
      if (!memcmp(v21, v3, v4))
      {
        if (v22 != v7 && &v22[-v2] != (char *)-1) {
          return 1;
        }
        break;
      }
      uint64_t v19 = v22 + 1;
      int64_t v18 = v7 - (v22 + 1);
    }
    while (v18 >= v4);
  }
  int v8 = byte_2599CEF >= 0 ? &qword_2599CD8 : (uint64_t *)qword_2599CD8;
  int64_t v9 = byte_2599CEF >= 0 ? byte_2599CEF : unk_2599CE0;
  if (!v9) {
    return 1;
  }
  if (v6 >= v9)
  {
    int v23 = *(char *)v8;
    int64_t v24 = v6;
    BOOL v25 = (void *)v2;
    do
    {
      int64_t v26 = v24 - v9;
      if (v26 == -1) {
        break;
      }
      uint64_t v27 = (char *)memchr(v25, v23, v26 + 1);
      if (!v27) {
        break;
      }
      int v28 = v27;
      if (!memcmp(v27, v8, v9))
      {
        if (v28 != v7 && &v28[-v2] != (char *)-1) {
          return 1;
        }
        break;
      }
      BOOL v25 = v28 + 1;
      int64_t v24 = v7 - (v28 + 1);
    }
    while (v24 >= v9);
  }
  char v10 = byte_2599D07 >= 0 ? &qword_2599CF0 : (uint64_t *)qword_2599CF0;
  int64_t v11 = byte_2599D07 >= 0 ? byte_2599D07 : unk_2599CF8;
  if (!v11) {
    return 1;
  }
  if (v6 >= v11)
  {
    int v29 = *(char *)v10;
    int64_t v30 = v6;
    uint64_t v31 = (void *)v2;
    do
    {
      int64_t v32 = v30 - v11;
      if (v32 == -1) {
        break;
      }
      uint64_t v33 = (char *)memchr(v31, v29, v32 + 1);
      if (!v33) {
        break;
      }
      int v34 = v33;
      if (!memcmp(v33, v10, v11))
      {
        if (v34 != v7 && &v34[-v2] != (char *)-1) {
          return 1;
        }
        break;
      }
      uint64_t v31 = v34 + 1;
      int64_t v30 = v7 - (v34 + 1);
    }
    while (v30 >= v11);
  }
  BOOL v12 = byte_2599D67 >= 0 ? &qword_2599D50 : (uint64_t *)qword_2599D50;
  int64_t v13 = byte_2599D67 >= 0 ? byte_2599D67 : unk_2599D58;
  if (!v13) {
    return 1;
  }
  if (v6 >= v13)
  {
    int v35 = *(char *)v12;
    int64_t v36 = v6;
    uint64_t v37 = (void *)v2;
    do
    {
      int64_t v38 = v36 - v13;
      if (v38 == -1) {
        break;
      }
      uint64_t v39 = (char *)memchr(v37, v35, v38 + 1);
      if (!v39) {
        break;
      }
      BOOL v40 = v39;
      if (!memcmp(v39, v12, v13))
      {
        if (v40 != v7 && &v40[-v2] != (char *)-1) {
          return 1;
        }
        break;
      }
      uint64_t v37 = v40 + 1;
      int64_t v36 = v7 - (v40 + 1);
    }
    while (v36 >= v13);
  }
  int v14 = byte_2599D7F >= 0 ? &qword_2599D68 : (uint64_t *)qword_2599D68;
  int64_t v15 = byte_2599D7F >= 0 ? byte_2599D7F : unk_2599D70;
  if (!v15) {
    return 1;
  }
  if (v6 >= v15)
  {
    int v41 = *(char *)v14;
    int v42 = (void *)v2;
    do
    {
      if (v6 - v15 == -1) {
        break;
      }
      uint64_t v43 = (char *)memchr(v42, v41, v6 - v15 + 1);
      if (!v43) {
        break;
      }
      uint64_t v44 = v43;
      if (!memcmp(v43, v14, v15))
      {
        if (v44 == v7 || &v44[-v2] == (char *)-1) {
          return sub_658840((uint64_t *)a1, (char *)&qword_2599D38, 0) != -1;
        }
        return 1;
      }
      int v42 = v44 + 1;
      int64_t v6 = v7 - (v44 + 1);
    }
    while (v6 >= v15);
  }
  return sub_658840((uint64_t *)a1, (char *)&qword_2599D38, 0) != -1;
}

BOOL sub_6586DC(char **a1)
{
  char v1 = *((unsigned char *)a1 + 23);
  if (v1 >= 0) {
    uint64_t v2 = (char *)a1;
  }
  else {
    uint64_t v2 = *a1;
  }
  if (byte_2599D1F >= 0) {
    unsigned __int8 v3 = &qword_2599D08;
  }
  else {
    unsigned __int8 v3 = (uint64_t *)qword_2599D08;
  }
  if (byte_2599D1F >= 0) {
    int64_t v4 = byte_2599D1F;
  }
  else {
    int64_t v4 = *(void *)&byte_2599D10;
  }
  if (!v4) {
    return 1;
  }
  if (v1 >= 0) {
    uint64_t v5 = *((unsigned __int8 *)a1 + 23);
  }
  else {
    uint64_t v5 = (uint64_t)a1[1];
  }
  int64_t v6 = &v2[v5];
  if (v5 >= v4)
  {
    int v12 = *(char *)v3;
    uint64_t v13 = v5;
    int v14 = v2;
    do
    {
      uint64_t v15 = v13 - v4;
      if (v15 == -1) {
        break;
      }
      unint64_t v16 = (char *)memchr(v14, v12, v15 + 1);
      if (!v16) {
        break;
      }
      int v17 = v16;
      if (!memcmp(v16, v3, v4))
      {
        if (v17 == v6 || v17 - v2 == -1) {
          break;
        }
        return 1;
      }
      int v14 = v17 + 1;
      uint64_t v13 = v6 - (v17 + 1);
    }
    while (v13 >= v4);
  }
  if (v5 >= 5)
  {
    char v7 = v2;
    do
    {
      int v8 = (char *)memchr(v7, 95, v5 - 4);
      if (!v8) {
        break;
      }
      if (*(_DWORD *)v8 == 1835093599 && v8[4] == 101) {
        return v8 != v6 && v8 - v2 != -1;
      }
      char v7 = v8 + 1;
      uint64_t v5 = v6 - (unsigned char *)v7;
    }
    while (v6 - (unsigned char *)v7 > 4);
  }
  int v8 = v6;
  return v8 != v6 && v8 - v2 != -1;
}

uint64_t sub_658840(uint64_t *a1, char *a2, unint64_t a3)
{
  uint64_t v3 = (uint64_t)a1;
  if (*((char *)a1 + 23) < 0)
  {
    uint64_t v3 = *a1;
    unint64_t v4 = a1[1];
  }
  else
  {
    unint64_t v4 = *((unsigned __int8 *)a1 + 23);
  }
  int v5 = a2[23];
  if (v5 >= 0) {
    int64_t v6 = a2;
  }
  else {
    int64_t v6 = *(char **)a2;
  }
  if (v5 >= 0) {
    int64_t v7 = a2[23];
  }
  else {
    int64_t v7 = *((void *)a2 + 1);
  }
  if (v4 < a3) {
    return -1;
  }
  if (v7)
  {
    int64_t v9 = (void *)(v3 + a3);
    char v10 = (char *)(v3 + v4);
    int64_t v11 = v4 - a3;
    if (v11 >= v7)
    {
      int v13 = *v6;
      do
      {
        uint64_t v14 = v11 - v7;
        if (v14 == -1) {
          break;
        }
        uint64_t v15 = (char *)memchr(v9, v13, v14 + 1);
        if (!v15) {
          break;
        }
        int v12 = v15;
        if (!memcmp(v15, v6, v7)) {
          goto LABEL_16;
        }
        int64_t v9 = v12 + 1;
        int64_t v11 = v10 - (v12 + 1);
      }
      while (v11 >= v7);
    }
    int v12 = v10;
LABEL_16:
    if (v12 == v10) {
      return -1;
    }
    else {
      return (uint64_t)&v12[-v3];
    }
  }
  return a3;
}

uint64_t sub_658930(uint64_t a1)
{
  int64_t v1 = *(unsigned __int8 *)(a1 + 23);
  if ((v1 & 0x80u) == 0) {
    uint64_t v2 = (char *)a1;
  }
  else {
    uint64_t v2 = *(char **)a1;
  }
  if (byte_259A697 >= 0) {
    uint64_t v3 = &xmmword_259A680;
  }
  else {
    uint64_t v3 = (long long *)xmmword_259A680;
  }
  if (byte_259A697 >= 0) {
    int64_t v4 = byte_259A697;
  }
  else {
    int64_t v4 = *((void *)&xmmword_259A680 + 1);
  }
  if (v4)
  {
    if ((v1 & 0x80u) != 0) {
      int64_t v1 = *(void *)(a1 + 8);
    }
    if (v1 >= v4)
    {
      int64_t v7 = &v2[v1];
      int v8 = *(char *)v3;
      int64_t v9 = v2;
      do
      {
        int64_t v10 = v1 - v4;
        if (v10 == -1) {
          break;
        }
        int64_t v11 = (char *)memchr(v9, v8, v10 + 1);
        if (!v11) {
          break;
        }
        int v12 = v11;
        if (!memcmp(v11, v3, v4))
        {
          if (v12 == v7 || v12 - v2 == -1) {
            break;
          }
          return 3;
        }
        int64_t v9 = v12 + 1;
        int64_t v1 = v7 - (v12 + 1);
      }
      while (v1 >= v4);
    }
    if (sub_658A38((char **)a1)) {
      return 2;
    }
    else {
      return 1;
    }
  }
  else
  {
    return 3;
  }
}

BOOL sub_658A38(char **a1)
{
  char v1 = *((unsigned char *)a1 + 23);
  if (v1 >= 0) {
    uint64_t v2 = (char *)a1;
  }
  else {
    uint64_t v2 = *a1;
  }
  if (byte_259ABA7 >= 0) {
    uint64_t v3 = &qword_259AB90;
  }
  else {
    uint64_t v3 = (uint64_t *)qword_259AB90;
  }
  if (byte_259ABA7 >= 0) {
    int64_t v4 = byte_259ABA7;
  }
  else {
    int64_t v4 = unk_259AB98;
  }
  if (!v4) {
    return 1;
  }
  if (v1 >= 0) {
    int64_t v5 = *((unsigned __int8 *)a1 + 23);
  }
  else {
    int64_t v5 = (int64_t)a1[1];
  }
  int64_t v6 = &v2[v5];
  if (v5 >= v4)
  {
    int v15 = *(char *)v3;
    int64_t v16 = v5;
    int v17 = v2;
    do
    {
      int64_t v18 = v16 - v4;
      if (v18 == -1) {
        break;
      }
      uint64_t v19 = (char *)memchr(v17, v15, v18 + 1);
      if (!v19) {
        break;
      }
      int64_t v20 = v19;
      if (!memcmp(v19, v3, v4))
      {
        if (v20 == v6 || v20 - v2 == -1) {
          break;
        }
        return 1;
      }
      int v17 = v20 + 1;
      int64_t v16 = v6 - (v20 + 1);
    }
    while (v16 >= v4);
  }
  int64_t v7 = byte_259A6AF >= 0 ? &xmmword_259A698 : (long long *)xmmword_259A698;
  int64_t v8 = byte_259A6AF >= 0 ? byte_259A6AF : *((void *)&xmmword_259A698 + 1);
  if (!v8) {
    return 1;
  }
  if (v5 >= v8)
  {
    int v9 = *(char *)v7;
    int64_t v10 = v2;
    do
    {
      if (v5 - v8 == -1) {
        break;
      }
      int64_t v11 = (char *)memchr(v10, v9, v5 - v8 + 1);
      if (!v11) {
        break;
      }
      int v12 = v11;
      if (!memcmp(v11, v7, v8)) {
        return v12 != v6 && v12 - v2 != -1;
      }
      int64_t v10 = v12 + 1;
      int64_t v5 = v6 - (v12 + 1);
    }
    while (v5 >= v8);
  }
  int v12 = v6;
  return v12 != v6 && v12 - v2 != -1;
}

double sub_658BC0()
{
  strcpy(&byte_2598597, "\n\x1B\\toi=orth\\"");
  strcpy((char *)&qword_2598580, "\x1B\\toi=lhp\\"");
  byte_25985AF = 11;
  qword_25985B0 = (uint64_t)operator new(0x19uLL);
  long long v280 = xmmword_20B9250;
  unk_25985B8 = xmmword_20B9250;
  strcpy((char *)qword_25985B0, "\x1B\\toi=x-sampa-internal\\"");
  byte_25985DF = 13;
  strcpy((char *)&qword_25985C8, "\x1B\\tn=address\\"");
  strcpy(&byte_25985F7, "\t\x1B\\tn=normal\\"");
  strcpy((char *)&qword_25985E0, "\x1B\\tn=nav\\"");
  byte_259860F = 12;
  byte_2598627 = 7;
  strcpy((char *)&dword_2598610, "\x1B\\lang=");
  byte_259863F = 1;
  word_2598628 = 92;
  byte_2598657 = 4;
  strcpy((char *)&qword_2598640, "DEV:");
  byte_259866F = 8;
  strcpy((char *)&qword_2598658, "Continue");
  byte_2598687 = 11;
  strcpy((char *)&qword_2598670, "Start_Route");
  byte_259869F = 14;
  strcpy((char *)&qword_2598688, "Continue_Route");
  byte_25986B7 = 12;
  strcpy((char *)&qword_25986A0, "Resume_Route");
  byte_25986CF = 18;
  strcpy((char *)&xmmword_25986B8, "Start_Route_U_Turn");
  byte_25986E7 = 7;
  strcpy((char *)&dword_25986D0, "_U_Turn");
  qword_25986F8 = 0x1300000000000000;
  qmemcpy(&unk_2598700, "Continue_Route", 14);
  dword_25986F0 = 1702131055;
  qword_25986E8 = *(void *)"Resume_Route";
  *(int *)((char *)&dword_25986F4 + 3) = 1852994900;
  dword_25986F4 = 1415533919;
  qword_2598710 = 0x1500000000000000;
  strcpy(byte_2598718, "Left_Turn");
  unk_259870E = 1415533919;
  *(_DWORD *)((char *)&qword_2598710 + 1) = 1852994900;
  strcpy(&byte_259872F, "\tRight_Turn");
  strcpy(&byte_2598747, "\nLeft_Turn_At_End");
  byte_259875F = 16;
  byte_2598777 = 17;
  strcpy((char *)&xmmword_2598760, "Right_Turn_At_End");
  byte_259878F = 15;
  strcpy((char *)&qword_2598778, "Sharp_Left_Turn");
  byte_25987A7 = 16;
  strcpy((char *)&xmmword_2598790, "Sharp_Right_Turn");
  byte_25987BF = 16;
  strcpy((char *)&xmmword_25987A8, "Slight_Left_Turn");
  byte_25987D7 = 17;
  strcpy((char *)&xmmword_25987C0, "Slight_Right_Turn");
  strcpy(&byte_25987EF, "\tKeep_Right");
  strcpy((char *)&qword_25987D8, "Keep_Left");
  strcpy(&byte_2598807, "\nU_Turn");
  byte_259881F = 6;
  byte_2598837 = 14;
  strcpy((char *)&qword_2598820, "Walking_U_Turn");
  byte_259884F = 20;
  strcpy((char *)&xmmword_2598838, "U_Turn_When_Possible");
  byte_2598867 = 20;
  strcpy((char *)&xmmword_2598850, "U_Turn_At_Roundabout");
  byte_259887F = 11;
  strcpy((char *)&qword_2598868, "Enter_Ferry");
  strcpy(&byte_2598897, "\nChange_Ferry");
  strcpy((char *)&qword_2598880, "Exit_Ferry");
  strcpy((char *)&xmmword_25988B0, "Enter_Railway_Shuttle");
  strcpy((char *)&xmmword_25988C8, "Exit_Railway_Shuttle");
  strcpy((char *)&xmmword_25988E0, "Change_Railway_Shuttle");
  strcpy((char *)&xmmword_25988F8, "End_Of_Navigation");
  strcpy((char *)&xmmword_2598910, "End_Of_Navigation");
  strcpy((char *)&qword_2598928, "Destination");
  strcpy((char *)&xmmword_2598940, "Destination_On_left");
  strcpy((char *)&xmmword_2598958, "Destination_On_Right");
  strcpy((char *)&xmmword_25989A0, "First_Stop_On_Right");
  strcpy((char *)&xmmword_25989E8, "Next_Stop_On_Right");
  byte_25988AF = 12;
  byte_25988C7 = 21;
  byte_25988DF = 20;
  strcpy((char *)&xmmword_2598A18, "Waypoint_Stop_On_Left");
  byte_25988F7 = 22;
  byte_259890F = 17;
  byte_2598927 = 17;
  byte_259893F = 11;
  byte_2598957 = 19;
  byte_259896F = 20;
  strcpy(&byte_2598987, "\nFirst_Stop_On_left");
  *(void *)&v268[0] = *(void *)"First_Stop";
  strcpy((char *)&qword_2598970, "First_Stop");
  byte_259899F = 18;
  byte_25989B7 = 19;
  strcpy(&byte_25989CF, "\tNext_Stop_On_left");
  strcpy((char *)&qword_2598A00, "Waypoint_Stop");
  strcpy((char *)&xmmword_2598A30, "Waypoint_Stop_On_Right");
  strcpy((char *)&qword_2598A48, "Roundabout_");
  *(void *)&v264[48] = *(void *)"Next_Stop";
  strcpy((char *)&qword_25989B8, "Next_Stop");
  byte_25989E7 = 17;
  byte_25989FF = 18;
  byte_2598A17 = 13;
  byte_2598A2F = 21;
  byte_2598A47 = 22;
  byte_2598A5F = 11;
  byte_2598A77 = 16;
  strcpy((char *)&xmmword_2598A60, "Enter_Roundabout");
  qword_2598A78 = (uint64_t)operator new(0x20uLL);
  long long v279 = xmmword_20B91C0;
  xmmword_2598A80 = xmmword_20B91C0;
  strcpy((char *)qword_2598A78, "Walking_Enter_Roundabout");
  byte_2598AA7 = 16;
  strcpy((char *)&xmmword_2598A90, "Leave_Roundabout");
  byte_2598ABF = 21;
  strcpy((char *)&xmmword_2598AA8, "Roundabout_First_Exit");
  byte_2598AD7 = 22;
  strcpy((char *)&xmmword_2598AC0, "Roundabout_Second_Exit");
  byte_2598AEF = 21;
  strcpy((char *)&xmmword_2598AD8, "Roundabout_Third_Exit");
  strcpy((char *)&xmmword_2598AF0, "Roundabout_Fourth_Exit");
  HIBYTE(word_2598B06) = 22;
  byte_2598B1F = 21;
  strcpy((char *)&xmmword_2598B08, "Roundabout_Fifth_Exit");
  byte_2598B37 = 21;
  strcpy((char *)&xmmword_2598B20, "Roundabout_Sixth_Exit");
  qword_2598B38 = (uint64_t)operator new(0x19uLL);
  xmmword_2598B40 = xmmword_20B9250;
  strcpy((char *)qword_2598B38, "Roundabout_Seventh_Exit");
  strcpy((char *)&xmmword_2598B50, "Roundabout_Eighth_Exit");
  HIBYTE(word_2598B66) = 22;
  byte_2598B7F = 21;
  strcpy((char *)&xmmword_2598B68, "Roundabout_Ninth_Exit");
  byte_2598B97 = 21;
  strcpy((char *)&xmmword_2598B80, "Roundabout_Tenth_Exit");
  qword_2598B98 = (uint64_t)operator new(0x20uLL);
  xmmword_2598BA0 = xmmword_20B91C0;
  strcpy((char *)qword_2598B98, "Roundabout_Eleventh_Exit");
  qword_2598BB0 = (uint64_t)operator new(0x19uLL);
  unk_2598BB8 = xmmword_20B9250;
  strcpy((char *)qword_2598BB0, "Roundabout_Twelfth_Exit");
  qword_2598BC8 = (uint64_t)operator new(0x20uLL);
  long long v276 = xmmword_20B5EB0;
  xmmword_2598BD0 = xmmword_20B5EB0;
  strcpy((char *)qword_2598BC8, "Roundabout_Thirteenth_Exit");
  qword_2598BE0 = (uint64_t)operator new(0x20uLL);
  unk_2598BE8 = xmmword_20B5EB0;
  strcpy((char *)qword_2598BE0, "Roundabout_Fourteenth_Exit");
  qword_2598BF8 = (uint64_t)operator new(0x20uLL);
  long long v278 = xmmword_20B8870;
  xmmword_2598C00 = xmmword_20B8870;
  strcpy((char *)qword_2598BF8, "Roundabout_Fifteenth_Exit");
  qword_2598C10 = (uint64_t)operator new(0x20uLL);
  unk_2598C18 = xmmword_20B8870;
  strcpy((char *)qword_2598C10, "Roundabout_Sixteenth_Exit");
  qword_2598C28 = (uint64_t)operator new(0x20uLL);
  long long v273 = xmmword_20B91A0;
  xmmword_2598C30 = xmmword_20B91A0;
  strcpy((char *)qword_2598C28, "Roundabout_Seventeenth_Exit");
  qword_2598C40 = (uint64_t)operator new(0x20uLL);
  unk_2598C48 = xmmword_20B5EB0;
  strcpy((char *)qword_2598C40, "Roundabout_Eighteenth_Exit");
  qword_2598C58 = (uint64_t)operator new(0x20uLL);
  xmmword_2598C60 = xmmword_20B5EB0;
  strcpy((char *)qword_2598C58, "Roundabout_Nineteenth_Exit");
  byte_2598C87 = 8;
  strcpy((char *)&qword_2598C70, "Off_Ramp");
  byte_2598C9F = 16;
  strcpy((char *)&xmmword_2598C88, "Off_Ramp_On_Left");
  byte_2598CB7 = 17;
  strcpy((char *)&xmmword_2598CA0, "Off_Ramp_On_Right");
  byte_2598CCF = 14;
  strcpy((char *)&qword_2598CB8, "Change_Highway");
  strcpy((char *)&xmmword_2598CD0, "Change_Highway_On_Left");
  HIBYTE(word_2598CE6) = 22;
  qword_2598CE8 = (uint64_t)operator new(0x19uLL);
  xmmword_2598CF0 = xmmword_20B9250;
  strcpy((char *)qword_2598CE8, "Change_Highway_On_Right");
  byte_2598D17 = 5;
  dword_2598D00 = 1735550285;
  byte_2598D04 = 101;
  byte_2598D05 = 0;
  byte_2598D2F = 12;
  strcpy((char *)&qword_2598D18, "Enter_Detour");
  byte_2598D47 = 11;
  strcpy((char *)&qword_2598D30, "Exit_Detour");
  byte_2598D5F = 18;
  strcpy((char *)&xmmword_2598D48, "Walking_Turnaround");
  qword_2598D60 = (uint64_t)operator new(0x19uLL);
  unk_2598D68 = xmmword_20B9250;
  strcpy((char *)qword_2598D60, "Walking_Turnaround_Sign");
  byte_2598D8F = 19;
  strcpy((char *)&xmmword_2598D78, "Distance_Title_List");
  qword_2598D90 = (uint64_t)operator new(0x19uLL);
  unk_2598D98 = xmmword_20B9250;
  long long v270 = *(_OWORD *)"Cross_The_Street_Spoken";
  strcpy((char *)qword_2598D90, "Cross_The_Street_Spoken");
  *(void *)&v268[1] = *(void *)"t_Spoken";
  byte_2598DBF = 19;
  strcpy((char *)&xmmword_2598DA8, "Arrival_Charge_List");
  byte_2598DD7 = 15;
  strcpy((char *)&qword_2598DC0, "Charge_At_Start");
  strcpy(&byte_2598DEF, "\tPass_Street");
  strcpy((char *)&qword_2598DD8, "Pass_Exit");
  byte_2598E07 = 11;
  byte_2598E1F = 17;
  strcpy((char *)&xmmword_2598E08, "Pass_Intersection");
  strcpy(&byte_2598E37, "\t_PrevExitNumber");
  strcpy((char *)&qword_2598E20, "Next_Exit");
  byte_2598E4F = 15;
  strcpy(&byte_2598E67, "\t_PrevUTurn");
  strcpy((char *)&qword_2598E50, "_PrevRoad");
  strcpy(&byte_2598E7F, "\nNext_");
  byte_2598E97 = 5;
  byte_2598EAF = 15;
  strcpy((char *)&qword_2598E98, "_At_Next_Street");
  byte_2598EC7 = 21;
  strcpy((char *)&xmmword_2598EB0, "_At_Next_Intersection");
  byte_2598EDF = 14;
  strcpy((char *)&qword_2598EC8, "Charge_Station");
  byte_2598EF7 = 15;
  strcpy((char *)&qword_2598EE0, "_Charge_Station");
  BYTE1(qword_2598F08) = 0;
  WORD1(qword_2598F08) = 25856;
  HIDWORD(qword_2598F08) = 335544320;
  strcpy((char *)&qword_2598EF8, "_Charge_Station_");
  byte_2598F27 = 8;
  strcpy((char *)&qword_2598F10, "_Minimum");
  byte_2598F3F = 15;
  strcpy((char *)&qword_2598F28, "ExitShield_Sign");
  byte_2598F57 = 8;
  strcpy((char *)&qword_2598F40, "Walking_");
  byte_2598F6F = 16;
  strcpy((char *)&xmmword_2598F58, "Walking_Continue");
  byte_2598F87 = 19;
  strcpy((char *)&xmmword_2598F70, "Walking_Start_Route");
  qword_2598F88 = (uint64_t)operator new(0x20uLL);
  xmmword_2598F90 = xmmword_20B5EB0;
  strcpy((char *)qword_2598F88, "Walking_Start_Route_U_Turn");
  byte_2598FB7 = 17;
  strcpy((char *)&xmmword_2598FA0, "Walking_Left_Turn");
  byte_2598FCF = 18;
  strcpy((char *)&xmmword_2598FB8, "Walking_Right_Turn");
  qword_2598FD0 = (uint64_t)operator new(0x20uLL);
  unk_2598FD8 = xmmword_20B5EB0;
  strcpy((char *)qword_2598FD0, "Walking_Turn_At_Roundabout");
  qword_2598FE8 = (uint64_t)operator new(0x20uLL);
  long long v277 = xmmword_20B91B0;
  xmmword_2598FF0 = xmmword_20B91B0;
  strcpy((char *)qword_2598FE8, "Walking_U_Turn_When_Possible");
  qword_2599000 = (uint64_t)operator new(0x28uLL);
  long long v269 = xmmword_20B9390;
  unk_2599008 = xmmword_20B9390;
  strcpy((char *)qword_2599000, "Walking_Roundabout_Exit_Continue");
  qword_2599018 = (uint64_t)operator new(0x20uLL);
  xmmword_2599020 = xmmword_20B91B0;
  strcpy((char *)qword_2599018, "Walking_Roundabout_Exit_Left");
  qword_2599030 = (uint64_t)operator new(0x20uLL);
  long long v275 = xmmword_20B8890;
  unk_2599038 = xmmword_20B8890;
  strcpy((char *)qword_2599030, "Walking_Roundabout_Exit_Right");
  qword_2599048 = (uint64_t)operator new(0x20uLL);
  xmmword_2599050 = xmmword_20B8870;
  strcpy((char *)qword_2599048, "Walking_End_Of_Navigation");
  long long v272 = *(_OWORD *)"nd_Of_Navigation";
  uint64_t v0 = (char *)operator new(0x20uLL);
  qword_2599060 = (uint64_t)v0;
  unk_2599068 = xmmword_20B8870;
  *(_OWORD *)uint64_t v0 = *(_OWORD *)"Walking_End_Of_Navigation";
  *(_OWORD *)(v0 + 9) = v272;
  v0[25] = 0;
  byte_259908F = 8;
  strcpy((char *)&qword_2599078, "Walking_");
  qword_2599090 = (uint64_t)operator new(0x19uLL);
  unk_2599098 = v280;
  strcpy((char *)qword_2599090, "Walking_Sharp_Left_Turn");
  qword_25990A8 = (uint64_t)operator new(0x20uLL);
  xmmword_25990B0 = v279;
  strcpy((char *)qword_25990A8, "Walking_Sharp_Right_Turn");
  qword_25990C0 = (uint64_t)operator new(0x20uLL);
  unk_25990C8 = v279;
  strcpy((char *)qword_25990C0, "Walking_Slight_Left_Turn");
  qword_25990D8 = (uint64_t)operator new(0x20uLL);
  xmmword_25990E0 = v278;
  strcpy((char *)qword_25990D8, "Walking_Slight_Right_Turn");
  byte_2599107 = 4;
  strcpy((char *)&dword_25990F0, "Exit");
  byte_259911F = 4;
  strcpy((char *)&dword_2599108, "Road");
  byte_2599137 = 7;
  strcpy((char *)&dword_2599120, "Freeway");
  byte_259914F = 12;
  strcpy((char *)&qword_2599138, "Intersection");
  byte_2599167 = 5;
  strcpy((char *)&dword_2599150, "Ferry");
  byte_259917F = 11;
  strcpy((char *)&qword_2599168, "ShuttleName");
  byte_2599197 = 5;
  strcpy((char *)&dword_2599180, "Road1");
  strcpy(&byte_25991AF, "\tName");
  strcpy((char *)&qword_2599198, "Signpost1");
  byte_25991C7 = 4;
  byte_25991DF = 7;
  strcpy((char *)&dword_25991C8, "Address");
  byte_25991F7 = 7;
  strcpy((char *)&dword_25991E0, "Shield1");
  byte_259920F = 13;
  strcpy((char *)&qword_25991F8, "TowardShield1");
  byte_2599227 = 6;
  strcpy((char *)&dword_2599210, "Right_");
  byte_259923F = 5;
  byte_259922C = 95;
  dword_2599228 = 1952867660;
  byte_259922D = 0;
  strcpy(&byte_2599257, "\tOn_Left_");
  strcpy((char *)&qword_2599240, "On_Right_");
  byte_259926F = 8;
  byte_2599287 = 12;
  strcpy((char *)&qword_2599270, "ElevatorName");
  byte_259929F = 13;
  strcpy((char *)&qword_2599288, "EscalatorName");
  strcpy(&byte_25992B7, "\nBridgeName");
  strcpy((char *)&qword_25992A0, "StairsName");
  strcpy(&byte_25992CF, "\nTunnelName");
  strcpy(&byte_25992E7, "\nParking");
  byte_25992FF = 7;
  strcpy(&byte_2599317, "\t_Escalator");
  strcpy((char *)&qword_2599300, "_Elevator");
  strcpy(&byte_259932F, "\n_ElevatorName");
  byte_2599347 = 13;
  byte_259935F = 14;
  strcpy((char *)&qword_2599348, "_EscalatorName");
  byte_2599377 = 5;
  strcpy((char *)&qword_2599360, "_Road");
  byte_259938F = 8;
  strcpy((char *)&qword_2599378, "_Freeway");
  byte_25993A7 = 13;
  strcpy((char *)&qword_2599390, "_Intersection");
  byte_25993BF = 6;
  strcpy((char *)&dword_25993A8, "_Road1");
  byte_25993D7 = 6;
  strcpy((char *)&dword_25993C0, "_Road2");
  strcpy(&byte_25993EF, "\n_Signpost2");
  strcpy((char *)&qword_25993D8, "_Signpost1");
  strcpy(&byte_2599407, "\n_Ferry");
  byte_259941F = 6;
  byte_2599437 = 12;
  strcpy((char *)&qword_2599420, "_Ferry_Ferry");
  byte_259944F = 12;
  strcpy((char *)&qword_2599438, "_ShuttleName");
  qword_2599450 = (uint64_t)operator new(0x20uLL);
  unk_2599458 = v277;
  strcpy((char *)qword_2599450, "_Railway_Shuttle_ShuttleName");
  byte_259947F = 11;
  strcpy((char *)&qword_2599468, "_ExitNumber");
  byte_2599497 = 5;
  dword_2599480 = 1769489759;
  byte_2599484 = 116;
  byte_2599485 = 0;
  byte_25994AF = 7;
  strcpy((char *)&dword_2599498, "_StayOn");
  byte_25994C7 = 7;
  strcpy((char *)&dword_25994B0, "_Stairs");
  byte_25994DF = 5;
  strcpy((char *)&dword_25994C8, "_Ramp");
  byte_25994F7 = 11;
  strcpy((char *)&qword_25994E0, "_StairsName");
  strcpy(&byte_259950F, "\t_Down");
  strcpy((char *)&qword_25994F8, "_RampName");
  byte_2599527 = 5;
  byte_259953F = 3;
  dword_2599528 = 7361887;
  byte_2599557 = 7;
  strcpy((char *)&dword_2599540, "_Bridge");
  byte_259956F = 7;
  strcpy((char *)&dword_2599558, "_Tunnel");
  byte_2599587 = 11;
  strcpy((char *)&qword_2599570, "_Roundabout");
  byte_259959F = 6;
  strcpy((char *)&dword_2599588, "_Cross");
  byte_25995B7 = 8;
  strcpy((char *)&qword_25995A0, "_Parking");
  byte_25995CF = 8;
  strcpy((char *)&qword_25995B8, "_Shield1");
  byte_25995E7 = 14;
  strcpy((char *)&qword_25995D0, "_TowardShield1");
  byte_25995FF = 8;
  strcpy((char *)&qword_25995E8, "_Shield2");
  byte_2599617 = 14;
  strcpy((char *)&qword_2599600, "_TowardShield2");
  byte_259962F = 11;
  strcpy((char *)&qword_2599618, "_Direction1");
  byte_2599647 = 11;
  strcpy((char *)&qword_2599630, "_Direction2");
  strcpy(&byte_259965F, "\n_TowardDirection1");
  strcpy((char *)&qword_2599648, "Direction1");
  byte_2599677 = 17;
  byte_259968F = 17;
  strcpy((char *)&xmmword_2599678, "_TowardDirection2");
  byte_25996A7 = 16;
  strcpy((char *)&xmmword_2599690, "TowardDirection1");
  byte_25996BF = 7;
  strcpy((char *)&qword_25996A8, "_Spoken");
  byte_25996D7 = 5;
  strcpy((char *)&qword_25996C0, "_Sign");
  byte_25996EF = 15;
  strcpy((char *)&qword_25996D8, "_Secondary_Sign");
  byte_2599707 = 5;
  byte_25996F4 = 116;
  dword_25996F0 = 1936280671;
  byte_25996F5 = 0;
  byte_259971F = 8;
  strcpy((char *)&qword_2599708, "_Primary");
  qword_2599730 = 0xF00000000000000;
  strcpy(byte_2599738, "_Secondary");
  strcpy((char *)&qword_2599720, "_Spoken_Primary");
  strcpy(&byte_259974F, "\n_Secondary");
  strcpy(&byte_2599767, "\n_Spoken_Secondar");
  BYTE1(qword_2599778) = 0;
  WORD1(qword_2599778) = 0;
  HIDWORD(qword_2599778) = 285212672;
  byte_2599797 = 13;
  strcpy((char *)&qword_2599780, "_To_Secondary");
  BYTE1(qword_25997A8) = 0;
  WORD1(qword_25997A8) = 0;
  HIDWORD(qword_25997A8) = 335544320;
  strcpy((char *)&dword_2599798, "_Spoken_To_Secon");
  strcpy(&byte_25997C7, "\t_ValidDistance");
  strcpy((char *)&qword_25997B0, "_Distance");
  byte_25997DF = 14;
  byte_25997F7 = 6;
  strcpy((char *)&dword_25997E0, "_Short");
  byte_259980F = 1;
  word_25997F8 = 95;
  qword_2599810 = (uint64_t)operator new(0x20uLL);
  unk_2599818 = v279;
  strcpy((char *)qword_2599810, "Concatenate_Newline_Sign");
  char v1 = (char *)operator new(0x19uLL);
  qword_2599828 = (uint64_t)v1;
  xmmword_2599830 = v280;
  *(_OWORD *)char v1 = v270;
  uint64_t v2 = *(void *)&v268[1];
  *(void *)(v1 + 15) = *(void *)&v268[1];
  v1[23] = 0;
  byte_2599857 = 12;
  strcpy((char *)&qword_2599840, "Chain_Spoken");
  byte_259986F = 15;
  strcpy((char *)&qword_2599858, "Chain_To_Spoken");
  strcpy(&byte_2599887, "\nThen_Spoken");
  strcpy((char *)&qword_2599870, "And_Spoken");
  byte_259989F = 11;
  byte_25998B7 = 18;
  strcpy((char *)&xmmword_25998A0, "Concatenate_Spoken");
  qword_25998B8 = (uint64_t)operator new(0x28uLL);
  long long v267 = xmmword_20B9240;
  xmmword_25998C0 = xmmword_20B9240;
  strcpy((char *)qword_25998B8, "At_Traffic_Light_Chain_Spoken_Primary");
  qword_25998D0 = (uint64_t)operator new(0x28uLL);
  v268[2] = xmmword_20B9260;
  unk_25998D8 = xmmword_20B9260;
  strcpy((char *)qword_25998D0, "At_Stop_Sign_Chain_Spoken_Primary");
  qword_25998E8 = (uint64_t)operator new(0x40uLL);
  xmmword_25998F0 = xmmword_20B9A90;
  strcpy((char *)qword_25998E8, "At_Stop_Sign_Cross_Traffic_Doesnt_Stop_Chain_Spoken_Primary");
  qword_2599900 = (uint64_t)operator new(0x30uLL);
  long long v266 = xmmword_20B9A40;
  unk_2599908 = xmmword_20B9A40;
  strcpy((char *)qword_2599900, "At_Next_Traffic_Light_Chain_Spoken_Primary");
  qword_2599918 = (uint64_t)operator new(0x28uLL);
  long long v265 = xmmword_20E12D0;
  xmmword_2599920 = xmmword_20E12D0;
  strcpy((char *)qword_2599918, "At_Next_Stop_Sign_Chain_Spoken_Primary");
  qword_2599930 = (uint64_t)operator new(0x28uLL);
  long long v274 = xmmword_20B9960;
  unk_2599938 = xmmword_20B9960;
  strcpy((char *)qword_2599930, "At_Traffic_Light_Chain_Spoken_Secondary");
  qword_2599948 = (uint64_t)operator new(0x28uLL);
  xmmword_2599950 = xmmword_20B93A0;
  strcpy((char *)qword_2599948, "At_Stop_Sign_Chain_Spoken_Secondary");
  qword_2599960 = (uint64_t)operator new(0x30uLL);
  long long v272 = xmmword_20E1380;
  unk_2599968 = xmmword_20E1380;
  strcpy((char *)qword_2599960, "At_Next_Traffic_Light_Chain_Spoken_Secondary");
  qword_2599978 = (uint64_t)operator new(0x30uLL);
  xmmword_2599980 = xmmword_20B93C0;
  strcpy((char *)qword_2599978, "At_Next_Stop_Sign_Chain_Spoken_Secondary");
  qword_2599990 = (uint64_t)operator new(0x38uLL);
  unk_2599998 = xmmword_20B9A60;
  strcpy((char *)qword_2599990, "At_Next_One_Traffic_Light_Chain_Spoken_Secondary");
  qword_25999A8 = (uint64_t)operator new(0x30uLL);
  xmmword_25999B0 = xmmword_20E1380;
  strcpy((char *)qword_25999A8, "At_Next_One_Stop_Sign_Chain_Spoken_Secondary");
  qword_25999C0 = (uint64_t)operator new(0x28uLL);
  unk_25999C8 = xmmword_20B9960;
  strcpy((char *)qword_25999C0, "At_Mini_Roundabout_Chain_Spoken_Primary");
  qword_25999D8 = (uint64_t)operator new(0x30uLL);
  long long v271 = xmmword_20B93D0;
  xmmword_25999E0 = xmmword_20B93D0;
  strcpy((char *)qword_25999D8, "At_Mini_Roundabout_Chain_Spoken_Secondary");
  qword_25999F0 = (uint64_t)operator new(0x20uLL);
  unk_25999F8 = v275;
  strcpy((char *)qword_25999F0, "Walking_Distance_Chain_Spoken");
  qword_2599A08 = (uint64_t)operator new(0x20uLL);
  xmmword_2599A10 = v275;
  strcpy((char *)qword_2599A08, "Walking_Continue_Chain_Spoken");
  uint64_t v3 = (char *)operator new(0x19uLL);
  qword_2599A20 = (uint64_t)v3;
  unk_2599A28 = v280;
  *(_OWORD *)uint64_t v3 = v270;
  *(void *)(v3 + 15) = v2;
  v3[23] = 0;
  qword_2599A38 = (uint64_t)operator new(0x28uLL);
  xmmword_2599A40 = v269;
  strcpy((char *)qword_2599A38, "Distance_Cross_The_Street_Spoken");
  byte_2599A67 = 22;
  strcpy((char *)&xmmword_2599A50, "Walking_Continue_Cross");
  byte_2599A7F = 14;
  strcpy((char *)&qword_2599A68, "Continue_Cross");
  byte_2599A97 = 5;
  strcpy((char *)&dword_2599A80, "Cross");
  byte_2599AAF = 19;
  strcpy((char *)&xmmword_2599A98, "Cross_Street_Spoken");
  byte_2599AC7 = 17;
  strcpy((char *)&xmmword_2599AB0, "Cross_Road_Spoken");
  byte_2599ADF = 20;
  strcpy((char *)&xmmword_2599AC8, "Use_Crosswalk_Spoken");
  byte_2599AF7 = 15;
  strcpy((char *)&qword_2599AE0, "Distance_Spoken");
  byte_2599B0F = 19;
  strcpy((char *)&xmmword_2599AF8, "Distance_And_Spoken");
  byte_2599B27 = 21;
  strcpy((char *)&xmmword_2599B10, "Continue_Stage_Spoken");
  byte_2599B3F = 13;
  qmemcpy(&qword_2599B28, "ContinueStage", 13);
  int v4 = SHIBYTE(qword_2599730);
  if (qword_2599730 >= 0) {
    size_t v5 = HIBYTE(qword_2599730);
  }
  else {
    size_t v5 = unk_2599728;
  }
  unint64_t v6 = v5 + 13;
  byte_2599B35 = 0;
  if (v5 + 13 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v6 >= 0x17)
  {
    uint64_t v8 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17) {
      uint64_t v8 = v6 | 7;
    }
    uint64_t v9 = v8 + 1;
    int64_t v10 = operator new(v8 + 1);
    qword_2599B48 = v5 + 13;
    unk_2599B50 = v9 | 0x8000000000000000;
    qword_2599B40 = (uint64_t)v10;
    *int64_t v10 = *(void *)"ContinueStage";
    int64_t v7 = (char *)v10 + 13;
    *(void *)((char *)v10 + 5) = *(void *)"nueStage";
  }
  else
  {
    BYTE1(qword_2599B48) = 0;
    WORD1(qword_2599B48) = 0;
    HIDWORD(qword_2599B48) = 0;
    unk_2599B50 = 0;
    byte_2599B57 = v5 + 13;
    int64_t v7 = (char *)&qword_2599B48 + 5;
    strcpy((char *)&qword_2599B40, "Continue");
    if (!v5) {
      goto LABEL_15;
    }
  }
  if (v4 >= 0) {
    int64_t v11 = &qword_2599720;
  }
  else {
    int64_t v11 = (uint64_t *)qword_2599720;
  }
  memmove(v7, v11, v5);
LABEL_15:
  v7[v5] = 0;
  int v12 = byte_2599377;
  if (byte_2599377 >= 0) {
    size_t v13 = byte_2599377;
  }
  else {
    size_t v13 = qword_2599368;
  }
  unint64_t v14 = v13 + 13;
  if (v13 + 13 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v14 >= 0x17)
  {
    uint64_t v16 = (v14 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v14 | 7) != 0x17) {
      uint64_t v16 = v14 | 7;
    }
    uint64_t v17 = v16 + 1;
    int64_t v18 = operator new(v16 + 1);
    __dst.__r_.__value_.__l.__size_ = v13 + 13;
    __dst.__r_.__value_.__r.__words[2] = v17 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v18;
    *int64_t v18 = qword_2599B28;
    *(void *)((char *)v18 + 5) = *(uint64_t *)((char *)&qword_2599B28 + 5);
    int v15 = (char *)v18 + 13;
  }
  else
  {
    *(_OWORD *)&__dst.__r_.__value_.__r.__words[1] = 0uLL;
    *(std::string::size_type *)((char *)__dst.__r_.__value_.__r.__words + 5) = *(uint64_t *)((char *)&qword_2599B28 + 5);
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v13 + 13;
    __dst.__r_.__value_.__r.__words[0] = qword_2599B28;
    int v15 = &__dst.__r_.__value_.__s.__data_[13];
    if (!v13) {
      goto LABEL_29;
    }
  }
  if (v12 >= 0) {
    uint64_t v19 = &qword_2599360;
  }
  else {
    uint64_t v19 = (uint64_t *)qword_2599360;
  }
  memmove(v15, v19, v13);
LABEL_29:
  v15[v13] = 0;
  if (v4 >= 0) {
    int64_t v20 = (const std::string::value_type *)&qword_2599720;
  }
  else {
    int64_t v20 = (const std::string::value_type *)qword_2599720;
  }
  uint64_t v21 = std::string::append(&__dst, v20, v5);
  long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  qword_2599B68 = v21->__r_.__value_.__r.__words[2];
  xmmword_2599B58 = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  byte_2599B87 = 5;
  strcpy((char *)&dword_2599B70, "Merge");
  qword_2599B88 = (uint64_t)operator new(0x20uLL);
  v268[1] = xmmword_20B8E90;
  *(_OWORD *)algn_2599B90 = xmmword_20B8E90;
  strcpy((char *)qword_2599B88, "Continue_Freeway_Spoken_Primary");
  byte_2599BB7 = 8;
  strcpy((char *)&qword_2599BA0, "Starting");
  byte_2599BCF = 14;
  strcpy((char *)&qword_2599BB8, "Starting_Route");
  byte_2599BE7 = 14;
  strcpy((char *)&qword_2599BD0, "Resuming_Route");
  byte_2599BFF = 16;
  strcpy((char *)&xmmword_2599BE8, "Continuing_Route");
  byte_2599C17 = 9;
  word_2599C08 = 112;
  qword_2599C00 = *(void *)&v264[48];
  strcpy(&byte_2599C2F, "\nEnding");
  strcpy((char *)&word_2599C20, "op");
  qword_2599C18 = *(void *)&v268[0];
  byte_2599C47 = 6;
  strcpy((char *)&qword_2599C48, "_Destination");
  byte_2599C5F = 12;
  byte_2599C77 = 15;
  strcpy((char *)&qword_2599C60, "_At_Destination");
  std::operator+<char>();
  qword_2599C90 = (uint64_t)operator new(0x20uLL);
  unk_2599C98 = v279;
  strcpy((char *)qword_2599C90, "Spoken_Ending_At_Parking");
  qword_2599CA8 = (uint64_t)operator new(0x20uLL);
  v268[0] = xmmword_20B9800;
  xmmword_2599CB0 = xmmword_20B9800;
  strcpy((char *)qword_2599CA8, "Spoken_Pre_Arrival_Destination");
  strcpy((char *)&xmmword_2599CC0, "Sign_Ending_At_Parking");
  HIBYTE(word_2599CD6) = 22;
  byte_2599CEF = 4;
  strcpy((char *)&qword_2599CD8, "Home");
  byte_2599D07 = 4;
  strcpy((char *)&qword_2599CF0, "Work");
  byte_2599D1F = 8;
  strcpy((char *)&qword_2599D08, "Business");
  byte_2599D37 = 4;
  strcpy((char *)&dword_2599D20, "Name");
  byte_2599D4F = 13;
  strcpy((char *)&qword_2599D38, "Other_Contact");
  byte_2599D67 = 11;
  strcpy((char *)&qword_2599D50, "ContactHome");
  byte_2599D7F = 11;
  *(_DWORD *)((char *)&qword_2599D68 + 7) = 1802661719;
  byte_2599D97 = 7;
  *(_DWORD *)((char *)&qword_2599D80 + 3) = 1936942450;
  LODWORD(qword_2599D80) = 1919181889;
  strcpy((char *)&xmmword_2599D98, "Discoverability_Prompt");
  HIBYTE(word_2599DAE) = 22;
  byte_2599DC7 = 6;
  dword_2599DB0 = 1634878303;
  word_2599DB4 = 26739;
  byte_2599DDF = 8;
  qword_2599DC8 = 0x697269535F6F4E5FLL;
  byte_2599DF7 = 9;
  strcpy((char *)&qword_2599DE0, "_CityName");
  byte_2599E0F = 8;
  qword_2599DF8 = 0x636972656E65475FLL;
  int v23 = byte_2599BB7;
  if (byte_2599BB7 >= 0) {
    size_t v24 = byte_2599BB7;
  }
  else {
    size_t v24 = qword_2599BA8;
  }
  LODWORD(v270) = byte_2598EF7;
  if (byte_2598EF7 >= 0) {
    size_t v25 = byte_2598EF7;
  }
  else {
    size_t v25 = unk_2598EE8;
  }
  qword_2599D68 = *(void *)"ContactWork";
  byte_2599D73 = 0;
  HIBYTE(qword_2599D80) = 0;
  byte_2599DB6 = 0;
  byte_2599DD0 = 0;
  byte_2599E00 = 0;
  unint64_t v26 = v25 + v24;
  if (v25 + v24 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  *(void *)v264 = *(void *)"ContactWork";
  *(void *)&v264[16] = *(void *)"ContactHome";
  *(void *)&v264[32] = *(void *)"_Contact";
  *(void *)&v264[48] = *(void *)"Other_Contact";
  if (v26 <= 0x16)
  {
    uint64_t v27 = &qword_2599E10;
    qword_2599E18 = 0;
    unk_2599E20 = 0;
    qword_2599E10 = 0;
    byte_2599E27 = v25 + v24;
    if (!v24) {
      goto LABEL_47;
    }
    goto LABEL_43;
  }
  uint64_t v90 = (v26 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v26 | 7) != 0x17) {
    uint64_t v90 = v26 | 7;
  }
  uint64_t v91 = v90 + 1;
  uint64_t v27 = (uint64_t *)operator new(v90 + 1);
  qword_2599E18 = v25 + v24;
  unk_2599E20 = v91 | 0x8000000000000000;
  qword_2599E10 = (uint64_t)v27;
  if (v24)
  {
LABEL_43:
    if (v23 >= 0) {
      int v28 = &qword_2599BA0;
    }
    else {
      int v28 = (uint64_t *)qword_2599BA0;
    }
    memmove(v27, v28, v24);
  }
LABEL_47:
  int v29 = (char *)v27 + v24;
  if (v25)
  {
    if ((int)v270 >= 0) {
      int64_t v30 = &qword_2598EE0;
    }
    else {
      int64_t v30 = (uint64_t *)qword_2598EE0;
    }
    memmove(v29, v30, v25);
  }
  v29[v25] = 0;
  int v31 = byte_2599C5F;
  if (byte_2599C5F >= 0) {
    size_t v32 = byte_2599C5F;
  }
  else {
    size_t v32 = qword_2599C50;
  }
  unint64_t v33 = v32 + v24;
  if (v32 + v24 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v33 <= 0x16)
  {
    int v34 = &qword_2599E28;
    qword_2599E30 = 0;
    unk_2599E38 = 0;
    qword_2599E28 = 0;
    byte_2599E3F = v32 + v24;
    if (!v24) {
      goto LABEL_62;
    }
    goto LABEL_58;
  }
  uint64_t v92 = (v33 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v33 | 7) != 0x17) {
    uint64_t v92 = v33 | 7;
  }
  uint64_t v93 = v92 + 1;
  int v34 = (uint64_t *)operator new(v92 + 1);
  qword_2599E30 = v32 + v24;
  unk_2599E38 = v93 | 0x8000000000000000;
  qword_2599E28 = (uint64_t)v34;
  if (v24)
  {
LABEL_58:
    if (v23 >= 0) {
      int v35 = &qword_2599BA0;
    }
    else {
      int v35 = (uint64_t *)qword_2599BA0;
    }
    memmove(v34, v35, v24);
  }
LABEL_62:
  int64_t v36 = (char *)v34 + v24;
  if (v32)
  {
    if (v31 >= 0) {
      uint64_t v37 = &qword_2599C48;
    }
    else {
      uint64_t v37 = (uint64_t *)qword_2599C48;
    }
    memmove(v36, v37, v32);
  }
  v36[v32] = 0;
  qword_2599E40 = (uint64_t)operator new(0x19uLL);
  unk_2599E48 = v280;
  strcpy((char *)qword_2599E40, "{ChargeStationCityName}");
  if (v33 < 0x17)
  {
    int64_t v38 = &qword_2599E58;
    qword_2599E60 = 0;
    unk_2599E68 = 0;
    qword_2599E58 = 0;
    byte_2599E6F = v32 + v24;
    if (!v24) {
      goto LABEL_73;
    }
    goto LABEL_69;
  }
  uint64_t v94 = (v33 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v33 | 7) != 0x17) {
    uint64_t v94 = v33 | 7;
  }
  uint64_t v95 = v94 + 1;
  int64_t v38 = (uint64_t *)operator new(v94 + 1);
  qword_2599E60 = v32 + v24;
  unk_2599E68 = v95 | 0x8000000000000000;
  qword_2599E58 = (uint64_t)v38;
  if (v24)
  {
LABEL_69:
    if (v23 >= 0) {
      uint64_t v39 = &qword_2599BA0;
    }
    else {
      uint64_t v39 = (uint64_t *)qword_2599BA0;
    }
    memmove(v38, v39, v24);
  }
LABEL_73:
  BOOL v40 = (char *)v38 + v24;
  if (v32)
  {
    if (v31 >= 0) {
      int v41 = &qword_2599C48;
    }
    else {
      int v41 = (uint64_t *)qword_2599C48;
    }
    memmove(v40, v41, v32);
  }
  v40[v32] = 0;
  strcpy((char *)&xmmword_2599E70, "{NewBatteryPercentage}");
  HIBYTE(word_2599E86) = 22;
  qword_2599E88 = (uint64_t)operator new(0x20uLL);
  xmmword_2599E90 = v273;
  strcpy((char *)qword_2599E88, "{OriginalBatteryPercentage}");
  byte_2599EB7 = 19;
  strcpy((char *)&xmmword_2599EA0, "_Arrival_Percentage");
  int v42 = byte_2599C47;
  if (byte_2599C47 >= 0) {
    size_t v43 = byte_2599C47;
  }
  else {
    size_t v43 = qword_2599C38;
  }
  unint64_t v44 = v43 + v25;
  if (v43 + v25 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v44 <= 0x16)
  {
    memset(&__dst, 0, sizeof(__dst));
    p_dst = (char *)&__dst;
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v43 + v25;
    if (!v43) {
      goto LABEL_88;
    }
    goto LABEL_84;
  }
  uint64_t v96 = (v44 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v44 | 7) != 0x17) {
    uint64_t v96 = v44 | 7;
  }
  uint64_t v97 = v96 + 1;
  p_dst = (char *)operator new(v96 + 1);
  __dst.__r_.__value_.__l.__size_ = v43 + v25;
  __dst.__r_.__value_.__r.__words[2] = v97 | 0x8000000000000000;
  __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
  if (v43)
  {
LABEL_84:
    if (v42 >= 0) {
      unint64_t v46 = &qword_2599C30;
    }
    else {
      unint64_t v46 = (uint64_t *)qword_2599C30;
    }
    memmove(p_dst, v46, v43);
  }
LABEL_88:
  v47 = &p_dst[v43];
  if (v25)
  {
    if ((int)v270 >= 0) {
      unint64_t v48 = &qword_2598EE0;
    }
    else {
      unint64_t v48 = (uint64_t *)qword_2598EE0;
    }
    memmove(v47, v48, v25);
  }
  v47[v25] = 0;
  unint64_t v49 = std::string::append(&__dst, "_Percentage");
  long long v50 = *(_OWORD *)&v49->__r_.__value_.__l.__data_;
  qword_2599EC8 = v49->__r_.__value_.__r.__words[2];
  xmmword_2599EB8 = v50;
  v49->__r_.__value_.__l.__size_ = 0;
  v49->__r_.__value_.__r.__words[2] = 0;
  v49->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  int v51 = byte_2599C47;
  if (byte_2599C47 >= 0) {
    size_t v52 = byte_2599C47;
  }
  else {
    size_t v52 = qword_2599C38;
  }
  int v53 = byte_2598EF7;
  if (byte_2598EF7 >= 0) {
    size_t v54 = byte_2598EF7;
  }
  else {
    size_t v54 = unk_2598EE8;
  }
  unint64_t v55 = v54 + v52;
  if (v54 + v52 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v55 <= 0x16)
  {
    memset(&v281, 0, sizeof(v281));
    v56 = (char *)&v281;
    *((unsigned char *)&v281.__r_.__value_.__s + 23) = v54 + v52;
    if (!v52) {
      goto LABEL_108;
    }
    goto LABEL_104;
  }
  uint64_t v98 = (v55 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v55 | 7) != 0x17) {
    uint64_t v98 = v55 | 7;
  }
  uint64_t v99 = v98 + 1;
  v56 = (char *)operator new(v98 + 1);
  v281.__r_.__value_.__l.__size_ = v54 + v52;
  v281.__r_.__value_.__r.__words[2] = v99 | 0x8000000000000000;
  v281.__r_.__value_.__r.__words[0] = (std::string::size_type)v56;
  if (v52)
  {
LABEL_104:
    if (v51 >= 0) {
      v57 = &qword_2599C30;
    }
    else {
      v57 = (uint64_t *)qword_2599C30;
    }
    memmove(v56, v57, v52);
  }
LABEL_108:
  v58 = &v56[v52];
  if (v54)
  {
    if (v53 >= 0) {
      v59 = &qword_2598EE0;
    }
    else {
      v59 = (uint64_t *)qword_2598EE0;
    }
    memmove(v58, v59, v54);
  }
  v58[v54] = 0;
  if (byte_2598F27 >= 0) {
    v60 = (const std::string::value_type *)&qword_2598F10;
  }
  else {
    v60 = (const std::string::value_type *)qword_2598F10;
  }
  if (byte_2598F27 >= 0) {
    std::string::size_type v61 = byte_2598F27;
  }
  else {
    std::string::size_type v61 = *(void *)&byte_2598F18;
  }
  v62 = std::string::append(&v281, v60, v61);
  long long v63 = *(_OWORD *)&v62->__r_.__value_.__l.__data_;
  __dst.__r_.__value_.__r.__words[2] = v62->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v63;
  v62->__r_.__value_.__l.__size_ = 0;
  v62->__r_.__value_.__r.__words[2] = 0;
  v62->__r_.__value_.__r.__words[0] = 0;
  v64 = std::string::append(&__dst, "_Percentage");
  long long v65 = *(_OWORD *)&v64->__r_.__value_.__l.__data_;
  qword_2599EE0 = v64->__r_.__value_.__r.__words[2];
  xmmword_2599ED0 = v65;
  v64->__r_.__value_.__l.__size_ = 0;
  v64->__r_.__value_.__r.__words[2] = 0;
  v64->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__dst.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v281.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_121;
    }
  }
  else if ((SHIBYTE(v281.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_121;
  }
  operator delete(v281.__r_.__value_.__l.__data_);
LABEL_121:
  int v66 = byte_2599C47;
  if (byte_2599C47 >= 0) {
    size_t v67 = byte_2599C47;
  }
  else {
    size_t v67 = qword_2599C38;
  }
  int v68 = byte_2598EF7;
  if (byte_2598EF7 >= 0) {
    size_t v69 = byte_2598EF7;
  }
  else {
    size_t v69 = unk_2598EE8;
  }
  unint64_t v70 = v69 + v67;
  if (v69 + v67 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v70 <= 0x16)
  {
    memset(&__dst, 0, sizeof(__dst));
    v71 = (char *)&__dst;
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v69 + v67;
    if (!v67) {
      goto LABEL_134;
    }
    goto LABEL_130;
  }
  uint64_t v100 = (v70 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v70 | 7) != 0x17) {
    uint64_t v100 = v70 | 7;
  }
  uint64_t v101 = v100 + 1;
  v71 = (char *)operator new(v100 + 1);
  __dst.__r_.__value_.__l.__size_ = v69 + v67;
  __dst.__r_.__value_.__r.__words[2] = v101 | 0x8000000000000000;
  __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v71;
  if (v67)
  {
LABEL_130:
    if (v66 >= 0) {
      v72 = &qword_2599C30;
    }
    else {
      v72 = (uint64_t *)qword_2599C30;
    }
    memmove(v71, v72, v67);
  }
LABEL_134:
  v73 = &v71[v67];
  if (v69)
  {
    if (v68 >= 0) {
      v74 = &qword_2598EE0;
    }
    else {
      v74 = (uint64_t *)qword_2598EE0;
    }
    memmove(v73, v74, v69);
  }
  v73[v69] = 0;
  v75 = std::string::append(&__dst, "_Duration");
  long long v76 = *(_OWORD *)&v75->__r_.__value_.__l.__data_;
  qword_2599EF8 = v75->__r_.__value_.__r.__words[2];
  xmmword_2599EE8 = v76;
  v75->__r_.__value_.__l.__size_ = 0;
  v75->__r_.__value_.__r.__words[2] = 0;
  v75->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  int v77 = byte_2599C47;
  if (byte_2599C47 >= 0) {
    size_t v78 = byte_2599C47;
  }
  else {
    size_t v78 = qword_2599C38;
  }
  int v79 = byte_2598EF7;
  if (byte_2598EF7 >= 0) {
    size_t v80 = byte_2598EF7;
  }
  else {
    size_t v80 = unk_2598EE8;
  }
  unint64_t v81 = v80 + v78;
  if (v80 + v78 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v81 <= 0x16)
  {
    qword_2599F08 = 0;
    unk_2599F10 = 0;
    qword_2599F00 = 0;
    v82 = &qword_2599F00;
    byte_2599F17 = v80 + v78;
    if (!v78) {
      goto LABEL_154;
    }
    goto LABEL_150;
  }
  uint64_t v102 = (v81 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v81 | 7) != 0x17) {
    uint64_t v102 = v81 | 7;
  }
  uint64_t v103 = v102 + 1;
  v82 = (uint64_t *)operator new(v102 + 1);
  qword_2599F08 = v80 + v78;
  unk_2599F10 = v103 | 0x8000000000000000;
  qword_2599F00 = (uint64_t)v82;
  if (v78)
  {
LABEL_150:
    if (v77 >= 0) {
      v83 = &qword_2599C30;
    }
    else {
      v83 = (uint64_t *)qword_2599C30;
    }
    memmove(v82, v83, v78);
  }
LABEL_154:
  v84 = (char *)v82 + v78;
  if (v80)
  {
    if (v79 >= 0) {
      v85 = &qword_2598EE0;
    }
    else {
      v85 = (uint64_t *)qword_2598EE0;
    }
    memmove(v84, v85, v80);
  }
  v84[v80] = 0;
  int v86 = byte_2599F17;
  if (byte_2599F17 >= 0) {
    size_t v87 = byte_2599F17;
  }
  else {
    size_t v87 = qword_2599F08;
  }
  unint64_t v88 = v87 + 5;
  if (v87 + 5 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v88 >= 0x17)
  {
    uint64_t v104 = (v88 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v88 | 7) != 0x17) {
      uint64_t v104 = v88 | 7;
    }
    uint64_t v105 = v104 + 1;
    v89 = (uint64_t *)operator new(v104 + 1);
    qword_2599F20 = v87 + 5;
    unk_2599F28 = v105 | 0x8000000000000000;
    qword_2599F18 = (uint64_t)v89;
  }
  else
  {
    v89 = &qword_2599F18;
    qword_2599F20 = 0;
    unk_2599F28 = 0;
    qword_2599F18 = 0;
    byte_2599F2F = v87 + 5;
    if (!v87) {
      goto LABEL_201;
    }
  }
  if (v86 >= 0) {
    v106 = &qword_2599F00;
  }
  else {
    v106 = (uint64_t *)qword_2599F00;
  }
  memmove(v89, v106, v87);
LABEL_201:
  strcpy((char *)v89 + v87, "_Name");
  int v107 = byte_2599C47;
  if (byte_2599C47 >= 0) {
    size_t v108 = byte_2599C47;
  }
  else {
    size_t v108 = qword_2599C38;
  }
  int v109 = byte_2598EF7;
  if (byte_2598EF7 >= 0) {
    size_t v110 = byte_2598EF7;
  }
  else {
    size_t v110 = unk_2598EE8;
  }
  unint64_t v111 = v110 + v108;
  if (v110 + v108 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v111 <= 0x16)
  {
    memset(&__dst, 0, sizeof(__dst));
    v112 = (char *)&__dst;
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v110 + v108;
    if (!v108) {
      goto LABEL_214;
    }
    goto LABEL_210;
  }
  uint64_t v122 = (v111 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v111 | 7) != 0x17) {
    uint64_t v122 = v111 | 7;
  }
  uint64_t v123 = v122 + 1;
  v112 = (char *)operator new(v122 + 1);
  __dst.__r_.__value_.__l.__size_ = v110 + v108;
  __dst.__r_.__value_.__r.__words[2] = v123 | 0x8000000000000000;
  __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v112;
  if (v108)
  {
LABEL_210:
    if (v107 >= 0) {
      v113 = &qword_2599C30;
    }
    else {
      v113 = (uint64_t *)qword_2599C30;
    }
    memmove(v112, v113, v108);
  }
LABEL_214:
  v114 = &v112[v108];
  if (v110)
  {
    if (v109 >= 0) {
      v115 = &qword_2598EE0;
    }
    else {
      v115 = (uint64_t *)qword_2598EE0;
    }
    memmove(v114, v115, v110);
  }
  v114[v110] = 0;
  v116 = std::string::append(&__dst, "_Connector_Type");
  long long v117 = *(_OWORD *)&v116->__r_.__value_.__l.__data_;
  qword_2599F40 = v116->__r_.__value_.__r.__words[2];
  xmmword_2599F30 = v117;
  v116->__r_.__value_.__l.__size_ = 0;
  v116->__r_.__value_.__r.__words[2] = 0;
  v116->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  int v118 = SHIBYTE(qword_2599F40);
  if (qword_2599F40 >= 0) {
    size_t v119 = HIBYTE(qword_2599F40);
  }
  else {
    size_t v119 = *((void *)&xmmword_2599F30 + 1);
  }
  unint64_t v120 = v119 + 6;
  if (v119 + 6 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v120 >= 0x17)
  {
    uint64_t v124 = (v120 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v120 | 7) != 0x17) {
      uint64_t v124 = v120 | 7;
    }
    uint64_t v125 = v124 + 1;
    v121 = (uint64_t *)operator new(v124 + 1);
    qword_2599F50 = v119 + 6;
    unk_2599F58 = v125 | 0x8000000000000000;
    qword_2599F48 = (uint64_t)v121;
  }
  else
  {
    v121 = &qword_2599F48;
    qword_2599F50 = 0;
    unk_2599F58 = 0;
    qword_2599F48 = 0;
    byte_2599F5F = v119 + 6;
    if (!v119) {
      goto LABEL_239;
    }
  }
  if (v118 >= 0) {
    v126 = &xmmword_2599F30;
  }
  else {
    v126 = (long long *)xmmword_2599F30;
  }
  memmove(v121, v126, v119);
LABEL_239:
  strcpy((char *)v121 + v119, "_Power");
  int v127 = byte_2599C47;
  if (byte_2599C47 >= 0) {
    size_t v128 = byte_2599C47;
  }
  else {
    size_t v128 = qword_2599C38;
  }
  int v129 = byte_2598EF7;
  if (byte_2598EF7 >= 0) {
    size_t v130 = byte_2598EF7;
  }
  else {
    size_t v130 = unk_2598EE8;
  }
  unint64_t v131 = v130 + v128;
  if (v130 + v128 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v131 <= 0x16)
  {
    memset(&__dst, 0, sizeof(__dst));
    v132 = (char *)&__dst;
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v130 + v128;
    if (!v128) {
      goto LABEL_252;
    }
    goto LABEL_248;
  }
  uint64_t v161 = (v131 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v131 | 7) != 0x17) {
    uint64_t v161 = v131 | 7;
  }
  uint64_t v162 = v161 + 1;
  v132 = (char *)operator new(v161 + 1);
  __dst.__r_.__value_.__l.__size_ = v130 + v128;
  __dst.__r_.__value_.__r.__words[2] = v162 | 0x8000000000000000;
  __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v132;
  if (v128)
  {
LABEL_248:
    if (v127 >= 0) {
      v133 = &qword_2599C30;
    }
    else {
      v133 = (uint64_t *)qword_2599C30;
    }
    memmove(v132, v133, v128);
  }
LABEL_252:
  v134 = &v132[v128];
  if (v130)
  {
    if (v129 >= 0) {
      v135 = &qword_2598EE0;
    }
    else {
      v135 = (uint64_t *)qword_2598EE0;
    }
    memmove(v134, v135, v130);
  }
  v134[v130] = 0;
  if (byte_25996BF >= 0) {
    v136 = (const std::string::value_type *)&qword_25996A8;
  }
  else {
    v136 = (const std::string::value_type *)qword_25996A8;
  }
  if (byte_25996BF >= 0) {
    std::string::size_type v137 = byte_25996BF;
  }
  else {
    std::string::size_type v137 = unk_25996B0;
  }
  v138 = std::string::append(&__dst, v136, v137);
  long long v139 = *(_OWORD *)&v138->__r_.__value_.__l.__data_;
  qword_2599F70 = v138->__r_.__value_.__r.__words[2];
  xmmword_2599F60 = v139;
  v138->__r_.__value_.__l.__size_ = 0;
  v138->__r_.__value_.__r.__words[2] = 0;
  v138->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  int v140 = byte_2599C47;
  if (byte_2599C47 >= 0) {
    size_t v141 = byte_2599C47;
  }
  else {
    size_t v141 = qword_2599C38;
  }
  int v142 = byte_2598EF7;
  if (byte_2598EF7 >= 0) {
    size_t v143 = byte_2598EF7;
  }
  else {
    size_t v143 = unk_2598EE8;
  }
  unint64_t v144 = v143 + v141;
  if (v143 + v141 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v144 <= 0x16)
  {
    memset(&v281, 0, sizeof(v281));
    v145 = (char *)&v281;
    *((unsigned char *)&v281.__r_.__value_.__s + 23) = v143 + v141;
    if (!v141) {
      goto LABEL_278;
    }
    goto LABEL_274;
  }
  uint64_t v163 = (v144 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v144 | 7) != 0x17) {
    uint64_t v163 = v144 | 7;
  }
  uint64_t v164 = v163 + 1;
  v145 = (char *)operator new(v163 + 1);
  v281.__r_.__value_.__l.__size_ = v143 + v141;
  v281.__r_.__value_.__r.__words[2] = v164 | 0x8000000000000000;
  v281.__r_.__value_.__r.__words[0] = (std::string::size_type)v145;
  if (v141)
  {
LABEL_274:
    if (v140 >= 0) {
      v146 = &qword_2599C30;
    }
    else {
      v146 = (uint64_t *)qword_2599C30;
    }
    memmove(v145, v146, v141);
  }
LABEL_278:
  v147 = &v145[v141];
  if (v143)
  {
    if (v142 >= 0) {
      v148 = &qword_2598EE0;
    }
    else {
      v148 = (uint64_t *)qword_2598EE0;
    }
    memmove(v147, v148, v143);
  }
  v147[v143] = 0;
  if (byte_2598F27 >= 0) {
    v149 = (const std::string::value_type *)&qword_2598F10;
  }
  else {
    v149 = (const std::string::value_type *)qword_2598F10;
  }
  if (byte_2598F27 >= 0) {
    std::string::size_type v150 = byte_2598F27;
  }
  else {
    std::string::size_type v150 = *(void *)&byte_2598F18;
  }
  v151 = std::string::append(&v281, v149, v150);
  long long v152 = *(_OWORD *)&v151->__r_.__value_.__l.__data_;
  __dst.__r_.__value_.__r.__words[2] = v151->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v152;
  v151->__r_.__value_.__l.__size_ = 0;
  v151->__r_.__value_.__r.__words[2] = 0;
  v151->__r_.__value_.__r.__words[0] = 0;
  if (byte_25996BF >= 0) {
    v153 = (const std::string::value_type *)&qword_25996A8;
  }
  else {
    v153 = (const std::string::value_type *)qword_25996A8;
  }
  if (byte_25996BF >= 0) {
    std::string::size_type v154 = byte_25996BF;
  }
  else {
    std::string::size_type v154 = unk_25996B0;
  }
  v155 = std::string::append(&__dst, v153, v154);
  long long v156 = *(_OWORD *)&v155->__r_.__value_.__l.__data_;
  qword_2599F88 = v155->__r_.__value_.__r.__words[2];
  xmmword_2599F78 = v156;
  v155->__r_.__value_.__l.__size_ = 0;
  v155->__r_.__value_.__r.__words[2] = 0;
  v155->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__dst.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v281.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_297;
    }
  }
  else if ((SHIBYTE(v281.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_297;
  }
  operator delete(v281.__r_.__value_.__l.__data_);
LABEL_297:
  byte_2599FA7 = 16;
  strcpy((char *)&xmmword_2599F90, "Use_NACS_Adapter");
  byte_2599FBF = 16;
  strcpy(byte_2599FA8, "Start_Route_Sign");
  qword_2599FC0 = (uint64_t)operator new(0x20uLL);
  unk_2599FC8 = v276;
  strcpy((char *)qword_2599FC0, "Start_Route_Spoken_Primary");
  int v157 = byte_2598657;
  if (byte_2598657 >= 0) {
    size_t v158 = byte_2598657;
  }
  else {
    size_t v158 = qword_2598648;
  }
  unint64_t v159 = v158 + 27;
  if (v158 + 27 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v159 <= 0x16)
  {
    v160 = &qword_2599FD8;
    qword_2599FE0 = 0;
    unk_2599FE8 = 0;
    qword_2599FD8 = 0;
    byte_2599FEF = v158 + 27;
LABEL_314:
    if (v157 >= 0) {
      v167 = &qword_2598640;
    }
    else {
      v167 = (uint64_t *)qword_2598640;
    }
    memmove(v160, v167, v158);
    goto LABEL_318;
  }
  uint64_t v165 = (v159 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v159 | 7) != 0x17) {
    uint64_t v165 = v159 | 7;
  }
  uint64_t v166 = v165 + 1;
  v160 = (uint64_t *)operator new(v165 + 1);
  qword_2599FE0 = v158 + 27;
  unk_2599FE8 = v166 | 0x8000000000000000;
  qword_2599FD8 = (uint64_t)v160;
  if (v158) {
    goto LABEL_314;
  }
LABEL_318:
  strcpy((char *)v160 + v158, "Turn_Around_To_Route_Spoken");
  strcpy(&byte_259A007, "\t_Two_Lanes");
  strcpy((char *)&qword_2599FF0, "_One_Lane");
  strcpy(&byte_259A01F, "\n_Three_Lanes");
  byte_259A037 = 12;
  byte_259A04F = 11;
  strcpy((char *)&qword_259A038, "_Four_Lanes");
  byte_259A067 = 11;
  strcpy((char *)&qword_259A050, "_Five_Lanes");
  strcpy(&byte_259A07F, "\n_Seven_Lanes");
  strcpy((char *)&qword_259A068, "_Six_Lanes");
  byte_259A097 = 12;
  byte_259A0AF = 12;
  strcpy((char *)&qword_259A098, "_Eight_Lanes");
  byte_259A0C7 = 12;
  strcpy((char *)&qword_259A0B0, "_Second_Lane");
  byte_259A0DF = 11;
  strcpy((char *)&qword_259A0C8, "_Third_Lane");
  byte_259A0F7 = 19;
  long long v270 = *(_OWORD *)"_Second_Third_Lanes";
  strcpy((char *)&xmmword_259A0E0, "_Second_Third_Lanes");
  byte_259A10F = 4;
  strcpy((char *)&dword_259A0F8, "Left");
  byte_259A127 = 5;
  byte_259A114 = 116;
  dword_259A110 = 1751607634;
  byte_259A115 = 0;
  byte_259A13F = 6;
  strcpy((char *)&dword_259A128, "Middle");
  BYTE1(qword_259A150) = 0;
  WORD1(qword_259A150) = 0;
  HIDWORD(qword_259A150) = 0x10000000;
  strcpy((char *)dword_259A140, "Left_Second_Lane");
  BYTE1(qword_259A168) = 0;
  WORD1(qword_259A168) = 0;
  HIDWORD(qword_259A168) = 285212672;
  strcpy((char *)&dword_259A158, "Right_Second_Lan");
  qword_259A180 = 0xF00000000000000;
  strcpy((char *)&dword_259A170, "Left_Third_Lane");
  qword_259A198 = 0x1000000000000000;
  byte_259A18C = 116;
  dword_259A188 = 1751607634;
  dword_259A194 = 1701732684;
  unk_259A18D = *(void *)"_Third_Lane";
  v168 = (char *)operator new(0x19uLL);
  qword_259A1A0 = (uint64_t)v168;
  unk_259A1A8 = v280;
  *(_DWORD *)v168 = 1952867660;
  strcpy(v168 + 19, "anes");
  *(_OWORD *)(v168 + 4) = v270;
  v169 = (char *)operator new(0x20uLL);
  qword_259A1B8 = (uint64_t)v169;
  xmmword_259A1C0 = v279;
  *(_DWORD *)v169 = 1751607634;
  v169[4] = 116;
  strcpy(v169 + 20, "anes");
  *(_OWORD *)(v169 + 5) = v270;
  byte_259A1E7 = 5;
  strcpy((char *)&dword_259A1D0, "_Stay");
  byte_259A1FF = 13;
  strcpy((char *)&qword_259A1E8, "Continue_Sign");
  byte_259A217 = 8;
  strcpy((char *)&qword_259A200, "Continue");
  int v170 = byte_25996D7;
  if (byte_25996D7 >= 0) {
    size_t v171 = byte_25996D7;
  }
  else {
    size_t v171 = qword_25996C8;
  }
  unint64_t v172 = v171 + 8;
  if (v171 + 8 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v172 >= 0x17)
  {
    uint64_t v174 = (v172 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v172 | 7) != 0x17) {
      uint64_t v174 = v172 | 7;
    }
    uint64_t v175 = v174 + 1;
    v176 = operator new(v174 + 1);
    qword_259A220 = v171 + 8;
    qword_259A228 = v175 | 0x8000000000000000;
    qword_259A218 = (uint64_t)v176;
    void *v176 = 0x65756E69746E6F43;
    v173 = v176 + 1;
  }
  else
  {
    qword_259A228 = 0;
    HIBYTE(qword_259A228) = v171 + 8;
    qword_259A218 = 0x65756E69746E6F43;
    qword_259A220 = 0;
    v173 = &qword_259A220;
    if (!v171) {
      goto LABEL_332;
    }
  }
  if (v170 >= 0) {
    v177 = &qword_25996C0;
  }
  else {
    v177 = (uint64_t *)qword_25996C0;
  }
  memmove(v173, v177, v171);
LABEL_332:
  *((unsigned char *)v173 + v171) = 0;
  int v178 = SHIBYTE(qword_2599730);
  if (qword_2599730 >= 0) {
    size_t v179 = HIBYTE(qword_2599730);
  }
  else {
    size_t v179 = unk_2599728;
  }
  unint64_t v180 = v179 + 8;
  if (v179 + 8 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v180 >= 0x17)
  {
    uint64_t v182 = (v180 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v180 | 7) != 0x17) {
      uint64_t v182 = v180 | 7;
    }
    uint64_t v183 = v182 + 1;
    v184 = operator new(v182 + 1);
    qword_259A238 = v179 + 8;
    qword_259A240 = v183 | 0x8000000000000000;
    qword_259A230 = (uint64_t)v184;
    void *v184 = qword_259A200;
    v181 = v184 + 1;
  }
  else
  {
    qword_259A240 = 0;
    HIBYTE(qword_259A240) = v179 + 8;
    qword_259A230 = qword_259A200;
    qword_259A238 = 0;
    v181 = &qword_259A238;
    if (!v179) {
      goto LABEL_346;
    }
  }
  if (v178 >= 0) {
    v185 = &qword_2599720;
  }
  else {
    v185 = (uint64_t *)qword_2599720;
  }
  memmove(v181, v185, v179);
LABEL_346:
  *((unsigned char *)v181 + v179) = 0;
  *((unsigned char *)&__dst.__r_.__value_.__s + 23) = 1;
  LOWORD(__dst.__r_.__value_.__l.__data_) = 83;
  HIBYTE(v284) = 2;
  strcpy((char *)&v283, "SW");
  HIBYTE(v286) = 1;
  LOWORD(v285[0]) = 87;
  HIBYTE(v288) = 2;
  strcpy((char *)&v287, "NW");
  HIBYTE(v290) = 1;
  LOWORD(v289[0]) = 78;
  HIBYTE(v292) = 2;
  strcpy((char *)&v291, "NE");
  HIBYTE(v294) = 1;
  LOWORD(v293) = 69;
  HIBYTE(v296) = 2;
  strcpy((char *)&__p, "SE");
  sub_4BDC0C(qword_259A248, (uint64_t)&__dst, 8uLL);
  if (SHIBYTE(v296) < 0)
  {
    operator delete((void *)__p);
    if ((SHIBYTE(v294) & 0x80000000) == 0)
    {
LABEL_348:
      if ((SHIBYTE(v292) & 0x80000000) == 0) {
        goto LABEL_349;
      }
      goto LABEL_383;
    }
  }
  else if ((SHIBYTE(v294) & 0x80000000) == 0)
  {
    goto LABEL_348;
  }
  operator delete((void *)v293);
  if ((SHIBYTE(v292) & 0x80000000) == 0)
  {
LABEL_349:
    if ((SHIBYTE(v290) & 0x80000000) == 0) {
      goto LABEL_350;
    }
    goto LABEL_384;
  }
LABEL_383:
  operator delete((void *)v291);
  if ((SHIBYTE(v290) & 0x80000000) == 0)
  {
LABEL_350:
    if ((SHIBYTE(v288) & 0x80000000) == 0) {
      goto LABEL_351;
    }
    goto LABEL_385;
  }
LABEL_384:
  operator delete(v289[0]);
  if ((SHIBYTE(v288) & 0x80000000) == 0)
  {
LABEL_351:
    if ((SHIBYTE(v286) & 0x80000000) == 0) {
      goto LABEL_352;
    }
    goto LABEL_386;
  }
LABEL_385:
  operator delete((void *)v287);
  if ((SHIBYTE(v286) & 0x80000000) == 0)
  {
LABEL_352:
    if ((SHIBYTE(v284) & 0x80000000) == 0) {
      goto LABEL_353;
    }
LABEL_387:
    operator delete((void *)v283);
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_354;
    }
    goto LABEL_388;
  }
LABEL_386:
  operator delete(v285[0]);
  if (SHIBYTE(v284) < 0) {
    goto LABEL_387;
  }
LABEL_353:
  if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    goto LABEL_354;
  }
LABEL_388:
  operator delete(__dst.__r_.__value_.__l.__data_);
LABEL_354:
  byte_259A277 = 13;
  strcpy((char *)&qword_259A260, "{instruction}");
  byte_259A28F = 20;
  strcpy(byte_259A278, "{primaryInstruction}");
  strcpy((char *)&xmmword_259A290, "{secondaryInstruction}");
  HIBYTE(word_259A2A6) = 22;
  qword_259A2A8 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_259A2B0 = v278;
  strcpy((char *)qword_259A2A8, "{andSecondaryInstruction}");
  qword_259A2C0 = (uint64_t)operator new(0x20uLL);
  unk_259A2C8 = v279;
  strcpy((char *)qword_259A2C0, "{toSecondaryInstruction}");
  byte_259A2EF = 21;
  strcpy(byte_259A2D8, "{continueInstruction}");
  qword_259A2F0 = (uint64_t)operator new(0x20uLL);
  unk_259A2F8 = v276;
  strcpy((char *)qword_259A2F0, "{thenSecondaryInstruction}");
  byte_259A31F = 14;
  strcpy((char *)&qword_259A308, "{instruction1}");
  byte_259A337 = 14;
  strcpy((char *)&qword_259A320, "{instruction2}");
  strcpy(&byte_259A34F, "\n{nextDistance}");
  strcpy((char *)&qword_259A338, "{distance}");
  byte_259A367 = 14;
  byte_259A37F = 16;
  strcpy(byte_259A368, "{valid_distance}");
  strcpy(&byte_259A397, "\n{valid_distance}");
  strcpy((char *)&qword_259A380, "{distance}");
  byte_259A3AF = 16;
  byte_259A3C7 = 15;
  strcpy((char *)&qword_259A3B0, "{ClimbDistance}");
  byte_259A3DF = 17;
  strcpy(byte_259A3C8, "{DescentDistance}");
  byte_259A3F7 = 13;
  strcpy((char *)&qword_259A3E0, "{nonBrkSpace}");
  byte_259A40F = 9;
  strcpy((char *)&qword_259A3F8, "{newLine}");
  byte_259A427 = 6;
  word_259A414 = -24382;
  dword_259A410 = -1211981630;
  byte_259A416 = 0;
  byte_259A43F = 2;
  word_259A428 = -24382;
  byte_259A42A = 0;
  byte_259A457 = 1;
  word_259A440 = 10;
  byte_259A46F = 1;
  word_259A458 = 32;
  byte_259A487 = 2;
  strcpy((char *)&word_259A470, "\n\n");
  strcpy(&byte_259A49F, "\t{TowardShield1}");
  strcpy((char *)&qword_259A488, "{Shield1}");
  byte_259A4B7 = 15;
  strcpy(&byte_259A4CF, "\t{TowardShield2}");
  strcpy((char *)&qword_259A4B8, "{Shield2}");
  byte_259A4E7 = 15;
  byte_259A4FF = 12;
  strcpy((char *)&qword_259A4E8, "{Direction1}");
  byte_259A517 = 12;
  strcpy((char *)&qword_259A500, "{Direction2}");
  byte_259A52F = 18;
  strcpy((char *)&xmmword_259A518, "{TowardDirection1}");
  byte_259A547 = 18;
  strcpy((char *)&xmmword_259A530, "{TowardDirection2}");
  byte_259A55F = 7;
  strcpy((char *)&dword_259A548, "{Icon1}");
  byte_259A577 = 7;
  strcpy((char *)&dword_259A560, "{Icon2}");
  byte_259A578[23] = 14;
  strcpy(byte_259A578, "{Intersection}");
  byte_259A5A7 = 6;
  strcpy((char *)&xmmword_259A590, "{Road}");
  byte_259A5BF = 7;
  strcpy((char *)&dword_259A5A8, "{Road1}");
  byte_259A5D7 = 7;
  strcpy((char *)&xmmword_259A5C0, "{Road2}");
  strcpy(&byte_259A5EF, "\n{Freeway}");
  strcpy((char *)&qword_259A5D8, "{Elevator}");
  strcpy(&byte_259A607, "\t{Ferry}");
  byte_259A61F = 7;
  byte_259A637 = 13;
  strcpy((char *)&xmmword_259A620, "{ShuttleName}");
  byte_259A64F = 11;
  strcpy((char *)&qword_259A638, "{Signpost1}");
  byte_259A667 = 11;
  strcpy((char *)&xmmword_259A650, "{Signpost2}");
  byte_259A67F = 12;
  strcpy((char *)&xmmword_259A668, "{ExitNumber}");
  strcpy(&byte_259A697, "\t{Name}");
  strcpy((char *)&xmmword_259A680, "{Address}");
  byte_259A6AF = 6;
  byte_259A6C7 = 11;
  strcpy((char *)&xmmword_259A6B0, "{PlaceName}");
  byte_259A6DF = 14;
  strcpy((char *)&xmmword_259A6C8, "{ElevatorName}");
  byte_259A6F7 = 15;
  strcpy((char *)&xmmword_259A6E0, "{EscalatorName}");
  byte_259A70F = 12;
  strcpy((char *)&xmmword_259A6F8, "{StairsName}");
  strcpy(&byte_259A727, "\n{BridgeName}");
  strcpy((char *)&xmmword_259A710, "{RampName}");
  byte_259A73F = 12;
  byte_259A757 = 12;
  strcpy((char *)&xmmword_259A740, "{TunnelName}");
  byte_259A76F = 13;
  strcpy((char *)&xmmword_259A758, "{CustomLabel}");
  std::string __dst = *(std::string *)byte_259A578;
  long long v283 = xmmword_259A590;
  uint64_t v284 = unk_259A5A0;
  *(_OWORD *)v285 = *(_OWORD *)&dword_259A5A8;
  uint64_t v286 = unk_259A5B8;
  long long v287 = xmmword_259A5C0;
  uint64_t v288 = unk_259A5D0;
  *(_OWORD *)v289 = *(_OWORD *)&qword_259A5D8;
  uint64_t v290 = unk_259A5E8;
  uint64_t v292 = unk_259A600;
  long long v291 = xmmword_259A5F0;
  long long v293 = *(_OWORD *)&dword_259A608;
  uint64_t v294 = unk_259A618;
  uint64_t v296 = unk_259A630;
  long long __p = xmmword_259A620;
  long long v297 = *(_OWORD *)&qword_259A638;
  uint64_t v298 = unk_259A648;
  uint64_t v300 = unk_259A660;
  long long v299 = xmmword_259A650;
  long long v301 = xmmword_259A668;
  long long v303 = xmmword_259A680;
  uint64_t v302 = unk_259A678;
  uint64_t v304 = unk_259A690;
  long long v305 = xmmword_259A698;
  long long v307 = xmmword_259A6B0;
  uint64_t v306 = unk_259A6A8;
  uint64_t v308 = unk_259A6C0;
  long long v309 = xmmword_259A6C8;
  long long v311 = xmmword_259A6E0;
  uint64_t v310 = unk_259A6D8;
  uint64_t v312 = unk_259A6F0;
  long long v313 = xmmword_259A6F8;
  long long v315 = xmmword_259A710;
  uint64_t v314 = unk_259A708;
  uint64_t v316 = unk_259A720;
  long long v317 = xmmword_259A728;
  long long v319 = xmmword_259A740;
  uint64_t v318 = unk_259A738;
  uint64_t v320 = unk_259A750;
  uint64_t v322 = unk_259A768;
  long long v321 = xmmword_259A758;
  sub_4BDC0C(qword_259A770, (uint64_t)&__dst, 0x15uLL);
  if (SHIBYTE(v322) < 0)
  {
    operator delete((void *)v321);
    if ((SHIBYTE(v320) & 0x80000000) == 0)
    {
LABEL_356:
      if ((SHIBYTE(v318) & 0x80000000) == 0) {
        goto LABEL_357;
      }
      goto LABEL_391;
    }
  }
  else if ((SHIBYTE(v320) & 0x80000000) == 0)
  {
    goto LABEL_356;
  }
  operator delete((void *)v319);
  if ((SHIBYTE(v318) & 0x80000000) == 0)
  {
LABEL_357:
    if ((SHIBYTE(v316) & 0x80000000) == 0) {
      goto LABEL_358;
    }
    goto LABEL_392;
  }
LABEL_391:
  operator delete((void *)v317);
  if ((SHIBYTE(v316) & 0x80000000) == 0)
  {
LABEL_358:
    if ((SHIBYTE(v314) & 0x80000000) == 0) {
      goto LABEL_359;
    }
    goto LABEL_393;
  }
LABEL_392:
  operator delete((void *)v315);
  if ((SHIBYTE(v314) & 0x80000000) == 0)
  {
LABEL_359:
    if ((SHIBYTE(v312) & 0x80000000) == 0) {
      goto LABEL_360;
    }
    goto LABEL_394;
  }
LABEL_393:
  operator delete((void *)v313);
  if ((SHIBYTE(v312) & 0x80000000) == 0)
  {
LABEL_360:
    if ((SHIBYTE(v310) & 0x80000000) == 0) {
      goto LABEL_361;
    }
    goto LABEL_395;
  }
LABEL_394:
  operator delete((void *)v311);
  if ((SHIBYTE(v310) & 0x80000000) == 0)
  {
LABEL_361:
    if ((SHIBYTE(v308) & 0x80000000) == 0) {
      goto LABEL_362;
    }
    goto LABEL_396;
  }
LABEL_395:
  operator delete((void *)v309);
  if ((SHIBYTE(v308) & 0x80000000) == 0)
  {
LABEL_362:
    if ((SHIBYTE(v306) & 0x80000000) == 0) {
      goto LABEL_363;
    }
    goto LABEL_397;
  }
LABEL_396:
  operator delete((void *)v307);
  if ((SHIBYTE(v306) & 0x80000000) == 0)
  {
LABEL_363:
    if ((SHIBYTE(v304) & 0x80000000) == 0) {
      goto LABEL_364;
    }
    goto LABEL_398;
  }
LABEL_397:
  operator delete((void *)v305);
  if ((SHIBYTE(v304) & 0x80000000) == 0)
  {
LABEL_364:
    if ((SHIBYTE(v302) & 0x80000000) == 0) {
      goto LABEL_365;
    }
    goto LABEL_399;
  }
LABEL_398:
  operator delete((void *)v303);
  if ((SHIBYTE(v302) & 0x80000000) == 0)
  {
LABEL_365:
    if ((SHIBYTE(v300) & 0x80000000) == 0) {
      goto LABEL_366;
    }
    goto LABEL_400;
  }
LABEL_399:
  operator delete((void *)v301);
  if ((SHIBYTE(v300) & 0x80000000) == 0)
  {
LABEL_366:
    if ((SHIBYTE(v298) & 0x80000000) == 0) {
      goto LABEL_367;
    }
    goto LABEL_401;
  }
LABEL_400:
  operator delete((void *)v299);
  if ((SHIBYTE(v298) & 0x80000000) == 0)
  {
LABEL_367:
    if ((SHIBYTE(v296) & 0x80000000) == 0) {
      goto LABEL_368;
    }
    goto LABEL_402;
  }
LABEL_401:
  operator delete((void *)v297);
  if ((SHIBYTE(v296) & 0x80000000) == 0)
  {
LABEL_368:
    if ((SHIBYTE(v294) & 0x80000000) == 0) {
      goto LABEL_369;
    }
    goto LABEL_403;
  }
LABEL_402:
  operator delete((void *)__p);
  if ((SHIBYTE(v294) & 0x80000000) == 0)
  {
LABEL_369:
    if ((SHIBYTE(v292) & 0x80000000) == 0) {
      goto LABEL_370;
    }
    goto LABEL_404;
  }
LABEL_403:
  operator delete((void *)v293);
  if ((SHIBYTE(v292) & 0x80000000) == 0)
  {
LABEL_370:
    if ((SHIBYTE(v290) & 0x80000000) == 0) {
      goto LABEL_371;
    }
    goto LABEL_405;
  }
LABEL_404:
  operator delete((void *)v291);
  if ((SHIBYTE(v290) & 0x80000000) == 0)
  {
LABEL_371:
    if ((SHIBYTE(v288) & 0x80000000) == 0) {
      goto LABEL_372;
    }
    goto LABEL_406;
  }
LABEL_405:
  operator delete(v289[0]);
  if ((SHIBYTE(v288) & 0x80000000) == 0)
  {
LABEL_372:
    if ((SHIBYTE(v286) & 0x80000000) == 0) {
      goto LABEL_373;
    }
    goto LABEL_407;
  }
LABEL_406:
  operator delete((void *)v287);
  if ((SHIBYTE(v286) & 0x80000000) == 0)
  {
LABEL_373:
    if ((SHIBYTE(v284) & 0x80000000) == 0) {
      goto LABEL_374;
    }
LABEL_408:
    operator delete((void *)v283);
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_375;
    }
    goto LABEL_409;
  }
LABEL_407:
  operator delete(v285[0]);
  if (SHIBYTE(v284) < 0) {
    goto LABEL_408;
  }
LABEL_374:
  if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    goto LABEL_375;
  }
LABEL_409:
  operator delete(__dst.__r_.__value_.__l.__data_);
LABEL_375:
  qword_259A788 = (uint64_t)operator new(0x19uLL);
  unk_259A790 = v280;
  strcpy((char *)qword_259A788, "From_User_Location_List");
  byte_259A7B7 = 20;
  strcpy(byte_259A7A0, "Origin_Waypoint_List");
  qword_259A7B8 = (uint64_t)operator new(0x20uLL);
  unk_259A7C0 = v276;
  strcpy((char *)qword_259A7B8, "Intermediate_Waypoint_List");
  unk_259A7D0 = operator new(0x20uLL);
  unk_259A7D8 = v278;
  strcpy(unk_259A7D0, "Destination_Waypoint_List");
  byte_259A7FF = 15;
  strcpy(byte_259A7E8, "{toDestination}");
  byte_259A817 = 13;
  strcpy((char *)&xmmword_259A800, "{Destination}");
  byte_259A82F = 7;
  strcpy(byte_259A818, "To_Home");
  byte_259A847 = 14;
  strcpy(byte_259A830, "To_ContactHome");
  byte_259A85F = 7;
  strcpy(byte_259A848, "To_Work");
  byte_259A877 = 14;
  strcpy(byte_259A860, "To_ContactWork");
  strcpy(&byte_259A88F, "\nTo_Business");
  strcpy(byte_259A878, "To_Address");
  byte_259A8A7 = 11;
  byte_259A8BF = 16;
  strcpy(byte_259A8A8, "To_Other_Contact");
  strcpy(&byte_259A8D7, "\tTo_ContactSchool");
  strcpy(byte_259A8C0, "To_School");
  byte_259A8EF = 16;
  byte_259A907 = 17;
  strcpy(algn_259A8F0, "To_PersonLocation");
  qword_259A908 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_259A910 = v277;
  strcpy((char *)qword_259A908, "To_ContactCustomLabelAddress");
  byte_259A937 = 7;
  strcpy((char *)&dword_259A920, "At_Home");
  byte_259A94F = 14;
  strcpy((char *)&qword_259A938, "At_ContactHome");
  byte_259A967 = 7;
  strcpy((char *)&dword_259A950, "At_Work");
  byte_259A97F = 14;
  strcpy((char *)&qword_259A968, "At_ContactWork");
  strcpy(&byte_259A997, "\nAt_Business");
  strcpy((char *)&qword_259A980, "At_Address");
  byte_259A9AF = 11;
  byte_259A9C7 = 16;
  strcpy(algn_259A9B0, "At_Other_Contact");
  byte_259A9DF = 4;
  strcpy((char *)&dword_259A9C8, "Home");
  byte_259A9F7 = 11;
  strcpy((char *)&qword_259A9E0 + 7, "Home");
  qword_259A9E0 = *(void *)&v264[16];
  byte_259AA0F = 4;
  strcpy((char *)&dword_259A9F8, "Work");
  byte_259AA27 = 11;
  strcpy((char *)&qword_259AA10 + 7, "Work");
  qword_259AA10 = *(void *)v264;
  byte_259AA3F = 7;
  strcpy((char *)&dword_259AA28, "Address");
  byte_259AA57 = 8;
  strcpy((char *)&qword_259AA40, "Business");
  byte_259AA6F = 13;
  qword_259AA58 = *(void *)&v264[48];
  *(uint64_t *)((char *)&qword_259AA58 + 5) = *(void *)&v264[32];
  byte_259AA65 = 0;
  byte_259AA87 = 6;
  strcpy((char *)&dword_259AA70, "School");
  byte_259AA9F = 13;
  strcpy((char *)&qword_259AA88, "ContactSchool");
  byte_259AAB7 = 14;
  strcpy((char *)&qword_259AAA0, "PersonLocation");
  qword_259AAB8 = (uint64_t)operator new(0x20uLL);
  xmmword_259AAC0 = v278;
  strcpy((char *)qword_259AAB8, "ContactCustomLabelAddress");
  if (byte_259A817 < 0)
  {
    sub_4200(&xmmword_259AAD0, (void *)xmmword_259A800, *((unint64_t *)&xmmword_259A800 + 1));
  }
  else
  {
    xmmword_259AAD0 = xmmword_259A800;
    qword_259AAE0 = unk_259A810;
  }
  byte_259AAFF = 16;
  strcpy((char *)&xmmword_259AAE8, "{PrevExitNumber}");
  byte_259AB17 = 10;
  strcpy((char *)&qword_259AB00, "{PrevRoad}");
  qword_259AB18 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_259AB20 = v279;
  strcpy((char *)qword_259AB18, "{RouteTotalExpectedTime}");
  byte_259AB47 = 18;
  strcpy(&algn_259AB20[16], "{ChargePercentage}");
  qword_259AB48 = (uint64_t)operator new(0x20uLL);
  unk_259AB50 = v273;
  strcpy((char *)qword_259AB48, "{RemainingChargePercentage}");
  byte_259AB77 = 16;
  strcpy(byte_259AB60, "{ChargeDuration}");
  byte_259AB8F = 15;
  strcpy((char *)&qword_259AB78, "{ConnectorType}");
  byte_259ABA7 = 19;
  strcpy((char *)&qword_259AB90, "{ChargeStationName}");
  byte_259ABBF = 7;
  strcpy((char *)&dword_259ABA8, "{Power}");
  byte_259ABD7 = 13;
  strcpy((char *)&qword_259ABC0, "{VehicleName}");
  byte_259ABEF = 18;
  strcpy((char *)&xmmword_259ABD8, "{AreaIncidentName}");
  byte_259AC07 = 14;
  strcpy((char *)&qword_259ABF0, "{AreaIncident}");
  byte_259AC1F = 16;
  strcpy((char *)&xmmword_259AC08, "{AffectedRegion}");
  byte_259AC37 = 21;
  strcpy(byte_259AC20, "{AreaIncidentWeblink}");
  byte_259AC4F = 20;
  strcpy((char *)&xmmword_259AC38, "{AreaIncidentAgency}");
  byte_259AC67 = 11;
  strcpy((char *)&qword_259AC50, "{IssueTime}");
  byte_259AC7F = 12;
  strcpy((char *)&qword_259AC68, "{UpdateTime}");
  byte_259AC97 = 11;
  strcpy((char *)&qword_259AC80, "{IssueDate}");
  byte_259ACAF = 12;
  strcpy((char *)&qword_259AC98, "{UpdateDate}");
  qword_259ACB0 = (uint64_t)operator new(0x20uLL);
  unk_259ACB8 = v279;
  strcpy((char *)qword_259ACB0, "{AreaIncidentDataSource}");
  byte_259ACDF = 13;
  strcpy((char *)&qword_259ACC8, "{AreaHectare}");
  byte_259ACF7 = 10;
  strcpy((char *)&qword_259ACE0, "{AreaAcre}");
  qword_259ACF8 = (uint64_t)operator new(0x20uLL);
  unk_259AD00 = v275;
  strcpy((char *)qword_259ACF8, "{WildfirePercentageContained}");
  qword_259AD10 = (uint64_t)operator new(0x28uLL);
  unk_259AD18 = v268[2];
  strcpy((char *)qword_259AD10, "{WildfireExpectedContainmentDate}");
  qword_259AD28 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_259AD30 = v277;
  strcpy((char *)qword_259AD28, "{ServerRecommendedRouteName}");
  qword_259AD40 = (uint64_t)operator new(0x20uLL);
  unk_259AD48 = v277;
  strcpy((char *)qword_259AD40, "{ServerNonRecommendedRoute1}");
  qword_259AD58 = (uint64_t)operator new(0x20uLL);
  unk_259AD60 = v277;
  strcpy((char *)qword_259AD58, "{ServerNonRecommendedRoute2}");
  byte_259AD87 = 12;
  strcpy((char *)&qword_259AD70, "{ClientDest}");
  byte_259AD9F = 6;
  strcpy((char *)&dword_259AD88, "{Name}");
  qword_259ADA0 = (uint64_t)operator new(0x20uLL);
  unk_259ADA8 = v268[1];
  strcpy((char *)qword_259ADA0, "ProactiveAlert_FasterRouteTitle");
  qword_259ADB8 = (uint64_t)operator new(0x20uLL);
  unk_259ADC0 = v276;
  strcpy((char *)qword_259ADB8, "ProactiveAlert_RoadClosure");
  qword_259ADD0 = (uint64_t)operator new(0x30uLL);
  unk_259ADD8 = v271;
  strcpy((char *)qword_259ADD0, "ProactiveAlert_UnusuallyHeavyTrafficOnTwo");
  qword_259ADE8 = (uint64_t)operator new(0x28uLL);
  *(_OWORD *)algn_259ADF0 = v274;
  strcpy((char *)qword_259ADE8, "ProactiveAlert_FasterRouteTitle_to_Home");
  qword_259AE00 = (uint64_t)operator new(0x28uLL);
  unk_259AE08 = v274;
  strcpy((char *)qword_259AE00, "ProactiveAlert_FasterRouteTitle_to_Work");
  qword_259AE18 = (uint64_t)operator new(0x28uLL);
  unk_259AE20 = v274;
  strcpy((char *)qword_259AE18, "ProactiveAlert_FasterRouteTitle_to_Name");
  qword_259AE30 = (uint64_t)operator new(0x30uLL);
  unk_259AE38 = xmmword_20B93B0;
  strcpy((char *)qword_259AE30, "ProactiveAlert_FasterRouteTitle_to_StreetName");
  byte_259AE5F = 17;
  strcpy(byte_259AE48, "Proactive_Driving");
  strcpy(&byte_259AE77, "\n{RouteName}");
  strcpy((char *)&qword_259AE60, "_RouteName");
  byte_259AE8F = 11;
  qword_259AE90 = (uint64_t)operator new(0x28uLL);
  unk_259AE98 = v268[2];
  strcpy((char *)qword_259AE90, "Pass_Traffic_Light_Spoken_Primary");
  qword_259AEA8 = (uint64_t)operator new(0x20uLL);
  unk_259AEB0 = v275;
  strcpy((char *)qword_259AEA8, "Pass_Stop_Sign_Spoken_Primary");
  unk_259AEC0 = operator new(0x20uLL);
  unk_259AEC8 = v268[0];
  strcpy(unk_259AEC0, "Pass_Roundabout_Spoken_Primary");
  strcpy(&byte_259AEEF, "\nBannerBody");
  strcpy(byte_259AED8, "BannerHead");
  strcpy(&byte_259AF07, "\nBannerDescription");
  byte_259AF1F = 17;
  strcpy(&byte_259AF37, "\n_Incident");
  strcpy((char *)&qword_259AF20, "VoiceAlert");
  strcpy(&byte_259AF4F, "\t_Area_Incident");
  byte_259AF67 = 14;
  byte_259AF7F = 15;
  strcpy((char *)&qword_259AF68, "_Area_Incidents");
  strcpy(&byte_259AF97, "\t_Crash");
  strcpy((char *)&qword_259AF80, "_Accident");
  byte_259AFAF = 6;
  byte_259AFC7 = 16;
  strcpy((char *)&xmmword_259AFB0, "_Congestion_Zone");
  strcpy(&byte_259AFDF, "\n_Environmental_Zone");
  strcpy((char *)&qword_259AFC8, "_Toll_Zone");
  byte_259AFF7 = 19;
  BYTE1(qword_259B008) = 116;
  WORD1(qword_259B008) = 0;
  HIDWORD(qword_259B008) = 301989888;
  strcpy(byte_259B010, "_Construction");
  strcpy((char *)&qword_259AFF8, "_Incident_Accide");
  byte_259B027 = 13;
  byte_259B03F = 7;
  strcpy((char *)&dword_259B028, "_Hazard");
  byte_259B057 = 12;
  strcpy((char *)&qword_259B040, "_LaneClosure");
  byte_259B06F = 12;
  strcpy((char *)&qword_259B058, "_LaneTrailer");
  qmemcpy(&byte_259B087, "\t_LaneTrailer", 13);
  strcpy((char *)&qword_259B070, "_Shoulder");
  qword_259B098 = 0x1500007200000000;
  *(void *)algn_259B094 = *(void *)"_Shoulder";
  strcpy((char *)&xmmword_259B0A0, "_Causing_Traffic_Delay");
  HIBYTE(word_259B0B6) = 22;
  byte_259B0CF = 6;
  strcpy((char *)&dword_259B0B8, "_Timed");
  byte_259B0E7 = 12;
  strcpy((char *)&qword_259B0D0, "_HasDistance");
  byte_259B0FF = 8;
  strcpy((char *)&qword_259B0E8, "_Closure");
  strcpy(&byte_259B117, "\n_BadRoad");
  strcpy((char *)&qword_259B100, "_NoReroute");
  byte_259B12F = 8;
  byte_259B147 = 12;
  strcpy((char *)&qword_259B130, "_TollTrailer");
  byte_259B15F = 12;
  strcpy((char *)&qword_259B148, "_BestTrailer");
  byte_259B177 = 8;
  strcpy((char *)&qword_259B160, "_Trailer");
  byte_259B18F = 18;
  strcpy((char *)&xmmword_259B178, "_Secondary_Trailer");
  byte_259B1A7 = 8;
  strcpy((char *)&qword_259B190, "_Savings");
  byte_259B1BF = 8;
  strcpy((char *)&qword_259B1A8, "_AltRoad");
  byte_259B1D7 = 6;
  strcpy((char *)&dword_259B1C0, "_Named");
  byte_259B1EF = 6;
  strcpy((char *)&dword_259B1D8, "_NAMED");
  byte_259B207 = 22;
  strcpy((char *)&xmmword_259B1F0, "_Named_Suggested_Route");
  qword_259B220 = 0x1000000000000000;
  xmmword_259B210 = xmmword_20E81D0;
  byte_259B23F = 11;
  strcpy((char *)&qword_259B228, "_Speed_Trap");
  byte_259B257 = 4;
  strcpy((char *)&dword_259B240, "_UGI");
  byte_259B26F = 12;
  strcpy((char *)&qword_259B258, "_Safer_Route");
  qword_259B270 = (uint64_t)operator new(0x20uLL);
  unk_259B278 = v268[1];
  strcpy((char *)qword_259B270, "BlockedRouteByBlockingIncident_");
  qword_259B288 = (uint64_t)operator new(0x28uLL);
  long long v270 = xmmword_20B9280;
  *(_OWORD *)algn_259B290 = xmmword_20B9280;
  strcpy((char *)qword_259B288, "BlockedRouteByManeuverRestriction_");
  qword_259B2A0 = (uint64_t)operator new(0x20uLL);
  unk_259B2A8 = v268[0];
  strcpy((char *)qword_259B2A0, "BlockedRouteByTimeRestriction_");
  qword_259B2B8 = (uint64_t)operator new(0x28uLL);
  unk_259B2C0 = xmmword_20B8FD0;
  strcpy((char *)qword_259B2B8, "SuggestRouteToAvoidBlockingIncident_");
  qword_259B2D0 = (uint64_t)operator new(0x30uLL);
  unk_259B2D8 = xmmword_20B9380;
  strcpy((char *)qword_259B2D0, "SuggestRouteToAvoidBlockingManeuverRestriction_");
  qword_259B2E8 = (uint64_t)operator new(0x30uLL);
  *(_OWORD *)algn_259B2F0 = xmmword_20B93E0;
  strcpy((char *)qword_259B2E8, "SuggestRouteToAvoidBlockingTimeRestriction_");
  byte_259B317 = 1;
  word_259B300 = 95;
  strcpy((char *)&xmmword_259B318, "IncidentsCausingDelay_");
  HIBYTE(word_259B32E) = 22;
  qword_259B330 = (uint64_t)operator new(0x19uLL);
  unk_259B338 = v280;
  strcpy((char *)qword_259B330, "NonVotableRoadIncident_");
  byte_259B35F = 20;
  strcpy(byte_259B348, "VotableRoadIncident_");
  byte_259B377 = 13;
  strcpy((char *)&qword_259B360, "AreaIncident_");
  byte_259B38F = 15;
  strcpy((char *)&qword_259B378, "CongestionZone_");
  qword_259B390 = (uint64_t)operator new(0x20uLL);
  unk_259B398 = v279;
  strcpy((char *)qword_259B390, "EVModifiedChargingStops_");
  byte_259B3BF = 13;
  strcpy((char *)&qword_259B3A8, "EVDisconnect_");
  byte_259B3D7 = 12;
  strcpy((char *)&qword_259B3C0, "EVReconnect_");
  qword_259B3D8 = (uint64_t)operator new(0x20uLL);
  unk_259B3E0 = v277;
  strcpy((char *)qword_259B3D8, "EVOfflineToOnlineTransition_");
  byte_259B407 = 13;
  strcpy((char *)&qword_259B3F0, "EVOfflineSAR_");
  byte_259B41F = 21;
  strcpy((char *)&xmmword_259B408, "EVTowingNotSupported_");
  byte_259B437 = 18;
  strcpy(byte_259B420, "EVInfeasibleRoute_");
  qword_259B438 = (uint64_t)operator new(0x38uLL);
  unk_259B440 = xmmword_20B8DF0;
  strcpy((char *)qword_259B438, "SuggestRouteAddingStopsBeforeEVInfeasibleOriginalStop_");
  qword_259B450 = (uint64_t)operator new(0x40uLL);
  unk_259B458 = xmmword_20B98C0;
  strcpy((char *)qword_259B450, "LCSuggestRouteAddingStopsBeforeEVInfeasibleOriginalStop_");
  qword_259B468 = (uint64_t)operator new(0x30uLL);
  *(_OWORD *)algn_259B470 = v272;
  strcpy((char *)qword_259B468, "SuggestRouteAddingStopsForEVInfeasibleRoute_");
  qmemcpy(v268, "InfeasibleRoute_ngStopsForEVInfeSuggestRouteAddi", sizeof(v268));
  qword_259B480 = (uint64_t)operator new(0x30uLL);
  *(_WORD *)&v264[50] = 0;
  *(_DWORD *)&v264[52] = 0;
  *(void *)&v264[56] = 0x8000000000000030;
  unk_259B488 = xmmword_20B9A80;
  strcpy((char *)qword_259B480, "LCSuggestRouteAddingStopsForEVInfeasibleRoute_");
  strcpy(v264, "InfeasibleRoute_dingStopsForEVInLCSuggestRouteAd.");
  qword_259B498 = (uint64_t)operator new(0x30uLL);
  unk_259B4A0 = v271;
  strcpy((char *)qword_259B498, "SuggestRouteAddingStopsToIncreaseDestSoc_");
  v186 = operator new(0x30uLL);
  qword_259B4B0 = (uint64_t)v186;
  unk_259B4B8 = v272;
  _OWORD *v186 = v268[2];
  v186[1] = v268[1];
  *(_OWORD *)((char *)v186 + 28) = v268[0];
  *((unsigned char *)v186 + 44) = 0;
  qword_259B4C8 = (uint64_t)operator new(0x28uLL);
  *(_OWORD *)algn_259B4D0 = v270;
  strcpy((char *)qword_259B4C8, "SuggestDetourWithHigherArrivalSOC_");
  v187 = operator new(0x30uLL);
  qword_259B4E0 = (uint64_t)v187;
  unk_259B4E8 = *(_OWORD *)&v264[48];
  _OWORD *v187 = *(_OWORD *)&v264[32];
  v187[1] = *(_OWORD *)&v264[16];
  *(_OWORD *)((char *)v187 + 30) = *(_OWORD *)v264;
  *((unsigned char *)v187 + 46) = 0;
  qword_259B4F8 = (uint64_t)operator new(0x28uLL);
  unk_259B500 = v274;
  strcpy((char *)qword_259B4F8, "SuggestRouteToDestForEVInfeasibleRoute_");
  qword_259B510 = (uint64_t)operator new(0x28uLL);
  unk_259B518 = v267;
  strcpy((char *)qword_259B510, "SuggestRouteRemovingStopsFromEVRoute_");
  qword_259B528 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_259B530 = v279;
  strcpy((char *)qword_259B528, "OfflineToOnlineNewRoute_");
  qword_259B540 = (uint64_t)operator new(0x40uLL);
  unk_259B548 = xmmword_20B98C0;
  strcpy((char *)qword_259B540, "SuggestDetourWithHigherArrivalSOCForInfeasibleUserRoute_");
  byte_259B56F = 20;
  strcpy((char *)&xmmword_259B558, "LPR_OFFLINE_REROUTE_");
  byte_259B587 = 16;
  strcpy(algn_259B570, "LPR_OFFLINE_SAR_");
  byte_259B59F = 20;
  strcpy((char *)&xmmword_259B588, "LPR_OFFLINE_REROUTE_");
  byte_259B5B7 = 16;
  strcpy(byte_259B5A0, "LPR_OFFLINE_SAR_");
  byte_259B5CF = 19;
  strcpy((char *)&xmmword_259B5B8, "SuggestFasterRoute_");
  qword_259B5D0 = (char *)operator new(0x20uLL);
  xmmword_259B5D8 = v278;
  strcpy(qword_259B5D0, "AreaIncidentSaferReroute_");
  byte_259B5FF = 12;
  strcpy((char *)&qword_259B5E8, "_Remove_Stop");
  byte_259B617 = 13;
  strcpy((char *)&qword_259B600, "_Remove_Stops");
  strcpy(&byte_259B62F, "\t_Add_Stops");
  strcpy((char *)&qword_259B618, "_Add_Stop");
  strcpy(&byte_259B647, "\n_Change_Route");
  byte_259B65F = 13;
  byte_259B677 = 15;
  strcpy((char *)&qword_259B660, "_Different_Stop");
  byte_259B68F = 16;
  strcpy((char *)&xmmword_259B678, "_Different_Stops");
  byte_259B6A7 = 15;
  strcpy((char *)&qword_259B690, "_EV_Remove_Stop");
  byte_259B6BF = 16;
  strcpy((char *)&xmmword_259B6A8, "_EV_Remove_Stops");
  byte_259B6D7 = 12;
  strcpy((char *)&qword_259B6C0, "_EV_Add_Stop");
  byte_259B6EF = 13;
  strcpy((char *)&qword_259B6D8, "_EV_Add_Stops");
  byte_259B707 = 15;
  strcpy((char *)&qword_259B6F0, "_EV_Low_Battery");
  byte_259B71F = 14;
  strcpy((char *)&qword_259B708, "_EV_Infeasible");
  byte_259B737 = 15;
  strcpy((char *)&qword_259B720, "_EV_Last_Chance");
  qword_259B738 = (uint64_t)operator new(0x20uLL);
  unk_259B740 = v279;
  strcpy((char *)qword_259B738, "_EV_Low_Battery_Add_Stop");
  uint64_t v188 = qword_259B638;
  qword_259B750 = (uint64_t)operator new(0x20uLL);
  unk_259B758 = v278;
  strcpy((char *)qword_259B750, "_EV_Low_Battery_Add_Stops");
  qword_259B768 = (uint64_t)operator new(0x19uLL);
  *(_OWORD *)algn_259B770 = v280;
  strcpy((char *)qword_259B768, "_EV_Infeasible_Add_Stop");
  int v189 = byte_259B647;
  if (byte_259B647 >= 0) {
    size_t v190 = byte_259B647;
  }
  else {
    size_t v190 = v188;
  }
  unint64_t v191 = v190 + 14;
  if (v190 + 14 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v191 >= 0x17)
  {
    uint64_t v194 = (v191 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v191 | 7) != 0x17) {
      uint64_t v194 = v191 | 7;
    }
    uint64_t v195 = v194 + 1;
    v196 = (char *)operator new(v194 + 1);
    qword_259B788 = v190 + 14;
    unk_259B790 = v195 | 0x8000000000000000;
    qword_259B780 = (uint64_t)v196;
    qmemcpy(v196, "_EV_Infeasible", 14);
    v192 = v196 + 14;
  }
  else
  {
    BYTE1(qword_259B788) = 0;
    WORD1(qword_259B788) = 0;
    HIDWORD(qword_259B788) = 0;
    unk_259B790 = 0;
    byte_259B797 = v190 + 14;
    strcpy((char *)&qword_259B780, "_EV_Infe");
    v192 = (char *)&qword_259B788 + 6;
    if (!v190)
    {
      char v193 = 1;
      goto LABEL_425;
    }
  }
  if (v189 >= 0) {
    uint64_t v197 = (uint64_t)&qword_259B630;
  }
  else {
    uint64_t v197 = 0x6F74535F6464415FLL;
  }
  memmove(v192, (const void *)v197, v190);
  char v193 = 0;
LABEL_425:
  v192[v190] = 0;
  v198 = (char *)operator new(0x20uLL);
  qword_259B798 = (uint64_t)v198;
  unk_259B7A0 = v279;
  *(void *)v198 = qword_259B720;
  *(void *)(v198 + 7) = *(uint64_t *)((char *)&qword_259B720 + 7);
  *(void *)(v198 + 15) = qword_259B618;
  v198[23] = word_259B620;
  v198[24] = 0;
  unint64_t v199 = v190 + 15;
  if (v190 + 15 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v199 > 0x16)
  {
    uint64_t v201 = (v199 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v199 | 7) != 0x17) {
      uint64_t v201 = v199 | 7;
    }
    uint64_t v202 = v201 + 1;
    v200 = (uint64_t *)operator new(v201 + 1);
    qword_259B7B8 = v190 + 15;
    unk_259B7C0 = v202 | 0x8000000000000000;
    qword_259B7B0 = (uint64_t)v200;
  }
  else
  {
    v200 = &qword_259B7B0;
    qword_259B7B8 = 0;
    unk_259B7C0 = 0;
    qword_259B7B0 = 0;
    byte_259B7C7 = v190 + 15;
  }
  uint64_t *v200 = qword_259B720;
  *(uint64_t *)((char *)v200 + 7) = *(uint64_t *)((char *)&qword_259B720 + 7);
  v203 = (char *)v200 + 15;
  if ((v193 & 1) == 0)
  {
    if (v189 >= 0) {
      v204 = &qword_259B630;
    }
    else {
      v204 = (uint64_t *)qword_259B630;
    }
    memmove((char *)v200 + 15, v204, v190);
  }
  v203[v190] = 0;
  byte_259B7DF = 17;
  strcpy((char *)&xmmword_259B7C8, "_EV_Forced_Detour");
  qword_259B7E0 = (uint64_t)operator new(0x20uLL);
  unk_259B7E8 = v278;
  strcpy((char *)qword_259B7E0, "_EV_Higher_Arrival_Charge");
  qword_259B7F8 = (uint64_t)operator new(0x28uLL);
  unk_259B800 = xmmword_20B8FD0;
  strcpy((char *)qword_259B7F8, "_EV_Infeasible_Higher_Arrival_Charge");
  byte_259B827 = 16;
  strcpy(byte_259B810, "_EV_Out_Of_Range");
  qword_259B828 = (uint64_t)operator new(0x20uLL);
  unk_259B830 = v273;
  strcpy((char *)qword_259B828, "_EV_Last_Chance_Take_Detour");
  strcpy(byte_259B840, "_EV_Forced_Modify_Stop");
  HIBYTE(word_259B856) = 22;
  qword_259B858 = (uint64_t)operator new(0x19uLL);
  unk_259B860 = v280;
  strcpy((char *)qword_259B858, "_EV_Forced_Modify_Stops");
  byte_259B887 = 19;
  strcpy(byte_259B870, "_EV_Forced_Add_Stop");
  byte_259B89F = 20;
  strcpy((char *)&xmmword_259B888, "_EV_Forced_Add_Stops");
  byte_259B8B7 = 21;
  strcpy(byte_259B8A0, "_EV_Battery_Info_Lost");
  qword_259B8B8 = (uint64_t)operator new(0x20uLL);
  unk_259B8C0 = v278;
  strcpy((char *)qword_259B8B8, "_EV_Battery_Info_Restored");
  qword_259B8D0 = (uint64_t)operator new(0x20uLL);
  unk_259B8D8 = v279;
  strcpy((char *)qword_259B8D0, "_EV_Towing_Not_Supported");
  qword_259B8E8 = (uint64_t)operator new(0x28uLL);
  *(_OWORD *)algn_259B8F0 = v269;
  strcpy((char *)qword_259B8E8, "_EV_Offline_to_Online_Transition");
  byte_259B917 = 15;
  strcpy((char *)&qword_259B900, "_EV_Offline_SAR");
  qword_259B918 = (uint64_t)operator new(0x20uLL);
  unk_259B920 = v277;
  strcpy((char *)qword_259B918, "_Offline_to_Online_New_Route");
  byte_259B947 = 12;
  strcpy((char *)&qword_259B930, "BannerButton");
  byte_259B95F = 8;
  strcpy((char *)&qword_259B948, "_Dismiss");
  byte_259B977 = 3;
  word_259B960 = 20319;
  byte_259B962 = 75;
  byte_259B963 = 0;
  byte_259B98F = 11;
  strcpy((char *)&qword_259B978, "_Still_Here");
  byte_259B9A7 = 8;
  strcpy((char *)&qword_259B990, "_Cleared");
  qmemcpy(&byte_259B9BF, "\nBannerButton", 13);
  strcpy((char *)&qword_259B9A8, "_No_Thanks");
  uint64_t v205 = qword_259B938;
  qword_259B9D0 = 0x1400000000000000;
  *(void *)algn_259B9CC = 0x7373696D7369445FLL;
  qword_259B9E8 = 0xF00000000000000;
  qword_259B9E0 = 0x4B4F5F6E6F7474;
  int v206 = byte_259B6D7;
  if (byte_259B6D7 >= 0) {
    size_t v207 = byte_259B6D7;
  }
  else {
    size_t v207 = qword_259B6C8;
  }
  unint64_t v208 = v207 + 12;
  qword_259B9D8 = *(void *)"BannerButton";
  if (v207 + 12 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v208 >= 0x17)
  {
    uint64_t v210 = (v208 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v208 | 7) != 0x17) {
      uint64_t v210 = v208 | 7;
    }
    uint64_t v211 = v210 + 1;
    v212 = (char *)operator new(v210 + 1);
    qword_259B9F8 = v207 + 12;
    unk_259BA00 = v211 | 0x8000000000000000;
    qword_259B9F0 = (uint64_t)v212;
    *((_DWORD *)v212 + 2) = 1852798068;
    *(void *)v212 = *(void *)"BannerButton";
    v209 = v212 + 12;
  }
  else
  {
    BYTE5(qword_259B9F8) = 0;
    HIWORD(qword_259B9F8) = 0;
    unk_259BA00 = 0;
    byte_259BA07 = v207 + 12;
    strcpy((char *)&qword_259B9F0, "BannerButton");
    v209 = (char *)&qword_259B9F8 + 4;
    if (!v207) {
      goto LABEL_450;
    }
  }
  if (v206 >= 0) {
    v213 = &qword_259B6C0;
  }
  else {
    v213 = (uint64_t *)qword_259B6C0;
  }
  memmove(v209, v213, v207);
LABEL_450:
  v209[v207] = 0;
  int v214 = byte_259B6EF;
  if (byte_259B6EF >= 0) {
    size_t v215 = byte_259B6EF;
  }
  else {
    size_t v215 = unk_259B6E0;
  }
  unint64_t v216 = v215 + 12;
  if (v215 + 12 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v216 >= 0x17)
  {
    uint64_t v218 = (v216 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v216 | 7) != 0x17) {
      uint64_t v218 = v216 | 7;
    }
    uint64_t v219 = v218 + 1;
    v220 = (char *)operator new(v218 + 1);
    qword_259BA10 = v215 + 12;
    unk_259BA18 = v219 | 0x8000000000000000;
    qword_259BA08 = (uint64_t)v220;
    *(void *)v220 = qword_259B930;
    *((_DWORD *)v220 + 2) = qword_259B938;
    v217 = v220 + 12;
  }
  else
  {
    qword_259BA10 = 0;
    unk_259BA18 = 0;
    byte_259BA1F = v215 + 12;
    LODWORD(qword_259BA10) = qword_259B938;
    qword_259BA08 = qword_259B930;
    v217 = (char *)&qword_259BA10 + 4;
    if (!v215) {
      goto LABEL_464;
    }
  }
  if (v214 >= 0) {
    v221 = &qword_259B6D8;
  }
  else {
    v221 = (uint64_t *)qword_259B6D8;
  }
  memmove(v217, v221, v215);
LABEL_464:
  v217[v215] = 0;
  int v222 = byte_259B6A7;
  if (byte_259B6A7 >= 0) {
    size_t v223 = byte_259B6A7;
  }
  else {
    size_t v223 = unk_259B698;
  }
  unint64_t v224 = v223 + 12;
  if (v223 + 12 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v224 >= 0x17)
  {
    uint64_t v226 = (v224 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v224 | 7) != 0x17) {
      uint64_t v226 = v224 | 7;
    }
    uint64_t v227 = v226 + 1;
    v228 = (char *)operator new(v226 + 1);
    qword_259BA28 = v223 + 12;
    unk_259BA30 = v227 | 0x8000000000000000;
    qword_259BA20 = (uint64_t)v228;
    *(void *)v228 = qword_259B930;
    *((_DWORD *)v228 + 2) = qword_259B938;
    v225 = v228 + 12;
  }
  else
  {
    qword_259BA28 = 0;
    unk_259BA30 = 0;
    byte_259BA37 = v223 + 12;
    LODWORD(qword_259BA28) = qword_259B938;
    qword_259BA20 = qword_259B930;
    v225 = (char *)&qword_259BA28 + 4;
    if (!v223) {
      goto LABEL_478;
    }
  }
  if (v222 >= 0) {
    v229 = &qword_259B690;
  }
  else {
    v229 = (uint64_t *)qword_259B690;
  }
  memmove(v225, v229, v223);
LABEL_478:
  v225[v223] = 0;
  int v230 = byte_259B947;
  if (byte_259B947 >= 0) {
    size_t v231 = byte_259B947;
  }
  else {
    size_t v231 = v205;
  }
  int v232 = byte_259B6BF;
  if (byte_259B6BF >= 0) {
    size_t v233 = byte_259B6BF;
  }
  else {
    size_t v233 = *((void *)&xmmword_259B6A8 + 1);
  }
  unint64_t v234 = v233 + v231;
  if (v233 + v231 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v234 <= 0x16)
  {
    v235 = &qword_259BA38;
    qword_259BA40 = 0;
    unk_259BA48 = 0;
    qword_259BA38 = 0;
    byte_259BA4F = v233 + v231;
    if (!v231) {
      goto LABEL_491;
    }
    goto LABEL_487;
  }
  uint64_t v242 = (v234 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v234 | 7) != 0x17) {
    uint64_t v242 = v234 | 7;
  }
  uint64_t v243 = v242 + 1;
  v235 = (uint64_t *)operator new(v242 + 1);
  qword_259BA40 = v233 + v231;
  unk_259BA48 = v243 | 0x8000000000000000;
  qword_259BA38 = (uint64_t)v235;
  if (v231)
  {
LABEL_487:
    if (v230 >= 0) {
      v236 = &qword_259B930;
    }
    else {
      v236 = (uint64_t *)qword_259B930;
    }
    memmove(v235, v236, v231);
  }
LABEL_491:
  v237 = (char *)v235 + v231;
  if (v233)
  {
    if (v232 >= 0) {
      v238 = &xmmword_259B6A8;
    }
    else {
      v238 = (long long *)xmmword_259B6A8;
    }
    memmove(v237, v238, v233);
  }
  v237[v233] = 0;
  unint64_t v239 = v231 + 11;
  if (v231 + 11 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v239 >= 0x17)
  {
    uint64_t v244 = (v239 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v239 | 7) != 0x17) {
      uint64_t v244 = v239 | 7;
    }
    uint64_t v245 = v244 + 1;
    v240 = (uint64_t *)operator new(v244 + 1);
    qword_259BA58 = v231 + 11;
    unk_259BA60 = v245 | 0x8000000000000000;
    qword_259BA50 = (uint64_t)v240;
  }
  else
  {
    v240 = &qword_259BA50;
    qword_259BA58 = 0;
    unk_259BA60 = 0;
    qword_259BA50 = 0;
    byte_259BA67 = v231 + 11;
    if (!v231)
    {
      *(_DWORD *)((char *)&qword_259BA50 + 7) = *(_DWORD *)((char *)&qword_259B978 + 7);
      qword_259BA50 = qword_259B978;
      BYTE3(qword_259BA58) = 0;
      LOBYTE(v241) = 8;
      goto LABEL_512;
    }
  }
  if (v230 >= 0) {
    v246 = &qword_259B930;
  }
  else {
    v246 = (uint64_t *)qword_259B930;
  }
  memmove(v240, v246, v231);
  v247 = (char *)v240 + v231;
  int v248 = *(_DWORD *)((char *)&qword_259B978 + 7);
  *(void *)v247 = qword_259B978;
  *(_DWORD *)(v247 + 7) = v248;
  v247[11] = 0;
  unint64_t v241 = v231 + 8;
  if (v231 + 8 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v241 <= 0x16)
  {
LABEL_512:
    v249 = &qword_259BA68;
    qword_259BA70 = 0;
    unk_259BA78 = 0;
    qword_259BA68 = 0;
    byte_259BA7F = v241;
    if (!v231) {
      goto LABEL_517;
    }
    goto LABEL_513;
  }
  uint64_t v262 = (v241 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v241 | 7) != 0x17) {
    uint64_t v262 = v241 | 7;
  }
  uint64_t v263 = v262 + 1;
  v249 = (uint64_t *)operator new(v262 + 1);
  qword_259BA70 = v231 + 8;
  unk_259BA78 = v263 | 0x8000000000000000;
  qword_259BA68 = (uint64_t)v249;
  if (v231)
  {
LABEL_513:
    if (v230 >= 0) {
      v250 = &qword_259B930;
    }
    else {
      v250 = (uint64_t *)qword_259B930;
    }
    memmove(v249, v250, v231);
  }
LABEL_517:
  v251 = (char *)v249 + v231;
  *(void *)v251 = qword_259B990;
  v251[8] = 0;
  int v252 = byte_259B9BF;
  if (byte_259B9BF >= 0) {
    size_t v253 = byte_259B9BF;
  }
  else {
    size_t v253 = qword_259B9B0;
  }
  unint64_t v254 = v253 + v231;
  if (v253 + v231 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v254 <= 0x16)
  {
    v255 = &qword_259BA80;
    qword_259BA88 = 0;
    unk_259BA90 = 0;
    qword_259BA80 = 0;
    byte_259BA97 = v253 + v231;
    if (!v231) {
      goto LABEL_527;
    }
    goto LABEL_523;
  }
  uint64_t v260 = (v254 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v254 | 7) != 0x17) {
    uint64_t v260 = v254 | 7;
  }
  uint64_t v261 = v260 + 1;
  v255 = (uint64_t *)operator new(v260 + 1);
  qword_259BA88 = v253 + v231;
  unk_259BA90 = v261 | 0x8000000000000000;
  qword_259BA80 = (uint64_t)v255;
  if (v231)
  {
LABEL_523:
    if (v230 >= 0) {
      v256 = &qword_259B930;
    }
    else {
      v256 = (uint64_t *)qword_259B930;
    }
    memmove(v255, v256, v231);
  }
LABEL_527:
  v257 = (char *)v255 + v231;
  if (v253)
  {
    if (v252 >= 0) {
      v258 = &qword_259B9A8;
    }
    else {
      v258 = (uint64_t *)qword_259B9A8;
    }
    memmove(v257, v258, v253);
  }
  v257[v253] = 0;
  strcpy(&byte_259BAAF, "\n{newroute}");
  strcpy((char *)&qword_259BA98, "{roadname}");
  strcpy(&byte_259BAC7, "\n{count}");
  byte_259BADF = 7;
  strcpy(&byte_259BAF7, "\n{dur}");
  strcpy((char *)&qword_259BAE0, "{duration}");
  byte_259BB0F = 5;
  qword_259BB10 = (uint64_t)operator new(0x20uLL);
  unk_259BB18 = v276;
  strcpy((char *)qword_259BB10, "{PleaseProceedWithCaution}");
  byte_259BB3F = 15;
  strcpy((char *)&qword_259BB28, "{UserRouteName}");
  byte_259BB57 = 20;
  strcpy((char *)&xmmword_259BB40, "{SuggestedRouteName}");
  byte_259BB6F = 18;
  strcpy(byte_259BB58, "Speed_Camera_Ahead");
  qword_259BB70 = (uint64_t)operator new(0x20uLL);
  unk_259BB78 = v275;
  strcpy((char *)qword_259BB70, "Red_Light_Camera_Ahead_Spoken");
  qword_259BB88 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_259BB90 = v275;
  strcpy((char *)qword_259BB88, "Stop_Sign_Camera_Ahead_Spoken");
  qword_259BBA0 = (uint64_t)operator new(0x28uLL);
  unk_259BBA8 = v270;
  strcpy((char *)qword_259BBA0, "Speed_Camera_Ahead_Multiple_Spoken");
  qword_259BBB8 = (uint64_t)operator new(0x28uLL);
  unk_259BBC0 = v265;
  strcpy((char *)qword_259BBB8, "Red_Light_Camera_Ahead_Multiple_Spoken");
  qword_259BBD0 = (uint64_t)operator new(0x20uLL);
  unk_259BBD8 = v277;
  strcpy((char *)qword_259BBD0, "Camera_Ahead_Multiple_Spoken");
  qword_259BBE8 = (uint64_t)operator new(0x30uLL);
  unk_259BBF0 = v266;
  strcpy((char *)qword_259BBE8, "Red_Light_Camera_Speed_Camera_Ahead_Spoken");
  qword_259BC00 = (char *)operator new(0x30uLL);
  strcpy(qword_259BC00, "Stop_Sign_Camera_Speed_Camera_Ahead_Spoken");
  byte_259BC2F = 16;
  xmmword_259BC08 = v266;
  strcpy(byte_259BC18, "_Speed_Limit_Mph");
  byte_259BC47 = 16;
  strcpy(algn_259BC30, "_Speed_Limit_Kph");
  byte_259BC5F = 11;
  strcpy((char *)&qword_259BC48, "Watch_Speed");
  byte_259BC77 = 4;
  strcpy((char *)&dword_259BC60, "_One");
  byte_259BC8F = 4;
  strcpy((char *)&dword_259BC78, "_Two");
  byte_259BCA7 = 4;
  strcpy((char *)&dword_259BC90, "_Few");
  byte_259BCBF = 5;
  strcpy((char *)&dword_259BCA8, "_Many");
  byte_259BCD7 = 6;
  strcpy((char *)&dword_259BCC0, "_Other");
  byte_259BCEF = 4;
  strcpy((char *)&dword_259BCD8, "_ONE");
  byte_259BD07 = 7;
  strcpy((char *)&dword_259BCF0, "{Speed}");
  byte_259BD1F = 8;
  strcpy((char *)&qword_259BD08, "Dismount");
  byte_259BD37 = 4;
  strcpy((char *)&dword_259BD20, "Walk");
  byte_259BD4F = 5;
  strcpy((char *)&dword_259BD38, "Mount");
  byte_259BD67 = 7;
  strcpy((char *)&dword_259BD50, "Remount");
  strcpy(&byte_259BD7F, "\t_Crosswalk");
  strcpy((char *)&qword_259BD68, "Walk_Road");
  strcpy(&byte_259BD97, "\n_PLURAL");
  byte_259BDAF = 7;
  strcpy(&byte_259BDC7, "\n{description1}");
  strcpy((char *)&qword_259BDB0, "_SECONDARY");
  byte_259BDDF = 14;
  byte_259BDF7 = 14;
  strcpy((char *)&qword_259BDE0, "{description2}");
  byte_259BE0F = 21;
  strcpy((char *)&xmmword_259BDF8, "TWO_ROAD_DESCRIPTIONS");
  byte_259BE27 = 17;
  strcpy((char *)&xmmword_259BE10, "{SlopePercentage}");
  byte_259BE3F = 15;
  strcpy((char *)&qword_259BE28, "_Protected_Lane");
  strcpy(&byte_259BE57, "\n_Paved_Path");
  strcpy((char *)&qword_259BE40, "_Bike_Path");
  byte_259BE6F = 11;
  byte_259BE87 = 15;
  strcpy((char *)&qword_259BE70, "_Dedicated_Lane");
  byte_259BE9F = 12;
  strcpy((char *)&qword_259BE88, "_Shared_Path");
  strcpy(&byte_259BEB7, "\n_UnnamedRoad");
  strcpy((char *)&qword_259BEA0, "_Bike_Lane");
  byte_259BECF = 12;
  byte_259BEE7 = 5;
  strcpy((char *)&dword_259BED0, "_Path");
  byte_259BEFF = 6;
  strcpy((char *)&dword_259BEE8, "_Trail");
  strcpy(&byte_259BF17, "\t_Plaza");
  strcpy((char *)&qword_259BF00, "_Sidewalk");
  byte_259BF2F = 6;
  byte_259BF47 = 15;
  strcpy((char *)&qword_259BF30, "_Moving_Walkway");
  byte_259BF5F = 14;
  strcpy((char *)&qword_259BF48, "Two_Stage_Turn");
  byte_259BF77 = 16;
  strcpy((char *)&xmmword_259BF60, "{OptionalPeriod}");
  byte_259BF8F = 18;
  strcpy((char *)&xmmword_259BF78, "Advisory_Separator");
  byte_259BFA7 = 6;
  strcpy((char *)&dword_259BF90, "Period");
  byte_259BFBF = 21;
  strcpy((char *)&xmmword_259BFA8, "Advisory_Title_Notice");
  strcpy((char *)&xmmword_259BFC0, "Advisory_Title_Notices");
  HIBYTE(word_259BFD6) = 22;
  byte_259BFEF = 7;
  strcpy((char *)&dword_259BFD8, "_DETAIL");
  byte_259C007 = 17;
  strcpy((char *)&xmmword_259BFF0, "_LONG_REGION_LIST");
  byte_259C01F = 16;
  strcpy((char *)&xmmword_259C008, "Advisory_Grouped");
  byte_259C037 = 11;
  strcpy((char *)&qword_259C020, "_Advisories");
  qword_259C038 = (uint64_t)operator new(0x20uLL);
  unk_259C040 = v273;
  strcpy((char *)qword_259C038, "Advisory_WILDFIRE_METADATA_");
  byte_259C067 = 8;
  strcpy((char *)&qword_259C050, "Advisory");
  byte_259C07F = 13;
  strcpy((char *)&qword_259C068, "MPR_NUM_STOPS");
  byte_259C097 = 17;
  strcpy(byte_259C080, "EV_CHARGE_STATION");
  byte_259C0AF = 11;
  strcpy((char *)&qword_259C098, "_NAMED_CITY");
  byte_259C0C7 = 5;
  strcpy((char *)&dword_259C0B0, "_Stop");
  strcpy(&byte_259C0DF, "\n{StopsCount}");
  strcpy((char *)&qword_259C0C8, "{CityName}");
  byte_259C0F7 = 12;
  byte_259C10F = 11;
  strcpy((char *)&qword_259C0F8, "_With_Other");
  byte_259C127 = 15;
  strcpy((char *)&qword_259C110, "{DepartureTime}");
  qword_259C128 = (uint64_t)operator new(0x28uLL);
  *(_OWORD *)algn_259C130 = v274;
  strcpy((char *)qword_259C128, "Ending_Charge_Station_Port_Availability");
  qword_259C140 = (uint64_t)operator new(0x28uLL);
  unk_259C148 = v267;
  strcpy((char *)qword_259C140, "Ending_Charge_Station_No_Availability");
  qword_259C158 = (uint64_t)operator new(0x28uLL);
  *(_OWORD *)algn_259C160 = v270;
  strcpy((char *)qword_259C158, "Ending_Charge_Station_No_Real_Time");
  byte_259C187 = 16;
  strcpy(&algn_259C160[16], "{AvailablePorts}");
  byte_259C19F = 12;
  strcpy((char *)&qword_259C188, "{TotalPorts}");
  byte_259C1B7 = 14;
  strcpy((char *)&qword_259C1A0, "{ManeuverIcon}");
  qword_259C1B8 = (uint64_t)operator new(0x38uLL);
  unk_259C1C0 = xmmword_20B9A60;
  strcpy((char *)qword_259C1B8, "Walking_Distance_ManeuverIcon_PrimaryInstruction");
  qword_259C1D0 = (uint64_t)operator new(0x20uLL);
  unk_259C1D8 = v273;
  strcpy((char *)qword_259C1D0, "Walking_Destination_Unnamed");
  qword_259C1E8 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_259C1F0 = v275;
  strcpy((char *)qword_259C1E8, "TrafficDelay_Label_Title_Sign");
  qword_259C200 = (uint64_t)operator new(0x20uLL);
  unk_259C208 = v277;
  strcpy((char *)qword_259C200, "Special_Guidance_Instruction");
  byte_259C22F = 2;
  strcpy((char *)&word_259C218, "CZ");
  byte_259C247 = 3;
  dword_259C230 = 5919811;
  unk_259C25F = 3;
  dword_259C248 = 6243649;
  byte_259C277 = 0;
  byte_259C28F = 7;
  strcpy((char *)&dword_259C278, "TRANSIT");
  byte_259C2A7 = 7;
  strcpy((char *)&dword_259C290, "OFFLINE");
  qword_259C2A8 = (uint64_t)operator new(0x28uLL);
  *(_OWORD *)algn_259C2B0 = v265;
  strcpy((char *)qword_259C2A8, "Advisory_Card_French_Climate_Law_Title");
  qword_259C2C0 = (uint64_t)operator new(0x30uLL);
  unk_259C2C8 = xmmword_20B93C0;
  strcpy((char *)qword_259C2C0, "Advisory_Card_French_Climate_Law_Details");
  qword_259C2D8 = (uint64_t)operator new(0x30uLL);
  unk_259C2E0 = v271;
  strcpy((char *)qword_259C2D8, "French_Climate_Law_Metadata_Weblink_Title");
  qword_259C2F0 = (uint64_t)operator new(0x20uLL);
  unk_259C2F8 = v277;
  strcpy((char *)qword_259C2F0, "{ClimateLawLearnMoreWeblink}");
  byte_259C31F = 3;
  dword_259C308 = 4280902;
  qword_259C320 = (uint64_t)operator new(0x70uLL);
  unk_259C328 = xmmword_20E81E0;
  strcpy((char *)qword_259C320, "https://www.vie-publique.fr/loi/278460-loi-22-aout-2021-climat-et-resilience-convention-citoyenne-climat");
  return *(double *)"ut-2021-climat-et-resilience-convention-citoyenne-climat";
}

void sub_660674(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,void *a62,uint64_t a63)
{
  if (SLOBYTE(STACK[0x3B7]) < 0)
  {
    operator delete((void *)STACK[0x3A0]);
    if ((SLOBYTE(STACK[0x39F]) & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else if ((SLOBYTE(STACK[0x39F]) & 0x80000000) == 0)
  {
LABEL_3:
    if (SLOBYTE(STACK[0x387]) < 0) {
      goto LABEL_4;
    }
    goto LABEL_18;
  }
  operator delete((void *)STACK[0x388]);
  if (SLOBYTE(STACK[0x387]) < 0)
  {
LABEL_4:
    operator delete((void *)STACK[0x370]);
    if ((SLOBYTE(STACK[0x36F]) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  if ((SLOBYTE(STACK[0x36F]) & 0x80000000) == 0)
  {
LABEL_5:
    if (SLOBYTE(STACK[0x357]) < 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  operator delete((void *)STACK[0x358]);
  if (SLOBYTE(STACK[0x357]) < 0)
  {
LABEL_6:
    operator delete((void *)STACK[0x340]);
    if ((SLOBYTE(STACK[0x33F]) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  if ((SLOBYTE(STACK[0x33F]) & 0x80000000) == 0)
  {
LABEL_7:
    if (SLOBYTE(STACK[0x327]) < 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  operator delete((void *)STACK[0x328]);
  if (SLOBYTE(STACK[0x327]) < 0)
  {
LABEL_8:
    operator delete((void *)STACK[0x310]);
    if ((SLOBYTE(STACK[0x30F]) & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  if ((SLOBYTE(STACK[0x30F]) & 0x80000000) == 0)
  {
LABEL_9:
    if (SLOBYTE(STACK[0x2F7]) < 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  operator delete((void *)STACK[0x2F8]);
  if (SLOBYTE(STACK[0x2F7]) < 0)
  {
LABEL_10:
    operator delete((void *)STACK[0x2E0]);
    if ((SLOBYTE(STACK[0x2DF]) & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  if ((SLOBYTE(STACK[0x2DF]) & 0x80000000) == 0)
  {
LABEL_11:
    if (SLOBYTE(STACK[0x2C7]) < 0) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_25:
  operator delete((void *)STACK[0x2C8]);
  if (SLOBYTE(STACK[0x2C7]) < 0)
  {
LABEL_12:
    operator delete((void *)STACK[0x2B0]);
    if ((SLOBYTE(STACK[0x2AF]) & 0x80000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_27;
  }
LABEL_26:
  if ((SLOBYTE(STACK[0x2AF]) & 0x80000000) == 0)
  {
LABEL_13:
    if (SLOBYTE(STACK[0x297]) < 0) {
      goto LABEL_14;
    }
    goto LABEL_28;
  }
LABEL_27:
  operator delete((void *)STACK[0x298]);
  if (SLOBYTE(STACK[0x297]) < 0)
  {
LABEL_14:
    operator delete((void *)STACK[0x280]);
    if (SLOBYTE(STACK[0x27F]) < 0)
    {
LABEL_37:
      operator delete((void *)STACK[0x268]);
      if ((SLOBYTE(STACK[0x267]) & 0x80000000) == 0)
      {
LABEL_38:
        if (SLOBYTE(STACK[0x24F]) < 0)
        {
LABEL_39:
          operator delete((void *)STACK[0x238]);
          if ((SLOBYTE(STACK[0x237]) & 0x80000000) == 0)
          {
LABEL_40:
            if (SLOBYTE(STACK[0x21F]) < 0)
            {
LABEL_41:
              operator delete((void *)STACK[0x208]);
              if ((SLOBYTE(STACK[0x207]) & 0x80000000) == 0)
              {
LABEL_42:
                if (a72 < 0)
                {
LABEL_43:
                  operator delete(a71);
                  if (a70 < 0)
                  {
LABEL_44:
                    operator delete(a65);
                    _Unwind_Resume(a1);
                  }
LABEL_45:
                  _Unwind_Resume(a1);
                }
LABEL_35:
                if (a70 < 0) {
                  goto LABEL_44;
                }
                goto LABEL_45;
              }
LABEL_34:
              operator delete(a73);
              if (a72 < 0) {
                goto LABEL_43;
              }
              goto LABEL_35;
            }
LABEL_33:
            if ((SLOBYTE(STACK[0x207]) & 0x80000000) == 0) {
              goto LABEL_42;
            }
            goto LABEL_34;
          }
LABEL_32:
          operator delete((void *)STACK[0x220]);
          if (SLOBYTE(STACK[0x21F]) < 0) {
            goto LABEL_41;
          }
          goto LABEL_33;
        }
LABEL_31:
        if ((SLOBYTE(STACK[0x237]) & 0x80000000) == 0) {
          goto LABEL_40;
        }
        goto LABEL_32;
      }
LABEL_30:
      operator delete((void *)STACK[0x250]);
      if (SLOBYTE(STACK[0x24F]) < 0) {
        goto LABEL_39;
      }
      goto LABEL_31;
    }
LABEL_29:
    if ((SLOBYTE(STACK[0x267]) & 0x80000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_30;
  }
LABEL_28:
  if (SLOBYTE(STACK[0x27F]) < 0) {
    goto LABEL_37;
  }
  goto LABEL_29;
}

uint64_t sub_660948(uint64_t a1, void *a2, char a3, char a4, uint64_t a5)
{
  *(void *)a1 = sub_3750CC(a2);
  sub_3CCE64((uint64_t *)(a1 + 8), a2);
  sub_6EB9D0(a1 + 24, a2, 3, a5);
  sub_6D797C(a1 + 1000, a2, (const void *)(a1 + 24), (_OWORD *)(a1 + 8), a3);
  *(unsigned char *)(a1 + 2888) = a3;
  *(unsigned char *)(a1 + 2889) = a4;
  return a1;
}

unint64_t sub_6609E8(uint64_t a1, int **a2)
{
  int v4 = (unsigned __int16 *)((char *)*a2 - **a2);
  if (*v4 < 0x2Fu)
  {
    LOBYTE(v5) = 0;
LABEL_6:
    int v8 = *(unsigned __int8 *)(a1 + 2889);
    if (!*(unsigned char *)(a1 + 2889)) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  uint64_t v5 = v4[23];
  if (!v5) {
    goto LABEL_6;
  }
  int v6 = *((unsigned __int8 *)*a2 + v5);
  if (v6 == 42)
  {
    int64_t v7 = (unsigned __int8 *)(a1 + 2889);
LABEL_11:
    int v8 = *v7;
    goto LABEL_12;
  }
  LOBYTE(v5) = v6 == 34;
  int v8 = *(unsigned __int8 *)(a1 + 2889);
  if (*(unsigned char *)(a1 + 2889))
  {
LABEL_7:
    if (v5) {
      goto LABEL_12;
    }
    int64_t v7 = (unsigned __int8 *)(a1 + 2889);
    uint64_t v9 = (int *)sub_2D5D58(*(void *)a1, *((unsigned int *)a2 + 8) | ((unint64_t)*((unsigned __int16 *)a2 + 18) << 32));
    int64_t v10 = (unsigned __int16 *)((char *)v9 - *v9);
    if (*v10 >= 0xBu)
    {
      uint64_t v11 = v10[5];
      if (v11)
      {
        if ((*((unsigned char *)v9 + v11 + 3) & 8) != 0) {
          return 0;
        }
      }
    }
    goto LABEL_11;
  }
LABEL_12:
  if (v8)
  {
    int v12 = (int *)sub_2D5D58(*(void *)a1, *((unsigned int *)a2 + 8) | ((unint64_t)*((unsigned __int16 *)a2 + 18) << 32));
    size_t v13 = (unsigned __int16 *)((char *)v12 - *v12);
    if (*v13 >= 0xBu)
    {
      uint64_t v14 = v13[5];
      if (v14)
      {
        if ((*((unsigned char *)v12 + v14 + 3) & 4) != 0) {
          return 1;
        }
      }
    }
  }
  if (*(unsigned char *)(a1 + 700) && *(unsigned char *)(a1 + 2888))
  {
    int v15 = a2[1];
    if (v15)
    {
      uint64_t v16 = (unsigned __int16 *)((char *)v15 - *v15);
      if (*v16 >= 0x11u)
      {
        uint64_t v17 = v16[8];
        if (v17) {
          return (*(unsigned __int16 *)((char *)v15 + v17) >> 2) & 1;
        }
      }
    }
    return 0;
  }
  uint64_t v19 = (unsigned __int16 *)((char *)*a2 - **a2);
  if (*v19 >= 0x2Fu)
  {
    uint64_t v20 = v19[23];
    if (v20)
    {
      if (*((unsigned char *)*a2 + v20) == 14) {
        return 1;
      }
    }
  }
  if (sub_660D98((uint64_t *)a1, a2)) {
    return 1;
  }
  uint64_t v21 = *a2;
  long long v22 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v23 = *v22;
  if (v23 < 0x2F)
  {
    if (v23 < 9) {
      goto LABEL_38;
    }
  }
  else if (v22[23])
  {
    unint64_t v24 = *((unsigned __int8 *)v21 + v22[23]);
    if (v24 < 0x37 && ((0x44000010000409uLL >> v24) & 1) != 0) {
      return (0x7FFFFFFFFFFFFEuLL >> v24) & 1;
    }
  }
  uint64_t v25 = v22[4];
  if (v25)
  {
    if (*(unsigned int *)((char *)v21 + v25) >= *(uint64_t *)(a1 + 544)) {
      return *(unsigned char *)(a1 + 705) && (sub_66108C(a1, a2) & 1) != 0
    }
          || *(unsigned char *)(a1 + 701) && sub_6D862C((void *)(a1 + 1000), a2);
    goto LABEL_39;
  }
LABEL_38:
  if (*(uint64_t *)(a1 + 544) <= 0) {
    return *(unsigned char *)(a1 + 705) && (sub_66108C(a1, a2) & 1) != 0
  }
        || *(unsigned char *)(a1 + 701) && sub_6D862C((void *)(a1 + 1000), a2);
LABEL_39:
  size_t v32 = (void *)sub_2E4738(a2);
  if (sub_3CCE68(a1 + 8, (unsigned int **)&v32)) {
    return 0;
  }
  uint64_t v26 = *(void *)a1;
  uint64_t v27 = (unsigned int *)sub_2E48C4(a2);
  sub_660F74(v26, v27, 0, &v32);
  uint64_t v28 = *(void *)a1;
  int v29 = (unsigned int *)sub_2E4738(a2);
  sub_660F74(v28, v29, 0, &__p);
  if (sub_661018((unint64_t *)v32, v33, a1) >= 3 && sub_661018((unint64_t *)__p, v31, a1) > 2)
  {
    if (__p)
    {
      int v31 = (unint64_t *)__p;
      operator delete(__p);
    }
    if (v32)
    {
      unint64_t v33 = (unint64_t *)v32;
      operator delete(v32);
      return 1;
    }
    return 1;
  }
  if (__p)
  {
    int v31 = (unint64_t *)__p;
    operator delete(__p);
  }
  if (v32)
  {
    unint64_t v33 = (unint64_t *)v32;
    operator delete(v32);
  }
  return *(unsigned char *)(a1 + 705) && (sub_66108C(a1, a2) & 1) != 0
      || *(unsigned char *)(a1 + 701) && sub_6D862C((void *)(a1 + 1000), a2);
}

void sub_660D4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p)
  {
    operator delete(__p);
    uint64_t v14 = a12;
    if (!a12) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    uint64_t v14 = a12;
    if (!a12) {
      goto LABEL_3;
    }
  }
  operator delete(v14);
  _Unwind_Resume(exception_object);
}

uint64_t sub_660D98(uint64_t *a1, int **a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = (unsigned __int16 *)((char *)*a2 - **a2);
  if (*v3 < 0x2Fu) {
    return 0;
  }
  if (!v3[23]) {
    return 0;
  }
  uint64_t result = 0;
  switch(*((unsigned char *)v2 + v3[23]))
  {
    case 6:
    case 0xC:
    case 0x2B:
      uint64_t v7 = v3[4];
      if (v7)
      {
        if (*(unsigned int *)((char *)v2 + v7) <= a1[100]) {
          goto LABEL_9;
        }
        return 0;
      }
      if (a1[100] < 0) {
        return 0;
      }
      goto LABEL_9;
    case 0x2C:
      uint64_t v9 = v3[4];
      if (v9)
      {
        if (*(unsigned int *)((char *)v2 + v9) > a1[99]) {
          return 0;
        }
      }
      else if (a1[99] < 0)
      {
        return 0;
      }
LABEL_9:
      unint64_t v8 = sub_2E48C4(a2);
      if (sub_661DC0(a1, (long long *)a2, v8))
      {
        uint64_t result = 1;
      }
      else
      {
        unint64_t v10 = sub_2E4738(a2);
        uint64_t result = sub_661DC0(a1, (long long *)a2, v10);
      }
      break;
    default:
      return result;
  }
  return result;
}

void *sub_660F74@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X1>, int a3@<W2>, void *a4@<X8>)
{
  uint64_t result = (void *)sub_2D5904(a1, a2, a3, (char **)(a1 + 7800));
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  uint64_t v7 = *(unsigned char **)(a1 + 7800);
  unint64_t v8 = *(unsigned char **)(a1 + 7808);
  uint64_t v9 = v8 - v7;
  if (v8 != v7)
  {
    if (v9 < 0) {
      sub_2E00();
    }
    unint64_t v10 = (char *)operator new(v8 - v7);
    *a4 = v10;
    uint64_t v11 = &v10[8 * (v9 >> 3)];
    a4[2] = v11;
    uint64_t result = memcpy(v10, v7, v9 - 1);
    a4[1] = v11;
  }
  return result;
}

void sub_660FFC(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_661018(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  if (a1 == a2) {
    return 0;
  }
  uint64_t v5 = a1;
  uint64_t v6 = 0;
  do
  {
    unint64_t v7 = *v5++;
    v6 += sub_66512C(a3, v7);
  }
  while (v5 != a2);
  return v6;
}

uint64_t sub_66108C(uint64_t a1, int **a2)
{
  int v4 = (char *)*a2;
  uint64_t v5 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v6 = *v5;
  if (v6 < 9)
  {
    if ((uint64_t)(*(void *)(a1 + 544) + *(void *)(a1 + 712)) < 0) {
      return 0;
    }
  }
  else
  {
    uint64_t v7 = v5[4];
    if (v5[4]) {
      uint64_t v7 = *(unsigned int *)&v4[v7];
    }
    if (v7 > *(void *)(a1 + 544) + *(void *)(a1 + 712)) {
      return 0;
    }
  }
  if (v6 >= 0x2F)
  {
    uint64_t v9 = v5[23];
    if (v9)
    {
      unsigned int v10 = v4[v9] - 2;
      if (v10 < 0x29 && ((0x14109A04001uLL >> v10) & 1) != 0) {
        return 0;
      }
    }
  }
  uint64_t v99 = a1;
  uint64_t v96 = 0;
  uint64_t v97 = 0;
  uint64_t v98 = 0;
  uint64_t v93 = 0;
  uint64_t v94 = 0;
  uint64_t v95 = 0;
  long long __p = 0;
  uint64_t v91 = 0;
  uint64_t v92 = 0;
  int v11 = *((unsigned __int8 *)a2 + 38);
  long long v12 = *((_OWORD *)a2 + 1);
  v88[0] = *(_OWORD *)a2;
  v88[1] = v12;
  v89 = a2[4];
  if (v11)
  {
    BYTE6(v89) ^= 1u;
    long long v13 = *((_OWORD *)a2 + 1);
    long long v85 = *(_OWORD *)a2;
    long long v86 = v13;
    size_t v87 = a2[4];
  }
  else
  {
    size_t v87 = a2[4];
    long long v14 = *((_OWORD *)a2 + 1);
    long long v85 = *(_OWORD *)a2;
    long long v86 = v14;
    BYTE6(v87) ^= 1u;
  }
  sub_2E44A4(*(void *)a1, (uint64_t)v88, &v93);
  sub_2E44A4(*(void *)a1, (uint64_t)&v85, &v96);
  int v15 = (__n128 *)v96;
  uint64_t v16 = v97;
  if (v96 == v97)
  {
LABEL_22:
    for (uint64_t i = (int **)v93; i != v94; i += 5)
    {
      uint64_t v21 = (unsigned __int16 *)((char *)*i - **i);
      if (*v21 >= 0x2Fu)
      {
        uint64_t v22 = v21[23];
        if (v22)
        {
          if (*((unsigned char *)*i + v22) == 14) {
            goto LABEL_28;
          }
        }
      }
    }
  }
  else
  {
    uint64_t v17 = (__n128 *)v96;
    while (1)
    {
      int64_t v18 = (unsigned __int16 *)(v17->n128_u64[0] - *(int *)v17->n128_u64[0]);
      if (*v18 >= 0x2Fu)
      {
        uint64_t v19 = v18[23];
        if (v19)
        {
          if (*(unsigned char *)(v17->n128_u64[0] + v19) == 14) {
            break;
          }
        }
      }
      uint64_t v17 = (__n128 *)((char *)v17 + 40);
      if (v17 == v97) {
        goto LABEL_22;
      }
    }
LABEL_28:
    if (!*(unsigned char *)(a1 + 706)) {
      goto LABEL_135;
    }
  }
  unint64_t v23 = 0xCCCCCCCCCCCCCCCDLL * (((char *)v97 - (unsigned char *)v96) >> 3);
  unint64_t v24 = (int **)__p;
  if (0xCCCCCCCCCCCCCCCDLL * ((v92 - (unsigned char *)__p) >> 3) < v23)
  {
    if (v23 >= 0x666666666666667) {
      sub_2E00();
    }
    uint64_t v25 = v91;
    uint64_t v26 = (char *)operator new((char *)v97 - (unsigned char *)v96);
    uint64_t v27 = (int **)&v26[40 * (((char *)v25 - (char *)v24) / 40)];
    uint64_t v28 = v27;
    if (v25 != v24)
    {
      int v29 = &v26[40 * (((char *)v25 - (char *)v24) / 40)];
      do
      {
        long long v30 = *(_OWORD *)(v25 - 5);
        long long v31 = *(_OWORD *)(v25 - 3);
        uint64_t v28 = (int **)(v29 - 40);
        *((void *)v29 - 1) = *(v25 - 1);
        *(_OWORD *)(v29 - 24) = v31;
        *(_OWORD *)(v29 - 40) = v30;
        v25 -= 5;
        v29 -= 40;
      }
      while (v25 != v24);
    }
    long long __p = v28;
    uint64_t v91 = v27;
    uint64_t v92 = &v26[40 * v23];
    if (v24)
    {
      operator delete(v24);
      int v15 = (__n128 *)v96;
      uint64_t v16 = v97;
    }
  }
  if (v15 != v16)
  {
    size_t v32 = v91;
    do
    {
      __n128 v33 = *v15;
      __n128 v34 = v15[1];
      unint64_t v101 = v15[2].n128_u64[0];
      v100[0] = v33;
      v100[1] = v34;
      BYTE6(v101) ^= 1u;
      size_t v32 = (int **)&sub_2E7FC8((char **)&__p, (uint64_t)v32, v100)[2].n128_u64[1];
      int v15 = (__n128 *)((char *)v15 + 40);
    }
    while (v15 != v16);
  }
  int v35 = sub_665BF4((int **)__p, v91, (int **)v88, a1);
  if (v91 != v35) {
    uint64_t v91 = v35;
  }
  int64_t v36 = sub_665ED4((int **)v93, v94, (int **)v88, a1);
  if (v94 != v36) {
    uint64_t v94 = v36;
  }
  uint64_t v37 = (int **)__p;
  v84 = v91;
  if (__p == v91)
  {
    uint64_t v8 = 0;
    if (!__p) {
      goto LABEL_137;
    }
LABEL_136:
    uint64_t v91 = v37;
    operator delete(v37);
    goto LABEL_137;
  }
  if (v93 == v36)
  {
LABEL_135:
    uint64_t v8 = 0;
    uint64_t v37 = (int **)__p;
    if (!__p) {
      goto LABEL_137;
    }
    goto LABEL_136;
  }
LABEL_47:
  int64_t v38 = (int **)v93;
  uint64_t v39 = v94;
  while (1)
  {
    if (v38 == v39)
    {
      v37 += 5;
      if (v37 == v84) {
        goto LABEL_135;
      }
      goto LABEL_47;
    }
    int v41 = *v37;
    int v42 = (unsigned __int16 *)((char *)*v37 - **v37);
    unsigned int v43 = *v42;
    if (*((unsigned char *)v37 + 38))
    {
      if (v43 >= 0x49)
      {
        unsigned int v44 = v42[36];
        if (v42[36]) {
          goto LABEL_58;
        }
      }
    }
    else if (v43 >= 0x4B)
    {
      unsigned int v44 = v42[37];
      if (v42[37])
      {
LABEL_58:
        __int16 v45 = *(_WORD *)((char *)v41 + v44);
        int v46 = *((unsigned __int8 *)v38 + 38);
        v47 = *v38;
        unint64_t v48 = (unsigned __int16 *)((char *)*v38 - **v38);
        unsigned int v49 = *v48;
        if (*((unsigned char *)v38 + 38)) {
          goto LABEL_63;
        }
        goto LABEL_59;
      }
    }
    __int16 v45 = -1;
    int v46 = *((unsigned __int8 *)v38 + 38);
    v47 = *v38;
    unint64_t v48 = (unsigned __int16 *)((char *)*v38 - **v38);
    unsigned int v49 = *v48;
    if (*((unsigned char *)v38 + 38))
    {
LABEL_63:
      if (v49 >= 0x4B)
      {
        unsigned int v50 = v48[37];
        if (v48[37]) {
          goto LABEL_65;
        }
      }
      goto LABEL_66;
    }
LABEL_59:
    if (v49 >= 0x49)
    {
      unsigned int v50 = v48[36];
      if (v48[36])
      {
LABEL_65:
        int v51 = *(unsigned __int16 *)((char *)v47 + v50);
        goto LABEL_67;
      }
    }
LABEL_66:
    int v51 = 0xFFFF;
LABEL_67:
    unsigned __int16 v52 = v45 + 18000;
    unsigned __int16 v53 = v45 - 18000;
    if ((unsigned __int16)(v52 >> 5) < 0x465u) {
      unsigned __int16 v53 = v52;
    }
    int v54 = v51 - v53;
    if (v54 > 18000) {
      v54 -= 36000;
    }
    if (v54 < -17999) {
      v54 += 36000;
    }
    if (*((unsigned char *)v37 + 38))
    {
      if (v43 < 0xB || (uint64_t v55 = v42[5]) == 0)
      {
LABEL_84:
        BOOL v56 = 0;
        BOOL v57 = v49 >= 0xB;
        if (!v46) {
          goto LABEL_85;
        }
        goto LABEL_92;
      }
      BOOL v56 = 1;
      if ((*((unsigned char *)v41 + v55) & 2) == 0)
      {
        BOOL v56 = (*(int *)((char *)v41 + v55) & 1) != 0;
        BOOL v57 = v49 >= 0xB;
        if (!v46) {
          goto LABEL_85;
        }
        goto LABEL_92;
      }
      goto LABEL_91;
    }
    if (v43 < 0xB) {
      goto LABEL_84;
    }
    if (!v42[5])
    {
      BOOL v56 = 0;
LABEL_91:
      BOOL v57 = v49 >= 0xB;
      if (!v46) {
        goto LABEL_85;
      }
      goto LABEL_92;
    }
    if (*((unsigned char *)v41 + v42[5]))
    {
      BOOL v56 = 1;
      BOOL v57 = v49 >= 0xB;
      if (!v46)
      {
LABEL_85:
        if (!v57) {
          goto LABEL_98;
        }
        uint64_t v58 = v48[5];
        if (!v58)
        {
          int v59 = 0;
LABEL_101:
          uint64_t v60 = (uint64_t)*a2;
          std::string::size_type v61 = (unsigned __int16 *)((char *)*a2 - **a2);
          if (*v61 < 9u) {
            goto LABEL_107;
          }
          goto LABEL_102;
        }
        if (*((unsigned char *)v47 + v58))
        {
          int v59 = 1;
          uint64_t v60 = (uint64_t)*a2;
          std::string::size_type v61 = (unsigned __int16 *)((char *)*a2 - **a2);
          if (*v61 < 9u) {
            goto LABEL_107;
          }
          goto LABEL_102;
        }
        int v59 = 2;
LABEL_96:
        int v59 = (*(int *)((char *)v47 + v58) & v59) != 0;
        uint64_t v60 = (uint64_t)*a2;
        std::string::size_type v61 = (unsigned __int16 *)((char *)*a2 - **a2);
        if (*v61 < 9u) {
          goto LABEL_107;
        }
        goto LABEL_102;
      }
    }
    else
    {
      BOOL v56 = (*(int *)((char *)v41 + v42[5]) & 2) != 0;
      BOOL v57 = v49 >= 0xB;
      if (!v46) {
        goto LABEL_85;
      }
    }
LABEL_92:
    if (v57)
    {
      uint64_t v58 = v48[5];
      if (v58)
      {
        int v59 = 1;
        if ((*((unsigned char *)v47 + v58) & 2) != 0) {
          goto LABEL_101;
        }
        goto LABEL_96;
      }
    }
LABEL_98:
    int v59 = 0;
    uint64_t v60 = (uint64_t)*a2;
    std::string::size_type v61 = (unsigned __int16 *)((char *)*a2 - **a2);
    if (*v61 < 9u) {
      goto LABEL_107;
    }
LABEL_102:
    uint64_t v62 = v61[4];
    if (v62)
    {
      uint64_t v63 = *(unsigned int *)(v60 + v62);
      goto LABEL_108;
    }
LABEL_107:
    uint64_t v63 = 0;
LABEL_108:
    double v64 = fabs((double)v54 / 100.0);
    if (v63 <= *(void *)(a1 + 712) && v64 <= *(double *)(a1 + 720) && ((v56 ^ v59) & 1) != 0) {
      break;
    }
    uint64_t v65 = sub_661B10(&v99, v37);
    double v66 = (double)v65 * 0.5;
    uint64_t v67 = (uint64_t)(v66 + v66);
    uint64_t v68 = v67 - 1;
    if (v67 < 1) {
      uint64_t v68 = (uint64_t)(v66 + v66);
    }
    double v69 = (double)(v68 >> 1);
    if (v66 <= -4.50359963e15) {
      double v69 = (double)v65 * 0.5;
    }
    double v70 = (double)((v67 + 1) >> 1);
    if (v66 >= 4.50359963e15) {
      double v70 = (double)v65 * 0.5;
    }
    if (v66 >= 0.0) {
      double v71 = v70;
    }
    else {
      double v71 = v69;
    }
    uint64_t v72 = sub_661B10(&v99, v38);
    double v73 = (double)v72 * 0.5;
    uint64_t v74 = (uint64_t)(v73 + v73);
    uint64_t v75 = v74 - 1;
    if (v74 < 1) {
      uint64_t v75 = (uint64_t)(v73 + v73);
    }
    uint64_t v76 = v75 >> 1;
    double v77 = v73 > -4.50359963e15 ? (double)v76 : (double)v72 * 0.5;
    uint64_t v78 = (v74 + 1) >> 1;
    double v79 = v73 < 4.50359963e15 ? (double)v78 : (double)v72 * 0.5;
    double v80 = v73 >= 0.0 ? v79 : v77;
    if (v64 <= *(double *)(a1 + 720))
    {
      unint64_t v81 = (unsigned __int16 *)((char *)*a2 - **a2);
      if (*v81 >= 9u && (uint64_t v82 = v81[4]) != 0) {
        uint64_t v40 = *(unsigned int *)((char *)*a2 + v82);
      }
      else {
        uint64_t v40 = 0;
      }
      if (v40 <= (uint64_t)v80 + (uint64_t)v71 + *(void *)(a1 + 544)) {
        break;
      }
    }
    v38 += 5;
  }
  uint64_t v8 = 1;
  uint64_t v37 = (int **)__p;
  if (__p) {
    goto LABEL_136;
  }
LABEL_137:
  if (v93)
  {
    uint64_t v94 = (int **)v93;
    operator delete(v93);
  }
  if (v96)
  {
    uint64_t v97 = (__n128 *)v96;
    operator delete(v96);
  }
  return v8;
}

void sub_661854(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30)
{
  if (__p)
  {
    operator delete(__p);
    long long v31 = a26;
    if (!a26)
    {
LABEL_3:
      size_t v32 = a29;
      if (!a29) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else
  {
    long long v31 = a26;
    if (!a26) {
      goto LABEL_3;
    }
  }
  operator delete(v31);
  size_t v32 = a29;
  if (!a29) {
LABEL_4:
  }
    _Unwind_Resume(exception_object);
LABEL_7:
  operator delete(v32);
  _Unwind_Resume(exception_object);
}

unint64_t sub_6618C0(uint64_t a1, int **a2)
{
  if (sub_6EB9D4(a1 + 24))
  {
    int v4 = *(unsigned __int8 *)(a1 + 524);
    uint64_t v5 = (unsigned __int16 *)((char *)*a2 - **a2);
    if (*v5 >= 0x63u && (uint64_t v6 = v5[49]) != 0)
    {
      BOOL v7 = sub_3E737C(*((unsigned __int8 *)*a2 + v6), v4 != 0);
      if (*(unsigned char *)(a1 + 522)) {
        return v7;
      }
    }
    else
    {
      BOOL v7 = sub_3E737C(0, v4 != 0);
      if (*(unsigned char *)(a1 + 522)) {
        return v7;
      }
    }
  }
  else
  {
    BOOL v7 = 0;
    if (*(unsigned char *)(a1 + 522)) {
      return v7;
    }
  }
  uint64_t v8 = *(void *)a1;
  unint64_t v9 = (unint64_t)a2[4];
  unsigned int v10 = (int *)sub_2D5D58(*(void *)a1, v9 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v8 + 7772))
  {
    int v11 = sub_2DB8E0(v8 + 3896, v9, 0);
    long long v12 = &v11[-*(int *)v11];
    if (*(unsigned __int16 *)v12 < 5u)
    {
      uint64_t v13 = 0;
    }
    else
    {
      uint64_t v13 = *((unsigned __int16 *)v12 + 2);
      if (v13) {
        v13 += (uint64_t)&v11[*(unsigned int *)&v11[v13]];
      }
    }
    long long v14 = (int *)(v13 + 4 * WORD2(v9) + 4 + *(unsigned int *)(v13 + 4 * WORD2(v9) + 4));
  }
  else
  {
    long long v14 = 0;
  }
  uint64_t v15 = 1;
  v19[0] = v10;
  v19[1] = v14;
  v19[2] = (int *)sub_2E5C38(v8, v9 & 0xFFFFFFFFFFFFLL, 1);
  v19[3] = v16;
  int v20 = v9;
  __int16 v21 = WORD2(v9);
  BOOL v22 = (v9 & 0xFF000000000000) != 0;
  if (*(unsigned char *)(a1 + 523)) {
    BOOL v17 = v7;
  }
  else {
    BOOL v17 = 0;
  }
  if (!v17) {
    return sub_6609E8(a1, v19);
  }
  return v15;
}

BOOL sub_661A68(uint64_t a1, void *a2)
{
  BOOL result = sub_6EB9D4(a1 + 24);
  if (result)
  {
    int v5 = *(unsigned __int8 *)(a1 + 524);
    uint64_t v6 = (unsigned __int16 *)(*a2 - *(int *)*a2);
    if (*v6 >= 0x63u && (uint64_t v7 = v6[49]) != 0)
    {
      int v8 = *(unsigned __int8 *)(*a2 + v7);
      BOOL v9 = v5 != 0;
    }
    else
    {
      int v8 = 0;
      BOOL v9 = v5 != 0;
    }
    return sub_3E737C(v8, v9);
  }
  return result;
}

uint64_t sub_661B10(uint64_t *a1, int **a2)
{
  uint64_t v3 = *a1;
  int v4 = sub_2E35CC(a2);
  unsigned int v5 = sub_3E70B4(a2) + v4;
  uint64_t v6 = *a2;
  uint64_t v7 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v8 = *v7;
  if (*((unsigned char *)a2 + 38))
  {
    if (v8 < 0x29 || (unsigned int v9 = v7[20]) == 0)
    {
      int v10 = 0;
      unsigned int v11 = *v7;
      goto LABEL_16;
    }
  }
  else if (v8 < 0x27 || (unsigned int v9 = v7[19]) == 0)
  {
    int v10 = 0;
    unsigned int v11 = *v7;
    goto LABEL_19;
  }
  long long v12 = (unsigned int *)((char *)v6 + v9 + *(int *)((char *)v6 + v9));
  uint64_t v13 = *v12;
  if (v13)
  {
    unint64_t v14 = 0;
    unint64_t v15 = 0;
    uint64_t v16 = 4 * v13;
    do
    {
      uint64_t v17 = v12[v14 / 4 + 1];
      int64_t v18 = (char *)&v12[v14 / 4] + v17 - *(int *)((char *)&v12[v14 / 4 + 1] + v17);
      if (*((unsigned __int16 *)v18 + 2) >= 5u)
      {
        uint64_t v19 = *((unsigned __int16 *)v18 + 4);
        if (v19) {
          v15 += (*((unsigned __int8 *)&v12[v14 / 4 + 1] + v17 + v19) >> 2) & 1;
        }
      }
      v14 += 4;
    }
    while (v16 != v14);
  }
  else
  {
    unint64_t v15 = 0;
  }
  int v10 = sub_2E2964(v15);
  uint64_t v6 = *a2;
  uint64_t v7 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v11 = *v7;
  if (!*((unsigned char *)a2 + 38))
  {
LABEL_19:
    if (v11 < 0x29) {
      goto LABEL_27;
    }
    unsigned int v20 = v7[20];
    if (!v20) {
      goto LABEL_27;
    }
    goto LABEL_21;
  }
LABEL_16:
  if (v11 < 0x27 || (unsigned int v20 = v7[19]) == 0)
  {
LABEL_27:
    int v29 = 0;
    goto LABEL_30;
  }
LABEL_21:
  __int16 v21 = (unsigned int *)((char *)v6 + v20 + *(int *)((char *)v6 + v20));
  uint64_t v22 = *v21;
  if (v22)
  {
    unint64_t v23 = 0;
    unint64_t v24 = 0;
    uint64_t v25 = 4 * v22;
    do
    {
      uint64_t v26 = v21[v23 / 4 + 1];
      uint64_t v27 = (char *)&v21[v23 / 4] + v26 - *(int *)((char *)&v21[v23 / 4 + 1] + v26);
      if (*((unsigned __int16 *)v27 + 2) >= 5u)
      {
        uint64_t v28 = *((unsigned __int16 *)v27 + 4);
        if (v28) {
          v24 += (*((unsigned __int8 *)&v21[v23 / 4 + 1] + v26 + v28) >> 2) & 1;
        }
      }
      v23 += 4;
    }
    while (v25 != v23);
  }
  else
  {
    unint64_t v24 = 0;
  }
  int v29 = sub_2E2964(v24);
LABEL_30:
  double v30 = (double)v5 * (double)*(uint64_t *)(v3 + 776);
  if (v30 >= 0.0)
  {
    if (v30 >= 4.50359963e15) {
      goto LABEL_38;
    }
    uint64_t v31 = (uint64_t)(v30 + v30) + 1;
  }
  else
  {
    if (v30 <= -4.50359963e15) {
      goto LABEL_38;
    }
    uint64_t v31 = (uint64_t)(v30 + v30);
    if (v31 >= 1) {
      --v31;
    }
  }
  double v30 = (double)(v31 >> 1);
LABEL_38:
  double v32 = (double)(v29 + v10) * (double)*(uint64_t *)(v3 + 784);
  if (v32 >= 0.0)
  {
    if (v32 >= 4.50359963e15) {
      goto LABEL_46;
    }
    uint64_t v33 = (uint64_t)(v32 + v32) + 1;
  }
  else
  {
    if (v32 <= -4.50359963e15) {
      goto LABEL_46;
    }
    uint64_t v33 = (uint64_t)(v32 + v32);
    if (v33 >= 1) {
      --v33;
    }
  }
  double v32 = (double)(v33 >> 1);
LABEL_46:
  if ((uint64_t)v32 + (uint64_t)v30) {
    return (uint64_t)v32 + (uint64_t)v30;
  }
  else {
    return *(void *)(v3 + 776);
  }
}

uint64_t sub_661DC0(uint64_t *a1, long long *a2, uint64_t a3)
{
  long long v59 = 0u;
  long long v60 = 0u;
  *(_OWORD *)uint64_t v58 = 0u;
  sub_66555C((uint64_t)v58);
  unint64_t v6 = *((void *)v58[1] + (*((void *)&v60 + 1) + (void)v60) / 0x55uLL)
     + 48 * ((*((void *)&v60 + 1) + (void)v60) % 0x55uLL);
  *(void *)unint64_t v6 = a3;
  long long v7 = *a2;
  long long v8 = a2[1];
  *(void *)(v6 + 40) = *((void *)a2 + 4);
  *(_OWORD *)(v6 + 24) = v8;
  *(_OWORD *)(v6 + 8) = v7;
  long long __p = 0;
  BOOL v56 = 0;
  uint64_t v57 = 0;
  BOOL v9 = __CFADD__(*((void *)&v60 + 1), 1);
  uint64_t v10 = ++*((void *)&v60 + 1);
  if (v9)
  {
    uint64_t v11 = 0;
    goto LABEL_40;
  }
  while (1)
  {
    unint64_t v12 = *((void *)v58[1] + (unint64_t)v60 / 0x55) + 48 * ((unint64_t)v60 % 0x55);
    int v54 = *(unsigned int **)v12;
    int v13 = *(_DWORD *)(v12 + 40);
    int v14 = *(unsigned __int16 *)(v12 + 44);
    *(void *)&long long v60 = v60 + 1;
    *((void *)&v60 + 1) = v10 - 1;
    if ((unint64_t)v60 >= 0xAA)
    {
      operator delete(*(void **)v58[1]);
      v58[1] = (char *)v58[1] + 8;
      *(void *)&long long v60 = v60 - 85;
    }
    unint64_t v15 = (unsigned int **)__p;
    if (__p != v56)
    {
      while (*v15 != v54)
      {
        if (++v15 == v56) {
          goto LABEL_13;
        }
      }
    }
    if (v15 == v56) {
      break;
    }
LABEL_5:
    uint64_t v10 = *((void *)&v60 + 1);
    if (!*((void *)&v60 + 1))
    {
      uint64_t v11 = 0;
      uint64_t v40 = (unsigned int **)__p;
      if (__p) {
        goto LABEL_39;
      }
      goto LABEL_40;
    }
  }
LABEL_13:
  sub_29603C(&__p, &v54);
  uint64_t v16 = *a1;
  sub_2D5904(*a1, v54, 0, (char **)(*a1 + 7800));
  uint64_t v51 = 0;
  uint64_t v52 = 0;
  uint64_t v53 = 0;
  uint64_t v17 = *(unsigned char **)(v16 + 7800);
  int64_t v18 = *(unsigned char **)(v16 + 7808);
  uint64_t v19 = v18 - v17;
  if (v18 == v17) {
    goto LABEL_5;
  }
  if (v19 < 0) {
    sub_2E00();
  }
  unsigned int v20 = (char *)operator new(v18 - v17);
  memcpy(v20, v17, v19 - 1);
  uint64_t v21 = 0;
  uint64_t v22 = 8 * (v19 >> 3);
  while (1)
  {
    uint64_t v26 = *a1;
    uint64_t v27 = *(void *)&v20[v21];
    uint64_t v28 = (int *)sub_2D5D58(*a1, v27 & 0xFFFFFFFFFFFFLL);
    uint64_t v29 = sub_2E5C38(v26, v27 & 0xFFFFFFFFFFFFLL, 1);
    long long v48 = (unint64_t)v28;
    *(void *)&long long v49 = v29;
    *((void *)&v49 + 1) = v30;
    LODWORD(v50) = v27;
    WORD2(v50) = WORD2(v27);
    BYTE6(v50) = (v27 & 0xFF000000000000) != 0;
    if (v13 == v27 && v14 == WORD2(v27)) {
      goto LABEL_17;
    }
    uint64_t v31 = (unsigned __int16 *)((char *)v28 - *v28);
    unsigned int v32 = *v31;
    if (v32 >= 0x2F) {
      break;
    }
    if (v32 >= 9) {
      goto LABEL_25;
    }
    if (a1[116] >= 0) {
      goto LABEL_30;
    }
LABEL_17:
    v21 += 8;
    if (v22 == v21)
    {
      operator delete(v20);
      goto LABEL_5;
    }
  }
  if (!v31[23] || *((unsigned char *)v28 + v31[23]) != 14)
  {
LABEL_25:
    uint64_t v33 = v31[4];
    if (v33) {
      uint64_t v33 = *(unsigned int *)((char *)v28 + v33);
    }
    if (v33 > a1[116]) {
      goto LABEL_17;
    }
LABEL_30:
    __n128 v34 = (unsigned int *)sub_2E48C4((int **)&v48);
    if (v54 == v34) {
      unint64_t v35 = sub_2E4738((int **)&v48);
    }
    else {
      unint64_t v35 = sub_2E48C4((int **)&v48);
    }
    unint64_t v36 = v35;
    uint64_t v37 = v58[1];
    if ((void *)v59 == v58[1]) {
      uint64_t v38 = 0;
    }
    else {
      uint64_t v38 = 85 * ((uint64_t)(v59 - (unint64_t)v58[1]) >> 3) - 1;
    }
    unint64_t v39 = *((void *)&v60 + 1) + v60;
    if (v38 == *((void *)&v60 + 1) + (void)v60)
    {
      sub_66555C((uint64_t)v58);
      uint64_t v37 = v58[1];
      unint64_t v39 = *((void *)&v60 + 1) + v60;
    }
    unint64_t v23 = v37[v39 / 0x55] + 48 * (v39 % 0x55);
    *(void *)unint64_t v23 = v36;
    long long v24 = v48;
    long long v25 = v49;
    *(void *)(v23 + 40) = v50;
    *(_OWORD *)(v23 + 24) = v25;
    *(_OWORD *)(v23 + 8) = v24;
    ++*((void *)&v60 + 1);
    goto LABEL_17;
  }
  operator delete(v20);
  uint64_t v11 = 1;
  uint64_t v40 = (unsigned int **)__p;
  if (__p)
  {
LABEL_39:
    BOOL v56 = v40;
    operator delete(v40);
  }
LABEL_40:
  int v41 = (void **)v58[1];
  int v42 = (void **)v59;
  *((void *)&v60 + 1) = 0;
  unint64_t v43 = v59 - (unint64_t)v58[1];
  if ((unint64_t)v59 - (unint64_t)v58[1] >= 0x11)
  {
    do
    {
      operator delete(*v41);
      int v42 = (void **)v59;
      int v41 = (void **)((char *)v58[1] + 8);
      v58[1] = v41;
      unint64_t v43 = v59 - (void)v41;
    }
    while ((void)v59 - (void)v41 > 0x10uLL);
  }
  unint64_t v44 = v43 >> 3;
  if (v44 == 1)
  {
    uint64_t v45 = 42;
LABEL_46:
    *(void *)&long long v60 = v45;
  }
  else if (v44 == 2)
  {
    uint64_t v45 = 85;
    goto LABEL_46;
  }
  if (v41 != v42)
  {
    do
    {
      int v46 = *v41++;
      operator delete(v46);
    }
    while (v41 != v42);
    if ((void *)v59 != v58[1]) {
      *(void *)&long long v59 = v59 + (((unint64_t)v58[1] - v59 + 7) & 0xFFFFFFFFFFFFFFF8);
    }
  }
  if (v58[0]) {
    operator delete(v58[0]);
  }
  return v11;
}

void sub_662240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  sub_665B2C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_662254(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, uint64_t a20,char a21)
{
  if (__p)
  {
    operator delete(__p);
    sub_665B2C((uint64_t)&a21);
    _Unwind_Resume(a1);
  }
  sub_665B2C((uint64_t)&a21);
  _Unwind_Resume(a1);
}

uint64_t sub_6622D8(uint64_t a1, void *a2, char a3, char a4, uint64_t a5)
{
  *(void *)a1 = sub_3750CC(a2);
  sub_3CCE64((uint64_t *)(a1 + 8), a2);
  sub_6EB9D0(a1 + 24, a2, 0, a5);
  sub_6DB9C8(a1 + 1000, a2, (const void *)(a1 + 24), (_OWORD *)(a1 + 8), a3);
  *(unsigned char *)(a1 + 2888) = a3;
  *(unsigned char *)(a1 + 2889) = a4;
  return a1;
}

unint64_t sub_662378(uint64_t a1, int **a2)
{
  int v4 = (unsigned __int16 *)((char *)*a2 - **a2);
  if (*v4 < 0x2Fu)
  {
    LOBYTE(v5) = 0;
LABEL_6:
    int v8 = *(unsigned __int8 *)(a1 + 2889);
    if (!*(unsigned char *)(a1 + 2889)) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  uint64_t v5 = v4[23];
  if (!v5) {
    goto LABEL_6;
  }
  int v6 = *((unsigned __int8 *)*a2 + v5);
  if (v6 == 42)
  {
    long long v7 = (unsigned __int8 *)(a1 + 2889);
LABEL_11:
    int v8 = *v7;
    goto LABEL_12;
  }
  LOBYTE(v5) = v6 == 34;
  int v8 = *(unsigned __int8 *)(a1 + 2889);
  if (*(unsigned char *)(a1 + 2889))
  {
LABEL_7:
    if (v5) {
      goto LABEL_12;
    }
    long long v7 = (unsigned __int8 *)(a1 + 2889);
    BOOL v9 = (int *)sub_2D5D58(*(void *)a1, *((unsigned int *)a2 + 8) | ((unint64_t)*((unsigned __int16 *)a2 + 18) << 32));
    uint64_t v10 = (unsigned __int16 *)((char *)v9 - *v9);
    if (*v10 >= 0xBu)
    {
      uint64_t v11 = v10[5];
      if (v11)
      {
        if ((*((unsigned char *)v9 + v11 + 3) & 8) != 0) {
          return 0;
        }
      }
    }
    goto LABEL_11;
  }
LABEL_12:
  if (v8)
  {
    unint64_t v12 = (int *)sub_2D5D58(*(void *)a1, *((unsigned int *)a2 + 8) | ((unint64_t)*((unsigned __int16 *)a2 + 18) << 32));
    int v13 = (unsigned __int16 *)((char *)v12 - *v12);
    if (*v13 >= 0xBu)
    {
      uint64_t v14 = v13[5];
      if (v14)
      {
        if ((*((unsigned char *)v12 + v14 + 3) & 4) != 0) {
          return 1;
        }
      }
    }
  }
  if (*(unsigned char *)(a1 + 700) && *(unsigned char *)(a1 + 2888))
  {
    unint64_t v15 = a2[1];
    if (v15)
    {
      uint64_t v16 = (unsigned __int16 *)((char *)v15 - *v15);
      if (*v16 >= 0x11u)
      {
        uint64_t v17 = v16[8];
        if (v17) {
          return (*(unsigned __int16 *)((char *)v15 + v17) >> 2) & 1;
        }
      }
    }
    return 0;
  }
  uint64_t v19 = (unsigned __int16 *)((char *)*a2 - **a2);
  if (*v19 >= 0x2Fu)
  {
    uint64_t v20 = v19[23];
    if (v20)
    {
      if (*((unsigned char *)*a2 + v20) == 14) {
        return 1;
      }
    }
  }
  if (sub_662728((uint64_t *)a1, a2)) {
    return 1;
  }
  uint64_t v21 = *a2;
  uint64_t v22 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v23 = *v22;
  if (v23 < 0x2F)
  {
    if (v23 < 9) {
      goto LABEL_38;
    }
  }
  else if (v22[23])
  {
    unint64_t v24 = *((unsigned __int8 *)v21 + v22[23]);
    if (v24 < 0x37 && ((0x44000010000409uLL >> v24) & 1) != 0) {
      return (0x7FFFFFFFFFFFFEuLL >> v24) & 1;
    }
  }
  uint64_t v25 = v22[4];
  if (v25)
  {
    if (*(unsigned int *)((char *)v21 + v25) >= *(uint64_t *)(a1 + 544)) {
      return *(unsigned char *)(a1 + 705) && (sub_662A04(a1, a2) & 1) != 0
    }
          || *(unsigned char *)(a1 + 701) && sub_6DC210((void *)(a1 + 1000), a2);
    goto LABEL_39;
  }
LABEL_38:
  if (*(uint64_t *)(a1 + 544) <= 0) {
    return *(unsigned char *)(a1 + 705) && (sub_662A04(a1, a2) & 1) != 0
  }
        || *(unsigned char *)(a1 + 701) && sub_6DC210((void *)(a1 + 1000), a2);
LABEL_39:
  unsigned int v32 = (void *)sub_2E4738(a2);
  if (sub_3CCE68(a1 + 8, (unsigned int **)&v32)) {
    return 0;
  }
  uint64_t v26 = *(void *)a1;
  uint64_t v27 = (unsigned int *)sub_2E48C4(a2);
  sub_660F74(v26, v27, 0, &v32);
  uint64_t v28 = *(void *)a1;
  uint64_t v29 = (unsigned int *)sub_2E4738(a2);
  sub_660F74(v28, v29, 0, &__p);
  if (sub_662904((uint64_t *)v32, v33, (uint64_t *)a1) >= 3 && sub_662904((uint64_t *)__p, v31, (uint64_t *)a1) > 2)
  {
    if (__p)
    {
      uint64_t v31 = (uint64_t *)__p;
      operator delete(__p);
    }
    if (v32)
    {
      uint64_t v33 = (uint64_t *)v32;
      operator delete(v32);
      return 1;
    }
    return 1;
  }
  if (__p)
  {
    uint64_t v31 = (uint64_t *)__p;
    operator delete(__p);
  }
  if (v32)
  {
    uint64_t v33 = (uint64_t *)v32;
    operator delete(v32);
  }
  return *(unsigned char *)(a1 + 705) && (sub_662A04(a1, a2) & 1) != 0
      || *(unsigned char *)(a1 + 701) && sub_6DC210((void *)(a1 + 1000), a2);
}

void sub_6626DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p)
  {
    operator delete(__p);
    uint64_t v14 = a12;
    if (!a12) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    uint64_t v14 = a12;
    if (!a12) {
      goto LABEL_3;
    }
  }
  operator delete(v14);
  _Unwind_Resume(exception_object);
}

uint64_t sub_662728(uint64_t *a1, int **a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = (unsigned __int16 *)((char *)*a2 - **a2);
  if (*v3 < 0x2Fu) {
    return 0;
  }
  if (!v3[23]) {
    return 0;
  }
  uint64_t result = 0;
  switch(*((unsigned char *)v2 + v3[23]))
  {
    case 6:
    case 0xC:
    case 0x2B:
      uint64_t v7 = v3[4];
      if (v7)
      {
        if (*(unsigned int *)((char *)v2 + v7) <= a1[100]) {
          goto LABEL_9;
        }
        return 0;
      }
      if (a1[100] < 0) {
        return 0;
      }
      goto LABEL_9;
    case 0x2C:
      uint64_t v9 = v3[4];
      if (v9)
      {
        if (*(unsigned int *)((char *)v2 + v9) > a1[99]) {
          return 0;
        }
      }
      else if (a1[99] < 0)
      {
        return 0;
      }
LABEL_9:
      unint64_t v8 = sub_2E48C4(a2);
      if (sub_663420(a1, (long long *)a2, v8))
      {
        uint64_t result = 1;
      }
      else
      {
        unint64_t v10 = sub_2E4738(a2);
        uint64_t result = sub_663420(a1, (long long *)a2, v10);
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_662904(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  if (a1 == a2) {
    return 0;
  }
  uint64_t v5 = a1;
  uint64_t v6 = 0;
  do
  {
    uint64_t v7 = *v5;
    uint64_t v8 = *a3;
    unint64_t v9 = *v5 & 0xFFFFFFFFFFFFLL;
    unint64_t v10 = (int *)sub_2D5D58(*a3, v9);
    if (*(unsigned char *)(v8 + 7772)) {
      sub_2DB8E0(v8 + 3896, v7, 0);
    }
    sub_2E5C38(v8, v9, 1);
    uint64_t v11 = (unsigned __int16 *)((char *)v10 - *v10);
    if (*v11 < 0x2Fu
      || (uint64_t v12 = v11[23]) == 0
      || ((unsigned int v13 = *((unsigned __int8 *)v10 + v12), v14 = v13 > 0x2F, v15 = (1 << v13) & 0xA58466810004, !v14)
        ? (BOOL v16 = v15 == 0)
        : (BOOL v16 = 1),
          v16))
    {
      ++v6;
    }
    ++v5;
  }
  while (v5 != a2);
  return v6;
}

uint64_t sub_662A04(uint64_t a1, int **a2)
{
  int v4 = (char *)*a2;
  uint64_t v5 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v6 = *v5;
  if (v6 < 9)
  {
    if ((uint64_t)(*(void *)(a1 + 544) + *(void *)(a1 + 712)) < 0) {
      return 0;
    }
  }
  else
  {
    uint64_t v7 = v5[4];
    if (v5[4]) {
      uint64_t v7 = *(unsigned int *)&v4[v7];
    }
    if (v7 > *(void *)(a1 + 544) + *(void *)(a1 + 712)) {
      return 0;
    }
  }
  if (v6 >= 0x2F)
  {
    uint64_t v9 = v5[23];
    if (v9)
    {
      unsigned int v10 = v4[v9] - 2;
      if (v10 < 0x29 && ((0x14109A04001uLL >> v10) & 1) != 0) {
        return 0;
      }
    }
  }
  uint64_t v99 = a1;
  uint64_t v96 = 0;
  uint64_t v97 = 0;
  uint64_t v98 = 0;
  uint64_t v93 = 0;
  uint64_t v94 = 0;
  uint64_t v95 = 0;
  long long __p = 0;
  uint64_t v91 = 0;
  uint64_t v92 = 0;
  int v11 = *((unsigned __int8 *)a2 + 38);
  long long v12 = *((_OWORD *)a2 + 1);
  v88[0] = *(_OWORD *)a2;
  v88[1] = v12;
  v89 = a2[4];
  if (v11)
  {
    BYTE6(v89) ^= 1u;
    long long v13 = *((_OWORD *)a2 + 1);
    long long v85 = *(_OWORD *)a2;
    long long v86 = v13;
    size_t v87 = a2[4];
  }
  else
  {
    size_t v87 = a2[4];
    long long v14 = *((_OWORD *)a2 + 1);
    long long v85 = *(_OWORD *)a2;
    long long v86 = v14;
    BYTE6(v87) ^= 1u;
  }
  sub_2E44A4(*(void *)a1, (uint64_t)v88, &v93);
  sub_2E44A4(*(void *)a1, (uint64_t)&v85, &v96);
  uint64_t v15 = (__n128 *)v96;
  BOOL v16 = v97;
  if (v96 == v97)
  {
LABEL_22:
    for (uint64_t i = (int **)v93; i != v94; i += 5)
    {
      uint64_t v21 = (unsigned __int16 *)((char *)*i - **i);
      if (*v21 >= 0x2Fu)
      {
        uint64_t v22 = v21[23];
        if (v22)
        {
          if (*((unsigned char *)*i + v22) == 14) {
            goto LABEL_28;
          }
        }
      }
    }
  }
  else
  {
    uint64_t v17 = (__n128 *)v96;
    while (1)
    {
      int64_t v18 = (unsigned __int16 *)(v17->n128_u64[0] - *(int *)v17->n128_u64[0]);
      if (*v18 >= 0x2Fu)
      {
        uint64_t v19 = v18[23];
        if (v19)
        {
          if (*(unsigned char *)(v17->n128_u64[0] + v19) == 14) {
            break;
          }
        }
      }
      uint64_t v17 = (__n128 *)((char *)v17 + 40);
      if (v17 == v97) {
        goto LABEL_22;
      }
    }
LABEL_28:
    if (!*(unsigned char *)(a1 + 706)) {
      goto LABEL_135;
    }
  }
  unint64_t v23 = 0xCCCCCCCCCCCCCCCDLL * (((char *)v97 - (unsigned char *)v96) >> 3);
  unint64_t v24 = (int **)__p;
  if (0xCCCCCCCCCCCCCCCDLL * ((v92 - (unsigned char *)__p) >> 3) < v23)
  {
    if (v23 >= 0x666666666666667) {
      sub_2E00();
    }
    uint64_t v25 = v91;
    uint64_t v26 = (char *)operator new((char *)v97 - (unsigned char *)v96);
    uint64_t v27 = (int **)&v26[40 * (((char *)v25 - (char *)v24) / 40)];
    uint64_t v28 = v27;
    if (v25 != v24)
    {
      uint64_t v29 = &v26[40 * (((char *)v25 - (char *)v24) / 40)];
      do
      {
        long long v30 = *(_OWORD *)(v25 - 5);
        long long v31 = *(_OWORD *)(v25 - 3);
        uint64_t v28 = (int **)(v29 - 40);
        *((void *)v29 - 1) = *(v25 - 1);
        *(_OWORD *)(v29 - 24) = v31;
        *(_OWORD *)(v29 - 40) = v30;
        v25 -= 5;
        v29 -= 40;
      }
      while (v25 != v24);
    }
    long long __p = v28;
    uint64_t v91 = v27;
    uint64_t v92 = &v26[40 * v23];
    if (v24)
    {
      operator delete(v24);
      uint64_t v15 = (__n128 *)v96;
      BOOL v16 = v97;
    }
  }
  if (v15 != v16)
  {
    unsigned int v32 = v91;
    do
    {
      __n128 v33 = *v15;
      __n128 v34 = v15[1];
      unint64_t v101 = v15[2].n128_u64[0];
      v100[0] = v33;
      v100[1] = v34;
      BYTE6(v101) ^= 1u;
      unsigned int v32 = (int **)&sub_2E7FC8((char **)&__p, (uint64_t)v32, v100)[2].n128_u64[1];
      uint64_t v15 = (__n128 *)((char *)v15 + 40);
    }
    while (v15 != v16);
  }
  unint64_t v35 = sub_665BF4((int **)__p, v91, (int **)v88, a1);
  if (v91 != v35) {
    uint64_t v91 = v35;
  }
  unint64_t v36 = sub_665ED4((int **)v93, v94, (int **)v88, a1);
  if (v94 != v36) {
    uint64_t v94 = v36;
  }
  uint64_t v37 = (int **)__p;
  v84 = v91;
  if (__p == v91)
  {
    uint64_t v8 = 0;
    if (!__p) {
      goto LABEL_137;
    }
LABEL_136:
    uint64_t v91 = v37;
    operator delete(v37);
    goto LABEL_137;
  }
  if (v93 == v36)
  {
LABEL_135:
    uint64_t v8 = 0;
    uint64_t v37 = (int **)__p;
    if (!__p) {
      goto LABEL_137;
    }
    goto LABEL_136;
  }
LABEL_47:
  uint64_t v38 = (int **)v93;
  unint64_t v39 = v94;
  while (1)
  {
    if (v38 == v39)
    {
      v37 += 5;
      if (v37 == v84) {
        goto LABEL_135;
      }
      goto LABEL_47;
    }
    int v41 = *v37;
    int v42 = (unsigned __int16 *)((char *)*v37 - **v37);
    unsigned int v43 = *v42;
    if (*((unsigned char *)v37 + 38))
    {
      if (v43 >= 0x49)
      {
        unsigned int v44 = v42[36];
        if (v42[36]) {
          goto LABEL_58;
        }
      }
    }
    else if (v43 >= 0x4B)
    {
      unsigned int v44 = v42[37];
      if (v42[37])
      {
LABEL_58:
        __int16 v45 = *(_WORD *)((char *)v41 + v44);
        int v46 = *((unsigned __int8 *)v38 + 38);
        v47 = *v38;
        long long v48 = (unsigned __int16 *)((char *)*v38 - **v38);
        unsigned int v49 = *v48;
        if (*((unsigned char *)v38 + 38)) {
          goto LABEL_63;
        }
        goto LABEL_59;
      }
    }
    __int16 v45 = -1;
    int v46 = *((unsigned __int8 *)v38 + 38);
    v47 = *v38;
    long long v48 = (unsigned __int16 *)((char *)*v38 - **v38);
    unsigned int v49 = *v48;
    if (*((unsigned char *)v38 + 38))
    {
LABEL_63:
      if (v49 >= 0x4B)
      {
        unsigned int v50 = v48[37];
        if (v48[37]) {
          goto LABEL_65;
        }
      }
      goto LABEL_66;
    }
LABEL_59:
    if (v49 >= 0x49)
    {
      unsigned int v50 = v48[36];
      if (v48[36])
      {
LABEL_65:
        int v51 = *(unsigned __int16 *)((char *)v47 + v50);
        goto LABEL_67;
      }
    }
LABEL_66:
    int v51 = 0xFFFF;
LABEL_67:
    unsigned __int16 v52 = v45 + 18000;
    unsigned __int16 v53 = v45 - 18000;
    if ((unsigned __int16)(v52 >> 5) < 0x465u) {
      unsigned __int16 v53 = v52;
    }
    int v54 = v51 - v53;
    if (v54 > 18000) {
      v54 -= 36000;
    }
    if (v54 < -17999) {
      v54 += 36000;
    }
    if (*((unsigned char *)v37 + 38))
    {
      if (v43 < 0xB || (uint64_t v55 = v42[5]) == 0)
      {
LABEL_84:
        BOOL v56 = 0;
        BOOL v57 = v49 >= 0xB;
        if (!v46) {
          goto LABEL_85;
        }
        goto LABEL_92;
      }
      BOOL v56 = 1;
      if ((*((unsigned char *)v41 + v55) & 2) == 0)
      {
        BOOL v56 = (*(int *)((char *)v41 + v55) & 1) != 0;
        BOOL v57 = v49 >= 0xB;
        if (!v46) {
          goto LABEL_85;
        }
        goto LABEL_92;
      }
      goto LABEL_91;
    }
    if (v43 < 0xB) {
      goto LABEL_84;
    }
    if (!v42[5])
    {
      BOOL v56 = 0;
LABEL_91:
      BOOL v57 = v49 >= 0xB;
      if (!v46) {
        goto LABEL_85;
      }
      goto LABEL_92;
    }
    if (*((unsigned char *)v41 + v42[5]))
    {
      BOOL v56 = 1;
      BOOL v57 = v49 >= 0xB;
      if (!v46)
      {
LABEL_85:
        if (!v57) {
          goto LABEL_98;
        }
        uint64_t v58 = v48[5];
        if (!v58)
        {
          int v59 = 0;
LABEL_101:
          uint64_t v60 = (uint64_t)*a2;
          std::string::size_type v61 = (unsigned __int16 *)((char *)*a2 - **a2);
          if (*v61 < 9u) {
            goto LABEL_107;
          }
          goto LABEL_102;
        }
        if (*((unsigned char *)v47 + v58))
        {
          int v59 = 1;
          uint64_t v60 = (uint64_t)*a2;
          std::string::size_type v61 = (unsigned __int16 *)((char *)*a2 - **a2);
          if (*v61 < 9u) {
            goto LABEL_107;
          }
          goto LABEL_102;
        }
        int v59 = 2;
LABEL_96:
        int v59 = (*(int *)((char *)v47 + v58) & v59) != 0;
        uint64_t v60 = (uint64_t)*a2;
        std::string::size_type v61 = (unsigned __int16 *)((char *)*a2 - **a2);
        if (*v61 < 9u) {
          goto LABEL_107;
        }
        goto LABEL_102;
      }
    }
    else
    {
      BOOL v56 = (*(int *)((char *)v41 + v42[5]) & 2) != 0;
      BOOL v57 = v49 >= 0xB;
      if (!v46) {
        goto LABEL_85;
      }
    }
LABEL_92:
    if (v57)
    {
      uint64_t v58 = v48[5];
      if (v58)
      {
        int v59 = 1;
        if ((*((unsigned char *)v47 + v58) & 2) != 0) {
          goto LABEL_101;
        }
        goto LABEL_96;
      }
    }
LABEL_98:
    int v59 = 0;
    uint64_t v60 = (uint64_t)*a2;
    std::string::size_type v61 = (unsigned __int16 *)((char *)*a2 - **a2);
    if (*v61 < 9u) {
      goto LABEL_107;
    }
LABEL_102:
    uint64_t v62 = v61[4];
    if (v62)
    {
      uint64_t v63 = *(unsigned int *)(v60 + v62);
      goto LABEL_108;
    }
LABEL_107:
    uint64_t v63 = 0;
LABEL_108:
    double v64 = fabs((double)v54 / 100.0);
    if (v63 <= *(void *)(a1 + 712) && v64 <= *(double *)(a1 + 720) && ((v56 ^ v59) & 1) != 0) {
      break;
    }
    uint64_t v65 = sub_661B10(&v99, v37);
    double v66 = (double)v65 * 0.5;
    uint64_t v67 = (uint64_t)(v66 + v66);
    uint64_t v68 = v67 - 1;
    if (v67 < 1) {
      uint64_t v68 = (uint64_t)(v66 + v66);
    }
    double v69 = (double)(v68 >> 1);
    if (v66 <= -4.50359963e15) {
      double v69 = (double)v65 * 0.5;
    }
    double v70 = (double)((v67 + 1) >> 1);
    if (v66 >= 4.50359963e15) {
      double v70 = (double)v65 * 0.5;
    }
    if (v66 >= 0.0) {
      double v71 = v70;
    }
    else {
      double v71 = v69;
    }
    uint64_t v72 = sub_661B10(&v99, v38);
    double v73 = (double)v72 * 0.5;
    uint64_t v74 = (uint64_t)(v73 + v73);
    uint64_t v75 = v74 - 1;
    if (v74 < 1) {
      uint64_t v75 = (uint64_t)(v73 + v73);
    }
    uint64_t v76 = v75 >> 1;
    double v77 = v73 > -4.50359963e15 ? (double)v76 : (double)v72 * 0.5;
    uint64_t v78 = (v74 + 1) >> 1;
    double v79 = v73 < 4.50359963e15 ? (double)v78 : (double)v72 * 0.5;
    double v80 = v73 >= 0.0 ? v79 : v77;
    if (v64 <= *(double *)(a1 + 720))
    {
      unint64_t v81 = (unsigned __int16 *)((char *)*a2 - **a2);
      if (*v81 >= 9u && (uint64_t v82 = v81[4]) != 0) {
        uint64_t v40 = *(unsigned int *)((char *)*a2 + v82);
      }
      else {
        uint64_t v40 = 0;
      }
      if (v40 <= (uint64_t)v80 + (uint64_t)v71 + *(void *)(a1 + 544)) {
        break;
      }
    }
    v38 += 5;
  }
  uint64_t v8 = 1;
  uint64_t v37 = (int **)__p;
  if (__p) {
    goto LABEL_136;
  }
LABEL_137:
  if (v93)
  {
    uint64_t v94 = (int **)v93;
    operator delete(v93);
  }
  if (v96)
  {
    uint64_t v97 = (__n128 *)v96;
    operator delete(v96);
  }
  return v8;
}

void sub_6631CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30)
{
  if (__p)
  {
    operator delete(__p);
    long long v31 = a26;
    if (!a26)
    {
LABEL_3:
      unsigned int v32 = a29;
      if (!a29) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else
  {
    long long v31 = a26;
    if (!a26) {
      goto LABEL_3;
    }
  }
  operator delete(v31);
  unsigned int v32 = a29;
  if (!a29) {
LABEL_4:
  }
    _Unwind_Resume(exception_object);
LABEL_7:
  operator delete(v32);
  _Unwind_Resume(exception_object);
}

unint64_t sub_663238(uint64_t a1, int **a2)
{
  if (sub_6EB9D4(a1 + 24) && (int v4 = (unsigned __int16 *)((char *)*a2 - **a2), *v4 >= 0xBu) && (v5 = v4[5]) != 0)
  {
    uint64_t v6 = *((unsigned char *)*a2 + v5 + 2) & 1;
    if (*(unsigned char *)(a1 + 522)) {
      return v6;
    }
  }
  else
  {
    uint64_t v6 = 0;
    if (*(unsigned char *)(a1 + 522)) {
      return v6;
    }
  }
  uint64_t v7 = *(void *)a1;
  unint64_t v8 = (unint64_t)a2[4];
  uint64_t v9 = (int *)sub_2D5D58(*(void *)a1, v8 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v7 + 7772))
  {
    unsigned int v10 = sub_2DB8E0(v7 + 3896, v8, 0);
    int v11 = &v10[-*(int *)v10];
    if (*(unsigned __int16 *)v11 < 5u)
    {
      uint64_t v12 = 0;
    }
    else
    {
      uint64_t v12 = *((unsigned __int16 *)v11 + 2);
      if (v12) {
        v12 += (uint64_t)&v10[*(unsigned int *)&v10[v12]];
      }
    }
    long long v13 = (int *)(v12 + 4 * WORD2(v8) + 4 + *(unsigned int *)(v12 + 4 * WORD2(v8) + 4));
  }
  else
  {
    long long v13 = 0;
  }
  uint64_t v14 = 1;
  v18[0] = v9;
  v18[1] = v13;
  v18[2] = (int *)sub_2E5C38(v7, v8 & 0xFFFFFFFFFFFFLL, 1);
  v18[3] = v15;
  int v19 = v8;
  __int16 v20 = WORD2(v8);
  BOOL v21 = (v8 & 0xFF000000000000) != 0;
  if (*(unsigned char *)(a1 + 523)) {
    char v16 = v6;
  }
  else {
    char v16 = 0;
  }
  if ((v16 & 1) == 0) {
    return sub_662378(a1, v18);
  }
  return v14;
}

BOOL sub_6633B4(uint64_t a1, void *a2)
{
  BOOL result = sub_6EB9D4(a1 + 24);
  if (result)
  {
    int v4 = (unsigned __int16 *)(*a2 - *(int *)*a2);
    if (*v4 >= 0xBu && (uint64_t v5 = v4[5]) != 0) {
      return *(unsigned char *)(*a2 + v5 + 2) & 1;
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t sub_663420(uint64_t *a1, long long *a2, uint64_t a3)
{
  long long v59 = 0u;
  long long v60 = 0u;
  *(_OWORD *)uint64_t v58 = 0u;
  sub_66555C((uint64_t)v58);
  unint64_t v6 = *((void *)v58[1] + (*((void *)&v60 + 1) + (void)v60) / 0x55uLL)
     + 48 * ((*((void *)&v60 + 1) + (void)v60) % 0x55uLL);
  *(void *)unint64_t v6 = a3;
  long long v7 = *a2;
  long long v8 = a2[1];
  *(void *)(v6 + 40) = *((void *)a2 + 4);
  *(_OWORD *)(v6 + 24) = v8;
  *(_OWORD *)(v6 + 8) = v7;
  long long __p = 0;
  BOOL v56 = 0;
  uint64_t v57 = 0;
  BOOL v9 = __CFADD__(*((void *)&v60 + 1), 1);
  uint64_t v10 = ++*((void *)&v60 + 1);
  if (v9)
  {
    uint64_t v11 = 0;
    goto LABEL_40;
  }
  while (1)
  {
    unint64_t v12 = *((void *)v58[1] + (unint64_t)v60 / 0x55) + 48 * ((unint64_t)v60 % 0x55);
    int v54 = *(unsigned int **)v12;
    int v13 = *(_DWORD *)(v12 + 40);
    int v14 = *(unsigned __int16 *)(v12 + 44);
    *(void *)&long long v60 = v60 + 1;
    *((void *)&v60 + 1) = v10 - 1;
    if ((unint64_t)v60 >= 0xAA)
    {
      operator delete(*(void **)v58[1]);
      v58[1] = (char *)v58[1] + 8;
      *(void *)&long long v60 = v60 - 85;
    }
    uint64_t v15 = (unsigned int **)__p;
    if (__p != v56)
    {
      while (*v15 != v54)
      {
        if (++v15 == v56) {
          goto LABEL_13;
        }
      }
    }
    if (v15 == v56) {
      break;
    }
LABEL_5:
    uint64_t v10 = *((void *)&v60 + 1);
    if (!*((void *)&v60 + 1))
    {
      uint64_t v11 = 0;
      uint64_t v40 = (unsigned int **)__p;
      if (__p) {
        goto LABEL_39;
      }
      goto LABEL_40;
    }
  }
LABEL_13:
  sub_29603C(&__p, &v54);
  uint64_t v16 = *a1;
  sub_2D5904(*a1, v54, 0, (char **)(*a1 + 7800));
  uint64_t v51 = 0;
  uint64_t v52 = 0;
  uint64_t v53 = 0;
  uint64_t v17 = *(unsigned char **)(v16 + 7800);
  int64_t v18 = *(unsigned char **)(v16 + 7808);
  uint64_t v19 = v18 - v17;
  if (v18 == v17) {
    goto LABEL_5;
  }
  if (v19 < 0) {
    sub_2E00();
  }
  __int16 v20 = (char *)operator new(v18 - v17);
  memcpy(v20, v17, v19 - 1);
  uint64_t v21 = 0;
  uint64_t v22 = 8 * (v19 >> 3);
  while (1)
  {
    uint64_t v26 = *a1;
    uint64_t v27 = *(void *)&v20[v21];
    uint64_t v28 = (int *)sub_2D5D58(*a1, v27 & 0xFFFFFFFFFFFFLL);
    uint64_t v29 = sub_2E5C38(v26, v27 & 0xFFFFFFFFFFFFLL, 1);
    long long v48 = (unint64_t)v28;
    *(void *)&long long v49 = v29;
    *((void *)&v49 + 1) = v30;
    LODWORD(v50) = v27;
    WORD2(v50) = WORD2(v27);
    BYTE6(v50) = (v27 & 0xFF000000000000) != 0;
    if (v13 == v27 && v14 == WORD2(v27)) {
      goto LABEL_17;
    }
    long long v31 = (unsigned __int16 *)((char *)v28 - *v28);
    unsigned int v32 = *v31;
    if (v32 >= 0x2F) {
      break;
    }
    if (v32 >= 9) {
      goto LABEL_25;
    }
    if (a1[116] >= 0) {
      goto LABEL_30;
    }
LABEL_17:
    v21 += 8;
    if (v22 == v21)
    {
      operator delete(v20);
      goto LABEL_5;
    }
  }
  if (!v31[23] || *((unsigned char *)v28 + v31[23]) != 14)
  {
LABEL_25:
    uint64_t v33 = v31[4];
    if (v33) {
      uint64_t v33 = *(unsigned int *)((char *)v28 + v33);
    }
    if (v33 > a1[116]) {
      goto LABEL_17;
    }
LABEL_30:
    __n128 v34 = (unsigned int *)sub_2E48C4((int **)&v48);
    if (v54 == v34) {
      unint64_t v35 = sub_2E4738((int **)&v48);
    }
    else {
      unint64_t v35 = sub_2E48C4((int **)&v48);
    }
    unint64_t v36 = v35;
    uint64_t v37 = v58[1];
    if ((void *)v59 == v58[1]) {
      uint64_t v38 = 0;
    }
    else {
      uint64_t v38 = 85 * ((uint64_t)(v59 - (unint64_t)v58[1]) >> 3) - 1;
    }
    unint64_t v39 = *((void *)&v60 + 1) + v60;
    if (v38 == *((void *)&v60 + 1) + (void)v60)
    {
      sub_66555C((uint64_t)v58);
      uint64_t v37 = v58[1];
      unint64_t v39 = *((void *)&v60 + 1) + v60;
    }
    unint64_t v23 = v37[v39 / 0x55] + 48 * (v39 % 0x55);
    *(void *)unint64_t v23 = v36;
    long long v24 = v48;
    long long v25 = v49;
    *(void *)(v23 + 40) = v50;
    *(_OWORD *)(v23 + 24) = v25;
    *(_OWORD *)(v23 + 8) = v24;
    ++*((void *)&v60 + 1);
    goto LABEL_17;
  }
  operator delete(v20);
  uint64_t v11 = 1;
  uint64_t v40 = (unsigned int **)__p;
  if (__p)
  {
LABEL_39:
    BOOL v56 = v40;
    operator delete(v40);
  }
LABEL_40:
  int v41 = (void **)v58[1];
  int v42 = (void **)v59;
  *((void *)&v60 + 1) = 0;
  unint64_t v43 = v59 - (unint64_t)v58[1];
  if ((unint64_t)v59 - (unint64_t)v58[1] >= 0x11)
  {
    do
    {
      operator delete(*v41);
      int v42 = (void **)v59;
      int v41 = (void **)((char *)v58[1] + 8);
      v58[1] = v41;
      unint64_t v43 = v59 - (void)v41;
    }
    while ((void)v59 - (void)v41 > 0x10uLL);
  }
  unint64_t v44 = v43 >> 3;
  if (v44 == 1)
  {
    uint64_t v45 = 42;
LABEL_46:
    *(void *)&long long v60 = v45;
  }
  else if (v44 == 2)
  {
    uint64_t v45 = 85;
    goto LABEL_46;
  }
  if (v41 != v42)
  {
    do
    {
      int v46 = *v41++;
      operator delete(v46);
    }
    while (v41 != v42);
    if ((void *)v59 != v58[1]) {
      *(void *)&long long v59 = v59 + (((unint64_t)v58[1] - v59 + 7) & 0xFFFFFFFFFFFFFFF8);
    }
  }
  if (v58[0]) {
    operator delete(v58[0]);
  }
  return v11;
}

void sub_6638A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  sub_665B2C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_6638B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, uint64_t a20,char a21)
{
  if (__p)
  {
    operator delete(__p);
    sub_665B2C((uint64_t)&a21);
    _Unwind_Resume(a1);
  }
  sub_665B2C((uint64_t)&a21);
  _Unwind_Resume(a1);
}

uint64_t sub_663938(uint64_t a1, void *a2, char a3, char a4, uint64_t a5)
{
  *(void *)a1 = sub_3750CC(a2);
  sub_3CCE64((uint64_t *)(a1 + 8), a2);
  sub_6EB9D0(a1 + 24, a2, 2, a5);
  sub_6DE6DC(a1 + 1000, a2, (const void *)(a1 + 24), (_OWORD *)(a1 + 8), a3);
  *(unsigned char *)(a1 + 2888) = a3;
  *(unsigned char *)(a1 + 2889) = a4;
  return a1;
}

unint64_t sub_6639D8(uint64_t a1, int **a2)
{
  int v4 = (unsigned __int16 *)((char *)*a2 - **a2);
  if (*v4 < 0x2Fu)
  {
    LOBYTE(v5) = 0;
LABEL_6:
    int v8 = *(unsigned __int8 *)(a1 + 2889);
    if (!*(unsigned char *)(a1 + 2889)) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  uint64_t v5 = v4[23];
  if (!v5) {
    goto LABEL_6;
  }
  int v6 = *((unsigned __int8 *)*a2 + v5);
  if (v6 == 42)
  {
    long long v7 = (unsigned __int8 *)(a1 + 2889);
LABEL_11:
    int v8 = *v7;
    goto LABEL_12;
  }
  LOBYTE(v5) = v6 == 34;
  int v8 = *(unsigned __int8 *)(a1 + 2889);
  if (!*(unsigned char *)(a1 + 2889)) {
    goto LABEL_12;
  }
LABEL_7:
  if ((v5 & 1) == 0)
  {
    long long v7 = (unsigned __int8 *)(a1 + 2889);
    BOOL v9 = (int *)sub_2D5D58(*(void *)a1, *((unsigned int *)a2 + 8) | ((unint64_t)*((unsigned __int16 *)a2 + 18) << 32));
    uint64_t v10 = (unsigned __int16 *)((char *)v9 - *v9);
    if (*v10 >= 0xBu)
    {
      uint64_t v11 = v10[5];
      if (v11)
      {
        if ((*((unsigned char *)v9 + v11 + 3) & 8) != 0) {
          return 0;
        }
      }
    }
    goto LABEL_11;
  }
LABEL_12:
  if (v8)
  {
    unint64_t v12 = (int *)sub_2D5D58(*(void *)a1, *((unsigned int *)a2 + 8) | ((unint64_t)*((unsigned __int16 *)a2 + 18) << 32));
    int v13 = (unsigned __int16 *)((char *)v12 - *v12);
    if (*v13 >= 0xBu)
    {
      uint64_t v14 = v13[5];
      if (v14)
      {
        if ((*((unsigned char *)v12 + v14 + 3) & 4) != 0) {
          return 1;
        }
      }
    }
  }
  if (!*(unsigned char *)(a1 + 700) || !*(unsigned char *)(a1 + 2888))
  {
    __int16 v20 = (unsigned __int16 *)((char *)*a2 - **a2);
    if (*v20 >= 0x2Fu)
    {
      uint64_t v21 = v20[23];
      if (v21)
      {
        if (*((unsigned char *)*a2 + v21) == 14) {
          return 1;
        }
      }
    }
    if (sub_663DA8((uint64_t *)a1, a2)) {
      return 1;
    }
    unint64_t v23 = *a2;
    long long v24 = (unsigned __int16 *)((char *)*a2 - **a2);
    unsigned int v25 = *v24;
    if (v25 < 0x2F)
    {
      if (v25 < 9) {
        goto LABEL_43;
      }
    }
    else if (v24[23])
    {
      unint64_t v26 = *((unsigned __int8 *)v23 + v24[23]);
      if (v26 < 0x37 && ((0x44000010000409uLL >> v26) & 1) != 0) {
        return (0x7FFFFFFFFFFFFEuLL >> v26) & 1;
      }
    }
    uint64_t v27 = v24[4];
    if (v27)
    {
      if (*(unsigned int *)((char *)v23 + v27) >= *(uint64_t *)(a1 + 544)) {
        return *(unsigned char *)(a1 + 705) && (sub_664054(a1, a2) & 1) != 0
      }
            || *(unsigned char *)(a1 + 701) && sub_6DEED8((void *)(a1 + 1000), a2);
      goto LABEL_44;
    }
LABEL_43:
    if (*(uint64_t *)(a1 + 544) <= 0) {
      return *(unsigned char *)(a1 + 705) && (sub_664054(a1, a2) & 1) != 0
    }
          || *(unsigned char *)(a1 + 701) && sub_6DEED8((void *)(a1 + 1000), a2);
LABEL_44:
    __n128 v34 = (void *)sub_2E4738(a2);
    if (sub_3CCE68(a1 + 8, (unsigned int **)&v34)) {
      return 0;
    }
    uint64_t v28 = *(void *)a1;
    uint64_t v29 = (unsigned int *)sub_2E48C4(a2);
    sub_660F74(v28, v29, 0, &v34);
    uint64_t v30 = *(void *)a1;
    long long v31 = (unsigned int *)sub_2E4738(a2);
    sub_660F74(v30, v31, 0, &__p);
    if (sub_663F84((unint64_t *)v34, v35, (uint64_t *)a1, a2) >= 3
      && sub_663F84((unint64_t *)__p, v33, (uint64_t *)a1, a2) > 2)
    {
      if (__p)
      {
        uint64_t v33 = (unint64_t *)__p;
        operator delete(__p);
      }
      if (v34)
      {
        unint64_t v35 = (unint64_t *)v34;
        operator delete(v34);
        return 1;
      }
      return 1;
    }
    if (__p)
    {
      uint64_t v33 = (unint64_t *)__p;
      operator delete(__p);
    }
    if (v34)
    {
      unint64_t v35 = (unint64_t *)v34;
      operator delete(v34);
    }
    return *(unsigned char *)(a1 + 705) && (sub_664054(a1, a2) & 1) != 0
        || *(unsigned char *)(a1 + 701) && sub_6DEED8((void *)(a1 + 1000), a2);
  }
  uint64_t v15 = a2[1];
  if (!v15) {
    return 0;
  }
  if (*((unsigned char *)a2 + 38)) {
    int v16 = 1024;
  }
  else {
    int v16 = 512;
  }
  uint64_t v17 = (unsigned __int16 *)((char *)v15 - *v15);
  if (*v17 >= 0x11u && (uint64_t v18 = v17[8]) != 0) {
    int v19 = *(unsigned __int16 *)((char *)v15 + v18);
  }
  else {
    int v19 = 0;
  }
  return (v19 & v16) != 0;
}

void sub_663D5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p)
  {
    operator delete(__p);
    uint64_t v14 = a12;
    if (!a12) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    uint64_t v14 = a12;
    if (!a12) {
      goto LABEL_3;
    }
  }
  operator delete(v14);
  _Unwind_Resume(exception_object);
}

uint64_t sub_663DA8(uint64_t *a1, int **a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = (unsigned __int16 *)((char *)*a2 - **a2);
  if (*v3 < 0x2Fu) {
    return 0;
  }
  if (!v3[23]) {
    return 0;
  }
  uint64_t result = 0;
  switch(*((unsigned char *)v2 + v3[23]))
  {
    case 6:
    case 0xC:
    case 0x2B:
      uint64_t v7 = v3[4];
      if (v7)
      {
        if (*(unsigned int *)((char *)v2 + v7) <= a1[100]) {
          goto LABEL_9;
        }
        return 0;
      }
      if (a1[100] < 0) {
        return 0;
      }
      goto LABEL_9;
    case 0x2C:
      uint64_t v9 = v3[4];
      if (v9)
      {
        if (*(unsigned int *)((char *)v2 + v9) > a1[99]) {
          return 0;
        }
      }
      else if (a1[99] < 0)
      {
        return 0;
      }
LABEL_9:
      unint64_t v8 = sub_2E48C4(a2);
      if (sub_664AC8(a1, (long long *)a2, v8))
      {
        uint64_t result = 1;
      }
      else
      {
        unint64_t v10 = sub_2E4738(a2);
        uint64_t result = sub_664AC8(a1, (long long *)a2, v10);
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_663F84(unint64_t *a1, unint64_t *a2, uint64_t *a3, void *a4)
{
  if (a1 == a2) {
    return 0;
  }
  uint64_t v7 = a1;
  uint64_t v8 = 0;
  do
  {
    while (1)
    {
      unint64_t v10 = (unsigned __int16 *)(*a4 - *(int *)*a4);
      if (*v10 >= 0x2Fu)
      {
        uint64_t v11 = v10[23];
        if (v11) {
          break;
        }
      }
      unint64_t v9 = *v7++;
      v8 += sub_664FE0(a3, v9, 0);
      if (v7 == a2) {
        return v8;
      }
    }
    int v12 = *(unsigned __int8 *)(*a4 + v11);
    BOOL v14 = v12 == 9 || v12 == 20;
    unint64_t v15 = *v7++;
    v8 += sub_664FE0(a3, v15, v14);
  }
  while (v7 != a2);
  return v8;
}

uint64_t sub_664054(uint64_t a1, int **a2)
{
  int v4 = (char *)*a2;
  uint64_t v5 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v6 = *v5;
  if (v6 < 9)
  {
    if ((uint64_t)(*(void *)(a1 + 544) + *(void *)(a1 + 712)) < 0) {
      return 0;
    }
  }
  else
  {
    uint64_t v7 = v5[4];
    if (v5[4]) {
      uint64_t v7 = *(unsigned int *)&v4[v7];
    }
    if (v7 > *(void *)(a1 + 544) + *(void *)(a1 + 712)) {
      return 0;
    }
  }
  if (v6 >= 0x2F)
  {
    uint64_t v9 = v5[23];
    if (v9)
    {
      unsigned int v10 = v4[v9] - 2;
      if (v10 < 0x29 && ((0x14109A04001uLL >> v10) & 1) != 0) {
        return 0;
      }
    }
  }
  uint64_t v99 = a1;
  uint64_t v96 = 0;
  uint64_t v97 = 0;
  uint64_t v98 = 0;
  uint64_t v93 = 0;
  uint64_t v94 = 0;
  uint64_t v95 = 0;
  long long __p = 0;
  uint64_t v91 = 0;
  uint64_t v92 = 0;
  int v11 = *((unsigned __int8 *)a2 + 38);
  long long v12 = *((_OWORD *)a2 + 1);
  v88[0] = *(_OWORD *)a2;
  v88[1] = v12;
  v89 = a2[4];
  if (v11)
  {
    BYTE6(v89) ^= 1u;
    long long v13 = *((_OWORD *)a2 + 1);
    long long v85 = *(_OWORD *)a2;
    long long v86 = v13;
    size_t v87 = a2[4];
  }
  else
  {
    size_t v87 = a2[4];
    long long v14 = *((_OWORD *)a2 + 1);
    long long v85 = *(_OWORD *)a2;
    long long v86 = v14;
    BYTE6(v87) ^= 1u;
  }
  sub_2E44A4(*(void *)a1, (uint64_t)v88, &v93);
  sub_2E44A4(*(void *)a1, (uint64_t)&v85, &v96);
  unint64_t v15 = (__n128 *)v96;
  int v16 = v97;
  if (v96 == v97)
  {
LABEL_22:
    for (uint64_t i = (int **)v93; i != v94; i += 5)
    {
      uint64_t v21 = (unsigned __int16 *)((char *)*i - **i);
      if (*v21 >= 0x2Fu)
      {
        uint64_t v22 = v21[23];
        if (v22)
        {
          if (*((unsigned char *)*i + v22) == 14) {
            goto LABEL_28;
          }
        }
      }
    }
  }
  else
  {
    uint64_t v17 = (__n128 *)v96;
    while (1)
    {
      uint64_t v18 = (unsigned __int16 *)(v17->n128_u64[0] - *(int *)v17->n128_u64[0]);
      if (*v18 >= 0x2Fu)
      {
        uint64_t v19 = v18[23];
        if (v19)
        {
          if (*(unsigned char *)(v17->n128_u64[0] + v19) == 14) {
            break;
          }
        }
      }
      uint64_t v17 = (__n128 *)((char *)v17 + 40);
      if (v17 == v97) {
        goto LABEL_22;
      }
    }
LABEL_28:
    if (!*(unsigned char *)(a1 + 706)) {
      goto LABEL_135;
    }
  }
  unint64_t v23 = 0xCCCCCCCCCCCCCCCDLL * (((char *)v97 - (unsigned char *)v96) >> 3);
  long long v24 = (int **)__p;
  if (0xCCCCCCCCCCCCCCCDLL * ((v92 - (unsigned char *)__p) >> 3) < v23)
  {
    if (v23 >= 0x666666666666667) {
      sub_2E00();
    }
    unsigned int v25 = v91;
    unint64_t v26 = (char *)operator new((char *)v97 - (unsigned char *)v96);
    uint64_t v27 = (int **)&v26[40 * (((char *)v25 - (char *)v24) / 40)];
    uint64_t v28 = v27;
    if (v25 != v24)
    {
      uint64_t v29 = &v26[40 * (((char *)v25 - (char *)v24) / 40)];
      do
      {
        long long v30 = *(_OWORD *)(v25 - 5);
        long long v31 = *(_OWORD *)(v25 - 3);
        uint64_t v28 = (int **)(v29 - 40);
        *((void *)v29 - 1) = *(v25 - 1);
        *(_OWORD *)(v29 - 24) = v31;
        *(_OWORD *)(v29 - 40) = v30;
        v25 -= 5;
        v29 -= 40;
      }
      while (v25 != v24);
    }
    long long __p = v28;
    uint64_t v91 = v27;
    uint64_t v92 = &v26[40 * v23];
    if (v24)
    {
      operator delete(v24);
      unint64_t v15 = (__n128 *)v96;
      int v16 = v97;
    }
  }
  if (v15 != v16)
  {
    unsigned int v32 = v91;
    do
    {
      __n128 v33 = *v15;
      __n128 v34 = v15[1];
      unint64_t v101 = v15[2].n128_u64[0];
      v100[0] = v33;
      v100[1] = v34;
      BYTE6(v101) ^= 1u;
      unsigned int v32 = (int **)&sub_2E7FC8((char **)&__p, (uint64_t)v32, v100)[2].n128_u64[1];
      unint64_t v15 = (__n128 *)((char *)v15 + 40);
    }
    while (v15 != v16);
  }
  unint64_t v35 = sub_665BF4((int **)__p, v91, (int **)v88, a1);
  if (v91 != v35) {
    uint64_t v91 = v35;
  }
  unint64_t v36 = sub_665ED4((int **)v93, v94, (int **)v88, a1);
  if (v94 != v36) {
    uint64_t v94 = v36;
  }
  uint64_t v37 = (int **)__p;
  v84 = v91;
  if (__p == v91)
  {
    uint64_t v8 = 0;
    if (!__p) {
      goto LABEL_137;
    }
LABEL_136:
    uint64_t v91 = v37;
    operator delete(v37);
    goto LABEL_137;
  }
  if (v93 == v36)
  {
LABEL_135:
    uint64_t v8 = 0;
    uint64_t v37 = (int **)__p;
    if (!__p) {
      goto LABEL_137;
    }
    goto LABEL_136;
  }
LABEL_47:
  uint64_t v38 = (int **)v93;
  unint64_t v39 = v94;
  while (1)
  {
    if (v38 == v39)
    {
      v37 += 5;
      if (v37 == v84) {
        goto LABEL_135;
      }
      goto LABEL_47;
    }
    int v41 = *v37;
    int v42 = (unsigned __int16 *)((char *)*v37 - **v37);
    unsigned int v43 = *v42;
    if (*((unsigned char *)v37 + 38))
    {
      if (v43 >= 0x49)
      {
        unsigned int v44 = v42[36];
        if (v42[36]) {
          goto LABEL_58;
        }
      }
    }
    else if (v43 >= 0x4B)
    {
      unsigned int v44 = v42[37];
      if (v42[37])
      {
LABEL_58:
        __int16 v45 = *(_WORD *)((char *)v41 + v44);
        int v46 = *((unsigned __int8 *)v38 + 38);
        v47 = *v38;
        long long v48 = (unsigned __int16 *)((char *)*v38 - **v38);
        unsigned int v49 = *v48;
        if (*((unsigned char *)v38 + 38)) {
          goto LABEL_63;
        }
        goto LABEL_59;
      }
    }
    __int16 v45 = -1;
    int v46 = *((unsigned __int8 *)v38 + 38);
    v47 = *v38;
    long long v48 = (unsigned __int16 *)((char *)*v38 - **v38);
    unsigned int v49 = *v48;
    if (*((unsigned char *)v38 + 38))
    {
LABEL_63:
      if (v49 >= 0x4B)
      {
        unsigned int v50 = v48[37];
        if (v48[37]) {
          goto LABEL_65;
        }
      }
      goto LABEL_66;
    }
LABEL_59:
    if (v49 >= 0x49)
    {
      unsigned int v50 = v48[36];
      if (v48[36])
      {
LABEL_65:
        int v51 = *(unsigned __int16 *)((char *)v47 + v50);
        goto LABEL_67;
      }
    }
LABEL_66:
    int v51 = 0xFFFF;
LABEL_67:
    unsigned __int16 v52 = v45 + 18000;
    unsigned __int16 v53 = v45 - 18000;
    if ((unsigned __int16)(v52 >> 5) < 0x465u) {
      unsigned __int16 v53 = v52;
    }
    int v54 = v51 - v53;
    if (v54 > 18000) {
      v54 -= 36000;
    }
    if (v54 < -17999) {
      v54 += 36000;
    }
    if (*((unsigned char *)v37 + 38))
    {
      if (v43 < 0xB || (uint64_t v55 = v42[5]) == 0)
      {
LABEL_84:
        BOOL v56 = 0;
        BOOL v57 = v49 >= 0xB;
        if (!v46) {
          goto LABEL_85;
        }
        goto LABEL_92;
      }
      BOOL v56 = 1;
      if ((*((unsigned char *)v41 + v55) & 2) == 0)
      {
        BOOL v56 = (*(int *)((char *)v41 + v55) & 1) != 0;
        BOOL v57 = v49 >= 0xB;
        if (!v46) {
          goto LABEL_85;
        }
        goto LABEL_92;
      }
      goto LABEL_91;
    }
    if (v43 < 0xB) {
      goto LABEL_84;
    }
    if (!v42[5])
    {
      BOOL v56 = 0;
LABEL_91:
      BOOL v57 = v49 >= 0xB;
      if (!v46) {
        goto LABEL_85;
      }
      goto LABEL_92;
    }
    if (*((unsigned char *)v41 + v42[5]))
    {
      BOOL v56 = 1;
      BOOL v57 = v49 >= 0xB;
      if (!v46)
      {
LABEL_85:
        if (!v57) {
          goto LABEL_98;
        }
        uint64_t v58 = v48[5];
        if (!v58)
        {
          int v59 = 0;
LABEL_101:
          uint64_t v60 = (uint64_t)*a2;
          std::string::size_type v61 = (unsigned __int16 *)((char *)*a2 - **a2);
          if (*v61 < 9u) {
            goto LABEL_107;
          }
          goto LABEL_102;
        }
        if (*((unsigned char *)v47 + v58))
        {
          int v59 = 1;
          uint64_t v60 = (uint64_t)*a2;
          std::string::size_type v61 = (unsigned __int16 *)((char *)*a2 - **a2);
          if (*v61 < 9u) {
            goto LABEL_107;
          }
          goto LABEL_102;
        }
        int v59 = 2;
LABEL_96:
        int v59 = (*(int *)((char *)v47 + v58) & v59) != 0;
        uint64_t v60 = (uint64_t)*a2;
        std::string::size_type v61 = (unsigned __int16 *)((char *)*a2 - **a2);
        if (*v61 < 9u) {
          goto LABEL_107;
        }
        goto LABEL_102;
      }
    }
    else
    {
      BOOL v56 = (*(int *)((char *)v41 + v42[5]) & 2) != 0;
      BOOL v57 = v49 >= 0xB;
      if (!v46) {
        goto LABEL_85;
      }
    }
LABEL_92:
    if (v57)
    {
      uint64_t v58 = v48[5];
      if (v58)
      {
        int v59 = 1;
        if ((*((unsigned char *)v47 + v58) & 2) != 0) {
          goto LABEL_101;
        }
        goto LABEL_96;
      }
    }
LABEL_98:
    int v59 = 0;
    uint64_t v60 = (uint64_t)*a2;
    std::string::size_type v61 = (unsigned __int16 *)((char *)*a2 - **a2);
    if (*v61 < 9u) {
      goto LABEL_107;
    }
LABEL_102:
    uint64_t v62 = v61[4];
    if (v62)
    {
      uint64_t v63 = *(unsigned int *)(v60 + v62);
      goto LABEL_108;
    }
LABEL_107:
    uint64_t v63 = 0;
LABEL_108:
    double v64 = fabs((double)v54 / 100.0);
    if (v63 <= *(void *)(a1 + 712) && v64 <= *(double *)(a1 + 720) && ((v56 ^ v59) & 1) != 0) {
      break;
    }
    uint64_t v65 = sub_661B10(&v99, v37);
    double v66 = (double)v65 * 0.5;
    uint64_t v67 = (uint64_t)(v66 + v66);
    uint64_t v68 = v67 - 1;
    if (v67 < 1) {
      uint64_t v68 = (uint64_t)(v66 + v66);
    }
    double v69 = (double)(v68 >> 1);
    if (v66 <= -4.50359963e15) {
      double v69 = (double)v65 * 0.5;
    }
    double v70 = (double)((v67 + 1) >> 1);
    if (v66 >= 4.50359963e15) {
      double v70 = (double)v65 * 0.5;
    }
    if (v66 >= 0.0) {
      double v71 = v70;
    }
    else {
      double v71 = v69;
    }
    uint64_t v72 = sub_661B10(&v99, v38);
    double v73 = (double)v72 * 0.5;
    uint64_t v74 = (uint64_t)(v73 + v73);
    uint64_t v75 = v74 - 1;
    if (v74 < 1) {
      uint64_t v75 = (uint64_t)(v73 + v73);
    }
    uint64_t v76 = v75 >> 1;
    double v77 = v73 > -4.50359963e15 ? (double)v76 : (double)v72 * 0.5;
    uint64_t v78 = (v74 + 1) >> 1;
    double v79 = v73 < 4.50359963e15 ? (double)v78 : (double)v72 * 0.5;
    double v80 = v73 >= 0.0 ? v79 : v77;
    if (v64 <= *(double *)(a1 + 720))
    {
      unint64_t v81 = (unsigned __int16 *)((char *)*a2 - **a2);
      if (*v81 >= 9u && (uint64_t v82 = v81[4]) != 0) {
        uint64_t v40 = *(unsigned int *)((char *)*a2 + v82);
      }
      else {
        uint64_t v40 = 0;
      }
      if (v40 <= (uint64_t)v80 + (uint64_t)v71 + *(void *)(a1 + 544)) {
        break;
      }
    }
    v38 += 5;
  }
  uint64_t v8 = 1;
  uint64_t v37 = (int **)__p;
  if (__p) {
    goto LABEL_136;
  }
LABEL_137:
  if (v93)
  {
    uint64_t v94 = (int **)v93;
    operator delete(v93);
  }
  if (v96)
  {
    uint64_t v97 = (__n128 *)v96;
    operator delete(v96);
  }
  return v8;
}

void sub_66481C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30)
{
  if (__p)
  {
    operator delete(__p);
    long long v31 = a26;
    if (!a26)
    {
LABEL_3:
      unsigned int v32 = a29;
      if (!a29) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else
  {
    long long v31 = a26;
    if (!a26) {
      goto LABEL_3;
    }
  }
  operator delete(v31);
  unsigned int v32 = a29;
  if (!a29) {
LABEL_4:
  }
    _Unwind_Resume(exception_object);
LABEL_7:
  operator delete(v32);
  _Unwind_Resume(exception_object);
}

unint64_t sub_664888(uint64_t a1, unsigned int *a2)
{
  BOOL v4 = sub_6649D8(a1, (uint64_t)a2);
  uint64_t v5 = v4;
  if (!*(unsigned char *)(a1 + 522))
  {
    BOOL v6 = v4;
    uint64_t v7 = *(void *)a1;
    uint64_t v9 = a2;
    uint64_t v8 = *a2;
    unint64_t v10 = ((unint64_t)(v9[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v9[1] << 32) | v8;
    char v11 = BYTE6(v10) ^ 1;
    unint64_t v12 = (v10 ^ 0x1000000000000) >> 32;
    unint64_t v13 = v10 & 0xFFFFFFFFFFFFLL;
    long long v14 = (int *)sub_2D5D58(*(void *)a1, v10 & 0xFFFFFFFFFFFFLL);
    if (*(unsigned char *)(v7 + 7772))
    {
      unint64_t v15 = sub_2DB8E0(v7 + 3896, v8, 0);
      int v16 = &v15[-*(int *)v15];
      if (*(unsigned __int16 *)v16 < 5u)
      {
        uint64_t v17 = 0;
      }
      else
      {
        uint64_t v17 = *((unsigned __int16 *)v16 + 2);
        if (v17) {
          v17 += (uint64_t)&v15[*(unsigned int *)&v15[v17]];
        }
      }
      uint64_t v18 = (int *)(v17 + 4 * (unsigned __int16)v12 + 4 + *(unsigned int *)(v17 + 4 * (unsigned __int16)v12 + 4));
    }
    else
    {
      uint64_t v18 = 0;
    }
    uint64_t v5 = 1;
    v22[0] = v14;
    v22[1] = v18;
    v22[2] = (int *)sub_2E5C38(v7, v13, 1);
    v22[3] = v19;
    int v23 = v8;
    __int16 v24 = v12;
    char v25 = v11;
    if (*(unsigned char *)(a1 + 523)) {
      BOOL v20 = v6;
    }
    else {
      BOOL v20 = 0;
    }
    if (!v20) {
      return sub_6639D8(a1, v22);
    }
  }
  return v5;
}

BOOL sub_6649D8(uint64_t a1, uint64_t a2)
{
  BOOL result = sub_6EB9D4(a1 + 24);
  if (!result) {
    return result;
  }
  uint64_t v5 = *(int **)(a2 + 8);
  BOOL v6 = (unsigned __int16 *)((char *)v5 - *v5);
  unsigned int v7 = *v6;
  if (v7 >= 0x63 && v6[49]) {
    unsigned __int8 v8 = *((unsigned char *)v5 + v6[49]);
  }
  else {
    unsigned __int8 v8 = 0;
  }
  int v9 = *(unsigned __int8 *)(a1 + 524);
  unsigned int v10 = *(_DWORD *)(a2 + 4);
  if ((v10 & 0x40000000) != 0) {
    int v11 = 2;
  }
  else {
    int v11 = v10 >> 31;
  }
  if (v11 != 1)
  {
    if (v11)
    {
LABEL_20:
      unsigned __int8 v13 = v8;
      goto LABEL_21;
    }
    if (*(unsigned char *)(a2 + 46)) {
      goto LABEL_13;
    }
LABEL_17:
    if (v7 < 0x69) {
      goto LABEL_20;
    }
    unsigned int v12 = v6[52];
    if (!v12) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (*(unsigned char *)(a2 + 46)) {
    goto LABEL_17;
  }
LABEL_13:
  if (v7 < 0x6B) {
    goto LABEL_20;
  }
  unsigned int v12 = v6[53];
  if (!v12) {
    goto LABEL_20;
  }
LABEL_19:
  unsigned __int8 v13 = *((unsigned char *)v5 + v12);
  if (v13 == 127) {
    goto LABEL_20;
  }
LABEL_21:

  return sub_3E737C(v13, v9 != 0);
}

uint64_t sub_664AC8(uint64_t *a1, long long *a2, uint64_t a3)
{
  long long v59 = 0u;
  long long v60 = 0u;
  *(_OWORD *)uint64_t v58 = 0u;
  sub_66555C((uint64_t)v58);
  unint64_t v6 = *((void *)v58[1] + (*((void *)&v60 + 1) + (void)v60) / 0x55uLL)
     + 48 * ((*((void *)&v60 + 1) + (void)v60) % 0x55uLL);
  *(void *)unint64_t v6 = a3;
  long long v7 = *a2;
  long long v8 = a2[1];
  *(void *)(v6 + 40) = *((void *)a2 + 4);
  *(_OWORD *)(v6 + 24) = v8;
  *(_OWORD *)(v6 + 8) = v7;
  long long __p = 0;
  BOOL v56 = 0;
  uint64_t v57 = 0;
  BOOL v9 = __CFADD__(*((void *)&v60 + 1), 1);
  uint64_t v10 = ++*((void *)&v60 + 1);
  if (v9)
  {
    uint64_t v11 = 0;
    goto LABEL_40;
  }
  while (1)
  {
    unint64_t v12 = *((void *)v58[1] + (unint64_t)v60 / 0x55) + 48 * ((unint64_t)v60 % 0x55);
    int v54 = *(unsigned int **)v12;
    int v13 = *(_DWORD *)(v12 + 40);
    int v14 = *(unsigned __int16 *)(v12 + 44);
    *(void *)&long long v60 = v60 + 1;
    *((void *)&v60 + 1) = v10 - 1;
    if ((unint64_t)v60 >= 0xAA)
    {
      operator delete(*(void **)v58[1]);
      v58[1] = (char *)v58[1] + 8;
      *(void *)&long long v60 = v60 - 85;
    }
    unint64_t v15 = (unsigned int **)__p;
    if (__p != v56)
    {
      while (*v15 != v54)
      {
        if (++v15 == v56) {
          goto LABEL_13;
        }
      }
    }
    if (v15 == v56) {
      break;
    }
LABEL_5:
    uint64_t v10 = *((void *)&v60 + 1);
    if (!*((void *)&v60 + 1))
    {
      uint64_t v11 = 0;
      uint64_t v40 = (unsigned int **)__p;
      if (__p) {
        goto LABEL_39;
      }
      goto LABEL_40;
    }
  }
LABEL_13:
  sub_29603C(&__p, &v54);
  uint64_t v16 = *a1;
  sub_2D5904(*a1, v54, 0, (char **)(*a1 + 7800));
  uint64_t v51 = 0;
  uint64_t v52 = 0;
  uint64_t v53 = 0;
  uint64_t v17 = *(unsigned char **)(v16 + 7800);
  uint64_t v18 = *(unsigned char **)(v16 + 7808);
  uint64_t v19 = v18 - v17;
  if (v18 == v17) {
    goto LABEL_5;
  }
  if (v19 < 0) {
    sub_2E00();
  }
  BOOL v20 = (char *)operator new(v18 - v17);
  memcpy(v20, v17, v19 - 1);
  uint64_t v21 = 0;
  uint64_t v22 = 8 * (v19 >> 3);
  while (1)
  {
    uint64_t v26 = *a1;
    uint64_t v27 = *(void *)&v20[v21];
    uint64_t v28 = (int *)sub_2D5D58(*a1, v27 & 0xFFFFFFFFFFFFLL);
    uint64_t v29 = sub_2E5C38(v26, v27 & 0xFFFFFFFFFFFFLL, 1);
    long long v48 = (unint64_t)v28;
    *(void *)&long long v49 = v29;
    *((void *)&v49 + 1) = v30;
    LODWORD(v50) = v27;
    WORD2(v50) = WORD2(v27);
    BYTE6(v50) = (v27 & 0xFF000000000000) != 0;
    if (v13 == v27 && v14 == WORD2(v27)) {
      goto LABEL_17;
    }
    long long v31 = (unsigned __int16 *)((char *)v28 - *v28);
    unsigned int v32 = *v31;
    if (v32 >= 0x2F) {
      break;
    }
    if (v32 >= 9) {
      goto LABEL_25;
    }
    if (a1[116] >= 0) {
      goto LABEL_30;
    }
LABEL_17:
    v21 += 8;
    if (v22 == v21)
    {
      operator delete(v20);
      goto LABEL_5;
    }
  }
  if (!v31[23] || *((unsigned char *)v28 + v31[23]) != 14)
  {
LABEL_25:
    uint64_t v33 = v31[4];
    if (v33) {
      uint64_t v33 = *(unsigned int *)((char *)v28 + v33);
    }
    if (v33 > a1[116]) {
      goto LABEL_17;
    }
LABEL_30:
    __n128 v34 = (unsigned int *)sub_2E48C4((int **)&v48);
    if (v54 == v34) {
      unint64_t v35 = sub_2E4738((int **)&v48);
    }
    else {
      unint64_t v35 = sub_2E48C4((int **)&v48);
    }
    unint64_t v36 = v35;
    uint64_t v37 = v58[1];
    if ((void *)v59 == v58[1]) {
      uint64_t v38 = 0;
    }
    else {
      uint64_t v38 = 85 * ((uint64_t)(v59 - (unint64_t)v58[1]) >> 3) - 1;
    }
    unint64_t v39 = *((void *)&v60 + 1) + v60;
    if (v38 == *((void *)&v60 + 1) + (void)v60)
    {
      sub_66555C((uint64_t)v58);
      uint64_t v37 = v58[1];
      unint64_t v39 = *((void *)&v60 + 1) + v60;
    }
    unint64_t v23 = v37[v39 / 0x55] + 48 * (v39 % 0x55);
    *(void *)unint64_t v23 = v36;
    long long v24 = v48;
    long long v25 = v49;
    *(void *)(v23 + 40) = v50;
    *(_OWORD *)(v23 + 24) = v25;
    *(_OWORD *)(v23 + 8) = v24;
    ++*((void *)&v60 + 1);
    goto LABEL_17;
  }
  operator delete(v20);
  uint64_t v11 = 1;
  uint64_t v40 = (unsigned int **)__p;
  if (__p)
  {
LABEL_39:
    BOOL v56 = v40;
    operator delete(v40);
  }
LABEL_40:
  int v41 = (void **)v58[1];
  int v42 = (void **)v59;
  *((void *)&v60 + 1) = 0;
  unint64_t v43 = v59 - (unint64_t)v58[1];
  if ((unint64_t)v59 - (unint64_t)v58[1] >= 0x11)
  {
    do
    {
      operator delete(*v41);
      int v42 = (void **)v59;
      int v41 = (void **)((char *)v58[1] + 8);
      v58[1] = v41;
      unint64_t v43 = v59 - (void)v41;
    }
    while ((void)v59 - (void)v41 > 0x10uLL);
  }
  unint64_t v44 = v43 >> 3;
  if (v44 == 1)
  {
    uint64_t v45 = 42;
LABEL_46:
    *(void *)&long long v60 = v45;
  }
  else if (v44 == 2)
  {
    uint64_t v45 = 85;
    goto LABEL_46;
  }
  if (v41 != v42)
  {
    do
    {
      int v46 = *v41++;
      operator delete(v46);
    }
    while (v41 != v42);
    if ((void *)v59 != v58[1]) {
      *(void *)&long long v59 = v59 + (((unint64_t)v58[1] - v59 + 7) & 0xFFFFFFFFFFFFFFF8);
    }
  }
  if (v58[0]) {
    operator delete(v58[0]);
  }
  return v11;
}

void sub_664F48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  sub_665B2C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_664F5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, uint64_t a20,char a21)
{
  if (__p)
  {
    operator delete(__p);
    sub_665B2C((uint64_t)&a21);
    _Unwind_Resume(a1);
  }
  sub_665B2C((uint64_t)&a21);
  _Unwind_Resume(a1);
}

uint64_t sub_664FE0(uint64_t *a1, unint64_t a2, int a3)
{
  uint64_t v6 = *a1;
  unint64_t v7 = HIDWORD(a2);
  unint64_t v8 = a2 & 0xFFFFFFFFFFFFLL;
  BOOL v9 = (int *)sub_2D5D58(*a1, a2 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v6 + 7772))
  {
    uint64_t v10 = sub_2DB8E0(v6 + 3896, a2, 0);
    uint64_t v11 = &v10[-*(int *)v10];
    if (*(unsigned __int16 *)v11 < 5u)
    {
      uint64_t v12 = 0;
    }
    else
    {
      uint64_t v12 = *((unsigned __int16 *)v11 + 2);
      if (v12) {
        v12 += (uint64_t)&v10[*(unsigned int *)&v10[v12]];
      }
    }
    int v13 = (int *)(v12 + 4 * (unsigned __int16)v7 + 4 + *(unsigned int *)(v12 + 4 * (unsigned __int16)v7 + 4));
  }
  else
  {
    int v13 = 0;
  }
  BOOL v14 = 1;
  v21[0] = v9;
  v21[1] = v13;
  v21[2] = (int *)sub_2E5C38(v6, v8, 1);
  v21[3] = v15;
  int v22 = a2;
  __int16 v23 = v7;
  BOOL v24 = (a2 & 0xFF000000000000) != 0;
  if (a3)
  {
    uint64_t v16 = (unsigned __int16 *)((char *)v9 - *v9);
    if (*v16 >= 0x2Fu && (uint64_t v17 = v16[23]) != 0)
    {
      int v18 = *((unsigned __int8 *)v9 + v17);
      BOOL v14 = v18 == 9 || v18 == 20;
    }
    else
    {
      BOOL v14 = 0;
    }
  }
  return sub_6DEDE8((uint64_t)(a1 + 125), v21) & v14;
}

uint64_t sub_66512C(uint64_t a1, unint64_t a2)
{
  if (*(unsigned char *)(a1 + 700)) {
    return 1;
  }
  uint64_t v5 = *(void *)a1;
  unint64_t v6 = HIDWORD(a2);
  unint64_t v7 = a2 & 0xFFFFFFFFFFFFLL;
  unint64_t v8 = (int *)sub_2D5D58(*(void *)a1, a2 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v5 + 7772))
  {
    BOOL v9 = sub_2DB8E0(v5 + 3896, a2, 0);
    uint64_t v10 = &v9[-*(int *)v9];
    if (*(unsigned __int16 *)v10 < 5u)
    {
      uint64_t v11 = 0;
    }
    else
    {
      uint64_t v11 = *((unsigned __int16 *)v10 + 2);
      if (v11) {
        v11 += (uint64_t)&v9[*(unsigned int *)&v9[v11]];
      }
    }
    uint64_t v12 = (int *)(v11 + 4 * (unsigned __int16)v6 + 4 + *(unsigned int *)(v11 + 4 * (unsigned __int16)v6 + 4));
  }
  else
  {
    uint64_t v12 = 0;
  }
  uint64_t v2 = 1;
  v19[0] = v8;
  v19[1] = v12;
  v19[2] = (int *)sub_2E5C38(v5, v7, 1);
  v19[3] = v13;
  int v20 = a2;
  __int16 v21 = v6;
  BOOL v22 = (a2 & 0xFF000000000000) != 0;
  if (!sub_6D855C(a1 + 1000, v19))
  {
    BOOL v14 = (unsigned __int16 *)((char *)v19[0] - *v19[0]);
    unsigned int v15 = *v14;
    if (v22)
    {
      if (v15 >= 0xB)
      {
        unsigned int v16 = v14[5];
        if (v16)
        {
          int v17 = 2;
          return (*(int *)((char *)v19[0] + v16) & v17) != 0;
        }
      }
    }
    else if (v15 >= 0xB)
    {
      unsigned int v16 = v14[5];
      if (v16)
      {
        int v17 = 1;
        return (*(int *)((char *)v19[0] + v16) & v17) != 0;
      }
    }
    return 0;
  }
  return v2;
}

unint64_t sub_66529C(uint64_t a1, int **a2)
{
  char v4 = *((unsigned char *)a2 + 38);
  uint64_t v5 = (char *)*a2;
  uint64_t v6 = **a2;
  uint64_t v7 = -v6;
  unint64_t v8 = (unsigned __int16 *)((char *)*a2 - v6);
  unsigned int v9 = *v8;
  if (v4)
  {
    if (v9 < 0x39 || !v8[28] || (*(_DWORD *)&v5[v8[28]] & 0x23) != 0x20)
    {
      char v11 = 1;
      if (*v8 <= 0x38u) {
        goto LABEL_24;
      }
      goto LABEL_7;
    }
    int v10 = 0;
  }
  else
  {
    if (v9 < 0x39 || !v8[28] || (*(_DWORD *)&v5[v8[28]] & 7) != 4)
    {
      if (*v8 <= 0x38u) {
        goto LABEL_33;
      }
LABEL_17:
      if (v8[28] && (*(_DWORD *)&v5[v8[28]] & 0x23) == 0x20)
      {
        char v11 = 0;
        int v13 = 0x20000000;
        goto LABEL_20;
      }
LABEL_33:
      __int16 v23 = &v5[v7];
      if (*(unsigned __int16 *)v23 <= 0x38u) {
        return 0;
      }
      goto LABEL_34;
    }
    int v10 = 0x20000000;
  }
  long long v14 = *((_OWORD *)a2 + 1);
  long long v35 = *(_OWORD *)a2;
  long long v36 = v14;
  int v15 = *((unsigned __int16 *)a2 + 18);
  char v16 = *((unsigned char *)a2 + 39);
  unsigned int v33 = *((_DWORD *)a2 + 8);
  unsigned int v34 = v10 | v15;
  unsigned int v37 = v33;
  __int16 v38 = v15;
  char v39 = v4;
  char v40 = v16;
  if (sub_664888(a1, &v33)) {
    return 1;
  }
  char v11 = *((unsigned char *)a2 + 38);
  uint64_t v5 = (char *)*a2;
  uint64_t v21 = **a2;
  uint64_t v7 = -v21;
  unint64_t v8 = (unsigned __int16 *)((char *)*a2 - v21);
  unsigned int v22 = *v8;
  if (!v11)
  {
    if (v22 < 0x39) {
      goto LABEL_33;
    }
    goto LABEL_17;
  }
  if (v22 < 0x39) {
    goto LABEL_24;
  }
LABEL_7:
  uint64_t v12 = v8[28];
  if (v12 && (*(_DWORD *)&v5[v12] & 7) == 4)
  {
    int v13 = 0;
LABEL_20:
    long long v18 = *((_OWORD *)a2 + 1);
    long long v35 = *(_OWORD *)a2;
    long long v36 = v18;
    int v19 = *((unsigned __int16 *)a2 + 18);
    char v20 = *((unsigned char *)a2 + 39);
    unsigned int v33 = *((_DWORD *)a2 + 8);
    unsigned int v34 = v13 | v19 | 0x80000000;
    unsigned int v37 = v33;
    __int16 v38 = v19;
    char v39 = v11;
    char v40 = v20;
    if (sub_664888(a1, &v33)) {
      return 1;
    }
    char v11 = *((unsigned char *)a2 + 38);
    uint64_t v5 = (char *)*a2;
    __int16 v23 = (char *)*a2 - **a2;
    unsigned int v26 = *(unsigned __int16 *)v23;
    if (v11)
    {
      if (v26 >= 0x39) {
        goto LABEL_25;
      }
      return 0;
    }
    if (v26 < 0x39) {
      return 0;
    }
LABEL_34:
    uint64_t v27 = *((unsigned __int16 *)v23 + 28);
    if (!*((_WORD *)v23 + 28)) {
      return 0;
    }
    char v11 = 0;
    int v25 = 1;
    if ((v5[v27] & 1) == 0 && (*(_DWORD *)&v5[v27] & 2) == 0) {
      return 0;
    }
    goto LABEL_37;
  }
LABEL_24:
  __int16 v23 = &v5[v7];
  if (*(unsigned __int16 *)v23 <= 0x38u) {
    return 0;
  }
LABEL_25:
  uint64_t v24 = *((unsigned __int16 *)v23 + 28);
  if (!*((_WORD *)v23 + 28)) {
    return 0;
  }
  int v25 = 0;
  if ((v5[v24] & 2) == 0 && (*(_DWORD *)&v5[v24] & 1) == 0) {
    return 0;
  }
LABEL_37:
  long long v28 = *((_OWORD *)a2 + 1);
  long long v35 = *(_OWORD *)a2;
  long long v36 = v28;
  unsigned int v29 = *((_DWORD *)a2 + 8);
  int v30 = *((unsigned __int16 *)a2 + 18);
  char v31 = *((unsigned char *)a2 + 39);
  if (v25) {
    int v32 = 0x20000000;
  }
  else {
    int v32 = 0;
  }
  unsigned int v33 = *((_DWORD *)a2 + 8);
  unsigned int v34 = v32 | v30 | 0x40000000;
  unsigned int v37 = v29;
  __int16 v38 = v30;
  char v39 = v11;
  char v40 = v31;
  return sub_664888(a1, &v33);
}

void sub_66555C(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 32);
  BOOL v3 = v2 >= 0x55;
  unint64_t v4 = v2 - 85;
  if (v3)
  {
    *(void *)(a1 + 32) = v4;
    uint64_t v6 = *(void **)(a1 + 8);
    uint64_t v5 = *(char **)(a1 + 16);
    uint64_t v7 = (char *)(v6 + 1);
    uint64_t v8 = *v6;
    *(void *)(a1 + 8) = v6 + 1;
    if (v5 != *(char **)(a1 + 24))
    {
LABEL_80:
      *(void *)uint64_t v5 = v8;
      *(void *)(a1 + 16) += 8;
      return;
    }
    unsigned int v9 = *(char **)a1;
    uint64_t v10 = (uint64_t)&v7[-*(void *)a1];
    if ((unint64_t)v7 <= *(void *)a1)
    {
      unint64_t v31 = (v5 - v9) >> 2;
      if (v5 == v9) {
        unint64_t v31 = 1;
      }
      if (!(v31 >> 61))
      {
        unint64_t v32 = v31 >> 2;
        uint64_t v33 = 8 * v31;
        unsigned int v34 = (char *)operator new(8 * v31);
        long long v35 = &v34[8 * v32];
        long long v36 = &v34[v33];
        int64_t v38 = v5 - v7;
        BOOL v37 = v5 == v7;
        uint64_t v5 = v35;
        if (!v37)
        {
          uint64_t v5 = &v35[v38 & 0xFFFFFFFFFFFFFFF8];
          unint64_t v39 = v38 - 8;
          if ((unint64_t)(v38 - 8) >= 0x38)
          {
            uint64_t v74 = &v34[8 * v32];
            char v40 = v74;
            if ((unint64_t)(v74 - v7) >= 0x20)
            {
              uint64_t v75 = (v39 >> 3) + 1;
              uint64_t v76 = 8 * (v75 & 0x3FFFFFFFFFFFFFFCLL);
              char v40 = &v35[v76];
              v7 += v76;
              double v77 = (long long *)(v6 + 3);
              uint64_t v78 = v74 + 16;
              uint64_t v79 = v75 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                long long v80 = *v77;
                *(v78 - 1) = *(v77 - 1);
                *uint64_t v78 = v80;
                v77 += 2;
                v78 += 2;
                v79 -= 4;
              }
              while (v79);
              if (v75 == (v75 & 0x3FFFFFFFFFFFFFFCLL)) {
                goto LABEL_78;
              }
            }
          }
          else
          {
            char v40 = &v34[8 * v32];
          }
          do
          {
            uint64_t v81 = *(void *)v7;
            v7 += 8;
            *(void *)char v40 = v81;
            v40 += 8;
          }
          while (v40 != v5);
        }
        goto LABEL_78;
      }
LABEL_89:
      sub_188D718();
    }
LABEL_5:
    uint64_t v11 = v10 >> 3;
    if (v11 >= -1) {
      uint64_t v12 = v11 + 1;
    }
    else {
      uint64_t v12 = v11 + 2;
    }
    uint64_t v13 = v12 >> 1;
    uint64_t v14 = -v13;
    int v15 = &v7[-8 * v13];
    int64_t v16 = v5 - v7;
    if (v5 != v7)
    {
      memmove(&v7[-8 * v13], v7, v5 - v7);
      uint64_t v7 = *(char **)(a1 + 8);
    }
    uint64_t v5 = &v15[v16];
    *(void *)(a1 + 8) = &v7[8 * v14];
    *(void *)(a1 + 16) = &v15[v16];
    goto LABEL_80;
  }
  uint64_t v18 = *(void *)(a1 + 16);
  uint64_t v17 = *(void *)(a1 + 24);
  uint64_t v19 = *(void *)(a1 + 8);
  uint64_t v20 = v18 - v19;
  uint64_t v21 = (v18 - v19) >> 3;
  uint64_t v22 = v17 - *(void *)a1;
  if (v21 < (unint64_t)(v22 >> 3))
  {
    if (v17 != v18)
    {
      uint64_t v91 = operator new(0xFF0uLL);
      sub_22368((char **)a1, &v91);
      return;
    }
    uint64_t v91 = operator new(0xFF0uLL);
    sub_224F8((void **)a1, &v91);
    int v41 = *(void **)(a1 + 8);
    uint64_t v5 = *(char **)(a1 + 16);
    uint64_t v7 = (char *)(v41 + 1);
    uint64_t v8 = *v41;
    *(void *)(a1 + 8) = v41 + 1;
    if (v5 != *(char **)(a1 + 24)) {
      goto LABEL_80;
    }
    unsigned int v9 = *(char **)a1;
    uint64_t v10 = (uint64_t)&v7[-*(void *)a1];
    if ((unint64_t)v7 <= *(void *)a1)
    {
      unint64_t v42 = (v5 - v9) >> 2;
      if (v5 == v9) {
        unint64_t v42 = 1;
      }
      if (!(v42 >> 61))
      {
        unint64_t v43 = v42 >> 2;
        uint64_t v44 = 8 * v42;
        unsigned int v34 = (char *)operator new(8 * v42);
        long long v35 = &v34[8 * v43];
        long long v36 = &v34[v44];
        int64_t v45 = v5 - v7;
        BOOL v37 = v5 == v7;
        uint64_t v5 = v35;
        if (!v37)
        {
          uint64_t v5 = &v35[v45 & 0xFFFFFFFFFFFFFFF8];
          unint64_t v46 = v45 - 8;
          if ((unint64_t)(v45 - 8) >= 0x38)
          {
            uint64_t v82 = &v34[8 * v43];
            v47 = v82;
            if ((unint64_t)(v82 - v7) >= 0x20)
            {
              uint64_t v83 = (v46 >> 3) + 1;
              uint64_t v84 = 8 * (v83 & 0x3FFFFFFFFFFFFFFCLL);
              v47 = &v35[v84];
              v7 += v84;
              long long v85 = (long long *)(v41 + 3);
              long long v86 = v82 + 16;
              uint64_t v87 = v83 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                long long v88 = *v85;
                *(v86 - 1) = *(v85 - 1);
                *long long v86 = v88;
                v85 += 2;
                v86 += 2;
                v87 -= 4;
              }
              while (v87);
              if (v83 == (v83 & 0x3FFFFFFFFFFFFFFCLL)) {
                goto LABEL_78;
              }
            }
          }
          else
          {
            v47 = &v34[8 * v43];
          }
          do
          {
            uint64_t v89 = *(void *)v7;
            v7 += 8;
            *(void *)v47 = v89;
            v47 += 8;
          }
          while (v47 != v5);
        }
LABEL_78:
        *(void *)a1 = v34;
        *(void *)(a1 + 8) = v35;
        *(void *)(a1 + 16) = v5;
        *(void *)(a1 + 24) = v36;
        if (v9)
        {
          operator delete(v9);
          uint64_t v5 = *(char **)(a1 + 16);
        }
        goto LABEL_80;
      }
      goto LABEL_89;
    }
    goto LABEL_5;
  }
  uint64_t v23 = v22 >> 2;
  if (v17 == *(void *)a1) {
    unint64_t v24 = 1;
  }
  else {
    unint64_t v24 = v23;
  }
  if (v24 >> 61) {
    goto LABEL_89;
  }
  int v25 = (char *)operator new(8 * v24);
  unsigned int v26 = operator new(0xFF0uLL);
  uint64_t v27 = &v25[8 * v21];
  long long v28 = &v25[8 * v24];
  if (v21 == v24)
  {
    uint64_t v90 = v26;
    if (v20 < 1)
    {
      if (v18 == v19) {
        unint64_t v48 = 1;
      }
      else {
        unint64_t v48 = v20 >> 2;
      }
      if (v48 >> 61) {
        sub_188D718();
      }
      long long v49 = (char *)operator new(8 * v48);
      uint64_t v27 = &v49[8 * (v48 >> 2)];
      long long v28 = &v49[8 * v48];
      operator delete(v25);
      uint64_t v50 = *(void *)(a1 + 8);
      uint64_t v18 = *(void *)(a1 + 16);
      int v25 = v49;
      *(void *)uint64_t v27 = v90;
      unsigned int v29 = v27 + 8;
      if (v18 == v50) {
        goto LABEL_45;
      }
    }
    else
    {
      unint64_t v30 = v21 + 2;
      if (v21 >= -1) {
        unint64_t v30 = v21 + 1;
      }
      v27 -= 8 * (v30 >> 1);
      *(void *)uint64_t v27 = v26;
      unsigned int v29 = v27 + 8;
      if (v18 == v19) {
        goto LABEL_45;
      }
    }
    do
    {
LABEL_52:
      if (v27 == v25)
      {
        if (v29 >= v28)
        {
          if (v28 == v27) {
            unint64_t v59 = 1;
          }
          else {
            unint64_t v59 = (v28 - v27) >> 2;
          }
          if (v59 >> 61) {
            sub_188D718();
          }
          long long v60 = (char *)operator new(8 * v59);
          int v25 = v60;
          unint64_t v61 = (v59 + 3) >> 2;
          uint64_t v53 = &v60[8 * v61];
          int64_t v62 = v29 - v27;
          BOOL v37 = v29 == v27;
          unsigned int v29 = v53;
          if (!v37)
          {
            unsigned int v29 = &v53[v62 & 0xFFFFFFFFFFFFFFF8];
            unint64_t v63 = v62 - 8;
            double v64 = &v60[8 * v61];
            uint64_t v65 = v27;
            if (v63 < 0x38) {
              goto LABEL_93;
            }
            uint64_t v66 = 8 * v61;
            double v64 = &v60[8 * v61];
            uint64_t v65 = v27;
            if ((unint64_t)(v64 - v27) < 0x20) {
              goto LABEL_93;
            }
            uint64_t v67 = (v63 >> 3) + 1;
            uint64_t v68 = 8 * (v67 & 0x3FFFFFFFFFFFFFFCLL);
            double v64 = &v53[v68];
            uint64_t v65 = &v27[v68];
            double v69 = (long long *)(v27 + 16);
            double v70 = &v60[v66 + 16];
            uint64_t v71 = v67 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              long long v72 = *v69;
              *((_OWORD *)v70 - 1) = *(v69 - 1);
              *(_OWORD *)double v70 = v72;
              v69 += 2;
              v70 += 32;
              v71 -= 4;
            }
            while (v71);
            if (v67 != (v67 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_93:
              do
              {
                uint64_t v73 = *(void *)v65;
                v65 += 8;
                *(void *)double v64 = v73;
                v64 += 8;
              }
              while (v64 != v29);
            }
          }
          long long v28 = &v60[8 * v59];
          operator delete(v27);
        }
        else
        {
          uint64_t v55 = (v28 - v29) >> 3;
          if (v55 >= -1) {
            unint64_t v56 = v55 + 1;
          }
          else {
            unint64_t v56 = v55 + 2;
          }
          uint64_t v57 = &v29[8 * (v56 >> 1)];
          uint64_t v53 = &v57[-(v29 - v27)];
          size_t v58 = v29 - v27;
          BOOL v37 = v29 == v27;
          unsigned int v29 = v57;
          if (!v37) {
            memmove(v53, v27, v58);
          }
          int v25 = v27;
        }
      }
      else
      {
        uint64_t v53 = v27;
      }
      uint64_t v54 = *(void *)(v18 - 8);
      v18 -= 8;
      *((void *)v53 - 1) = v54;
      uint64_t v51 = v53 - 8;
      uint64_t v27 = v51;
    }
    while (v18 != *(void *)(a1 + 8));
    goto LABEL_46;
  }
  *(void *)uint64_t v27 = v26;
  unsigned int v29 = v27 + 8;
  if (v18 != v19) {
    goto LABEL_52;
  }
LABEL_45:
  uint64_t v51 = v27;
LABEL_46:
  uint64_t v52 = *(char **)a1;
  *(void *)a1 = v25;
  *(void *)(a1 + 8) = v51;
  *(void *)(a1 + 16) = v29;
  *(void *)(a1 + 24) = v28;
  if (v52)
  {
    operator delete(v52);
  }
}

void sub_665ACC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p)
{
  operator delete(__p);
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_665AE8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_665AFC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_665B14(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_665B2C(uint64_t a1)
{
  unint64_t v2 = *(void ***)(a1 + 8);
  BOOL v3 = *(void ***)(a1 + 16);
  *(void *)(a1 + 40) = 0;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      BOOL v3 = *(void ***)(a1 + 16);
      unint64_t v2 = (void **)(*(void *)(a1 + 8) + 8);
      *(void *)(a1 + 8) = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    uint64_t v6 = 42;
    goto LABEL_7;
  }
  if (v5 == 2)
  {
    uint64_t v6 = 85;
LABEL_7:
    *(void *)(a1 + 32) = v6;
  }
  if (v2 != v3)
  {
    do
    {
      uint64_t v7 = *v2++;
      operator delete(v7);
    }
    while (v2 != v3);
    uint64_t v9 = *(void *)(a1 + 8);
    uint64_t v8 = *(void *)(a1 + 16);
    if (v8 != v9) {
      *(void *)(a1 + 16) = v8 + ((v9 - v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    }
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

int **sub_665BF4(int **result, int **a2, int **a3, uint64_t a4)
{
  if (result != a2)
  {
    while (1)
    {
      unint64_t v4 = *result;
      unint64_t v5 = (unsigned __int16 *)((char *)*result - **result);
      unsigned int v6 = *v5;
      if (v6 >= 0x2F && v5[23])
      {
        unsigned int v7 = *((unsigned __int8 *)v4 + v5[23]);
        BOOL v8 = v7 > 0x2F;
        uint64_t v9 = (1 << v7) & 0xE2E040048000;
        if (!v8 && v9 != 0) {
          break;
        }
      }
      if (*((unsigned char *)result + 38))
      {
        if (v6 >= 0x49)
        {
          unsigned int v11 = v5[36];
          if (v11) {
            goto LABEL_15;
          }
        }
      }
      else if (v6 >= 0x4B)
      {
        unsigned int v11 = v5[37];
        if (v11)
        {
LABEL_15:
          __int16 v12 = *(_WORD *)((char *)v4 + v11);
          uint64_t v13 = (char *)*a3;
          uint64_t v14 = (unsigned __int16 *)((char *)*a3 - **a3);
          unsigned int v15 = *v14;
          if (*((unsigned char *)a3 + 38)) {
            goto LABEL_20;
          }
          goto LABEL_16;
        }
      }
      __int16 v12 = -1;
      uint64_t v13 = (char *)*a3;
      uint64_t v14 = (unsigned __int16 *)((char *)*a3 - **a3);
      unsigned int v15 = *v14;
      if (*((unsigned char *)a3 + 38))
      {
LABEL_20:
        if (v15 >= 0x4B)
        {
          unsigned int v16 = v14[37];
          if (v16) {
            goto LABEL_22;
          }
        }
        goto LABEL_23;
      }
LABEL_16:
      if (v15 >= 0x49)
      {
        unsigned int v16 = v14[36];
        if (v16)
        {
LABEL_22:
          int v17 = *(unsigned __int16 *)&v13[v16];
          goto LABEL_24;
        }
      }
LABEL_23:
      int v17 = 0xFFFF;
LABEL_24:
      unsigned __int16 v18 = v12 + 18000;
      unsigned __int16 v19 = v12 - 18000;
      if ((unsigned __int16)(v18 >> 5) < 0x465u) {
        unsigned __int16 v19 = v18;
      }
      int v20 = v17 - v19;
      if (v20 > 18000) {
        v20 -= 36000;
      }
      if (v20 < -17999) {
        v20 += 36000;
      }
      if (fabs((double)v20 / 100.0) <= *(double *)(a4 + 96)) {
        break;
      }
      result += 5;
      if (result == a2) {
        return a2;
      }
    }
  }
  if (result == a2) {
    return a2;
  }
  uint64_t v21 = result + 5;
  if (result + 5 != a2)
  {
    while (1)
    {
      int v25 = *v21;
      unsigned int v26 = (unsigned __int16 *)((char *)*v21 - **v21);
      unsigned int v27 = *v26;
      if (v27 < 0x2F || !v26[23]) {
        break;
      }
      unsigned int v22 = *((unsigned __int8 *)v25 + v26[23]);
      BOOL v8 = v22 > 0x2F;
      uint64_t v23 = (1 << v22) & 0xE2E040048000;
      if (v8 || v23 == 0) {
        break;
      }
LABEL_41:
      v21 += 5;
      if (v21 == a2) {
        return result;
      }
    }
    if (*((unsigned char *)v21 + 38))
    {
      if (v27 < 0x49) {
        goto LABEL_53;
      }
      unsigned int v28 = v26[36];
      if (!v28) {
        goto LABEL_53;
      }
    }
    else if (v27 < 0x4B || (unsigned int v28 = v26[37]) == 0)
    {
LABEL_53:
      __int16 v29 = -1;
      unint64_t v30 = (char *)*a3;
      unint64_t v31 = (unsigned __int16 *)((char *)*a3 - **a3);
      unsigned int v32 = *v31;
      if (*((unsigned char *)a3 + 38)) {
        goto LABEL_54;
      }
      goto LABEL_50;
    }
    __int16 v29 = *(_WORD *)((char *)v25 + v28);
    unint64_t v30 = (char *)*a3;
    unint64_t v31 = (unsigned __int16 *)((char *)*a3 - **a3);
    unsigned int v32 = *v31;
    if (*((unsigned char *)a3 + 38))
    {
LABEL_54:
      if (v32 >= 0x4B)
      {
        unsigned int v33 = v31[37];
        if (v33)
        {
LABEL_56:
          int v34 = *(unsigned __int16 *)&v30[v33];
LABEL_58:
          unsigned __int16 v35 = v29 + 18000;
          unsigned __int16 v36 = v29 - 18000;
          if ((unsigned __int16)(v35 >> 5) < 0x465u) {
            unsigned __int16 v36 = v35;
          }
          int v37 = v34 - v36;
          if (v37 > 18000) {
            v37 -= 36000;
          }
          if (v37 < -17999) {
            v37 += 36000;
          }
          if (fabs((double)v37 / 100.0) > *(double *)(a4 + 96))
          {
            long long v38 = *(_OWORD *)v21;
            long long v39 = *((_OWORD *)v21 + 1);
            result[4] = v21[4];
            *(_OWORD *)BOOL result = v38;
            *((_OWORD *)result + 1) = v39;
            result += 5;
          }
          goto LABEL_41;
        }
      }
LABEL_57:
      int v34 = 0xFFFF;
      goto LABEL_58;
    }
LABEL_50:
    if (v32 >= 0x49)
    {
      unsigned int v33 = v31[36];
      if (v33) {
        goto LABEL_56;
      }
    }
    goto LABEL_57;
  }
  return result;
}

int **sub_665ED4(int **result, int **a2, int **a3, uint64_t a4)
{
  if (result != a2)
  {
    while (1)
    {
      unint64_t v4 = *result;
      unint64_t v5 = (unsigned __int16 *)((char *)*result - **result);
      unsigned int v6 = *v5;
      if (v6 >= 0x2F && v5[23])
      {
        unsigned int v7 = *((unsigned __int8 *)v4 + v5[23]);
        BOOL v8 = v7 > 0x2F;
        uint64_t v9 = (1 << v7) & 0xE2E040048000;
        if (!v8 && v9 != 0) {
          break;
        }
      }
      unsigned int v11 = (unsigned __int16 *)((char *)*a3 - **a3);
      unsigned int v12 = *v11;
      if (*((unsigned char *)a3 + 38))
      {
        if (v12 >= 0x49)
        {
          unsigned int v13 = v11[36];
          if (v13) {
            goto LABEL_15;
          }
        }
      }
      else if (v12 >= 0x4B)
      {
        unsigned int v13 = v11[37];
        if (v13)
        {
LABEL_15:
          __int16 v14 = *(_WORD *)((char *)*a3 + v13);
          if (*((unsigned char *)result + 38)) {
            goto LABEL_20;
          }
          goto LABEL_16;
        }
      }
      __int16 v14 = -1;
      if (*((unsigned char *)result + 38))
      {
LABEL_20:
        if (v6 >= 0x4B)
        {
          unsigned int v15 = v5[37];
          if (v15) {
            goto LABEL_22;
          }
        }
        goto LABEL_23;
      }
LABEL_16:
      if (v6 >= 0x49)
      {
        unsigned int v15 = v5[36];
        if (v15)
        {
LABEL_22:
          int v16 = *(unsigned __int16 *)((char *)v4 + v15);
          goto LABEL_24;
        }
      }
LABEL_23:
      int v16 = 0xFFFF;
LABEL_24:
      unsigned __int16 v17 = v14 + 18000;
      if ((unsigned __int16)((unsigned __int16)(v14 + 18000) >> 5) >= 0x465u) {
        unsigned __int16 v17 = v14 - 18000;
      }
      int v18 = v16 - v17;
      if (v18 > 18000) {
        v18 -= 36000;
      }
      if (v18 < -17999) {
        v18 += 36000;
      }
      if (fabs((double)v18 / 100.0) <= *(double *)(a4 + 96)) {
        break;
      }
      result += 5;
      if (result == a2) {
        return a2;
      }
    }
  }
  if (result == a2) {
    return a2;
  }
  unsigned __int16 v19 = result + 5;
  if (result + 5 != a2)
  {
    while (1)
    {
      uint64_t v23 = *v19;
      unint64_t v24 = (unsigned __int16 *)((char *)*v19 - **v19);
      unsigned int v25 = *v24;
      if (v25 < 0x2F || !v24[23]) {
        break;
      }
      unsigned int v20 = *((unsigned __int8 *)v23 + v24[23]);
      BOOL v8 = v20 > 0x2F;
      uint64_t v21 = (1 << v20) & 0xE2E040048000;
      if (v8 || v21 == 0) {
        break;
      }
LABEL_41:
      v19 += 5;
      if (v19 == a2) {
        return result;
      }
    }
    unsigned int v26 = (unsigned __int16 *)((char *)*a3 - **a3);
    unsigned int v27 = *v26;
    if (*((unsigned char *)a3 + 38))
    {
      if (v27 < 0x49) {
        goto LABEL_53;
      }
      unsigned int v28 = v26[36];
      if (!v28) {
        goto LABEL_53;
      }
    }
    else if (v27 < 0x4B || (unsigned int v28 = v26[37]) == 0)
    {
LABEL_53:
      __int16 v29 = -1;
      if (*((unsigned char *)v19 + 38)) {
        goto LABEL_54;
      }
      goto LABEL_50;
    }
    __int16 v29 = *(_WORD *)((char *)*a3 + v28);
    if (*((unsigned char *)v19 + 38))
    {
LABEL_54:
      if (v25 >= 0x4B)
      {
        unsigned int v30 = v24[37];
        if (v30)
        {
LABEL_56:
          int v31 = *(unsigned __int16 *)((char *)v23 + v30);
LABEL_58:
          unsigned __int16 v32 = v29 + 18000;
          if ((unsigned __int16)((unsigned __int16)(v29 + 18000) >> 5) >= 0x465u) {
            unsigned __int16 v32 = v29 - 18000;
          }
          int v33 = v31 - v32;
          if (v33 > 18000) {
            v33 -= 36000;
          }
          if (v33 < -17999) {
            v33 += 36000;
          }
          if (fabs((double)v33 / 100.0) > *(double *)(a4 + 96))
          {
            long long v34 = *(_OWORD *)v19;
            long long v35 = *((_OWORD *)v19 + 1);
            result[4] = v19[4];
            *(_OWORD *)BOOL result = v34;
            *((_OWORD *)result + 1) = v35;
            result += 5;
          }
          goto LABEL_41;
        }
      }
LABEL_57:
      int v31 = 0xFFFF;
      goto LABEL_58;
    }
LABEL_50:
    if (v25 >= 0x49)
    {
      unsigned int v30 = v24[36];
      if (v30) {
        goto LABEL_56;
      }
    }
    goto LABEL_57;
  }
  return result;
}

void sub_6661A0()
{
  unk_259C34F = 16641;
  word_259C338 = 65;
  byte_259C367 = 1;
  byte_259C351 = 0;
}

uint64_t sub_6661C8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  *(void *)a1 = sub_3750CC(a2);
  sub_6A4390(a1 + 8, a2, 1, 1, a3 + 1904);
  *(void *)(a1 + 6016) = a3;
  sub_675628(a1 + 6024, a2, *(unsigned __int8 *)(a4 + 1424));
  sub_8C7470((void *)(a1 + 6040), a1 + 8, a2, a3, a4);
  *(void *)(a1 + 6184) = 0;
  *(_OWORD *)(a1 + 6152) = 0u;
  *(_OWORD *)(a1 + 6168) = 0u;
  *(_OWORD *)(a1 + 6120) = 0u;
  *(_OWORD *)(a1 + 6136) = 0u;
  *(_OWORD *)(a1 + 6088) = 0u;
  *(_OWORD *)(a1 + 6104) = 0u;
  *(_OWORD *)(a1 + 6072) = 0u;
  return a1;
}

void sub_666284(_Unwind_Exception *a1)
{
  sub_68D2B0(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_666298(uint64_t *result, void *a2)
{
  BOOL v3 = result;
  uint64_t v4 = 0;
  size_t v58 = a2 + 133;
  uint64_t v5 = a2[134];
  uint64_t v6 = a2[133];
  do
  {
    if (v5 + v4 == v6) {
      return result;
    }
    int v7 = *(unsigned __int8 *)(v5 + v4 - 2072);
    v4 -= 2400;
  }
  while (v7 != 5);
  uint64_t v8 = 0x2FC962FC962FC963 * ((v5 - v6) >> 5);
  uint64_t v9 = 0x2FC962FC962FC963 * ((-2400 - v4) >> 5);
  uint64_t v57 = v8 - v9;
  if (v8 != v9)
  {
    unint64_t v10 = 0;
    unint64_t v56 = v8 + ~v9;
    do
    {
      while (1)
      {
        uint64_t v11 = sub_51690C(v58, v10);
        uint64_t v12 = v11;
        unint64_t v13 = *(void *)(v11 + 16) == -1 ? *(void *)(v11 + 24) - 1 : *(void *)(v11 + 16);
        uint64_t v14 = sub_4D4928(a2 + 928, v13);
        if (sub_675854((uint64_t)(v3 + 753), v12, v14)) {
          break;
        }
        *(unsigned char *)(v12 + 1864) = 1;
        if (++v10 == v57) {
          goto LABEL_24;
        }
      }
      sub_666878((uint64_t)v3, a2, v12);
      sub_666CE0(v12 + 1808, *(void *)(v12 + 24) - *(void *)(v12 + 40));
      unint64_t v15 = *(void *)(v12 + 40);
      unint64_t v16 = *(void *)(v12 + 24);
      if (v15 <= v16) {
        uint64_t v17 = *(void *)(v12 + 24);
      }
      else {
        uint64_t v17 = *(void *)(v12 + 40);
      }
      if (v15 < v16)
      {
        do
        {
          int v18 = (int **)sub_46C8EC(a2, v15);
          sub_666E00(v3, a2, v12, v15);
          sub_667070((uint64_t)v3, a2, (void *)v12, v15);
          unsigned __int16 v19 = (void *)sub_6672BC((void *)(v12 + 1808), v15 - *(void *)(v12 + 40));
          sub_6674FC(v3, v18, v19);
          sub_667894(v3, a2, v12, v15);
          sub_667A44(v3, a2, v12, v15);
          if (!*(unsigned char *)(v12 + 1864) && sub_6684A0((uint64_t)v3, a2, v12, (uint64_t)v18, v15)) {
            *(unsigned char *)(v12 + 1864) = 1;
          }
          ++v15;
        }
        while (v17 != v15);
      }
      if (*(unsigned char *)(v3[752] + 1899)) {
        sub_668B88((uint64_t)v3, (uint64_t)a2, v12);
      }
      sub_668E28((uint64_t)v3, a2, v12);
      ++v10;
    }
    while (v10 != v57);
LABEL_24:
    unint64_t v20 = 0;
    while (1)
    {
      BOOL result = (uint64_t *)sub_51690C(v58, v20);
      if (result[226] != result[227])
      {
        uint64_t v21 = (uint64_t)result;
        unint64_t v59 = result;
        if (v20 < v56)
        {
          BOOL result = (uint64_t *)sub_51690C(v58, v20 + 1);
          unint64_t v59 = result;
        }
        unsigned int v22 = (unsigned __int8 *)(v21 + 329);
        if (!*(unsigned char *)(v21 + 330)) {
          unsigned int v22 = (unsigned __int8 *)a2 + 1057;
        }
        unint64_t v23 = *(void *)(v21 + 40);
        unint64_t v24 = *(void *)(v21 + 24);
        BOOL v25 = v23 >= v24;
        if (v23 > v24) {
          unint64_t v24 = *(void *)(v21 + 40);
        }
        unint64_t v61 = v24;
        if (!v25) {
          break;
        }
      }
LABEL_25:
      if (++v20 == v57) {
        return result;
      }
    }
    uint64_t v26 = 0;
    unint64_t v63 = (void *)(v21 + 1808);
    unsigned __int8 v62 = *v22;
    unint64_t v60 = v20;
    for (uint64_t i = sub_6672BC((void *)(v21 + 1808), 0); ; uint64_t i = sub_6672BC(v63, v23 - *(void *)(v21 + 40)))
    {
      unsigned int v28 = (_OWORD *)i;
      uint64_t v29 = sub_65123C(a2, v20, v23);
      uint64_t v30 = v29 + v26;
      sub_2F99CC(&v65, *(void *)(v21 + 872) - v30 + v29, *(void *)(v21 + 872) - v30);
      sub_684734(v28, &v65);
      if (*(void *)(v21 + 1808) == *(void *)(v21 + 1816)) {
        goto LABEL_48;
      }
      uint64_t v31 = sub_6672BC(v63, v23 - *(void *)(v21 + 40));
      if (sub_46C760(a2) - 1 <= v23) {
        goto LABEL_48;
      }
      uint64_t v32 = *(void *)(v21 + 64) == v23 ? *(void *)(v21 + 72) : v23 + 1;
      unint64_t v33 = v32 - *(void *)(v21 + 40);
      if (v33 < 0xCF3CF3CF3CF3CF3DLL * ((uint64_t)(*(void *)(v21 + 1816) - *(void *)(v21 + 1808)) >> 4)) {
        break;
      }
      unint64_t v35 = v32 - v59[5];
      if (v35 < 0xCF3CF3CF3CF3CF3DLL * ((v59[227] - v59[226]) >> 4))
      {
        long long v34 = (void *)sub_577CC8(v59 + 226, v35);
        goto LABEL_46;
      }
      uint64_t v36 = sub_68206C((uint64_t)v66);
      sub_66C664(v36, v31, v66);
      sub_576848((uint64_t)v66);
LABEL_48:
      uint64_t v64 = v30;
      sub_686440((uint64_t)v28);
      int v37 = (int **)sub_46C8EC(a2, v23);
      sub_668FF4(v3, v37, v28, a2, v21);
      long long v38 = (int **)sub_46C8EC(a2, v23);
      sub_66A3A8(v3, v38, v28);
      sub_66A778((uint64_t)v3, (uint64_t)v28, v62);
      long long v39 = (uint64_t *)sub_6845BC((uint64_t)v28);
      uint64_t v40 = *v39;
      uint64_t v41 = v39[1];
      BOOL result = (uint64_t *)sub_64790C((uint64_t)v28);
      uint64_t v43 = *result;
      uint64_t v42 = result[1];
      if (v41 != v40 || v42 != v43)
      {
        unint64_t v45 = 0xAAAAAAAAAAAAAAABLL * ((v41 - v40) >> 3);
        if (v62 == 1)
        {
          int v46 = 0;
        }
        else
        {
          BOOL result = (uint64_t *)sub_682244((uint64_t)v28);
          int v46 = result - v45;
        }
        unsigned int v47 = (v46 + v45);
        if (v47 <= v46) {
          int v48 = v46;
        }
        else {
          int v48 = (v46 + v45);
        }
        int v49 = v46;
        if (v46 < v47)
        {
          do
          {
            uint64_t v50 = (char ***)sub_6845BC((uint64_t)v28);
            BOOL result = (uint64_t *)sub_683F04((uint64_t)v28, v49++, *v50);
          }
          while (v48 != v49);
        }
        unint64_t v51 = 0xAAAAAAAAAAAAAAABLL * ((v42 - v43) >> 3);
        if (v62 == 1)
        {
          BOOL result = (uint64_t *)sub_682244((uint64_t)v28);
          int v52 = result - v51;
        }
        else
        {
          int v52 = 0;
        }
        unsigned int v53 = (v52 + v51);
        if (v53 <= v52) {
          int v54 = v52;
        }
        else {
          int v54 = (v52 + v51);
        }
        if (v52 < v53)
        {
          do
          {
            uint64_t v55 = (char ***)sub_64790C((uint64_t)v28);
            BOOL result = (uint64_t *)sub_683F04((uint64_t)v28, v52++, *v55);
          }
          while (v54 != v52);
        }
      }
      ++v23;
      unint64_t v20 = v60;
      uint64_t v26 = v64;
      if (v23 == v61) {
        goto LABEL_25;
      }
    }
    long long v34 = (void *)sub_6672BC(v63, v33);
LABEL_46:
    sub_66C664((uint64_t)v34, v31, v34);
    goto LABEL_48;
  }
  return result;
}

void sub_666864(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  sub_576848((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_666878(uint64_t result, void *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  if (*(void *)(a3 + 16) == -1) {
    uint64_t v5 = v4 - 1;
  }
  else {
    uint64_t v5 = *(void *)(a3 + 16);
  }
  *(void *)(a3 + 64) = v5;
  *(void *)(a3 + 72) = v4;
  unsigned int v6 = *(_DWORD *)(a3 + 160);
  if (v6 - 25 <= 0x3F && ((1 << (v6 - 25)) & 0x9000000000000001) != 0 || v6 == 17) {
    return result;
  }
  if (v6 - 82 < 3) {
    return result;
  }
  unint64_t v10 = (void *)result;
  if (v6 <= 0x27 && ((1 << v6) & 0x8600050000) != 0) {
    return result;
  }
  uint64_t v11 = (int **)sub_46C8EC(a2, v5);
  BOOL result = sub_46C8EC(a2, *(void *)(a3 + 24));
  uint64_t v13 = *(void *)(result + 32);
  uint64_t v14 = (char *)*v11;
  unint64_t v15 = (unsigned __int16 *)((char *)*v11 - **v11);
  unsigned int v16 = *v15;
  if (!*((unsigned char *)v11 + 38))
  {
    if (v16 < 0x27) {
      goto LABEL_36;
    }
    unsigned int v17 = v15[19];
    if (!v17) {
      goto LABEL_36;
    }
LABEL_22:
    uint64_t v18 = v17;
    unsigned __int16 v19 = &v14[v17];
    uint64_t v20 = *(unsigned int *)v19;
    uint64_t v21 = (unsigned int *)&v19[v20];
    unsigned int v24 = *v21;
    unsigned int v22 = v21 + 1;
    uint64_t v23 = v24;
    if (v24)
    {
      int v25 = 0;
      uint64_t v26 = &v22[v23];
      uint64_t v27 = v13 & 0xFFFFFFFFFFFFLL;
      uint64_t v28 = v13 & 0xFF000000000000;
      uint64_t v29 = (uint64_t)&v14[v18 + 8 + v20];
      do
      {
        uint64_t v31 = *v22;
        uint64_t v32 = (unsigned __int16 *)((char *)v22 + v31 - *(int *)((char *)v22 + v31));
        if (*v32 >= 0xDu)
        {
          uint64_t v33 = v32[6];
          if (v32[6])
          {
            long long v34 = (unsigned int *)((char *)v22 + v31 + v33);
            BOOL result = *v34;
            uint64_t v35 = *(unsigned int *)((char *)v34 + result);
            if (v35)
            {
              uint64_t v36 = 0;
              uint64_t v37 = 4 * v35;
              uint64_t v38 = v29 + v33 + v31 + result;
              while (1)
              {
                uint64_t v39 = *(void *)(v38
                                + v36
                                + *(unsigned int *)(v38 + v36)
                                + (unint64_t)*(unsigned __int16 *)(v38
                                                                        + v36
                                                                        + *(unsigned int *)(v38 + v36)
                                                                        - (uint64_t)*(int *)(v38
                                                                                          + v36
                                                                                          + *(unsigned int *)(v38 + v36))
                                                                        + 4));
                BOOL result = v39 & 0xFFFFFFFFFFFFLL;
                if (v27 == (v39 & 0xFFFFFFFFFFFFLL))
                {
                  BOOL result = v28 != 0;
                  if ((v28 != 0) != ((v39 & 0xFF000000000000) != 0)) {
                    break;
                  }
                }
                v36 += 4;
                if (v37 == v36) {
                  goto LABEL_24;
                }
              }
              int v30 = 1;
            }
            else
            {
LABEL_24:
              int v30 = 0;
            }
            v25 += v30;
          }
        }
        ++v22;
        v29 += 4;
      }
      while (v22 != v26);
      if (v25) {
        return result;
      }
    }
    goto LABEL_36;
  }
  if (v16 >= 0x29)
  {
    unsigned int v17 = v15[20];
    if (v17) {
      goto LABEL_22;
    }
  }
LABEL_36:
  uint64_t v40 = *(void *)(a3 + 16);
  uint64_t v41 = *(void *)(a3 + 24);
  LODWORD(v42) = v41 - 1;
  if (v40 != -1) {
    uint64_t v42 = *(void *)(a3 + 16);
  }
  if ((int)v42 + 1 > (int)v41) {
    int v43 = v42 + 1;
  }
  else {
    int v43 = *(void *)(a3 + 24);
  }
  if ((int)v42 + 1 >= (int)v41) {
    goto LABEL_69;
  }
  uint64_t v44 = (int)v42 + 1;
  do
  {
    uint64_t v45 = *(void *)(sub_46C8EC(a2, v44) + 32);
    int v46 = (char *)*v11;
    unsigned int v47 = (unsigned __int16 *)((char *)*v11 - **v11);
    unsigned int v48 = *v47;
    if (*((unsigned char *)v11 + 38))
    {
      if (v48 < 0x29) {
        goto LABEL_43;
      }
      unsigned int v49 = v47[20];
      if (!v49) {
        goto LABEL_43;
      }
    }
    else
    {
      if (v48 < 0x27) {
        goto LABEL_43;
      }
      unsigned int v49 = v47[19];
      if (!v49) {
        goto LABEL_43;
      }
    }
    uint64_t v50 = v49;
    unint64_t v51 = &v46[v49];
    uint64_t v52 = *(unsigned int *)v51;
    unsigned int v53 = (unsigned int *)&v51[v52];
    unsigned int v56 = *v53;
    int v54 = v53 + 1;
    uint64_t v55 = v56;
    if (v56)
    {
      unsigned int v57 = 0;
      size_t v58 = &v54[v55];
      uint64_t v59 = (uint64_t)&v46[v50 + 8 + v52];
      do
      {
        uint64_t v61 = *v54;
        unsigned __int8 v62 = (unsigned __int16 *)((char *)v54 + v61 - *(int *)((char *)v54 + v61));
        if (*v62 >= 0xDu)
        {
          uint64_t v63 = v62[6];
          if (v62[6])
          {
            uint64_t v64 = (unsigned int *)((char *)v54 + v61 + v63);
            uint64_t v65 = *v64;
            uint64_t v66 = *(unsigned int *)((char *)v64 + v65);
            if (v66)
            {
              uint64_t v67 = 0;
              uint64_t v68 = 4 * v66;
              uint64_t v69 = v59 + v63 + v61 + v65;
              while (1)
              {
                uint64_t v70 = *(void *)(v69
                                + v67
                                + *(unsigned int *)(v69 + v67)
                                + (unint64_t)*(unsigned __int16 *)(v69
                                                                        + v67
                                                                        + *(unsigned int *)(v69 + v67)
                                                                        - (uint64_t)*(int *)(v69
                                                                                          + v67
                                                                                          + *(unsigned int *)(v69 + v67))
                                                                        + 4));
                if ((v45 & 0xFFFFFFFFFFFFLL) == (v70 & 0xFFFFFFFFFFFFLL)
                  && ((v45 & 0xFF000000000000) != 0) != ((v70 & 0xFF000000000000) != 0))
                {
                  break;
                }
                v67 += 4;
                if (v68 == v67) {
                  goto LABEL_52;
                }
              }
              int v60 = 1;
            }
            else
            {
LABEL_52:
              int v60 = 0;
            }
            v57 += v60;
          }
        }
        ++v54;
        v59 += 4;
      }
      while (v54 != v58);
      if (v57)
      {
        BOOL result = sub_66EE18(v10, a2, v44, v41, v57);
        if (result) {
          goto LABEL_67;
        }
        BOOL result = sub_66F0E4(v10, a2, v44, *(void *)(a3 + 24));
        if (result != -1)
        {
LABEL_66:
          *(void *)(a3 + 64) = v44;
          uint64_t v44 = result;
LABEL_67:
          *(void *)(a3 + 72) = v44;
          return result;
        }
      }
    }
LABEL_43:
    ++v44;
  }
  while (v43 != v44);
  uint64_t v40 = *(void *)(a3 + 16);
  uint64_t v41 = *(void *)(a3 + 24);
LABEL_69:
  if (v40 == -1) {
    int v71 = v41 - 1;
  }
  else {
    int v71 = v40;
  }
  int v72 = *(_DWORD *)(a3 + 40);
  uint64_t v44 = v71;
  BOOL result = sub_46CCC8(a2, v71, v12);
  if (v72 - 1 >= v71) {
    int v74 = v71;
  }
  else {
    int v74 = v72 - 1;
  }
  if (v72 <= v71)
  {
    uint64_t v75 = 0;
    uint64_t v76 = *(void *)(v10[752] + 1600) + result;
    int v77 = v74 - v71;
    do
    {
      BOOL result = sub_46CCC8(a2, v44, v73);
      v75 += result;
      if (v75 > v76) {
        break;
      }
      BOOL result = sub_66F0E4(v10, a2, v44, *(void *)(a3 + 24));
      if (result != -1) {
        goto LABEL_66;
      }
      --v44;
    }
    while (!__CFADD__(v77++, 1));
  }
  return result;
}

void sub_666CE0(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = *(uint64_t **)a1;
  if (0xCF3CF3CF3CF3CF3DLL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 4) >= a2) {
    return;
  }
  if (a2 >= 0xC30C30C30C30C4) {
    sub_2E00();
  }
  uint64_t v4 = *(uint64_t **)(a1 + 8);
  uint64_t v5 = 336 * a2;
  unsigned int v6 = (char *)operator new(336 * a2);
  int v7 = &v6[v5];
  uint64_t v8 = &v6[(char *)v4 - (char *)v2];
  if (v4 == v2)
  {
    *(void *)a1 = v8;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v7;
    if (!v2) {
      return;
    }
    goto LABEL_10;
  }
  uint64_t v9 = &v6[(char *)v4 - (char *)v2];
  do
  {
    v4 -= 42;
    sub_66FDB0((uint64_t)(v9 - 336), v4);
  }
  while (v4 != v2);
  unint64_t v10 = *(uint64_t **)a1;
  unint64_t v2 = *(uint64_t **)(a1 + 8);
  *(void *)a1 = v9;
  *(void *)(a1 + 8) = v8;
  *(void *)(a1 + 16) = v7;
  if (v2 != v10)
  {
    do
    {
      v2 -= 42;
      sub_576848((uint64_t)v2);
    }
    while (v2 != v10);
    unint64_t v2 = v10;
  }
  if (v2)
  {
LABEL_10:
    operator delete(v2);
  }
}

uint64_t sub_666E00(uint64_t *a1, void *a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = (int **)sub_46C8EC(a2, a4);
  unint64_t v9 = (unint64_t)v8[4];
  uint64_t v10 = v9 & 0xFF000000000000;
  uint64_t v11 = (int *)sub_2D5D58(*a1, v9 & 0xFFFFFFFFFFFFLL);
  double v12 = (unsigned __int16 *)((char *)v11 - *v11);
  unsigned int v13 = *v12;
  if (!v10)
  {
    if (v13 < 0x27) {
      goto LABEL_8;
    }
    unsigned int v14 = v12[19];
    if (!v14) {
      goto LABEL_8;
    }
LABEL_7:
    uint64_t v15 = *(unsigned int *)((char *)v11 + v14 + *(int *)((char *)v11 + v14));
    goto LABEL_9;
  }
  if (v13 >= 0x29)
  {
    unsigned int v14 = v12[20];
    if (v14) {
      goto LABEL_7;
    }
  }
LABEL_8:
  uint64_t v15 = 0;
LABEL_9:
  unsigned __int8 v16 = sub_66ADE8(v15);
  sub_682074((uint64_t)v32, v16);
  char v17 = sub_663238((uint64_t)(a1 + 382), v8);
  sub_6846EC((uint64_t)v32, v17);
  uint64_t v18 = (unsigned __int16 *)((char *)*v8 - **v8);
  if (*v18 >= 0xBu && (uint64_t v19 = v18[5]) != 0) {
    int v20 = (*((unsigned __int8 *)*v8 + v19 + 3) >> 2) & 1;
  }
  else {
    int v20 = 0;
  }
  sub_684700((uint64_t)v32, v20);
  sub_6A48E0((uint64_t)(a1 + 1), (uint64_t)v8, 0, &v33);
  for (uint64_t i = *v33; i != v33[1]; i += 192)
  {
    if (*(unsigned char *)(i + 185)) {
      BOOL v22 = *(unsigned char *)(i + 187) == 0;
    }
    else {
      BOOL v22 = 0;
    }
    if (v22)
    {
      int v23 = *(_DWORD *)(i + 24);
      if (v23 != 3 && v23 != 0)
      {
        int v25 = 0;
        uint64_t v26 = v34;
        if (!v34) {
          goto LABEL_30;
        }
        goto LABEL_28;
      }
    }
  }
  int v25 = 1;
  uint64_t v26 = v34;
  if (!v34) {
    goto LABEL_30;
  }
LABEL_28:
  if (!atomic_fetch_add(&v26->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
    std::__shared_weak_count::__release_weak(v26);
  }
LABEL_30:
  sub_684648((uint64_t)v32, v25);
  uint64_t v27 = (_DWORD *)sub_66AF3C(a2 + 1445, a4);
  sub_684728((uint64_t)v32, v27);
  uint64_t v33 = (uint64_t *)v8[4];
  sub_68477C((uint64_t)v32, (int *)&v33);
  sub_682210((uint64_t)v32, a4);
  unint64_t v28 = *(void *)(a3 + 1816);
  if (v28 >= *(void *)(a3 + 1824))
  {
    int v30 = sub_670014((uint64_t **)(a3 + 1808), v32);
  }
  else
  {
    sub_66FDB0(v28, v32);
    int v30 = (uint64_t *)(v29 + 336);
  }
  *(void *)(a3 + 1816) = v30;
  return sub_576848((uint64_t)v32);
}

void sub_667048(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_66705C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_667070(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  if (sub_46C760(a2) - 1 != a4)
  {
    uint64_t v8 = *(void *)(sub_46C8EC(a2, a4) + 32);
    if (a3[8] == a4) {
      unint64_t v9 = a3[9];
    }
    else {
      unint64_t v9 = sub_66C9C8(a1, a2, (uint64_t)a3, a4);
    }
    unint64_t v10 = *(void *)(sub_46C8EC(a2, v9) + 32);
    sub_53F9B8(*(void *)a1, v8, 0, (void **)(a1 + 6096));
    uint64_t v11 = *(void *)(a1 + 6096);
    uint64_t v12 = *(void *)(a1 + 6104);
    if (v11 != v12)
    {
      while (__PAIR64__(*(unsigned __int16 *)(v11 + 4), *(_DWORD *)v11) != __PAIR64__(WORD2(v10), v10)
           || (HIWORD(v10) & 1) == (*(unsigned char *)(v11 + 6) == 0))
      {
        v11 += 48;
        if (v11 == v12) {
          goto LABEL_22;
        }
      }
    }
    if (v11 != v12)
    {
      unint64_t v22 = v9;
      int v23 = a3;
      uint64_t v13 = sub_6672BC(a3 + 226, a4 - a3[5]);
      int v25 = 0;
      uint64_t v26 = 0;
      long long __p = 0;
      uint64_t v14 = *(void *)(v11 + 16);
      uint64_t v15 = *(void *)(v11 + 24);
      if (v14 != v15)
      {
        unsigned __int8 v16 = (void *)v13;
        do
        {
          unsigned __int8 v17 = sub_683624(v16, *(unsigned char *)v14);
          uint64_t v18 = (char *)__p;
          int v25 = __p;
          int v20 = *(unsigned __int8 **)(v14 + 8);
          for (uint64_t i = *(unsigned __int8 **)(v14 + 16); v20 != i; ++v20)
          {
            char v27 = sub_683624(v16, *v20);
            uint64_t v18 = sub_670170(&__p, v18, &v27) + 1;
          }
          int v21 = !sub_6861A0((uint64_t)v16, v17) && *(void *)(v14 + 8) == *(void *)(v14 + 16);
          sub_6849A0((uint64_t)v16, v17, v21);
          sub_686144((uint64_t)v16, v17, (char **)&__p);
          v14 += 32;
        }
        while (v14 != v15);
        if (__p)
        {
          int v25 = __p;
          operator delete(__p);
        }
      }
      unint64_t v9 = v22;
      a3 = v23;
    }
LABEL_22:
    if (v9 == a3[8]) {
      sub_66CB50((uint64_t *)a1, a2, (uint64_t)a3, a4);
    }
  }
}

void sub_66729C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6672BC(void *a1, unint64_t a2)
{
  if (0xCF3CF3CF3CF3CF3DLL * ((uint64_t)(a1[1] - *a1) >> 4) <= a2)
  {
    exception = __cxa_allocate_exception(0x40uLL);
    std::to_string(&v16, a2);
    unsigned int v6 = std::string::insert(&v16, 0, "Out-of-bounds access in Vector::at with index=");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v17.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    uint64_t v8 = std::string::append(&v17, ",size=");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v18.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v18.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v15, 0xCF3CF3CF3CF3CF3DLL * ((uint64_t)(a1[1] - *a1) >> 4));
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      unint64_t v10 = &v15;
    }
    else {
      unint64_t v10 = (std::string *)v15.__r_.__value_.__r.__words[0];
    }
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v15.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v15.__r_.__value_.__l.__size_;
    }
    uint64_t v12 = std::string::append(&v18, (const std::string::value_type *)v10, size);
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    std::string::size_type v20 = v12->__r_.__value_.__r.__words[2];
    long long v19 = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    uint64_t v14 = (void *)sub_2F404((uint64_t)exception, &v19);
  }
  return *a1 + 336 * a2;
}

void sub_66741C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 41) < 0) {
    operator delete(*(void **)(v33 - 64));
  }
  if (a14 < 0)
  {
    operator delete(a9);
    if ((a33 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a26 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_10;
    }
  }
  else if ((a33 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(a28);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_7;
  }
LABEL_10:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0) {
LABEL_11:
  }
    _Unwind_Resume(a1);
LABEL_7:
  operator delete(__p);
  goto LABEL_11;
}

void sub_6674FC(uint64_t *a1, int **a2, void *a3)
{
  unint64_t v6 = (unint64_t)a2[4];
  if (sub_682244((uint64_t)a3))
  {
    uint64_t v7 = v6;
    unsigned int v8 = sub_682244((uint64_t)a3);
    if (v8 < 2) {
      return;
    }
LABEL_3:
    long long v9 = (unsigned __int16 *)((char *)*a2 - **a2);
    if (*v9 >= 0xBu && (uint64_t v10 = v9[5]) != 0)
    {
      int v44 = *((unsigned __int8 *)*a2 + v10 + 1) >> 7;
      uint64_t v11 = v8;
      if (!(_BYTE)v8) {
        return;
      }
    }
    else
    {
      int v44 = 0;
      uint64_t v11 = v8;
      if (!(_BYTE)v8) {
        return;
      }
    }
    uint64_t v16 = 0;
    unsigned int v17 = 0;
    uint64_t v18 = v7;
    uint64_t v19 = v7 & 0xFF000000000000;
    uint64_t v43 = v18;
    unint64_t v20 = v18 & 0xFFFFFFFFFFFFLL;
    uint64_t v21 = 0xFFFFFFFFLL;
    while (1)
    {
      uint64_t v23 = *a1;
      unsigned int v24 = (int *)sub_2D5D58(*a1, v20);
      int v25 = (unsigned __int16 *)((char *)v24 - *v24);
      unsigned int v26 = *v25;
      if (v44)
      {
        if (v19)
        {
          if (v26 < 0x29) {
            goto LABEL_36;
          }
          unsigned int v27 = v25[20];
          if (!v27) {
            goto LABEL_37;
          }
        }
        else
        {
          if (v26 < 0x27) {
            goto LABEL_36;
          }
          unsigned int v27 = v25[19];
          if (!v27) {
            goto LABEL_37;
          }
        }
        if (*(int *)((char *)v24 + v27 + *(int *)((char *)v24 + v27)) <= v16) {
          goto LABEL_36;
        }
        unint64_t v28 = (int *)sub_53F764(v23, v43, v16);
        uint64_t v29 = (unsigned __int16 *)((char *)v28 - *v28);
        if (*v29 < 9u) {
          goto LABEL_36;
        }
        unsigned int v27 = v29[4];
        if (v27) {
          goto LABEL_35;
        }
      }
      else
      {
        if (!v19)
        {
          if (v26 >= 0x27)
          {
            unsigned int v27 = v25[19];
            if (!v27) {
              goto LABEL_37;
            }
LABEL_32:
            if (*(int *)((char *)v24 + v27 + *(int *)((char *)v24 + v27)) > v16)
            {
              unint64_t v28 = (int *)sub_53F764(v23, v43, v16);
              int v30 = (unsigned __int16 *)((char *)v28 - *v28);
              if (*v30 >= 7u)
              {
                unsigned int v27 = v30[3];
                if (!v27) {
                  goto LABEL_37;
                }
LABEL_35:
                unsigned int v27 = *((unsigned __int8 *)v28 + v27);
                goto LABEL_37;
              }
            }
          }
LABEL_36:
          unsigned int v27 = 0;
          goto LABEL_37;
        }
        if (v26 < 0x29) {
          goto LABEL_36;
        }
        unsigned int v27 = v25[20];
        if (v27) {
          goto LABEL_32;
        }
      }
LABEL_37:
      unsigned int v31 = v27 - 1;
      BOOL v33 = v17 < v16 && v31 < 2;
      uint64_t v34 = *a1;
      uint64_t v35 = (int *)sub_2D5D58(*a1, v20);
      uint64_t v36 = (unsigned __int16 *)((char *)v35 - *v35);
      unsigned int v37 = *v36;
      if (v19)
      {
        if (v37 < 0x29) {
          goto LABEL_53;
        }
        unsigned int v38 = v36[20];
        if (!v38) {
          goto LABEL_53;
        }
      }
      else
      {
        if (v37 < 0x27) {
          goto LABEL_53;
        }
        unsigned int v38 = v36[19];
        if (!v38) {
          goto LABEL_53;
        }
      }
      if (*(int *)((char *)v35 + v38 + *(int *)((char *)v35 + v38)) > v16)
      {
        uint64_t v39 = (int *)sub_53F764(v34, v43, v16);
        uint64_t v40 = (unsigned __int16 *)((char *)v39 - *v39);
        if (*v40 >= 5u)
        {
          uint64_t v41 = v40[2];
          if (v41)
          {
            if ((*((unsigned char *)v39 + v41) & 4) != 0)
            {
              sub_683708(a3, v16, 0xFFu);
              sub_684944((uint64_t)a3, v16, 1);
              goto LABEL_55;
            }
          }
        }
      }
LABEL_53:
      if (!v33)
      {
        uint64_t v21 = (v21 + 1);
        if (v16 == v21)
        {
          uint64_t v21 = v16;
        }
        else
        {
          unsigned __int8 v22 = sub_66B14C(v21);
          sub_683708(a3, v16, v22);
        }
        goto LABEL_14;
      }
      unsigned __int8 v42 = sub_66B14C(v21);
      sub_683708(a3, v16, v42);
      sub_684944((uint64_t)a3, v16, 1);
      sub_684860((uint64_t)a3, v16, 1);
      sub_6848D4((uint64_t)a3, v42, v16);
LABEL_55:
      ++v17;
LABEL_14:
      if (v11 == ++v16) {
        return;
      }
    }
  }
  uint64_t v12 = (int *)sub_2D5D58(*a1, v6 & 0xFFFFFFFFFFFFLL);
  long long v13 = (unsigned __int16 *)((char *)v12 - *v12);
  unsigned int v14 = *v13;
  if ((v6 & 0xFF000000000000) != 0)
  {
    if (v14 < 0x29) {
      return;
    }
    uint64_t v7 = v6;
    unsigned int v15 = v13[20];
    if (!v15) {
      return;
    }
LABEL_61:
    unsigned int v8 = *(int *)((char *)v12 + v15 + *(int *)((char *)v12 + v15));
    if (v8 < 2) {
      return;
    }
    goto LABEL_3;
  }
  if (v14 >= 0x27)
  {
    uint64_t v7 = v6;
    unsigned int v15 = v13[19];
    if (v15) {
      goto LABEL_61;
    }
  }
}

void sub_667894(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  if (*(void *)(a3 + 1808) == *(void *)(a3 + 1816)) {
    return;
  }
  unsigned int v8 = (void *)(a3 + 1808);
  uint64_t v9 = *(void *)(sub_46C8EC(a2, a4) + 32);
  uint64_t v10 = sub_6672BC(v8, a4 - *(void *)(a3 + 40));
  uint64_t v11 = (int *)sub_2D5D58(*a1, v9 & 0xFFFFFFFFFFFFLL);
  uint64_t v12 = (unsigned __int16 *)((char *)v11 - *v11);
  unsigned int v13 = *v12;
  if ((v9 & 0xFF000000000000) == 0)
  {
    if (v13 < 0x17) {
      goto LABEL_10;
    }
    unsigned int v14 = v12[11];
    if (!v14) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v15 = *((unsigned __int8 *)v11 + v14);
    goto LABEL_11;
  }
  if (v13 >= 0x19)
  {
    unsigned int v14 = v12[12];
    if (v14) {
      goto LABEL_9;
    }
  }
LABEL_10:
  uint64_t v15 = 0;
LABEL_11:
  char v16 = sub_66ADE8(v15);
  sub_6845AC(v10, v16);
  unsigned int v17 = (int *)sub_2D5D58(*a1, v9 & 0xFFFFFFFFFFFFLL);
  uint64_t v18 = (unsigned __int16 *)((char *)v17 - *v17);
  unsigned int v19 = *v18;
  if ((v9 & 0xFF000000000000) != 0)
  {
    if (v19 < 0x17 || (unsigned int v20 = v18[11]) == 0)
    {
LABEL_18:
      uint64_t v21 = 0;
      goto LABEL_19;
    }
  }
  else
  {
    if (v19 < 0x19) {
      goto LABEL_18;
    }
    unsigned int v20 = v18[12];
    if (!v20) {
      goto LABEL_18;
    }
  }
  uint64_t v21 = *((unsigned __int8 *)v17 + v20);
LABEL_19:
  char v22 = sub_66ADE8(v21);
  sub_6845B4(v10, v22);
  uint64_t v23 = (unsigned __int8 *)(a3 + 329);
  if (!*(unsigned char *)(a3 + 330)) {
    uint64_t v23 = (unsigned __int8 *)a2 + 1057;
  }
  int v24 = *v23;
  unsigned __int8 v25 = sub_68459C(v10);
  sub_684088(v10, v25, v24 == 0);
  unsigned __int8 v26 = sub_6845A4(v10);

  sub_684088(v10, v26, v24 == 1);
}

void sub_667A44(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  if (*(void *)(a3 + 1808) == *(void *)(a3 + 1816)) {
    return;
  }
  unsigned int v8 = (void *)(a3 + 1808);
  unint64_t v9 = *(void *)(sub_46C8EC(a2, a4) + 32);
  uint64_t v10 = (char *)(a3 + 329);
  if (!*(unsigned char *)(a3 + 330)) {
    uint64_t v10 = (char *)a2 + 1057;
  }
  char v11 = *v10;
  uint64_t v12 = sub_6672BC(v8, a4 - *(void *)(a3 + 40));
  sub_66EBB8(*a1, v9, 0, (uint64_t)&v93);
  sub_66EBB8(*a1, v9, 1, (uint64_t)&v89);
  uint64_t v13 = (uint64_t)v94;
  uint64_t v14 = v95;
  uint64_t v15 = (uint64_t)v90;
  uint64_t v16 = v91;
  if (v94 != (void *)v95 || v90 != (void *)v91)
  {
    if (a4) {
      uint64_t v17 = a4 - 1;
    }
    else {
      uint64_t v17 = 0;
    }
    uint64_t v18 = sub_46C8EC(a2, v17);
    sub_6A48E0((uint64_t)(a1 + 1), v18, 0, (uint64_t **)&v87);
    if (v13 == v14)
    {
      unsigned __int8 v20 = 0;
      if (v15 != v16)
      {
LABEL_55:
        uint64_t v43 = sub_53EF50(*a1, v89);
        unsigned __int8 v44 = sub_66ADE8(v43);
        uint64_t v45 = *v87;
        uint64_t v46 = (uint64_t)v87[1];
        if (*v87 != (uint64_t *)v46)
        {
          while (1)
          {
            uint64_t v47 = *v45;
            uint64_t v48 = v45[1];
            if (*v45 != v48 && *((unsigned char *)v45 + 185) != 0) {
              break;
            }
LABEL_57:
            v45 += 24;
            if (v45 == (uint64_t *)v46) {
              goto LABEL_70;
            }
          }
          while (__PAIR64__(*(unsigned __int16 *)(v47 + 4), *(_DWORD *)v47) != __PAIR64__(WORD2(v89), v89)
               || (WORD3(v89) & 1) == (*(unsigned char *)(v47 + 6) == 0))
          {
            v47 += 8;
            if (v47 == v48) {
              goto LABEL_57;
            }
          }
        }
        if (v45 == (uint64_t *)v46)
        {
LABEL_70:
          char v50 = 12;
        }
        else
        {
          char v50 = 1;
          switch(*((_DWORD *)v45 + 6))
          {
            case 1:
            case 0x1B:
              char v50 = 3;
              break;
            case 2:
            case 0x1C:
              char v50 = 4;
              break;
            case 4:
              char v50 = 13;
              break;
            case 0xB:
              if (v11) {
                char v50 = 2;
              }
              else {
                char v50 = 1;
              }
              break;
            case 0x14:
            case 0x1D:
            case 0x3E:
            case 0x41:
              break;
            case 0x15:
            case 0x1E:
            case 0x3F:
            case 0x42:
              char v50 = 2;
              break;
            case 0x3C:
              char v50 = 5;
              break;
            case 0x3D:
              char v50 = 6;
              break;
            default:
              goto LABEL_70;
          }
        }
        uint64_t v74 = v89;
        sub_5404E8(&v75, (uint64_t *)&v90);
        __int16 v77 = v92;
        unint64_t v51 = (char *)v75;
        if (v76 - (unsigned char *)v75 == 32)
        {
          uint64_t v52 = *a1;
          unsigned int v53 = (int *)sub_2D5D58(*a1, v74 & 0xFFFFFFFFFFFFLL);
          if (*(unsigned char *)(v52 + 7772)) {
            sub_2DB8E0(v52 + 3896, v74, 0);
          }
          sub_2E5C38(v52, v74 & 0xFFFFFFFFFFFFLL, 1);
          int v54 = (unsigned __int16 *)((char *)v53 - *v53);
          if (*v54 >= 0x2Fu)
          {
            uint64_t v55 = v54[23];
            if (v55)
            {
              if (*((unsigned char *)v53 + v55) == 28) {
                char v50 = 13;
              }
            }
          }
          unint64_t v51 = (char *)v75;
        }
        if (v51)
        {
          unsigned int v56 = v76;
          unsigned int v57 = v51;
          if (v76 != v51)
          {
            do
            {
              size_t v58 = (void *)*((void *)v56 - 3);
              if (v58)
              {
                *((void *)v56 - 2) = v58;
                operator delete(v58);
              }
              v56 -= 32;
            }
            while (v56 != v51);
            unsigned int v57 = v75;
          }
          uint64_t v76 = v51;
          operator delete(v57);
        }
        uint64_t v59 = operator new(1uLL);
        uint64_t v78 = v59;
        unsigned char *v59 = v50;
        uint64_t v79 = v59 + 1;
        long long v80 = v59 + 1;
        unsigned __int8 v27 = v44;
        sub_670838(&v81, v44, (uint64_t)&v78);
        sub_6845F4(v12, (uint64_t)&v81);
        int v60 = (char *)v81;
        if (v81)
        {
          uint64_t v61 = v82;
          unsigned __int8 v62 = v81;
          if (v82 != v81)
          {
            uint64_t v63 = v82;
            do
            {
              uint64_t v65 = (void *)*((void *)v63 - 3);
              v63 -= 24;
              uint64_t v64 = v65;
              if (v65)
              {
                *((void *)v61 - 2) = v64;
                operator delete(v64);
              }
              uint64_t v61 = v63;
            }
            while (v63 != v60);
            unsigned __int8 v62 = v81;
          }
          uint64_t v82 = v60;
          operator delete(v62);
        }
        if (v78)
        {
          uint64_t v79 = v78;
          operator delete(v78);
        }
        goto LABEL_97;
      }
    }
    else
    {
      uint64_t v19 = sub_53EF50(*a1, v93);
      unsigned __int8 v20 = sub_66ADE8(v19);
      uint64_t v21 = *v87;
      uint64_t v22 = (uint64_t)v87[1];
      if (*v87 != (uint64_t *)v22)
      {
        while (1)
        {
          uint64_t v23 = *v21;
          uint64_t v24 = v21[1];
          if (*v21 != v24 && *((unsigned char *)v21 + 185) != 0) {
            break;
          }
LABEL_12:
          v21 += 24;
          if (v21 == (uint64_t *)v22) {
            goto LABEL_27;
          }
        }
        while (__PAIR64__(*(unsigned __int16 *)(v23 + 4), *(_DWORD *)v23) != __PAIR64__(WORD2(v93), v93)
             || (WORD3(v93) & 1) == (*(unsigned char *)(v23 + 6) == 0))
        {
          v23 += 8;
          if (v23 == v24) {
            goto LABEL_12;
          }
        }
      }
      if (v21 == (uint64_t *)v22)
      {
LABEL_27:
        char v26 = 12;
      }
      else
      {
        char v26 = 1;
        switch(*((_DWORD *)v21 + 6))
        {
          case 1:
          case 0x1B:
            char v26 = 3;
            break;
          case 2:
          case 0x1C:
            char v26 = 4;
            break;
          case 4:
            char v26 = 13;
            break;
          case 0xB:
            if (v11) {
              char v26 = 2;
            }
            else {
              char v26 = 1;
            }
            break;
          case 0x14:
          case 0x1D:
          case 0x3E:
          case 0x41:
            break;
          case 0x15:
          case 0x1E:
          case 0x3F:
          case 0x42:
            char v26 = 2;
            break;
          case 0x3C:
            char v26 = 5;
            break;
          case 0x3D:
            char v26 = 6;
            break;
          default:
            goto LABEL_27;
        }
      }
      long long v83 = v93;
      sub_5404E8(&__p, (uint64_t *)&v94);
      __int16 v86 = v96;
      unint64_t v28 = (char *)__p;
      if (v85 - (unsigned char *)__p == 32)
      {
        uint64_t v29 = *a1;
        int v30 = (int *)sub_2D5D58(*a1, v83 & 0xFFFFFFFFFFFFLL);
        if (*(unsigned char *)(v29 + 7772)) {
          sub_2DB8E0(v29 + 3896, v83, 0);
        }
        sub_2E5C38(v29, v83 & 0xFFFFFFFFFFFFLL, 1);
        unsigned int v31 = (unsigned __int16 *)((char *)v30 - *v30);
        if (*v31 >= 0x2Fu)
        {
          uint64_t v32 = v31[23];
          if (v32)
          {
            if (*((unsigned char *)v30 + v32) == 28) {
              char v26 = 13;
            }
          }
        }
        unint64_t v28 = (char *)__p;
      }
      if (v28)
      {
        BOOL v33 = v85;
        uint64_t v34 = v28;
        if (v85 != v28)
        {
          do
          {
            uint64_t v35 = (void *)*((void *)v33 - 3);
            if (v35)
            {
              *((void *)v33 - 2) = v35;
              operator delete(v35);
            }
            v33 -= 32;
          }
          while (v33 != v28);
          uint64_t v34 = __p;
        }
        long long v85 = v28;
        operator delete(v34);
      }
      uint64_t v36 = operator new(1uLL);
      uint64_t v78 = v36;
      unsigned char *v36 = v26;
      uint64_t v79 = v36 + 1;
      long long v80 = v36 + 1;
      sub_670838(&v81, v20, (uint64_t)&v78);
      sub_6845C4(v12, (uint64_t)&v81);
      unsigned int v37 = (char *)v81;
      if (v81)
      {
        unsigned int v38 = v82;
        uint64_t v39 = v81;
        if (v82 != v81)
        {
          uint64_t v40 = v82;
          do
          {
            unsigned __int8 v42 = (void *)*((void *)v40 - 3);
            v40 -= 24;
            uint64_t v41 = v42;
            if (v42)
            {
              *((void *)v38 - 2) = v41;
              operator delete(v41);
            }
            unsigned int v38 = v40;
          }
          while (v40 != v37);
          uint64_t v39 = v81;
        }
        uint64_t v82 = v37;
        operator delete(v39);
      }
      if (v78)
      {
        uint64_t v79 = v78;
        operator delete(v78);
      }
      if (v15 != v16) {
        goto LABEL_55;
      }
    }
    unsigned __int8 v27 = 0;
LABEL_97:
    sub_684088(v12, v20, v11 == 0);
    sub_684088(v12, v27, v11 == 1);
    uint64_t v66 = v88;
    if (v88 && !atomic_fetch_add(&v88->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
      std::__shared_weak_count::__release_weak(v66);
    }
    uint64_t v15 = (uint64_t)v90;
  }
  if (v15)
  {
    uint64_t v67 = v91;
    uint64_t v68 = (void *)v15;
    if (v91 != v15)
    {
      do
      {
        uint64_t v69 = *(void **)(v67 - 24);
        if (v69)
        {
          *(void *)(v67 - 16) = v69;
          operator delete(v69);
        }
        v67 -= 32;
      }
      while (v67 != v15);
      uint64_t v68 = v90;
    }
    uint64_t v91 = v15;
    operator delete(v68);
  }
  uint64_t v70 = (uint64_t)v94;
  if (v94)
  {
    uint64_t v71 = v95;
    int v72 = v94;
    if ((void *)v95 != v94)
    {
      do
      {
        double v73 = *(void **)(v71 - 24);
        if (v73)
        {
          *(void *)(v71 - 16) = v73;
          operator delete(v73);
        }
        v71 -= 32;
      }
      while (v71 != v70);
      int v72 = v94;
    }
    uint64_t v95 = v70;
    operator delete(v72);
  }
}

void sub_6681D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  sub_36094(&a22);
  if (__p) {
    operator delete(__p);
  }
  sub_14A84((uint64_t)&a32);
  sub_53F1AC(v32 - 184);
  sub_53F1AC(v32 - 136);
  _Unwind_Resume(a1);
}

void sub_66827C(_Unwind_Exception *a1)
{
  sub_53F1AC(v1 - 136);
  _Unwind_Resume(a1);
}

uint64_t sub_6684A0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v10 = *(void *)(a4 + 32);
  unsigned int v11 = sub_53EF50(*(void *)a1, v10);
  uint64_t v12 = *(void *)(a3 + 64);
  uint64_t v13 = sub_577CC8((void *)(a3 + 1808), a5 - *(void *)(a3 + 40));
  unint64_t v14 = sub_46C760(a2);
  uint64_t v15 = v10;
  if (v14 - 1 > a5) {
    uint64_t v15 = *(void *)(sub_46C8EC(a2, a5 + 1) + 32);
  }
  int v16 = sub_53EF50(*(void *)a1, v15);
  uint64_t v17 = (char *)(a3 + 329);
  if (!*(unsigned char *)(a3 + 330)) {
    uint64_t v17 = (char *)a2 + 1057;
  }
  if (*(void *)(a3 + 64) < a5) {
    return 0;
  }
  int v19 = v16;
  char v20 = *v17;
  if (v12 != a5
    || sub_6861D0(v13)
    || (unsigned int v21 = *(_DWORD *)(a3 + 160), v21 - 82 < 3)
    || (uint64_t v18 = 1, v21 <= 0x27) && ((1 << v21) & 0x8600050000) != 0)
  {
    sub_53F9B8(*(void *)a1, v10, 0, (void **)(a1 + 6096));
    if ((sub_684624(v13) & 1) != 0 || (sub_684630(v13) & 1) != 0 || *(void *)(a1 + 6096) != *(void *)(a1 + 6104)) {
      goto LABEL_36;
    }
    sub_6A48E0(a1 + 8, a4, 0, (uint64_t **)__p);
    for (uint64_t i = *(void *)__p[0]; i != *((void *)__p[0] + 1); i += 192)
    {
      if (*(unsigned char *)(i + 185)) {
        BOOL v23 = *(unsigned char *)(i + 187) == 0;
      }
      else {
        BOOL v23 = 0;
      }
      if (v23)
      {
        int v24 = *(_DWORD *)(i + 24);
        if (v24 != 3 && v24 != 0)
        {
          int v26 = 0;
          goto LABEL_29;
        }
      }
    }
    int v26 = 1;
LABEL_29:
    unsigned __int8 v27 = (std::__shared_weak_count *)__p[1];
    if (__p[1] && !atomic_fetch_add((atomic_ullong *volatile)__p[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
    int v28 = v11 == v19 ? v26 : 0;
    if (v28 == 1)
    {
LABEL_36:
      char v77 = v20;
      uint64_t v78 = a4;
      *(_OWORD *)long long __p = 0u;
      long long v81 = 0u;
      int v82 = 1065353216;
      uint64_t v29 = *(void *)(a1 + 6096);
      uint64_t v30 = *(void *)(a1 + 6104);
      if (v29 != v30)
      {
        if ((v10 & 0xFF000000000000) != 0)
        {
          do
          {
            uint64_t v32 = *(unsigned __int8 **)(v29 + 16);
            for (j = *(unsigned __int8 **)(v29 + 24); v32 != j; v32 += 32)
            {
              unsigned int v33 = *v32;
              unsigned __int8 v79 = *v32;
              uint64_t v34 = *(void *)a1;
              uint64_t v35 = (int *)sub_2D5D58(*(void *)a1, v10 & 0xFFFFFFFFFFFFLL);
              uint64_t v36 = (unsigned __int16 *)((char *)v35 - *v35);
              if (*v36 >= 0x29u)
              {
                uint64_t v37 = v36[20];
                if (v37)
                {
                  if (*(int *)((char *)v35 + v37 + *(unsigned int *)((char *)v35 + v37)) > v33)
                  {
                    unsigned int v38 = (int *)sub_53F764(v34, v10, v33);
                    uint64_t v39 = (unsigned __int16 *)((char *)v38 - *v38);
                    if (*v39 >= 5u)
                    {
                      uint64_t v40 = v39[2];
                      if (v40)
                      {
                        if ((*((unsigned char *)v38 + v40) & 4) != 0) {
                          continue;
                        }
                      }
                    }
                  }
                }
              }
              sub_597118((uint64_t)__p, &v79, &v79);
            }
            v29 += 48;
          }
          while (v29 != v30);
        }
        else
        {
          do
          {
            unsigned __int8 v42 = *(unsigned __int8 **)(v29 + 16);
            for (k = *(unsigned __int8 **)(v29 + 24); v42 != k; v42 += 32)
            {
              unsigned int v43 = *v42;
              unsigned __int8 v79 = *v42;
              uint64_t v44 = *(void *)a1;
              uint64_t v45 = (int *)sub_2D5D58(*(void *)a1, v10 & 0xFFFFFFFFFFFFLL);
              uint64_t v46 = (unsigned __int16 *)((char *)v45 - *v45);
              if (*v46 >= 0x27u)
              {
                uint64_t v47 = v46[19];
                if (v47)
                {
                  if (*(int *)((char *)v45 + v47 + *(unsigned int *)((char *)v45 + v47)) > v43)
                  {
                    uint64_t v48 = (int *)sub_53F764(v44, v10, v43);
                    unsigned int v49 = (unsigned __int16 *)((char *)v48 - *v48);
                    if (*v49 >= 5u)
                    {
                      uint64_t v50 = v49[2];
                      if (v50)
                      {
                        if ((*((unsigned char *)v48 + v50) & 4) != 0) {
                          continue;
                        }
                      }
                    }
                  }
                }
              }
              sub_597118((uint64_t)__p, &v79, &v79);
            }
            v29 += 48;
          }
          while (v29 != v30);
        }
      }
      if (v11)
      {
        char v51 = 0;
        uint64_t v52 = 0;
        unsigned __int8 v53 = 0;
        uint64_t v54 = v78;
        char v55 = v77;
        unsigned int v56 = (uint64_t *)(a1 + 6096);
        do
        {
          if (*((void *)&v81 + 1) + v52 >= (unint64_t)v11) {
            break;
          }
          if (__p[1])
          {
            uint8x8_t v57 = (uint8x8_t)vcnt_s8((int8x8_t)__p[1]);
            v57.i16[0] = vaddlv_u8(v57);
            if (v57.u32[0] > 1uLL)
            {
              unint64_t v58 = v53;
              if (__p[1] <= (void *)v53) {
                unint64_t v58 = v53 % (unint64_t)__p[1];
              }
            }
            else
            {
              unint64_t v58 = (LODWORD(__p[1]) - 1) & v53;
            }
            uint64_t v59 = (uint64_t ***)*((void *)__p[0] + v58);
            if (v59)
            {
              int v60 = *v59;
              if (v60)
              {
                if (v57.u32[0] < 2uLL)
                {
                  while (1)
                  {
                    unsigned __int8 v62 = v60[1];
                    if (v62 == (uint64_t *)v53)
                    {
                      if (*((unsigned __int8 *)v60 + 16) == v53) {
                        goto LABEL_89;
                      }
                    }
                    else if (((unint64_t)v62 & ((unint64_t)__p[1] - 1)) != v58)
                    {
                      goto LABEL_85;
                    }
                    int v60 = (uint64_t **)*v60;
                    if (!v60) {
                      goto LABEL_85;
                    }
                  }
                }
                do
                {
                  unint64_t v61 = (unint64_t)v60[1];
                  if (v61 == v53)
                  {
                    if (*((unsigned __int8 *)v60 + 16) == v53) {
                      goto LABEL_89;
                    }
                  }
                  else
                  {
                    if ((void *)v61 >= __p[1]) {
                      v61 %= (unint64_t)__p[1];
                    }
                    if (v61 != v58) {
                      break;
                    }
                  }
                  int v60 = (uint64_t **)*v60;
                }
                while (v60);
              }
            }
          }
LABEL_85:
          if ((v51 & 1) == 0 && !sub_66B84C((uint64_t *)a1, v78, v77 != 1, (uint64_t *)(a1 + 6096))) {
            break;
          }
          ++v52;
          ++v53;
          char v51 = 1;
        }
        while (v11 > v53);
      }
      else
      {
        uint64_t v52 = 0;
        uint64_t v54 = v78;
        char v55 = v77;
        unsigned int v56 = (uint64_t *)(a1 + 6096);
      }
LABEL_89:
      if (v11) {
        unsigned int v63 = v11 - 1;
      }
      else {
        unsigned int v63 = 0;
      }
      if ((_BYTE)v63)
      {
        char v64 = 0;
        unint64_t v65 = v63;
        do
        {
          if (*((void *)&v81 + 1) + v52 >= (unint64_t)v11) {
            break;
          }
          if (__p[1])
          {
            uint8x8_t v66 = (uint8x8_t)vcnt_s8((int8x8_t)__p[1]);
            v66.i16[0] = vaddlv_u8(v66);
            if (v66.u32[0] > 1uLL)
            {
              unint64_t v67 = v65;
              if (__p[1] <= (void *)v65) {
                unint64_t v67 = v65 % (unint64_t)__p[1];
              }
            }
            else
            {
              unint64_t v67 = ((unint64_t)__p[1] + 255) & v65;
            }
            uint64_t v68 = (uint64_t ***)*((void *)__p[0] + v67);
            if (v68)
            {
              uint64_t v69 = *v68;
              if (v69)
              {
                if (v66.u32[0] < 2uLL)
                {
                  while (1)
                  {
                    unint64_t v71 = (unint64_t)v69[1];
                    if (v71 == v65)
                    {
                      if (v65 == *((unsigned __int8 *)v69 + 16)) {
                        goto LABEL_118;
                      }
                    }
                    else if ((v71 & ((unint64_t)__p[1] - 1)) != v67)
                    {
                      goto LABEL_116;
                    }
                    uint64_t v69 = (uint64_t **)*v69;
                    if (!v69) {
                      goto LABEL_116;
                    }
                  }
                }
                do
                {
                  unint64_t v70 = (unint64_t)v69[1];
                  if (v70 == v65)
                  {
                    if (v65 == *((unsigned __int8 *)v69 + 16)) {
                      goto LABEL_118;
                    }
                  }
                  else
                  {
                    if ((void *)v70 >= __p[1]) {
                      v70 %= (unint64_t)__p[1];
                    }
                    if (v70 != v67) {
                      break;
                    }
                  }
                  uint64_t v69 = (uint64_t **)*v69;
                }
                while (v69);
              }
            }
          }
LABEL_116:
          if ((v64 & 1) == 0 && !sub_66B84C((uint64_t *)a1, v54, v55 == 1, v56)) {
            break;
          }
          ++v52;
          --v63;
          --v65;
          char v64 = 1;
        }
        while ((_BYTE)v63);
      }
LABEL_118:
      int v72 = (void *)v81;
      if (*((void *)&v81 + 1)) {
        BOOL v73 = *((void *)&v81 + 1) + v52 == v11;
      }
      else {
        BOOL v73 = 1;
      }
      uint64_t v18 = !v73;
      if ((void)v81)
      {
        do
        {
          uint64_t v74 = (void *)*v72;
          operator delete(v72);
          int v72 = v74;
        }
        while (v74);
      }
      uint64_t v75 = __p[0];
      __p[0] = 0;
      if (v75) {
        operator delete(v75);
      }
    }
    else
    {
      return 1;
    }
  }
  return v18;
}

void sub_668B38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_12168((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_668B4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_12168((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_668B60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_12168((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_668B74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_12168((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_668B88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 1808) != *(void *)(a3 + 1816))
  {
    unsigned int v4 = *(_DWORD *)(a3 + 160);
    BOOL v5 = v4 - 25 > 0x3F || ((1 << (v4 - 25)) & 0x9000000000000001) == 0;
    BOOL v6 = !v5 || v4 == 17;
    if (!v6 && v4 - 82 >= 3 && (v4 > 0x27 || ((1 << v4) & 0x8600050000) == 0))
    {
      uint64_t v36 = (void *)(a3 + 1808);
      uint64_t v9 = sub_6672BC((void *)(a3 + 1808), *(void *)(a3 + 64) - *(void *)(a3 + 40));
      if (sub_6861D0(v9))
      {
        int v11 = *(unsigned __int8 *)(a3 + 330);
        int v12 = *(unsigned __int8 *)(a2 + 1057);
        int v13 = *(unsigned __int8 *)(a3 + 329);
        uint64_t v14 = sub_46CCC8((void *)a2, *(void *)(a3 + 64), v10);
        uint64_t v15 = *(void *)(a3 + 64);
        int v16 = v15 - 1;
        int v17 = *(_DWORD *)(a3 + 40);
        if (v17 - 1 < (int)v15 - 1) {
          int v16 = v17 - 1;
        }
        if ((int)v15 > v17)
        {
          uint64_t v18 = v14;
          if (v11) {
            int v19 = v13;
          }
          else {
            int v19 = v12;
          }
          int v34 = v19;
          unint64_t v20 = (int)v15 - 1;
          int v21 = v16 - v15 + 1;
          do
          {
            uint64_t v24 = sub_6672BC(v36, v20 - *(void *)(a3 + 40));
            if (v18 >= *(void *)(*(void *)(a1 + 6016) + 1464)) {
              return;
            }
            uint64_t v26 = v24;
            uint64_t v27 = sub_46CCC8((void *)a2, v20, v25);
            if ((sub_684624(v26) & 1) == 0 && !sub_684630(v26) || sub_682244(v26))
            {
              int v28 = (void *)sub_6845BC(v26);
              unsigned __int8 v35 = sub_66DADC(0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v28[1] - *v28) >> 3));
              uint64_t v29 = (void *)sub_64790C(v26);
              unsigned __int8 v30 = sub_66DADC(0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v29[1] - *v29) >> 3));
              if (v35 && (unsigned int v31 = (void *)sub_6845BC(v9), *v31 == v31[1]))
              {
                uint64_t v22 = sub_6845BC(v26);
                sub_6845C4(v9, v22);
              }
              else
              {
                if (!v30) {
                  goto LABEL_24;
                }
                uint64_t v32 = (void *)sub_64790C(v9);
                if (*v32 != v32[1]) {
                  goto LABEL_24;
                }
                uint64_t v33 = sub_64790C(v26);
                sub_6845F4(v9, v33);
              }
              sub_684088(v9, v35, v34 == 0);
              sub_684088(v9, v30, v34 == 1);
            }
LABEL_24:
            v18 += v27;
            --v20;
          }
          while (!__CFADD__(v21++, 1));
        }
      }
    }
  }
}

void sub_668E28(uint64_t a1, void *a2, uint64_t a3)
{
  if (*(void *)(a3 + 1808) != *(void *)(a3 + 1816))
  {
    uint64_t v6 = sub_6672BC((void *)(a3 + 1808), *(void *)(a3 + 64) - *(void *)(a3 + 40));
    if (sub_6861D0(v6))
    {
      unsigned int v7 = *(_DWORD *)(a3 + 160);
      BOOL v8 = v7 - 25 > 0x3F || ((1 << (v7 - 25)) & 0x9000000000000001) == 0;
      BOOL v9 = !v8 || v7 == 17;
      if (!v9
        && v7 - 82 >= 3
        && (v7 > 0x27 || ((1 << v7) & 0x8600050000) == 0)
        && !sub_68459C(v6)
        && !sub_6845A4(v6))
      {
        double v10 = (void *)sub_6845BC(v6);
        if (*v10 == v10[1])
        {
          int v11 = (void *)sub_64790C(v6);
          if (*v11 == v11[1])
          {
            if (sub_8CA498(a1 + 6040, (uint64_t)a2, a3))
            {
              sub_66CCC8(a1, a2, (void *)a3);
            }
            else if (sub_8CA9E4((void *)(a1 + 6040), a2, a3))
            {
              sub_66CEE8(a1, a2, (void *)a3);
            }
            else if (sub_8CA744(a1 + 6040, (uint64_t)a2, a3))
            {
              sub_66D200(a1, a2, (void *)a3);
            }
          }
        }
      }
    }
  }
}

void sub_668FF4(uint64_t *a1, int **a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v186 = (uint64_t)a2[4];
  double v10 = (unsigned __int16 *)((char *)*a2 - **a2);
  if (*v10 >= 0xBu && (uint64_t v11 = v10[5]) != 0)
  {
    int v198 = *((unsigned __int8 *)*a2 + v11 + 1) >> 7;
    if (!sub_64F1E8((uint64_t)a4)) {
      goto LABEL_10;
    }
  }
  else
  {
    int v198 = 0;
    if (!sub_64F1E8((uint64_t)a4))
    {
LABEL_10:
      int v190 = 0;
      goto LABEL_11;
    }
  }
  unint64_t v12 = *(void *)(a5 + 72);
  if (v12 >= sub_46C760(a4)) {
    goto LABEL_10;
  }
  unint64_t v13 = *(void *)(sub_46C8EC(a4, *(void *)(a5 + 64)) + 32);
  uint64_t v14 = v13 & 0xFFFFFFFFFFFFLL;
  int v15 = ((v186 & 0xFF000000000000) == 0) ^ HIWORD(v13) & 1;
  if ((v186 & 0xFFFFFFFFFFFFLL) != v14) {
    int v15 = 0;
  }
  int v190 = v15;
LABEL_11:
  int v206 = 0;
  uint64_t v207 = 0;
  unint64_t v208 = 0;
  v203 = 0;
  v204 = 0;
  uint64_t v205 = 0;
  unsigned __int8 v16 = sub_682244((uint64_t)a3);
  v184 = a4;
  uint64_t v185 = a5;
  if (v16)
  {
    uint64_t v17 = 0;
    int v18 = 0;
    uint64_t v19 = v16;
    do
    {
      if (sub_684790((uint64_t)a3))
      {
        unint64_t v20 = sub_6838A0((uint64_t)a3, v17);
        if (*v20 != v20[1]) {
          v18 |= 1 << v17;
        }
      }
      ++v17;
    }
    while (v19 != v17);
  }
  else
  {
    int v18 = 0;
  }
  char v193 = a1;
  sub_6A48E0((uint64_t)(a1 + 1), (uint64_t)a2, 0, &v201);
  int v21 = v201;
  unint64_t v22 = 0xAAAAAAAAAAAAAAABLL * ((v21[1] - *v21) >> 6);
  BOOL v23 = (char *)v203;
  int v194 = v18;
  if (v22 > (v205 - (char *)v203) >> 2)
  {
    if (v22 >> 62) {
      sub_2E00();
    }
    uint64_t v24 = v204;
    double v25 = (char *)operator new(0xAAAAAAAAAAAAAAACLL * ((v201[1] - *v201) >> 6));
    uint64_t v26 = v24 - v23;
    uint64_t v27 = &v25[(v24 - v23) & 0xFFFFFFFFFFFFFFFCLL];
    int v28 = v27;
    if (v24 == v23) {
      goto LABEL_28;
    }
    if ((unint64_t)(v26 - 4) >= 0x2C)
    {
      int v28 = &v25[(v24 - v23) & 0xFFFFFFFFFFFFFFFCLL];
      if ((unint64_t)(&v24[-(v26 & 0xFFFFFFFFFFFFFFFCLL)] - v25) >= 0x20)
      {
        uint64_t v29 = v26 >> 2;
        unint64_t v30 = ((unint64_t)(v26 - 4) >> 2) + 1;
        uint64_t v31 = 4 * (v30 & 0x7FFFFFFFFFFFFFF8);
        uint64_t v32 = &v24[-v31];
        int v28 = &v27[-v31];
        uint64_t v33 = &v25[4 * v29 - 16];
        int v34 = v24 - 16;
        uint64_t v35 = v30 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          long long v36 = *(_OWORD *)v34;
          *((_OWORD *)v33 - 1) = *((_OWORD *)v34 - 1);
          *(_OWORD *)uint64_t v33 = v36;
          v33 -= 32;
          v34 -= 32;
          v35 -= 8;
        }
        while (v35);
        uint64_t v24 = v32;
        if (v30 == (v30 & 0x7FFFFFFFFFFFFFF8))
        {
LABEL_28:
          v203 = (int *)v28;
          v204 = v27;
          uint64_t v205 = &v25[4 * v22];
          if (v23)
          {
            operator delete(v23);
            int v21 = v201;
          }
          goto LABEL_30;
        }
      }
    }
    else
    {
      int v28 = &v25[(v24 - v23) & 0xFFFFFFFFFFFFFFFCLL];
    }
    do
    {
      int v37 = *((_DWORD *)v24 - 1);
      v24 -= 4;
      *((_DWORD *)v28 - 1) = v37;
      v28 -= 4;
    }
    while (v24 != v23);
    goto LABEL_28;
  }
LABEL_30:
  uint64_t v38 = *v21;
  uint64_t v39 = v21[1];
  uint64_t v197 = a3;
  uint64_t v40 = v193;
  if (v38 != v39)
  {
    while (1)
    {
      if (!*(unsigned char *)(v38 + 185)) {
        goto LABEL_34;
      }
      int v42 = 1;
      switch(*(_DWORD *)(v38 + 24))
      {
        case 1:
        case 0x14:
        case 0x1B:
        case 0x1D:
        case 0x3C:
        case 0x3E:
        case 0x41:
          goto LABEL_37;
        case 2:
        case 0x15:
        case 0x1C:
        case 0x1E:
        case 0x3D:
        case 0x3F:
        case 0x42:
          goto LABEL_40;
        case 4:
          int v42 = 4;
          break;
        case 0xB:
          if (v198) {
LABEL_37:
          }
            int v42 = 2;
          else {
LABEL_40:
          }
            int v42 = 3;
          break;
        default:
          break;
      }
      unsigned int v43 = v204;
      if (v204 >= v205) {
        break;
      }
      *(_DWORD *)v204 = v42;
      uint64_t v41 = (uint64_t)(v43 + 4);
LABEL_33:
      a3 = v197;
      v204 = (char *)v41;
LABEL_34:
      v38 += 192;
      if (v38 == v39) {
        goto LABEL_62;
      }
    }
    uint64_t v44 = v203;
    uint64_t v45 = (v204 - (char *)v203) >> 2;
    unint64_t v46 = v45 + 1;
    if ((unint64_t)(v45 + 1) >> 62) {
      sub_2E00();
    }
    uint64_t v47 = v205 - (char *)v203;
    if ((v205 - (char *)v203) >> 1 > v46) {
      unint64_t v46 = v47 >> 1;
    }
    if ((unint64_t)v47 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v48 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v48 = v46;
    }
    if (v48)
    {
      if (v48 >> 62) {
        sub_188D718();
      }
      unsigned int v49 = operator new(4 * v48);
      uint64_t v50 = (int *)&v49[4 * v45];
      *uint64_t v50 = v42;
      uint64_t v41 = (uint64_t)(v50 + 1);
      if (v43 != (char *)v44)
      {
LABEL_51:
        unint64_t v51 = v43 - 4 - (char *)v44;
        if (v51 >= 0x2C)
        {
          uint64_t v40 = v193;
          if ((unint64_t)((char *)v44 - v49) >= 0x20)
          {
            uint64_t v52 = (v51 >> 2) + 1;
            uint64_t v53 = 4 * (v52 & 0x7FFFFFFFFFFFFFF8);
            uint64_t v54 = &v43[-v53];
            uint64_t v50 = (int *)((char *)v50 - v53);
            char v55 = &v49[4 * v45 - 16];
            unsigned int v56 = v43 - 16;
            uint64_t v57 = v52 & 0x7FFFFFFFFFFFFFF8;
            do
            {
              long long v58 = *(_OWORD *)v56;
              *(v55 - 1) = *((_OWORD *)v56 - 1);
              _OWORD *v55 = v58;
              v55 -= 2;
              v56 -= 32;
              v57 -= 8;
            }
            while (v57);
            unsigned int v43 = v54;
            if (v52 == (v52 & 0x7FFFFFFFFFFFFFF8))
            {
LABEL_60:
              v203 = v50;
              v204 = (char *)v41;
              uint64_t v205 = &v49[4 * v48];
              if (v44) {
                operator delete(v44);
              }
              goto LABEL_33;
            }
          }
        }
        else
        {
          uint64_t v40 = v193;
        }
        do
        {
          int v59 = *((_DWORD *)v43 - 1);
          v43 -= 4;
          *--uint64_t v50 = v59;
        }
        while (v43 != (char *)v44);
        goto LABEL_60;
      }
    }
    else
    {
      unsigned int v49 = 0;
      uint64_t v50 = (int *)(4 * v45);
      *(_DWORD *)(4 * v45) = v42;
      uint64_t v41 = 4 * v45 + 4;
      if (v43 != (char *)v44) {
        goto LABEL_51;
      }
    }
    uint64_t v40 = v193;
    goto LABEL_60;
  }
LABEL_62:
  if (v190)
  {
    int v60 = 1;
    switch(*(_DWORD *)(v185 + 160))
    {
      case 1:
      case 0x14:
      case 0x1B:
      case 0x1D:
      case 0x3C:
      case 0x3E:
      case 0x41:
        goto LABEL_64;
      case 2:
      case 0x15:
      case 0x1C:
      case 0x1E:
      case 0x3D:
      case 0x3F:
      case 0x42:
        goto LABEL_70;
      case 4:
        int v60 = 4;
        goto LABEL_67;
      case 0xB:
        if (v198)
        {
LABEL_64:
          int v60 = 2;
          unsigned __int8 v62 = (int *)v204;
          unint64_t v61 = v205;
          if (v204 >= v205) {
            goto LABEL_71;
          }
        }
        else
        {
LABEL_70:
          int v60 = 3;
          unsigned __int8 v62 = (int *)v204;
          unint64_t v61 = v205;
          if (v204 >= v205)
          {
LABEL_71:
            char v64 = v203;
            uint64_t v65 = v62 - v203;
            unint64_t v66 = v65 + 1;
            if ((unint64_t)(v65 + 1) >> 62) {
              sub_2E00();
            }
            uint64_t v67 = v61 - (char *)v203;
            if (v67 >> 1 > v66) {
              unint64_t v66 = v67 >> 1;
            }
            if ((unint64_t)v67 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v68 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v68 = v66;
            }
            if (v68)
            {
              if (v68 >> 62) {
                sub_188D718();
              }
              uint64_t v69 = operator new(4 * v68);
              unint64_t v70 = (int *)&v69[4 * v65];
              unint64_t v71 = &v69[4 * v68];
              *unint64_t v70 = v60;
              uint64_t v63 = (uint64_t)(v70 + 1);
              int64_t v72 = (char *)v62 - (char *)v64;
              if (v62 != v64)
              {
LABEL_80:
                unint64_t v73 = v72 - 4;
                uint64_t v40 = v193;
                if (v73 < 0x2C) {
                  goto LABEL_287;
                }
                if ((unint64_t)((char *)v64 - v69) < 0x20) {
                  goto LABEL_287;
                }
                uint64_t v74 = (v73 >> 2) + 1;
                uint64_t v75 = 4 * (v74 & 0x7FFFFFFFFFFFFFF8);
                uint64_t v76 = &v62[v75 / 0xFFFFFFFFFFFFFFFCLL];
                unint64_t v70 = (int *)((char *)v70 - v75);
                char v77 = &v69[4 * v65 - 16];
                uint64_t v78 = v62 - 4;
                uint64_t v79 = v74 & 0x7FFFFFFFFFFFFFF8;
                do
                {
                  long long v80 = *(_OWORD *)v78;
                  *(v77 - 1) = *((_OWORD *)v78 - 1);
                  *char v77 = v80;
                  v77 -= 2;
                  v78 -= 8;
                  v79 -= 8;
                }
                while (v79);
                unsigned __int8 v62 = v76;
                if (v74 != (v74 & 0x7FFFFFFFFFFFFFF8))
                {
LABEL_287:
                  do
                  {
                    int v81 = *--v62;
                    *--unint64_t v70 = v81;
                  }
                  while (v62 != v64);
                }
                v203 = v70;
                v204 = (char *)v63;
                uint64_t v205 = v71;
                if (!v64) {
                  goto LABEL_88;
                }
LABEL_87:
                operator delete(v64);
LABEL_88:
                v204 = (char *)v63;
                break;
              }
            }
            else
            {
              uint64_t v69 = 0;
              unint64_t v70 = (int *)(4 * v65);
              unint64_t v71 = 0;
              *(_DWORD *)(4 * v65) = v60;
              uint64_t v63 = 4 * v65 + 4;
              int64_t v72 = (char *)v62 - (char *)v64;
              if (v62 != v64) {
                goto LABEL_80;
              }
            }
            uint64_t v40 = v193;
            v203 = v70;
            v204 = (char *)v63;
            uint64_t v205 = v71;
            if (!v64) {
              goto LABEL_88;
            }
            goto LABEL_87;
          }
        }
LABEL_68:
        int *v62 = v60;
        uint64_t v63 = (uint64_t)(v62 + 1);
        uint64_t v40 = v193;
        goto LABEL_88;
      default:
LABEL_67:
        unsigned __int8 v62 = (int *)v204;
        unint64_t v61 = v205;
        if (v204 < v205) {
          goto LABEL_68;
        }
        goto LABEL_71;
    }
  }
  sub_53F9B8(*v40, v186, 0, (void **)v40 + 762);
  int v82 = v194;
  long long v83 = v193;
  uint64_t v84 = v193[762];
  uint64_t v85 = v193[763];
  if (v84 != v85)
  {
    long long __p = 0;
    uint64_t v195 = 0;
    __int16 v86 = 0;
    int v191 = 0;
    uint64_t v183 = v193[763];
    if (v198) {
      char v87 = 1;
    }
    else {
      char v87 = 2;
    }
    char v182 = v87;
    v187 = (void **)(v193 + 765);
    while (1)
    {
      unint64_t v88 = *(void *)v84;
      int v89 = v190;
      if (!v190)
      {
        uint64_t v90 = *v201;
        uint64_t v91 = v201[1];
        if (*v201 != v91) {
          goto LABEL_108;
        }
        goto LABEL_117;
      }
      unint64_t v92 = *(void *)(sub_46C8EC(v184, *(void *)(v185 + 72)) + 32);
      if (*(_DWORD *)v84 != v92) {
        break;
      }
      if (*(unsigned __int16 *)(v84 + 4) == WORD2(v92))
      {
        int v89 = HIWORD(v92) & 1 ^ (*(unsigned char *)(v84 + 6) == 0);
        uint64_t v90 = *v201;
        uint64_t v91 = v201[1];
        if (*v201 != v91) {
          goto LABEL_108;
        }
        goto LABEL_117;
      }
      int v89 = 0;
      uint64_t v90 = *v201;
      uint64_t v91 = v201[1];
      if (*v201 == v91) {
        goto LABEL_117;
      }
      do
      {
LABEL_108:
        uint64_t v93 = *(void *)v90;
        uint64_t v94 = *(void *)(v90 + 8);
        BOOL v95 = *(void *)v90 == v94 || *(unsigned char *)(v90 + 185) == 0;
        if (!v95)
        {
          while (__PAIR64__(*(unsigned __int16 *)(v93 + 4), *(_DWORD *)v93) != __PAIR64__(WORD2(v88), v88)
               || (HIWORD(v88) & 1) == (*(unsigned char *)(v93 + 6) == 0))
          {
            v93 += 8;
            if (v93 == v94) {
              goto LABEL_107;
            }
          }
          goto LABEL_117;
        }
LABEL_107:
        v90 += 192;
      }
      while (v90 != v91);
      uint64_t v90 = v91;
      if (v89) {
        goto LABEL_121;
      }
LABEL_95:
      v84 += 48;
      if (v84 == v85)
      {
        unint64_t v163 = v186 & 0xFFFFFFFFFFFFLL;
        goto LABEL_232;
      }
    }
    int v89 = 0;
    uint64_t v90 = *v201;
    uint64_t v91 = v201[1];
    if (*v201 != v91) {
      goto LABEL_108;
    }
LABEL_117:
    if (v90 == v91) {
      char v96 = v89;
    }
    else {
      char v96 = 1;
    }
    if ((v96 & 1) == 0) {
      goto LABEL_95;
    }
LABEL_121:
    uint64_t v97 = (int *)(v90 + 24);
    BOOL v95 = v89 == 0;
    uint64_t v98 = (int *)(v185 + 160);
    if (v95) {
      uint64_t v98 = v97;
    }
    int v196 = *v98;
    int v99 = *v98 - 1;
    char v100 = 1;
    switch(v99)
    {
      case 0:
      case 26:
        char v100 = 3;
        break;
      case 1:
      case 27:
        char v100 = 4;
        break;
      case 3:
        char v100 = 13;
        break;
      case 10:
        char v100 = v182;
        break;
      case 19:
      case 28:
      case 61:
      case 64:
        break;
      case 20:
      case 29:
      case 62:
      case 65:
        char v100 = 2;
        break;
      case 59:
        char v100 = 5;
        break;
      case 60:
        char v100 = 6;
        break;
      default:
        char v100 = 12;
        break;
    }
    unsigned __int8 v200 = v100;
    uint64_t v102 = *(unsigned __int8 **)(v84 + 16);
    unint64_t v101 = *(unsigned __int8 **)(v84 + 24);
    uint64_t v189 = v84;
    for (uint64_t i = v101; ; v101 = i)
    {
      if (v102 == v101)
      {
        uint64_t v84 = v189;
        uint64_t v85 = v183;
        goto LABEL_95;
      }
      unsigned __int8 v104 = sub_683624(a3, *v102);
      if (v104 == 0xFF || ((1 << v104) & v82) != 0) {
        goto LABEL_138;
      }
      if (v196 != 3 && v196) {
        goto LABEL_200;
      }
      unsigned int v106 = *v102;
      uint64_t v107 = *v83;
      v83[766] = v83[765];
      size_t v108 = (int *)sub_2D5D58(v107, v186 & 0xFFFFFFFFFFFFLL);
      int v109 = (unsigned __int16 *)((char *)v108 - *v108);
      unsigned int v110 = *v109;
      if ((v186 & 0xFF000000000000) != 0)
      {
        if (v110 >= 0x29)
        {
          unsigned int v111 = v109[20];
          if (v111) {
            goto LABEL_153;
          }
        }
      }
      else if (v110 >= 0x27)
      {
        unsigned int v111 = v109[19];
        if (v111)
        {
LABEL_153:
          if (*(int *)((char *)v108 + v111 + *(int *)((char *)v108 + v111)) <= v106) {
            goto LABEL_194;
          }
          v112 = (int *)sub_53F764(v107, v186, v106);
          v113 = (unsigned __int16 *)((char *)v112 - *v112);
          if (*v113 < 0xBu) {
            goto LABEL_194;
          }
          uint64_t v114 = v113[5];
          if (!v114) {
            goto LABEL_194;
          }
          v115 = (unsigned int *)((char *)v112 + v114);
          uint64_t v116 = *v115;
          int v118 = (char *)v115 + v116 + 4;
          uint64_t v117 = *(unsigned int *)((char *)v115 + v116);
          if (!v117) {
            goto LABEL_194;
          }
          size_t v119 = &v118[v117];
          unint64_t v120 = (unsigned char *)v83[766];
          uint64_t v188 = &v118[v117];
          while (2)
          {
            char v122 = *v118;
            unint64_t v123 = v83[767];
            if ((unint64_t)v120 < v123)
            {
              *unint64_t v120 = v122;
              uint64_t v121 = (uint64_t)(v120 + 1);
              a3 = v197;
              goto LABEL_159;
            }
            uint64_t v124 = *v187;
            unint64_t v125 = v120 - (unsigned char *)*v187;
            unint64_t v126 = v125 + 1;
            if ((uint64_t)(v125 + 1) < 0) {
              sub_2E00();
            }
            unint64_t v127 = v123 - (void)v124;
            if (2 * v127 > v126) {
              unint64_t v126 = 2 * v127;
            }
            if (v127 >= 0x3FFFFFFFFFFFFFFFLL) {
              size_t v128 = 0x7FFFFFFFFFFFFFFFLL;
            }
            else {
              size_t v128 = v126;
            }
            if (v128)
            {
              size_t v129 = v128;
              size_t v130 = (char *)operator new(v128);
              size_t v128 = v129;
              unint64_t v131 = &v130[v125];
              v130[v125] = v122;
              uint64_t v121 = (uint64_t)&v130[v125 + 1];
              if (v120 != v124) {
                goto LABEL_169;
              }
LABEL_172:
              a3 = v197;
LABEL_173:
              size_t v119 = v188;
              v193[765] = (uint64_t)v131;
              v193[766] = v121;
              v193[767] = (uint64_t)&v130[v128];
              if (!v124)
              {
LABEL_159:
                v193[766] = v121;
                ++v118;
                unint64_t v120 = (unsigned char *)v121;
                long long v83 = v193;
                if (v118 == v119) {
                  goto LABEL_194;
                }
                continue;
              }
LABEL_182:
              operator delete(v124);
              goto LABEL_159;
            }
            break;
          }
          size_t v130 = 0;
          unint64_t v131 = (char *)(v120 - (unsigned char *)*v187);
          *(unsigned char *)unint64_t v125 = v122;
          uint64_t v121 = v125 + 1;
          if (v120 == v124) {
            goto LABEL_172;
          }
LABEL_169:
          if (v125 < 8)
          {
            v132 = v120;
            a3 = v197;
            goto LABEL_179;
          }
          a3 = v197;
          if (&v130[v125 + v124 - v120] > &v130[v125 - 1] || v124 > v120 - 1 || (unint64_t)(v124 - v130) < 0x20)
          {
            v132 = v120;
            goto LABEL_179;
          }
          if (v125 >= 0x20)
          {
            unint64_t v135 = v125 & 0xFFFFFFFFFFFFFFE0;
            v136 = &v130[v125 - 16];
            std::string::size_type v137 = (long long *)(v120 - 16);
            unint64_t v138 = v125 & 0xFFFFFFFFFFFFFFE0;
            do
            {
              long long v139 = *v137;
              *((_OWORD *)v136 - 1) = *(v137 - 1);
              *(_OWORD *)v136 = v139;
              v136 -= 32;
              v137 -= 2;
              v138 -= 32;
            }
            while (v138);
            if (v125 != v135)
            {
              if ((v125 & 0x18) == 0)
              {
                v131 -= v135;
                v132 = &v120[-v135];
                goto LABEL_179;
              }
              goto LABEL_189;
            }
          }
          else
          {
            unint64_t v135 = 0;
LABEL_189:
            v132 = &v120[-(v125 & 0xFFFFFFFFFFFFFFF8)];
            v131 -= v125 & 0xFFFFFFFFFFFFFFF8;
            int v140 = &v130[&v120[-v135] - v124 - 8];
            size_t v141 = (uint64_t *)&v120[-v135 - 8];
            unint64_t v142 = v135 - (v125 & 0xFFFFFFFFFFFFFFF8);
            do
            {
              uint64_t v143 = *v141--;
              *(void *)int v140 = v143;
              v140 -= 8;
              v142 += 8;
            }
            while (v142);
            if (v125 != (v125 & 0xFFFFFFFFFFFFFFF8))
            {
LABEL_179:
              v133 = v131 - 1;
              size_t v119 = v188;
              do
              {
                char v134 = *--v132;
                *v133-- = v134;
              }
              while (v132 != v124);
              v193[765] = (uint64_t)v130;
              v193[766] = v121;
              v193[767] = (uint64_t)&v130[v128];
              if (!v124) {
                goto LABEL_159;
              }
              goto LABEL_182;
            }
          }
          unint64_t v131 = v130;
          goto LABEL_173;
        }
      }
LABEL_194:
      unint64_t v144 = (unsigned char *)v83[765];
      v145 = (unsigned char *)v83[766];
      int v82 = v194;
      if (v144 == v145 || !*v144) {
        goto LABEL_200;
      }
      while (*v144 != 12)
      {
        if (++v144 == v145)
        {
          unint64_t v144 = (unsigned char *)v83[766];
          break;
        }
      }
      if (v144 != v145)
      {
LABEL_200:
        unsigned int v146 = v200 - 1;
        if (v146 > 0x10)
        {
          int v147 = 0;
          if (v86 >= v195) {
            goto LABEL_204;
          }
        }
        else
        {
          int v147 = dword_20E87F0[(char)v146];
          if (v86 >= v195)
          {
LABEL_204:
            uint64_t v148 = (v86 - __p) >> 2;
            unint64_t v149 = v148 + 1;
            if ((unint64_t)(v148 + 1) >> 62) {
              sub_2E00();
            }
            if ((v195 - __p) >> 1 > v149) {
              unint64_t v149 = (v195 - __p) >> 1;
            }
            if ((unint64_t)(v195 - __p) >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v150 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v150 = v149;
            }
            if (v150)
            {
              if (v150 >> 62) {
                sub_188D718();
              }
              v151 = operator new(4 * v150);
              long long v152 = &v151[4 * v148];
              *(_DWORD *)long long v152 = v147;
              uint64_t v103 = (uint64_t)(v152 + 4);
              v153 = __p;
              if (v86 != __p)
              {
LABEL_213:
                unint64_t v154 = v86 - 4 - v153;
                if (v154 < 0xBC
                  || &v151[v86 - __p - 4 - (v154 & 0xFFFFFFFFFFFFFFFCLL)] > &v151[v86 - __p - 4]
                  || &v86[-(v154 & 0xFFFFFFFFFFFFFFFCLL) - 4] > v86 - 4
                  || (unint64_t)(__p - v151) < 0x20)
                {
                  v155 = v86;
                  int v82 = v194;
                  v153 = __p;
                }
                else
                {
                  uint64_t v157 = (v154 >> 2) + 1;
                  uint64_t v158 = 4 * (v157 & 0x7FFFFFFFFFFFFFF8);
                  v155 = &v86[-v158];
                  v152 -= v158;
                  unint64_t v159 = &v151[4 * v148 - 16];
                  v160 = v86 - 16;
                  uint64_t v161 = v157 & 0x7FFFFFFFFFFFFFF8;
                  do
                  {
                    long long v162 = *(_OWORD *)v160;
                    *(v159 - 1) = *((_OWORD *)v160 - 1);
                    *unint64_t v159 = v162;
                    v159 -= 2;
                    v160 -= 32;
                    v161 -= 8;
                  }
                  while (v161);
                  int v82 = v194;
                  v153 = __p;
                  if (v157 == (v157 & 0x7FFFFFFFFFFFFFF8))
                  {
LABEL_216:
                    int v206 = v152;
                    uint64_t v207 = v103;
                    uint64_t v195 = &v151[4 * v150];
                    unint64_t v208 = v195;
                    if (v153) {
                      goto LABEL_217;
                    }
                    goto LABEL_218;
                  }
                }
                do
                {
                  int v156 = *((_DWORD *)v155 - 1);
                  v155 -= 4;
                  *((_DWORD *)v152 - 1) = v156;
                  v152 -= 4;
                }
                while (v155 != v153);
                goto LABEL_216;
              }
            }
            else
            {
              v151 = 0;
              long long v152 = (char *)(4 * v148);
              *(_DWORD *)(4 * v148) = v147;
              uint64_t v103 = 4 * v148 + 4;
              v153 = __p;
              if (v86 != __p) {
                goto LABEL_213;
              }
            }
            int v82 = v194;
            int v206 = v152;
            uint64_t v207 = v103;
            uint64_t v195 = &v151[4 * v150];
            unint64_t v208 = v195;
            if (v153) {
LABEL_217:
            }
              operator delete(v153);
LABEL_218:
            long long __p = v152;
            long long v83 = v193;
LABEL_137:
            uint64_t v207 = v103;
            sub_683144((uint64_t)a3, v104, &v200);
            __int16 v86 = (char *)v103;
            goto LABEL_138;
          }
        }
        *(_DWORD *)__int16 v86 = v147;
        uint64_t v103 = (uint64_t)(v86 + 4);
        goto LABEL_137;
      }
      v191 |= 1 << v104;
LABEL_138:
      v102 += 32;
    }
  }
  __int16 v86 = 0;
  int v191 = 0;
  unint64_t v163 = v186 & 0xFFFFFFFFFFFFLL;
LABEL_232:
  uint64_t v164 = (int *)sub_2D5D58(*v83, v163);
  uint64_t v165 = (unsigned __int16 *)((char *)v164 - *v164);
  unsigned int v166 = *v165;
  if ((v186 & 0xFF000000000000) != 0)
  {
    if (v166 < 0x29) {
      goto LABEL_266;
    }
    unsigned int v167 = v165[20];
    if (!v167) {
      goto LABEL_266;
    }
  }
  else
  {
    if (v166 < 0x27) {
      goto LABEL_266;
    }
    unsigned int v167 = v165[19];
    if (!v167) {
      goto LABEL_266;
    }
  }
  v168 = (unsigned int *)((char *)v164 + v167);
  uint64_t v169 = *v168;
  uint64_t v170 = *((unsigned __int8 *)v168 + v169);
  if (*((unsigned char *)v168 + v169))
  {
    uint64_t v171 = 0;
    do
    {
      sub_66B2A0(*v193, v186, v171, v193 + 765);
      unint64_t v172 = (unsigned __int8 *)v193[765];
      v173 = (unsigned __int8 *)v193[766];
      while (v172 != v173)
      {
        int v174 = 0;
        unsigned __int8 v200 = 0;
        unsigned __int8 v200 = *v172;
        unsigned int v175 = v200 - 1;
        if (v175 <= 0x10) {
          int v174 = dword_20E87F0[(char)v175];
        }
        v176 = v86;
        if (v206 != v86)
        {
          v176 = v206;
          while (*(_DWORD *)v176 != v174)
          {
            v176 += 4;
            if (v176 == v86)
            {
              v176 = v86;
              break;
            }
          }
        }
        if (v176 == v86)
        {
          unsigned __int8 v177 = sub_683624(v197, v171);
          if (v177 != 0xFF)
          {
            int v178 = (char *)v203;
            if (v203 != (int *)v204)
            {
              while (*(_DWORD *)v178 != v174)
              {
                v178 += 4;
                if (v178 == v204)
                {
                  int v178 = v204;
                  break;
                }
              }
            }
            BOOL v180 = ((1 << v177) & v191) != 0 || v178 != v204;
            if (((1 << v177) & v194) == 0 && v180) {
              sub_683144((uint64_t)v197, v177, &v200);
            }
          }
        }
        ++v172;
      }
      ++v171;
    }
    while (v171 != v170);
  }
LABEL_266:
  sub_683098((uint64_t)v197);
  v181 = v202;
  if (v202 && !atomic_fetch_add(&v202->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v181->__on_zero_shared)(v181);
    std::__shared_weak_count::__release_weak(v181);
  }
  if (v203)
  {
    v204 = (char *)v203;
    operator delete(v203);
  }
  if (v206) {
    operator delete(v206);
  }
}

void sub_66A000(_Unwind_Exception *a1)
{
  sub_14A84(v1 - 152);
  BOOL v3 = *(void **)(v1 - 136);
  if (v3)
  {
    *(void *)(v1 - 128) = v3;
    operator delete(v3);
    unsigned int v4 = *(void **)(v1 - 112);
    if (!v4) {
LABEL_3:
    }
      _Unwind_Resume(a1);
  }
  else
  {
    unsigned int v4 = *(void **)(v1 - 112);
    if (!v4) {
      goto LABEL_3;
    }
  }
  *(void *)(v1 - 104) = v4;
  operator delete(v4);
  _Unwind_Resume(a1);
}

void sub_66A3A8(uint64_t *a1, int **a2, void *a3)
{
  uint64_t v5 = (uint64_t)a2[4];
  uint64_t v6 = v5 & 0xFF000000000000;
  unsigned int v7 = (int *)sub_2D5D58(*a1, v5 & 0xFFFFFFFFFFFFLL);
  BOOL v8 = (unsigned __int16 *)((char *)v7 - *v7);
  unsigned int v9 = *v8;
  if ((v5 & 0xFF000000000000) != 0)
  {
    if (v9 < 0x29) {
      return;
    }
    unsigned int v10 = v8[20];
    if (!v10) {
      return;
    }
    goto LABEL_7;
  }
  if (v9 >= 0x27)
  {
    unsigned int v10 = v8[19];
    if (v10)
    {
LABEL_7:
      uint64_t v11 = (unsigned int *)((char *)v7 + v10);
      uint64_t v12 = *v11;
      uint64_t v13 = *((unsigned __int8 *)v11 + v12);
      if (!*((unsigned char *)v11 + v12)) {
        return;
      }
      for (uint64_t i = 0; i != v13; ++i)
      {
        unsigned __int8 v16 = sub_683624(a3, i);
        if (v16 == 0xFF) {
          continue;
        }
        unsigned __int8 v17 = v16;
        uint64_t v18 = *a1;
        uint64_t v19 = (int *)sub_2D5D58(*a1, v5 & 0xFFFFFFFFFFFFLL);
        unint64_t v20 = (unsigned __int16 *)((char *)v19 - *v19);
        unsigned int v21 = *v20;
        if (v6)
        {
          if (v21 < 0x29) {
            goto LABEL_24;
          }
          unsigned int v22 = v20[20];
          if (!v22) {
            goto LABEL_24;
          }
        }
        else
        {
          if (v21 < 0x27) {
            goto LABEL_24;
          }
          unsigned int v22 = v20[19];
          if (!v22) {
            goto LABEL_24;
          }
        }
        if (*(int *)((char *)v19 + v22 + *(int *)((char *)v19 + v22)) > i)
        {
          BOOL v23 = (int *)sub_53F764(v18, v5, i);
          uint64_t v24 = (unsigned __int16 *)((char *)v23 - *v23);
          if (*v24 >= 5u)
          {
            uint64_t v25 = v24[2];
            if (v25)
            {
              if (*((unsigned char *)v23 + v25)) {
                sub_6842F8((uint64_t)a3, v17);
              }
            }
          }
        }
LABEL_24:
        uint64_t v26 = *a1;
        uint64_t v27 = (int *)sub_2D5D58(*a1, v5 & 0xFFFFFFFFFFFFLL);
        int v28 = (unsigned __int16 *)((char *)v27 - *v27);
        unsigned int v29 = *v28;
        if (v6)
        {
          if (v29 < 0x29) {
            goto LABEL_35;
          }
          unsigned int v30 = v28[20];
          if (!v30) {
            goto LABEL_35;
          }
        }
        else
        {
          if (v29 < 0x27) {
            goto LABEL_35;
          }
          unsigned int v30 = v28[19];
          if (!v30) {
            goto LABEL_35;
          }
        }
        if (*(int *)((char *)v27 + v30 + *(int *)((char *)v27 + v30)) > i)
        {
          uint64_t v31 = (int *)sub_53F764(v26, v5, i);
          uint64_t v32 = (unsigned __int16 *)((char *)v31 - *v31);
          if (*v32 >= 5u)
          {
            uint64_t v33 = v32[2];
            if (v33)
            {
              if ((*((unsigned char *)v31 + v33) & 2) != 0) {
                sub_68377C((uint64_t)a3, v17);
              }
            }
          }
        }
LABEL_35:
        uint64_t v34 = *a1;
        uint64_t v35 = (int *)sub_2D5D58(*a1, v5 & 0xFFFFFFFFFFFFLL);
        long long v36 = (unsigned __int16 *)((char *)v35 - *v35);
        unsigned int v37 = *v36;
        if (v6)
        {
          if (v37 < 0x29) {
            continue;
          }
          unsigned int v38 = v36[20];
          if (!v38) {
            continue;
          }
        }
        else
        {
          if (v37 < 0x27) {
            continue;
          }
          unsigned int v38 = v36[19];
          if (!v38) {
            continue;
          }
        }
        if (*(int *)((char *)v35 + v38 + *(int *)((char *)v35 + v38)) > i)
        {
          uint64_t v39 = (int *)sub_53F764(v34, v5, i);
          uint64_t v40 = (unsigned __int16 *)((char *)v39 - *v39);
          if (*v40 >= 5u)
          {
            uint64_t v41 = v40[2];
            if (v41)
            {
              if ((*((unsigned char *)v39 + v41) & 0x20) != 0)
              {
                int v42 = (unsigned __int16 *)((char *)*a2 - **a2);
                if (*v42 >= 0xBu && (uint64_t v43 = v42[5]) != 0)
                {
                  uint64_t v44 = (char *)*a2 + v43;
                  if ((v44[3] & 2) == 0 || !*(unsigned char *)(a1[752] + 1624))
                  {
                    if ((v44[3] & 2) == 0) {
                      goto LABEL_50;
                    }
LABEL_57:
                    long long __p = 0;
                    uint64_t v50 = 0;
                    uint64_t v51 = 0;
                    sub_684328((uint64_t)a3, v17, (std::string **)&__p);
                    uint64_t v45 = (void **)__p;
                    if (!__p) {
                      continue;
                    }
                    uint64_t v47 = v50;
                    int v15 = __p;
                    if (v50 == __p)
                    {
LABEL_10:
                      uint64_t v50 = v45;
                      operator delete(v15);
                      continue;
                    }
                    do
                    {
                      if (*((char *)v47 - 1) < 0) {
                        operator delete(*(v47 - 3));
                      }
                      v47 -= 3;
                    }
                    while (v47 != v45);
LABEL_9:
                    int v15 = __p;
                    goto LABEL_10;
                  }
                }
                else
                {
LABEL_50:
                  if (!*(unsigned char *)(a1[752] + 1625)) {
                    goto LABEL_57;
                  }
                }
                sub_66F488(*a1, v5, i, (uint64_t)&__p);
                sub_684328((uint64_t)a3, v17, (std::string **)&__p);
                uint64_t v45 = (void **)__p;
                if (!__p) {
                  continue;
                }
                unint64_t v46 = v50;
                int v15 = __p;
                if (v50 == __p) {
                  goto LABEL_10;
                }
                do
                {
                  if (*((char *)v46 - 1) < 0) {
                    operator delete(*(v46 - 3));
                  }
                  v46 -= 3;
                }
                while (v46 != v45);
                goto LABEL_9;
              }
            }
          }
        }
      }
    }
  }
}

void sub_66A750(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1A668((void **)va);
  _Unwind_Resume(a1);
}

void sub_66A764(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1A668((void **)va);
  _Unwind_Resume(a1);
}

void sub_66A778(uint64_t a1, uint64_t a2, int a3)
{
  if (!sub_684054(a2)) {
    return;
  }
  int v5 = sub_68459C(a2);
  int v6 = sub_6845A4(a2);
  if (!(v5 | v6)) {
    return;
  }
  int v7 = v6;
  if ((v6 + v5) == sub_682244(a2))
  {
    unsigned __int8 v8 = sub_682244(a2);
    if (v8)
    {
      uint64_t v9 = 0;
      uint64_t v10 = v8;
      do
      {
        LOBYTE(v87) = 12;
        sub_683144(a2, v9++, (unsigned __int8 *)&v87);
      }
      while (v10 != v9);
    }
    return;
  }
  char v87 = 0;
  unint64_t v88 = 0;
  unint64_t v89 = 0;
  if (a3 != 1)
  {
    int v18 = sub_682244(a2);
    char v19 = sub_684EAC(a2);
    uint64_t v11 = (const void **)sub_6838A0(a2, v19 - v5);
    int v12 = v18 - v5;
    uint64_t v84 = 0;
    uint64_t v85 = 0;
    __int16 v86 = 0;
    uint64_t v14 = *v11;
    unint64_t v20 = v11[1];
    size_t v15 = v20 - (unsigned char *)*v11;
    if (v20 != *v11) {
      goto LABEL_10;
    }
LABEL_13:
    long long __p = 0;
    goto LABEL_14;
  }
  uint64_t v11 = (const void **)sub_6838A0(a2, v5);
  int v12 = 0;
  uint64_t v84 = 0;
  uint64_t v85 = 0;
  __int16 v86 = 0;
  uint64_t v14 = *v11;
  uint64_t v13 = v11[1];
  size_t v15 = v13 - (unsigned char *)*v11;
  if (v13 == *v11) {
    goto LABEL_13;
  }
LABEL_10:
  if ((v15 & 0x8000000000000000) != 0) {
    sub_2E00();
  }
  unsigned __int8 v16 = (unsigned __int8 *)operator new(v15);
  unsigned __int8 v17 = &v16[v15];
  uint64_t v84 = v16;
  __int16 v86 = &v16[v15];
  long long __p = v16;
  uint64_t v11 = (const void **)memcpy(v16, v14, v15);
  uint64_t v85 = v17;
LABEL_14:
  char v21 = sub_66B544((uint64_t)v11, &v84, a3);
  char v22 = v21;
  BOOL v23 = v88;
  if ((unint64_t)v88 < v89)
  {
    *unint64_t v88 = v21;
    uint64_t v24 = (uint64_t)(v23 + 1);
    goto LABEL_44;
  }
  uint64_t v25 = v87;
  unint64_t v26 = v88 - (unsigned char *)v87;
  uint64_t v27 = v88 - (unsigned char *)v87 + 1;
  if (v27 < 0) {
    sub_2E00();
  }
  unint64_t v28 = v89 - (void)v87;
  if (2 * (v89 - (unint64_t)v87) > v27) {
    uint64_t v27 = 2 * v28;
  }
  if (v28 >= 0x3FFFFFFFFFFFFFFFLL) {
    size_t v29 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    size_t v29 = v27;
  }
  if (!v29)
  {
    unsigned int v30 = 0;
    uint64_t v31 = (char *)(v88 - (unsigned char *)v87);
    uint64_t v32 = 0;
    *(unsigned char *)unint64_t v26 = v22;
    uint64_t v24 = v26 + 1;
    if (v23 == v25) {
      goto LABEL_42;
    }
LABEL_26:
    if (v26 >= 8 && (unint64_t)(v25 - v30) >= 0x20)
    {
      if (v26 < 0x20)
      {
        unint64_t v33 = 0;
        goto LABEL_34;
      }
      unint64_t v33 = v26 & 0xFFFFFFFFFFFFFFE0;
      uint64_t v34 = (long long *)(v23 - 16);
      uint64_t v35 = &v30[v23 - 16 - v25];
      unint64_t v36 = v26 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        long long v37 = *v34;
        *((_OWORD *)v35 - 1) = *(v34 - 1);
        *(_OWORD *)uint64_t v35 = v37;
        v35 -= 32;
        v34 -= 2;
        v36 -= 32;
      }
      while (v36);
      if (v26 == v33) {
        goto LABEL_41;
      }
      if ((v26 & 0x18) != 0)
      {
LABEL_34:
        v31 -= v26 & 0xFFFFFFFFFFFFFFF8;
        unsigned int v38 = &v23[-v33 - 8];
        int64_t v39 = v38 - v25;
        unint64_t v40 = v33 - (v26 & 0xFFFFFFFFFFFFFFF8);
        do
        {
          uint64_t v41 = *(void *)v38;
          v38 -= 8;
          *(void *)&v30[v39] = v41;
          v39 -= 8;
          v40 += 8;
        }
        while (v40);
        v23 -= v26 & 0xFFFFFFFFFFFFFFF8;
        if (v26 == (v26 & 0xFFFFFFFFFFFFFFF8)) {
          goto LABEL_41;
        }
        goto LABEL_39;
      }
      v31 -= v33;
      v23 -= v33;
    }
LABEL_39:
    int v42 = v31 - 1;
    do
    {
      char v43 = *--v23;
      *v42-- = v43;
    }
    while (v23 != v25);
LABEL_41:
    uint64_t v31 = v30;
    goto LABEL_42;
  }
  unsigned int v30 = (char *)operator new(v29);
  uint64_t v31 = &v30[v26];
  uint64_t v32 = &v30[v29];
  v30[v26] = v22;
  uint64_t v24 = (uint64_t)&v30[v26 + 1];
  if (v23 != v25) {
    goto LABEL_26;
  }
LABEL_42:
  char v87 = v31;
  unint64_t v89 = (unint64_t)v32;
  if (v25) {
    operator delete(v25);
  }
LABEL_44:
  unint64_t v88 = (unsigned char *)v24;
  unsigned int v44 = (v12 + v5);
  if (v44 <= v12) {
    int v45 = v12;
  }
  else {
    int v45 = (v12 + v5);
  }
  if (v12 < v44)
  {
    do
      sub_683F04(a2, v12++, (char **)&v87);
    while (v45 != v12);
  }
  if (a3 == 1)
  {
    int v46 = sub_682244(a2);
    char v47 = sub_682244(a2);
    unint64_t v48 = (const void **)sub_6838A0(a2, v47 + ~(_BYTE)v7);
    int v49 = v46 - v7;
    int v81 = 0;
    int v82 = 0;
    long long v83 = 0;
    uint64_t v51 = *v48;
    uint64_t v50 = v48[1];
    size_t v52 = v50 - (unsigned char *)*v48;
    if (v50 == *v48)
    {
LABEL_51:
      uint64_t v53 = 0;
      goto LABEL_55;
    }
  }
  else
  {
    unint64_t v48 = (const void **)sub_6838A0(a2, v7);
    int v49 = 0;
    int v81 = 0;
    int v82 = 0;
    long long v83 = 0;
    uint64_t v51 = *v48;
    uint64_t v54 = v48[1];
    size_t v52 = v54 - (unsigned char *)*v48;
    if (v54 == *v48) {
      goto LABEL_51;
    }
  }
  if ((v52 & 0x8000000000000000) != 0) {
    sub_2E00();
  }
  uint64_t v53 = (unsigned __int8 *)operator new(v52);
  int v81 = v53;
  long long v83 = &v53[v52];
  unint64_t v48 = (const void **)memcpy(v53, v51, v52);
  int v82 = &v53[v52];
LABEL_55:
  unint64_t v88 = v87;
  char v55 = sub_66B6C8((uint64_t)v48, &v81, a3);
  char v56 = v55;
  uint64_t v57 = v88;
  if ((unint64_t)v88 >= v89)
  {
    int v59 = v87;
    unint64_t v60 = v88 - (unsigned char *)v87;
    uint64_t v61 = v88 - (unsigned char *)v87 + 1;
    if (v61 < 0) {
      sub_2E00();
    }
    unint64_t v62 = v89 - (void)v87;
    if (2 * (v89 - (unint64_t)v87) > v61) {
      uint64_t v61 = 2 * v62;
    }
    if (v62 >= 0x3FFFFFFFFFFFFFFFLL) {
      size_t v63 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      size_t v63 = v61;
    }
    if (v63)
    {
      char v64 = (char *)operator new(v63);
      uint64_t v65 = &v64[v60];
      unint64_t v66 = &v64[v63];
      v64[v60] = v56;
      uint64_t v58 = (uint64_t)&v64[v60 + 1];
      if (v57 == v59)
      {
LABEL_83:
        char v87 = v65;
        unint64_t v88 = (unsigned char *)v58;
        unint64_t v89 = (unint64_t)v66;
        if (v59) {
          operator delete(v59);
        }
        goto LABEL_85;
      }
    }
    else
    {
      char v64 = 0;
      uint64_t v65 = (char *)(v88 - (unsigned char *)v87);
      unint64_t v66 = 0;
      *(unsigned char *)unint64_t v60 = v56;
      uint64_t v58 = v60 + 1;
      if (v57 == v59) {
        goto LABEL_83;
      }
    }
    if (v60 >= 8 && (unint64_t)(v59 - v64) >= 0x20)
    {
      if (v60 < 0x20)
      {
        unint64_t v67 = 0;
        goto LABEL_75;
      }
      unint64_t v67 = v60 & 0xFFFFFFFFFFFFFFE0;
      unint64_t v68 = (long long *)(v57 - 16);
      uint64_t v69 = &v64[v57 - 16 - v59];
      unint64_t v70 = v60 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        long long v71 = *v68;
        *((_OWORD *)v69 - 1) = *(v68 - 1);
        *(_OWORD *)uint64_t v69 = v71;
        v69 -= 32;
        v68 -= 2;
        v70 -= 32;
      }
      while (v70);
      if (v60 == v67) {
        goto LABEL_82;
      }
      if ((v60 & 0x18) != 0)
      {
LABEL_75:
        v65 -= v60 & 0xFFFFFFFFFFFFFFF8;
        int64_t v72 = &v57[-v67 - 8];
        int64_t v73 = v72 - v59;
        unint64_t v74 = v67 - (v60 & 0xFFFFFFFFFFFFFFF8);
        do
        {
          uint64_t v75 = *(void *)v72;
          v72 -= 8;
          *(void *)&v64[v73] = v75;
          v73 -= 8;
          v74 += 8;
        }
        while (v74);
        v57 -= v60 & 0xFFFFFFFFFFFFFFF8;
        if (v60 == (v60 & 0xFFFFFFFFFFFFFFF8)) {
          goto LABEL_82;
        }
        goto LABEL_80;
      }
      v65 -= v67;
      v57 -= v67;
    }
LABEL_80:
    uint64_t v76 = v65 - 1;
    do
    {
      char v77 = *--v57;
      *v76-- = v77;
    }
    while (v57 != v59);
LABEL_82:
    uint64_t v65 = v64;
    goto LABEL_83;
  }
  *unint64_t v88 = v55;
  uint64_t v58 = (uint64_t)(v57 + 1);
LABEL_85:
  unint64_t v88 = (unsigned char *)v58;
  unsigned int v78 = (v49 + v7);
  if (v78 <= v49) {
    int v79 = v49;
  }
  else {
    int v79 = (v49 + v7);
  }
  if (v49 < v78)
  {
    do
      sub_683F04(a2, v49++, (char **)&v87);
    while (v79 != v49);
  }
  if (v53) {
    operator delete(v53);
  }
  if (__p) {
    operator delete(__p);
  }
  if (v87)
  {
    unint64_t v88 = v87;
    operator delete(v87);
  }
}

void sub_66AD58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17)
{
  if (__p) {
    operator delete(__p);
  }
  if (a16) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_66ADE8(uint64_t result)
{
  unsigned int v1 = result;
  if (result >= 0x100)
  {
    exception = __cxa_allocate_exception(0x40uLL);
    std::to_string(&v8, v1);
    BOOL v3 = std::string::insert(&v8, 0, "narrowing ");
    long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
    v9.__r_.__value_.__r.__words[2] = v3->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v9.__r_.__value_.__l.__data_ = v4;
    v3->__r_.__value_.__l.__size_ = 0;
    v3->__r_.__value_.__r.__words[2] = 0;
    v3->__r_.__value_.__r.__words[0] = 0;
    int v5 = std::string::append(&v9, " failed");
    long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
    std::string::size_type v11 = v5->__r_.__value_.__r.__words[2];
    long long v10 = v6;
    v5->__r_.__value_.__l.__size_ = 0;
    v5->__r_.__value_.__r.__words[2] = 0;
    v5->__r_.__value_.__r.__words[0] = 0;
    int v7 = (void *)sub_2F404((uint64_t)exception, &v10);
  }
  return result;
}

void sub_66AEBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_66AF3C(void *a1, unint64_t a2)
{
  if (a2 >= (uint64_t)(a1[1] - *a1) >> 2)
  {
    exception = __cxa_allocate_exception(0x40uLL);
    std::to_string(&v16, a2);
    long long v6 = std::string::insert(&v16, 0, "Out-of-bounds access in Vector::at with index=");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v17.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    std::string v8 = std::string::append(&v17, ",size=");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v18.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v18.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v15, (uint64_t)(a1[1] - *a1) >> 2);
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      long long v10 = &v15;
    }
    else {
      long long v10 = (std::string *)v15.__r_.__value_.__r.__words[0];
    }
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v15.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v15.__r_.__value_.__l.__size_;
    }
    int v12 = std::string::append(&v18, (const std::string::value_type *)v10, size);
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    std::string::size_type v20 = v12->__r_.__value_.__r.__words[2];
    long long v19 = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    uint64_t v14 = (void *)sub_2F404((uint64_t)exception, &v19);
  }
  return *a1 + 4 * a2;
}

void sub_66B06C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 41) < 0) {
    operator delete(*(void **)(v33 - 64));
  }
  if (a14 < 0)
  {
    operator delete(a9);
    if ((a33 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a26 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_10;
    }
  }
  else if ((a33 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(a28);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_7;
  }
LABEL_10:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0) {
LABEL_11:
  }
    _Unwind_Resume(a1);
LABEL_7:
  operator delete(__p);
  goto LABEL_11;
}

uint64_t sub_66B14C(uint64_t result)
{
  int v1 = result;
  if (result >= 0x100)
  {
    exception = __cxa_allocate_exception(0x40uLL);
    std::to_string(&v8, v1);
    BOOL v3 = std::string::insert(&v8, 0, "narrowing ");
    long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
    v9.__r_.__value_.__r.__words[2] = v3->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v9.__r_.__value_.__l.__data_ = v4;
    v3->__r_.__value_.__l.__size_ = 0;
    v3->__r_.__value_.__r.__words[2] = 0;
    v3->__r_.__value_.__r.__words[0] = 0;
    int v5 = std::string::append(&v9, " failed");
    long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
    std::string::size_type v11 = v5->__r_.__value_.__r.__words[2];
    long long v10 = v6;
    v5->__r_.__value_.__l.__size_ = 0;
    v5->__r_.__value_.__r.__words[2] = 0;
    v5->__r_.__value_.__r.__words[0] = 0;
    long long v7 = (void *)sub_2F404((uint64_t)exception, &v10);
  }
  return result;
}

void sub_66B220(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(a1);
}

void sub_66B2A0(uint64_t a1, uint64_t a2, unsigned int a3, void *a4)
{
  a4[1] = *a4;
  uint64_t v8 = a2 & 0xFF000000000000;
  std::string v9 = (int *)sub_2D5D58(a1, a2 & 0xFFFFFFFFFFFFLL);
  long long v10 = (unsigned __int16 *)((char *)v9 - *v9);
  unsigned int v11 = *v10;
  if (v8)
  {
    if (v11 < 0x29) {
      return;
    }
    unsigned int v12 = v10[20];
    if (!v12) {
      return;
    }
    goto LABEL_7;
  }
  if (v11 >= 0x27)
  {
    unsigned int v12 = v10[19];
    if (v12)
    {
LABEL_7:
      if (*(int *)((char *)v9 + v12 + *(int *)((char *)v9 + v12)) <= a3) {
        return;
      }
      long long v13 = (int *)sub_53F764(a1, a2, a3);
      uint64_t v14 = (unsigned __int16 *)((char *)v13 - *v13);
      if (*v14 < 0xBu) {
        return;
      }
      uint64_t v15 = v14[5];
      if (!v15) {
        return;
      }
      std::string v16 = (unsigned int *)((char *)v13 + v15);
      uint64_t v17 = *v16;
      long long v19 = (char *)v16 + v17 + 4;
      uint64_t v18 = *(unsigned int *)((char *)v16 + v17);
      if (!v18) {
        return;
      }
      std::string::size_type v20 = &v19[v18];
      char v21 = (unsigned char *)a4[1];
      while (1)
      {
        char v23 = *v19;
        unint64_t v24 = a4[2];
        if ((unint64_t)v21 >= v24) {
          break;
        }
        *char v21 = v23;
        uint64_t v22 = (uint64_t)(v21 + 1);
LABEL_13:
        a4[1] = v22;
        ++v19;
        char v21 = (unsigned char *)v22;
        if (v19 == v20) {
          return;
        }
      }
      uint64_t v25 = (unsigned char *)*a4;
      unint64_t v26 = (unint64_t)&v21[-*a4];
      unint64_t v27 = v26 + 1;
      if ((uint64_t)(v26 + 1) < 0) {
        sub_2E00();
      }
      unint64_t v28 = v24 - (void)v25;
      if (2 * v28 > v27) {
        unint64_t v27 = 2 * v28;
      }
      if (v28 >= 0x3FFFFFFFFFFFFFFFLL) {
        size_t v29 = 0x7FFFFFFFFFFFFFFFLL;
      }
      else {
        size_t v29 = v27;
      }
      if (v29)
      {
        unsigned int v30 = (char *)operator new(v29);
        uint64_t v31 = &v30[v26];
        v30[v26] = v23;
        uint64_t v22 = (uint64_t)&v30[v26 + 1];
        if (v21 == v25)
        {
LABEL_33:
          *a4 = v31;
          a4[1] = v22;
          a4[2] = &v30[v29];
          if (v25) {
            operator delete(v25);
          }
          goto LABEL_13;
        }
      }
      else
      {
        unsigned int v30 = 0;
        uint64_t v31 = &v21[-*a4];
        *(unsigned char *)unint64_t v26 = v23;
        uint64_t v22 = v26 + 1;
        if (v21 == v25) {
          goto LABEL_33;
        }
      }
      if (v26 < 8 || &v30[v26 + v25 - v21] > &v30[v26 - 1] || v25 > v21 - 1 || (unint64_t)(v25 - v30) < 0x20)
      {
        uint64_t v32 = v21;
        goto LABEL_30;
      }
      if (v26 >= 0x20)
      {
        unint64_t v35 = v26 & 0xFFFFFFFFFFFFFFE0;
        unint64_t v36 = &v30[v26 - 16];
        long long v37 = (long long *)(v21 - 16);
        unint64_t v38 = v26 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          long long v39 = *v37;
          *((_OWORD *)v36 - 1) = *(v37 - 1);
          *(_OWORD *)unint64_t v36 = v39;
          v36 -= 32;
          v37 -= 2;
          v38 -= 32;
        }
        while (v38);
        if (v26 == v35) {
          goto LABEL_32;
        }
        if ((v26 & 0x18) == 0)
        {
          v31 -= v35;
          uint64_t v32 = &v21[-v35];
LABEL_30:
          uint64_t v33 = v31 - 1;
          do
          {
            char v34 = *--v32;
            *v33-- = v34;
          }
          while (v32 != v25);
LABEL_32:
          uint64_t v31 = v30;
          goto LABEL_33;
        }
      }
      else
      {
        unint64_t v35 = 0;
      }
      uint64_t v32 = &v21[-(v26 & 0xFFFFFFFFFFFFFFF8)];
      v31 -= v26 & 0xFFFFFFFFFFFFFFF8;
      unint64_t v40 = &v30[&v21[-v35] - v25 - 8];
      uint64_t v41 = (uint64_t *)&v21[-v35 - 8];
      unint64_t v42 = v35 - (v26 & 0xFFFFFFFFFFFFFFF8);
      do
      {
        uint64_t v43 = *v41--;
        *(void *)unint64_t v40 = v43;
        v40 -= 8;
        v42 += 8;
      }
      while (v42);
      if (v26 == (v26 & 0xFFFFFFFFFFFFFFF8)) {
        goto LABEL_32;
      }
      goto LABEL_30;
    }
  }
}

uint64_t sub_66B544(uint64_t a1, unsigned __int8 **a2, int a3)
{
  BOOL v3 = *a2;
  long long v4 = a2[1];
  if (*a2 == v4) {
    return 0;
  }
  int v5 = &qword_259C3B0;
  if (a3 == 1) {
    int v5 = &qword_259C398;
  }
  long long v6 = (unsigned char *)*v5;
  long long v7 = &qword_259C3B8;
  if (a3 == 1) {
    long long v7 = &qword_259C3A0;
  }
  uint64_t v8 = (unsigned char *)*v7;
  size_t v9 = v8 - v6;
  if (v8 == v6)
  {
    if (v3 + 1 != v4) {
      BOOL v3 = &v4[(void)v3 + ~(unint64_t)v3];
    }
  }
  else
  {
    if ((v9 & 0x8000000000000000) != 0) {
      sub_2E00();
    }
    long long v10 = (unsigned __int8 *)operator new(v8 - v6);
    memcpy(v10, v6, v9);
    for (uint64_t i = v3 + 1; i != v4; ++i)
    {
      size_t v12 = v9;
      long long v13 = v10;
      while (*v13 != *i)
      {
        ++v13;
        if (!--v12)
        {
          long long v13 = &v10[v9];
          break;
        }
      }
      uint64_t v14 = v13 - v10;
      size_t v15 = v9;
      std::string v16 = v10;
      while (*v16 != *v3)
      {
        ++v16;
        if (!--v15)
        {
          std::string v16 = &v10[v9];
          break;
        }
      }
      if (v16 - v10 >= v14) {
        BOOL v3 = i;
      }
    }
    operator delete(v10);
  }
  return *v3;
}

void sub_66B6AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_66B6C8(uint64_t a1, unsigned __int8 **a2, int a3)
{
  BOOL v3 = *a2;
  long long v4 = a2[1];
  if (*a2 == v4) {
    return 0;
  }
  int v5 = &qword_259C3B0;
  if (a3 == 1) {
    int v5 = &qword_259C398;
  }
  long long v6 = (unsigned char *)*v5;
  long long v7 = &qword_259C3B8;
  if (a3 == 1) {
    long long v7 = &qword_259C3A0;
  }
  uint64_t v8 = (unsigned char *)*v7;
  size_t v9 = v8 - v6;
  if (v8 == v6)
  {
    if (v3 + 1 != v4) {
      BOOL v3 = &v4[(void)v3 + ~(unint64_t)v3];
    }
  }
  else
  {
    if ((v9 & 0x8000000000000000) != 0) {
      sub_2E00();
    }
    long long v10 = (unsigned __int8 *)operator new(v8 - v6);
    memcpy(v10, v6, v9);
    for (uint64_t i = v3 + 1; i != v4; ++i)
    {
      size_t v12 = v9;
      long long v13 = v10;
      while (*v13 != *v3)
      {
        ++v13;
        if (!--v12)
        {
          long long v13 = &v10[v9];
          break;
        }
      }
      uint64_t v14 = v13 - v10;
      size_t v15 = v9;
      std::string v16 = v10;
      while (*v16 != *i)
      {
        ++v16;
        if (!--v15)
        {
          std::string v16 = &v10[v9];
          break;
        }
      }
      if (v16 - v10 >= v14) {
        BOOL v3 = i;
      }
    }
    operator delete(v10);
  }
  return *v3;
}

void sub_66B830(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_66B84C(uint64_t *a1, uint64_t a2, int a3, uint64_t *a4)
{
  long long v4 = a1;
  int v5 = (unsigned int *)sub_2D5EC4(*a1, *(void *)(a2 + 32) & 0xFFFFFFFFFFFFLL, (*(void *)(a2 + 32) & 0xFF000000000000) == 0);
  sub_2E45D4(*v4, v5, (uint64_t)(v4 + 768), 0, 1, 1);
  v4[760] = v4[759];
  long long v6 = (int **)v4[768];
  uint64_t v169 = (int **)v4[769];
  if (v6 == v169) {
    return 0;
  }
  unint64_t v172 = (char **)(v4 + 759);
  int v174 = v4;
  uint64_t v175 = (uint64_t)(v4 + 382);
  uint64_t v186 = v4 + 771;
  uint64_t v171 = (uint64_t)(v4 + 146);
  while (1)
  {
    v4[760] = v4[759];
    int v7 = sub_663238(v175, v6);
    uint64_t v8 = (unsigned __int16 *)((char *)*v6 - **v6);
    if (*v8 >= 0xBu && (uint64_t v9 = v8[5]) != 0) {
      int v10 = (*((unsigned __int8 *)*v6 + v9 + 3) >> 2) & 1;
    }
    else {
      int v10 = 0;
    }
    long long v11 = *(_OWORD *)v6;
    long long v12 = *((_OWORD *)v6 + 1);
    v173 = v6;
    unint64_t v189 = (unint64_t)v6[4];
    long long v187 = v11;
    long long v188 = v12;
    v190.n128_u64[0] = v189;
    sub_2D5B74(v172, &v190);
    if ((v7 | v10) == 1) {
      break;
    }
LABEL_9:
    BOOL v13 = WORD2(v189) == *(unsigned __int16 *)(a2 + 36) && v189 == *(_DWORD *)(a2 + 32);
    if (!v13)
    {
      uint64_t v14 = *a4;
      uint64_t v15 = a4[1];
      if (*a4 == v15)
      {
LABEL_234:
        v151 = *(int **)(a2 + 8);
        long long v152 = (unsigned __int16 *)((char *)v151 - *v151);
        unsigned int v153 = *v152;
        if (*(unsigned char *)(a2 + 38))
        {
          if (v153 < 5) {
            goto LABEL_244;
          }
          unsigned int v154 = v152[2];
          if (!v154) {
            goto LABEL_244;
          }
LABEL_240:
          __int16 v155 = *(_WORD *)((char *)v151 + v154);
          uint64_t v156 = *((void *)&v187 + 1);
          uint64_t v157 = (unsigned __int16 *)(*((void *)&v187 + 1) - (int)**((_DWORD **)&v187 + 1));
          unsigned int v158 = *v157;
          if (!BYTE6(v189)) {
            goto LABEL_241;
          }
LABEL_245:
          if (v158 >= 9)
          {
            unsigned int v159 = v157[4];
            if (v159) {
              goto LABEL_247;
            }
          }
LABEL_248:
          int v160 = 0;
        }
        else
        {
          if (v153 >= 9)
          {
            unsigned int v154 = v152[4];
            if (v154) {
              goto LABEL_240;
            }
          }
LABEL_244:
          __int16 v155 = 0;
          uint64_t v156 = *((void *)&v187 + 1);
          uint64_t v157 = (unsigned __int16 *)(*((void *)&v187 + 1) - (int)**((_DWORD **)&v187 + 1));
          unsigned int v158 = *v157;
          if (BYTE6(v189)) {
            goto LABEL_245;
          }
LABEL_241:
          if (v158 < 5) {
            goto LABEL_248;
          }
          unsigned int v159 = v157[2];
          if (!v159) {
            goto LABEL_248;
          }
LABEL_247:
          int v160 = *(unsigned __int16 *)(v156 + v159);
        }
        double v161 = *(double *)(v4[752] + 1856);
        unsigned __int16 v162 = v155 + 18000;
        unsigned __int16 v163 = v155 - 18000;
        if ((unsigned __int16)(v162 >> 5) < 0x465u) {
          unsigned __int16 v163 = v162;
        }
        int v164 = v160 - v163;
        if (v164 > 18000) {
          v164 -= 36000;
        }
        if (v164 < -17999) {
          v164 += 36000;
        }
        double v165 = (double)v164 / 100.0;
        if (a3 && v165 >= v161 || (a3 & 1) == 0 && v165 <= -v161) {
          return 1;
        }
        goto LABEL_3;
      }
      while (__PAIR64__(*(unsigned __int16 *)(v14 + 4), *(_DWORD *)v14) != __PAIR64__(WORD2(v189), v189)
           || (HIWORD(v189) & 1) == (*(unsigned char *)(v14 + 6) == 0))
      {
        v14 += 48;
        if (v14 == v15) {
          goto LABEL_234;
        }
      }
    }
LABEL_3:
    long long v6 = v173 + 5;
    if (v173 + 5 == v169) {
      return 0;
    }
  }
  while (2)
  {
    std::string v16 = (unsigned int *)sub_2D5EC4(*v4, v189 & 0xFFFFFFFFFFFFLL, (v189 & 0xFF000000000000) == 0);
    uint64_t v17 = *v4;
    v4[772] = v4[771];
    sub_2D5904(v17, v16, 0, (char **)(v17 + 7800));
    uint64_t v18 = *(void *)(v17 + 7808) - *(void *)(v17 + 7800);
    uint64_t v19 = v18 >> 3;
    std::string::size_type v20 = (unsigned char *)v4[771];
    if (0xCCCCCCCCCCCCCCCDLL * ((v4[773] - (uint64_t)v20) >> 3) < v18 >> 3)
    {
      if ((unint64_t)v18 >= 0x3333333333333331) {
        sub_2E00();
      }
      char v21 = (unsigned char *)v4[772];
      uint64_t v22 = 40 * v19;
      char v23 = (char *)operator new(40 * v19);
      unint64_t v24 = &v23[40 * ((v21 - v20) / 40)];
      uint64_t v25 = (uint64_t)v24;
      if (v21 != v20)
      {
        unint64_t v26 = &v23[40 * ((v21 - v20) / 40)];
        do
        {
          long long v27 = *(_OWORD *)(v21 - 40);
          long long v28 = *(_OWORD *)(v21 - 24);
          uint64_t v25 = (uint64_t)(v26 - 40);
          *((void *)v26 - 1) = *((void *)v21 - 1);
          *(_OWORD *)(v26 - 24) = v28;
          *(_OWORD *)(v26 - 40) = v27;
          v21 -= 40;
          v26 -= 40;
        }
        while (v21 != v20);
      }
      v4[771] = v25;
      v4[772] = (uint64_t)v24;
      v4[773] = (uint64_t)&v23[v22];
      if (v20) {
        operator delete(v20);
      }
    }
    size_t v29 = *(unint64_t **)(v17 + 7800);
    unsigned int v30 = (char *)v4[772];
    uint64_t v185 = *(unint64_t **)(v17 + 7808);
    if (v29 == v185)
    {
LABEL_179:
      uint64_t v123 = *v186;
      if ((char *)*v186 == v30) {
        goto LABEL_9;
      }
      uint64_t v124 = (char *)(v123 + 40);
      while (*((_DWORD *)v124 - 2) != v189 || *((unsigned __int16 *)v124 - 2) != WORD2(v189))
      {
        BOOL v13 = v124 == v30;
        v124 += 40;
        if (v13) {
          goto LABEL_200;
        }
      }
      unint64_t v126 = v124 - 40;
      if (v124 - 40 != v30)
      {
        if (v124 == v30)
        {
          if (v126 == v30) {
            goto LABEL_200;
          }
LABEL_199:
          unsigned int v30 = v126;
          v4[772] = (uint64_t)v126;
          goto LABEL_200;
        }
        do
        {
          if (*((_DWORD *)v124 + 8) != v189 || *((unsigned __int16 *)v124 + 18) != WORD2(v189))
          {
            long long v128 = *(_OWORD *)v124;
            long long v129 = *((_OWORD *)v124 + 1);
            *((void *)v126 + 4) = *((void *)v124 + 4);
            *(_OWORD *)unint64_t v126 = v128;
            *((_OWORD *)v126 + 1) = v129;
            v126 += 40;
          }
          v124 += 40;
        }
        while (v124 != v30);
        unsigned int v30 = (char *)v4[772];
        uint64_t v123 = v4[771];
        if (v126 != v30) {
          goto LABEL_199;
        }
      }
LABEL_200:
      if ((char *)v123 == v30) {
        goto LABEL_9;
      }
      if (&v30[-v123] != stru_20.segname)
      {
        unint64_t v130 = sub_6DBACC(v171, (int **)&v187, v186, -1);
        if (v130 == -1 || v130 >= 0xCCCCCCCCCCCCCCCDLL * ((v4[772] - v4[771]) >> 3)) {
          goto LABEL_9;
        }
        uint64_t v123 = sub_66F838(v186, v130);
      }
      long long v131 = *(_OWORD *)v123;
      long long v132 = *(_OWORD *)(v123 + 16);
      unint64_t v133 = *(void *)(v123 + 32);
      unint64_t v189 = v133;
      long long v187 = v131;
      long long v188 = v132;
      char v134 = (char *)v4[759];
      unint64_t v135 = v4[760];
      v136 = v134;
      if (v134 != (char *)v135)
      {
        v136 = (char *)v4[759];
        while (__PAIR64__(*((unsigned __int16 *)v136 + 2), *(_DWORD *)v136) != __PAIR64__(WORD2(v133), v133)
             || (HIWORD(v133) & 1) == (v136[6] == 0))
        {
          v136 += 8;
          if (v136 == (char *)v135)
          {
            v136 = (char *)v4[760];
            break;
          }
        }
      }
      if (v136 != (char *)v135) {
        goto LABEL_9;
      }
      unint64_t v137 = v4[761];
      if (v135 < v137)
      {
        *(void *)unint64_t v135 = v133;
        unint64_t v138 = (void *)(v135 + 8);
        goto LABEL_230;
      }
      uint64_t v139 = (uint64_t)(v135 - (void)v134) >> 3;
      unint64_t v140 = v139 + 1;
      if ((unint64_t)(v139 + 1) >> 61) {
        sub_2E00();
      }
      uint64_t v141 = v137 - (void)v134;
      if (v141 >> 2 > v140) {
        unint64_t v140 = v141 >> 2;
      }
      if ((unint64_t)v141 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v142 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v142 = v140;
      }
      if (v142)
      {
        if (v142 >> 61) {
          sub_188D718();
        }
        uint64_t v143 = operator new(8 * v142);
        uint64_t v144 = (uint64_t)v143 + 8 * v139;
        *(void *)uint64_t v144 = v133;
        unint64_t v138 = (void *)(v144 + 8);
        if (v134 == (char *)v135) {
          goto LABEL_228;
        }
      }
      else
      {
        uint64_t v143 = 0;
        uint64_t v144 = 8 * v139;
        v145 = (unint64_t *)(8 * v139);
        unint64_t *v145 = v133;
        unint64_t v138 = v145 + 1;
        if (v134 == (char *)v135) {
          goto LABEL_228;
        }
      }
      do
      {
        int v146 = *(_DWORD *)(v135 - 8);
        v135 -= 8;
        int v147 = *(_DWORD *)(v135 + 3);
        *(_DWORD *)(v144 - 8) = v146;
        v144 -= 8;
        *(_DWORD *)(v144 + 3) = v147;
      }
      while ((char *)v135 != v134);
      char v134 = *v172;
LABEL_228:
      v4[759] = v144;
      v4[760] = (uint64_t)v138;
      v4[761] = (uint64_t)v143 + 8 * v142;
      if (v134) {
        operator delete(v134);
      }
LABEL_230:
      v4[760] = (uint64_t)v138;
      char v148 = sub_663238(v175, (int **)&v187);
      unint64_t v149 = (unsigned __int16 *)(v187 - *(int *)v187);
      if (*v149 >= 0xBu && (uint64_t v150 = v149[5]) != 0)
      {
        if (!(v148 & 1 | (*(unsigned __int8 *)(v187 + v150 + 3) >> 2) & 1)) {
          goto LABEL_9;
        }
      }
      else if ((v148 & 1) == 0)
      {
        goto LABEL_9;
      }
      continue;
    }
    break;
  }
  uint64_t v31 = (unsigned char *)(v17 + 7772);
  uint64_t v32 = (_DWORD *)(v17 + 3912);
  while (1)
  {
    unint64_t v33 = *v29;
    int v194 = 0;
    v195[0] = v33;
    v190.n128_u64[0] = (unint64_t)&v194;
    v190.n128_u64[1] = (unint64_t)v195;
    unint64_t v34 = *(void *)(v17 + 7752) + 1;
    *(void *)(v17 + 7752) = v34;
    uint64_t v35 = *(void *)(v17 + 3896);
    if (!v35) {
      break;
    }
    if (*v32 == v33)
    {
      unsigned int v36 = 0;
      goto LABEL_38;
    }
    if (*(_DWORD *)(v17 + 3936) == v33)
    {
      unsigned int v36 = 1;
      goto LABEL_38;
    }
    if (*(_DWORD *)(v17 + 3960) == v33)
    {
      unsigned int v36 = 2;
      goto LABEL_38;
    }
    if (*(_DWORD *)(v17 + 3984) == v33)
    {
      unsigned int v36 = 3;
LABEL_38:
      ++*(void *)(v17 + 7760);
      long long v37 = &v32[6 * v36];
      *((void *)v37 + 1) = v34;
      unint64_t v38 = (unsigned int *)*((void *)v37 + 2);
      if (!v38) {
        break;
      }
      goto LABEL_39;
    }
    unint64_t v57 = *(void *)(v17 + 3968);
    if (*(void *)(v17 + 3920) < v34) {
      unint64_t v34 = *(void *)(v17 + 3920);
    }
    if (*(void *)(v17 + 3944) >= v34)
    {
      int v58 = 0;
    }
    else
    {
      unint64_t v34 = *(void *)(v17 + 3944);
      int v58 = 1;
    }
    if (v57 >= v34) {
      unint64_t v59 = v34;
    }
    else {
      unint64_t v59 = *(void *)(v17 + 3968);
    }
    unint64_t v60 = *(void *)(v17 + 3992);
    if (v57 >= v34) {
      int v61 = v58;
    }
    else {
      int v61 = 2;
    }
    unint64_t v38 = (unsigned int *)sub_2AB884(v35, 0, v33, 1);
    unsigned int v62 = 3;
    if (v60 >= v59) {
      unsigned int v62 = v61;
    }
    size_t v63 = &v32[6 * v62];
    *size_t v63 = v195[0];
    unint64_t v34 = *(void *)(v17 + 7752);
    *((void *)v63 + 1) = v34;
    *((void *)v63 + 2) = v38;
    if (!v38) {
      break;
    }
LABEL_39:
    long long v39 = (int *)((char *)v38 + *v38);
    unint64_t v40 = (unsigned __int16 *)((char *)v39 - *v39);
    if (*v40 >= 5u && (uint64_t v41 = v40[2]) != 0)
    {
      uint64_t v42 = (v33 >> 30) & 0x3FFFC;
      unsigned int v44 = (unsigned int *)((char *)v39 + v41 + *(unsigned int *)((char *)v39 + v41) + v42 + 4);
      uint64_t v43 = *v44;
      if (!*v31) {
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v42 = (v33 >> 30) & 0x3FFFC;
      unsigned int v44 = (unsigned int *)(v42 + 4);
      uint64_t v43 = *(unsigned int *)((char *)dword_4 + v42);
      if (!*v31)
      {
LABEL_42:
        uint64_t v45 = 0;
        if (!*(unsigned char *)(v17 + 7773)) {
          goto LABEL_128;
        }
        goto LABEL_60;
      }
    }
    int v194 = 0;
    v195[0] = v33;
    v190.n128_u64[0] = (unint64_t)&v194;
    v190.n128_u64[1] = (unint64_t)v195;
    *(void *)(v17 + 7752) = ++v34;
    uint64_t v46 = *(void *)(v17 + 3896);
    if (!v46) {
      goto LABEL_265;
    }
    if (*(_DWORD *)(v17 + 4680) == v33)
    {
      unsigned int v47 = 32;
      goto LABEL_54;
    }
    if (*(_DWORD *)(v17 + 4704) == v33)
    {
      unsigned int v47 = 33;
      goto LABEL_54;
    }
    if (*(_DWORD *)(v17 + 4728) == v33)
    {
      unsigned int v47 = 34;
      goto LABEL_54;
    }
    if (*(_DWORD *)(v17 + 4752) == v33)
    {
      unsigned int v47 = 35;
LABEL_54:
      ++*(void *)(v17 + 7760);
      unint64_t v48 = &v32[6 * v47];
      *((void *)v48 + 1) = v34;
      int v49 = (unsigned int *)*((void *)v48 + 2);
      if (!v49) {
        goto LABEL_265;
      }
      goto LABEL_55;
    }
    unint64_t v76 = *(void *)(v17 + 4736);
    unint64_t v77 = *(void *)(v17 + 4712);
    unint64_t v78 = *(void *)(v17 + 4688);
    BOOL v79 = v78 < v34;
    if (v78 < v34) {
      unint64_t v34 = *(void *)(v17 + 4688);
    }
    BOOL v80 = v77 >= v34;
    if (v77 < v34) {
      unint64_t v34 = *(void *)(v17 + 4712);
    }
    int v81 = 32 * v79;
    if (!v80) {
      int v81 = 33;
    }
    BOOL v82 = v76 >= v34;
    if (v76 >= v34) {
      unint64_t v83 = v34;
    }
    else {
      unint64_t v83 = *(void *)(v17 + 4736);
    }
    unint64_t v179 = *(void *)(v17 + 4760);
    unint64_t v182 = v83;
    int v84 = 34;
    if (v82) {
      int v84 = v81;
    }
    unsigned int v176 = v84;
    int v49 = (unsigned int *)sub_2AB884(v46, 8, v33, 1);
    unsigned int v85 = 35;
    if (v179 >= v182) {
      unsigned int v85 = v176;
    }
    __int16 v86 = &v32[6 * v85];
    *__int16 v86 = v195[0];
    unint64_t v34 = *(void *)(v17 + 7752);
    *((void *)v86 + 1) = v34;
    *((void *)v86 + 2) = v49;
    if (!v49) {
      goto LABEL_265;
    }
LABEL_55:
    uint64_t v50 = (int *)((char *)v49 + *v49);
    uint64_t v51 = (unsigned __int16 *)((char *)v50 - *v50);
    if (*v51 >= 5u && (uint64_t v52 = v51[2]) != 0)
    {
      uint64_t v53 = (char *)v50 + v52 + *(unsigned int *)((char *)v50 + v52) + v42;
      uint64_t v45 = (uint64_t)&v53[*((unsigned int *)v53 + 1) + 4];
      if (!*(unsigned char *)(v17 + 7773)) {
        goto LABEL_128;
      }
    }
    else
    {
      uint64_t v45 = v42 + 4 + *(unsigned int *)(v42 + 4);
      if (!*(unsigned char *)(v17 + 7773)) {
        goto LABEL_128;
      }
    }
LABEL_60:
    int v194 = 1;
    v195[0] = v33;
    v190.n128_u64[0] = (unint64_t)&v194;
    v190.n128_u64[1] = (unint64_t)v195;
    unint64_t v54 = v34 + 1;
    *(void *)(v17 + 7752) = v54;
    uint64_t v55 = *(void *)(v17 + 3896);
    if (!v55) {
      goto LABEL_127;
    }
    if (*(_DWORD *)(v17 + 6024) == v33)
    {
      unsigned int v56 = 88;
      goto LABEL_84;
    }
    if (*(_DWORD *)(v17 + 6048) == v33)
    {
      unsigned int v56 = 89;
      goto LABEL_84;
    }
    if (*(_DWORD *)(v17 + 6072) == v33)
    {
      unsigned int v56 = 90;
      goto LABEL_84;
    }
    if (*(_DWORD *)(v17 + 6096) == v33)
    {
      unsigned int v56 = 91;
LABEL_84:
      ++*(void *)(v17 + 7760);
      char v64 = &v32[6 * v56];
      *((void *)v64 + 1) = v54;
      uint64_t v65 = (unsigned int *)*((void *)v64 + 2);
      if (!v65) {
        goto LABEL_127;
      }
      goto LABEL_85;
    }
    unint64_t v87 = *(void *)(v17 + 6080);
    unint64_t v88 = *(void *)(v17 + 6056);
    unint64_t v89 = *(void *)(v17 + 6032);
    BOOL v90 = v89 >= v54;
    if (v89 < v54) {
      unint64_t v54 = *(void *)(v17 + 6032);
    }
    int v91 = 88;
    if (v90) {
      int v91 = 0;
    }
    BOOL v92 = v88 >= v54;
    if (v88 < v54) {
      unint64_t v54 = *(void *)(v17 + 6056);
    }
    int v93 = 89;
    if (v92) {
      int v93 = v91;
    }
    BOOL v94 = v87 >= v54;
    if (v87 >= v54) {
      unint64_t v95 = v54;
    }
    else {
      unint64_t v95 = *(void *)(v17 + 6080);
    }
    unint64_t v180 = *(void *)(v17 + 6104);
    unint64_t v183 = v95;
    int v96 = 90;
    if (v94) {
      int v96 = v93;
    }
    unsigned int v177 = v96;
    uint64_t v65 = (unsigned int *)sub_2AB884(v55, 22, v33, 1);
    unsigned int v97 = 91;
    if (v180 >= v183) {
      unsigned int v97 = v177;
    }
    uint64_t v98 = &v32[6 * v97];
    *uint64_t v98 = v195[0];
    unint64_t v54 = *(void *)(v17 + 7752);
    *((void *)v98 + 1) = v54;
    *((void *)v98 + 2) = v65;
    if (!v65)
    {
LABEL_127:
      sub_2E6128((int **)&v190);
LABEL_128:
      uint64_t v99 = 0;
      uint64_t v100 = 0;
      goto LABEL_129;
    }
LABEL_85:
    unint64_t v66 = (int *)((char *)v65 + *v65);
    unint64_t v67 = (unsigned __int16 *)((char *)v66 - *v66);
    if (*v67 < 0xBu) {
      goto LABEL_128;
    }
    if (!v67[5]) {
      goto LABEL_128;
    }
    unint64_t v68 = (int *)((char *)v66 + v67[5] + *(unsigned int *)((char *)v66 + v67[5]));
    if (*v68 <= WORD2(v33)) {
      goto LABEL_128;
    }
    uint64_t v69 = &v68[2 * WORD2(v33)];
    unsigned int v72 = v69[1];
    long long v71 = v69 + 1;
    unsigned int v70 = v72;
    if (!v72) {
      goto LABEL_128;
    }
    int v194 = 1;
    v195[0] = v70;
    v190.n128_u64[0] = (unint64_t)&v194;
    v190.n128_u64[1] = (unint64_t)v195;
    unint64_t v73 = v54 + 1;
    *(void *)(v17 + 7752) = v73;
    uint64_t v74 = *(void *)(v17 + 3896);
    if (!v74) {
      goto LABEL_178;
    }
    if (*(_DWORD *)(v17 + 5928) == v70)
    {
      unsigned int v75 = 84;
      goto LABEL_137;
    }
    if (*(_DWORD *)(v17 + 5952) == v70)
    {
      unsigned int v75 = 85;
      goto LABEL_137;
    }
    if (*(_DWORD *)(v17 + 5976) == v70)
    {
      unsigned int v75 = 86;
      goto LABEL_137;
    }
    if (*(_DWORD *)(v17 + 6000) == v70)
    {
      unsigned int v75 = 87;
LABEL_137:
      ++*(void *)(v17 + 7760);
      unint64_t v101 = &v32[6 * v75];
      *((void *)v101 + 1) = v73;
      uint64_t v102 = (unsigned int *)*((void *)v101 + 2);
      if (!v102) {
        goto LABEL_178;
      }
      goto LABEL_138;
    }
    unint64_t v111 = *(void *)(v17 + 5984);
    unint64_t v112 = *(void *)(v17 + 5960);
    unint64_t v113 = *(void *)(v17 + 5936);
    BOOL v114 = v113 >= v73;
    if (v113 < v73) {
      unint64_t v73 = *(void *)(v17 + 5936);
    }
    int v115 = 84;
    if (v114) {
      int v115 = 0;
    }
    BOOL v116 = v112 >= v73;
    if (v112 < v73) {
      unint64_t v73 = *(void *)(v17 + 5960);
    }
    int v117 = 85;
    if (v116) {
      int v117 = v115;
    }
    BOOL v118 = v111 >= v73;
    if (v111 >= v73) {
      unint64_t v119 = v73;
    }
    else {
      unint64_t v119 = *(void *)(v17 + 5984);
    }
    unint64_t v181 = *(void *)(v17 + 6008);
    unint64_t v184 = v119;
    int v120 = 86;
    if (v118) {
      int v120 = v117;
    }
    unsigned int v178 = v120;
    uint64_t v102 = (unsigned int *)sub_2AB884(v74, 21, v70, 1);
    unsigned int v121 = 87;
    if (v181 >= v184) {
      unsigned int v121 = v178;
    }
    char v122 = &v32[6 * v121];
    *char v122 = v195[0];
    *((void *)v122 + 1) = *(void *)(v17 + 7752);
    *((void *)v122 + 2) = v102;
    if (!v102)
    {
LABEL_178:
      sub_2E6354((int **)&v190);
      goto LABEL_128;
    }
LABEL_138:
    uint64_t v103 = (int *)((char *)v102 + *v102);
    unsigned __int8 v104 = (unsigned __int16 *)((char *)v103 - *v103);
    unsigned int v105 = *v104;
    if ((*((unsigned char *)v71 + 6) & 2) != 0)
    {
      if (v105 < 5) {
        goto LABEL_128;
      }
      unsigned int v106 = (_DWORD *)v104[2];
      if (v104[2]) {
        unsigned int v106 = (_DWORD *)((char *)v106 + (void)v103 + *(unsigned int *)((char *)v106 + (void)v103));
      }
      if (v105 < 7 || (unsigned int v107 = v104[3]) == 0)
      {
LABEL_147:
        size_t v108 = 0;
        if (!v106) {
          goto LABEL_155;
        }
        goto LABEL_152;
      }
    }
    else
    {
      if (v105 < 7)
      {
        unsigned int v106 = 0;
        uint64_t v99 = 0;
        uint64_t v100 = 0;
        if (v105 < 5) {
          goto LABEL_129;
        }
      }
      else
      {
        unsigned int v106 = (_DWORD *)v104[3];
        if (v104[3]) {
          unsigned int v106 = (_DWORD *)((char *)v106 + (void)v103 + *(unsigned int *)((char *)v106 + (void)v103));
        }
      }
      unsigned int v107 = v104[2];
      if (!v104[2]) {
        goto LABEL_147;
      }
    }
    size_t v108 = (int *)((char *)v103 + v107 + *(int *)((char *)v103 + v107));
    if (!v106) {
      goto LABEL_155;
    }
LABEL_152:
    uint64_t v109 = *((unsigned __int16 *)v71 + 2);
    if (*v106 <= v109)
    {
LABEL_155:
      uint64_t v100 = 0;
      if (!v108) {
        goto LABEL_158;
      }
      goto LABEL_156;
    }
    uint64_t v100 = (uint64_t)&v106[v109 + 1] + v106[v109 + 1];
    if (!v108) {
      goto LABEL_158;
    }
LABEL_156:
    uint64_t v110 = *((unsigned __int16 *)v71 + 2);
    if (*v108 <= v110)
    {
LABEL_158:
      uint64_t v99 = 0;
      goto LABEL_129;
    }
    uint64_t v99 = (uint64_t)&v108[v110 + 1] + v108[v110 + 1];
LABEL_129:
    v190.n128_u64[0] = (unint64_t)v44 + v43;
    v190.n128_u64[1] = v45;
    uint64_t v191 = v100;
    uint64_t v192 = v99;
    unint64_t v193 = v33;
    unsigned int v30 = &sub_2E7FC8((char **)v186, (uint64_t)v30, &v190)[2].n128_i8[8];
    if (++v29 == v185)
    {
      long long v4 = v174;
      unsigned int v30 = (char *)v174[772];
      goto LABEL_179;
    }
  }
  sub_290F70((int **)&v190);
  __break(1u);
LABEL_265:
  uint64_t result = sub_2DBA70((int **)&v190);
  __break(1u);
  return result;
}

void sub_66C664(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  unsigned __int8 v5 = sub_682244(a2);
  if (v5)
  {
    uint64_t v6 = 0;
    uint64_t v7 = v5;
    do
    {
      int v10 = sub_6848BC(v4, v6);
      if (v6 && v10)
      {
        unsigned __int8 v8 = v6;
        while (1)
        {
          unsigned __int8 v11 = v8 - 1;
          if (v8 == 1) {
            break;
          }
          --v8;
          if ((sub_68492C(v4, v11) & 1) == 0) {
            goto LABEL_4;
          }
        }
        unsigned __int8 v8 = 0;
LABEL_4:
        uint64_t v9 = sub_686088(v4, v6);
        sub_686144(v4, v8, (char **)v9);
      }
      ++v6;
    }
    while (v6 != v7);
  }
  long long __p = 0;
  uint64_t v45 = 0;
  uint64_t v46 = 0;
  unsigned __int8 v12 = sub_682244(v4);
  if (v12)
  {
    uint64_t v13 = 0;
    uint64_t v41 = v12;
    uint64_t v42 = v4;
    while (1)
    {
      uint64_t v14 = sub_686088(v4, v13);
      uint64_t v43 = v13;
      uint64_t v45 = (unsigned __int8 *)__p;
      uint64_t v15 = v14[1];
      uint64_t v16 = v15 - *v14;
      if (v15 != *v14) {
        break;
      }
LABEL_54:
      uint64_t v4 = v42;
      sub_6860C8(v42, v43, (char **)&__p);
      uint64_t v13 = v43 + 1;
      if (v43 + 1 == v41) {
        goto LABEL_55;
      }
    }
    uint64_t v17 = 0;
    while (1)
    {
      unsigned __int8 v18 = sub_683624(a3, *(unsigned char *)(*v14 + v17));
      unsigned __int8 v19 = v18;
      if (v18 == 0xFF) {
        goto LABEL_17;
      }
      char v21 = (unsigned __int8 *)__p;
      std::string::size_type v20 = v45;
      uint64_t v22 = (unsigned __int8 *)__p;
      if (__p != v45)
      {
        while (*v22 != v18)
        {
          if (++v22 == v45)
          {
            uint64_t v22 = v45;
            break;
          }
        }
      }
      if (v22 != v45) {
        goto LABEL_17;
      }
      if (v45 >= v46)
      {
        unint64_t v24 = v45 - (unsigned char *)__p;
        uint64_t v25 = v45 - (unsigned char *)__p + 1;
        if (v25 < 0) {
          sub_2E00();
        }
        unint64_t v26 = v46 - (unsigned char *)__p;
        if (2 * (v46 - (unsigned char *)__p) > (unint64_t)v25) {
          uint64_t v25 = 2 * v26;
        }
        if (v26 >= 0x3FFFFFFFFFFFFFFFLL) {
          size_t v27 = 0x7FFFFFFFFFFFFFFFLL;
        }
        else {
          size_t v27 = v25;
        }
        if (v27)
        {
          long long v28 = operator new(v27);
          size_t v29 = &v28[v24];
          v28[v24] = v19;
          uint64_t v23 = (uint64_t)&v28[v24 + 1];
          if (v21 != v20) {
            goto LABEL_37;
          }
        }
        else
        {
          long long v28 = 0;
          size_t v29 = (char *)(v45 - (unsigned char *)__p);
          *(unsigned char *)unint64_t v24 = v19;
          uint64_t v23 = v24 + 1;
          if (v21 != v20)
          {
LABEL_37:
            if (v24 >= 8 && (unint64_t)(v21 - v28) >= 0x20)
            {
              if (v24 >= 0x20)
              {
                unint64_t v30 = v24 & 0xFFFFFFFFFFFFFFE0;
                uint64_t v31 = &v28[v24 - 16];
                uint64_t v32 = v20 - 16;
                unint64_t v33 = v24 & 0xFFFFFFFFFFFFFFE0;
                do
                {
                  long long v34 = *(_OWORD *)v32;
                  *(v31 - 1) = *((_OWORD *)v32 - 1);
                  *uint64_t v31 = v34;
                  v31 -= 2;
                  v32 -= 32;
                  v33 -= 32;
                }
                while (v33);
                if (v24 == v30) {
                  goto LABEL_52;
                }
                if ((v24 & 0x18) != 0) {
                  goto LABEL_45;
                }
                v29 -= v30;
                v20 -= v30;
              }
              else
              {
                unint64_t v30 = 0;
LABEL_45:
                v29 -= v24 & 0xFFFFFFFFFFFFFFF8;
                uint64_t v35 = &v28[&v20[-v30] - v21 - 8];
                unsigned int v36 = &v20[-v30 - 8];
                unint64_t v37 = v30 - (v24 & 0xFFFFFFFFFFFFFFF8);
                do
                {
                  uint64_t v38 = *(void *)v36;
                  v36 -= 8;
                  *v35-- = v38;
                  v37 += 8;
                }
                while (v37);
                v20 -= v24 & 0xFFFFFFFFFFFFFFF8;
                if (v24 == (v24 & 0xFFFFFFFFFFFFFFF8))
                {
LABEL_52:
                  char v21 = (unsigned __int8 *)__p;
                  long long __p = v28;
                  uint64_t v45 = (unsigned __int8 *)v23;
                  uint64_t v46 = &v28[v27];
                  if (!v21) {
                    goto LABEL_35;
                  }
LABEL_34:
                  operator delete(v21);
                  goto LABEL_35;
                }
              }
            }
            long long v39 = v29 - 1;
            do
            {
              char v40 = *--v20;
              *v39-- = v40;
            }
            while (v20 != v21);
            goto LABEL_52;
          }
        }
        long long __p = v29;
        uint64_t v45 = (unsigned __int8 *)v23;
        uint64_t v46 = &v28[v27];
        if (v21) {
          goto LABEL_34;
        }
      }
      else
      {
        unsigned __int8 *v45 = v18;
        uint64_t v23 = (uint64_t)(v20 + 1);
      }
LABEL_35:
      uint64_t v45 = (unsigned __int8 *)v23;
LABEL_17:
      if (++v17 == v16) {
        goto LABEL_54;
      }
    }
  }
LABEL_55:
  if (__p)
  {
    uint64_t v45 = (unsigned __int8 *)__p;
    operator delete(__p);
  }
}

void sub_66C9A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

unint64_t sub_66C9C8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v7 = a4 + 1;
  unsigned __int8 v8 = (int **)sub_46C8EC(a2, a4);
  unint64_t v9 = v7;
  if (v7 < sub_46C760(a2))
  {
    unint64_t v9 = v7;
    if (v7 <= *(void *)(a3 + 64))
    {
      unint64_t v10 = v7;
      while (1)
      {
        unsigned __int8 v11 = (void *)sub_46C8EC(a2, v10);
        unsigned __int8 v12 = (unsigned __int16 *)(*v11 - *(int *)*v11);
        if (*v12 < 0xBu) {
          break;
        }
        uint64_t v13 = v12[5];
        if (!v13 || (*(unsigned char *)(*v11 + v13 + 3) & 4) == 0) {
          break;
        }
        unint64_t v9 = v10 + 1;
        if (v10 + 1 < sub_46C760(a2) && v10++ < *(void *)(a3 + 64)) {
          continue;
        }
        goto LABEL_12;
      }
      unint64_t v9 = v10;
    }
  }
LABEL_12:
  sub_66F550(v8, (uint64_t *)(a1 + 6072));
  if (v9 >= sub_46C760(a2) || v9 > *(void *)(a3 + 64)) {
    return v7;
  }
  uint64_t v15 = sub_46C8EC(a2, v9);
  uint64_t v16 = *(void *)(a1 + 6072);
  uint64_t v17 = *(void *)(a1 + 6080);
  if (v16 != v17)
  {
    unint64_t v18 = *(void *)(v15 + 32);
    while (__PAIR64__(*(unsigned __int16 *)(v16 + 4), *(_DWORD *)v16) != __PAIR64__(WORD2(v18), v18)
         || (HIWORD(v18) & 1) == (*(unsigned char *)(v16 + 6) == 0))
    {
      v16 += 8;
      if (v16 == v17)
      {
        uint64_t v16 = *(void *)(a1 + 6080);
        break;
      }
    }
  }
  if (v16 == v17) {
    return v7;
  }
  return v9;
}

void sub_66CB50(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_6672BC((void *)(a3 + 1808), a4 - *(void *)(a3 + 40));
  uint64_t v8 = sub_46C8EC(a2, a4 + 1);
  if (!sub_68463C(v7) || sub_6861D0(v7)) {
    return;
  }
  int v9 = sub_682244(v7);
  uint64_t v10 = *a1;
  uint64_t v11 = *(void *)(v8 + 32);
  uint64_t v12 = v11 & 0xFF000000000000;
  uint64_t v13 = (int *)sub_2D5D58(v10, v11 & 0xFFFFFFFFFFFFLL);
  uint64_t v14 = (unsigned __int16 *)((char *)v13 - *v13);
  unsigned int v15 = *v14;
  if (!v12)
  {
    if (v15 < 0x27)
    {
      if (v9) {
        return;
      }
      goto LABEL_13;
    }
    unsigned int v16 = v14[19];
    if (!v16) {
      goto LABEL_12;
    }
LABEL_9:
    if (*(int *)((char *)v13 + v16 + *(int *)((char *)v13 + v16)) != v9) {
      return;
    }
    goto LABEL_13;
  }
  if (v15 < 0x29)
  {
    unsigned int v16 = 0;
    goto LABEL_12;
  }
  unsigned int v16 = v14[20];
  if (v16) {
    goto LABEL_9;
  }
LABEL_12:
  if (v16 != v9) {
    return;
  }
LABEL_13:
  unsigned __int8 v17 = sub_682244(v7);
  if (v17)
  {
    uint64_t v18 = 0;
    uint64_t v19 = v17;
    do
    {
      std::string::size_type v20 = operator new(1uLL);
      long long __p = v20;
      *std::string::size_type v20 = v18;
      uint64_t v22 = v20 + 1;
      uint64_t v23 = v20 + 1;
      sub_6860C8(v7, v18, (char **)&__p);
      if (__p)
      {
        uint64_t v22 = __p;
        operator delete(__p);
      }
      ++v18;
    }
    while (v19 != v18);
  }
}

void sub_66CCAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_66CCC8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = sub_6672BC(a3 + 226, a3[8] - a3[5]);
  sub_46C8EC(a2, a3[8]);
  sub_66D360();
  sub_6866AC(v5);
  sub_66D598();
  sub_682244(v5);
}

void sub_66CE98(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_36094((void **)va);
  _Unwind_Resume(a1);
}

void sub_66CEAC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_36094((void **)va);
  _Unwind_Resume(a1);
}

void sub_66CEC0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_36094((void **)va);
  _Unwind_Resume(a1);
}

void sub_66CED4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_36094((void **)va);
  _Unwind_Resume(a1);
}

void sub_66CEE8(uint64_t a1, void *a2, void *a3)
{
  sub_46C8EC(a2, a3[8]);
  uint64_t v4 = sub_6672BC(a3 + 226, a3[8] - a3[5]);
  sub_6866AC(v4);
  sub_66D360();
  sub_66D598();
}

void sub_66D184(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12)
{
  if (__p) {
    operator delete(__p);
  }
  sub_36094(&a12);
  _Unwind_Resume(a1);
}

void sub_66D200(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6 = sub_6672BC(a3 + 226, a3[8] - a3[5]);
  long long __p = 0;
  unsigned __int8 v17 = 0;
  uint64_t v18 = 0;
  sub_66DC30(a1, a2, (uint64_t)a3, (uint64_t)&__p);
  uint64_t v7 = (char **)__p;
  if (__p != v17)
  {
    int v8 = sub_682244(v6);
    unsigned __int8 v9 = sub_66DADC(0xAAAAAAAAAAAAAAABLL * (((char *)v17 - (unsigned char *)__p) >> 3));
    sub_684EE8(v6, v9);
    uint64_t v7 = (char **)__p;
    uint64_t v10 = v17;
    if (__p != v17)
    {
      do
      {
        sub_6838C8(v6, v8++, v7);
        v7 += 3;
      }
      while (v7 != v10);
      uint64_t v7 = (char **)__p;
    }
  }
  if (v7)
  {
    uint64_t v11 = v17;
    uint64_t v12 = v7;
    if (v17 != v7)
    {
      uint64_t v13 = v17;
      do
      {
        unsigned int v15 = *(v13 - 3);
        v13 -= 3;
        uint64_t v14 = v15;
        if (v15)
        {
          *(v11 - 2) = v14;
          operator delete(v14);
        }
        uint64_t v11 = v13;
      }
      while (v13 != v7);
      uint64_t v12 = __p;
    }
    unsigned __int8 v17 = v7;
    operator delete(v12);
  }
}

void sub_66D324(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_36094((void **)va);
  _Unwind_Resume(a1);
}

void sub_66D338(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_36094((void **)va);
  _Unwind_Resume(a1);
}

void sub_66D34C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_36094((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_66D360()
{
  uint64_t v0 = __chkstk_darwin();
  unint64_t v2 = (void *)v1;
  uint64_t v4 = v3;
  uint64_t v5 = (uint64_t *)v0;
  sub_5964A0((uint64_t)v14, v1);
  sub_650C94((uint64_t)v16);
  bzero(v15, 0x960uLL);
  sub_66FA68((uint64_t)v15);
  sub_668FF4(v5, v4, v14, v16, (uint64_t)v15);
  sub_575E00((uint64_t)v15);
  sub_5752F4((uint64_t)v16);
  if (sub_684790((uint64_t)v14) && (unsigned __int8 v6 = sub_682244((uint64_t)v2)) != 0)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = v6;
    do
    {
      uint64_t v10 = sub_686088((uint64_t)v2, v7);
      if (*v10 != v10[1])
      {
        unsigned __int8 v11 = sub_683624(v2, v7);
        if (v11 != 0xFF && sub_682244((uint64_t)v14) > v11)
        {
          uint64_t v12 = sub_6838A0((uint64_t)v14, v11);
          if (v12[1] - *v12 <= 1uLL) {
            uint64_t v8 = v8;
          }
          else {
            uint64_t v8 = (v8 + 1);
          }
        }
      }
      ++v7;
    }
    while (v9 != v7);
  }
  else
  {
    uint64_t v8 = 0;
  }
  sub_576848((uint64_t)v14);
  return v8;
}

void sub_66D4F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_66D504(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_66D518(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51)
{
}

void sub_66D53C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_66D558(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_66D570(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_66D584(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_66D598()
{
  uint64_t v0 = __chkstk_darwin();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  unsigned __int8 v6 = v5;
  uint64_t v7 = (uint64_t *)v0;
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  if (v8 != *v1)
  {
    uint64_t v10 = v1[1];
    do
    {
      uint64_t v12 = (void *)*((void *)v10 - 3);
      v10 -= 24;
      unsigned __int8 v11 = v12;
      if (v12)
      {
        *((void *)v8 - 2) = v11;
        operator delete(v11);
      }
      uint64_t v8 = v10;
    }
    while (v10 != v9);
  }
  v2[1] = v9;
  uint64_t v13 = sub_46C8EC(v6, v4);
  sub_66E9E0(v7, v13, (uint64_t)&v52);
  if (!v56 || !v52 || !v53) {
    return;
  }
  uint64_t v14 = (unsigned __int16 *)((char *)v52 - *v52);
  if (*v14 >= 9u && (uint64_t v15 = v14[4]) != 0) {
    uint64_t v16 = *(unsigned int *)((char *)v52 + v15);
  }
  else {
    uint64_t v16 = 0;
  }
  sub_68206C((uint64_t)v51);
  while (v16 <= *(void *)(v7[752] + 1576))
  {
    sub_6A48E0((uint64_t)(v7 + 1), (uint64_t)&v52, 0, (uint64_t **)&v49);
    unsigned __int8 v17 = *v49;
    uint64_t v18 = (uint64_t)v49[1];
    uint64_t v19 = *v49;
    if (*v49 != (uint64_t *)v18)
    {
      uint64_t v19 = *v49;
      while (1)
      {
        if (*((unsigned char *)v19 + 185))
        {
          int v20 = *((_DWORD *)v19 + 6);
          if (v20 != 3 && v20 != 0) {
            break;
          }
        }
        v19 += 24;
        if (v19 == (uint64_t *)v18) {
          goto LABEL_27;
        }
      }
    }
    if (v19 == (uint64_t *)v18)
    {
LABEL_27:
      if (v17 != (uint64_t *)v18)
      {
        while (1)
        {
          if (*((unsigned char *)v17 + 185))
          {
            int v24 = *((_DWORD *)v17 + 6);
            if (!v24 || v24 == 3) {
              break;
            }
          }
          v17 += 24;
          if (v17 == (uint64_t *)v18) {
            goto LABEL_42;
          }
        }
      }
      if (v17 != (uint64_t *)v18)
      {
        uint64_t v27 = *v17;
        uint64_t v26 = v17[1];
        if (v27 != v26)
        {
          uint64_t v28 = *v7;
          uint64_t v29 = *(void *)(v26 - 8);
          unint64_t v30 = (int *)sub_2D5D58(*v7, v29 & 0xFFFFFFFFFFFFLL);
          if (*(unsigned char *)(v28 + 7772))
          {
            uint64_t v31 = sub_2DB8E0(v28 + 3896, v29, 0);
            uint64_t v32 = &v31[-*(int *)v31];
            if (*(unsigned __int16 *)v32 < 5u)
            {
              uint64_t v33 = 0;
            }
            else
            {
              uint64_t v33 = *((unsigned __int16 *)v32 + 2);
              if (v33) {
                v33 += (uint64_t)&v31[*(unsigned int *)&v31[v33]];
              }
            }
            uint64_t v34 = v33 + 4 * WORD2(v29) + 4 + *(unsigned int *)(v33 + 4 * WORD2(v29) + 4);
          }
          else
          {
            uint64_t v34 = 0;
          }
          uint64_t v35 = sub_2E5C38(v28, v29 & 0xFFFFFFFFFFFFLL, 1);
          uint64_t v52 = v30;
          uint64_t v53 = v34;
          uint64_t v54 = v35;
          uint64_t v55 = v36;
          int v56 = v29;
          __int16 v57 = WORD2(v29);
          BOOL v58 = (v29 & 0xFF000000000000) != 0;
          unint64_t v37 = (unsigned __int16 *)((char *)v30 - *v30);
          if (*v37 < 9u)
          {
            uint64_t v38 = 0;
          }
          else
          {
            uint64_t v38 = v37[4];
            if (v38) {
              uint64_t v38 = *(unsigned int *)((char *)v30 + v38);
            }
          }
          v16 += v38;
          char v22 = 1;
          uint64_t v23 = v50;
          if (!v50) {
            goto LABEL_14;
          }
LABEL_52:
          if (!atomic_fetch_add(&v23->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
            std::__shared_weak_count::__release_weak(v23);
          }
          goto LABEL_14;
        }
      }
LABEL_42:
      char v22 = 0;
      uint64_t v23 = v50;
      if (v50) {
        goto LABEL_52;
      }
    }
    else
    {
      sub_6674FC(v7, &v52, v51);
      sub_686440((uint64_t)v51);
      sub_650C94((uint64_t)v60);
      bzero(v59, 0x960uLL);
      sub_66FA68((uint64_t)v59);
      sub_668FF4(v7, &v52, v51, v60, (uint64_t)v59);
      sub_575E00((uint64_t)v59);
      sub_5752F4((uint64_t)v60);
      char v22 = 0;
      uint64_t v23 = v50;
      if (v50) {
        goto LABEL_52;
      }
    }
LABEL_14:
    if ((v22 & 1) == 0) {
      break;
    }
  }
  if (sub_684790((uint64_t)v51))
  {
    unsigned __int8 v39 = sub_682244((uint64_t)v51);
    if (v39)
    {
      uint64_t v40 = 0;
      uint64_t v41 = v39;
      do
      {
        while (1)
        {
          uint64_t v42 = (const void **)sub_6838A0((uint64_t)v51, v40);
          uint64_t v43 = v2[1];
          if (v43 < v2[2]) {
            break;
          }
          v2[1] = sub_670644(v2, (uint64_t)v42);
          if (v41 == ++v40) {
            goto LABEL_63;
          }
        }
        *(void *)uint64_t v43 = 0;
        *((void *)v43 + 1) = 0;
        *((void *)v43 + 2) = 0;
        uint64_t v45 = *v42;
        unsigned int v44 = v42[1];
        size_t v46 = v44 - (unsigned char *)*v42;
        if (v44 != *v42)
        {
          if ((v46 & 0x8000000000000000) != 0) {
            sub_2E00();
          }
          unsigned int v47 = (char *)operator new(v44 - (unsigned char *)*v42);
          *(void *)uint64_t v43 = v47;
          *((void *)v43 + 1) = v47;
          unint64_t v48 = &v47[v46];
          *((void *)v43 + 2) = &v47[v46];
          memcpy(v47, v45, v46);
          *((void *)v43 + 1) = v48;
        }
        v2[1] = v43 + 24;
        v2[1] = v43 + 24;
        ++v40;
      }
      while (v41 != v40);
    }
  }
LABEL_63:
  sub_576848((uint64_t)v51);
}

void sub_66DA04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_576848((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_66DA18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_576848((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_66DA30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  unsigned __int8 v6 = *(void **)v4;
  if (*(void *)v4)
  {
    *(void *)(v4 + 8) = v6;
    operator delete(v6);
  }
  *(void *)(v3 + 8) = v4;
  sub_576848((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_66DA5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58)
{
}

void sub_66DA90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
}

void sub_66DAB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_576848((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_66DAC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_576848((uint64_t)va);
  _Unwind_Resume(a1);
}

unint64_t sub_66DADC(unint64_t result)
{
  unint64_t v1 = result;
  if (result >= 0x100)
  {
    exception = __cxa_allocate_exception(0x40uLL);
    std::to_string(&v8, v1);
    uint64_t v3 = std::string::insert(&v8, 0, "narrowing ");
    long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
    v9.__r_.__value_.__r.__words[2] = v3->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v9.__r_.__value_.__l.__data_ = v4;
    v3->__r_.__value_.__l.__size_ = 0;
    v3->__r_.__value_.__r.__words[2] = 0;
    v3->__r_.__value_.__r.__words[0] = 0;
    uint64_t v5 = std::string::append(&v9, " failed");
    long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
    std::string::size_type v11 = v5->__r_.__value_.__r.__words[2];
    long long v10 = v6;
    v5->__r_.__value_.__l.__size_ = 0;
    v5->__r_.__value_.__r.__words[2] = 0;
    v5->__r_.__value_.__r.__words[0] = 0;
    uint64_t v7 = (void *)sub_2F404((uint64_t)exception, &v10);
  }
  return result;
}

void sub_66DBB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(a1);
}

void sub_66DC30(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  std::string v9 = *(char **)a4;
  std::string v8 = *(char **)(a4 + 8);
  if (v8 != *(char **)a4)
  {
    long long v10 = *(char **)(a4 + 8);
    do
    {
      uint64_t v12 = (void *)*((void *)v10 - 3);
      v10 -= 24;
      std::string::size_type v11 = v12;
      if (v12)
      {
        *((void *)v8 - 2) = v11;
        operator delete(v11);
      }
      std::string v8 = v10;
    }
    while (v10 != v9);
  }
  *(void *)(a4 + 8) = v9;
  unint64_t v13 = *(void *)(a3 + 64);
  uint64_t v14 = (char *)(a3 + 329);
  if (!*(unsigned char *)(a3 + 330)) {
    uint64_t v14 = (char *)a2 + 1057;
  }
  if (v13 != *(void *)(a3 + 40))
  {
    char v61 = *v14;
    uint64_t v15 = sub_46C8EC(a2, v13);
    uint64_t v16 = *(void *)(v15 + 32);
    long long v17 = *(_OWORD *)(v15 + 16);
    long long v65 = *(_OWORD *)v15;
    long long v66 = v17;
    uint64_t v67 = v16;
    uint64_t v18 = sub_46CCC8(a2, v13, *(double *)&v17);
    __int16 v64 = 0;
    int v19 = v13 - 1;
    int v20 = *(_DWORD *)(a3 + 40);
    if (v20 - 1 < (int)v13 - 1) {
      int v19 = v20 - 1;
    }
    if ((int)v13 > v20)
    {
      uint64_t v21 = v18;
      unint64_t v22 = (int)v13 - 1;
      uint64_t v23 = (v13 << 32) - 0x100000000;
      int v24 = v19 - v13 + 1;
      while (1)
      {
        uint64_t v25 = sub_46C8EC(a2, v22);
        uint64_t v26 = *(void *)(v25 + 32);
        long long v27 = *(_OWORD *)(v25 + 16);
        long long v65 = *(_OWORD *)v25;
        long long v66 = v27;
        uint64_t v67 = v26;
        if (v21 > *(void *)(*(void *)(a1 + 6016) + 1576) || (sub_663238(a1 + 3056, (int **)&v65) & 1) != 0) {
          return;
        }
        unint64_t v28 = sub_66E37C(a1, (uint64_t)&v65, (char *)&v64 + 1, (char *)&v64);
        if (v28) {
          break;
        }
        v21 += sub_46CCC8(a2, v22--, v29);
        v23 -= 0x100000000;
        if (__CFADD__(v24++, 1)) {
          return;
        }
      }
      uint64_t v31 = sub_6672BC((void *)(a3 + 1808), (v23 >> 32) - *(void *)(a3 + 40));
      if (v61 == 1) {
        char v32 = 4;
      }
      else {
        char v32 = 3;
      }
      uint64_t v33 = (unsigned __int16 *)(v65 - *(int *)v65);
      unsigned int v34 = *v33;
      if (BYTE6(v67))
      {
        if (v34 < 0x29 || (unsigned int v35 = v33[20]) == 0)
        {
LABEL_42:
          sub_6835F0(v31, 1);
          return;
        }
      }
      else
      {
        if (v34 < 0x27) {
          goto LABEL_42;
        }
        unsigned int v35 = v33[19];
        if (!v35) {
          goto LABEL_42;
        }
      }
      uint64_t v36 = v35;
      unint64_t v37 = (unsigned int *)(v65 + v35);
      uint64_t v38 = *v37;
      unsigned __int8 v39 = (unsigned int *)((char *)v37 + v38);
      unsigned int v42 = *v39;
      uint64_t v40 = v39 + 1;
      uint64_t v41 = v42;
      if (v42)
      {
        int v43 = 0;
        unsigned int v44 = &v40[v41];
        uint64_t v45 = v36 + v38 + v65 + 8;
        do
        {
          uint64_t v47 = *v40;
          unint64_t v48 = (unsigned __int16 *)((char *)v40 + v47 - *(int *)((char *)v40 + v47));
          if (*v48 >= 0xDu)
          {
            uint64_t v49 = v48[6];
            if (v48[6])
            {
              uint64_t v50 = (unsigned int *)((char *)v40 + v47 + v49);
              uint64_t v51 = *v50;
              uint64_t v52 = *(unsigned int *)((char *)v50 + v51);
              if (v52)
              {
                uint64_t v53 = 0;
                uint64_t v54 = 4 * v52;
                uint64_t v55 = v45 + v49 + v47 + v51;
                while (1)
                {
                  uint64_t v56 = *(void *)(v55
                                  + v53
                                  + *(unsigned int *)(v55 + v53)
                                  + (unint64_t)*(unsigned __int16 *)(v55
                                                                          + v53
                                                                          + *(unsigned int *)(v55 + v53)
                                                                          - (uint64_t)*(int *)(v55
                                                                                            + v53
                                                                                            + *(unsigned int *)(v55 + v53))
                                                                          + 4));
                  if ((v28 & 0xFFFFFFFFFFFFLL) == (v56 & 0xFFFFFFFFFFFFLL)
                    && ((v28 & 0xFF000000000000) != 0) != ((v56 & 0xFF000000000000) != 0))
                  {
                    break;
                  }
                  v53 += 4;
                  if (v54 == v53) {
                    goto LABEL_30;
                  }
                }
                int v46 = 1;
              }
              else
              {
LABEL_30:
                int v46 = 0;
              }
              v43 += v46;
            }
          }
          ++v40;
          v45 += 4;
        }
        while (v40 != v44);
        for (; v43; --v43)
        {
          __int16 v57 = operator new(1uLL);
          __p[0] = v57;
          unsigned char *v57 = v32;
          __p[1] = v57 + 1;
          size_t v63 = v57 + 1;
          BOOL v58 = *(void **)(a4 + 8);
          if ((unint64_t)v58 < *(void *)(a4 + 16))
          {
            void *v58 = 0;
            v58[1] = 0;
            v58[2] = 0;
            *(_OWORD *)BOOL v58 = *(_OWORD *)__p;
            v58[2] = v63;
            *(void *)(a4 + 8) = v58 + 3;
          }
          else
          {
            unint64_t v59 = sub_4D088((char **)a4, (uint64_t)__p);
            unint64_t v60 = __p[0];
            *(void *)(a4 + 8) = v59;
            if (v60)
            {
              __p[1] = v60;
              operator delete(v60);
            }
          }
        }
      }
      goto LABEL_42;
    }
  }
}

void sub_66DFB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

char *sub_66DFCC(char **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = (char **)a3;
  long long v6 = *a1;
  unint64_t v5 = (unint64_t)a1[1];
  uint64_t v7 = (a2 - (uint64_t)*a1) / 24;
  std::string v8 = &(*a1)[24 * v7];
  unint64_t v9 = (unint64_t)a1[2];
  if (v5 >= v9)
  {
    unint64_t v14 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - (void)v6) >> 3) + 1;
    if (v14 > 0xAAAAAAAAAAAAAAALL) {
      sub_2E00();
    }
    unint64_t v15 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v9 - (void)v6) >> 3);
    if (2 * v15 > v14) {
      unint64_t v14 = 2 * v15;
    }
    if (v15 >= 0x555555555555555) {
      unint64_t v16 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v16 = v14;
    }
    unsigned int v42 = a1 + 2;
    if (v16)
    {
      if (v16 > 0xAAAAAAAAAAAAAAALL) {
        sub_188D718();
      }
      long long v17 = (char *)operator new(24 * v16);
    }
    else
    {
      long long v17 = 0;
    }
    uint64_t v38 = v17;
    unsigned __int8 v39 = &v17[24 * v7];
    uint64_t v40 = v39;
    uint64_t v41 = &v17[24 * v16];
    sub_6703D4(&v38, (uint64_t)v3);
    uint64_t v23 = v39;
    int v24 = *a1;
    uint64_t v25 = v39;
    if (*a1 != v8)
    {
      uint64_t v25 = v39;
      uint64_t v26 = v8;
      do
      {
        *((void *)v25 - 3) = 0;
        *((void *)v25 - 2) = 0;
        v25 -= 24;
        *((void *)v25 + 2) = 0;
        long long v27 = *(_OWORD *)(v26 - 24);
        v26 -= 24;
        *(_OWORD *)uint64_t v25 = v27;
        *((void *)v25 + 2) = *((void *)v26 + 2);
        *(void *)uint64_t v26 = 0;
        *((void *)v26 + 1) = 0;
        *((void *)v26 + 2) = 0;
      }
      while (v26 != v24);
    }
    unsigned __int8 v39 = v25;
    unint64_t v28 = a1[1];
    double v29 = v40;
    if (v28 != v8)
    {
      do
      {
        *(void *)double v29 = 0;
        *((void *)v29 + 1) = 0;
        *((void *)v29 + 2) = 0;
        *(_OWORD *)double v29 = *(_OWORD *)v8;
        *((void *)v29 + 2) = *((void *)v8 + 2);
        *(void *)std::string v8 = 0;
        *((void *)v8 + 1) = 0;
        *((void *)v8 + 2) = 0;
        v29 += 24;
        v8 += 24;
      }
      while (v8 != v28);
      uint64_t v25 = v39;
      std::string v8 = a1[1];
    }
    unint64_t v30 = *a1;
    *a1 = v25;
    a1[1] = v29;
    uint64_t v31 = a1[2];
    a1[2] = v41;
    uint64_t v40 = v8;
    uint64_t v41 = v31;
    uint64_t v38 = v30;
    unsigned __int8 v39 = v30;
    if (v8 == v30)
    {
      if (!v8) {
        return v23;
      }
    }
    else
    {
      do
      {
        while (1)
        {
          uint64_t v33 = v8 - 24;
          char v32 = (void *)*((void *)v8 - 3);
          uint64_t v40 = v8 - 24;
          if (v32) {
            break;
          }
          v8 -= 24;
          if (v33 == v30) {
            goto LABEL_35;
          }
        }
        *((void *)v8 - 2) = v32;
        operator delete(v32);
        std::string v8 = v40;
      }
      while (v40 != v30);
LABEL_35:
      std::string v8 = v38;
      if (!v38) {
        return v23;
      }
    }
    operator delete(v8);
    return v23;
  }
  if (v8 != (char *)v5)
  {
    long long v10 = v8 + 24;
    unint64_t v11 = v5 - 24;
    if (v5 < 0x18)
    {
      a1[1] = (char *)v5;
      if ((char *)v5 == v10)
      {
LABEL_42:
        if (v8 <= (char *)v3) {
          v3 += 3 * (a1[1] > (char *)v3);
        }
        if (v8 != (char *)v3) {
          sub_34E73C(v8, *v3, v3[1], v3[1] - *v3);
        }
        return v8;
      }
    }
    else
    {
      unint64_t v12 = v5 - 24;
      unint64_t v13 = a1[1];
      do
      {
        *(void *)unint64_t v13 = 0;
        *((void *)v13 + 1) = 0;
        *((void *)v13 + 2) = 0;
        *(_OWORD *)unint64_t v13 = *(_OWORD *)v12;
        *((void *)v13 + 2) = *(void *)(v12 + 16);
        *(void *)unint64_t v12 = 0;
        *(void *)(v12 + 8) = 0;
        *(void *)(v12 + 16) = 0;
        v13 += 24;
        v12 += 24;
      }
      while (v12 < v5);
      a1[1] = v13;
      if ((char *)v5 == v10) {
        goto LABEL_42;
      }
    }
    uint64_t v34 = 8 * ((uint64_t)(v5 - (void)v10) >> 3);
    do
    {
      uint64_t v36 = *(void **)v11;
      if (*(void *)v11)
      {
        *(void *)(v11 + 8) = v36;
        operator delete(v36);
        *(void *)unint64_t v11 = 0;
        *(void *)(v11 + 8) = 0;
        *(void *)(v11 + 16) = 0;
      }
      uint64_t v35 = (uint64_t)&v8[v34 - 24];
      *(_OWORD *)unint64_t v11 = *(_OWORD *)v35;
      *(void *)(v11 + 16) = *(void *)&v8[v34 - 8];
      *(void *)uint64_t v35 = 0;
      *(void *)(v35 + 8) = 0;
      *(void *)(v35 + 16) = 0;
      v11 -= 24;
      v34 -= 24;
    }
    while (v34);
    goto LABEL_42;
  }
  *(void *)std::string v8 = 0;
  *((void *)v8 + 1) = 0;
  *((void *)v8 + 2) = 0;
  int v19 = *(char **)a3;
  uint64_t v18 = *(void *)(a3 + 8);
  size_t v20 = v18 - *(void *)a3;
  if (v20)
  {
    if ((v20 & 0x8000000000000000) != 0) {
      sub_2E00();
    }
    uint64_t v21 = (char *)operator new(v18 - *(void *)a3);
    *(void *)std::string v8 = v21;
    *((void *)v8 + 1) = v21;
    unint64_t v22 = &v21[v20];
    *((void *)v8 + 2) = &v21[v20];
    memcpy(v21, v19, v20);
    *((void *)v8 + 1) = v22;
  }
  a1[1] = v8 + 24;
  return v8;
}

void sub_66E348(_Unwind_Exception *exception_object)
{
  long long v4 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v4;
    operator delete(v4);
  }
  *(void *)(v2 + 8) = v1;
  _Unwind_Resume(exception_object);
}

void sub_66E368(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2A6E80((uint64_t)va);
  _Unwind_Resume(a1);
}

unint64_t sub_66E37C(uint64_t a1, uint64_t a2, char *a3, char *a4)
{
  sub_6A48E0(a1 + 8, a2, 0, &v75);
  uint64_t v7 = *v75;
  uint64_t v8 = v75[1];
  if (*v75 == v8)
  {
LABEL_72:
    uint64_t v70 = 0;
    LODWORD(v34) = 0;
    unint64_t v71 = 0;
    uint64_t v72 = 0x1000000000000;
    unint64_t v73 = v76;
    if (!v76) {
      return v71 | v72 | v70 | v34;
    }
LABEL_73:
    if (!atomic_fetch_add(&v73->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
      std::__shared_weak_count::__release_weak(v73);
    }
    return v71 | v72 | v70 | v34;
  }
  int v9 = *(unsigned __int8 *)(a2 + 38);
  long long v10 = *(int **)a2;
  uint64_t v11 = *(void *)a2 + 8;
  while (!*(unsigned char *)(v7 + 185) || *(unsigned char *)(v7 + 186) != 0)
  {
LABEL_10:
    v7 += 192;
    if (v7 == v8) {
      goto LABEL_72;
    }
  }
  int v16 = *(_DWORD *)(v7 + 24);
  char v13 = 1;
  switch(v16)
  {
    case 2:
    case 21:
    case 28:
    case 30:
    case 34:
    case 61:
    case 63:
    case 66:
      int v17 = v16 - 1;
      goto LABEL_18;
    default:
      char v13 = 0;
      int v17 = v16 - 1;
      if ((v16 - 1) <= 0x40)
      {
LABEL_18:
        int v18 = 1;
        switch(v17)
        {
          case 0:
          case 19:
          case 26:
          case 28:
          case 32:
          case 59:
          case 61:
          case 64:
            if (*(void *)(v7 + 152) != -1) {
              goto LABEL_20;
            }
            goto LABEL_3;
          default:
            break;
        }
      }
      int v18 = 0;
      if (*(void *)(v7 + 152) == -1)
      {
LABEL_3:
        int v12 = *a3;
        goto LABEL_4;
      }
LABEL_20:
      int v12 = *a3;
      if (*(void *)(v7 + 160) == 0x7FFFFFFFFFFFFFFFLL) {
        goto LABEL_4;
      }
      char v19 = *a3 ? 0 : v13;
      if ((v19 & 1) == 0)
      {
        int v20 = *a4 ? 0 : v18;
        if (v20 != 1) {
          goto LABEL_4;
        }
      }
      unint64_t v22 = *(uint64_t **)v7;
      uint64_t v21 = *(uint64_t **)(v7 + 8);
      if (*(uint64_t **)v7 == v21) {
        goto LABEL_4;
      }
      uint64_t v23 = (unsigned __int16 *)((char *)v10 - *v10);
      unsigned int v24 = *v23;
      if (v9)
      {
        if (v24 >= 0x29)
        {
          uint64_t v25 = v23[20];
          if (v23[20])
          {
            uint64_t v26 = *(unsigned int *)((char *)v10 + v25);
            long long v27 = (unsigned int *)((char *)v10 + v25 + v26);
            unsigned int v30 = *v27;
            unint64_t v28 = v27 + 1;
            uint64_t v29 = v30;
            if (v30)
            {
              uint64_t v31 = &v28[v29];
              uint64_t v32 = v11 + v25 + v26;
              while (1)
              {
                int v33 = 0;
                uint64_t v34 = *v22;
                uint64_t v35 = v32;
                uint64_t v36 = v28;
                do
                {
                  uint64_t v38 = *v36;
                  unsigned __int8 v39 = (unsigned __int16 *)((char *)v36 + v38 - *(int *)((char *)v36 + v38));
                  if (*v39 >= 0xDu)
                  {
                    uint64_t v40 = v39[6];
                    if (v39[6])
                    {
                      uint64_t v41 = (unsigned int *)((char *)v36 + v38 + v40);
                      uint64_t v42 = *v41;
                      uint64_t v43 = *(unsigned int *)((char *)v41 + v42);
                      if (v43)
                      {
                        uint64_t v44 = 0;
                        uint64_t v45 = 4 * v43;
                        uint64_t v46 = v35 + v40 + v38 + v42;
                        while (1)
                        {
                          uint64_t v47 = *(void *)(v46
                                          + v44
                                          + *(unsigned int *)(v46 + v44)
                                          + (unint64_t)*(unsigned __int16 *)(v46
                                                                                  + v44
                                                                                  + *(unsigned int *)(v46 + v44)
                                                                                  - (uint64_t)*(int *)(v46 + v44 + *(unsigned int *)(v46 + v44))
                                                                                  + 4));
                          if ((v34 & 0xFFFFFFFFFFFFLL) == (v47 & 0xFFFFFFFFFFFFLL)
                            && ((*v22 & 0xFF000000000000) != 0) != ((v47 & 0xFF000000000000) != 0))
                          {
                            break;
                          }
                          v44 += 4;
                          if (v45 == v44) {
                            goto LABEL_36;
                          }
                        }
                        int v37 = 1;
                      }
                      else
                      {
LABEL_36:
                        int v37 = 0;
                      }
                      v33 += v37;
                    }
                  }
                  ++v36;
                  v35 += 4;
                }
                while (v36 != v31);
                if (v33) {
                  goto LABEL_76;
                }
                if (++v22 == v21) {
                  goto LABEL_4;
                }
              }
            }
          }
        }
        goto LABEL_4;
      }
      if (v24 < 0x27
        || (uint64_t v48 = v23[19]) == 0
        || (uint64_t v49 = *(unsigned int *)((char *)v10 + v48),
            uint64_t v50 = (unsigned int *)((char *)v10 + v48 + v49),
            unsigned int v53 = *v50,
            uint64_t v51 = v50 + 1,
            (uint64_t v52 = v53) == 0))
      {
LABEL_4:
        if (v12) {
          char v13 = 1;
        }
        *a3 = v13;
        if (*a4) {
          char v14 = 1;
        }
        else {
          char v14 = v18;
        }
        *a4 = v14;
        goto LABEL_10;
      }
      uint64_t v54 = &v51[v52];
      uint64_t v55 = v11 + v48 + v49;
      while (1)
      {
        int v56 = 0;
        uint64_t v34 = *v22;
        uint64_t v57 = v55;
        BOOL v58 = v51;
        do
        {
          uint64_t v60 = *v58;
          char v61 = (unsigned __int16 *)((char *)v58 + v60 - *(int *)((char *)v58 + v60));
          if (*v61 >= 0xDu)
          {
            uint64_t v62 = v61[6];
            if (v61[6])
            {
              size_t v63 = (unsigned int *)((char *)v58 + v60 + v62);
              uint64_t v64 = *v63;
              uint64_t v65 = *(unsigned int *)((char *)v63 + v64);
              if (v65)
              {
                uint64_t v66 = 0;
                uint64_t v67 = 4 * v65;
                uint64_t v68 = v57 + v62 + v60 + v64;
                while (1)
                {
                  uint64_t v69 = *(void *)(v68
                                  + v66
                                  + *(unsigned int *)(v68 + v66)
                                  + (unint64_t)*(unsigned __int16 *)(v68
                                                                          + v66
                                                                          + *(unsigned int *)(v68 + v66)
                                                                          - (uint64_t)*(int *)(v68
                                                                                            + v66
                                                                                            + *(unsigned int *)(v68 + v66))
                                                                          + 4));
                  if ((v34 & 0xFFFFFFFFFFFFLL) == (v69 & 0xFFFFFFFFFFFFLL)
                    && ((*v22 & 0xFF000000000000) != 0) != ((v69 & 0xFF000000000000) != 0))
                  {
                    break;
                  }
                  v66 += 4;
                  if (v67 == v66) {
                    goto LABEL_58;
                  }
                }
                int v59 = 1;
              }
              else
              {
LABEL_58:
                int v59 = 0;
              }
              v56 += v59;
            }
          }
          ++v58;
          v57 += 4;
        }
        while (v58 != v54);
        if (v56) {
          break;
        }
        if (++v22 == v21) {
          goto LABEL_4;
        }
      }
LABEL_76:
      unint64_t v71 = v34 & 0xFF00000000000000;
      uint64_t v72 = v34 & 0xFF000000000000;
      uint64_t v70 = v34 & 0xFFFF00000000;
      unint64_t v73 = v76;
      if (v76) {
        goto LABEL_73;
      }
      return v71 | v72 | v70 | v34;
  }
}

void sub_66E9E0(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_6A48E0((uint64_t)(a1 + 1), a2, 0, (uint64_t **)&v21);
  unint64_t v5 = *v21;
  uint64_t v6 = (uint64_t)v21[1];
  if (*v21 != (uint64_t *)v6)
  {
    while (1)
    {
      if (*((unsigned char *)v5 + 185))
      {
        int v7 = *((_DWORD *)v5 + 6);
        if (!v7 || v7 == 3) {
          break;
        }
      }
      v5 += 24;
      if (v5 == (uint64_t *)v6) {
        goto LABEL_16;
      }
    }
  }
  if (v5 == (uint64_t *)v6 || (uint64_t v10 = *v5, v9 = v5[1], v10 == v9))
  {
LABEL_16:
    *(_DWORD *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_WORD *)(a3 + 36) = -1;
    *(unsigned char *)(a3 + 38) = 0;
    int v17 = v22;
    if (!v22) {
      return;
    }
    goto LABEL_22;
  }
  uint64_t v11 = *a1;
  uint64_t v12 = *(void *)(v9 - 8);
  uint64_t v13 = sub_2D5D58(*a1, v12 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v11 + 7772))
  {
    char v14 = sub_2DB8E0(v11 + 3896, v12, 0);
    unint64_t v15 = &v14[-*(int *)v14];
    if (*(unsigned __int16 *)v15 < 5u)
    {
      uint64_t v16 = 0;
    }
    else
    {
      uint64_t v16 = *((unsigned __int16 *)v15 + 2);
      if (v16) {
        v16 += (uint64_t)&v14[*(unsigned int *)&v14[v16]];
      }
    }
    uint64_t v18 = v16 + 4 * WORD2(v12) + 4 + *(unsigned int *)(v16 + 4 * WORD2(v12) + 4);
  }
  else
  {
    uint64_t v18 = 0;
  }
  uint64_t v19 = sub_2E5C38(v11, v12 & 0xFFFFFFFFFFFFLL, 1);
  *(void *)a3 = v13;
  *(void *)(a3 + 8) = v18;
  *(void *)(a3 + 16) = v19;
  *(void *)(a3 + 24) = v20;
  *(_DWORD *)(a3 + 32) = v12;
  *(_WORD *)(a3 + 36) = WORD2(v12);
  *(unsigned char *)(a3 + 38) = (v12 & 0xFF000000000000) != 0;
  int v17 = v22;
  if (v22)
  {
LABEL_22:
    if (!atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
}

void sub_66EBA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

double sub_66EBB8@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  sub_53F9B8(a1, a2, 1, (void **)(a1 + 7776));
  uint64_t v8 = *(void *)(a1 + 7776);
  uint64_t v9 = *(void *)(a1 + 7784);
  if (v8 != v9)
  {
    uint64_t v10 = a2 & 0xFF000000000000;
    if (!a3)
    {
      while (1)
      {
        if (__PAIR64__(*(unsigned __int16 *)(v8 + 4), *(_DWORD *)v8) != __PAIR64__(WORD2(a2), a2)
          || (HIWORD(a2) & 1) == (*(unsigned char *)(v8 + 6) == 0))
        {
          unint64_t v14 = sub_2D5EC4(a1, a2 & 0xFFFFFFFFFFFFLL, v10 == 0);
          if (v14 != sub_2D5EC4(a1, *(void *)v8 & 0xFFFFFFFFFFFFLL, (*(void *)v8 & 0xFF000000000000) == 0))
          {
            if (*(unsigned char *)(v8 + 40)) {
              break;
            }
          }
        }
        v8 += 48;
        if (v8 == v9) {
          goto LABEL_25;
        }
      }
      *(_OWORD *)a4 = *(_OWORD *)v8;
      uint64_t v12 = (void *)(a4 + 16);
      uint64_t v13 = (uint64_t *)(v8 + 16);
      goto LABEL_18;
    }
    if (a3 == 1)
    {
      while (1)
      {
        if (__PAIR64__(*(unsigned __int16 *)(v8 + 4), *(_DWORD *)v8) != __PAIR64__(WORD2(a2), a2)
          || (HIWORD(a2) & 1) == (*(unsigned char *)(v8 + 6) == 0))
        {
          unint64_t v11 = sub_2D5EC4(a1, a2 & 0xFFFFFFFFFFFFLL, v10 == 0);
          if (v11 != sub_2D5EC4(a1, *(void *)v8 & 0xFFFFFFFFFFFFLL, (*(void *)v8 & 0xFF000000000000) == 0))
          {
            if (*(unsigned char *)(v8 + 41)) {
              break;
            }
          }
        }
        v8 += 48;
        if (v8 == v9) {
          goto LABEL_25;
        }
      }
      *(_OWORD *)a4 = *(_OWORD *)v8;
      uint64_t v12 = (void *)(a4 + 16);
      uint64_t v13 = (uint64_t *)(v8 + 16);
LABEL_18:
      sub_5404E8(v12, v13);
      *(_WORD *)(a4 + 40) = *(_WORD *)(v8 + 40);
      return result;
    }
    do
    {
      if (__PAIR64__(*(unsigned __int16 *)(v8 + 4), *(_DWORD *)v8) != __PAIR64__(WORD2(a2), a2)
        || (HIWORD(a2) & 1) == (*(unsigned char *)(v8 + 6) == 0))
      {
        sub_2D5EC4(a1, a2 & 0xFFFFFFFFFFFFLL, v10 == 0);
        sub_2D5EC4(a1, *(void *)v8 & 0xFFFFFFFFFFFFLL, (*(void *)v8 & 0xFF000000000000) == 0);
      }
      v8 += 48;
    }
    while (v8 != v9);
  }
LABEL_25:
  double result = 0.0;
  *(_OWORD *)a4 = 0u;
  *(_OWORD *)(a4 + 16) = 0u;
  *(_OWORD *)(a4 + 32) = 0u;
  *(unsigned char *)(a4 + 6) = 1;
  *(void *)(a4 + 16) = 0;
  *(void *)(a4 + 24) = 0;
  *(void *)(a4 + 8) = 0x7FFFFFFFFFFFFFFFLL;
  *(void *)(a4 + 32) = 0;
  *(_WORD *)(a4 + 40) = 0;
  return result;
}

uint64_t sub_66EE18(void *a1, void *a2, unsigned int a3, unsigned int a4, unint64_t a5)
{
  if (a3 >= a4) {
    return 1;
  }
  uint64_t v48 = v5;
  uint64_t v49 = v6;
  unint64_t v10 = (int)a4;
  unint64_t v11 = (int)a3;
  uint64_t v12 = (uint64_t)(a1 + 1);
  do
  {
    uint64_t v13 = (int **)sub_46C8EC(a2, v11);
    unint64_t v14 = v11 + 1;
    uint64_t v15 = sub_66F0E4(a1, a2, v11, v11 + 1);
    if (v15 == -1)
    {
      sub_6A48E0(v12, (uint64_t)v13, 0, &v46);
      for (uint64_t i = *v46; ; i += 192)
      {
        if (i == v46[1])
        {
          char v25 = 1;
          uint64_t v26 = v47;
          if (!v47) {
            goto LABEL_3;
          }
          goto LABEL_25;
        }
        if (*(unsigned char *)(i + 185) && *(unsigned char *)(i + 187) == 0)
        {
          int v23 = *(_DWORD *)(i + 24);
          if (v23 != 3 && v23 != 0) {
            break;
          }
        }
      }
      char v25 = 0;
      uint64_t v26 = v47;
      if (!v47)
      {
LABEL_3:
        unint64_t v11 = v14;
        if ((v25 & 1) == 0) {
          return 0;
        }
        continue;
      }
LABEL_25:
      if (atomic_fetch_add(&v26->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
        goto LABEL_3;
      }
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
      unint64_t v11 = v14;
      if (v25) {
        continue;
      }
      return 0;
    }
    unint64_t v11 = v15;
    uint64_t v16 = *(void *)(sub_46C8EC(a2, v15) + 32);
    int v17 = (char *)*v13;
    uint64_t v18 = (unsigned __int16 *)((char *)*v13 - **v13);
    unsigned int v19 = *v18;
    if (*((unsigned char *)v13 + 38))
    {
      if (v19 < 0x29) {
        goto LABEL_43;
      }
      unsigned int v20 = v18[20];
      if (!v20) {
        goto LABEL_44;
      }
    }
    else
    {
      if (v19 < 0x27) {
        goto LABEL_43;
      }
      unsigned int v20 = v18[19];
      if (!v20) {
        goto LABEL_44;
      }
    }
    uint64_t v27 = v20;
    unint64_t v28 = &v17[v20];
    uint64_t v29 = *(unsigned int *)v28;
    unsigned int v30 = (unsigned int *)&v28[v29 + 4];
    uint64_t v31 = *(unsigned int *)&v28[v29];
    if (!v31)
    {
LABEL_43:
      unsigned int v20 = 0;
      goto LABEL_44;
    }
    unsigned int v20 = 0;
    uint64_t v32 = &v30[v31];
    uint64_t v33 = (uint64_t)&v17[v27 + 8 + v29];
    do
    {
      uint64_t v35 = *v30;
      uint64_t v36 = (unsigned __int16 *)((char *)v30 + v35 - *(int *)((char *)v30 + v35));
      if (*v36 >= 0xDu)
      {
        uint64_t v37 = v36[6];
        if (v36[6])
        {
          uint64_t v38 = (unsigned int *)((char *)v30 + v35 + v37);
          uint64_t v39 = *v38;
          uint64_t v40 = *(unsigned int *)((char *)v38 + v39);
          if (v40)
          {
            uint64_t v41 = 0;
            uint64_t v42 = 4 * v40;
            uint64_t v43 = v33 + v37 + v35 + v39;
            while (1)
            {
              uint64_t v44 = *(void *)(v43
                              + v41
                              + *(unsigned int *)(v43 + v41)
                              + (unint64_t)*(unsigned __int16 *)(v43
                                                                      + v41
                                                                      + *(unsigned int *)(v43 + v41)
                                                                      - (uint64_t)*(int *)(v43
                                                                                        + v41
                                                                                        + *(unsigned int *)(v43 + v41))
                                                                      + 4));
              if ((v16 & 0xFFFFFFFFFFFFLL) == (v44 & 0xFFFFFFFFFFFFLL)
                && ((v16 & 0xFF000000000000) != 0) != ((v44 & 0xFF000000000000) != 0))
              {
                break;
              }
              v41 += 4;
              if (v42 == v41) {
                goto LABEL_32;
              }
            }
            int v34 = 1;
          }
          else
          {
LABEL_32:
            int v34 = 0;
          }
          v20 += v34;
        }
      }
      ++v30;
      v33 += 4;
    }
    while (v30 != v32);
LABEL_44:
    if (v20 < a5) {
      return 0;
    }
  }
  while (v11 < v10);
  return 1;
}

uint64_t sub_66F0E4(void *a1, void *a2, uint64_t a3, unint64_t a4)
{
  if (sub_46C760(a2) <= a4) {
    return -1;
  }
  uint64_t v8 = (int **)sub_46C8EC(a2, a3);
  sub_66F550(v8, a1 + 759);
  if (a1[759] == a1[760]) {
    return -1;
  }
  sub_46B058();
  unint64_t v10 = v9;
  unint64_t v12 = v11 + a4;
  unint64_t v13 = *(unsigned __int8 *)(a1[752] + 1608) + a4;
  if (v13 >= sub_46C760(a2))
  {
    sub_46B060();
    uint64_t v15 = v23;
    unint64_t v14 = v24;
    if (v10)
    {
LABEL_5:
      if (v15)
      {
        while (1)
        {
          unint64_t v16 = sub_46C760(v10);
          unint64_t v17 = sub_46C760(v15);
          if (v12 >= v16 || v14 >= v17)
          {
            if (v12 < v16 == v14 < v17) {
              goto LABEL_43;
            }
          }
          else
          {
            uint64_t v18 = sub_46C8EC(v10, v12);
            if (v18 == sub_46C8EC(v15, v14)) {
              goto LABEL_43;
            }
          }
          uint64_t v19 = sub_46C8EC(v10, v12);
          uint64_t v20 = a1[759];
          uint64_t v21 = a1[760];
          if (v20 != v21)
          {
            unint64_t v22 = *(void *)(v19 + 32);
            while (__PAIR64__(*(unsigned __int16 *)(v20 + 4), *(_DWORD *)v20) != __PAIR64__(WORD2(v22), v22)
                 || (HIWORD(v22) & 1) == (*(unsigned char *)(v20 + 6) == 0))
            {
              v20 += 8;
              if (v20 == v21)
              {
                uint64_t v20 = a1[760];
                break;
              }
            }
          }
          if (v20 != v21) {
            break;
          }
          ++v12;
        }
      }
      else
      {
        if (v12 >= sub_46C760(v10)) {
          goto LABEL_44;
        }
        do
        {
          uint64_t v29 = sub_46C8EC(v10, v12);
          uint64_t v30 = a1[759];
          uint64_t v31 = a1[760];
          if (v30 != v31)
          {
            unint64_t v32 = *(void *)(v29 + 32);
            while (__PAIR64__(*(unsigned __int16 *)(v30 + 4), *(_DWORD *)v30) != __PAIR64__(WORD2(v32), v32)
                 || (HIWORD(v32) & 1) == (*(unsigned char *)(v30 + 6) == 0))
            {
              v30 += 8;
              if (v30 == v31)
              {
                uint64_t v30 = a1[760];
                break;
              }
            }
          }
          if (v30 != v31) {
            break;
          }
          ++v12;
        }
        while (v12 < sub_46C760(v10));
      }
      goto LABEL_43;
    }
  }
  else
  {
    unint64_t v14 = v12 + *(unsigned __int8 *)(a1[752] + 1608);
    uint64_t v15 = v10;
    if (v10) {
      goto LABEL_5;
    }
  }
  if (!v15 || v14 >= sub_46C760(v15))
  {
LABEL_49:
    if (!v15 || v14 >= sub_46C760(v15)) {
      return -1;
    }
    goto LABEL_51;
  }
  do
  {
    uint64_t v25 = sub_46C8EC(v10, v12);
    uint64_t v26 = a1[759];
    uint64_t v27 = a1[760];
    if (v26 != v27)
    {
      unint64_t v28 = *(void *)(v25 + 32);
      while (__PAIR64__(*(unsigned __int16 *)(v26 + 4), *(_DWORD *)v26) != __PAIR64__(WORD2(v28), v28)
           || (HIWORD(v28) & 1) == (*(unsigned char *)(v26 + 6) == 0))
      {
        v26 += 8;
        if (v26 == v27)
        {
          uint64_t v26 = a1[760];
          break;
        }
      }
    }
    if (v26 != v27) {
      break;
    }
    ++v12;
  }
  while (v14 < sub_46C760(v15));
LABEL_43:
  if (!v10) {
    goto LABEL_49;
  }
LABEL_44:
  unint64_t v33 = sub_46C760(v10);
  unint64_t v34 = v33;
  if (v15)
  {
    unint64_t v35 = sub_46C760(v15);
    if (v12 >= v34 || v14 >= v35)
    {
      if (v12 < v34 == v14 < v35) {
        return -1;
      }
    }
    else
    {
      uint64_t v36 = sub_46C8EC(v10, v12);
      if (v36 == sub_46C8EC(v15, v14)) {
        return -1;
      }
    }
LABEL_51:
    sub_46B058();
    return v12 - v37;
  }
  if (v12 < v33) {
    goto LABEL_51;
  }
  return -1;
}

double sub_66F488@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5 = (int *)sub_53F764(a1, a2, a3);
  uint64_t v6 = (unsigned __int16 *)((char *)v5 - *v5);
  if (*v6 >= 0xFu && (uint64_t v7 = v6[7]) != 0)
  {
    uint64_t v8 = (unsigned int *)((char *)v5 + v7 + *(unsigned int *)((char *)v5 + v7));
    long long v11 = 0uLL;
    uint64_t v12 = 0;
    sub_23708((uint64_t)&v11, *v8);
    sub_3E2110(v8, (void ***)&v11, *((uint64_t *)&v11 + 1));
    double result = *(double *)&v11;
    uint64_t v10 = v12;
    *(_OWORD *)a4 = v11;
    *(void *)(a4 + 16) = v10;
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)a4 = 0u;
    *(void *)(a4 + 16) = 0;
  }
  return result;
}

void sub_66F534(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  if (a9) {
    sub_20A7A34();
  }
  _Unwind_Resume(exception_object);
}

int **sub_66F550(int **result, uint64_t *a2)
{
  uint64_t v3 = (_DWORD *)*a2;
  a2[1] = *a2;
  long long v4 = (unsigned __int16 *)((char *)*result - **result);
  unsigned int v5 = *v4;
  if (*((unsigned char *)result + 38))
  {
    if (v5 < 0x29) {
      return result;
    }
    unsigned int v6 = v4[20];
    if (!v6) {
      return result;
    }
  }
  else
  {
    if (v5 < 0x27) {
      return result;
    }
    unsigned int v6 = v4[19];
    if (!v6) {
      return result;
    }
  }
  uint64_t v7 = (unsigned int *)((char *)*result + v6);
  uint64_t v8 = *v7;
  uint64_t v10 = (unsigned int *)((char *)v7 + v8 + 4);
  uint64_t v9 = *(unsigned int *)((char *)v7 + v8);
  if (v9)
  {
    uint64_t v45 = &v10[v9];
    while (1)
    {
      long long v11 = (int *)((char *)v10 + *v10);
      uint64_t v12 = (unsigned __int16 *)((char *)v11 - *v11);
      if (*v12 >= 0xDu)
      {
        uint64_t v13 = v12[6];
        if (v13)
        {
          unint64_t v14 = (unsigned int *)((char *)v11 + v13);
          uint64_t v15 = *v14;
          unint64_t v17 = (unsigned int *)((char *)v14 + v15 + 4);
          uint64_t v16 = *(unsigned int *)((char *)v14 + v15);
          if (v16) {
            break;
          }
        }
      }
LABEL_9:
      if (++v10 == v45)
      {
        uint64_t v42 = *a2;
        goto LABEL_41;
      }
    }
    uint64_t v18 = &v17[v16];
    while (1)
    {
      while (1)
      {
        uint64_t v19 = (int *)((char *)v17 + *v17);
        uint64_t v20 = (unsigned char *)*a2;
        uint64_t v21 = *v19;
        if ((_DWORD *)*a2 != v3) {
          break;
        }
        uint64_t v22 = -v21;
LABEL_20:
        unint64_t v24 = (unsigned __int16 *)((char *)v19 + v22);
        if (*v24 >= 5u && (unsigned __int16 v25 = v24[2]) != 0)
        {
          uint64_t v26 = (uint64_t *)((char *)v19 + v25);
          unint64_t v27 = a2[2];
          if ((unint64_t)v3 < v27) {
            goto LABEL_37;
          }
LABEL_23:
          uint64_t v28 = ((char *)v3 - v20) >> 3;
          unint64_t v29 = v28 + 1;
          if ((unint64_t)(v28 + 1) >> 61) {
            sub_2E00();
          }
          uint64_t v30 = v27 - (void)v20;
          if (v30 >> 2 > v29) {
            unint64_t v29 = v30 >> 2;
          }
          if ((unint64_t)v30 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v31 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v31 = v29;
          }
          if (v31 >> 61) {
            sub_188D718();
          }
          uint64_t v32 = 8 * v31;
          unint64_t v33 = (char *)operator new(8 * v31);
          unint64_t v34 = &v33[8 * v28];
          uint64_t v35 = *v26;
          unint64_t v36 = HIDWORD(*v26);
          *(_DWORD *)unint64_t v34 = *v26;
          *((_WORD *)v34 + 2) = v36;
          v34[6] = (v35 & 0xFF000000000000) == 0;
          for (uint64_t i = v34; v3 != (_DWORD *)v20; *(_DWORD *)(i + 3) = v39)
          {
            int v38 = *(v3 - 2);
            v3 -= 2;
            int v39 = *(_DWORD *)((char *)v3 + 3);
            *((_DWORD *)i - 2) = v38;
            i -= 8;
          }
          uint64_t v3 = v34 + 8;
          *a2 = (uint64_t)i;
          a2[1] = (uint64_t)(v34 + 8);
          a2[2] = (uint64_t)&v33[v32];
          if (v20) {
            operator delete(v20);
          }
          a2[1] = (uint64_t)v3;
          if (++v17 == v18) {
            goto LABEL_9;
          }
        }
        else
        {
          uint64_t v26 = 0;
          unint64_t v27 = a2[2];
          if ((unint64_t)v3 >= v27) {
            goto LABEL_23;
          }
LABEL_37:
          uint64_t v40 = *v26;
          unint64_t v41 = HIDWORD(*v26);
          *uint64_t v3 = *v26;
          *((_WORD *)v3 + 2) = v41;
          *((unsigned char *)v3 + 6) = (v40 & 0xFF000000000000) == 0;
          v3 += 2;
          a2[1] = (uint64_t)v3;
          if (++v17 == v18) {
            goto LABEL_9;
          }
        }
      }
      uint64_t v22 = -v21;
      uint64_t v23 = *(void *)((char *)v19 + *(unsigned __int16 *)((char *)v19 - v21 + 4));
      if (__PAIR64__(*((unsigned __int16 *)v3 - 2), *(v3 - 2)) != __PAIR64__(WORD2(v23), v23)
        || ((v23 & 0xFF000000000000) != 0) == (*((unsigned char *)v3 - 2) != 0))
      {
        goto LABEL_20;
      }
      if (++v17 == v18) {
        goto LABEL_9;
      }
    }
  }
  uint64_t v42 = (uint64_t)v3;
LABEL_41:
  unint64_t v43 = 126 - 2 * __clz(((uint64_t)v3 - v42) >> 3);
  if (v3 == (_DWORD *)v42) {
    uint64_t v44 = 0;
  }
  else {
    uint64_t v44 = v43;
  }
  sub_303770(v42, v3, (uint64_t)&v46, v44, 1);
  return (int **)sub_30361C((uint64_t)a2);
}

uint64_t sub_66F838(void *a1, unint64_t a2)
{
  if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a1[1] - *a1) >> 3) <= a2)
  {
    exception = __cxa_allocate_exception(0x40uLL);
    std::to_string(&v16, a2);
    unsigned int v6 = std::string::insert(&v16, 0, "Out-of-bounds access in Vector::at with index=");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v17.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    uint64_t v8 = std::string::append(&v17, ",size=");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v18.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v18.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v15, 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a1[1] - *a1) >> 3));
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v10 = &v15;
    }
    else {
      uint64_t v10 = (std::string *)v15.__r_.__value_.__r.__words[0];
    }
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v15.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v15.__r_.__value_.__l.__size_;
    }
    uint64_t v12 = std::string::append(&v18, (const std::string::value_type *)v10, size);
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    std::string::size_type v20 = v12->__r_.__value_.__r.__words[2];
    long long v19 = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    unint64_t v14 = (void *)sub_2F404((uint64_t)exception, &v19);
  }
  return *a1 + 40 * a2;
}

void sub_66F988(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 41) < 0) {
    operator delete(*(void **)(v33 - 64));
  }
  if (a14 < 0)
  {
    operator delete(a9);
    if ((a33 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a26 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_10;
    }
  }
  else if ((a33 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(a28);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_7;
  }
LABEL_10:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0) {
LABEL_11:
  }
    _Unwind_Resume(a1);
LABEL_7:
  operator delete(__p);
  goto LABEL_11;
}

uint64_t sub_66FA68(uint64_t a1)
{
  *(_DWORD *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)&long long v2 = -1;
  *((void *)&v2 + 1) = -1;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v2;
  *(void *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 56) = v2;
  *(_OWORD *)(a1 + 72) = v2;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = -1;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_DWORD *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = -1;
  *(void *)(a1 + 176) = 0;
  *(_DWORD *)(a1 + 200) = 0;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 256) = -1;
  *(_OWORD *)(a1 + 224) = v2;
  *(_OWORD *)(a1 + 240) = v2;
  *(_OWORD *)(a1 + 208) = v2;
  *(_DWORD *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = -1;
  *(_DWORD *)(a1 + 280) = 0;
  *(_OWORD *)(a1 + 288) = xmmword_20E2060;
  *(_WORD *)(a1 + 304) = 0;
  *(unsigned char *)(a1 + 306) = 0;
  *(void *)(a1 + 312) = 0;
  *(void *)(a1 + 319) = 0;
  *(_WORD *)(a1 + 328) = 5;
  *(unsigned char *)(a1 + 330) = 0;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(void *)(a1 + 400) = 0;
  sub_6F30A4(a1 + 408);
  *(unsigned char *)(a1 + 560) = 0;
  *(void *)(a1 + 616) = -1;
  *(void *)&long long v3 = -1;
  *((void *)&v3 + 1) = -1;
  *(_OWORD *)(a1 + 568) = v3;
  *(_OWORD *)(a1 + 584) = v3;
  *(_OWORD *)(a1 + 600) = v3;
  *(_DWORD *)(a1 + 624) = 0;
  *(void *)(a1 + 632) = -1;
  *(_DWORD *)(a1 + 640) = 0;
  *(void *)(a1 + 688) = 0;
  *(void *)(a1 + 704) = 0;
  *(void *)(a1 + 696) = 0;
  *(unsigned char *)(a1 + 680) = 0;
  *(_OWORD *)(a1 + 648) = 0u;
  *(_OWORD *)(a1 + 664) = 0u;
  sub_6F30A4(a1 + 712);
  *(int64x2_t *)(a1 + 864) = vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
  *(_OWORD *)(a1 + 880) = xmmword_20E2120;
  sub_5A9D64(a1 + 896);
  *(unsigned char *)(a1 + 1856) = 0;
  *(_OWORD *)(a1 + 1840) = 0u;
  *(_OWORD *)(a1 + 1824) = 0u;
  *(_OWORD *)(a1 + 1808) = 0u;
  *(_OWORD *)(a1 + 1792) = 0u;
  *(_OWORD *)(a1 + 1776) = 0u;
  *(_OWORD *)(a1 + 1760) = 0u;
  *(_OWORD *)(a1 + 1744) = 0u;
  *(_OWORD *)(a1 + 1728) = 0u;
  *(_OWORD *)(a1 + 1712) = 0u;
  *(_DWORD *)(a1 + 1860) = 3;
  *(unsigned char *)(a1 + 1864) = 0;
  *(void *)(a1 + 1872) = 0;
  *(_OWORD *)(a1 + 1880) = 0u;
  *(unsigned char *)(a1 + 1896) = 1;
  *(_DWORD *)(a1 + 1900) = 0;
  *(void *)(a1 + 1912) = -1;
  *(void *)(a1 + 1904) = -1;
  *(_DWORD *)(a1 + 1920) = -1;
  *(_DWORD *)(a1 + 1924) = 0x7FFFFFFF;
  *(_OWORD *)(a1 + 1928) = 0u;
  *(_OWORD *)(a1 + 1944) = 0u;
  *(_OWORD *)(a1 + 1960) = 0u;
  *(void *)(a1 + 1976) = 0;
  *(void *)(a1 + 1984) = 0xBFF0000000000000;
  *(unsigned char *)(a1 + 1992) = 0;
  *(_OWORD *)(a1 + 2000) = 0u;
  *(_DWORD *)(a1 + 2016) = 0x7FFFFFFF;
  *(void *)(a1 + 2020) = 0x7FFFFFFF7FFFFFFFLL;
  *(void *)(a1 + 2032) = 0;
  *(_OWORD *)(a1 + 2048) = 0u;
  *(_OWORD *)(a1 + 2064) = 0u;
  *(void *)(a1 + 2040) = off_243A000;
  *(_DWORD *)(a1 + 2080) = 0;
  *(unsigned char *)(a1 + 2084) = 1;
  *(_OWORD *)(a1 + 2096) = 0u;
  *(void *)(a1 + 2112) = 0;
  *(void *)(a1 + 2088) = off_243A038;
  *(_WORD *)(a1 + 2120) = 0;
  *(unsigned char *)(a1 + 2122) = 0;
  *(_OWORD *)(a1 + 2136) = 0u;
  *(void *)(a1 + 2152) = 0;
  *(void *)(a1 + 2128) = off_2439F28;
  *(unsigned char *)(a1 + 2160) = 0;
  *(void *)(a1 + 2216) = 0;
  *(_OWORD *)(a1 + 2200) = 0u;
  *(void *)(a1 + 2184) = 0;
  *(_DWORD *)(a1 + 2192) = 0;
  *(_OWORD *)(a1 + 2168) = 0u;
  *(_WORD *)(a1 + 2224) = 1;
  *(unsigned char *)(a1 + 2226) = 0;
  *(_OWORD *)(a1 + 2228) = 0u;
  *(void *)(a1 + 2244) = 0;
  *(void *)(a1 + 2252) = 0x7FFFFFFF00000000;
  *(void *)(a1 + 2272) = 0;
  *(_DWORD *)(a1 + 2264) = 0x7FFFFFFF;
  *(void *)(a1 + 2268) = 0x7FFFFFFF7FFFFFFFLL;
  *(void *)(a1 + 2280) = 0;
  *(void *)(a1 + 2288) = 0x8000000080000000;
  *(unsigned char *)(a1 + 2344) = 0;
  *(_OWORD *)(a1 + 2328) = 0u;
  *(_OWORD *)(a1 + 2312) = 0u;
  *(_OWORD *)(a1 + 2296) = 0u;
  *(_DWORD *)(a1 + 2348) = 0x7FFFFFFF;
  *(void *)(a1 + 2352) = 0x8000000080000000;
  *(_DWORD *)(a1 + 2368) = -1;
  *(void *)(a1 + 2376) = 0;
  *(void *)(a1 + 2384) = 0x7FFFFFFFFFFFFFFFLL;
  *(unsigned char *)(a1 + 2392) = 0;
  return a1;
}

void sub_66FD40(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;
  sub_4A50F4(v4);
  sub_4A6814((uint64_t *)(v1 + 688));
  sub_28F14C((void **)(v1 + 656));
  sub_4A50F4(v2);
  sub_59241C((uint64_t *)(v1 + 384));
  sub_59241C((uint64_t *)(v1 + 360));
  sub_59241C((uint64_t *)(v1 + 336));
  sub_592058(v1 + 136);
  _Unwind_Resume(a1);
}

__n128 sub_66FDB0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a2 = 0;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = a2[1];
  a2[1] = 0;
  uint64_t v3 = a2[2];
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = a2[3];
  *(void *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = *((_DWORD *)a2 + 8);
  if (v4)
  {
    unint64_t v5 = *(void *)(v3 + 8);
    unint64_t v6 = *(void *)(a1 + 8);
    if ((v6 & (v6 - 1)) != 0)
    {
      if (v5 >= v6) {
        v5 %= v6;
      }
    }
    else
    {
      v5 &= v6 - 1;
    }
    *(void *)(v2 + 8 * v5) = a1 + 16;
    a2[2] = 0;
    a2[3] = 0;
  }
  uint64_t v7 = a2[5];
  a2[5] = 0;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = a2[6];
  a2[6] = 0;
  uint64_t v8 = a2[7];
  *(void *)(a1 + 56) = v8;
  uint64_t v9 = a2[8];
  *(void *)(a1 + 64) = v9;
  *(_DWORD *)(a1 + 72) = *((_DWORD *)a2 + 18);
  if (v9)
  {
    unint64_t v10 = *(void *)(v8 + 8);
    unint64_t v11 = *(void *)(a1 + 48);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        v10 %= v11;
      }
    }
    else
    {
      v10 &= v11 - 1;
    }
    *(void *)(v7 + 8 * v10) = a1 + 56;
    a2[7] = 0;
    a2[8] = 0;
  }
  uint64_t v12 = a2[10];
  a2[10] = 0;
  *(void *)(a1 + 80) = v12;
  *(void *)(a1 + 88) = a2[11];
  a2[11] = 0;
  uint64_t v13 = a2[12];
  *(void *)(a1 + 96) = v13;
  uint64_t v14 = a2[13];
  *(void *)(a1 + 104) = v14;
  *(_DWORD *)(a1 + 112) = *((_DWORD *)a2 + 28);
  if (v14)
  {
    unint64_t v15 = *(void *)(v13 + 8);
    unint64_t v16 = *(void *)(a1 + 88);
    if ((v16 & (v16 - 1)) != 0)
    {
      if (v15 >= v16) {
        v15 %= v16;
      }
    }
    else
    {
      v15 &= v16 - 1;
    }
    *(void *)(v12 + 8 * v15) = a1 + 96;
    a2[12] = 0;
    a2[13] = 0;
  }
  uint64_t v17 = a2[15];
  a2[15] = 0;
  *(void *)(a1 + 120) = v17;
  *(void *)(a1 + 128) = a2[16];
  a2[16] = 0;
  uint64_t v18 = a2[17];
  *(void *)(a1 + 136) = v18;
  uint64_t v19 = a2[18];
  *(void *)(a1 + 144) = v19;
  *(_DWORD *)(a1 + 152) = *((_DWORD *)a2 + 38);
  if (v19)
  {
    unint64_t v20 = *(void *)(v18 + 8);
    unint64_t v21 = *(void *)(a1 + 128);
    if ((v21 & (v21 - 1)) != 0)
    {
      if (v20 >= v21) {
        v20 %= v21;
      }
    }
    else
    {
      v20 &= v21 - 1;
    }
    *(void *)(v17 + 8 * v20) = a1 + 136;
    a2[17] = 0;
    a2[18] = 0;
  }
  *(_DWORD *)(a1 + 160) = *((_DWORD *)a2 + 40);
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 168) = 0;
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 21);
  *(void *)(a1 + 184) = a2[23];
  a2[21] = 0;
  a2[22] = 0;
  a2[23] = 0;
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = 0;
  *(_OWORD *)(a1 + 192) = *((_OWORD *)a2 + 12);
  *(void *)(a1 + 208) = a2[26];
  a2[24] = 0;
  a2[25] = 0;
  a2[26] = 0;
  uint64_t v22 = a2[27];
  *(_DWORD *)(a1 + 223) = *(_DWORD *)((char *)a2 + 223);
  *(void *)(a1 + 216) = v22;
  *(void *)(a1 + 240) = 0;
  *(void *)(a1 + 248) = 0;
  *(void *)(a1 + 232) = 0;
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 29);
  *(void *)(a1 + 248) = a2[31];
  a2[30] = 0;
  a2[31] = 0;
  a2[29] = 0;
  long long v24 = *((_OWORD *)a2 + 18);
  long long v23 = *((_OWORD *)a2 + 19);
  long long v25 = *((_OWORD *)a2 + 17);
  *(_OWORD *)(a1 + 313) = *(_OWORD *)((char *)a2 + 313);
  *(_OWORD *)(a1 + 288) = v24;
  *(_OWORD *)(a1 + 304) = v23;
  *(_OWORD *)(a1 + 272) = v25;
  __n128 result = *((__n128 *)a2 + 16);
  *(__n128 *)(a1 + 256) = result;
  return result;
}

uint64_t *sub_670014(uint64_t **a1, uint64_t *a2)
{
  unint64_t v3 = 0xCF3CF3CF3CF3CF3DLL * (((char *)a1[1] - (char *)*a1) >> 4);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xC30C30C30C30C3) {
    sub_2E00();
  }
  if (0x9E79E79E79E79E7ALL * (((char *)a1[2] - (char *)*a1) >> 4) > v4) {
    unint64_t v4 = 0x9E79E79E79E79E7ALL * (((char *)a1[2] - (char *)*a1) >> 4);
  }
  if (0xCF3CF3CF3CF3CF3DLL * (((char *)a1[2] - (char *)*a1) >> 4) >= 0x61861861861861) {
    unint64_t v6 = 0xC30C30C30C30C3;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xC30C30C30C30C3) {
      sub_188D718();
    }
    uint64_t v7 = (char *)operator new(336 * v6);
  }
  else
  {
    uint64_t v7 = 0;
  }
  uint64_t v8 = (uint64_t *)&v7[336 * v6];
  sub_66FDB0((uint64_t)&v7[336 * v3], a2);
  unint64_t v10 = v9 + 42;
  uint64_t v12 = *a1;
  unint64_t v11 = a1[1];
  if (v11 == *a1)
  {
    *a1 = v9;
    a1[1] = v10;
    a1[2] = v8;
    if (!v11) {
      return v10;
    }
    goto LABEL_17;
  }
  do
  {
    v11 -= 42;
    sub_66FDB0((uint64_t)(v9 - 42), v11);
  }
  while (v11 != v12);
  uint64_t v13 = *a1;
  unint64_t v11 = a1[1];
  *a1 = v9;
  a1[1] = v10;
  a1[2] = v8;
  if (v11 != v13)
  {
    do
    {
      v11 -= 42;
      sub_576848((uint64_t)v11);
    }
    while (v11 != v13);
    unint64_t v11 = v13;
  }
  if (v11) {
LABEL_17:
  }
    operator delete(v11);
  return v10;
}

char *sub_670170(void *a1, char *__src, char *a3)
{
  unint64_t v4 = __src;
  unint64_t v6 = (char *)a1[1];
  unint64_t v7 = a1[2];
  if ((unint64_t)v6 >= v7)
  {
    uint64_t v9 = (char *)*a1;
    uint64_t v10 = (uint64_t)&v6[-*a1 + 1];
    if (v10 < 0) {
      sub_2E00();
    }
    uint64_t v11 = __src - v9;
    unint64_t v12 = v7 - (void)v9;
    if (2 * v12 > v10) {
      uint64_t v10 = 2 * v12;
    }
    if (v12 >= 0x3FFFFFFFFFFFFFFFLL) {
      size_t v13 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      size_t v13 = v10;
    }
    if (v13)
    {
      uint64_t v14 = (char *)operator new(v13);
      unint64_t v15 = &v14[v11];
      unint64_t v16 = &v14[v13];
      if (v11 != v13)
      {
LABEL_30:
        char *v15 = *a3;
        unint64_t v20 = v15;
        if (v9 != v4)
        {
          unint64_t v21 = v4 - v9;
          uint64_t v22 = v4;
          unint64_t v20 = v15;
          if ((unint64_t)(v4 - v9) < 0x20) {
            goto LABEL_46;
          }
          uint64_t v22 = v4;
          unint64_t v20 = v15;
          if ((unint64_t)(v4 - v15) < 0x20) {
            goto LABEL_46;
          }
          uint64_t v22 = &v4[-(v21 & 0xFFFFFFFFFFFFFFE0)];
          unint64_t v20 = &v15[-(v21 & 0xFFFFFFFFFFFFFFE0)];
          long long v23 = v15 - 16;
          long long v24 = v4 - 16;
          unint64_t v25 = v21 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            long long v26 = *(_OWORD *)v24;
            *((_OWORD *)v23 - 1) = *((_OWORD *)v24 - 1);
            *(_OWORD *)long long v23 = v26;
            v23 -= 32;
            v24 -= 32;
            v25 -= 32;
          }
          while (v25);
          if (v21 != (v21 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_46:
            do
            {
              char v27 = *--v22;
              *--unint64_t v20 = v27;
            }
            while (v22 != v9);
          }
        }
        uint64_t v28 = (unsigned char *)a1[1];
        uint64_t v29 = v28 - v4;
        if (v28 != v4) {
          memmove(v15 + 1, v4, v28 - v4);
        }
        uint64_t v30 = (char *)*a1;
        *a1 = v20;
        a1[1] = &v15[v29 + 1];
        a1[2] = v16;
        if (v30) {
          operator delete(v30);
        }
        return v15;
      }
    }
    else
    {
      uint64_t v14 = 0;
      unint64_t v15 = (char *)(__src - v9);
      unint64_t v16 = 0;
      if (v11) {
        goto LABEL_30;
      }
    }
    if (v11 < 1)
    {
      if ((unint64_t)(2 * v11) <= 1) {
        size_t v18 = 1;
      }
      else {
        size_t v18 = 2 * v11;
      }
      uint64_t v19 = (char *)operator new(v18);
      unint64_t v15 = &v19[v18 >> 2];
      unint64_t v16 = &v19[v18];
      if (v14)
      {
        operator delete(v14);
        uint64_t v9 = (char *)*a1;
      }
    }
    else
    {
      if (v11 + 1 >= 0) {
        uint64_t v17 = v11 + 1;
      }
      else {
        uint64_t v17 = v11 + 2;
      }
      v15 -= v17 >> 1;
    }
    goto LABEL_30;
  }
  if (__src != v6)
  {
    uint64_t v8 = __src + 1;
    if (v6)
    {
      *unint64_t v6 = *(v6 - 1);
      a1[1] = v6 + 1;
      if (v6 == v8) {
        goto LABEL_24;
      }
    }
    else
    {
      a1[1] = 0;
      if (__src == (char *)-1)
      {
LABEL_24:
        *unint64_t v4 = *a3;
        return v4;
      }
    }
    memmove(__src + 1, __src, v6 - v8);
    goto LABEL_24;
  }
  *__src = *a3;
  a1[1] = __src + 1;
  return v4;
}

void sub_6703BC(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_6703D4(char **a1, uint64_t a2)
{
  unint64_t v4 = a1[2];
  if (v4 != a1[3]) {
    goto LABEL_25;
  }
  unint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  if (v6 > *a1)
  {
    int64_t v7 = 0xAAAAAAAAAAAAAAABLL * ((v6 - *a1) >> 3);
    if (v7 >= -1) {
      uint64_t v8 = v7 + 1;
    }
    else {
      uint64_t v8 = v7 + 2;
    }
    uint64_t v9 = v8 >> 1;
    uint64_t v10 = -v9;
    if (v6 == v4)
    {
      char v27 = &v6[-24 * v9];
    }
    else
    {
      do
      {
        uint64_t v11 = (void **)&v6[24 * v10];
        unint64_t v12 = *v11;
        if (*v11)
        {
          v11[1] = v12;
          operator delete(v12);
          *uint64_t v11 = 0;
          v11[1] = 0;
          v11[2] = 0;
        }
        *(_OWORD *)uint64_t v11 = *(_OWORD *)v6;
        v11[2] = (void *)*((void *)v6 + 2);
        *(void *)unint64_t v6 = 0;
        *((void *)v6 + 1) = 0;
        *((void *)v6 + 2) = 0;
        v6 += 24;
      }
      while (v6 != v4);
      unint64_t v4 = a1[1];
      char v27 = &v6[24 * v10];
    }
    a1[1] = &v4[24 * v10];
    a1[2] = v27;
    unint64_t v4 = v27;
LABEL_25:
    *(void *)unint64_t v4 = 0;
    *((void *)v4 + 1) = 0;
    *((void *)v4 + 2) = 0;
    uint64_t v28 = *(const void **)a2;
    size_t v29 = *(void *)(a2 + 8) - *(void *)a2;
    if (!v29) {
      goto LABEL_28;
    }
    goto LABEL_26;
  }
  unint64_t v13 = 0x5555555555555556 * ((v4 - v5) >> 3);
  if (v4 == v5) {
    unint64_t v13 = 1;
  }
  if (v13 >= 0xAAAAAAAAAAAAAABLL) {
    sub_188D718();
  }
  unint64_t v14 = v13 >> 2;
  uint64_t v15 = 24 * v13;
  unint64_t v16 = (char *)operator new(24 * v13);
  uint64_t v17 = &v16[24 * v14];
  size_t v18 = &v16[v15];
  if (v4 == v6)
  {
    *a1 = v16;
    a1[1] = v17;
    a1[2] = v17;
    a1[3] = v18;
  }
  else
  {
    uint64_t v19 = &v17[v4 - v6];
    uint64_t v20 = 24 * v14;
    do
    {
      unint64_t v21 = &v16[v20];
      *(_OWORD *)unint64_t v21 = *(_OWORD *)v6;
      *((void *)v21 + 2) = *((void *)v6 + 2);
      *(void *)unint64_t v6 = 0;
      *((void *)v6 + 1) = 0;
      *((void *)v6 + 2) = 0;
      v20 += 24;
      v6 += 24;
    }
    while (v21 + 24 != v19);
    unint64_t v5 = *a1;
    uint64_t v22 = a1[1];
    long long v23 = a1[2];
    *a1 = v16;
    a1[1] = v17;
    a1[2] = v19;
    a1[3] = v18;
    if (v23 != v22)
    {
      long long v24 = v23;
      do
      {
        long long v26 = (void *)*((void *)v24 - 3);
        v24 -= 24;
        unint64_t v25 = v26;
        if (v26)
        {
          *((void *)v23 - 2) = v25;
          operator delete(v25);
        }
        long long v23 = v24;
      }
      while (v24 != v22);
    }
  }
  if (v5) {
    operator delete(v5);
  }
  unint64_t v4 = a1[2];
  *(void *)unint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  *((void *)v4 + 2) = 0;
  uint64_t v28 = *(const void **)a2;
  size_t v29 = *(void *)(a2 + 8) - *(void *)a2;
  if (v29)
  {
LABEL_26:
    if ((v29 & 0x8000000000000000) != 0) {
      sub_2E00();
    }
    uint64_t v30 = (char *)operator new(v29);
    *(void *)unint64_t v4 = v30;
    *((void *)v4 + 1) = v30;
    unint64_t v31 = &v30[v29];
    *((void *)v4 + 2) = &v30[v29];
    memcpy(v30, v28, v29);
    *((void *)v4 + 1) = v31;
  }
LABEL_28:
  a1[2] += 24;
}

void sub_670628(_Unwind_Exception *exception_object)
{
  unint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_670644(char **a1, uint64_t a2)
{
  unint64_t v4 = *a1;
  unint64_t v3 = a1[1];
  unint64_t v5 = 0xAAAAAAAAAAAAAAABLL * ((v3 - *a1) >> 3);
  unint64_t v6 = v5 + 1;
  if (v5 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_2E00();
  }
  if (0x5555555555555556 * ((a1[2] - v4) >> 3) > v6) {
    unint64_t v6 = 0x5555555555555556 * ((a1[2] - v4) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * ((a1[2] - v4) >> 3) >= 0x555555555555555) {
    unint64_t v8 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v8 = v6;
  }
  if (v8)
  {
    if (v8 > 0xAAAAAAAAAAAAAAALL) {
      sub_188D718();
    }
    uint64_t v9 = (char *)operator new(24 * v8);
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = &v9[24 * v5];
  uint64_t v11 = &v9[24 * v8];
  *((void *)v10 + 1) = 0;
  *((void *)v10 + 2) = 0;
  *(void *)uint64_t v10 = 0;
  unint64_t v12 = *(const void **)a2;
  size_t v13 = *(void *)(a2 + 8) - *(void *)a2;
  if (v13)
  {
    if ((v13 & 0x8000000000000000) != 0) {
      sub_2E00();
    }
    unint64_t v14 = (char *)operator new(v13);
    *(void *)uint64_t v10 = v14;
    *((void *)v10 + 1) = v14;
    uint64_t v15 = &v14[v13];
    *((void *)v10 + 2) = &v14[v13];
    memcpy(v14, v12, v13);
    *((void *)v10 + 1) = v15;
  }
  unint64_t v16 = v10 + 24;
  long long v24 = v10 + 24;
  if (v3 == v4)
  {
    *a1 = v10;
    a1[1] = v16;
    a1[2] = v11;
  }
  else
  {
    do
    {
      uint64_t v17 = v10;
      *((void *)v10 - 2) = 0;
      *((void *)v10 - 1) = 0;
      long long v18 = *(_OWORD *)(v3 - 24);
      v3 -= 24;
      *(_OWORD *)(v10 - 24) = v18;
      v10 -= 24;
      *((void *)v17 - 1) = *((void *)v3 + 2);
      *(void *)unint64_t v3 = 0;
      *((void *)v3 + 1) = 0;
      *((void *)v3 + 2) = 0;
    }
    while (v3 != v4);
    uint64_t v19 = *a1;
    unint64_t v3 = a1[1];
    unint64_t v16 = v24;
    *a1 = v10;
    a1[1] = v24;
    a1[2] = v11;
    if (v3 != v19)
    {
      uint64_t v20 = v3;
      do
      {
        uint64_t v22 = (void *)*((void *)v20 - 3);
        v20 -= 24;
        unint64_t v21 = v22;
        if (v22)
        {
          *((void *)v3 - 2) = v21;
          operator delete(v21);
        }
        unint64_t v3 = v20;
      }
      while (v20 != v19);
      unint64_t v3 = v19;
    }
  }
  if (v3) {
    operator delete(v3);
  }
  return v16;
}

void sub_670814(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  unint64_t v4 = *(void **)v2;
  if (*(void *)v2)
  {
    *(void *)(v2 + 8) = v4;
    operator delete(v4);
  }
  sub_2A6E80((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_670838(void *a1, unint64_t a2, uint64_t a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    if (a2 >= 0xAAAAAAAAAAAAAABLL) {
      sub_2E00();
    }
    uint64_t v6 = 3 * a2;
    int64_t v7 = operator new(24 * a2);
    unint64_t v8 = v7;
    *a1 = v7;
    a1[1] = v7;
    uint64_t v9 = &v7[v6];
    a1[2] = &v7[v6];
    uint64_t v10 = *(const void **)a3;
    size_t v11 = *(void *)(a3 + 8) - *(void *)a3;
    if (v11)
    {
      if ((v11 & 0x8000000000000000) != 0)
      {
        *int64_t v7 = 0;
        v7[1] = 0;
        v7[2] = 0;
        sub_2E00();
      }
      uint64_t v12 = 24 * a2;
      do
      {
        void *v8 = 0;
        v8[1] = 0;
        v8[2] = 0;
        size_t v13 = (char *)operator new(v11);
        void *v8 = v13;
        v8[1] = v13;
        unint64_t v14 = &v13[v11];
        v8[2] = &v13[v11];
        memcpy(v13, v10, v11);
        v8[1] = v14;
        v8 += 3;
        v12 -= 24;
      }
      while (v12);
    }
    else
    {
      bzero(v7, 24 * ((v6 * 8 - 24) / 0x18uLL) + 24);
    }
    a1[1] = v9;
  }
  return a1;
}

void sub_670958(_Unwind_Exception *exception_object)
{
  unint64_t v4 = *(void **)v2;
  if (*(void *)v2)
  {
    *(void *)(v2 + 8) = v4;
    operator delete(v4);
    *(void *)(v1 + 8) = v2;
    _Unwind_Resume(exception_object);
  }
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(exception_object);
}

double sub_670988()
{
  byte_259C37F = 1;
  word_259C368 = 65;
  byte_259C397 = 1;
  word_259C380 = 65;
  char v4 = 7;
  strcpy((char *)v3, "UNKNOWN");
  int v5 = 0;
  char v7 = 14;
  strcpy((char *)v6, "ROUTES_THROUGH");
  int v8 = 1;
  char v10 = 9;
  strcpy((char *)__p, "ROUTES_TO");
  int v11 = 3;
  char v13 = 11;
  strcpy((char *)v12, "ROUTES_FROM");
  int v14 = 2;
  xmmword_259C3C8 = 0u;
  *(_OWORD *)&qword_259C3D8 = 0u;
  dword_259C3E8 = 1065353216;
  sub_3A6EF0((uint64_t)&xmmword_259C3C8, (uint64_t)v3, (uint64_t)v3);
  sub_3A6EF0((uint64_t)&xmmword_259C3C8, (uint64_t)v6, (uint64_t)v6);
  sub_3A6EF0((uint64_t)&xmmword_259C3C8, (uint64_t)__p, (uint64_t)__p);
  sub_3A6EF0((uint64_t)&xmmword_259C3C8, (uint64_t)v12, (uint64_t)v12);
  if (v13 < 0)
  {
    operator delete(v12[0]);
    if ((v10 & 0x80000000) == 0)
    {
LABEL_3:
      if ((v7 & 0x80000000) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      operator delete(v6[0]);
      if ((v4 & 0x80000000) == 0) {
        goto LABEL_5;
      }
LABEL_9:
      operator delete(v3[0]);
      goto LABEL_5;
    }
  }
  else if ((v10 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p[0]);
  if (v7 < 0) {
    goto LABEL_8;
  }
LABEL_4:
  if (v4 < 0) {
    goto LABEL_9;
  }
LABEL_5:
  qword_259C3A0 = 0;
  qword_259C3A8 = 0;
  qword_259C398 = 0;
  uint64_t v0 = operator new(9uLL);
  *(void *)uint64_t v0 = 0x4020C000103050DLL;
  v0[8] = 6;
  qword_259C398 = (uint64_t)v0;
  qword_259C3A0 = (uint64_t)(v0 + 9);
  qword_259C3A8 = (uint64_t)(v0 + 9);
  qword_259C3B0 = 0;
  qword_259C3B8 = 0;
  unk_259C3C0 = 0;
  uint64_t v1 = (char *)operator new(9uLL);
  qword_259C3B8 = (uint64_t)(v1 + 9);
  unk_259C3C0 = v1 + 9;
  double result = 1.10224369e-279;
  *(void *)uint64_t v1 = 0x604020C00010305;
  v1[8] = 13;
  qword_259C3B0 = (uint64_t)v1;
  return result;
}

void sub_670BC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  if (qword_259C3D8) {
    sub_20AA724((void **)qword_259C3D8);
  }
  uint64_t v37 = (void *)xmmword_259C3C8;
  *(void *)&xmmword_259C3C8 = 0;
  if (v37)
  {
    operator delete(v37);
    if ((a36 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a29 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_11;
    }
  }
  else if ((a36 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(__p);
  if ((a29 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a22 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_12;
  }
LABEL_11:
  operator delete(a24);
  if ((a22 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a15 & 0x80000000) == 0) {
LABEL_14:
    }
      _Unwind_Resume(exception_object);
LABEL_13:
    operator delete(a10);
    _Unwind_Resume(exception_object);
  }
LABEL_12:
  operator delete(a17);
  if ((a15 & 0x80000000) == 0) {
    goto LABEL_14;
  }
  goto LABEL_13;
}

uint64_t sub_670C64(uint64_t a1, void *a2, std::string *__str, uint64_t a4)
{
  uint64_t v7 = sub_62B9C4(a1, (int)a2, 0, 0, __str);
  sub_6661C8(v7 + 2040, a2, a1, a4);
  sub_67136C((uint64_t *)(a1 + 8232), a2, a1);
  sub_6807A0((void *)(a1 + 8248), (uint64_t)a2, a1, a4);
  sub_8DC950(a1 + 8272, a2, a4, a1);
  return a1;
}

void sub_670D04(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 1927) < 0) {
    operator delete(*(void **)(v1 + 1904));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_670D34(uint64_t *a1, void *a2)
{
  sub_666298(a1 + 255, a2);
  sub_6713A0(a1 + 1029, a2);
  sub_6807D0(a1 + 1031, a2);
  uint64_t v4 = a2[133];
  uint64_t v5 = a2[134];
  while (v4 != v5)
  {
    if ((*(_DWORD *)(v4 + 160) - 89) <= 1)
    {
      uint64_t v6 = *(void *)(v4 + 1816);
      for (i = *(void *)(v4 + 1808); v6 != i; uint64_t v6 = sub_576848(v6 - 336))
        ;
      *(void *)(v4 + 1816) = i;
    }
    v4 += 2400;
  }

  return sub_8DC978(a1 + 1034, a2);
}

uint64_t sub_670DFC(uint64_t *a1, uint64_t a2)
{
  uint64_t result = nullsub_1(a2);
  uint64_t v4 = *(void **)result;
  uint64_t v5 = *(void **)(result + 8);
  if (*(void **)result != v5)
  {
    uint64_t v6 = a1 + 255;
    uint64_t v7 = a1 + 1029;
    int v8 = a1 + 1031;
    uint64_t v9 = a1 + 1034;
    do
    {
      sub_666298(v6, v4);
      sub_6713A0(v7, v4);
      sub_6807D0(v8, v4);
      uint64_t v10 = v4[133];
      uint64_t v11 = v4[134];
      while (v10 != v11)
      {
        if ((*(_DWORD *)(v10 + 160) - 89) <= 1)
        {
          uint64_t v12 = *(void *)(v10 + 1816);
          for (i = *(void *)(v10 + 1808); v12 != i; uint64_t v12 = sub_576848(v12 - 336))
            ;
          *(void *)(v10 + 1816) = i;
        }
        v10 += 2400;
      }
      uint64_t result = sub_8DC978(v9, v4);
      v4 += 1541;
    }
    while (v4 != v5);
  }
  return result;
}

BOOL sub_670F00(uint64_t a1)
{
  return sub_8DC954(a1 + 8272);
}

void *sub_670F0C(void *a1)
{
  uint64_t v2 = (void *)a1[771];
  if (v2)
  {
    a1[772] = v2;
    operator delete(v2);
  }
  unint64_t v3 = (void *)a1[768];
  if (v3)
  {
    a1[769] = v3;
    operator delete(v3);
  }
  uint64_t v4 = (void *)a1[765];
  if (v4)
  {
    a1[766] = v4;
    operator delete(v4);
  }
  uint64_t v5 = a1[762];
  if (v5)
  {
    uint64_t v6 = a1[763];
    uint64_t v7 = (void *)a1[762];
    if (v6 != v5)
    {
      do
      {
        uint64_t v9 = *(void *)(v6 - 32);
        if (v9)
        {
          uint64_t v10 = *(void *)(v6 - 24);
          int v8 = *(void **)(v6 - 32);
          if (v10 != v9)
          {
            do
            {
              uint64_t v11 = *(void **)(v10 - 24);
              if (v11)
              {
                *(void *)(v10 - 16) = v11;
                operator delete(v11);
              }
              v10 -= 32;
            }
            while (v10 != v9);
            int v8 = *(void **)(v6 - 32);
          }
          *(void *)(v6 - 24) = v9;
          operator delete(v8);
        }
        v6 -= 48;
      }
      while (v6 != v5);
      uint64_t v7 = (void *)a1[762];
    }
    a1[763] = v5;
    operator delete(v7);
  }
  uint64_t v12 = (void *)a1[759];
  if (v12)
  {
    a1[760] = v12;
    operator delete(v12);
  }
  sub_68D2B0(a1 + 1);
  return a1;
}

double sub_671004()
{
  byte_259C407 = 1;
  word_259C3F0 = 65;
  byte_259C41F = 1;
  word_259C408 = 65;
  char v4 = 7;
  strcpy((char *)v3, "UNKNOWN");
  int v5 = 0;
  char v7 = 14;
  strcpy((char *)v6, "ROUTES_THROUGH");
  int v8 = 1;
  char v10 = 9;
  strcpy((char *)__p, "ROUTES_TO");
  int v11 = 3;
  char v13 = 11;
  strcpy((char *)v12, "ROUTES_FROM");
  int v14 = 2;
  xmmword_259C4B0 = 0u;
  *(_OWORD *)&qword_259C4C0 = 0u;
  dword_259C4D0 = 1065353216;
  sub_3A6EF0((uint64_t)&xmmword_259C4B0, (uint64_t)v3, (uint64_t)v3);
  sub_3A6EF0((uint64_t)&xmmword_259C4B0, (uint64_t)v6, (uint64_t)v6);
  sub_3A6EF0((uint64_t)&xmmword_259C4B0, (uint64_t)__p, (uint64_t)__p);
  sub_3A6EF0((uint64_t)&xmmword_259C4B0, (uint64_t)v12, (uint64_t)v12);
  if (v13 < 0)
  {
    operator delete(v12[0]);
    if ((v10 & 0x80000000) == 0)
    {
LABEL_3:
      if ((v7 & 0x80000000) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      operator delete(v6[0]);
      if ((v4 & 0x80000000) == 0) {
        goto LABEL_5;
      }
LABEL_9:
      operator delete(v3[0]);
      goto LABEL_5;
    }
  }
  else if ((v10 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p[0]);
  if (v7 < 0) {
    goto LABEL_8;
  }
LABEL_4:
  if (v4 < 0) {
    goto LABEL_9;
  }
LABEL_5:
  byte_259C437 = 8;
  strcpy((char *)&qword_259C420, "any_mode");
  byte_259C44F = 7;
  strcpy((char *)&dword_259C438, "cycling");
  byte_259C467 = 7;
  strcpy((char *)&dword_259C450, "driving");
  byte_259C47F = 7;
  strcpy((char *)&dword_259C468, "walking");
  qword_259C488 = 0;
  qword_259C490 = 0;
  qword_259C480 = 0;
  uint64_t v0 = operator new(9uLL);
  *(void *)uint64_t v0 = 0x4020C000103050DLL;
  v0[8] = 6;
  qword_259C480 = (uint64_t)v0;
  qword_259C488 = (uint64_t)(v0 + 9);
  qword_259C490 = (uint64_t)(v0 + 9);
  qword_259C498 = 0;
  qword_259C4A0 = 0;
  unk_259C4A8 = 0;
  uint64_t v1 = (char *)operator new(9uLL);
  qword_259C4A0 = (uint64_t)(v1 + 9);
  unk_259C4A8 = v1 + 9;
  double result = 1.10224369e-279;
  *(void *)uint64_t v1 = 0x604020C00010305;
  v1[8] = 13;
  qword_259C498 = (uint64_t)v1;
  return result;
}

void sub_6712CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  if (qword_259C4C0) {
    sub_20AA768((void **)qword_259C4C0);
  }
  uint64_t v37 = (void *)xmmword_259C4B0;
  *(void *)&xmmword_259C4B0 = 0;
  if (v37)
  {
    operator delete(v37);
    if ((a36 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a29 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_11;
    }
  }
  else if ((a36 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(__p);
  if ((a29 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a22 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_12;
  }
LABEL_11:
  operator delete(a24);
  if ((a22 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a15 & 0x80000000) == 0) {
LABEL_14:
    }
      _Unwind_Resume(exception_object);
LABEL_13:
    operator delete(a10);
    _Unwind_Resume(exception_object);
  }
LABEL_12:
  operator delete(a17);
  if ((a15 & 0x80000000) == 0) {
    goto LABEL_14;
  }
  goto LABEL_13;
}

uint64_t *sub_67136C(uint64_t *a1, void *a2, uint64_t a3)
{
  *a1 = sub_3750CC(a2);
  a1[1] = a3;
  return a1;
}

uint64_t sub_6713A0(uint64_t *a1, void *a2)
{
  uint64_t v4 = a2[133];
  uint64_t v5 = a2[134];
  if (v4 != v5)
  {
    do
    {
      if (*(void *)(v4 + 1808) != *(void *)(v4 + 1816))
      {
        uint64_t v6 = (unsigned __int8 *)(v4 + 329);
        if (!*(unsigned char *)(v4 + 330)) {
          uint64_t v6 = (unsigned __int8 *)a2 + 1057;
        }
        sub_6716A4((uint64_t)a1, v4, *v6);
        sub_671930((uint64_t)a1, a2, (void *)v4);
      }
      v4 += 2400;
    }
    while (v4 != v5);
    uint64_t v7 = a2[133];
    uint64_t v8 = a2[134];
    while (v7 != v8)
    {
      uint64_t v9 = *(void *)(v7 + 1808);
      uint64_t v10 = *(void *)(v7 + 1816);
      while (v9 != v10)
      {
        unsigned __int8 v11 = sub_682244(v9);
        if (v11)
        {
          uint64_t v12 = 0;
          uint64_t v13 = v11;
          do
          {
            if (sub_682F48(v9, v12))
            {
              if (sub_673468(a1, a2, v9, v12)) {
                sub_685F44(v9, v12);
              }
            }
            ++v12;
          }
          while (v13 != v12);
        }
        v9 += 336;
      }
      v7 += 2400;
    }
  }
  sub_671F1C((uint64_t)a1, (uint64_t)a2);
  uint64_t v14 = sub_672110((uint64_t)a1, a2);
  uint64_t v15 = sub_672740(v14, (uint64_t)a2);
  uint64_t v16 = a2[133];
  uint64_t v34 = a2[134];
  if (v16 != v34)
  {
    do
    {
      uint64_t v18 = *(void *)(v16 + 1816) - *(void *)(v16 + 1808);
      if (v18)
      {
        unint64_t v19 = 0;
        unint64_t v20 = 0xCF3CF3CF3CF3CF3DLL * (v18 >> 4);
        do
        {
          uint64_t v21 = sub_6672BC((void *)(v16 + 1808), v19);
          uint64_t v15 = sub_682244(v21);
          if ((_BYTE)v15)
          {
            uint64_t v22 = 0;
            uint64_t v23 = v15;
            do
            {
              if (!sub_682F48(v21, v22) || (uint64_t v15 = sub_682CE4(v21, v22), v15))
              {
                uint64_t v35 = sub_67499C((uint64_t)a1, v16, v19, v22);
                uint64_t v15 = sub_685F2C(v21, v22, &v35);
              }
              ++v22;
            }
            while (v23 != v22);
          }
          ++v19;
        }
        while (v19 != v20);
      }
      uint64_t v17 = (unsigned __int8 *)(v16 + 329);
      if (!*(unsigned char *)(v16 + 330)) {
        uint64_t v17 = (unsigned __int8 *)a2 + 1057;
      }
      sub_672C90(v15, v16, *v17);
      v16 += 2400;
    }
    while (v16 != v34);
    uint64_t v24 = a2[133];
    uint64_t v25 = a2[134];
    while (v24 != v25)
    {
      uint64_t v26 = *(void *)(v24 + 1808);
      for (uint64_t i = *(void *)(v24 + 1816); v26 != i; v26 += 336)
      {
        if (*(unsigned char *)(v24 + 330)) {
          uint64_t v28 = (unsigned __int8 *)(v24 + 329);
        }
        else {
          uint64_t v28 = (unsigned __int8 *)a2 + 1057;
        }
        int v29 = *v28;
        unint64_t v30 = sub_682540(v26);
        if ((_BYTE)v30)
        {
          sub_6741D8(v30, v26);
          sub_674564(v31, v26);
        }
        if (v29 != 1) {
          sub_684D48(v26);
        }
      }
      v24 += 2400;
    }
  }
  uint64_t v32 = sub_69510();
  uint64_t result = sub_6914C((uint64_t)v32);
  if (result == 1) {
    return sub_672FB4(result, a2);
  }
  return result;
}

uint64_t sub_6716A4(uint64_t result, uint64_t a2, int a3)
{
  int v3 = *(_DWORD *)(a2 + 160);
  if ((v3 - 25) <= 0x3F && ((1 << (v3 - 25)) & 0x9000000000000001) != 0 || v3 == 17) {
    return result;
  }
  uint64_t v8 = result;
  uint64_t v9 = *(void *)(a2 + 1808) + 336 * (*(void *)(a2 + 64) - *(void *)(a2 + 40));
  uint64_t result = sub_684790(v9);
  if (!result
    || !*(unsigned char *)(*(void *)(v8 + 8) + 2028) && ((v3 - 41) < 0x13 || v3 == 7 || v3 == 26))
  {
    return result;
  }
  unsigned int v10 = *(_DWORD *)(a2 + 160);
  if (v10 - 82 >= 3 && (v10 > 0x27 || ((1 << v10) & 0x8600050000) == 0)) {
    goto LABEL_24;
  }
  if (sub_682244(v9) < 2u)
  {
    unsigned int v10 = *(_DWORD *)(a2 + 160);
    if (v10 - 82 < 3)
    {
LABEL_26:
      if (sub_682244(v9) == 1)
      {
LABEL_36:
        uint64_t v16 = v9;
        unsigned __int8 v17 = 0;
        char v18 = 1;
        goto LABEL_39;
      }
LABEL_27:
      unsigned __int8 v13 = sub_682244(v9);
      if (v13)
      {
        uint64_t v14 = 0;
        uint64_t v15 = v13;
        do
        {
          if ((sub_6847B8(v9, v14) & 1) != 0 || sub_6861A0(v9, v14)) {
            sub_6847E8(v9, v14, 1);
          }
          ++v14;
        }
        while (v15 != v14);
      }
      if (sub_6861A0(v9, 0) || sub_682244(v9) != 1) {
        goto LABEL_40;
      }
      goto LABEL_36;
    }
LABEL_24:
    if (v10 > 0x27 || ((1 << v10) & 0x8600050000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_26;
  }
  if (v3 == 33)
  {
    int v12 = 0;
    int v11 = 1;
  }
  else
  {
    if (v3 != 34)
    {
      unsigned __int8 v20 = sub_682244(v9);
      if (v20)
      {
        uint64_t v21 = 0;
        uint64_t v22 = v20;
        do
          sub_6847E8(v9, v21++, 1);
        while (v22 != v21);
      }
      goto LABEL_40;
    }
    int v11 = 0;
    int v12 = 1;
  }
  sub_6847E8(v9, 0, v11 == a3);
  unsigned __int8 v19 = sub_682244(v9) - 1;
  char v18 = v12 == a3;
  unsigned __int8 v17 = v19;
  uint64_t v16 = v9;
LABEL_39:
  sub_6847E8(v16, v17, v18);
LABEL_40:

  return sub_6835F0(v9, 4);
}

uint64_t sub_671930(uint64_t a1, void *a2, void *a3)
{
  unint64_t v6 = a3[8];
  uint64_t v7 = a3 + 226;
  uint64_t v8 = sub_6672BC(a3 + 226, v6 - a3[5]);
  sub_5964A0((uint64_t)v55, v8);
  uint64_t v9 = (void *)sub_46C8EC(a2, v6);
  unsigned int v10 = (unsigned __int16 *)(*v9 - *(int *)*v9);
  if (*v10 >= 9u && (uint64_t v11 = v10[4]) != 0) {
    uint64_t v53 = *(unsigned int *)(*v9 + v11);
  }
  else {
    uint64_t v53 = 0;
  }
  char v46 = a2 + 1445;
  int v12 = (int *)sub_5592F8(a2 + 1445, v6);
  int v13 = *v12;
  uint64_t v50 = sub_62C0F4(*(void **)(a1 + 8), *v12);
  uint64_t v49 = sub_62C160(*(void **)(a1 + 8), v13);
  uint64_t v48 = sub_62C2A4(*(void **)(a1 + 8), v13);
  uint64_t v47 = sub_62C1CC(*(void **)(a1 + 8), v13);
  uint64_t v44 = sub_62C238(*(void **)(a1 + 8), v13);
  int v14 = *((_DWORD *)a3 + 10);
  int v15 = v14 - 1;
  int v16 = v6 - 1;
  if (v14 - 1 >= (int)v6 - 1) {
    int v15 = v6 - 1;
  }
  int v51 = v15;
  if (v16 >= v14)
  {
    unint64_t v18 = v16;
    uint64_t v52 = v53;
    uint64_t v45 = v7;
    do
    {
      while (1)
      {
        if ((unsigned __int8 v20 = (void *)sub_46C8EC(a2, v18), v21 = sub_6672BC(v7, v18 - a3[5]), (sub_684624(v21) & 1) == 0)
          && !sub_684630(v21)
          || sub_682244(v21))
        {
          uint64_t v22 = sub_577CC8(v7, v18 - a3[5]);
          uint64_t v23 = sub_68463C(v22);
          if ((v23 & 1) != 0
            || (unsigned __int8 v24 = sub_6861D0(v22), v23 = sub_682244(v22), v23 == v24)
            || (uint64_t v23 = sub_682244(v22), !(_BYTE)v23))
          {
            int v29 = 0;
          }
          else
          {
            uint64_t v25 = a1;
            uint64_t v26 = a2;
            uint64_t v27 = 0;
            uint64_t v28 = v23 - 1;
            do
            {
              uint64_t v23 = sub_682CE4(v22, v27);
              int v29 = v23;
              if (v28 == v27++) {
                int v31 = 1;
              }
              else {
                int v31 = v23;
              }
            }
            while (v31 != 1);
            a2 = v26;
            a1 = v25;
            uint64_t v7 = v45;
          }
          uint64_t v32 = sub_67322C(v23, (uint64_t)a3, v18);
          int v33 = v32;
          if (v52 <= v50 || v53 <= v49) {
            sub_67330C(v32, (uint64_t)a3, v18, (uint64_t)v55);
          }
          if (!sub_682728(v21))
          {
            uint64_t v34 = sub_68206C((uint64_t)v54);
            sub_67330C(v34, (uint64_t)a3, v18, (uint64_t)v54);
            sub_576848((uint64_t)v54);
          }
          sub_59F334((uint64_t)v55, v21);
          if (!sub_6835E8(v21))
          {
            sub_6835F0(v21, 1);
            if (v52 >= v48) {
              break;
            }
          }
        }
        uint64_t v35 = (unsigned __int16 *)(*v20 - *(int *)*v20);
        if (*v35 >= 9u && (uint64_t v36 = v35[4]) != 0)
        {
          uint64_t v19 = *(unsigned int *)(*v20 + v36);
          v52 += v19;
        }
        else
        {
          uint64_t v19 = 0;
        }
        v53 += v19;
        if (v51 == --v18) {
          return sub_576848((uint64_t)v55);
        }
      }
      uint64_t v37 = (int *)sub_5592F8(v46, v18);
      int v38 = v29 & v33;
      int v39 = *v37;
      if (v52 > v47) {
        int v38 = 0;
      }
      if (v38 == 1)
      {
        sub_6835F0(v21, 7);
        uint64_t v49 = sub_62C160(*(void **)(a1 + 8), v39);
      }
      else
      {
        if (v33)
        {
          if (v52 <= v47) {
            char v40 = 5;
          }
          else {
            char v40 = 3;
          }
        }
        else
        {
          if (!v29) {
            goto LABEL_49;
          }
          if (v52 <= v44) {
            char v40 = 6;
          }
          else {
            char v40 = 3;
          }
        }
        sub_6835F0(v21, v40);
        uint64_t v49 = sub_62C160(*(void **)(a1 + 8), v39);
      }
      uint64_t v53 = 0;
LABEL_49:
      unint64_t v41 = (unsigned __int16 *)(*v20 - *(int *)*v20);
      if (*v41 >= 9u && (uint64_t v42 = v41[4]) != 0)
      {
        uint64_t v43 = *(unsigned int *)(*v20 + v42);
        v53 += v43;
      }
      else
      {
        uint64_t v43 = 0;
      }
      v52 += v43;
      --v18;
    }
    while (v51 != v18);
  }
  return sub_576848((uint64_t)v55);
}

void sub_671D70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
}

void sub_671D84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
}

void sub_671D98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
}

void sub_671DAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
}

void sub_671DC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
}

void sub_671DD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
}

void sub_671DE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
}

void sub_671DFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
}

void sub_671E10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
}

void sub_671E24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
}

void sub_671E38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
}

void sub_671E4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
}

void sub_671E68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
}

void sub_671E7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
}

void sub_671E90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
}

void sub_671EA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
}

void sub_671EB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
}

void sub_671ECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
}

void sub_671EE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
}

void sub_671EF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
}

void sub_671F08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
}

void sub_671F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 1072);
  uint64_t v3 = *(void *)(a2 + 1064);
  unint64_t v4 = 0x2FC962FC962FC963 * ((v2 - v3) >> 5);
  if (v4 >= 3)
  {
    uint64_t v7 = 0;
    uint64_t v8 = (void *)(a2 + 1064);
    while (v2 + v7 != v3)
    {
      int v9 = *(unsigned __int8 *)(v2 + v7 - 2072);
      v7 -= 2400;
      if (v9 == 5)
      {
        unint64_t v10 = v4 + ~(0x2FC962FC962FC963 * ((-2400 - v7) >> 5));
        uint64_t v11 = (void *)(v2 + v7);
        if (v11[226] != v11[227])
        {
          uint64_t v12 = sub_6672BC(v11 + 226, v11[8] - v11[5]);
          sub_684BCC(v12, v12);
        }
        if (v10 <= 1) {
          uint64_t v13 = 1;
        }
        else {
          uint64_t v13 = v10;
        }
        if (v10 >= 2)
        {
          unint64_t v14 = 1;
          do
          {
            uint64_t v15 = sub_51690C(v8, v14);
            if (*(void *)(v15 + 1808) == *(void *)(v15 + 1816))
            {
              ++v14;
            }
            else
            {
              uint64_t v16 = v15;
              unsigned __int8 v17 = (void *)sub_6672BC((void *)(v15 + 1808), *(void *)(v16 + 64) - *(void *)(v16 + 40));
              uint64_t v18 = sub_51690C(v8, ++v14);
              if (*(void *)(v18 + 872) > sub_62C0F4(*(void **)(a1 + 8), *(_DWORD *)(v18 + 1860))
                || (unint64_t v19 = sub_682728((uint64_t)v17), v19 <= 1u))
              {
                sub_684BCC((uint64_t)v17, (uint64_t)v17);
              }
              else if (*(unsigned char *)(v18 + 1864) {
                     || *(void *)(v16 + 72) < *(void *)(v16 + 24)
              }
                     || (sub_673878(v19, (void *)v16, v18, (uint64_t)v17), unint64_t v19 = sub_682540((uint64_t)v17), !(_BYTE)v19))
              {
                unsigned __int8 v20 = (unsigned __int8 *)(v16 + 329);
                if (!*(unsigned char *)(v16 + 330)) {
                  unsigned __int8 v20 = (unsigned __int8 *)(a2 + 1057);
                }
                sub_6739C8(v19, v18, v17, *v20);
              }
            }
          }
          while (v14 != v13);
        }
        return;
      }
    }
  }
}

uint64_t sub_672110(uint64_t result, void *a2)
{
  uint64_t v2 = a2[133];
  uint64_t v48 = a2[134];
  for (uint64_t i = result; v2 != v48; v2 += 2400)
  {
    if (*(void *)(v2 + 1808) != *(void *)(v2 + 1816))
    {
      unint64_t v3 = *(void *)(v2 + 64);
      unint64_t v4 = (int *)sub_66AF3C(a2 + 1445, v3);
      uint64_t v5 = sub_62C238(*(void **)(i + 8), *v4);
      uint64_t v7 = sub_46CCC8(a2, v3, v6);
      int v51 = (void *)(v2 + 1808);
      uint64_t v8 = sub_6672BC((void *)(v2 + 1808), *(void *)(v2 + 64) - *(void *)(v2 + 40));
      sub_5964A0((uint64_t)v52, v8);
      uint64_t v9 = *(void *)(v2 + 64);
      uint64_t v10 = *(void *)(v2 + 40);
      if ((int)v10 - 1 >= (int)v9 - 1) {
        int v11 = v9 - 1;
      }
      else {
        int v11 = v10 - 1;
      }
      if ((int)v9 > (int)v10)
      {
        uint64_t v12 = (int)v9 - 1;
        do
        {
          while (1)
          {
            uint64_t v16 = sub_6672BC(v51, v12 - *(void *)(v2 + 40));
            if ((sub_684624(v16) & 1) == 0 && !sub_684630(v16)) {
              break;
            }
            if (sub_682244(v16)) {
              break;
            }
            v7 += sub_46CCC8(a2, v12--, v17);
            if (v11 == v12) {
              goto LABEL_38;
            }
          }
          if (v7 <= v5)
          {
            if (sub_68463C(v16)
              && !sub_6861D0(v16)
              && (unsigned __int8 v23 = sub_682244(v16), sub_682244((uint64_t)v52) == v23))
            {
              sub_684AE8(v16, (uint64_t)v52);
            }
            else
            {
              unsigned __int8 v24 = sub_682244(v16);
              if (v24)
              {
                uint64_t v25 = 0;
                uint64_t v26 = v24;
                do
                {
                  uint64_t v27 = sub_686088(v16, v25);
                  if (sub_682F48(v16, v25)) {
                    int v28 = sub_685940((uint64_t)v52, (unsigned __int8 **)v27);
                  }
                  else {
                    int v28 = 0;
                  }
                  sub_684808(v16, v25++, v28);
                }
                while (v26 != v25);
              }
              if (!sub_682540(v16)) {
                sub_673D18(i, v2, v16);
              }
            }
          }
          else
          {
            unsigned __int8 v18 = sub_682244(v16);
            if (v18)
            {
              uint64_t v20 = 0;
              uint64_t v21 = v18;
              do
              {
                if (sub_682F48(v16, v20)) {
                  BOOL v22 = !sub_682CE4(v16, v20);
                }
                else {
                  BOOL v22 = 0;
                }
                sub_684808(v16, v20++, v22);
              }
              while (v21 != v20);
            }
          }
          uint64_t v29 = sub_46CCC8(a2, v12, v19);
          if (v52 != (void *)v16)
          {
            int v53 = *(_DWORD *)(v16 + 32);
            sub_59F474(v52, *(uint64_t **)(v16 + 16), 0);
            int v55 = *(_DWORD *)(v16 + 72);
            sub_59FB30(v54, *(uint64_t **)(v16 + 56), 0);
            int v57 = *(_DWORD *)(v16 + 112);
            sub_59FD50(v56, *(uint64_t **)(v16 + 96), 0);
            int v59 = *(_DWORD *)(v16 + 152);
            sub_59FD50(v58, *(uint64_t **)(v16 + 136), 0);
            int v60 = *(_DWORD *)(v16 + 160);
            sub_59FE78((uint64_t)&v61, *(char ***)(v16 + 168), *(void *)(v16 + 176), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v16 + 176) - *(void *)(v16 + 168)) >> 3));
            sub_59FE78((uint64_t)&v62, *(char ***)(v16 + 192), *(void *)(v16 + 200), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v16 + 200) - *(void *)(v16 + 192)) >> 3));
            uint64_t v30 = *(void *)(v16 + 216);
            *(_DWORD *)((char *)v63 + 7) = *(_DWORD *)(v16 + 223);
            v63[0] = v30;
            sub_5A00E8(&v64, *(char **)(v16 + 232), *(char **)(v16 + 240), (uint64_t)(*(void *)(v16 + 240) - *(void *)(v16 + 232)) >> 6);
          }
          long long v65 = *(_OWORD *)(v16 + 256);
          long long v13 = *(_OWORD *)(v16 + 272);
          long long v14 = *(_OWORD *)(v16 + 288);
          long long v15 = *(_OWORD *)(v16 + 304);
          *(_OWORD *)((char *)v68 + 9) = *(_OWORD *)(v16 + 313);
          long long v67 = v14;
          v68[0] = v15;
          long long v66 = v13;
          v7 += v29;
          --v12;
        }
        while (v11 != v12);
LABEL_38:
        uint64_t v10 = *(void *)(v2 + 40);
        uint64_t v9 = *(void *)(v2 + 64);
      }
      uint64_t v31 = sub_6672BC(v51, v9 - v10);
      unsigned int v32 = *(_DWORD *)(v2 + 160);
      if (v32 - 82 >= 3)
      {
        uint64_t v33 = v31;
        if (v32 > 0x27 || ((1 << v32) & 0x8600050000) == 0)
        {
          unint64_t v34 = *(void *)(v2 + 72);
          unint64_t v35 = *(void *)(v2 + 24);
          BOOL v36 = v34 >= v35;
          if (v34 > v35) {
            unint64_t v35 = *(void *)(v2 + 72);
          }
          unint64_t v47 = v35;
          if (!v36)
          {
            do
            {
              uint64_t v37 = sub_6672BC(v51, v34 - *(void *)(v2 + 40));
              unsigned __int8 v38 = sub_682244(v33);
              if (v38)
              {
                uint64_t v39 = 0;
                uint64_t v40 = v38;
                do
                {
                  unint64_t v41 = sub_686088(v33, v39);
                  uint64_t v43 = (unsigned __int8 *)*v41;
                  uint64_t v42 = (unsigned __int8 *)v41[1];
                  if ((unsigned __int8 *)*v41 != v42)
                  {
                    do
                    {
                      unsigned __int8 v44 = *v43;
                      char v45 = sub_682F48(v33, v39);
                      sub_6847E8(v37, v44, v45);
                      int v46 = sub_6847A0(v33, v39);
                      sub_684808(v37, v44, v46);
                      ++v43;
                    }
                    while (v43 != v42);
                  }
                  ++v39;
                }
                while (v39 != v40);
              }
              uint64_t v33 = sub_6672BC(v51, v34 - *(void *)(v2 + 40));
              ++v34;
            }
            while (v34 != v47);
          }
        }
      }
      uint64_t result = sub_576848((uint64_t)v52);
    }
  }
  return result;
}

void sub_67263C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  sub_576848((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_672650(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  sub_576848((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_672664(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  sub_576848((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_672678(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  sub_576848((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_67268C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  sub_576848((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_6726A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  sub_576848((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_6726B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  sub_576848((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_6726C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  sub_576848((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_6726DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  sub_576848((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_6726F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  sub_576848((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_672704(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  sub_576848((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_672718(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  sub_576848((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_67272C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  sub_576848((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_672740(uint64_t a1, uint64_t a2)
{
  sub_682074((uint64_t)v45, 0);
  uint64_t v3 = *(void *)(a2 + 1072) - *(void *)(a2 + 1064);
  if (v3)
  {
    unint64_t v4 = 0;
    uint64_t v40 = 0x2FC962FC962FC963 * (v3 >> 5);
    unint64_t v41 = (void *)(a2 + 1064);
    for (uint64_t i = sub_51690C((void *)(a2 + 1064), 0); ; uint64_t i = sub_51690C(v41, v4))
    {
      double v6 = (void *)i;
      uint64_t v7 = *(void *)(i + 1808);
      if (v7 == *(void *)(i + 1816)) {
        break;
      }
      if (sub_682540((uint64_t)v45))
      {
        unsigned __int8 v8 = sub_682244((uint64_t)v45);
        if (v8)
        {
          uint64_t v9 = 0;
          uint64_t v10 = v8;
          do
          {
            int v11 = sub_686088((uint64_t)v45, v9);
            uint64_t v12 = (unsigned __int8 *)*v11;
            long long v13 = (unsigned __int8 *)v11[1];
            while (v12 != v13)
            {
              unsigned int v14 = *v12;
              if (v14 < sub_682244(v7))
              {
                if (sub_6847A0((uint64_t)v45, v9)) {
                  sub_684834(v7, v14, 1);
                }
              }
              ++v12;
            }
            ++v9;
          }
          while (v9 != v10);
        }
      }
      else
      {
        unsigned __int8 v15 = sub_682244(v7);
        if (v15)
        {
          uint64_t v16 = 0;
          uint64_t v17 = v15;
          do
            sub_684834(v7, v16++, 1);
          while (v17 != v16);
        }
      }
      unsigned __int8 v18 = sub_682850(v7);
      unint64_t v43 = v4;
      if (v18 > sub_682728(v7) && sub_6835E8(v7) <= 1) {
        sub_6835F0(v7, 2);
      }
      double v19 = v6 + 226;
      uint64_t v42 = v6;
      unint64_t v20 = 0xCF3CF3CF3CF3CF3DLL * ((uint64_t)(v6[227] - v6[226]) >> 4);
      if (v20 <= 1) {
        unint64_t v21 = 1;
      }
      else {
        unint64_t v21 = 0xCF3CF3CF3CF3CF3DLL * ((uint64_t)(v6[227] - v6[226]) >> 4);
      }
      if (v20 >= 2)
      {
        unint64_t v25 = 1;
        do
        {
          uint64_t v26 = sub_6672BC(v19, v25 - 1);
          uint64_t v27 = sub_6672BC(v19, v25);
          if (sub_682850(v26))
          {
            unsigned __int8 v28 = sub_682244(v26);
            if (v28)
            {
              uint64_t v29 = 0;
              uint64_t v30 = v28;
              do
              {
                if (sub_6847D0(v26, v29))
                {
                  uint64_t v31 = sub_686088(v26, v29);
                  unsigned int v32 = (unsigned __int8 *)*v31;
                  uint64_t v33 = (unsigned __int8 *)v31[1];
                  while (v32 != v33)
                  {
                    unsigned int v34 = *v32;
                    if (v34 < sub_682244(v27)) {
                      sub_684834(v27, v34, 1);
                    }
                    ++v32;
                  }
                }
                unsigned __int8 v35 = sub_682850(v27);
                if (sub_682244(v27) == v35) {
                  break;
                }
                ++v29;
              }
              while (v29 != v30);
            }
          }
          if (!sub_682850(v27))
          {
            unsigned __int8 v36 = sub_682244(v27);
            if (v36)
            {
              uint64_t v37 = 0;
              uint64_t v38 = v36;
              do
                sub_684834(v27, v37++, 1);
              while (v38 != v37);
            }
          }
          ++v25;
        }
        while (v25 != v21);
      }
      unint64_t v22 = v42[9];
      unint64_t v23 = v42[3];
      if (v22 == v23)
      {
        uint64_t v24 = sub_6672BC(v19, v42[8] - v42[5]);
        unint64_t v4 = v43;
      }
      else
      {
        unint64_t v4 = v43;
        if (v22 >= v23) {
          break;
        }
        uint64_t v24 = v42[227] - 336;
      }
      sub_5964A0((uint64_t)v44, v24);
LABEL_4:
      sub_674798((uint64_t)v45, (uint64_t)v44);
      sub_576848((uint64_t)v44);
      if (++v4 == v40) {
        return sub_576848((uint64_t)v45);
      }
    }
    sub_682074((uint64_t)v44, 0);
    goto LABEL_4;
  }
  return sub_576848((uint64_t)v45);
}

void sub_672AEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
}

void sub_672B00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
}

void sub_672B14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
}

void sub_672B28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
}

void sub_672B3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
}

void sub_672B50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
}

void sub_672B64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
}

void sub_672B78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
}

void sub_672B8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
}

void sub_672BA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
}

void sub_672BB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
}

void sub_672BC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
}

void sub_672BDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
}

void sub_672BF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
}

void sub_672C04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
}

void sub_672C18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
}

void sub_672C2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
}

void sub_672C40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
}

void sub_672C54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
}

void sub_672C68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
}

void sub_672C7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
}

void sub_672C90(uint64_t a1, uint64_t a2, int a3)
{
  char v3 = 1;
  switch(*(_DWORD *)(a2 + 160))
  {
    case 1:
    case 0x1B:
      char v3 = 3;
      uint64_t v4 = *(void *)(a2 + 1808);
      uint64_t v5 = *(void *)(a2 + 1816);
      if (v4 != v5) {
        goto LABEL_21;
      }
      return;
    case 2:
    case 0x1C:
      char v3 = 4;
      uint64_t v4 = *(void *)(a2 + 1808);
      uint64_t v5 = *(void *)(a2 + 1816);
      if (v4 != v5) {
        goto LABEL_21;
      }
      return;
    case 4:
      char v3 = 13;
      uint64_t v4 = *(void *)(a2 + 1808);
      uint64_t v5 = *(void *)(a2 + 1816);
      if (v4 != v5) {
        goto LABEL_21;
      }
      return;
    case 0xB:
      if (a3) {
        char v3 = 2;
      }
      else {
        char v3 = 1;
      }
      uint64_t v4 = *(void *)(a2 + 1808);
      uint64_t v5 = *(void *)(a2 + 1816);
      if (v4 != v5) {
        goto LABEL_21;
      }
      return;
    case 0x14:
    case 0x1D:
    case 0x3E:
    case 0x41:
      goto LABEL_18;
    case 0x15:
    case 0x1E:
    case 0x3F:
    case 0x42:
      char v3 = 2;
      uint64_t v4 = *(void *)(a2 + 1808);
      uint64_t v5 = *(void *)(a2 + 1816);
      if (v4 == v5) {
        return;
      }
      goto LABEL_21;
    case 0x3C:
      char v3 = 5;
LABEL_18:
      uint64_t v4 = *(void *)(a2 + 1808);
      uint64_t v5 = *(void *)(a2 + 1816);
      if (v4 != v5) {
        goto LABEL_21;
      }
      return;
    case 0x3D:
      char v3 = 6;
      uint64_t v4 = *(void *)(a2 + 1808);
      uint64_t v5 = *(void *)(a2 + 1816);
      if (v4 == v5) {
        return;
      }
      goto LABEL_21;
    default:
      char v3 = 12;
      uint64_t v4 = *(void *)(a2 + 1808);
      uint64_t v5 = *(void *)(a2 + 1816);
      if (v4 == v5) {
        return;
      }
      break;
  }
  do
  {
LABEL_21:
    if ((sub_68346C(v4) & 1) != 0 || sub_683488(v4))
    {
      unsigned __int8 v6 = sub_682244(v4);
      if (v6)
      {
        uint64_t v7 = 0;
        uint64_t v8 = v6;
        do
        {
          if (sub_6847A0(v4, v7))
          {
            uint64_t v9 = sub_6838A0(v4, v7);
            unsigned __int8 v13 = 0;
            if (sub_683488(v4)) {
              unsigned __int8 v10 = v3;
            }
            else {
              unsigned __int8 v10 = 12;
            }
            unsigned __int8 v13 = v10;
            int v11 = (unsigned __int8 *)v9[1];
            uint64_t v12 = (unsigned __int8 *)*v9;
            if ((unsigned __int8 *)*v9 != v11)
            {
              while (*v12 != v10)
              {
                if (++v12 == v11)
                {
                  uint64_t v12 = (unsigned __int8 *)v9[1];
                  break;
                }
              }
            }
            if (v12 == v11) {
              sub_683928(v4, v7, (char *)&v13);
            }
            else {
              sub_683BFC(v4, v7, (unint64_t)&v12[-*v9], 0);
            }
          }
          ++v7;
        }
        while (v7 != v8);
      }
    }
    v4 += 336;
  }
  while (v4 != v5);
}

uint64_t sub_672FB4(uint64_t a1, void *a2)
{
  char v3 = sub_69510();
  if (*(void *)sub_69154((uint64_t)v3)
    && (uint64_t v4 = (void *)sub_69154((uint64_t)v3), !*(_DWORD *)(*v4 + *(void *)(*(void *)*v4 - 24) + 32)))
  {
    unsigned __int8 v6 = (void **)sub_69154((uint64_t)v3);
    sub_577F08(*v6, a2);
    uint64_t result = sub_723EC(1u);
    if (!result) {
      return result;
    }
    sub_6BAC((uint64_t)v9);
    sub_188FC78(v9, (uint64_t)"Successfully wrote DOT graph.", 29);
    std::stringbuf::str();
    sub_7246C((uint64_t *)__p, 1u);
  }
  else
  {
    uint64_t result = sub_723EC(3u);
    if (!result) {
      return result;
    }
    sub_6BAC((uint64_t)v9);
    sub_188FC78(v9, (uint64_t)"Could not write DOT graph to debug stream!", 42);
    std::stringbuf::str();
    sub_7246C((uint64_t *)__p, 3u);
  }
  if (v8 < 0) {
    operator delete(__p[0]);
  }
  if (v10 < 0) {
    operator delete((void *)v9[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_6731B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0)
  {
    operator delete(__p);
    sub_111ECAC((uint64_t)&a15);
    _Unwind_Resume(a1);
  }
  sub_111ECAC((uint64_t)&a15);
  _Unwind_Resume(a1);
}

uint64_t sub_67322C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = sub_577CC8((void *)(a2 + 1808), a3 - *(void *)(a2 + 40));
  if (sub_68463C(v3)) {
    return 0;
  }
  unsigned __int8 v4 = sub_682244(v3);
  if (!v4) {
    return 0;
  }
  uint64_t v5 = 0;
  uint64_t v6 = v4;
  while (1)
  {
    uint64_t v7 = sub_6838A0(v3, v5);
    if (v7[1] - *v7 >= 2uLL)
    {
      char v8 = sub_6838A0(v3, v5);
      char v10 = (unsigned char *)*v8;
      uint64_t v9 = (unsigned char *)v8[1];
      if ((unsigned char *)*v8 != v9)
      {
        while (*v10 != 12)
        {
          if (++v10 == v9)
          {
            char v10 = (unsigned char *)v8[1];
            break;
          }
        }
      }
      if (v10 != v9) {
        return 1;
      }
    }
    if (++v5 == v6) {
      return 0;
    }
  }
}

void sub_67330C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_6672BC((void *)(a2 + 1808), a3 - *(void *)(a2 + 40));
  if (!sub_6861D0(v5)
    && (unsigned __int8 v6 = sub_682244(v5), sub_682244(a4) == v6)
    && sub_68463C(v5))
  {
    sub_684A08(v5, a4);
  }
  else
  {
    unsigned __int8 v7 = sub_682244(v5);
    if (v7)
    {
      uint64_t v8 = 0;
      uint64_t v9 = v7;
      do
      {
        int v11 = sub_686088(v5, v8);
        if (*v11 == v11[1])
        {
          if (sub_6861D0(v5)) {
            char v10 = 0;
          }
          else {
            char v10 = !sub_682CE4(v5, v8);
          }
        }
        else
        {
          uint64_t v12 = (unsigned __int8 **)v11;
          char v13 = sub_682728(a4);
          char v14 = sub_682244(a4);
          char v10 = 1;
          if (v14 && v13) {
            char v10 = sub_6858F0(a4, v12);
          }
        }
        sub_6847E8(v5, v8++, v10);
      }
      while (v9 != v8);
    }
  }
}

uint64_t sub_673468(uint64_t *a1, void *a2, uint64_t a3, unsigned __int8 a4)
{
  if (!sub_6843A0(a3, a4)) {
    return 0;
  }
  uint64_t v8 = sub_6844A0(a3, a4);
  unsigned __int8 v36 = 0;
  uint64_t v37 = 0;
  unsigned __int8 v35 = 0;
  sub_8A6F8((char *)&v35, *v8, v8[1], 0xAAAAAAAAAAAAAAABLL * ((v8[1] - *v8) >> 3));
  uint64_t v9 = v35;
  if (v35 != v36)
  {
    unint64_t v10 = sub_682208(a3);
    int v11 = (int *)sub_674E0C(a2 + 142, v10);
    int v12 = sub_46CF04((uint64_t)a2);
    int v13 = *v11;
    uint64_t v14 = a1[1];
    double v15 = *(double *)(v14 + 1616) * (double)(10 * (*v11 - v12));
    if (v15 >= 0.0)
    {
      if (v15 >= 4.50359963e15) {
        goto LABEL_14;
      }
      uint64_t v16 = (uint64_t)(v15 + v15) + 1;
    }
    else
    {
      if (v15 <= -4.50359963e15) {
        goto LABEL_14;
      }
      uint64_t v16 = (uint64_t)(v15 + v15);
      if (v16 >= 1) {
        --v16;
      }
    }
    double v15 = (double)(v16 >> 1);
LABEL_14:
    int v18 = *(_DWORD *)(v14 + 1612);
    int v19 = v18 + (int)v15;
    if (v19 < 0 != __OFADD__(v18, (int)v15)) {
      char v20 = -5;
    }
    else {
      char v20 = 5;
    }
    sub_46CF04((uint64_t)a2);
    int v21 = (char)(v20 + v19 % 10);
    *(_OWORD *)unsigned int v32 = 0u;
    long long v33 = 0u;
    int v34 = 1065353216;
    uint64_t v22 = *a1;
    uint64_t v23 = sub_682208(a3);
    uint64_t v24 = sub_46C8EC(a2, v23);
    sub_3BDCD8(v22, *(unsigned int *)(v24 + 32) | ((unint64_t)*(unsigned __int16 *)(v24 + 36) << 32), __p);
    unint64_t v25 = v30;
    if ((v30 & 0x80u) != 0) {
      unint64_t v25 = (unint64_t)__p[1];
    }
    if (v25) {
      sub_26A18((uint64_t)v31, (const char *)__p);
    }
    else {
      sub_26908((uint64_t)v31);
    }
    if ((char)v30 < 0) {
      operator delete(__p[0]);
    }
    sub_480C((uint64_t)__p, v19 / 10 + v13 + (((103 * v21) >> 15) & 1) + ((103 * v21) >> 10));
  }
  uint64_t v17 = 1;
  if (v35)
  {
    uint64_t v26 = v36;
    uint64_t v27 = v35;
    if (v36 != v35)
    {
      do
      {
        if (*((char *)v26 - 1) < 0) {
          operator delete(*(v26 - 3));
        }
        v26 -= 3;
      }
      while (v26 != v9);
      uint64_t v27 = v35;
    }
    unsigned __int8 v36 = v9;
    operator delete(v27);
  }
  return v17;
}

void sub_6737B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,const void *a24,uint64_t a25,char a26)
{
  sub_4814((uint64_t)&__p);
  sub_26C4C(&a24);
  sub_31B778((uint64_t)&a26);
  sub_1A668((void **)(v26 - 104));
  _Unwind_Resume(a1);
}

void sub_673848(_Unwind_Exception *a1)
{
  sub_1A668((void **)(v1 - 104));
  _Unwind_Resume(a1);
}

unint64_t sub_673878(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a3 + 1808);
  uint64_t v7 = *(void *)(a3 + 1816);
  if (v6 == v7)
  {
    uint64_t v10 = *(void *)(a3 + 1808);
    uint64_t v9 = v10;
  }
  else
  {
    while (sub_684630(v6))
    {
      v6 += 336;
      if (v6 == v7)
      {
        uint64_t v6 = v7;
        break;
      }
    }
    uint64_t v9 = v6;
    uint64_t v10 = *(void *)(a3 + 1816);
    uint64_t v6 = *(void *)(a3 + 1808);
  }
  if (v9 != v10) {
    uint64_t v6 = v9;
  }
  unint64_t v11 = a2[8] - a2[5];
  int v12 = a2 + 226;
  uint64_t v13 = sub_6672BC(v12, v11);
  unint64_t result = sub_682244(v13);
  if ((_BYTE)result)
  {
    uint64_t v15 = 0;
    uint64_t v16 = result;
    do
    {
      uint64_t v18 = sub_6672BC(v12, v11);
      int v19 = sub_686088(v18, v15);
      char v20 = (unsigned __int8 *)*v19;
      int v21 = (unsigned __int8 *)v19[1];
      if ((unsigned __int8 *)*v19 == v21)
      {
        LOBYTE(v17) = 0;
      }
      else
      {
        int v22 = 0;
        do
        {
          unsigned int v23 = *v20;
          unsigned __int8 v24 = sub_682244(v6);
          BOOL v25 = v23 >= v24;
          int v17 = (v23 < v24) | v22;
          if (!v25 && (v22 & 1) == 0) {
            int v17 = sub_682F48(v6, v23);
          }
          ++v20;
          int v22 = v17;
        }
        while (v20 != v21);
      }
      unint64_t result = sub_684808(a4, v15++, v17 & 1);
    }
    while (v15 != v16);
  }
  return result;
}

void sub_6739C8(uint64_t a1, uint64_t a2, void *a3, int a4)
{
  int v7 = sub_673A90(a2);
  int v8 = sub_673BD4(a2);
  unsigned __int8 v9 = sub_6855F0(a3);
  unsigned __int8 v10 = sub_68577C(a3);
  if (v7)
  {
    if (a4 == 1) {
      unsigned __int8 v11 = v9;
    }
    else {
      unsigned __int8 v11 = v10;
    }
    goto LABEL_9;
  }
  if (v8)
  {
    if (a4 == 1) {
      unsigned __int8 v11 = v10;
    }
    else {
      unsigned __int8 v11 = v9;
    }
LABEL_9:
    sub_684808((uint64_t)a3, v11, 1);
    return;
  }

  sub_684BCC((uint64_t)a3, (uint64_t)a3);
}

uint64_t sub_673A90(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160) - 1;
  uint64_t result = 1;
  switch(v1)
  {
    case 0:
    case 19:
    case 26:
    case 28:
    case 32:
    case 59:
    case 61:
    case 64:
      return result;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t sub_673BD4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160) - 2;
  uint64_t result = 1;
  switch(v1)
  {
    case 0:
    case 19:
    case 26:
    case 28:
    case 32:
    case 59:
    case 61:
    case 64:
      return result;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

void sub_673D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_6672BC((void *)(a2 + 1808), *(void *)(a2 + 64) - *(void *)(a2 + 40));
  uint64_t v6 = sub_682540(v5);
  if (!(_BYTE)v6)
  {
    int v9 = *(_DWORD *)(a2 + 160);
    int v10 = 1;
    switch(v9)
    {
      case 1:
      case 20:
      case 27:
      case 29:
      case 33:
      case 60:
      case 62:
      case 65:
        int v11 = v9 - 2;
        goto LABEL_9;
      default:
        int v10 = 0;
        int v11 = v9 - 2;
        if ((v9 - 2) <= 0x40)
        {
LABEL_9:
          switch(v11)
          {
            case 0:
            case 19:
            case 26:
            case 28:
            case 32:
            case 59:
            case 61:
            case 64:
              goto LABEL_10;
            default:
              break;
          }
        }
        if ((v10 & 1) == 0) {
          goto LABEL_4;
        }
LABEL_10:
        uint64_t v12 = a3;
        unint64_t v13 = 1;
        break;
    }
    goto LABEL_12;
  }
  unsigned __int8 v7 = v6;
  int v8 = sub_684DA8(v5);
  uint64_t v6 = sub_684E2C(v5);
  if (v8 & 1) != 0 || (v6)
  {
    unint64_t v13 = v7;
    uint64_t v12 = a3;
    int v10 = v8;
LABEL_12:
    sub_674074(v6, v12, v13, v10);
    return;
  }
LABEL_4:

  sub_684BCC(a3, a3);
}

void sub_674074(uint64_t a1, uint64_t a2, unint64_t a3, int a4)
{
  unint64_t v5 = a3;
  if (a3 <= sub_682244(a2))
  {
    unsigned __int8 v7 = sub_682244(a2);
    if (a4)
    {
      if (v7)
      {
        uint64_t v8 = 0;
        uint64_t v9 = v7;
        do
        {
          if (sub_682F48(a2, v8)) {
            int v10 = (v5 != 0) & ~sub_685F74(a2, v8);
          }
          else {
            int v10 = 0;
          }
          sub_684808(a2, v8, v10);
          v5 -= sub_6847A0(a2, v8++);
        }
        while (v9 != v8);
      }
    }
    else
    {
      uint64_t v11 = (char)(v7 - 1);
      if ((int)v11 >= -1) {
        int v12 = -1;
      }
      else {
        int v12 = (char)(v7 - 1);
      }
      if (((v7 - 1) & 0x80) == 0)
      {
        do
        {
          unsigned __int8 v14 = sub_66B14C(v11);
          if (sub_682F48(a2, v14)) {
            int v13 = (v5 != 0) & ~sub_685F74(a2, v14);
          }
          else {
            int v13 = 0;
          }
          sub_684808(a2, v14, v13);
          v5 -= sub_6847A0(a2, v14);
          uint64_t v11 = (v11 - 1);
        }
        while (v12 != v11);
      }
    }
  }
  else
  {
    sub_684BCC(a2, a2);
  }
}

void sub_6741D8(uint64_t a1, uint64_t a2)
{
  if (sub_682254(a2))
  {
    long long __p = 0;
    uint64_t v37 = 0;
    unsigned __int8 v3 = sub_682244(a2);
    if (v3)
    {
      unsigned __int8 v4 = 0;
      uint64_t v5 = 0;
      int v6 = 0;
      uint64_t v7 = v3;
      while (1)
      {
        while (!sub_68225C(a2, v5))
        {
          LODWORD(v8) = v4;
          if (++v5 == v7) {
            goto LABEL_42;
          }
        }
        if (v4 >= v37)
        {
          unint64_t v9 = v4 - __p;
          uint64_t v10 = v4 - __p + 1;
          if (v10 < 0) {
            sub_2E00();
          }
          unint64_t v11 = v37 - __p;
          if (2 * (v37 - __p) > (unint64_t)v10) {
            uint64_t v10 = 2 * v11;
          }
          if (v11 >= 0x3FFFFFFFFFFFFFFFLL) {
            size_t v12 = 0x7FFFFFFFFFFFFFFFLL;
          }
          else {
            size_t v12 = v10;
          }
          if (v12)
          {
            int v13 = (char *)operator new(v12);
            unsigned __int8 v14 = &v13[v9];
            v13[v9] = v5;
            uint64_t v8 = (uint64_t)&v13[v9 + 1];
            if (v4 != __p) {
              goto LABEL_16;
            }
          }
          else
          {
            int v13 = 0;
            unsigned __int8 v14 = (char *)(v4 - __p);
            *(unsigned char *)unint64_t v9 = v5;
            uint64_t v8 = v9 + 1;
            if (v4 != __p)
            {
LABEL_16:
              if (v9 < 8 || v13 > &v13[v4 - __p - 1] || __p > v4 - 1 || (unint64_t)(__p - v13) < 0x20)
              {
                uint64_t v15 = v4;
              }
              else if (v9 >= 0x20)
              {
                unint64_t v18 = v9 & 0xFFFFFFFFFFFFFFE0;
                int v19 = &v13[v9 - 16];
                char v20 = (long long *)(v4 - 16);
                unint64_t v21 = v9 & 0xFFFFFFFFFFFFFFE0;
                do
                {
                  long long v22 = *v20;
                  *((_OWORD *)v19 - 1) = *(v20 - 1);
                  *(_OWORD *)int v19 = v22;
                  v19 -= 32;
                  v20 -= 2;
                  v21 -= 32;
                }
                while (v21);
                if (v9 == v18) {
                  goto LABEL_20;
                }
                if ((v9 & 0x18) != 0) {
                  goto LABEL_36;
                }
                v14 -= v18;
                uint64_t v15 = &v4[-v18];
              }
              else
              {
                unint64_t v18 = 0;
LABEL_36:
                uint64_t v15 = &v4[-(v9 & 0xFFFFFFFFFFFFFFF8)];
                v14 -= v9 & 0xFFFFFFFFFFFFFFF8;
                unsigned int v23 = &v13[&v4[-v18] - __p - 8];
                unsigned __int8 v24 = (uint64_t *)&v4[-v18 - 8];
                unint64_t v25 = v18 - (v9 & 0xFFFFFFFFFFFFFFF8);
                do
                {
                  uint64_t v26 = *v24--;
                  *(void *)unsigned int v23 = v26;
                  v23 -= 8;
                  v25 += 8;
                }
                while (v25);
                if (v9 == (v9 & 0xFFFFFFFFFFFFFFF8))
                {
LABEL_20:
                  unsigned __int8 v4 = __p;
                  long long __p = v13;
                  uint64_t v37 = &v13[v12];
                  if (!v4) {
                    goto LABEL_25;
                  }
LABEL_24:
                  operator delete(v4);
                  goto LABEL_25;
                }
              }
              uint64_t v16 = v14 - 1;
              do
              {
                char v17 = *--v15;
                *v16-- = v17;
              }
              while (v15 != __p);
              goto LABEL_20;
            }
          }
          long long __p = v14;
          uint64_t v37 = &v13[v12];
          if (v4) {
            goto LABEL_24;
          }
        }
        else
        {
          *unsigned __int8 v4 = v5;
          uint64_t v8 = (uint64_t)(v4 + 1);
        }
LABEL_25:
        v6 += sub_682F48(a2, v5);
        unsigned __int8 v4 = (char *)v8;
        if (++v5 == v7) {
          goto LABEL_42;
        }
      }
    }
    LODWORD(v8) = 0;
    int v6 = 0;
LABEL_42:
    if (v6 != sub_682728(a2))
    {
      for (uint64_t i = (v8 - __p); (int)i > 0; uint64_t i = v28)
      {
        uint64_t v28 = i - 1;
        sub_68530C(a2, __p[i - 1]);
      }
      char v29 = sub_682540(a2);
      unsigned __int8 v30 = sub_682244(a2);
      if (v30)
      {
        uint64_t v31 = v30;
        if (v29)
        {
          uint64_t v32 = 0;
          do
          {
            int v33 = sub_6847A0(a2, v32);
            sub_684808(a2, v32++, v33);
          }
          while (v31 != v32);
        }
        else
        {
          uint64_t v34 = 0;
          do
          {
            int v35 = sub_682F48(a2, v34);
            sub_684808(a2, v34++, v35);
          }
          while (v31 != v34);
        }
      }
    }
    if (__p) {
      operator delete(__p);
    }
  }
}

void sub_674528(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_674564(uint64_t a1, uint64_t a2)
{
  if (sub_685CE4(a2))
  {
    long long __p = 0;
    unint64_t v19 = 0;
    uint64_t v20 = 0;
    unsigned __int8 v3 = sub_682244(a2);
    if (v3)
    {
      uint64_t v4 = 0;
      uint64_t v5 = v3;
      do
      {
        while (1)
        {
          int v6 = sub_6847A0(a2, v4);
          unint64_t v7 = v19;
          if (v19 == v20 << 6)
          {
            if ((uint64_t)(v19 + 1) < 0) {
              sub_2E00();
            }
            unint64_t v8 = v20 << 7;
            if (v20 << 7 <= (v19 & 0xFFFFFFFFFFFFFFC0) + 64) {
              unint64_t v8 = (v19 & 0xFFFFFFFFFFFFFFC0) + 64;
            }
            if (v19 <= 0x3FFFFFFFFFFFFFFELL) {
              unint64_t v9 = v8;
            }
            else {
              unint64_t v9 = 0x7FFFFFFFFFFFFFFFLL;
            }
            sub_3D110((uint64_t)&__p, v9);
            unint64_t v7 = v19;
          }
          unint64_t v19 = v7 + 1;
          unint64_t v10 = v7 >> 6;
          uint64_t v11 = 1 << v7;
          if (v6) {
            break;
          }
          *((void *)__p + v10) &= ~v11;
          if (v5 == ++v4) {
            goto LABEL_15;
          }
        }
        *((void *)__p + v10) |= v11;
        ++v4;
      }
      while (v5 != v4);
    }
LABEL_15:
    unsigned __int8 v12 = sub_682244(a2);
    if (v12)
    {
      unint64_t v13 = 0;
      uint64_t v14 = v12;
      do
      {
        if ((*((void *)__p + (v13 >> 6)) & (1 << v13)) != 0 && sub_685F74(a2, v13)) {
          *((void *)__p + (v13 >> 6)) &= ~(1 << v13);
        }
        ++v13;
      }
      while (v14 != v13);
    }
    char v17 = 1;
    if (sub_2601C(__p, 0, (uint64_t)__p + 8 * (v19 >> 6), v19 & 0x3F, &v17) >= 1)
    {
      uint64_t v15 = v19;
      if ((_BYTE)v19)
      {
        unint64_t v16 = 0;
        do
        {
          sub_684808(a2, v16, (*(void *)((char *)__p + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v16) & 1);
          ++v16;
        }
        while (v15 != v16);
      }
    }
    if (__p) {
      operator delete(__p);
    }
  }
}

void sub_674768(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_674798(uint64_t a1, uint64_t a2)
{
  sub_67501C(a1, (uint64_t *)a2);
  sub_67510C(a1 + 40, (uint64_t *)(a2 + 40));
  sub_67501C(a1 + 80, (uint64_t *)(a2 + 80));
  sub_67501C(a1 + 120, (uint64_t *)(a2 + 120));
  uint64_t v4 = (void **)(a1 + 168);
  uint64_t v5 = *(char **)(a1 + 168);
  *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
  if (v5)
  {
    int v6 = *(char **)(a1 + 176);
    unint64_t v7 = v5;
    if (v6 != v5)
    {
      unint64_t v8 = *(char **)(a1 + 176);
      do
      {
        unint64_t v10 = (void *)*((void *)v8 - 3);
        v8 -= 24;
        unint64_t v9 = v10;
        if (v10)
        {
          *((void *)v6 - 2) = v9;
          operator delete(v9);
        }
        int v6 = v8;
      }
      while (v8 != v5);
      unint64_t v7 = *v4;
    }
    *(void *)(a1 + 176) = v5;
    operator delete(v7);
    *uint64_t v4 = 0;
    *(void *)(a1 + 176) = 0;
    *(void *)(a1 + 184) = 0;
  }
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a2 + 168) = 0;
  *(void *)(a2 + 176) = 0;
  *(void *)(a2 + 184) = 0;
  uint64_t v11 = (void **)(a1 + 192);
  uint64_t v12 = *(void *)(a1 + 192);
  if (v12)
  {
    uint64_t v13 = *(void *)(a1 + 200);
    uint64_t v14 = *(void **)(a1 + 192);
    if (v13 != v12)
    {
      uint64_t v15 = *(void *)(a1 + 200);
      do
      {
        char v17 = *(void **)(v15 - 24);
        v15 -= 24;
        unint64_t v16 = v17;
        if (v17)
        {
          *(void *)(v13 - 16) = v16;
          operator delete(v16);
        }
        uint64_t v13 = v15;
      }
      while (v15 != v12);
      uint64_t v14 = *v11;
    }
    *(void *)(a1 + 200) = v12;
    operator delete(v14);
    *uint64_t v11 = 0;
    *(void *)(a1 + 200) = 0;
    *(void *)(a1 + 208) = 0;
  }
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a2 + 192) = 0;
  *(void *)(a2 + 200) = 0;
  *(void *)(a2 + 208) = 0;
  uint64_t v18 = *(void *)(a2 + 216);
  unint64_t v19 = (void **)(a1 + 232);
  uint64_t v20 = *(char **)(a1 + 232);
  *(_DWORD *)(a1 + 223) = *(_DWORD *)(a2 + 223);
  *(void *)(a1 + 216) = v18;
  if (v20)
  {
    unint64_t v21 = *(char **)(a1 + 240);
    long long v22 = v20;
    if (v21 != v20)
    {
      do
      {
        unsigned int v23 = (void *)*((void *)v21 - 3);
        if (v23)
        {
          *((void *)v21 - 2) = v23;
          operator delete(v23);
        }
        unsigned __int8 v24 = (void *)*((void *)v21 - 6);
        if (v24)
        {
          *((void *)v21 - 5) = v24;
          operator delete(v24);
        }
        v21 -= 64;
      }
      while (v21 != v20);
      long long v22 = *v19;
    }
    *(void *)(a1 + 240) = v20;
    operator delete(v22);
    char *v19 = 0;
    *(void *)(a1 + 240) = 0;
    *(void *)(a1 + 248) = 0;
  }
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a2 + 240) = 0;
  *(void *)(a2 + 248) = 0;
  *(void *)(a2 + 232) = 0;
  long long v26 = *(_OWORD *)(a2 + 288);
  long long v25 = *(_OWORD *)(a2 + 304);
  long long v27 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 313) = *(_OWORD *)(a2 + 313);
  *(_OWORD *)(a1 + 288) = v26;
  *(_OWORD *)(a1 + 304) = v25;
  *(_OWORD *)(a1 + 272) = v27;
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  return a1;
}

uint64_t sub_67499C(uint64_t a1, uint64_t a2, unint64_t a3, unsigned __int8 a4)
{
  unint64_t v8 = (void *)(a2 + 1808);
  uint64_t v9 = sub_6672BC((void *)(a2 + 1808), a3);
  if (a4 >= sub_682244(v9)) {
    return 0;
  }
  if (sub_685CF8(v9, a4) < 1)
  {
    if (a3)
    {
      uint64_t v11 = 0;
      unint64_t v12 = a3 - 1;
      if ((v12 & 0x80000000) == 0)
      {
        int64_t v13 = v12;
        while (1)
        {
          uint64_t v14 = sub_577CC8(v8, v13);
          if ((sub_684630(v14) & 1) == 0) {
            break;
          }
          uint64_t v23 = sub_685CCC(v14);
          uint64_t v24 = v15;
          v11 += sub_6383A0(&v23);
          if (v13-- <= 0) {
            goto LABEL_18;
          }
        }
        if (sub_6861D0(v14)) {
          unint64_t v12 = v13;
        }
      }
LABEL_18:
      uint64_t v18 = sub_6672BC(v8, v12);
      sub_682244(v18);
      unint64_t v19 = sub_682244(v9);
      unsigned __int8 v20 = sub_674B48(v19, v18, a4, v19);
      uint64_t v23 = sub_685CCC(v9);
      uint64_t v24 = v21;
      uint64_t v22 = sub_6383A0(&v23) + v11;
      return v22 + sub_67499C(a1, a2, v12, v20);
    }
    else
    {
      uint64_t v23 = sub_685CCC(v9);
      uint64_t v24 = v17;
      return sub_6383A0(&v23);
    }
  }
  else
  {
    return sub_685CF8(v9, a4);
  }
}

uint64_t sub_674B48(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  if (!sub_6861D0(a2)
    && (a4 == sub_682244(a2) || (sub_684624(a2) & 1) != 0 || (sub_684630(a2) & 1) != 0))
  {
    return a3;
  }
  unsigned int v37 = sub_682244(a2);
  unsigned __int8 v7 = sub_682244(a2);
  if (v7)
  {
    uint64_t v8 = 0;
    BOOL v9 = a4 - 1 != a3 && a3 != 0;
    BOOL v36 = v9;
    uint64_t v38 = v7;
    do
    {
      unint64_t v10 = sub_686088(a2, v8);
      uint64_t v12 = *v10;
      uint64_t v11 = (unsigned __int8 *)v10[1];
      if ((unsigned __int8 *)*v10 == v11) {
        goto LABEL_8;
      }
      int64_t v13 = v10;
      uint64_t v14 = &v11[-v12];
      uint64_t v15 = (unsigned __int8 *)*v10;
      while (*v15 != a3)
      {
        if (++v15 == v11)
        {
          uint64_t v15 = (unsigned __int8 *)v10[1];
          break;
        }
      }
      if (((unint64_t)v14 & 0x8000000000000000) != 0) {
        sub_2E00();
      }
      unint64_t v16 = (unsigned __int8 *)operator new((size_t)&v11[-v12]);
      memcpy(v16, (const void *)v12, (size_t)&v11[-v12]);
      if (v15 != (unsigned __int8 *)v13[1])
      {
        unsigned __int8 v17 = sub_682244(a2);
        if (v14 == (unsigned char *)&def_332C + 1) {
          goto LABEL_17;
        }
        uint64_t v20 = v17 - 1;
        BOOL v21 = (_BYTE)v8 && v20 == v8;
        int v22 = v21;
        uint64_t v24 = v16 + 1;
        int v23 = *v16;
        if (v11 == (unsigned __int8 *)v12)
        {
          unsigned __int8 v30 = v16;
          if (v23 == a3) {
            int v22 = 1;
          }
          if ((v36 & v22) != 1) {
            goto LABEL_7;
          }
        }
        else
        {
          uint64_t v25 = 1;
          unsigned __int8 v26 = *v16;
          long long v27 = v16;
          do
          {
            if (v16[v25] > v26)
            {
              unsigned __int8 v26 = v16[v25];
              long long v27 = &v16[v25];
            }
            ++v25;
          }
          while (v14 != (unsigned __int8 *)v25);
          int v28 = *v27;
          char v29 = &v11[~v12];
          unsigned __int8 v30 = v16;
          uint64_t v31 = v16 + 1;
          do
          {
            unsigned int v33 = *v31++;
            char v32 = v33;
            BOOL v34 = v23 > v33;
            if (v23 >= v33) {
              LOBYTE(v23) = v32;
            }
            if (v34) {
              unsigned __int8 v30 = v24;
            }
            uint64_t v24 = v31;
            --v29;
          }
          while (v29);
          if (v28 == a3) {
            int v22 = 1;
          }
          if ((v36 & v22) != 1) {
            goto LABEL_7;
          }
        }
        if (v20 != v8 || *v30 == a3)
        {
LABEL_17:
          BOOL v18 = sub_68225C(a2, v8);
          unsigned int v19 = v37;
          if (!v18) {
            unsigned int v19 = v8;
          }
          unsigned int v37 = v19;
        }
      }
LABEL_7:
      operator delete(v16);
LABEL_8:
      ++v8;
    }
    while (v8 != v38);
  }
  return v37;
}

void sub_674DE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_674E0C(void *a1, unint64_t a2)
{
  if (a2 >= (uint64_t)(a1[1] - *a1) >> 2)
  {
    exception = __cxa_allocate_exception(0x40uLL);
    std::to_string(&v16, a2);
    int v6 = std::string::insert(&v16, 0, "Out-of-bounds access in Vector::at with index=");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v17.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    uint64_t v8 = std::string::append(&v17, ",size=");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v18.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v18.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v15, (uint64_t)(a1[1] - *a1) >> 2);
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      unint64_t v10 = &v15;
    }
    else {
      unint64_t v10 = (std::string *)v15.__r_.__value_.__r.__words[0];
    }
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v15.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v15.__r_.__value_.__l.__size_;
    }
    uint64_t v12 = std::string::append(&v18, (const std::string::value_type *)v10, size);
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    std::string::size_type v20 = v12->__r_.__value_.__r.__words[2];
    long long v19 = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    uint64_t v14 = (void *)sub_2F404((uint64_t)exception, &v19);
  }
  return *a1 + 4 * a2;
}

void sub_674F3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 41) < 0) {
    operator delete(*(void **)(v33 - 64));
  }
  if (a14 < 0)
  {
    operator delete(a9);
    if ((a33 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a26 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_10;
    }
  }
  else if ((a33 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(a28);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_7;
  }
LABEL_10:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0) {
LABEL_11:
  }
    _Unwind_Resume(a1);
LABEL_7:
  operator delete(__p);
  goto LABEL_11;
}

void sub_67501C(uint64_t a1, uint64_t *a2)
{
  if (*(void *)(a1 + 24))
  {
    uint64_t v4 = *(void **)(a1 + 16);
    if (v4)
    {
      do
      {
        uint64_t v5 = (void *)*v4;
        operator delete(v4);
        uint64_t v4 = v5;
      }
      while (v5);
    }
    *(void *)(a1 + 16) = 0;
    uint64_t v6 = *(void *)(a1 + 8);
    if (v6)
    {
      for (uint64_t i = 0; i != v6; ++i)
        *(void *)(*(void *)a1 + 8 * i) = 0;
    }
    *(void *)(a1 + 24) = 0;
  }
  uint64_t v8 = *a2;
  *a2 = 0;
  long long v9 = *(void **)a1;
  *(void *)a1 = v8;
  if (v9) {
    operator delete(v9);
  }
  uint64_t v12 = a2[2];
  uint64_t v11 = a2 + 2;
  uint64_t v10 = v12;
  uint64_t v13 = *(v11 - 1);
  *(void *)(a1 + 16) = v12;
  *(void *)(a1 + 8) = v13;
  *(v11 - 1) = 0;
  uint64_t v14 = v11[1];
  *(void *)(a1 + 24) = v14;
  *(_DWORD *)(a1 + 32) = *((_DWORD *)v11 + 4);
  if (v14)
  {
    unint64_t v15 = *(void *)(v10 + 8);
    unint64_t v16 = *(void *)(a1 + 8);
    if ((v16 & (v16 - 1)) != 0)
    {
      if (v15 >= v16) {
        v15 %= v16;
      }
    }
    else
    {
      v15 &= v16 - 1;
    }
    *(void *)(*(void *)a1 + 8 * v15) = a1 + 16;
    *uint64_t v11 = 0;
    v11[1] = 0;
  }
}

void sub_67510C(uint64_t a1, uint64_t *a2)
{
  if (*(void *)(a1 + 24))
  {
    uint64_t v4 = *(void **)(a1 + 16);
    if (v4)
    {
      do
      {
        std::string v17 = (void *)*v4;
        uint64_t v18 = v4[3];
        if (v18)
        {
          uint64_t v19 = v4[4];
          unint64_t v16 = (void *)v4[3];
          if (v19 != v18)
          {
            do
            {
              if (*(char *)(v19 - 1) < 0) {
                operator delete(*(void **)(v19 - 24));
              }
              v19 -= 24;
            }
            while (v19 != v18);
            unint64_t v16 = (void *)v4[3];
          }
          v4[4] = v18;
          operator delete(v16);
        }
        operator delete(v4);
        uint64_t v4 = v17;
      }
      while (v17);
    }
    *(void *)(a1 + 16) = 0;
    uint64_t v5 = *(void *)(a1 + 8);
    if (v5)
    {
      for (uint64_t i = 0; i != v5; ++i)
        *(void *)(*(void *)a1 + 8 * i) = 0;
    }
    *(void *)(a1 + 24) = 0;
  }
  uint64_t v7 = *a2;
  *a2 = 0;
  uint64_t v8 = *(void **)a1;
  *(void *)a1 = v7;
  if (v8) {
    operator delete(v8);
  }
  uint64_t v11 = a2[2];
  uint64_t v10 = a2 + 2;
  uint64_t v9 = v11;
  uint64_t v12 = *(v10 - 1);
  *(void *)(a1 + 16) = v11;
  *(void *)(a1 + 8) = v12;
  *(v10 - 1) = 0;
  uint64_t v13 = v10[1];
  *(void *)(a1 + 24) = v13;
  *(_DWORD *)(a1 + 32) = *((_DWORD *)v10 + 4);
  if (v13)
  {
    unint64_t v14 = *(void *)(v9 + 8);
    unint64_t v15 = *(void *)(a1 + 8);
    if ((v15 & (v15 - 1)) != 0)
    {
      if (v14 >= v15) {
        v14 %= v15;
      }
    }
    else
    {
      v14 &= v15 - 1;
    }
    *(void *)(*(void *)a1 + 8 * v14) = a1 + 16;
    *uint64_t v10 = 0;
    v10[1] = 0;
  }
}

double sub_675250()
{
  byte_259C4EF = 1;
  word_259C4D8 = 65;
  byte_259C507 = 1;
  word_259C4F0 = 65;
  char v4 = 7;
  strcpy((char *)v3, "UNKNOWN");
  int v5 = 0;
  char v7 = 14;
  strcpy((char *)v6, "ROUTES_THROUGH");
  int v8 = 1;
  char v10 = 9;
  strcpy((char *)__p, "ROUTES_TO");
  int v11 = 3;
  char v13 = 11;
  strcpy((char *)v12, "ROUTES_FROM");
  int v14 = 2;
  xmmword_259C538 = 0u;
  *(_OWORD *)&qword_259C548 = 0u;
  dword_259C558 = 1065353216;
  sub_3A6EF0((uint64_t)&xmmword_259C538, (uint64_t)v3, (uint64_t)v3);
  sub_3A6EF0((uint64_t)&xmmword_259C538, (uint64_t)v6, (uint64_t)v6);
  sub_3A6EF0((uint64_t)&xmmword_259C538, (uint64_t)__p, (uint64_t)__p);
  sub_3A6EF0((uint64_t)&xmmword_259C538, (uint64_t)v12, (uint64_t)v12);
  if (v13 < 0)
  {
    operator delete(v12[0]);
    if ((v10 & 0x80000000) == 0)
    {
LABEL_3:
      if ((v7 & 0x80000000) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      operator delete(v6[0]);
      if ((v4 & 0x80000000) == 0) {
        goto LABEL_5;
      }
LABEL_9:
      operator delete(v3[0]);
      goto LABEL_5;
    }
  }
  else if ((v10 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p[0]);
  if (v7 < 0) {
    goto LABEL_8;
  }
LABEL_4:
  if (v4 < 0) {
    goto LABEL_9;
  }
LABEL_5:
  qword_259C510 = 0;
  qword_259C518 = 0;
  qword_259C508 = 0;
  uint64_t v0 = operator new(9uLL);
  *(void *)uint64_t v0 = 0x4020C000103050DLL;
  v0[8] = 6;
  qword_259C508 = (uint64_t)v0;
  qword_259C510 = (uint64_t)(v0 + 9);
  qword_259C518 = (uint64_t)(v0 + 9);
  qword_259C520 = 0;
  qword_259C528 = 0;
  unk_259C530 = 0;
  int v1 = (char *)operator new(9uLL);
  qword_259C528 = (uint64_t)(v1 + 9);
  unk_259C530 = v1 + 9;
  double result = 1.10224369e-279;
  *(void *)int v1 = 0x604020C00010305;
  v1[8] = 13;
  qword_259C520 = (uint64_t)v1;
  return result;
}

void sub_67548C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  if (qword_259C548) {
    sub_20AA7AC((void **)qword_259C548);
  }
  unsigned int v37 = (void *)xmmword_259C538;
  *(void *)&xmmword_259C538 = 0;
  if (v37)
  {
    operator delete(v37);
    if ((a36 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a29 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_11;
    }
  }
  else if ((a36 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(__p);
  if ((a29 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a22 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_12;
  }
LABEL_11:
  operator delete(a24);
  if ((a22 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a15 & 0x80000000) == 0) {
LABEL_14:
    }
      _Unwind_Resume(exception_object);
LABEL_13:
    operator delete(a10);
    _Unwind_Resume(exception_object);
  }
LABEL_12:
  operator delete(a17);
  if ((a15 & 0x80000000) == 0) {
    goto LABEL_14;
  }
  goto LABEL_13;
}

uint64_t sub_67552C(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)a1 = a3;
  HIBYTE(v12[2]) = 21;
  strcpy((char *)v12, "LaneGuidanceCountries");
  long long __p = 0;
  char v10 = 0;
  uint64_t v11 = 0;
  char v4 = sub_374CDC(a2, (uint64_t)v12, (uint64_t *)&__p);
  int v5 = (void **)__p;
  if (__p)
  {
    uint64_t v6 = v10;
    char v7 = __p;
    if (v10 != __p)
    {
      do
      {
        if (*((char *)v6 - 1) < 0) {
          operator delete(*(v6 - 3));
        }
        v6 -= 3;
      }
      while (v6 != v5);
      char v7 = __p;
    }
    char v10 = v5;
    operator delete(v7);
  }
  if (SHIBYTE(v12[2]) < 0) {
    operator delete(v12[0]);
  }
  *(void *)(a1 + 8) = v4;
  return a1;
}

void sub_675604(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

BOOL sub_67562C(uint64_t a1, uint64_t a2)
{
  if (!sub_58070(*(void **)(a1 + 8), a2)) {
    return 0;
  }
  uint64_t v4 = sub_560F4(*(void **)(a1 + 8), a2);
  sub_54214((uint64_t)v12, v4);
  char v11 = 14;
  strcpy((char *)__p, "enabled_on_fwy");
  BOOL v5 = sub_29D62C(v12, (uint64_t)__p);
  if (v11 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v6 = v13;
  if (v13)
  {
    do
    {
      char v7 = (void *)*v6;
      sub_5AF78((uint64_t)(v6 + 2));
      operator delete(v6);
      uint64_t v6 = v7;
    }
    while (v7);
  }
  int v8 = v12[0];
  v12[0] = 0;
  if (v8) {
    operator delete(v8);
  }
  return v5;
}

void sub_67571C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_553C0(&a15);
  _Unwind_Resume(a1);
}

BOOL sub_675740(uint64_t a1, uint64_t a2)
{
  if (!sub_58070(*(void **)(a1 + 8), a2)) {
    return 0;
  }
  uint64_t v4 = sub_560F4(*(void **)(a1 + 8), a2);
  sub_54214((uint64_t)v12, v4);
  char v11 = 18;
  strcpy(__p, "enabled_on_non_fwy");
  BOOL v5 = sub_29D62C(v12, (uint64_t)__p);
  if (v11 < 0) {
    operator delete(*(void **)__p);
  }
  uint64_t v6 = v13;
  if (v13)
  {
    do
    {
      char v7 = (void *)*v6;
      sub_5AF78((uint64_t)(v6 + 2));
      operator delete(v6);
      uint64_t v6 = v7;
    }
    while (v7);
  }
  int v8 = v12[0];
  v12[0] = 0;
  if (v8) {
    operator delete(v8);
  }
  return v5;
}

void sub_675830(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_553C0(&a15);
  _Unwind_Resume(a1);
}

uint64_t sub_675854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)a1) {
    return 1;
  }
  BOOL v3 = 0;
  if (!sub_58070(*(void **)(a1 + 8), a3)) {
    return v3;
  }
  if (*(_DWORD *)(a2 + 160) == 94) {
    return v3;
  }
  BOOL v3 = sub_67562C(a1, a3);
  BOOL v8 = sub_675740(a1, a3);
  if (!*(_DWORD *)(a2 + 1860) || *(unsigned char *)(a2 + 892) || *(unsigned char *)(a2 + 893)) {
    return v3;
  }
  if (*(unsigned char *)(a2 + 894)) {
    return v3;
  }
  else {
    return v8;
  }
}

uint64_t sub_675908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)a1) {
    return 1;
  }
  uint64_t v6 = (void *)sub_560F4(*(void **)(a1 + 8), a3);
  if (*(_DWORD *)(a2 + 1860)) {
    BOOL v7 = *(unsigned char *)(a2 + 892) == 0;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7 && *(unsigned char *)(a2 + 893) == 0 && *(unsigned char *)(a2 + 894) == 0)
  {
    long long __p = operator new(0x20uLL);
    long long v11 = xmmword_20B91B0;
    strcpy((char *)__p, "enable_midstep_lg_on_non_fwy");
  }
  else
  {
    long long __p = operator new(0x20uLL);
    long long v11 = xmmword_20B91C0;
    strcpy((char *)__p, "enable_midstep_lg_on_fwy");
  }
  BOOL v3 = sub_29D62C(v6, (uint64_t)&__p);
  if ((SHIBYTE(v11) & 0x80000000) == 0) {
    return v3;
  }
  operator delete(__p);
  return v3;
}

void sub_675A20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_675A44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)a1) {
    return 1;
  }
  uint64_t v6 = (void *)sub_560F4(*(void **)(a1 + 8), a3);
  if (*(_DWORD *)(a2 + 1860)) {
    BOOL v7 = *(unsigned char *)(a2 + 892) == 0;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7 && *(unsigned char *)(a2 + 893) == 0 && *(unsigned char *)(a2 + 894) == 0)
  {
    long long __p = operator new(0x20uLL);
    long long v11 = xmmword_20B8890;
    strcpy((char *)__p, "enable_maneuver_lg_on_non_fwy");
  }
  else
  {
    long long __p = operator new(0x20uLL);
    long long v11 = xmmword_20B8870;
    strcpy((char *)__p, "enable_maneuver_lg_on_fwy");
  }
  BOOL v3 = sub_29D62C(v6, (uint64_t)&__p);
  if ((SHIBYTE(v11) & 0x80000000) == 0) {
    return v3;
  }
  operator delete(__p);
  return v3;
}

void sub_675B5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_675B80()
{
  byte_259C577 = 1;
  word_259C560 = 65;
  byte_259C58F = 1;
  word_259C578 = 65;
  char v4 = 7;
  strcpy((char *)v3, "UNKNOWN");
  int v5 = 0;
  char v7 = 14;
  strcpy((char *)v6, "ROUTES_THROUGH");
  int v8 = 1;
  char v10 = 9;
  strcpy((char *)__p, "ROUTES_TO");
  int v11 = 3;
  char v13 = 11;
  strcpy((char *)v12, "ROUTES_FROM");
  int v14 = 2;
  xmmword_259C5C0 = 0u;
  *(_OWORD *)&qword_259C5D0 = 0u;
  dword_259C5E0 = 1065353216;
  sub_3A6EF0((uint64_t)&xmmword_259C5C0, (uint64_t)v3, (uint64_t)v3);
  sub_3A6EF0((uint64_t)&xmmword_259C5C0, (uint64_t)v6, (uint64_t)v6);
  sub_3A6EF0((uint64_t)&xmmword_259C5C0, (uint64_t)__p, (uint64_t)__p);
  sub_3A6EF0((uint64_t)&xmmword_259C5C0, (uint64_t)v12, (uint64_t)v12);
  if (v13 < 0)
  {
    operator delete(v12[0]);
    if ((v10 & 0x80000000) == 0)
    {
LABEL_3:
      if ((v7 & 0x80000000) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      operator delete(v6[0]);
      if ((v4 & 0x80000000) == 0) {
        goto LABEL_5;
      }
LABEL_9:
      operator delete(v3[0]);
      goto LABEL_5;
    }
  }
  else if ((v10 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p[0]);
  if (v7 < 0) {
    goto LABEL_8;
  }
LABEL_4:
  if (v4 < 0) {
    goto LABEL_9;
  }
LABEL_5:
  qword_259C598 = 0;
  qword_259C5A0 = 0;
  qword_259C590 = 0;
  uint64_t v0 = operator new(9uLL);
  *(void *)uint64_t v0 = 0x4020C000103050DLL;
  v0[8] = 6;
  qword_259C590 = (uint64_t)v0;
  qword_259C598 = (uint64_t)(v0 + 9);
  qword_259C5A0 = (uint64_t)(v0 + 9);
  qword_259C5A8 = 0;
  qword_259C5B0 = 0;
  unk_259C5B8 = 0;
  int v1 = (char *)operator new(9uLL);
  qword_259C5B0 = (uint64_t)(v1 + 9);
  unk_259C5B8 = v1 + 9;
  double result = 1.10224369e-279;
  *(void *)int v1 = 0x604020C00010305;
  v1[8] = 13;
  qword_259C5A8 = (uint64_t)v1;
  return result;
}

void sub_675DBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  if (qword_259C5D0) {
    sub_20AA7F0((void **)qword_259C5D0);
  }
  unsigned int v37 = (void *)xmmword_259C5C0;
  *(void *)&xmmword_259C5C0 = 0;
  if (v37)
  {
    operator delete(v37);
    if ((a36 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a29 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_11;
    }
  }
  else if ((a36 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(__p);
  if ((a29 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a22 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_12;
  }
LABEL_11:
  operator delete(a24);
  if ((a22 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a15 & 0x80000000) == 0) {
LABEL_14:
    }
      _Unwind_Resume(exception_object);
LABEL_13:
    operator delete(a10);
    _Unwind_Resume(exception_object);
  }
LABEL_12:
  operator delete(a17);
  if ((a15 & 0x80000000) == 0) {
    goto LABEL_14;
  }
  goto LABEL_13;
}

uint64_t sub_675E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = off_243A148;
  *(void *)(a1 + 8) = 0;
  uint64_t v6 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  uint64_t v7 = a1 + 32;
  sub_68206C(a1 + 32);
  sub_68206C(a1 + 368);
  uint64_t v8 = *(void *)(a2 + 1064);
  uint64_t v9 = v8 + 2400 * a3;
  uint64_t v10 = *(void *)(v9 + 1808);
  uint64_t v11 = *(void *)(v9 + 1816);
  if (v10 != v11)
  {
    while (1)
    {
      if (sub_68345C(v10) && sub_682F60(a1 + 368))
      {
        sub_59F334(a1 + 368, v10);
        unint64_t v12 = *(void *)(a1 + 16);
        if (v12 < *(void *)(a1 + 24)) {
          goto LABEL_11;
        }
LABEL_3:
        *(void *)(a1 + 16) = sub_678484(v6, v10);
        v10 += 336;
        if (v10 == v11) {
          break;
        }
      }
      else if (sub_683448(v10) || sub_68342C(v10))
      {
        unint64_t v12 = *(void *)(a1 + 16);
        if (v12 >= *(void *)(a1 + 24)) {
          goto LABEL_3;
        }
LABEL_11:
        sub_5964A0(*(void *)(a1 + 16), v10);
        *(void *)(a1 + 16) = v12 + 336;
        *(void *)(a1 + 16) = v12 + 336;
        v10 += 336;
        if (v10 == v11) {
          break;
        }
      }
      else
      {
        if (sub_683488(v10)) {
          sub_59F334(v7, v10);
        }
        v10 += 336;
        if (v10 == v11) {
          break;
        }
      }
    }
  }
  *(unsigned char *)(a1 + 704) = *(unsigned char *)(v8 + 2400 * a3 + 1856);
  return a1;
}

void sub_675FE4(_Unwind_Exception *a1)
{
  sub_576848(v2);
  sub_592364(v1);
  _Unwind_Resume(a1);
}

void sub_676000(_Unwind_Exception *a1)
{
  sub_592364(v1);
  _Unwind_Resume(a1);
}

void sub_676014(_Unwind_Exception *a1)
{
  *(void *)(v3 + 16) = v5;
  sub_576848(v4);
  sub_576848(v2);
  sub_592364(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_676048@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t result = sub_683488(a1);
  if (result)
  {
    *(void *)(a2 + 64) = 0;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_DWORD *)(a2 + 56) = 1065353216;
    *(unsigned char *)(a2 + 64) = 1;
  }
  else
  {
    return sub_6352AC(a2, (uint64_t)&qword_259E2B8);
  }
  return result;
}

uint64_t sub_6760BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t result = sub_682F60(a2);
  if ((result & 1) == 0) {
    goto LABEL_11;
  }
  if (sub_683488(a2))
  {
    (*(void (**)(void **__return_ptr, uint64_t, uint64_t, void))(*(void *)a1 + 40))(v8, a1, 1, 0);
    sub_67866C(a3, (uint64_t)v8, 1uLL);
    return (uint64_t)sub_4F31D0(v8);
  }
  if (sub_68342C(a2))
  {
    sub_676270(a2, 1, (uint64_t)v8);
    sub_67866C(a3, (uint64_t)v8, 1uLL);
    return (uint64_t)sub_4F31D0(v8);
  }
  uint64_t result = sub_683448(a2);
  if (result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 16);
    return v7(a1, a2);
  }
  else
  {
LABEL_11:
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
  }
  return result;
}

void sub_676240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_676258(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_676270(uint64_t a1@<X1>, int a2@<W2>, uint64_t a3@<X8>)
{
  sub_676A14(a1, (uint64_t)__p);
  int v5 = SHIBYTE(v36);
  if (v36 >= 0) {
    size_t v6 = HIBYTE(v36);
  }
  else {
    size_t v6 = (size_t)__p[1];
  }
  if (!v6)
  {
    *(_OWORD *)(a3 + 64) = 0u;
    *(_OWORD *)(a3 + 80) = 0u;
    *(void *)(a3 + 88) = 0;
    *(void *)(a3 + 96) = 0;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_DWORD *)(a3 + 56) = 1065353216;
    *(unsigned char *)(a3 + 64) = 1;
    *(void *)(a3 + 80) = 0;
    *(_WORD *)(a3 + 96) = 0;
    if ((v5 & 0x80) == 0) {
      return;
    }
    goto LABEL_58;
  }
  if (a2)
  {
    int v7 = byte_259D807;
    if (byte_259D807 >= 0) {
      size_t v8 = byte_259D807;
    }
    else {
      size_t v8 = qword_259D7F8;
    }
    unint64_t v9 = v8 + v6;
    if (v8 + v6 <= 0x7FFFFFFFFFFFFFF7)
    {
      if (v9 > 0x16)
      {
        uint64_t v13 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v9 | 7) != 0x17) {
          uint64_t v13 = v9 | 7;
        }
        uint64_t v14 = v13 + 1;
        p_dst = (long long *)operator new(v13 + 1);
        *((void *)&__dst + 1) = v8 + v6;
        unint64_t v32 = v14 | 0x8000000000000000;
        *(void *)&long long __dst = p_dst;
      }
      else
      {
        unint64_t v32 = 0;
        long long __dst = 0uLL;
        p_dst = &__dst;
        HIBYTE(v32) = v8 + v6;
      }
      if (v5 >= 0) {
        unint64_t v15 = __p;
      }
      else {
        unint64_t v15 = (void **)__p[0];
      }
      memmove(p_dst, v15, v6);
      unint64_t v16 = (char *)p_dst + v6;
      if (v8)
      {
        std::string v17 = &qword_259D7F0;
LABEL_36:
        if (v7 >= 0) {
          BOOL v21 = v17;
        }
        else {
          BOOL v21 = (const void *)*v17;
        }
        memmove(v16, v21, v8);
        goto LABEL_40;
      }
      goto LABEL_40;
    }
LABEL_60:
    sub_188D690();
  }
  int v7 = byte_259D84F;
  if (byte_259D84F >= 0) {
    size_t v8 = byte_259D84F;
  }
  else {
    size_t v8 = qword_259D840;
  }
  unint64_t v11 = v8 + v6;
  if (v8 + v6 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_60;
  }
  if (v11 > 0x16)
  {
    uint64_t v18 = (v11 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v11 | 7) != 0x17) {
      uint64_t v18 = v11 | 7;
    }
    uint64_t v19 = v18 + 1;
    unint64_t v12 = (long long *)operator new(v18 + 1);
    *((void *)&__dst + 1) = v8 + v6;
    unint64_t v32 = v19 | 0x8000000000000000;
    *(void *)&long long __dst = v12;
  }
  else
  {
    unint64_t v32 = 0;
    long long __dst = 0uLL;
    unint64_t v12 = &__dst;
    HIBYTE(v32) = v8 + v6;
  }
  if (v5 >= 0) {
    std::string::size_type v20 = __p;
  }
  else {
    std::string::size_type v20 = (void **)__p[0];
  }
  memmove(v12, v20, v6);
  unint64_t v16 = (char *)v12 + v6;
  if (v8)
  {
    std::string v17 = &qword_259D838;
    goto LABEL_36;
  }
LABEL_40:
  v16[v8] = 0;
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  *(_OWORD *)long long __p = __dst;
  int64_t v36 = v32;
  sub_6352AC((uint64_t)&__dst, (uint64_t)__p);
  uint64_t v29 = 0;
  unsigned __int8 v30 = 0;
  sub_6370D4(a3, &__dst, 1, &v29);
  int v22 = v30;
  if (v30 && !atomic_fetch_add(&v30->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
    std::__shared_weak_count::__release_weak(v22);
  }
  int v23 = v34;
  if (v34)
  {
    do
    {
      uint64_t v24 = (void *)*v23;
      sub_4F4B48((uint64_t)(v23 + 2));
      operator delete(v23);
      int v23 = v24;
    }
    while (v24);
  }
  uint64_t v25 = v33;
  uint64_t v33 = 0;
  if (v25) {
    operator delete(v25);
  }
  uint64_t v26 = __dst;
  if ((void)__dst)
  {
    uint64_t v27 = *((void *)&__dst + 1);
    int v28 = (void *)__dst;
    if (*((void *)&__dst + 1) != (void)__dst)
    {
      do
      {
        if (*(char *)(v27 - 1) < 0) {
          operator delete(*(void **)(v27 - 24));
        }
        v27 -= 24;
      }
      while (v27 != v26);
      int v28 = (void *)__dst;
    }
    *((void *)&__dst + 1) = v26;
    operator delete(v28);
  }
  if (v36 < 0) {
LABEL_58:
  }
    operator delete(__p[0]);
}

void sub_676598(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_6765D0(void *a1@<X1>, uint64_t a2@<X8>)
{
  switch(*a1)
  {
    case 1:
      if (byte_259E0D7 < 0)
      {
        sub_4200((unsigned char *)a2, (void *)xmmword_259E0C0, *((unint64_t *)&xmmword_259E0C0 + 1));
      }
      else
      {
        *(_OWORD *)a2 = xmmword_259E0C0;
        *(void *)(a2 + 16) = unk_259E0D0;
      }
      break;
    case 2:
      if (byte_259E0EF < 0)
      {
        sub_4200((unsigned char *)a2, (void *)xmmword_259E0D8, *((unint64_t *)&xmmword_259E0D8 + 1));
      }
      else
      {
        *(_OWORD *)a2 = xmmword_259E0D8;
        *(void *)(a2 + 16) = unk_259E0E8;
      }
      break;
    case 3:
      if (byte_259E107 < 0)
      {
        sub_4200((unsigned char *)a2, (void *)xmmword_259E0F0, *((unint64_t *)&xmmword_259E0F0 + 1));
      }
      else
      {
        *(_OWORD *)a2 = xmmword_259E0F0;
        *(void *)(a2 + 16) = unk_259E100;
      }
      break;
    case 4:
      if (byte_259E11F < 0)
      {
        sub_4200((unsigned char *)a2, (void *)xmmword_259E108, *((unint64_t *)&xmmword_259E108 + 1));
      }
      else
      {
        *(_OWORD *)a2 = xmmword_259E108;
        *(void *)(a2 + 16) = unk_259E118;
      }
      break;
    case 5:
      if (byte_259E137 < 0)
      {
        sub_4200((unsigned char *)a2, (void *)xmmword_259E120, *((unint64_t *)&xmmword_259E120 + 1));
      }
      else
      {
        *(_OWORD *)a2 = xmmword_259E120;
        *(void *)(a2 + 16) = unk_259E130;
      }
      break;
    case 6:
      if (byte_259E14F < 0)
      {
        sub_4200((unsigned char *)a2, (void *)xmmword_259E138, *((unint64_t *)&xmmword_259E138 + 1));
      }
      else
      {
        *(_OWORD *)a2 = xmmword_259E138;
        *(void *)(a2 + 16) = unk_259E148;
      }
      break;
    case 7:
      if (byte_259E167 < 0)
      {
        sub_4200((unsigned char *)a2, (void *)xmmword_259E150, *((unint64_t *)&xmmword_259E150 + 1));
      }
      else
      {
        *(_OWORD *)a2 = xmmword_259E150;
        *(void *)(a2 + 16) = unk_259E160;
      }
      break;
    case 8:
      if (byte_259E17F < 0)
      {
        sub_4200((unsigned char *)a2, (void *)xmmword_259E168, *((unint64_t *)&xmmword_259E168 + 1));
      }
      else
      {
        *(_OWORD *)a2 = xmmword_259E168;
        *(void *)(a2 + 16) = unk_259E178;
      }
      break;
    default:
      *(void *)a2 = 0;
      *(void *)(a2 + 8) = 0;
      *(void *)(a2 + 16) = 0;
      break;
  }
}

void *sub_67680C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  char v4 = sub_682540(a1);
  uint64_t result = (void *)sub_682244(a1);
  char v6 = (char)result;
  if (v4 == 2)
  {
    if (sub_6847A0(a1, 1u))
    {
      uint64_t result = (void *)sub_6847A0(a1, 2u);
      if (result)
      {
        if ((byte_259E287 & 0x80000000) == 0)
        {
          int v7 = &xmmword_259E270;
          goto LABEL_24;
        }
        size_t v8 = &xmmword_259E270;
        goto LABEL_31;
      }
    }
    uint64_t result = (void *)sub_6847A0(a1, v6 - 2);
    if (result)
    {
      uint64_t result = (void *)sub_6847A0(a1, v6 - 3);
      if (result)
      {
        if ((byte_259E29F & 0x80000000) == 0)
        {
          int v7 = &xmmword_259E288;
          goto LABEL_24;
        }
        size_t v8 = &xmmword_259E288;
        goto LABEL_31;
      }
    }
    goto LABEL_25;
  }
  if (v4 != 1) {
    goto LABEL_25;
  }
  uint64_t result = (void *)sub_6847A0(a1, 1u);
  if (result)
  {
    if ((byte_259E227 & 0x80000000) == 0)
    {
      int v7 = &xmmword_259E210;
LABEL_24:
      *(_OWORD *)a2 = *v7;
      *(void *)(a2 + 16) = *((void *)v7 + 2);
      return result;
    }
    size_t v8 = &xmmword_259E210;
    goto LABEL_31;
  }
  uint64_t result = (void *)sub_6847A0(a1, v6 - 2);
  if (result)
  {
    if ((byte_259E23F & 0x80000000) == 0)
    {
      int v7 = &xmmword_259E228;
      goto LABEL_24;
    }
    size_t v8 = &xmmword_259E228;
    goto LABEL_31;
  }
  uint64_t result = (void *)sub_6847A0(a1, 2u);
  if (result)
  {
    if ((byte_259E257 & 0x80000000) == 0)
    {
      int v7 = &xmmword_259E240;
      goto LABEL_24;
    }
    size_t v8 = &xmmword_259E240;
    goto LABEL_31;
  }
  uint64_t result = (void *)sub_6847A0(a1, v6 - 3);
  if (!result)
  {
LABEL_25:
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
    return result;
  }
  if ((byte_259E26F & 0x80000000) == 0)
  {
    int v7 = &xmmword_259E258;
    goto LABEL_24;
  }
  size_t v8 = &xmmword_259E258;
LABEL_31:
  unint64_t v9 = *(void **)v8;
  unint64_t v10 = *((void *)v8 + 1);

  return sub_4200((unsigned char *)a2, v9, v10);
}

void sub_676A14(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  memset(&v14, 0, sizeof(v14));
  if (sub_683488(a1) && sub_6829A4(a1))
  {
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
    goto LABEL_37;
  }
  if (sub_683448(a1))
  {
    if (byte_259E2E7 < 0)
    {
      sub_4200((unsigned char *)a2, (void *)xmmword_259E2D0, *((unint64_t *)&xmmword_259E2D0 + 1));
    }
    else
    {
      *(_OWORD *)a2 = xmmword_259E2D0;
      *(void *)(a2 + 16) = unk_259E2E0;
    }
    goto LABEL_37;
  }
  if (sub_6823C0(a1))
  {
    char v4 = &dword_259E1C8;
LABEL_14:
    std::string::operator=(&v14, (const std::string *)v4);
    goto LABEL_15;
  }
  if (sub_6823D0(a1))
  {
    char v4 = &dword_259E1E0;
    goto LABEL_14;
  }
  if (sub_68235C(a1))
  {
    char v4 = &dword_259E1F8;
    goto LABEL_14;
  }
  if (sub_6823E0(a1))
  {
    sub_67680C(a1, (uint64_t)&__p);
    if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v14.__r_.__value_.__l.__data_);
    }
    std::string v14 = __p;
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    if (!size) {
      goto LABEL_36;
    }
    goto LABEL_28;
  }
LABEL_15:
  std::string::size_type v5 = HIBYTE(v14.__r_.__value_.__r.__words[2]);
  if ((v14.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type v5 = v14.__r_.__value_.__l.__size_;
  }
  if (!v5) {
    goto LABEL_36;
  }
  LOBYTE(v12) = sub_682540(a1);
  uint64_t v12 = v12;
  sub_6765D0(&v12, (uint64_t)&__p);
  char v6 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v7 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v7 = __p.__r_.__value_.__l.__size_;
  }
  if (v7)
  {
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    std::string::append(&v14, (const std::string::value_type *)p_p, v7);
    if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) != 0) {
      goto LABEL_26;
    }
  }
  else
  {
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
    if (v6 < 0) {
LABEL_26:
    }
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (!v7) {
    goto LABEL_37;
  }
LABEL_28:
  if (sub_68342C(a1))
  {
    if (byte_259E2B7 >= 0) {
      unint64_t v9 = (const std::string::value_type *)&qword_259E2A0;
    }
    else {
      unint64_t v9 = (const std::string::value_type *)qword_259E2A0;
    }
    if (byte_259E2B7 >= 0) {
      std::string::size_type v10 = byte_259E2B7;
    }
    else {
      std::string::size_type v10 = unk_259E2A8;
    }
    std::string::append(&v14, v9, v10);
  }
LABEL_36:
  *(std::string *)a2 = v14;
  memset(&v14, 0, sizeof(v14));
LABEL_37:
  if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v14.__r_.__value_.__l.__data_);
  }
}

void sub_676C68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_676CBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = off_243A190;
  *(void *)(a1 + 8) = 0;
  char v6 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  uint64_t v7 = a1 + 32;
  sub_68206C(a1 + 32);
  sub_68206C(a1 + 368);
  uint64_t v8 = *(void *)(a2 + 1064);
  uint64_t v9 = v8 + 2400 * a3;
  uint64_t v10 = *(void *)(v9 + 1808);
  uint64_t v11 = *(void *)(v9 + 1816);
  if (v10 != v11)
  {
    while (1)
    {
      if (sub_68345C(v10) && sub_682F60(a1 + 368))
      {
        sub_59F334(a1 + 368, v10);
        unint64_t v12 = *(void *)(a1 + 16);
        if (v12 < *(void *)(a1 + 24)) {
          goto LABEL_11;
        }
LABEL_3:
        *(void *)(a1 + 16) = sub_678484(v6, v10);
        v10 += 336;
        if (v10 == v11) {
          break;
        }
      }
      else if (sub_683448(v10) || sub_68342C(v10))
      {
        unint64_t v12 = *(void *)(a1 + 16);
        if (v12 >= *(void *)(a1 + 24)) {
          goto LABEL_3;
        }
LABEL_11:
        sub_5964A0(*(void *)(a1 + 16), v10);
        *(void *)(a1 + 16) = v12 + 336;
        *(void *)(a1 + 16) = v12 + 336;
        v10 += 336;
        if (v10 == v11) {
          break;
        }
      }
      else
      {
        if (sub_683488(v10)) {
          sub_59F334(v7, v10);
        }
        v10 += 336;
        if (v10 == v11) {
          break;
        }
      }
    }
  }
  *(unsigned char *)(a1 + 704) = *(unsigned char *)(v8 + 2400 * a3 + 1856);
  return a1;
}

void sub_676E44(_Unwind_Exception *a1)
{
  sub_576848(v2);
  sub_592364(v1);
  _Unwind_Resume(a1);
}

void sub_676E60(_Unwind_Exception *a1)
{
  sub_592364(v1);
  _Unwind_Resume(a1);
}

void sub_676E74(_Unwind_Exception *a1)
{
  *(void *)(v3 + 16) = v5;
  sub_576848(v4);
  sub_576848(v2);
  sub_592364(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_676EA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t result = sub_682F60(a2);
  if ((result & 1) == 0) {
    goto LABEL_11;
  }
  if (sub_683488(a2))
  {
    (*(void (**)(void **__return_ptr, uint64_t, uint64_t, void))(*(void *)a1 + 40))(v8, a1, 1, 0);
    sub_67866C(a3, (uint64_t)v8, 1uLL);
    return (uint64_t)sub_4F31D0(v8);
  }
  if (sub_68342C(a2))
  {
    sub_67705C(a2, 1, (uint64_t)v8);
    sub_67866C(a3, (uint64_t)v8, 1uLL);
    return (uint64_t)sub_4F31D0(v8);
  }
  uint64_t result = sub_683448(a2);
  if (result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 16);
    return v7(a1, a2);
  }
  else
  {
LABEL_11:
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
  }
  return result;
}

void sub_67702C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_677044(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_67705C(uint64_t a1@<X1>, int a2@<W2>, uint64_t a3@<X8>)
{
  sub_6775F8(a1, (uint64_t)__p);
  int v5 = SHIBYTE(v36);
  if (v36 >= 0) {
    size_t v6 = HIBYTE(v36);
  }
  else {
    size_t v6 = (size_t)__p[1];
  }
  if (!v6)
  {
    *(_OWORD *)(a3 + 64) = 0u;
    *(_OWORD *)(a3 + 80) = 0u;
    *(void *)(a3 + 88) = 0;
    *(void *)(a3 + 96) = 0;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_DWORD *)(a3 + 56) = 1065353216;
    *(unsigned char *)(a3 + 64) = 1;
    *(void *)(a3 + 80) = 0;
    *(_WORD *)(a3 + 96) = 0;
    if ((v5 & 0x80) == 0) {
      return;
    }
    goto LABEL_58;
  }
  if (a2)
  {
    int v7 = byte_259D807;
    if (byte_259D807 >= 0) {
      size_t v8 = byte_259D807;
    }
    else {
      size_t v8 = qword_259D7F8;
    }
    unint64_t v9 = v8 + v6;
    if (v8 + v6 <= 0x7FFFFFFFFFFFFFF7)
    {
      if (v9 > 0x16)
      {
        uint64_t v13 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v9 | 7) != 0x17) {
          uint64_t v13 = v9 | 7;
        }
        uint64_t v14 = v13 + 1;
        p_dst = (long long *)operator new(v13 + 1);
        *((void *)&__dst + 1) = v8 + v6;
        unint64_t v32 = v14 | 0x8000000000000000;
        *(void *)&long long __dst = p_dst;
      }
      else
      {
        unint64_t v32 = 0;
        long long __dst = 0uLL;
        p_dst = &__dst;
        HIBYTE(v32) = v8 + v6;
      }
      if (v5 >= 0) {
        unint64_t v15 = __p;
      }
      else {
        unint64_t v15 = (void **)__p[0];
      }
      memmove(p_dst, v15, v6);
      unint64_t v16 = (char *)p_dst + v6;
      if (v8)
      {
        std::string v17 = &qword_259D7F0;
LABEL_36:
        if (v7 >= 0) {
          BOOL v21 = v17;
        }
        else {
          BOOL v21 = (const void *)*v17;
        }
        memmove(v16, v21, v8);
        goto LABEL_40;
      }
      goto LABEL_40;
    }
LABEL_60:
    sub_188D690();
  }
  int v7 = byte_259D84F;
  if (byte_259D84F >= 0) {
    size_t v8 = byte_259D84F;
  }
  else {
    size_t v8 = qword_259D840;
  }
  unint64_t v11 = v8 + v6;
  if (v8 + v6 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_60;
  }
  if (v11 > 0x16)
  {
    uint64_t v18 = (v11 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v11 | 7) != 0x17) {
      uint64_t v18 = v11 | 7;
    }
    uint64_t v19 = v18 + 1;
    unint64_t v12 = (long long *)operator new(v18 + 1);
    *((void *)&__dst + 1) = v8 + v6;
    unint64_t v32 = v19 | 0x8000000000000000;
    *(void *)&long long __dst = v12;
  }
  else
  {
    unint64_t v32 = 0;
    long long __dst = 0uLL;
    unint64_t v12 = &__dst;
    HIBYTE(v32) = v8 + v6;
  }
  if (v5 >= 0) {
    std::string::size_type v20 = __p;
  }
  else {
    std::string::size_type v20 = (void **)__p[0];
  }
  memmove(v12, v20, v6);
  unint64_t v16 = (char *)v12 + v6;
  if (v8)
  {
    std::string v17 = &qword_259D838;
    goto LABEL_36;
  }
LABEL_40:
  v16[v8] = 0;
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  *(_OWORD *)std::string __p = __dst;
  int64_t v36 = v32;
  sub_6352AC((uint64_t)&__dst, (uint64_t)__p);
  uint64_t v29 = 0;
  unsigned __int8 v30 = 0;
  sub_6370D4(a3, &__dst, 1, &v29);
  int v22 = v30;
  if (v30 && !atomic_fetch_add(&v30->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
    std::__shared_weak_count::__release_weak(v22);
  }
  int v23 = v34;
  if (v34)
  {
    do
    {
      uint64_t v24 = (void *)*v23;
      sub_4F4B48((uint64_t)(v23 + 2));
      operator delete(v23);
      int v23 = v24;
    }
    while (v24);
  }
  uint64_t v25 = v33;
  uint64_t v33 = 0;
  if (v25) {
    operator delete(v25);
  }
  uint64_t v26 = __dst;
  if ((void)__dst)
  {
    uint64_t v27 = *((void *)&__dst + 1);
    int v28 = (void *)__dst;
    if (*((void *)&__dst + 1) != (void)__dst)
    {
      do
      {
        if (*(char *)(v27 - 1) < 0) {
          operator delete(*(void **)(v27 - 24));
        }
        v27 -= 24;
      }
      while (v27 != v26);
      int v28 = (void *)__dst;
    }
    *((void *)&__dst + 1) = v26;
    operator delete(v28);
  }
  if (v36 < 0) {
LABEL_58:
  }
    operator delete(__p[0]);
}

void sub_677384(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_6773BC(void *a1@<X1>, uint64_t a2@<X8>)
{
  switch(*a1)
  {
    case 1:
      if (byte_259E0D7 < 0)
      {
        sub_4200((unsigned char *)a2, (void *)xmmword_259E0C0, *((unint64_t *)&xmmword_259E0C0 + 1));
      }
      else
      {
        *(_OWORD *)a2 = xmmword_259E0C0;
        *(void *)(a2 + 16) = unk_259E0D0;
      }
      break;
    case 2:
      if (byte_259E0EF < 0)
      {
        sub_4200((unsigned char *)a2, (void *)xmmword_259E0D8, *((unint64_t *)&xmmword_259E0D8 + 1));
      }
      else
      {
        *(_OWORD *)a2 = xmmword_259E0D8;
        *(void *)(a2 + 16) = unk_259E0E8;
      }
      break;
    case 3:
      if (byte_259E107 < 0)
      {
        sub_4200((unsigned char *)a2, (void *)xmmword_259E0F0, *((unint64_t *)&xmmword_259E0F0 + 1));
      }
      else
      {
        *(_OWORD *)a2 = xmmword_259E0F0;
        *(void *)(a2 + 16) = unk_259E100;
      }
      break;
    case 4:
      if (byte_259E11F < 0)
      {
        sub_4200((unsigned char *)a2, (void *)xmmword_259E108, *((unint64_t *)&xmmword_259E108 + 1));
      }
      else
      {
        *(_OWORD *)a2 = xmmword_259E108;
        *(void *)(a2 + 16) = unk_259E118;
      }
      break;
    case 5:
      if (byte_259E137 < 0)
      {
        sub_4200((unsigned char *)a2, (void *)xmmword_259E120, *((unint64_t *)&xmmword_259E120 + 1));
      }
      else
      {
        *(_OWORD *)a2 = xmmword_259E120;
        *(void *)(a2 + 16) = unk_259E130;
      }
      break;
    case 6:
      if (byte_259E14F < 0)
      {
        sub_4200((unsigned char *)a2, (void *)xmmword_259E138, *((unint64_t *)&xmmword_259E138 + 1));
      }
      else
      {
        *(_OWORD *)a2 = xmmword_259E138;
        *(void *)(a2 + 16) = unk_259E148;
      }
      break;
    case 7:
      if (byte_259E167 < 0)
      {
        sub_4200((unsigned char *)a2, (void *)xmmword_259E150, *((unint64_t *)&xmmword_259E150 + 1));
      }
      else
      {
        *(_OWORD *)a2 = xmmword_259E150;
        *(void *)(a2 + 16) = unk_259E160;
      }
      break;
    case 8:
      if (byte_259E17F < 0)
      {
        sub_4200((unsigned char *)a2, (void *)xmmword_259E168, *((unint64_t *)&xmmword_259E168 + 1));
      }
      else
      {
        *(_OWORD *)a2 = xmmword_259E168;
        *(void *)(a2 + 16) = unk_259E178;
      }
      break;
    default:
      *(void *)a2 = 0;
      *(void *)(a2 + 8) = 0;
      *(void *)(a2 + 16) = 0;
      break;
  }
}

void sub_6775F8(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  memset(&v14, 0, sizeof(v14));
  if (sub_683488(a1) && sub_6829A4(a1))
  {
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
    goto LABEL_37;
  }
  if (sub_683448(a1))
  {
    if (byte_259E2E7 < 0)
    {
      sub_4200((unsigned char *)a2, (void *)xmmword_259E2D0, *((unint64_t *)&xmmword_259E2D0 + 1));
    }
    else
    {
      *(_OWORD *)a2 = xmmword_259E2D0;
      *(void *)(a2 + 16) = unk_259E2E0;
    }
    goto LABEL_37;
  }
  if (sub_6823C0(a1))
  {
    uint64_t v4 = &dword_259E1C8;
LABEL_14:
    std::string::operator=(&v14, (const std::string *)v4);
    goto LABEL_15;
  }
  if (sub_6823D0(a1))
  {
    uint64_t v4 = &dword_259E1E0;
    goto LABEL_14;
  }
  if (sub_68235C(a1))
  {
    uint64_t v4 = &dword_259E1F8;
    goto LABEL_14;
  }
  if (sub_6823E0(a1))
  {
    sub_67680C(a1, (uint64_t)&__p);
    if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v14.__r_.__value_.__l.__data_);
    }
    std::string v14 = __p;
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    if (!size) {
      goto LABEL_36;
    }
    goto LABEL_28;
  }
LABEL_15:
  std::string::size_type v5 = HIBYTE(v14.__r_.__value_.__r.__words[2]);
  if ((v14.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type v5 = v14.__r_.__value_.__l.__size_;
  }
  if (!v5) {
    goto LABEL_36;
  }
  LOBYTE(v12) = sub_682540(a1);
  uint64_t v12 = v12;
  sub_6773BC(&v12, (uint64_t)&__p);
  char v6 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v7 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v7 = __p.__r_.__value_.__l.__size_;
  }
  if (v7)
  {
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    std::string::append(&v14, (const std::string::value_type *)p_p, v7);
    if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) != 0) {
      goto LABEL_26;
    }
  }
  else
  {
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
    if (v6 < 0) {
LABEL_26:
    }
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (!v7) {
    goto LABEL_37;
  }
LABEL_28:
  if (sub_68342C(a1))
  {
    if (byte_259E2B7 >= 0) {
      unint64_t v9 = (const std::string::value_type *)&qword_259E2A0;
    }
    else {
      unint64_t v9 = (const std::string::value_type *)qword_259E2A0;
    }
    if (byte_259E2B7 >= 0) {
      std::string::size_type v10 = byte_259E2B7;
    }
    else {
      std::string::size_type v10 = unk_259E2A8;
    }
    std::string::append(&v14, v9, v10);
  }
LABEL_36:
  *(std::string *)a2 = v14;
  memset(&v14, 0, sizeof(v14));
LABEL_37:
  if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v14.__r_.__value_.__l.__data_);
  }
}

void sub_67784C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6778A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = off_243A1D8;
  *(void *)(a1 + 8) = 0;
  char v6 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  uint64_t v7 = a1 + 32;
  sub_68206C(a1 + 32);
  sub_68206C(a1 + 368);
  uint64_t v8 = *(void *)(a2 + 1064);
  uint64_t v9 = v8 + 2400 * a3;
  uint64_t v10 = *(void *)(v9 + 1808);
  uint64_t v11 = *(void *)(v9 + 1816);
  if (v10 != v11)
  {
    while (1)
    {
      if (sub_68345C(v10) && sub_682F60(a1 + 368))
      {
        sub_59F334(a1 + 368, v10);
        unint64_t v12 = *(void *)(a1 + 16);
        if (v12 < *(void *)(a1 + 24)) {
          goto LABEL_11;
        }
LABEL_3:
        *(void *)(a1 + 16) = sub_678484(v6, v10);
        v10 += 336;
        if (v10 == v11) {
          break;
        }
      }
      else if (sub_683448(v10) || sub_68342C(v10))
      {
        unint64_t v12 = *(void *)(a1 + 16);
        if (v12 >= *(void *)(a1 + 24)) {
          goto LABEL_3;
        }
LABEL_11:
        sub_5964A0(*(void *)(a1 + 16), v10);
        *(void *)(a1 + 16) = v12 + 336;
        *(void *)(a1 + 16) = v12 + 336;
        v10 += 336;
        if (v10 == v11) {
          break;
        }
      }
      else
      {
        if (sub_683488(v10)) {
          sub_59F334(v7, v10);
        }
        v10 += 336;
        if (v10 == v11) {
          break;
        }
      }
    }
  }
  *(unsigned char *)(a1 + 704) = *(unsigned char *)(v8 + 2400 * a3 + 1856);
  return a1;
}

void sub_677A28(_Unwind_Exception *a1)
{
  sub_576848(v2);
  sub_592364(v1);
  _Unwind_Resume(a1);
}

void sub_677A44(_Unwind_Exception *a1)
{
  sub_592364(v1);
  _Unwind_Resume(a1);
}

void sub_677A58(_Unwind_Exception *a1)
{
  *(void *)(v3 + 16) = v5;
  sub_576848(v4);
  sub_576848(v2);
  sub_592364(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_677A8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t result = sub_682F60(a2);
  if ((result & 1) == 0) {
    goto LABEL_11;
  }
  if (sub_683488(a2))
  {
    (*(void (**)(void **__return_ptr, uint64_t, uint64_t, void))(*(void *)a1 + 40))(v8, a1, 1, 0);
    sub_67866C(a3, (uint64_t)v8, 1uLL);
    return (uint64_t)sub_4F31D0(v8);
  }
  if (sub_68342C(a2))
  {
    sub_677C40(a2, 1, (uint64_t)v8);
    sub_67866C(a3, (uint64_t)v8, 1uLL);
    return (uint64_t)sub_4F31D0(v8);
  }
  uint64_t result = sub_683448(a2);
  if (result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 16);
    return v7(a1, a2);
  }
  else
  {
LABEL_11:
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
  }
  return result;
}

void sub_677C10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_677C28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_4F31D0((void **)va);
  _Unwind_Resume(a1);
}

void sub_677C40(uint64_t a1@<X1>, int a2@<W2>, uint64_t a3@<X8>)
{
  sub_6781DC(a1, (uint64_t)__p);
  int v5 = SHIBYTE(v36);
  if (v36 >= 0) {
    size_t v6 = HIBYTE(v36);
  }
  else {
    size_t v6 = (size_t)__p[1];
  }
  if (!v6)
  {
    *(_OWORD *)(a3 + 64) = 0u;
    *(_OWORD *)(a3 + 80) = 0u;
    *(void *)(a3 + 88) = 0;
    *(void *)(a3 + 96) = 0;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_DWORD *)(a3 + 56) = 1065353216;
    *(unsigned char *)(a3 + 64) = 1;
    *(void *)(a3 + 80) = 0;
    *(_WORD *)(a3 + 96) = 0;
    if ((v5 & 0x80) == 0) {
      return;
    }
    goto LABEL_58;
  }
  if (a2)
  {
    int v7 = byte_259D807;
    if (byte_259D807 >= 0) {
      size_t v8 = byte_259D807;
    }
    else {
      size_t v8 = qword_259D7F8;
    }
    unint64_t v9 = v8 + v6;
    if (v8 + v6 <= 0x7FFFFFFFFFFFFFF7)
    {
      if (v9 > 0x16)
      {
        uint64_t v13 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v9 | 7) != 0x17) {
          uint64_t v13 = v9 | 7;
        }
        uint64_t v14 = v13 + 1;
        p_dst = (long long *)operator new(v13 + 1);
        *((void *)&__dst + 1) = v8 + v6;
        unint64_t v32 = v14 | 0x8000000000000000;
        *(void *)&long long __dst = p_dst;
      }
      else
      {
        unint64_t v32 = 0;
        long long __dst = 0uLL;
        p_dst = &__dst;
        HIBYTE(v32) = v8 + v6;
      }
      if (v5 >= 0) {
        unint64_t v15 = __p;
      }
      else {
        unint64_t v15 = (void **)__p[0];
      }
      memmove(p_dst, v15, v6);
      unint64_t v16 = (char *)p_dst + v6;
      if (v8)
      {
        std::string v17 = &qword_259D7F0;
LABEL_36:
        if (v7 >= 0) {
          BOOL v21 = v17;
        }
        else {
          BOOL v21 = (const void *)*v17;
        }
        memmove(v16, v21, v8);
        goto LABEL_40;
      }
      goto LABEL_40;
    }
LABEL_60:
    sub_188D690();
  }
  int v7 = byte_259D84F;
  if (byte_259D84F >= 0) {
    size_t v8 = byte_259D84F;
  }
  else {
    size_t v8 = qword_259D840;
  }
  unint64_t v11 = v8 + v6;
  if (v8 + v6 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_60;
  }
  if (v11 > 0x16)
  {
    uint64_t v18 = (v11 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v11 | 7) != 0x17) {
      uint64_t v18 = v11 | 7;
    }
    uint64_t v19 = v18 + 1;
    unint64_t v12 = (long long *)operator new(v18 + 1);
    *((void *)&__dst + 1) = v8 + v6;
    unint64_t v32 = v19 | 0x8000000000000000;
    *(void *)&long long __dst = v12;
  }
  else
  {
    unint64_t v32 = 0;
    long long __dst = 0uLL;
    unint64_t v12 = &__dst;
    HIBYTE(v32) = v8 + v6;
  }
  if (v5 >= 0) {
    std::string::size_type v20 = __p;
  }
  else {
    std::string::size_type v20 = (void **)__p[0];
  }
  memmove(v12, v20, v6);
  unint64_t v16 = (char *)v12 + v6;
  if (v8)
  {
    std::string v17 = &qword_259D838;
    goto LABEL_36;
  }
LABEL_40:
  v16[v8] = 0;
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  *(_OWORD *)std::string __p = __dst;
  int64_t v36 = v32;
  sub_6352AC((uint64_t)&__dst, (uint64_t)__p);
  uint64_t v29 = 0;
  unsigned __int8 v30 = 0;
  sub_6370D4(a3, &__dst, 1, &v29);
  int v22 = v30;
  if (v30 && !atomic_fetch_add(&v30->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
    std::__shared_weak_count::__release_weak(v22);
  }
  int v23 = v34;
  if (v34)
  {
    do
    {
      uint64_t v24 = (void *)*v23;
      sub_4F4B48((uint64_t)(v23 + 2));
      operator delete(v23);
      int v23 = v24;
    }
    while (v24);
  }
  uint64_t v25 = v33;
  uint64_t v33 = 0;
  if (v25) {
    operator delete(v25);
  }
  uint64_t v26 = __dst;
  if ((void)__dst)
  {
    uint64_t v27 = *((void *)&__dst + 1);
    int v28 = (void *)__dst;
    if (*((void *)&__dst + 1) != (void)__dst)
    {
      do
      {
        if (*(char *)(v27 - 1) < 0) {
          operator delete(*(void **)(v27 - 24));
        }
        v27 -= 24;
      }
      while (v27 != v26);
      int v28 = (void *)__dst;
    }
    *((void *)&__dst + 1) = v26;
    operator delete(v28);
  }
  if (v36 < 0) {
LABEL_58:
  }
    operator delete(__p[0]);
}

void sub_677F68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_677FA0(void *a1@<X1>, uint64_t a2@<X8>)
{
  switch(*a1)
  {
    case 1:
      if (byte_259E0D7 < 0)
      {
        sub_4200((unsigned char *)a2, (void *)xmmword_259E0C0, *((unint64_t *)&xmmword_259E0C0 + 1));
      }
      else
      {
        *(_OWORD *)a2 = xmmword_259E0C0;
        *(void *)(a2 + 16) = unk_259E0D0;
      }
      break;
    case 2:
      if (byte_259E0EF < 0)
      {
        sub_4200((unsigned char *)a2, (void *)xmmword_259E0D8, *((unint64_t *)&xmmword_259E0D8 + 1));
      }
      else
      {
        *(_OWORD *)a2 = xmmword_259E0D8;
        *(void *)(a2 + 16) = unk_259E0E8;
      }
      break;
    case 3:
      if (byte_259E107 < 0)
      {
        sub_4200((unsigned char *)a2, (void *)xmmword_259E0F0, *((unint64_t *)&xmmword_259E0F0 + 1));
      }
      else
      {
        *(_OWORD *)a2 = xmmword_259E0F0;
        *(void *)(a2 + 16) = unk_259E100;
      }
      break;
    case 4:
      if (byte_259E11F < 0)
      {
        sub_4200((unsigned char *)a2, (void *)xmmword_259E108, *((unint64_t *)&xmmword_259E108 + 1));
      }
      else
      {
        *(_OWORD *)a2 = xmmword_259E108;
        *(void *)(a2 + 16) = unk_259E118;
      }
      break;
    case 5:
      if (byte_259E137 < 0)
      {
        sub_4200((unsigned char *)a2, (void *)xmmword_259E120, *((unint64_t *)&xmmword_259E120 + 1));
      }
      else
      {
        *(_OWORD *)a2 = xmmword_259E120;
        *(void *)(a2 + 16) = unk_259E130;
      }
      break;
    case 6:
      if (byte_259E14F < 0)
      {
        sub_4200((unsigned char *)a2, (void *)xmmword_259E138, *((unint64_t *)&xmmword_259E138 + 1));
      }
      else
      {
        *(_OWORD *)a2 = xmmword_259E138;
        *(void *)(a2 + 16) = unk_259E148;
      }
      break;
    case 7:
      if (byte_259E167 < 0)
      {
        sub_4200((unsigned char *)a2, (void *)xmmword_259E150, *((unint64_t *)&xmmword_259E150 + 1));
      }
      else
      {
        *(_OWORD *)a2 = xmmword_259E150;
        *(void *)(a2 + 16) = unk_259E160;
      }
      break;
    case 8:
      if (byte_259E17F < 0)
      {
        sub_4200((unsigned char *)a2, (void *)xmmword_259E168, *((unint64_t *)&xmmword_259E168 + 1));
      }
      else
      {
        *(_OWORD *)a2 = xmmword_259E168;
        *(void *)(a2 + 16) = unk_259E178;
      }
      break;
    default:
      *(void *)a2 = 0;
      *(void *)(a2 + 8) = 0;
      *(void *)(a2 + 16) = 0;
      break;
  }
}

void sub_6781DC(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  memset(&v14, 0, sizeof(v14));
  if (sub_683488(a1) && sub_6829A4(a1))
  {
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
    goto LABEL_37;
  }
  if (sub_683448(a1))
  {
    if (byte_259E2E7 < 0)
    {
      sub_4200((unsigned char *)a2, (void *)xmmword_259E2D0, *((unint64_t *)&xmmword_259E2D0 + 1));
    }
    else
    {
      *(_OWORD *)a2 = xmmword_259E2D0;
      *(void *)(a2 + 16) = unk_259E2E0;
    }
    goto LABEL_37;
  }
  if (sub_6823C0(a1))
  {
    uint64_t v4 = &dword_259E1C8;
LABEL_14:
    std::string::operator=(&v14, (const std::string *)v4);
    goto LABEL_15;
  }
  if (sub_6823D0(a1))
  {
    uint64_t v4 = &dword_259E1E0;
    goto LABEL_14;
  }
  if (sub_68235C(a1))
  {
    uint64_t v4 = &dword_259E1F8;
    goto LABEL_14;
  }
  if (sub_6823E0(a1))
  {
    sub_67680C(a1, (uint64_t)&__p);
    if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v14.__r_.__value_.__l.__data_);
    }
    std::string v14 = __p;
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    if (!size) {
      goto LABEL_36;
    }
    goto LABEL_28;
  }
LABEL_15:
  std::string::size_type v5 = HIBYTE(v14.__r_.__value_.__r.__words[2]);
  if ((v14.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type v5 = v14.__r_.__value_.__l.__size_;
  }
  if (!v5) {
    goto LABEL_36;
  }
  LOBYTE(v12) = sub_682540(a1);
  uint64_t v12 = v12;
  sub_677FA0(&v12, (uint64_t)&__p);
  char v6 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v7 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v7 = __p.__r_.__value_.__l.__size_;
  }
  if (v7)
  {
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    std::string::append(&v14, (const std::string::value_type *)p_p, v7);
    if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) != 0) {
      goto LABEL_26;
    }
  }
  else
  {
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
    if (v6 < 0) {
LABEL_26:
    }
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (!v7) {
    goto LABEL_37;
  }
LABEL_28:
  if (sub_68342C(a1))
  {
    if (byte_259E2B7 >= 0) {
      unint64_t v9 = (const std::string::value_type *)&qword_259E2A0;
    }
    else {
      unint64_t v9 = (const std::string::value_type *)qword_259E2A0;
    }
    if (byte_259E2B7 >= 0) {
      std::string::size_type v10 = byte_259E2B7;
    }
    else {
      std::string::size_type v10 = unk_259E2A8;
    }
    std::string::append(&v14, v9, v10);
  }
LABEL_36:
  *(std::string *)a2 = v14;
  memset(&v14, 0, sizeof(v14));
LABEL_37:
  if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v14.__r_.__value_.__l.__data_);
  }
}

void sub_678430(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_678484(uint64_t *a1, uint64_t a2)
{
  unint64_t v3 = 0xCF3CF3CF3CF3CF3DLL * ((a1[1] - *a1) >> 4);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xC30C30C30C30C3) {
    sub_2E00();
  }
  if (0x9E79E79E79E79E7ALL * ((a1[2] - *a1) >> 4) > v4) {
    unint64_t v4 = 0x9E79E79E79E79E7ALL * ((a1[2] - *a1) >> 4);
  }
  if (0xCF3CF3CF3CF3CF3DLL * ((a1[2] - *a1) >> 4) >= 0x61861861861861) {
    unint64_t v6 = 0xC30C30C30C30C3;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xC30C30C30C30C3) {
      sub_188D718();
    }
    std::string::size_type v7 = (char *)operator new(336 * v6);
  }
  else
  {
    std::string::size_type v7 = 0;
  }
  uint64_t v14 = (uint64_t)&v7[336 * v3];
  unint64_t v15 = &v7[336 * v6];
  sub_5964A0(v14, a2);
  uint64_t v8 = v14;
  uint64_t v9 = v14 + 336;
  unint64_t v11 = (uint64_t *)*a1;
  std::string::size_type v10 = (uint64_t *)a1[1];
  if (v10 == (uint64_t *)*a1)
  {
    *a1 = v14;
    a1[1] = v9;
    a1[2] = (uint64_t)v15;
  }
  else
  {
    do
    {
      v10 -= 42;
      sub_66FDB0(v8 - 336, v10);
    }
    while (v10 != v11);
    uint64_t v12 = (uint64_t *)*a1;
    std::string::size_type v10 = (uint64_t *)a1[1];
    *a1 = v8;
    a1[1] = v9;
    a1[2] = (uint64_t)v15;
    if (v10 != v12)
    {
      do
      {
        v10 -= 42;
        sub_576848((uint64_t)v10);
      }
      while (v10 != v12);
      std::string::size_type v10 = v12;
    }
  }
  if (v10) {
    operator delete(v10);
  }
  return v14 + 336;
}

void sub_678604(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_678618((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_678618(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 336;
    sub_576848(i - 336);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void *sub_67866C(void *a1, uint64_t a2, unint64_t a3)
{
  a1[2] = 0;
  uint64_t v4 = (uint64_t)(a1 + 2);
  *a1 = 0;
  a1[1] = 0;
  if (a3)
  {
    if (a3 >= 0x276276276276277) {
      sub_2E00();
    }
    std::string::size_type v7 = (char *)operator new(104 * a3);
    uint64_t v8 = 0;
    *a1 = v7;
    a1[1] = v7;
    uint64_t v9 = 104 * a3;
    a1[2] = &v7[v9];
    do
    {
      sub_63D394(v4, (uint64_t)&v7[v8], a2 + v8);
      v8 += 104;
    }
    while (v9 != v8);
    a1[1] = &v7[v8];
  }
  return a1;
}

void sub_678728(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *v1;
  if (*v1)
  {
    uint64_t v4 = v1[1];
    std::string::size_type v5 = *v1;
    if (v4 != v3)
    {
      do
        uint64_t v4 = sub_4F31D0(v4 - 13);
      while (v4 != v3);
      std::string::size_type v5 = *v1;
    }
    v1[1] = v3;
    operator delete(v5);
  }
  _Unwind_Resume(exception_object);
}

void sub_678790()
{
  byte_259C607 = 1;
  word_259C5F0 = 65;
  byte_259C61F = 1;
  word_259C608 = 65;
  qword_259C628 = 0;
  qword_259C630 = 0;
  qword_259C620 = 0;
  uint64_t v0 = operator new(9uLL);
  *(void *)uint64_t v0 = 0x4020C000103050DLL;
  v0[8] = 6;
  qword_259C620 = (uint64_t)v0;
  qword_259C628 = (uint64_t)(v0 + 9);
  qword_259C630 = (uint64_t)(v0 + 9);
  qword_259C638 = 0;
  qword_259C640 = 0;
  qword_259C648 = 0;
  int v1 = operator new(9uLL);
  *(void *)int v1 = 0x604020C00010305;
  v1[8] = 13;
  qword_259C638 = (uint64_t)v1;
  qword_259C640 = (uint64_t)(v1 + 9);
  strcpy(&byte_259C667, "\n\x1B\\toi=orth\\"");
  qword_259C648 = (uint64_t)(v1 + 9);
  strcpy(byte_259C650, "\x1B\\toi=lhp\\"");
  byte_259C67F = 11;
  qword_259C680 = (uint64_t)operator new(0x19uLL);
  long long v281 = xmmword_20B9250;
  unk_259C688 = xmmword_20B9250;
  strcpy((char *)qword_259C680, "\x1B\\toi=x-sampa-internal\\"");
  byte_259C6AF = 13;
  strcpy((char *)&qword_259C698, "\x1B\\tn=address\\"");
  strcpy(&byte_259C6C7, "\t\x1B\\tn=normal\\"");
  strcpy((char *)&qword_259C6B0, "\x1B\\tn=nav\\"");
  byte_259C6DF = 12;
  byte_259C6F7 = 7;
  strcpy((char *)&dword_259C6E0, "\x1B\\lang=");
  byte_259C70F = 1;
  word_259C6F8 = 92;
  byte_259C727 = 4;
  strcpy((char *)&qword_259C710, "DEV:");
  byte_259C73F = 8;
  strcpy((char *)&qword_259C728, "Continue");
  byte_259C757 = 11;
  strcpy((char *)&qword_259C740, "Start_Route");
  byte_259C76F = 14;
  strcpy((char *)&qword_259C758, "Continue_Route");
  byte_259C787 = 12;
  strcpy((char *)&qword_259C770, "Resume_Route");
  byte_259C79F = 18;
  strcpy((char *)&xmmword_259C788, "Start_Route_U_Turn");
  byte_259C7B7 = 7;
  strcpy((char *)&dword_259C7A0, "_U_Turn");
  qword_259C7C8 = 0x1300000000000000;
  qmemcpy(&unk_259C7D0, "Continue_Route", 14);
  dword_259C7C0 = 1702131055;
  qword_259C7B8 = *(void *)"Resume_Route";
  *(int *)((char *)&dword_259C7C4 + 3) = 1852994900;
  dword_259C7C4 = 1415533919;
  qword_259C7E0 = 0x1500000000000000;
  strcpy(byte_259C7E8, "Left_Turn");
  unk_259C7DE = 1415533919;
  *(_DWORD *)((char *)&qword_259C7E0 + 1) = 1852994900;
  strcpy(&byte_259C7FF, "\tRight_Turn");
  strcpy(&byte_259C817, "\nLeft_Turn_At_End");
  byte_259C82F = 16;
  byte_259C847 = 17;
  strcpy((char *)&xmmword_259C830, "Right_Turn_At_End");
  byte_259C85F = 15;
  strcpy((char *)&qword_259C848, "Sharp_Left_Turn");
  byte_259C877 = 16;
  strcpy((char *)&xmmword_259C860, "Sharp_Right_Turn");
  byte_259C88F = 16;
  strcpy((char *)&xmmword_259C878, "Slight_Left_Turn");
  byte_259C8A7 = 17;
  strcpy((char *)&xmmword_259C890, "Slight_Right_Turn");
  strcpy(&byte_259C8BF, "\tKeep_Right");
  strcpy((char *)&qword_259C8A8, "Keep_Left");
  strcpy(&byte_259C8D7, "\nU_Turn");
  byte_259C8EF = 6;
  byte_259C907 = 14;
  strcpy((char *)&qword_259C8F0, "Walking_U_Turn");
  byte_259C91F = 20;
  strcpy((char *)&xmmword_259C908, "U_Turn_When_Possible");
  byte_259C937 = 20;
  strcpy((char *)&xmmword_259C920, "U_Turn_At_Roundabout");
  byte_259C94F = 11;
  strcpy((char *)&qword_259C938, "Enter_Ferry");
  strcpy(&byte_259C967, "\nChange_Ferry");
  strcpy((char *)&qword_259C950, "Exit_Ferry");
  strcpy((char *)&xmmword_259C980, "Enter_Railway_Shuttle");
  strcpy((char *)&xmmword_259C998, "Exit_Railway_Shuttle");
  strcpy((char *)&xmmword_259C9B0, "Change_Railway_Shuttle");
  strcpy((char *)&xmmword_259C9C8, "End_Of_Navigation");
  strcpy((char *)&xmmword_259C9E0, "End_Of_Navigation");
  strcpy((char *)&qword_259C9F8, "Destination");
  strcpy((char *)&xmmword_259CA10, "Destination_On_left");
  strcpy((char *)&xmmword_259CA28, "Destination_On_Right");
  strcpy((char *)&xmmword_259CA70, "First_Stop_On_Right");
  strcpy((char *)&xmmword_259CAB8, "Next_Stop_On_Right");
  byte_259C97F = 12;
  byte_259C997 = 21;
  byte_259C9AF = 20;
  strcpy((char *)&xmmword_259CAE8, "Waypoint_Stop_On_Left");
  byte_259C9C7 = 22;
  byte_259C9DF = 17;
  byte_259C9F7 = 17;
  byte_259CA0F = 11;
  byte_259CA27 = 19;
  byte_259CA3F = 20;
  strcpy(&byte_259CA57, "\nFirst_Stop_On_left");
  *(void *)&v269[0] = *(void *)"First_Stop";
  strcpy((char *)&qword_259CA40, "First_Stop");
  byte_259CA6F = 18;
  byte_259CA87 = 19;
  strcpy(&byte_259CA9F, "\tNext_Stop_On_left");
  strcpy((char *)&qword_259CAD0, "Waypoint_Stop");
  strcpy((char *)&xmmword_259CB00, "Waypoint_Stop_On_Right");
  strcpy((char *)&qword_259CB18, "Roundabout_");
  *(void *)&v265[48] = *(void *)"Next_Stop";
  strcpy((char *)&qword_259CA88, "Next_Stop");
  byte_259CAB7 = 17;
  byte_259CACF = 18;
  byte_259CAE7 = 13;
  byte_259CAFF = 21;
  byte_259CB17 = 22;
  byte_259CB2F = 11;
  byte_259CB47 = 16;
  strcpy((char *)&xmmword_259CB30, "Enter_Roundabout");
  qword_259CB48 = (uint64_t)operator new(0x20uLL);
  long long v280 = xmmword_20B91C0;
  xmmword_259CB50 = xmmword_20B91C0;
  strcpy((char *)qword_259CB48, "Walking_Enter_Roundabout");
  byte_259CB77 = 16;
  strcpy((char *)&xmmword_259CB60, "Leave_Roundabout");
  byte_259CB8F = 21;
  strcpy((char *)&xmmword_259CB78, "Roundabout_First_Exit");
  byte_259CBA7 = 22;
  strcpy((char *)&xmmword_259CB90, "Roundabout_Second_Exit");
  byte_259CBBF = 21;
  strcpy((char *)&xmmword_259CBA8, "Roundabout_Third_Exit");
  strcpy((char *)&xmmword_259CBC0, "Roundabout_Fourth_Exit");
  HIBYTE(word_259CBD6) = 22;
  byte_259CBEF = 21;
  strcpy((char *)&xmmword_259CBD8, "Roundabout_Fifth_Exit");
  byte_259CC07 = 21;
  strcpy((char *)&xmmword_259CBF0, "Roundabout_Sixth_Exit");
  qword_259CC08 = (uint64_t)operator new(0x19uLL);
  xmmword_259CC10 = xmmword_20B9250;
  strcpy((char *)qword_259CC08, "Roundabout_Seventh_Exit");
  strcpy((char *)&xmmword_259CC20, "Roundabout_Eighth_Exit");
  HIBYTE(word_259CC36) = 22;
  byte_259CC4F = 21;
  strcpy((char *)&xmmword_259CC38, "Roundabout_Ninth_Exit");
  byte_259CC67 = 21;
  strcpy((char *)&xmmword_259CC50, "Roundabout_Tenth_Exit");
  qword_259CC68 = (uint64_t)operator new(0x20uLL);
  xmmword_259CC70 = xmmword_20B91C0;
  strcpy((char *)qword_259CC68, "Roundabout_Eleventh_Exit");
  qword_259CC80 = (uint64_t)operator new(0x19uLL);
  unk_259CC88 = xmmword_20B9250;
  strcpy((char *)qword_259CC80, "Roundabout_Twelfth_Exit");
  qword_259CC98 = (uint64_t)operator new(0x20uLL);
  long long v277 = xmmword_20B5EB0;
  xmmword_259CCA0 = xmmword_20B5EB0;
  strcpy((char *)qword_259CC98, "Roundabout_Thirteenth_Exit");
  qword_259CCB0 = (uint64_t)operator new(0x20uLL);
  unk_259CCB8 = xmmword_20B5EB0;
  strcpy((char *)qword_259CCB0, "Roundabout_Fourteenth_Exit");
  qword_259CCC8 = (uint64_t)operator new(0x20uLL);
  long long v279 = xmmword_20B8870;
  xmmword_259CCD0 = xmmword_20B8870;
  strcpy((char *)qword_259CCC8, "Roundabout_Fifteenth_Exit");
  qword_259CCE0 = (uint64_t)operator new(0x20uLL);
  unk_259CCE8 = xmmword_20B8870;
  strcpy((char *)qword_259CCE0, "Roundabout_Sixteenth_Exit");
  qword_259CCF8 = (uint64_t)operator new(0x20uLL);
  long long v274 = xmmword_20B91A0;
  xmmword_259CD00 = xmmword_20B91A0;
  strcpy((char *)qword_259CCF8, "Roundabout_Seventeenth_Exit");
  qword_259CD10 = (uint64_t)operator new(0x20uLL);
  unk_259CD18 = xmmword_20B5EB0;
  strcpy((char *)qword_259CD10, "Roundabout_Eighteenth_Exit");
  qword_259CD28 = (uint64_t)operator new(0x20uLL);
  xmmword_259CD30 = xmmword_20B5EB0;
  strcpy((char *)qword_259CD28, "Roundabout_Nineteenth_Exit");
  byte_259CD57 = 8;
  strcpy((char *)&qword_259CD40, "Off_Ramp");
  byte_259CD6F = 16;
  strcpy((char *)&xmmword_259CD58, "Off_Ramp_On_Left");
  byte_259CD87 = 17;
  strcpy((char *)&xmmword_259CD70, "Off_Ramp_On_Right");
  byte_259CD9F = 14;
  strcpy((char *)&qword_259CD88, "Change_Highway");
  strcpy((char *)&xmmword_259CDA0, "Change_Highway_On_Left");
  HIBYTE(word_259CDB6) = 22;
  qword_259CDB8 = (uint64_t)operator new(0x19uLL);
  xmmword_259CDC0 = xmmword_20B9250;
  strcpy((char *)qword_259CDB8, "Change_Highway_On_Right");
  byte_259CDE7 = 5;
  dword_259CDD0 = 1735550285;
  byte_259CDD4 = 101;
  byte_259CDD5 = 0;
  byte_259CDFF = 12;
  strcpy((char *)&qword_259CDE8, "Enter_Detour");
  byte_259CE17 = 11;
  strcpy((char *)&qword_259CE00, "Exit_Detour");
  byte_259CE2F = 18;
  strcpy((char *)&xmmword_259CE18, "Walking_Turnaround");
  qword_259CE30 = (uint64_t)operator new(0x19uLL);
  unk_259CE38 = xmmword_20B9250;
  strcpy((char *)qword_259CE30, "Walking_Turnaround_Sign");
  byte_259CE5F = 19;
  strcpy((char *)&xmmword_259CE48, "Distance_Title_List");
  qword_259CE60 = (uint64_t)operator new(0x19uLL);
  unk_259CE68 = xmmword_20B9250;
  long long v271 = *(_OWORD *)"Cross_The_Street_Spoken";
  strcpy((char *)qword_259CE60, "Cross_The_Street_Spoken");
  *(void *)&v269[1] = *(void *)"t_Spoken";
  byte_259CE8F = 19;
  strcpy((char *)&xmmword_259CE78, "Arrival_Charge_List");
  byte_259CEA7 = 15;
  strcpy((char *)&qword_259CE90, "Charge_At_Start");
  strcpy(&byte_259CEBF, "\tPass_Street");
  strcpy((char *)&qword_259CEA8, "Pass_Exit");
  byte_259CED7 = 11;
  byte_259CEEF = 17;
  strcpy((char *)&xmmword_259CED8, "Pass_Intersection");
  strcpy(&byte_259CF07, "\t_PrevExitNumber");
  strcpy((char *)&qword_259CEF0, "Next_Exit");
  byte_259CF1F = 15;
  strcpy(&byte_259CF37, "\t_PrevUTurn");
  strcpy((char *)&qword_259CF20, "_PrevRoad");
  strcpy(&byte_259CF4F, "\nNext_");
  byte_259CF67 = 5;
  byte_259CF7F = 15;
  strcpy((char *)&qword_259CF68, "_At_Next_Street");
  byte_259CF97 = 21;
  strcpy((char *)&xmmword_259CF80, "_At_Next_Intersection");
  byte_259CFAF = 14;
  strcpy((char *)&qword_259CF98, "Charge_Station");
  byte_259CFC7 = 15;
  strcpy((char *)&qword_259CFB0, "_Charge_Station");
  BYTE1(qword_259CFD8) = 0;
  WORD1(qword_259CFD8) = 25856;
  HIDWORD(qword_259CFD8) = 335544320;
  strcpy((char *)&qword_259CFC8, "_Charge_Station_");
  byte_259CFF7 = 8;
  strcpy((char *)&qword_259CFE0, "_Minimum");
  byte_259D00F = 15;
  strcpy((char *)&qword_259CFF8, "ExitShield_Sign");
  byte_259D027 = 8;
  strcpy((char *)&qword_259D010, "Walking_");
  byte_259D03F = 16;
  strcpy((char *)&xmmword_259D028, "Walking_Continue");
  byte_259D057 = 19;
  strcpy((char *)&xmmword_259D040, "Walking_Start_Route");
  qword_259D058 = (uint64_t)operator new(0x20uLL);
  xmmword_259D060 = xmmword_20B5EB0;
  strcpy((char *)qword_259D058, "Walking_Start_Route_U_Turn");
  byte_259D087 = 17;
  strcpy((char *)&xmmword_259D070, "Walking_Left_Turn");
  byte_259D09F = 18;
  strcpy((char *)&xmmword_259D088, "Walking_Right_Turn");
  qword_259D0A0 = (uint64_t)operator new(0x20uLL);
  unk_259D0A8 = xmmword_20B5EB0;
  strcpy((char *)qword_259D0A0, "Walking_Turn_At_Roundabout");
  qword_259D0B8 = (uint64_t)operator new(0x20uLL);
  long long v278 = xmmword_20B91B0;
  xmmword_259D0C0 = xmmword_20B91B0;
  strcpy((char *)qword_259D0B8, "Walking_U_Turn_When_Possible");
  qword_259D0D0 = (uint64_t)operator new(0x28uLL);
  long long v270 = xmmword_20B9390;
  unk_259D0D8 = xmmword_20B9390;
  strcpy((char *)qword_259D0D0, "Walking_Roundabout_Exit_Continue");
  qword_259D0E8 = (uint64_t)operator new(0x20uLL);
  xmmword_259D0F0 = xmmword_20B91B0;
  strcpy((char *)qword_259D0E8, "Walking_Roundabout_Exit_Left");
  qword_259D100 = (uint64_t)operator new(0x20uLL);
  long long v276 = xmmword_20B8890;
  unk_259D108 = xmmword_20B8890;
  strcpy((char *)qword_259D100, "Walking_Roundabout_Exit_Right");
  qword_259D118 = (uint64_t)operator new(0x20uLL);
  xmmword_259D120 = xmmword_20B8870;
  strcpy((char *)qword_259D118, "Walking_End_Of_Navigation");
  long long v273 = *(_OWORD *)"nd_Of_Navigation";
  uint64_t v2 = (char *)operator new(0x20uLL);
  qword_259D130 = (uint64_t)v2;
  unk_259D138 = xmmword_20B8870;
  *(_OWORD *)uint64_t v2 = *(_OWORD *)"Walking_End_Of_Navigation";
  *(_OWORD *)(v2 + 9) = v273;
  v2[25] = 0;
  byte_259D15F = 8;
  strcpy((char *)&qword_259D148, "Walking_");
  qword_259D160 = (uint64_t)operator new(0x19uLL);
  unk_259D168 = v281;
  strcpy((char *)qword_259D160, "Walking_Sharp_Left_Turn");
  qword_259D178 = (uint64_t)operator new(0x20uLL);
  xmmword_259D180 = v280;
  strcpy((char *)qword_259D178, "Walking_Sharp_Right_Turn");
  qword_259D190 = (uint64_t)operator new(0x20uLL);
  unk_259D198 = v280;
  strcpy((char *)qword_259D190, "Walking_Slight_Left_Turn");
  qword_259D1A8 = (uint64_t)operator new(0x20uLL);
  xmmword_259D1B0 = v279;
  strcpy((char *)qword_259D1A8, "Walking_Slight_Right_Turn");
  byte_259D1D7 = 4;
  strcpy((char *)&dword_259D1C0, "Exit");
  byte_259D1EF = 4;
  strcpy((char *)&dword_259D1D8, "Road");
  byte_259D207 = 7;
  strcpy((char *)&dword_259D1F0, "Freeway");
  byte_259D21F = 12;
  strcpy((char *)&qword_259D208, "Intersection");
  byte_259D237 = 5;
  strcpy((char *)&dword_259D220, "Ferry");
  byte_259D24F = 11;
  strcpy((char *)&qword_259D238, "ShuttleName");
  byte_259D267 = 5;
  strcpy((char *)&dword_259D250, "Road1");
  strcpy(&byte_259D27F, "\tName");
  strcpy((char *)&qword_259D268, "Signpost1");
  byte_259D297 = 4;
  byte_259D2AF = 7;
  strcpy((char *)&dword_259D298, "Address");
  byte_259D2C7 = 7;
  strcpy((char *)&dword_259D2B0, "Shield1");
  byte_259D2DF = 13;
  strcpy((char *)&qword_259D2C8, "TowardShield1");
  byte_259D2F7 = 6;
  strcpy((char *)&dword_259D2E0, "Right_");
  byte_259D30F = 5;
  byte_259D2FC = 95;
  dword_259D2F8 = 1952867660;
  byte_259D2FD = 0;
  strcpy(&byte_259D327, "\tOn_Left_");
  strcpy((char *)&qword_259D310, "On_Right_");
  byte_259D33F = 8;
  byte_259D357 = 12;
  strcpy((char *)&qword_259D340, "ElevatorName");
  byte_259D36F = 13;
  strcpy((char *)&qword_259D358, "EscalatorName");
  strcpy(&byte_259D387, "\nBridgeName");
  strcpy((char *)&qword_259D370, "StairsName");
  strcpy(&byte_259D39F, "\nTunnelName");
  strcpy(&byte_259D3B7, "\nParking");
  byte_259D3CF = 7;
  strcpy(&byte_259D3E7, "\t_Escalator");
  strcpy((char *)&qword_259D3D0, "_Elevator");
  strcpy(&byte_259D3FF, "\n_ElevatorName");
  byte_259D417 = 13;
  byte_259D42F = 14;
  strcpy((char *)&qword_259D418, "_EscalatorName");
  byte_259D447 = 5;
  strcpy((char *)&qword_259D430, "_Road");
  byte_259D45F = 8;
  strcpy((char *)&qword_259D448, "_Freeway");
  byte_259D477 = 13;
  strcpy((char *)&qword_259D460, "_Intersection");
  byte_259D48F = 6;
  strcpy((char *)&dword_259D478, "_Road1");
  byte_259D4A7 = 6;
  strcpy((char *)&dword_259D490, "_Road2");
  strcpy(&byte_259D4BF, "\n_Signpost2");
  strcpy((char *)&qword_259D4A8, "_Signpost1");
  strcpy(&byte_259D4D7, "\n_Ferry");
  byte_259D4EF = 6;
  byte_259D507 = 12;
  strcpy((char *)&qword_259D4F0, "_Ferry_Ferry");
  byte_259D51F = 12;
  strcpy((char *)&qword_259D508, "_ShuttleName");
  qword_259D520 = (uint64_t)operator new(0x20uLL);
  unk_259D528 = v278;
  strcpy((char *)qword_259D520, "_Railway_Shuttle_ShuttleName");
  byte_259D54F = 11;
  strcpy((char *)&qword_259D538, "_ExitNumber");
  byte_259D567 = 5;
  dword_259D550 = 1769489759;
  byte_259D554 = 116;
  byte_259D555 = 0;
  byte_259D57F = 7;
  strcpy((char *)&dword_259D568, "_StayOn");
  byte_259D597 = 7;
  strcpy((char *)&dword_259D580, "_Stairs");
  byte_259D5AF = 5;
  strcpy((char *)&dword_259D598, "_Ramp");
  byte_259D5C7 = 11;
  strcpy((char *)&qword_259D5B0, "_StairsName");
  strcpy(&byte_259D5DF, "\t_Down");
  strcpy((char *)&qword_259D5C8, "_RampName");
  byte_259D5F7 = 5;
  byte_259D60F = 3;
  dword_259D5F8 = 7361887;
  byte_259D627 = 7;
  strcpy((char *)&dword_259D610, "_Bridge");
  byte_259D63F = 7;
  strcpy((char *)&dword_259D628, "_Tunnel");
  byte_259D657 = 11;
  strcpy((char *)&qword_259D640, "_Roundabout");
  byte_259D66F = 6;
  strcpy((char *)&dword_259D658, "_Cross");
  byte_259D687 = 8;
  strcpy((char *)&qword_259D670, "_Parking");
  byte_259D69F = 8;
  strcpy((char *)&qword_259D688, "_Shield1");
  byte_259D6B7 = 14;
  strcpy((char *)&qword_259D6A0, "_TowardShield1");
  byte_259D6CF = 8;
  strcpy((char *)&qword_259D6B8, "_Shield2");
  byte_259D6E7 = 14;
  strcpy((char *)&qword_259D6D0, "_TowardShield2");
  byte_259D6FF = 11;
  strcpy((char *)&qword_259D6E8, "_Direction1");
  byte_259D717 = 11;
  strcpy((char *)&qword_259D700, "_Direction2");
  strcpy(&byte_259D72F, "\n_TowardDirection1");
  strcpy((char *)&qword_259D718, "Direction1");
  byte_259D747 = 17;
  byte_259D75F = 17;
  strcpy((char *)&xmmword_259D748, "_TowardDirection2");
  byte_259D777 = 16;
  strcpy((char *)&xmmword_259D760, "TowardDirection1");
  byte_259D78F = 7;
  strcpy((char *)&qword_259D778, "_Spoken");
  byte_259D7A7 = 5;
  strcpy((char *)&qword_259D790, "_Sign");
  byte_259D7BF = 15;
  strcpy((char *)&qword_259D7A8, "_Secondary_Sign");
  byte_259D7D7 = 5;
  byte_259D7C4 = 116;
  dword_259D7C0 = 1936280671;
  byte_259D7C5 = 0;
  byte_259D7EF = 8;
  strcpy((char *)&qword_259D7D8, "_Primary");
  unk_259D800 = 0xF00000000000000;
  strcpy((char *)&qword_259D7F0, "_Spoken_Primary");
  strcpy(&byte_259D81F, "\n_Secondary");
  strcpy((char *)&qword_259D808, "_Secondary");
  strcpy(&byte_259D837, "\n_Spoken_Secondar");
  unk_259D849 = 0;
  unk_259D84A = 0;
  unk_259D84C = 285212672;
  byte_259D867 = 13;
  strcpy((char *)&qword_259D850, "_To_Secondary");
  BYTE1(qword_259D878) = 0;
  WORD1(qword_259D878) = 0;
  HIDWORD(qword_259D878) = 335544320;
  strcpy((char *)&dword_259D868, "_Spoken_To_Secon");
  strcpy(&byte_259D897, "\t_ValidDistance");
  strcpy((char *)&qword_259D880, "_Distance");
  byte_259D8AF = 14;
  byte_259D8C7 = 6;
  strcpy((char *)&dword_259D8B0, "_Short");
  byte_259D8DF = 1;
  word_259D8C8 = 95;
  qword_259D8E0 = (uint64_t)operator new(0x20uLL);
  unk_259D8E8 = v280;
  strcpy((char *)qword_259D8E0, "Concatenate_Newline_Sign");
  uint64_t v3 = (char *)operator new(0x19uLL);
  qword_259D8F8 = (uint64_t)v3;
  xmmword_259D900 = v281;
  *(_OWORD *)uint64_t v3 = v271;
  uint64_t v4 = *(void *)&v269[1];
  *(void *)(v3 + 15) = *(void *)&v269[1];
  v3[23] = 0;
  byte_259D927 = 12;
  strcpy((char *)&qword_259D910, "Chain_Spoken");
  byte_259D93F = 15;
  strcpy((char *)&qword_259D928, "Chain_To_Spoken");
  strcpy(&byte_259D957, "\nThen_Spoken");
  strcpy((char *)&qword_259D940, "And_Spoken");
  byte_259D96F = 11;
  byte_259D987 = 18;
  strcpy((char *)&xmmword_259D970, "Concatenate_Spoken");
  qword_259D988 = (uint64_t)operator new(0x28uLL);
  long long v268 = xmmword_20B9240;
  xmmword_259D990 = xmmword_20B9240;
  strcpy((char *)qword_259D988, "At_Traffic_Light_Chain_Spoken_Primary");
  qword_259D9A0 = (uint64_t)operator new(0x28uLL);
  v269[2] = xmmword_20B9260;
  unk_259D9A8 = xmmword_20B9260;
  strcpy((char *)qword_259D9A0, "At_Stop_Sign_Chain_Spoken_Primary");
  qword_259D9B8 = (uint64_t)operator new(0x40uLL);
  xmmword_259D9C0 = xmmword_20B9A90;
  strcpy((char *)qword_259D9B8, "At_Stop_Sign_Cross_Traffic_Doesnt_Stop_Chain_Spoken_Primary");
  qword_259D9D0 = (uint64_t)operator new(0x30uLL);
  long long v267 = xmmword_20B9A40;
  unk_259D9D8 = xmmword_20B9A40;
  strcpy((char *)qword_259D9D0, "At_Next_Traffic_Light_Chain_Spoken_Primary");
  qword_259D9E8 = (uint64_t)operator new(0x28uLL);
  long long v266 = xmmword_20E12D0;
  xmmword_259D9F0 = xmmword_20E12D0;
  strcpy((char *)qword_259D9E8, "At_Next_Stop_Sign_Chain_Spoken_Primary");
  qword_259DA00 = (uint64_t)operator new(0x28uLL);
  long long v275 = xmmword_20B9960;
  unk_259DA08 = xmmword_20B9960;
  strcpy((char *)qword_259DA00, "At_Traffic_Light_Chain_Spoken_Secondary");
  qword_259DA18 = (uint64_t)operator new(0x28uLL);
  xmmword_259DA20 = xmmword_20B93A0;
  strcpy((char *)qword_259DA18, "At_Stop_Sign_Chain_Spoken_Secondary");
  qword_259DA30 = (uint64_t)operator new(0x30uLL);
  long long v273 = xmmword_20E1380;
  unk_259DA38 = xmmword_20E1380;
  strcpy((char *)qword_259DA30, "At_Next_Traffic_Light_Chain_Spoken_Secondary");
  qword_259DA48 = (uint64_t)operator new(0x30uLL);
  xmmword_259DA50 = xmmword_20B93C0;
  strcpy((char *)qword_259DA48, "At_Next_Stop_Sign_Chain_Spoken_Secondary");
  qword_259DA60 = (uint64_t)operator new(0x38uLL);
  unk_259DA68 = xmmword_20B9A60;
  strcpy((char *)qword_259DA60, "At_Next_One_Traffic_Light_Chain_Spoken_Secondary");
  qword_259DA78 = (uint64_t)operator new(0x30uLL);
  xmmword_259DA80 = xmmword_20E1380;
  strcpy((char *)qword_259DA78, "At_Next_One_Stop_Sign_Chain_Spoken_Secondary");
  qword_259DA90 = (uint64_t)operator new(0x28uLL);
  unk_259DA98 = xmmword_20B9960;
  strcpy((char *)qword_259DA90, "At_Mini_Roundabout_Chain_Spoken_Primary");
  qword_259DAA8 = (uint64_t)operator new(0x30uLL);
  long long v272 = xmmword_20B93D0;
  xmmword_259DAB0 = xmmword_20B93D0;
  strcpy((char *)qword_259DAA8, "At_Mini_Roundabout_Chain_Spoken_Secondary");
  qword_259DAC0 = (uint64_t)operator new(0x20uLL);
  unk_259DAC8 = v276;
  strcpy((char *)qword_259DAC0, "Walking_Distance_Chain_Spoken");
  qword_259DAD8 = (uint64_t)operator new(0x20uLL);
  xmmword_259DAE0 = v276;
  strcpy((char *)qword_259DAD8, "Walking_Continue_Chain_Spoken");
  std::string::size_type v5 = (char *)operator new(0x19uLL);
  qword_259DAF0 = (uint64_t)v5;
  unk_259DAF8 = v281;
  *(_OWORD *)std::string::size_type v5 = v271;
  *(void *)(v5 + 15) = v4;
  v5[23] = 0;
  qword_259DB08 = (uint64_t)operator new(0x28uLL);
  xmmword_259DB10 = v270;
  strcpy((char *)qword_259DB08, "Distance_Cross_The_Street_Spoken");
  byte_259DB37 = 22;
  strcpy((char *)&xmmword_259DB20, "Walking_Continue_Cross");
  byte_259DB4F = 14;
  strcpy((char *)&qword_259DB38, "Continue_Cross");
  byte_259DB67 = 5;
  strcpy((char *)&dword_259DB50, "Cross");
  byte_259DB7F = 19;
  strcpy((char *)&xmmword_259DB68, "Cross_Street_Spoken");
  byte_259DB97 = 17;
  strcpy((char *)&xmmword_259DB80, "Cross_Road_Spoken");
  byte_259DBAF = 20;
  strcpy((char *)&xmmword_259DB98, "Use_Crosswalk_Spoken");
  byte_259DBC7 = 15;
  strcpy((char *)&qword_259DBB0, "Distance_Spoken");
  byte_259DBDF = 19;
  strcpy((char *)&xmmword_259DBC8, "Distance_And_Spoken");
  byte_259DBF7 = 21;
  strcpy((char *)&xmmword_259DBE0, "Continue_Stage_Spoken");
  byte_259DC0F = 13;
  qmemcpy(&qword_259DBF8, "ContinueStage", 13);
  int v6 = byte_259D807;
  if (byte_259D807 >= 0) {
    size_t v7 = byte_259D807;
  }
  else {
    size_t v7 = qword_259D7F8;
  }
  unint64_t v8 = v7 + 13;
  byte_259DC05 = 0;
  if (v7 + 13 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v8 >= 0x17)
  {
    uint64_t v10 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17) {
      uint64_t v10 = v8 | 7;
    }
    uint64_t v11 = v10 + 1;
    uint64_t v12 = operator new(v10 + 1);
    qword_259DC18 = v7 + 13;
    unk_259DC20 = v11 | 0x8000000000000000;
    qword_259DC10 = (uint64_t)v12;
    *uint64_t v12 = *(void *)"ContinueStage";
    uint64_t v9 = (char *)v12 + 13;
    *(void *)((char *)v12 + 5) = *(void *)"nueStage";
  }
  else
  {
    BYTE1(qword_259DC18) = 0;
    WORD1(qword_259DC18) = 0;
    HIDWORD(qword_259DC18) = 0;
    unk_259DC20 = 0;
    byte_259DC27 = v7 + 13;
    uint64_t v9 = (char *)&qword_259DC18 + 5;
    strcpy((char *)&qword_259DC10, "Continue");
    if (!v7) {
      goto LABEL_15;
    }
  }
  if (v6 >= 0) {
    uint64_t v13 = &qword_259D7F0;
  }
  else {
    uint64_t v13 = (uint64_t *)qword_259D7F0;
  }
  memmove(v9, v13, v7);
LABEL_15:
  v9[v7] = 0;
  int v14 = byte_259D447;
  if (byte_259D447 >= 0) {
    size_t v15 = byte_259D447;
  }
  else {
    size_t v15 = qword_259D438;
  }
  unint64_t v16 = v15 + 13;
  if (v15 + 13 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v16 >= 0x17)
  {
    uint64_t v18 = (v16 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v16 | 7) != 0x17) {
      uint64_t v18 = v16 | 7;
    }
    uint64_t v19 = v18 + 1;
    std::string::size_type v20 = operator new(v18 + 1);
    __dst.__r_.__value_.__l.__size_ = v15 + 13;
    __dst.__r_.__value_.__r.__words[2] = v19 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v20;
    *std::string::size_type v20 = qword_259DBF8;
    *(void *)((char *)v20 + 5) = *(uint64_t *)((char *)&qword_259DBF8 + 5);
    std::string v17 = (char *)v20 + 13;
  }
  else
  {
    *(_OWORD *)&__dst.__r_.__value_.__r.__words[1] = 0uLL;
    *(std::string::size_type *)((char *)__dst.__r_.__value_.__r.__words + 5) = *(uint64_t *)((char *)&qword_259DBF8 + 5);
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v15 + 13;
    __dst.__r_.__value_.__r.__words[0] = qword_259DBF8;
    std::string v17 = &__dst.__r_.__value_.__s.__data_[13];
    if (!v15) {
      goto LABEL_29;
    }
  }
  if (v14 >= 0) {
    BOOL v21 = &qword_259D430;
  }
  else {
    BOOL v21 = (uint64_t *)qword_259D430;
  }
  memmove(v17, v21, v15);
LABEL_29:
  v17[v15] = 0;
  if (v6 >= 0) {
    int v22 = (const std::string::value_type *)&qword_259D7F0;
  }
  else {
    int v22 = (const std::string::value_type *)qword_259D7F0;
  }
  int v23 = std::string::append(&__dst, v22, v7);
  long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  qword_259DC38 = v23->__r_.__value_.__r.__words[2];
  xmmword_259DC28 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  byte_259DC57 = 5;
  strcpy((char *)&dword_259DC40, "Merge");
  qword_259DC58 = (uint64_t)operator new(0x20uLL);
  v269[1] = xmmword_20B8E90;
  unk_259DC60 = xmmword_20B8E90;
  strcpy((char *)qword_259DC58, "Continue_Freeway_Spoken_Primary");
  byte_259DC87 = 8;
  strcpy((char *)&qword_259DC70, "Starting");
  byte_259DC9F = 14;
  strcpy((char *)&qword_259DC88, "Starting_Route");
  byte_259DCB7 = 14;
  strcpy((char *)&qword_259DCA0, "Resuming_Route");
  byte_259DCCF = 16;
  strcpy((char *)&xmmword_259DCB8, "Continuing_Route");
  byte_259DCE7 = 9;
  word_259DCD8 = 112;
  qword_259DCD0 = *(void *)&v265[48];
  strcpy(&byte_259DCFF, "\nEnding");
  strcpy((char *)&word_259DCF0, "op");
  qword_259DCE8 = *(void *)&v269[0];
  byte_259DD17 = 6;
  strcpy((char *)&qword_259DD18, "_Destination");
  byte_259DD2F = 12;
  byte_259DD47 = 15;
  strcpy((char *)&qword_259DD30, "_At_Destination");
  std::operator+<char>();
  qword_259DD60 = (uint64_t)operator new(0x20uLL);
  unk_259DD68 = v280;
  strcpy((char *)qword_259DD60, "Spoken_Ending_At_Parking");
  qword_259DD78 = (uint64_t)operator new(0x20uLL);
  v269[0] = xmmword_20B9800;
  xmmword_259DD80 = xmmword_20B9800;
  strcpy((char *)qword_259DD78, "Spoken_Pre_Arrival_Destination");
  strcpy((char *)&xmmword_259DD90, "Sign_Ending_At_Parking");
  HIBYTE(word_259DDA6) = 22;
  byte_259DDBF = 4;
  strcpy((char *)&dword_259DDA8, "Home");
  byte_259DDD7 = 4;
  strcpy((char *)&dword_259DDC0, "Work");
  byte_259DDEF = 8;
  strcpy((char *)&qword_259DDD8, "Business");
  byte_259DE07 = 4;
  strcpy((char *)&dword_259DDF0, "Name");
  byte_259DE1F = 13;
  strcpy((char *)&qword_259DE08, "Other_Contact");
  byte_259DE37 = 11;
  strcpy((char *)&qword_259DE20, "ContactHome");
  byte_259DE4F = 11;
  *(_DWORD *)((char *)&qword_259DE38 + 7) = 1802661719;
  byte_259DE67 = 7;
  *(int *)((char *)&dword_259DE50 + 3) = 1936942450;
  dword_259DE50 = 1919181889;
  strcpy((char *)&xmmword_259DE68, "Discoverability_Prompt");
  HIBYTE(word_259DE7E) = 22;
  byte_259DE97 = 6;
  dword_259DE80 = 1634878303;
  word_259DE84 = 26739;
  byte_259DEAF = 8;
  qword_259DE98 = 0x697269535F6F4E5FLL;
  byte_259DEC7 = 9;
  strcpy((char *)&qword_259DEB0, "_CityName");
  byte_259DEDF = 8;
  qword_259DEC8 = 0x636972656E65475FLL;
  int v25 = byte_259DC87;
  if (byte_259DC87 >= 0) {
    size_t v26 = byte_259DC87;
  }
  else {
    size_t v26 = qword_259DC78;
  }
  LODWORD(v271) = byte_259CFC7;
  if (byte_259CFC7 >= 0) {
    size_t v27 = byte_259CFC7;
  }
  else {
    size_t v27 = unk_259CFB8;
  }
  qword_259DE38 = *(void *)"ContactWork";
  byte_259DE43 = 0;
  byte_259DE57 = 0;
  byte_259DE86 = 0;
  byte_259DEA0 = 0;
  byte_259DED0 = 0;
  unint64_t v28 = v27 + v26;
  if (v27 + v26 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  *(void *)long long v265 = *(void *)"ContactWork";
  *(void *)&v265[16] = *(void *)"ContactHome";
  *(void *)&v265[32] = *(void *)"_Contact";
  *(void *)&v265[48] = *(void *)"Other_Contact";
  if (v28 <= 0x16)
  {
    uint64_t v29 = &qword_259DEE0;
    qword_259DEE8 = 0;
    unk_259DEF0 = 0;
    qword_259DEE0 = 0;
    byte_259DEF7 = v27 + v26;
    if (!v26) {
      goto LABEL_47;
    }
    goto LABEL_43;
  }
  uint64_t v92 = (v28 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v28 | 7) != 0x17) {
    uint64_t v92 = v28 | 7;
  }
  uint64_t v93 = v92 + 1;
  uint64_t v29 = (uint64_t *)operator new(v92 + 1);
  qword_259DEE8 = v27 + v26;
  unk_259DEF0 = v93 | 0x8000000000000000;
  qword_259DEE0 = (uint64_t)v29;
  if (v26)
  {
LABEL_43:
    if (v25 >= 0) {
      unsigned __int8 v30 = &qword_259DC70;
    }
    else {
      unsigned __int8 v30 = (uint64_t *)qword_259DC70;
    }
    memmove(v29, v30, v26);
  }
LABEL_47:
  uint64_t v31 = (char *)v29 + v26;
  if (v27)
  {
    if ((int)v271 >= 0) {
      unint64_t v32 = &qword_259CFB0;
    }
    else {
      unint64_t v32 = (uint64_t *)qword_259CFB0;
    }
    memmove(v31, v32, v27);
  }
  v31[v27] = 0;
  int v33 = byte_259DD2F;
  if (byte_259DD2F >= 0) {
    size_t v34 = byte_259DD2F;
  }
  else {
    size_t v34 = qword_259DD20;
  }
  unint64_t v35 = v34 + v26;
  if (v34 + v26 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v35 <= 0x16)
  {
    int64_t v36 = &qword_259DEF8;
    qword_259DF00 = 0;
    unk_259DF08 = 0;
    qword_259DEF8 = 0;
    byte_259DF0F = v34 + v26;
    if (!v26) {
      goto LABEL_62;
    }
    goto LABEL_58;
  }
  uint64_t v94 = (v35 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v35 | 7) != 0x17) {
    uint64_t v94 = v35 | 7;
  }
  uint64_t v95 = v94 + 1;
  int64_t v36 = (uint64_t *)operator new(v94 + 1);
  qword_259DF00 = v34 + v26;
  unk_259DF08 = v95 | 0x8000000000000000;
  qword_259DEF8 = (uint64_t)v36;
  if (v26)
  {
LABEL_58:
    if (v25 >= 0) {
      unsigned int v37 = &qword_259DC70;
    }
    else {
      unsigned int v37 = (uint64_t *)qword_259DC70;
    }
    memmove(v36, v37, v26);
  }
LABEL_62:
  uint64_t v38 = (char *)v36 + v26;
  if (v34)
  {
    if (v33 >= 0) {
      uint64_t v39 = &qword_259DD18;
    }
    else {
      uint64_t v39 = (uint64_t *)qword_259DD18;
    }
    memmove(v38, v39, v34);
  }
  v38[v34] = 0;
  qword_259DF10 = (uint64_t)operator new(0x19uLL);
  unk_259DF18 = v281;
  strcpy((char *)qword_259DF10, "{ChargeStationCityName}");
  if (v35 < 0x17)
  {
    uint64_t v40 = &qword_259DF28;
    qword_259DF30 = 0;
    unk_259DF38 = 0;
    qword_259DF28 = 0;
    byte_259DF3F = v34 + v26;
    if (!v26) {
      goto LABEL_73;
    }
    goto LABEL_69;
  }
  uint64_t v96 = (v35 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v35 | 7) != 0x17) {
    uint64_t v96 = v35 | 7;
  }
  uint64_t v97 = v96 + 1;
  uint64_t v40 = (uint64_t *)operator new(v96 + 1);
  qword_259DF30 = v34 + v26;
  unk_259DF38 = v97 | 0x8000000000000000;
  qword_259DF28 = (uint64_t)v40;
  if (v26)
  {
LABEL_69:
    if (v25 >= 0) {
      unint64_t v41 = &qword_259DC70;
    }
    else {
      unint64_t v41 = (uint64_t *)qword_259DC70;
    }
    memmove(v40, v41, v26);
  }
LABEL_73:
  uint64_t v42 = (char *)v40 + v26;
  if (v34)
  {
    if (v33 >= 0) {
      unint64_t v43 = &qword_259DD18;
    }
    else {
      unint64_t v43 = (uint64_t *)qword_259DD18;
    }
    memmove(v42, v43, v34);
  }
  v42[v34] = 0;
  strcpy((char *)&xmmword_259DF40, "{NewBatteryPercentage}");
  HIBYTE(word_259DF56) = 22;
  qword_259DF58 = (uint64_t)operator new(0x20uLL);
  xmmword_259DF60 = v274;
  strcpy((char *)qword_259DF58, "{OriginalBatteryPercentage}");
  byte_259DF87 = 19;
  strcpy((char *)&xmmword_259DF70, "_Arrival_Percentage");
  int v44 = byte_259DD17;
  if (byte_259DD17 >= 0) {
    size_t v45 = byte_259DD17;
  }
  else {
    size_t v45 = qword_259DD08;
  }
  unint64_t v46 = v45 + v27;
  if (v45 + v27 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v46 <= 0x16)
  {
    memset(&__dst, 0, sizeof(__dst));
    p_dst = (char *)&__dst;
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v45 + v27;
    if (!v45) {
      goto LABEL_88;
    }
    goto LABEL_84;
  }
  uint64_t v98 = (v46 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v46 | 7) != 0x17) {
    uint64_t v98 = v46 | 7;
  }
  uint64_t v99 = v98 + 1;
  p_dst = (char *)operator new(v98 + 1);
  __dst.__r_.__value_.__l.__size_ = v45 + v27;
  __dst.__r_.__value_.__r.__words[2] = v99 | 0x8000000000000000;
  __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
  if (v45)
  {
LABEL_84:
    if (v44 >= 0) {
      uint64_t v48 = &qword_259DD00;
    }
    else {
      uint64_t v48 = (uint64_t *)qword_259DD00;
    }
    memmove(p_dst, v48, v45);
  }
LABEL_88:
  uint64_t v49 = &p_dst[v45];
  if (v27)
  {
    if ((int)v271 >= 0) {
      uint64_t v50 = &qword_259CFB0;
    }
    else {
      uint64_t v50 = (uint64_t *)qword_259CFB0;
    }
    memmove(v49, v50, v27);
  }
  v49[v27] = 0;
  int v51 = std::string::append(&__dst, "_Percentage");
  long long v52 = *(_OWORD *)&v51->__r_.__value_.__l.__data_;
  qword_259DF98 = v51->__r_.__value_.__r.__words[2];
  xmmword_259DF88 = v52;
  v51->__r_.__value_.__l.__size_ = 0;
  v51->__r_.__value_.__r.__words[2] = 0;
  v51->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  int v53 = byte_259DD17;
  if (byte_259DD17 >= 0) {
    size_t v54 = byte_259DD17;
  }
  else {
    size_t v54 = qword_259DD08;
  }
  int v55 = byte_259CFC7;
  if (byte_259CFC7 >= 0) {
    size_t v56 = byte_259CFC7;
  }
  else {
    size_t v56 = unk_259CFB8;
  }
  unint64_t v57 = v56 + v54;
  if (v56 + v54 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v57 <= 0x16)
  {
    memset(&v282, 0, sizeof(v282));
    BOOL v58 = (char *)&v282;
    *((unsigned char *)&v282.__r_.__value_.__s + 23) = v56 + v54;
    if (!v54) {
      goto LABEL_108;
    }
    goto LABEL_104;
  }
  uint64_t v100 = (v57 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v57 | 7) != 0x17) {
    uint64_t v100 = v57 | 7;
  }
  uint64_t v101 = v100 + 1;
  BOOL v58 = (char *)operator new(v100 + 1);
  v282.__r_.__value_.__l.__size_ = v56 + v54;
  v282.__r_.__value_.__r.__words[2] = v101 | 0x8000000000000000;
  v282.__r_.__value_.__r.__words[0] = (std::string::size_type)v58;
  if (v54)
  {
LABEL_104:
    if (v53 >= 0) {
      int v59 = &qword_259DD00;
    }
    else {
      int v59 = (uint64_t *)qword_259DD00;
    }
    memmove(v58, v59, v54);
  }
LABEL_108:
  int v60 = &v58[v54];
  if (v56)
  {
    if (v55 >= 0) {
      uint64_t v61 = &qword_259CFB0;
    }
    else {
      uint64_t v61 = (uint64_t *)qword_259CFB0;
    }
    memmove(v60, v61, v56);
  }
  v60[v56] = 0;
  if (byte_259CFF7 >= 0) {
    uint64_t v62 = (const std::string::value_type *)&qword_259CFE0;
  }
  else {
    uint64_t v62 = (const std::string::value_type *)qword_259CFE0;
  }
  if (byte_259CFF7 >= 0) {
    std::string::size_type v63 = byte_259CFF7;
  }
  else {
    std::string::size_type v63 = *(void *)&byte_259CFE8;
  }
  uint64_t v64 = std::string::append(&v282, v62, v63);
  long long v65 = *(_OWORD *)&v64->__r_.__value_.__l.__data_;
  __dst.__r_.__value_.__r.__words[2] = v64->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v65;
  v64->__r_.__value_.__l.__size_ = 0;
  v64->__r_.__value_.__r.__words[2] = 0;
  v64->__r_.__value_.__r.__words[0] = 0;
  long long v66 = std::string::append(&__dst, "_Percentage");
  long long v67 = *(_OWORD *)&v66->__r_.__value_.__l.__data_;
  qword_259DFB0 = v66->__r_.__value_.__r.__words[2];
  xmmword_259DFA0 = v67;
  v66->__r_.__value_.__l.__size_ = 0;
  v66->__r_.__value_.__r.__words[2] = 0;
  v66->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__dst.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v282.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_121;
    }
  }
  else if ((SHIBYTE(v282.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_121;
  }
  operator delete(v282.__r_.__value_.__l.__data_);
LABEL_121:
  int v68 = byte_259DD17;
  if (byte_259DD17 >= 0) {
    size_t v69 = byte_259DD17;
  }
  else {
    size_t v69 = qword_259DD08;
  }
  int v70 = byte_259CFC7;
  if (byte_259CFC7 >= 0) {
    size_t v71 = byte_259CFC7;
  }
  else {
    size_t v71 = unk_259CFB8;
  }
  unint64_t v72 = v71 + v69;
  if (v71 + v69 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v72 <= 0x16)
  {
    memset(&__dst, 0, sizeof(__dst));
    unint64_t v73 = (char *)&__dst;
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v71 + v69;
    if (!v69) {
      goto LABEL_134;
    }
    goto LABEL_130;
  }
  uint64_t v102 = (v72 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v72 | 7) != 0x17) {
    uint64_t v102 = v72 | 7;
  }
  uint64_t v103 = v102 + 1;
  unint64_t v73 = (char *)operator new(v102 + 1);
  __dst.__r_.__value_.__l.__size_ = v71 + v69;
  __dst.__r_.__value_.__r.__words[2] = v103 | 0x8000000000000000;
  __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v73;
  if (v69)
  {
LABEL_130:
    if (v68 >= 0) {
      uint64_t v74 = &qword_259DD00;
    }
    else {
      uint64_t v74 = (uint64_t *)qword_259DD00;
    }
    memmove(v73, v74, v69);
  }
LABEL_134:
  unsigned int v75 = &v73[v69];
  if (v71)
  {
    if (v70 >= 0) {
      unint64_t v76 = &qword_259CFB0;
    }
    else {
      unint64_t v76 = (uint64_t *)qword_259CFB0;
    }
    memmove(v75, v76, v71);
  }
  v75[v71] = 0;
  unint64_t v77 = std::string::append(&__dst, "_Duration");
  long long v78 = *(_OWORD *)&v77->__r_.__value_.__l.__data_;
  qword_259DFC8 = v77->__r_.__value_.__r.__words[2];
  xmmword_259DFB8 = v78;
  v77->__r_.__value_.__l.__size_ = 0;
  v77->__r_.__value_.__r.__words[2] = 0;
  v77->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  int v79 = byte_259DD17;
  if (byte_259DD17 >= 0) {
    size_t v80 = byte_259DD17;
  }
  else {
    size_t v80 = qword_259DD08;
  }
  int v81 = byte_259CFC7;
  if (byte_259CFC7 >= 0) {
    size_t v82 = byte_259CFC7;
  }
  else {
    size_t v82 = unk_259CFB8;
  }
  unint64_t v83 = v82 + v80;
  if (v82 + v80 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v83 <= 0x16)
  {
    qword_259DFD8 = 0;
    unk_259DFE0 = 0;
    qword_259DFD0 = 0;
    int v84 = &qword_259DFD0;
    byte_259DFE7 = v82 + v80;
    if (!v80) {
      goto LABEL_154;
    }
    goto LABEL_150;
  }
  uint64_t v104 = (v83 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v83 | 7) != 0x17) {
    uint64_t v104 = v83 | 7;
  }
  uint64_t v105 = v104 + 1;
  int v84 = (uint64_t *)operator new(v104 + 1);
  qword_259DFD8 = v82 + v80;
  unk_259DFE0 = v105 | 0x8000000000000000;
  qword_259DFD0 = (uint64_t)v84;
  if (v80)
  {
LABEL_150:
    if (v79 >= 0) {
      unsigned int v85 = &qword_259DD00;
    }
    else {
      unsigned int v85 = (uint64_t *)qword_259DD00;
    }
    memmove(v84, v85, v80);
  }
LABEL_154:
  __int16 v86 = (char *)v84 + v80;
  if (v82)
  {
    if (v81 >= 0) {
      unint64_t v87 = &qword_259CFB0;
    }
    else {
      unint64_t v87 = (uint64_t *)qword_259CFB0;
    }
    memmove(v86, v87, v82);
  }
  v86[v82] = 0;
  int v88 = byte_259DFE7;
  if (byte_259DFE7 >= 0) {
    size_t v89 = byte_259DFE7;
  }
  else {
    size_t v89 = qword_259DFD8;
  }
  unint64_t v90 = v89 + 5;
  if (v89 + 5 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v90 >= 0x17)
  {
    uint64_t v106 = (v90 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v90 | 7) != 0x17) {
      uint64_t v106 = v90 | 7;
    }
    uint64_t v107 = v106 + 1;
    int v91 = (uint64_t *)operator new(v106 + 1);
    qword_259DFF0 = v89 + 5;
    unk_259DFF8 = v107 | 0x8000000000000000;
    qword_259DFE8 = (uint64_t)v91;
  }
  else
  {
    int v91 = &qword_259DFE8;
    qword_259DFF0 = 0;
    unk_259DFF8 = 0;
    qword_259DFE8 = 0;
    byte_259DFFF = v89 + 5;
    if (!v89) {
      goto LABEL_201;
    }
  }
  if (v88 >= 0) {
    size_t v108 = &qword_259DFD0;
  }
  else {
    size_t v108 = (uint64_t *)qword_259DFD0;
  }
  memmove(v91, v108, v89);
LABEL_201:
  strcpy((char *)v91 + v89, "_Name");
  int v109 = byte_259DD17;
  if (byte_259DD17 >= 0) {
    size_t v110 = byte_259DD17;
  }
  else {
    size_t v110 = qword_259DD08;
  }
  int v111 = byte_259CFC7;
  if (byte_259CFC7 >= 0) {
    size_t v112 = byte_259CFC7;
  }
  else {
    size_t v112 = unk_259CFB8;
  }
  unint64_t v113 = v112 + v110;
  if (v112 + v110 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v113 <= 0x16)
  {
    memset(&__dst, 0, sizeof(__dst));
    BOOL v114 = (char *)&__dst;
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v112 + v110;
    if (!v110) {
      goto LABEL_214;
    }
    goto LABEL_210;
  }
  uint64_t v124 = (v113 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v113 | 7) != 0x17) {
    uint64_t v124 = v113 | 7;
  }
  uint64_t v125 = v124 + 1;
  BOOL v114 = (char *)operator new(v124 + 1);
  __dst.__r_.__value_.__l.__size_ = v112 + v110;
  __dst.__r_.__value_.__r.__words[2] = v125 | 0x8000000000000000;
  __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v114;
  if (v110)
  {
LABEL_210:
    if (v109 >= 0) {
      int v115 = &qword_259DD00;
    }
    else {
      int v115 = (uint64_t *)qword_259DD00;
    }
    memmove(v114, v115, v110);
  }
LABEL_214:
  BOOL v116 = &v114[v110];
  if (v112)
  {
    if (v111 >= 0) {
      int v117 = &qword_259CFB0;
    }
    else {
      int v117 = (uint64_t *)qword_259CFB0;
    }
    memmove(v116, v117, v112);
  }
  v116[v112] = 0;
  BOOL v118 = std::string::append(&__dst, "_Connector_Type");
  long long v119 = *(_OWORD *)&v118->__r_.__value_.__l.__data_;
  qword_259E010 = v118->__r_.__value_.__r.__words[2];
  xmmword_259E000 = v119;
  v118->__r_.__value_.__l.__size_ = 0;
  v118->__r_.__value_.__r.__words[2] = 0;
  v118->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  int v120 = SHIBYTE(qword_259E010);
  if (qword_259E010 >= 0) {
    size_t v121 = HIBYTE(qword_259E010);
  }
  else {
    size_t v121 = *((void *)&xmmword_259E000 + 1);
  }
  unint64_t v122 = v121 + 6;
  if (v121 + 6 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v122 >= 0x17)
  {
    uint64_t v126 = (v122 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v122 | 7) != 0x17) {
      uint64_t v126 = v122 | 7;
    }
    uint64_t v127 = v126 + 1;
    uint64_t v123 = (uint64_t *)operator new(v126 + 1);
    qword_259E020 = v121 + 6;
    unk_259E028 = v127 | 0x8000000000000000;
    qword_259E018 = (uint64_t)v123;
  }
  else
  {
    uint64_t v123 = &qword_259E018;
    qword_259E020 = 0;
    unk_259E028 = 0;
    qword_259E018 = 0;
    byte_259E02F = v121 + 6;
    if (!v121) {
      goto LABEL_239;
    }
  }
  if (v120 >= 0) {
    long long v128 = &xmmword_259E000;
  }
  else {
    long long v128 = (long long *)xmmword_259E000;
  }
  memmove(v123, v128, v121);
LABEL_239:
  strcpy((char *)v123 + v121, "_Power");
  int v129 = byte_259DD17;
  if (byte_259DD17 >= 0) {
    size_t v130 = byte_259DD17;
  }
  else {
    size_t v130 = qword_259DD08;
  }
  int v131 = byte_259CFC7;
  if (byte_259CFC7 >= 0) {
    size_t v132 = byte_259CFC7;
  }
  else {
    size_t v132 = unk_259CFB8;
  }
  unint64_t v133 = v132 + v130;
  if (v132 + v130 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v133 <= 0x16)
  {
    memset(&__dst, 0, sizeof(__dst));
    char v134 = (char *)&__dst;
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v132 + v130;
    if (!v130) {
      goto LABEL_252;
    }
    goto LABEL_248;
  }
  uint64_t v163 = (v133 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v133 | 7) != 0x17) {
    uint64_t v163 = v133 | 7;
  }
  uint64_t v164 = v163 + 1;
  char v134 = (char *)operator new(v163 + 1);
  __dst.__r_.__value_.__l.__size_ = v132 + v130;
  __dst.__r_.__value_.__r.__words[2] = v164 | 0x8000000000000000;
  __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v134;
  if (v130)
  {
LABEL_248:
    if (v129 >= 0) {
      unint64_t v135 = &qword_259DD00;
    }
    else {
      unint64_t v135 = (uint64_t *)qword_259DD00;
    }
    memmove(v134, v135, v130);
  }
LABEL_252:
  v136 = &v134[v130];
  if (v132)
  {
    if (v131 >= 0) {
      unint64_t v137 = &qword_259CFB0;
    }
    else {
      unint64_t v137 = (uint64_t *)qword_259CFB0;
    }
    memmove(v136, v137, v132);
  }
  v136[v132] = 0;
  if (byte_259D78F >= 0) {
    unint64_t v138 = (const std::string::value_type *)&qword_259D778;
  }
  else {
    unint64_t v138 = (const std::string::value_type *)qword_259D778;
  }
  if (byte_259D78F >= 0) {
    std::string::size_type v139 = byte_259D78F;
  }
  else {
    std::string::size_type v139 = unk_259D780;
  }
  unint64_t v140 = std::string::append(&__dst, v138, v139);
  long long v141 = *(_OWORD *)&v140->__r_.__value_.__l.__data_;
  qword_259E040 = v140->__r_.__value_.__r.__words[2];
  xmmword_259E030 = v141;
  v140->__r_.__value_.__l.__size_ = 0;
  v140->__r_.__value_.__r.__words[2] = 0;
  v140->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  int v142 = byte_259DD17;
  if (byte_259DD17 >= 0) {
    size_t v143 = byte_259DD17;
  }
  else {
    size_t v143 = qword_259DD08;
  }
  int v144 = byte_259CFC7;
  if (byte_259CFC7 >= 0) {
    size_t v145 = byte_259CFC7;
  }
  else {
    size_t v145 = unk_259CFB8;
  }
  unint64_t v146 = v145 + v143;
  if (v145 + v143 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v146 <= 0x16)
  {
    memset(&v282, 0, sizeof(v282));
    int v147 = (char *)&v282;
    *((unsigned char *)&v282.__r_.__value_.__s + 23) = v145 + v143;
    if (!v143) {
      goto LABEL_278;
    }
    goto LABEL_274;
  }
  uint64_t v165 = (v146 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v146 | 7) != 0x17) {
    uint64_t v165 = v146 | 7;
  }
  uint64_t v166 = v165 + 1;
  int v147 = (char *)operator new(v165 + 1);
  v282.__r_.__value_.__l.__size_ = v145 + v143;
  v282.__r_.__value_.__r.__words[2] = v166 | 0x8000000000000000;
  v282.__r_.__value_.__r.__words[0] = (std::string::size_type)v147;
  if (v143)
  {
LABEL_274:
    if (v142 >= 0) {
      char v148 = &qword_259DD00;
    }
    else {
      char v148 = (uint64_t *)qword_259DD00;
    }
    memmove(v147, v148, v143);
  }
LABEL_278:
  unint64_t v149 = &v147[v143];
  if (v145)
  {
    if (v144 >= 0) {
      uint64_t v150 = &qword_259CFB0;
    }
    else {
      uint64_t v150 = (uint64_t *)qword_259CFB0;
    }
    memmove(v149, v150, v145);
  }
  v149[v145] = 0;
  if (byte_259CFF7 >= 0) {
    v151 = (const std::string::value_type *)&qword_259CFE0;
  }
  else {
    v151 = (const std::string::value_type *)qword_259CFE0;
  }
  if (byte_259CFF7 >= 0) {
    std::string::size_type v152 = byte_259CFF7;
  }
  else {
    std::string::size_type v152 = *(void *)&byte_259CFE8;
  }
  unsigned int v153 = std::string::append(&v282, v151, v152);
  long long v154 = *(_OWORD *)&v153->__r_.__value_.__l.__data_;
  __dst.__r_.__value_.__r.__words[2] = v153->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v154;
  v153->__r_.__value_.__l.__size_ = 0;
  v153->__r_.__value_.__r.__words[2] = 0;
  v153->__r_.__value_.__r.__words[0] = 0;
  if (byte_259D78F >= 0) {
    __int16 v155 = (const std::string::value_type *)&qword_259D778;
  }
  else {
    __int16 v155 = (const std::string::value_type *)qword_259D778;
  }
  if (byte_259D78F >= 0) {
    std::string::size_type v156 = byte_259D78F;
  }
  else {
    std::string::size_type v156 = unk_259D780;
  }
  uint64_t v157 = std::string::append(&__dst, v155, v156);
  long long v158 = *(_OWORD *)&v157->__r_.__value_.__l.__data_;
  qword_259E058 = v157->__r_.__value_.__r.__words[2];
  xmmword_259E048 = v158;
  v157->__r_.__value_.__l.__size_ = 0;
  v157->__r_.__value_.__r.__words[2] = 0;
  v157->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__dst.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v282.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_297;
    }
  }
  else if ((SHIBYTE(v282.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_297;
  }
  operator delete(v282.__r_.__value_.__l.__data_);
LABEL_297:
  byte_259E077 = 16;
  strcpy((char *)&xmmword_259E060, "Use_NACS_Adapter");
  byte_259E08F = 16;
  strcpy(byte_259E078, "Start_Route_Sign");
  qword_259E090 = (uint64_t)operator new(0x20uLL);
  unk_259E098 = v277;
  strcpy((char *)qword_259E090, "Start_Route_Spoken_Primary");
  int v159 = byte_259C727;
  if (byte_259C727 >= 0) {
    size_t v160 = byte_259C727;
  }
  else {
    size_t v160 = qword_259C718;
  }
  unint64_t v161 = v160 + 27;
  if (v160 + 27 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v161 <= 0x16)
  {
    unsigned __int16 v162 = &qword_259E0A8;
    qword_259E0B0 = 0;
    unk_259E0B8 = 0;
    qword_259E0A8 = 0;
    byte_259E0BF = v160 + 27;
LABEL_314:
    if (v159 >= 0) {
      uint64_t v169 = &qword_259C710;
    }
    else {
      uint64_t v169 = (uint64_t *)qword_259C710;
    }
    memmove(v162, v169, v160);
    goto LABEL_318;
  }
  uint64_t v167 = (v161 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v161 | 7) != 0x17) {
    uint64_t v167 = v161 | 7;
  }
  uint64_t v168 = v167 + 1;
  unsigned __int16 v162 = (uint64_t *)operator new(v167 + 1);
  qword_259E0B0 = v160 + 27;
  unk_259E0B8 = v168 | 0x8000000000000000;
  qword_259E0A8 = (uint64_t)v162;
  if (v160) {
    goto LABEL_314;
  }
LABEL_318:
  strcpy((char *)v162 + v160, "Turn_Around_To_Route_Spoken");
  strcpy(&byte_259E0D7, "\t_Two_Lanes");
  strcpy((char *)&xmmword_259E0C0, "_One_Lane");
  strcpy(&byte_259E0EF, "\n_Three_Lanes");
  byte_259E107 = 12;
  byte_259E11F = 11;
  strcpy((char *)&xmmword_259E108, "_Four_Lanes");
  byte_259E137 = 11;
  strcpy((char *)&xmmword_259E120, "_Five_Lanes");
  strcpy(&byte_259E14F, "\n_Seven_Lanes");
  strcpy((char *)&xmmword_259E138, "_Six_Lanes");
  byte_259E167 = 12;
  byte_259E17F = 12;
  strcpy((char *)&xmmword_259E168, "_Eight_Lanes");
  byte_259E197 = 12;
  strcpy((char *)&qword_259E180, "_Second_Lane");
  byte_259E1AF = 11;
  strcpy((char *)&qword_259E198, "_Third_Lane");
  byte_259E1C7 = 19;
  long long v271 = *(_OWORD *)"_Second_Third_Lanes";
  strcpy((char *)&xmmword_259E1B0, "_Second_Third_Lanes");
  byte_259E1DF = 4;
  strcpy((char *)&dword_259E1C8, "Left");
  byte_259E1F7 = 5;
  byte_259E1E4 = 116;
  dword_259E1E0 = 1751607634;
  byte_259E1E5 = 0;
  byte_259E20F = 6;
  strcpy((char *)&dword_259E1F8, "Middle");
  unk_259E221 = 0;
  unk_259E222 = 0;
  unk_259E224 = 0x10000000;
  strcpy((char *)&xmmword_259E210, "Left_Second_Lane");
  unk_259E239 = 0;
  unk_259E23A = 0;
  unk_259E23C = 285212672;
  strcpy((char *)&xmmword_259E228, "Right_Second_Lan");
  unk_259E250 = 0xF00000000000000;
  LODWORD(xmmword_259E240) = 1952867660;
  *(_DWORD *)((char *)&xmmword_259E240 + 11) = 1701732684;
  *(void *)((char *)&xmmword_259E240 + 4) = *(void *)"_Third_Lane";
  HIBYTE(xmmword_259E240) = 0;
  unk_259E268 = 0x1000000000000000;
  BYTE4(xmmword_259E258) = 116;
  LODWORD(xmmword_259E258) = 1751607634;
  HIDWORD(xmmword_259E258) = 1701732684;
  *(void *)((char *)&xmmword_259E258 + 5) = *(void *)"_Third_Lane";
  uint64_t v170 = (char *)operator new(0x19uLL);
  *(void *)&xmmword_259E270 = v170;
  *(long long *)((char *)&xmmword_259E270 + 8) = v281;
  *(_DWORD *)uint64_t v170 = 1952867660;
  strcpy(v170 + 19, "anes");
  *(_OWORD *)(v170 + 4) = v271;
  uint64_t v171 = (char *)operator new(0x20uLL);
  *(void *)&xmmword_259E288 = v171;
  *(long long *)((char *)&xmmword_259E288 + 8) = v280;
  *(_DWORD *)uint64_t v171 = 1751607634;
  v171[4] = 116;
  strcpy(v171 + 20, "anes");
  *(_OWORD *)(v171 + 5) = v271;
  byte_259E2B7 = 5;
  strcpy((char *)&qword_259E2A0, "_Stay");
  byte_259E2CF = 13;
  strcpy((char *)&qword_259E2B8, "Continue_Sign");
  byte_259E2E7 = 8;
  strcpy((char *)&xmmword_259E2D0, "Continue");
  int v172 = byte_259D7A7;
  if (byte_259D7A7 >= 0) {
    size_t v173 = byte_259D7A7;
  }
  else {
    size_t v173 = qword_259D798;
  }
  unint64_t v174 = v173 + 8;
  if (v173 + 8 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v174 >= 0x17)
  {
    uint64_t v176 = (v174 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v174 | 7) != 0x17) {
      uint64_t v176 = v174 | 7;
    }
    uint64_t v177 = v176 + 1;
    unsigned int v178 = operator new(v176 + 1);
    qword_259E2F0 = v173 + 8;
    qword_259E2F8 = v177 | 0x8000000000000000;
    qword_259E2E8 = (uint64_t)v178;
    *unsigned int v178 = 0x65756E69746E6F43;
    uint64_t v175 = v178 + 1;
  }
  else
  {
    qword_259E2F8 = 0;
    HIBYTE(qword_259E2F8) = v173 + 8;
    qword_259E2E8 = 0x65756E69746E6F43;
    qword_259E2F0 = 0;
    uint64_t v175 = &qword_259E2F0;
    if (!v173) {
      goto LABEL_332;
    }
  }
  if (v172 >= 0) {
    unint64_t v179 = &qword_259D790;
  }
  else {
    unint64_t v179 = (uint64_t *)qword_259D790;
  }
  memmove(v175, v179, v173);
LABEL_332:
  *((unsigned char *)v175 + v173) = 0;
  int v180 = byte_259D807;
  if (byte_259D807 >= 0) {
    size_t v181 = byte_259D807;
  }
  else {
    size_t v181 = qword_259D7F8;
  }
  unint64_t v182 = v181 + 8;
  if (v181 + 8 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v182 >= 0x17)
  {
    uint64_t v184 = (v182 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v182 | 7) != 0x17) {
      uint64_t v184 = v182 | 7;
    }
    uint64_t v185 = v184 + 1;
    uint64_t v186 = operator new(v184 + 1);
    qword_259E308 = v181 + 8;
    qword_259E310 = v185 | 0x8000000000000000;
    qword_259E300 = (uint64_t)v186;
    void *v186 = xmmword_259E2D0;
    unint64_t v183 = v186 + 1;
  }
  else
  {
    qword_259E310 = 0;
    HIBYTE(qword_259E310) = v181 + 8;
    qword_259E300 = xmmword_259E2D0;
    qword_259E308 = 0;
    unint64_t v183 = &qword_259E308;
    if (!v181) {
      goto LABEL_346;
    }
  }
  if (v180 >= 0) {
    long long v187 = &qword_259D7F0;
  }
  else {
    long long v187 = (uint64_t *)qword_259D7F0;
  }
  memmove(v183, v187, v181);
LABEL_346:
  *((unsigned char *)v183 + v181) = 0;
  *((unsigned char *)&__dst.__r_.__value_.__s + 23) = 1;
  LOWORD(__dst.__r_.__value_.__l.__data_) = 83;
  v284[23] = 2;
  strcpy(v284, "SW");
  v286[7] = 1;
  LOWORD(v285[0]) = 87;
  HIBYTE(v287) = 2;
  strcpy(&v286[8], "NW");
  HIBYTE(v289) = 1;
  LOWORD(v288[0]) = 78;
  HIBYTE(v291) = 2;
  strcpy((char *)&v290, "NE");
  HIBYTE(v293) = 1;
  LOWORD(v292) = 69;
  HIBYTE(v295) = 2;
  strcpy((char *)&__p, "SE");
  sub_4BDC0C(qword_259E318, (uint64_t)&__dst, 8uLL);
  if (SHIBYTE(v295) < 0)
  {
    operator delete((void *)__p);
    if ((SHIBYTE(v293) & 0x80000000) == 0)
    {
LABEL_348:
      if ((SHIBYTE(v291) & 0x80000000) == 0) {
        goto LABEL_349;
      }
      goto LABEL_383;
    }
  }
  else if ((SHIBYTE(v293) & 0x80000000) == 0)
  {
    goto LABEL_348;
  }
  operator delete((void *)v292);
  if ((SHIBYTE(v291) & 0x80000000) == 0)
  {
LABEL_349:
    if ((SHIBYTE(v289) & 0x80000000) == 0) {
      goto LABEL_350;
    }
    goto LABEL_384;
  }
LABEL_383:
  operator delete((void *)v290);
  if ((SHIBYTE(v289) & 0x80000000) == 0)
  {
LABEL_350:
    if ((SHIBYTE(v287) & 0x80000000) == 0) {
      goto LABEL_351;
    }
    goto LABEL_385;
  }
LABEL_384:
  operator delete(v288[0]);
  if ((SHIBYTE(v287) & 0x80000000) == 0)
  {
LABEL_351:
    if ((v286[7] & 0x80000000) == 0) {
      goto LABEL_352;
    }
    goto LABEL_386;
  }
LABEL_385:
  operator delete(*(void **)&v286[8]);
  if ((v286[7] & 0x80000000) == 0)
  {
LABEL_352:
    if ((v284[23] & 0x80000000) == 0) {
      goto LABEL_353;
    }
LABEL_387:
    operator delete(*(void **)v284);
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_354;
    }
    goto LABEL_388;
  }
LABEL_386:
  operator delete(v285[0]);
  if ((v284[23] & 0x80000000) != 0) {
    goto LABEL_387;
  }
LABEL_353:
  if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    goto LABEL_354;
  }
LABEL_388:
  operator delete(__dst.__r_.__value_.__l.__data_);
LABEL_354:
  byte_259E347 = 13;
  strcpy((char *)&qword_259E330, "{instruction}");
  byte_259E35F = 20;
  strcpy(byte_259E348, "{primaryInstruction}");
  strcpy((char *)&xmmword_259E360, "{secondaryInstruction}");
  HIBYTE(word_259E376) = 22;
  qword_259E378 = (uint64_t)operator new(0x20uLL);
  unk_259E380 = v279;
  strcpy((char *)qword_259E378, "{andSecondaryInstruction}");
  qword_259E390 = (uint64_t)operator new(0x20uLL);
  unk_259E398 = v280;
  strcpy((char *)qword_259E390, "{toSecondaryInstruction}");
  byte_259E3BF = 21;
  strcpy(byte_259E3A8, "{continueInstruction}");
  qword_259E3C0 = (uint64_t)operator new(0x20uLL);
  unk_259E3C8 = v277;
  strcpy((char *)qword_259E3C0, "{thenSecondaryInstruction}");
  byte_259E3EF = 14;
  strcpy((char *)&qword_259E3D8, "{instruction1}");
  byte_259E407 = 14;
  strcpy((char *)&qword_259E3F0, "{instruction2}");
  strcpy(&byte_259E41F, "\n{nextDistance}");
  strcpy((char *)&qword_259E408, "{distance}");
  byte_259E437 = 14;
  byte_259E44F = 16;
  strcpy(byte_259E438, "{valid_distance}");
  strcpy(&byte_259E467, "\n{valid_distance}");
  strcpy((char *)&qword_259E450, "{distance}");
  byte_259E47F = 16;
  byte_259E497 = 15;
  strcpy((char *)&qword_259E480, "{ClimbDistance}");
  byte_259E4AF = 17;
  strcpy(byte_259E498, "{DescentDistance}");
  byte_259E4C7 = 13;
  strcpy((char *)&qword_259E4B0, "{nonBrkSpace}");
  byte_259E4DF = 9;
  strcpy((char *)&qword_259E4C8, "{newLine}");
  byte_259E4F7 = 6;
  word_259E4E4 = -24382;
  dword_259E4E0 = -1211981630;
  byte_259E4E6 = 0;
  byte_259E50F = 2;
  word_259E4F8 = -24382;
  byte_259E4FA = 0;
  byte_259E527 = 1;
  word_259E510 = 10;
  byte_259E53F = 1;
  word_259E528 = 32;
  byte_259E557 = 2;
  strcpy((char *)&word_259E540, "\n\n");
  strcpy(&byte_259E56F, "\t{TowardShield1}");
  strcpy((char *)&qword_259E558, "{Shield1}");
  byte_259E587 = 15;
  strcpy(&byte_259E59F, "\t{TowardShield2}");
  strcpy((char *)&qword_259E588, "{Shield2}");
  byte_259E5B7 = 15;
  byte_259E5CF = 12;
  strcpy((char *)&qword_259E5B8, "{Direction1}");
  byte_259E5E7 = 12;
  strcpy((char *)&qword_259E5D0, "{Direction2}");
  byte_259E5FF = 18;
  strcpy(byte_259E5E8, "{TowardDirection1}");
  byte_259E617 = 18;
  strcpy((char *)&xmmword_259E600, "{TowardDirection2}");
  byte_259E62F = 7;
  strcpy((char *)&dword_259E618, "{Icon1}");
  byte_259E647 = 7;
  strcpy((char *)&dword_259E630, "{Icon2}");
  byte_259E648[23] = 14;
  strcpy(byte_259E648, "{Intersection}");
  byte_259E677 = 6;
  strcpy((char *)&xmmword_259E660, "{Road}");
  byte_259E68F = 7;
  strcpy((char *)&dword_259E678, "{Road1}");
  byte_259E6A7 = 7;
  strcpy((char *)&xmmword_259E690, "{Road2}");
  strcpy(&byte_259E6BF, "\n{Freeway}");
  strcpy((char *)&qword_259E6A8, "{Elevator}");
  strcpy(&byte_259E6D7, "\t{Ferry}");
  byte_259E6EF = 7;
  byte_259E707 = 13;
  strcpy((char *)&xmmword_259E6F0, "{ShuttleName}");
  byte_259E71F = 11;
  strcpy((char *)&xmmword_259E708, "{Signpost1}");
  byte_259E737 = 11;
  strcpy((char *)&xmmword_259E720, "{Signpost2}");
  byte_259E74F = 12;
  strcpy((char *)&xmmword_259E738, "{ExitNumber}");
  strcpy(&byte_259E767, "\t{Name}");
  strcpy((char *)&xmmword_259E750, "{Address}");
  byte_259E77F = 6;
  byte_259E797 = 11;
  strcpy((char *)&xmmword_259E780, "{PlaceName}");
  byte_259E7AF = 14;
  strcpy((char *)&xmmword_259E798, "{ElevatorName}");
  byte_259E7C7 = 15;
  strcpy((char *)&xmmword_259E7B0, "{EscalatorName}");
  byte_259E7DF = 12;
  strcpy((char *)&xmmword_259E7C8, "{StairsName}");
  strcpy(&byte_259E7F7, "\n{BridgeName}");
  strcpy((char *)&xmmword_259E7E0, "{RampName}");
  byte_259E80F = 12;
  byte_259E827 = 12;
  strcpy((char *)&xmmword_259E810, "{TunnelName}");
  byte_259E83F = 13;
  strcpy((char *)&xmmword_259E828, "{CustomLabel}");
  std::string __dst = *(std::string *)byte_259E648;
  *(_OWORD *)uint64_t v284 = xmmword_259E660;
  *(void *)&v284[16] = unk_259E670;
  *(_OWORD *)v285 = *(_OWORD *)&dword_259E678;
  *(void *)uint64_t v286 = unk_259E688;
  *(_OWORD *)&v286[8] = xmmword_259E690;
  uint64_t v287 = unk_259E6A0;
  *(_OWORD *)uint64_t v288 = *(_OWORD *)&qword_259E6A8;
  uint64_t v289 = unk_259E6B8;
  uint64_t v291 = unk_259E6D0;
  long long v290 = xmmword_259E6C0;
  long long v292 = xmmword_259E6D8;
  uint64_t v293 = unk_259E6E8;
  uint64_t v295 = unk_259E700;
  long long __p = xmmword_259E6F0;
  long long v296 = xmmword_259E708;
  uint64_t v297 = unk_259E718;
  uint64_t v299 = unk_259E730;
  long long v298 = xmmword_259E720;
  long long v300 = xmmword_259E738;
  long long v302 = xmmword_259E750;
  uint64_t v301 = unk_259E748;
  uint64_t v303 = unk_259E760;
  long long v304 = xmmword_259E768;
  long long v306 = xmmword_259E780;
  uint64_t v305 = unk_259E778;
  uint64_t v307 = unk_259E790;
  long long v308 = xmmword_259E798;
  long long v310 = xmmword_259E7B0;
  uint64_t v309 = unk_259E7A8;
  uint64_t v311 = unk_259E7C0;
  long long v312 = xmmword_259E7C8;
  long long v314 = xmmword_259E7E0;
  uint64_t v313 = unk_259E7D8;
  uint64_t v315 = unk_259E7F0;
  long long v316 = xmmword_259E7F8;
  long long v318 = xmmword_259E810;
  uint64_t v317 = unk_259E808;
  uint64_t v319 = unk_259E820;
  uint64_t v321 = unk_259E838;
  long long v320 = xmmword_259E828;
  sub_4BDC0C(qword_259E840, (uint64_t)&__dst, 0x15uLL);
  if (SHIBYTE(v321) < 0)
  {
    operator delete((void *)v320);
    if ((SHIBYTE(v319) & 0x80000000) == 0)
    {
LABEL_356:
      if ((SHIBYTE(v317) & 0x80000000) == 0) {
        goto LABEL_357;
      }
      goto LABEL_391;
    }
  }
  else if ((SHIBYTE(v319) & 0x80000000) == 0)
  {
    goto LABEL_356;
  }
  operator delete((void *)v318);
  if ((SHIBYTE(v317) & 0x80000000) == 0)
  {
LABEL_357:
    if ((SHIBYTE(v315) & 0x80000000) == 0) {
      goto LABEL_358;
    }
    goto LABEL_392;
  }
LABEL_391:
  operator delete((void *)v316);
  if ((SHIBYTE(v315) & 0x80000000) == 0)
  {
LABEL_358:
    if ((SHIBYTE(v313) & 0x80000000) == 0) {
      goto LABEL_359;
    }
    goto LABEL_393;
  }
LABEL_392:
  operator delete((void *)v314);
  if ((SHIBYTE(v313) & 0x80000000) == 0)
  {
LABEL_359:
    if ((SHIBYTE(v311) & 0x80000000) == 0) {
      goto LABEL_360;
    }
    goto LABEL_394;
  }
LABEL_393:
  operator delete((void *)v312);
  if ((SHIBYTE(v311) & 0x80000000) == 0)
  {
LABEL_360:
    if ((SHIBYTE(v309) & 0x80000000) == 0) {
      goto LABEL_361;
    }
    goto LABEL_395;
  }
LABEL_394:
  operator delete((void *)v310);
  if ((SHIBYTE(v309) & 0x80000000) == 0)
  {
LABEL_361:
    if ((SHIBYTE(v307) & 0x80000000) == 0) {
      goto LABEL_362;
    }
    goto LABEL_396;
  }
LABEL_395:
  operator delete((void *)v308);
  if ((SHIBYTE(v307) & 0x80000000) == 0)
  {
LABEL_362:
    if ((SHIBYTE(v305) & 0x80000000) == 0) {
      goto LABEL_363;
    }
    goto LABEL_397;
  }
LABEL_396:
  operator delete((void *)v306);
  if ((SHIBYTE(v305) & 0x80000000) == 0)
  {
LABEL_363:
    if ((SHIBYTE(v303) & 0x80000000) == 0) {
      goto LABEL_364;
    }
    goto LABEL_398;
  }
LABEL_397:
  operator delete((void *)v304);
  if ((SHIBYTE(v303) & 0x80000000) == 0)
  {
LABEL_364:
    if ((SHIBYTE(v301) & 0x80000000) == 0) {
      goto LABEL_365;
    }
    goto LABEL_399;
  }
LABEL_398:
  operator delete((void *)v302);
  if ((SHIBYTE(v301) & 0x80000000) == 0)
  {
LABEL_365:
    if ((SHIBYTE(v299) & 0x80000000) == 0) {
      goto LABEL_366;
    }
    goto LABEL_400;
  }
LABEL_399:
  operator delete((void *)v300);
  if ((SHIBYTE(v299) & 0x80000000) == 0)
  {
LABEL_366:
    if ((SHIBYTE(v297) & 0x80000000) == 0) {
      goto LABEL_367;
    }
    goto LABEL_401;
  }
LABEL_400:
  operator delete((void *)v298);
  if ((SHIBYTE(v297) & 0x80000000) == 0)
  {
LABEL_367:
    if ((SHIBYTE(v295) & 0x80000000) == 0) {
      goto LABEL_368;
    }
    goto LABEL_402;
  }
LABEL_401:
  operator delete((void *)v296);
  if ((SHIBYTE(v295) & 0x80000000) == 0)
  {
LABEL_368:
    if ((SHIBYTE(v293) & 0x80000000) == 0) {
      goto LABEL_369;
    }
    goto LABEL_403;
  }
LABEL_402:
  operator delete((void *)__p);
  if ((SHIBYTE(v293) & 0x80000000) == 0)
  {
LABEL_369:
    if ((SHIBYTE(v291) & 0x80000000) == 0) {
      goto LABEL_370;
    }
    goto LABEL_404;
  }
LABEL_403:
  operator delete((void *)v292);
  if ((SHIBYTE(v291) & 0x80000000) == 0)
  {
LABEL_370:
    if ((SHIBYTE(v289) & 0x80000000) == 0) {
      goto LABEL_371;
    }
    goto LABEL_405;
  }
LABEL_404:
  operator delete((void *)v290);
  if ((SHIBYTE(v289) & 0x80000000) == 0)
  {
LABEL_371:
    if ((SHIBYTE(v287) & 0x80000000) == 0) {
      goto LABEL_372;
    }
    goto LABEL_406;
  }
LABEL_405:
  operator delete(v288[0]);
  if ((SHIBYTE(v287) & 0x80000000) == 0)
  {
LABEL_372:
    if ((v286[7] & 0x80000000) == 0) {
      goto LABEL_373;
    }
    goto LABEL_407;
  }
LABEL_406:
  operator delete(*(void **)&v286[8]);
  if ((v286[7] & 0x80000000) == 0)
  {
LABEL_373:
    if ((v284[23] & 0x80000000) == 0) {
      goto LABEL_374;
    }
LABEL_408:
    operator delete(*(void **)v284);
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_375;
    }
    goto LABEL_409;
  }
LABEL_407:
  operator delete(v285[0]);
  if ((v284[23] & 0x80000000) != 0) {
    goto LABEL_408;
  }
LABEL_374:
  if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    goto LABEL_375;
  }
LABEL_409:
  operator delete(__dst.__r_.__value_.__l.__data_);
LABEL_375:
  qword_259E858 = (uint64_t)operator new(0x19uLL);
  *(_OWORD *)algn_259E860 = v281;
  strcpy((char *)qword_259E858, "From_User_Location_List");
  byte_259E887 = 20;
  strcpy(&algn_259E860[16], "Origin_Waypoint_List");
  qword_259E888 = (uint64_t)operator new(0x20uLL);
  unk_259E890 = v277;
  strcpy((char *)qword_259E888, "Intermediate_Waypoint_List");
  unk_259E8A0 = operator new(0x20uLL);
  unk_259E8A8 = v279;
  strcpy(unk_259E8A0, "Destination_Waypoint_List");
  byte_259E8CF = 15;
  strcpy(byte_259E8B8, "{toDestination}");
  byte_259E8E7 = 13;
  strcpy((char *)&xmmword_259E8D0, "{Destination}");
  byte_259E8FF = 7;
  strcpy(byte_259E8E8, "To_Home");
  byte_259E917 = 14;
  strcpy(byte_259E900, "To_ContactHome");
  byte_259E92F = 7;
  strcpy(byte_259E918, "To_Work");
  byte_259E947 = 14;
  strcpy(byte_259E930, "To_ContactWork");
  strcpy(&byte_259E95F, "\nTo_Business");
  strcpy(byte_259E948, "To_Address");
  byte_259E977 = 11;
  byte_259E98F = 16;
  strcpy(byte_259E978, "To_Other_Contact");
  strcpy(&byte_259E9A7, "\tTo_ContactSchool");
  strcpy(byte_259E990, "To_School");
  byte_259E9BF = 16;
  byte_259E9D7 = 17;
  strcpy(byte_259E9C0, "To_PersonLocation");
  qword_259E9D8 = (uint64_t)operator new(0x20uLL);
  unk_259E9E0 = v278;
  strcpy((char *)qword_259E9D8, "To_ContactCustomLabelAddress");
  byte_259EA07 = 7;
  strcpy((char *)&dword_259E9F0, "At_Home");
  byte_259EA1F = 14;
  strcpy((char *)&qword_259EA08, "At_ContactHome");
  byte_259EA37 = 7;
  strcpy((char *)&dword_259EA20, "At_Work");
  byte_259EA4F = 14;
  strcpy((char *)&qword_259EA38, "At_ContactWork");
  strcpy(&byte_259EA67, "\nAt_Business");
  strcpy((char *)&qword_259EA50, "At_Address");
  byte_259EA7F = 11;
  byte_259EA97 = 16;
  strcpy(byte_259EA80, "At_Other_Contact");
  byte_259EAAF = 4;
  strcpy((char *)&dword_259EA98, "Home");
  byte_259EAC7 = 11;
  strcpy((char *)&qword_259EAB0 + 7, "Home");
  qword_259EAB0 = *(void *)&v265[16];
  byte_259EADF = 4;
  strcpy((char *)&dword_259EAC8, "Work");
  byte_259EAF7 = 11;
  strcpy((char *)&qword_259EAE0 + 7, "Work");
  qword_259EAE0 = *(void *)v265;
  byte_259EB0F = 7;
  strcpy((char *)&dword_259EAF8, "Address");
  byte_259EB27 = 8;
  strcpy((char *)&qword_259EB10, "Business");
  byte_259EB3F = 13;
  qword_259EB28 = *(void *)&v265[48];
  *(uint64_t *)((char *)&qword_259EB28 + 5) = *(void *)&v265[32];
  byte_259EB35 = 0;
  byte_259EB57 = 6;
  strcpy((char *)&dword_259EB40, "School");
  byte_259EB6F = 13;
  strcpy((char *)&qword_259EB58, "ContactSchool");
  byte_259EB87 = 14;
  strcpy((char *)&qword_259EB70, "PersonLocation");
  qword_259EB88 = (uint64_t)operator new(0x20uLL);
  xmmword_259EB90 = v279;
  strcpy((char *)qword_259EB88, "ContactCustomLabelAddress");
  if (byte_259E8E7 < 0)
  {
    sub_4200(&xmmword_259EBA0, (void *)xmmword_259E8D0, *((unint64_t *)&xmmword_259E8D0 + 1));
  }
  else
  {
    xmmword_259EBA0 = xmmword_259E8D0;
    qword_259EBB0 = unk_259E8E0;
  }
  byte_259EBCF = 16;
  strcpy((char *)&xmmword_259EBB8, "{PrevExitNumber}");
  byte_259EBE7 = 10;
  strcpy((char *)&qword_259EBD0, "{PrevRoad}");
  qword_259EBE8 = (uint64_t)operator new(0x20uLL);
  unk_259EBF0 = v280;
  strcpy((char *)qword_259EBE8, "{RouteTotalExpectedTime}");
  byte_259EC17 = 18;
  strcpy(byte_259EC00, "{ChargePercentage}");
  qword_259EC18 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_259EC20 = v274;
  strcpy((char *)qword_259EC18, "{RemainingChargePercentage}");
  byte_259EC47 = 16;
  strcpy(&algn_259EC20[16], "{ChargeDuration}");
  byte_259EC5F = 15;
  strcpy((char *)&qword_259EC48, "{ConnectorType}");
  byte_259EC77 = 19;
  strcpy(byte_259EC60, "{ChargeStationName}");
  byte_259EC8F = 7;
  strcpy((char *)&dword_259EC78, "{Power}");
  byte_259ECA7 = 13;
  strcpy((char *)&qword_259EC90, "{VehicleName}");
  byte_259ECBF = 18;
  strcpy((char *)&xmmword_259ECA8, "{AreaIncidentName}");
  byte_259ECD7 = 14;
  strcpy((char *)&qword_259ECC0, "{AreaIncident}");
  byte_259ECEF = 16;
  strcpy((char *)&xmmword_259ECD8, "{AffectedRegion}");
  byte_259ED07 = 21;
  strcpy(byte_259ECF0, "{AreaIncidentWeblink}");
  byte_259ED1F = 20;
  strcpy((char *)&xmmword_259ED08, "{AreaIncidentAgency}");
  byte_259ED37 = 11;
  strcpy((char *)&qword_259ED20, "{IssueTime}");
  byte_259ED4F = 12;
  strcpy((char *)&qword_259ED38, "{UpdateTime}");
  byte_259ED67 = 11;
  strcpy((char *)&qword_259ED50, "{IssueDate}");
  byte_259ED7F = 12;
  strcpy((char *)&qword_259ED68, "{UpdateDate}");
  qword_259ED80 = (uint64_t)operator new(0x20uLL);
  unk_259ED88 = v280;
  strcpy((char *)qword_259ED80, "{AreaIncidentDataSource}");
  byte_259EDAF = 13;
  strcpy((char *)&qword_259ED98, "{AreaHectare}");
  byte_259EDC7 = 10;
  strcpy((char *)&qword_259EDB0, "{AreaAcre}");
  qword_259EDC8 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_259EDD0 = v276;
  strcpy((char *)qword_259EDC8, "{WildfirePercentageContained}");
  qword_259EDE0 = (uint64_t)operator new(0x28uLL);
  unk_259EDE8 = v269[2];
  strcpy((char *)qword_259EDE0, "{WildfireExpectedContainmentDate}");
  qword_259EDF8 = (uint64_t)operator new(0x20uLL);
  unk_259EE00 = v278;
  strcpy((char *)qword_259EDF8, "{ServerRecommendedRouteName}");
  qword_259EE10 = (uint64_t)operator new(0x20uLL);
  unk_259EE18 = v278;
  strcpy((char *)qword_259EE10, "{ServerNonRecommendedRoute1}");
  qword_259EE28 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_259EE30 = v278;
  strcpy((char *)qword_259EE28, "{ServerNonRecommendedRoute2}");
  byte_259EE57 = 12;
  strcpy((char *)&qword_259EE40, "{ClientDest}");
  byte_259EE6F = 6;
  strcpy((char *)&dword_259EE58, "{Name}");
  qword_259EE70 = (uint64_t)operator new(0x20uLL);
  unk_259EE78 = v269[1];
  strcpy((char *)qword_259EE70, "ProactiveAlert_FasterRouteTitle");
  qword_259EE88 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_259EE90 = v277;
  strcpy((char *)qword_259EE88, "ProactiveAlert_RoadClosure");
  qword_259EEA0 = (uint64_t)operator new(0x30uLL);
  unk_259EEA8 = v272;
  strcpy((char *)qword_259EEA0, "ProactiveAlert_UnusuallyHeavyTrafficOnTwo");
  qword_259EEB8 = (uint64_t)operator new(0x28uLL);
  unk_259EEC0 = v275;
  strcpy((char *)qword_259EEB8, "ProactiveAlert_FasterRouteTitle_to_Home");
  qword_259EED0 = (uint64_t)operator new(0x28uLL);
  unk_259EED8 = v275;
  strcpy((char *)qword_259EED0, "ProactiveAlert_FasterRouteTitle_to_Work");
  qword_259EEE8 = (uint64_t)operator new(0x28uLL);
  *(_OWORD *)algn_259EEF0 = v275;
  strcpy((char *)qword_259EEE8, "ProactiveAlert_FasterRouteTitle_to_Name");
  qword_259EF00 = (uint64_t)operator new(0x30uLL);
  unk_259EF08 = xmmword_20B93B0;
  strcpy((char *)qword_259EF00, "ProactiveAlert_FasterRouteTitle_to_StreetName");
  byte_259EF2F = 17;
  strcpy(byte_259EF18, "Proactive_Driving");
  strcpy(&byte_259EF47, "\n{RouteName}");
  strcpy((char *)&qword_259EF30, "_RouteName");
  byte_259EF5F = 11;
  qword_259EF60 = (uint64_t)operator new(0x28uLL);
  unk_259EF68 = v269[2];
  strcpy((char *)qword_259EF60, "Pass_Traffic_Light_Spoken_Primary");
  qword_259EF78 = (uint64_t)operator new(0x20uLL);
  unk_259EF80 = v276;
  strcpy((char *)qword_259EF78, "Pass_Stop_Sign_Spoken_Primary");
  unk_259EF90 = operator new(0x20uLL);
  unk_259EF98 = v269[0];
  strcpy(unk_259EF90, "Pass_Roundabout_Spoken_Primary");
  strcpy(&byte_259EFBF, "\nBannerBody");
  strcpy(byte_259EFA8, "BannerHead");
  strcpy(&byte_259EFD7, "\nBannerDescription");
  byte_259EFEF = 17;
  strcpy(&byte_259F007, "\n_Incident");
  strcpy((char *)&qword_259EFF0, "VoiceAlert");
  strcpy(&byte_259F01F, "\t_Area_Incident");
  byte_259F037 = 14;
  byte_259F04F = 15;
  strcpy((char *)&qword_259F038, "_Area_Incidents");
  strcpy(&byte_259F067, "\t_Crash");
  strcpy((char *)&qword_259F050, "_Accident");
  byte_259F07F = 6;
  byte_259F097 = 16;
  strcpy((char *)&xmmword_259F080, "_Congestion_Zone");
  strcpy(&byte_259F0AF, "\n_Environmental_Zone");
  strcpy((char *)&qword_259F098, "_Toll_Zone");
  byte_259F0C7 = 19;
  BYTE1(qword_259F0D8) = 116;
  WORD1(qword_259F0D8) = 0;
  HIDWORD(qword_259F0D8) = 301989888;
  strcpy(byte_259F0E0, "_Construction");
  strcpy((char *)&qword_259F0C8, "_Incident_Accide");
  byte_259F0F7 = 13;
  byte_259F10F = 7;
  strcpy((char *)&dword_259F0F8, "_Hazard");
  byte_259F127 = 12;
  strcpy((char *)&qword_259F110, "_LaneClosure");
  byte_259F13F = 12;
  strcpy((char *)&qword_259F128, "_LaneTrailer");
  qmemcpy(&byte_259F157, "\t_LaneTrailer", 13);
  strcpy((char *)&qword_259F140, "_Shoulder");
  qword_259F168 = 0x1500007200000000;
  *(void *)algn_259F164 = *(void *)"_Shoulder";
  strcpy((char *)&xmmword_259F170, "_Causing_Traffic_Delay");
  HIBYTE(word_259F186) = 22;
  byte_259F19F = 6;
  strcpy((char *)&dword_259F188, "_Timed");
  byte_259F1B7 = 12;
  strcpy((char *)&qword_259F1A0, "_HasDistance");
  byte_259F1CF = 8;
  strcpy((char *)&qword_259F1B8, "_Closure");
  strcpy(&byte_259F1E7, "\n_BadRoad");
  strcpy((char *)&qword_259F1D0, "_NoReroute");
  byte_259F1FF = 8;
  byte_259F217 = 12;
  strcpy((char *)&qword_259F200, "_TollTrailer");
  byte_259F22F = 12;
  strcpy((char *)&qword_259F218, "_BestTrailer");
  byte_259F247 = 8;
  strcpy((char *)&qword_259F230, "_Trailer");
  byte_259F25F = 18;
  strcpy((char *)&xmmword_259F248, "_Secondary_Trailer");
  byte_259F277 = 8;
  strcpy((char *)&qword_259F260, "_Savings");
  byte_259F28F = 8;
  strcpy((char *)&qword_259F278, "_AltRoad");
  byte_259F2A7 = 6;
  strcpy((char *)&dword_259F290, "_Named");
  byte_259F2BF = 6;
  strcpy((char *)&dword_259F2A8, "_NAMED");
  byte_259F2D7 = 22;
  strcpy((char *)&xmmword_259F2C0, "_Named_Suggested_Route");
  qword_259F2F0 = 0x1000000000000000;
  xmmword_259F2E0 = xmmword_20E81D0;
  byte_259F30F = 11;
  strcpy((char *)&qword_259F2F8, "_Speed_Trap");
  byte_259F327 = 4;
  strcpy((char *)&dword_259F310, "_UGI");
  byte_259F33F = 12;
  strcpy((char *)&qword_259F328, "_Safer_Route");
  qword_259F340 = (uint64_t)operator new(0x20uLL);
  unk_259F348 = v269[1];
  strcpy((char *)qword_259F340, "BlockedRouteByBlockingIncident_");
  qword_259F358 = (uint64_t)operator new(0x28uLL);
  long long v271 = xmmword_20B9280;
  unk_259F360 = xmmword_20B9280;
  strcpy((char *)qword_259F358, "BlockedRouteByManeuverRestriction_");
  qword_259F370 = (uint64_t)operator new(0x20uLL);
  unk_259F378 = v269[0];
  strcpy((char *)qword_259F370, "BlockedRouteByTimeRestriction_");
  qword_259F388 = (uint64_t)operator new(0x28uLL);
  *(_OWORD *)algn_259F390 = xmmword_20B8FD0;
  strcpy((char *)qword_259F388, "SuggestRouteToAvoidBlockingIncident_");
  qword_259F3A0 = (uint64_t)operator new(0x30uLL);
  unk_259F3A8 = xmmword_20B9380;
  strcpy((char *)qword_259F3A0, "SuggestRouteToAvoidBlockingManeuverRestriction_");
  qword_259F3B8 = (uint64_t)operator new(0x30uLL);
  unk_259F3C0 = xmmword_20B93E0;
  strcpy((char *)qword_259F3B8, "SuggestRouteToAvoidBlockingTimeRestriction_");
  byte_259F3E7 = 1;
  word_259F3D0 = 95;
  strcpy((char *)&xmmword_259F3E8, "IncidentsCausingDelay_");
  HIBYTE(word_259F3FE) = 22;
  qword_259F400 = (uint64_t)operator new(0x19uLL);
  unk_259F408 = v281;
  strcpy((char *)qword_259F400, "NonVotableRoadIncident_");
  byte_259F42F = 20;
  strcpy(byte_259F418, "VotableRoadIncident_");
  byte_259F447 = 13;
  strcpy((char *)&qword_259F430, "AreaIncident_");
  byte_259F45F = 15;
  strcpy((char *)&qword_259F448, "CongestionZone_");
  qword_259F460 = (uint64_t)operator new(0x20uLL);
  unk_259F468 = v280;
  strcpy((char *)qword_259F460, "EVModifiedChargingStops_");
  byte_259F48F = 13;
  strcpy((char *)&qword_259F478, "EVDisconnect_");
  byte_259F4A7 = 12;
  strcpy((char *)&qword_259F490, "EVReconnect_");
  qword_259F4A8 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_259F4B0 = v278;
  strcpy((char *)qword_259F4A8, "EVOfflineToOnlineTransition_");
  byte_259F4D7 = 13;
  strcpy((char *)&qword_259F4C0, "EVOfflineSAR_");
  byte_259F4EF = 21;
  strcpy((char *)&xmmword_259F4D8, "EVTowingNotSupported_");
  byte_259F507 = 18;
  strcpy(algn_259F4F0, "EVInfeasibleRoute_");
  qword_259F508 = (uint64_t)operator new(0x38uLL);
  *(_OWORD *)algn_259F510 = xmmword_20B8DF0;
  strcpy((char *)qword_259F508, "SuggestRouteAddingStopsBeforeEVInfeasibleOriginalStop_");
  qword_259F520 = (uint64_t)operator new(0x40uLL);
  unk_259F528 = xmmword_20B98C0;
  strcpy((char *)qword_259F520, "LCSuggestRouteAddingStopsBeforeEVInfeasibleOriginalStop_");
  qword_259F538 = (uint64_t)operator new(0x30uLL);
  unk_259F540 = v273;
  strcpy((char *)qword_259F538, "SuggestRouteAddingStopsForEVInfeasibleRoute_");
  qmemcpy(v269, "InfeasibleRoute_ngStopsForEVInfeSuggestRouteAddi", sizeof(v269));
  qword_259F550 = (uint64_t)operator new(0x30uLL);
  *(_WORD *)&v265[50] = 0;
  *(_DWORD *)&v265[52] = 0;
  *(void *)&v265[56] = 0x8000000000000030;
  unk_259F558 = xmmword_20B9A80;
  strcpy((char *)qword_259F550, "LCSuggestRouteAddingStopsForEVInfeasibleRoute_");
  strcpy(v265, "InfeasibleRoute_dingStopsForEVInLCSuggestRouteAd.");
  qword_259F568 = (uint64_t)operator new(0x30uLL);
  *(_OWORD *)algn_259F570 = v272;
  strcpy((char *)qword_259F568, "SuggestRouteAddingStopsToIncreaseDestSoc_");
  long long v188 = operator new(0x30uLL);
  qword_259F580 = (uint64_t)v188;
  unk_259F588 = v273;
  *long long v188 = v269[2];
  v188[1] = v269[1];
  *(_OWORD *)((char *)v188 + 28) = v269[0];
  *((unsigned char *)v188 + 44) = 0;
  qword_259F598 = (uint64_t)operator new(0x28uLL);
  unk_259F5A0 = v271;
  strcpy((char *)qword_259F598, "SuggestDetourWithHigherArrivalSOC_");
  unint64_t v189 = operator new(0x30uLL);
  qword_259F5B0 = (uint64_t)v189;
  unk_259F5B8 = *(_OWORD *)&v265[48];
  *unint64_t v189 = *(_OWORD *)&v265[32];
  v189[1] = *(_OWORD *)&v265[16];
  *(_OWORD *)((char *)v189 + 30) = *(_OWORD *)v265;
  *((unsigned char *)v189 + 46) = 0;
  qword_259F5C8 = (uint64_t)operator new(0x28uLL);
  *(_OWORD *)algn_259F5D0 = v275;
  strcpy((char *)qword_259F5C8, "SuggestRouteToDestForEVInfeasibleRoute_");
  qword_259F5E0 = (uint64_t)operator new(0x28uLL);
  unk_259F5E8 = v268;
  strcpy((char *)qword_259F5E0, "SuggestRouteRemovingStopsFromEVRoute_");
  qword_259F5F8 = (uint64_t)operator new(0x20uLL);
  unk_259F600 = v280;
  strcpy((char *)qword_259F5F8, "OfflineToOnlineNewRoute_");
  qword_259F610 = (uint64_t)operator new(0x40uLL);
  unk_259F618 = xmmword_20B98C0;
  strcpy((char *)qword_259F610, "SuggestDetourWithHigherArrivalSOCForInfeasibleUserRoute_");
  byte_259F63F = 20;
  strcpy(byte_259F628, "LPR_OFFLINE_REROUTE_");
  byte_259F657 = 16;
  strcpy((char *)&xmmword_259F640, "LPR_OFFLINE_SAR_");
  byte_259F66F = 20;
  strcpy(byte_259F658, "LPR_OFFLINE_REROUTE_");
  byte_259F687 = 16;
  strcpy((char *)&xmmword_259F670, "LPR_OFFLINE_SAR_");
  byte_259F69F = 19;
  strcpy(byte_259F688, "SuggestFasterRoute_");
  qword_259F6A0 = (char *)operator new(0x20uLL);
  xmmword_259F6A8 = v279;
  strcpy(qword_259F6A0, "AreaIncidentSaferReroute_");
  byte_259F6CF = 12;
  strcpy((char *)&qword_259F6B8, "_Remove_Stop");
  byte_259F6E7 = 13;
  strcpy((char *)&qword_259F6D0, "_Remove_Stops");
  strcpy(&byte_259F6FF, "\t_Add_Stops");
  strcpy((char *)&qword_259F6E8, "_Add_Stop");
  strcpy(&byte_259F717, "\n_Change_Route");
  byte_259F72F = 13;
  byte_259F747 = 15;
  strcpy((char *)&qword_259F730, "_Different_Stop");
  byte_259F75F = 16;
  strcpy((char *)&xmmword_259F748, "_Different_Stops");
  byte_259F777 = 15;
  strcpy((char *)&qword_259F760, "_EV_Remove_Stop");
  byte_259F78F = 16;
  strcpy((char *)&xmmword_259F778, "_EV_Remove_Stops");
  byte_259F7A7 = 12;
  strcpy((char *)&qword_259F790, "_EV_Add_Stop");
  byte_259F7BF = 13;
  strcpy((char *)&qword_259F7A8, "_EV_Add_Stops");
  byte_259F7D7 = 15;
  strcpy((char *)&qword_259F7C0, "_EV_Low_Battery");
  byte_259F7EF = 14;
  strcpy((char *)&qword_259F7D8, "_EV_Infeasible");
  byte_259F807 = 15;
  strcpy((char *)&qword_259F7F0, "_EV_Last_Chance");
  qword_259F808 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_259F810 = v280;
  strcpy((char *)qword_259F808, "_EV_Low_Battery_Add_Stop");
  uint64_t v190 = qword_259F708;
  qword_259F820 = (uint64_t)operator new(0x20uLL);
  unk_259F828 = v279;
  strcpy((char *)qword_259F820, "_EV_Low_Battery_Add_Stops");
  qword_259F838 = (uint64_t)operator new(0x19uLL);
  unk_259F840 = v281;
  strcpy((char *)qword_259F838, "_EV_Infeasible_Add_Stop");
  int v191 = byte_259F717;
  if (byte_259F717 >= 0) {
    size_t v192 = byte_259F717;
  }
  else {
    size_t v192 = v190;
  }
  unint64_t v193 = v192 + 14;
  if (v192 + 14 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v193 >= 0x17)
  {
    uint64_t v196 = (v193 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v193 | 7) != 0x17) {
      uint64_t v196 = v193 | 7;
    }
    uint64_t v197 = v196 + 1;
    int v198 = (char *)operator new(v196 + 1);
    qword_259F858 = v192 + 14;
    unk_259F860 = v197 | 0x8000000000000000;
    qword_259F850 = (uint64_t)v198;
    qmemcpy(v198, "_EV_Infeasible", 14);
    int v194 = v198 + 14;
  }
  else
  {
    BYTE1(qword_259F858) = 0;
    WORD1(qword_259F858) = 0;
    HIDWORD(qword_259F858) = 0;
    unk_259F860 = 0;
    byte_259F867 = v192 + 14;
    strcpy((char *)&qword_259F850, "_EV_Infe");
    int v194 = (char *)&qword_259F858 + 6;
    if (!v192)
    {
      char v195 = 1;
      goto LABEL_425;
    }
  }
  if (v191 >= 0) {
    uint64_t v199 = (uint64_t)&qword_259F700;
  }
  else {
    uint64_t v199 = 0x6F74535F6464415FLL;
  }
  memmove(v194, (const void *)v199, v192);
  char v195 = 0;
LABEL_425:
  v194[v192] = 0;
  unsigned __int8 v200 = (char *)operator new(0x20uLL);
  qword_259F868 = (uint64_t)v200;
  *(_OWORD *)algn_259F870 = v280;
  *(void *)unsigned __int8 v200 = qword_259F7F0;
  *(void *)(v200 + 7) = *(uint64_t *)((char *)&qword_259F7F0 + 7);
  *(void *)(v200 + 15) = qword_259F6E8;
  v200[23] = word_259F6F0;
  v200[24] = 0;
  unint64_t v201 = v192 + 15;
  if (v192 + 15 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v201 > 0x16)
  {
    uint64_t v203 = (v201 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v201 | 7) != 0x17) {
      uint64_t v203 = v201 | 7;
    }
    uint64_t v204 = v203 + 1;
    uint64_t v202 = (uint64_t *)operator new(v203 + 1);
    qword_259F888 = v192 + 15;
    unk_259F890 = v204 | 0x8000000000000000;
    qword_259F880 = (uint64_t)v202;
  }
  else
  {
    uint64_t v202 = &qword_259F880;
    qword_259F888 = 0;
    unk_259F890 = 0;
    qword_259F880 = 0;
    byte_259F897 = v192 + 15;
  }
  *uint64_t v202 = qword_259F7F0;
  *(uint64_t *)((char *)v202 + 7) = *(uint64_t *)((char *)&qword_259F7F0 + 7);
  uint64_t v205 = (char *)v202 + 15;
  if ((v195 & 1) == 0)
  {
    if (v191 >= 0) {
      int v206 = &qword_259F700;
    }
    else {
      int v206 = (uint64_t *)qword_259F700;
    }
    memmove((char *)v202 + 15, v206, v192);
  }
  v205[v192] = 0;
  byte_259F8AF = 17;
  strcpy((char *)&xmmword_259F898, "_EV_Forced_Detour");
  qword_259F8B0 = (uint64_t)operator new(0x20uLL);
  unk_259F8B8 = v279;
  strcpy((char *)qword_259F8B0, "_EV_Higher_Arrival_Charge");
  qword_259F8C8 = (uint64_t)operator new(0x28uLL);
  unk_259F8D0 = xmmword_20B8FD0;
  strcpy((char *)qword_259F8C8, "_EV_Infeasible_Higher_Arrival_Charge");
  byte_259F8F7 = 16;
  strcpy(byte_259F8E0, "_EV_Out_Of_Range");
  qword_259F8F8 = (uint64_t)operator new(0x20uLL);
  unk_259F900 = v274;
  strcpy((char *)qword_259F8F8, "_EV_Last_Chance_Take_Detour");
  strcpy(byte_259F910, "_EV_Forced_Modify_Stop");
  HIBYTE(word_259F926) = 22;
  qword_259F928 = (uint64_t)operator new(0x19uLL);
  unk_259F930 = v281;
  strcpy((char *)qword_259F928, "_EV_Forced_Modify_Stops");
  byte_259F957 = 19;
  strcpy(byte_259F940, "_EV_Forced_Add_Stop");
  byte_259F96F = 20;
  strcpy((char *)&xmmword_259F958, "_EV_Forced_Add_Stops");
  byte_259F987 = 21;
  strcpy(byte_259F970, "_EV_Battery_Info_Lost");
  qword_259F988 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_259F990 = v279;
  strcpy((char *)qword_259F988, "_EV_Battery_Info_Restored");
  qword_259F9A0 = (uint64_t)operator new(0x20uLL);
  unk_259F9A8 = v280;
  strcpy((char *)qword_259F9A0, "_EV_Towing_Not_Supported");
  qword_259F9B8 = (uint64_t)operator new(0x28uLL);
  unk_259F9C0 = v270;
  strcpy((char *)qword_259F9B8, "_EV_Offline_to_Online_Transition");
  byte_259F9E7 = 15;
  strcpy((char *)&qword_259F9D0, "_EV_Offline_SAR");
  qword_259F9E8 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_259F9F0 = v278;
  strcpy((char *)qword_259F9E8, "_Offline_to_Online_New_Route");
  byte_259FA17 = 12;
  strcpy((char *)&qword_259FA00, "BannerButton");
  byte_259FA2F = 8;
  strcpy((char *)&qword_259FA18, "_Dismiss");
  byte_259FA47 = 3;
  word_259FA30 = 20319;
  byte_259FA32 = 75;
  byte_259FA33 = 0;
  byte_259FA5F = 11;
  strcpy((char *)&qword_259FA48, "_Still_Here");
  byte_259FA77 = 8;
  strcpy((char *)&qword_259FA60, "_Cleared");
  qmemcpy(&byte_259FA8F, "\nBannerButton", 13);
  strcpy((char *)&qword_259FA78, "_No_Thanks");
  uint64_t v207 = qword_259FA08;
  qword_259FAA0 = 0x1400000000000000;
  *(void *)algn_259FA9C = 0x7373696D7369445FLL;
  qword_259FAB8 = 0xF00000000000000;
  qword_259FAB0 = 0x4B4F5F6E6F7474;
  int v208 = byte_259F7A7;
  if (byte_259F7A7 >= 0) {
    size_t v209 = byte_259F7A7;
  }
  else {
    size_t v209 = qword_259F798;
  }
  unint64_t v210 = v209 + 12;
  qword_259FAA8 = *(void *)"BannerButton";
  if (v209 + 12 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v210 >= 0x17)
  {
    uint64_t v212 = (v210 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v210 | 7) != 0x17) {
      uint64_t v212 = v210 | 7;
    }
    uint64_t v213 = v212 + 1;
    int v214 = (char *)operator new(v212 + 1);
    qword_259FAC8 = v209 + 12;
    unk_259FAD0 = v213 | 0x8000000000000000;
    qword_259FAC0 = (uint64_t)v214;
    *((_DWORD *)v214 + 2) = 1852798068;
    *(void *)int v214 = *(void *)"BannerButton";
    uint64_t v211 = v214 + 12;
  }
  else
  {
    BYTE5(qword_259FAC8) = 0;
    HIWORD(qword_259FAC8) = 0;
    unk_259FAD0 = 0;
    byte_259FAD7 = v209 + 12;
    strcpy((char *)&qword_259FAC0, "BannerButton");
    uint64_t v211 = (char *)&qword_259FAC8 + 4;
    if (!v209) {
      goto LABEL_450;
    }
  }
  if (v208 >= 0) {
    size_t v215 = &qword_259F790;
  }
  else {
    size_t v215 = (uint64_t *)qword_259F790;
  }
  memmove(v211, v215, v209);
LABEL_450:
  v211[v209] = 0;
  int v216 = byte_259F7BF;
  if (byte_259F7BF >= 0) {
    size_t v217 = byte_259F7BF;
  }
  else {
    size_t v217 = unk_259F7B0;
  }
  unint64_t v218 = v217 + 12;
  if (v217 + 12 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v218 >= 0x17)
  {
    uint64_t v220 = (v218 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v218 | 7) != 0x17) {
      uint64_t v220 = v218 | 7;
    }
    uint64_t v221 = v220 + 1;
    int v222 = (char *)operator new(v220 + 1);
    qword_259FAE0 = v217 + 12;
    unk_259FAE8 = v221 | 0x8000000000000000;
    qword_259FAD8 = (uint64_t)v222;
    *(void *)int v222 = qword_259FA00;
    *((_DWORD *)v222 + 2) = qword_259FA08;
    uint64_t v219 = v222 + 12;
  }
  else
  {
    qword_259FAE0 = 0;
    unk_259FAE8 = 0;
    byte_259FAEF = v217 + 12;
    LODWORD(qword_259FAE0) = qword_259FA08;
    qword_259FAD8 = qword_259FA00;
    uint64_t v219 = (char *)&qword_259FAE0 + 4;
    if (!v217) {
      goto LABEL_464;
    }
  }
  if (v216 >= 0) {
    size_t v223 = &qword_259F7A8;
  }
  else {
    size_t v223 = (uint64_t *)qword_259F7A8;
  }
  memmove(v219, v223, v217);
LABEL_464:
  v219[v217] = 0;
  int v224 = byte_259F777;
  if (byte_259F777 >= 0) {
    size_t v225 = byte_259F777;
  }
  else {
    size_t v225 = unk_259F768;
  }
  unint64_t v226 = v225 + 12;
  if (v225 + 12 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v226 >= 0x17)
  {
    uint64_t v228 = (v226 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v226 | 7) != 0x17) {
      uint64_t v228 = v226 | 7;
    }
    uint64_t v229 = v228 + 1;
    int v230 = (char *)operator new(v228 + 1);
    qword_259FAF8 = v225 + 12;
    unk_259FB00 = v229 | 0x8000000000000000;
    qword_259FAF0 = (uint64_t)v230;
    *(void *)int v230 = qword_259FA00;
    *((_DWORD *)v230 + 2) = qword_259FA08;
    uint64_t v227 = v230 + 12;
  }
  else
  {
    qword_259FAF8 = 0;
    unk_259FB00 = 0;
    byte_259FB07 = v225 + 12;
    LODWORD(qword_259FAF8) = qword_259FA08;
    qword_259FAF0 = qword_259FA00;
    uint64_t v227 = (char *)&qword_259FAF8 + 4;
    if (!v225) {
      goto LABEL_478;
    }
  }
  if (v224 >= 0) {
    size_t v231 = &qword_259F760;
  }
  else {
    size_t v231 = (uint64_t *)qword_259F760;
  }
  memmove(v227, v231, v225);
LABEL_478:
  v227[v225] = 0;
  int v232 = byte_259FA17;
  if (byte_259FA17 >= 0) {
    size_t v233 = byte_259FA17;
  }
  else {
    size_t v233 = v207;
  }
  int v234 = byte_259F78F;
  if (byte_259F78F >= 0) {
    size_t v235 = byte_259F78F;
  }
  else {
    size_t v235 = *((void *)&xmmword_259F778 + 1);
  }
  unint64_t v236 = v235 + v233;
  if (v235 + v233 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v236 <= 0x16)
  {
    v237 = &qword_259FB08;
    qword_259FB10 = 0;
    unk_259FB18 = 0;
    qword_259FB08 = 0;
    byte_259FB1F = v235 + v233;
    if (!v233) {
      goto LABEL_491;
    }
    goto LABEL_487;
  }
  uint64_t v244 = (v236 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v236 | 7) != 0x17) {
    uint64_t v244 = v236 | 7;
  }
  uint64_t v245 = v244 + 1;
  v237 = (uint64_t *)operator new(v244 + 1);
  qword_259FB10 = v235 + v233;
  unk_259FB18 = v245 | 0x8000000000000000;
  qword_259FB08 = (uint64_t)v237;
  if (v233)
  {
LABEL_487:
    if (v232 >= 0) {
      v238 = &qword_259FA00;
    }
    else {
      v238 = (uint64_t *)qword_259FA00;
    }
    memmove(v237, v238, v233);
  }
LABEL_491:
  unint64_t v239 = (char *)v237 + v233;
  if (v235)
  {
    if (v234 >= 0) {
      v240 = &xmmword_259F778;
    }
    else {
      v240 = (long long *)xmmword_259F778;
    }
    memmove(v239, v240, v235);
  }
  v239[v235] = 0;
  unint64_t v241 = v233 + 11;
  if (v233 + 11 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v241 >= 0x17)
  {
    uint64_t v246 = (v241 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v241 | 7) != 0x17) {
      uint64_t v246 = v241 | 7;
    }
    uint64_t v247 = v246 + 1;
    uint64_t v242 = (uint64_t *)operator new(v246 + 1);
    qword_259FB28 = v233 + 11;
    unk_259FB30 = v247 | 0x8000000000000000;
    qword_259FB20 = (uint64_t)v242;
  }
  else
  {
    uint64_t v242 = &qword_259FB20;
    qword_259FB28 = 0;
    unk_259FB30 = 0;
    qword_259FB20 = 0;
    byte_259FB37 = v233 + 11;
    if (!v233)
    {
      *(_DWORD *)((char *)&qword_259FB20 + 7) = *(_DWORD *)((char *)&qword_259FA48 + 7);
      qword_259FB20 = qword_259FA48;
      BYTE3(qword_259FB28) = 0;
      LOBYTE(v243) = 8;
      goto LABEL_512;
    }
  }
  if (v232 >= 0) {
    int v248 = &qword_259FA00;
  }
  else {
    int v248 = (uint64_t *)qword_259FA00;
  }
  memmove(v242, v248, v233);
  v249 = (char *)v242 + v233;
  int v250 = *(_DWORD *)((char *)&qword_259FA48 + 7);
  *(void *)v249 = qword_259FA48;
  *(_DWORD *)(v249 + 7) = v250;
  v249[11] = 0;
  unint64_t v243 = v233 + 8;
  if (v233 + 8 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v243 <= 0x16)
  {
LABEL_512:
    v251 = &qword_259FB38;
    qword_259FB40 = 0;
    unk_259FB48 = 0;
    qword_259FB38 = 0;
    byte_259FB4F = v243;
    if (!v233) {
      goto LABEL_517;
    }
    goto LABEL_513;
  }
  uint64_t v263 = (v243 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v243 | 7) != 0x17) {
    uint64_t v263 = v243 | 7;
  }
  uint64_t v264 = v263 + 1;
  v251 = (uint64_t *)operator new(v263 + 1);
  qword_259FB40 = v233 + 8;
  unk_259FB48 = v264 | 0x8000000000000000;
  qword_259FB38 = (uint64_t)v251;
  if (v233)
  {
LABEL_513:
    if (v232 >= 0) {
      int v252 = &qword_259FA00;
    }
    else {
      int v252 = (uint64_t *)qword_259FA00;
    }
    memmove(v251, v252, v233);
  }
LABEL_517:
  size_t v253 = (char *)v251 + v233;
  *(void *)size_t v253 = qword_259FA60;
  v253[8] = 0;
  int v254 = byte_259FA8F;
  if (byte_259FA8F >= 0) {
    size_t v255 = byte_259FA8F;
  }
  else {
    size_t v255 = qword_259FA80;
  }
  unint64_t v256 = v255 + v233;
  if (v255 + v233 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v256 <= 0x16)
  {
    v257 = &qword_259FB50;
    qword_259FB58 = 0;
    unk_259FB60 = 0;
    qword_259FB50 = 0;
    byte_259FB67 = v255 + v233;
    if (!v233) {
      goto LABEL_527;
    }
    goto LABEL_523;
  }
  uint64_t v261 = (v256 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v256 | 7) != 0x17) {
    uint64_t v261 = v256 | 7;
  }
  uint64_t v262 = v261 + 1;
  v257 = (uint64_t *)operator new(v261 + 1);
  qword_259FB58 = v255 + v233;
  unk_259FB60 = v262 | 0x8000000000000000;
  qword_259FB50 = (uint64_t)v257;
  if (v233)
  {
LABEL_523:
    if (v232 >= 0) {
      v258 = &qword_259FA00;
    }
    else {
      v258 = (uint64_t *)qword_259FA00;
    }
    memmove(v257, v258, v233);
  }
LABEL_527:
  v259 = (char *)v257 + v233;
  if (v255)
  {
    if (v254 >= 0) {
      uint64_t v260 = &qword_259FA78;
    }
    else {
      uint64_t v260 = (uint64_t *)qword_259FA78;
    }
    memmove(v259, v260, v255);
  }
  v259[v255] = 0;
  strcpy(&byte_259FB7F, "\n{newroute}");
  strcpy((char *)&qword_259FB68, "{roadname}");
  strcpy(&byte_259FB97, "\n{count}");
  byte_259FBAF = 7;
  strcpy(&byte_259FBC7, "\n{dur}");
  strcpy((char *)&qword_259FBB0, "{duration}");
  byte_259FBDF = 5;
  qword_259FBE0 = (uint64_t)operator new(0x20uLL);
  unk_259FBE8 = v277;
  strcpy((char *)qword_259FBE0, "{PleaseProceedWithCaution}");
  byte_259FC0F = 15;
  strcpy((char *)&qword_259FBF8, "{UserRouteName}");
  byte_259FC27 = 20;
  strcpy((char *)&xmmword_259FC10, "{SuggestedRouteName}");
  byte_259FC3F = 18;
  strcpy(byte_259FC28, "Speed_Camera_Ahead");
  qword_259FC40 = (uint64_t)operator new(0x20uLL);
  unk_259FC48 = v276;
  strcpy((char *)qword_259FC40, "Red_Light_Camera_Ahead_Spoken");
  qword_259FC58 = (uint64_t)operator new(0x20uLL);
  unk_259FC60 = v276;
  strcpy((char *)qword_259FC58, "Stop_Sign_Camera_Ahead_Spoken");
  qword_259FC70 = (uint64_t)operator new(0x28uLL);
  unk_259FC78 = v271;
  strcpy((char *)qword_259FC70, "Speed_Camera_Ahead_Multiple_Spoken");
  qword_259FC88 = (uint64_t)operator new(0x28uLL);
  *(_OWORD *)algn_259FC90 = v266;
  strcpy((char *)qword_259FC88, "Red_Light_Camera_Ahead_Multiple_Spoken");
  qword_259FCA0 = (uint64_t)operator new(0x20uLL);
  unk_259FCA8 = v278;
  strcpy((char *)qword_259FCA0, "Camera_Ahead_Multiple_Spoken");
  qword_259FCB8 = (uint64_t)operator new(0x30uLL);
  unk_259FCC0 = v267;
  strcpy((char *)qword_259FCB8, "Red_Light_Camera_Speed_Camera_Ahead_Spoken");
  qword_259FCD0 = (char *)operator new(0x30uLL);
  strcpy(qword_259FCD0, "Stop_Sign_Camera_Speed_Camera_Ahead_Spoken");
  byte_259FCFF = 16;
  xmmword_259FCD8 = v267;
  strcpy(byte_259FCE8, "_Speed_Limit_Mph");
  byte_259FD17 = 16;
  strcpy(byte_259FD00, "_Speed_Limit_Kph");
  byte_259FD2F = 11;
  strcpy((char *)&qword_259FD18, "Watch_Speed");
  byte_259FD47 = 4;
  strcpy((char *)&dword_259FD30, "_One");
  byte_259FD5F = 4;
  strcpy((char *)&dword_259FD48, "_Two");
  byte_259FD77 = 4;
  strcpy((char *)&dword_259FD60, "_Few");
  byte_259FD8F = 5;
  strcpy((char *)&dword_259FD78, "_Many");
  byte_259FDA7 = 6;
  strcpy((char *)&dword_259FD90, "_Other");
  byte_259FDBF = 4;
  strcpy((char *)&dword_259FDA8, "_ONE");
  byte_259FDD7 = 7;
  strcpy((char *)&dword_259FDC0, "{Speed}");
  byte_259FDEF = 8;
  strcpy((char *)&qword_259FDD8, "Dismount");
  byte_259FE07 = 4;
  strcpy((char *)&dword_259FDF0, "Walk");
  byte_259FE1F = 5;
  strcpy((char *)&dword_259FE08, "Mount");
  byte_259FE37 = 7;
  strcpy((char *)&dword_259FE20, "Remount");
  strcpy(&byte_259FE4F, "\t_Crosswalk");
  strcpy((char *)&qword_259FE38, "Walk_Road");
  strcpy(&byte_259FE67, "\n_PLURAL");
  byte_259FE7F = 7;
  strcpy(&byte_259FE97, "\n{description1}");
  strcpy((char *)&qword_259FE80, "_SECONDARY");
  byte_259FEAF = 14;
  byte_259FEC7 = 14;
  strcpy((char *)&qword_259FEB0, "{description2}");
  byte_259FEDF = 21;
  strcpy((char *)&xmmword_259FEC8, "TWO_ROAD_DESCRIPTIONS");
  byte_259FEF7 = 17;
  strcpy((char *)&xmmword_259FEE0, "{SlopePercentage}");
  byte_259FF0F = 15;
  strcpy((char *)&qword_259FEF8, "_Protected_Lane");
  strcpy(&byte_259FF27, "\n_Paved_Path");
  strcpy((char *)&qword_259FF10, "_Bike_Path");
  byte_259FF3F = 11;
  byte_259FF57 = 15;
  strcpy((char *)&qword_259FF40, "_Dedicated_Lane");
  byte_259FF6F = 12;
  strcpy((char *)&qword_259FF58, "_Shared_Path");
  strcpy(&byte_259FF87, "\n_UnnamedRoad");
  strcpy((char *)&qword_259FF70, "_Bike_Lane");
  byte_259FF9F = 12;
  byte_259FFB7 = 5;
  strcpy((char *)&dword_259FFA0, "_Path");
  byte_259FFCF = 6;
  strcpy((char *)&dword_259FFB8, "_Trail");
  strcpy(&byte_259FFE7, "\t_Plaza");
  strcpy((char *)&qword_259FFD0, "_Sidewalk");
  byte_259FFFF = 6;
  byte_25A0017 = 15;
  strcpy((char *)&qword_25A0000, "_Moving_Walkway");
  byte_25A002F = 14;
  strcpy((char *)&qword_25A0018, "Two_Stage_Turn");
  byte_25A0047 = 16;
  strcpy((char *)&xmmword_25A0030, "{OptionalPeriod}");
  byte_25A005F = 18;
  strcpy((char *)&xmmword_25A0048, "Advisory_Separator");
  byte_25A0077 = 6;
  strcpy((char *)&dword_25A0060, "Period");
  byte_25A008F = 21;
  strcpy((char *)&xmmword_25A0078, "Advisory_Title_Notice");
  strcpy((char *)&xmmword_25A0090, "Advisory_Title_Notices");
  HIBYTE(word_25A00A6) = 22;
  byte_25A00BF = 7;
  strcpy((char *)&dword_25A00A8, "_DETAIL");
  byte_25A00D7 = 17;
  strcpy((char *)&xmmword_25A00C0, "_LONG_REGION_LIST");
  byte_25A00EF = 16;
  strcpy((char *)&xmmword_25A00D8, "Advisory_Grouped");
  byte_25A0107 = 11;
  strcpy((char *)&qword_25A00F0, "_Advisories");
  qword_25A0108 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_25A0110 = v274;
  strcpy((char *)qword_25A0108, "Advisory_WILDFIRE_METADATA_");
  byte_25A0137 = 8;
  strcpy((char *)&qword_25A0120, "Advisory");
  byte_25A014F = 13;
  strcpy((char *)&qword_25A0138, "MPR_NUM_STOPS");
  byte_25A0167 = 17;
  strcpy(algn_25A0150, "EV_CHARGE_STATION");
  byte_25A017F = 11;
  strcpy((char *)&qword_25A0168, "_NAMED_CITY");
  byte_25A0197 = 5;
  strcpy((char *)&dword_25A0180, "_Stop");
  strcpy(&byte_25A01AF, "\n{StopsCount}");
  strcpy((char *)&qword_25A0198, "{CityName}");
  byte_25A01C7 = 12;
  byte_25A01DF = 11;
  strcpy((char *)&qword_25A01C8, "_With_Other");
  byte_25A01F7 = 15;
  strcpy((char *)&qword_25A01E0, "{DepartureTime}");
  qword_25A01F8 = (uint64_t)operator new(0x28uLL);
  unk_25A0200 = v275;
  strcpy((char *)qword_25A01F8, "Ending_Charge_Station_Port_Availability");
  qword_25A0210 = (uint64_t)operator new(0x28uLL);
  unk_25A0218 = v268;
  strcpy((char *)qword_25A0210, "Ending_Charge_Station_No_Availability");
  qword_25A0228 = (uint64_t)operator new(0x28uLL);
  unk_25A0230 = v271;
  strcpy((char *)qword_25A0228, "Ending_Charge_Station_No_Real_Time");
  byte_25A0257 = 16;
  strcpy(byte_25A0240, "{AvailablePorts}");
  byte_25A026F = 12;
  strcpy((char *)&qword_25A0258, "{TotalPorts}");
  byte_25A0287 = 14;
  strcpy((char *)&qword_25A0270, "{ManeuverIcon}");
  qword_25A0288 = (uint64_t)operator new(0x38uLL);
  *(_OWORD *)algn_25A0290 = xmmword_20B9A60;
  strcpy((char *)qword_25A0288, "Walking_Distance_ManeuverIcon_PrimaryInstruction");
  qword_25A02A0 = (uint64_t)operator new(0x20uLL);
  unk_25A02A8 = v274;
  strcpy((char *)qword_25A02A0, "Walking_Destination_Unnamed");
  qword_25A02B8 = (uint64_t)operator new(0x20uLL);
  unk_25A02C0 = v276;
  strcpy((char *)qword_25A02B8, "TrafficDelay_Label_Title_Sign");
  qword_25A02D0 = (uint64_t)operator new(0x20uLL);
  unk_25A02D8 = v278;
  strcpy((char *)qword_25A02D0, "Special_Guidance_Instruction");
  byte_25A02FF = 2;
  strcpy((char *)&word_25A02E8, "CZ");
  byte_25A0317 = 3;
  dword_25A0300 = 5919811;
  unk_25A032F = 3;
  dword_25A0318 = 6243649;
  byte_25A0347 = 0;
  byte_25A035F = 7;
  strcpy((char *)&dword_25A0348, "TRANSIT");
  byte_25A0377 = 7;
  strcpy((char *)&dword_25A0360, "OFFLINE");
  qword_25A0378 = (uint64_t)operator new(0x28uLL);
  unk_25A0380 = v266;
  strcpy((char *)qword_25A0378, "Advisory_Card_French_Climate_Law_Title");
  qword_25A0390 = (uint64_t)operator new(0x30uLL);
  unk_25A0398 = xmmword_20B93C0;
  strcpy((char *)qword_25A0390, "Advisory_Card_French_Climate_Law_Details");
  qword_25A03A8 = (uint64_t)operator new(0x30uLL);
  *(_OWORD *)algn_25A03B0 = v272;
  strcpy((char *)qword_25A03A8, "French_Climate_Law_Metadata_Weblink_Title");
  qword_25A03C0 = (uint64_t)operator new(0x20uLL);
  unk_25A03C8 = v278;
  strcpy((char *)qword_25A03C0, "{ClimateLawLearnMoreWeblink}");
  byte_25A03EF = 3;
  dword_25A03D8 = 4280902;
  qword_25A03F0 = (uint64_t)operator new(0x70uLL);
  unk_25A03F8 = xmmword_20E81E0;
  strcpy((char *)qword_25A03F0, "https://www.vie-publique.fr/loi/278460-loi-22-aout-2021-climat-et-resilience-convention-citoyenne-climat");
  *((unsigned char *)&__dst.__r_.__value_.__s + 23) = 7;
  strcpy((char *)&__dst, "UNKNOWN");
  *(_DWORD *)uint64_t v284 = 0;
  HIBYTE(v285[0]) = 14;
  strcpy(&v284[8], "ROUTES_THROUGH");
  LODWORD(v285[1]) = 1;
  v286[23] = 9;
  strcpy(v286, "ROUTES_TO");
  LODWORD(v287) = 3;
  HIBYTE(v289) = 11;
  strcpy((char *)v288, "ROUTES_FROM");
  LODWORD(v290) = 2;
  xmmword_25A0408 = 0u;
  xmmword_25A0418 = 0u;
  dword_25A0428 = 1065353216;
  sub_3A6EF0((uint64_t)&xmmword_25A0408, (uint64_t)&__dst, (uint64_t)&__dst);
  sub_3A6EF0((uint64_t)&xmmword_25A0408, (uint64_t)&v284[8], (uint64_t)&v284[8]);
  sub_3A6EF0((uint64_t)&xmmword_25A0408, (uint64_t)v286, (uint64_t)v286);
  sub_3A6EF0((uint64_t)&xmmword_25A0408, (uint64_t)v288, (uint64_t)v288);
  if (SHIBYTE(v289) < 0)
  {
    operator delete(v288[0]);
    if ((v286[23] & 0x80000000) == 0)
    {
LABEL_534:
      if ((SHIBYTE(v285[0]) & 0x80000000) == 0) {
        goto LABEL_535;
      }
      goto LABEL_547;
    }
  }
  else if ((v286[23] & 0x80000000) == 0)
  {
    goto LABEL_534;
  }
  operator delete(*(void **)v286);
  if ((SHIBYTE(v285[0]) & 0x80000000) == 0)
  {
LABEL_535:
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_548:
    operator delete(__dst.__r_.__value_.__l.__data_);
    return;
  }
LABEL_547:
  operator delete(*(void **)&v284[8]);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_548;
  }
}

void sub_680448(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,void *a62,uint64_t a63)
{
  if (SLOBYTE(STACK[0x3B7]) < 0)
  {
    operator delete((void *)STACK[0x3A0]);
    if ((SLOBYTE(STACK[0x39F]) & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else if ((SLOBYTE(STACK[0x39F]) & 0x80000000) == 0)
  {
LABEL_3:
    if (SLOBYTE(STACK[0x387]) < 0) {
      goto LABEL_4;
    }
    goto LABEL_18;
  }
  operator delete((void *)STACK[0x388]);
  if (SLOBYTE(STACK[0x387]) < 0)
  {
LABEL_4:
    operator delete((void *)STACK[0x370]);
    if ((SLOBYTE(STACK[0x36F]) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  if ((SLOBYTE(STACK[0x36F]) & 0x80000000) == 0)
  {
LABEL_5:
    if (SLOBYTE(STACK[0x357]) < 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  operator delete((void *)STACK[0x358]);
  if (SLOBYTE(STACK[0x357]) < 0)
  {
LABEL_6:
    operator delete((void *)STACK[0x340]);
    if ((SLOBYTE(STACK[0x33F]) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  if ((SLOBYTE(STACK[0x33F]) & 0x80000000) == 0)
  {
LABEL_7:
    if (SLOBYTE(STACK[0x327]) < 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  operator delete((void *)STACK[0x328]);
  if (SLOBYTE(STACK[0x327]) < 0)
  {
LABEL_8:
    operator delete((void *)STACK[0x310]);
    if ((SLOBYTE(STACK[0x30F]) & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  if ((SLOBYTE(STACK[0x30F]) & 0x80000000) == 0)
  {
LABEL_9:
    if (SLOBYTE(STACK[0x2F7]) < 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  operator delete((void *)STACK[0x2F8]);
  if (SLOBYTE(STACK[0x2F7]) < 0)
  {
LABEL_10:
    operator delete((void *)STACK[0x2E0]);
    if ((SLOBYTE(STACK[0x2DF]) & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  if ((SLOBYTE(STACK[0x2DF]) & 0x80000000) == 0)
  {
LABEL_11:
    if (SLOBYTE(STACK[0x2C7]) < 0) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_25:
  operator delete((void *)STACK[0x2C8]);
  if (SLOBYTE(STACK[0x2C7]) < 0)
  {
LABEL_12:
    operator delete((void *)STACK[0x2B0]);
    if ((SLOBYTE(STACK[0x2AF]) & 0x80000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_27;
  }
LABEL_26:
  if ((SLOBYTE(STACK[0x2AF]) & 0x80000000) == 0)
  {
LABEL_13:
    if (SLOBYTE(STACK[0x297]) < 0) {
      goto LABEL_14;
    }
    goto LABEL_28;
  }
LABEL_27:
  operator delete((void *)STACK[0x298]);
  if (SLOBYTE(STACK[0x297]) < 0)
  {
LABEL_14:
    operator delete((void *)STACK[0x280]);
    if (SLOBYTE(STACK[0x27F]) < 0)
    {
LABEL_36:
      operator delete((void *)STACK[0x268]);
      if ((SLOBYTE(STACK[0x267]) & 0x80000000) == 0)
      {
LABEL_37:
        if (SLOBYTE(STACK[0x24F]) < 0)
        {
LABEL_38:
          operator delete((void *)STACK[0x238]);
          if ((SLOBYTE(STACK[0x237]) & 0x80000000) == 0)
          {
LABEL_39:
            if (SLOBYTE(STACK[0x21F]) < 0)
            {
LABEL_40:
              operator delete((void *)STACK[0x208]);
              if ((SLOBYTE(STACK[0x207]) & 0x80000000) == 0)
              {
LABEL_41:
                if (a72 < 0) {
                  goto LABEL_42;
                }
                goto LABEL_44;
              }
LABEL_34:
              operator delete(a73);
              if (a72 < 0)
              {
LABEL_42:
                operator delete(a71);
                if ((a70 & 0x80000000) == 0) {
                  goto LABEL_43;
                }
                goto LABEL_45;
              }
LABEL_44:
              if ((a70 & 0x80000000) == 0) {
LABEL_43:
              }
                _Unwind_Resume(a1);
LABEL_45:
              operator delete(a65);
              _Unwind_Resume(a1);
            }
LABEL_33:
            if ((SLOBYTE(STACK[0x207]) & 0x80000000) == 0) {
              goto LABEL_41;
            }
            goto LABEL_34;
          }
LABEL_32:
          operator delete((void *)STACK[0x220]);
          if (SLOBYTE(STACK[0x21F]) < 0) {
            goto LABEL_40;
          }
          goto LABEL_33;
        }
LABEL_31:
        if ((SLOBYTE(STACK[0x237]) & 0x80000000) == 0) {
          goto LABEL_39;
        }
        goto LABEL_32;
      }
LABEL_30:
      operator delete((void *)STACK[0x250]);
      if (SLOBYTE(STACK[0x24F]) < 0) {
        goto LABEL_38;
      }
      goto LABEL_31;
    }
LABEL_29:
    if ((SLOBYTE(STACK[0x267]) & 0x80000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_30;
  }
LABEL_28:
  if (SLOBYTE(STACK[0x27F]) < 0) {
    goto LABEL_36;
  }
  goto LABEL_29;
}

void *sub_6807A0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *a1 = a3;
  sub_675628(a1 + 1, a2, *(unsigned __int8 *)(a4 + 1424));
  return a1;
}

void sub_6807D0(uint64_t *a1, void *a2)
{
  uint64_t v2 = a2[133];
  uint64_t v3 = a2[134];
  if (v2 != v3)
  {
    int v6 = (unsigned __int8 *)a2 + 1057;
    do
    {
      if (*(void *)(v2 + 1808) != *(void *)(v2 + 1816))
      {
        size_t v7 = (unsigned __int8 *)(v2 + 329);
        if (!*(unsigned char *)(v2 + 330)) {
          size_t v7 = v6;
        }
        int v8 = *v7;
        sub_68099C((uint64_t)a1, (uint64_t *)(v2 + 1808));
        uint64_t v9 = sub_680B98((uint64_t)a1, a2, v8, v2);
        sub_680D90(v9, v2);
        sub_680E60(a1, (void *)v2);
        sub_681034((void **)a1, (void *)v2);
      }
      v2 += 2400;
    }
    while (v2 != v3);
    uint64_t v10 = a2[133];
    for (uint64_t i = a2[134]; v10 != i; v10 += 2400)
    {
      uint64_t v12 = *(void *)(v10 + 1808);
      uint64_t v13 = *(void *)(v10 + 1816);
      if (v12 != v13)
      {
        while (sub_682238(v12))
        {
          v12 += 336;
          if (v12 == v13)
          {
            uint64_t v12 = v13;
            goto LABEL_21;
          }
        }
        if (v12 != v13)
        {
          for (uint64_t j = v12 + 336; j != v13; j += 336)
          {
            if (sub_682238(j))
            {
              sub_674798(v12, j);
              v12 += 336;
            }
          }
        }
      }
LABEL_21:
      uint64_t v15 = *(void *)(v10 + 1816);
      if (v12 != v15)
      {
        while (v15 != v12)
        {
          v15 -= 336;
          sub_576848(v15);
        }
        *(void *)(v10 + 1816) = v12;
      }
    }
  }
}

uint64_t sub_68099C(uint64_t a1, uint64_t *a2)
{
  uint64_t result = sub_682218(*a2, 1);
  unint64_t v4 = 0xCF3CF3CF3CF3CF3DLL * ((a2[1] - *a2) >> 4);
  if (v4 <= 1) {
    unint64_t v5 = 1;
  }
  else {
    unint64_t v5 = 0xCF3CF3CF3CF3CF3DLL * ((a2[1] - *a2) >> 4);
  }
  if (v4 >= 2)
  {
    unint64_t v6 = 1;
    uint64_t v7 = 2;
LABEL_17:
    while (2)
    {
      uint64_t v16 = sub_6672BC(a2, v6);
      uint64_t v18 = *a2;
      uint64_t v17 = a2[1];
      uint64_t v19 = ((unsigned __int128)((v17 - *a2) * (__int128)0x3CF3CF3CF3CF3CF3) >> 64) - (v17 - *a2);
      ++v6;
      unint64_t v20 = v17 + 336 * ((v19 >> 8) + ((unint64_t)v19 >> 63) + v7);
      while (1)
      {
        unint64_t v21 = v20 - 336;
        if (v20 - 336 == v18) {
          break;
        }
        int v22 = sub_682238(v20 - 672);
        unint64_t v20 = v21;
        if (v22)
        {
          uint64_t v23 = v21 - 336;
          if (sub_6835E8(v21 - 336) != 2) {
            goto LABEL_23;
          }
LABEL_7:
          BOOL v8 = sub_683488(v23);
          if (v8) {
            uint64_t v9 = (__n128 *)v23;
          }
          else {
            uint64_t v9 = (__n128 *)v16;
          }
          if (v8) {
            uint64_t v10 = v16;
          }
          else {
            uint64_t v10 = v23;
          }
          uint64_t v11 = sub_685CCC(v23);
          sub_685CCC(v16);
          sub_2F99CC(&v24, v11, v12);
          sub_684750(v9, &v24);
          unsigned int v13 = sub_6835E8(v23);
          unsigned int v14 = sub_6835E8(v16);
          if (v13 <= v14) {
            char v15 = v14;
          }
          else {
            char v15 = v13;
          }
          sub_6835F0((uint64_t)v9, v15);
          sub_682218((uint64_t)v9, 1);
          uint64_t result = sub_682218(v10, 0);
          ++v7;
          if (v6 == v5) {
            return result;
          }
          goto LABEL_17;
        }
      }
      uint64_t v23 = v18 - 336;
      if (sub_6835E8(v23) == 2) {
        goto LABEL_7;
      }
LABEL_23:
      if (sub_6835E8(v23) == 4 || sub_6835E8(v23) <= 2 && sub_685990(v23, v16)) {
        goto LABEL_7;
      }
      uint64_t result = sub_682218(v16, 1);
      ++v7;
      if (v6 != v5) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_680B98(uint64_t a1, void *a2, int a3, uint64_t a4)
{
  uint64_t v18 = 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v17 = sub_612A40(a2 + 928, *(void *)(a4 + 16));
  uint64_t v8 = *(void *)(a4 + 1816);
  uint64_t v9 = *(void *)(a4 + 1808);
  while (v8 != v9)
  {
    v8 -= 336;
    if (sub_682238(v8))
    {
      uint64_t v9 = v8 + 336;
      break;
    }
  }
  uint64_t v10 = v9 - 336;
  uint64_t result = sub_683488(v9 - 336);
  if (result)
  {
    uint64_t result = sub_681128(a1, (uint64_t)a2, a4, v9 - 336);
    if ((result & 1) == 0) {
      *(unsigned char *)(a4 + 1856) = 1;
    }
  }
  uint64_t v12 = *(void *)(a4 + 1816) - *(void *)(a4 + 1808);
  if (v12)
  {
    unint64_t v13 = 0;
    uint64_t v14 = v12 / 336;
    while (1)
    {
      uint64_t v16 = sub_6672BC((void *)(a4 + 1808), v13);
      uint64_t result = sub_682238(v16);
      if (result)
      {
        sub_682218(v16, 0);
        uint64_t result = sub_682F60(v16);
        if (result)
        {
          uint64_t result = sub_683350(v16, a3);
          if (result) {
            break;
          }
        }
      }
LABEL_12:
      if (v14 == ++v13) {
        return result;
      }
    }
    sub_68607C(v16, &v18);
    if (sub_683488(v16))
    {
      if ((sub_681128(a1, (uint64_t)a2, a4, v16) & 1) == 0) {
        *(unsigned char *)(a4 + 1856) = 1;
      }
    }
    else if (!sub_68346C(v16) {
           || !sub_675908(a1 + 8, a4, v17)
    }
           || !sub_6812A4(a1, a2, v10, v13, (void *)a4))
    {
LABEL_23:
      uint64_t result = sub_6835E8(v16);
      if (result == 1) {
        uint64_t v15 = v18;
      }
      else {
        uint64_t result = sub_685CCC(v16);
      }
      uint64_t v18 = v15;
      goto LABEL_12;
    }
    sub_682218(v16, 1);
    goto LABEL_23;
  }
  return result;
}

void sub_680D90(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a2 + 1808);
  for (uint64_t i = *(void **)(a2 + 1816); v2 != i; v2 += 42)
  {
    unsigned __int8 v4 = sub_682244((uint64_t)v2);
    if (v4)
    {
      uint64_t v5 = 0;
      uint64_t v6 = v4;
      do
      {
        if (sub_682238((uint64_t)v2) && (sub_6847A0((uint64_t)v2, v5) & 1) == 0)
        {
          uint64_t v7 = sub_6838A0((uint64_t)v2, v5);
          if (v7[1] - *v7 != 1)
          {
            unsigned __int8 v8 = 13;
            sub_683E74(v2, v5, &v8);
          }
        }
        ++v5;
      }
      while (v6 != v5);
    }
  }
}

void sub_680E60(uint64_t *a1, void *a2)
{
  uint64_t v2 = a2[227] - a2[226];
  if (!v2) {
    return;
  }
  unint64_t v5 = 0;
  uint64_t v6 = a2 + 226;
  unint64_t v7 = 0xCF3CF3CF3CF3CF3DLL * (v2 >> 4);
  uint64_t v8 = 1;
  do
  {
    uint64_t v9 = (__n128 *)sub_6672BC(v6, v5);
    if (sub_682238((uint64_t)v9))
    {
      if (v5)
      {
        uint64_t v10 = a2[227];
        uint64_t v11 = a2[226];
        uint64_t v12 = ((unsigned __int128)((v10 - v11) * (__int128)0x3CF3CF3CF3CF3CF3) >> 64) - (v10 - v11);
        uint64_t v13 = v10 + 336 * ((v12 >> 8) + ((unint64_t)v12 >> 63) + v8);
        while (1)
        {
          uint64_t v14 = v13 - 336;
          if (v13 - 336 == v11) {
            break;
          }
          int v15 = sub_682238(v13 - 672);
          uint64_t v13 = v14;
          if (v15)
          {
            if (v14 == *v6) {
              goto LABEL_14;
            }
            goto LABEL_11;
          }
        }
        uint64_t v14 = v11;
        if (v11 == *v6) {
          goto LABEL_14;
        }
LABEL_11:
        sub_685CCC(v14 - 336);
        v20[0] = v16;
        if (sub_684720((uint64_t)v9)) {
          goto LABEL_3;
        }
      }
      else
      {
LABEL_14:
        v20[0] = a2[109];
        if (sub_684720((uint64_t)v9))
        {
LABEL_3:
          sub_681A3C(a1, (uint64_t)a2, v9, v20);
          goto LABEL_4;
        }
      }
      sub_6818E8((void **)a1, (uint64_t)a2, v9, v20);
    }
LABEL_4:
    ++v5;
    ++v8;
  }
  while (v5 != v7);
  uint64_t v17 = a2[226];
  uint64_t v18 = a2[227];
  while (v17 != v18)
  {
    v20[0] = sub_685CD8(v17);
    v20[1] = v19;
    if (sub_6383A0(v20) < *(void *)(*a1 + 1504) && !sub_683488(v17)) {
      sub_682218(v17, 0);
    }
    v17 += 336;
  }
}

void sub_681034(void **a1, void *a2)
{
  uint64_t v2 = (__n128 *)a2[226];
  for (uint64_t i = (__n128 *)a2[227]; v2 != i; v2 += 21)
  {
    if (sub_682238((uint64_t)v2))
    {
      uint64_t v12 = sub_685CCC((uint64_t)v2);
      sub_685CCC((uint64_t)v2);
      uint64_t v14 = v13;
      if (sub_683488((uint64_t)v2))
      {
        int v15 = *a1;
        int v16 = sub_684720((uint64_t)v2);
        uint64_t v17 = sub_62C37C(v15, v16) + v12;
        uint64_t v6 = sub_685CD8((uint64_t)v2);
        if (v6 >= v17) {
          uint64_t v6 = v17;
        }
      }
      else
      {
        uint64_t v6 = sub_685CD8((uint64_t)v2);
      }
      uint64_t v7 = a2[16];
      if (v6 >= v7) {
        uint64_t v8 = v6 - v7;
      }
      else {
        uint64_t v8 = 0;
      }
      BOOL v9 = __OFSUB__(v14, v7);
      uint64_t v10 = v14 - v7;
      if (v10 < 0 != v9) {
        uint64_t v11 = 0;
      }
      else {
        uint64_t v11 = v10;
      }
      sub_2F99CC(&v18, v8, v11);
      sub_684768(v2, &v18);
    }
  }
}

uint64_t sub_681128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_612A40((void *)(a2 + 7424), *(void *)(a3 + 16));
  uint64_t result = sub_675A44(a1 + 8, a3, v7);
  if (result)
  {
    int v9 = *(_DWORD *)(a3 + 160);
    if ((v9 - 82) < 3) {
      return 0;
    }
    unsigned int v10 = v9 - 16;
    if (v10 < 0x18 && ((0x860005u >> v10) & 1) != 0) {
      return 0;
    }
    if (sub_6849D4(a4)) {
      return 1;
    }
    if (sub_682244(a4) < 2u || sub_6829A4(a4) && !sub_682A6C(a4)) {
      return 0;
    }
    uint64_t result = 1;
    if (!*(unsigned char *)(a3 + 893) && !*(unsigned char *)(a3 + 892) && !*(unsigned char *)(a3 + 894) && *(_DWORD *)(a3 + 1860))
    {
      if (*(_DWORD *)(a3 + 160) != 3) {
        return sub_681474(result, a3, a4) ^ 1;
      }
      uint64_t v11 = *(void *)(a3 + 872);
      uint64_t v12 = *(void *)(*(void *)a1 + 1496);
      BOOL v13 = __OFSUB__(v11, v12);
      uint64_t v14 = v11 - v12;
      uint64_t v15 = ((v14 < 0) ^ v13) | (v14 == 0) ? 0 : v14;
      uint64_t v16 = sub_682B84(a4);
      uint64_t v17 = *(void **)a1;
      int v18 = sub_684720(a4);
      uint64_t result = sub_62BF44(v17, v18);
      uint64_t v19 = v15 >= result ? result : v15;
      if (v16 >= v19) {
        return sub_681474(result, a3, a4) ^ 1;
      }
      return 0;
    }
  }
  return result;
}

uint64_t sub_6812A4(uint64_t a1, void *a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v10 = sub_6672BC(a5 + 226, a4);
  unint64_t v11 = sub_682244(v10);
  if (v11 < 2u) {
    return 0;
  }
  BOOL v12 = sub_681524(v11, (uint64_t)a5, v10, a3);
  char v13 = sub_681648(a1, v10, a3);
  if (sub_6835E8(v10) == 5) {
    return v12;
  }
  if (sub_6835E8(v10) == 6) {
    char v14 = v13;
  }
  else {
    char v14 = 0;
  }
  if (v14) {
    return 1;
  }
  if (sub_6835E8(v10) == 7)
  {
    if (v12)
    {
      sub_6835F0(v10, 5);
      return 1;
    }
    sub_6835F0(v10, 6);
    if (v13) {
      return 1;
    }
  }
  if (a5[108] == 0x7FFFFFFFFFFFFFFFLL) {
    uint64_t v16 = a5[109];
  }
  else {
    uint64_t v16 = a5[108];
  }
  uint64_t v17 = *(void **)a1;
  int v18 = sub_684720(v10);
  uint64_t v19 = sub_62BED8(v17, v18);
  if (v16 <= v19) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = v16 - v19;
  }
  sub_685CCC(v10);
  if (v21 >= v20)
  {
    uint64_t v22 = sub_682B84(v10);
    sub_685CCC(v10);
    if (*(void *)(*(void *)a1 + 1496) + v22 < a5[109] - v23) {
      return 0;
    }
    return sub_684D14(v10);
  }
  else
  {
    return sub_681738(a1, a2, a5, a4);
  }
}

uint64_t sub_681474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (sub_682540(a3) != 1 || *(unsigned char *)(a2 + 2224) != 0) {
    return 0;
  }
  int v6 = *(_DWORD *)(a2 + 160);
  if (v6 == 2)
  {
    unsigned __int8 v7 = sub_684EAC(a3);
    uint64_t v8 = a3;
    return sub_6847A0(v8, v7);
  }
  if (v6 == 1)
  {
    unsigned __int8 v7 = sub_35E640();
    uint64_t v8 = a3;
    return sub_6847A0(v8, v7);
  }
  return 0;
}

BOOL sub_681524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v7 = sub_6835E8(a4);
  BOOL result = 0;
  if (v7 == 4 && !*(unsigned char *)(a2 + 1856))
  {
    if (sub_682728(a4))
    {
      unsigned __int8 v9 = sub_35E640();
      if (sub_682F48(a4, v9))
      {
        unsigned __int8 v10 = sub_35E640();
        unint64_t v11 = sub_6838A0(a3, v10);
        BOOL v12 = v11[1] - *v11 > 1uLL;
        unsigned __int8 v13 = sub_684EAC(a4);
        if (sub_682F48(a4, v13))
        {
LABEL_6:
          unsigned __int8 v14 = sub_684EAC(a3);
          uint64_t v15 = sub_6838A0(a3, v14);
          return v12 || v15[1] - *v15 > 1uLL;
        }
      }
      else
      {
        BOOL v12 = 0;
        unsigned __int8 v16 = sub_684EAC(a4);
        if (sub_682F48(a4, v16)) {
          goto LABEL_6;
        }
      }
      return v12;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_681648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (sub_6835E8(a3) != 4) {
    return 0;
  }
  uint64_t result = sub_684CB0(a3, a2);
  if (result)
  {
    if (!sub_684720(a2)) {
      return 1;
    }
    unsigned __int8 v7 = sub_35E640();
    if (sub_682F48(a3, v7))
    {
      unsigned __int8 v8 = 0;
      if (!sub_682CE4(a2, 0))
      {
LABEL_6:
        uint64_t v9 = 0;
        return v9 >= *(void *)(*(void *)a1 + 1456);
      }
    }
    else
    {
      unsigned __int8 v8 = sub_684EAC(a2);
      if (!sub_682CE4(a2, v8)) {
        goto LABEL_6;
      }
    }
    uint64_t v9 = sub_685CF8(a2, v8);
    return v9 >= *(void *)(*(void *)a1 + 1456);
  }
  return result;
}

uint64_t sub_681738(uint64_t a1, void *a2, void *a3, unint64_t a4)
{
  unint64_t v4 = a4;
  unsigned __int8 v8 = a3 + 226;
  uint64_t v9 = sub_577CC8(a3 + 226, a4);
  uint64_t v10 = sub_682B84(v9);
  unint64_t v11 = *(void **)a1;
  int v12 = sub_684720(v9);
  if (v10 < sub_62BF44(v11, v12)) {
    return 0;
  }
  if (!sub_684720(v9))
  {
    uint64_t v14 = 0;
    uint64_t v24 = *(void *)(*(void *)a1 + 1480);
    uint64_t v25 = a3[5];
    if (0xCF3CF3CF3CF3CF3DLL * ((uint64_t)(a3[227] - a3[226]) >> 4) <= v4) {
      unint64_t v15 = v4;
    }
    else {
      unint64_t v15 = 0xCF3CF3CF3CF3CF3DLL * ((uint64_t)(a3[227] - a3[226]) >> 4);
    }
    while (v4 != v15)
    {
      uint64_t v16 = sub_577CC8(v8, v4);
      unsigned __int8 v17 = sub_682244(v16);
      if (!v17) {
        break;
      }
      uint64_t v18 = 0;
      int v19 = 0;
      uint64_t v20 = v17;
      do
        v19 += sub_682C58(v16, v18++);
      while (v20 != v18);
      if (!v19) {
        break;
      }
      unsigned __int8 v21 = sub_682AB4(v16);
      double v22 = (double)(sub_682244(v16) - (v19 + v21)) / (double)v19;
      if (v22 <= *(double *)(*(void *)a1 + 1472)) {
        return 1;
      }
      uint64_t v23 = sub_46CCC8(a2, v4 + v25, v22);
      uint64_t result = 0;
      if (*(unsigned char *)(*(void *)a1 + 1488))
      {
        v14 += v23;
        ++v4;
        if (v14 < v24) {
          continue;
        }
      }
      return result;
    }
    return 0;
  }
  return 1;
}

double sub_6818E8(void **a1, uint64_t a2, __n128 *a3, uint64_t *a4)
{
  uint64_t v8 = sub_685CCC((uint64_t)a3);
  sub_685CCC((uint64_t)a3);
  uint64_t v10 = v9;
  if (sub_686074((uint64_t)a3) == 0x7FFFFFFFFFFFFFFFLL) {
    uint64_t v11 = *(void *)(a2 + 872);
  }
  else {
    uint64_t v11 = sub_686074((uint64_t)a3);
  }
  BOOL v12 = sub_683488((uint64_t)a3);
  unsigned __int8 v13 = *a1;
  int v14 = sub_684720((uint64_t)a3);
  if (v12)
  {
    uint64_t v15 = sub_62C0F4(v13, v14);
    uint64_t v10 = 0;
    if (*a4 >= *(void *)(a2 + 128) + v15) {
      uint64_t v16 = *(void *)(a2 + 128) + v15;
    }
    else {
      uint64_t v16 = *a4;
    }
  }
  else
  {
    uint64_t v17 = sub_62C310(v13, v14) + v8;
    char v18 = sub_682244((uint64_t)a3);
    unsigned int v19 = (v18 - sub_682540((uint64_t)a3));
    if (v19 > 3)
    {
      BOOL v21 = v19 > 5;
      uint64_t v20 = *a1 + 174;
      if (!v21) {
        uint64_t v20 = *a1 + 173;
      }
    }
    else
    {
      uint64_t v20 = *a1 + 172;
    }
    uint64_t v22 = *v20 + v10;
    if (v22 >= v17) {
      uint64_t v22 = v17;
    }
    if (v11 >= v22) {
      uint64_t v16 = v22;
    }
    else {
      uint64_t v16 = v11;
    }
  }
  sub_2F99CC(&v24, v16, v10);
  *(void *)&double result = sub_68475C(a3, &v24).n128_u64[0];
  return result;
}

double sub_681A3C(uint64_t *a1, uint64_t a2, __n128 *a3, uint64_t *a4)
{
  uint64_t v8 = sub_685CCC((uint64_t)a3);
  sub_685CCC((uint64_t)a3);
  uint64_t v10 = v9;
  if (sub_686074((uint64_t)a3) == 0x7FFFFFFFFFFFFFFFLL)
  {
    uint64_t v11 = *(void *)(a2 + 872);
    if (!sub_683488((uint64_t)a3))
    {
LABEL_3:
      uint64_t v12 = *a1;
      unsigned int v13 = sub_684720((uint64_t)a3);
      uint64_t v14 = sub_62C3E8(v12, v13) + v10;
      uint64_t v15 = (void *)*a1;
      int v16 = sub_684720((uint64_t)a3);
      uint64_t v17 = sub_62C0F4(v15, v16) + v10;
      char v18 = (void *)*a1;
      int v19 = sub_684720((uint64_t)a3);
      uint64_t v20 = sub_62C310(v18, v19) + v8;
      if (v14 > v20) {
        uint64_t v20 = v14;
      }
      if (v20 >= v11) {
        uint64_t v20 = v11;
      }
      if (v17 >= v20) {
        uint64_t v21 = v20;
      }
      else {
        uint64_t v21 = v17;
      }
      goto LABEL_32;
    }
  }
  else
  {
    uint64_t v11 = sub_686074((uint64_t)a3);
    if (!sub_683488((uint64_t)a3)) {
      goto LABEL_3;
    }
  }
  uint64_t v22 = (void *)*a1;
  if (*(unsigned char *)(a2 + 892))
  {
    uint64_t v23 = v22[98];
  }
  else
  {
    int v24 = sub_684720((uint64_t)a3);
    uint64_t v23 = sub_62C37C(v22, v24);
    uint64_t v22 = (void *)*a1;
  }
  uint64_t v25 = v23 + v8;
  int v26 = sub_684720((uint64_t)a3);
  uint64_t v27 = *(void *)(a2 + 128) + sub_62C0F4(v22, v26);
  unint64_t v28 = (void *)*a1;
  int v29 = sub_684720((uint64_t)a3);
  uint64_t v30 = sub_62BE6C(v28, v29);
  if (v27 >= *a4) {
    uint64_t v31 = *a4;
  }
  else {
    uint64_t v31 = v27;
  }
  if (*(void *)(a2 + 128) + v30 >= *a4) {
    uint64_t v32 = *a4;
  }
  else {
    uint64_t v32 = *(void *)(a2 + 128) + v30;
  }
  if (sub_65FC8((void *)(a2 + 1872))
    && (unsigned int v33 = *(_DWORD *)(a2 + 160), v33 - 82 >= 3)
    && (v33 > 0x27 || ((1 << v33) & 0x8600050000) == 0))
  {
    uint64_t v34 = *(void *)(a2 + 128) + **(void **)(a2 + 1872);
  }
  else
  {
    uint64_t v34 = *(void *)(a2 + 872);
  }
  uint64_t v10 = 0;
  if (v34 >= v25) {
    uint64_t v34 = v25;
  }
  if (v32 > v34) {
    uint64_t v34 = v32;
  }
  if (v31 >= v34) {
    uint64_t v21 = v34;
  }
  else {
    uint64_t v21 = v31;
  }
LABEL_32:
  sub_2F99CC(&v36, v21, v10);
  *(void *)&double result = sub_68475C(a3, &v36).n128_u64[0];
  return result;
}

double sub_681C54()
{
  byte_25A0447 = 1;
  word_25A0430 = 65;
  byte_25A045F = 1;
  word_25A0448 = 65;
  char v4 = 7;
  strcpy((char *)v3, "UNKNOWN");
  int v5 = 0;
  char v7 = 14;
  strcpy((char *)v6, "ROUTES_THROUGH");
  int v8 = 1;
  char v10 = 9;
  strcpy((char *)__p, "ROUTES_TO");
  int v11 = 3;
  char v13 = 11;
  strcpy((char *)v12, "ROUTES_FROM");
  int v14 = 2;
  xmmword_25A0490 = 0u;
  *(_OWORD *)&qword_25A04A0 = 0u;
  dword_25A04B0 = 1065353216;
  sub_3A6EF0((uint64_t)&xmmword_25A0490, (uint64_t)v3, (uint64_t)v3);
  sub_3A6EF0((uint64_t)&xmmword_25A0490, (uint64_t)v6, (uint64_t)v6);
  sub_3A6EF0((uint64_t)&xmmword_25A0490, (uint64_t)__p, (uint64_t)__p);
  sub_3A6EF0((uint64_t)&xmmword_25A0490, (uint64_t)v12, (uint64_t)v12);
  if (v13 < 0)
  {
    operator delete(v12[0]);
    if ((v10 & 0x80000000) == 0)
    {
LABEL_3:
      if ((v7 & 0x80000000) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      operator delete(v6[0]);
      if ((v4 & 0x80000000) == 0) {
        goto LABEL_5;
      }
LABEL_9:
      operator delete(v3[0]);
      goto LABEL_5;
    }
  }
  else if ((v10 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p[0]);
  if (v7 < 0) {
    goto LABEL_8;
  }
LABEL_4:
  if (v4 < 0) {
    goto LABEL_9;
  }
LABEL_5:
  qword_25A0468 = 0;
  qword_25A0470 = 0;
  qword_25A0460 = 0;
  uint64_t v0 = operator new(9uLL);
  *(void *)uint64_t v0 = 0x4020C000103050DLL;
  v0[8] = 6;
  qword_25A0460 = (uint64_t)v0;
  qword_25A0468 = (uint64_t)(v0 + 9);
  qword_25A0470 = (uint64_t)(v0 + 9);
  qword_25A0478 = 0;
  qword_25A0480 = 0;
  unk_25A0488 = 0;
  int v1 = (char *)operator new(9uLL);
  qword_25A0480 = (uint64_t)(v1 + 9);
  unk_25A0488 = v1 + 9;
  double result = 1.10224369e-279;
  *(void *)int v1 = 0x604020C00010305;
  v1[8] = 13;
  qword_25A0478 = (uint64_t)v1;
  return result;
}

void sub_681E90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  if (qword_25A04A0) {
    sub_20AA890((void **)qword_25A04A0);
  }
  unsigned int v37 = (void *)xmmword_25A0490;
  *(void *)&xmmword_25A0490 = 0;
  if (v37)
  {
    operator delete(v37);
    if ((a36 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a29 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_11;
    }
  }
  else if ((a36 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(__p);
  if ((a29 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a22 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_12;
  }
LABEL_11:
  operator delete(a24);
  if ((a22 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a15 & 0x80000000) == 0) {
LABEL_14:
    }
      _Unwind_Resume(exception_object);
LABEL_13:
    operator delete(a10);
    _Unwind_Resume(exception_object);
  }
LABEL_12:
  operator delete(a17);
  if ((a15 & 0x80000000) == 0) {
    goto LABEL_14;
  }
  goto LABEL_13;
}

uint64_t sub_681F30(uint64_t a1, unsigned __int8 a2)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_DWORD *)(a1 + 72) = 1065353216;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_DWORD *)(a1 + 112) = 1065353216;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_DWORD *)(a1 + 152) = 1065353216;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_DWORD *)(a1 + 160) = 0;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(void *)(a1 + 216) = 3;
  *(_WORD *)(a1 + 224) = 0;
  *(unsigned char *)(a1 + 226) = 1;
  *(void *)(a1 + 264) = 0;
  *(void *)(a1 + 232) = 0;
  *(unsigned char *)(a1 + 256) = 0;
  *(void *)(a1 + 240) = 0;
  *(void *)(a1 + 248) = 0;
  int64x2_t v3 = vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
  *(int64x2_t *)(a1 + 272) = v3;
  *(int64x2_t *)(a1 + 288) = v3;
  *(int64x2_t *)(a1 + 304) = v3;
  *(void *)(a1 + 320) = 0x7FFFFFFFFFFFFFFFLL;
  *(unsigned char *)(a1 + 328) = *(unsigned char *)(a1 + 328) & 0x80 | 4;
  sub_68207C(a1, a2, 0, 0, 0);
  return a1;
}

void sub_682024(_Unwind_Exception *a1)
{
  sub_682184(v6);
  sub_36094((void **)(v1 + 192));
  sub_36094(v5);
  sub_12168(v4);
  sub_12168(v3);
  sub_592458(v2);
  sub_12168(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_68206C(uint64_t a1)
{
  return sub_681F30(a1, 0);
}

uint64_t sub_682074(uint64_t a1, unsigned __int8 a2)
{
  return sub_681F30(a1, a2);
}

void sub_68207C(uint64_t a1, unsigned __int8 a2, char a3, int a4, int a5)
{
  uint64_t v7 = *(void *)(a1 + 232);
  uint64_t v8 = *(void *)(a1 + 240);
  int v6 = (void **)(a1 + 232);
  if (a4) {
    char v9 = 2;
  }
  else {
    char v9 = 0;
  }
  char v10 = v9 | a3;
  if (a5) {
    char v11 = 4;
  }
  else {
    char v11 = 0;
  }
  v16[0] = v10 | v11;
  v16[1] = -1;
  *(_OWORD *)uint64_t v17 = 0u;
  long long v18 = 0u;
  *(_OWORD *)long long __p = 0u;
  uint64_t v20 = 0;
  unint64_t v12 = (v8 - v7) >> 6;
  if (a2 <= v12)
  {
    if (a2 < v12)
    {
      uint64_t v13 = v7 + ((unint64_t)a2 << 6);
      while (v8 != v13)
      {
        int v14 = *(void **)(v8 - 24);
        if (v14)
        {
          *(void *)(v8 - 16) = v14;
          operator delete(v14);
        }
        uint64_t v15 = *(void **)(v8 - 48);
        if (v15)
        {
          *(void *)(v8 - 40) = v15;
          operator delete(v15);
        }
        v8 -= 64;
      }
      *(void *)(a1 + 240) = v13;
    }
  }
  else
  {
    sub_687258(v6, a2 - v12, (long long *)v16);
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
  }
  if (v17[1])
  {
    *(void **)&long long v18 = v17[1];
    operator delete(v17[1]);
  }
}

void sub_682170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void **sub_682184(void **a1)
{
  uint64_t v2 = (char *)*a1;
  if (*a1)
  {
    uint64_t v3 = (char *)a1[1];
    uint64_t v4 = *a1;
    if (v3 != v2)
    {
      do
      {
        int v5 = (void *)*((void *)v3 - 3);
        if (v5)
        {
          *((void *)v3 - 2) = v5;
          operator delete(v5);
        }
        int v6 = (void *)*((void *)v3 - 6);
        if (v6)
        {
          *((void *)v3 - 5) = v6;
          operator delete(v6);
        }
        v3 -= 64;
      }
      while (v3 != v2);
      uint64_t v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

uint64_t sub_682208(uint64_t a1)
{
  return *(void *)(a1 + 264);
}

uint64_t sub_682210(uint64_t result, uint64_t a2)
{
  *(void *)(result + 264) = a2;
  return result;
}

uint64_t sub_682218(uint64_t result, int a2)
{
  if (a2) {
    char v2 = 64;
  }
  else {
    char v2 = 0;
  }
  *(unsigned char *)(result + 328) = *(unsigned char *)(result + 328) & 0xBF | v2;
  return result;
}

uint64_t sub_682238(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 328) >> 6) & 1;
}

unint64_t sub_682244(uint64_t a1)
{
  return sub_66DADC((uint64_t)(*(void *)(a1 + 240) - *(void *)(a1 + 232)) >> 6);
}

unint64_t sub_682254(uint64_t a1)
{
  return sub_66DADC(*(void *)(a1 + 144));
}

BOOL sub_68225C(uint64_t a1, unsigned __int8 a2)
{
  unint64_t v2 = *(void *)(a1 + 128);
  if (!v2)
  {
    int v5 = 0;
    return v5 != 0;
  }
  uint8x8_t v3 = (uint8x8_t)vcnt_s8((int8x8_t)v2);
  v3.i16[0] = vaddlv_u8(v3);
  if (v3.u32[0] > 1uLL)
  {
    unint64_t v4 = a2;
    if (v2 <= a2) {
      unint64_t v4 = a2 % v2;
    }
  }
  else
  {
    unint64_t v4 = (v2 - 1) & a2;
  }
  int v5 = *(uint64_t ***)(*(void *)(a1 + 120) + 8 * v4);
  if (!v5) {
    return v5 != 0;
  }
  int v5 = (uint64_t **)*v5;
  if (!v5) {
    return v5 != 0;
  }
  if (v3.u32[0] >= 2uLL)
  {
    do
    {
      unint64_t v8 = (unint64_t)v5[1];
      if (v8 == a2)
      {
        if (*((unsigned __int8 *)v5 + 16) == a2) {
          return v5 != 0;
        }
      }
      else
      {
        if (v8 >= v2) {
          v8 %= v2;
        }
        if (v8 != v4) {
          return 0;
        }
      }
      int v5 = (uint64_t **)*v5;
    }
    while (v5);
    return v5 != 0;
  }
  unint64_t v7 = v2 - 1;
  while (1)
  {
    char v9 = v5[1];
    if (v9 == (uint64_t *)a2)
    {
      if (*((unsigned __int8 *)v5 + 16) == a2) {
        return v5 != 0;
      }
      goto LABEL_20;
    }
    if (((unint64_t)v9 & v7) != v4) {
      return 0;
    }
LABEL_20:
    int v5 = (uint64_t **)*v5;
    if (!v5) {
      return v5 != 0;
    }
  }
}

BOOL sub_68235C(uint64_t a1)
{
  uint64_t v1 = *(char **)(a1 + 232);
  unint64_t v2 = *(char **)(a1 + 240);
  if (v1 == v2) {
    return 0;
  }
  uint64_t v3 = v2 - v1;
  uint64_t v4 = ((v2 - v1) >> 6) - 1;
  int v5 = &v1[(v3 & 0xFFFFFFFFFFFFFFC0) - 64];
  unint64_t v6 = 1;
  while (1)
  {
    char v8 = *v1;
    v1 += 64;
    char v7 = v8;
    char v9 = *v5;
    v5 -= 64;
    char v10 = v9 ^ v7;
    BOOL result = (v10 & 2) == 0;
    if ((v10 & 2) != 0) {
      break;
    }
    if (v6++ > --v4) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_6823C0(uint64_t a1)
{
  return (**(unsigned __int8 **)(a1 + 232) >> 1) & 1;
}

uint64_t sub_6823D0(uint64_t a1)
{
  return (*(unsigned __int8 *)(*(void *)(a1 + 240) - 64) >> 1) & 1;
}

uint64_t sub_6823E0(uint64_t a1)
{
  unsigned __int8 v2 = sub_66DADC((uint64_t)(*(void *)(a1 + 240) - *(void *)(a1 + 232)) >> 6);
  if (v2 < 4u) {
    return 0;
  }
  unsigned __int8 v3 = v2;
  int v5 = *(unsigned __int8 **)(a1 + 232);
  uint64_t v4 = *(unsigned __int8 **)(a1 + 240);
  if (v5 == v4)
  {
    unint64_t v7 = 0;
    goto LABEL_10;
  }
  unint64_t v6 = v4 - v5 - 64;
  if (v6 < 0x40)
  {
    unint64_t v7 = 0;
    char v8 = *(unsigned __int8 **)(a1 + 232);
    do
    {
LABEL_9:
      unsigned int v16 = *v8;
      v8 += 64;
      v7 += ((unint64_t)v16 >> 1) & 1;
    }
    while (v8 != v4);
    goto LABEL_10;
  }
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = (v6 >> 6) + 1;
  char v8 = &v5[64 * (v11 & 0x7FFFFFFFFFFFFFELL)];
  unint64_t v12 = v5 + 64;
  uint64_t v13 = v11 & 0x7FFFFFFFFFFFFFELL;
  do
  {
    unint64_t v14 = *(v12 - 64);
    unsigned int v15 = *v12;
    v12 += 128;
    v9 += (v14 >> 1) & 1;
    v10 += ((unint64_t)v15 >> 1) & 1;
    v13 -= 2;
  }
  while (v13);
  unint64_t v7 = v10 + v9;
  if (v11 != (v11 & 0x7FFFFFFFFFFFFFELL)) {
    goto LABEL_9;
  }
LABEL_10:
  int v17 = sub_6825D4(v7);
  if (v17 != 2)
  {
    if (v17 == 1)
    {
      uint64_t v18 = *(void *)(a1 + 232);
      if ((*(unsigned char *)(v18 + 64) & 2) == 0)
      {
        uint64_t v19 = v3;
        if ((*(unsigned char *)(v18 + ((unint64_t)v3 << 6) - 128) & 2) == 0 && (*(unsigned char *)(v18 + 128) & 2) == 0) {
          return (*(unsigned __int8 *)(v18 + (v19 << 6) - 192) >> 1) & 1;
        }
      }
      return 1;
    }
    return 0;
  }
  uint64_t v18 = *(void *)(a1 + 232);
  if ((*(unsigned char *)(v18 + 64) & 2) != 0 && (*(unsigned char *)(v18 + 128) & 2) != 0) {
    return 1;
  }
  uint64_t v19 = v3;
  if ((*(unsigned char *)(v18 + ((unint64_t)v3 << 6) - 128) & 2) == 0) {
    return 0;
  }
  return (*(unsigned __int8 *)(v18 + (v19 << 6) - 192) >> 1) & 1;
}

unint64_t sub_682540(uint64_t a1)
{
  unsigned __int8 v2 = *(unsigned __int8 **)(a1 + 232);
  uint64_t v1 = *(unsigned __int8 **)(a1 + 240);
  if (v2 == v1)
  {
    unint64_t v4 = 0;
    return sub_6825D4(v4);
  }
  unint64_t v3 = v1 - v2 - 64;
  if (v3 < 0x40)
  {
    unint64_t v4 = 0;
    int v5 = v2;
    do
    {
LABEL_9:
      unsigned int v13 = *v5;
      v5 += 64;
      v4 += ((unint64_t)v13 >> 1) & 1;
    }
    while (v5 != v1);
    return sub_6825D4(v4);
  }
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = (v3 >> 6) + 1;
  int v5 = &v2[64 * (v8 & 0x7FFFFFFFFFFFFFELL)];
  uint64_t v9 = v2 + 64;
  uint64_t v10 = v8 & 0x7FFFFFFFFFFFFFELL;
  do
  {
    unint64_t v11 = *(v9 - 64);
    unsigned int v12 = *v9;
    v9 += 128;
    v6 += (v11 >> 1) & 1;
    v7 += ((unint64_t)v12 >> 1) & 1;
    v10 -= 2;
  }
  while (v10);
  unint64_t v4 = v7 + v6;
  if (v8 != (v8 & 0x7FFFFFFFFFFFFFELL)) {
    goto LABEL_9;
  }
  return sub_6825D4(v4);
}

unint64_t sub_6825D4(unint64_t result)
{
  uint64_t v1 = result;
  if (result >= 0x100)
  {
    exception = __cxa_allocate_exception(0x40uLL);
    std::to_string(&v8, v1);
    unint64_t v3 = std::string::insert(&v8, 0, "narrowing ");
    long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
    v9.__r_.__value_.__r.__words[2] = v3->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v9.__r_.__value_.__l.__data_ = v4;
    v3->__r_.__value_.__l.__size_ = 0;
    v3->__r_.__value_.__r.__words[2] = 0;
    v3->__r_.__value_.__r.__words[0] = 0;
    int v5 = std::string::append(&v9, " failed");
    long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
    std::string::size_type v11 = v5->__r_.__value_.__r.__words[2];
    long long v10 = v6;
    v5->__r_.__value_.__l.__size_ = 0;
    v5->__r_.__value_.__r.__words[2] = 0;
    v5->__r_.__value_.__r.__words[0] = 0;
    uint64_t v7 = (void *)sub_2F404((uint64_t)exception, &v10);
  }
  return result;
}

void sub_6826A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(a1);
}

unint64_t sub_682728(uint64_t a1)
{
  unsigned __int8 v2 = *(char **)(a1 + 232);
  uint64_t v1 = *(char **)(a1 + 240);
  if (v2 == v1)
  {
    unint64_t v4 = 0;
    return sub_6825D4(v4);
  }
  unint64_t v3 = v1 - v2 - 64;
  if (v3 < 0x40)
  {
    unint64_t v4 = 0;
    int v5 = v2;
    do
    {
LABEL_9:
      char v13 = *v5;
      v5 += 64;
      v4 += v13 & 1;
    }
    while (v5 != v1);
    return sub_6825D4(v4);
  }
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = (v3 >> 6) + 1;
  int v5 = &v2[64 * (v8 & 0x7FFFFFFFFFFFFFELL)];
  std::string v9 = v2 + 64;
  uint64_t v10 = v8 & 0x7FFFFFFFFFFFFFELL;
  do
  {
    char v11 = *(v9 - 64);
    char v12 = *v9;
    v9 += 128;
    v6 += v11 & 1;
    v7 += v12 & 1;
    v10 -= 2;
  }
  while (v10);
  unint64_t v4 = v7 + v6;
  if (v8 != (v8 & 0x7FFFFFFFFFFFFFELL)) {
    goto LABEL_9;
  }
  return sub_6825D4(v4);
}

unint64_t sub_6827BC(uint64_t a1)
{
  unsigned __int8 v2 = *(char **)(a1 + 232);
  uint64_t v1 = *(char **)(a1 + 240);
  if (v2 == v1)
  {
    unint64_t v4 = 0;
    return sub_6825D4(v4);
  }
  unint64_t v3 = v1 - v2 - 64;
  if (v3 < 0x40)
  {
    unint64_t v4 = 0;
    int v5 = v2;
    do
    {
LABEL_13:
      char v14 = *v5;
      v5 += 64;
      if ((v14 & 1) == 0) {
        ++v4;
      }
    }
    while (v5 != v1);
    return sub_6825D4(v4);
  }
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = (v3 >> 6) + 1;
  int v5 = &v2[64 * (v8 & 0x7FFFFFFFFFFFFFELL)];
  std::string v9 = v2 + 64;
  uint64_t v10 = v8 & 0x7FFFFFFFFFFFFFELL;
  do
  {
    char v11 = *(v9 - 64);
    char v13 = *v9;
    v9 += 128;
    char v12 = v13;
    if ((v11 & 1) == 0) {
      ++v6;
    }
    if ((v12 & 1) == 0) {
      ++v7;
    }
    v10 -= 2;
  }
  while (v10);
  unint64_t v4 = v7 + v6;
  if (v8 != (v8 & 0x7FFFFFFFFFFFFFELL)) {
    goto LABEL_13;
  }
  return sub_6825D4(v4);
}

unint64_t sub_682850(uint64_t a1)
{
  unsigned __int8 v2 = *(unsigned __int8 **)(a1 + 232);
  uint64_t v1 = *(unsigned __int8 **)(a1 + 240);
  if (v2 == v1)
  {
    unint64_t v4 = 0;
    return sub_6825D4(v4);
  }
  unint64_t v3 = v1 - v2 - 64;
  if (v3 < 0x40)
  {
    unint64_t v4 = 0;
    int v5 = v2;
    do
    {
LABEL_9:
      unsigned int v13 = *v5;
      v5 += 64;
      v4 += ((unint64_t)v13 >> 2) & 1;
    }
    while (v5 != v1);
    return sub_6825D4(v4);
  }
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = (v3 >> 6) + 1;
  int v5 = &v2[64 * (v8 & 0x7FFFFFFFFFFFFFELL)];
  std::string v9 = v2 + 64;
  uint64_t v10 = v8 & 0x7FFFFFFFFFFFFFELL;
  do
  {
    unint64_t v11 = *(v9 - 64);
    unsigned int v12 = *v9;
    v9 += 128;
    v6 += (v11 >> 2) & 1;
    v7 += ((unint64_t)v12 >> 2) & 1;
    v10 -= 2;
  }
  while (v10);
  unint64_t v4 = v7 + v6;
  if (v8 != (v8 & 0x7FFFFFFFFFFFFFELL)) {
    goto LABEL_9;
  }
  return sub_6825D4(v4);
}

BOOL sub_6828E4(uint64_t a1)
{
  unsigned __int8 v2 = *(unsigned __int8 **)(a1 + 232);
  uint64_t v1 = *(unsigned __int8 **)(a1 + 240);
  if (v2 == v1) {
    return sub_6825D4(0) != 0;
  }
  unint64_t v3 = v1 - v2 - 64;
  if (v3 >= 0x40)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = (v3 >> 6) + 1;
    int v5 = &v2[64 * (v9 & 0x7FFFFFFFFFFFFFELL)];
    uint64_t v10 = v2 + 64;
    uint64_t v11 = v9 & 0x7FFFFFFFFFFFFFELL;
    do
    {
      unint64_t v12 = *(v10 - 64);
      unsigned int v13 = *v10;
      v10 += 128;
      v7 += (v12 >> 1) & 1;
      v8 += ((unint64_t)v13 >> 1) & 1;
      v11 -= 2;
    }
    while (v11);
    unint64_t v4 = v8 + v7;
    if (v9 == (v9 & 0x7FFFFFFFFFFFFFELL)) {
      return sub_6825D4(v4) != 0;
    }
  }
  else
  {
    unint64_t v4 = 0;
    int v5 = v2;
  }
  do
  {
    unsigned int v14 = *v5;
    v5 += 64;
    v4 += ((unint64_t)v14 >> 1) & 1;
  }
  while (v5 != v1);
  return sub_6825D4(v4) != 0;
}

BOOL sub_6829A4(uint64_t a1)
{
  unint64_t v3 = *(unsigned __int8 **)(a1 + 232);
  unsigned __int8 v2 = *(unsigned __int8 **)(a1 + 240);
  if (v3 == v2)
  {
    unint64_t v5 = 0;
    return (uint64_t)(*(void *)(a1 + 240) - *(void *)(a1 + 232)) >> 6 == sub_6825D4(v5);
  }
  unint64_t v4 = v2 - v3 - 64;
  if (v4 < 0x40)
  {
    unint64_t v5 = 0;
    uint64_t v6 = v3;
    do
    {
LABEL_8:
      unsigned int v14 = *v6;
      v6 += 64;
      v5 += ((unint64_t)v14 >> 1) & 1;
    }
    while (v6 != v2);
    return (uint64_t)(*(void *)(a1 + 240) - *(void *)(a1 + 232)) >> 6 == sub_6825D4(v5);
  }
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = (v4 >> 6) + 1;
  uint64_t v6 = &v3[64 * (v9 & 0x7FFFFFFFFFFFFFELL)];
  uint64_t v10 = v3 + 64;
  uint64_t v11 = v9 & 0x7FFFFFFFFFFFFFELL;
  do
  {
    unint64_t v12 = *(v10 - 64);
    unsigned int v13 = *v10;
    v10 += 128;
    v7 += (v12 >> 1) & 1;
    v8 += ((unint64_t)v13 >> 1) & 1;
    v11 -= 2;
  }
  while (v11);
  unint64_t v5 = v8 + v7;
  if (v9 != (v9 & 0x7FFFFFFFFFFFFFELL)) {
    goto LABEL_8;
  }
  return (uint64_t)(*(void *)(a1 + 240) - *(void *)(a1 + 232)) >> 6 == sub_6825D4(v5);
}

unint64_t sub_682A6C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 232);
  uint64_t v1 = *(void *)(a1 + 240);
  unint64_t v3 = 0;
  uint64_t v4 = v1 - v2;
  if (v4)
  {
    uint64_t v5 = v4 >> 6;
    uint64_t v6 = (void *)(v2 + 48);
    do
    {
      if ((*(unsigned char *)(v6 - 6) & 2) != 0 && *v6 - *(v6 - 1) > 1uLL) {
        ++v3;
      }
      v6 += 8;
      --v5;
    }
    while (v5);
  }
  return sub_66DADC(v3);
}

uint64_t sub_682AB4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 232);
  uint64_t v1 = *(void *)(a1 + 240);
  uint64_t result = 0;
  uint64_t v4 = v1 - v2;
  if (v4)
  {
    uint64_t v5 = v4 >> 6;
    uint64_t v6 = (void *)(v2 + 48);
    do
    {
      if (*(unsigned char *)(v6 - 6))
      {
        if (*v6 - *(v6 - 1) <= 1uLL) {
          uint64_t result = result;
        }
        else {
          uint64_t result = (result + 1);
        }
      }
      v6 += 8;
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t sub_682AFC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 240) - *(void *)(a1 + 232);
  if (!v1) {
    return 0;
  }
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  uint64_t v5 = v1 >> 6;
  do
  {
    uint64_t v6 = *(void *)(a1 + 232) + v3;
    if (*(unsigned char *)v6)
    {
      unint64_t v7 = *(void *)(v6 + 48) - *(void *)(v6 + 40);
      if (v7 >= 2) {
        uint64_t v4 = sub_66DADC(v7 - 1) + v4;
      }
    }
    v3 += 64;
    --v5;
  }
  while (v5);
  return v4;
}

uint64_t sub_682B84(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + 232);
  uint64_t v2 = 0;
  uint64_t v3 = *(void *)(a1 + 240) - *(void *)(a1 + 232);
  if (v3)
  {
    unint64_t v4 = 0;
    uint64_t v5 = v3 >> 6;
    do
    {
      unint64_t v6 = sub_66DADC(v4);
      if ((*(unsigned char *)(*v1 + (v6 << 6)) & 1) == 0)
      {
        unint64_t v7 = sub_682D38(v1, v6);
        uint64_t v8 = *(unsigned char **)(v7 + 40);
        uint64_t v9 = *(unsigned char **)(v7 + 48);
        if (v8 != v9)
        {
          while (*v8 != 12)
          {
            if (++v8 == v9)
            {
              if (*(void *)(*v1 + (v6 << 6) + 8) != 0x7FFFFFFFFFFFFFFFLL && v2 <= *(void *)(*v1 + (v4 << 6) + 8)) {
                uint64_t v2 = *(void *)(*v1 + (v4 << 6) + 8);
              }
              break;
            }
          }
        }
      }
      ++v4;
    }
    while (v4 != v5);
  }
  return v2;
}

BOOL sub_682C58(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2 = (void *)(a1 + 232);
  uint64_t v3 = a2;
  if ((*(unsigned char *)(*(void *)(a1 + 232) + ((unint64_t)a2 << 6)) & 1) == 0)
  {
    unint64_t v4 = sub_682D38((void *)(a1 + 232), a2);
    uint64_t v5 = *(unsigned char **)(v4 + 40);
    unint64_t v6 = *(unsigned char **)(v4 + 48);
    if (v5 != v6)
    {
      while (*v5 != 12)
      {
        if (++v5 == v6) {
          return *(void *)(*v2 + (v3 << 6) + 8) != 0x7FFFFFFFFFFFFFFFLL;
        }
      }
    }
  }
  return 0;
}

BOOL sub_682CE4(uint64_t a1, unsigned __int8 a2)
{
  unint64_t v2 = sub_682D38((void *)(a1 + 232), a2);
  uint64_t v4 = *(void *)(v2 + 40);
  uint64_t v3 = *(void *)(v2 + 48);
  if (v4 == v3) {
    return 0;
  }
  uint64_t v5 = v4 + 1;
  do
  {
    int v6 = *(unsigned __int8 *)(v5 - 1);
    BOOL result = v6 != 12;
  }
  while (v6 != 12 && v5++ != v3);
  return result;
}

unint64_t sub_682D38(void *a1, unint64_t a2)
{
  if (a2 >= (uint64_t)(a1[1] - *a1) >> 6)
  {
    exception = __cxa_allocate_exception(0x40uLL);
    std::to_string(&v16, a2);
    int v6 = std::string::insert(&v16, 0, "Out-of-bounds access in Vector::at with index=");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v17.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    uint64_t v8 = std::string::append(&v17, ",size=");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v18.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v18.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v15, (uint64_t)(a1[1] - *a1) >> 6);
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v10 = &v15;
    }
    else {
      uint64_t v10 = (std::string *)v15.__r_.__value_.__r.__words[0];
    }
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v15.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v15.__r_.__value_.__l.__size_;
    }
    unint64_t v12 = std::string::append(&v18, (const std::string::value_type *)v10, size);
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    std::string::size_type v20 = v12->__r_.__value_.__r.__words[2];
    long long v19 = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    unsigned int v14 = (void *)sub_2F404((uint64_t)exception, &v19);
  }
  return *a1 + (a2 << 6);
}

void sub_682E68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 41) < 0) {
    operator delete(*(void **)(v33 - 64));
  }
  if (a14 < 0)
  {
    operator delete(a9);
    if ((a33 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a26 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_10;
    }
  }
  else if ((a33 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(a28);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_7;
  }
LABEL_10:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0) {
LABEL_11:
  }
    _Unwind_Resume(a1);
LABEL_7:
  operator delete(__p);
  goto LABEL_11;
}

uint64_t sub_682F48(uint64_t a1, unsigned __int8 a2)
{
  return *(unsigned char *)(*(void *)(a1 + 232) + ((unint64_t)a2 << 6)) & 1;
}

uint64_t sub_682F60(uint64_t a1)
{
  unint64_t v2 = *(unsigned __int8 **)(a1 + 232);
  uint64_t v1 = *(unsigned __int8 **)(a1 + 240);
  if (v2 == v1) {
    return 0;
  }
  unint64_t v4 = v1 - v2 - 64;
  if (v4 < 0x40)
  {
    unint64_t v5 = 0;
    int v6 = v2;
    do
    {
LABEL_9:
      unsigned int v15 = *v6;
      v6 += 64;
      v5 += ((unint64_t)v15 >> 1) & 1;
    }
    while (v6 != v1);
    goto LABEL_10;
  }
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = (v4 >> 6) + 1;
  int v6 = &v2[64 * (v10 & 0x7FFFFFFFFFFFFFELL)];
  uint64_t v11 = v2 + 64;
  uint64_t v12 = v10 & 0x7FFFFFFFFFFFFFELL;
  do
  {
    unint64_t v13 = *(v11 - 64);
    unsigned int v14 = *v11;
    v11 += 128;
    v8 += (v13 >> 1) & 1;
    v9 += ((unint64_t)v14 >> 1) & 1;
    v12 -= 2;
  }
  while (v12);
  unint64_t v5 = v9 + v8;
  if (v10 != (v10 & 0x7FFFFFFFFFFFFFELL)) {
    goto LABEL_9;
  }
LABEL_10:
  if (!sub_6825D4(v5)) {
    return 0;
  }
  std::string v16 = *(unsigned __int8 **)(a1 + 232);
  uint64_t result = 1;
  uint64_t v17 = *(void *)(a1 + 240) - (void)v16;
  if (v17 && v17 != 64)
  {
    uint64_t v18 = v17 >> 6;
    unsigned int v21 = *v16;
    long long v19 = v16 + 64;
    unsigned int v20 = v21;
    char v22 = v21 & 2;
    uint64_t v23 = v18 - 1;
    while (1)
    {
      unsigned int v24 = (v20 >> 1) & 1;
      unsigned int v25 = *v19;
      v19 += 64;
      unsigned int v20 = v25;
      if ((v25 & 2) == 0) {
        unsigned int v24 = 1;
      }
      uint64_t result = v22 ? v24 : 1;
      if (result != 1) {
        break;
      }
      char v22 = v22 != 0 || (v20 & 2) != 0;
      if (!--v23) {
        return 1;
      }
    }
  }
  return result;
}

void sub_683098(uint64_t a1)
{
  unsigned __int8 v2 = sub_66DADC((uint64_t)(*(void *)(a1 + 240) - *(void *)(a1 + 232)) >> 6);
  if (v2)
  {
    unint64_t v3 = 0;
    uint64_t v4 = v2;
    uint64_t v5 = 40;
    do
    {
      uint64_t v6 = *(void *)(a1 + 232);
      if (v3 < (*(void *)(a1 + 240) - v6) >> 6 && *(void *)(v6 + v5) == *(void *)(v6 + v5 + 8))
      {
        unsigned __int8 v7 = 12;
        sub_683144(a1, v3, &v7);
      }
      ++v3;
      v5 += 64;
    }
    while (v4 != v3);
  }
}

void sub_683144(uint64_t a1, unsigned __int8 a2, unsigned __int8 *a3)
{
  uint64_t v5 = a2;
  sub_6837BC(a1, a2);
  uint64_t v6 = *(void *)(a1 + 232) + (v5 << 6);
  uint64_t v8 = *(unsigned __int8 **)(v6 + 40);
  uint64_t v9 = *(unsigned __int8 **)(v6 + 48);
  unsigned __int8 v7 = (void *)(v6 + 40);
  uint64_t v10 = v9;
  if (v8 == v9) {
    goto LABEL_7;
  }
  uint64_t v11 = v8;
  while (*v11 != *a3)
  {
    if (++v11 == v9)
    {
      uint64_t v11 = v9;
      break;
    }
  }
  if (v11 == v9)
  {
LABEL_7:
    unint64_t v12 = v7[2];
    if ((unint64_t)v9 < v12)
    {
      unsigned __int8 *v9 = *a3;
      uint64_t v13 = (uint64_t)(v9 + 1);
LABEL_37:
      v7[1] = v13;
      return;
    }
    unint64_t v14 = v9 - v8;
    uint64_t v15 = v9 - v8 + 1;
    if (v15 < 0) {
      sub_2E00();
    }
    unint64_t v16 = v12 - (void)v8;
    if (2 * v16 > v15) {
      uint64_t v15 = 2 * v16;
    }
    if (v16 >= 0x3FFFFFFFFFFFFFFFLL) {
      size_t v17 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      size_t v17 = v15;
    }
    if (v17) {
      uint64_t v18 = (char *)operator new(v17);
    }
    else {
      uint64_t v18 = 0;
    }
    long long v19 = &v18[v14];
    v18[v14] = *a3;
    uint64_t v13 = (uint64_t)&v18[v14 + 1];
    if (v8 == v9)
    {
LABEL_35:
      *unsigned __int8 v7 = v19;
      v7[1] = v13;
      v7[2] = &v18[v17];
      if (v8) {
        operator delete(v8);
      }
      goto LABEL_37;
    }
    if (v14 >= 8 && (unint64_t)(v8 - (unsigned __int8 *)v18) >= 0x20)
    {
      if (v14 < 0x20)
      {
        unint64_t v20 = 0;
        goto LABEL_27;
      }
      unint64_t v20 = v14 & 0xFFFFFFFFFFFFFFE0;
      unsigned int v21 = v9 - 16;
      char v22 = &v18[v9 - 16 - v8];
      unint64_t v23 = v14 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        long long v24 = *(_OWORD *)v21;
        *((_OWORD *)v22 - 1) = *((_OWORD *)v21 - 1);
        *(_OWORD *)char v22 = v24;
        v22 -= 32;
        v21 -= 32;
        v23 -= 32;
      }
      while (v23);
      if (v14 == v20) {
        goto LABEL_34;
      }
      if ((v14 & 0x18) != 0)
      {
LABEL_27:
        uint64_t v10 = &v9[-(v14 & 0xFFFFFFFFFFFFFFF8)];
        v19 -= v14 & 0xFFFFFFFFFFFFFFF8;
        unsigned int v25 = (char *)&v9[-v20 - 8];
        int64_t v26 = v25 - (char *)v8;
        unint64_t v27 = v20 - (v14 & 0xFFFFFFFFFFFFFFF8);
        do
        {
          uint64_t v28 = *(void *)v25;
          v25 -= 8;
          *(void *)&v18[v26] = v28;
          v26 -= 8;
          v27 += 8;
        }
        while (v27);
        if (v14 == (v14 & 0xFFFFFFFFFFFFFFF8)) {
          goto LABEL_34;
        }
        goto LABEL_32;
      }
      v19 -= v20;
      uint64_t v10 = &v9[-v20];
    }
LABEL_32:
    int v29 = v19 - 1;
    do
    {
      char v30 = *--v10;
      *v29-- = v30;
    }
    while (v10 != v8);
LABEL_34:
    long long v19 = v18;
    goto LABEL_35;
  }
}

uint64_t sub_683350(uint64_t a1, int a2)
{
  uint64_t v2 = *(void *)(a1 + 232);
  uint64_t v3 = *(void *)(a1 + 240);
  if (v2 == v3) {
    return 1;
  }
  uint64_t v4 = &qword_25A0500;
  if (a2 == 1) {
    uint64_t v4 = &qword_25A04E8;
  }
  uint64_t v5 = *v4;
  uint64_t v6 = &qword_25A0508;
  if (a2 == 1) {
    uint64_t v6 = &qword_25A04F0;
  }
  unsigned __int8 v7 = (unsigned __int8 *)*v6;
  if (v7 == (unsigned __int8 *)v5) {
    return 0;
  }
  unint64_t v9 = 0;
LABEL_10:
  uint64_t v10 = *(unsigned __int8 **)(v2 + 40);
  uint64_t v11 = *(unsigned __int8 **)(v2 + 48);
  BOOL v12 = v10 != v11;
  if (v10 == v11) {
    return 0;
  }
  uint64_t v13 = 0;
  while (1)
  {
    unint64_t v14 = (unsigned __int8 *)v5;
    while (*v14 != *v10)
    {
      if (++v14 == v7)
      {
        unint64_t v14 = v7;
        break;
      }
    }
    uint64_t result = 0;
    if (v14 == v7) {
      return result;
    }
    uint64_t v15 = &v14[-v5];
    if ((unint64_t)v15 < v9) {
      return result;
    }
    if (v13 <= v15) {
      uint64_t v13 = v15;
    }
    if (++v10 == v11)
    {
      v2 += 64;
      unint64_t v9 = (unint64_t)v13;
      uint64_t result = v12;
      if (v2 != v3) {
        goto LABEL_10;
      }
      return result;
    }
  }
}

BOOL sub_683424(uint64_t a1)
{
  return sub_6383AC((void *)(a1 + 288));
}

uint64_t sub_68342C(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 256) < 7u) & (0x4Cu >> *(unsigned char *)(a1 + 256));
}

BOOL sub_683448(uint64_t a1)
{
  return (*(unsigned char *)(a1 + 256) & 0xFD) == 5;
}

BOOL sub_68345C(uint64_t a1)
{
  return *(unsigned char *)(a1 + 256) == 2;
}

uint64_t sub_68346C(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 256) < 8u) & (0xECu >> *(unsigned char *)(a1 + 256));
}

BOOL sub_683488(uint64_t a1)
{
  return *(unsigned char *)(a1 + 256) == 4;
}

uint64_t sub_683498(uint64_t a1)
{
  return *(void *)(a1 + 304);
}

uint64_t sub_6834A0(uint64_t a1)
{
  return *(void *)(a1 + 312);
}

uint64_t sub_6834A8(uint64_t a1)
{
  return *(void *)(a1 + 288);
}

uint64_t sub_6834B0(uint64_t a1)
{
  return *(void *)(a1 + 296);
}

BOOL sub_6834B8(void *a1)
{
  uint64_t v2 = (unsigned __int8 *)a1[29];
  uint64_t v1 = (unsigned __int8 *)a1[30];
  if (v2 == v1) {
    return 0;
  }
  unint64_t v4 = v1 - v2 - 64;
  if (v4 < 0x40)
  {
    unint64_t v5 = 0;
    uint64_t v6 = v2;
    do
    {
LABEL_7:
      unsigned int v14 = *v6;
      v6 += 64;
      v5 += ((unint64_t)v14 >> 1) & 1;
    }
    while (v6 != v1);
    goto LABEL_8;
  }
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = (v4 >> 6) + 1;
  uint64_t v6 = &v2[64 * (v9 & 0x7FFFFFFFFFFFFFELL)];
  uint64_t v10 = v2 + 64;
  uint64_t v11 = v9 & 0x7FFFFFFFFFFFFFELL;
  do
  {
    unint64_t v12 = *(v10 - 64);
    unsigned int v13 = *v10;
    v10 += 128;
    v7 += (v12 >> 1) & 1;
    v8 += ((unint64_t)v13 >> 1) & 1;
    v11 -= 2;
  }
  while (v11);
  unint64_t v5 = v8 + v7;
  if (v9 != (v9 & 0x7FFFFFFFFFFFFFELL)) {
    goto LABEL_7;
  }
LABEL_8:
  if (!sub_6825D4(v5)) {
    return 0;
  }
  uint64_t v15 = (char *)a1[29];
  uint64_t v16 = a1[30] - (void)v15;
  if (v16 && v16 != 64)
  {
    char v19 = *v15;
    size_t v17 = v15 + 64;
    char v18 = v19;
    char v20 = v19 & 2;
    uint64_t v21 = (v16 >> 6) - 1;
    do
    {
      char v23 = *v17;
      v17 += 64;
      char v22 = v23;
      if ((v23 & 2) != 0 && (v18 & 2) == 0 && v20) {
        return 0;
      }
      char v20 = v20 != 0 || (v22 & 2) != 0;
      char v18 = v22;
    }
    while (--v21);
  }

  return sub_6383AC(a1 + 36);
}

uint64_t sub_6835E8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 256);
}

uint64_t sub_6835F0(uint64_t result, char a2)
{
  *(unsigned char *)(result + 256) = a2;
  return result;
}

uint64_t sub_6835F8(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 256) - 2;
  if (v1 > 4) {
    return 0;
  }
  else {
    return dword_20E88F0[(char)v1];
  }
}

uint64_t sub_683624(void *a1, unsigned __int8 a2)
{
  uint64_t result = a2;
  unint64_t v4 = a1[1];
  if (v4)
  {
    uint8x8_t v5 = (uint8x8_t)vcnt_s8((int8x8_t)v4);
    v5.i16[0] = vaddlv_u8(v5);
    if (v5.u32[0] > 1uLL)
    {
      unint64_t v6 = a2;
      if (v4 <= a2) {
        unint64_t v6 = a2 % v4;
      }
    }
    else
    {
      unint64_t v6 = (v4 - 1) & a2;
    }
    uint64_t v7 = *(uint64_t ****)(*a1 + 8 * v6);
    if (v7)
    {
      uint64_t v8 = *v7;
      if (v8)
      {
        if (v5.u32[0] < 2uLL)
        {
          unint64_t v9 = v4 - 1;
          while (1)
          {
            uint64_t v11 = v8[1];
            if (v11 == (uint64_t *)a2)
            {
              if (*((unsigned __int8 *)v8 + 16) == a2) {
                return *((unsigned __int8 *)v8 + 17);
              }
            }
            else if (((unint64_t)v11 & v9) != v6)
            {
              return result;
            }
            uint64_t v8 = (uint64_t **)*v8;
            if (!v8) {
              return result;
            }
          }
        }
        do
        {
          unint64_t v10 = (unint64_t)v8[1];
          if (v10 == a2)
          {
            if (*((unsigned __int8 *)v8 + 16) == a2) {
              return *((unsigned __int8 *)v8 + 17);
            }
          }
          else
          {
            if (v10 >= v4) {
              v10 %= v4;
            }
            if (v10 != v6) {
              return result;
            }
          }
          uint64_t v8 = (uint64_t **)*v8;
        }
        while (v8);
      }
    }
  }
  return result;
}

uint64_t **sub_683708(void *a1, unsigned __int8 a2, unsigned __int8 a3)
{
  unsigned __int8 v5 = a2;
  if (a2 == a3) {
    return (uint64_t **)sub_686740(a1, &v5);
  }
  unint64_t v6 = &v5;
  uint64_t result = sub_686858((uint64_t)a1, &v5, (uint64_t)&unk_20F06E0, &v6);
  *((unsigned char *)result + 17) = a3;
  return result;
}

void sub_68377C(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v3 = a2;
  sub_6837BC(a1, a2);
  *(unsigned char *)(*(void *)(a1 + 232) + (v3 << 6)) |= 0x40u;
}

void sub_6837BC(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2 = (void **)(a1 + 232);
  unint64_t v3 = (uint64_t)(*(void *)(a1 + 240) - *(void *)(a1 + 232)) >> 6;
  if (v3 <= a2)
  {
    unsigned __int8 v5 = sub_66DADC(a2 - v3 + 1);
    if (v5)
    {
      unint64_t v6 = *(void *)(a1 + 240);
      __int16 v7 = -256;
      *(_OWORD *)uint64_t v8 = 0u;
      long long v9 = 0u;
      *(_OWORD *)long long __p = 0u;
      uint64_t v11 = 0;
      sub_684FF0(v2, v6, v5, (unint64_t)&v7);
      if (__p[0])
      {
        __p[1] = __p[0];
        operator delete(__p[0]);
      }
      if (v8[1])
      {
        *(void **)&long long v9 = v8[1];
        operator delete(v8[1]);
      }
    }
  }
}

void sub_683864(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
  {
    operator delete(__p);
    uint64_t v16 = a11;
    if (!a11) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    uint64_t v16 = a11;
    if (!a11) {
      goto LABEL_3;
    }
  }
  operator delete(v16);
  _Unwind_Resume(exception_object);
}

void *sub_6838A0(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2 = *(void *)(a1 + 232);
  uint64_t v3 = *(void *)(a1 + 240) - v2;
  unint64_t v4 = v2 + ((unint64_t)a2 << 6) + 40;
  if (a2 >= (unint64_t)(v3 >> 6)) {
    return &unk_25A0518;
  }
  else {
    return (void *)v4;
  }
}

char *sub_6838C8(uint64_t a1, unsigned __int8 a2, char **a3)
{
  uint64_t v5 = a2;
  sub_6837BC(a1, a2);
  uint64_t v6 = *(void *)(a1 + 232) + (v5 << 6);
  __int16 v7 = *(char **)(v6 + 48);
  uint64_t v8 = *a3;
  long long v9 = a3[1];
  unint64_t v10 = v9 - *a3;

  return sub_686B68(v6 + 40, v7, v8, v9, v10);
}

char *sub_683928(uint64_t a1, unsigned __int8 a2, char *a3)
{
  uint64_t v5 = a2;
  sub_6837BC(a1, a2);
  uint64_t v6 = *(void *)(a1 + 232) + (v5 << 6);
  long long v9 = *(char **)(v6 + 40);
  uint64_t v7 = v6 + 40;
  uint64_t v8 = v9;

  return sub_683980(v7, v8, a3);
}

char *sub_683980(uint64_t a1, char *__src, char *a3)
{
  uint64_t v3 = a3;
  unint64_t v4 = __src;
  uint64_t v6 = *(char **)(a1 + 8);
  unint64_t v7 = *(void *)(a1 + 16);
  if ((unint64_t)v6 < v7)
  {
    if (__src == v6)
    {
      *__src = *a3;
      *(void *)(a1 + 8) = __src + 1;
      return v4;
    }
    uint64_t v8 = __src + 1;
    if (v6)
    {
      *uint64_t v6 = *(v6 - 1);
      *(void *)(a1 + 8) = v6 + 1;
      if (v6 == v8)
      {
LABEL_24:
        if (v4 <= v3 && *(void *)(a1 + 8) > (unint64_t)v3) {
          ++v3;
        }
        *unint64_t v4 = *v3;
        return v4;
      }
    }
    else
    {
      *(void *)(a1 + 8) = 0;
      if (__src == (char *)-1) {
        goto LABEL_24;
      }
    }
    memmove(__src + 1, __src, v6 - v8);
    goto LABEL_24;
  }
  long long v9 = *(char **)a1;
  uint64_t v10 = (uint64_t)&v6[-*(void *)a1 + 1];
  if (v10 < 0) {
    sub_2E00();
  }
  uint64_t v11 = __src - v9;
  unint64_t v12 = v7 - (void)v9;
  if (2 * v12 > v10) {
    uint64_t v10 = 2 * v12;
  }
  if (v12 >= 0x3FFFFFFFFFFFFFFFLL) {
    size_t v13 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    size_t v13 = v10;
  }
  if (!v13)
  {
    unsigned int v14 = 0;
    uint64_t v15 = (char *)(__src - v9);
    uint64_t v16 = 0;
    if (v11) {
      goto LABEL_33;
    }
LABEL_17:
    if (v11 < 1)
    {
      if ((unint64_t)(2 * v11) <= 1) {
        size_t v18 = 1;
      }
      else {
        size_t v18 = 2 * v11;
      }
      char v19 = (char *)operator new(v18);
      uint64_t v15 = &v19[v18 >> 2];
      uint64_t v16 = &v19[v18];
      if (v14)
      {
        operator delete(v14);
        long long v9 = *(char **)a1;
      }
    }
    else
    {
      if (v11 + 1 >= 0) {
        uint64_t v17 = v11 + 1;
      }
      else {
        uint64_t v17 = v11 + 2;
      }
      v15 -= v17 >> 1;
    }
    goto LABEL_33;
  }
  unsigned int v14 = (char *)operator new(v13);
  uint64_t v15 = &v14[v11];
  uint64_t v16 = &v14[v13];
  if (v11 == v13) {
    goto LABEL_17;
  }
LABEL_33:
  char *v15 = *v3;
  char v20 = v15;
  if (v9 != v4)
  {
    uint64_t v21 = v4 - v9;
    char v22 = v4;
    char v20 = v15;
    if ((unint64_t)(v4 - v9) < 0x20) {
      goto LABEL_49;
    }
    char v22 = v4;
    char v20 = v15;
    if ((unint64_t)(v4 - v15) < 0x20) {
      goto LABEL_49;
    }
    char v22 = &v4[-(v21 & 0xFFFFFFFFFFFFFFE0)];
    char v20 = &v15[-(v21 & 0xFFFFFFFFFFFFFFE0)];
    char v23 = v15 - 16;
    long long v24 = v4 - 16;
    unint64_t v25 = v21 & 0xFFFFFFFFFFFFFFE0;
    do
    {
      long long v26 = *(_OWORD *)v24;
      *((_OWORD *)v23 - 1) = *((_OWORD *)v24 - 1);
      *(_OWORD *)char v23 = v26;
      v23 -= 32;
      v24 -= 32;
      v25 -= 32;
    }
    while (v25);
    if (v21 != (v21 & 0xFFFFFFFFFFFFFFE0))
    {
LABEL_49:
      do
      {
        char v27 = *--v22;
        *--char v20 = v27;
      }
      while (v22 != v9);
    }
  }
  uint64_t v28 = *(unsigned char **)(a1 + 8);
  uint64_t v29 = v28 - v4;
  if (v28 != v4)
  {
    memmove(v15 + 1, v4, v28 - v4);
    long long v9 = *(char **)a1;
  }
  *(void *)a1 = v20;
  *(void *)(a1 + 8) = &v15[v29 + 1];
  *(void *)(a1 + 16) = v16;
  if (v9) {
    operator delete(v9);
  }
  return v15;
}

void sub_683BE4(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

char *sub_683BFC(uint64_t a1, unsigned __int8 a2, unint64_t a3, unint64_t a4)
{
  unint64_t v6 = (unint64_t)a2 << 6;
  unint64_t v7 = (char *)sub_683C68((void *)(*(void *)(a1 + 232) + v6 + 40), a3);
  uint64_t result = (char *)sub_683C68((void *)(*(void *)(a1 + 232) + v6 + 40), a4);
  char v9 = *v7;
  *unint64_t v7 = *result;
  *uint64_t result = v9;
  return result;
}

unint64_t sub_683C68(void *a1, unint64_t a2)
{
  if (a1[1] - *a1 <= a2)
  {
    exception = __cxa_allocate_exception(0x40uLL);
    std::to_string(&v16, a2);
    unint64_t v6 = std::string::insert(&v16, 0, "Out-of-bounds access in Vector::at with index=");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v17.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    uint64_t v8 = std::string::append(&v17, ",size=");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v18.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v18.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v15, a1[1] - *a1);
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v10 = &v15;
    }
    else {
      uint64_t v10 = (std::string *)v15.__r_.__value_.__r.__words[0];
    }
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v15.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v15.__r_.__value_.__l.__size_;
    }
    unint64_t v12 = std::string::append(&v18, (const std::string::value_type *)v10, size);
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    std::string::size_type v20 = v12->__r_.__value_.__r.__words[2];
    long long v19 = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    unsigned int v14 = (void *)sub_2F404((uint64_t)exception, &v19);
  }
  return *a1 + a2;
}

void sub_683D94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 41) < 0) {
    operator delete(*(void **)(v33 - 64));
  }
  if (a14 < 0)
  {
    operator delete(a9);
    if ((a33 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a26 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_10;
    }
  }
  else if ((a33 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(a28);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_7;
  }
LABEL_10:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0) {
LABEL_11:
  }
    _Unwind_Resume(a1);
LABEL_7:
  operator delete(__p);
  goto LABEL_11;
}

void *sub_683E74(void *result, unsigned __int8 a2, unsigned __int8 *a3)
{
  uint64_t v3 = result[29];
  if (a2 < (unint64_t)((result[30] - v3) >> 6))
  {
    uint64_t v4 = v3 + ((unint64_t)a2 << 6);
    unint64_t v6 = *(unsigned __int8 **)(v4 + 40);
    uint64_t v5 = *(unsigned __int8 **)(v4 + 48);
    uint64_t v7 = v4 + 40;
    if (v6 != v5)
    {
      while (*v6 != *a3)
      {
        if (++v6 == v5)
        {
          unint64_t v6 = v5;
          break;
        }
      }
    }
    if (v6 != v5)
    {
      int64_t v8 = v5 - (v6 + 1);
      if (v5 != v6 + 1) {
        uint64_t result = memmove(v6, v6 + 1, v5 - (v6 + 1));
      }
      *(void *)(v7 + 8) = &v6[v8];
    }
  }
  return result;
}

char **sub_683F04(uint64_t a1, unsigned __int8 a2, char **a3)
{
  uint64_t v5 = a2;
  sub_6837BC(a1, a2);
  uint64_t result = (char **)(*(void *)(a1 + 232) + (v5 << 6) + 40);
  if (result != a3)
  {
    uint64_t v7 = *a3;
    int64_t v8 = a3[1];
    unint64_t v9 = v8 - *a3;
    return (char **)sub_34E73C(result, v7, v8, v9);
  }
  return result;
}

char **sub_683F78(uint64_t a1, uint64_t *a2)
{
  unsigned int v4 = sub_66DADC((uint64_t)(*(void *)(a1 + 240) - *(void *)(a1 + 232)) >> 6);
  uint64_t result = (char **)sub_66DADC(0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 3));
  if (v4 >= result) {
    uint64_t v6 = result;
  }
  else {
    uint64_t v6 = v4;
  }
  if (v6)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8;
    uint64_t v9 = 40;
    do
    {
      uint64_t v10 = *a2;
      uint64_t v11 = (char **)(*a2 + v8 - 8);
      sub_6837BC(a1, v7);
      uint64_t result = (char **)(*(void *)(a1 + 232) + v9);
      if (result != v11) {
        uint64_t result = (char **)sub_34E73C(result, *v11, *(char **)(v10 + v8), *(void *)(v10 + v8) - (void)*v11);
      }
      ++v7;
      v8 += 24;
      v9 += 64;
    }
    while (v6 != v7);
  }
  return result;
}

BOOL sub_684054(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 232);
  uint64_t v1 = *(void *)(a1 + 240);
  if (v2 == v1) {
    return 0;
  }
  uint64_t v3 = v2 + 64;
  do
  {
    uint64_t v4 = *(void *)(v3 - 24);
    uint64_t v5 = *(void *)(v3 - 16);
    BOOL result = v4 != v5;
    BOOL v7 = v4 != v5 || v3 == v1;
    v3 += 64;
  }
  while (!v7);
  return result;
}

void sub_684088(uint64_t a1, unsigned __int8 a2, int a3)
{
  if (!a2) {
    return;
  }
  uint64_t v5 = (void **)(a1 + 232);
  unint64_t v6 = *(void *)(a1 + 240);
  if (a3)
  {
    LOWORD(v22) = -256;
    *(_OWORD *)char v23 = 0u;
    long long v24 = 0u;
    *(_OWORD *)long long __p = 0u;
    uint64_t v26 = 0;
    sub_684FF0((void **)(a1 + 232), v6, a2, (unint64_t)&v22);
    goto LABEL_36;
  }
  BOOL v7 = *v5;
  unint64_t v8 = v6 - (void)*v5;
  if ((v8 & 0x3FC0) == 0) {
    goto LABEL_35;
  }
  unint64_t v9 = 0;
  uint64_t v10 = (v8 >> 6);
  while (2)
  {
    int8x8_t v11 = *(int8x8_t *)(a1 + 8);
    if (!*(void *)&v11) {
      goto LABEL_28;
    }
    uint8x8_t v12 = (uint8x8_t)vcnt_s8(v11);
    v12.i16[0] = vaddlv_u8(v12);
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v13 = v9;
      if (*(void *)&v11 <= v9) {
        unint64_t v13 = v9 % *(void *)&v11;
      }
    }
    else
    {
      unint64_t v13 = (*(void *)&v11 + 255) & v9;
    }
    unsigned int v14 = *(uint64_t ****)(*(void *)a1 + 8 * v13);
    if (!v14 || (std::string v15 = *v14) == 0)
    {
LABEL_28:
      unsigned __int8 v19 = sub_66B14C(a2 + v9);
      unsigned __int8 v27 = v9;
      if (v9 != v19)
      {
        unsigned __int8 v20 = v19;
        goto LABEL_30;
      }
      goto LABEL_6;
    }
    if (v12.u32[0] < 2uLL)
    {
      uint64_t v16 = *(void *)&v11 - 1;
      while (1)
      {
        std::string v18 = v15[1];
        if (v18 == (uint64_t *)v9)
        {
          if (v9 == *((unsigned __int8 *)v15 + 16)) {
            goto LABEL_31;
          }
        }
        else if (((unint64_t)v18 & v16) != v13)
        {
          goto LABEL_28;
        }
        std::string v15 = (uint64_t **)*v15;
        if (!v15) {
          goto LABEL_28;
        }
      }
    }
    while (1)
    {
      unint64_t v17 = (unint64_t)v15[1];
      if (v17 == v9) {
        break;
      }
      if (v17 >= *(void *)&v11) {
        v17 %= *(void *)&v11;
      }
      if (v17 != v13) {
        goto LABEL_28;
      }
LABEL_18:
      std::string v15 = (uint64_t **)*v15;
      if (!v15) {
        goto LABEL_28;
      }
    }
    if (v9 != *((unsigned __int8 *)v15 + 16)) {
      goto LABEL_18;
    }
LABEL_31:
    int v21 = *((unsigned __int8 *)v15 + 17);
    if (v21 != 255)
    {
      unsigned __int8 v20 = v21 + a2;
      unsigned __int8 v27 = v9;
      if (v9 != (v21 + a2))
      {
LABEL_30:
        char v22 = &v27;
        *((unsigned char *)sub_686858(a1, &v27, (uint64_t)&unk_20F06E0, &v22) + 17) = v20;
        goto LABEL_7;
      }
LABEL_6:
      sub_686740((void *)a1, &v27);
    }
LABEL_7:
    if (++v9 != v10) {
      continue;
    }
    break;
  }
  BOOL v7 = *v5;
LABEL_35:
  LOWORD(v22) = -256;
  *(_OWORD *)char v23 = 0u;
  long long v24 = 0u;
  *(_OWORD *)long long __p = 0u;
  uint64_t v26 = 0;
  sub_684FF0(v5, (unint64_t)v7, a2, (unint64_t)&v22);
LABEL_36:
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v23[1])
  {
    *(void **)&long long v24 = v23[1];
    operator delete(v23[1]);
  }
}

void sub_6842D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2FC938((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_6842E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2FC938((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t **sub_6842F8(uint64_t a1, unsigned __int8 a2)
{
  unsigned __int8 v3 = a2;
  return sub_597118(a1 + 120, &v3, &v3);
}

void sub_684328(uint64_t a1, unsigned __int8 a2, std::string **a3)
{
  unsigned __int8 v5 = a2;
  unint64_t v6 = &v5;
  uint64_t v4 = (std::string **)(sub_686F40(a1 + 40, &v5, (uint64_t)&unk_20F06E0, &v6) + 3);
  if (v4 != a3) {
    sub_69208((uint64_t)v4, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3));
  }
}

BOOL sub_6843A0(uint64_t a1, unsigned __int8 a2)
{
  unint64_t v2 = *(void *)(a1 + 48);
  if (!v2)
  {
    unsigned __int8 v5 = 0;
    return v5 != 0;
  }
  uint8x8_t v3 = (uint8x8_t)vcnt_s8((int8x8_t)v2);
  v3.i16[0] = vaddlv_u8(v3);
  if (v3.u32[0] > 1uLL)
  {
    unint64_t v4 = a2;
    if (v2 <= a2) {
      unint64_t v4 = a2 % v2;
    }
  }
  else
  {
    unint64_t v4 = (v2 - 1) & a2;
  }
  unsigned __int8 v5 = *(uint64_t ***)(*(void *)(a1 + 40) + 8 * v4);
  if (!v5) {
    return v5 != 0;
  }
  unsigned __int8 v5 = (uint64_t **)*v5;
  if (!v5) {
    return v5 != 0;
  }
  if (v3.u32[0] >= 2uLL)
  {
    do
    {
      unint64_t v8 = (unint64_t)v5[1];
      if (v8 == a2)
      {
        if (*((unsigned __int8 *)v5 + 16) == a2) {
          return v5 != 0;
        }
      }
      else
      {
        if (v8 >= v2) {
          v8 %= v2;
        }
        if (v8 != v4) {
          return 0;
        }
      }
      unsigned __int8 v5 = (uint64_t **)*v5;
    }
    while (v5);
    return v5 != 0;
  }
  unint64_t v7 = v2 - 1;
  while (1)
  {
    unint64_t v9 = v5[1];
    if (v9 == (uint64_t *)a2)
    {
      if (*((unsigned __int8 *)v5 + 16) == a2) {
        return v5 != 0;
      }
      goto LABEL_20;
    }
    if (((unint64_t)v9 & v7) != v4) {
      return 0;
    }
LABEL_20:
    unsigned __int8 v5 = (uint64_t **)*v5;
    if (!v5) {
      return v5 != 0;
    }
  }
}

uint64_t *sub_6844A0(uint64_t a1, unsigned __int8 a2)
{
  unint64_t v2 = *(void *)(a1 + 48);
  if (!v2) {
    goto LABEL_22;
  }
  uint8x8_t v3 = (uint8x8_t)vcnt_s8((int8x8_t)v2);
  v3.i16[0] = vaddlv_u8(v3);
  if (v3.u32[0] > 1uLL)
  {
    unint64_t v4 = a2;
    if (v2 <= a2) {
      unint64_t v4 = a2 % v2;
    }
  }
  else
  {
    unint64_t v4 = (v2 - 1) & a2;
  }
  unsigned __int8 v5 = *(uint64_t ****)(*(void *)(a1 + 40) + 8 * v4);
  if (!v5 || (unint64_t v6 = *v5) == 0) {
LABEL_22:
  }
    sub_5AE8("unordered_map::at: key not found");
  if (v3.u32[0] < 2uLL)
  {
    unint64_t v7 = v2 - 1;
    while (1)
    {
      unint64_t v9 = v6[1];
      if (v9 == (uint64_t *)a2)
      {
        if (*((unsigned __int8 *)v6 + 16) == a2) {
          return (uint64_t *)(v6 + 3);
        }
      }
      else if (((unint64_t)v9 & v7) != v4)
      {
        goto LABEL_22;
      }
      unint64_t v6 = (uint64_t **)*v6;
      if (!v6) {
        goto LABEL_22;
      }
    }
  }
  while (1)
  {
    unint64_t v8 = (unint64_t)v6[1];
    if (v8 == a2) {
      break;
    }
    if (v8 >= v2) {
      v8 %= v2;
    }
    if (v8 != v4) {
      goto LABEL_22;
    }
LABEL_11:
    unint64_t v6 = (uint64_t **)*v6;
    if (!v6) {
      goto LABEL_22;
    }
  }
  if (*((unsigned __int8 *)v6 + 16) != a2) {
    goto LABEL_11;
  }
  return (uint64_t *)(v6 + 3);
}

uint64_t sub_68459C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 160);
}

uint64_t sub_6845A4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 161);
}

uint64_t sub_6845AC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 160) = a2;
  return result;
}

uint64_t sub_6845B4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 161) = a2;
  return result;
}

uint64_t sub_6845BC(uint64_t a1)
{
  return a1 + 168;
}

void sub_6845C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + 168;
  if (v2 != a2) {
    sub_59FE78(v2, *(char ***)a2, *(void *)(a2 + 8), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 3));
  }
}

void sub_6845F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + 192;
  if (v2 != a2) {
    sub_59FE78(v2, *(char ***)a2, *(void *)(a2 + 8), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 3));
  }
}

uint64_t sub_684624(uint64_t a1)
{
  return *(unsigned char *)(a1 + 328) & 1;
}

uint64_t sub_684630(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 328) >> 1) & 1;
}

uint64_t sub_68463C(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 328) >> 2) & 1;
}

uint64_t sub_684648(uint64_t result, int a2)
{
  if (a2) {
    char v2 = 4;
  }
  else {
    char v2 = 0;
  }
  *(unsigned char *)(result + 328) = *(unsigned char *)(result + 328) & 0xFB | v2;
  return result;
}

uint64_t sub_684668(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 328) >> 3) & 1;
}

uint64_t sub_684674(uint64_t result, int a2)
{
  if (a2) {
    char v2 = 8;
  }
  else {
    char v2 = 0;
  }
  *(unsigned char *)(result + 328) = *(unsigned char *)(result + 328) & 0xF7 | v2;
  return result;
}

uint64_t sub_684694(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 328) >> 4) & 1;
}

uint64_t sub_6846A0(uint64_t result, int a2)
{
  if (a2) {
    char v2 = 16;
  }
  else {
    char v2 = 0;
  }
  *(unsigned char *)(result + 328) = *(unsigned char *)(result + 328) & 0xEF | v2;
  return result;
}

uint64_t sub_6846C0(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 328) >> 5) & 1;
}

uint64_t sub_6846CC(uint64_t result, int a2)
{
  if (a2) {
    char v2 = 32;
  }
  else {
    char v2 = 0;
  }
  *(unsigned char *)(result + 328) = *(unsigned char *)(result + 328) & 0xDF | v2;
  return result;
}

uint64_t sub_6846EC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 328) = *(unsigned char *)(result + 328) & 0xFE | a2;
  return result;
}

uint64_t sub_684700(uint64_t result, int a2)
{
  if (a2) {
    char v2 = 2;
  }
  else {
    char v2 = 0;
  }
  *(unsigned char *)(result + 328) = *(unsigned char *)(result + 328) & 0xFD | v2;
  return result;
}

uint64_t sub_684720(uint64_t a1)
{
  return *(unsigned int *)(a1 + 216);
}

uint64_t sub_684728(uint64_t result, _DWORD *a2)
{
  *(_DWORD *)(result + 216) = *a2;
  return result;
}

__n128 sub_684734(_OWORD *a1, _OWORD *a2)
{
  a1[17] = *a2;
  a1[18] = *a2;
  __n128 result = *(__n128 *)a2;
  a1[19] = *a2;
  return result;
}

__n128 sub_684750(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[17] = *a2;
  return result;
}

__n128 sub_68475C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[18] = *a2;
  return result;
}

__n128 sub_684768(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[19] = *a2;
  return result;
}

uint64_t sub_684774(uint64_t a1)
{
  return *(void *)(a1 + 220);
}

uint64_t sub_68477C(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(_DWORD *)(result + 223) = *(int *)((char *)a2 + 3);
  *(_DWORD *)(result + 220) = v2;
  return result;
}

BOOL sub_684790(uint64_t a1)
{
  return *(void *)(a1 + 232) != *(void *)(a1 + 240);
}

uint64_t sub_6847A0(uint64_t a1, unsigned __int8 a2)
{
  return (*(unsigned __int8 *)(*(void *)(a1 + 232) + ((unint64_t)a2 << 6)) >> 1) & 1;
}

uint64_t sub_6847B8(uint64_t a1, unsigned __int8 a2)
{
  return *(unsigned __int8 *)(*(void *)(a1 + 232) + ((unint64_t)a2 << 6)) >> 7;
}

uint64_t sub_6847D0(uint64_t a1, unsigned __int8 a2)
{
  return (*(unsigned __int8 *)(*(void *)(a1 + 232) + ((unint64_t)a2 << 6)) >> 2) & 1;
}

uint64_t sub_6847E8(uint64_t result, unsigned __int8 a2, char a3)
{
  *(unsigned char *)(*(void *)(result + 232) + ((unint64_t)a2 << 6)) = *(unsigned char *)(*(void *)(result + 232)
                                                                                 + ((unint64_t)a2 << 6)) & 0xFE | a3;
  return result;
}

uint64_t sub_684808(uint64_t result, unsigned __int8 a2, int a3)
{
  if (a3) {
    char v3 = 2;
  }
  else {
    char v3 = 0;
  }
  *(unsigned char *)(*(void *)(result + 232) + ((unint64_t)a2 << 6)) = *(unsigned char *)(*(void *)(result + 232)
                                                                                 + ((unint64_t)a2 << 6)) & 0xFD | v3;
  return result;
}

uint64_t sub_684834(uint64_t result, unsigned __int8 a2, int a3)
{
  if (a3) {
    char v3 = 4;
  }
  else {
    char v3 = 0;
  }
  *(unsigned char *)(*(void *)(result + 232) + ((unint64_t)a2 << 6)) = *(unsigned char *)(*(void *)(result + 232)
                                                                                 + ((unint64_t)a2 << 6)) & 0xFB | v3;
  return result;
}

void sub_684860(uint64_t a1, unsigned __int8 a2, int a3)
{
  uint64_t v5 = a2;
  sub_6837BC(a1, a2);
  if (a3) {
    char v6 = 16;
  }
  else {
    char v6 = 0;
  }
  *(unsigned char *)(*(void *)(a1 + 232) + (v5 << 6)) = *(unsigned char *)(*(void *)(a1 + 232) + (v5 << 6)) & 0xEF | v6;
}

uint64_t sub_6848BC(uint64_t a1, unsigned __int8 a2)
{
  return (*(unsigned __int8 *)(*(void *)(a1 + 232) + ((unint64_t)a2 << 6)) >> 4) & 1;
}

void sub_6848D4(uint64_t a1, unsigned __int8 a2, char a3)
{
  uint64_t v5 = a2;
  sub_6837BC(a1, a2);
  *(unsigned char *)(*(void *)(a1 + 232) + (v5 << 6)) |= 0x20u;
  *(unsigned char *)(*(void *)(a1 + 232) + (v5 << 6) + 1) = a3;
}

uint64_t sub_68492C(uint64_t a1, unsigned __int8 a2)
{
  return (*(unsigned __int8 *)(*(void *)(a1 + 232) + ((unint64_t)a2 << 6)) >> 3) & 1;
}

void sub_684944(uint64_t a1, unsigned __int8 a2, int a3)
{
  uint64_t v5 = a2;
  sub_6837BC(a1, a2);
  if (a3) {
    char v6 = 8;
  }
  else {
    char v6 = 0;
  }
  *(unsigned char *)(*(void *)(a1 + 232) + (v5 << 6)) = *(unsigned char *)(*(void *)(a1 + 232) + (v5 << 6)) & 0xF7 | v6;
}

uint64_t sub_6849A0(uint64_t result, unsigned __int8 a2, int a3)
{
  uint64_t v3 = *(void *)(result + 232);
  if (a2 < (unint64_t)((*(void *)(result + 240) - v3) >> 6))
  {
    if (a3) {
      char v4 = 0x80;
    }
    else {
      char v4 = 0;
    }
    *(unsigned char *)(v3 + ((unint64_t)a2 << 6)) = v4 & 0x80 | *(unsigned char *)(v3 + ((unint64_t)a2 << 6)) & 0x7F;
  }
  return result;
}

BOOL sub_6849D4(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 **)(a1 + 232);
  int v2 = *(unsigned __int8 **)(a1 + 240);
  if (v1 != v2)
  {
    while (((*v1 ^ (*v1 >> 1)) & 1) == 0)
    {
      v1 += 64;
      if (v1 == v2)
      {
        uint64_t v1 = *(unsigned __int8 **)(a1 + 240);
        return v1 != v2;
      }
    }
  }
  return v1 != v2;
}

void sub_684A08(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 232);
  uint64_t v5 = *(void *)(a1 + 240);
  char v4 = (void *)(a1 + 232);
  unint64_t v6 = (uint64_t)(*(void *)(a2 + 240) - *(void *)(a2 + 232)) >> 6;
  unint64_t v7 = (v5 - v3) >> 6;
  if (v6 <= v7)
  {
    if (v6 < v7)
    {
      uint64_t v9 = v3 + (v6 << 6);
      while (v5 != v9)
      {
        uint64_t v10 = *(void **)(v5 - 24);
        if (v10)
        {
          *(void *)(v5 - 16) = v10;
          operator delete(v10);
        }
        int8x8_t v11 = *(void **)(v5 - 48);
        if (v11)
        {
          *(void *)(v5 - 40) = v11;
          operator delete(v11);
        }
        v5 -= 64;
      }
      *(void *)(a1 + 240) = v9;
    }
  }
  else
  {
    sub_687510((void **)(a1 + 232), v6 - v7);
  }
  uint64_t v12 = *(void *)(a2 + 240) - *(void *)(a2 + 232);
  if (v12)
  {
    uint64_t v13 = 0;
    uint64_t v14 = v12 >> 6;
    do
    {
      *(unsigned char *)(*v4 + v13) = *(unsigned char *)(*v4 + v13) & 0xFE | *(unsigned char *)(*(void *)(a2 + 232) + v13) & 1;
      v13 += 64;
      --v14;
    }
    while (v14);
  }
}

void sub_684AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 232);
  uint64_t v5 = *(void *)(a1 + 240);
  char v4 = (void *)(a1 + 232);
  unint64_t v6 = (uint64_t)(*(void *)(a2 + 240) - *(void *)(a2 + 232)) >> 6;
  unint64_t v7 = (v5 - v3) >> 6;
  if (v6 <= v7)
  {
    if (v6 < v7)
    {
      uint64_t v9 = v3 + (v6 << 6);
      while (v5 != v9)
      {
        uint64_t v10 = *(void **)(v5 - 24);
        if (v10)
        {
          *(void *)(v5 - 16) = v10;
          operator delete(v10);
        }
        int8x8_t v11 = *(void **)(v5 - 48);
        if (v11)
        {
          *(void *)(v5 - 40) = v11;
          operator delete(v11);
        }
        v5 -= 64;
      }
      *(void *)(a1 + 240) = v9;
    }
  }
  else
  {
    sub_687510((void **)(a1 + 232), v6 - v7);
  }
  uint64_t v12 = *(void *)(a2 + 240) - *(void *)(a2 + 232);
  if (v12)
  {
    uint64_t v13 = 0;
    uint64_t v14 = v12 >> 6;
    do
    {
      *(unsigned char *)(*v4 + v13) = *(unsigned char *)(*v4 + v13) & 0xFD | *(unsigned char *)(*(void *)(a2 + 232) + v13) & 2;
      v13 += 64;
      --v14;
    }
    while (v14);
  }
}

void sub_684BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 232);
  uint64_t v5 = *(void *)(a1 + 240);
  char v4 = (void *)(a1 + 232);
  unint64_t v6 = (uint64_t)(*(void *)(a2 + 240) - *(void *)(a2 + 232)) >> 6;
  unint64_t v7 = (v5 - v3) >> 6;
  if (v6 <= v7)
  {
    if (v6 < v7)
    {
      uint64_t v9 = v3 + (v6 << 6);
      while (v5 != v9)
      {
        uint64_t v10 = *(void **)(v5 - 24);
        if (v10)
        {
          *(void *)(v5 - 16) = v10;
          operator delete(v10);
        }
        int8x8_t v11 = *(void **)(v5 - 48);
        if (v11)
        {
          *(void *)(v5 - 40) = v11;
          operator delete(v11);
        }
        v5 -= 64;
      }
      *(void *)(a1 + 240) = v9;
    }
  }
  else
  {
    sub_687510((void **)(a1 + 232), v6 - v7);
  }
  uint64_t v12 = *(void *)(a2 + 240) - *(void *)(a2 + 232);
  if (v12)
  {
    uint64_t v13 = 0;
    uint64_t v14 = v12 >> 6;
    do
    {
      *(unsigned char *)(*v4 + v13) = *(unsigned char *)(*v4 + v13) & 0xFD | (2 * (*(unsigned char *)(*(void *)(a2 + 232) + v13) & 1));
      v13 += 64;
      --v14;
    }
    while (v14);
  }
}

BOOL sub_684CB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(unsigned char **)(a1 + 232);
  int v2 = *(unsigned char **)(a1 + 240);
  if (v3 == v2) {
    return 0;
  }
  uint64_t v5 = *(unsigned char **)(a2 + 232);
  char v4 = *(unsigned char **)(a2 + 240);
  if (v5 == v4) {
    return 0;
  }
  if (*v3)
  {
    BOOL v6 = (*v5 & 1) == 0;
    if (*(v2 - 64)) {
      return v6 || (*(v4 - 64) & 1) == 0;
    }
  }
  else
  {
    BOOL v6 = 0;
    if (*(v2 - 64)) {
      return v6 || (*(v4 - 64) & 1) == 0;
    }
  }
  return v6;
}

BOOL sub_684D14(uint64_t a1)
{
  int v2 = *(unsigned char **)(a1 + 232);
  uint64_t v1 = *(unsigned char **)(a1 + 240);
  if (v2 == v1) {
    return 0;
  }
  int v3 = *(v1 - 64) & 6;
  return (*v2 & 6) == 4 || v3 == 4;
}

void sub_684D48(uint64_t a1)
{
  uint64_t v1 = *(long long **)(a1 + 232);
  int v2 = *(long long **)(a1 + 240);
  char v4 = v1;
  if (v1 != v2)
  {
    unint64_t v3 = (unint64_t)(v2 - 4);
    if (v2 - 4 > v1)
    {
      do
      {
        sub_687720(&v4, (uint64_t *)&v3);
        v3 -= 64;
        v4 += 4;
      }
      while ((unint64_t)v4 < v3);
    }
  }
}

uint64_t sub_684DA8(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + 232);
  uint64_t v2 = *(void *)(a1 + 240) - *(void *)(a1 + 232);
  if ((unint64_t)v2 < 0x41) {
    return 0;
  }
  unint64_t v3 = 0;
  unint64_t v4 = ((unint64_t)(v2 >> 6) >> 1) - 1;
  do
  {
    unsigned int v5 = *(unsigned __int8 *)sub_682D38(v1, v3);
    uint64_t result = (v5 >> 1) & 1;
    if ((v5 & 2) != 0) {
      break;
    }
  }
  while (v4 != v3++);
  return result;
}

uint64_t sub_684E2C(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + 232);
  unint64_t v2 = (uint64_t)(*(void *)(a1 + 240) - *(void *)(a1 + 232)) >> 6;
  unint64_t v3 = v2 >> 1;
  if (v2 >> 1 == v2) {
    return 0;
  }
  unint64_t v5 = v2 - 1;
  do
  {
    unsigned int v6 = *(unsigned __int8 *)sub_682D38(v1, v3);
    uint64_t result = (v6 >> 1) & 1;
    if ((v6 & 2) != 0) {
      break;
    }
  }
  while (v5 != v3++);
  return result;
}

uint64_t sub_684EAC(uint64_t a1)
{
  uint64_t v1 = sub_66DADC((uint64_t)(*(void *)(a1 + 240) - *(void *)(a1 + 232)) >> 6) - 1;

  return sub_66B14C(v1);
}

void sub_684EE8(uint64_t a1, unsigned __int8 a2)
{
  if (a2)
  {
    unint64_t v4 = a2;
    unint64_t v5 = *(void *)(a1 + 240);
    __int16 v6 = -256;
    *(_OWORD *)unint64_t v7 = 0u;
    long long v8 = 0u;
    *(_OWORD *)long long __p = 0u;
    uint64_t v10 = 0;
    sub_684FF0((void **)(a1 + 232), v5, v4, (unint64_t)&v6);
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    if (v7[1])
    {
      *(void **)&long long v8 = v7[1];
      operator delete(v7[1]);
    }
  }
  *(unsigned char *)(a1 + 162) += a2;
}

void sub_684F78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
  {
    operator delete(__p);
    uint64_t v16 = a11;
    if (!a11) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    uint64_t v16 = a11;
    if (!a11) {
      goto LABEL_3;
    }
  }
  operator delete(v16);
  _Unwind_Resume(exception_object);
}

void sub_684FB4(uint64_t a1, unsigned __int8 a2)
{
  *(unsigned char *)(a1 + 163) += a2;
}

unint64_t sub_684FF0(void **a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v4 = a2;
  if (!a3) {
    return v4;
  }
  long long v8 = a1[2];
  unint64_t v9 = (unint64_t)a1[1];
  if (a3 <= (uint64_t)&v8[-v9] >> 6)
  {
    unint64_t v15 = (uint64_t)(v9 - a2) >> 6;
    uint64_t v16 = a3;
    if (a3 <= v15) {
      goto LABEL_16;
    }
    uint64_t v17 = 0;
    uint64_t v16 = (uint64_t)(v9 - a2) >> 6;
    unint64_t v18 = v9 + ((a3 - v15) << 6);
    unint64_t v19 = (a3 << 6) - (v15 << 6);
    do
    {
      sub_597784(v9 + v17, (long long *)a4);
      v17 += 64;
    }
    while (v19 != v17);
    a1[1] = (void *)v18;
    if (v9 != v4)
    {
LABEL_16:
      sub_687828((uint64_t)a1, v4, v9, v4 + (a3 << 6));
      if (v4 <= a4)
      {
        if ((unint64_t)a1[1] <= a4) {
          unint64_t v20 = 0;
        }
        else {
          unint64_t v20 = a3;
        }
        a4 += v20 << 6;
      }
      unint64_t v21 = v4;
      do
      {
        *(_OWORD *)unint64_t v21 = *(_OWORD *)a4;
        if (v21 != a4)
        {
          sub_34E73C((void *)(v21 + 16), *(char **)(a4 + 16), *(char **)(a4 + 24), *(void *)(a4 + 24) - *(void *)(a4 + 16));
          sub_34E73C((void *)(v21 + 40), *(char **)(a4 + 40), *(char **)(a4 + 48), *(void *)(a4 + 48) - *(void *)(a4 + 40));
        }
        v21 += 64;
        --v16;
      }
      while (v16);
    }
    return v4;
  }
  uint64_t v10 = *a1;
  unint64_t v11 = a3 + ((uint64_t)(v9 - (void)*a1) >> 6);
  if (v11 >> 58) {
    sub_2E00();
  }
  uint64_t v12 = v8 - v10;
  if (v12 >> 5 > v11) {
    unint64_t v11 = v12 >> 5;
  }
  if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFC0) {
    unint64_t v13 = 0x3FFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v13 = v11;
  }
  if (v13)
  {
    if (v13 >> 58) {
      sub_188D718();
    }
    uint64_t v14 = (char *)operator new(v13 << 6);
  }
  else
  {
    uint64_t v14 = 0;
  }
  uint64_t v23 = (uint64_t)&v14[64 * ((uint64_t)(v4 - (void)v10) >> 6)];
  uint64_t v36 = v23;
  unsigned int v37 = &v14[64 * v13];
  unint64_t v24 = a3 << 6;
  unint64_t v25 = v23 + v24;
  do
  {
    sub_597784(v23, (long long *)a4);
    v23 += 64;
    v24 -= 64;
  }
  while (v24);
  uint64_t v22 = v36;
  uint64_t v26 = *a1;
  uint64_t v27 = v36;
  if (*a1 != (void *)v4)
  {
    uint64_t v28 = 0;
    do
    {
      uint64_t v29 = v36 + v28;
      uint64_t v30 = v4 + v28;
      *(_OWORD *)(v29 - 64) = *(_OWORD *)(v4 + v28 - 64);
      *(void *)(v29 - 40) = 0;
      *(void *)(v29 - 32) = 0;
      *(void *)(v29 - 48) = 0;
      *(_OWORD *)(v29 - 48) = *(_OWORD *)(v4 + v28 - 48);
      *(void *)(v29 - 32) = *(void *)(v4 + v28 - 32);
      *(void *)(v30 - 48) = 0;
      *(void *)(v30 - 40) = 0;
      *(void *)(v30 - 32) = 0;
      *(void *)(v29 - 24) = 0;
      *(void *)(v29 - 16) = 0;
      *(void *)(v29 - 8) = 0;
      *(_OWORD *)(v29 - 24) = *(_OWORD *)(v4 + v28 - 24);
      *(void *)(v29 - 8) = *(void *)(v4 + v28 - 8);
      *(void *)(v30 - 24) = 0;
      *(void *)(v30 - 16) = 0;
      *(void *)(v30 - 8) = 0;
      v28 -= 64;
    }
    while ((void *)(v4 + v28) != v26);
    uint64_t v27 = v36 + v28;
  }
  uint64_t v31 = a1[1];
  if (v31 != (void *)v4)
  {
    do
    {
      *(_OWORD *)unint64_t v25 = *(_OWORD *)v4;
      *(_OWORD *)(v25 + 16) = *(_OWORD *)(v4 + 16);
      *(void *)(v25 + 32) = *(void *)(v4 + 32);
      *(void *)(v4 + 16) = 0;
      *(void *)(v4 + 24) = 0;
      *(void *)(v4 + 32) = 0;
      *(_OWORD *)(v25 + 40) = *(_OWORD *)(v4 + 40);
      *(void *)(v25 + 56) = *(void *)(v4 + 56);
      *(void *)(v4 + 40) = 0;
      *(void *)(v4 + 48) = 0;
      *(void *)(v4 + 56) = 0;
      v25 += 64;
      v4 += 64;
    }
    while ((void *)v4 != v31);
    unint64_t v4 = (unint64_t)a1[1];
  }
  uint64_t v32 = *a1;
  *a1 = (void *)v27;
  a1[1] = (void *)v25;
  a1[2] = v37;
  while ((void *)v4 != v32)
  {
    uint64_t v33 = *(void **)(v4 - 24);
    if (v33)
    {
      *(void *)(v4 - 16) = v33;
      operator delete(v33);
    }
    uint64_t v34 = *(void **)(v4 - 48);
    if (v34)
    {
      *(void *)(v4 - 40) = v34;
      operator delete(v34);
    }
    v4 -= 64;
  }
  if (v32) {
    operator delete(v32);
  }
  return v22;
}

void sub_6852EC(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_6852F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_687498((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_68530C(uint64_t result, unsigned __int8 a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = *(void *)(result + 232);
  unint64_t v4 = (uint64_t *)(result + 232);
  uint64_t v5 = *(void *)(result + 240) - v3;
  if (a2 < (unint64_t)(v5 >> 6))
  {
    unsigned __int8 v6 = a2 + 1;
    unsigned int v7 = (a2 + 1);
    unsigned int v8 = (v5 >> 6);
    if (v8 <= v7) {
      unsigned int v9 = (a2 + 1);
    }
    else {
      unsigned int v9 = v8;
    }
    if (v7 < v8)
    {
      uint64_t v10 = (void *)result;
      unsigned int v11 = a2;
      while (1)
      {
        unint64_t v12 = v10[1];
        if (!v12) {
          goto LABEL_27;
        }
        uint8x8_t v13 = (uint8x8_t)vcnt_s8((int8x8_t)v12);
        v13.i16[0] = vaddlv_u8(v13);
        if (v13.u32[0] > 1uLL)
        {
          unint64_t v14 = v6;
          if (v12 <= v6) {
            unint64_t v14 = v6 % v12;
          }
        }
        else
        {
          unint64_t v14 = (v12 - 1) & v6;
        }
        unint64_t v15 = *(uint64_t ****)(*v10 + 8 * v14);
        if (!v15 || (uint64_t v16 = *v15) == 0)
        {
LABEL_27:
          unsigned __int8 v23 = v6;
          char v20 = v6 - 1;
          goto LABEL_28;
        }
        if (v13.u32[0] < 2uLL)
        {
          unint64_t v17 = v12 - 1;
          while (1)
          {
            unint64_t v19 = v16[1];
            if (v19 == (uint64_t *)v6)
            {
              if (*((unsigned __int8 *)v16 + 16) == v6) {
                goto LABEL_31;
              }
            }
            else if (((unint64_t)v19 & v17) != v14)
            {
              goto LABEL_27;
            }
            uint64_t v16 = (uint64_t **)*v16;
            if (!v16) {
              goto LABEL_27;
            }
          }
        }
        while (1)
        {
          unint64_t v18 = (unint64_t)v16[1];
          if (v18 == v6) {
            break;
          }
          if (v18 >= v12) {
            v18 %= v12;
          }
          if (v18 != v14) {
            goto LABEL_27;
          }
LABEL_17:
          uint64_t v16 = (uint64_t **)*v16;
          if (!v16) {
            goto LABEL_27;
          }
        }
        if (*((unsigned __int8 *)v16 + 16) != v6) {
          goto LABEL_17;
        }
LABEL_31:
        unsigned int v21 = *((unsigned __int8 *)v16 + 17);
        if (v21 != 255 && v11 < v21)
        {
          char v20 = v21 - 1;
          unsigned __int8 v23 = v6;
          if (v6 == (v21 - 1))
          {
            sub_686740(v10, &v23);
            goto LABEL_29;
          }
LABEL_28:
          unint64_t v24 = &v23;
          *((unsigned char *)sub_686858((uint64_t)v10, &v23, (uint64_t)&unk_20F06E0, &v24) + 17) = v20;
        }
LABEL_29:
        if (v9 == ++v6)
        {
          uint64_t v3 = *v4;
          return sub_6854E4((uint64_t)v4, v3 + (v2 << 6));
        }
      }
    }
    return sub_6854E4((uint64_t)v4, v3 + (v2 << 6));
  }
  return result;
}

uint64_t sub_6854E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2 + 64;
  uint64_t v5 = *(void *)(a1 + 8);
  if (a2 + 64 == v5)
  {
    uint64_t v7 = a2;
  }
  else
  {
    uint64_t v6 = a2;
    do
    {
      *(_OWORD *)uint64_t v6 = *(_OWORD *)(v6 + 64);
      unsigned int v9 = *(void **)(v6 + 16);
      if (v9)
      {
        *(void *)(v6 + 24) = v9;
        operator delete(v9);
        *(void *)(v6 + 24) = 0;
        *(void *)(v6 + 32) = 0;
      }
      *(_OWORD *)(v6 + 16) = *(_OWORD *)(v6 + 80);
      *(void *)(v6 + 32) = *(void *)(v6 + 96);
      *(void *)(v6 + 88) = 0;
      *(void *)(v6 + 96) = 0;
      *(void *)(v6 + 80) = 0;
      uint64_t v10 = *(void **)(v6 + 40);
      if (v10)
      {
        *(void *)(v6 + 48) = v10;
        operator delete(v10);
        *(void *)(v6 + 48) = 0;
        *(void *)(v6 + 56) = 0;
      }
      *(_OWORD *)(v6 + 40) = *(_OWORD *)(v6 + 104);
      *(void *)(v6 + 56) = *(void *)(v6 + 120);
      *(void *)(v6 + 112) = 0;
      *(void *)(v6 + 120) = 0;
      *(void *)(v6 + 104) = 0;
      uint64_t v7 = v6 + 64;
      uint64_t v8 = v6 + 128;
      v6 += 64;
    }
    while (v8 != v5);
    uint64_t v4 = *(void *)(a1 + 8);
  }
  while (v4 != v7)
  {
    unsigned int v11 = *(void **)(v4 - 24);
    if (v11)
    {
      *(void *)(v4 - 16) = v11;
      operator delete(v11);
    }
    unint64_t v12 = *(void **)(v4 - 48);
    if (v12)
    {
      *(void *)(v4 - 40) = v12;
      operator delete(v12);
    }
    v4 -= 64;
  }
  *(void *)(a1 + 8) = v7;
  return a2;
}

unint64_t sub_6855F0(void *a1)
{
  uint64_t v2 = (unsigned char *)a1[29];
  uint64_t v3 = (unsigned char *)a1[30];
  if (v2 == v3)
  {
LABEL_25:
    unint64_t v14 = (unsigned char *)a1[29];
    if (v2 != (unsigned char *)a1[30] || v14 == v2) {
      goto LABEL_34;
    }
  }
  else
  {
    LODWORD(v4) = -1;
    do
    {
      uint64_t v4 = (v4 + 1);
      if (*v2)
      {
        unsigned __int8 v5 = sub_66B14C(v4);
        unint64_t v6 = a1[11];
        if (v6)
        {
          uint8x8_t v7 = (uint8x8_t)vcnt_s8((int8x8_t)v6);
          v7.i16[0] = vaddlv_u8(v7);
          if (v7.u32[0] > 1uLL)
          {
            unint64_t v8 = v5;
            if (v6 <= v5) {
              unint64_t v8 = v5 % v6;
            }
          }
          else
          {
            unint64_t v8 = (v6 - 1) & v5;
          }
          unsigned int v9 = *(uint64_t ****)(a1[10] + 8 * v8);
          if (v9)
          {
            uint64_t v10 = *v9;
            if (v10)
            {
              if (v7.u32[0] < 2uLL)
              {
                unint64_t v11 = v6 - 1;
                while (1)
                {
                  uint8x8_t v13 = v10[1];
                  if (v13 == (uint64_t *)v5)
                  {
                    if (*((unsigned __int8 *)v10 + 16) == v5) {
                      goto LABEL_3;
                    }
                  }
                  else if (((unint64_t)v13 & v11) != v8)
                  {
                    goto LABEL_25;
                  }
                  uint64_t v10 = (uint64_t **)*v10;
                  if (!v10) {
                    goto LABEL_25;
                  }
                }
              }
              while (1)
              {
                unint64_t v12 = (unint64_t)v10[1];
                if (v12 == v5)
                {
                  if (*((unsigned __int8 *)v10 + 16) == v5) {
                    goto LABEL_3;
                  }
                }
                else
                {
                  if (v12 >= v6) {
                    v12 %= v6;
                  }
                  if (v12 != v8) {
                    goto LABEL_25;
                  }
                }
                uint64_t v10 = (uint64_t **)*v10;
                if (!v10) {
                  goto LABEL_25;
                }
              }
            }
          }
        }
        goto LABEL_25;
      }
LABEL_3:
      v2 += 64;
    }
    while (v2 != v3);
    uint64_t v2 = v3;
    unint64_t v14 = (unsigned char *)a1[29];
    if (v3 != (unsigned char *)a1[30] || v14 == v3) {
      goto LABEL_34;
    }
  }
  uint64_t v16 = v14;
  while ((*v16 & 1) == 0)
  {
    v16 += 64;
    if (v16 == v2) {
      goto LABEL_34;
    }
  }
  uint64_t v2 = v16;
LABEL_34:

  return sub_6825D4((v2 - v14) >> 6);
}

unint64_t sub_68577C(void *a1)
{
  unsigned __int8 v2 = sub_66DADC((uint64_t)(a1[30] - a1[29]) >> 6);
  uint64_t v3 = a1[29];
  uint64_t v4 = a1[30];
  uint64_t v5 = v4;
  if (v4 != v3)
  {
    uint64_t v5 = a1[30];
    uint64_t v6 = v5;
    while (1)
    {
      char v7 = *(unsigned char *)(v6 - 64);
      v6 -= 64;
      --v2;
      if (v7) {
        break;
      }
LABEL_3:
      uint64_t v5 = v6;
      if (v6 == v3) {
        goto LABEL_26;
      }
    }
    unint64_t v8 = a1[11];
    if (v8)
    {
      uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
      v9.i16[0] = vaddlv_u8(v9);
      if (v9.u32[0] > 1uLL)
      {
        unint64_t v10 = v2;
        if (v8 <= v2) {
          unint64_t v10 = v2 % v8;
        }
      }
      else
      {
        unint64_t v10 = (v8 - 1) & v2;
      }
      unint64_t v11 = *(uint64_t ****)(a1[10] + 8 * v10);
      if (v11)
      {
        unint64_t v12 = *v11;
        if (v12)
        {
          if (v9.u32[0] < 2uLL)
          {
            unint64_t v13 = v8 - 1;
            while (1)
            {
              unint64_t v15 = v12[1];
              if (v15 == (uint64_t *)v2)
              {
                if (*((unsigned __int8 *)v12 + 16) == v2) {
                  goto LABEL_3;
                }
              }
              else if (((unint64_t)v15 & v13) != v10)
              {
                goto LABEL_25;
              }
              unint64_t v12 = (uint64_t **)*v12;
              if (!v12) {
                goto LABEL_25;
              }
            }
          }
          do
          {
            unint64_t v14 = (unint64_t)v12[1];
            if (v14 == v2)
            {
              if (*((unsigned __int8 *)v12 + 16) == v2) {
                goto LABEL_3;
              }
            }
            else
            {
              if (v14 >= v8) {
                v14 %= v8;
              }
              if (v14 != v10) {
                break;
              }
            }
            unint64_t v12 = (uint64_t **)*v12;
          }
          while (v12);
        }
      }
    }
  }
LABEL_25:
  if (v5 == v3)
  {
LABEL_26:
    while (v4 != v3)
    {
      char v16 = *(unsigned char *)(v4 - 64);
      v4 -= 64;
      if (v16)
      {
        uint64_t v5 = v4 + 64;
        goto LABEL_30;
      }
    }
    uint64_t v5 = a1[29];
  }
LABEL_30:

  return sub_6825D4(((v5 - v3) >> 6) - 1);
}

uint64_t sub_6858F0(uint64_t a1, unsigned __int8 **a2)
{
  unsigned __int8 v2 = *a2;
  uint64_t v3 = a2[1];
  if (*a2 == v3) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 232);
  while (1)
  {
    unint64_t v5 = *v2;
    if (*(void *)(a1 + 240) - v4) >> 6 > v5 && (*(unsigned char *)(v4 + (v5 << 6))) {
      break;
    }
    if (++v2 == v3) {
      return 0;
    }
  }
  return 1;
}

uint64_t sub_685940(uint64_t a1, unsigned __int8 **a2)
{
  unsigned __int8 v2 = *a2;
  uint64_t v3 = a2[1];
  if (*a2 == v3) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 232);
  while (1)
  {
    unint64_t v5 = *v2;
    if ((*(void *)(a1 + 240) - v4) >> 6 > v5 && (*(unsigned char *)(v4 + (v5 << 6)) & 2) != 0) {
      break;
    }
    if (++v2 == v3) {
      return 0;
    }
  }
  return 1;
}

BOOL sub_685990(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unsigned __int8 v4 = sub_66DADC((uint64_t)(*(void *)(a1 + 240) - *(void *)(a1 + 232)) >> 6);
  if (sub_66DADC((uint64_t)(*(void *)(a2 + 240) - *(void *)(a2 + 232)) >> 6) == v4)
  {
    unint64_t v5 = *(unsigned __int8 **)(v3 + 232);
    uint64_t v6 = *(unsigned char **)(v3 + 240);
    uint64_t v7 = (v6 - v5) >> 6;
    unint64_t v8 = *(unsigned __int8 **)(a2 + 232);
    if (v7 == (uint64_t)(*(void *)(a2 + 240) - (void)v8) >> 6)
    {
      if (v6 != v5)
      {
        uint64_t v9 = v7 - 1;
        do
        {
          unsigned __int8 v11 = *v5;
          v5 += 64;
          unsigned __int8 v10 = v11;
          unsigned __int8 v12 = *v8;
          v8 += 64;
          int v13 = (v12 ^ v10) & 2;
          BOOL result = v13 == 0;
          BOOL v15 = v9-- != 0;
        }
        while (v15 && !v13);
        return result;
      }
      return 1;
    }
    return 0;
  }
  unint64_t v17 = *(unsigned __int8 **)(v3 + 232);
  char v16 = *(unsigned __int8 **)(v3 + 240);
  if (v17 == v16)
  {
    unint64_t v19 = 0;
    goto LABEL_17;
  }
  unint64_t v18 = v16 - v17 - 64;
  if (v18 < 0x40)
  {
    unint64_t v19 = 0;
    char v20 = *(unsigned __int8 **)(v3 + 232);
    do
    {
LABEL_16:
      unsigned int v28 = *v20;
      v20 += 64;
      v19 += ((unint64_t)v28 >> 1) & 1;
    }
    while (v20 != v16);
    goto LABEL_17;
  }
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = (v18 >> 6) + 1;
  char v20 = &v17[64 * (v23 & 0x7FFFFFFFFFFFFFELL)];
  unint64_t v24 = v17 + 64;
  uint64_t v25 = v23 & 0x7FFFFFFFFFFFFFELL;
  do
  {
    unint64_t v26 = *(v24 - 64);
    unsigned int v27 = *v24;
    v24 += 128;
    v21 += (v26 >> 1) & 1;
    v22 += ((unint64_t)v27 >> 1) & 1;
    v25 -= 2;
  }
  while (v25);
  unint64_t v19 = v22 + v21;
  if (v23 != (v23 & 0x7FFFFFFFFFFFFFELL)) {
    goto LABEL_16;
  }
LABEL_17:
  if ((uint64_t)(*(void *)(v3 + 240) - *(void *)(v3 + 232)) >> 6 == sub_6825D4(v19)) {
    return 0;
  }
  uint64_t v30 = *(unsigned __int8 **)(a2 + 232);
  uint64_t v29 = *(unsigned __int8 **)(a2 + 240);
  if (v30 == v29)
  {
    unint64_t v32 = 0;
    goto LABEL_26;
  }
  unint64_t v31 = v29 - v30 - 64;
  if (v31 < 0x40)
  {
    unint64_t v32 = 0;
    uint64_t v33 = *(unsigned __int8 **)(a2 + 232);
    do
    {
LABEL_25:
      unsigned int v41 = *v33;
      v33 += 64;
      v32 += ((unint64_t)v41 >> 1) & 1;
    }
    while (v33 != v29);
    goto LABEL_26;
  }
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  uint64_t v36 = (v31 >> 6) + 1;
  uint64_t v33 = &v30[64 * (v36 & 0x7FFFFFFFFFFFFFELL)];
  unsigned int v37 = v30 + 64;
  uint64_t v38 = v36 & 0x7FFFFFFFFFFFFFELL;
  do
  {
    unint64_t v39 = *(v37 - 64);
    unsigned int v40 = *v37;
    v37 += 128;
    v34 += (v39 >> 1) & 1;
    v35 += ((unint64_t)v40 >> 1) & 1;
    v38 -= 2;
  }
  while (v38);
  unint64_t v32 = v35 + v34;
  if (v36 != (v36 & 0x7FFFFFFFFFFFFFELL)) {
    goto LABEL_25;
  }
LABEL_26:
  if ((uint64_t)(*(void *)(a2 + 240) - *(void *)(a2 + 232)) >> 6 == sub_6825D4(v32)) {
    return 0;
  }
  unsigned __int8 v42 = sub_66DADC((uint64_t)(*(void *)(v3 + 240) - *(void *)(v3 + 232)) >> 6);
  if (sub_66DADC((uint64_t)(*(void *)(a2 + 240) - *(void *)(a2 + 232)) >> 6) <= v42) {
    uint64_t v43 = a2;
  }
  else {
    uint64_t v43 = v3;
  }
  unsigned __int8 v44 = sub_66DADC((uint64_t)(*(void *)(v3 + 240) - *(void *)(v3 + 232)) >> 6);
  if (sub_66DADC((uint64_t)(*(void *)(a2 + 240) - *(void *)(a2 + 232)) >> 6) > v44) {
    uint64_t v3 = a2;
  }
  char v45 = sub_66DADC((uint64_t)(*(void *)(v3 + 240) - *(void *)(v3 + 232)) >> 6);
  char v46 = sub_66DADC((uint64_t)(*(void *)(v43 + 240) - *(void *)(v43 + 232)) >> 6);
  unint64_t v47 = *(unsigned __int8 **)(v3 + 232);
  if ((*v47 & 2) != 0)
  {
    uint64_t v55 = *(void *)(v43 + 232);
    uint64_t v54 = *(void *)(v43 + 240);
    if (v55 == v54) {
      return 1;
    }
    uint64_t v56 = v55 + 64;
    do
    {
      unsigned __int8 v57 = *v47;
      v47 += 64;
      BOOL result = ((v57 ^ *(unsigned char *)(v56 - 64)) & 2) == 0;
      if (((v57 ^ *(unsigned char *)(v56 - 64)) & 2) != 0) {
        break;
      }
      BOOL v53 = v56 == v54;
      v56 += 64;
    }
    while (!v53);
  }
  else
  {
    if ((*(unsigned char *)(*(void *)(v3 + 240) - 64) & 2) == 0) {
      return 0;
    }
    uint64_t v49 = *(void *)(v43 + 232);
    uint64_t v48 = *(void *)(v43 + 240);
    if (v49 == v48) {
      return 1;
    }
    uint64_t v50 = &v47[64 * (unint64_t)(v45 - v46)];
    uint64_t v51 = v49 + 64;
    do
    {
      unsigned __int8 v52 = *v50;
      v50 += 64;
      BOOL result = ((v52 ^ *(unsigned char *)(v51 - 64)) & 2) == 0;
      if (((v52 ^ *(unsigned char *)(v51 - 64)) & 2) != 0) {
        break;
      }
      BOOL v53 = v51 == v48;
      v51 += 64;
    }
    while (!v53);
  }
  return result;
}

uint64_t sub_685CCC(uint64_t a1)
{
  return *(void *)(a1 + 272);
}

uint64_t sub_685CD8(uint64_t a1)
{
  return *(void *)(a1 + 288);
}

unint64_t sub_685CE4(uint64_t a1)
{
  return sub_66DADC(*(void *)(a1 + 104));
}

uint64_t sub_685CEC(uint64_t a1)
{
  return *(void *)(a1 + 304);
}

uint64_t sub_685CF8(uint64_t a1, unsigned __int8 a2)
{
  return *(void *)(sub_682D38((void *)(a1 + 232), a2) + 8);
}

uint64_t sub_685D1C(void *a1, unint64_t a2)
{
  if (a2 >= (uint64_t)(a1[1] - *a1) >> 3)
  {
    exception = __cxa_allocate_exception(0x40uLL);
    std::to_string(&v16, a2);
    uint64_t v6 = std::string::insert(&v16, 0, "Out-of-bounds access in Vector::at with index=");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v17.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    unint64_t v8 = std::string::append(&v17, ",size=");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v18.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v18.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v15, (uint64_t)(a1[1] - *a1) >> 3);
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      unsigned __int8 v10 = &v15;
    }
    else {
      unsigned __int8 v10 = (std::string *)v15.__r_.__value_.__r.__words[0];
    }
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v15.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v15.__r_.__value_.__l.__size_;
    }
    unsigned __int8 v12 = std::string::append(&v18, (const std::string::value_type *)v10, size);
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    std::string::size_type v20 = v12->__r_.__value_.__r.__words[2];
    long long v19 = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    unint64_t v14 = (void *)sub_2F404((uint64_t)exception, &v19);
  }
  return *a1 + 8 * a2;
}

void sub_685E4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 41) < 0) {
    operator delete(*(void **)(v33 - 64));
  }
  if (a14 < 0)
  {
    operator delete(a9);
    if ((a33 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a26 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_10;
    }
  }
  else if ((a33 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(a28);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_7;
  }
LABEL_10:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0) {
LABEL_11:
  }
    _Unwind_Resume(a1);
LABEL_7:
  operator delete(__p);
  goto LABEL_11;
}

uint64_t sub_685F2C(uint64_t result, unsigned __int8 a2, void *a3)
{
  *(void *)(*(void *)(result + 232) + ((unint64_t)a2 << 6) + 8) = *a3;
  return result;
}

uint64_t **sub_685F44(uint64_t a1, unsigned __int8 a2)
{
  unsigned __int8 v3 = a2;
  return sub_597118(a1 + 80, &v3, &v3);
}

BOOL sub_685F74(uint64_t a1, unsigned __int8 a2)
{
  unint64_t v2 = *(void *)(a1 + 88);
  if (!v2)
  {
    unint64_t v5 = 0;
    return v5 != 0;
  }
  uint8x8_t v3 = (uint8x8_t)vcnt_s8((int8x8_t)v2);
  v3.i16[0] = vaddlv_u8(v3);
  if (v3.u32[0] > 1uLL)
  {
    unint64_t v4 = a2;
    if (v2 <= a2) {
      unint64_t v4 = a2 % v2;
    }
  }
  else
  {
    unint64_t v4 = (v2 - 1) & a2;
  }
  unint64_t v5 = *(uint64_t ***)(*(void *)(a1 + 80) + 8 * v4);
  if (!v5) {
    return v5 != 0;
  }
  unint64_t v5 = (uint64_t **)*v5;
  if (!v5) {
    return v5 != 0;
  }
  if (v3.u32[0] >= 2uLL)
  {
    do
    {
      unint64_t v8 = (unint64_t)v5[1];
      if (v8 == a2)
      {
        if (*((unsigned __int8 *)v5 + 16) == a2) {
          return v5 != 0;
        }
      }
      else
      {
        if (v8 >= v2) {
          v8 %= v2;
        }
        if (v8 != v4) {
          return 0;
        }
      }
      unint64_t v5 = (uint64_t **)*v5;
    }
    while (v5);
    return v5 != 0;
  }
  unint64_t v7 = v2 - 1;
  while (1)
  {
    long long v9 = v5[1];
    if (v9 == (uint64_t *)a2)
    {
      if (*((unsigned __int8 *)v5 + 16) == a2) {
        return v5 != 0;
      }
      goto LABEL_20;
    }
    if (((unint64_t)v9 & v7) != v4) {
      return 0;
    }
LABEL_20:
    unint64_t v5 = (uint64_t **)*v5;
    if (!v5) {
      return v5 != 0;
    }
  }
}

uint64_t sub_686074(uint64_t a1)
{
  return *(void *)(a1 + 320);
}

uint64_t sub_68607C(uint64_t result, void *a2)
{
  *(void *)(result + 320) = *a2;
  return result;
}

uint64_t *sub_686088(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v3 = *(void *)(a1 + 232);
  uint64_t v4 = *(void *)(a1 + 240);
  unint64_t v2 = (void *)(a1 + 232);
  if (a2 >= (unint64_t)((v4 - v3) >> 6)) {
    return &qword_25A0530;
  }
  else {
    return (uint64_t *)(sub_682D38(v2, a2) + 16);
  }
}

char *sub_6860C8(uint64_t a1, unsigned __int8 a2, char **a3)
{
  uint64_t v5 = a2;
  sub_6837BC(a1, a2);
  *(void *)(*(void *)(a1 + 232) + (v5 << 6) + 24) = *(void *)(*(void *)(a1 + 232) + (v5 << 6) + 16);
  sub_6837BC(a1, v5);
  uint64_t v6 = (char **)(*(void *)(a1 + 232) + (v5 << 6) + 16);
  unint64_t v7 = *v6;
  unint64_t v8 = *a3;
  long long v9 = a3[1];
  unint64_t v10 = v9 - *a3;

  return sub_7C374((uint64_t)v6, v7, v8, v9, v10);
}

char *sub_686144(uint64_t a1, unsigned __int8 a2, char **a3)
{
  uint64_t v5 = a2;
  sub_6837BC(a1, a2);
  uint64_t v6 = *(void *)(a1 + 232) + (v5 << 6);
  long long v9 = *(char **)(v6 + 16);
  uint64_t v7 = v6 + 16;
  unint64_t v8 = v9;
  unint64_t v10 = *a3;
  unsigned __int8 v11 = a3[1];
  unint64_t v12 = v11 - *a3;

  return sub_7C374(v7, v8, v10, v11, v12);
}

BOOL sub_6861A0(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2 = *(void *)(a1 + 232);
  return a2 < (unint64_t)((*(void *)(a1 + 240) - v2) >> 6)
      && *(void *)(v2 + ((unint64_t)a2 << 6) + 16) != *(void *)(v2 + ((unint64_t)a2 << 6) + 24);
}

uint64_t sub_6861D0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 232);
  uint64_t v1 = *(void *)(a1 + 240);
  if (v2 == v1) {
    return 0;
  }
  unint64_t v3 = v1 - v2 - 64;
  if (v3 < 0x200)
  {
    LODWORD(result) = 0;
    goto LABEL_18;
  }
  unint64_t v5 = v3 >> 6;
  uint64_t v6 = (v3 >> 6) + 1;
  if (v3 < 0x400)
  {
    LOBYTE(result) = 0;
    unint64_t v7 = 0;
LABEL_13:
    uint64_t v28 = v6 & 7;
    if ((v6 & 7) == 0) {
      uint64_t v28 = 8;
    }
    int8x8_t v29 = (int8x8_t)result;
    uint64_t v30 = v2 + ((v6 - v28) << 6);
    uint64_t v31 = ~v5 + v7 + v28;
    unint64_t v32 = (uint64_t *)(v2 + (v7 << 6) + 272);
    do
    {
      v33.i64[0] = *(v32 - 32);
      v33.i64[1] = *(v32 - 24);
      v34.i64[0] = *(v32 - 16);
      v34.i64[1] = *(v32 - 8);
      v35.i64[0] = *v32;
      v36.i64[0] = v32[1];
      v35.i64[1] = v32[8];
      v37.i64[0] = v32[16];
      v38.i64[0] = v32[17];
      v37.i64[1] = v32[24];
      v39.i64[0] = *(v32 - 31);
      v39.i64[1] = *(v32 - 23);
      v40.i64[0] = *(v32 - 15);
      v40.i64[1] = *(v32 - 7);
      v36.i64[1] = v32[9];
      v38.i64[1] = v32[25];
      int8x8_t v29 = vsub_s8(v29, vmovn_s16((int16x8_t)vmvnq_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64(v33, v39), (int32x4_t)vceqq_s64(v34, v40)), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64(v35, v36), (int32x4_t)vceqq_s64(v37, v38))))));
      v32 += 64;
      v31 += 8;
    }
    while (v31);
    v29.i8[0] = vaddv_s8(v29);
    LODWORD(result) = v29.i32[0];
    uint64_t v2 = v30;
    goto LABEL_18;
  }
  unint64_t v8 = 16;
  if ((v6 & 0xF) != 0) {
    unint64_t v8 = v6 & 0xF;
  }
  unint64_t v7 = v6 - v8;
  int8x16_t v9 = 0uLL;
  unint64_t v10 = *(void **)(a1 + 232);
  uint64_t v11 = v6;
  do
  {
    v12.i64[0] = v10[2];
    v13.i64[0] = v10[3];
    v12.i64[1] = v10[10];
    v14.i64[0] = v10[18];
    v15.i64[0] = v10[19];
    v14.i64[1] = v10[26];
    v16.i64[0] = v10[34];
    v17.i64[0] = v10[35];
    v16.i64[1] = v10[42];
    v18.i64[0] = v10[50];
    v19.i64[0] = v10[51];
    v18.i64[1] = v10[58];
    v20.i64[0] = v10[66];
    v20.i64[1] = v10[74];
    v21.i64[0] = v10[82];
    v21.i64[1] = v10[90];
    v22.i64[0] = v10[98];
    v22.i64[1] = v10[106];
    v23.i64[0] = v10[114];
    v23.i64[1] = v10[122];
    v13.i64[1] = v10[11];
    v15.i64[1] = v10[27];
    v17.i64[1] = v10[43];
    v19.i64[1] = v10[59];
    v24.i64[0] = v10[67];
    v24.i64[1] = v10[75];
    v25.i64[0] = v10[83];
    v25.i64[1] = v10[91];
    v26.i64[0] = v10[99];
    v26.i64[1] = v10[107];
    v27.i64[0] = v10[115];
    v27.i64[1] = v10[123];
    int8x16_t v9 = vsubq_s8(v9, vuzp1q_s8(vmvnq_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64(v12, v13), (int32x4_t)vceqq_s64(v14, v15)), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64(v16, v17), (int32x4_t)vceqq_s64(v18, v19)))), vmvnq_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64(v20, v24), (int32x4_t)vceqq_s64(v21, v25)), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64(v22, v26), (int32x4_t)vceqq_s64(v23, v27))))));
    v11 -= 16;
    v10 += 128;
  }
  while (v8 != v11);
  v9.i8[0] = vaddvq_s8(v9);
  LODWORD(result) = v9.i32[0];
  if (v8 >= 9) {
    goto LABEL_13;
  }
  v2 += v7 << 6;
  do
  {
LABEL_18:
    if (*(void *)(v2 + 16) == *(void *)(v2 + 24)) {
      uint64_t result = result;
    }
    else {
      uint64_t result = (result + 1);
    }
    v2 += 64;
  }
  while (v2 != v1);
  return result;
}

uint64_t sub_686440(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 232);
  uint64_t v3 = *(void *)(a1 + 240);
  uint64_t v1 = a1 + 232;
  if (v2 == v3)
  {
    uint64_t v3 = *(void *)(a1 + 232);
  }
  else
  {
    while ((*(unsigned char *)v2 & 8) == 0)
    {
      v2 += 64;
      if (v2 == v3)
      {
        uint64_t v2 = *(void *)(a1 + 240);
        goto LABEL_17;
      }
    }
    if (v2 != v3)
    {
      uint64_t v5 = v2 + 64;
      if (v2 + 64 != v3)
      {
        do
        {
          if ((*(unsigned char *)v5 & 8) == 0)
          {
            *(_OWORD *)uint64_t v2 = *(_OWORD *)v5;
            uint64_t v6 = *(void **)(v2 + 16);
            if (v6)
            {
              *(void *)(v2 + 24) = v6;
              operator delete(v6);
              *(void *)(v2 + 16) = 0;
              *(void *)(v2 + 24) = 0;
              *(void *)(v2 + 32) = 0;
            }
            *(_OWORD *)(v2 + 16) = *(_OWORD *)(v5 + 16);
            *(void *)(v2 + 32) = *(void *)(v5 + 32);
            *(void *)(v5 + 16) = 0;
            *(void *)(v5 + 24) = 0;
            *(void *)(v5 + 32) = 0;
            unint64_t v7 = *(void **)(v2 + 40);
            if (v7)
            {
              *(void *)(v2 + 48) = v7;
              operator delete(v7);
              *(void *)(v2 + 40) = 0;
              *(void *)(v2 + 48) = 0;
              *(void *)(v2 + 56) = 0;
            }
            *(_OWORD *)(v2 + 40) = *(_OWORD *)(v5 + 40);
            *(void *)(v2 + 56) = *(void *)(v5 + 56);
            *(void *)(v5 + 40) = 0;
            *(void *)(v5 + 48) = 0;
            *(void *)(v5 + 56) = 0;
            v2 += 64;
          }
          v5 += 64;
        }
        while (v5 != v3);
        uint64_t v3 = *(void *)(a1 + 240);
      }
    }
  }
LABEL_17:

  return sub_68656C(v1, v2, v3);
}

uint64_t sub_68656C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 != a3)
  {
    uint64_t v5 = a3;
    uint64_t v6 = *(void *)(a1 + 8);
    if (a3 == v6)
    {
      uint64_t v8 = a2;
    }
    else
    {
      uint64_t v7 = (a3 - a2) >> 6 << 6;
      uint64_t v8 = a2;
      do
      {
        uint64_t v10 = v8 + v7;
        *(_OWORD *)uint64_t v8 = *(_OWORD *)(v8 + v7);
        uint64_t v11 = *(void **)(v8 + 16);
        if (v11)
        {
          *(void *)(v8 + 24) = v11;
          operator delete(v11);
          *(void *)(v8 + 16) = 0;
          *(void *)(v8 + 24) = 0;
          *(void *)(v8 + 32) = 0;
        }
        *(_OWORD *)(v8 + 16) = *(_OWORD *)(v10 + 16);
        *(void *)(v8 + 32) = *(void *)(v10 + 32);
        *(void *)(v10 + 16) = 0;
        *(void *)(v10 + 24) = 0;
        *(void *)(v10 + 32) = 0;
        int64x2_t v12 = *(void **)(v8 + 40);
        if (v12)
        {
          *(void *)(v8 + 48) = v12;
          operator delete(v12);
          *(void *)(v8 + 40) = 0;
          *(void *)(v8 + 48) = 0;
          *(void *)(v8 + 56) = 0;
        }
        int8x16_t v9 = (void *)(v8 + v7);
        *(_OWORD *)(v8 + 40) = *(_OWORD *)(v8 + v7 + 40);
        *(void *)(v8 + 56) = *(void *)(v8 + v7 + 56);
        v9[5] = 0;
        v9[6] = 0;
        v9[7] = 0;
        v8 += 64;
      }
      while (v8 + v7 != v6);
      uint64_t v5 = *(void *)(a1 + 8);
    }
    while (v5 != v8)
    {
      int64x2_t v13 = *(void **)(v5 - 24);
      if (v13)
      {
        *(void *)(v5 - 16) = v13;
        operator delete(v13);
      }
      int64x2_t v14 = *(void **)(v5 - 48);
      if (v14)
      {
        *(void *)(v5 - 40) = v14;
        operator delete(v14);
      }
      v5 -= 64;
    }
    *(void *)(a1 + 8) = v8;
  }
  return a2;
}

unint64_t sub_6866AC(uint64_t a1)
{
  uint64_t v2 = *(unsigned __int8 **)(a1 + 232);
  uint64_t v1 = *(unsigned __int8 **)(a1 + 240);
  if (v2 == v1)
  {
    unint64_t v4 = 0;
    return sub_6825D4(v4);
  }
  unint64_t v3 = v1 - v2 - 64;
  if (v3 < 0x40)
  {
    unint64_t v4 = 0;
    uint64_t v5 = v2;
    do
    {
LABEL_9:
      unsigned int v13 = *v5;
      v5 += 64;
      v4 += ((unint64_t)v13 >> 3) & 1;
    }
    while (v5 != v1);
    return sub_6825D4(v4);
  }
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = (v3 >> 6) + 1;
  uint64_t v5 = &v2[64 * (v8 & 0x7FFFFFFFFFFFFFELL)];
  int8x16_t v9 = v2 + 64;
  uint64_t v10 = v8 & 0x7FFFFFFFFFFFFFELL;
  do
  {
    unint64_t v11 = *(v9 - 64);
    unsigned int v12 = *v9;
    v9 += 128;
    v6 += (v11 >> 3) & 1;
    v7 += ((unint64_t)v12 >> 3) & 1;
    v10 -= 2;
  }
  while (v10);
  unint64_t v4 = v7 + v6;
  if (v8 != (v8 & 0x7FFFFFFFFFFFFFELL)) {
    goto LABEL_9;
  }
  return sub_6825D4(v4);
}

uint64_t sub_686740(void *a1, unsigned __int8 *a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (!*(void *)&v2) {
    return 0;
  }
  unint64_t v3 = *a2;
  uint8x8_t v4 = (uint8x8_t)vcnt_s8(v2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] > 1uLL)
  {
    unint64_t v5 = *a2;
    if (*(void *)&v2 <= v3) {
      unint64_t v5 = v3 % *(void *)&v2;
    }
  }
  else
  {
    unint64_t v5 = (v2.i32[0] - 1) & v3;
  }
  uint64_t v6 = *(uint64_t ****)(*a1 + 8 * v5);
  if (!v6) {
    return 0;
  }
  uint64_t v7 = *v6;
  if (!*v6) {
    return 0;
  }
  if (v4.u32[0] < 2uLL)
  {
    uint64_t v8 = *(void *)&v2 - 1;
    while (1)
    {
      uint64_t v10 = v7[1];
      if (v10 == (uint64_t *)v3)
      {
        if (v3 == *((unsigned __int8 *)v7 + 16)) {
          goto LABEL_22;
        }
      }
      else if (((unint64_t)v10 & v8) != v5)
      {
        return 0;
      }
      uint64_t v7 = (uint64_t **)*v7;
      if (!v7) {
        return 0;
      }
    }
  }
  while (1)
  {
    unint64_t v9 = (unint64_t)v7[1];
    if (v9 == v3) {
      break;
    }
    if (v9 >= *(void *)&v2) {
      v9 %= *(void *)&v2;
    }
    if (v9 != v5) {
      return 0;
    }
LABEL_11:
    uint64_t v7 = (uint64_t **)*v7;
    if (!v7) {
      return 0;
    }
  }
  if (v3 != *((unsigned __int8 *)v7 + 16)) {
    goto LABEL_11;
  }
LABEL_22:
  sub_256F0(a1, v7, (uint64_t)&__p);
  unsigned int v12 = __p;
  long long __p = 0;
  if (v12) {
    operator delete(v12);
  }
  return 1;
}

uint64_t **sub_686858(uint64_t a1, unsigned __int8 *a2, uint64_t a3, unsigned char **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
    uint64_t v10 = *(uint64_t ****)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      unint64_t v11 = *v10;
      if (*v10)
      {
        if (v9.u32[0] < 2uLL)
        {
          while (1)
          {
            unsigned int v13 = v11[1];
            if (v13 == (uint64_t *)v7)
            {
              if (v7 == *((unsigned __int8 *)v11 + 16)) {
                return v11;
              }
            }
            else if (((unint64_t)v13 & (v8 - 1)) != v4)
            {
              goto LABEL_23;
            }
            unint64_t v11 = (uint64_t **)*v11;
            if (!v11) {
              goto LABEL_23;
            }
          }
        }
        do
        {
          unint64_t v12 = (unint64_t)v11[1];
          if (v12 == v7)
          {
            if (v7 == *((unsigned __int8 *)v11 + 16)) {
              return v11;
            }
          }
          else
          {
            if (v12 >= v8) {
              v12 %= v8;
            }
            if (v12 != v4) {
              break;
            }
          }
          unint64_t v11 = (uint64_t **)*v11;
        }
        while (v11);
      }
    }
  }
LABEL_23:
  int64x2_t v15 = operator new(0x18uLL);
  void *v15 = 0;
  v15[1] = v7;
  *((unsigned char *)v15 + 16) = **a4;
  *((unsigned char *)v15 + 17) = -1;
  float v16 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v17 = *(float *)(a1 + 32);
  if (v8 && (float)(v17 * (float)v8) >= v16)
  {
    unint64_t v7 = v4;
  }
  else
  {
    BOOL v18 = 1;
    if (v8 >= 3) {
      BOOL v18 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v19 = v18 | (2 * v8);
    unint64_t v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20) {
      size_t prime = v20;
    }
    else {
      size_t prime = v19;
    }
    if (prime == 1)
    {
      size_t prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      size_t prime = std::__next_prime(prime);
      unint64_t v8 = *(void *)(a1 + 8);
    }
    if (prime > v8) {
      goto LABEL_36;
    }
    if (prime < v8)
    {
      unint64_t v22 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v8 < 3 || (uint8x8_t v23 = (uint8x8_t)vcnt_s8((int8x8_t)v8), v23.i16[0] = vaddlv_u8(v23), v23.u32[0] > 1uLL))
      {
        unint64_t v22 = std::__next_prime(v22);
      }
      else
      {
        uint64_t v24 = 1 << -(char)__clz(v22 - 1);
        if (v22 >= 2) {
          unint64_t v22 = v24;
        }
      }
      if (prime <= v22) {
        size_t prime = v22;
      }
      if (prime < v8) {
LABEL_36:
      }
        sub_B6C0(a1, prime);
    }
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7) {
        v7 %= v8;
      }
    }
    else
    {
      unint64_t v7 = (v8 - 1) & v7;
    }
  }
  uint64_t v25 = *(void *)a1;
  int64x2_t v26 = *(void **)(*(void *)a1 + 8 * v7);
  if (v26)
  {
    void *v15 = *v26;
LABEL_59:
    *int64x2_t v26 = v15;
    goto LABEL_60;
  }
  void *v15 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v15;
  *(void *)(v25 + 8 * v7) = a1 + 16;
  if (*v15)
  {
    unint64_t v27 = *(void *)(*v15 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v27 >= v8) {
        v27 %= v8;
      }
    }
    else
    {
      v27 &= v8 - 1;
    }
    int64x2_t v26 = (void *)(*(void *)a1 + 8 * v27);
    goto LABEL_59;
  }
LABEL_60:
  ++*(void *)(a1 + 24);
  return (uint64_t **)v15;
}

void sub_686B54(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

char *sub_686B68(uint64_t a1, char *__dst, char *__src, char *a4, unint64_t a5)
{
  unint64_t v5 = __dst;
  if ((uint64_t)a5 < 1) {
    return v5;
  }
  uint64_t v10 = *(char **)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9 - (uint64_t)v10 < (uint64_t)a5)
  {
    unint64_t v11 = *(char **)a1;
    uint64_t v12 = (uint64_t)&v10[a5 - *(void *)a1];
    if (v12 < 0) {
      sub_2E00();
    }
    unint64_t v13 = __dst - v11;
    unint64_t v14 = v9 - (void)v11;
    if (2 * v14 > v12) {
      uint64_t v12 = 2 * v14;
    }
    if (v14 >= 0x3FFFFFFFFFFFFFFFLL) {
      size_t v15 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      size_t v15 = v12;
    }
    if (v15)
    {
      float v16 = (char *)operator new(v15);
      float v17 = &v16[v13];
      BOOL v18 = &v16[v13 + a5];
      unint64_t v19 = &v16[v13];
      unint64_t v20 = __src;
      if (a5 < 8) {
        goto LABEL_43;
      }
    }
    else
    {
      float v16 = 0;
      float v17 = (char *)(__dst - v11);
      BOOL v18 = (char *)(v13 + a5);
      unint64_t v19 = (char *)(__dst - v11);
      unint64_t v20 = __src;
      if (a5 < 8) {
        goto LABEL_43;
      }
    }
    unint64_t v19 = v17;
    unint64_t v20 = __src;
    if ((segment_command_64 *)(&v5[(void)v16] - &__src[(void)v11]) >= &stru_20)
    {
      if (a5 >= 0x20)
      {
        uint64_t v29 = a5 & 0x7FFFFFFFFFFFFFE0;
        int64x2_t v36 = (long long *)(__src + 16);
        int64x2_t v37 = &v16[v13 + 16];
        unint64_t v38 = a5 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          long long v39 = *v36;
          *((_OWORD *)v37 - 1) = *(v36 - 1);
          *(_OWORD *)int64x2_t v37 = v39;
          v36 += 2;
          v37 += 32;
          v38 -= 32;
        }
        while (v38);
        if (v29 == a5)
        {
LABEL_44:
          char v45 = v17;
          if (v11 == v5)
          {
LABEL_61:
            unsigned __int8 v57 = &v16[v15];
            size_t v58 = v10 - v5;
            if (v58) {
              memmove(v18, v5, v58);
            }
            *(void *)a1 = v45;
            *(void *)(a1 + 8) = &v18[v58];
            *(void *)(a1 + 16) = v57;
            if (v11) {
              operator delete(v11);
            }
            return v17;
          }
          char v46 = v5;
          unint64_t v47 = v17;
          if (v13 >= 8)
          {
            char v46 = v5;
            unint64_t v47 = v17;
            if ((unint64_t)(v11 - v16) >= 0x20)
            {
              if (v13 < 0x20)
              {
                unint64_t v48 = 0;
                goto LABEL_53;
              }
              unint64_t v48 = v13 & 0xFFFFFFFFFFFFFFE0;
              unint64_t v49 = v13 - 16;
              unint64_t v50 = v13 & 0xFFFFFFFFFFFFFFE0;
              do
              {
                long long v51 = *(_OWORD *)&v11[v49];
                unsigned __int8 v52 = &v16[v49];
                *((_OWORD *)v52 - 1) = *(_OWORD *)&v11[v49 - 16];
                *(_OWORD *)unsigned __int8 v52 = v51;
                v49 -= 32;
                v50 -= 32;
              }
              while (v50);
              char v45 = v16;
              if (v13 == v48) {
                goto LABEL_61;
              }
              if ((v13 & 0x18) != 0)
              {
LABEL_53:
                char v46 = &v5[-(v13 & 0xFFFFFFFFFFFFFFF8)];
                unint64_t v47 = &v17[-(v13 & 0xFFFFFFFFFFFFFFF8)];
                uint64_t v53 = &v5[-v48] - v11 - 8;
                unint64_t v54 = v48 - (v13 & 0xFFFFFFFFFFFFFFF8);
                do
                {
                  *(void *)&v16[v53] = *(void *)&v11[v53];
                  v53 -= 8;
                  v54 += 8;
                }
                while (v54);
                char v45 = v16;
                if (v13 == (v13 & 0xFFFFFFFFFFFFFFF8)) {
                  goto LABEL_61;
                }
                goto LABEL_58;
              }
              unint64_t v47 = &v17[-v48];
              char v46 = &v5[-v48];
            }
          }
LABEL_58:
          uint64_t v55 = v47 - 1;
          do
          {
            char v56 = *--v46;
            *v55-- = v56;
          }
          while (v46 != v11);
          char v45 = v16;
          goto LABEL_61;
        }
        if ((a5 & 0x18) == 0)
        {
          unint64_t v20 = &__src[v29];
          unint64_t v19 = &v17[v29];
          goto LABEL_43;
        }
      }
      else
      {
        uint64_t v29 = 0;
      }
      unint64_t v19 = &v17[a5 & 0xFFFFFFFFFFFFFFF8];
      unint64_t v20 = &__src[a5 & 0xFFFFFFFFFFFFFFF8];
      int64x2_t v40 = &__src[v29];
      unsigned int v41 = &v16[&v5[v29] - v11];
      unint64_t v42 = v29 - (a5 & 0xFFFFFFFFFFFFFFF8);
      do
      {
        uint64_t v43 = *(void *)v40;
        v40 += 8;
        *(void *)unsigned int v41 = v43;
        v41 += 8;
        v42 += 8;
      }
      while (v42);
      if ((a5 & 0x7FFFFFFFFFFFFFF8) == a5) {
        goto LABEL_44;
      }
    }
    do
    {
LABEL_43:
      char v44 = *v20++;
      *v19++ = v44;
    }
    while (v19 != v18);
    goto LABEL_44;
  }
  uint64_t v21 = v10 - __dst;
  if (v10 - __dst >= (uint64_t)a5)
  {
    unint64_t v22 = &__src[a5];
    uint64_t v24 = *(char **)(a1 + 8);
    uint64_t v25 = &__dst[a5];
    int64x2_t v26 = &v10[-a5];
    unint64_t v27 = v24;
    if ((unint64_t)v10 < a5) {
      goto LABEL_30;
    }
    goto LABEL_19;
  }
  unint64_t v22 = &__src[v21];
  int64_t v23 = a4 - &__src[v21];
  if (a4 != &__src[v21]) {
    memmove(*(void **)(a1 + 8), &__src[v21], a4 - &__src[v21]);
  }
  uint64_t v24 = &v10[v23];
  *(void *)(a1 + 8) = &v10[v23];
  if (v21 >= 1)
  {
    uint64_t v25 = &v5[a5];
    int64x2_t v26 = &v24[-a5];
    unint64_t v27 = &v10[v23];
    if (&v24[-a5] >= v10) {
      goto LABEL_30;
    }
LABEL_19:
    unint64_t v28 = &v10[a5] - v24;
    if (v28 >= 0x20)
    {
      unint64_t v27 = v24;
      if (a5 >= 0x20)
      {
        uint64_t v30 = &v26[v28 & 0xFFFFFFFFFFFFFFE0];
        unint64_t v27 = &v24[v28 & 0xFFFFFFFFFFFFFFE0];
        uint64_t v31 = v24 + 16;
        unint64_t v32 = (long long *)(v26 + 16);
        unint64_t v33 = v28 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          long long v34 = *v32;
          *(v31 - 1) = *(v32 - 1);
          *uint64_t v31 = v34;
          v31 += 2;
          v32 += 2;
          v33 -= 32;
        }
        while (v33);
        int64x2_t v26 = v30;
        if (v28 == (v28 & 0xFFFFFFFFFFFFFFE0)) {
          goto LABEL_30;
        }
      }
    }
    else
    {
      unint64_t v27 = v24;
    }
    do
    {
      char v35 = *v26++;
      *v27++ = v35;
    }
    while (v26 != v10);
LABEL_30:
    *(void *)(a1 + 8) = v27;
    if (v24 != v25) {
      memmove(v25, v5, v24 - v25);
    }
    if (v22 != __src) {
      memmove(v5, __src, v22 - __src);
    }
  }
  return v5;
}

void *sub_686F40(uint64_t a1, unsigned __int8 *a2, uint64_t a3, unsigned char **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
    uint64_t v10 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      unint64_t v11 = *v10;
      if (*v10)
      {
        if (v9.u32[0] < 2uLL)
        {
          while (1)
          {
            uint64_t v13 = v11[1];
            if (v13 == v7)
            {
              if (v7 == *((unsigned __int8 *)v11 + 16)) {
                return v11;
              }
            }
            else if ((v13 & (v8 - 1)) != v4)
            {
              goto LABEL_23;
            }
            unint64_t v11 = (void *)*v11;
            if (!v11) {
              goto LABEL_23;
            }
          }
        }
        do
        {
          unint64_t v12 = v11[1];
          if (v12 == v7)
          {
            if (v7 == *((unsigned __int8 *)v11 + 16)) {
              return v11;
            }
          }
          else
          {
            if (v12 >= v8) {
              v12 %= v8;
            }
            if (v12 != v4) {
              break;
            }
          }
          unint64_t v11 = (void *)*v11;
        }
        while (v11);
      }
    }
  }
LABEL_23:
  unint64_t v14 = (void *)(a1 + 16);
  unint64_t v11 = operator new(0x30uLL);
  *unint64_t v11 = 0;
  v11[1] = v7;
  *((unsigned char *)v11 + 16) = **a4;
  v11[4] = 0;
  v11[5] = 0;
  v11[3] = 0;
  float v15 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v16 = *(float *)(a1 + 32);
  if (v8 && (float)(v16 * (float)v8) >= v15)
  {
    unint64_t v7 = v4;
  }
  else
  {
    BOOL v17 = 1;
    if (v8 >= 3) {
      BOOL v17 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v18 = v17 | (2 * v8);
    unint64_t v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19) {
      size_t prime = v19;
    }
    else {
      size_t prime = v18;
    }
    if (prime == 1)
    {
      size_t prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      size_t prime = std::__next_prime(prime);
      unint64_t v8 = *(void *)(a1 + 8);
    }
    if (prime > v8) {
      goto LABEL_36;
    }
    if (prime < v8)
    {
      unint64_t v21 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v8 < 3 || (uint8x8_t v22 = (uint8x8_t)vcnt_s8((int8x8_t)v8), v22.i16[0] = vaddlv_u8(v22), v22.u32[0] > 1uLL))
      {
        unint64_t v21 = std::__next_prime(v21);
      }
      else
      {
        uint64_t v23 = 1 << -(char)__clz(v21 - 1);
        if (v21 >= 2) {
          unint64_t v21 = v23;
        }
      }
      if (prime <= v21) {
        size_t prime = v21;
      }
      if (prime < v8) {
LABEL_36:
      }
        sub_B6C0(a1, prime);
    }
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7) {
        v7 %= v8;
      }
    }
    else
    {
      unint64_t v7 = (v8 - 1) & v7;
    }
  }
  uint64_t v24 = *(void *)a1;
  uint64_t v25 = *(void **)(*(void *)a1 + 8 * v7);
  if (v25)
  {
    *unint64_t v11 = *v25;
LABEL_59:
    *uint64_t v25 = v11;
    goto LABEL_60;
  }
  *unint64_t v11 = *v14;
  void *v14 = v11;
  *(void *)(v24 + 8 * v7) = v14;
  if (*v11)
  {
    unint64_t v26 = *(void *)(*v11 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v26 >= v8) {
        v26 %= v8;
      }
    }
    else
    {
      v26 &= v8 - 1;
    }
    uint64_t v25 = (void *)(*(void *)a1 + 8 * v26);
    goto LABEL_59;
  }
LABEL_60:
  ++*(void *)(a1 + 24);
  return v11;
}

void sub_687244(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_596F44((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_687258(void **a1, unint64_t a2, long long *a3)
{
  uint64_t v6 = a1[2];
  uint64_t v7 = (uint64_t)a1[1];
  if (a2 <= (uint64_t)&v6[-v7] >> 6)
  {
    if (a2)
    {
      unint64_t v13 = a2 << 6;
      uint64_t v14 = v7 + (a2 << 6);
      do
      {
        sub_597784(v7, a3);
        v7 += 64;
        v13 -= 64;
      }
      while (v13);
      uint64_t v7 = v14;
    }
    a1[1] = (void *)v7;
  }
  else
  {
    uint64_t v8 = (v7 - (uint64_t)*a1) >> 6;
    if ((v8 + a2) >> 58) {
      sub_2E00();
    }
    uint64_t v9 = v6 - (unsigned char *)*a1;
    uint64_t v10 = v9 >> 5;
    if (v9 >> 5 <= v8 + a2) {
      uint64_t v10 = v8 + a2;
    }
    if ((unint64_t)v9 >= 0x7FFFFFFFFFFFFFC0) {
      unint64_t v11 = 0x3FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v10;
    }
    if (v11)
    {
      if (v11 >> 58) {
        sub_188D718();
      }
      unint64_t v12 = (char *)operator new(v11 << 6);
    }
    else
    {
      unint64_t v12 = 0;
    }
    uint64_t v15 = (uint64_t)&v12[64 * v8];
    uint64_t v26 = v15;
    unint64_t v27 = &v12[64 * v11];
    unint64_t v16 = a2 << 6;
    unint64_t v17 = v15 + (a2 << 6);
    do
    {
      sub_597784(v15, a3);
      v15 += 64;
      v16 -= 64;
    }
    while (v16);
    unint64_t v18 = (char *)*a1;
    unint64_t v19 = (char *)a1[1];
    if (v19 == *a1)
    {
      *a1 = (void *)v26;
      a1[1] = (void *)v17;
      a1[2] = v27;
    }
    else
    {
      uint64_t v20 = 0;
      do
      {
        uint64_t v21 = v26 + v20;
        uint8x8_t v22 = &v19[v20];
        *(_OWORD *)(v21 - 64) = *(_OWORD *)&v19[v20 - 64];
        *(void *)(v21 - 40) = 0;
        *(void *)(v21 - 32) = 0;
        *(void *)(v21 - 48) = 0;
        *(_OWORD *)(v21 - 48) = *(_OWORD *)&v19[v20 - 48];
        *(void *)(v21 - 32) = *(void *)&v19[v20 - 32];
        *((void *)v22 - 6) = 0;
        *((void *)v22 - 5) = 0;
        *((void *)v22 - 4) = 0;
        *(void *)(v21 - 24) = 0;
        *(void *)(v21 - 16) = 0;
        *(void *)(v21 - 8) = 0;
        *(_OWORD *)(v21 - 24) = *(_OWORD *)&v19[v20 - 24];
        *(void *)(v21 - 8) = *(void *)&v19[v20 - 8];
        *((void *)v22 - 3) = 0;
        *((void *)v22 - 2) = 0;
        *((void *)v22 - 1) = 0;
        v20 -= 64;
      }
      while (&v19[v20] != v18);
      uint64_t v23 = (char *)*a1;
      unint64_t v19 = (char *)a1[1];
      *a1 = (void *)(v26 + v20);
      a1[1] = (void *)v17;
      a1[2] = v27;
      if (v19 != v23)
      {
        do
        {
          uint64_t v24 = (void *)*((void *)v19 - 3);
          if (v24)
          {
            *((void *)v19 - 2) = v24;
            operator delete(v24);
          }
          uint64_t v25 = (void *)*((void *)v19 - 6);
          if (v25)
          {
            *((void *)v19 - 5) = v25;
            operator delete(v25);
          }
          v19 -= 64;
        }
        while (v19 != v23);
        unint64_t v19 = v23;
      }
    }
    if (v19) {
      operator delete(v19);
    }
  }
}

void sub_687478(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_687480(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_687498((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_687498(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v2; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 64;
    unint64_t v4 = *(void **)(i - 24);
    if (v4)
    {
      *(void *)(i - 16) = v4;
      operator delete(v4);
    }
    unint64_t v5 = *(void **)(i - 48);
    if (v5)
    {
      *(void *)(i - 40) = v5;
      operator delete(v5);
    }
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_687510(void **a1, unint64_t a2)
{
  unint64_t v4 = (char *)a1[1];
  unint64_t v5 = a1[2];
  if (a2 <= (v5 - v4) >> 6)
  {
    if (a2)
    {
      unint64_t v11 = &v4[64 * a2];
      do
      {
        *(_WORD *)unint64_t v4 = -256;
        *(_OWORD *)(v4 + 8) = 0uLL;
        *(_OWORD *)(v4 + 24) = 0uLL;
        *(_OWORD *)(v4 + 40) = 0uLL;
        *((void *)v4 + 7) = 0;
        v4 += 64;
      }
      while (v4 != v11);
      unint64_t v4 = v11;
    }
    a1[1] = v4;
  }
  else
  {
    uint64_t v6 = (v4 - (unsigned char *)*a1) >> 6;
    unint64_t v7 = v6 + a2;
    if ((v6 + a2) >> 58) {
      sub_2E00();
    }
    uint64_t v8 = v5 - (unsigned char *)*a1;
    if (v8 >> 5 > v7) {
      unint64_t v7 = v8 >> 5;
    }
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFC0) {
      unint64_t v9 = 0x3FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v9 = v7;
    }
    if (v9)
    {
      if (v9 >> 58) {
        sub_188D718();
      }
      uint64_t v10 = (char *)operator new(v9 << 6);
    }
    else
    {
      uint64_t v10 = 0;
    }
    unint64_t v12 = &v10[64 * v6];
    unint64_t v13 = &v10[64 * v9];
    uint64_t v14 = &v12[64 * a2];
    uint64_t v15 = v12;
    do
    {
      *(_WORD *)uint64_t v15 = -256;
      *(_OWORD *)(v15 + 8) = 0uLL;
      *(_OWORD *)(v15 + 24) = 0uLL;
      *(_OWORD *)(v15 + 40) = 0uLL;
      *((void *)v15 + 7) = 0;
      v15 += 64;
    }
    while (v15 != v14);
    unint64_t v16 = (char *)*a1;
    unint64_t v17 = (char *)a1[1];
    if (v17 == *a1)
    {
      *a1 = v12;
      a1[1] = v14;
      a1[2] = v13;
      if (!v17) {
        return;
      }
      goto LABEL_31;
    }
    uint64_t v18 = 0;
    do
    {
      unint64_t v19 = &v12[v18];
      uint64_t v20 = &v17[v18];
      *((_OWORD *)v19 - 4) = *(_OWORD *)&v17[v18 - 64];
      *((void *)v19 - 5) = 0;
      *((void *)v19 - 4) = 0;
      *((void *)v19 - 6) = 0;
      *((_OWORD *)v19 - 3) = *(_OWORD *)&v17[v18 - 48];
      *((void *)v19 - 4) = *(void *)&v17[v18 - 32];
      *((void *)v20 - 6) = 0;
      *((void *)v20 - 5) = 0;
      *((void *)v20 - 4) = 0;
      *((void *)v19 - 3) = 0;
      *((void *)v19 - 2) = 0;
      *((void *)v19 - 1) = 0;
      *(_OWORD *)(v19 - 24) = *(_OWORD *)&v17[v18 - 24];
      *((void *)v19 - 1) = *(void *)&v17[v18 - 8];
      *((void *)v20 - 3) = 0;
      *((void *)v20 - 2) = 0;
      *((void *)v20 - 1) = 0;
      v18 -= 64;
    }
    while (&v17[v18] != v16);
    uint64_t v21 = (char *)*a1;
    unint64_t v17 = (char *)a1[1];
    *a1 = &v12[v18];
    a1[1] = v14;
    a1[2] = v13;
    if (v17 != v21)
    {
      do
      {
        uint8x8_t v22 = (void *)*((void *)v17 - 3);
        if (v22)
        {
          *((void *)v17 - 2) = v22;
          operator delete(v22);
        }
        uint64_t v23 = (void *)*((void *)v17 - 6);
        if (v23)
        {
          *((void *)v17 - 5) = v23;
          operator delete(v23);
        }
        v17 -= 64;
      }
      while (v17 != v21);
      unint64_t v17 = v21;
    }
    if (v17)
    {
LABEL_31:
      operator delete(v17);
    }
  }
}

__n128 sub_687720(long long **a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  long long v4 = **a1;
  uint64_t v6 = *((void *)*a1 + 2);
  uint64_t v5 = *((void *)*a1 + 3);
  uint64_t v7 = *((void *)*a1 + 4);
  *((void *)v2 + 2) = 0;
  *((void *)v2 + 3) = 0;
  *((void *)v2 + 4) = 0;
  __n128 v13 = *(__n128 *)((char *)v2 + 40);
  long long v14 = v4;
  uint64_t v8 = *((void *)v2 + 7);
  *((void *)v2 + 5) = 0;
  *((void *)v2 + 6) = 0;
  *((void *)v2 + 7) = 0;
  *uint64_t v2 = *(_OWORD *)v3;
  v2[1] = *(_OWORD *)(v3 + 16);
  *((void *)v2 + 4) = *(void *)(v3 + 32);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(void *)(v3 + 32) = 0;
  unint64_t v9 = (void *)*((void *)v2 + 5);
  if (v9)
  {
    *((void *)v2 + 6) = v9;
    operator delete(v9);
    *((void *)v2 + 5) = 0;
    *((void *)v2 + 6) = 0;
    *((void *)v2 + 7) = 0;
  }
  *(long long *)((char *)v2 + 40) = *(_OWORD *)(v3 + 40);
  *((void *)v2 + 7) = *(void *)(v3 + 56);
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = 0;
  *(void *)(v3 + 56) = 0;
  *(_OWORD *)uint64_t v3 = v14;
  uint64_t v10 = *(void **)(v3 + 16);
  if (v10)
  {
    *(void *)(v3 + 24) = v10;
    operator delete(v10);
    unint64_t v11 = *(void **)(v3 + 40);
    *(void *)(v3 + 16) = v6;
    *(void *)(v3 + 24) = v5;
    *(void *)(v3 + 32) = v7;
    if (v11)
    {
      *(void *)(v3 + 48) = v11;
      operator delete(v11);
    }
  }
  else
  {
    *(void *)(v3 + 16) = v6;
    *(void *)(v3 + 24) = v5;
    *(void *)(v3 + 32) = v7;
  }
  __n128 result = v13;
  *(__n128 *)(v3 + 40) = v13;
  *(void *)(v3 + 56) = v8;
  return result;
}

__n128 sub_687828(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a1 + 8);
  unint64_t v5 = a2 + v4 - a4;
  if (v5 >= a3)
  {
    *(void *)(a1 + 8) = v4;
    if (v4 == a4) {
      return result;
    }
  }
  else
  {
    unint64_t v6 = a2 + v4 - a4;
    uint64_t v7 = *(void *)(a1 + 8);
    do
    {
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
      *(void *)(v7 + 24) = 0;
      *(void *)(v7 + 32) = 0;
      *(void *)(v7 + 16) = 0;
      *(_OWORD *)(v7 + 16) = *(_OWORD *)(v6 + 16);
      *(void *)(v7 + 32) = *(void *)(v6 + 32);
      *(void *)(v6 + 16) = 0;
      *(void *)(v6 + 24) = 0;
      *(void *)(v6 + 32) = 0;
      *(void *)(v7 + 40) = 0;
      *(void *)(v7 + 48) = 0;
      *(void *)(v7 + 56) = 0;
      __n128 result = *(__n128 *)(v6 + 40);
      *(__n128 *)(v7 + 40) = result;
      *(void *)(v7 + 56) = *(void *)(v6 + 56);
      *(void *)(v6 + 40) = 0;
      *(void *)(v6 + 48) = 0;
      *(void *)(v6 + 56) = 0;
      v7 += 64;
      v6 += 64;
    }
    while (v6 < a3);
    *(void *)(a1 + 8) = v7;
    if (v4 == a4) {
      return result;
    }
  }
  uint64_t v9 = 0;
  uint64_t v10 = -64 * ((v4 - a4) >> 6);
  do
  {
    uint64_t v12 = v5 + v9;
    uint64_t v13 = v4 + v9;
    uint64_t v15 = (void **)(v4 + v9 - 48);
    long long v14 = *v15;
    *(_OWORD *)(v4 + v9 - 64) = *(_OWORD *)(v5 + v9 - 64);
    if (v14)
    {
      *(void *)(v13 - 40) = v14;
      operator delete(v14);
      char *v15 = 0;
      *(void *)(v4 + v9 - 40) = 0;
      *(void *)(v4 + v9 - 32) = 0;
    }
    unint64_t v16 = (void *)(v12 - 48);
    *(_OWORD *)uint64_t v15 = *(_OWORD *)(v12 - 48);
    *(void *)(v13 - 32) = *(void *)(v12 - 32);
    *unint64_t v16 = 0;
    v16[1] = 0;
    v16[2] = 0;
    unint64_t v19 = *(void **)(v13 - 24);
    uint64_t v18 = (__n128 *)(v13 - 24);
    unint64_t v17 = v19;
    if (v19)
    {
      *(void *)(v4 + v9 - 16) = v17;
      operator delete(v17);
      v18->n128_u64[0] = 0;
      v18->n128_u64[1] = 0;
      v18[1].n128_u64[0] = 0;
    }
    uint64_t v11 = v5 + v9;
    __n128 result = *(__n128 *)(v5 + v9 - 24);
    *uint64_t v18 = result;
    *(void *)(v4 + v9 - 8) = *(void *)(v5 + v9 - 8);
    *(void *)(v11 - 24) = 0;
    *(void *)(v11 - 16) = 0;
    *(void *)(v11 - 8) = 0;
    v9 -= 64;
  }
  while (v10 != v9);
  return result;
}

double sub_687994()
{
  unk_25A04CF = 16641;
  word_25A04B8 = 65;
  byte_25A04E7 = 1;
  byte_25A04D1 = 0;
  qword_25A04F0 = 0;
  qword_25A04F8 = 0;
  qword_25A04E8 = 0;
  uint64_t v0 = operator new(9uLL);
  *(void *)uint64_t v0 = 0x4020C000103050DLL;
  v0[8] = 6;
  qword_25A04E8 = (uint64_t)v0;
  qword_25A04F0 = (uint64_t)(v0 + 9);
  qword_25A04F8 = (uint64_t)(v0 + 9);
  qword_25A0500 = 0;
  qword_25A0508 = 0;
  qword_25A0510 = 0;
  uint64_t v1 = operator new(9uLL);
  double result = 1.10224369e-279;
  *(void *)uint64_t v1 = 0x604020C00010305;
  v1[8] = 13;
  qword_25A0500 = (uint64_t)v1;
  qword_25A0508 = (uint64_t)(v1 + 9);
  qword_25A0510 = (uint64_t)(v1 + 9);
  unk_25A0518 = 0;
  qword_25A0520 = 0;
  unk_25A0528 = 0;
  qword_25A0538 = 0;
  unk_25A0540 = 0;
  qword_25A0530 = 0;
  return result;
}

uint64_t sub_687A3C(uint64_t a1, long long *a2, int a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25A0548, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_25A0548))
  {
    goto LABEL_2;
  }
  sub_5E5C(v13, "ar");
  sub_5E5C(&v15, "bg");
  sub_5E5C(&v17, "ca");
  sub_5E5C(&v19, "cs");
  sub_5E5C(&v21, "da");
  sub_5E5C(&v23, "de");
  sub_5E5C(&v25, "el");
  sub_5E5C(&v27, "en-au");
  sub_5E5C(&v29, "en-gb");
  sub_5E5C(&v31, "en-in");
  sub_5E5C(&v33, "en");
  sub_5E5C(&v35, "es");
  sub_5E5C(&v37, "fi");
  sub_5E5C(&v39, "fr-ca");
  sub_5E5C(&v41, "fr");
  sub_5E5C(&v43, "he");
  sub_5E5C(&v45, "hi");
  sub_5E5C(&v47, "hr");
  sub_5E5C(&v49, "hu");
  sub_5E5C(&v51, "id");
  sub_5E5C(&v53, "it");
  sub_5E5C(&v55, "ja");
  sub_5E5C(&v57, "kk");
  sub_5E5C(&v59, "ko");
  sub_5E5C(&v61, "ms");
  sub_5E5C(&v63, "nl");
  sub_5E5C(&v65, "no");
  sub_5E5C(&v67, "pl");
  sub_5E5C(&v69, "pt-pt");
  sub_5E5C(&v71, "pt");
  sub_5E5C(&v73, "ro");
  sub_5E5C(&v75, "ru");
  sub_5E5C(&v77, "sk");
  sub_5E5C(&v79, "sv");
  sub_5E5C(&v81, "th");
  sub_5E5C(&v83, "tr");
  sub_5E5C(&v85, "uk");
  sub_5E5C(&v87, "vi");
  sub_5E5C(&v89, "zh-cn");
  sub_5E5C(&v91, "zh-hk");
  sub_5E5C(&v93, "zh-tw");
  sub_5E5C(&__p, "es-mx");
  sub_4BDC0C(qword_25A0550, (uint64_t)v13, 0x2AuLL);
  if (v96 < 0)
  {
    operator delete(__p);
    if ((v94 & 0x80000000) == 0)
    {
LABEL_13:
      if ((v92 & 0x80000000) == 0) {
        goto LABEL_14;
      }
      goto LABEL_57;
    }
  }
  else if ((v94 & 0x80000000) == 0)
  {
    goto LABEL_13;
  }
  operator delete(v93);
  if ((v92 & 0x80000000) == 0)
  {
LABEL_14:
    if ((v90 & 0x80000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_58;
  }
LABEL_57:
  operator delete(v91);
  if ((v90 & 0x80000000) == 0)
  {
LABEL_15:
    if ((v88 & 0x80000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_59;
  }
LABEL_58:
  operator delete(v89);
  if ((v88 & 0x80000000) == 0)
  {
LABEL_16:
    if ((v86 & 0x80000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_60;
  }
LABEL_59:
  operator delete(v87);
  if ((v86 & 0x80000000) == 0)
  {
LABEL_17:
    if ((v84 & 0x80000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_61;
  }
LABEL_60:
  operator delete(v85);
  if ((v84 & 0x80000000) == 0)
  {
LABEL_18:
    if ((v82 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_62;
  }
LABEL_61:
  operator delete(v83);
  if ((v82 & 0x80000000) == 0)
  {
LABEL_19:
    if ((v80 & 0x80000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_63;
  }
LABEL_62:
  operator delete(v81);
  if ((v80 & 0x80000000) == 0)
  {
LABEL_20:
    if ((v78 & 0x80000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_64;
  }
LABEL_63:
  operator delete(v79);
  if ((v78 & 0x80000000) == 0)
  {
LABEL_21:
    if ((v76 & 0x80000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_65;
  }
LABEL_64:
  operator delete(v77);
  if ((v76 & 0x80000000) == 0)
  {
LABEL_22:
    if ((v74 & 0x80000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_66;
  }
LABEL_65:
  operator delete(v75);
  if ((v74 & 0x80000000) == 0)
  {
LABEL_23:
    if ((v72 & 0x80000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_67;
  }
LABEL_66:
  operator delete(v73);
  if ((v72 & 0x80000000) == 0)
  {
LABEL_24:
    if ((v70 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_68;
  }
LABEL_67:
  operator delete(v71);
  if ((v70 & 0x80000000) == 0)
  {
LABEL_25:
    if ((v68 & 0x80000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_69;
  }
LABEL_68:
  operator delete(v69);
  if ((v68 & 0x80000000) == 0)
  {
LABEL_26:
    if ((v66 & 0x80000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_70;
  }
LABEL_69:
  operator delete(v67);
  if ((v66 & 0x80000000) == 0)
  {
LABEL_27:
    if ((v64 & 0x80000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_71;
  }
LABEL_70:
  operator delete(v65);
  if ((v64 & 0x80000000) == 0)
  {
LABEL_28:
    if ((v62 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_72;
  }
LABEL_71:
  operator delete(v63);
  if ((v62 & 0x80000000) == 0)
  {
LABEL_29:
    if ((v60 & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_73;
  }
LABEL_72:
  operator delete(v61);
  if ((v60 & 0x80000000) == 0)
  {
LABEL_30:
    if ((v58 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_74;
  }
LABEL_73:
  operator delete(v59);
  if ((v58 & 0x80000000) == 0)
  {
LABEL_31:
    if ((v56 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_75;
  }
LABEL_74:
  operator delete(v57);
  if ((v56 & 0x80000000) == 0)
  {
LABEL_32:
    if ((v54 & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_76;
  }
LABEL_75:
  operator delete(v55);
  if ((v54 & 0x80000000) == 0)
  {
LABEL_33:
    if ((v52 & 0x80000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_77;
  }
LABEL_76:
  operator delete(v53);
  if ((v52 & 0x80000000) == 0)
  {
LABEL_34:
    if ((v50 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_78;
  }
LABEL_77:
  operator delete(v51);
  if ((v50 & 0x80000000) == 0)
  {
LABEL_35:
    if ((v48 & 0x80000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_79;
  }
LABEL_78:
  operator delete(v49);
  if ((v48 & 0x80000000) == 0)
  {
LABEL_36:
    if ((v46 & 0x80000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_80;
  }
LABEL_79:
  operator delete(v47);
  if ((v46 & 0x80000000) == 0)
  {
LABEL_37:
    if ((v44 & 0x80000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_81;
  }
LABEL_80:
  operator delete(v45);
  if ((v44 & 0x80000000) == 0)
  {
LABEL_38:
    if ((v42 & 0x80000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_82;
  }
LABEL_81:
  operator delete(v43);
  if ((v42 & 0x80000000) == 0)
  {
LABEL_39:
    if ((v40 & 0x80000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_83;
  }
LABEL_82:
  operator delete(v41);
  if ((v40 & 0x80000000) == 0)
  {
LABEL_40:
    if ((v38 & 0x80000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_84;
  }
LABEL_83:
  operator delete(v39);
  if ((v38 & 0x80000000) == 0)
  {
LABEL_41:
    if ((v36 & 0x80000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_85;
  }
LABEL_84:
  operator delete(v37);
  if ((v36 & 0x80000000) == 0)
  {
LABEL_42:
    if ((v34 & 0x80000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_86;
  }
LABEL_85:
  operator delete(v35);
  if ((v34 & 0x80000000) == 0)
  {
LABEL_43:
    if ((v32 & 0x80000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_87;
  }
LABEL_86:
  operator delete(v33);
  if ((v32 & 0x80000000) == 0)
  {
LABEL_44:
    if ((v30 & 0x80000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_88;
  }
LABEL_87:
  operator delete(v31);
  if ((v30 & 0x80000000) == 0)
  {
LABEL_45:
    if ((v28 & 0x80000000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_89;
  }
LABEL_88:
  operator delete(v29);
  if ((v28 & 0x80000000) == 0)
  {
LABEL_46:
    if ((v26 & 0x80000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_90;
  }
LABEL_89:
  operator delete(v27);
  if ((v26 & 0x80000000) == 0)
  {
LABEL_47:
    if ((v24 & 0x80000000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_91;
  }
LABEL_90:
  operator delete(v25);
  if ((v24 & 0x80000000) == 0)
  {
LABEL_48:
    if ((v22 & 0x80000000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_92;
  }
LABEL_91:
  operator delete(v23);
  if ((v22 & 0x80000000) == 0)
  {
LABEL_49:
    if ((v20 & 0x80000000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_93;
  }
LABEL_92:
  operator delete(v21);
  if ((v20 & 0x80000000) == 0)
  {
LABEL_50:
    if ((v18 & 0x80000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_94;
  }
LABEL_93:
  operator delete(v19);
  if ((v18 & 0x80000000) == 0)
  {
LABEL_51:
    if ((v16 & 0x80000000) == 0) {
      goto LABEL_52;
    }
LABEL_95:
    operator delete(v15);
    if ((SHIBYTE(v14) & 0x80000000) == 0) {
      goto LABEL_53;
    }
LABEL_96:
    operator delete(v13[0]);
    goto LABEL_53;
  }
LABEL_94:
  operator delete(v17);
  if (v16 < 0) {
    goto LABEL_95;
  }
LABEL_52:
  if (SHIBYTE(v14) < 0) {
    goto LABEL_96;
  }
LABEL_53:
  __cxa_guard_release(&qword_25A0548);
LABEL_2:
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  sub_8A6F8((char *)a1, qword_25A0550[0], unk_25A0558, 0xAAAAAAAAAAAAAAABLL * ((unk_25A0558 - qword_25A0550[0]) >> 3));
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_DWORD *)(a1 + 56) = 1065353216;
  if (*((char *)a2 + 23) < 0)
  {
    sub_4200((unsigned char *)(a1 + 64), *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v6 = *a2;
    *(void *)(a1 + 80) = *((void *)a2 + 2);
    *(_OWORD *)(a1 + 64) = v6;
  }
  *(void *)(a1 + 96) = 850045863;
  *(unsigned char *)(a1 + 88) = 0;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(void *)(a1 + 152) = 0;
  if (!sub_696C0())
  {
    exception = __cxa_allocate_exception(0x40uLL);
    std::operator+<char>();
    uint64_t v9 = std::string::append(&v12, "\" does not exist");
    long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v9->__r_.__value_.__r.__words[2];
    *(_OWORD *)uint64_t v13 = v10;
    v9->__r_.__value_.__l.__size_ = 0;
    v9->__r_.__value_.__r.__words[2] = 0;
    v9->__r_.__value_.__r.__words[0] = 0;
    uint64_t v11 = (void *)sub_2F404((uint64_t)exception, (long long *)v13);
  }
  if (a3 && !*(unsigned char *)(a1 + 88))
  {
    sub_68A264(a1, (char **)a1, (uint64_t)&unk_20E8904);
    *(unsigned char *)(a1 + 88) = 1;
  }
  return a1;
}

void sub_6883C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,void *a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,void *a55,uint64_t a56,int a57,__int16 a58,char a59,char a60,void *a61,uint64_t a62,int a63)
{
  if (SLOBYTE(STACK[0x40F]) < 0)
  {
    operator delete((void *)STACK[0x3F8]);
    if ((SLOBYTE(STACK[0x3F7]) & 0x80000000) == 0)
    {
LABEL_3:
      if ((SLOBYTE(STACK[0x3DF]) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_46;
    }
  }
  else if ((SLOBYTE(STACK[0x3F7]) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete((void *)STACK[0x3E0]);
  if ((SLOBYTE(STACK[0x3DF]) & 0x80000000) == 0)
  {
LABEL_4:
    if ((SLOBYTE(STACK[0x3C7]) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_47;
  }
LABEL_46:
  operator delete((void *)STACK[0x3C8]);
  if ((SLOBYTE(STACK[0x3C7]) & 0x80000000) == 0)
  {
LABEL_5:
    if ((SLOBYTE(STACK[0x3AF]) & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_48;
  }
LABEL_47:
  operator delete((void *)STACK[0x3B0]);
  if ((SLOBYTE(STACK[0x3AF]) & 0x80000000) == 0)
  {
LABEL_6:
    if ((SLOBYTE(STACK[0x397]) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_49;
  }
LABEL_48:
  operator delete((void *)STACK[0x398]);
  if ((SLOBYTE(STACK[0x397]) & 0x80000000) == 0)
  {
LABEL_7:
    if ((SLOBYTE(STACK[0x37F]) & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_50;
  }
LABEL_49:
  operator delete((void *)STACK[0x380]);
  if ((SLOBYTE(STACK[0x37F]) & 0x80000000) == 0)
  {
LABEL_8:
    if ((SLOBYTE(STACK[0x367]) & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_51;
  }
LABEL_50:
  operator delete((void *)STACK[0x368]);
  if ((SLOBYTE(STACK[0x367]) & 0x80000000) == 0)
  {
LABEL_9:
    if ((SLOBYTE(STACK[0x34F]) & 0x80000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_52;
  }
LABEL_51:
  operator delete((void *)STACK[0x350]);
  if ((SLOBYTE(STACK[0x34F]) & 0x80000000) == 0)
  {
LABEL_10:
    if ((SLOBYTE(STACK[0x337]) & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_53;
  }
LABEL_52:
  operator delete((void *)STACK[0x338]);
  if ((SLOBYTE(STACK[0x337]) & 0x80000000) == 0)
  {
LABEL_11:
    if ((SLOBYTE(STACK[0x31F]) & 0x80000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_54;
  }
LABEL_53:
  operator delete((void *)STACK[0x320]);
  if ((SLOBYTE(STACK[0x31F]) & 0x80000000) == 0)
  {
LABEL_12:
    if ((SLOBYTE(STACK[0x307]) & 0x80000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_55;
  }
LABEL_54:
  operator delete((void *)STACK[0x308]);
  if ((SLOBYTE(STACK[0x307]) & 0x80000000) == 0)
  {
LABEL_13:
    if ((SLOBYTE(STACK[0x2EF]) & 0x80000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_56;
  }
LABEL_55:
  operator delete((void *)STACK[0x2F0]);
  if ((SLOBYTE(STACK[0x2EF]) & 0x80000000) == 0)
  {
LABEL_14:
    if ((SLOBYTE(STACK[0x2D7]) & 0x80000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_57;
  }
LABEL_56:
  operator delete((void *)STACK[0x2D8]);
  if ((SLOBYTE(STACK[0x2D7]) & 0x80000000) == 0)
  {
LABEL_15:
    if ((SLOBYTE(STACK[0x2BF]) & 0x80000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_58;
  }
LABEL_57:
  operator delete((void *)STACK[0x2C0]);
  if ((SLOBYTE(STACK[0x2BF]) & 0x80000000) == 0)
  {
LABEL_16:
    if ((SLOBYTE(STACK[0x2A7]) & 0x80000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_59;
  }
LABEL_58:
  operator delete((void *)STACK[0x2A8]);
  if ((SLOBYTE(STACK[0x2A7]) & 0x80000000) == 0)
  {
LABEL_17:
    if ((SLOBYTE(STACK[0x28F]) & 0x80000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_60;
  }
LABEL_59:
  operator delete((void *)STACK[0x290]);
  if ((SLOBYTE(STACK[0x28F]) & 0x80000000) == 0)
  {
LABEL_18:
    if ((SLOBYTE(STACK[0x277]) & 0x80000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_61;
  }
LABEL_60:
  operator delete((void *)STACK[0x278]);
  if ((SLOBYTE(STACK[0x277]) & 0x80000000) == 0)
  {
LABEL_19:
    if ((SLOBYTE(STACK[0x25F]) & 0x80000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_62;
  }
LABEL_61:
  operator delete((void *)STACK[0x260]);
  if ((SLOBYTE(STACK[0x25F]) & 0x80000000) == 0)
  {
LABEL_20:
    if ((SLOBYTE(STACK[0x247]) & 0x80000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_63;
  }
LABEL_62:
  operator delete((void *)STACK[0x248]);
  if ((SLOBYTE(STACK[0x247]) & 0x80000000) == 0)
  {
LABEL_21:
    if ((SLOBYTE(STACK[0x22F]) & 0x80000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_64;
  }
LABEL_63:
  operator delete((void *)STACK[0x230]);
  if ((SLOBYTE(STACK[0x22F]) & 0x80000000) == 0)
  {
LABEL_22:
    if ((SLOBYTE(STACK[0x217]) & 0x80000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_65;
  }
LABEL_64:
  operator delete((void *)STACK[0x218]);
  if ((SLOBYTE(STACK[0x217]) & 0x80000000) == 0)
  {
LABEL_23:
    if ((a92 & 0x80000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_66;
  }
LABEL_65:
  operator delete((void *)STACK[0x200]);
  if ((a92 & 0x80000000) == 0)
  {
LABEL_24:
    if ((a90 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_67;
  }
LABEL_66:
  operator delete(a91);
  if ((a90 & 0x80000000) == 0)
  {
LABEL_25:
    if ((a88 & 0x80000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_68;
  }
LABEL_67:
  operator delete(a89);
  if ((a88 & 0x80000000) == 0)
  {
LABEL_26:
    if ((a86 & 0x80000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_69;
  }
LABEL_68:
  operator delete(a87);
  if ((a86 & 0x80000000) == 0)
  {
LABEL_27:
    if ((a84 & 0x80000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_70;
  }
LABEL_69:
  operator delete(a85);
  if ((a84 & 0x80000000) == 0)
  {
LABEL_28:
    if ((a82 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_71;
  }
LABEL_70:
  operator delete(a83);
  if ((a82 & 0x80000000) == 0)
  {
LABEL_29:
    if ((a80 & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_72;
  }
LABEL_71:
  operator delete(a81);
  if ((a80 & 0x80000000) == 0)
  {
LABEL_30:
    if ((a78 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_73;
  }
LABEL_72:
  operator delete(a79);
  if ((a78 & 0x80000000) == 0)
  {
LABEL_31:
    if ((a76 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_74;
  }
LABEL_73:
  operator delete(a77);
  if ((a76 & 0x80000000) == 0)
  {
LABEL_32:
    if ((a74 & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_75;
  }
LABEL_74:
  operator delete(a75);
  if ((a74 & 0x80000000) == 0)
  {
LABEL_33:
    if ((a72 & 0x80000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_76;
  }
LABEL_75:
  operator delete(a73);
  if ((a72 & 0x80000000) == 0)
  {
LABEL_34:
    if ((a66 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_77;
  }
LABEL_76:
  operator delete(a67);
  if ((a66 & 0x80000000) == 0)
  {
LABEL_35:
    if ((a60 & 0x80000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_78;
  }
LABEL_77:
  operator delete(a61);
  if ((a60 & 0x80000000) == 0)
  {
LABEL_36:
    if ((a54 & 0x80000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_79;
  }
LABEL_78:
  operator delete(a55);
  if ((a54 & 0x80000000) == 0)
  {
LABEL_37:
    if ((a48 & 0x80000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_80;
  }
LABEL_79:
  operator delete(a49);
  if ((a48 & 0x80000000) == 0)
  {
LABEL_38:
    if ((a42 & 0x80000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_81;
  }
LABEL_80:
  operator delete(a43);
  if ((a42 & 0x80000000) == 0)
  {
LABEL_39:
    if ((a36 & 0x80000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_82;
  }
LABEL_81:
  operator delete(a37);
  if ((a36 & 0x80000000) == 0)
  {
LABEL_40:
    if ((a30 & 0x80000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_83;
  }
LABEL_82:
  operator delete(a31);
  if ((a30 & 0x80000000) == 0)
  {
LABEL_41:
    if ((a24 & 0x80000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_84;
  }
LABEL_83:
  operator delete(a25);
  if ((a24 & 0x80000000) == 0)
  {
LABEL_42:
    if ((a18 & 0x80000000) == 0)
    {
LABEL_86:
      __cxa_guard_abort(&qword_25A0548);
      _Unwind_Resume(a1);
    }
LABEL_85:
    operator delete(a13);
    __cxa_guard_abort(&qword_25A0548);
    _Unwind_Resume(a1);
  }
LABEL_84:
  operator delete(a19);
  if ((a18 & 0x80000000) == 0) {
    goto LABEL_86;
  }
  goto LABEL_85;
}

void sub_6887DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  while (1)
  {
    if (*((char *)v13 - 1) < 0) {
      operator delete(*(v13 - 3));
    }
    v13 -= 3;
    if (v13 == (void **)&a13) {
      JUMPOUT(0x6887C8);
    }
  }
}

void sub_688808(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
  {
    operator delete(__p);
    if ((a15 & 0x80000000) == 0)
    {
LABEL_3:
      std::mutex::~mutex(v22);
      if ((*(char *)(v21 + 87) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a15 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a10);
  std::mutex::~mutex(v22);
  if ((*(char *)(v21 + 87) & 0x80000000) == 0)
  {
LABEL_4:
    sub_6888FC(v23);
    sub_1A668((void **)v21);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(*v24);
  sub_6888FC(v23);
  sub_1A668((void **)v21);
  _Unwind_Resume(a1);
}

uint64_t sub_6888FC(uint64_t a1)
{
  sub_68AA1C(a1, *(char **)(a1 + 16));
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

uint64_t sub_68893C(uint64_t a1)
{
  std::mutex::~mutex((std::mutex *)(a1 + 96));
  if ((*(char *)(a1 + 87) & 0x80000000) == 0)
  {
    sub_68AA1C(a1 + 24, *(char **)(a1 + 40));
    uint64_t v2 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = 0;
    if (!v2) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  operator delete(*(void **)(a1 + 64));
  sub_68AA1C(a1 + 24, *(char **)(a1 + 40));
  uint64_t v2 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = 0;
  if (v2) {
LABEL_3:
  }
    operator delete(v2);
LABEL_4:
  uint64_t v3 = *(void ***)a1;
  if (*(void *)a1)
  {
    uint64_t v4 = *(void ***)(a1 + 8);
    unint64_t v5 = *(void ***)a1;
    if (v4 != v3)
    {
      do
      {
        if (*((char *)v4 - 1) < 0) {
          operator delete(*(v4 - 3));
        }
        v4 -= 3;
      }
      while (v4 != v3);
      unint64_t v5 = *(void ***)a1;
    }
    *(void *)(a1 + 8) = v3;
    operator delete(v5);
  }
  return a1;
}

void sub_688A04(uint64_t *a1@<X0>, unsigned int a2@<W1>, int a3@<W2>, uint64_t *a4@<X8>)
{
  sub_688D48(a1, a3, (uint64_t)&v21);
  std::string::size_type size = HIBYTE(v21.__r_.__value_.__r.__words[2]);
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = v21.__r_.__value_.__l.__size_;
  }
  if (!size && sub_723EC(3u))
  {
    sub_6BAC((uint64_t)&v17);
    sub_188FC78(&v17, (uint64_t)"get_display_language_string returned an empty string for input language '", 73);
    uint64_t v8 = (void *)std::ostream::operator<<();
    uint64_t v9 = sub_188FC78(v8, (uint64_t)"' and available languages (", 27);
    sub_68BF8(*a1, a1[1], ",");
    if ((v16 & 0x80u) == 0) {
      long long v10 = __p;
    }
    else {
      long long v10 = (void **)__p[0];
    }
    if ((v16 & 0x80u) == 0) {
      uint64_t v11 = v16;
    }
    else {
      uint64_t v11 = (uint64_t)__p[1];
    }
    std::string v12 = sub_188FC78(v9, (uint64_t)v10, v11);
    sub_188FC78(v12, (uint64_t)")", 1);
    if ((char)v16 < 0) {
      operator delete(__p[0]);
    }
    std::stringbuf::str();
    sub_7246C((uint64_t *)__p, 3u);
    if ((char)v16 < 0) {
      operator delete(__p[0]);
    }
    if (v20 < 0) {
      operator delete(v19);
    }
    std::streambuf::~streambuf();
    std::ostream::~ostream();
    std::ios::~ios();
  }
  sub_688EB0(a1, a2, (uint64_t)&v21, &v17);
  uint64_t v13 = operator new(0x48uLL);
  v13[1] = 0;
  v13[2] = 0;
  *uint64_t v13 = off_243A250;
  *a4 = sub_8D7674((uint64_t)(v13 + 3), &v21, (uint64_t)&v17);
  a4[1] = (uint64_t)v13;
  std::string::size_type v14 = (std::__shared_weak_count *)v18;
  if (!v18 || atomic_fetch_add((atomic_ullong *volatile)v18 + 1, 0xFFFFFFFFFFFFFFFFLL))
  {
    if ((SHIBYTE(v21.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
    goto LABEL_21;
  }
  ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
  std::__shared_weak_count::__release_weak(v14);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
LABEL_21:
  }
    operator delete(v21.__r_.__value_.__l.__data_);
}

void sub_688CCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_111ECAC((uint64_t)&a16);
  if (*(char *)(v16 - 65) < 0) {
    operator delete(*(void **)(v16 - 88));
  }
  _Unwind_Resume(a1);
}

uint64_t sub_688D48@<X0>(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v13 = a2;
  uint64_t v5 = sub_656AC();
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F6A18, memory_order_acquire) & 1) == 0)
  {
    uint64_t v12 = v5;
    int v11 = __cxa_guard_acquire(&qword_24F6A18);
    uint64_t v5 = v12;
    if (v11)
    {
      xmmword_24F6A00 = 0uLL;
      qword_24F6A10 = 0;
      __cxa_guard_release(&qword_24F6A18);
      uint64_t v5 = v12;
    }
  }
  v17[0] = &v13;
  v17[1] = v14;
  int v18 = 4;
  uint64_t v19 = 1;
  uint64_t v6 = a1[1];
  unint64_t v7 = 0xAAAAAAAAAAAAAAABLL * ((v6 - *a1) >> 3);
  v14[0] = *a1;
  v14[1] = v6;
  int v15 = 0;
  unint64_t v16 = v7;
  uint64_t result = (*(uint64_t (**)(uint64_t, void *, void *))(*(void *)v5 + 40))(v5, v17, v14);
  if ((result & 0x80000000) != 0 || (int)result >= (int)(-1431655765 * ((a1[1] - *a1) >> 3)))
  {
    uint64_t v9 = &xmmword_24F6A00;
    if ((SHIBYTE(qword_24F6A10) & 0x80000000) == 0) {
      goto LABEL_5;
    }
  }
  else
  {
    uint64_t v9 = (long long *)(*a1 + 24 * result);
    if ((*((char *)v9 + 23) & 0x80000000) == 0)
    {
LABEL_5:
      long long v10 = *v9;
      *(void *)(a3 + 16) = *((void *)v9 + 2);
      *(_OWORD *)a3 = v10;
      return result;
    }
  }
  return (uint64_t)sub_4200((unsigned char *)a3, *(void **)v9, *((void *)v9 + 1));
}

void sub_688EB0(uint64_t *a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = (char *)operator new(0x40uLL);
  *((void *)v8 + 1) = 0;
  *((void *)v8 + 2) = 0;
  *(void *)uint64_t v8 = off_243A2F0;
  *(_OWORD *)(v8 + 40) = 0u;
  *((_DWORD *)v8 + 14) = 1065353216;
  *(_OWORD *)(v8 + 24) = 0u;
  uint64_t v9 = (uint64_t)(v8 + 24);
  *a4 = v8 + 24;
  a4[1] = v8;
  if (*(char *)(a3 + 23) < 0) {
    sub_4200(&__dst, *(void **)a3, *(void *)(a3 + 8));
  }
  else {
    std::string __dst = *(std::string *)a3;
  }
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  if (*a1 != v11)
  {
    char v12 = *(unsigned char *)(a3 + 23);
    if (v12 >= 0) {
      uint64_t v13 = *(unsigned __int8 *)(a3 + 23);
    }
    else {
      uint64_t v13 = *(void *)(a3 + 8);
    }
    if (v12 >= 0) {
      std::string::size_type v14 = (unsigned __int8 *)a3;
    }
    else {
      std::string::size_type v14 = *(unsigned __int8 **)a3;
    }
    while (1)
    {
      uint64_t v15 = *(unsigned __int8 *)(v10 + 23);
      if ((v15 & 0x80u) == 0) {
        uint64_t v16 = *(unsigned __int8 *)(v10 + 23);
      }
      else {
        uint64_t v16 = *(void *)(v10 + 8);
      }
      if (v16 == v13)
      {
        if ((v15 & 0x80) != 0)
        {
          if (!memcmp(*(const void **)v10, v14, *(void *)(v10 + 8))) {
            break;
          }
        }
        else
        {
          if (!*(unsigned char *)(v10 + 23)) {
            break;
          }
          uint64_t v17 = 0;
          while (*(unsigned __int8 *)(v10 + v17) == v14[v17])
          {
            if (v15 == ++v17) {
              goto LABEL_22;
            }
          }
        }
      }
      v10 += 24;
      if (v10 == v11) {
        goto LABEL_23;
      }
    }
  }
LABEL_22:
  if (v10 == v11)
  {
LABEL_23:
    if (sub_723EC(3u))
    {
      sub_6BAC((uint64_t)&v30);
      int v18 = sub_188FC78(&v30, (uint64_t)"get_key_instruction_map: preferred language '", 45);
      int v19 = *(char *)(a3 + 23);
      if (v19 >= 0) {
        uint64_t v20 = a3;
      }
      else {
        uint64_t v20 = *(void *)a3;
      }
      if (v19 >= 0) {
        uint64_t v21 = *(unsigned __int8 *)(a3 + 23);
      }
      else {
        uint64_t v21 = *(void *)(a3 + 8);
      }
      char v22 = sub_188FC78(v18, v20, v21);
      uint64_t v23 = sub_188FC78(v22, (uint64_t)"' was not found amongst the list of available languages (", 57);
      sub_68BF8(*a1, a1[1], ",");
      if ((v29 & 0x80u) == 0) {
        char v24 = __p;
      }
      else {
        char v24 = (void **)__p[0];
      }
      if ((v29 & 0x80u) == 0) {
        uint64_t v25 = v29;
      }
      else {
        uint64_t v25 = (uint64_t)__p[1];
      }
      char v26 = sub_188FC78(v23, (uint64_t)v24, v25);
      sub_188FC78(v26, (uint64_t)")", 1);
      if ((char)v29 < 0) {
        operator delete(__p[0]);
      }
      std::stringbuf::str();
      sub_7246C((uint64_t *)__p, 3u);
      if ((char)v29 < 0) {
        operator delete(__p[0]);
      }
      if (v33 < 0) {
        operator delete(v32);
      }
      std::streambuf::~streambuf();
      std::ostream::~ostream();
      std::ios::~ios();
    }
    std::string::assign(&__dst, "en");
  }
  sub_689908((uint64_t)a1, a2, (uint64_t)&__dst, &v30);
  sub_68B99C(v9, a3, a3, &v30);
  unint64_t v27 = (std::__shared_weak_count *)v31;
  if (!v31 || atomic_fetch_add((atomic_ullong *volatile)v31 + 1, 0xFFFFFFFFFFFFFFFFLL))
  {
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
    goto LABEL_47;
  }
  ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
  std::__shared_weak_count::__release_weak(v27);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
LABEL_47:
  }
    operator delete(__dst.__r_.__value_.__l.__data_);
}

void sub_689264(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_111ECAC((uint64_t)&a15);
  if (*(char *)(v16 - 89) < 0) {
    operator delete(*(void **)(v16 - 112));
  }
  sub_14A84(v15);
  _Unwind_Resume(a1);
}

void sub_6892E8(uint64_t *a1@<X0>, unsigned int a2@<W1>, int a3@<W2>, uint64_t *a4@<X8>)
{
  sub_68962C(a1, a3, (uint64_t)&v21);
  std::string::size_type size = HIBYTE(v21.__r_.__value_.__r.__words[2]);
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = v21.__r_.__value_.__l.__size_;
  }
  if (!size && sub_723EC(3u))
  {
    sub_6BAC((uint64_t)&v17);
    sub_188FC78(&v17, (uint64_t)"get_spoken_language_string returned an empty string for input language '", 72);
    uint64_t v8 = (void *)std::ostream::operator<<();
    uint64_t v9 = sub_188FC78(v8, (uint64_t)"' and available languages (", 27);
    sub_68BF8(*a1, a1[1], ",");
    if ((v16 & 0x80u) == 0) {
      uint64_t v10 = __p;
    }
    else {
      uint64_t v10 = (void **)__p[0];
    }
    if ((v16 & 0x80u) == 0) {
      uint64_t v11 = v16;
    }
    else {
      uint64_t v11 = (uint64_t)__p[1];
    }
    char v12 = sub_188FC78(v9, (uint64_t)v10, v11);
    sub_188FC78(v12, (uint64_t)")", 1);
    if ((char)v16 < 0) {
      operator delete(__p[0]);
    }
    std::stringbuf::str();
    sub_7246C((uint64_t *)__p, 3u);
    if ((char)v16 < 0) {
      operator delete(__p[0]);
    }
    if (v20 < 0) {
      operator delete(v19);
    }
    std::streambuf::~streambuf();
    std::ostream::~ostream();
    std::ios::~ios();
  }
  sub_688EB0(a1, a2, (uint64_t)&v21, &v17);
  uint64_t v13 = operator new(0x48uLL);
  v13[1] = 0;
  v13[2] = 0;
  *uint64_t v13 = off_243A250;
  *a4 = sub_8D7674((uint64_t)(v13 + 3), &v21, (uint64_t)&v17);
  a4[1] = (uint64_t)v13;
  std::string::size_type v14 = (std::__shared_weak_count *)v18;
  if (!v18 || atomic_fetch_add((atomic_ullong *volatile)v18 + 1, 0xFFFFFFFFFFFFFFFFLL))
  {
    if ((SHIBYTE(v21.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
    goto LABEL_21;
  }
  ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
  std::__shared_weak_count::__release_weak(v14);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
LABEL_21:
  }
    operator delete(v21.__r_.__value_.__l.__data_);
}

void sub_6895B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_111ECAC((uint64_t)&a16);
  if (*(char *)(v16 - 65) < 0) {
    operator delete(*(void **)(v16 - 88));
  }
  _Unwind_Resume(a1);
}

uint64_t sub_68962C@<X0>(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v13 = a2;
  uint64_t v5 = sub_65800();
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F6A18, memory_order_acquire) & 1) == 0)
  {
    uint64_t v12 = v5;
    int v11 = __cxa_guard_acquire(&qword_24F6A18);
    uint64_t v5 = v12;
    if (v11)
    {
      xmmword_24F6A00 = 0uLL;
      qword_24F6A10 = 0;
      __cxa_guard_release(&qword_24F6A18);
      uint64_t v5 = v12;
    }
  }
  v17[0] = &v13;
  v17[1] = v14;
  int v18 = 4;
  uint64_t v19 = 1;
  uint64_t v6 = a1[1];
  unint64_t v7 = 0xAAAAAAAAAAAAAAABLL * ((v6 - *a1) >> 3);
  v14[0] = *a1;
  v14[1] = v6;
  int v15 = 0;
  unint64_t v16 = v7;
  uint64_t result = (*(uint64_t (**)(uint64_t, void *, void *))(*(void *)v5 + 40))(v5, v17, v14);
  if ((result & 0x80000000) != 0 || (int)result >= (int)(-1431655765 * ((a1[1] - *a1) >> 3)))
  {
    uint64_t v9 = &xmmword_24F6A00;
    if ((SHIBYTE(qword_24F6A10) & 0x80000000) == 0) {
      goto LABEL_5;
    }
  }
  else
  {
    uint64_t v9 = (long long *)(*a1 + 24 * result);
    if ((*((char *)v9 + 23) & 0x80000000) == 0)
    {
LABEL_5:
      long long v10 = *v9;
      *(void *)(a3 + 16) = *((void *)v9 + 2);
      *(_OWORD *)a3 = v10;
      return result;
    }
  }
  return (uint64_t)sub_4200((unsigned char *)a3, *(void **)v9, *((void *)v9 + 1));
}

void sub_689794(void *a1@<X0>, int a2@<W1>, char *a3@<X8>)
{
  sub_688D48(a1, a2, (uint64_t)__p);
  if (!sub_68AC50(a1 + 3, (uint64_t)__p))
  {
    a3[23] = 8;
    strcpy(a3, "en.lproj");
    if ((v13 & 0x80) == 0) {
      return;
    }
LABEL_20:
    operator delete(__p[0]);
    return;
  }
  int v5 = (char)v13;
  if ((v13 & 0x80u) == 0) {
    size_t v6 = v13;
  }
  else {
    size_t v6 = (size_t)__p[1];
  }
  unint64_t v7 = v6 + 6;
  if (v6 + 6 >= 0x7FFFFFFFFFFFFFF8) {
    sub_188D690();
  }
  if (v7 >= 0x17)
  {
    uint64_t v8 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v8 = v7 | 7;
    }
    uint64_t v9 = v8 + 1;
    long long v10 = (char *)operator new(v8 + 1);
    *((void *)a3 + 1) = v7;
    *((void *)a3 + 2) = v9 | 0x8000000000000000;
    *(void *)a3 = v10;
    a3 = v10;
  }
  else
  {
    *((void *)a3 + 1) = 0;
    *((void *)a3 + 2) = 0;
    *(void *)a3 = 0;
    a3[23] = v7;
    if (!v6) {
      goto LABEL_18;
    }
  }
  if (v5 >= 0) {
    int v11 = __p;
  }
  else {
    int v11 = (void **)__p[0];
  }
  memmove(a3, v11, v6);
LABEL_18:
  strcpy(&a3[v6], ".lproj");
  if ((v5 & 0x80) != 0) {
    goto LABEL_20;
  }
}

void sub_6898EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_689908@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_689A54(a1, a3, a2);
  uint64_t result = sub_68AC50((void *)(a1 + 24), a3);
  if (!result) {
    goto LABEL_22;
  }
  unint64_t v9 = result[6];
  if (!v9) {
    goto LABEL_22;
  }
  uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
  v10.i16[0] = vaddlv_u8(v10);
  if (v10.u32[0] > 1uLL)
  {
    unint64_t v11 = a2;
    if (v9 <= a2) {
      unint64_t v11 = a2 % v9;
    }
  }
  else
  {
    unint64_t v11 = (v9 - 1) & a2;
  }
  uint64_t v12 = *(uint64_t ***)(result[5] + 8 * v11);
  if (!v12 || (unsigned __int8 v13 = *v12) == 0)
  {
LABEL_22:
    *a4 = 0;
    a4[1] = 0;
    return result;
  }
  if (v10.u32[0] < 2uLL)
  {
    unint64_t v14 = v9 - 1;
    while (1)
    {
      uint64_t v16 = v13[1];
      if (v16 == a2)
      {
        if (*((_DWORD *)v13 + 4) == a2) {
          goto LABEL_24;
        }
      }
      else if ((v16 & v14) != v11)
      {
        goto LABEL_22;
      }
      unsigned __int8 v13 = (uint64_t *)*v13;
      if (!v13) {
        goto LABEL_22;
      }
    }
  }
  while (1)
  {
    unint64_t v15 = v13[1];
    if (v15 == a2) {
      break;
    }
    if (v15 >= v9) {
      v15 %= v9;
    }
    if (v15 != v11) {
      goto LABEL_22;
    }
LABEL_12:
    unsigned __int8 v13 = (uint64_t *)*v13;
    if (!v13) {
      goto LABEL_22;
    }
  }
  if (*((_DWORD *)v13 + 4) != a2) {
    goto LABEL_12;
  }
LABEL_24:
  uint64_t v17 = v13[4];
  *a4 = v13[3];
  a4[1] = v17;
  if (v17) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v17 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_689A54(uint64_t a1, uint64_t a2, unsigned int a3)
{
  size_t v6 = sub_68AC50((void *)(a1 + 24), a2);
  if (v6)
  {
    unint64_t v7 = v6[6];
    if (v7)
    {
      uint8x8_t v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
      v8.i16[0] = vaddlv_u8(v8);
      if (v8.u32[0] > 1uLL)
      {
        unint64_t v9 = a3;
        if (v7 <= a3) {
          unint64_t v9 = a3 % v7;
        }
      }
      else
      {
        unint64_t v9 = (v7 - 1) & a3;
      }
      uint8x8_t v10 = *(uint64_t ***)(v6[5] + 8 * v9);
      if (v10)
      {
        unint64_t v11 = *v10;
        if (v11)
        {
          if (v8.u32[0] < 2uLL)
          {
            unint64_t v12 = v7 - 1;
            while (1)
            {
              uint64_t v14 = v11[1];
              if (v14 == a3)
              {
                if (*((_DWORD *)v11 + 4) == a3) {
                  return;
                }
              }
              else if ((v14 & v12) != v9)
              {
                goto LABEL_22;
              }
              unint64_t v11 = (uint64_t *)*v11;
              if (!v11) {
                goto LABEL_22;
              }
            }
          }
          do
          {
            unint64_t v13 = v11[1];
            if (v13 == a3)
            {
              if (*((_DWORD *)v11 + 4) == a3) {
                return;
              }
            }
            else
            {
              if (v13 >= v7) {
                v13 %= v7;
              }
              if (v13 != v9) {
                break;
              }
            }
            unint64_t v11 = (uint64_t *)*v11;
          }
          while (v11);
        }
      }
    }
  }
LABEL_22:
  unint64_t v15 = (std::mutex *)(a1 + 96);
  std::mutex::lock((std::mutex *)(a1 + 96));
  if (*(char *)(a2 + 23) < 0)
  {
    sub_4200(__dst, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)std::string __dst = *(_OWORD *)a2;
    uint64_t v26 = *(void *)(a2 + 16);
  }
  sub_4BDC0C(&v23, (uint64_t)__dst, 1uLL);
  uint64_t v16 = operator new(4uLL);
  long long __p = v16;
  *uint64_t v16 = a3;
  std::string v21 = v16 + 1;
  char v22 = v16 + 1;
  sub_689CCC(a1, (char **)&v23, (unsigned int **)&__p);
  if (__p)
  {
    std::string v21 = __p;
    operator delete(__p);
  }
  uint64_t v17 = (void **)v23;
  if (v23)
  {
    int v18 = v24;
    uint64_t v19 = v23;
    if (v24 != v23)
    {
      do
      {
        if (*((char *)v18 - 1) < 0) {
          operator delete(*(v18 - 3));
        }
        v18 -= 3;
      }
      while (v18 != v17);
      uint64_t v19 = v23;
    }
    char v24 = v17;
    operator delete(v19);
  }
  if (SHIBYTE(v26) < 0) {
    operator delete(__dst[0]);
  }
  std::mutex::unlock(v15);
}

void sub_689C6C(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_689C80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (__p) {
    operator delete(__p);
  }
  sub_1A668(&a12);
  if (a20 < 0) {
    operator delete(a15);
  }
  std::mutex::unlock(v20);
  _Unwind_Resume(a1);
}

void sub_689CCC(uint64_t a1, char **a2, unsigned int **a3)
{
  uint64_t v3 = *a2;
  char v32 = a2[1];
  if (*a2 != v32)
  {
    uint64_t v4 = (void *)(a1 + 24);
    uint64_t v5 = a1 + 64;
    while (1)
    {
      sub_68A7F0((uint64_t)v3, (char *)v40);
      __p[0] = v3;
      size_t v6 = sub_68AE80((uint64_t)v4, (uint64_t)v3, (uint64_t)&unk_20F06E0, (long long **)__p);
      unint64_t v7 = *a3;
      uint8x8_t v8 = a3[1];
      if (*a3 != v8) {
        break;
      }
LABEL_3:
      if (v41 < 0)
      {
        operator delete(v40[0]);
        v3 += 24;
        if (v3 == v32) {
          return;
        }
      }
      else
      {
        v3 += 24;
        if (v3 == v32) {
          return;
        }
      }
    }
    uint64_t v9 = (uint64_t)(v6 + 5);
    while (1)
    {
      unsigned int v39 = 0;
      unint64_t v10 = *v7;
      unsigned int v39 = *v7;
      unint64_t v11 = sub_68AC50(v4, (uint64_t)v3);
      if (v11)
      {
        int8x8_t v12 = (int8x8_t)v11[6];
        if (v12)
        {
          uint8x8_t v13 = (uint8x8_t)vcnt_s8(v12);
          v13.i16[0] = vaddlv_u8(v13);
          if (v13.u32[0] > 1uLL)
          {
            unint64_t v14 = v10;
            if (*(void *)&v12 <= v10) {
              unint64_t v14 = v10 % *(void *)&v12;
            }
          }
          else
          {
            unint64_t v14 = (v12.i32[0] - 1) & v10;
          }
          unint64_t v15 = *(uint64_t ***)(v11[5] + 8 * v14);
          if (v15)
          {
            uint64_t v16 = *v15;
            if (v16)
            {
              if (v13.u32[0] < 2uLL)
              {
                uint64_t v17 = *(void *)&v12 - 1;
                while (1)
                {
                  uint64_t v19 = v16[1];
                  if (v19 == v10)
                  {
                    if (*((_DWORD *)v16 + 4) == v10) {
                      goto LABEL_7;
                    }
                  }
                  else if ((v19 & v17) != v14)
                  {
                    goto LABEL_29;
                  }
                  uint64_t v16 = (uint64_t *)*v16;
                  if (!v16) {
                    goto LABEL_29;
                  }
                }
              }
              do
              {
                unint64_t v18 = v16[1];
                if (v18 == v10)
                {
                  if (*((_DWORD *)v16 + 4) == v10) {
                    goto LABEL_7;
                  }
                }
                else
                {
                  if (v18 >= *(void *)&v12) {
                    v18 %= *(void *)&v12;
                  }
                  if (v18 != v14) {
                    break;
                  }
                }
                uint64_t v16 = (uint64_t *)*v16;
              }
              while (v16);
            }
          }
        }
      }
LABEL_29:
      switch(v39)
      {
        case 0u:
          HIBYTE(v38) = 8;
          strcpy((char *)v37, "Advisory");
          break;
        case 1u:
          HIBYTE(v38) = 5;
          strcpy((char *)v37, "Alert");
          break;
        case 2u:
          HIBYTE(v38) = 9;
          strcpy((char *)v37, "Dodgeball");
          break;
        case 3u:
          HIBYTE(v38) = 14;
          strcpy((char *)v37, "DrivingWalking");
          break;
        case 4u:
          HIBYTE(v38) = 12;
          strcpy((char *)v37, "RouteOptions");
          break;
        case 5u:
          HIBYTE(v38) = 7;
          strcpy((char *)v37, "Transit");
          break;
        case 6u:
          HIBYTE(v38) = 6;
          strcpy((char *)v37, "Hiking");
          break;
        default:
          v37[0] = 0;
          v37[1] = 0;
          uint64_t v38 = 0;
          break;
      }
      *(_OWORD *)long long __p = 0u;
      long long v35 = 0u;
      int v36 = 1065353216;
      sub_63E88(v5, v40, v37, __p);
      char v20 = (char *)operator new(0x40uLL);
      std::string v21 = v20;
      *((void *)v20 + 1) = 0;
      *((void *)v20 + 2) = 0;
      char v22 = __p[0];
      unint64_t v23 = (unint64_t)__p[1];
      *((void **)v20 + 3) = __p[0];
      char v24 = v20 + 24;
      *(void *)char v20 = off_243A2A0;
      __p[0] = 0;
      __p[1] = 0;
      *((void *)v20 + 4) = v23;
      long long v25 = v35;
      *(_OWORD *)(v20 + 40) = v35;
      *((_DWORD *)v20 + 14) = v36;
      if (*((void *)&v25 + 1))
      {
        unint64_t v26 = *(void *)(v25 + 8);
        if ((v23 & (v23 - 1)) != 0)
        {
          if (v26 >= v23) {
            v26 %= v23;
          }
        }
        else
        {
          v26 &= v23 - 1;
        }
        v22[v26] = v20 + 40;
        long long v35 = 0uLL;
      }
      char v42 = &v39;
      unint64_t v27 = sub_68B524(v9, &v39, (uint64_t)&unk_20F06E0, &v42);
      char v28 = (std::__shared_weak_count *)v27[4];
      v27[3] = v24;
      v27[4] = v21;
      if (v28 && !atomic_fetch_add(&v28->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
        std::__shared_weak_count::__release_weak(v28);
      }
      unsigned __int8 v29 = (char *)v35;
      if ((void)v35) {
        break;
      }
LABEL_55:
      uint64_t v31 = __p[0];
      __p[0] = 0;
      if (v31) {
        operator delete(v31);
      }
      if (SHIBYTE(v38) < 0) {
        operator delete(v37[0]);
      }
LABEL_7:
      if (++v7 == v8) {
        goto LABEL_3;
      }
    }
    while (1)
    {
      uint64_t v30 = *(char **)v29;
      if (v29[63] < 0)
      {
        operator delete(*((void **)v29 + 5));
        if ((v29[39] & 0x80000000) == 0) {
          goto LABEL_51;
        }
LABEL_54:
        operator delete(*((void **)v29 + 2));
        operator delete(v29);
        unsigned __int8 v29 = v30;
        if (!v30) {
          goto LABEL_55;
        }
      }
      else
      {
        if (v29[39] < 0) {
          goto LABEL_54;
        }
LABEL_51:
        operator delete(v29);
        unsigned __int8 v29 = v30;
        if (!v30) {
          goto LABEL_55;
        }
      }
    }
  }
}

void sub_68A1D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if ((a30 & 0x80000000) == 0) {
    _Unwind_Resume(exception_object);
  }
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_68A238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    JUMPOUT(0x68A228);
  }
  JUMPOUT(0x68A218);
}

void sub_68A264(uint64_t a1, char **a2, uint64_t a3)
{
  uint64_t v3 = *a2;
  uint64_t v31 = a2[1];
  if (*a2 != v31)
  {
    uint64_t v5 = (void *)(a1 + 24);
    uint64_t v6 = a1 + 64;
    while (1)
    {
      sub_68A7F0((uint64_t)v3, (char *)v38);
      __p[0] = v3;
      uint64_t v7 = 0;
      uint8x8_t v8 = sub_68AE80((uint64_t)v5, (uint64_t)v3, (uint64_t)&unk_20F06E0, (long long **)__p) + 5;
      do
      {
        unint64_t v9 = *(unsigned int *)(a3 + 4 * v7);
        unsigned int v37 = *(_DWORD *)(a3 + 4 * v7);
        unint64_t v10 = sub_68AC50(v5, (uint64_t)v3);
        if (v10)
        {
          int8x8_t v11 = (int8x8_t)v10[6];
          if (v11)
          {
            uint8x8_t v12 = (uint8x8_t)vcnt_s8(v11);
            v12.i16[0] = vaddlv_u8(v12);
            if (v12.u32[0] > 1uLL)
            {
              unint64_t v13 = v9;
              if (*(void *)&v11 <= v9) {
                unint64_t v13 = v9 % *(void *)&v11;
              }
            }
            else
            {
              unint64_t v13 = (v11.i32[0] - 1) & v9;
            }
            unint64_t v14 = *(uint64_t ***)(v10[5] + 8 * v13);
            if (v14)
            {
              unint64_t v15 = *v14;
              if (v15)
              {
                if (v12.u32[0] < 2uLL)
                {
                  uint64_t v16 = *(void *)&v11 - 1;
                  while (1)
                  {
                    uint64_t v18 = v15[1];
                    if (v18 == v9)
                    {
                      if (*((_DWORD *)v15 + 4) == v9) {
                        goto LABEL_6;
                      }
                    }
                    else if ((v18 & v16) != v13)
                    {
                      goto LABEL_28;
                    }
                    unint64_t v15 = (uint64_t *)*v15;
                    if (!v15) {
                      goto LABEL_28;
                    }
                  }
                }
                do
                {
                  unint64_t v17 = v15[1];
                  if (v17 == v9)
                  {
                    if (*((_DWORD *)v15 + 4) == v9) {
                      goto LABEL_6;
                    }
                  }
                  else
                  {
                    if (v17 >= *(void *)&v11) {
                      v17 %= *(void *)&v11;
                    }
                    if (v17 != v13) {
                      break;
                    }
                  }
                  unint64_t v15 = (uint64_t *)*v15;
                }
                while (v15);
              }
            }
          }
        }
LABEL_28:
        switch(v37)
        {
          case 0u:
            HIBYTE(v36) = 8;
            strcpy((char *)v35, "Advisory");
            break;
          case 1u:
            HIBYTE(v36) = 5;
            strcpy((char *)v35, "Alert");
            break;
          case 2u:
            HIBYTE(v36) = 9;
            strcpy((char *)v35, "Dodgeball");
            break;
          case 3u:
            HIBYTE(v36) = 14;
            strcpy((char *)v35, "DrivingWalking");
            break;
          case 4u:
            HIBYTE(v36) = 12;
            strcpy((char *)v35, "RouteOptions");
            break;
          case 5u:
            HIBYTE(v36) = 7;
            strcpy((char *)v35, "Transit");
            break;
          case 6u:
            HIBYTE(v36) = 6;
            strcpy((char *)v35, "Hiking");
            break;
          default:
            v35[0] = 0;
            v35[1] = 0;
            uint64_t v36 = 0;
            break;
        }
        *(_OWORD *)long long __p = 0u;
        long long v33 = 0u;
        int v34 = 1065353216;
        sub_63E88(v6, v38, v35, __p);
        uint64_t v19 = (char *)operator new(0x40uLL);
        char v20 = v19;
        *((void *)v19 + 1) = 0;
        *((void *)v19 + 2) = 0;
        std::string v21 = __p[0];
        unint64_t v22 = (unint64_t)__p[1];
        *((void **)v19 + 3) = __p[0];
        unint64_t v23 = v19 + 24;
        *(void *)uint64_t v19 = off_243A2A0;
        __p[0] = 0;
        __p[1] = 0;
        *((void *)v19 + 4) = v22;
        long long v24 = v33;
        *(_OWORD *)(v19 + 40) = v33;
        *((_DWORD *)v19 + 14) = v34;
        if (*((void *)&v24 + 1))
        {
          unint64_t v25 = *(void *)(v24 + 8);
          if ((v22 & (v22 - 1)) != 0)
          {
            if (v25 >= v22) {
              v25 %= v22;
            }
          }
          else
          {
            v25 &= v22 - 1;
          }
          v21[v25] = v19 + 40;
          long long v33 = 0uLL;
        }
        char v40 = &v37;
        unint64_t v26 = sub_68B524((uint64_t)v8, &v37, (uint64_t)&unk_20F06E0, &v40);
        unint64_t v27 = (std::__shared_weak_count *)v26[4];
        v26[3] = v23;
        v26[4] = v20;
        if (v27 && !atomic_fetch_add(&v27->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v27);
        }
        char v28 = (char *)v33;
        if ((void)v33)
        {
          while (1)
          {
            unsigned __int8 v29 = *(char **)v28;
            if (v28[63] < 0)
            {
              operator delete(*((void **)v28 + 5));
              if ((v28[39] & 0x80000000) == 0) {
                goto LABEL_50;
              }
LABEL_53:
              operator delete(*((void **)v28 + 2));
              operator delete(v28);
              char v28 = v29;
              if (!v29) {
                break;
              }
            }
            else
            {
              if (v28[39] < 0) {
                goto LABEL_53;
              }
LABEL_50:
              operator delete(v28);
              char v28 = v29;
              if (!v29) {
                break;
              }
            }
          }
        }
        uint64_t v30 = __p[0];
        __p[0] = 0;
        if (v30) {
          operator delete(v30);
        }
        if (SHIBYTE(v36) < 0) {
          operator delete(v35[0]);
        }
LABEL_6:
        ++v7;
      }
      while (v7 != 7);
      if (v39 < 0)
      {
        operator delete(v38[0]);
        v3 += 24;
        if (v3 == v31) {
          return;
        }
      }
      else
      {
        v3 += 24;
        if (v3 == v31) {
          return;
        }
      }
    }
  }
}

void sub_68A75C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if ((a30 & 0x80000000) == 0) {
    _Unwind_Resume(exception_object);
  }
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_68A7C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    JUMPOUT(0x68A7B4);
  }
  JUMPOUT(0x68A7A4);
}

char *sub_68A7F0@<X0>(uint64_t a1@<X1>, char *a2@<X8>)
{
  if (*(char *)(a1 + 23) < 0)
  {
    sub_4200(a2, *(void **)a1, *(void *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)a2 = *(_OWORD *)a1;
    *((void *)a2 + 2) = *(void *)(a1 + 16);
  }
  size_t v3 = a2[23];
  char v4 = v3;
  uint64_t v5 = *(char **)a2;
  size_t v6 = *((void *)a2 + 1);
  if ((v3 & 0x80u) == 0) {
    uint64_t v7 = a2;
  }
  else {
    uint64_t v7 = *(unsigned char **)a2;
  }
  if ((v3 & 0x80u) == 0) {
    unint64_t v8 = a2[23];
  }
  else {
    unint64_t v8 = *((void *)a2 + 1);
  }
  if (v8)
  {
    unint64_t v9 = v7;
    if (v8 >= 8)
    {
      unint64_t v9 = &v7[v8 & 0xFFFFFFFFFFFFFFF8];
      unint64_t v10 = v7 + 3;
      unint64_t v11 = v8 & 0xFFFFFFFFFFFFFFF8;
      while (1)
      {
        int8x8_t v12 = vceq_s8(*(int8x8_t *)(v10 - 3), (int8x8_t)0x2D2D2D2D2D2D2D2DLL);
        if (v12.i8[0])
        {
          *(v10 - 3) = 95;
          if ((v12.i8[1] & 1) == 0)
          {
LABEL_16:
            if ((v12.i8[2] & 1) == 0) {
              goto LABEL_17;
            }
            goto LABEL_25;
          }
        }
        else if ((v12.i8[1] & 1) == 0)
        {
          goto LABEL_16;
        }
        *(v10 - 2) = 95;
        if ((v12.i8[2] & 1) == 0)
        {
LABEL_17:
          if ((v12.i8[3] & 1) == 0) {
            goto LABEL_18;
          }
          goto LABEL_26;
        }
LABEL_25:
        *(v10 - 1) = 95;
        if ((v12.i8[3] & 1) == 0)
        {
LABEL_18:
          if ((v12.i8[4] & 1) == 0) {
            goto LABEL_19;
          }
          goto LABEL_27;
        }
LABEL_26:
        *unint64_t v10 = 95;
        if ((v12.i8[4] & 1) == 0)
        {
LABEL_19:
          if ((v12.i8[5] & 1) == 0) {
            goto LABEL_20;
          }
          goto LABEL_28;
        }
LABEL_27:
        v10[1] = 95;
        if ((v12.i8[5] & 1) == 0)
        {
LABEL_20:
          if ((v12.i8[6] & 1) == 0) {
            goto LABEL_21;
          }
          goto LABEL_29;
        }
LABEL_28:
        v10[2] = 95;
        if ((v12.i8[6] & 1) == 0)
        {
LABEL_21:
          if (v12.i8[7]) {
            goto LABEL_30;
          }
          goto LABEL_13;
        }
LABEL_29:
        v10[3] = 95;
        if (v12.i8[7]) {
LABEL_30:
        }
          v10[4] = 95;
LABEL_13:
        v10 += 8;
        v11 -= 8;
        if (!v11)
        {
          if (v8 == (v8 & 0xFFFFFFFFFFFFFFF8)) {
            goto LABEL_32;
          }
          break;
        }
      }
    }
    char v20 = &v7[v8];
    do
    {
      if (*v9 == 45) {
        unsigned char *v9 = 95;
      }
      ++v9;
    }
    while (v9 != v20);
LABEL_32:
    size_t v3 = a2[23];
    uint64_t v5 = *(char **)a2;
    size_t v6 = *((void *)a2 + 1);
    char v4 = a2[23];
  }
  if (v4 >= 0) {
    unint64_t v13 = a2;
  }
  else {
    unint64_t v13 = v5;
  }
  if (v4 >= 0) {
    size_t v14 = v3;
  }
  else {
    size_t v14 = v6;
  }
  unint64_t v15 = &v13[v14];
  uint64_t result = (char *)memchr(v13, 95, v14);
  if (result) {
    unint64_t v17 = result;
  }
  else {
    unint64_t v17 = v15;
  }
  uint64_t v18 = v17 + 1;
  if (v4 < 0)
  {
    if (v17 != &v5[v6] && v18 != &v5[v6]) {
      goto LABEL_58;
    }
  }
  else
  {
    BOOL v19 = v17 == &a2[v3] || v18 == &a2[v3];
    uint64_t v5 = a2;
    size_t v6 = v3;
    if (!v19)
    {
LABEL_58:
      for (uint64_t i = &v5[v6]; v18 != i; ++v18)
      {
        uint64_t result = (char *)__toupper(*v18);
        *uint64_t v18 = (char)result;
      }
    }
  }
  return result;
}

void sub_68AA00(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_68AA1C(int a1, char *__p)
{
  if (__p)
  {
    uint64_t v2 = __p;
    do
    {
      size_t v3 = *(char **)v2;
      char v4 = (void *)*((void *)v2 + 7);
      while (v4)
      {
        size_t v6 = v4;
        char v4 = (void *)*v4;
        uint64_t v7 = (std::__shared_weak_count *)v6[4];
        if (v7 && !atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
          std::__shared_weak_count::__release_weak(v7);
        }
        operator delete(v6);
      }
      uint64_t v5 = (void *)*((void *)v2 + 5);
      *((void *)v2 + 5) = 0;
      if (v5) {
        operator delete(v5);
      }
      if (v2[39] < 0) {
        operator delete(*((void **)v2 + 2));
      }
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
}

void sub_68AAF8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_243A250;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_68AB18(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_243A250;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_68AB6C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 56);
    char v4 = *(void **)(a1 + 48);
    if (v3 != v2)
    {
      do
      {
        uint64_t v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
          std::__shared_weak_count::__release_weak(v5);
        }
        v3 -= 16;
      }
      while (v3 != v2);
      char v4 = *(void **)(a1 + 48);
    }
    *(void *)(a1 + 56) = v2;
    operator delete(v4);
  }
  if (*(char *)(a1 + 47) < 0)
  {
    size_t v6 = *(void **)(a1 + 24);
    operator delete(v6);
  }
}

uint64_t *sub_68AC50(void *a1, uint64_t a2)
{
  uint64_t v2 = (unsigned char *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    unint64_t v5 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(void *)a2;
    unint64_t v5 = v4;
  }
  unint64_t v6 = sub_B128((uint64_t)&v25, (uint64_t *)a2, v5);
  int8x8_t v7 = (int8x8_t)a1[1];
  if (!*(void *)&v7) {
    return 0;
  }
  unint64_t v8 = v6;
  uint8x8_t v9 = (uint8x8_t)vcnt_s8(v7);
  v9.i16[0] = vaddlv_u8(v9);
  if (v9.u32[0] > 1uLL)
  {
    unint64_t v10 = v6;
    if (v6 >= *(void *)&v7) {
      unint64_t v10 = v6 % *(void *)&v7;
    }
  }
  else
  {
    unint64_t v10 = (*(void *)&v7 - 1) & v6;
  }
  int8x8_t v12 = *(uint64_t ***)(*a1 + 8 * v10);
  if (v12)
  {
    unint64_t v13 = *v12;
    if (*v12)
    {
      char v14 = v2[23];
      if (v14 >= 0) {
        uint64_t v15 = v2[23];
      }
      else {
        uint64_t v15 = *((void *)v2 + 1);
      }
      if (v14 < 0) {
        uint64_t v2 = *(unsigned char **)v2;
      }
      if (v9.u32[0] < 2uLL)
      {
        uint64_t v16 = *(void *)&v7 - 1;
        while (1)
        {
          uint64_t v21 = v13[1];
          if (v21 == v8)
          {
            uint64_t v22 = *((unsigned __int8 *)v13 + 39);
            if ((v22 & 0x80u) == 0) {
              uint64_t v23 = *((unsigned __int8 *)v13 + 39);
            }
            else {
              uint64_t v23 = v13[3];
            }
            if (v23 == v15)
            {
              if ((v22 & 0x80) != 0)
              {
                if (!memcmp((const void *)v13[2], v2, v13[3])) {
                  return v13;
                }
              }
              else
              {
                if (!*((unsigned char *)v13 + 39)) {
                  return v13;
                }
                uint64_t v24 = 0;
                while (*((unsigned __int8 *)v13 + v24 + 16) == v2[v24])
                {
                  if (v22 == ++v24) {
                    return v13;
                  }
                }
              }
            }
          }
          else if ((v21 & v16) != v10)
          {
            return 0;
          }
          uint64_t result = 0;
          unint64_t v13 = (uint64_t *)*v13;
          if (!v13) {
            return result;
          }
        }
      }
      while (1)
      {
        unint64_t v17 = v13[1];
        if (v17 == v8)
        {
          uint64_t v18 = *((unsigned __int8 *)v13 + 39);
          if ((v18 & 0x80u) == 0) {
            uint64_t v19 = *((unsigned __int8 *)v13 + 39);
          }
          else {
            uint64_t v19 = v13[3];
          }
          if (v19 == v15)
          {
            if ((v18 & 0x80) != 0)
            {
              if (!memcmp((const void *)v13[2], v2, v13[3])) {
                return v13;
              }
            }
            else
            {
              if (!*((unsigned char *)v13 + 39)) {
                return v13;
              }
              uint64_t v20 = 0;
              while (*((unsigned __int8 *)v13 + v20 + 16) == v2[v20])
              {
                if (v18 == ++v20) {
                  return v13;
                }
              }
            }
          }
        }
        else
        {
          if (v17 >= *(void *)&v7) {
            v17 %= *(void *)&v7;
          }
          if (v17 != v10) {
            return 0;
          }
        }
        uint64_t result = 0;
        unint64_t v13 = (uint64_t *)*v13;
        if (!v13) {
          return result;
        }
      }
    }
  }
  return 0;
}

uint64_t *sub_68AE80(uint64_t a1, uint64_t a2, uint64_t a3, long long **a4)
{
  unint64_t v6 = (unsigned char *)a2;
  unint64_t v8 = *(void *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    unint64_t v9 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(void *)a2;
    unint64_t v9 = v8;
  }
  unint64_t v10 = sub_B128((uint64_t)v45, (uint64_t *)a2, v9);
  unint64_t v11 = v10;
  unint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    uint8x8_t v13 = (uint8x8_t)vcnt_s8((int8x8_t)v12);
    v13.i16[0] = vaddlv_u8(v13);
    if (v13.u32[0] > 1uLL)
    {
      unint64_t v4 = v10;
      if (v10 >= v12) {
        unint64_t v4 = v10 % v12;
      }
    }
    else
    {
      unint64_t v4 = (v12 - 1) & v10;
    }
    char v14 = *(uint64_t ***)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      uint64_t v15 = *v14;
      if (*v14)
      {
        char v16 = v6[23];
        if (v16 >= 0) {
          uint64_t v17 = v6[23];
        }
        else {
          uint64_t v17 = *((void *)v6 + 1);
        }
        if (v16 < 0) {
          unint64_t v6 = *(unsigned char **)v6;
        }
        if (v13.u32[0] < 2uLL)
        {
          while (1)
          {
            uint64_t v22 = v15[1];
            if (v22 == v11)
            {
              uint64_t v23 = *((unsigned __int8 *)v15 + 39);
              if ((v23 & 0x80u) == 0) {
                uint64_t v24 = *((unsigned __int8 *)v15 + 39);
              }
              else {
                uint64_t v24 = v15[3];
              }
              if (v24 == v17)
              {
                if ((v23 & 0x80) != 0)
                {
                  if (!memcmp((const void *)v15[2], v6, v15[3])) {
                    return v15;
                  }
                }
                else
                {
                  if (!*((unsigned char *)v15 + 39)) {
                    return v15;
                  }
                  uint64_t v25 = 0;
                  while (*((unsigned __int8 *)v15 + v25 + 16) == v6[v25])
                  {
                    if (v23 == ++v25) {
                      return v15;
                    }
                  }
                }
              }
            }
            else if ((v22 & (v12 - 1)) != v4)
            {
              goto LABEL_51;
            }
            uint64_t v15 = (uint64_t *)*v15;
            if (!v15) {
              goto LABEL_51;
            }
          }
        }
        do
        {
          unint64_t v18 = v15[1];
          if (v18 == v11)
          {
            uint64_t v19 = *((unsigned __int8 *)v15 + 39);
            if ((v19 & 0x80u) == 0) {
              uint64_t v20 = *((unsigned __int8 *)v15 + 39);
            }
            else {
              uint64_t v20 = v15[3];
            }
            if (v20 == v17)
            {
              if ((v19 & 0x80) != 0)
              {
                if (!memcmp((const void *)v15[2], v6, v15[3])) {
                  return v15;
                }
              }
              else
              {
                if (!*((unsigned char *)v15 + 39)) {
                  return v15;
                }
                uint64_t v21 = 0;
                while (*((unsigned __int8 *)v15 + v21 + 16) == v6[v21])
                {
                  if (v19 == ++v21) {
                    return v15;
                  }
                }
              }
            }
          }
          else
          {
            if (v18 >= v12) {
              v18 %= v12;
            }
            if (v18 != v4) {
              break;
            }
          }
          uint64_t v15 = (uint64_t *)*v15;
        }
        while (v15);
      }
    }
  }
LABEL_51:
  unint64_t v26 = (char *)operator new(0x50uLL);
  v45[0] = v26;
  v45[1] = a1 + 16;
  char v46 = 0;
  *(void *)unint64_t v26 = 0;
  *((void *)v26 + 1) = v11;
  unint64_t v27 = v26 + 16;
  char v28 = *a4;
  if (*((char *)*a4 + 23) < 0)
  {
    sub_4200(v27, *(void **)v28, *((void *)v28 + 1));
  }
  else
  {
    long long v29 = *v28;
    *((void *)v26 + 4) = *((void *)v28 + 2);
    *(_OWORD *)unint64_t v27 = v29;
  }
  *(_OWORD *)(v26 + 56) = 0u;
  *(_OWORD *)(v26 + 40) = 0u;
  *((_DWORD *)v26 + 18) = 1065353216;
  char v46 = 1;
  float v30 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v31 = *(float *)(a1 + 32);
  if (!v12 || (float)(v31 * (float)v12) < v30)
  {
    BOOL v34 = 1;
    if (v12 >= 3) {
      BOOL v34 = (v12 & (v12 - 1)) != 0;
    }
    unint64_t v35 = v34 | (2 * v12);
    unint64_t v36 = vcvtps_u32_f32(v30 / v31);
    if (v35 <= v36) {
      size_t prime = v36;
    }
    else {
      size_t prime = v35;
    }
    if (prime == 1)
    {
      size_t prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      size_t prime = std::__next_prime(prime);
    }
    int8x8_t v38 = *(int8x8_t *)(a1 + 8);
    if (prime > *(void *)&v38) {
      goto LABEL_68;
    }
    if (prime < *(void *)&v38)
    {
      unint64_t v39 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(void *)&v38 < 3uLL || (uint8x8_t v40 = (uint8x8_t)vcnt_s8(v38), v40.i16[0] = vaddlv_u8(v40), v40.u32[0] > 1uLL))
      {
        unint64_t v39 = std::__next_prime(v39);
      }
      else
      {
        uint64_t v41 = 1 << -(char)__clz(v39 - 1);
        if (v39 >= 2) {
          unint64_t v39 = v41;
        }
      }
      if (prime <= v39) {
        size_t prime = v39;
      }
      if (prime < *(void *)&v38) {
LABEL_68:
      }
        sub_B6C0(a1, prime);
    }
    unint64_t v12 = *(void *)(a1 + 8);
    unint64_t v42 = v12 - 1;
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v11 >= v12)
      {
        unint64_t v4 = v11 % v12;
        char v32 = *(void **)(*(void *)a1 + 8 * (v11 % v12));
        long long v33 = (void *)v45[0];
        if (v32) {
          goto LABEL_57;
        }
      }
      else
      {
        unint64_t v4 = v11;
        char v32 = *(void **)(*(void *)a1 + 8 * v11);
        long long v33 = (void *)v45[0];
        if (v32) {
          goto LABEL_57;
        }
      }
    }
    else
    {
      unint64_t v4 = v42 & v11;
      char v32 = *(void **)(*(void *)a1 + 8 * (v42 & v11));
      long long v33 = (void *)v45[0];
      if (v32) {
        goto LABEL_57;
      }
    }
LABEL_81:
    void *v33 = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v45[0];
    *(void *)(*(void *)a1 + 8 * v4) = a1 + 16;
    if (*(void *)v45[0])
    {
      unint64_t v43 = *(void *)(*(void *)v45[0] + 8);
      if ((v12 & (v12 - 1)) != 0)
      {
        if (v43 >= v12) {
          v43 %= v12;
        }
      }
      else
      {
        v43 &= v12 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v43) = v45[0];
    }
    goto LABEL_92;
  }
  char v32 = *(void **)(*(void *)a1 + 8 * v4);
  long long v33 = (void *)v45[0];
  if (!v32) {
    goto LABEL_81;
  }
LABEL_57:
  void *v33 = *v32;
  void *v32 = v45[0];
LABEL_92:
  uint64_t v15 = (uint64_t *)v45[0];
  ++*(void *)(a1 + 24);
  return v15;
}

void sub_68B2E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  sub_68B318(v10, v11);
  _Unwind_Resume(a1);
}

void sub_68B318(uint64_t a1, char *__p)
{
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t v3 = (void *)*((void *)__p + 7);
    while (v3)
    {
      unint64_t v4 = v3;
      uint64_t v3 = (void *)*v3;
      unint64_t v5 = (std::__shared_weak_count *)v4[4];
      if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      operator delete(v4);
    }
    unint64_t v6 = (void *)*((void *)__p + 5);
    *((void *)__p + 5) = 0;
    if (v6) {
      operator delete(v6);
    }
    if (__p[39] < 0) {
      operator delete(*((void **)__p + 2));
    }
  }
  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

void sub_68B40C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_243A2A0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_68B42C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_243A2A0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_68B480(uint64_t a1)
{
  uint64_t v2 = *(void ***)(a1 + 40);
  if (v2)
  {
    do
    {
      unint64_t v4 = (void **)*v2;
      if (*((char *)v2 + 63) < 0)
      {
        operator delete(v2[5]);
        if (*((char *)v2 + 39) < 0) {
LABEL_11:
        }
          operator delete(v2[2]);
      }
      else if (*((char *)v2 + 39) < 0)
      {
        goto LABEL_11;
      }
      operator delete(v2);
      uint64_t v2 = v4;
    }
    while (v4);
  }
  uint64_t v3 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = 0;
  if (v3)
  {
    operator delete(v3);
  }
}

void *sub_68B524(uint64_t a1, unsigned int *a2, uint64_t a3, _DWORD **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
    uint64_t v10 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      unint64_t v11 = *v10;
      if (*v10)
      {
        if (v9.u32[0] < 2uLL)
        {
          while (1)
          {
            uint64_t v13 = v11[1];
            if (v13 == v7)
            {
              if (*((_DWORD *)v11 + 4) == v7) {
                return v11;
              }
            }
            else if ((v13 & (v8 - 1)) != v4)
            {
              goto LABEL_23;
            }
            unint64_t v11 = (void *)*v11;
            if (!v11) {
              goto LABEL_23;
            }
          }
        }
        do
        {
          unint64_t v12 = v11[1];
          if (v12 == v7)
          {
            if (*((_DWORD *)v11 + 4) == v7) {
              return v11;
            }
          }
          else
          {
            if (v12 >= v8) {
              v12 %= v8;
            }
            if (v12 != v4) {
              break;
            }
          }
          unint64_t v11 = (void *)*v11;
        }
        while (v11);
      }
    }
  }
LABEL_23:
  char v14 = (void *)(a1 + 16);
  unint64_t v11 = operator new(0x28uLL);
  *unint64_t v11 = 0;
  v11[1] = v7;
  *((_DWORD *)v11 + 4) = **a4;
  v11[3] = 0;
  v11[4] = 0;
  float v15 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v16 = *(float *)(a1 + 32);
  if (v8 && (float)(v16 * (float)v8) >= v15)
  {
    unint64_t v7 = v4;
  }
  else
  {
    BOOL v17 = 1;
    if (v8 >= 3) {
      BOOL v17 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v18 = v17 | (2 * v8);
    unint64_t v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19) {
      size_t prime = v19;
    }
    else {
      size_t prime = v18;
    }
    if (prime == 1)
    {
      size_t prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      size_t prime = std::__next_prime(prime);
      unint64_t v8 = *(void *)(a1 + 8);
    }
    if (prime > v8) {
      goto LABEL_36;
    }
    if (prime < v8)
    {
      unint64_t v21 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v8 < 3 || (uint8x8_t v22 = (uint8x8_t)vcnt_s8((int8x8_t)v8), v22.i16[0] = vaddlv_u8(v22), v22.u32[0] > 1uLL))
      {
        unint64_t v21 = std::__next_prime(v21);
      }
      else
      {
        uint64_t v23 = 1 << -(char)__clz(v21 - 1);
        if (v21 >= 2) {
          unint64_t v21 = v23;
        }
      }
      if (prime <= v21) {
        size_t prime = v21;
      }
      if (prime < v8) {
LABEL_36:
      }
        sub_B6C0(a1, prime);
    }
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7) {
        v7 %= v8;
      }
    }
    else
    {
      unint64_t v7 = (v8 - 1) & v7;
    }
  }
  uint64_t v24 = *(void *)a1;
  uint64_t v25 = *(void **)(*(void *)a1 + 8 * v7);
  if (v25)
  {
    *unint64_t v11 = *v25;
LABEL_59:
    *uint64_t v25 = v11;
    goto LABEL_60;
  }
  *unint64_t v11 = *v14;
  void *v14 = v11;
  *(void *)(v24 + 8 * v7) = v14;
  if (*v11)
  {
    unint64_t v26 = *(void *)(*v11 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v26 >= v8) {
        v26 %= v8;
      }
    }
    else
    {
      v26 &= v8 - 1;
    }
    uint64_t v25 = (void *)(*(void *)a1 + 8 * v26);
    goto LABEL_59;
  }
LABEL_60:
  ++*(void *)(a1 + 24);
  return v11;
}

void sub_68B824(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2F1EB8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_68B838(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_243A2F0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_68B858(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_243A2F0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_68B8AC(uint64_t a1)
{
  uint64_t v2 = *(void ***)(a1 + 40);
  if (v2)
  {
    do
    {
      while (1)
      {
        uint64_t v3 = (void **)*v2;
        unint64_t v4 = (std::__shared_weak_count *)v2[6];
        if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
          std::__shared_weak_count::__release_weak(v4);
        }
        if (*((char *)v2 + 39) < 0) {
          break;
        }
        operator delete(v2);
        uint64_t v2 = v3;
        if (!v3) {
          goto LABEL_9;
        }
      }
      operator delete(v2[2]);
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
LABEL_9:
  unint64_t v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = 0;
  if (v5)
  {
    operator delete(v5);
  }
}

uint64_t *sub_68B99C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  unint64_t v7 = (unsigned char *)a2;
  unint64_t v9 = *(void *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    unint64_t v10 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(void *)a2;
    unint64_t v10 = v9;
  }
  unint64_t v11 = sub_B128((uint64_t)v45, (uint64_t *)a2, v10);
  unint64_t v12 = v11;
  unint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    uint8x8_t v14 = (uint8x8_t)vcnt_s8((int8x8_t)v13);
    v14.i16[0] = vaddlv_u8(v14);
    if (v14.u32[0] > 1uLL)
    {
      unint64_t v4 = v11;
      if (v11 >= v13) {
        unint64_t v4 = v11 % v13;
      }
    }
    else
    {
      unint64_t v4 = (v13 - 1) & v11;
    }
    float v15 = *(uint64_t ***)(*(void *)a1 + 8 * v4);
    if (v15)
    {
      float v16 = *v15;
      if (*v15)
      {
        char v17 = v7[23];
        if (v17 >= 0) {
          uint64_t v18 = v7[23];
        }
        else {
          uint64_t v18 = *((void *)v7 + 1);
        }
        if (v17 < 0) {
          unint64_t v7 = *(unsigned char **)v7;
        }
        if (v14.u32[0] < 2uLL)
        {
          while (1)
          {
            uint64_t v23 = v16[1];
            if (v23 == v12)
            {
              uint64_t v24 = *((unsigned __int8 *)v16 + 39);
              if ((v24 & 0x80u) == 0) {
                uint64_t v25 = *((unsigned __int8 *)v16 + 39);
              }
              else {
                uint64_t v25 = v16[3];
              }
              if (v25 == v18)
              {
                if ((v24 & 0x80) != 0)
                {
                  if (!memcmp((const void *)v16[2], v7, v16[3])) {
                    return v16;
                  }
                }
                else
                {
                  if (!*((unsigned char *)v16 + 39)) {
                    return v16;
                  }
                  uint64_t v26 = 0;
                  while (*((unsigned __int8 *)v16 + v26 + 16) == v7[v26])
                  {
                    if (v24 == ++v26) {
                      return v16;
                    }
                  }
                }
              }
            }
            else if ((v23 & (v13 - 1)) != v4)
            {
              goto LABEL_51;
            }
            float v16 = (uint64_t *)*v16;
            if (!v16) {
              goto LABEL_51;
            }
          }
        }
        do
        {
          unint64_t v19 = v16[1];
          if (v19 == v12)
          {
            uint64_t v20 = *((unsigned __int8 *)v16 + 39);
            if ((v20 & 0x80u) == 0) {
              uint64_t v21 = *((unsigned __int8 *)v16 + 39);
            }
            else {
              uint64_t v21 = v16[3];
            }
            if (v21 == v18)
            {
              if ((v20 & 0x80) != 0)
              {
                if (!memcmp((const void *)v16[2], v7, v16[3])) {
                  return v16;
                }
              }
              else
              {
                if (!*((unsigned char *)v16 + 39)) {
                  return v16;
                }
                uint64_t v22 = 0;
                while (*((unsigned __int8 *)v16 + v22 + 16) == v7[v22])
                {
                  if (v20 == ++v22) {
                    return v16;
                  }
                }
              }
            }
          }
          else
          {
            if (v19 >= v13) {
              v19 %= v13;
            }
            if (v19 != v4) {
              break;
            }
          }
          float v16 = (uint64_t *)*v16;
        }
        while (v16);
      }
    }
  }
LABEL_51:
  unint64_t v27 = operator new(0x38uLL);
  v45[0] = v27;
  v45[1] = a1 + 16;
  char v46 = 0;
  *unint64_t v27 = 0;
  v27[1] = v12;
  char v28 = v27 + 2;
  if (*(char *)(a3 + 23) < 0)
  {
    sub_4200(v28, *(void **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)char v28 = *(_OWORD *)a3;
    v27[4] = *(void *)(a3 + 16);
  }
  uint64_t v29 = a4[1];
  v27[5] = *a4;
  v27[6] = v29;
  if (v29) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v29 + 8), 1uLL, memory_order_relaxed);
  }
  char v46 = 1;
  float v30 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v31 = *(float *)(a1 + 32);
  if (!v13 || (float)(v31 * (float)v13) < v30)
  {
    BOOL v34 = 1;
    if (v13 >= 3) {
      BOOL v34 = (v13 & (v13 - 1)) != 0;
    }
    unint64_t v35 = v34 | (2 * v13);
    unint64_t v36 = vcvtps_u32_f32(v30 / v31);
    if (v35 <= v36) {
      size_t prime = v36;
    }
    else {
      size_t prime = v35;
    }
    if (prime == 1)
    {
      size_t prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      size_t prime = std::__next_prime(prime);
    }
    int8x8_t v38 = *(int8x8_t *)(a1 + 8);
    if (prime > *(void *)&v38) {
      goto LABEL_70;
    }
    if (prime < *(void *)&v38)
    {
      unint64_t v39 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(void *)&v38 < 3uLL || (uint8x8_t v40 = (uint8x8_t)vcnt_s8(v38), v40.i16[0] = vaddlv_u8(v40), v40.u32[0] > 1uLL))
      {
        unint64_t v39 = std::__next_prime(v39);
      }
      else
      {
        uint64_t v41 = 1 << -(char)__clz(v39 - 1);
        if (v39 >= 2) {
          unint64_t v39 = v41;
        }
      }
      if (prime <= v39) {
        size_t prime = v39;
      }
      if (prime < *(void *)&v38) {
LABEL_70:
      }
        sub_B6C0(a1, prime);
    }
    unint64_t v13 = *(void *)(a1 + 8);
    unint64_t v42 = v13 - 1;
    if ((v13 & (v13 - 1)) != 0)
    {
      if (v12 >= v13)
      {
        unint64_t v4 = v12 % v13;
        char v32 = *(void **)(*(void *)a1 + 8 * (v12 % v13));
        long long v33 = (void *)v45[0];
        if (v32) {
          goto LABEL_59;
        }
      }
      else
      {
        unint64_t v4 = v12;
        char v32 = *(void **)(*(void *)a1 + 8 * v12);
        long long v33 = (void *)v45[0];
        if (v32) {
          goto LABEL_59;
        }
      }
    }
    else
    {
      unint64_t v4 = v42 & v12;
      char v32 = *(void **)(*(void *)a1 + 8 * (v42 & v12));
      long long v33 = (void *)v45[0];
      if (v32) {
        goto LABEL_59;
      }
    }
LABEL_83:
    void *v33 = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v45[0];
    *(void *)(*(void *)a1 + 8 * v4) = a1 + 16;
    if (*(void *)v45[0])
    {
      unint64_t v43 = *(void *)(*(void *)v45[0] + 8);
      if ((v13 & (v13 - 1)) != 0)
      {
        if (v43 >= v13) {
          v43 %= v13;
        }
      }
      else
      {
        v43 &= v13 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v43) = v45[0];
    }
    goto LABEL_94;
  }
  char v32 = *(void **)(*(void *)a1 + 8 * v4);
  long long v33 = (void *)v45[0];
  if (!v32) {
    goto LABEL_83;
  }
LABEL_59:
  void *v33 = *v32;
  void *v32 = v45[0];
LABEL_94:
  float v16 = (uint64_t *)v45[0];
  ++*(void *)(a1 + 24);
  return v16;
}

void sub_68BDF8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_68BE24((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_68BE0C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_68BE24((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_68BE24(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    if (*((unsigned char *)a1 + 16))
    {
      uint64_t v3 = *(std::__shared_weak_count **)(v2 + 48);
      if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
        if ((*(char *)(v2 + 39) & 0x80000000) == 0) {
          goto LABEL_7;
        }
        goto LABEL_6;
      }
      if (*(char *)(v2 + 39) < 0) {
LABEL_6:
      }
        operator delete(*(void **)(v2 + 16));
    }
LABEL_7:
    operator delete((void *)v2);
  }
  return a1;
}

BOOL *sub_68BED0(BOOL *a1, void *a2)
{
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B91C0;
  strcpy((char *)__p[0], "enable_stairs_up_artwork");
  BOOL v4 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *a1 = v4;
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B5EB0;
  strcpy((char *)__p[0], "enable_stairs_down_artwork");
  BOOL v5 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  a1[1] = v5;
  HIBYTE(__p[2]) = 21;
  strcpy((char *)__p, "enable_stairs_artwork");
  BOOL v6 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  a1[2] = v6;
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B91B0;
  strcpy((char *)__p[0], "enable_cycling_mount_artwork");
  BOOL v7 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  a1[3] = v7;
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B8E90;
  strcpy((char *)__p[0], "enable_cycling_dismount_artwork");
  BOOL v8 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  a1[4] = v8;
  __p[0] = operator new(0x19uLL);
  *(_OWORD *)&__p[1] = xmmword_20B9250;
  strcpy((char *)__p[0], "enable_elevator_artwork");
  BOOL v9 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  a1[5] = v9;
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B91A0;
  strcpy((char *)__p[0], "enable_escalator_up_artwork");
  BOOL v10 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  a1[6] = v10;
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B8890;
  strcpy((char *)__p[0], "enable_escalator_down_artwork");
  BOOL v11 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  a1[7] = v11;
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B91C0;
  strcpy((char *)__p[0], "enable_escalator_artwork");
  BOOL v12 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  a1[8] = v12;
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B9800;
  strcpy((char *)__p[0], "enable_railway_shuttle_artwork");
  BOOL v13 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  a1[9] = v13;
  return a1;
}

void sub_68C268(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL *sub_68C2A8(BOOL *a1, uint64_t a2, int a3)
{
  strcpy((char *)v16, "ManeuverArtworkBuilder");
  HIBYTE(v16[2]) = 22;
  BOOL v13 = 0;
  uint8x8_t v14 = 0;
  uint64_t v15 = 0;
  BOOL v5 = sub_374CDC(a2, (uint64_t)v16, (uint64_t *)&v13);
  sub_3CB370(v5, a3, 0, __p);
  sub_68BED0(a1, __p);
  BOOL v6 = v18;
  if (v18)
  {
    do
    {
      BOOL v11 = *(char **)v6;
      sub_57AC8((uint64_t *)v6 + 5);
      if (v6[39] < 0) {
        operator delete(*((void **)v6 + 2));
      }
      operator delete(v6);
      BOOL v6 = v11;
    }
    while (v11);
  }
  BOOL v7 = __p[0];
  __p[0] = 0;
  if (v7) {
    operator delete(v7);
  }
  BOOL v8 = (void **)v13;
  if (v13)
  {
    BOOL v9 = v14;
    BOOL v10 = v13;
    if (v14 != v13)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      BOOL v10 = v13;
    }
    uint8x8_t v14 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v16[2]) < 0) {
    operator delete(v16[0]);
  }
  return a1;
}

void sub_68C3F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

double sub_68C428@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (a1[5]) {
    BOOL v3 = *(void *)(a2 + 576) == -1;
  }
  else {
    BOOL v3 = 1;
  }
  if (!v3)
  {
    unsigned int v7 = 6;
LABEL_19:
    sub_524A28(v7, a3);
    return result;
  }
  if (*a1)
  {
    if (*(void *)(a2 + 568) != -1 && *(_DWORD *)(a2 + 624) == 1)
    {
      unsigned int v7 = 1;
      goto LABEL_19;
    }
  }
  uint64_t v5 = *(void *)(a2 + 568);
  if (a1[1])
  {
    if (v5 != -1 && *(_DWORD *)(a2 + 624) == 2)
    {
      unsigned int v7 = 2;
      goto LABEL_19;
    }
  }
  if (a1[2] && v5 != -1)
  {
    unsigned int v7 = 0;
    goto LABEL_19;
  }
  if (a1[6] && *(void *)(a2 + 584) != -1 && *(_DWORD *)(a2 + 624) == 1)
  {
    unsigned int v7 = 8;
    goto LABEL_19;
  }
  uint64_t v9 = *(void *)(a2 + 584);
  if (a1[7] && v9 != -1 && *(_DWORD *)(a2 + 624) == 2)
  {
    unsigned int v7 = 9;
    goto LABEL_19;
  }
  if (a1[8] && v9 != -1)
  {
    unsigned int v7 = 7;
    goto LABEL_19;
  }
  if (a1[3] && *(unsigned __int8 *)(a2 + 648) | *(unsigned __int8 *)(a2 + 650))
  {
    unsigned int v7 = 4;
    goto LABEL_19;
  }
  if (a1[4] && *(unsigned char *)(a2 + 649))
  {
    unsigned int v7 = 3;
    goto LABEL_19;
  }
  if (a1[9])
  {
    int v10 = *(_DWORD *)(a2 + 160);
    if (v10 != 92 && (v10 - 94) >= 0xFFFFFFFD)
    {
      unsigned int v7 = 10;
      goto LABEL_19;
    }
  }
  double result = 0.0;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(_OWORD *)(a3 + 96) = 0u;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_DWORD *)(a3 + 32) = -1;
  *(_DWORD *)(a3 + 40) = -1;
  *(_DWORD *)(a3 + 43) = -1;
  *(void *)(a3 + 47) = 0;
  *(void *)(a3 + 55) = 0;
  *(void *)(a3 + 63) = 0;
  *(_WORD *)(a3 + 71) = 0;
  *(void *)(a3 + 80) = 0;
  *(void *)(a3 + 88) = 0;
  *(void *)(a3 + 96) = 0;
  *(unsigned char *)(a3 + 104) = 0;
  return result;
}

double sub_68C5B0@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (a1[5]) {
    BOOL v3 = *(void *)(a2 + 576) == -1;
  }
  else {
    BOOL v3 = 1;
  }
  if (!v3)
  {
    unsigned int v7 = 6;
LABEL_19:
    sub_524A28(v7, a3);
    return result;
  }
  if (*a1)
  {
    if (*(void *)(a2 + 568) != -1 && *(_DWORD *)(a2 + 624) == 1)
    {
      unsigned int v7 = 1;
      goto LABEL_19;
    }
  }
  uint64_t v5 = *(void *)(a2 + 568);
  if (a1[1])
  {
    if (v5 != -1 && *(_DWORD *)(a2 + 624) == 2)
    {
      unsigned int v7 = 2;
      goto LABEL_19;
    }
  }
  if (a1[2] && v5 != -1)
  {
    unsigned int v7 = 0;
    goto LABEL_19;
  }
  if (a1[6] && *(void *)(a2 + 584) != -1 && *(_DWORD *)(a2 + 624) == 1)
  {
    unsigned int v7 = 8;
    goto LABEL_19;
  }
  uint64_t v9 = *(void *)(a2 + 584);
  if (a1[7] && v9 != -1 && *(_DWORD *)(a2 + 624) == 2)
  {
    unsigned int v7 = 9;
    goto LABEL_19;
  }
  if (a1[8] && v9 != -1)
  {
    unsigned int v7 = 7;
    goto LABEL_19;
  }
  if (a1[3] && *(unsigned __int8 *)(a2 + 648) | *(unsigned __int8 *)(a2 + 650))
  {
    unsigned int v7 = 4;
    goto LABEL_19;
  }
  if (a1[4] && *(unsigned char *)(a2 + 651))
  {
    unsigned int v7 = 3;
    goto LABEL_19;
  }
  if (a1[9])
  {
    int v10 = *(_DWORD *)(a2 + 160);
    if (v10 != 92 && (v10 - 94) >= 0xFFFFFFFD)
    {
      unsigned int v7 = 10;
      goto LABEL_19;
    }
  }
  double result = 0.0;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(_OWORD *)(a3 + 96) = 0u;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_DWORD *)(a3 + 32) = -1;
  *(_DWORD *)(a3 + 40) = -1;
  *(_DWORD *)(a3 + 43) = -1;
  *(void *)(a3 + 47) = 0;
  *(void *)(a3 + 55) = 0;
  *(void *)(a3 + 63) = 0;
  *(_WORD *)(a3 + 71) = 0;
  *(void *)(a3 + 80) = 0;
  *(void *)(a3 + 88) = 0;
  *(void *)(a3 + 96) = 0;
  *(unsigned char *)(a3 + 104) = 0;
  return result;
}

void sub_68C738(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  sub_68C7AC(a1, a2);
  sub_68C8CC(a1, a2);
  if (*(unsigned char *)(a3 + 8))
  {
    uint64_t v6 = *(void *)a3;
    sub_68CA14(a1, a2, v6);
  }
}

void sub_68C7AC(unsigned char *a1, uint64_t a2)
{
  sub_68C428(a1, a2, (uint64_t)v5);
  if (v9 != 1)
  {
    if (v9 || v5[0] == -1) {
      goto LABEL_12;
    }
LABEL_11:
    sub_638E7C();
  }
  BOOL v2 = v5[1] == -1 && v5[0] == -1;
  if (!v2 || v6 != v7) {
    goto LABEL_11;
  }
LABEL_12:
  if ((v13 & 0x80000000) == 0)
  {
    if ((v11 & 0x80000000) == 0) {
      goto LABEL_14;
    }
LABEL_19:
    operator delete(v10);
    int v3 = v9;
    if (v9 != 1) {
      goto LABEL_15;
    }
LABEL_20:
    BOOL v4 = v6;
    if (!v6) {
      return;
    }
    unsigned int v7 = v6;
    goto LABEL_22;
  }
  operator delete(__p);
  if (v11 < 0) {
    goto LABEL_19;
  }
LABEL_14:
  int v3 = v9;
  if (v9 == 1) {
    goto LABEL_20;
  }
LABEL_15:
  if (!v3 && v8 < 0)
  {
    BOOL v4 = v6;
LABEL_22:
    operator delete(v4);
  }
}

void sub_68C8B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_4D9814((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_68C8CC(unsigned char *a1, uint64_t a2)
{
  sub_68C5B0(a1, a2, (uint64_t)v8);
  if (v12 == 1)
  {
    BOOL v3 = v8[1] == -1 && v8[0] == -1;
    if (v3 && v9 == v10) {
      goto LABEL_16;
    }
  }
  else if (v12 || v8[0] == -1)
  {
    goto LABEL_16;
  }
  uint64_t v4 = *(void *)(a2 + 1712);
  uint64_t v5 = *(void *)(a2 + 1720);
  while (v4 != v5)
  {
    if (!sub_68CB60(v4)) {
      sub_638E7C();
    }
    v4 += 1080;
  }
LABEL_16:
  if ((v16 & 0x80000000) == 0)
  {
    if ((v14 & 0x80000000) == 0) {
      goto LABEL_18;
    }
LABEL_23:
    operator delete(v13);
    int v6 = v12;
    if (v12 != 1) {
      goto LABEL_19;
    }
LABEL_24:
    unsigned int v7 = v9;
    if (!v9) {
      return;
    }
    int v10 = v9;
    goto LABEL_26;
  }
  operator delete(__p);
  if (v14 < 0) {
    goto LABEL_23;
  }
LABEL_18:
  int v6 = v12;
  if (v12 == 1) {
    goto LABEL_24;
  }
LABEL_19:
  if (!v6 && v11 < 0)
  {
    unsigned int v7 = v9;
LABEL_26:
    operator delete(v7);
  }
}

void sub_68CA00(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_4D9814((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_68CA14(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  sub_68C5B0(a1, a3, (uint64_t)v9);
  if (v13 == 1)
  {
    BOOL v4 = v9[1] == -1 && v9[0] == -1;
    if (v4 && v10 == v11) {
      goto LABEL_16;
    }
  }
  else if (v13 || v9[0] == -1)
  {
    goto LABEL_16;
  }
  uint64_t v5 = *(void *)(a2 + 1712);
  uint64_t v6 = *(void *)(a2 + 1720);
  while (v5 != v6)
  {
    if (sub_68CBB4(v5)) {
      sub_638E7C();
    }
    v5 += 1080;
  }
LABEL_16:
  if ((v17 & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      goto LABEL_18;
    }
LABEL_23:
    operator delete(v14);
    int v7 = v13;
    if (v13 != 1) {
      goto LABEL_19;
    }
LABEL_24:
    char v8 = v10;
    if (!v10) {
      return;
    }
    char v11 = v10;
    goto LABEL_26;
  }
  operator delete(__p);
  if (v15 < 0) {
    goto LABEL_23;
  }
LABEL_18:
  int v7 = v13;
  if (v13 == 1) {
    goto LABEL_24;
  }
LABEL_19:
  if (!v7 && v12 < 0)
  {
    char v8 = v10;
LABEL_26:
    operator delete(v8);
  }
}

void sub_68CB4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_4D9814((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_68CB60(uint64_t a1)
{
  unsigned int v1 = sub_638A18(a1);
  return v1 - 23 >= 0x3D && v1 <= 0x16 && ((1 << v1) & 0x1FC7FF) == 0;
}

BOOL sub_68CBB4(uint64_t a1)
{
  unsigned int v1 = sub_638A18(a1);
  return v1 - 13 >= 0x47 && v1 >= 0xB && v1 - 11 < 2;
}

double sub_68CBEC()
{
  byte_25A057F = 1;
  word_25A0568 = 65;
  byte_25A0597 = 1;
  word_25A0580 = 65;
  byte_25A05AF = 8;
  strcpy((char *)&qword_25A0598, "any_mode");
  byte_25A05C7 = 7;
  strcpy((char *)&dword_25A05B0, "cycling");
  byte_25A05DF = 7;
  strcpy((char *)&dword_25A05C8, "driving");
  byte_25A05F7 = 7;
  strcpy((char *)&dword_25A05E0, "walking");
  char v4 = 7;
  strcpy((char *)v3, "UNKNOWN");
  int v5 = 0;
  char v7 = 14;
  strcpy((char *)v6, "ROUTES_THROUGH");
  int v8 = 1;
  char v10 = 9;
  strcpy((char *)__p, "ROUTES_TO");
  int v11 = 3;
  char v13 = 11;
  strcpy((char *)v12, "ROUTES_FROM");
  int v14 = 2;
  xmmword_25A0628 = 0u;
  *(_OWORD *)&qword_25A0638 = 0u;
  dword_25A0648 = 1065353216;
  sub_3A6EF0((uint64_t)&xmmword_25A0628, (uint64_t)v3, (uint64_t)v3);
  sub_3A6EF0((uint64_t)&xmmword_25A0628, (uint64_t)v6, (uint64_t)v6);
  sub_3A6EF0((uint64_t)&xmmword_25A0628, (uint64_t)__p, (uint64_t)__p);
  sub_3A6EF0((uint64_t)&xmmword_25A0628, (uint64_t)v12, (uint64_t)v12);
  if (v13 < 0)
  {
    operator delete(v12[0]);
    if ((v10 & 0x80000000) == 0)
    {
LABEL_3:
      if ((v7 & 0x80000000) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      operator delete(v6[0]);
      if ((v4 & 0x80000000) == 0) {
        goto LABEL_5;
      }
LABEL_9:
      operator delete(v3[0]);
      goto LABEL_5;
    }
  }
  else if ((v10 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p[0]);
  if (v7 < 0) {
    goto LABEL_8;
  }
LABEL_4:
  if (v4 < 0) {
    goto LABEL_9;
  }
LABEL_5:
  qword_25A0600 = 0;
  qword_25A0608 = 0;
  qword_25A05F8 = 0;
  uint64_t v0 = operator new(9uLL);
  *(void *)uint64_t v0 = 0x4020C000103050DLL;
  v0[8] = 6;
  qword_25A05F8 = (uint64_t)v0;
  qword_25A0600 = (uint64_t)(v0 + 9);
  qword_25A0608 = (uint64_t)(v0 + 9);
  qword_25A0610 = 0;
  qword_25A0618 = 0;
  unk_25A0620 = 0;
  unsigned int v1 = (char *)operator new(9uLL);
  qword_25A0618 = (uint64_t)(v1 + 9);
  unk_25A0620 = v1 + 9;
  double result = 1.10224369e-279;
  *(void *)unsigned int v1 = 0x604020C00010305;
  v1[8] = 13;
  qword_25A0610 = (uint64_t)v1;
  return result;
}

void sub_68CEA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  if (qword_25A0638) {
    sub_20AA8D4((void **)qword_25A0638);
  }
  unsigned int v37 = (void *)xmmword_25A0628;
  *(void *)&xmmword_25A0628 = 0;
  if (v37)
  {
    operator delete(v37);
    if ((a36 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a29 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_11;
    }
  }
  else if ((a36 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(__p);
  if ((a29 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a22 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_12;
  }
LABEL_11:
  operator delete(a24);
  if ((a22 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a15 & 0x80000000) == 0) {
LABEL_14:
    }
      _Unwind_Resume(exception_object);
LABEL_13:
    operator delete(a10);
    _Unwind_Resume(exception_object);
  }
LABEL_12:
  operator delete(a17);
  if ((a15 & 0x80000000) == 0) {
    goto LABEL_14;
  }
  goto LABEL_13;
}

void sub_68CF48(uint64_t *a1, void *a2)
{
  *a1 = sub_3750CC(a2);
  sub_3CCE64(a1 + 1, a2);
  operator new();
}

void sub_68D0A0(_Unwind_Exception *a1)
{
  sub_68D148(v2);
  sub_5139D0(v3);
  char v7 = *v5;
  if (*v5)
  {
    v1[19] = v7;
    operator delete(v7);
    int v8 = *v4;
    if (!*v4)
    {
LABEL_3:
      uint64_t v9 = v1[3];
      v1[3] = 0;
      if (!v9) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else
  {
    int v8 = *v4;
    if (!*v4) {
      goto LABEL_3;
    }
  }
  v1[6] = v8;
  operator delete(v8);
  uint64_t v10 = v1[3];
  v1[3] = 0;
  if (!v10) {
LABEL_4:
  }
    _Unwind_Resume(a1);
LABEL_7:
  operator delete();
}

void *sub_68D148(void *a1)
{
  BOOL v2 = (void *)a1[231];
  if (v2)
  {
    a1[232] = v2;
    operator delete(v2);
  }
  BOOL v3 = (void *)a1[228];
  if (v3)
  {
    a1[229] = v3;
    operator delete(v3);
  }
  char v4 = (void *)a1[224];
  if (v4)
  {
    a1[225] = v4;
    operator delete(v4);
  }
  int v5 = (void *)a1[221];
  if (v5)
  {
    a1[222] = v5;
    operator delete(v5);
  }
  sub_328138((uint64_t)(a1 + 125));
  return a1;
}

void *sub_68D1B8(void *a1)
{
  BOOL v2 = (void *)a1[612];
  if (v2)
  {
    a1[613] = v2;
    operator delete(v2);
  }
  BOOL v3 = (void *)a1[609];
  if (v3)
  {
    a1[610] = v3;
    operator delete(v3);
  }
  char v4 = (void *)a1[605];
  if (v4)
  {
    a1[606] = v4;
    operator delete(v4);
  }
  int v5 = (void *)a1[602];
  if (v5)
  {
    a1[603] = v5;
    operator delete(v5);
  }
  sub_328138((uint64_t)(a1 + 506));
  uint64_t v6 = (void *)a1[251];
  if (v6)
  {
    a1[252] = v6;
    operator delete(v6);
  }
  char v7 = (void *)a1[248];
  if (v7)
  {
    a1[249] = v7;
    operator delete(v7);
  }
  int v8 = (void *)a1[244];
  if (v8)
  {
    a1[245] = v8;
    operator delete(v8);
  }
  uint64_t v9 = (void *)a1[241];
  if (v9)
  {
    a1[242] = v9;
    operator delete(v9);
  }
  sub_328138((uint64_t)(a1 + 145));
  uint64_t v10 = (void *)a1[18];
  if (v10)
  {
    a1[19] = v10;
    operator delete(v10);
  }
  int v11 = (void *)a1[5];
  if (v11)
  {
    a1[6] = v11;
    operator delete(v11);
  }
  uint64_t v12 = a1[3];
  a1[3] = 0;
  if (v12) {
    operator delete();
  }
  return a1;
}

void sub_68D2B4(uint64_t a1, uint64_t a2, int a3)
{
  if (*(void *)(a2 + 9952) == *(void *)(a2 + 9960)) {
    sub_68D2CC(a1, a2, a3);
  }
}

void sub_68D2CC(uint64_t a1, uint64_t a2, int a3)
{
  if (sub_46C760((void *)a2) != 1)
  {
    unint64_t v5 = 0;
    unint64_t v43 = (_OWORD *)(a1 + 64);
    do
    {
      sub_690AA4(a1, (void *)a2, v5, (uint64_t)v55);
      v67[16] = sub_53EABC(a1, (uint64_t **)v55);
      sub_6EBC1C(a1 + 5944, (void *)a2, v5, (uint64_t)v55);
      sub_690E20(a1, (uint64_t)v43, (uint64_t)v55);
      int64_t v6 = ((char *)v55[1] - (char *)v55[0]) >> 3;
      int64_t v7 = v6 - 1;
      if (v6 == 1)
      {
        sub_E1B4((uint64_t)v50);
        unsigned int v37 = sub_188FC78(v51, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MapsOfflineServices/submodules/routing/routing/src/guidance/ManeuverGenerator.cpp", 119);
        sub_188FC78(v37, (uint64_t)":", 1);
        int8x8_t v38 = (void *)std::ostream::operator<<();
        unint64_t v39 = sub_188FC78(v38, (uint64_t)":", 1);
        sub_188FC78(v39, (uint64_t)"Invalid maneuver with segment_delta of 0.", 41);
        exception = __cxa_allocate_exception(0x40uLL);
        std::stringbuf::str();
        uint64_t v41 = (void *)sub_2F404((uint64_t)exception, &v44);
      }
      uint64_t v8 = sub_46C8EC((void *)a2, v5);
      uint64_t v9 = *(void *)a1;
      uint64_t v10 = *(void *)(v8 + 32);
      int v11 = (int *)sub_2D5D58(*(void *)a1, v10 & 0xFFFFFFFFFFFFLL);
      if (*(unsigned char *)(v9 + 7772))
      {
        uint64_t v12 = sub_2DB8E0(v9 + 3896, v10, 0);
        char v13 = &v12[-*(int *)v12];
        if (*(unsigned __int16 *)v13 < 5u)
        {
          uint64_t v14 = 0;
        }
        else
        {
          uint64_t v14 = *((unsigned __int16 *)v13 + 2);
          if (v14) {
            v14 += (uint64_t)&v12[*(unsigned int *)&v12[v14]];
          }
        }
        char v15 = (int *)(v14 + 4 * WORD2(v10) + 4 + *(unsigned int *)(v14 + 4 * WORD2(v10) + 4));
      }
      else
      {
        char v15 = 0;
      }
      uint64_t v16 = sub_2E5C38(v9, v10 & 0xFFFFFFFFFFFFLL, 1);
      v50[0] = v11;
      v50[1] = v15;
      v51[0] = v16;
      v51[1] = v17;
      int v52 = v10;
      __int16 v53 = WORD2(v10);
      unint64_t v18 = v7 + v5;
      BOOL v54 = (v10 & 0xFF000000000000) != 0;
      uint64_t v19 = sub_46C8EC((void *)a2, v7 + v5);
      uint64_t v20 = *(void *)a1;
      uint64_t v21 = *(void *)(v19 + 32);
      uint64_t v22 = sub_2D5D58(*(void *)a1, v21 & 0xFFFFFFFFFFFFLL);
      if (*(unsigned char *)(v20 + 7772))
      {
        uint64_t v23 = sub_2DB8E0(v20 + 3896, v21, 0);
        uint64_t v24 = &v23[-*(int *)v23];
        if (*(unsigned __int16 *)v24 < 5u)
        {
          uint64_t v25 = 0;
        }
        else
        {
          uint64_t v25 = *((unsigned __int16 *)v24 + 2);
          if (v25) {
            v25 += (uint64_t)&v23[*(unsigned int *)&v23[v25]];
          }
        }
        uint64_t v26 = v25 + 4 * WORD2(v21) + 4 + *(unsigned int *)(v25 + 4 * WORD2(v21) + 4);
      }
      else
      {
        uint64_t v26 = 0;
      }
      uint64_t v27 = sub_2E5C38(v20, v21 & 0xFFFFFFFFFFFFLL, 1);
      *(void *)&long long v44 = v22;
      *((void *)&v44 + 1) = v26;
      uint64_t v45 = v27;
      uint64_t v46 = v28;
      int v47 = v21;
      __int16 v48 = WORD2(v21);
      BOOL v49 = (v21 & 0xFF000000000000) != 0;
      *((void *)&v57 + 1) = v5;
      if (v57 || v67[2] || v67[21] || sub_69115C(a1, v50, (int **)&v44, a3))
      {
        unint64_t v29 = *(void *)(a2 + 9960);
        if (v29 >= *(void *)(a2 + 9968))
        {
          unint64_t v36 = sub_6CA248((void **)(a2 + 9952), (uint64_t)v55);
        }
        else
        {
          *(void *)(v29 + 8) = 0;
          *(void *)(v29 + 16) = 0;
          *(void *)unint64_t v29 = 0;
          *(_OWORD *)unint64_t v29 = *(_OWORD *)v55;
          *(void *)(v29 + 16) = v56;
          v55[0] = 0;
          v55[1] = 0;
          uint64_t v56 = 0;
          *(_OWORD *)(v29 + 24) = v57;
          *(void *)(v29 + 48) = 0;
          *(void *)(v29 + 56) = 0;
          *(void *)(v29 + 40) = 0;
          *(_OWORD *)(v29 + 40) = __p;
          *(void *)(v29 + 56) = v59;
          long long __p = 0uLL;
          uint64_t v59 = 0;
          *(_DWORD *)(v29 + 64) = v60;
          long long v30 = v61;
          long long v31 = v62;
          long long v32 = v63;
          *(_OWORD *)(v29 + 120) = v64;
          *(_OWORD *)(v29 + 104) = v32;
          *(_OWORD *)(v29 + 88) = v31;
          *(_OWORD *)(v29 + 72) = v30;
          long long v33 = v65;
          long long v34 = v66;
          long long v35 = *(_OWORD *)v67;
          *(void *)(v29 + 183) = *(void *)&v67[15];
          *(_OWORD *)(v29 + 168) = v35;
          *(_OWORD *)(v29 + 152) = v34;
          *(_OWORD *)(v29 + 136) = v33;
          unint64_t v36 = (char *)(v29 + 192);
        }
        *(void *)(a2 + 9960) = v36;
      }
      *(_DWORD *)(a1 + 96) = 0;
      *unint64_t v43 = 0u;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_WORD *)(a1 + 100) = -1;
      *(unsigned char *)(a1 + 102) = 0;
      *(_OWORD *)(a1 + 104) = 0u;
      *(_OWORD *)(a1 + 120) = 0u;
      *(_DWORD *)(a1 + 136) = 0;
      *(_WORD *)(a1 + 140) = -1;
      *(unsigned char *)(a1 + 142) = 0;
      *(void *)(a1 + 152) = *(void *)(a1 + 144);
      *(void *)(a1 + 168) = -1;
      *(_DWORD *)(a1 + 176) = 0;
      if ((void)__p)
      {
        *((void *)&__p + 1) = __p;
        operator delete((void *)__p);
      }
      if (v55[0])
      {
        v55[1] = v55[0];
        operator delete(v55[0]);
      }
      unint64_t v5 = v18;
    }
    while (v18 < sub_46C760((void *)a2) - 1);
  }
  sub_6912D4(a1, (void *)a2);
}

void sub_68D76C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,char a60)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  sub_1C02990((uint64_t)&a25);
  sub_592058((uint64_t)&a60);
  _Unwind_Resume(a1);
}

void sub_68D7B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
}

void sub_68D7C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
}

void sub_68D7D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
}

void sub_68D7EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
}

void sub_68D800(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t **a4@<X8>)
{
  char v4 = a3;
  uint64_t v8 = *(unsigned __int8 *)(a1 + 6000);
  uint64_t v84 = *(void *)(a2 + 32);
  unsigned __int8 v85 = v8;
  unsigned __int8 v86 = a3;
  unsigned __int8 v87 = 3;
  unint64_t v9 = (((unint64_t)v84 << 6)
      + WORD2(v84)
      + ((unint64_t)v84 >> 2)
      + 2654435769u) ^ v84;
  unint64_t v10 = ((v8 | (v9 << 6)) + (v9 >> 2) + 2654435769u) ^ v9;
  if (a3) {
    uint64_t v11 = 2654435770;
  }
  else {
    uint64_t v11 = 2654435769;
  }
  unint64_t v12 = (v11 + (v10 << 6) + (v10 >> 2)) ^ v10;
  sub_6C93AC((uint64_t *)(*(void *)(*(void *)(a1 + 32) + 16)+ 272 * ((((v12 << 6) + (v12 >> 2) + 2654435772u) ^ v12) % **(void **)(a1 + 32))), (unsigned int *)&v84, (uint64_t)&v81);
  if (v83)
  {
    char v13 = (uint64_t *)v82;
    *a4 = v81;
    a4[1] = v13;
    if (v13) {
      atomic_fetch_add_explicit(v13 + 1, 1uLL, memory_order_relaxed);
    }
    goto LABEL_89;
  }
  uint64_t v14 = *(void *)a1;
  uint64_t v15 = *(void *)(a2 + 32);
  uint64_t v16 = sub_2D5D58(*(void *)a1, v15 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v14 + 7772))
  {
    uint64_t v17 = sub_2DB8E0(v14 + 3896, v15, 0);
    unint64_t v18 = &v17[-*(int *)v17];
    if (*(unsigned __int16 *)v18 < 5u)
    {
      uint64_t v19 = 0;
    }
    else
    {
      uint64_t v19 = *((unsigned __int16 *)v18 + 2);
      if (v19) {
        v19 += (uint64_t)&v17[*(unsigned int *)&v17[v19]];
      }
    }
    uint64_t v20 = v19 + 4 * WORD2(v15) + 4 + *(unsigned int *)(v19 + 4 * WORD2(v15) + 4);
  }
  else
  {
    uint64_t v20 = 0;
  }
  *(void *)&long long v77 = v16;
  *((void *)&v77 + 1) = v20;
  uint64_t v78 = sub_2E5C38(v14, v15 & 0xFFFFFFFFFFFFLL, 1);
  uint64_t v79 = v21;
  LODWORD(v80) = v15;
  WORD2(v80) = WORD2(v15);
  BYTE6(v80) = (v15 & 0xFF000000000000) != 0;
  char v74 = 0;
  unsigned int v75 = 0;
  uint64_t v76 = 0;
  if ((v4 & 1) != 0 || sub_6618C0(a1 + 3048, (int **)a2))
  {
    sub_2E44A4(*(void *)a1, (uint64_t)&v77, &v74);
    sub_6D7A20(a1 + 1160, (uint64_t)&v77, (uint64_t *)&v74);
  }
  else
  {
    sub_68E1D8(a1, &v77, (char **)&v74, 0);
  }
  long long __p = 0;
  char v72 = 0;
  unint64_t v73 = 0;
  sub_68F4F8(*(void *)a1, *(unsigned int *)(a2 + 32) | ((unint64_t)*(unsigned __int16 *)(a2 + 36) << 32), &v69);
  uint64_t v22 = (unint64_t *)v69;
  uint64_t v23 = v70;
  if (v69 != v70)
  {
    uint64_t v24 = 0;
    while (1)
    {
      unint64_t v25 = *v22;
      uint64_t v26 = (int *)sub_2DBC9C(*(void *)a1, *v22);
      uint64_t v27 = (unsigned __int16 *)((char *)v26 - *v26);
      if (*v27 >= 0xFu
        && v27[7]
        && (*((unsigned char *)v26 + v27[7]) & 4) != 0
        && (!v27[2] || *((unsigned __int8 *)v26 + v27[2]) - 1 >= 5)
        && !v27[4])
      {
        break;
      }
      uint64_t v28 = v24;
LABEL_27:
      ++v22;
      uint64_t v24 = v28;
      if (v22 == v23) {
        goto LABEL_50;
      }
    }
    sub_68F5DC(*(void *)a1, v25, (unint64_t *)&__src);
    unint64_t v29 = v89;
    if (v24 < v73)
    {
      *(void *)uint64_t v24 = *((void *)v89 - 1);
      uint64_t v28 = v24 + 8;
      goto LABEL_47;
    }
    long long v30 = (char *)__p;
    uint64_t v31 = (v24 - (unsigned char *)__p) >> 3;
    unint64_t v32 = v31 + 1;
    if ((unint64_t)(v31 + 1) >> 61) {
      sub_2E00();
    }
    uint64_t v33 = v73 - (unsigned char *)__p;
    if ((v73 - (unsigned char *)__p) >> 2 > v32) {
      unint64_t v32 = v33 >> 2;
    }
    if ((unint64_t)v33 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v34 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v34 = v32;
    }
    if (v34)
    {
      if (v34 >> 61) {
        sub_188D718();
      }
      long long v35 = (char *)operator new(8 * v34);
      unint64_t v36 = &v35[8 * v31];
      *(void *)unint64_t v36 = *((void *)v29 - 1);
      uint64_t v28 = v36 + 8;
      if (v24 == v30)
      {
LABEL_45:
        long long __p = v36;
        char v72 = v28;
        unint64_t v73 = &v35[8 * v34];
        if (!v24) {
          goto LABEL_47;
        }
        goto LABEL_46;
      }
    }
    else
    {
      long long v35 = 0;
      unint64_t v36 = (char *)(8 * v31);
      *(void *)(8 * v31) = *((void *)v89 - 1);
      uint64_t v28 = (char *)(8 * v31 + 8);
      if (v24 == v30) {
        goto LABEL_45;
      }
    }
    do
    {
      int v37 = *((_DWORD *)v24 - 2);
      v24 -= 8;
      int v38 = *(_DWORD *)(v24 + 3);
      *((_DWORD *)v36 - 2) = v37;
      v36 -= 8;
      *(_DWORD *)(v36 + 3) = v38;
    }
    while (v24 != v30);
    uint64_t v24 = (char *)__p;
    long long __p = v36;
    char v72 = v28;
    unint64_t v73 = &v35[8 * v34];
    if (!v24)
    {
LABEL_47:
      char v72 = v28;
      if (__src)
      {
        size_t v89 = __src;
        operator delete(__src);
      }
      goto LABEL_27;
    }
LABEL_46:
    operator delete(v24);
    goto LABEL_47;
  }
  uint64_t v28 = 0;
LABEL_50:
  unint64_t v39 = operator new(0x30uLL);
  v39[1] = 0;
  v39[2] = 0;
  *unint64_t v39 = off_243A340;
  v39[3] = 0;
  uint8x8_t v40 = (void **)(v39 + 3);
  v39[4] = 0;
  v39[5] = 0;
  *a4 = v39 + 3;
  a4[1] = v39;
  unint64_t v42 = v74;
  uint64_t v41 = v75;
  unint64_t v43 = 0xCCCCCCCCCCCCCCCDLL * ((v75 - (unsigned char *)v74) >> 3);
  if (v75 != v74)
  {
    sub_6C973C(v40, 0xCCCCCCCCCCCCCCCDLL * ((v75 - (unsigned char *)v74) >> 3));
    unint64_t v42 = v74;
    uint64_t v41 = v75;
    unint64_t v43 = 0xCCCCCCCCCCCCCCCDLL * ((v75 - (unsigned char *)v74) >> 3);
  }
  if (v41 != v42)
  {
    for (unint64_t i = 0; i != v43; ++i)
    {
      uint64_t v46 = (int **)sub_66F838(&v74, i);
      uint64_t v47 = sub_68F6BC(*a4, i);
      __src = v80;
      char v68 = v46[4];
      if ((sub_68F8EC(a1, (unsigned int *)&__src, &v68, v47) & 1) == 0
        && (sub_69A840(a1, (int **)&v77, (uint64_t *)&v74, i, 1, v47) & 1) == 0
        && (sub_69C61C(a1, (uint64_t)&v77, (uint64_t *)&v74, i, v47) & 1) == 0)
      {
        __int16 v48 = v46[4];
        __src = v80;
        size_t v89 = v48;
        sub_2D8554((void *)v47, (char *)&__src, v90, 2uLL);
        *(_DWORD *)(v47 + 24) = sub_68FBBC(a1, (int **)&v77, (uint64_t *)&v74, i, 1, 1, 0);
      }
      BOOL v49 = (char *)*v46;
      char v50 = (unsigned __int16 *)((char *)*v46 - **v46);
      unsigned int v51 = *v50;
      if (*((unsigned char *)v46 + 38))
      {
        if (v51 < 0xB) {
          goto LABEL_73;
        }
        unsigned int v52 = v50[5];
        if (v50[5])
        {
          int v53 = 2;
LABEL_67:
          LOBYTE(v52) = (*(_DWORD *)&v49[v52] & v53) != 0;
        }
      }
      else
      {
        if (v51 < 0xB)
        {
LABEL_73:
          *(unsigned char *)(v47 + 185) = 0;
          *(unsigned char *)(v47 + 186) = 0;
          uint64_t v56 = (char *)__p;
          uint64_t v45 = v28;
          if (__p != v28) {
            goto LABEL_76;
          }
          goto LABEL_55;
        }
        unsigned int v52 = v50[5];
        if (v50[5])
        {
          int v53 = 1;
          goto LABEL_67;
        }
      }
      *(unsigned char *)(v47 + 185) = v52;
      if (v51 >= 0x2F && (uint64_t v54 = v50[23]) != 0 && (v55 = v49[v54], v55 < 0x30))
      {
        *(unsigned char *)(v47 + 186) = (0xE2E040048000uLL >> v55) & 1;
        uint64_t v56 = (char *)__p;
        uint64_t v45 = v28;
        if (__p != v28) {
          goto LABEL_76;
        }
      }
      else
      {
        *(unsigned char *)(v47 + 186) = 0;
        uint64_t v56 = (char *)__p;
        uint64_t v45 = v28;
        if (__p != v28)
        {
LABEL_76:
          unint64_t v57 = (unint64_t)v46[4];
          uint64_t v45 = v56;
          while ((*(void *)v45 & 0xFFFFFFFFFFFFLL) != (v57 & 0xFFFFFFFFFFFFLL)
               || (HIWORD(v57) & 1) == ((*(void *)v45 & 0xFF000000000000) == 0))
          {
            v45 += 8;
            if (v45 == v28)
            {
              uint64_t v45 = v28;
              break;
            }
          }
        }
      }
LABEL_55:
      *(unsigned char *)(v47 + 187) = v45 != v28;
    }
  }
  char v58 = *(void **)(a1 + 32);
  uint64_t v59 = (uint64_t *)(*a4)[1];
  int v60 = (uint64_t *)**a4;
  for (uint64_t j = (*a4)[2] - (void)v60; v60 != v59; v60 += 24)
  {
    uint64_t v62 = v60[2];
    uint64_t v63 = *v60;
    uint64_t j = j + v62 - v63 + sub_6E6650(v60 + 5);
  }
  unint64_t v64 = (WORD2(v84)
       + 2654435769
       + ((unint64_t)v84 << 6)
       + ((unint64_t)v84 >> 2)) ^ v84;
  unint64_t v65 = (v85 + 2654435769 + (v64 << 6) + (v64 >> 2)) ^ v64;
  unint64_t v66 = (v86 + 2654435769 + (v65 << 6) + (v65 >> 2)) ^ v65;
  sub_6C9A3C(v58[2] + 272 * (((v87 + 2654435769 + (v66 << 6) + (v66 >> 2)) ^ v66) % *v58), (unsigned int *)&v84, a4, j + 24);
  if (v69)
  {
    char v70 = (unint64_t *)v69;
    operator delete(v69);
  }
  if (__p) {
    operator delete(__p);
  }
  if (v74)
  {
    unsigned int v75 = v74;
    operator delete(v74);
  }
LABEL_89:
  long long v67 = v82;
  if (v82)
  {
    if (!atomic_fetch_add(&v82->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
      std::__shared_weak_count::__release_weak(v67);
    }
  }
}

void sub_68DFD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
  uint64_t v27 = *(void **)(v25 - 120);
  if (v27)
  {
    *(void *)(v25 - 112) = v27;
    operator delete(v27);
    uint64_t v28 = __p;
    if (!__p)
    {
LABEL_3:
      unint64_t v29 = a14;
      if (!a14) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v28 = __p;
    if (!__p) {
      goto LABEL_3;
    }
  }
  operator delete(v28);
  unint64_t v29 = a14;
  if (!a14)
  {
LABEL_4:
    long long v30 = a17;
    if (!a17) {
      goto LABEL_5;
    }
    goto LABEL_9;
  }
LABEL_8:
  operator delete(v29);
  long long v30 = a17;
  if (!a17)
  {
LABEL_5:
    sub_14A84((uint64_t)&a25);
    _Unwind_Resume(a1);
  }
LABEL_9:
  operator delete(v30);
  sub_14A84((uint64_t)&a25);
  _Unwind_Resume(a1);
}

uint64_t sub_68E0EC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = sub_2D5D58(*a1, v5 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v4 + 7772))
  {
    int64_t v7 = sub_2DB8E0(v4 + 3896, v5, 0);
    uint64_t v8 = &v7[-*(int *)v7];
    if (*(unsigned __int16 *)v8 < 5u)
    {
      uint64_t v9 = 0;
    }
    else
    {
      uint64_t v9 = *((unsigned __int16 *)v8 + 2);
      if (v9) {
        v9 += (uint64_t)&v7[*(unsigned int *)&v7[v9]];
      }
    }
    uint64_t v10 = v9 + 4 * WORD2(v5) + 4 + *(unsigned int *)(v9 + 4 * WORD2(v5) + 4);
  }
  else
  {
    uint64_t v10 = 0;
  }
  uint64_t result = sub_2E5C38(v4, v5 & 0xFFFFFFFFFFFFLL, 1);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v10;
  *(void *)(a3 + 16) = result;
  *(void *)(a3 + 24) = v12;
  *(_DWORD *)(a3 + 32) = v5;
  *(_WORD *)(a3 + 36) = WORD2(v5);
  *(unsigned char *)(a3 + 38) = (v5 & 0xFF000000000000) != 0;
  return result;
}

void sub_68E1D8(uint64_t a1, long long *a2, char **a3, char a4)
{
  a3[1] = *a3;
  uint64_t v212 = 0;
  uint64_t v213 = 0;
  int v214 = 0;
  *(void *)&long long v215 = 0;
  sub_69070C((char **)&v212, a2, &v215);
  uint64_t v5 = v212;
  if (v213 - (unsigned char *)v212 >= 49)
  {
    unint64_t v6 = ((v213 - (unsigned char *)v212) / 0x30uLL - 2) >> 1;
    uint64_t v7 = *((void *)v213 - 1);
    if (*((void *)v212 + 6 * v6 + 5) > v7)
    {
      uint64_t v8 = v213 - 48;
      long long v218 = *((_OWORD *)v213 - 3);
      long long v219 = *((_OWORD *)v213 - 2);
      uint64_t v220 = *((void *)v213 - 2);
      do
      {
        uint64_t v9 = v8;
        uint64_t v8 = (char *)&v5[6 * v6];
        long long v10 = *(_OWORD *)v8;
        long long v11 = *((_OWORD *)v8 + 1);
        *((void *)v9 + 4) = *((void *)v8 + 4);
        *(_OWORD *)uint64_t v9 = v10;
        *((_OWORD *)v9 + 1) = v11;
        *((void *)v9 + 5) = *((void *)v8 + 5);
        if (!v6) {
          break;
        }
        unint64_t v6 = (v6 - 1) >> 1;
      }
      while (v5[6 * v6 + 5] > v7);
      *(_OWORD *)uint64_t v8 = v218;
      *((_OWORD *)v8 + 1) = v219;
      *((void *)v8 + 4) = v220;
      *((void *)v8 + 5) = v7;
    }
  }
  size_t v209 = 0;
  unint64_t v210 = 0;
  uint64_t v211 = 0;
  *(void *)&long long v218 = *((unsigned int *)a2 + 8) | ((unint64_t)*((unsigned __int16 *)a2 + 18) << 32);
  sub_29603C(&v209, &v218);
  int v194 = a3;
  int v206 = 0;
  uint64_t v207 = 0;
  uint64_t v208 = 0;
  long long __p = 0;
  uint64_t v204 = 0;
  uint64_t v205 = 0;
  uint64_t v12 = v212;
  char v13 = v213;
  if (v212 == v213)
  {
    v151 = 0;
    uint64_t v177 = 0;
    long long v215 = 0uLL;
    *(void *)&long long v216 = 0;
    goto LABEL_227;
  }
  uint64_t v14 = 0;
  uint64_t v15 = a1 + 1160;
  uint64_t v195 = a1 + 8;
  while (2)
  {
    long long v16 = *v12;
    long long v17 = v12[1];
    uint64_t v198 = *((void *)v12 + 5);
    uint64_t v202 = *((void *)v12 + 4);
    v201[0] = v16;
    v201[1] = v17;
    if (v13 - (char *)v12 >= 49)
    {
      uint64_t v18 = 0;
      int64_t v19 = 0xAAAAAAAAAAAAAAABLL * ((v13 - (char *)v12) >> 4);
      long long v215 = *v12;
      long long v216 = v12[1];
      uint64_t v217 = *((void *)v12 + 4);
      uint64_t v20 = v12;
      do
      {
        uint64_t v23 = v18 + 1;
        uint64_t v24 = (char *)&v20[3 * v18 + 3];
        uint64_t v25 = (2 * v18) | 1;
        uint64_t v26 = 2 * v18 + 2;
        if (v26 < v19)
        {
          uint64_t v27 = *((void *)&v20[3 * v23 + 2] + 1);
          uint64_t v28 = *((void *)v24 + 11);
          v24 += 48 * (v27 > v28);
          if (v27 > v28) {
            uint64_t v25 = v26;
          }
        }
        long long v21 = *(_OWORD *)v24;
        long long v22 = *((_OWORD *)v24 + 1);
        *((void *)v20 + 4) = *((void *)v24 + 4);
        *uint64_t v20 = v21;
        v20[1] = v22;
        *((void *)v20 + 5) = *((void *)v24 + 5);
        uint64_t v20 = v24;
        uint64_t v18 = v25;
      }
      while (v25 <= (uint64_t)((unint64_t)(v19 - 2) >> 1));
      unint64_t v29 = (long long *)(v13 - 48);
      if (v24 == v13 - 48)
      {
        long long v40 = v216;
        uint64_t v41 = v217;
        *(_OWORD *)uint64_t v24 = v215;
        *((_OWORD *)v24 + 1) = v40;
        *((void *)v24 + 4) = v41;
        *((void *)v24 + 5) = v198;
      }
      else
      {
        long long v30 = *v29;
        long long v31 = *((_OWORD *)v13 - 2);
        *((void *)v24 + 4) = *((void *)v13 - 2);
        *(_OWORD *)uint64_t v24 = v30;
        *((_OWORD *)v24 + 1) = v31;
        *((void *)v24 + 5) = *((void *)v13 - 1);
        *unint64_t v29 = v215;
        *((_OWORD *)v13 - 2) = v216;
        *((void *)v13 - 2) = v217;
        *((void *)v13 - 1) = v198;
        uint64_t v32 = v24 - (char *)v12 + 48;
        if (v32 >= 49)
        {
          unint64_t v33 = (v32 / 0x30uLL - 2) >> 1;
          uint64_t v34 = *((void *)v24 + 5);
          if (*((void *)&v12[3 * v33 + 2] + 1) > v34)
          {
            long long v35 = *(_OWORD *)v24;
            long long v36 = *((_OWORD *)v24 + 1);
            uint64_t v220 = *((void *)v24 + 4);
            long long v218 = v35;
            long long v219 = v36;
            do
            {
              int v37 = v24;
              uint64_t v24 = (char *)&v12[3 * v33];
              long long v38 = *(_OWORD *)v24;
              long long v39 = *((_OWORD *)v24 + 1);
              *((void *)v37 + 4) = *((void *)v24 + 4);
              *(_OWORD *)int v37 = v38;
              *((_OWORD *)v37 + 1) = v39;
              *((void *)v37 + 5) = *((void *)v24 + 5);
              if (!v33) {
                break;
              }
              unint64_t v33 = (v33 - 1) >> 1;
            }
            while (*((void *)&v12[3 * v33 + 2] + 1) > v34);
            *(_OWORD *)uint64_t v24 = v218;
            *((_OWORD *)v24 + 1) = v219;
            *((void *)v24 + 4) = v220;
            *((void *)v24 + 5) = v34;
          }
        }
      }
      char v13 = v213;
    }
    uint64_t v213 = v13 - 48;
    sub_2E44A4(*(void *)a1, (uint64_t)v201, &v206);
    unint64_t v43 = (int **)v206;
    unint64_t v42 = v207;
    unsigned __int8 v200 = v207;
    while (v43 != v42)
    {
      uint64_t v44 = *((unsigned __int16 *)v43 + 18);
      uint64_t v45 = *((unsigned int *)v43 + 8);
      uint64_t v47 = (char *)v209;
      uint64_t v46 = v210;
      __int16 v48 = (char *)v209;
      if (v209 != v210)
      {
        __int16 v48 = (char *)v209;
        while (*(void *)v48 != __PAIR64__(v44, v45))
        {
          v48 += 8;
          if (v48 == v210) {
            goto LABEL_35;
          }
        }
      }
      if (v48 != v210) {
        goto LABEL_28;
      }
LABEL_35:
      uint64_t v49 = v45 | (v44 << 32);
      if (v210 < v211)
      {
        *(void *)unint64_t v210 = v49;
        uint64_t v50 = (uint64_t)(v46 + 8);
        goto LABEL_58;
      }
      uint64_t v51 = v14;
      uint64_t v52 = (v210 - (unsigned char *)v209) >> 3;
      unint64_t v53 = v52 + 1;
      if ((unint64_t)(v52 + 1) >> 61) {
        sub_2E00();
      }
      uint64_t v54 = v211 - (unsigned char *)v209;
      if ((v211 - (unsigned char *)v209) >> 2 > v53) {
        unint64_t v53 = v54 >> 2;
      }
      if ((unint64_t)v54 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v55 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v55 = v53;
      }
      if (v55)
      {
        if (v55 >> 61) {
          sub_188D718();
        }
        uint64_t v56 = operator new(8 * v55);
        unint64_t v57 = (uint64_t *)&v56[8 * v52];
        uint64_t *v57 = v49;
        uint64_t v50 = (uint64_t)(v57 + 1);
        if (v47 != v46)
        {
LABEL_46:
          unint64_t v58 = v46 - 8 - v47;
          if (v58 < 0x58)
          {
            uint64_t v15 = a1 + 1160;
            goto LABEL_55;
          }
          uint64_t v15 = a1 + 1160;
          if ((unint64_t)(v47 - v56) < 0x20) {
            goto LABEL_263;
          }
          uint64_t v59 = (v58 >> 3) + 1;
          uint64_t v60 = 8 * (v59 & 0x3FFFFFFFFFFFFFFCLL);
          long long v61 = &v46[-v60];
          unint64_t v57 = (uint64_t *)((char *)v57 - v60);
          uint64_t v62 = &v56[8 * v52 - 16];
          uint64_t v63 = v46 - 16;
          uint64_t v64 = v59 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            long long v65 = *(_OWORD *)v63;
            *(v62 - 1) = *((_OWORD *)v63 - 1);
            _OWORD *v62 = v65;
            v62 -= 2;
            v63 -= 32;
            v64 -= 4;
          }
          while (v64);
          uint64_t v46 = v61;
          if (v59 != (v59 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_263:
            do
            {
LABEL_55:
              uint64_t v66 = *((void *)v46 - 1);
              v46 -= 8;
              *--unint64_t v57 = v66;
            }
            while (v46 != v47);
          }
          uint64_t v47 = (char *)v209;
          size_t v209 = v57;
          unint64_t v210 = (char *)v50;
          uint64_t v211 = &v56[8 * v55];
          uint64_t v14 = v51;
          if (!v47) {
            goto LABEL_58;
          }
LABEL_57:
          operator delete(v47);
          goto LABEL_58;
        }
      }
      else
      {
        uint64_t v56 = 0;
        unint64_t v57 = (uint64_t *)(8 * v52);
        *(void *)(8 * v52) = v49;
        uint64_t v50 = 8 * v52 + 8;
        if (v47 != v46) {
          goto LABEL_46;
        }
      }
      uint64_t v15 = a1 + 1160;
      size_t v209 = v57;
      unint64_t v210 = (char *)v50;
      uint64_t v211 = &v56[8 * v55];
      uint64_t v14 = v51;
      if (v47) {
        goto LABEL_57;
      }
LABEL_58:
      unint64_t v210 = (char *)v50;
      if (sub_661B0C(a1 + 3048, v43))
      {
        long long v67 = (unsigned __int16 *)((char *)*v43 - **v43);
        v69 = *v67 >= 0x2Fu && (uint64_t v68 = v67[23]) != 0 && (*((unsigned char *)*v43 + v68) & 0xF7) == 34;
        uint64_t v14 = v14 | v69;
        if (sub_6D855C(v15, v43)) {
          goto LABEL_67;
        }
        if (!*(unsigned char *)(a1 + 1080)) {
          goto LABEL_28;
        }
        uint64_t v97 = *v43;
        uint64_t v98 = (unsigned __int16 *)((char *)*v43 - **v43);
        unsigned int v99 = *v98;
        if (*((unsigned char *)v43 + 38))
        {
          if (v99 >= 0xB && v98[5] && (*(int *)((char *)v97 + v98[5]) & 2) != 0) {
            goto LABEL_67;
          }
        }
        else if (v99 >= 0xB && v98[5] && (*(int *)((char *)v97 + v98[5]) & 1) != 0)
        {
          goto LABEL_67;
        }
        uint64_t v120 = *(void *)a2;
        size_t v121 = (unsigned __int16 *)(*(void *)a2 - **(int **)a2);
        unsigned int v122 = *v121;
        if (v122 >= 0x2F && v121[23])
        {
          int v123 = *(unsigned __int8 *)(v120 + v121[23]);
          if (v99 < 0x2F) {
            goto LABEL_138;
          }
LABEL_135:
          if (v98[23])
          {
            if (v123 != *((unsigned __int8 *)v97 + v98[23])) {
              goto LABEL_28;
            }
            goto LABEL_139;
          }
        }
        else
        {
          int v123 = 32;
          if (v99 >= 0x2F) {
            goto LABEL_135;
          }
        }
LABEL_138:
        if (v123 != 32) {
          goto LABEL_28;
        }
LABEL_139:
        if (v122 >= 0x43 && (uint64_t v124 = v121[33]) != 0)
        {
          int v125 = *(unsigned __int8 *)(v120 + v124);
          if (v99 < 0x43) {
            goto LABEL_168;
          }
LABEL_156:
          uint64_t v134 = v98[33];
          if (v134)
          {
            if (v125 != *((unsigned __int8 *)v97 + v134)) {
              goto LABEL_28;
            }
            goto LABEL_169;
          }
        }
        else
        {
          int v125 = 0;
          if (v99 >= 0x43) {
            goto LABEL_156;
          }
        }
LABEL_168:
        if (v125) {
          goto LABEL_28;
        }
LABEL_169:
        if (fabs(sub_6D82EC(v15, (int **)a2, v43)) < *(double *)(a1 + 288)) {
          goto LABEL_28;
        }
        *(void *)&long long v218 = sub_2E4738((int **)a2);
        if (sub_3CCE68(v195, (unsigned int **)&v218)) {
          goto LABEL_28;
        }
        unint64_t v138 = (unsigned __int16 *)(*(void *)a2 - **(int **)a2);
        if (*v138 >= 0xBu && (uint64_t v139 = v138[5]) != 0)
        {
          int v140 = (*(unsigned __int8 *)(*(void *)a2 + v139) >> 2) & 1;
          long long v141 = *v43;
          int v142 = (unsigned __int16 *)((char *)*v43 - **v43);
          if (*v142 < 0xBu) {
            goto LABEL_191;
          }
LABEL_184:
          uint64_t v149 = v142[5];
          if (v149)
          {
            if (v140 != (*(int *)((char *)v141 + v149) & 4u) >> 2) {
              goto LABEL_28;
            }
            goto LABEL_67;
          }
        }
        else
        {
          int v140 = 0;
          long long v141 = *v43;
          int v142 = (unsigned __int16 *)((char *)*v43 - **v43);
          if (*v142 >= 0xBu) {
            goto LABEL_184;
          }
        }
LABEL_191:
        if (v140) {
          goto LABEL_28;
        }
LABEL_67:
        char v74 = (unsigned __int16 *)((char *)*v43 - **v43);
        if (*v74 >= 9u)
        {
          uint64_t v75 = v74[4];
          if (v75)
          {
            uint64_t v76 = *(unsigned int *)((char *)*v43 + v75) + v198;
            uint64_t v78 = v213;
            long long v77 = v214;
            if (v213 >= v214) {
              goto LABEL_70;
            }
LABEL_108:
            long long v112 = *((_OWORD *)v43 + 1);
            unint64_t v113 = v43[4];
            *(_OWORD *)uint64_t v78 = *(_OWORD *)v43;
            *((_OWORD *)v78 + 1) = v112;
            *((void *)v78 + 4) = v113;
            *((void *)v78 + 5) = v76;
            char v92 = v78 + 48;
LABEL_145:
            uint64_t v213 = v92;
            uint64_t v126 = v212;
            if (v92 - (unsigned char *)v212 >= 49)
            {
              unint64_t v127 = ((v92 - (unsigned char *)v212) / 0x30uLL - 2) >> 1;
              uint64_t v128 = *((void *)v92 - 1);
              if (*((void *)v212 + 6 * v127 + 5) > v128)
              {
                int v129 = v92 - 48;
                long long v218 = *((_OWORD *)v92 - 3);
                long long v219 = *((_OWORD *)v92 - 2);
                uint64_t v220 = *((void *)v92 - 2);
                do
                {
                  size_t v130 = v129;
                  int v129 = (char *)&v126[6 * v127];
                  long long v131 = *(_OWORD *)v129;
                  long long v132 = *((_OWORD *)v129 + 1);
                  *((void *)v130 + 4) = *((void *)v129 + 4);
                  *(_OWORD *)size_t v130 = v131;
                  *((_OWORD *)v130 + 1) = v132;
                  *((void *)v130 + 5) = *((void *)v129 + 5);
                  if (!v127) {
                    break;
                  }
                  unint64_t v127 = (v127 - 1) >> 1;
                }
                while (v126[6 * v127 + 5] > v128);
                *(_OWORD *)int v129 = v218;
                *((_OWORD *)v129 + 1) = v219;
                *((void *)v129 + 4) = v220;
                *((void *)v129 + 5) = v128;
              }
            }
            goto LABEL_28;
          }
        }
        uint64_t v76 = v198;
        uint64_t v78 = v213;
        long long v77 = v214;
        if (v213 < v214) {
          goto LABEL_108;
        }
LABEL_70:
        uint64_t v79 = (char *)v212;
        unint64_t v80 = 0xAAAAAAAAAAAAAAABLL * ((v78 - (unsigned char *)v212) >> 4);
        unint64_t v81 = v80 + 1;
        if (v80 + 1 > 0x555555555555555) {
          sub_2E00();
        }
        unint64_t v82 = 0xAAAAAAAAAAAAAAABLL * ((v77 - (unsigned char *)v212) >> 4);
        if (2 * v82 > v81) {
          unint64_t v81 = 2 * v82;
        }
        if (v82 >= 0x2AAAAAAAAAAAAAALL) {
          unint64_t v83 = 0x555555555555555;
        }
        else {
          unint64_t v83 = v81;
        }
        if (v83 > 0x555555555555555) {
          sub_188D718();
        }
        uint64_t v84 = (char *)operator new(48 * v83);
        unsigned __int8 v85 = &v84[48 * v80];
        long long v86 = *((_OWORD *)v43 + 1);
        unsigned __int8 v87 = v43[4];
        *(_OWORD *)unsigned __int8 v85 = *(_OWORD *)v43;
        *((_OWORD *)v85 + 1) = v86;
        *((void *)v85 + 4) = v87;
        *((void *)v85 + 5) = v76;
        if (v78 == v79)
        {
          char v92 = v85 + 48;
          uint64_t v212 = &v84[48 * v80];
          uint64_t v213 = v85 + 48;
          int v214 = &v84[48 * v83];
          if (!v79) {
            goto LABEL_145;
          }
        }
        else
        {
          char v88 = &v84[48 * v80];
          do
          {
            size_t v89 = v88 - 48;
            long long v90 = *((_OWORD *)v78 - 3);
            long long v91 = *((_OWORD *)v78 - 1);
            *((_OWORD *)v88 - 2) = *((_OWORD *)v78 - 2);
            *((_OWORD *)v88 - 1) = v91;
            *((_OWORD *)v88 - 3) = v90;
            v78 -= 48;
            v88 -= 48;
          }
          while (v78 != v79);
          char v92 = v85 + 48;
          uint64_t v212 = v89;
          uint64_t v213 = v85 + 48;
          int v214 = &v84[48 * v83];
          if (!v79) {
            goto LABEL_145;
          }
        }
        operator delete(v79);
        goto LABEL_145;
      }
      if (sub_6D855C(v15, v43)) {
        goto LABEL_63;
      }
      if (!*(unsigned char *)(a1 + 1080)) {
        goto LABEL_162;
      }
      char v94 = *v43;
      uint64_t v95 = (unsigned __int16 *)((char *)*v43 - **v43);
      unsigned int v96 = *v95;
      if (*((unsigned char *)v43 + 38))
      {
        if (v96 >= 0xB && v95[5] && (*(int *)((char *)v94 + v95[5]) & 2) != 0) {
          goto LABEL_63;
        }
      }
      else if (v96 >= 0xB && v95[5] && (*(int *)((char *)v94 + v95[5]) & 1) != 0)
      {
LABEL_63:
        char v70 = v204;
        if (v204 >= v205)
        {
          uint64_t v100 = (char *)__p;
          unint64_t v101 = 0xAAAAAAAAAAAAAAABLL * ((v204 - (unsigned char *)__p) >> 4);
          unint64_t v102 = v101 + 1;
          if (v101 + 1 > 0x555555555555555) {
            sub_2E00();
          }
          if (0x5555555555555556 * ((v205 - (unsigned char *)__p) >> 4) > v102) {
            unint64_t v102 = 0x5555555555555556 * ((v205 - (unsigned char *)__p) >> 4);
          }
          if (0xAAAAAAAAAAAAAAABLL * ((v205 - (unsigned char *)__p) >> 4) >= 0x2AAAAAAAAAAAAAALL) {
            unint64_t v103 = 0x555555555555555;
          }
          else {
            unint64_t v103 = v102;
          }
          if (v103 > 0x555555555555555) {
            sub_188D718();
          }
          uint64_t v104 = (char *)operator new(48 * v103);
          uint64_t v105 = &v104[48 * v101];
          long long v106 = *((_OWORD *)v43 + 1);
          uint64_t v107 = v43[4];
          *(_OWORD *)uint64_t v105 = *(_OWORD *)v43;
          *((_OWORD *)v105 + 1) = v106;
          *((void *)v105 + 4) = v107;
          *((void *)v105 + 5) = v198;
          if (v70 == v100)
          {
            unint64_t v73 = v105 + 48;
            long long __p = &v104[48 * v101];
            uint64_t v204 = v105 + 48;
            uint64_t v205 = &v104[48 * v103];
            if (!v100) {
              goto LABEL_106;
            }
          }
          else
          {
            size_t v108 = &v104[48 * v101];
            do
            {
              int v109 = v108 - 48;
              long long v110 = *((_OWORD *)v70 - 3);
              long long v111 = *((_OWORD *)v70 - 1);
              *((_OWORD *)v108 - 2) = *((_OWORD *)v70 - 2);
              *((_OWORD *)v108 - 1) = v111;
              *((_OWORD *)v108 - 3) = v110;
              v70 -= 48;
              v108 -= 48;
            }
            while (v70 != v100);
            unint64_t v73 = v105 + 48;
            long long __p = v109;
            uint64_t v204 = v105 + 48;
            uint64_t v205 = &v104[48 * v103];
            if (!v100) {
              goto LABEL_106;
            }
          }
          operator delete(v100);
        }
        else
        {
          long long v71 = *((_OWORD *)v43 + 1);
          char v72 = v43[4];
          *(_OWORD *)uint64_t v204 = *(_OWORD *)v43;
          *((_OWORD *)v70 + 1) = v71;
          *((void *)v70 + 4) = v72;
          *((void *)v70 + 5) = v198;
          unint64_t v73 = v70 + 48;
        }
LABEL_106:
        uint64_t v204 = v73;
        goto LABEL_28;
      }
      uint64_t v114 = *(void *)a2;
      int v115 = (unsigned __int16 *)(*(void *)a2 - **(int **)a2);
      unsigned int v116 = *v115;
      if (v116 >= 0x2F && v115[23])
      {
        int v117 = *(unsigned __int8 *)(v114 + v115[23]);
        if (v96 < 0x2F) {
          goto LABEL_122;
        }
      }
      else
      {
        int v117 = 32;
        if (v96 < 0x2F) {
          goto LABEL_122;
        }
      }
      if (v95[23])
      {
        if (v117 != *((unsigned __int8 *)v94 + v95[23])) {
          goto LABEL_162;
        }
        goto LABEL_123;
      }
LABEL_122:
      if (v117 != 32) {
        goto LABEL_162;
      }
LABEL_123:
      if (v116 >= 0x43 && (uint64_t v118 = v115[33]) != 0)
      {
        int v119 = *(unsigned __int8 *)(v114 + v118);
        if (v96 < 0x43) {
          goto LABEL_159;
        }
      }
      else
      {
        int v119 = 0;
        if (v96 < 0x43) {
          goto LABEL_159;
        }
      }
      uint64_t v133 = v95[33];
      if (v133)
      {
        if (v119 != *((unsigned __int8 *)v94 + v133)) {
          goto LABEL_162;
        }
        goto LABEL_160;
      }
LABEL_159:
      if (v119) {
        goto LABEL_162;
      }
LABEL_160:
      if (fabs(sub_6D82EC(v15, (int **)a2, v43)) < *(double *)(a1 + 288)) {
        goto LABEL_162;
      }
      *(void *)&long long v218 = sub_2E4738((int **)a2);
      if (sub_3CCE68(v195, (unsigned int **)&v218)) {
        goto LABEL_162;
      }
      int v144 = (unsigned __int16 *)(*(void *)a2 - **(int **)a2);
      if (*v144 >= 0xBu && (uint64_t v145 = v144[5]) != 0)
      {
        int v146 = (*(unsigned __int8 *)(*(void *)a2 + v145) >> 2) & 1;
        int v147 = *v43;
        char v148 = (unsigned __int16 *)((char *)*v43 - **v43);
        if (*v148 < 0xBu) {
          goto LABEL_193;
        }
      }
      else
      {
        int v146 = 0;
        int v147 = *v43;
        char v148 = (unsigned __int16 *)((char *)*v43 - **v43);
        if (*v148 < 0xBu) {
          goto LABEL_193;
        }
      }
      uint64_t v150 = v148[5];
      if (v150)
      {
        if ((v146 ^ (*((unsigned __int8 *)v147 + v150) >> 2) & 1 ^ 1)) {
          goto LABEL_63;
        }
        goto LABEL_162;
      }
LABEL_193:
      if ((v146 ^ 1)) {
        goto LABEL_63;
      }
LABEL_162:
      if (a4) {
        goto LABEL_63;
      }
      if (*(unsigned char *)(a1 + 968))
      {
        unint64_t v135 = *v43;
        v136 = (unsigned __int16 *)((char *)*v43 - **v43);
        unsigned int v137 = *v136;
        if (v137 < 0x2F)
        {
          if (v137 < 0xB) {
            goto LABEL_63;
          }
        }
        else if (v136[23] && *((unsigned char *)v135 + v136[23]) == 23)
        {
          goto LABEL_28;
        }
        uint64_t v143 = v136[5];
        if (!v143 || (*((unsigned char *)v135 + v143) & 4) == 0) {
          goto LABEL_63;
        }
      }
LABEL_28:
      v43 += 5;
      unint64_t v42 = v200;
    }
    uint64_t v12 = v212;
    char v13 = v213;
    if (v212 != v213) {
      continue;
    }
    break;
  }
  v151 = (char *)__p;
  uint64_t v152 = 568;
  if (v14) {
    uint64_t v152 = 576;
  }
  uint64_t v153 = *(void *)(a1 + v152);
  long long v215 = 0uLL;
  *(void *)&long long v216 = 0;
  uint64_t v154 = v204 - (unsigned char *)__p;
  if (v204 == __p) {
    goto LABEL_224;
  }
  if (v154 < 0) {
    sub_2E00();
  }
  unint64_t v155 = 0xAAAAAAAAAAAAAAABLL * (v154 >> 4);
  long long v215 = (unint64_t)operator new(8 * (((v155 - 1) >> 6) + 1));
  *(void *)&long long v216 = ((v155 - 1) >> 6) + 1;
  sub_43284(&v215, v155, 0);
  v151 = v204;
  if (v204 == __p)
  {
LABEL_224:
    uint64_t v177 = v151;
    goto LABEL_227;
  }
  unint64_t v156 = 0;
  unint64_t v157 = 0xAAAAAAAAAAAAAAABLL * ((v204 - (unsigned char *)__p) >> 4);
  while (2)
  {
    long long v158 = (char *)__p + 48 * v156;
    long long v159 = *(_OWORD *)v158;
    long long v160 = *((_OWORD *)v158 + 1);
    uint64_t v220 = *((void *)v158 + 4);
    long long v218 = v159;
    long long v219 = v160;
    unint64_t v161 = (unsigned __int16 *)(v159 - *(int *)v159);
    if (*v161 >= 9u && (uint64_t v162 = v161[4]) != 0)
    {
      uint64_t v163 = *(unsigned int *)(v159 + v162);
      if (v163 < v153) {
        goto LABEL_207;
      }
    }
    else
    {
      uint64_t v163 = 0;
      if (v153 > 0)
      {
LABEL_207:
        uint64_t v164 = *((void *)v158 + 5);
        while (1)
        {
          sub_2E44A4(*(void *)a1, (uint64_t)&v218, &v206);
          sub_6D7A20(v15, (uint64_t)&v218, (uint64_t *)&v206);
          unint64_t v165 = sub_6D7AFC(v15, (int **)&v218, (uint64_t *)&v206, -1);
          if (v165 == -1) {
            break;
          }
          uint64_t v166 = sub_66F838(&v206, v165);
          long long v167 = *(_OWORD *)v166;
          long long v168 = *(_OWORD *)(v166 + 16);
          uint64_t v220 = *(void *)(v166 + 32);
          long long v218 = v167;
          long long v219 = v168;
          if (v204 != __p)
          {
            unint64_t v169 = 0;
            uint64_t v170 = (v204 - (unsigned char *)__p) / 48;
            do
            {
              if (v156 != v169)
              {
                uint64_t v173 = v220;
                unint64_t v174 = *(void *)(sub_690874(&__p, v169) + 32);
                if ((v173 & 0xFFFFFFFFFFFFLL) == (v174 & 0xFFFFFFFFFFFFLL)
                  && ((v173 & 0xFF000000000000) == 0) != (HIWORD(v174) & 1))
                {
                  if (v163 + v164 > *(void *)(sub_690874(&__p, v169) + 40)) {
                    uint64_t v171 = (void *)sub_415F0(&v215, v156);
                  }
                  else {
                    uint64_t v171 = (void *)sub_415F0(&v215, v169);
                  }
                  *v171 |= v172;
                }
              }
              ++v169;
            }
            while (v170 != v169);
          }
          uint64_t v175 = (unsigned __int16 *)(v218 - *(int *)v218);
          if (*v175 >= 9u && (uint64_t v176 = v175[4]) != 0)
          {
            uint64_t v15 = a1 + 1160;
            v163 += *(unsigned int *)(v218 + v176);
            if (v163 >= v153) {
              break;
            }
          }
          else
          {
            uint64_t v15 = a1 + 1160;
            if (v163 >= v153) {
              break;
            }
          }
        }
      }
    }
    if (++v156 != v157) {
      continue;
    }
    break;
  }
  v151 = (char *)__p;
  uint64_t v177 = v204;
LABEL_227:
  unint64_t v178 = 0xAAAAAAAAAAAAAAABLL * ((v177 - v151) >> 4);
  unint64_t v179 = *v194;
  if (0xCCCCCCCCCCCCCCCDLL * ((v194[2] - *v194) >> 3) < v178)
  {
    if (v178 >= 0x666666666666667) {
      sub_2E00();
    }
    int v180 = v194[1];
    size_t v181 = (char *)operator new(0xAAAAAAAAAAAAAAB8 * ((v177 - v151) >> 4));
    unint64_t v182 = &v181[40 * ((v180 - v179) / 40)];
    unint64_t v183 = v182;
    if (v180 != v179)
    {
      uint64_t v184 = &v181[40 * ((v180 - v179) / 40)];
      do
      {
        long long v185 = *(_OWORD *)(v180 - 40);
        long long v186 = *(_OWORD *)(v180 - 24);
        unint64_t v183 = v184 - 40;
        *((void *)v184 - 1) = *((void *)v180 - 1);
        *(_OWORD *)(v184 - 24) = v186;
        *(_OWORD *)(v184 - 40) = v185;
        v180 -= 40;
        v184 -= 40;
      }
      while (v180 != v179);
    }
    *int v194 = v183;
    v194[1] = v182;
    v194[2] = &v181[0xAAAAAAAAAAAAAAB8 * ((v177 - v151) >> 4)];
    if (v179)
    {
      operator delete(v179);
      v151 = (char *)__p;
      uint64_t v177 = v204;
      unint64_t v178 = 0xAAAAAAAAAAAAAAABLL * ((v204 - (unsigned char *)__p) >> 4);
    }
  }
  if (v177 != v151)
  {
    unint64_t v187 = 0;
    do
    {
      if (((*(void *)(v215 + ((v187 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v187) & 1) == 0)
      {
        long long v188 = (long long *)sub_690874(&__p, v187);
        sub_64F484(v194, v188);
      }
      ++v187;
    }
    while (v178 != v187);
  }
  unint64_t v189 = *v194;
  uint64_t v190 = (int **)v194[1];
  unint64_t v191 = 126 - 2 * __clz(0xCCCCCCCCCCCCCCCDLL * (((char *)v190 - *v194) >> 3));
  BOOL v192 = v190 == (int **)*v194;
  *(void *)&long long v218 = a1;
  *((void *)&v218 + 1) = a2;
  if (v192) {
    uint64_t v193 = 0;
  }
  else {
    uint64_t v193 = v191;
  }
  sub_6D0AF4((long long *)v189, v190, (uint64_t *)&v218, v193, 1);
  if ((void)v215) {
    operator delete((void *)v215);
  }
  if (__p)
  {
    uint64_t v204 = (char *)__p;
    operator delete(__p);
  }
  if (v206)
  {
    uint64_t v207 = (int **)v206;
    operator delete(v206);
  }
  if (v209)
  {
    unint64_t v210 = (char *)v209;
    operator delete(v209);
  }
  if (v212)
  {
    uint64_t v213 = (char *)v212;
    operator delete(v212);
  }
}

void sub_68F3BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,void *__p,uint64_t a31,uint64_t a32,void *a33,uint64_t a34)
{
  if (__p)
  {
    operator delete(__p);
    long long v35 = a33;
    if (!a33) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    long long v35 = a33;
    if (!a33) {
      goto LABEL_3;
    }
  }
  operator delete(v35);
  _Unwind_Resume(exception_object);
}

int *sub_68F4F8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t result = (int *)sub_2D5D58(a1, a2);
  unint64_t v6 = (unsigned __int16 *)((char *)result - *result);
  if (*v6 >= 0x21u && (uint64_t v7 = v6[16]) != 0)
  {
    uint64_t v8 = (unsigned int *)((char *)result + v7 + *(unsigned int *)((char *)result + v7));
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    uint64_t v9 = *v8;
    if (v9)
    {
      uint64_t v10 = 8 * v9;
      long long v11 = (char *)operator new(8 * v9);
      *a3 = v11;
      a3[1] = v11;
      a3[2] = &v11[v10];
      uint64_t v12 = v8 + 1;
      do
      {
        char v13 = v12;
        uint64_t result = sub_2E7CD8(a1, *v12);
        if (result) {
          uint64_t result = (int *)sub_6C8614((uint64_t)a3, &v13);
        }
        ++v12;
        v10 -= 8;
      }
      while (v10);
    }
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
  }
  return result;
}

void sub_68F5C0(_Unwind_Exception *exception_object)
{
  BOOL v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

int *sub_68F5DC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t result = (int *)sub_2DBC9C(a1, a2);
  uint64_t v5 = (unsigned __int16 *)((char *)result - *result);
  if (*v5 >= 7u)
  {
    uint64_t v6 = v5[3];
    if (v6)
    {
      uint64_t v7 = (unsigned int *)((char *)result + v6 + *(unsigned int *)((char *)result + v6));
      uint64_t v8 = *v7;
      if (v8)
      {
        uint64_t v9 = v8;
        uint64_t v10 = operator new(8 * v8);
        *a3 = (unint64_t)v10;
        a3[1] = (unint64_t)v10;
        a3[2] = (unint64_t)&v10[v9];
        long long v11 = (uint64_t *)(v7 + 1);
        do
        {
          uint64_t v12 = *v11;
          unint64_t v13 = HIDWORD(*v11);
          int v14 = *v11;
          __int16 v15 = v13;
          BOOL v16 = (v12 & 0xFF000000000000) == 0;
          uint64_t result = (int *)sub_2D6254(a3, v10, &v14);
          uint64_t v10 = result + 2;
          ++v11;
          --v9;
        }
        while (v9 * 8);
      }
    }
  }
  return result;
}

void sub_68F6A0(_Unwind_Exception *exception_object)
{
  BOOL v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_68F6BC(void *a1, unint64_t a2)
{
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1[1] - *a1) >> 6) <= a2)
  {
    exception = __cxa_allocate_exception(0x40uLL);
    std::to_string(&v16, a2);
    uint64_t v6 = std::string::insert(&v16, 0, "Out-of-bounds access in Vector::at with index=");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v17.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    uint64_t v8 = std::string::append(&v17, ",size=");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v18.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v18.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v15, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1[1] - *a1) >> 6));
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v10 = &v15;
    }
    else {
      uint64_t v10 = (std::string *)v15.__r_.__value_.__r.__words[0];
    }
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v15.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v15.__r_.__value_.__l.__size_;
    }
    uint64_t v12 = std::string::append(&v18, (const std::string::value_type *)v10, size);
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    std::string::size_type v20 = v12->__r_.__value_.__r.__words[2];
    long long v19 = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    int v14 = (void *)sub_2F404((uint64_t)exception, &v19);
  }
  return *a1 + 192 * a2;
}

void sub_68F80C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 41) < 0) {
    operator delete(*(void **)(v33 - 64));
  }
  if (a14 < 0)
  {
    operator delete(a9);
    if ((a33 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a26 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_10;
    }
  }
  else if ((a33 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(a28);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_7;
  }
LABEL_10:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0) {
LABEL_11:
  }
    _Unwind_Resume(a1);
LABEL_7:
  operator delete(__p);
  goto LABEL_11;
}

uint64_t sub_68F8EC(uint64_t a1, unsigned int *a2, void *a3, uint64_t a4)
{
  uint64_t v8 = (int *)sub_2D5D58(*(void *)a1, *a2 | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32));
  long long v9 = (unsigned __int16 *)((char *)v8 - *v8);
  if (*v9 < 0xBu) {
    return 0;
  }
  uint64_t v10 = v9[5];
  if (!v10) {
    return 0;
  }
  if ((*((unsigned char *)v8 + v10 + 3) & 2) == 0) {
    return 0;
  }
  if (!*(unsigned char *)(a1 + 681)) {
    return 0;
  }
  long long v11 = (int *)sub_2D5D58(*(void *)a1, *a2 | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32));
  uint64_t v12 = (unsigned __int16 *)((char *)v11 - *v11);
  if (*v12 < 0x21u || !v12[16]) {
    return 0;
  }
  sub_68F4F8(*(void *)a1, *a2 | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32), &v30);
  long long v13 = (unint64_t *)v30;
  int v14 = v31;
  if (v30 == v31)
  {
    uint64_t v15 = 0;
    goto LABEL_31;
  }
  while (1)
  {
    std::string v17 = (int *)sub_2DBC9C(*(void *)a1, *v13);
    std::string v18 = (unsigned __int16 *)((char *)v17 - *v17);
    if (*v18 < 0xDu) {
      goto LABEL_12;
    }
    uint64_t v19 = v18[6];
    if (!v19) {
      goto LABEL_12;
    }
    std::string::size_type v20 = (int *)((char *)v17 + v19 + *(unsigned int *)((char *)v17 + v19));
    long long v21 = (unsigned __int16 *)((char *)v20 - *v20);
    if (*v21 >= 5u && (uint64_t v22 = v21[2]) != 0)
    {
      unsigned int v23 = *((unsigned __int8 *)v20 + v22);
      if (v23 >= 0xF || ((0x7EFFu >> v23) & 1) == 0) {
        goto LABEL_12;
      }
      int v24 = dword_20E8B9C[(char)v23];
    }
    else
    {
      int v24 = 0;
    }
    sub_68F5DC(*(void *)a1, *v13, (unint64_t *)&__p);
    uint64_t v25 = (char *)__p;
    if (__PAIR64__(*((unsigned __int16 *)__p + 2), *(_DWORD *)__p) == __PAIR64__((unsigned __int16)WORD2(*(void *)a2), *(void *)a2)&& (HIWORD(*(void *)a2) & 1) != (*((unsigned char *)__p + 6) == 0))
    {
      uint64_t v26 = *(char **)v29;
      if (__PAIR64__(*(unsigned __int16 *)(*(void *)v29 - 4), *(_DWORD *)(*(void *)v29 - 8)) == __PAIR64__((unsigned __int16)WORD2(*a3), *a3)
        && (HIWORD(*a3) & 1) != (*(unsigned char *)(*(void *)v29 - 2) == 0))
      {
        break;
      }
    }
    *(void *)unint64_t v29 = __p;
    operator delete(__p);
LABEL_12:
    if (++v13 == v14)
    {
      uint64_t v15 = 0;
      goto LABEL_29;
    }
  }
  *(_DWORD *)(a4 + 24) = v24;
  if (&__p == (void **)a4)
  {
    *(void *)unint64_t v29 = v25;
    uint64_t v27 = v25;
LABEL_34:
    operator delete(v27);
  }
  else
  {
    sub_2D8554((void *)a4, v25, v26, (v26 - v25) >> 3);
    uint64_t v27 = __p;
    if (__p)
    {
      *(void *)unint64_t v29 = __p;
      goto LABEL_34;
    }
  }
  uint64_t v15 = 1;
LABEL_29:
  long long v13 = (unint64_t *)v30;
LABEL_31:
  if (v13)
  {
    long long v31 = v13;
    operator delete(v13);
  }
  return v15;
}

void sub_68FB6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p)
  {
    operator delete(__p);
    int v14 = a12;
    if (!a12) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    int v14 = a12;
    if (!a12) {
      goto LABEL_3;
    }
  }
  operator delete(v14);
  _Unwind_Resume(exception_object);
}

uint64_t sub_68FBBC(uint64_t a1, int **a2, uint64_t *a3, unint64_t a4, int a5, uint64_t a6, char a7)
{
  sub_6960F4(a1, a2, a3, a4, (uint64_t)&v56);
  if (a6 && v57) {
    return v56;
  }
  if (sub_696570(a1, a2, (long long **)a3)) {
    return 0;
  }
  sub_696728(a1, a2, (int ***)a3, a4, (uint64_t)&v54);
  if (v55) {
    return v54;
  }
  uint64_t v50 = a1 + 1160;
  unint64_t v16 = sub_6D7AFC(a1 + 1160, a2, a3, a4);
  if (!sub_6968F4(a1, a2, a3, v16, a4, a7))
  {
    uint64_t v14 = 0;
    int v18 = 1;
    goto LABEL_19;
  }
  std::string v17 = (int **)sub_5A7C34(a3, 0);
  int v18 = 1;
  uint64_t v19 = (int **)sub_5A7C34(a3, 1uLL);
  double v20 = sub_697680(a1, a2, v17, v19);
  if (a4 == 1)
  {
    int v18 = 0;
    BOOL v22 = v20 < v21;
    unsigned int v23 = 20;
    unsigned int v24 = 21;
  }
  else
  {
    if (a4)
    {
      uint64_t v14 = 0;
      goto LABEL_19;
    }
    int v18 = 0;
    BOOL v22 = v20 < v21;
    unsigned int v23 = 21;
    unsigned int v24 = 20;
  }
  if (v22) {
    uint64_t v14 = v24;
  }
  else {
    uint64_t v14 = v23;
  }
LABEL_19:
  uint64_t v25 = sub_5A7C34(a3, a4);
  uint64_t v26 = *(void *)(v25 + 32);
  long long v27 = *(_OWORD *)(v25 + 16);
  v52[0] = *(_OWORD *)v25;
  v52[1] = v27;
  uint64_t v53 = v26;
  uint64_t v51 = (unsigned int *)sub_2E4738(a2);
  int v28 = sub_3CCE68(a1 + 8, &v51);
  char v29 = v28;
  if (v16 == -1)
  {
    if (!v28) {
      goto LABEL_44;
    }
LABEL_24:
    long long v31 = *a2;
    uint64_t v32 = (unsigned __int16 *)((char *)*a2 - **a2);
    unsigned int v33 = *v32;
    if (v33 < 0x2F)
    {
      if (v33 < 0xB) {
        goto LABEL_31;
      }
    }
    else if (v32[23] && *((unsigned char *)v31 + v32[23]) == 23)
    {
LABEL_44:
      if (!v18) {
        goto LABEL_46;
      }
      goto LABEL_45;
    }
    uint64_t v34 = v32[5];
    if (v34 && (*((unsigned char *)v31 + v34) & 4) != 0) {
      goto LABEL_44;
    }
LABEL_31:
    long long v35 = (unsigned __int16 *)(*(void *)&v52[0] - (int)**(_DWORD **)&v52[0]);
    unsigned int v36 = *v35;
    if (v36 < 0x2F)
    {
      if (v36 < 0xB) {
        goto LABEL_44;
      }
    }
    else if (v35[23] && *(unsigned char *)(*(void *)&v52[0] + v35[23]) == 23)
    {
      goto LABEL_38;
    }
    uint64_t v37 = v35[5];
    if (!v37 || (*(unsigned char *)(*(void *)&v52[0] + v37) & 4) == 0) {
      goto LABEL_44;
    }
LABEL_38:
    BOOL v30 = (sub_2E79EC(*(void *)a1, (uint64_t)a2[4], v53) & 1) != 0
       || fabs(sub_6D82EC(v50, a2, (int **)v52)) < *(double *)(a1 + 200);
    goto LABEL_41;
  }
  BOOL v30 = v16 == a4;
  if (v16 != a4 && ((v28 ^ 1) & 1) == 0) {
    goto LABEL_24;
  }
LABEL_41:
  if ((v18 & v30) != 1) {
    goto LABEL_44;
  }
  if (sub_6978E4(a1, a2, (int ***)a3, a4))
  {
    uint64_t v14 = 3;
    goto LABEL_46;
  }
  if (sub_697E44(a1, a2, (int **)v52, (int ***)a3, v29, v38))
  {
LABEL_45:
    uint64_t v14 = sub_69813C(a1, a2, a3, a4, v16);
    goto LABEL_46;
  }
  uint64_t v14 = 0;
LABEL_46:
  if (sub_69830C(a1, (char **)a2, a3, a4, v16))
  {
    if ((int)v14 > 61)
    {
      if (v14 != 62)
      {
        if (v14 != 63) {
          goto LABEL_50;
        }
        goto LABEL_57;
      }
    }
    else if (v14 != 20)
    {
      if (v14 != 21) {
        goto LABEL_50;
      }
LABEL_57:
      uint64_t v46 = (unsigned __int16 *)((char *)*a2 - **a2);
      if (*v46 < 0xBu) {
        return 11;
      }
      uint64_t v47 = v46[5];
      uint64_t v14 = 11;
      if (v47)
      {
        if ((*(int *)((char *)*a2 + v47) & 0x8000) != 0) {
          return 30;
        }
        else {
          return 11;
        }
      }
      return v14;
    }
    __int16 v48 = (unsigned __int16 *)((char *)*a2 - **a2);
    if (*v48 < 0xBu) {
      return 29;
    }
    uint64_t v49 = v48[5];
    uint64_t v14 = 29;
    if (v49)
    {
      if ((*(int *)((char *)*a2 + v49) & 0x8000) != 0) {
        return 11;
      }
      else {
        return 29;
      }
    }
    return v14;
  }
LABEL_50:
  if (a5 && sub_6985C0(a1, (long long *)a2, v14, a6))
  {
    double v40 = v39;
    double v41 = sub_6D82EC(v50, a2, (int **)v52);
    double v42 = fabs(v41);
    if (v42 > *(double *)(a1 + 280) || v42 >= v40)
    {
      if (v42 < *(double *)(a1 + 296)) {
        return v14;
      }
      BOOL v43 = v41 < 0.0;
      unsigned int v44 = 61;
      unsigned int v45 = 60;
    }
    else
    {
      BOOL v43 = v41 < 0.0;
      unsigned int v44 = 63;
      unsigned int v45 = 62;
    }
    if (v43) {
      return v45;
    }
    else {
      return v44;
    }
  }
  return v14;
}

uint64_t sub_690014(uint64_t a1, void *a2)
{
  unint64_t v4 = sub_46C760(a2);
  uint64_t v5 = sub_64EFC4((uint64_t)a2);
  int v6 = *(_DWORD *)(v5 + 8);
  uint64_t v80 = *(void *)v5;
  int v81 = v6;
  char v7 = sub_64F240((uint64_t)a2);
  BOOL v8 = sub_64F348((uint64_t)a2);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = sub_46C8EC(a2, v4 - 1);
  sub_2954EC(v9, *(void *)(v10 + 32), (uint64_t)&v67);
  sub_2E4B5C((uint64_t)&v67, v74);
  uint64_t v14 = *(void **)(a1 + 40);
  if (v14)
  {
    *(void *)(a1 + 48) = v14;
    operator delete(v14);
    *(void *)(a1 + 40) = 0;
    *(void *)(a1 + 48) = 0;
    *(void *)(a1 + 56) = 0;
  }
  uint64_t v15 = v74[0];
  *(_OWORD *)(a1 + 40) = *(_OWORD *)v74;
  *(void *)(a1 + 56) = v75;
  v74[1] = 0;
  uint64_t v75 = 0;
  v74[0] = 0;
  if (__p)
  {
    BOOL v69 = __p;
    operator delete(__p);
  }
  if (v8) {
    uint64_t v16 = 82;
  }
  else {
    uint64_t v16 = 18;
  }
  if (v80 != -1 && *(void *)(a1 + 40) != *(void *)(a1 + 48))
  {
    sub_3B8BC4((unsigned int **)(a1 + 40), (unsigned int *)&v80, 0, 0, (uint64_t)&v67, (unint64_t)v15, v11, v12, v13);
    std::string v17 = v67;
    uint64_t v18 = *(void *)(a1 + 888);
    uint64_t v19 = v18 / 100;
    __int16 v20 = v18 % 100;
    __int16 v21 = v18 < 0 ? -50 : 50;
    if (*(double *)&v67 >= (double)(v19
                                   + (int)(((5243 * (__int16)(v21 + v20)) >> 19)
                                         + ((5243 * (__int16)(v21 + v20)) >> 31))))
    {
      int v22 = (int)__p;
      int v65 = (int)v69;
      int v66 = HIDWORD(__p);
      int64_t v23 = v70;
      if (sub_64EFDC((uint64_t)a2)
        || ((uint64_t v24 = *(void *)(a1 + 896), v25 = v24 / 100, v26 = v24 % 100, v24 < 0) ? (v27 = -50) : (v27 = 50),
            *(double *)&v17 <= (double)(v25
                                      + (int)(((5243 * (__int16)(v27 + v26)) >> 19)
                                            + ((5243 * (__int16)(v27 + v26)) >> 31)))))
      {
        uint64_t v28 = sub_38128((void *)(a1 + 40), v23);
        long long v67 = *(void **)v28;
        LODWORD(__p) = *(_DWORD *)(v28 + 8);
        char v29 = operator new(0x18uLL);
        BOOL v30 = v29;
        uint64_t v78 = v29 + 6;
        uint64_t v79 = v29 + 6;
        *(double *)char v29 = *(double *)&v67;
        int v29[2] = __p;
        v29[3] = v22;
        v29[4] = v66;
        v29[5] = v65;
        long long v77 = v29;
        LODWORD(v31) = *v29;
        if (*v29 == v22)
        {
          LODWORD(v31) = v22;
          if (v29[1] == v66)
          {
            LODWORD(v31) = v22;
            if (v29[2] == v65)
            {
              LODWORD(v31) = v22;
              if ((v23 & 0x80000000) == 0)
              {
                int64_t v23 = v23;
                while (1)
                {
                  uint64_t v32 = (_DWORD *)sub_38128((void *)(a1 + 40), v23);
                  LODWORD(v31) = *v32;
                  if (*v32 != *v30 || v32[1] != v30[1] || v32[2] != v30[2]) {
                    break;
                  }
                  if (v23-- < 1) {
                    goto LABEL_35;
                  }
                }
                uint64_t v34 = sub_38128((void *)(a1 + 40), v23);
                uint64_t v31 = *(void *)v34;
                v30[2] = *(_DWORD *)(v34 + 8);
                *(void *)BOOL v30 = v31;
              }
            }
          }
        }
LABEL_35:
        if (v31 == v30[3] && v30[1] == v30[4] && v30[2] == v30[5] && v4 != 1)
        {
          uint64_t v35 = sub_46C8EC(a2, v4 - 2);
          sub_2954EC(*(void *)a1, *(void *)(v35 + 32), (uint64_t)v74);
          sub_3A5CB4((uint64_t)v74, (uint64_t)&v67);
          while (1)
          {
            unsigned int v36 = (char *)v74[1];
            if (v76)
            {
              if (v74[1] == v75)
              {
                int v44 = 0;
                LODWORD(v42) = 0;
              }
              else
              {
                unint64_t v37 = *((void *)v75 - 1);
                double v38 = sub_2964C4((uint64_t)v74[0], v37, 1);
                double v39 = &v38[*(unsigned __int16 *)&v38[-*(int *)v38 + 4]];
                uint64_t v40 = (uint64_t)&v39[4 * HIDWORD(v37) + *(unsigned int *)v39];
                double v41 = (int *)(v40 + 4 + *(unsigned int *)(v40 + 4));
                unsigned int v36 = (char *)v74[1];
                unint64_t v42 = (unint64_t)(v75 - (char *)v74[1]) >> 3;
                BOOL v43 = (unsigned int *)((char *)v41 + *(unsigned __int16 *)((char *)v41 - *v41 + 6));
                int v44 = *(unsigned int *)((char *)v43 + *v43);
              }
            }
            else
            {
              int v44 = v74[1] == v75 ? 0 : -1;
              LODWORD(v42) = v44;
            }
            if (v71 == v42 && v72 == v44) {
              break;
            }
            if (*(void *)v30 != sub_2E1BC0((uint64_t)&v67) || v30[2] != v46)
            {
              *(void *)BOOL v30 = sub_2E1BC0((uint64_t)&v67);
              v30[2] = v47;
              unsigned int v36 = (char *)v74[1];
              break;
            }
            if (v73) {
              sub_2E7608((uint64_t)&v67);
            }
            else {
              sub_2E74E8((uint64_t)&v67);
            }
          }
          if (v36)
          {
            uint64_t v75 = v36;
            operator delete(v36);
          }
        }
        double v48 = COERCE_DOUBLE(operator new(0x18uLL));
        long long __p = (void *)(*(void *)&v48 + 24);
        BOOL v69 = (void *)(*(void *)&v48 + 24);
        **(_DWORD **)&double v48 = v22;
        *(_DWORD *)(*(void *)&v48 + 4) = v66;
        *(_DWORD *)(*(void *)&v48 + 8) = v65;
        int v52 = v80;
        *(void *)(*(void *)&v48 + 12) = v80;
        *(_DWORD *)(*(void *)&v48 + 20) = v81;
        *(double *)&long long v67 = v48;
        if (v22 == v52 && v66 == *(_DWORD *)(*(void *)&v48 + 16) && v65 == *(_DWORD *)(*(void *)&v48 + 20)) {
          goto LABEL_77;
        }
        BOOL v53 = !v8;
        if (v8) {
          uint64_t v54 = 83;
        }
        else {
          uint64_t v54 = 33;
        }
        if (v53) {
          uint64_t v55 = 34;
        }
        else {
          uint64_t v55 = 84;
        }
        sub_49344((uint64_t *)&v77, 0, 30.0, v49, v50, v51);
        double v57 = v56;
        sub_49344((uint64_t *)&v67, 1, 30.0, v58, v59, v60);
        for (double i = v61 + -180.0 - v57; i >= 180.0; double i = i + -360.0)
          ;
        for (; i < -180.0; double i = i + 360.0)
          ;
        double v63 = (double)(uint64_t)llround(i);
        if (*(double *)(a1 + 904) >= v63 || *(double *)(a1 + 912) <= v63)
        {
          if (*(double *)(a1 + 920) >= v63 || (uint64_t v54 = v55, *(double *)(a1 + 928) <= v63)) {
LABEL_77:
          }
            uint64_t v54 = v16;
        }
        if (*(double *)&v67 != 0.0)
        {
          long long __p = v67;
          operator delete(v67);
        }
        if (v77)
        {
          uint64_t v78 = v77;
          operator delete(v77);
        }
        return v54;
      }
      else if ((v7 & 1) == 0)
      {
        if (sub_64F1DC((uint64_t)a2)) {
          return 16;
        }
        else {
          return 39;
        }
      }
    }
  }
  return v16;
}

void sub_690648(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  if (__p) {
    operator delete(__p);
  }
  operator delete(v25);
  _Unwind_Resume(a1);
}

uint64_t sub_6906B4(char **a1)
{
  uint64_t v1 = *a1;
  BOOL v2 = &(*a1)[-*(int *)*a1];
  unsigned int v3 = *(unsigned __int16 *)v2;
  if (v3 < 0x2F)
  {
    if (v3 < 0xB) {
      return 0;
    }
  }
  else if (*((_WORD *)v2 + 23) && v1[*((unsigned __int16 *)v2 + 23)] == 23)
  {
    return 1;
  }
  uint64_t v5 = *((unsigned __int16 *)v2 + 5);
  if (v5) {
    return (v1[v5] >> 2) & 1;
  }
  return 0;
}

char *sub_69070C(char **a1, long long *a2, void *a3)
{
  char v7 = a1[1];
  unint64_t v6 = (unint64_t)a1[2];
  if ((unint64_t)v7 < v6)
  {
    long long v8 = *a2;
    long long v9 = a2[1];
    *((void *)v7 + 4) = *((void *)a2 + 4);
    *(_OWORD *)char v7 = v8;
    *((_OWORD *)v7 + 1) = v9;
    *((void *)v7 + 5) = *a3;
    uint64_t v10 = v7 + 48;
    goto LABEL_14;
  }
  double v11 = *a1;
  unint64_t v12 = 0xAAAAAAAAAAAAAAABLL * ((v7 - *a1) >> 4);
  unint64_t v13 = v12 + 1;
  if (v12 + 1 > 0x555555555555555) {
    sub_2E00();
  }
  unint64_t v14 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v6 - (void)v11) >> 4);
  if (2 * v14 > v13) {
    unint64_t v13 = 2 * v14;
  }
  if (v14 >= 0x2AAAAAAAAAAAAAALL) {
    unint64_t v15 = 0x555555555555555;
  }
  else {
    unint64_t v15 = v13;
  }
  if (v15 > 0x555555555555555) {
    sub_188D718();
  }
  uint64_t v16 = 48 * v15;
  std::string v17 = (char *)operator new(48 * v15);
  uint64_t v18 = &v17[48 * v12];
  uint64_t v19 = &v17[v16];
  long long v20 = a2[1];
  *(_OWORD *)uint64_t v18 = *a2;
  *((_OWORD *)v18 + 1) = v20;
  uint64_t v21 = *a3;
  *((void *)v18 + 4) = *((void *)a2 + 4);
  *((void *)v18 + 5) = v21;
  uint64_t v10 = v18 + 48;
  if (v7 == v11)
  {
    *a1 = v18;
    a1[1] = v10;
    a1[2] = v19;
    if (!v11) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  do
  {
    int v22 = v18 - 48;
    long long v23 = *((_OWORD *)v7 - 3);
    long long v24 = *((_OWORD *)v7 - 1);
    *((_OWORD *)v18 - 2) = *((_OWORD *)v7 - 2);
    *((_OWORD *)v18 - 1) = v24;
    *((_OWORD *)v18 - 3) = v23;
    v7 -= 48;
    v18 -= 48;
  }
  while (v7 != v11);
  *a1 = v22;
  a1[1] = v10;
  a1[2] = v19;
  if (v11) {
LABEL_13:
  }
    operator delete(v11);
LABEL_14:
  a1[1] = v10;
  return v10 - 48;
}

uint64_t sub_690874(void *a1, unint64_t a2)
{
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1[1] - *a1) >> 4) <= a2)
  {
    exception = __cxa_allocate_exception(0x40uLL);
    std::to_string(&v16, a2);
    unint64_t v6 = std::string::insert(&v16, 0, "Out-of-bounds access in Vector::at with index=");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v17.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    long long v8 = std::string::append(&v17, ",size=");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v18.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v18.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v15, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1[1] - *a1) >> 4));
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v10 = &v15;
    }
    else {
      uint64_t v10 = (std::string *)v15.__r_.__value_.__r.__words[0];
    }
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v15.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v15.__r_.__value_.__l.__size_;
    }
    unint64_t v12 = std::string::append(&v18, (const std::string::value_type *)v10, size);
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    std::string::size_type v20 = v12->__r_.__value_.__r.__words[2];
    long long v19 = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    unint64_t v14 = (void *)sub_2F404((uint64_t)exception, &v19);
  }
  return *a1 + 48 * a2;
}

void sub_6909C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 41) < 0) {
    operator delete(*(void **)(v33 - 64));
  }
  if (a14 < 0)
  {
    operator delete(a9);
    if ((a33 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a26 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_10;
    }
  }
  else if ((a33 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(a28);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_7;
  }
LABEL_10:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0) {
LABEL_11:
  }
    _Unwind_Resume(a1);
LABEL_7:
  operator delete(__p);
  goto LABEL_11;
}

void sub_690AA4(uint64_t a1@<X0>, void *a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  __p[0] = 0;
  __p[1] = 0;
  LODWORD(v23) = 0;
  uint64_t v22 = 0;
  *((void *)&v23 + 1) = -1;
  v24[0] = 0;
  v24[1] = 0;
  uint64_t v25 = 0;
  int v26 = 0;
  *(void *)&long long v8 = -1;
  *((void *)&v8 + 1) = -1;
  long long v27 = v8;
  long long v28 = v8;
  long long v29 = v8;
  *(void *)&long long v30 = -1;
  DWORD2(v30) = 0;
  *(void *)&long long v31 = -1;
  DWORD2(v31) = 0;
  long long v32 = xmmword_20E2060;
  *(_WORD *)uint64_t v33 = 0;
  v33[2] = 0;
  *(void *)&v33[15] = 0;
  *(void *)&v33[8] = 0;
  if (!a3 && !sub_46CABC((uint64_t)a2)
    || sub_46C760(a2) - 2 == a3 && !sub_46CAC4((uint64_t)a2))
  {
    __src[0] = *(void *)(sub_46C8EC(a2, a3) + 32);
    __src[1] = *(void *)(sub_46C8EC(a2, a3 + 1) + 32);
    sub_2D8554(__p, (char *)__src, (char *)&v35, 2uLL);
    LODWORD(v23) = 0;
    *(_OWORD *)a4 = *(_OWORD *)__p;
    *(void *)(a4 + 16) = v22;
    __p[0] = 0;
    __p[1] = 0;
    uint64_t v22 = 0;
LABEL_16:
    long long v14 = v23;
    goto LABEL_17;
  }
  if (sub_694218(a1, a2, a3, (uint64_t)__p)
    || sub_35E640()
    || sub_6943CC(a1, a2, a3, (uint64_t)__p))
  {
    goto LABEL_15;
  }
  if (*(unsigned char *)(a1 + 746))
  {
    long long v9 = (int **)sub_46C8EC(a2, a3);
    uint64_t v10 = sub_46C8EC(a2, a3 + 1);
    double v11 = (unsigned __int16 *)((char *)*v9 - **v9);
    if (*v11 >= 0x2Fu)
    {
      uint64_t v12 = v11[23];
      if (v12)
      {
        if (*((unsigned char *)*v9 + v12) == 8)
        {
          uint64_t v13 = v10;
          LODWORD(v23) = 0;
          __src[0] = v9[4];
          sub_2D5B74((char **)__p, __src);
          __src[0] = *(void *)(v13 + 32);
          sub_2D5B74((char **)__p, __src);
          *(_OWORD *)a4 = *(_OWORD *)__p;
          *(void *)(a4 + 16) = v22;
          __p[0] = 0;
          __p[1] = 0;
          uint64_t v22 = 0;
          long long v14 = v23;
LABEL_17:
          *(_OWORD *)(a4 + 24) = v14;
          *(_OWORD *)(a4 + 40) = *(_OWORD *)v24;
          *(void *)(a4 + 56) = v25;
          v24[1] = 0;
          uint64_t v25 = 0;
          v24[0] = 0;
          *(_DWORD *)(a4 + 64) = v26;
          long long v15 = v27;
          long long v16 = v28;
          long long v17 = v29;
          *(_OWORD *)(a4 + 120) = v30;
          *(_OWORD *)(a4 + 104) = v17;
          *(_OWORD *)(a4 + 88) = v16;
          *(_OWORD *)(a4 + 72) = v15;
          long long v18 = v31;
          long long v19 = v32;
          long long v20 = *(_OWORD *)v33;
          *(void *)(a4 + 183) = *(void *)&v33[15];
          *(_OWORD *)(a4 + 168) = v20;
          *(_OWORD *)(a4 + 152) = v19;
          *(_OWORD *)(a4 + 136) = v18;
          goto LABEL_18;
        }
      }
    }
  }
  if (sub_6946BC((uint64_t *)a1, a2, a3, (uint64_t)__p))
  {
LABEL_15:
    *(_OWORD *)a4 = *(_OWORD *)__p;
    *(void *)(a4 + 16) = v22;
    __p[1] = 0;
    uint64_t v22 = 0;
    __p[0] = 0;
    goto LABEL_16;
  }
  sub_695C3C(a1, a2, a3, 1, a4);
  if (v24[0])
  {
    v24[1] = v24[0];
    operator delete(v24[0]);
  }
LABEL_18:
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
}

void sub_690DD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_690DE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_690DF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_690E0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_690E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = **(void **)a3;
  long long v8 = (int *)sub_2D5D58(*(void *)a1, v7 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v6 + 7772))
  {
    long long v9 = sub_2DB8E0(v6 + 3896, v7, 0);
    uint64_t v10 = &v9[-*(int *)v9];
    if (*(unsigned __int16 *)v10 < 5u)
    {
      uint64_t v11 = 0;
    }
    else
    {
      uint64_t v11 = *((unsigned __int16 *)v10 + 2);
      if (v11) {
        v11 += (uint64_t)&v9[*(unsigned int *)&v9[v11]];
      }
    }
    uint64_t v12 = (int *)(v11 + 4 * WORD2(v7) + 4 + *(unsigned int *)(v11 + 4 * WORD2(v7) + 4));
  }
  else
  {
    uint64_t v12 = 0;
  }
  v33[0] = v8;
  v33[1] = v12;
  v33[2] = (int *)sub_2E5C38(v6, v7 & 0xFFFFFFFFFFFFLL, 1);
  v33[3] = v13;
  int v34 = v7;
  __int16 v35 = WORD2(v7);
  BOOL v36 = (v7 & 0xFF000000000000) != 0;
  uint64_t v14 = *(void *)a1;
  uint64_t v15 = *(void *)(*(void *)(a3 + 8) - 8);
  long long v16 = (int *)sub_2D5D58(*(void *)a1, v15 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v14 + 7772))
  {
    long long v17 = sub_2DB8E0(v14 + 3896, v15, 0);
    long long v18 = &v17[-*(int *)v17];
    if (*(unsigned __int16 *)v18 < 5u)
    {
      uint64_t v19 = 0;
    }
    else
    {
      uint64_t v19 = *((unsigned __int16 *)v18 + 2);
      if (v19) {
        v19 += (uint64_t)&v17[*(unsigned int *)&v17[v19]];
      }
    }
    long long v20 = (int *)(v19 + 4 * WORD2(v15) + 4 + *(unsigned int *)(v19 + 4 * WORD2(v15) + 4));
  }
  else
  {
    long long v20 = 0;
  }
  v29[0] = v16;
  v29[1] = v20;
  int v29[2] = (int *)sub_2E5C38(v14, v15 & 0xFFFFFFFFFFFFLL, 1);
  v29[3] = v21;
  int v30 = v15;
  __int16 v31 = WORD2(v15);
  BOOL v32 = (v15 & 0xFF000000000000) != 0;
  int v22 = *(_DWORD *)(a3 + 24);
  char v23 = sub_53EA04(a1, v33, v29);
  if (sub_699844(a1, v22, v23))
  {
    int v24 = *(_DWORD *)(a2 + 112);
    switch(v24)
    {
      case 0:
        uint64_t v26 = *(void *)(a2 + 104);
        int v39 = 0;
        long long v37 = 0u;
        long long v38 = 0u;
        __int16 v40 = -1;
        char v41 = 0;
        sub_699204((double *)a1, v33, (uint64_t *)(a2 + 80), v26, (uint64_t)&v37, a3 + 40);
        break;
      case 1:
      case 2:
        *(_DWORD *)(a3 + 64) = 0;
        if (v24 == 1) {
          uint64_t v25 = (double *)(a1 + 800);
        }
        else {
          uint64_t v25 = (double *)(a1 + 776);
        }
        LOBYTE(v37) = 0;
        sub_6D35E8(a3 + 40, v25, (char *)&v37);
        LOBYTE(v37) = 1;
        sub_6D35E8(a3 + 40, (double *)(a1 + 832), (char *)&v37);
        break;
      case 3:
        uint64_t v27 = *(void *)(a2 + 104);
        if (v27 != -1) {
          sub_699204((double *)a1, (int **)(a2 + 40), (uint64_t *)(a2 + 80), v27, a2, a3 + 40);
        }
        break;
      case 4:
        uint64_t v28 = *(void *)(a2 + 104);
        int v39 = 0;
        long long v37 = 0u;
        long long v38 = 0u;
        __int16 v40 = -1;
        char v41 = 0;
        sub_699204((double *)a1, (int **)a2, (uint64_t *)(a2 + 80), v28, (uint64_t)&v37, a3 + 40);
        break;
      case 5:
        sub_6A379C((double *)a1, a2, a3);
        break;
      case 6:
        sub_6A3874(a1, (int **)a2, a3);
        break;
      default:
        return;
    }
  }
}

BOOL sub_69115C(uint64_t a1, int **a2, int **a3, int a4)
{
  if (a4 == 3)
  {
    long long v8 = (unsigned __int16 *)((char *)*a2 - **a2);
    unsigned int v9 = *v8;
    if (*((unsigned char *)a2 + 38))
    {
      if (v9 >= 0x47)
      {
        unsigned int v10 = v8[35];
        if (v10)
        {
          int v11 = 2;
LABEL_24:
          BOOL v13 = (*(int *)((char *)*a2 + v10) & v11) != 0;
LABEL_26:
          uint64_t v14 = (char *)*a3;
          long long v18 = (unsigned __int16 *)((char *)*a3 - **a3);
          unsigned int v19 = *v18;
          if (!*((unsigned char *)a3 + 38))
          {
            if (v19 >= 0x47)
            {
              unsigned int v21 = v18[35];
              if (v21) {
                return v13 ^ ((*(_DWORD *)&v14[v21] & 1) != 0);
              }
            }
            return v13;
          }
          if (v19 < 0x47) {
            return v13;
          }
          unsigned int v17 = v18[35];
          if (!v17) {
            return v13;
          }
          return v13 ^ ((*(_DWORD *)&v14[v17] & 2) != 0);
        }
      }
    }
    else if (v9 >= 0x47)
    {
      unsigned int v10 = v8[35];
      if (v10)
      {
        int v11 = 1;
        goto LABEL_24;
      }
    }
    BOOL v13 = 0;
    goto LABEL_26;
  }
  if (a4) {
    return 0;
  }
  unint64_t v4 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v5 = *v4;
  if (*((unsigned char *)a2 + 38))
  {
    if (v5 >= 0xB)
    {
      unsigned int v6 = v4[5];
      if (v6)
      {
        int v7 = 2;
LABEL_15:
        BOOL v13 = (*(int *)((char *)*a2 + v6) & v7) != 0;
        goto LABEL_17;
      }
    }
  }
  else if (v5 >= 0xB)
  {
    unsigned int v6 = v4[5];
    if (v6)
    {
      int v7 = 1;
      goto LABEL_15;
    }
  }
  BOOL v13 = 0;
LABEL_17:
  uint64_t v14 = (char *)*a3;
  uint64_t v15 = (unsigned __int16 *)((char *)*a3 - **a3);
  unsigned int v16 = *v15;
  if (!*((unsigned char *)a3 + 38))
  {
    if (v16 >= 0xB)
    {
      unsigned int v20 = v15[5];
      if (v20) {
        return v13 ^ ((*(_DWORD *)&v14[v20] & 1) != 0);
      }
    }
    return v13;
  }
  if (v16 >= 0xB)
  {
    unsigned int v17 = v15[5];
    if (v17) {
      return v13 ^ ((*(_DWORD *)&v14[v17] & 2) != 0);
    }
  }
  return v13;
}

void sub_6912D4(uint64_t a1, void *a2)
{
  uint64_t v2 = a2[1245] - a2[1244];
  if (v2)
  {
    uint64_t v4 = a1;
    unint64_t v5 = 0;
    unsigned int v6 = a2 + 1244;
    unint64_t v7 = 0xAAAAAAAAAAAAAAABLL * (v2 >> 6);
    unint64_t v122 = v7;
    do
    {
      uint64_t v9 = sub_68F6BC(v6, v5);
      if (*(void *)v9 != *(void *)(v9 + 8) && *(unsigned char *)(v9 + 184) == 0)
      {
        uint64_t v11 = v9;
        uint64_t v12 = *(void *)(v4 + 696);
        BOOL v13 = (void *)sub_68F6BC(v6, v5);
        unint64_t v8 = v5 + 1;
        unint64_t v14 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[1245] - a2[1244]) >> 6);
        if (v5 + 1 > v14) {
          unint64_t v15 = v5 + 1;
        }
        else {
          unint64_t v15 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[1245] - a2[1244]) >> 6);
        }
        if (v5 + 1 >= v14)
        {
          unint64_t v21 = -1;
        }
        else
        {
          uint64_t v16 = v13[4] + ((uint64_t)(v13[1] - *v13) >> 3) - 1;
          unint64_t v17 = v5 + 1;
          while (1)
          {
            uint64_t v18 = sub_68F6BC(v6, v17);
            if (*(void *)v18 != *(void *)(v18 + 8) && *(_DWORD *)(v18 + 24) != 0) {
              break;
            }
            if (v15 == ++v17)
            {
              unint64_t v21 = -1;
              goto LABEL_25;
            }
          }
          if (sub_46CE10(a2, v16, 1, *(void *)(v18 + 32), 1u, v19) > v12) {
            unint64_t v21 = -1;
          }
          else {
            unint64_t v21 = v17;
          }
LABEL_25:
          unint64_t v7 = v122;
        }
        v22.i64[0] = -1;
        v22.i64[1] = -1;
        if ((vmaxv_u16((uint16x4_t)vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)(v11 + 72), v22), (int32x4_t)vceqq_s64(*(int64x2_t *)(v11 + 88), v22))))) & 1) == 0&& (*(void *)(v11 + 104) & *(void *)(v11 + 112)) == -1&& *(void *)(v11 + 120) == -1&& (v21 == -1|| (uint64_t v23 = sub_68F6BC(v6, v21), v24.i64[0] = -1, v24.i64[1] = -1, (vmaxv_u16((uint16x4_t)vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)(v23 + 72), v24), (int32x4_t)vceqq_s64(*(int64x2_t *)(v23 + 88), v24))))) & 1) == 0)
           && (*(void *)(v23 + 104) & *(void *)(v23 + 112)) == -1
           && *(void *)(v23 + 120) == -1))
        {
          switch(*(_DWORD *)(v11 + 24))
          {
            case 3:
              if (*(unsigned __int8 *)(v11 + 168) | *(unsigned __int8 *)(v11 + 169)) {
                goto LABEL_99;
              }
              goto LABEL_35;
            case 5:
              uint64_t v36 = a2[63];
              int v37 = *(unsigned __int8 *)(a1 + 656);
              uint64_t v38 = sub_68F6BC(v6, v5);
              unint64_t v39 = v5;
              while (v39)
              {
                uint64_t v40 = sub_68F6BC(v6, --v39);
                uint64_t v42 = *(void *)(v40 + 8);
                if (*(void *)v40 != v42 && *(_DWORD *)(v40 + 24) != 0)
                {
                  uint64_t v44 = *(void *)(v40 + 32);
                  if (v37) {
                    uint64_t v45 = v44 + 1;
                  }
                  else {
                    uint64_t v45 = v44 + ((v42 - *(void *)v40) >> 3) - 1;
                  }
                  if (sub_46CE10(a2, v45, 1, *(void *)(v38 + 32), 1u, v41) <= v36
                    && *(_DWORD *)(sub_68F6BC(v6, v39) + 24) == 5)
                  {
                    goto LABEL_98;
                  }
                  goto LABEL_99;
                }
              }
              goto LABEL_99;
            case 0xC:
LABEL_35:
              uint64_t v25 = *(void *)(a1 + 632);
              int v26 = *(unsigned __int8 *)(a1 + 656);
              uint64_t v27 = sub_68F6BC(v6, v5);
              unint64_t v28 = v5;
              do
              {
                if (!v28)
                {
                  unint64_t v35 = -1;
                  goto LABEL_83;
                }
                uint64_t v29 = sub_68F6BC(v6, --v28);
                uint64_t v31 = *(void *)(v29 + 8);
              }
              while (*(void *)v29 == v31 || *(_DWORD *)(v29 + 24) == 0);
              uint64_t v33 = *(void *)(v29 + 32);
              if (v26) {
                uint64_t v34 = v33 + 1;
              }
              else {
                uint64_t v34 = v33 + ((v31 - *(void *)v29) >> 3) - 1;
              }
              if (sub_46CE10(a2, v34, 1, *(void *)(v27 + 32), 1u, v30) > v25) {
                unint64_t v35 = -1;
              }
              else {
                unint64_t v35 = v28;
              }
LABEL_83:
              uint64_t v68 = *(void *)(a1 + 624);
              BOOL v69 = (void *)sub_68F6BC(v6, v5);
              unint64_t v70 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[1245] - a2[1244]) >> 6);
              BOOL v71 = v8 >= v70;
              if (v8 > v70) {
                unint64_t v70 = v5 + 1;
              }
              if (v71)
              {
LABEL_93:
                int v79 = 0;
                unint64_t v80 = -1;
              }
              else
              {
                uint64_t v120 = v68;
                uint64_t v72 = v69[4] + ((uint64_t)(v69[1] - *v69) >> 3) - 1;
                unint64_t v73 = v70 - 1;
                unint64_t v74 = v5;
                while (1)
                {
                  unint64_t v75 = v74 + 1;
                  uint64_t v76 = sub_68F6BC(v6, v74 + 1);
                  if (*(void *)v76 != *(void *)(v76 + 8) && *(_DWORD *)(v76 + 24) != 0) {
                    break;
                  }
                  ++v74;
                  if (v73 == v75) {
                    goto LABEL_93;
                  }
                }
                uint64_t v110 = sub_46CE10(a2, v72, 1, *(void *)(v76 + 32), 1u, v77);
                int v79 = 0;
                unint64_t v80 = -1;
                if (v74 != -2 && v110 <= v120)
                {
                  unint64_t v7 = v122;
                  if (*(unsigned char *)(sub_68F6BC(v6, v74 + 1) + 190))
                  {
                    uint64_t v4 = a1;
                    goto LABEL_3;
                  }
                  int v79 = 1;
                  unint64_t v80 = v74 + 1;
                }
              }
              if (v35 != -1)
              {
                int v81 = (void *)sub_68F6BC(v6, v35);
                if (*v81 != v81[1]) {
                  goto LABEL_98;
                }
              }
              if (v79)
              {
                unint64_t v82 = (void *)sub_68F6BC(v6, v80);
                if (*v82 != v82[1]) {
                  goto LABEL_98;
                }
              }
              goto LABEL_99;
            case 0x14:
              uint64_t v46 = *(void *)(a1 + 584);
              int v47 = (void *)sub_68F6BC(v6, v5);
              unint64_t v48 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[1245] - a2[1244]) >> 6);
              BOOL v49 = v8 >= v48;
              if (v8 > v48) {
                unint64_t v48 = v5 + 1;
              }
              if (v49) {
                goto LABEL_99;
              }
              uint64_t v50 = v47[4] + ((uint64_t)(v47[1] - *v47) >> 3) - 1;
              unint64_t v51 = v48 - 1;
              unint64_t v52 = v5;
              while (1)
              {
                unint64_t v53 = v52 + 1;
                uint64_t v54 = sub_68F6BC(v6, v52 + 1);
                if (*(void *)v54 != *(void *)(v54 + 8) && *(_DWORD *)(v54 + 24) != 0) {
                  break;
                }
                ++v52;
                if (v51 == v53) {
                  goto LABEL_99;
                }
              }
              uint64_t v111 = sub_46CE10(a2, v50, 1, *(void *)(v54 + 32), 1u, v55);
              if (v52 == -2 || v111 > v46 || *(_DWORD *)(sub_68F6BC(v6, v52 + 1) + 24) != 1) {
                goto LABEL_99;
              }
              goto LABEL_98;
            case 0x15:
              uint64_t v57 = *(void *)(a1 + 584);
              double v58 = (void *)sub_68F6BC(v6, v5);
              unint64_t v59 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[1245] - a2[1244]) >> 6);
              BOOL v60 = v8 >= v59;
              if (v8 > v59) {
                unint64_t v59 = v5 + 1;
              }
              if (v60) {
                goto LABEL_99;
              }
              uint64_t v61 = v58[4] + ((uint64_t)(v58[1] - *v58) >> 3) - 1;
              unint64_t v62 = v59 - 1;
              unint64_t v63 = v5;
              break;
            default:
              goto LABEL_99;
          }
          while (1)
          {
            unint64_t v64 = v63 + 1;
            uint64_t v65 = sub_68F6BC(v6, v63 + 1);
            if (*(void *)v65 != *(void *)(v65 + 8) && *(_DWORD *)(v65 + 24) != 0) {
              break;
            }
            ++v63;
            if (v62 == v64) {
              goto LABEL_99;
            }
          }
          uint64_t v112 = sub_46CE10(a2, v61, 1, *(void *)(v65 + 32), 1u, v66);
          if (v63 != -2 && v112 <= v57 && *(_DWORD *)(sub_68F6BC(v6, v63 + 1) + 24) == 2) {
LABEL_98:
          }
            *(_DWORD *)(v11 + 24) = 0;
LABEL_99:
          uint64_t v83 = *(void *)(a1 + 640);
          uint64_t v84 = (void *)sub_68F6BC(v6, v5);
          unint64_t v85 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[1245] - a2[1244]) >> 6);
          BOOL v86 = v8 >= v85;
          if (v8 > v85) {
            unint64_t v85 = v5 + 1;
          }
          if (!v86)
          {
            uint64_t v87 = v84[4] + ((uint64_t)(v84[1] - *v84) >> 3) - 1;
            unint64_t v88 = v85 - 1;
            unint64_t v89 = v5;
            while (1)
            {
              unint64_t v90 = v89 + 1;
              uint64_t v91 = sub_68F6BC(v6, v89 + 1);
              if (*(void *)v91 != *(void *)(v91 + 8) && *(_DWORD *)(v91 + 24) != 0) {
                break;
              }
              ++v89;
              if (v88 == v90) {
                goto LABEL_114;
              }
            }
            uint64_t v94 = sub_46CE10(a2, v87, 1, *(void *)(v91 + 32), 1u, v92);
            if (v89 != -2 && v94 <= v83)
            {
              uint64_t v95 = sub_68F6BC(v6, v89 + 1);
              if (sub_6925F0((uint64_t *)a1, v11, v95))
              {
                *(_DWORD *)(v11 + 24) = 0;
                *(_DWORD *)(sub_68F6BC(v6, v89 + 1) + 24) = 0;
              }
            }
          }
LABEL_114:
          unint64_t v7 = v122;
          uint64_t v4 = a1;
          switch(*(_DWORD *)(v11 + 24))
          {
            case 1:
            case 2:
            case 3:
            case 0x14:
            case 0x15:
            case 0x1B:
            case 0x1C:
            case 0x1D:
            case 0x1E:
            case 0x21:
            case 0x22:
            case 0x3C:
            case 0x3D:
            case 0x3E:
            case 0x3F:
            case 0x41:
            case 0x42:
              if (!*(unsigned char *)(v11 + 168))
              {
                uint64_t v96 = *(void *)(a1 + 648);
                uint64_t v97 = sub_68F6BC(v6, v5);
                unint64_t v98 = v5;
                do
                {
                  if (!v98) {
                    goto LABEL_158;
                  }
                  uint64_t v99 = sub_68F6BC(v6, --v98);
                  uint64_t v101 = *(void *)(v99 + 8);
                }
                while (*(void *)v99 == v101 || *(_DWORD *)(v99 + 24) == 0);
                if (sub_46CE10(a2, *(void *)(v99 + 32) + ((v101 - *(void *)v99) >> 3) - 1, 1, *(void *)(v97 + 32), 1u, v100) > v96)goto LABEL_158; {
                uint64_t v103 = sub_68F6BC(v6, v98);
                }
                v104.i64[0] = *(void *)(v103 + 120);
                v104.i64[1] = *(void *)(v11 + 72);
                v105.i64[0] = -1;
                v105.i64[1] = -1;
                if (vmaxv_u8((uint8x8_t)vmovn_s16((int16x8_t)vmvnq_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)(v103 + 72), v105), (int32x4_t)vceqq_s64(*(int64x2_t *)(v103 + 88), v105)), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)(v103 + 104), v105), (int32x4_t)vceqq_s64(v104, v105)))))))goto LABEL_158; {
                BOOL v107 = (vaddvq_s32((int32x4_t)vbicq_s8((int8x16_t)xmmword_20B8880, (int8x16_t)vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)(v11 + 80), v105), (int32x4_t)vceqq_s64(*(int64x2_t *)(v11 + 96), v105)))) & 0xF) == 0&& *(void *)(v11 + 112) == -1&& *(void *)(v11 + 120) == -1;
                }
                unint64_t v7 = v122;
                if (v107)
                {
                  int v108 = *(_DWORD *)(v103 + 24);
                  switch(v108)
                  {
                    case 1:
                    case 20:
                    case 27:
                    case 29:
                    case 33:
                    case 60:
                    case 62:
                    case 65:
                      int v109 = *(_DWORD *)(v11 + 24);
                      switch(v109)
                      {
                        case 1:
                        case 20:
                        case 27:
                        case 29:
                        case 33:
                        case 60:
                        case 62:
                        case 65:
                          goto LABEL_147;
                        default:
                          goto LABEL_161;
                      }
                    case 2:
                    case 21:
                    case 28:
                    case 30:
                    case 34:
                    case 61:
                    case 63:
                    case 66:
                      int v109 = *(_DWORD *)(v11 + 24);
                      switch(v109)
                      {
                        case 2:
                        case 21:
                        case 28:
                        case 30:
                        case 34:
                        case 61:
                        case 63:
                        case 66:
                          goto LABEL_147;
                        default:
                          goto LABEL_161;
                      }
                    default:
                      int v109 = *(_DWORD *)(v11 + 24);
LABEL_161:
                      if ((v108 - 41) >= 0x13 && v109 != 3) {
                        goto LABEL_3;
                      }
LABEL_147:
                      uint64_t v113 = *(void *)(*(void *)(v11 + 8) - 8);
                      if (!v113) {
                        goto LABEL_158;
                      }
                      uint64_t v114 = *(void *)(*(void *)(v103 + 8) - 8);
                      if (!v114) {
                        goto LABEL_157;
                      }
                      unint64_t v115 = sub_2E68E8(*(void *)a1, v113);
                      if (v115 > 0xFFFFFFFEFFFFFFFFLL || !v115) {
                        goto LABEL_157;
                      }
                      uint64_t v116 = *(void *)a1;
                      unint64_t v121 = v113 & 0xFFFFFFFFFFFFLL;
                      sub_2D5D58(*(void *)a1, v113 & 0xFFFFFFFFFFFFLL);
                      if (*(unsigned char *)(v116 + 7772)) {
                        sub_2DB8E0(v116 + 3896, v113, 0);
                      }
                      sub_2E5C38(v116, v121, 1);
                      uint64_t v117 = *(void *)a1;
                      sub_2D5D58(*(void *)a1, v114 & 0xFFFFFFFFFFFFLL);
                      if (*(unsigned char *)(v117 + 7772)) {
                        sub_2DB8E0(v117 + 3896, v114, 0);
                      }
                      sub_2E5C38(v117, v114 & 0xFFFFFFFFFFFFLL, 1);
                      unint64_t v118 = v118 & 0xFF00000000000000 | ((unint64_t)((v114 & 0xFF000000000000) != 0) << 48) | v114 & 0xFFFFFFFFFFFFLL;
                      unint64_t v119 = v119 & 0xFF00000000000000 | ((unint64_t)((v113 & 0xFF000000000000) != 0) << 48) | v121;
                      if (!sub_2E79EC(v116, v119, v118)) {
                        goto LABEL_157;
                      }
                      uint64_t v4 = a1;
                      sub_692E60(a1, (uint64_t)a2, v98, v5);
                      break;
                  }
                  goto LABEL_158;
                }
              }
              break;
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 0xA:
            case 0xB:
            case 0xC:
            case 0xD:
            case 0xE:
            case 0xF:
            case 0x10:
            case 0x11:
            case 0x12:
            case 0x13:
            case 0x16:
            case 0x17:
            case 0x18:
            case 0x19:
            case 0x1A:
            case 0x1F:
            case 0x20:
            case 0x23:
            case 0x24:
            case 0x25:
            case 0x26:
            case 0x27:
            case 0x28:
            case 0x29:
            case 0x2A:
            case 0x2B:
            case 0x2C:
            case 0x2D:
            case 0x2E:
            case 0x2F:
            case 0x30:
            case 0x31:
            case 0x32:
            case 0x33:
            case 0x34:
            case 0x35:
            case 0x36:
            case 0x37:
            case 0x38:
            case 0x39:
            case 0x3A:
            case 0x3B:
            case 0x40:
              break;
            default:
LABEL_157:
              uint64_t v4 = a1;
LABEL_158:
              unint64_t v7 = v122;
              break;
          }
        }
        else
        {
          sub_692294(v4, a2, v5);
        }
      }
      else
      {
        unint64_t v8 = v5 + 1;
      }
LABEL_3:
      unint64_t v5 = v8;
    }
    while (v8 != v7);
  }
}

uint64_t sub_6921A0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X8>)
{
  unint64_t v10 = HIDWORD(a2);
  unint64_t v11 = a2 & 0xFFFFFFFFFFFFLL;
  uint64_t v12 = sub_2D5D58(a1, a2 & 0xFFFFFFFFFFFFLL);
  if (a3 && *(unsigned char *)(a1 + 7772))
  {
    BOOL v13 = sub_2DB8E0(a1 + 3896, a2, 0);
    unint64_t v14 = &v13[-*(int *)v13];
    if (*(unsigned __int16 *)v14 < 5u)
    {
      uint64_t v15 = 0;
    }
    else
    {
      uint64_t v15 = *((unsigned __int16 *)v14 + 2);
      if (v15) {
        v15 += (uint64_t)&v13[*(unsigned int *)&v13[v15]];
      }
    }
    uint64_t v16 = v15 + 4 * (unsigned __int16)v10 + 4 + *(unsigned int *)(v15 + 4 * (unsigned __int16)v10 + 4);
  }
  else
  {
    uint64_t v16 = 0;
  }
  uint64_t result = sub_2E5C38(a1, v11, a4);
  *(void *)a5 = v12;
  *(void *)(a5 + 8) = v16;
  *(void *)(a5 + 16) = result;
  *(void *)(a5 + 24) = v18;
  *(_DWORD *)(a5 + 32) = a2;
  *(_WORD *)(a5 + 36) = v10;
  *(unsigned char *)(a5 + 38) = (a2 & 0xFF000000000000) != 0;
  return result;
}

uint64_t sub_692294(uint64_t a1, void *a2, unint64_t a3)
{
  unint64_t v3 = a3;
  unsigned int v6 = a2 + 1244;
  uint64_t result = sub_68F6BC(a2 + 1244, a3);
  if (*(void *)(result + 112) != -1) {
    return result;
  }
  unint64_t v8 = (int64x2_t *)result;
  uint64_t v9 = result + 72;
  uint64_t v10 = *(void *)(a1 + 696);
  unint64_t v11 = (void *)sub_68F6BC(v6, v3);
  unint64_t v12 = v3 + 1;
  unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[1245] - a2[1244]) >> 6);
  if (v3 + 1 > v13) {
    unint64_t v14 = v3 + 1;
  }
  else {
    unint64_t v14 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[1245] - a2[1244]) >> 6);
  }
  if (v3 + 1 >= v13)
  {
LABEL_14:
    unint64_t v12 = -1;
    if (*(void *)v9 == -1) {
      goto LABEL_19;
    }
LABEL_33:
    if (v8[6].i64[0] == -1 && v8[6].i64[1] == -1 && v12 != -1)
    {
      uint64_t v28 = sub_68F6BC(v6, v12);
      if (*(void *)(v28 + 96) != -1 || *(void *)(v28 + 104) != -1)
      {
        uint64_t v29 = (void *)sub_68F6BC(v6, v12);
        v8[6].i64[0] = v29[12];
        v8[6].i64[1] = v29[13];
        v8[8].i64[1] = v29[17];
      }
    }
    goto LABEL_43;
  }
  uint64_t v15 = v11[4] + ((uint64_t)(v11[1] - *v11) >> 3) - 1;
  while (1)
  {
    uint64_t v16 = sub_68F6BC(v6, v12);
    if (*(void *)v16 != *(void *)(v16 + 8) && *(_DWORD *)(v16 + 24) != 0) {
      break;
    }
    if (v14 == ++v12) {
      goto LABEL_14;
    }
  }
  if (sub_46CE10(a2, v15, 1, *(void *)(v16 + 32), 1u, v17) > v10) {
    unint64_t v12 = -1;
  }
  if (*(void *)v9 != -1) {
    goto LABEL_33;
  }
LABEL_19:
  BOOL v19 = 0;
  v20.i64[0] = -1;
  v20.i64[1] = -1;
  uint64_t v21 = v8[5].i64[1];
  if (vmaxv_u16((uint16x4_t)vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqq_s64(v8[5], v20), (int32x4_t)vceqq_s64(v8[6], v20))))))goto LABEL_28; {
  if (v8[7].i64[0] != -1)
  }
    goto LABEL_28;
  BOOL v19 = 0;
  uint64_t v21 = -1;
  if (v8[7].i64[1] != -1 || v8[10].i8[8] || v12 == -1) {
    goto LABEL_28;
  }
  uint64_t v22 = sub_68F6BC(v6, v12);
  v23.i64[0] = *(void *)(v22 + 88);
  v23.i64[1] = *(void *)(v22 + 120);
  v24.i64[0] = -1;
  v24.i64[1] = -1;
  if ((vmaxv_u16((uint16x4_t)vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqq_s64((int64x2_t)vextq_s8(*(int8x16_t *)(v22 + 72), *(int8x16_t *)(v22 + 72), 8uLL), v24), (int32x4_t)vceqq_s64(v23, v24))))) & 1) == 0&& *(void *)(v22 + 96) == -1&& *(void *)(v22 + 104) == -1)
  {
    uint64_t v21 = v8[5].i64[1];
    BOOL v19 = v8[4].i64[1] != -1;
LABEL_28:
    if (!v19 && v21 == -1 && v8[7].i64[1] == -1) {
      goto LABEL_43;
    }
    goto LABEL_33;
  }
  if (sub_6EC34C(a1 + 5944, (uint64_t)v8))
  {
    uint64_t v39 = sub_68F6BC(v6, v12);
    *(_OWORD *)uint64_t v9 = *(_OWORD *)(v39 + 72);
    long long v40 = *(_OWORD *)(v39 + 104);
    long long v41 = *(_OWORD *)(v39 + 120);
    long long v42 = *(_OWORD *)(v39 + 88);
    *(_OWORD *)(v9 + 60) = *(_OWORD *)(v39 + 132);
    *(_OWORD *)(v9 + 32) = v40;
    *(_OWORD *)(v9 + 48) = v41;
    *(_OWORD *)(v9 + 16) = v42;
    sub_6EC4C0(a1 + 5944, (uint64_t)v8);
  }
LABEL_43:
  uint64_t v30 = *(void *)(a1 + 696);
  int v31 = *(unsigned __int8 *)(a1 + 656);
  uint64_t result = sub_68F6BC(v6, v3);
  uint64_t v32 = result;
  while (v3)
  {
    uint64_t result = sub_68F6BC(v6, --v3);
    uint64_t v34 = *(void *)(result + 8);
    if (*(void *)result != v34 && *(_DWORD *)(result + 24) != 0)
    {
      uint64_t v36 = *(void *)(result + 32);
      if (v31) {
        uint64_t v37 = v36 + 1;
      }
      else {
        uint64_t v37 = v36 + ((v34 - *(void *)result) >> 3) - 1;
      }
      uint64_t result = sub_46CE10(a2, v37, 1, *(void *)(v32 + 32), 1u, v33);
      if (result <= v30)
      {
        uint64_t v38 = sub_68F6BC(v6, v3);
        uint64_t result = sub_6A244C(v9, v38 + 72);
        if (result) {
          v8[1].i32[2] = 0;
        }
      }
      return result;
    }
  }
  return result;
}

uint64_t sub_6925F0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(a2 + 168)) {
    return 0;
  }
  uint64_t v3 = 0;
  switch(*(_DWORD *)(a2 + 24))
  {
    case 1:
    case 2:
    case 0x14:
    case 0x15:
    case 0x1B:
    case 0x1C:
    case 0x1D:
    case 0x1E:
    case 0x21:
    case 0x22:
    case 0x3C:
    case 0x3D:
    case 0x3E:
    case 0x3F:
    case 0x41:
    case 0x42:
      switch(*(_DWORD *)(a2 + 24))
      {
        case 1:
        case 0x14:
        case 0x1B:
        case 0x1D:
        case 0x21:
        case 0x3C:
        case 0x3E:
        case 0x41:
          uint64_t v3 = 0;
          switch(*(_DWORD *)(a3 + 24))
          {
            case 2:
            case 0x15:
            case 0x1C:
            case 0x1E:
            case 0x22:
            case 0x3D:
            case 0x3F:
            case 0x42:
              goto LABEL_7;
            default:
              return v3;
          }
        default:
          uint64_t v3 = 0;
          switch(*(_DWORD *)(a3 + 24))
          {
            case 1:
            case 0x14:
            case 0x1B:
            case 0x1D:
            case 0x21:
            case 0x3C:
            case 0x3E:
            case 0x41:
LABEL_7:
              if (*(void *)a2 == *(void *)(a2 + 8)) {
                return 0;
              }
              uint64_t v8 = *(void *)(a3 + 8);
              if (*(void *)a3 == v8) {
                return 0;
              }
              unint64_t v9 = **(void **)a2;
              unint64_t v10 = *(void *)(v8 - 8);
              uint64_t v11 = *a1;
              unint64_t v30 = v10 & 0xFFFFFFFFFFFFLL;
              unint64_t v12 = (int *)sub_2D5D58(*a1, v10 & 0xFFFFFFFFFFFFLL);
              if (*(unsigned char *)(v11 + 7772))
              {
                unint64_t v13 = sub_2DB8E0(v11 + 3896, v10, 0);
                unint64_t v14 = &v13[-*(int *)v13];
                if (*(unsigned __int16 *)v14 < 5u)
                {
                  uint64_t v15 = 0;
                }
                else
                {
                  uint64_t v15 = *((unsigned __int16 *)v14 + 2);
                  if (v15) {
                    v15 += (uint64_t)&v13[*(unsigned int *)&v13[v15]];
                  }
                }
                uint64_t v16 = v15 + 4 * WORD2(v10) + 4 + *(unsigned int *)(v15 + 4 * WORD2(v10) + 4);
              }
              else
              {
                uint64_t v16 = 0;
              }
              uint64_t v34 = v12;
              v35[0] = v16;
              v35[1] = sub_2E5C38(v11, v30, 1);
              v35[2] = v17;
              int v36 = v10;
              __int16 v37 = WORD2(v10);
              BOOL v38 = (v10 & 0xFF000000000000) != 0;
              if (!sub_6D855C((uint64_t)(a1 + 145), &v34)) {
                return 0;
              }
              sub_6921A0(*a1, v9, 1, 1, (uint64_t)v40);
              sub_6921A0(*a1, v10, 1, 1, (uint64_t)v39);
              if (sub_693F58(v40))
              {
                if (!sub_693F58(v39) && !sub_693FBC(v39)) {
                  return 0;
                }
              }
              else
              {
                BOOL v18 = sub_693FBC(v40);
                if (sub_693F58(v39))
                {
                  if (!v18) {
                    return 0;
                  }
                }
                else if (v18 != sub_693FBC(v39))
                {
                  return 0;
                }
              }
              sub_58E730(*a1, v9, 1u, &v32);
              sub_694020((uint64_t *)&v32, (uint64_t)&v34);
              sub_53BD98(&v32);
              sub_58E730(*a1, v10, 1u, v31);
              sub_694020((uint64_t *)v31, (uint64_t)&v32);
              sub_53BD98(v31);
              if (!sub_2DE448((uint64_t)&v34)) {
                goto LABEL_41;
              }
              if (!sub_2DE448((uint64_t)&v32)) {
                goto LABEL_41;
              }
              if (sub_69412C((unsigned __int8 *)v35, v33)) {
                goto LABEL_41;
              }
              int v19 = sub_6941D4(*a1, v9 & 0xFFFFFFFFFFFFLL);
              if (v19 != sub_6941D4(*a1, v30)) {
                goto LABEL_41;
              }
              uint64_t v20 = *(void *)(a2 + 176);
              uint64_t v21 = *(unint64_t **)a2;
              uint64_t v22 = (uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 3;
              v31[0] = a1;
              if (v20 + 1 == v22)
              {
LABEL_34:
                uint64_t v25 = *(void *)(a3 + 176);
                int v26 = *(uint64_t **)a3;
                v31[0] = a1;
                if (v25)
                {
                  uint64_t v27 = 8 * v25 - 8;
                  do
                  {
                    unint64_t v28 = sub_6C877C((uint64_t **)v31, v26);
                    uint64_t v3 = v28;
                    ++v26;
                    if (v27) {
                      char v29 = v28;
                    }
                    else {
                      char v29 = 0;
                    }
                    v27 -= 8;
                  }
                  while ((v29 & 1) != 0);
                }
                else
                {
                  uint64_t v3 = 1;
                }
              }
              else
              {
                int64x2_t v23 = (uint64_t *)&v21[v20 + 1];
                uint64_t v24 = 8 * v22 - 8 * v20 - 8;
                while ((sub_6C877C((uint64_t **)v31, v23) & 1) != 0)
                {
                  ++v23;
                  v24 -= 8;
                  if (!v24) {
                    goto LABEL_34;
                  }
                }
LABEL_41:
                uint64_t v3 = 0;
              }
              sub_2DF404((uint64_t)&v32);
              sub_2DF404((uint64_t)&v34);
              break;
            default:
              return v3;
          }
          break;
      }
      break;
    default:
      return v3;
  }
  return v3;
}

void sub_6929E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
}

void sub_692E60(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 9960) - *(void *)(a2 + 9952)) >> 6);
  if (v4 <= a3 || v4 <= a4) {
    return;
  }
  unint64_t v10 = (void *)(a2 + 9952);
  uint64_t v11 = sub_68F6BC((void *)(a2 + 9952), a3);
  uint64_t v12 = sub_68F6BC(v10, a4);
  if (*(void *)v11 == *(void *)(v11 + 8)) {
    return;
  }
  uint64_t v13 = v12;
  if (*(void *)v12 == *(void *)(v12 + 8)) {
    return;
  }
  if (!*(_DWORD *)(v11 + 24) || *(_DWORD *)(v12 + 24) == 0) {
    return;
  }
  sub_594714((uint64_t)&v38, v11);
  sub_693300((uint64_t)&v38, v13);
  long long __p = 0;
  int v36 = 0;
  uint64_t v37 = 0;
  unint64_t v15 = a3 + 1;
  unint64_t v34 = a3 + 1;
  if (a3 + 1 >= a4)
  {
LABEL_23:
    sub_46B058();
    int64x2_t v23 = v22;
    uint64_t v25 = v24;
    uint64_t v26 = *(void *)(v11 + 32);
    uint64_t v28 = *(void *)v11;
    uint64_t v27 = *(void *)(v11 + 8);
    sub_46B058();
    sub_693530(v23, v25 + v26 + ((v27 - v28) >> 3) - 1, v30, *(void *)(v13 + 32) + v29 + ((uint64_t)(*(void *)(v13 + 8) - *(void *)v13) >> 3), (char **)&v38);
    sub_30361C((uint64_t)&v38);
    int v31 = *(_DWORD *)(v11 + 24);
    if ((v31 - 6) >= 2 && (v31 - 86) >= 2 && (v31 - 41) >= 0x13)
    {
      switch(v31)
      {
        case 7:
        case 11:
        case 22:
        case 23:
        case 24:
        case 29:
        case 30:
        case 64:
        case 65:
        case 66:
        case 86:
        case 87:
          break;
        default:
          int v40 = sub_693690(a1, (uint64_t **)v11, (uint64_t **)v13);
          sub_693A7C((unint64_t *)(v11 + 40), v13 + 40, (uint64_t *)&v32);
          if (v41[0])
          {
            v41[1] = v41[0];
            operator delete(v41[0]);
          }
          *(_OWORD *)long long v41 = v32;
          uint64_t v42 = v33;
          break;
      }
    }
    sub_693BFC(v11, (uint64_t)&v38);
    sub_693CB0(v13);
    *(void *)&long long v32 = a2;
    sub_693D10((unint64_t **)&__p, &v32);
    goto LABEL_28;
  }
  while (1)
  {
    uint64_t v16 = sub_68F6BC(v10, v15);
    unint64_t v17 = *(void *)v16;
    BOOL v18 = *(char **)(v16 + 8);
    if (*(_DWORD *)(v16 + 24)) {
      break;
    }
    uint64_t v19 = (uint64_t)&v18[-v17];
LABEL_22:
    sub_3455C4((uint64_t)&v38, *(uint64_t *)v39, v17, v18, v19 >> 3);
    sub_A4710((uint64_t)&__p, &v34);
    unint64_t v15 = v34 + 1;
    unint64_t v34 = v15;
    if (v15 >= a4) {
      goto LABEL_23;
    }
  }
  uint64_t v19 = (uint64_t)&v18[-v17];
  uint64_t v20 = *(uint64_t **)v13;
  if (&v18[-v17] != (char *)(*(void *)(v13 + 8) - *(void *)v13)) {
    goto LABEL_28;
  }
  if ((char *)v17 == v18) {
    goto LABEL_22;
  }
  uint64_t v21 = *(char **)v16;
  while (__PAIR64__(*((unsigned __int16 *)v21 + 2), *(_DWORD *)v21) == __PAIR64__((unsigned __int16)WORD2(*v20), *v20)
       && (HIWORD(*v20) & 1) != (v21[6] == 0))
  {
    ++v20;
    v21 += 8;
    if (v21 == v18) {
      goto LABEL_22;
    }
  }
LABEL_28:
  if (__p)
  {
    int v36 = __p;
    operator delete(__p);
  }
  if (v41[0])
  {
    v41[1] = v41[0];
    operator delete(v41[0]);
  }
  if (v38)
  {
    *(void *)uint64_t v39 = v38;
    operator delete(v38);
  }
}

void sub_693168(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, uint64_t a16, char a17)
{
  if (__p) {
    operator delete(__p);
  }
  sub_592058((uint64_t)&a17);
  _Unwind_Resume(a1);
}

uint64_t sub_693300(uint64_t result, uint64_t a2)
{
  *(unsigned char *)(result + 168) = (*(unsigned __int8 *)(result + 168) | *(unsigned __int8 *)(a2 + 168)) != 0;
  *(unsigned char *)(result + 169) = (*(unsigned __int8 *)(result + 169) | *(unsigned __int8 *)(a2 + 169)) != 0;
  *(unsigned char *)(result + 170) = (*(unsigned __int8 *)(result + 170) | *(unsigned __int8 *)(a2 + 170)) != 0;
  *(unsigned char *)(result + 184) = (*(unsigned __int8 *)(result + 184) | *(unsigned __int8 *)(a2 + 184)) != 0;
  *(unsigned char *)(result + 185) = (*(unsigned __int8 *)(result + 185) | *(unsigned __int8 *)(a2 + 185)) != 0;
  *(unsigned char *)(result + 186) = (*(unsigned __int8 *)(result + 186) | *(unsigned __int8 *)(a2 + 186)) != 0;
  *(unsigned char *)(result + 187) = (*(unsigned __int8 *)(result + 187) | *(unsigned __int8 *)(a2 + 187)) != 0;
  *(unsigned char *)(result + 188) = (*(unsigned __int8 *)(result + 188) | *(unsigned __int8 *)(a2 + 188)) != 0;
  *(unsigned char *)(result + 189) = (*(unsigned __int8 *)(result + 189) | *(unsigned __int8 *)(a2 + 189)) != 0;
  *(unsigned char *)(result + 190) = (*(unsigned __int8 *)(result + 190) | *(unsigned __int8 *)(a2 + 190)) != 0;
  unint64_t v2 = *(void *)(a2 + 72);
  unint64_t v3 = *(void *)(result + 72);
  unint64_t v4 = *(void *)(result + 80);
  if (v3 <= v2) {
    unint64_t v5 = *(void *)(a2 + 72);
  }
  else {
    unint64_t v5 = *(void *)(result + 72);
  }
  if (v2 == -1) {
    unint64_t v5 = *(void *)(result + 72);
  }
  if (v3 != -1) {
    unint64_t v2 = v5;
  }
  *(void *)(result + 72) = v2;
  unint64_t v6 = *(void *)(a2 + 80);
  if (v4 <= v6) {
    unint64_t v7 = *(void *)(a2 + 80);
  }
  else {
    unint64_t v7 = v4;
  }
  if (v6 == -1) {
    unint64_t v7 = v4;
  }
  if (v4 != -1) {
    unint64_t v6 = v7;
  }
  *(void *)(result + 80) = v6;
  unint64_t v8 = *(void *)(a2 + 88);
  unint64_t v9 = *(void *)(result + 88);
  unint64_t v10 = *(void *)(result + 96);
  if (v9 <= v8) {
    unint64_t v11 = *(void *)(a2 + 88);
  }
  else {
    unint64_t v11 = *(void *)(result + 88);
  }
  if (v8 == -1) {
    unint64_t v11 = *(void *)(result + 88);
  }
  if (v9 != -1) {
    unint64_t v8 = v11;
  }
  *(void *)(result + 88) = v8;
  unint64_t v12 = *(void *)(a2 + 96);
  if (v10 <= v12) {
    unint64_t v13 = *(void *)(a2 + 96);
  }
  else {
    unint64_t v13 = v10;
  }
  if (v12 == -1) {
    unint64_t v13 = v10;
  }
  if (v10 != -1) {
    unint64_t v12 = v13;
  }
  *(void *)(result + 96) = v12;
  unint64_t v14 = *(void *)(a2 + 104);
  unint64_t v15 = *(void *)(result + 104);
  unint64_t v16 = *(void *)(result + 112);
  if (v15 <= v14) {
    unint64_t v17 = *(void *)(a2 + 104);
  }
  else {
    unint64_t v17 = *(void *)(result + 104);
  }
  if (v14 == -1) {
    unint64_t v17 = *(void *)(result + 104);
  }
  if (v15 != -1) {
    unint64_t v14 = v17;
  }
  *(void *)(result + 104) = v14;
  unint64_t v18 = *(void *)(a2 + 112);
  if (v16 <= v18) {
    unint64_t v19 = *(void *)(a2 + 112);
  }
  else {
    unint64_t v19 = v16;
  }
  if (v18 == -1) {
    unint64_t v19 = v16;
  }
  if (v16 != -1) {
    unint64_t v18 = v19;
  }
  *(void *)(result + 112) = v18;
  unint64_t v20 = *(void *)(result + 120);
  unint64_t v21 = *(void *)(a2 + 120);
  if (v20 <= v21) {
    uint64_t v22 = *(void *)(a2 + 120);
  }
  else {
    uint64_t v22 = *(void *)(result + 120);
  }
  if (v21 == -1) {
    uint64_t v22 = *(void *)(result + 120);
  }
  if (v20 == -1) {
    uint64_t v23 = *(void *)(a2 + 120);
  }
  else {
    uint64_t v23 = v22;
  }
  *(void *)(result + 120) = v23;
  unint64_t v24 = *(void *)(result + 136);
  unint64_t v25 = *(void *)(a2 + 136);
  if (v24 <= v25) {
    uint64_t v26 = *(void *)(a2 + 136);
  }
  else {
    uint64_t v26 = *(void *)(result + 136);
  }
  if (v25 == -1) {
    uint64_t v26 = *(void *)(result + 136);
  }
  if (v24 == -1) {
    uint64_t v27 = *(void *)(a2 + 136);
  }
  else {
    uint64_t v27 = v26;
  }
  *(void *)(result + 136) = v27;
  int v28 = *(_DWORD *)(result + 144);
  if (!v28) {
    int v28 = *(_DWORD *)(a2 + 144);
  }
  *(_DWORD *)(result + 144) = v28;
  int v29 = *(_DWORD *)(result + 128);
  if (v29 != *(_DWORD *)(a2 + 128)) {
    int v29 = 0;
  }
  *(_DWORD *)(result + 128) = v29;
  return result;
}

char **sub_693530(void *a1, unint64_t a2, void *a3, unint64_t a4, char **a5)
{
  unint64_t v14 = a5;
  if (a1)
  {
    if (a3)
    {
      while (1)
      {
        unint64_t v9 = sub_46C760(a1);
        unint64_t v10 = sub_46C760(a3);
        if (a2 >= v9 || a4 >= v10)
        {
          if (a2 < v9 == a4 < v10) {
            return v14;
          }
        }
        else
        {
          uint64_t v11 = sub_46C8EC(a1, a2);
          if (v11 == sub_46C8EC(a3, a4)) {
            return v14;
          }
        }
        uint64_t v13 = *(void *)(sub_46C8EC(a1, a2) + 32);
        sub_2D66A4(&v14, &v13);
        ++a2;
      }
    }
    while (a2 < sub_46C760(a1))
    {
      uint64_t v13 = *(void *)(sub_46C8EC(a1, a2) + 32);
      sub_2D66A4(&v14, &v13);
      ++a2;
    }
  }
  else if (a3 && a4 < sub_46C760(a3))
  {
    do
    {
      uint64_t v13 = *(void *)(sub_46C8EC(0, a2) + 32);
      sub_2D66A4(&v14, &v13);
      ++a2;
    }
    while (a4 < sub_46C760(a3));
  }
  return v14;
}

uint64_t sub_693690(uint64_t a1, uint64_t **a2, uint64_t **a3)
{
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = **a2;
  unint64_t v8 = (int *)sub_2D5D58(*(void *)a1, v7 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v6 + 7772))
  {
    unint64_t v9 = sub_2DB8E0(v6 + 3896, v7, 0);
    unint64_t v10 = &v9[-*(int *)v9];
    if (*(unsigned __int16 *)v10 < 5u)
    {
      uint64_t v11 = 0;
    }
    else
    {
      uint64_t v11 = *((unsigned __int16 *)v10 + 2);
      if (v11) {
        v11 += (uint64_t)&v9[*(unsigned int *)&v9[v11]];
      }
    }
    unint64_t v12 = (int *)(v11 + 4 * WORD2(v7) + 4 + *(unsigned int *)(v11 + 4 * WORD2(v7) + 4));
  }
  else
  {
    unint64_t v12 = 0;
  }
  v58[0] = v8;
  v58[1] = v12;
  v58[2] = (int *)sub_2E5C38(v6, v7 & 0xFFFFFFFFFFFFLL, 1);
  v58[3] = v13;
  int v59 = v7;
  __int16 v60 = WORD2(v7);
  BOOL v61 = (v7 & 0xFF000000000000) != 0;
  unint64_t v14 = a2[1];
  uint64_t v15 = *(void *)a1;
  uint64_t v16 = *(v14 - 1);
  unint64_t v17 = (int *)sub_2D5D58(*(void *)a1, v16 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v15 + 7772))
  {
    unint64_t v18 = sub_2DB8E0(v15 + 3896, v16, 0);
    unint64_t v19 = &v18[-*(int *)v18];
    if (*(unsigned __int16 *)v19 < 5u)
    {
      uint64_t v20 = 0;
    }
    else
    {
      uint64_t v20 = *((unsigned __int16 *)v19 + 2);
      if (v20) {
        v20 += (uint64_t)&v18[*(unsigned int *)&v18[v20]];
      }
    }
    unint64_t v21 = (int *)(v20 + 4 * WORD2(v16) + 4 + *(unsigned int *)(v20 + 4 * WORD2(v16) + 4));
  }
  else
  {
    unint64_t v21 = 0;
  }
  v54[0] = v17;
  v54[1] = v21;
  v54[2] = (int *)sub_2E5C38(v15, v16 & 0xFFFFFFFFFFFFLL, 1);
  v54[3] = v22;
  int v55 = v16;
  __int16 v56 = WORD2(v16);
  BOOL v57 = (v16 & 0xFF000000000000) != 0;
  uint64_t v23 = *(void *)a1;
  uint64_t v24 = **a3;
  unint64_t v25 = (int *)sub_2D5D58(*(void *)a1, v24 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v23 + 7772))
  {
    uint64_t v26 = sub_2DB8E0(v23 + 3896, v24, 0);
    uint64_t v27 = &v26[-*(int *)v26];
    if (*(unsigned __int16 *)v27 < 5u)
    {
      uint64_t v28 = 0;
    }
    else
    {
      uint64_t v28 = *((unsigned __int16 *)v27 + 2);
      if (v28) {
        v28 += (uint64_t)&v26[*(unsigned int *)&v26[v28]];
      }
    }
    int v29 = (int *)(v28 + 4 * WORD2(v24) + 4 + *(unsigned int *)(v28 + 4 * WORD2(v24) + 4));
  }
  else
  {
    int v29 = 0;
  }
  v50[0] = v25;
  v50[1] = v29;
  v50[2] = (int *)sub_2E5C38(v23, v24 & 0xFFFFFFFFFFFFLL, 1);
  v50[3] = v30;
  int v51 = v24;
  __int16 v52 = WORD2(v24);
  BOOL v53 = (v24 & 0xFF000000000000) != 0;
  int v31 = a3[1];
  uint64_t v32 = *(void *)a1;
  uint64_t v33 = *(v31 - 1);
  unint64_t v34 = (int *)sub_2D5D58(*(void *)a1, v33 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v32 + 7772))
  {
    unint64_t v35 = sub_2DB8E0(v32 + 3896, v33, 0);
    int v36 = &v35[-*(int *)v35];
    if (*(unsigned __int16 *)v36 < 5u)
    {
      uint64_t v37 = 0;
    }
    else
    {
      uint64_t v37 = *((unsigned __int16 *)v36 + 2);
      if (v37) {
        v37 += (uint64_t)&v35[*(unsigned int *)&v35[v37]];
      }
    }
    BOOL v38 = (int *)(v37 + 4 * WORD2(v33) + 4 + *(unsigned int *)(v37 + 4 * WORD2(v33) + 4));
  }
  else
  {
    BOOL v38 = 0;
  }
  v46[0] = v34;
  v46[1] = v38;
  v46[2] = (int *)sub_2E5C38(v32, v33 & 0xFFFFFFFFFFFFLL, 1);
  v46[3] = v39;
  int v47 = v33;
  __int16 v48 = WORD2(v33);
  BOOL v49 = (v33 & 0xFF000000000000) != 0;
  double v40 = sub_6D82EC(a1 + 1160, v58, v54);
  double v41 = v40 + sub_6D82EC(a1 + 1160, v50, v46);
  double v42 = *(double *)(a1 + 304);
  if (v42 < v41) {
    return 61;
  }
  double v44 = *(double *)(a1 + 288);
  if (v44 < v41) {
    return 2;
  }
  double v45 = *(double *)(a1 + 272);
  if (v45 < v41) {
    return 63;
  }
  if (*(double *)(a1 + 264) < v41) {
    return 21;
  }
  if (v41 > -v45) {
    return 20;
  }
  if (v41 > -v44) {
    return 62;
  }
  if (v41 > -v42) {
    return 1;
  }
  return 60;
}

uint64_t sub_693A7C@<X0>(unint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t v6 = *(const void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v7 = v5 - *(void *)a2;
  if (v5 == *(void *)a2)
  {
    uint64_t v9 = 0;
    unint64_t v8 = 0;
    unint64_t v10 = *a1;
    uint64_t v11 = (char *)a1[1];
    unint64_t v12 = (char *)*a1;
    if ((char *)*a1 == v11) {
      goto LABEL_10;
    }
LABEL_6:
    unint64_t v12 = (char *)v10;
    while (!v12[2])
    {
      v12 += 4;
      if (v12 == v11) {
        goto LABEL_11;
      }
    }
    goto LABEL_10;
  }
  if (v7 < 0) {
    sub_2E00();
  }
  unint64_t v8 = operator new(v5 - *(void *)a2);
  *a3 = (uint64_t)v8;
  uint64_t v9 = (uint64_t)&v8[2 * (v7 >> 2)];
  a3[2] = v9;
  memcpy(v8, v6, v7 - 1);
  a3[1] = v9;
  unint64_t v10 = *a1;
  uint64_t v11 = (char *)a1[1];
  unint64_t v12 = (char *)v10;
  if ((char *)v10 != v11) {
    goto LABEL_6;
  }
LABEL_10:
  if (v12 == v11)
  {
LABEL_11:
    sub_6CA5AC((uint64_t)a3, v9, v10, v11, (uint64_t)&v11[-v10] >> 2);
  }
  else
  {
    while (v8 != (_WORD *)v9)
    {
      *v8 += *(_WORD *)v12;
      v8 += 2;
    }
    while ((char *)v10 != v11)
    {
      if (!*(unsigned char *)(v10 + 2)) {
        sub_6CA4A8(a3, (_DWORD *)v10);
      }
      v10 += 4;
    }
  }
  return sub_693DCC(a3, (unsigned int (*)(unint64_t, unint64_t))sub_693F28, (uint64_t (*)(unint64_t, unint64_t))sub_693F48);
}

void sub_693BD4(_Unwind_Exception *exception_object)
{
  unint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_693BFC(uint64_t a1, uint64_t a2)
{
  if (a1 == a2)
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  }
  else
  {
    sub_2D8554((void *)a1, *(char **)a2, *(char **)(a2 + 8), (uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 3);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    sub_531608((void *)(a1 + 40), *(char **)(a2 + 40), *(char **)(a2 + 48), (uint64_t)(*(void *)(a2 + 48) - *(void *)(a2 + 40)) >> 2);
  }
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  long long v4 = *(_OWORD *)(a2 + 72);
  long long v5 = *(_OWORD *)(a2 + 88);
  long long v6 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = v6;
  *(_OWORD *)(a1 + 88) = v5;
  *(_OWORD *)(a1 + 72) = v4;
  long long v7 = *(_OWORD *)(a2 + 136);
  long long v8 = *(_OWORD *)(a2 + 152);
  long long v9 = *(_OWORD *)(a2 + 168);
  *(void *)(a1 + 183) = *(void *)(a2 + 183);
  *(_OWORD *)(a1 + 168) = v9;
  *(_OWORD *)(a1 + 152) = v8;
  *(_OWORD *)(a1 + 136) = v7;
  return a1;
}

double sub_693CB0(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 8) = *(void *)a1;
  *(void *)(a1 + 48) = *(void *)(a1 + 40);
  *(_DWORD *)(a1 + 64) = 0;
  *(void *)&long long v1 = -1;
  *((void *)&v1 + 1) = -1;
  *(_OWORD *)(a1 + 72) = v1;
  *(_OWORD *)(a1 + 88) = v1;
  *(_OWORD *)(a1 + 104) = v1;
  *(void *)(a1 + 120) = -1;
  *(_DWORD *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = -1;
  *(_DWORD *)(a1 + 144) = 0;
  double result = NAN;
  *(_OWORD *)(a1 + 152) = xmmword_20E2060;
  *(_WORD *)(a1 + 168) = 0;
  *(unsigned char *)(a1 + 170) = 0;
  *(void *)(a1 + 176) = 0;
  *(unsigned char *)(a1 + 188) = 0;
  *(unsigned char *)(a1 + 190) = 0;
  return result;
}

__n128 sub_693D10(unint64_t **a1, void *a2)
{
  unint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  if (*a1 != v3)
  {
    long long v4 = (void *)(*a2 + 9952);
    do
    {
      unint64_t v5 = *v2++;
      uint64_t v6 = sub_68F6BC(v4, v5);
      *(_DWORD *)(v6 + 24) = 0;
      *(void *)(v6 + 8) = *(void *)v6;
      *(void *)(v6 + 48) = *(void *)(v6 + 40);
      *(_DWORD *)(v6 + 64) = 0;
      *(void *)&long long v7 = -1;
      *((void *)&v7 + 1) = -1;
      *(_OWORD *)(v6 + 72) = v7;
      *(_OWORD *)(v6 + 88) = v7;
      *(_OWORD *)(v6 + 104) = v7;
      *(void *)(v6 + 120) = -1;
      *(_DWORD *)(v6 + 128) = 0;
      *(void *)(v6 + 136) = -1;
      *(_DWORD *)(v6 + 144) = 0;
      __n128 result = (__n128)xmmword_20E2060;
      *(_OWORD *)(v6 + 152) = xmmword_20E2060;
      *(_WORD *)(v6 + 168) = 0;
      *(unsigned char *)(v6 + 170) = 0;
      *(void *)(v6 + 176) = 0;
      *(unsigned char *)(v6 + 188) = 0;
      *(unsigned char *)(v6 + 190) = 0;
    }
    while (v2 != v3);
  }
  return result;
}

uint64_t sub_693DCC(uint64_t *a1, unsigned int (*a2)(unint64_t, unint64_t), uint64_t (*a3)(unint64_t, unint64_t))
{
  uint64_t v7 = *a1;
  long long v8 = (unsigned int *)a1[1];
  unint64_t v9 = 126 - 2 * __clz(((uint64_t)v8 - v7) >> 2);
  uint64_t v16 = a2;
  if (v8 == (unsigned int *)v7) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = v9;
  }
  uint64_t result = sub_6CA8EC(v7, v8, &v16, v10, 1);
  unint64_t v12 = (unsigned int *)a1[1];
  if ((unsigned int *)*a1 == v12)
  {
    unint64_t v12 = (unsigned int *)*a1;
  }
  else
  {
    uint64_t v13 = (unsigned int *)(*a1 + 4);
    while (v13 != v12)
    {
      unint64_t v3 = v3 & 0xFFFFFFFF00000000 | *(v13 - 1);
      unint64_t v4 = v4 & 0xFFFFFFFF00000000 | *v13;
      uint64_t result = a3(v3, v4);
      ++v13;
      if (result)
      {
        for (double i = v13 - 2; v13 != v12; ++v13)
        {
          unint64_t v4 = v4 & 0xFFFFFFFF00000000 | *i;
          unint64_t v3 = v3 & 0xFFFFFFFF00000000 | *v13;
          uint64_t result = a3(v4, v3);
          if ((result & 1) == 0)
          {
            char v15 = *((unsigned char *)v13 + 2);
            *((_WORD *)i++ + 2) = *(_WORD *)v13;
            *((unsigned char *)i + 2) = v15;
          }
        }
        unint64_t v12 = i + 1;
        if (i + 1 == (unsigned int *)a1[1]) {
          return result;
        }
        goto LABEL_17;
      }
    }
  }
  if (v12 != (unsigned int *)a1[1]) {
LABEL_17:
  }
    a1[1] = (uint64_t)v12;
  return result;
}

uint64_t sub_693F28(unsigned int a1, __int16 a2)
{
  if ((__int16)a1 >= a2) {
    return ((__int16)a1 == a2) & HIWORD(a1);
  }
  else {
    return 1;
  }
}

BOOL sub_693F48(__int16 a1, __int16 a2)
{
  return a2 == a1;
}

BOOL sub_693F58(int **a1)
{
  long long v1 = (char *)*a1;
  unint64_t v2 = (unsigned __int16 *)((char *)*a1 - **a1);
  unsigned int v3 = *v2;
  if (*((unsigned char *)a1 + 38))
  {
    if (v3 >= 0x47)
    {
      unsigned int v4 = v2[35];
      if (v4) {
        return (*(_DWORD *)&v1[v4] & 0x1000) != 0;
      }
    }
  }
  else if (v3 >= 0x47)
  {
    unsigned int v6 = v2[35];
    if (v6) {
      return (*(_DWORD *)&v1[v6] & 0x800) != 0;
    }
  }
  return 0;
}

BOOL sub_693FBC(int **a1)
{
  long long v1 = (char *)*a1;
  unint64_t v2 = (unsigned __int16 *)((char *)*a1 - **a1);
  unsigned int v3 = *v2;
  if (*((unsigned char *)a1 + 38))
  {
    if (v3 >= 0x47)
    {
      unsigned int v4 = v2[35];
      if (v4) {
        return (*(_DWORD *)&v1[v4] & 0x100) != 0;
      }
    }
  }
  else if (v3 >= 0x47)
  {
    unsigned int v6 = v2[35];
    if (v6) {
      return (*(_DWORD *)&v1[v6] & 0x80) != 0;
    }
  }
  return 0;
}

double sub_694020@<D0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  unint64_t v5 = (unsigned char *)a1[1];
  if ((unsigned char *)v4 == v5)
  {
LABEL_9:
    *(_OWORD *)(a2 + 112) = 0u;
    *(_OWORD *)(a2 + 128) = 0u;
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 96) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
    *(void *)(a2 + 56) = sub_1133328();
    *(void *)(a2 + 128) = 0;
    *(void *)(a2 + 136) = 0;
    *(void *)(a2 + 120) = 0;
    double result = 0.0;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 96) = 0u;
    *(_DWORD *)(a2 + 111) = 0;
  }
  else
  {
    unsigned int v6 = (unsigned char *)v4;
    do
    {
      if (!*v6)
      {
        uint64_t v7 = a2;
        uint64_t v4 = (uint64_t)v6;
        goto LABEL_8;
      }
      v6 += 144;
    }
    while (v6 != v5);
    if ((unsigned char *)v4 == v5) {
      goto LABEL_9;
    }
    uint64_t v7 = a2;
LABEL_8:
    sub_6C8AE4(v7, v4);
  }
  return result;
}

void sub_6940F0(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 55) < 0)
  {
    operator delete(*(void **)(v1 + 32));
    if ((*(char *)(v1 + 31) & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((*(char *)(v1 + 31) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(v1 + 8));
  _Unwind_Resume(exception_object);
}

BOOL sub_69412C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = a1[23];
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = a1[23];
  }
  else {
    uint64_t v3 = *((void *)a1 + 1);
  }
  uint64_t v4 = a2[23];
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *((void *)a2 + 1);
  }
  if (v3 != v4) {
    return 1;
  }
  if (v5 < 0) {
    a2 = *(unsigned __int8 **)a2;
  }
  if ((v2 & 0x80) != 0) {
    return memcmp(*(const void **)a1, a2, *((void *)a1 + 1)) != 0;
  }
  if (a1[23])
  {
    uint64_t v6 = v2 - 1;
    do
    {
      int v8 = *a1++;
      int v7 = v8;
      int v9 = *a2++;
      BOOL v10 = v7 == v9;
      uint64_t v2 = v7 != v9;
      BOOL v10 = !v10 || v6-- == 0;
    }
    while (!v10);
  }
  return v2;
}

uint64_t sub_6941D4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (int *)sub_2D5D58(a1, a2);
  uint64_t v3 = (unsigned __int16 *)((char *)v2 - *v2);
  if (*v3 >= 0x2Fu && (uint64_t v4 = v3[23]) != 0) {
    return *((unsigned __int8 *)v2 + v4);
  }
  else {
    return 32;
  }
}

uint64_t sub_694218(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  if (!*(unsigned char *)(a1 + 1155)) {
    return 0;
  }
  sub_46C894(a2, a3);
  if (!v7) {
    return 0;
  }
  uint64_t v8 = sub_46C894(a2, a3);
  if (!*(unsigned char *)(v8 + 48 * v9 - 8) || sub_46C760(a2) - 1 == a3) {
    return 0;
  }
  uint64_t v11 = *(void *)(sub_46C8EC(a2, a3) + 32);
  uint64_t v12 = sub_46C8EC(a2, a3 + 1);
  uint64_t result = 0;
  unint64_t v13 = *(void *)(v12 + 32);
  if (v11 == v13 && WORD2(v11) == WORD2(v13))
  {
    if ((BYTE6(v11) == 0) == (HIWORD(v13) & 1))
    {
      *(_DWORD *)(a4 + 24) = 0;
      *(void *)(a4 + 8) = *(void *)a4;
      *(void *)(a4 + 48) = *(void *)(a4 + 40);
      *(_DWORD *)(a4 + 64) = 0;
      *(void *)&long long v14 = -1;
      *((void *)&v14 + 1) = -1;
      *(_OWORD *)(a4 + 72) = v14;
      *(_OWORD *)(a4 + 88) = v14;
      *(_OWORD *)(a4 + 104) = v14;
      *(void *)(a4 + 120) = -1;
      *(_DWORD *)(a4 + 128) = 0;
      *(void *)(a4 + 136) = -1;
      *(_DWORD *)(a4 + 144) = 0;
      *(_OWORD *)(a4 + 152) = xmmword_20E2060;
      *(_WORD *)(a4 + 168) = 0;
      *(unsigned char *)(a4 + 170) = 0;
      *(void *)(a4 + 176) = 0;
      *(unsigned char *)(a4 + 188) = 0;
      *(unsigned char *)(a4 + 190) = 0;
      int __src = v11;
      __int16 v16 = WORD2(v11);
      char v17 = BYTE6(v11);
      char v20 = BYTE6(v13);
      __int16 v19 = WORD2(v13);
      int v18 = v13;
      sub_2D8554((void *)a4, (char *)&__src, (char *)&v21, 2uLL);
      *(_DWORD *)(a4 + 24) = 94;
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_6943CC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_46C8EC(a2, a3);
  unint64_t v9 = *(unsigned int *)(v8 + 32) | ((unint64_t)*(unsigned __int16 *)(v8 + 36) << 32);
  BOOL v10 = (int *)sub_2D5D58(*(void *)a1, v9);
  uint64_t v11 = (unsigned __int16 *)((char *)v10 - *v10);
  if (*v11 < 0xBu) {
    return 0;
  }
  uint64_t v12 = v11[5];
  if (!v12 || (*((unsigned char *)v10 + v12 + 3) & 2) == 0 || !*(unsigned char *)(a1 + 681)) {
    return 0;
  }
  *(void *)unint64_t v35 = a4;
  sub_68F4F8(*(void *)a1, v9, &v38);
  unint64_t v13 = v38;
  long long v14 = v39;
  if (v38 == v39)
  {
    uint64_t v15 = 0;
    goto LABEL_37;
  }
  do
  {
    __int16 v16 = (int *)sub_2DBC9C(*(void *)a1, *v13);
    char v17 = (unsigned __int16 *)((char *)v16 - *v16);
    if (*v17 < 0xDu) {
      goto LABEL_7;
    }
    uint64_t v18 = v17[6];
    if (!v18) {
      goto LABEL_7;
    }
    __int16 v19 = (int *)((char *)v16 + v18 + *(unsigned int *)((char *)v16 + v18));
    char v20 = (unsigned __int16 *)((char *)v19 - *v19);
    if (*v20 >= 5u && (uint64_t v21 = v20[2]) != 0)
    {
      unsigned int v22 = *((unsigned __int8 *)v19 + v21);
      if (v22 >= 0xF || ((0x7EFFu >> v22) & 1) == 0) {
        goto LABEL_7;
      }
      int v23 = dword_20E8B9C[(char)v22];
    }
    else
    {
      int v23 = 0;
    }
    sub_68F5DC(*(void *)a1, *v13, (unint64_t *)&__p);
    unint64_t v24 = sub_46C760(a2);
    unint64_t v25 = (char *)__p;
    uint64_t v26 = v37;
    if (v24 - a3 < (v37 - (unsigned char *)__p) >> 3)
    {
      int v27 = 3;
      uint64_t v28 = (char *)__p;
      if (!__p) {
        goto LABEL_28;
      }
LABEL_27:
      uint64_t v37 = v28;
      operator delete(v28);
      goto LABEL_28;
    }
    sub_46B058();
    if (v25 == v26)
    {
LABEL_24:
      *(_DWORD *)(*(void *)v35 + 24) = v23;
      if (&__p != *(void ***)v35) {
        sub_2D8554(*(void **)v35, (char *)__p, v37, (v37 - (unsigned char *)__p) >> 3);
      }
      int v27 = 1;
      uint64_t v28 = (char *)__p;
      if (__p) {
        goto LABEL_27;
      }
    }
    else
    {
      int v31 = v29;
      uint64_t v32 = v30 + a3;
      while (1)
      {
        unint64_t v33 = *(void *)(sub_46C8EC(v31, v32) + 32);
        if (__PAIR64__(*((unsigned __int16 *)v25 + 2), *(_DWORD *)v25) != __PAIR64__(WORD2(v33), v33)
          || (HIWORD(v33) & 1) == (v25[6] == 0))
        {
          break;
        }
        ++v32;
        v25 += 8;
        if (v25 == v26) {
          goto LABEL_24;
        }
      }
      int v27 = 0;
      uint64_t v28 = (char *)__p;
      if (__p) {
        goto LABEL_27;
      }
    }
LABEL_28:
    if (v27 != 3 && v27)
    {
      uint64_t v15 = 1;
      goto LABEL_36;
    }
LABEL_7:
    ++v13;
  }
  while (v13 != v14);
  uint64_t v15 = 0;
LABEL_36:
  unint64_t v13 = v38;
LABEL_37:
  if (v13)
  {
    uint64_t v39 = v13;
    operator delete(v13);
  }
  return v15;
}

void sub_694654(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, void *a14, uint64_t a15)
{
  if (__p)
  {
    operator delete(__p);
    __int16 v16 = a14;
    if (!a14) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    __int16 v16 = a14;
    if (!a14) {
      goto LABEL_3;
    }
  }
  operator delete(v16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_6946BC(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  if (sub_69E5D0(a1, a2, a3, a4)) {
    return 1;
  }
  uint64_t v9 = sub_46C8EC(a2, a3);
  uint64_t v208 = (uint64_t)a1;
  uint64_t v10 = *a1;
  uint64_t v11 = *(void *)(v9 + 32);
  uint64_t v12 = (int *)sub_2D5D58(v10, v11 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v10 + 7772))
  {
    unint64_t v13 = sub_2DB8E0(v10 + 3896, v11, 0);
    long long v14 = &v13[-*(int *)v13];
    if (*(unsigned __int16 *)v14 < 5u)
    {
      uint64_t v15 = 0;
    }
    else
    {
      uint64_t v15 = *((unsigned __int16 *)v14 + 2);
      if (v15) {
        v15 += (uint64_t)&v13[*(unsigned int *)&v13[v15]];
      }
    }
    uint64_t v16 = v15 + 4 * WORD2(v11) + 4 + *(unsigned int *)(v15 + 4 * WORD2(v11) + 4);
  }
  else
  {
    uint64_t v16 = 0;
  }
  *(void *)&long long v232 = v12;
  *((void *)&v232 + 1) = v16;
  *(void *)&long long v233 = sub_2E5C38(v10, v11 & 0xFFFFFFFFFFFFLL, 1);
  *((void *)&v233 + 1) = v17;
  LODWORD(v234) = v11;
  WORD2(v234) = WORD2(v11);
  BYTE6(v234) = (v11 & 0xFF000000000000) != 0;
  uint64_t v18 = (unsigned __int16 *)((char *)v12 - *v12);
  if (*v18 >= 0x2Fu)
  {
    uint64_t v19 = v18[23];
    if (v19)
    {
      unsigned int v20 = *((unsigned __int8 *)v12 + v19);
      BOOL v21 = v20 > 0x36;
      uint64_t v22 = (1 << v20) & 0x44000000000008;
      if (!v21 && v22 != 0) {
        return 0;
      }
    }
  }
  size_t v209 = v234;
  sub_2D5B74((char **)a4, &v209);
  unint64_t v24 = a3 + 1;
  uint64_t v25 = sub_46C8EC(a2, a3 + 1);
  uint64_t v26 = *(void *)v208;
  unint64_t v27 = *(void *)(v25 + 32);
  uint64_t v204 = (int *)sub_2D5D58(*(void *)v208, v27 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v26 + 7772))
  {
    uint64_t v28 = sub_2DB8E0(v26 + 3896, v27, 0);
    int v29 = &v28[-*(int *)v28];
    if (*(unsigned __int16 *)v29 < 5u)
    {
      uint64_t v30 = 0;
    }
    else
    {
      uint64_t v30 = *((unsigned __int16 *)v29 + 2);
      if (v30) {
        v30 += (uint64_t)&v28[*(unsigned int *)&v28[v30]];
      }
    }
    uint64_t v199 = v30 + ((v27 >> 30) & 0x3FFFC) + 4 + *(unsigned int *)(v30 + ((v27 >> 30) & 0x3FFFC) + 4);
  }
  else
  {
    uint64_t v199 = 0;
  }
  uint64_t v31 = sub_2E5C38(v26, v27 & 0xFFFFFFFFFFFFLL, 1);
  uint64_t v194 = v32;
  uint64_t v197 = v31;
  unint64_t v201 = v27 & 0xFFFFFFFFFFFFLL | ((unint64_t)((v27 & 0xFF000000000000) != 0) << 48);
  if (v24 < sub_46C760(a2))
  {
    while (1)
    {
      unint64_t v33 = (int **)sub_46C8EC(a2, v24);
      unint64_t v34 = v33;
      unint64_t v35 = (unsigned __int16 *)((char *)*v33 - **v33);
      if (*v35 >= 0x2Fu)
      {
        uint64_t v36 = v35[23];
        if (v36)
        {
          unsigned int v37 = *((unsigned __int8 *)*v33 + v36);
          BOOL v21 = v37 > 0x36;
          uint64_t v38 = (1 << v37) & 0x44000000000008;
          if (!v21 && v38 != 0) {
            break;
          }
        }
      }
      if ((sub_6618C0(v208 + 3048, v33) & 1) == 0)
      {
        uint64_t v8 = 0;
        *(void *)(a4 + 8) = *(void *)a4;
        *(void *)(a4 + 48) = *(void *)(a4 + 40);
        *(void *)&long long v40 = -1;
        *((void *)&v40 + 1) = -1;
        *(_OWORD *)(a4 + 72) = v40;
        *(_OWORD *)(a4 + 88) = v40;
        *(_OWORD *)(a4 + 104) = v40;
        *(void *)(a4 + 120) = -1;
        *(void *)(a4 + 136) = -1;
        long long v41 = xmmword_20E2060;
        *(_DWORD *)(a4 + 24) = 0;
        *(_DWORD *)(a4 + 64) = 0;
        *(_DWORD *)(a4 + 128) = 0;
        *(_DWORD *)(a4 + 144) = 0;
        goto LABEL_98;
      }
      size_t v209 = v34[4];
      sub_2D5B74((char **)a4, &v209);
      if (++v24 >= sub_46C760(a2)) {
        goto LABEL_44;
      }
    }
    uint64_t v42 = *(void *)v208;
    unint64_t v43 = (unint64_t)v33[4];
    uint64_t v204 = (int *)sub_2D5D58(*(void *)v208, v43 & 0xFFFFFFFFFFFFLL);
    if (*(unsigned char *)(v42 + 7772))
    {
      double v44 = sub_2DB8E0(v42 + 3896, v43, 0);
      double v45 = &v44[-*(int *)v44];
      if (*(unsigned __int16 *)v45 < 5u)
      {
        uint64_t v46 = 0;
      }
      else
      {
        uint64_t v46 = *((unsigned __int16 *)v45 + 2);
        if (v46) {
          v46 += (uint64_t)&v44[*(unsigned int *)&v44[v46]];
        }
      }
      uint64_t v199 = v46 + ((v43 >> 30) & 0x3FFFC) + 4 + *(unsigned int *)(v46 + ((v43 >> 30) & 0x3FFFC) + 4);
    }
    else
    {
      uint64_t v199 = 0;
    }
    uint64_t v47 = sub_2E5C38(v42, v43 & 0xFFFFFFFFFFFFLL, 1);
    uint64_t v194 = v48;
    uint64_t v197 = v47;
    unint64_t v201 = v43 & 0xFFFFFFFFFFFFLL | ((unint64_t)((v43 & 0xFF000000000000) != 0) << 48);
  }
LABEL_44:
  BOOL v49 = (unsigned __int16 *)((char *)v204 - *v204);
  unint64_t v193 = a3;
  if (*v49 >= 0x2Fu && (uint64_t v50 = v49[23]) != 0) {
    int v51 = *((unsigned __int8 *)v204 + v50);
  }
  else {
    int v51 = 32;
  }
  int v207 = v51;
  uint64_t v52 = sub_46C8EC(a2, v24 - 1);
  uint64_t v53 = *(void *)v208;
  uint64_t v54 = *(void *)(v52 + 32);
  uint64_t v55 = sub_2D5D58(*(void *)v208, v54 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v53 + 7772))
  {
    __int16 v56 = sub_2DB8E0(v53 + 3896, v54, 0);
    BOOL v57 = &v56[-*(int *)v56];
    if (*(unsigned __int16 *)v57 < 5u)
    {
      uint64_t v58 = 0;
    }
    else
    {
      uint64_t v58 = *((unsigned __int16 *)v57 + 2);
      if (v58) {
        v58 += (uint64_t)&v56[*(unsigned int *)&v56[v58]];
      }
    }
    uint64_t v59 = v58 + 4 * WORD2(v54) + 4 + *(unsigned int *)(v58 + 4 * WORD2(v54) + 4);
  }
  else
  {
    uint64_t v59 = 0;
  }
  uint64_t v60 = sub_2E5C38(v53, v54 & 0xFFFFFFFFFFFFLL, 1);
  v228[0] = v55;
  v228[1] = v59;
  v228[2] = v60;
  v228[3] = v61;
  int v229 = v54;
  __int16 v230 = WORD2(v54);
  BOOL v231 = (v54 & 0xFF000000000000) != 0;
  long long v225 = v232;
  long long v226 = v233;
  uint64_t v203 = (_OWORD *)(a4 + 72);
  uint64_t v227 = v234;
  do
  {
    if (v24 >= sub_46C760(a2)) {
      goto LABEL_92;
    }
    unint64_t v63 = (int **)sub_46C8EC(a2, v24);
    size_t v209 = v63[4];
    sub_2D5B74((char **)a4, &v209);
    uint64_t v64 = *(void *)v208;
    unint64_t v65 = (unint64_t)v63[4];
    double v66 = (int *)sub_2D5D58(*(void *)v208, v65 & 0xFFFFFFFFFFFFLL);
    if (*(unsigned char *)(v64 + 7772))
    {
      long long v67 = sub_2DB8E0(v64 + 3896, v65, 0);
      uint64_t v68 = &v67[-*(int *)v67];
      if (*(unsigned __int16 *)v68 < 5u)
      {
        uint64_t v69 = 0;
      }
      else
      {
        uint64_t v69 = *((unsigned __int16 *)v68 + 2);
        if (v69) {
          v69 += (uint64_t)&v67[*(unsigned int *)&v67[v69]];
        }
      }
      uint64_t v70 = v69 + 4 * WORD2(v65) + 4 + *(unsigned int *)(v69 + 4 * WORD2(v65) + 4);
    }
    else
    {
      uint64_t v70 = 0;
    }
    uint64_t v71 = sub_2E5C38(v64, v65 & 0xFFFFFFFFFFFFLL, 1);
    size_t v209 = v66;
    uint64_t v210 = v70;
    uint64_t v211 = v71;
    uint64_t v212 = v72;
    int v213 = v65;
    __int16 v214 = WORD2(v65);
    BOOL v215 = (v65 & 0xFF000000000000) != 0;
    if (!sub_6D855C(v208 + 1160, &v209)) {
      goto LABEL_97;
    }
    unint64_t v73 = (unsigned __int16 *)((char *)*v63 - **v63);
    if (*v73 < 0x2Fu
      || (uint64_t v74 = v73[23]) == 0
      || ((v75 = *((unsigned __int8 *)*v63 + v74), BOOL v21 = v75 > 0x36, v76 = (1 << v75) & 0x44000000000008, !v21)
        ? (BOOL v77 = v76 == 0)
        : (BOOL v77 = 1),
          v77))
    {
      uint64_t v85 = sub_46C8EC(a2, v24);
      uint64_t v86 = *(void *)v208;
      uint64_t v87 = *(void *)(v85 + 32);
      unint64_t v88 = (int *)sub_2D5D58(*(void *)v208, v87 & 0xFFFFFFFFFFFFLL);
      if (*(unsigned char *)(v86 + 7772))
      {
        unint64_t v89 = sub_2DB8E0(v86 + 3896, v87, 0);
        unint64_t v90 = &v89[-*(int *)v89];
        if (*(unsigned __int16 *)v90 < 5u)
        {
          uint64_t v91 = 0;
        }
        else
        {
          uint64_t v91 = *((unsigned __int16 *)v90 + 2);
          if (v91) {
            v91 += (uint64_t)&v89[*(unsigned int *)&v89[v91]];
          }
        }
        uint64_t v92 = v91 + 4 * WORD2(v87) + 4 + *(unsigned int *)(v91 + 4 * WORD2(v87) + 4);
      }
      else
      {
        uint64_t v92 = 0;
      }
      uint64_t v93 = sub_2E5C38(v86, v87 & 0xFFFFFFFFFFFFLL, 1);
      size_t v209 = v88;
      uint64_t v210 = v92;
      uint64_t v211 = v93;
      uint64_t v212 = v94;
      int v213 = v87;
      __int16 v214 = WORD2(v87);
      BOOL v215 = (v87 & 0xFF000000000000) != 0;
      if (v207 == 50 && sub_69EB54(v208, &v209, (int **)&v225, 0))
      {
        *(_DWORD *)(a4 + 24) = 0;
        *(void *)(a4 + 8) = *(void *)a4;
        *(void *)(a4 + 48) = *(void *)(a4 + 40);
        *(_DWORD *)(a4 + 64) = 0;
        *(void *)&long long v95 = -1;
        *((void *)&v95 + 1) = -1;
        _OWORD *v203 = v95;
        *(_OWORD *)(a4 + 88) = v95;
        *(_OWORD *)(a4 + 104) = v95;
        *(void *)(a4 + 120) = -1;
        *(_DWORD *)(a4 + 128) = 0;
        *(void *)(a4 + 136) = -1;
        *(_DWORD *)(a4 + 144) = 0;
        *(_OWORD *)(a4 + 152) = xmmword_20E2060;
        *(_WORD *)(a4 + 168) = 0;
        *(unsigned char *)(a4 + 170) = 0;
        *(void *)(a4 + 176) = 0;
        *(unsigned char *)(a4 + 188) = 0;
        int v62 = 1;
        *(unsigned char *)(a4 + 190) = 0;
      }
      else
      {
        int v62 = 5;
      }
    }
    else
    {
      uint64_t v78 = sub_46C8EC(a2, v24);
      uint64_t v79 = *(void *)v208;
      uint64_t v80 = *(void *)(v78 + 32);
      uint64_t v81 = sub_2D5D58(*(void *)v208, v80 & 0xFFFFFFFFFFFFLL);
      if (*(unsigned char *)(v79 + 7772))
      {
        unint64_t v82 = sub_2DB8E0(v79 + 3896, v80, 0);
        uint64_t v83 = &v82[-*(int *)v82];
        if (*(unsigned __int16 *)v83 < 5u)
        {
          uint64_t v84 = 0;
        }
        else
        {
          uint64_t v84 = *((unsigned __int16 *)v83 + 2);
          if (v84) {
            v84 += (uint64_t)&v82[*(unsigned int *)&v82[v84]];
          }
        }
        uint64_t v96 = v84 + 4 * WORD2(v80) + 4 + *(unsigned int *)(v84 + 4 * WORD2(v80) + 4);
      }
      else
      {
        uint64_t v96 = 0;
      }
      uint64_t v97 = sub_2E5C38(v79, v80 & 0xFFFFFFFFFFFFLL, 1);
      int v62 = 0;
      *(void *)&long long v225 = v81;
      *((void *)&v225 + 1) = v96;
      *(void *)&long long v226 = v97;
      *((void *)&v226 + 1) = v98;
      LODWORD(v227) = v80;
      WORD2(v227) = WORD2(v80);
      ++v24;
      BYTE6(v227) = (v80 & 0xFF000000000000) != 0;
    }
  }
  while (!v62);
  if (v62 != 5) {
    return 0;
  }
LABEL_92:
  if (v24 >= sub_46C760(a2))
  {
LABEL_97:
    uint64_t v8 = 0;
    *(void *)(a4 + 8) = *(void *)a4;
    *(void *)(a4 + 48) = *(void *)(a4 + 40);
    *(void *)&long long v102 = -1;
    *((void *)&v102 + 1) = -1;
    _OWORD *v203 = v102;
    *(_OWORD *)(a4 + 88) = v102;
    *(_OWORD *)(a4 + 104) = v102;
    *(void *)(a4 + 120) = -1;
    *(_DWORD *)(a4 + 24) = 0;
    *(_DWORD *)(a4 + 64) = 0;
    *(_DWORD *)(a4 + 128) = 0;
    *(void *)(a4 + 136) = -1;
    *(_DWORD *)(a4 + 144) = 0;
    long long v41 = xmmword_20E2060;
LABEL_98:
    *(_OWORD *)(a4 + 152) = v41;
    *(_WORD *)(a4 + 168) = 0;
    *(unsigned char *)(a4 + 170) = 0;
    *(void *)(a4 + 176) = 0;
    *(unsigned char *)(a4 + 188) = 0;
    *(unsigned char *)(a4 + 190) = 0;
  }
  else
  {
    uint64_t v192 = sub_46C8EC(a2, v24);
    uint64_t v99 = 0;
    *(void *)&long long v216 = v204;
    *((void *)&v216 + 1) = v199;
    int v222 = 0;
    size_t v223 = 0;
    uint64_t v224 = 0;
    long long __p = 0;
    uint64_t v220 = 0;
    unint64_t v221 = 0;
    *(void *)&long long v217 = v197;
    *((void *)&v217 + 1) = v194;
    unint64_t v218 = v201;
    double v100 = (unsigned __int16 *)((char *)v204 - *v204);
    if (*v100 >= 9u)
    {
      uint64_t v101 = v100[4];
      if (v101) {
        uint64_t v99 = *(unsigned int *)((char *)v204 + v101);
      }
      else {
        uint64_t v99 = 0;
      }
    }
    long long v225 = v232;
    long long v226 = v233;
    uint64_t v227 = v234;
    int64x2_t v104 = (unsigned __int16 *)(v232 - *(int *)v232);
    if (*v104 >= 0x2Fu && (uint64_t v105 = v104[23]) != 0)
    {
      BOOL v106 = 1;
      switch(*(unsigned char *)(v232 + v105))
      {
        case 6:
        case 0xC:
        case 0x2B:
          uint64_t v107 = v104[5];
          if (v107 && (*(unsigned char *)(v232 + v107 + 2) & 0x20) != 0) {
            goto LABEL_106;
          }
          break;
        case 0x2C:
          break;
        default:
LABEL_106:
          BOOL v106 = *(unsigned char *)(v232 + v105) == 14;
          break;
      }
    }
    else
    {
      BOOL v106 = 0;
    }
    sub_2E44A4(*(void *)v208, (uint64_t)v228, &v222);
    int v109 = v222;
    int v108 = v223;
    if (v222 == v223) {
      goto LABEL_115;
    }
    while ((sub_6A0B48(v208, &v232, &v216, v109, (int **)&v225, v207 == 50, 1) & 1) == 0)
    {
      v109 += 5;
      if (v109 == v108)
      {
        int v109 = v108;
        break;
      }
    }
    if (v109 == v223)
    {
LABEL_115:
      unsigned int v200 = 0;
    }
    else
    {
      uint64_t v110 = v220;
      if ((unint64_t)v220 >= v221)
      {
        uint64_t v114 = (char *)__p;
        unint64_t v115 = 0xCCCCCCCCCCCCCCCDLL * ((v220 - (unsigned char *)__p) >> 3);
        unint64_t v116 = v115 + 1;
        if (v115 + 1 > 0x666666666666666) {
LABEL_259:
        }
          sub_2E00();
        if (0x999999999999999ALL * ((uint64_t)(v221 - (void)__p) >> 3) > v116) {
          unint64_t v116 = 0x999999999999999ALL * ((uint64_t)(v221 - (void)__p) >> 3);
        }
        if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v221 - (void)__p) >> 3) >= 0x333333333333333) {
          unint64_t v117 = 0x666666666666666;
        }
        else {
          unint64_t v117 = v116;
        }
        if (v117)
        {
          if (v117 > 0x666666666666666) {
LABEL_260:
          }
            sub_188D718();
          unint64_t v118 = (char *)operator new(40 * v117);
        }
        else
        {
          unint64_t v118 = 0;
        }
        unint64_t v119 = &v118[40 * v115];
        long long v120 = *(_OWORD *)v109;
        long long v121 = *((_OWORD *)v109 + 1);
        *((void *)v119 + 4) = v109[4];
        *(_OWORD *)unint64_t v119 = v120;
        *((_OWORD *)v119 + 1) = v121;
        uint64_t v113 = v119 + 40;
        if (v110 != v114)
        {
          do
          {
            long long v122 = *(_OWORD *)(v110 - 40);
            long long v123 = *(_OWORD *)(v110 - 24);
            *((void *)v119 - 1) = *((void *)v110 - 1);
            *(_OWORD *)(v119 - 24) = v123;
            *(_OWORD *)(v119 - 40) = v122;
            v119 -= 40;
            v110 -= 40;
          }
          while (v110 != v114);
          uint64_t v110 = v114;
        }
        long long __p = v119;
        uint64_t v220 = v113;
        unint64_t v221 = (unint64_t)&v118[40 * v117];
        if (v110) {
          operator delete(v110);
        }
      }
      else
      {
        long long v111 = *(_OWORD *)v109;
        long long v112 = *((_OWORD *)v109 + 1);
        *((void *)v220 + 4) = v109[4];
        *(_OWORD *)uint64_t v110 = v111;
        *((_OWORD *)v110 + 1) = v112;
        uint64_t v113 = v110 + 40;
      }
      uint64_t v220 = v113;
      unsigned int v200 = 1;
    }
    uint64_t v198 = -1;
    unint64_t v205 = HIWORD(v201);
    uint64_t v206 = v201 & 0xFFFFFFFFFFFFLL;
    size_t v223 = v222;
LABEL_133:
    BOOL v202 = v106;
    while (1)
    {
LABEL_134:
      sub_2E44A4(*(void *)v208, (uint64_t)&v216, &v222);
      uint64_t v124 = v222;
      int v125 = v223;
      uint64_t v126 = v222;
      if (v222 != v223)
      {
        uint64_t v126 = v222;
        while (1)
        {
          unint64_t v127 = (unsigned __int16 *)((char *)*v126 - **v126);
          if (*v127 >= 0x2Fu)
          {
            uint64_t v128 = v127[23];
            if (v128)
            {
              unsigned int v129 = *((unsigned __int8 *)*v126 + v128);
              BOOL v21 = v129 > 0x36;
              uint64_t v130 = (1 << v129) & 0x44000000000008;
              if (!v21 && v130 != 0) {
                break;
              }
            }
          }
          v126 += 5;
          if (v126 == v223) {
            goto LABEL_233;
          }
        }
      }
      if (v126 == v223)
      {
LABEL_233:
        sub_693CB0(a4);
        uint64_t v8 = 0;
        goto LABEL_234;
      }
      long long v225 = v216;
      long long v226 = v217;
      uint64_t v227 = (int *)v218;
      long long v133 = *(_OWORD *)v126;
      long long v132 = *((_OWORD *)v126 + 1);
      unint64_t v134 = (unint64_t)v126[4];
      unint64_t v218 = v134;
      long long v216 = v133;
      long long v217 = v132;
      if (v134 & 0xFFFFFFFFFFFFLL) == v206 && ((v205 ^ ((v134 & 0xFF000000000000) == 0))) {
        break;
      }
      unint64_t v135 = (unsigned __int16 *)(v216 - *(int *)v216);
      if (*v135 >= 9u && (uint64_t v136 = v135[4]) != 0)
      {
        v99 += *(unsigned int *)(v216 + v136);
        if (v99 > *(void *)(v208 + 600)) {
          goto LABEL_233;
        }
      }
      else if (v99 > *(void *)(v208 + 600))
      {
        goto LABEL_233;
      }
      if (v222 != v223)
      {
        unint64_t v137 = *(void *)(v192 + 32);
        unint64_t v138 = v222;
        while (1)
        {
          uint64_t v139 = v138[4];
          if (((unint64_t)v139 & 0xFFFFFFFFFFFFLL) == (v137 & 0xFFFFFFFFFFFFLL)
            && (HIWORD(v137) & 1) != (((unint64_t)v139 & 0xFF000000000000) == 0))
          {
            break;
          }
          v138 += 5;
          if (v138 == v223) {
            goto LABEL_158;
          }
        }
        if (v138 == v223)
        {
LABEL_158:
          while ((sub_6A0B48(v208, &v232, &v216, v124, (int **)&v225, v207 == 50, 0) & 1) == 0)
          {
            v124 += 5;
            if (v124 == v125)
            {
              uint64_t v124 = v125;
              break;
            }
          }
          int v125 = v223;
        }
        else
        {
          uint64_t v124 = v138;
        }
      }
      if (v124 == v125)
      {
        for (double i = v222; ; i += 5)
        {
          if (i == v125) {
            goto LABEL_134;
          }
          long long v141 = *i;
          uint64_t v142 = **i;
          uint64_t v143 = (unsigned __int16 *)((char *)*i - v142);
          unsigned int v144 = *v143;
          if (*((unsigned char *)i + 38))
          {
            if (v144 < 0xB) {
              continue;
            }
            int v145 = v143[5];
            if (!v143[5]) {
              goto LABEL_178;
            }
            LODWORD(v142) = *(int *)((char *)v141 + v143[5]);
            if ((v142 & 2) != 0) {
              continue;
            }
          }
          else
          {
            if (v144 < 0xB) {
              continue;
            }
            int v145 = v143[5];
            if (!v143[5])
            {
LABEL_178:
              if (v144 <= 0x2E) {
                continue;
              }
              int v145 = 0;
              uint64_t v146 = v143[23];
              if (v146)
              {
LABEL_180:
                if (*((unsigned char *)v141 + v146) == 23)
                {
LABEL_183:
                  if (i != v125)
                  {
                    int v147 = v220;
                    if ((unint64_t)v220 >= v221)
                    {
                      uint64_t v150 = (char *)__p;
                      unint64_t v151 = 0xCCCCCCCCCCCCCCCDLL * ((v220 - (unsigned char *)__p) >> 3);
                      unint64_t v152 = v151 + 1;
                      if (v151 + 1 > 0x666666666666666) {
                        goto LABEL_259;
                      }
                      if (0x999999999999999ALL * ((uint64_t)(v221 - (void)__p) >> 3) > v152) {
                        unint64_t v152 = 0x999999999999999ALL * ((uint64_t)(v221 - (void)__p) >> 3);
                      }
                      if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v221 - (void)__p) >> 3) >= 0x333333333333333) {
                        unint64_t v153 = 0x666666666666666;
                      }
                      else {
                        unint64_t v153 = v152;
                      }
                      if (v153)
                      {
                        if (v153 > 0x666666666666666) {
                          goto LABEL_260;
                        }
                        unint64_t v195 = v153;
                        uint64_t v154 = (char *)operator new(40 * v153);
                        unint64_t v153 = v195;
                      }
                      else
                      {
                        uint64_t v154 = 0;
                      }
                      uint64_t v164 = &v154[40 * v151];
                      long long v165 = *(_OWORD *)i;
                      long long v166 = *((_OWORD *)i + 1);
                      *((void *)v164 + 4) = i[4];
                      *(_OWORD *)uint64_t v164 = v165;
                      *((_OWORD *)v164 + 1) = v166;
                      long long v167 = v164;
                      if (v147 != v150)
                      {
                        do
                        {
                          long long v168 = *(_OWORD *)(v147 - 40);
                          long long v169 = *(_OWORD *)(v147 - 24);
                          *((void *)v167 - 1) = *((void *)v147 - 1);
                          *(_OWORD *)(v167 - 24) = v169;
                          *(_OWORD *)(v167 - 40) = v168;
                          v167 -= 40;
                          v147 -= 40;
                        }
                        while (v147 != v150);
                        int v147 = v150;
                      }
                      uint64_t v170 = v164 + 40;
                      long long __p = v167;
                      uint64_t v220 = v164 + 40;
                      unint64_t v221 = (unint64_t)&v154[40 * v153];
                      if (v147) {
                        operator delete(v147);
                      }
                      uint64_t v220 = v170;
                    }
                    else
                    {
                      long long v148 = *(_OWORD *)i;
                      long long v149 = *((_OWORD *)i + 1);
                      *((void *)v220 + 4) = i[4];
                      *(_OWORD *)int v147 = v148;
                      *((_OWORD *)v147 + 1) = v149;
                      uint64_t v220 = v147 + 40;
                    }
                  }
                  goto LABEL_134;
                }
              }
LABEL_181:
              if (!v145) {
                continue;
              }
              goto LABEL_164;
            }
            LODWORD(v142) = *(int *)((char *)v141 + v143[5]);
            if (v142) {
              continue;
            }
          }
          if (v144 >= 0x2F)
          {
            uint64_t v146 = v143[23];
            if (v146) {
              goto LABEL_180;
            }
            goto LABEL_181;
          }
LABEL_164:
          if ((v142 & 4) != 0) {
            goto LABEL_183;
          }
        }
      }
      if (v200 >= *(unsigned __int8 *)(v208 + 594))
      {
        uint64_t v8 = 0;
        *(void *)(a4 + 8) = *(void *)a4;
        *(void *)(a4 + 48) = *(void *)(a4 + 40);
        *(void *)&long long v191 = -1;
        *((void *)&v191 + 1) = -1;
        _OWORD *v203 = v191;
        *(_OWORD *)(a4 + 88) = v191;
        *(_OWORD *)(a4 + 104) = v191;
        *(void *)(a4 + 120) = -1;
        *(_DWORD *)(a4 + 24) = 0;
        *(_DWORD *)(a4 + 64) = 0;
        *(_DWORD *)(a4 + 128) = 0;
        *(void *)(a4 + 136) = -1;
        *(_DWORD *)(a4 + 144) = 0;
        *(_OWORD *)(a4 + 152) = xmmword_20E2060;
        *(_WORD *)(a4 + 168) = 0;
        *(unsigned char *)(a4 + 170) = 0;
        *(void *)(a4 + 176) = 0;
        *(unsigned char *)(a4 + 188) = 0;
        *(unsigned char *)(a4 + 190) = 0;
        goto LABEL_234;
      }
      unint64_t v155 = v220;
      if ((unint64_t)v220 >= v221)
      {
        long long v159 = (char *)__p;
        unint64_t v160 = 0xCCCCCCCCCCCCCCCDLL * ((v220 - (unsigned char *)__p) >> 3);
        unint64_t v161 = v160 + 1;
        if (v160 + 1 > 0x666666666666666) {
          sub_2E00();
        }
        if (0x999999999999999ALL * ((uint64_t)(v221 - (void)__p) >> 3) > v161) {
          unint64_t v161 = 0x999999999999999ALL * ((uint64_t)(v221 - (void)__p) >> 3);
        }
        if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v221 - (void)__p) >> 3) >= 0x333333333333333) {
          unint64_t v162 = 0x666666666666666;
        }
        else {
          unint64_t v162 = v161;
        }
        if (v162)
        {
          if (v162 > 0x666666666666666) {
            sub_188D718();
          }
          unint64_t v196 = v162;
          uint64_t v163 = (char *)operator new(40 * v162);
          unint64_t v162 = v196;
        }
        else
        {
          uint64_t v163 = 0;
        }
        uint64_t v171 = &v163[40 * v160];
        long long v172 = *(_OWORD *)v124;
        long long v173 = *((_OWORD *)v124 + 1);
        *((void *)v171 + 4) = v124[4];
        *(_OWORD *)uint64_t v171 = v172;
        *((_OWORD *)v171 + 1) = v173;
        unint64_t v174 = v171;
        if (v155 != v159)
        {
          do
          {
            long long v175 = *(_OWORD *)(v155 - 40);
            long long v176 = *(_OWORD *)(v155 - 24);
            *((void *)v174 - 1) = *((void *)v155 - 1);
            *(_OWORD *)(v174 - 24) = v176;
            *(_OWORD *)(v174 - 40) = v175;
            v174 -= 40;
            v155 -= 40;
          }
          while (v155 != v159);
          unint64_t v155 = v159;
        }
        long long v158 = v171 + 40;
        long long __p = v174;
        uint64_t v220 = v171 + 40;
        unint64_t v221 = (unint64_t)&v163[40 * v162];
        if (v155) {
          operator delete(v155);
        }
      }
      else
      {
        long long v156 = *(_OWORD *)v124;
        long long v157 = *((_OWORD *)v124 + 1);
        *((void *)v220 + 4) = v124[4];
        *(_OWORD *)unint64_t v155 = v156;
        *((_OWORD *)v155 + 1) = v157;
        long long v158 = v155 + 40;
      }
      uint64_t v220 = v158;
      unint64_t v177 = (unint64_t)v124[4];
      unint64_t v178 = *(void *)(v192 + 32);
      if ((v177 & 0xFFFFFFFFFFFFLL) == (v178 & 0xFFFFFFFFFFFFLL)
        && ((v177 & 0xFF000000000000) == 0) != (HIWORD(v178) & 1))
      {
        *(_DWORD *)(a4 + 24) = v200 + 41;
        uint64_t v198 = -1 - 0x3333333333333333 * ((v158 - (unsigned char *)__p) >> 3);
      }
      ++v200;
      if (v198 != -1)
      {
        unint64_t v179 = (unint64_t)v124[4];
        unint64_t v180 = *(void *)(v192 + 32);
        if ((v179 & 0xFFFFFFFFFFFFLL) != (v180 & 0xFFFFFFFFFFFFLL)
          || ((v179 & 0xFF000000000000) == 0) == (HIWORD(v180) & 1))
        {
          continue;
        }
      }
      size_t v181 = *v124;
      unint64_t v182 = (unsigned __int16 *)((char *)*v124 - **v124);
      if (*v182 >= 0x2Fu)
      {
        uint64_t v183 = v182[23];
        if (v182[23])
        {
          BOOL v106 = 1;
          switch(*((unsigned char *)v181 + v183))
          {
            case 6:
            case 0xC:
            case 0x2B:
              uint64_t v184 = v182[5];
              if (!v184 || (*((unsigned char *)v181 + v184 + 2) & 0x20) == 0) {
                goto LABEL_133;
              }
              break;
            case 0x2C:
              goto LABEL_133;
            default:
              break;
          }
          if (*((unsigned char *)v181 + v183) == 14)
          {
            BOOL v106 = 1;
            goto LABEL_133;
          }
        }
      }
    }
    uint64_t v185 = *(void *)(v192 + 32);
    if ((v185 & 0xFFFFFFFFFFFFLL) == ((unint64_t)v234 & 0xFFFFFFFFFFFFLL)
      && ((v185 & 0xFF000000000000) == 0x1000000000000) != (((unint64_t)v234 >> 48) & 1))
    {
      *(_DWORD *)(a4 + 24) = 26;
    }
    if (!sub_6906B4((char **)&v232)
      || __p == v220
      || (uint64_t v186 = *((void *)v220 - 1),
          unint64_t v187 = *(void *)(v192 + 32),
          (v186 & 0xFFFFFFFFFFFFLL) != (v187 & 0xFFFFFFFFFFFFLL))
      || ((v186 & 0xFF000000000000) == 0) == (HIWORD(v187) & 1))
    {
      unint64_t v188 = v193;
      if (*(_DWORD *)(a4 + 24) != 26 && v99 < *(void *)(v208 + 608))
      {
        uint64_t v8 = sub_69E374(v208, a2, v193, a4);
        goto LABEL_234;
      }
    }
    else
    {
      *(_DWORD *)(a4 + 24) = 26;
      unint64_t v188 = v193;
    }
    if (sub_69ECF0((int ***)&__p) & 1 | !v202)
    {
      long long v189 = v233;
      *(_OWORD *)(v208 + 64) = v232;
      *(_OWORD *)(v208 + 80) = v189;
      *(void *)(v208 + 96) = v234;
      if ((void **)(v208 + 144) != &__p) {
        sub_4721B0((void *)(v208 + 144), (char *)__p, v220, 0xCCCCCCCCCCCCCCCDLL * ((v220 - (unsigned char *)__p) >> 3));
      }
      *(void *)(v208 + 168) = v198;
      *(_DWORD *)(v208 + 176) = 6;
      if ((*(_DWORD *)(a4 + 24) - 41) > 0x12) {
        uint64_t v190 = -1;
      }
      else {
        uint64_t v190 = v24 + ~v188;
      }
      *(void *)(a4 + 176) = v190;
    }
    else
    {
      sub_693CB0(a4);
      sub_695C3C(v208, a2, v188, 0, (uint64_t)&v209);
      sub_69E4EC(a4, (uint64_t)&v209);
      sub_592058((uint64_t)&v209);
    }
    uint64_t v8 = 1;
LABEL_234:
    if (__p)
    {
      uint64_t v220 = (char *)__p;
      operator delete(__p);
    }
    if (v222)
    {
      size_t v223 = v222;
      operator delete(v222);
    }
  }
  return v8;
}

void sub_695AA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,void *__p,uint64_t a54)
{
  if (__p)
  {
    operator delete(__p);
    __int16 v56 = *(void **)(v54 - 248);
    if (!v56) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    __int16 v56 = *(void **)(v54 - 248);
    if (!v56) {
      goto LABEL_3;
    }
  }
  *(void *)(v54 - 240) = v56;
  operator delete(v56);
  _Unwind_Resume(exception_object);
}

void sub_695C3C(uint64_t a1@<X0>, void *a2@<X1>, unint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v9 = (int **)(a1 + 64);
  sub_6A115C(a1, a2, a3, a4, a1 + 64);
  unint64_t v10 = *(void *)(a1 + 168);
  uint64_t v11 = (void *)(a5 + 40);
  uint64_t v12 = (_OWORD *)(a5 + 72);
  if (*(void *)(a1 + 144) == *(void *)(a1 + 152) || v10 == -1)
  {
    *(void *)a5 = 0;
    *(void *)(a5 + 8) = 0;
    *(_DWORD *)(a5 + 24) = 0;
    *(void *)(a5 + 16) = 0;
    *(void *)(a5 + 32) = -1;
    *(void *)(a5 + 48) = 0;
    *(void *)(a5 + 56) = 0;
    *uint64_t v11 = 0;
    *(_DWORD *)(a5 + 64) = 0;
    *(void *)&long long v14 = -1;
    *((void *)&v14 + 1) = -1;
    *uint64_t v12 = v14;
    *(_OWORD *)(a5 + 88) = v14;
    *(_OWORD *)(a5 + 104) = v14;
    *(void *)(a5 + 120) = -1;
    *(_DWORD *)(a5 + 128) = 0;
    *(void *)(a5 + 136) = -1;
    *(_DWORD *)(a5 + 144) = 0;
    *(_OWORD *)(a5 + 152) = xmmword_20E2060;
    *(_WORD *)(a5 + 168) = 0;
    *(unsigned char *)(a5 + 170) = 0;
    *(void *)(a5 + 183) = 0;
    *(void *)(a5 + 176) = 0;
    return;
  }
  uint64_t v32 = sub_5A7C34((void *)(a1 + 144), *(void *)(a1 + 168));
  *(void *)(a5 + 8) = 0;
  *(void *)(a5 + 16) = 0;
  *(void *)a5 = 0;
  *(_DWORD *)(a5 + 24) = 0;
  *(void *)(a5 + 32) = -1;
  *(void *)(a5 + 48) = 0;
  *(void *)(a5 + 56) = 0;
  *uint64_t v11 = 0;
  *(_DWORD *)(a5 + 64) = 0;
  *(void *)&long long v15 = -1;
  *((void *)&v15 + 1) = -1;
  *uint64_t v12 = v15;
  *(_OWORD *)(a5 + 88) = v15;
  *(_OWORD *)(a5 + 104) = v15;
  *(void *)(a5 + 120) = -1;
  *(_DWORD *)(a5 + 128) = 0;
  *(void *)(a5 + 136) = -1;
  *(_DWORD *)(a5 + 144) = 0;
  *(_OWORD *)(a5 + 152) = xmmword_20E2060;
  *(_WORD *)(a5 + 168) = 0;
  *(unsigned char *)(a5 + 170) = 0;
  *(void *)(a5 + 176) = 0;
  uint64_t v16 = (uint64_t *)(a5 + 176);
  *(void *)(a5 + 183) = 0;
  if ((sub_69ED94(a1, a2, a3, a5, (uint64_t)v9) & 1) == 0
    && (sub_6A2A64(a1, a2, a3, (void *)(a1 + 144), v10, a5) & 1) == 0)
  {
    uint64_t v17 = *(void *)(a1 + 96);
    unint64_t v18 = *(void *)(v32 + 32);
    if ((v17 & 0xFFFFFFFFFFFFLL) == (v18 & 0xFFFFFFFFFFFFLL)
      && ((v17 & 0xFF000000000000) == 0x1000000000000) != (HIWORD(v18) & 1))
    {
      __src[0] = *(void *)(a1 + 96);
      __src[1] = v18;
      sub_2D8554((void *)a5, (char *)__src, (char *)&v35, 2uLL);
      *(_DWORD *)(a5 + 24) = 35;
      return;
    }
    if ((sub_69A840(a1, v9, (uint64_t *)(a1 + 144), v10, 1, a5) & 1) == 0
      && !sub_69C61C(a1, (uint64_t)v9, (uint64_t *)(a1 + 144), v10, a5))
    {
      goto LABEL_24;
    }
    uint64_t v20 = *(void *)a5;
    uint64_t v19 = *(void *)(a5 + 8);
    unint64_t v21 = sub_46C760(a2);
    if (v21 - a3 >= (v19 - v20) >> 3) {
      unint64_t v22 = (v19 - v20) >> 3;
    }
    else {
      unint64_t v22 = v21 - a3;
    }
    uint64_t v23 = *(void *)a5;
    sub_46B058();
    uint64_t v16 = (uint64_t *)(a5 + 176);
    if (!sub_6A2F18(v23, v23 + 8 * v22, v25, v24 + a3)) {
      goto LABEL_23;
    }
    sub_6A2F9C((uint64_t *)a5, v22);
    unint64_t v26 = *(void *)(a5 + 152);
    uint64_t v27 = (uint64_t)(*(void *)(a5 + 8) - *(void *)a5) >> 3;
    if (v26 != -1 && *(void *)(a5 + 160) != 0x7FFFFFFFFFFFFFFFLL && v26 >= v27 - 1)
    {
      *(void *)(a5 + 152) = v27 - 1;
      *(void *)(a5 + 160) = 0;
    }
    uint64_t v28 = (int **)sub_46C8EC(a2, a3 + v27 - 1);
    if (sub_6618C0(a1 + 3048, v28))
    {
LABEL_23:
      sub_6A115C(a1, a2, a3, a4, (uint64_t)v9);
LABEL_24:
      *(_DWORD *)(a1 + 176) = 0;
      sub_69878C(a1, a2, a3, v9, a5, 0);
      int v29 = *(_DWORD *)(a5 + 24);
      if ((v29 == 3 || !v29) && sub_69E040((uint64_t *)a1, a2, a3)) {
        *(_DWORD *)(a5 + 24) = 12;
      }
      uint64_t v30 = sub_6D7AFC(a1 + 1160, v9, (uint64_t *)(a1 + 144), v10);
      if ((*(_DWORD *)(a5 + 24) & 0xFFFFFFFE) == 0x14
        && v30 == v10
        && 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a1 + 152) - *(void *)(a1 + 144)) >> 3) >= 2)
      {
        uint64_t v31 = (int **)sub_5A7C34((void *)(a1 + 144), v10 == 0);
        if (sub_69BBEC(a1, a2, a3 + 1, v31)) {
          *(_DWORD *)(a5 + 24) = 0;
        }
      }
      *uint64_t v16 = sub_699998((uint64_t *)a1, a5);
    }
  }
}

void sub_696040(_Unwind_Exception *a1)
{
  sub_592058(v1);
  _Unwind_Resume(a1);
}

void sub_696054(_Unwind_Exception *a1)
{
  sub_592058(v1);
  _Unwind_Resume(a1);
}

void sub_696068(_Unwind_Exception *a1)
{
  sub_592058(v1);
  _Unwind_Resume(a1);
}

void sub_69607C(_Unwind_Exception *a1)
{
  sub_592058(v1);
  _Unwind_Resume(a1);
}

void sub_696090(_Unwind_Exception *a1)
{
  sub_592058(v1);
  _Unwind_Resume(a1);
}

void sub_6960A4(_Unwind_Exception *a1)
{
  sub_592058(v1);
  _Unwind_Resume(a1);
}

void sub_6960B8(_Unwind_Exception *a1)
{
  sub_592058(v1);
  _Unwind_Resume(a1);
}

void sub_6960CC(_Unwind_Exception *a1)
{
  sub_592058(v1);
  _Unwind_Resume(a1);
}

void sub_6960E0(_Unwind_Exception *a1)
{
  sub_592058(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_6960F4@<X0>(uint64_t a1@<X0>, int **a2@<X1>, uint64_t *a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result = sub_5A7C34(a3, a4);
  uint64_t v11 = result;
  uint64_t v12 = *a2;
  unint64_t v13 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v14 = *v13;
  if (v14 >= 0x2F)
  {
    uint64_t v15 = v13[23];
    if (v13[23])
    {
      unsigned int v16 = *((unsigned __int8 *)v12 + v15);
      BOOL v17 = v16 > 0x36;
      uint64_t v18 = (1 << v16) & 0x44000000000008;
      if (!v17 && v18 != 0) {
        goto LABEL_38;
      }
    }
  }
  uint64_t v20 = (unsigned __int16 *)(*(void *)result - **(int **)result);
  if (*v20 >= 0x2Fu)
  {
    uint64_t v21 = v20[23];
    if (v21)
    {
      unsigned int v22 = *(unsigned __int8 *)(*(void *)result + v21);
      BOOL v17 = v22 > 0x36;
      uint64_t v23 = (1 << v22) & 0x44000000000008;
      if (!v17 && v23 != 0)
      {
        *(_DWORD *)a5 = 6;
        *(unsigned char *)(a5 + 4) = 1;
        return result;
      }
    }
  }
  if (v14 >= 0x2F)
  {
    LODWORD(v15) = v13[23];
    if (v13[23])
    {
LABEL_38:
      unsigned int v25 = *((unsigned __int8 *)v12 + v15);
      if (v25 <= 0x36 && ((1 << v25) & 0x44000000000008) != 0)
      {
        uint64_t v27 = (unsigned __int16 *)(*(void *)result - **(int **)result);
        if (*v27 >= 0x2Fu)
        {
          uint64_t v28 = v27[23];
          if (v28)
          {
            unsigned int v29 = *(unsigned __int8 *)(*(void *)result + v28);
            BOOL v17 = v29 > 0x36;
            uint64_t v30 = (1 << v29) & 0x44000000000008;
            if (!v17 && v30 != 0)
            {
              *(_DWORD *)a5 = 0;
              *(unsigned char *)(a5 + 4) = 1;
              return result;
            }
          }
        }
      }
      unsigned int v32 = *((unsigned __int8 *)v12 + v15);
      if (v32 <= 0x36 && ((1 << v32) & 0x44000000000008) != 0)
      {
        if ((unint64_t v34 = (unsigned __int16 *)(*(void *)result - **(int **)result), *v34 < 0x2Fu)
          || (uint64_t v35 = v34[23]) == 0
          || ((unsigned int v36 = *(unsigned __int8 *)(*(void *)result + v35),
               BOOL v17 = v36 > 0x36,
               uint64_t v37 = (1 << v36) & 0x44000000000008,
               !v17)
            ? (BOOL v38 = v37 == 0)
            : (BOOL v38 = 1),
              v38))
        {
          int v43 = 7;
          goto LABEL_91;
        }
      }
      if (*((unsigned char *)v12 + v15) == 17) {
        goto LABEL_42;
      }
    }
  }
  uint64_t v39 = *(void *)result;
  long long v40 = (unsigned __int16 *)(*(void *)result - **(int **)result);
  unsigned int v41 = *v40;
  if (v41 >= 0x2F && v40[23] && *(unsigned char *)(v39 + v40[23]) == 17) {
    goto LABEL_42;
  }
  if (v14 < 0xB || (uint64_t v42 = v13[5]) == 0 || (*(int *)((char *)v12 + v42) & 0x208) != 8)
  {
    if (v41 >= 0xB && v40[5] && (*(_DWORD *)(v39 + v40[5]) & 0x208) == 8)
    {
      int v43 = 22;
LABEL_91:
      *(_DWORD *)a5 = v43;
      goto LABEL_92;
    }
    if (v14 < 0xB || (LODWORD(v42) = v13[5]) == 0)
    {
LABEL_68:
      if (v41 >= 0xB && v40[5] && (*(unsigned char *)(v39 + v40[5] + 1) & 2) != 0)
      {
        BOOL v47 = *(unsigned char *)(a1 + 1096) == 0;
        int v43 = 91;
        int v48 = 22;
        goto LABEL_89;
      }
      if (v14 < 0xB) {
        goto LABEL_80;
      }
      LODWORD(v42) = v13[5];
      if (!v13[5]) {
        goto LABEL_80;
      }
LABEL_73:
      if ((*((unsigned char *)v12 + v42 + 1) & 2) != 0
        && (v41 < 0xB || !v40[5] || (*(unsigned char *)(v39 + v40[5] + 1) & 2) == 0))
      {
        BOOL v47 = *(unsigned char *)(a1 + 1096) == 0;
        int v43 = 92;
        int v48 = 23;
        goto LABEL_89;
      }
      int v45 = *(int *)((char *)v12 + v42) & 0x200;
      BOOL v46 = v41 < 0xB || v45 == 0;
      if (v46 || !v40[5] || (*(unsigned char *)(v39 + v40[5] + 1) & 2) == 0)
      {
LABEL_80:
        uint64_t result = sub_699E4C(a1, a2, a3, a4);
        if (!result)
        {
          *(void *)a5 = 0;
          return result;
        }
        int v43 = 5;
        goto LABEL_91;
      }
      uint64_t result = sub_699DF8((uint64_t)a3);
      if (result) {
        goto LABEL_42;
      }
      uint64_t result = sub_2E79EC(*(void *)a1, (uint64_t)a2[4], *(void *)(v11 + 32));
      if (result) {
        goto LABEL_42;
      }
      BOOL v47 = *(unsigned char *)(a1 + 1096) == 0;
      int v43 = 93;
      int v48 = 24;
LABEL_89:
      if (v47) {
        int v43 = v48;
      }
      goto LABEL_91;
    }
  }
  if ((*(int *)((char *)v12 + v42) & 0x208) == 8)
  {
    if (v41 < 0xB || !v40[5] || (uint64_t result = 520, (*(_DWORD *)(v39 + v40[5]) & 0x208) != 8))
    {
      int v43 = 23;
      goto LABEL_91;
    }
  }
  BOOL v44 = v41 >= 0xB && (*(int *)((char *)v12 + v42) & 0x208) == 8;
  if (!v44 || !v40[5] || (*(_DWORD *)(v39 + v40[5]) & 0x208) != 8)
  {
    if ((*((unsigned char *)v12 + v42 + 1) & 2) != 0) {
      goto LABEL_73;
    }
    goto LABEL_68;
  }
  uint64_t result = sub_699D9C((uint64_t)a3);
  if ((result & 1) == 0)
  {
    uint64_t result = sub_2E79EC(*(void *)a1, (uint64_t)a2[4], *(void *)(v11 + 32));
    if ((result & 1) == 0)
    {
      int v43 = 24;
      goto LABEL_91;
    }
  }
LABEL_42:
  *(_DWORD *)a5 = 0;
LABEL_92:
  *(unsigned char *)(a5 + 4) = 1;
  return result;
}

uint64_t sub_696570(uint64_t a1, int **a2, long long **a3)
{
  uint64_t v6 = (unsigned __int16 *)((char *)*a2 - **a2);
  if (*v6 >= 0x2Fu)
  {
    uint64_t v7 = v6[23];
    if (v7)
    {
      int v8 = *((unsigned __int8 *)*a2 + v7);
      if (v8 == 9 || v8 == 20) {
        return 0;
      }
    }
  }
  uint64_t v11 = *a3;
  uint64_t v12 = a3[1];
  if (*a3 == v12) {
    return 1;
  }
  while (1)
  {
    long long v13 = *v11;
    long long v14 = v11[1];
    uint64_t v26 = *((void *)v11 + 4);
    long long v24 = v13;
    long long v25 = v14;
    if (fabs(sub_6D82EC(a1 + 1160, a2, (int **)&v24)) > *(double *)(a1 + 184)) {
      return 0;
    }
    uint64_t v11 = (long long *)((char *)v11 + 40);
    if (v11 == v12)
    {
      unsigned int v16 = *a3;
      uint64_t v15 = a3[1];
      while (1)
      {
        if (v16 == v15) {
          return 1;
        }
        long long v17 = *v16;
        long long v18 = v16[1];
        uint64_t v26 = *((void *)v16 + 4);
        long long v24 = v17;
        long long v25 = v18;
        uint64_t v19 = (unsigned int *)sub_2E4738((int **)&v24);
        uint64_t v20 = (unsigned __int16 *)(v24 - *(int *)v24);
        unsigned int v21 = *v20;
        if (v21 >= 0x2F)
        {
          if (v20[23])
          {
            int v22 = *(unsigned __int8 *)(v24 + v20[23]);
            if (v22 == 9) {
              goto LABEL_16;
            }
            if (!*(unsigned char *)(a1 + 695) || v22 == 20)
            {
              if (v22 == 20) {
                goto LABEL_16;
              }
            }
            else if (v22 == 43)
            {
              goto LABEL_16;
            }
          }
        }
        else if (v21 < 9)
        {
          goto LABEL_14;
        }
        uint64_t v23 = v20[4];
        if (v23)
        {
          if (*(unsigned int *)(v24 + v23) > *(uint64_t *)(a1 + 704)) {
            return 0;
          }
          goto LABEL_15;
        }
LABEL_14:
        if (*(uint64_t *)(a1 + 704) < 0) {
          return 0;
        }
LABEL_15:
        uint64_t result = sub_6A2570(a1, v19);
        if (!result) {
          return result;
        }
LABEL_16:
        unsigned int v16 = (long long *)((char *)v16 + 40);
      }
    }
  }
}

void sub_696728(uint64_t a1@<X0>, int **a2@<X1>, int ***a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  if (!*(unsigned char *)(a1 + 1057)) {
    goto LABEL_25;
  }
  unint64_t v10 = *a2;
  uint64_t v11 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v12 = *v11;
  if (*((unsigned char *)a2 + 38))
  {
    if (v12 < 0xB || !v11[5] || (*(int *)((char *)v10 + v11[5]) & 0x4000) == 0)
    {
LABEL_25:
      *(void *)a5 = 0;
      return;
    }
  }
  else if (v12 < 0xB || !v11[5] || (*(int *)((char *)v10 + v11[5]) & 0x100000) == 0)
  {
    goto LABEL_25;
  }
  if ((char *)a3[1] - (char *)*a3 != 80) {
    goto LABEL_25;
  }
  if (a4 >= 2) {
    goto LABEL_25;
  }
  if (v12 < 0x2F) {
    goto LABEL_25;
  }
  uint64_t v13 = v11[23];
  if (!v13) {
    goto LABEL_25;
  }
  if (*((unsigned char *)v10 + v13)) {
    goto LABEL_25;
  }
  long long v14 = (void *)sub_5A7C34(a3, 0);
  uint64_t v15 = (unsigned __int16 *)(*v14 - *(int *)*v14);
  if (*v15 < 0x2Fu) {
    goto LABEL_25;
  }
  uint64_t v16 = v15[23];
  if (!v16) {
    goto LABEL_25;
  }
  unsigned int v17 = *(unsigned __int8 *)(*v14 + v16);
  BOOL v18 = v17 > 0x1A;
  int v19 = (1 << v17) & 0x4810001;
  if (v18 || v19 == 0) {
    goto LABEL_25;
  }
  unsigned int v21 = (void *)sub_5A7C34(a3, 1uLL);
  if ((sub_6A3754(v21) & 1) == 0 || sub_69B8C0(a1, a2, a3) != 2) {
    goto LABEL_25;
  }
  int v22 = (int **)sub_5A7C34(a3, 0);
  uint64_t v23 = (int **)sub_5A7C34(a3, 1uLL);
  double v24 = sub_697680(a1, a2, v22, v23);
  if (a4)
  {
    int v26 = 65;
    int v27 = 66;
  }
  else
  {
    int v26 = 66;
    int v27 = 65;
  }
  if (v24 < v25) {
    int v26 = v27;
  }
  *(_DWORD *)a5 = v26;
  *(unsigned char *)(a5 + 4) = 1;
}

BOOL sub_6968F4(uint64_t a1, int **a2, uint64_t *a3, unint64_t a4, unint64_t a5, char a6)
{
  if (a4 > 1) {
    return 0;
  }
  BOOL v6 = 0;
  if (sub_699FA4(a1, a2, (uint64_t)a3, a4, a5))
  {
    unint64_t v132 = a5;
    if ((a6 & 1) == 0)
    {
      uint64_t v14 = sub_5A7C34(a3, a4);
      uint64_t v15 = sub_5A7C34(a3, 1 - a4);
      sub_2954EC(*(void *)a1, (uint64_t)a2[4], (uint64_t)&v139);
      uint64_t v16 = __p;
      if (__p == v141)
      {
        unsigned int v137 = -1;
        unsigned int v18 = -1;
        if (!__p)
        {
LABEL_9:
          sub_2954EC(*(void *)a1, (uint64_t)a2[4], (uint64_t)&v139);
          int v19 = __p;
          if (__p == v141)
          {
            unsigned int v20 = -1;
            unsigned int v22 = -1;
            if (!__p)
            {
LABEL_12:
              sub_2954EC(*(void *)a1, *(void *)(v14 + 32), (uint64_t)&v139);
              uint64_t v23 = __p;
              unint64_t v134 = (char **)v14;
              unint64_t v135 = a2;
              if (__p == v141)
              {
                unint64_t v26 = 0xFFFFFFFF00000000;
                uint64_t v27 = 0xFFFFFFFFLL;
                if (!__p)
                {
LABEL_15:
                  sub_2954EC(*(void *)a1, *(void *)(v15 + 32), (uint64_t)&v139);
                  uint64_t v28 = __p;
                  long long v133 = (int **)v15;
                  if (__p == v141)
                  {
                    unint64_t v31 = 0xFFFFFFFF00000000;
                    uint64_t v32 = 0xFFFFFFFFLL;
                    if (!__p) {
                      goto LABEL_18;
                    }
                  }
                  else
                  {
                    unint64_t v29 = sub_2E1AA4((uint64_t)&v139);
                    unsigned int v30 = v29;
                    unint64_t v31 = v29 & 0xFFFFFFFF00000000;
                    uint64_t v28 = __p;
                    uint64_t v32 = v30;
                    if (!__p)
                    {
LABEL_18:
                      double v33 = (double)v137 - (double)v20;
                      double v34 = (double)v22 - (double)v18;
                      if (v33 != 0.0 || (double v35 = 0.0, v36 = 0.0, v34 != 0.0))
                      {
                        double v37 = ((double)v18 - (double)v22) * (double)v137 + ((double)v20 - (double)v137) * (double)v18;
                        double v38 = v34 * v34 + v33 * v33;
                        double v39 = -(v37 + v33 * (double)v27 + v34 * (double)HIDWORD(v26)) / v38;
                        LODWORD(v40) = (v34 * v39 + (double)HIDWORD(v26));
                        if (v40 >= 0xFFFFFFFE) {
                          uint64_t v40 = 4294967294;
                        }
                        else {
                          uint64_t v40 = v40;
                        }
                        double v35 = sqrt((double)(((v33 * v39 + (double)v27) - v27)
                                          * ((v33 * v39 + (double)v27) - v27)
                                          + (v40 - HIDWORD(v26)) * (v40 - HIDWORD(v26))))
                            / 100.0;
                        double v41 = -(v37 + v33 * (double)v32 + v34 * (double)HIDWORD(v31)) / v38;
                        double v42 = v33 * v41 + (double)v32;
                        LODWORD(v40) = (v34 * v41 + (double)HIDWORD(v31));
                        if (v40 >= 0xFFFFFFFE) {
                          uint64_t v40 = 4294967294;
                        }
                        else {
                          uint64_t v40 = v40;
                        }
                        double v34 = sqrt((double)((v42 - v32) * (v42 - v32)
                                          + (v40 - HIDWORD(v31)) * (v40 - HIDWORD(v31))));
                        double v36 = v34 / 100.0;
                      }
                      LODWORD(v34) = *(_DWORD *)(a1 + 360);
                      double v43 = (double)*(unint64_t *)&v34;
                      LODWORD(v34) = *(_DWORD *)(a1 + 356);
                      double v44 = (double)*(unint64_t *)&v34;
                      unint64_t v45 = sub_2E68E8(*(void *)a1, (uint64_t)v135[4]);
                      if (v45 <= 0xFFFFFFFEFFFFFFFFLL && v45)
                      {
                        BOOL v46 = v134;
                        BOOL v6 = 0;
                        int v47 = sub_2E79EC(*(void *)a1, (uint64_t)v135[4], (uint64_t)v134[4]) ^ 1;
                        if (v36 <= v43) {
                          int v48 = 1;
                        }
                        else {
                          int v48 = v47;
                        }
                        BOOL v49 = v36 <= v43 || v35 >= v44;
                        if (v35 >= v36) {
                          int v48 = 1;
                        }
                        if (v48 != 1 || !v49) {
                          return v6;
                        }
                      }
                      else
                      {
                        BOOL v46 = v134;
                        if (v35 < v44 && v36 > v43) {
                          return 0;
                        }
                      }
                      unint64_t v50 = (unint64_t)v46[4];
                      uint64_t v51 = v50 & 0xFF000000000000;
                      uint64_t v52 = (int *)sub_2D5D58(*(void *)a1, v50 & 0xFFFFFFFFFFFFLL);
                      uint64_t v53 = (unsigned __int16 *)((char *)v52 - *v52);
                      unsigned int v54 = *v53;
                      if (v51)
                      {
                        uint64_t v55 = (char **)v133;
                        if (v54 < 0x29 || (unsigned int v56 = v53[20]) == 0)
                        {
LABEL_57:
                          unsigned int v57 = sub_69A548(*(void *)a1, (unint64_t)v46[4] ^ 0x1000000000000);
LABEL_58:
                          unint64_t v58 = (unint64_t)v55[4];
                          uint64_t v59 = v58 & 0xFF000000000000;
                          uint64_t v60 = (int *)sub_2D5D58(*(void *)a1, v58 & 0xFFFFFFFFFFFFLL);
                          uint64_t v61 = (unsigned __int16 *)((char *)v60 - *v60);
                          unsigned int v62 = *v61;
                          if (v59)
                          {
                            if (v62 < 0x29 || (unsigned int v63 = v61[20]) == 0)
                            {
LABEL_65:
                              unsigned int v64 = sub_69A548(*(void *)a1, (unint64_t)v55[4] ^ 0x1000000000000);
LABEL_66:
                              if (v57) {
                                BOOL v65 = v64 == 0;
                              }
                              else {
                                BOOL v65 = 1;
                              }
                              int v66 = !v65;
                              int v136 = v66;
                              BOOL v130 = v65 && sub_69A5C0(a1, v135, (uint64_t)v46, (uint64_t)v55);
                              if (v64 >= v57) {
                                unsigned int v67 = v57;
                              }
                              else {
                                unsigned int v67 = v64;
                              }
                              int v129 = sub_6D7A80(a1 + 1160, v55);
                              int v68 = sub_6D7A80(a1 + 1160, v46);
                              uint64_t v69 = *v46;
                              uint64_t v70 = &(*v46)[-*(int *)*v46];
                              unsigned int v71 = *(unsigned __int16 *)v70;
                              if (*((unsigned char *)v46 + 38))
                              {
                                if (v71 >= 0xB)
                                {
                                  int v72 = *((unsigned __int16 *)v70 + 5);
                                  if (*((_WORD *)v70 + 5))
                                  {
                                    int v73 = 2;
LABEL_85:
                                    BOOL v74 = (*(_DWORD *)&v69[v72] & v73) != 0;
                                    goto LABEL_87;
                                  }
                                }
                              }
                              else if (v71 >= 0xB)
                              {
                                int v72 = *((unsigned __int16 *)v70 + 5);
                                if (*((_WORD *)v70 + 5))
                                {
                                  int v73 = 1;
                                  goto LABEL_85;
                                }
                              }
                              BOOL v74 = 0;
LABEL_87:
                              unsigned int v75 = *v55;
                              uint64_t v76 = &(*v55)[-*(int *)*v55];
                              unsigned int v77 = *(unsigned __int16 *)v76;
                              if (*((unsigned char *)v55 + 38))
                              {
                                if (v77 >= 0xB && *((_WORD *)v76 + 5))
                                {
                                  if ((v74 ^ ((*(_DWORD *)&v75[*((unsigned __int16 *)v76 + 5)] & 2) != 0))) {
                                    return 0;
                                  }
LABEL_96:
                                  if (v71 >= 0xB && (uint64_t v78 = *((unsigned __int16 *)v70 + 5)) != 0)
                                  {
                                    int v79 = (v69[v78 + 1] >> 4) & 1;
                                    if (v77 < 0xB) {
                                      goto LABEL_104;
                                    }
                                  }
                                  else
                                  {
                                    int v79 = 0;
                                    if (v77 < 0xB) {
                                      goto LABEL_104;
                                    }
                                  }
                                  if (*((_WORD *)v76 + 5))
                                  {
                                    if (v79 == (v75[*((unsigned __int16 *)v76 + 5) + 1] & 0x10) >> 4)
                                    {
LABEL_105:
                                      int v128 = v68;
                                      uint64_t v139 = 0;
                                      long long __p = 0;
                                      int v142 = 0;
                                      long long v141 = 0;
                                      uint64_t v143 = -1;
                                      uint64_t v144 = 0;
                                      uint64_t v145 = 0;
                                      uint64_t v146 = 0;
                                      int v147 = 0;
                                      *(void *)&long long v80 = -1;
                                      *((void *)&v80 + 1) = -1;
                                      long long v148 = v80;
                                      long long v149 = v80;
                                      long long v150 = v80;
                                      uint64_t v151 = -1;
                                      int v152 = 0;
                                      uint64_t v153 = -1;
                                      int v154 = 0;
                                      long long v155 = xmmword_20E2060;
                                      __int16 v156 = 0;
                                      char v157 = 0;
                                      *(void *)((char *)v158 + 7) = 0;
                                      v158[0] = 0;
                                      if (sub_69A840(a1, v135, a3, 1 - a4, 0, (uint64_t)&v139))
                                      {
LABEL_106:
                                        BOOL v6 = 0;
LABEL_107:
                                        sub_592058((uint64_t)&v139);
                                        return v6;
                                      }
                                      int v131 = v57 - v64;
                                      uint64_t v81 = &(*v46)[-*(int *)*v46];
                                      if (*(unsigned __int16 *)v81 >= 0x2Fu)
                                      {
                                        uint64_t v82 = *((unsigned __int16 *)v81 + 23);
                                        if (v82)
                                        {
                                          unsigned int v83 = (*v46)[v82];
                                          if (v83 <= 0x2A && ((1 << v83) & 0x50426810004) != 0)
                                          {
                                            uint64_t v84 = &(*v55)[-*(int *)*v55];
                                            if (*(unsigned __int16 *)v84 >= 0x2Fu)
                                            {
                                              uint64_t v85 = *((unsigned __int16 *)v84 + 23);
                                              if (v85)
                                              {
                                                unsigned int v86 = (*v55)[v85];
                                                if (v86 <= 0x2A && ((1 << v86) & 0x50426810004) != 0)
                                                {
                                                  BOOL v6 = v131 < *(_DWORD *)(a1 + 420);
                                                  goto LABEL_107;
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      uint64_t v87 = *v55;
                                      unint64_t v88 = &(*v55)[-*(int *)*v55];
                                      unsigned int v89 = *(unsigned __int16 *)v88;
                                      if (v89 < 0x2F)
                                      {
                                        if (v89 < 0xB) {
                                          goto LABEL_128;
                                        }
                                      }
                                      else if (*((_WORD *)v88 + 23) && v87[*((unsigned __int16 *)v88 + 23)] == 28)
                                      {
                                        goto LABEL_106;
                                      }
                                      if (*((_WORD *)v88 + 5) && (v87[*((unsigned __int16 *)v88 + 5)] & 4) != 0)
                                      {
                                        if (v89 < 0x2F || (uint64_t v90 = *((unsigned __int16 *)v88 + 23)) == 0)
                                        {
                                          BOOL v91 = 0;
                                          goto LABEL_132;
                                        }
                                        BOOL v91 = 0;
                                        unsigned int v92 = v87[v90];
                                        if (v92 > 0x2A || ((1 << v92) & 0x50426810004) == 0)
                                        {
LABEL_132:
                                          if (sub_6906B4((char **)v135)
                                            && (sub_6906B4(v46) & v91 & 1) != 0
                                            || sub_6D7A80(a1 + 1160, v46) < *(_DWORD *)(a1 + 368)
                                            && sub_6D7A80(a1 + 1160, v55) > *(_DWORD *)(a1 + 368))
                                          {
                                            goto LABEL_106;
                                          }
                                          uint64_t v127 = a1 + 1160;
                                          uint64_t v94 = &(*v55)[-*(int *)*v55];
                                          if (*(unsigned __int16 *)v94 >= 0x2Fu)
                                          {
                                            uint64_t v95 = *((unsigned __int16 *)v94 + 23);
                                            if (v95)
                                            {
                                              unsigned int v96 = (*v55)[v95];
                                              if (v96 <= 0x2D && ((1 << v96) & 0x208040000000) != 0)
                                              {
                                                uint64_t v97 = &(*v46)[-*(int *)*v46];
                                                if (*(unsigned __int16 *)v97 < 0x2Fu) {
                                                  goto LABEL_106;
                                                }
                                                uint64_t v98 = *((unsigned __int16 *)v97 + 23);
                                                if (!v98) {
                                                  goto LABEL_106;
                                                }
                                                BOOL v6 = 0;
                                                unsigned int v99 = (*v46)[v98];
                                                if (v99 > 0x2D || ((1 << v99) & 0x208040000000) == 0) {
                                                  goto LABEL_107;
                                                }
                                              }
                                            }
                                          }
                                          if (v132 == a4 && sub_53F508(a1, v135, (int **)v46, v133)) {
                                            goto LABEL_106;
                                          }
                                          double v100 = sub_69B2B8(a1, v135, v133, (int **)v46, v93);
                                          double v101 = sub_69B314(a1, v135, (int **)v46, v100);
                                          double v102 = sub_69B314(a1, v135, v133, v101);
                                          if (v100 >= sub_69B494(a1, v135, v133, (int **)v46, v102)) {
                                            goto LABEL_106;
                                          }
                                          if (sub_6561B0((int **)v46)
                                            && sub_699454((int **)v46)
                                            && sub_69B568(v46) >= 2)
                                          {
                                            uint64_t v103 = (unsigned __int16 *)((char *)*v135 - **v135);
                                            if (*v103 >= 0xBu && (uint64_t v104 = v103[5]) != 0)
                                            {
                                              if (v102 >= 0.0 == *((unsigned __int8 *)*v135 + v104 + 1) >> 7) {
                                                goto LABEL_106;
                                              }
                                            }
                                            else if (v102 < 0.0)
                                            {
                                              goto LABEL_106;
                                            }
                                          }
                                          if (sub_69B5C8((char **)v135))
                                          {
                                            double v105 = fabs(v102);
                                            if (fabs(v101) > *(double *)(a1 + 184) == v105 <= *(double *)(a1 + 184)) {
                                              goto LABEL_106;
                                            }
                                          }
                                          BOOL v106 = *v46;
                                          uint64_t v107 = &(*v46)[-*(int *)*v46];
                                          unsigned int v108 = *(unsigned __int16 *)v107;
                                          if (v108 >= 0x2F)
                                          {
                                            uint64_t v109 = *((unsigned __int16 *)v107 + 23);
                                            if (*((_WORD *)v107 + 23))
                                            {
                                              if (v106[v109] == 44) {
                                                goto LABEL_168;
                                              }
                                            }
                                          }
                                          uint64_t v110 = (unsigned __int16 *)((char *)*v133 - **v133);
                                          if (*v110 < 0x2Fu) {
                                            goto LABEL_177;
                                          }
                                          uint64_t v111 = v110[23];
                                          if (!v111 || *((unsigned char *)*v133 + v111) != 44) {
                                            goto LABEL_177;
                                          }
                                          if (v108 >= 0x2F)
                                          {
                                            LODWORD(v109) = *((unsigned __int16 *)v107 + 23);
                                            if (*((_WORD *)v107 + 23))
                                            {
LABEL_168:
                                              if (v106[v109] == 44)
                                              {
                                                long long v112 = (unsigned __int16 *)((char *)*v133 - **v133);
                                                if (*v112 >= 0x2Fu)
                                                {
                                                  uint64_t v113 = v112[23];
                                                  if (v113)
                                                  {
                                                    if (*((unsigned char *)*v133 + v113) == 44) {
                                                      goto LABEL_171;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          if ((sub_69B640((uint64_t)&v138, v46) & 1) != 0
                                            || sub_69B640((uint64_t)&v138, v133))
                                          {
LABEL_171:
                                            unint64_t v114 = sub_2E68E8(*(void *)a1, (uint64_t)v46[4]);
                                            if (v114 <= 0xFFFFFFFEFFFFFFFFLL)
                                            {
                                              if (v114)
                                              {
                                                unint64_t v115 = sub_2E68E8(*(void *)a1, (uint64_t)v133[4]);
                                                if (v115 <= 0xFFFFFFFEFFFFFFFFLL
                                                  && v115
                                                  && (sub_2E79EC(*(void *)a1, (uint64_t)v46[4], (uint64_t)v133[4]) & 1) != 0)
                                                {
                                                  goto LABEL_106;
                                                }
                                              }
                                            }
                                            double v105 = vabdd_f64(v102, v101);
                                            if (v105 < *(double *)(a1 + 424)) {
                                              goto LABEL_106;
                                            }
                                          }
LABEL_177:
                                          if (v131 < 0) {
                                            char v116 = v136;
                                          }
                                          else {
                                            char v116 = 0;
                                          }
                                          if (v116) {
                                            goto LABEL_201;
                                          }
                                          unsigned int v117 = *(_DWORD *)(a1 + 364);
                                          if (v67 > v117 || v57 == v64 && v67 == v117) {
                                            goto LABEL_201;
                                          }
                                          if ((v131 & 0x80000000) == 0)
                                          {
                                            LOWORD(v105) = *(_WORD *)(a1 + 416);
                                            if (v100 >= (double)vmovl_s16(*(int16x4_t *)&v105).i32[0]) {
                                              goto LABEL_106;
                                            }
                                          }
                                          int v118 = *(_DWORD *)(a1 + 372);
                                          int v119 = *(_DWORD *)(a1 + 380);
                                          long long v120 = (unsigned __int16 *)((char *)*v133 - **v133);
                                          if (*v120 >= 0x2Fu)
                                          {
                                            uint64_t v121 = v120[23];
                                            if (v121)
                                            {
                                              unsigned int v122 = *((unsigned __int8 *)*v133 + v121);
                                              if (v122 <= 0x2A && ((1 << v122) & 0x50426810004) != 0)
                                              {
                                                long long v123 = (unsigned __int16 *)((char *)*v135 - **v135);
                                                if (*v123 >= 0xBu && (uint64_t v124 = v123[5]) != 0)
                                                {
                                                  if (v102 >= 0.0 == *((unsigned __int8 *)*v135 + v124 + 1) >> 7) {
                                                    goto LABEL_197;
                                                  }
                                                }
                                                else if (v102 < 0.0)
                                                {
                                                  goto LABEL_197;
                                                }
                                                if (fabs(v101) < *(double *)(a1 + 184))
                                                {
                                                  int v118 = *(_DWORD *)(a1 + 376);
                                                  int v119 = *(_DWORD *)(a1 + 384);
                                                }
                                              }
                                            }
                                          }
LABEL_197:
                                          if (v131 <= v118) {
                                            char v125 = v136;
                                          }
                                          else {
                                            char v125 = 0;
                                          }
                                          if ((v125 & 1) == 0)
                                          {
                                            if (sub_69B688(a1, v46, v133) || v130 && sub_69B6E8(a1, v135, v46, v133)) {
                                              goto LABEL_106;
                                            }
                                            int v126 = v129 - v128 > v119 ? 1 : v136;
                                            if (v126 == 1
                                              && ((v136 & 1) != 0
                                               || sub_6D7A80(v127, v46) < *(_DWORD *)(a1 + 368)
                                               || sub_6D7A80(v127, (char **)v133) < *(_DWORD *)(a1 + 368)
                                               || v129 - v128 > *(_DWORD *)(a1 + 388)))
                                            {
                                              goto LABEL_106;
                                            }
                                          }
LABEL_201:
                                          BOOL v6 = 1;
                                          goto LABEL_107;
                                        }
                                      }
LABEL_128:
                                      BOOL v91 = (sub_661B0C(a1 + 3048, (int **)v55) & 1) != 0
                                         || sub_6D862C((void *)(a1 + 1160), (int **)v55);
                                      goto LABEL_132;
                                    }
                                    return 0;
                                  }
LABEL_104:
                                  if ((v79 & 1) == 0) {
                                    goto LABEL_105;
                                  }
                                  return 0;
                                }
                              }
                              else if (v77 >= 0xB && *((_WORD *)v76 + 5))
                              {
                                LOBYTE(v74) = v74 ^ ((*(_DWORD *)&v75[*((unsigned __int16 *)v76 + 5)] & 1) != 0);
                              }
                              if (v74) {
                                return 0;
                              }
                              goto LABEL_96;
                            }
                          }
                          else
                          {
                            if (v62 < 0x27) {
                              goto LABEL_65;
                            }
                            unsigned int v63 = v61[19];
                            if (!v63) {
                              goto LABEL_65;
                            }
                          }
                          unsigned int v64 = *(int *)((char *)v60 + v63 + *(int *)((char *)v60 + v63));
                          if (v64) {
                            goto LABEL_66;
                          }
                          goto LABEL_65;
                        }
                      }
                      else
                      {
                        uint64_t v55 = (char **)v133;
                        if (v54 < 0x27) {
                          goto LABEL_57;
                        }
                        unsigned int v56 = v53[19];
                        if (!v56) {
                          goto LABEL_57;
                        }
                      }
                      unsigned int v57 = *(int *)((char *)v52 + v56 + *(int *)((char *)v52 + v56));
                      if (v57) {
                        goto LABEL_58;
                      }
                      goto LABEL_57;
                    }
                  }
                  long long v141 = v28;
                  operator delete(v28);
                  goto LABEL_18;
                }
              }
              else
              {
                unint64_t v24 = sub_2E1AA4((uint64_t)&v139);
                unsigned int v25 = v24;
                unint64_t v26 = v24 & 0xFFFFFFFF00000000;
                uint64_t v23 = __p;
                uint64_t v27 = v25;
                if (!__p) {
                  goto LABEL_15;
                }
              }
              long long v141 = v23;
              operator delete(v23);
              goto LABEL_15;
            }
          }
          else
          {
            unint64_t v21 = sub_2E40A4((uint64_t)&v139);
            unsigned int v20 = HIDWORD(v21);
            int v19 = __p;
            unsigned int v22 = v21;
            if (!__p) {
              goto LABEL_12;
            }
          }
          long long v141 = v19;
          operator delete(v19);
          goto LABEL_12;
        }
      }
      else
      {
        unint64_t v17 = sub_2E1AA4((uint64_t)&v139);
        unsigned int v137 = HIDWORD(v17);
        uint64_t v16 = __p;
        unsigned int v18 = v17;
        if (!__p) {
          goto LABEL_9;
        }
      }
      long long v141 = v16;
      operator delete(v16);
      goto LABEL_9;
    }
  }
  return v6;
}

void sub_6975B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  sub_592058((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_6975CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  sub_592058((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_6975E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  sub_592058((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_6975F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  sub_592058((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_697608(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  sub_592058((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_69761C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  sub_592058((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_697630(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  sub_592058((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_697644(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  sub_592058((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_697658(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_697680(uint64_t a1, int **a2, int **a3, int **a4)
{
  int v8 = *a2;
  uint64_t v9 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v10 = *v9;
  if (*((unsigned char *)a2 + 38))
  {
    if (v10 < 0x49) {
      goto LABEL_11;
    }
    unsigned int v11 = v9[36];
    if (!v9[36]) {
      goto LABEL_11;
    }
  }
  else if (v10 < 0x4B || (unsigned int v11 = v9[37]) == 0)
  {
LABEL_11:
    __int16 v12 = -1;
    uint64_t v13 = *a3;
    uint64_t v14 = (unsigned __int16 *)((char *)*a3 - **a3);
    unsigned int v15 = *v14;
    if (*((unsigned char *)a3 + 38)) {
      goto LABEL_12;
    }
LABEL_8:
    if (v15 >= 0x49)
    {
      unsigned int v16 = v14[36];
      if (v16) {
        goto LABEL_14;
      }
    }
    goto LABEL_15;
  }
  __int16 v12 = *(_WORD *)((char *)v8 + v11);
  uint64_t v13 = *a3;
  uint64_t v14 = (unsigned __int16 *)((char *)*a3 - **a3);
  unsigned int v15 = *v14;
  if (!*((unsigned char *)a3 + 38)) {
    goto LABEL_8;
  }
LABEL_12:
  if (v15 >= 0x4B)
  {
    unsigned int v16 = v14[37];
    if (v16)
    {
LABEL_14:
      int v17 = *(unsigned __int16 *)((char *)v13 + v16);
      goto LABEL_16;
    }
  }
LABEL_15:
  int v17 = 0xFFFF;
LABEL_16:
  unsigned __int16 v18 = v12 + 18000;
  unsigned __int16 v19 = v12 - 18000;
  if ((unsigned __int16)(v18 >> 5) < 0x465u) {
    unsigned __int16 v19 = v18;
  }
  int v20 = v17 - v19;
  if (v20 > 18000) {
    v20 -= 36000;
  }
  if (v20 < -17999) {
    v20 += 36000;
  }
  if (!*((unsigned char *)a2 + 38))
  {
    if (v10 < 0x4B) {
      goto LABEL_29;
    }
    unsigned int v21 = v9[37];
    if (!v21) {
      goto LABEL_29;
    }
LABEL_28:
    __int16 v22 = *(_WORD *)((char *)v8 + v21);
    goto LABEL_30;
  }
  if (v10 >= 0x49)
  {
    unsigned int v21 = v9[36];
    if (v21) {
      goto LABEL_28;
    }
  }
LABEL_29:
  __int16 v22 = -1;
LABEL_30:
  double v23 = (double)v20 / 100.0;
  unint64_t v24 = (unsigned __int16 *)((char *)*a4 - **a4);
  unsigned int v25 = *v24;
  if (!*((unsigned char *)a4 + 38))
  {
    if (v25 < 0x49) {
      goto LABEL_37;
    }
    unsigned int v26 = v24[36];
    if (!v26) {
      goto LABEL_37;
    }
LABEL_36:
    int v27 = *(unsigned __int16 *)((char *)*a4 + v26);
    goto LABEL_38;
  }
  if (v25 >= 0x4B)
  {
    unsigned int v26 = v24[37];
    if (v26) {
      goto LABEL_36;
    }
  }
LABEL_37:
  int v27 = 0xFFFF;
LABEL_38:
  unsigned __int16 v28 = v22 + 18000;
  unsigned __int16 v29 = v22 - 18000;
  if ((unsigned __int16)(v28 >> 5) < 0x465u) {
    unsigned __int16 v29 = v28;
  }
  int v30 = v27 - v29;
  if (v30 > 18000) {
    v30 -= 36000;
  }
  if (v30 < -17999) {
    v30 += 36000;
  }
  double v31 = (double)v30 / 100.0;
  unint64_t v32 = sub_2E48C4(a3);
  unint64_t v33 = sub_2E48C4(a4);
  if (vabdd_f64(v23, v31) < *(double *)(a1 + 344) && v32 != v33)
  {
    double v23 = sub_6A2704(*(void *)a1, a2, a3);
    sub_6A2704(*(void *)a1, a2, a4);
  }
  return v23;
}

uint64_t sub_6978E4(uint64_t a1, int **a2, int ***a3, unint64_t a4)
{
  uint64_t v7 = (int **)sub_5A7C34(a3, a4);
  int v8 = *a3;
  uint64_t v9 = a3[1];
  if (*a3 == v9)
  {
    unint64_t v10 = 0;
  }
  else
  {
    unint64_t v10 = 0;
    do
    {
      if (sub_6D855C(a1 + 1160, v8) || *(unsigned char *)(a1 + 432) && sub_6D85C0(a1 + 1160, v8)) {
        ++v10;
      }
      v8 += 5;
    }
    while (v8 != v9);
  }
  unsigned int v11 = *a2;
  __int16 v12 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v13 = *v12;
  if (v13 < 0x2F
    || (uint64_t v14 = v12[23]) == 0
    || ((v15 = *((unsigned __int8 *)v11 + v14), v23 = v15 > 0x2A, uint64_t v16 = (1 << v15) & 0x50426810004, !v23)
      ? (BOOL v17 = v16 == 0)
      : (BOOL v17 = 1),
        v17))
  {
    unsigned __int16 v18 = (unsigned __int16 *)((char *)*v7 - **v7);
    if (*v18 >= 0x2Fu)
    {
      uint64_t v19 = v18[23];
      if (v19)
      {
        unsigned int v20 = *((unsigned __int8 *)*v7 + v19);
        BOOL v23 = v20 > 0x2A;
        uint64_t v21 = (1 << v20) & 0x50426810004;
        BOOL v22 = v23 || v21 == 0;
        BOOL v23 = !v22 && v10 > 2;
        if (v23) {
          return 1;
        }
      }
    }
    if (v13 < 0x2F || (LODWORD(v14) = v12[23]) == 0)
    {
LABEL_31:
      char v25 = sub_2E79EC(*(void *)a1, (uint64_t)a2[4], (uint64_t)v7[4]);
      long long __p = 0;
      int v66 = 0;
      uint64_t v67 = 0;
      if (v25)
      {
        if (sub_698B20(a1, (uint64_t)a2) || sub_698B20(a1, (uint64_t)v7))
        {
LABEL_88:
          BOOL v39 = 0;
          unint64_t v58 = (int **)__p;
          if (!__p) {
            return v39;
          }
          goto LABEL_93;
        }
LABEL_78:
        if (!sub_69BFAC(a1, a2, v7, v25))
        {
          uint64_t v50 = *(void *)(a1 + 24);
          long long v51 = *((_OWORD *)a2 + 1);
          long long v62 = *(_OWORD *)a2;
          long long v63 = v51;
          unsigned int v64 = a2[4];
          int v52 = sub_655A2C(v50, (uint64_t)&v62, 0);
          uint64_t v53 = *(void *)(a1 + 24);
          long long v54 = *(_OWORD *)v7;
          long long v55 = *((_OWORD *)v7 + 1);
          unsigned int v64 = v7[4];
          long long v62 = v54;
          long long v63 = v55;
          int v56 = sub_655A2C(v53, (uint64_t)&v62, 0);
          if (!*(unsigned char *)(a1 + 863) || v52 == v56 || !v52 || !v56)
          {
            double v57 = sub_6D82EC(a1 + 1160, a2, v7);
            if (!*(unsigned char *)(a1 + 1059) || v57 <= *(double *)(a1 + 184) || !sub_69C1F0(a2))
            {
              if (!*(unsigned char *)(a1 + 1058) || sub_699190((char **)a2)) {
                goto LABEL_88;
              }
              BOOL v39 = sub_654F1C(*v7, *((unsigned __int8 *)v7 + 38));
              unint64_t v58 = (int **)__p;
              if (!__p) {
                return v39;
              }
LABEL_93:
              int v66 = v58;
              operator delete(v58);
              return v39;
            }
          }
        }
LABEL_92:
        BOOL v39 = 1;
        unint64_t v58 = (int **)__p;
        if (!__p) {
          return v39;
        }
        goto LABEL_93;
      }
      if (*(unsigned char *)(a1 + 1154))
      {
        unsigned int v26 = (unsigned __int16 *)((char *)*a2 - **a2);
        if (*v26 >= 0x2Fu)
        {
          uint64_t v27 = v26[23];
          if (v27)
          {
            if (!*((unsigned char *)*a2 + v27))
            {
              unsigned __int16 v28 = (unsigned __int16 *)((char *)*v7 - **v7);
              if (*v28 >= 0x2Fu)
              {
                uint64_t v29 = v28[23];
                if (v29)
                {
                  if (!*((unsigned char *)*v7 + v29))
                  {
                    unint64_t v61 = sub_2E68E8(*(void *)a1, (uint64_t)v7[4]);
                    if (v61 <= 0xFFFFFFFEFFFFFFFFLL)
                    {
                      if (v61)
                      {
                        *(void *)&long long v62 = v7;
                        if (a3[1] != sub_69BF14(a3, (uint64_t)&v62)) {
                          goto LABEL_92;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      int v30 = sub_6D7A80(a1 + 1160, (char **)a2);
      int v31 = v30 - sub_6D7A80(a1 + 1160, (char **)v7);
      if (v31 >= 0) {
        unsigned int v32 = v31;
      }
      else {
        unsigned int v32 = -v31;
      }
      unsigned int v33 = *(unsigned __int8 *)(a1 + 1152);
      unint64_t v34 = (unint64_t)a2[4];
      double v35 = (int *)sub_2D5D58(*(void *)a1, v34 & 0xFFFFFFFFFFFFLL);
      double v36 = (unsigned __int16 *)((char *)v35 - *v35);
      unsigned int v37 = *v36;
      if ((v34 & 0xFF000000000000) != 0)
      {
        if (v37 < 0x29 || (unsigned int v38 = v36[20]) == 0)
        {
LABEL_53:
          int v40 = 0;
LABEL_54:
          unint64_t v41 = (unint64_t)v7[4];
          double v42 = (int *)sub_2D5D58(*(void *)a1, v41 & 0xFFFFFFFFFFFFLL);
          double v43 = (unsigned __int16 *)((char *)v42 - *v42);
          unsigned int v44 = *v43;
          if ((v41 & 0xFF000000000000) != 0)
          {
            if (v44 >= 0x29)
            {
              int v45 = v43[20];
              if (v45)
              {
LABEL_57:
                BOOL v46 = 0;
                int v45 = *(int *)((char *)v42 + v45 + *(unsigned int *)((char *)v42 + v45));
                if (v40 >= 1 && v45 >= 1)
                {
                  int v47 = v40 - v45;
                  if (v47 < 0) {
                    int v47 = -v47;
                  }
                  BOOL v46 = v47 >= *(unsigned __int8 *)(a1 + 1153);
                  int v45 = 1;
                  if (v32 < v33) {
                    goto LABEL_73;
                  }
LABEL_69:
                  if (!v40) {
                    BOOL v46 = 1;
                  }
                  if (v46 || !v45)
                  {
                    unint64_t v59 = sub_2E68E8(*(void *)a1, (uint64_t)v7[4]);
                    if (v59 <= 0xFFFFFFFEFFFFFFFFLL)
                    {
                      if (v59) {
                        goto LABEL_92;
                      }
                    }
                  }
LABEL_73:
                  sub_68E1D8(a1, (long long *)a2, (char **)&__p, 0);
                  int v48 = (int **)__p;
                  BOOL v49 = v66;
                  *(void *)&long long v62 = a1;
                  *((void *)&v62 + 1) = a2;
                  *(void *)&long long v63 = v7;
                  if (__p != v66)
                  {
                    while ((sub_6CC938((uint64_t *)&v62, v48) & 1) == 0)
                    {
                      v48 += 5;
                      if (v48 == v49)
                      {
                        int v48 = v49;
                        break;
                      }
                    }
                    if (v48 != v66) {
                      goto LABEL_92;
                    }
                  }
                  goto LABEL_78;
                }
LABEL_68:
                if (v32 < v33) {
                  goto LABEL_73;
                }
                goto LABEL_69;
              }
LABEL_65:
              BOOL v46 = 0;
              if (v32 < v33) {
                goto LABEL_73;
              }
              goto LABEL_69;
            }
          }
          else if (v44 >= 0x27)
          {
            int v45 = v43[19];
            if (v45) {
              goto LABEL_57;
            }
            goto LABEL_65;
          }
          int v45 = 0;
          BOOL v46 = 0;
          goto LABEL_68;
        }
      }
      else
      {
        if (v37 < 0x27) {
          goto LABEL_53;
        }
        unsigned int v38 = v36[19];
        if (!v38) {
          goto LABEL_53;
        }
      }
      int v40 = *(int *)((char *)v35 + v38 + *(int *)((char *)v35 + v38));
      goto LABEL_54;
    }
LABEL_29:
    unsigned int v24 = *((unsigned __int8 *)v11 + v14) - 2;
    if (v24 < 0x29 && ((0x14109A04001uLL >> v24) & 1) != 0) {
      return 0;
    }
    goto LABEL_31;
  }
  if (v10 <= 2) {
    goto LABEL_29;
  }
  return 1;
}

void sub_697E04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_697E44(uint64_t a1, int **a2, int **a3, int ***a4, char a5, double a6)
{
  if (a5) {
    return 0;
  }
  v27[12] = v6;
  v27[13] = v7;
  double v26 = fabs(sub_69B314(a1, a2, a3, a6));
  if (v26 < *(double *)(a1 + 1128)) {
    return 0;
  }
  unsigned int v13 = *a2;
  uint64_t v14 = (unsigned __int16 *)((char *)*a2 - **a2);
  if (*v14 >= 0x2Fu && v14[23])
  {
    BOOL result = 0;
    switch(*((unsigned char *)v13 + v14[23]))
    {
      case 6:
      case 0xC:
      case 0x2B:
        uint64_t v15 = v14[5];
        if (v15 && (*((unsigned char *)v13 + v15 + 2) & 0x20) != 0) {
          goto LABEL_11;
        }
        return 0;
      case 0x2C:
        return result;
      default:
        goto LABEL_11;
    }
  }
  else
  {
LABEL_11:
    uint64_t v16 = *a3;
    BOOL v17 = (unsigned __int16 *)((char *)*a3 - **a3);
    if (*v17 >= 0x2Fu && v17[23])
    {
      BOOL result = 0;
      switch(*((unsigned char *)v16 + v17[23]))
      {
        case 6:
        case 0xC:
        case 0x2B:
          uint64_t v18 = v17[5];
          if (v18 && (*((unsigned char *)v16 + v18 + 2) & 0x20) != 0) {
            goto LABEL_16;
          }
          return 0;
        case 0x2C:
          return result;
        default:
          goto LABEL_16;
      }
    }
    else
    {
LABEL_16:
      int v25 = sub_2E35CC(a2);
      uint64_t v19 = (unsigned __int16 *)((char *)*a2 - **a2);
      if (*v19 >= 0x43u && (uint64_t v20 = v19[33]) != 0) {
        int v21 = *((unsigned __int8 *)*a2 + v20);
      }
      else {
        int v21 = 0;
      }
      int v24 = v21;
      BOOL v23 = *a4;
      BOOL v22 = a4[1];
      v27[0] = &v25;
      v27[1] = a1;
      v27[2] = &v24;
      v27[3] = a3;
      v27[4] = a2;
      v27[5] = &v26;
      if (v23 == v22) {
        return 0;
      }
      do
      {
        BOOL result = sub_6CC5BC((uint64_t)v27, v23);
        if (result) {
          break;
        }
        v23 += 5;
      }
      while (v23 != v22);
    }
  }
  return result;
}

uint64_t sub_69813C(uint64_t a1, int **a2, void *a3, unint64_t a4, unint64_t a5)
{
  uint64_t v9 = (int **)sub_5A7C34(a3, a4);
  double v10 = sub_6D82EC(a1 + 1160, a2, v9);
  if (sub_69C254(a1, a2, v9)) {
    return 4;
  }
  double v12 = *(double *)(a1 + 304);
  if (v12 >= v10)
  {
    double v13 = *(double *)(a1 + 288);
    if (v13 >= v10)
    {
      double v14 = *(double *)(a1 + 272);
      if (v14 >= v10)
      {
        double v15 = -v14;
        double v16 = -v13;
        if (v10 > -v12) {
          int v17 = 1;
        }
        else {
          int v17 = 60;
        }
        if (v10 <= v16) {
          int v18 = v17;
        }
        else {
          int v18 = 62;
        }
        if (v10 <= v15) {
          unsigned int v19 = v18;
        }
        else {
          unsigned int v19 = 20;
        }
        if (*(double *)(a1 + 264) >= v10) {
          uint64_t v11 = v19;
        }
        else {
          uint64_t v11 = 21;
        }
      }
      else
      {
        uint64_t v11 = 63;
      }
    }
    else
    {
      uint64_t v11 = 2;
    }
  }
  else
  {
    uint64_t v11 = 61;
  }
  double v20 = sub_6A2704(*(void *)a1, a2, v9);
  unint64_t v21 = sub_2E4738(a2);
  if (v21 != sub_2E48C4(v9) && fabs(v10) >= *(double *)(a1 + 976))
  {
    if (v20 <= 0.0) {
      unsigned int v22 = v11;
    }
    else {
      unsigned int v22 = 61;
    }
    if (v20 >= 0.0) {
      uint64_t v11 = v22;
    }
    else {
      uint64_t v11 = 60;
    }
  }
  if (a5 != -1)
  {
    BOOL v23 = (int **)sub_5A7C34(a3, a5);
    double v24 = sub_697680(a1, a2, v23, v9);
    if (v10 >= 0.0 && v25 < v24 && fabs(v10) < *(double *)(a1 + 304)) {
      uint64_t v11 = 20;
    }
    if (v10 <= 0.0 && v25 > v24 && fabs(v10) < *(double *)(a1 + 304)) {
      return 21;
    }
  }
  return v11;
}

uint64_t sub_69830C(uint64_t a1, char **a2, void *a3, unint64_t a4, unint64_t a5)
{
  if (a5 == -1) {
    return 0;
  }
  uint64_t v9 = (char **)sub_5A7C34(a3, a5);
  double v10 = (char **)sub_5A7C34(a3, a4);
  uint64_t v11 = &(*a2)[-*(int *)*a2];
  if (*(unsigned __int16 *)v11 >= 0x2Fu)
  {
    uint64_t v12 = *((unsigned __int16 *)v11 + 23);
    if (v12)
    {
      unsigned int v13 = (*a2)[v12];
      BOOL v14 = v13 > 0x2A;
      uint64_t v15 = (1 << v13) & 0x50426810004;
      if (!v14 && v15 != 0)
      {
        int v17 = &(*v9)[-*(int *)*v9];
        if (*(unsigned __int16 *)v17 >= 0x2Fu)
        {
          uint64_t v18 = *((unsigned __int16 *)v17 + 23);
          if (v18)
          {
            unsigned int v19 = (*v9)[v18] - 2;
            if (v19 < 0x29 && ((0x14109A04001uLL >> v19) & 1) != 0) {
              return 0;
            }
          }
        }
      }
    }
  }
  sub_68F4F8(*(void *)a1, *((unsigned int *)v10 + 8) | ((unint64_t)*((unsigned __int16 *)v10 + 18) << 32), &__p);
  double v20 = (unint64_t *)__p;
  unint64_t v21 = v38;
  v36[0] = a1;
  v36[1] = a2;
  v36[2] = v10;
  if (__p != v38)
  {
    while (!sub_6CCB34((uint64_t)v36, v20))
    {
      if (++v20 == v21)
      {
        double v20 = v21;
        break;
      }
    }
    if (v20 != v38)
    {
LABEL_17:
      uint64_t v22 = 1;
      BOOL v23 = (unint64_t *)__p;
      if (!__p) {
        return v22;
      }
      goto LABEL_38;
    }
  }
  double v24 = &(*a2)[-*(int *)*a2];
  if (*(unsigned __int16 *)v24 >= 0x2Fu)
  {
    uint64_t v25 = *((unsigned __int16 *)v24 + 23);
    if (v25)
    {
      if (!(*a2)[v25])
      {
        double v26 = &(*v10)[-*(int *)*v10];
        if (*(unsigned __int16 *)v26 >= 0x2Fu)
        {
          uint64_t v27 = *((unsigned __int16 *)v26 + 23);
          if (v27)
          {
            unsigned int v28 = (*v10)[v27];
            BOOL v14 = v28 > 0x2A;
            uint64_t v29 = (1 << v28) & 0x50426810004;
            if (!v14 && v29 != 0)
            {
              int v31 = &(*v9)[-*(int *)*v9];
              if (*(unsigned __int16 *)v31 >= 0x2Fu)
              {
                uint64_t v32 = *((unsigned __int16 *)v31 + 23);
                if (v32)
                {
                  int v33 = (*v9)[v32];
                  if (v33 - 2) < 0x29 && ((0x14109A04001uLL >> (v33 - 2))) {
                    goto LABEL_37;
                  }
                  if (!(*v9)[v32])
                  {
LABEL_35:
                    if (sub_6D7A80(a1 + 1160, v10) >= *(_DWORD *)(a1 + 448)
                      || sub_6D7A80(a1 + 1160, a2) <= *(_DWORD *)(a1 + 448))
                    {
                      goto LABEL_17;
                    }
                    goto LABEL_37;
                  }
                }
              }
              unsigned int v34 = sub_6D7A80(a1 + 1160, v10);
              if (v34 >= sub_6D7A80(a1 + 1160, v9)) {
                goto LABEL_35;
              }
            }
          }
        }
      }
    }
  }
LABEL_37:
  uint64_t v22 = 0;
  BOOL v23 = (unint64_t *)__p;
  if (__p)
  {
LABEL_38:
    unsigned int v38 = v23;
    operator delete(v23);
  }
  return v22;
}

void sub_6985A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_6985C0(uint64_t a1, long long *a2, int a3, uint64_t a4)
{
  if ((a3 - 3) < 0xFFFFFFFE) {
    return 0;
  }
  double v24 = 0;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  sub_68E1D8(a1, a2, &v24, 0);
  uint64_t v9 = v24;
  unint64_t v10 = 0xCCCCCCCCCCCCCCCDLL * ((v25 - v24) >> 3);
  double v11 = 0.0;
  if (v10 < 2
    || (uint64_t v12 = (unsigned __int16 *)(*(void *)a2 - **(int **)a2), *v12 >= 0x2Fu)
    && (uint64_t v13 = v12[23]) != 0
    && ((v14 = *(unsigned __int8 *)(*(void *)a2 + v13), v15 = v14 > 0x2A, uint64_t v16 = (1 << v14) & 0x50426810004, !v15)
      ? (BOOL v17 = v16 == 0)
      : (BOOL v17 = 1),
        !v17))
  {
    BOOL v4 = 0;
    if (!v24) {
      return v4;
    }
LABEL_11:
    uint64_t v25 = v9;
    operator delete(v9);
    return v4;
  }
  unsigned int v19 = 0;
  for (unint64_t i = 0; i != v10; ++i)
  {
    if (sub_68FBBC(a1, a2, &v24, i, 0, a4, 0) == a3)
    {
      unint64_t v21 = (int **)sub_66F838(&v24, i);
      if (sub_6D855C(a1 + 1160, v21))
      {
        uint64_t v22 = (int **)sub_66F838(&v24, i);
        double v23 = fabs(sub_6D82EC(a1 + 1160, (int **)a2, v22));
        if (v23 >= v11) {
          double v11 = v23;
        }
        ++v19;
      }
    }
  }
  BOOL v4 = v19 > 1;
  uint64_t v9 = v24;
  if (v24) {
    goto LABEL_11;
  }
  return v4;
}

void sub_698768(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_69878C(uint64_t a1, void *a2, unint64_t a3, int **a4, uint64_t a5, int a6)
{
  *(_DWORD *)(a5 + 24) = 0;
  *(void *)(a5 + 8) = *(void *)a5;
  *(void *)(a5 + 48) = *(void *)(a5 + 40);
  *(_DWORD *)(a5 + 64) = 0;
  *(void *)&long long v11 = -1;
  *((void *)&v11 + 1) = -1;
  *(_OWORD *)(a5 + 72) = v11;
  *(_OWORD *)(a5 + 88) = v11;
  *(_OWORD *)(a5 + 104) = v11;
  *(void *)(a5 + 120) = -1;
  *(_DWORD *)(a5 + 128) = 0;
  *(void *)(a5 + 136) = -1;
  *(_DWORD *)(a5 + 144) = 0;
  *(_OWORD *)(a5 + 152) = xmmword_20E2060;
  *(_WORD *)(a5 + 168) = 0;
  *(unsigned char *)(a5 + 170) = 0;
  *(void *)(a5 + 176) = 0;
  *(unsigned char *)(a5 + 188) = 0;
  *(unsigned char *)(a5 + 190) = 0;
  uint64_t v12 = (uint64_t *)(a4 + 10);
  unint64_t v13 = (unint64_t)a4[13];
  uint64_t v14 = sub_5A7C34(a4 + 10, v13);
  unint64_t v15 = sub_46C760(a2);
  if (a3 <= v15) {
    unint64_t v16 = v15;
  }
  else {
    unint64_t v16 = a3;
  }
  if (v15 > a3)
  {
    uint64_t v17 = a3;
    do
    {
      unint64_t v28 = *(void *)(sub_46C8EC(a2, v17) + 32);
      sub_2D5B74((char **)a5, &v28);
      uint64_t v18 = *(void *)(v14 + 32);
      if ((v18 & 0xFFFFFFFFFFFFLL) == (v28 & 0xFFFFFFFFFFFFLL)
        && ((v18 & 0xFF000000000000) == 0) != (HIWORD(v28) & 1))
      {
        break;
      }
      ++v17;
    }
    while (v17 != v16);
    int v19 = sub_2E79EC(*(void *)a1, (uint64_t)a4[4], v18);
    if (v19) {
      goto LABEL_10;
    }
LABEL_13:
    int v20 = a6;
    goto LABEL_15;
  }
  int v19 = sub_2E79EC(*(void *)a1, (uint64_t)a4[4], *(void *)(v14 + 32));
  if (!v19) {
    goto LABEL_13;
  }
LABEL_10:
  int v20 = a6;
  LOBYTE(v19) = sub_698B20(a1, (uint64_t)a4) || sub_698B20(a1, v14);
LABEL_15:
  *(unsigned char *)(a5 + 189) = v19;
  uint64_t result = sub_68FBBC(a1, a4, v12, v13, 1, 1, v20);
  *(_DWORD *)(a5 + 24) = result;
  if (result)
  {
    uint64_t result = sub_698D68(a1, a2, a3, (int **)v14, a5);
    if (result)
    {
      *(_DWORD *)(a5 + 24) = 0;
    }
    else if (*(unsigned char *)(a1 + 1058) && *(_DWORD *)(a5 + 24) == 3)
    {
      uint64_t v22 = *a4;
      double v23 = (unsigned __int16 *)((char *)*a4 - **a4);
      if (*v23 >= 0x2Fu && v23[23])
      {
        switch(*((unsigned char *)v22 + v23[23]))
        {
          case 6:
          case 0xC:
          case 0x2B:
            uint64_t v24 = v23[5];
            if (v24 && (*((unsigned char *)v22 + v24 + 2) & 0x20) != 0) {
              goto LABEL_25;
            }
            break;
          case 0x2C:
            break;
          default:
            goto LABEL_25;
        }
      }
      else
      {
LABEL_25:
        uint64_t v25 = sub_5A7C34(v12, v13);
        uint64_t result = sub_654F1C(*(int **)v25, *(unsigned __int8 *)(v25 + 38));
        if (result) {
          *(unsigned char *)(a5 + 190) = 1;
        }
      }
    }
  }
  if (*(unsigned char *)(a1 + 747))
  {
    uint64_t result = sub_2E4CD4(*(void *)a1, (uint64_t)a4[4]);
    if (result)
    {
      uint64_t result = sub_2E4CD4(*(void *)a1, *(void *)(v14 + 32));
      if (result)
      {
        if (*(_DWORD *)(a5 + 24))
        {
          *(unsigned char *)(a5 + 170) = 1;
          *(_DWORD *)(a5 + 24) = 0;
        }
      }
    }
  }
  if (v20)
  {
    unsigned int v26 = *(_DWORD *)(a5 + 24);
    if (v26 <= 0x15 && ((1 << v26) & 0x300001) != 0) {
      unsigned int v26 = 3;
    }
    *(_DWORD *)(a5 + 24) = v26;
  }
  return result;
}

BOOL sub_698B20(uint64_t a1, uint64_t a2)
{
  if (!*(unsigned char *)(a1 + 1056)) {
    return 0;
  }
  sub_58E730(*(void *)a1, *(void *)(a2 + 32), 1u, &__p);
  if (__p == v11)
  {
    long long v19 = 0u;
    *(_OWORD *)uint64_t v17 = 0u;
    memset(v18, 0, sizeof(v18));
    long long v15 = 0u;
    *(_OWORD *)unint64_t v16 = 0u;
    long long v13 = 0u;
    *(_OWORD *)uint64_t v14 = 0u;
    *(_OWORD *)uint64_t v12 = 0u;
    *((void *)&v15 + 1) = sub_1133328();
    long long v19 = 0uLL;
    v18[3] = 0;
    *(_OWORD *)unint64_t v16 = 0u;
    *(_OWORD *)uint64_t v17 = 0u;
    memset(v18, 0, 19);
    uint64_t v3 = __p;
    if (!__p) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v2 = __p;
    while (*v2)
    {
      v2 += 144;
      if (v2 == v11)
      {
        uint64_t v2 = __p;
        break;
      }
    }
    sub_6C8AE4((uint64_t)v12, (uint64_t)v2);
    uint64_t v3 = __p;
    if (!__p)
    {
LABEL_8:
      BOOL v4 = LOBYTE(v18[2]) != 0;
      if ((SHIBYTE(v19) & 0x80000000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_20;
    }
  }
  uint64_t v7 = (uint64_t)v11;
  int v8 = v3;
  if (v11 != v3)
  {
    do
      uint64_t v7 = sub_2DF404(v7 - 144);
    while ((unsigned char *)v7 != v3);
    int v8 = __p;
  }
  long long v11 = v3;
  operator delete(v8);
  BOOL v4 = LOBYTE(v18[2]) != 0;
  if ((SHIBYTE(v19) & 0x80000000) == 0)
  {
LABEL_9:
    if ((SHIBYTE(v18[1]) & 0x80000000) == 0) {
      goto LABEL_10;
    }
LABEL_21:
    operator delete(v17[1]);
    int v5 = (void **)v16[0];
    if (!v16[0])
    {
LABEL_11:
      if (SBYTE7(v15) < 0) {
        goto LABEL_32;
      }
      goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_20:
  operator delete(v18[3]);
  if (SHIBYTE(v18[1]) < 0) {
    goto LABEL_21;
  }
LABEL_10:
  int v5 = (void **)v16[0];
  if (!v16[0]) {
    goto LABEL_11;
  }
LABEL_22:
  uint64_t v9 = (void **)v16[1];
  if (v16[1] == v5)
  {
    v16[1] = v5;
    operator delete(v5);
    if ((SBYTE7(v15) & 0x80000000) == 0) {
      goto LABEL_12;
    }
LABEL_32:
    operator delete(v14[0]);
    if ((SHIBYTE(v13) & 0x80000000) == 0) {
      return v4;
    }
    goto LABEL_33;
  }
  do
  {
    if (*((char *)v9 - 9) < 0)
    {
      operator delete(*(v9 - 4));
      if ((*((char *)v9 - 33) & 0x80000000) == 0) {
        goto LABEL_25;
      }
    }
    else if ((*((char *)v9 - 33) & 0x80000000) == 0)
    {
      goto LABEL_25;
    }
    operator delete(*(v9 - 7));
LABEL_25:
    v9 -= 7;
  }
  while (v9 != v5);
  v16[1] = v5;
  operator delete(v16[0]);
  if (SBYTE7(v15) < 0) {
    goto LABEL_32;
  }
LABEL_12:
  if ((SHIBYTE(v13) & 0x80000000) == 0) {
    return v4;
  }
LABEL_33:
  operator delete(v12[1]);
  return v4;
}

void sub_698D40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_53BD98((void **)va);
  _Unwind_Resume(a1);
}

void sub_698D54(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_53BD98((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_698D68(uint64_t a1, void *a2, unint64_t a3, int **a4, uint64_t a5)
{
  if (!*(unsigned char *)(a1 + 862)) {
    return 0;
  }
  uint64_t v51 = a1 + 1160;
  if (!sub_6D855C(a1 + 1160, a4)) {
    return 0;
  }
  uint64_t v9 = (unsigned __int16 *)((char *)*a4 - **a4);
  if (*v9 >= 0x2Fu)
  {
    uint64_t v10 = v9[23];
    if (v10)
    {
      uint64_t v11 = 0;
      int v12 = *((unsigned __int8 *)*a4 + v10);
      if (v12 == 14 || v12 == 44) {
        return v11;
      }
    }
  }
  unsigned int v13 = *(_DWORD *)(a5 + 24) - 3;
  if (v13 < 0x16 && ((0x380001u >> v13) & 1) != 0) {
    return 0;
  }
  uint64_t v14 = sub_46C8EC(a2, a3);
  uint64_t v15 = *(void *)a1;
  uint64_t v16 = *(void *)(v14 + 32);
  uint64_t v17 = sub_2D5D58(*(void *)a1, v16 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v15 + 7772))
  {
    uint64_t v18 = sub_2DB8E0(v15 + 3896, v16, 0);
    long long v19 = &v18[-*(int *)v18];
    if (*(unsigned __int16 *)v19 < 5u)
    {
      uint64_t v20 = 0;
    }
    else
    {
      uint64_t v20 = *((unsigned __int16 *)v19 + 2);
      if (v20) {
        v20 += (uint64_t)&v18[*(unsigned int *)&v18[v20]];
      }
    }
    uint64_t v22 = v20 + 4 * WORD2(v16) + 4 + *(unsigned int *)(v20 + 4 * WORD2(v16) + 4);
  }
  else
  {
    uint64_t v22 = 0;
  }
  v63[0] = v17;
  v63[1] = v22;
  void v63[2] = sub_2E5C38(v15, v16 & 0xFFFFFFFFFFFFLL, 1);
  v63[3] = v23;
  int v64 = v16;
  __int16 v65 = WORD2(v16);
  BOOL v66 = (v16 & 0xFF000000000000) != 0;
  long long __p = 0;
  unint64_t v61 = 0;
  uint64_t v62 = 0;
  unint64_t v24 = sub_46C760(a2);
  if (a3 <= v24) {
    unint64_t v25 = v24;
  }
  else {
    unint64_t v25 = a3;
  }
  unint64_t v50 = v25;
  if (v24 > a3)
  {
    do
    {
      uint64_t v26 = sub_46C8EC(a2, a3);
      unint64_t v27 = (unint64_t)a4[4];
      unint64_t v28 = *(void *)(v26 + 32);
      if ((v27 & 0xFFFFFFFFFFFFLL) == (v28 & 0xFFFFFFFFFFFFLL)
        && ((v27 & 0xFF000000000000) == 0) != (HIWORD(v28) & 1))
      {
        break;
      }
      uint64_t v29 = *(void *)a1;
      int v30 = (int *)sub_2D5D58(*(void *)a1, v28 & 0xFFFFFFFFFFFFLL);
      if (*(unsigned char *)(v29 + 7772))
      {
        int v31 = sub_2DB8E0(v29 + 3896, v28, 0);
        uint64_t v32 = &v31[-*(int *)v31];
        if (*(unsigned __int16 *)v32 < 5u)
        {
          uint64_t v33 = 0;
        }
        else
        {
          uint64_t v33 = *((unsigned __int16 *)v32 + 2);
          if (v33) {
            v33 += (uint64_t)&v31[*(unsigned int *)&v31[v33]];
          }
        }
        uint64_t v34 = v33 + 4 * WORD2(v28) + 4 + *(unsigned int *)(v33 + 4 * WORD2(v28) + 4);
      }
      else
      {
        uint64_t v34 = 0;
      }
      uint64_t v35 = sub_2E5C38(v29, v28 & 0xFFFFFFFFFFFFLL, 1);
      uint64_t v53 = v30;
      uint64_t v54 = v34;
      uint64_t v55 = v35;
      uint64_t v56 = v36;
      int v57 = v28;
      __int16 v58 = WORD2(v28);
      BOOL v59 = (v28 & 0xFF000000000000) != 0;
      if (!sub_6D855C(v51, &v53)) {
        goto LABEL_47;
      }
      unsigned int v37 = (unsigned __int16 *)((char *)v53 - *v53);
      if (*v37 >= 0x2Fu)
      {
        uint64_t v38 = v37[23];
        if (v38)
        {
          int v39 = *((unsigned __int8 *)v53 + v38);
          if (v39 == 14 || v39 == 44) {
            goto LABEL_47;
          }
        }
      }
      uint64_t v40 = *(void *)a1;
      uint64_t v41 = *(void *)(v26 + 32);
      double v42 = (int *)sub_2D5D58(*(void *)a1, v41 & 0xFFFFFFFFFFFFLL);
      if (*(unsigned char *)(v40 + 7772))
      {
        double v43 = sub_2DB8E0(v40 + 3896, v41, 0);
        unsigned int v44 = &v43[-*(int *)v43];
        if (*(unsigned __int16 *)v44 < 5u)
        {
          uint64_t v45 = 0;
        }
        else
        {
          uint64_t v45 = *((unsigned __int16 *)v44 + 2);
          if (v45) {
            v45 += (uint64_t)&v43[*(unsigned int *)&v43[v45]];
          }
        }
        uint64_t v46 = v45 + 4 * WORD2(v41) + 4 + *(unsigned int *)(v45 + 4 * WORD2(v41) + 4);
      }
      else
      {
        uint64_t v46 = 0;
      }
      uint64_t v47 = sub_2E5C38(v40, v41 & 0xFFFFFFFFFFFFLL, 1);
      uint64_t v53 = v42;
      uint64_t v54 = v46;
      uint64_t v55 = v47;
      uint64_t v56 = v48;
      int v57 = v41;
      __int16 v58 = WORD2(v41);
      BOOL v59 = (v41 & 0xFF000000000000) != 0;
      sub_2E44A4(v40, (uint64_t)&v53, &__p);
      if (sub_6A2344(a1, (uint64_t)v63, (int ***)&__p, (uint64_t)a4) != 1)
      {
LABEL_47:
        uint64_t v11 = 0;
        BOOL v49 = __p;
        if (!__p) {
          return v11;
        }
        goto LABEL_48;
      }
      ++a3;
    }
    while (v50 != a3);
  }
  uint64_t v11 = 1;
  BOOL v49 = __p;
  if (__p)
  {
LABEL_48:
    unint64_t v61 = v49;
    operator delete(v49);
  }
  return v11;
}

void sub_699164(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_699190(char **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = &(*a1)[-*(int *)*a1];
  if (*(unsigned __int16 *)v2 < 0x2Fu || !*((_WORD *)v2 + 23)) {
    return 0;
  }
  unsigned int v3 = v1[*((unsigned __int16 *)v2 + 23)];
  if (v3 > 0x2B || ((1 << v3) & 0x80000001040) == 0) {
    return v3 == 44;
  }
  uint64_t v5 = *((unsigned __int16 *)v2 + 5);
  return !v5 || (v1[v5 + 2] & 0x20) == 0 || v3 == 44;
}

void sub_699204(double *a1, int **a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(a6 + 8) = *(void *)a6;
  *(_DWORD *)(a6 + 24) = 0;
  uint64_t v7 = a3[1] - *a3;
  if (!v7)
  {
LABEL_39:
    sub_693DCC((uint64_t *)a6, (unsigned int (*)(unint64_t, unint64_t))sub_693F28, (uint64_t (*)(unint64_t, unint64_t))sub_693F48);
    return;
  }
  unint64_t v13 = 0;
  uint64_t v14 = v7 / 40;
  while (1)
  {
    uint64_t v15 = (int **)sub_5A7C34(a3, v13);
    uint64_t v16 = *a2;
    uint64_t v17 = (unsigned __int16 *)((char *)*a2 - **a2);
    unsigned int v18 = *v17;
    if (*((unsigned char *)a2 + 38))
    {
      if (v18 < 0xB) {
        goto LABEL_32;
      }
      unsigned int v19 = v17[5];
      if (!v19 || (*(int *)((char *)v16 + v19) & 2) == 0) {
        goto LABEL_32;
      }
    }
    else
    {
      if (v18 < 0xB) {
        goto LABEL_32;
      }
      unsigned int v20 = v17[5];
      if (!v20 || (*(int *)((char *)v16 + v20) & 1) == 0) {
        goto LABEL_32;
      }
    }
    unint64_t v21 = (char *)*v15;
    uint64_t v22 = (unsigned __int16 *)((char *)*v15 - **v15);
    unsigned int v23 = *v22;
    if (*((unsigned char *)v15 + 38)) {
      break;
    }
    if (v23 >= 0xB)
    {
      uint64_t v26 = v22[5];
      if (v26)
      {
        if ((v21[v26] & 1) == 0 && (*(_DWORD *)&v21[v26] & 2) == 0 && a4 != v13) {
          goto LABEL_3;
        }
        goto LABEL_32;
      }
    }
LABEL_31:
    if (a4 == v13) {
      goto LABEL_32;
    }
LABEL_3:
    if (v14 == ++v13) {
      goto LABEL_39;
    }
  }
  if (v23 < 0xB) {
    goto LABEL_31;
  }
  uint64_t v24 = v22[5];
  if (!v24) {
    goto LABEL_31;
  }
  if ((v21[v24] & 2) == 0 && (*(_DWORD *)&v21[v24] & 1) == 0 && a4 != v13) {
    goto LABEL_3;
  }
LABEL_32:
  int v28 = sub_68FBBC((uint64_t)a1, a2, a3, v13, 1, 1, 0);
  if (v28 == 4) {
    goto LABEL_3;
  }
  int v29 = v28;
  if (*(_DWORD *)(a5 + 32) && *(void *)a5)
  {
    if (*(void *)(a5 + 8)) {
      int v29 = sub_68FBBC((uint64_t)a1, (int **)a5, a3, v13, 1, 1, 0);
    }
  }
  sub_6994B8(a1, v29, (uint64_t)&v31);
  if (v32)
  {
    BOOL v30 = a4 == v13;
    sub_699730(a6, &v31, (char *)&v30);
    goto LABEL_3;
  }
  *(void *)(a6 + 8) = *(void *)a6;
  *(_DWORD *)(a6 + 24) = 0;
}

BOOL sub_699454(int **a1)
{
  uint64_t v1 = (char *)*a1;
  uint64_t v2 = (unsigned __int16 *)((char *)*a1 - **a1);
  unsigned int v3 = *v2;
  if (*((unsigned char *)a1 + 38))
  {
    if (v3 >= 0xB)
    {
      unsigned int v4 = v2[5];
      if (v4) {
        return (*(_DWORD *)&v1[v4] & 1) != 0;
      }
    }
  }
  else if (v3 >= 0xB)
  {
    unsigned int v6 = v2[5];
    if (v6) {
      return (*(_DWORD *)&v1[v6] & 2) != 0;
    }
  }
  return 0;
}

double sub_6994B8@<D0>(double *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  switch(a2)
  {
    case 0:
    case 3:
    case 5:
    case 12:
    case 89:
    case 90:
      double result = a1[97];
      *(_WORD *)a3 = (int)result;
      *(unsigned char *)(a3 + 2) = 1;
      break;
    case 1:
      double result = a1[100];
      *(_WORD *)a3 = (int)result;
      *(unsigned char *)(a3 + 2) = 1;
      break;
    case 2:
      double result = a1[104];
      *(_WORD *)a3 = (int)result;
      *(unsigned char *)(a3 + 2) = 1;
      break;
    case 20:
      double result = a1[98];
      *(_WORD *)a3 = (int)result;
      *(unsigned char *)(a3 + 2) = 1;
      break;
    case 21:
      double result = a1[102];
      *(_WORD *)a3 = (int)result;
      *(unsigned char *)(a3 + 2) = 1;
      break;
    case 60:
      double result = a1[101];
      *(_WORD *)a3 = (int)result;
      *(unsigned char *)(a3 + 2) = 1;
      break;
    case 61:
      double result = a1[105];
      *(_WORD *)a3 = (int)result;
      *(unsigned char *)(a3 + 2) = 1;
      break;
    case 62:
      double result = a1[99];
      *(_WORD *)a3 = (int)result;
      *(unsigned char *)(a3 + 2) = 1;
      break;
    case 63:
      double result = a1[103];
      *(_WORD *)a3 = (int)result;
      *(unsigned char *)(a3 + 2) = 1;
      break;
    default:
      *(_DWORD *)a3 = 0;
      break;
  }
  return result;
}

char *sub_699730(uint64_t a1, _WORD *a2, char *a3)
{
  uint64_t v7 = *(unsigned char **)(a1 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  if ((unint64_t)v7 >= v6)
  {
    uint64_t v10 = *(unsigned char **)a1;
    uint64_t v11 = (uint64_t)&v7[-*(void *)a1] >> 2;
    unint64_t v12 = v11 + 1;
    if ((unint64_t)(v11 + 1) >> 62) {
      sub_2E00();
    }
    uint64_t v13 = v6 - (void)v10;
    if (v13 >> 1 > v12) {
      unint64_t v12 = v13 >> 1;
    }
    BOOL v14 = (unint64_t)v13 >= 0x7FFFFFFFFFFFFFFCLL;
    unint64_t v15 = 0x3FFFFFFFFFFFFFFFLL;
    if (!v14) {
      unint64_t v15 = v12;
    }
    if (v15 >> 62) {
      sub_188D718();
    }
    uint64_t v16 = 4 * v15;
    uint64_t v17 = (char *)operator new(4 * v15);
    char v18 = *a3;
    unsigned int v19 = &v17[4 * v11];
    *(_WORD *)unsigned int v19 = *a2;
    v19[2] = v18;
    for (unint64_t i = v19 + 4; v7 != v10; v19[2] = v21)
    {
      __int16 v20 = *((_WORD *)v7 - 2);
      v7 -= 4;
      char v21 = v7[2];
      *((_WORD *)v19 - 2) = v20;
      v19 -= 4;
    }
    *(void *)a1 = v19;
    *(void *)(a1 + 8) = i;
    *(void *)(a1 + 16) = &v17[v16];
    if (v10) {
      operator delete(v10);
    }
  }
  else
  {
    char v8 = *a3;
    *(_WORD *)uint64_t v7 = *a2;
    v7[2] = v8;
    unint64_t i = v7 + 4;
  }
  *(void *)(a1 + 8) = i;
  return i - 4;
}

uint64_t sub_699844(uint64_t a1, int a2, char a3)
{
  if (a3) {
    return 0;
  }
  uint64_t result = 0;
  switch(a2)
  {
    case 0:
    case 4:
    case 6:
    case 7:
    case 11:
    case 20:
    case 21:
    case 35:
    case 65:
    case 66:
      return result;
    default:
      uint64_t result = 1;
      break;
  }
  return result;
}

uint64_t sub_699998(uint64_t *a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 24);
  if (!v2) {
    return -1;
  }
  unsigned int v3 = *(uint64_t **)a2;
  int v39 = *(uint64_t **)(a2 + 8);
  uint64_t v4 = (uint64_t)v39 - *(void *)a2;
  if ((unint64_t)v4 < 0x18) {
    return 0;
  }
  uint64_t v6 = v4 >> 3;
  switch(v2)
  {
    case 12:
      return v6 - 2;
    case 4:
      return -1;
    case 3:
      return v6 - 2;
  }
  long long __p = 0;
  uint64_t v47 = 0;
  uint64_t v48 = 0;
  if ((unint64_t)v4 >= 0x3333333333333331) {
    sub_2E00();
  }
  char v8 = (int **)operator new(40 * v6);
  uint64_t v9 = v8;
  long long __p = v8;
  uint64_t v47 = (char *)v8;
  uint64_t v48 = (char *)&v8[5 * v6];
  if (v3 != v39)
  {
    do
    {
      uint64_t v10 = *a1;
      uint64_t v11 = *v3;
      unint64_t v12 = *v3 & 0xFFFFFFFFFFFFLL;
      uint64_t v13 = sub_2D5D58(*a1, v12);
      if (*(unsigned char *)(v10 + 7772))
      {
        BOOL v14 = sub_2DB8E0(v10 + 3896, v11, 0);
        unint64_t v15 = &v14[-*(int *)v14];
        if (*(unsigned __int16 *)v15 < 5u)
        {
          uint64_t v16 = 0;
        }
        else
        {
          uint64_t v16 = *((unsigned __int16 *)v15 + 2);
          if (v16) {
            v16 += (uint64_t)&v14[*(unsigned int *)&v14[v16]];
          }
        }
        uint64_t v41 = v16 + 4 * WORD2(v11) + 4 + *(unsigned int *)(v16 + 4 * WORD2(v11) + 4);
      }
      else
      {
        uint64_t v41 = 0;
      }
      uint64_t v17 = sub_2E5C38(v10, v12, 1);
      uint64_t v19 = v17;
      uint64_t v20 = v18;
      BOOL v21 = (v11 & 0xFF000000000000) != 0;
      uint64_t v22 = v47;
      if (v47 < v48)
      {
        *(void *)uint64_t v47 = v13;
        *((void *)v22 + 1) = v41;
        *((void *)v22 + 2) = v17;
        *((void *)v22 + 3) = v18;
        *((_DWORD *)v22 + 8) = v11;
        *((_WORD *)v22 + 18) = WORD2(v11);
        uint64_t v9 = (int **)(v22 + 40);
        v22[38] = v21;
      }
      else
      {
        unsigned int v23 = (char *)__p;
        unint64_t v24 = 0xCCCCCCCCCCCCCCCDLL * ((v47 - (unsigned char *)__p) >> 3);
        unint64_t v25 = v24 + 1;
        if (v24 + 1 > 0x666666666666666) {
          sub_2E00();
        }
        if (0x999999999999999ALL * ((v48 - (unsigned char *)__p) >> 3) > v25) {
          unint64_t v25 = 0x999999999999999ALL * ((v48 - (unsigned char *)__p) >> 3);
        }
        if (0xCCCCCCCCCCCCCCCDLL * ((v48 - (unsigned char *)__p) >> 3) >= 0x333333333333333) {
          unint64_t v26 = 0x666666666666666;
        }
        else {
          unint64_t v26 = v25;
        }
        if (v26)
        {
          if (v26 > 0x666666666666666) {
            sub_188D718();
          }
          unint64_t v27 = (char *)operator new(40 * v26);
        }
        else
        {
          unint64_t v27 = 0;
        }
        int v28 = &v27[8 * ((v47 - (unsigned char *)__p) >> 3)];
        *(void *)int v28 = v13;
        *((void *)v28 + 1) = v41;
        *((void *)v28 + 2) = v19;
        *((void *)v28 + 3) = v20;
        *((_DWORD *)v28 + 8) = v11;
        *((_WORD *)v28 + 18) = WORD2(v11);
        v28[38] = v21;
        int v29 = &v27[40 * v24];
        if (v22 != v23)
        {
          do
          {
            long long v30 = *(_OWORD *)(v22 - 40);
            long long v31 = *(_OWORD *)(v22 - 24);
            *((void *)v29 - 1) = *((void *)v22 - 1);
            *(_OWORD *)(v29 - 24) = v31;
            *(_OWORD *)(v29 - 40) = v30;
            v29 -= 40;
            v22 -= 40;
          }
          while (v22 != v23);
          uint64_t v22 = v23;
        }
        uint64_t v9 = (int **)(v28 + 40);
        long long __p = v29;
        uint64_t v48 = &v27[40 * v26];
        if (v22) {
          operator delete(v22);
        }
      }
      uint64_t v47 = (char *)v9;
      ++v3;
    }
    while (v3 != v39);
    char v8 = (int **)__p;
  }
  double v43 = 0;
  unsigned int v44 = 0;
  uint64_t v45 = 0;
  v42[0] = (uint64_t)&v43;
  v42[1] = (uint64_t)a1;
  sub_6CC3CC(v8, v9, v42);
  if (v43 != v44)
  {
    char v32 = v43 + 1;
    uint64_t v33 = v43;
    if (v43 + 1 != v44)
    {
      double v34 = *v43;
      uint64_t v33 = v43;
      uint64_t v35 = v43 + 1;
      do
      {
        double v36 = *v35++;
        double v37 = v36;
        if (v34 < v36)
        {
          double v34 = v37;
          uint64_t v33 = v32;
        }
        char v32 = v35;
      }
      while (v35 != v44);
    }
    uint64_t v38 = (char *)v33 - (char *)v43;
    if (!v43) {
      goto LABEL_47;
    }
    goto LABEL_46;
  }
  uint64_t v38 = 0;
  if (v43)
  {
LABEL_46:
    unsigned int v44 = v43;
    operator delete(v43);
  }
LABEL_47:
  uint64_t v5 = v38 >> 3;
  if (__p)
  {
    uint64_t v47 = (char *)__p;
    operator delete(__p);
  }
  return v5;
}

void sub_699D30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, uint64_t a17, void *a18, uint64_t a19)
{
  if (__p)
  {
    operator delete(__p);
    uint64_t v20 = a18;
    if (!a18) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    uint64_t v20 = a18;
    if (!a18) {
      goto LABEL_3;
    }
  }
  operator delete(v20);
  _Unwind_Resume(exception_object);
}

uint64_t sub_699D9C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  int v2 = *(void **)(a1 + 8);
  if (*(void **)a1 == v2) {
    return 1;
  }
  while (1)
  {
    unsigned int v3 = (unsigned __int16 *)(*v1 - *(int *)*v1);
    if (*v3 < 0xBu) {
      break;
    }
    uint64_t v4 = v3[5];
    if (!v4 || (*(_DWORD *)(*v1 + v4) & 0x208) != 8) {
      break;
    }
    v1 += 5;
    if (v1 == v2) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_699DF8(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  int v2 = *(void **)(a1 + 8);
  if (*(void **)a1 == v2) {
    return 1;
  }
  while (1)
  {
    unsigned int v3 = (unsigned __int16 *)(*v1 - *(int *)*v1);
    if (*v3 < 0xBu) {
      break;
    }
    uint64_t v4 = v3[5];
    if (!v4 || (*(unsigned char *)(*v1 + v4 + 1) & 2) == 0) {
      break;
    }
    v1 += 5;
    if (v1 == v2) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_699E4C(uint64_t a1, int **a2, uint64_t *a3, uint64_t a4)
{
  if (!*(unsigned char *)(a1 + 694)) {
    return 0;
  }
  uint64_t v8 = sub_6D7AFC(a1 + 1160, a2, a3, -1);
  if (v8 != -1 && v8 == a4) {
    return 0;
  }
  uint64_t result = sub_2E79EC(*(void *)a1, (uint64_t)a2[4], *(void *)(*a3 + 40 * a4 + 32));
  if (!result) {
    return result;
  }
  uint64_t v10 = (unsigned __int16 *)((char *)*a2 - **a2);
  if (*v10 < 0x2Fu) {
    return 0;
  }
  uint64_t v11 = v10[23];
  if (!v11) {
    return 0;
  }
  unsigned int v12 = *((unsigned __int8 *)*a2 + v11);
  BOOL v13 = v12 > 0x2B;
  uint64_t v14 = (1 << v12) & 0x80000001040;
  if (v13 || v14 == 0) {
    return 0;
  }
  uint64_t v16 = (void *)*a3;
  uint64_t v17 = (void *)a3[1];
  if ((void *)*a3 != v17)
  {
    uint64_t result = 1;
    while (1)
    {
      uint64_t v18 = (unsigned __int16 *)(*v16 - *(int *)*v16);
      if (*v18 < 0x2Fu) {
        break;
      }
      uint64_t v19 = v18[23];
      if (!v19) {
        break;
      }
      unsigned int v20 = *(unsigned __int8 *)(*v16 + v19);
      BOOL v13 = v20 > 0x2B;
      uint64_t v21 = (1 << v20) & 0x80000001040;
      if (v13 || v21 == 0) {
        break;
      }
      v16 += 5;
      if (v16 == v17) {
        return result;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_699FA4(uint64_t a1, int **a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if ((unint64_t)sub_69B8C0(a1, a2, (int ***)a3) > 1) {
    return 1;
  }
  if (!*(unsigned char *)(a1 + 1097) || a4 != -1 && a4 != a5) {
    return 0;
  }
  uint64_t v12 = sub_5A7C34((void *)a3, a5);
  long long v13 = *(_OWORD *)v12;
  long long v14 = *(_OWORD *)(v12 + 16);
  unint64_t v48 = *(void *)(v12 + 32);
  v47[0] = v13;
  v47[1] = v14;
  unint64_t v15 = *a2;
  uint64_t v16 = (unsigned __int16 *)((char *)*a2 - **a2);
  if (*v16 < 0x2Fu || !v16[23])
  {
LABEL_13:
    unsigned int v44 = 0;
    uint64_t v45 = 0;
    uint64_t v46 = 0;
    uint64_t v18 = *(int ***)a3;
    int64_t v19 = *(void *)(a3 + 8) - *(void *)a3;
    if (v19)
    {
      if (0xCCCCCCCCCCCCCCCDLL * (v19 >> 3) >= 0x666666666666667) {
        sub_2E00();
      }
      unsigned int v20 = (int **)operator new(v19);
      uint64_t v21 = &v20[v19 >> 3];
      unsigned int v44 = v20;
      uint64_t v46 = v21;
      memcpy(v20, v18, v19);
      uint64_t v45 = v21;
    }
    else
    {
      uint64_t v21 = 0;
      unsigned int v20 = 0;
    }
    uint64_t v22 = sub_6CC7B0(v20, v21, a1);
    unsigned int v23 = v44;
    if (v45 != v22) {
      uint64_t v45 = v22;
    }
    if (0xCCCCCCCCCCCCCCCDLL * (v22 - v44) < 2 || v44 == v22) {
      goto LABEL_37;
    }
    unint64_t v24 = v44;
    unint64_t v25 = v44;
    while (__PAIR64__(*((unsigned __int16 *)v25 + 18), *((_DWORD *)v25 + 8)) != __PAIR64__(WORD2(v48), v48)
         || (HIWORD(v48) & 1) == (*((unsigned char *)v25 + 38) == 0))
    {
      v25 += 5;
      v24 += 5;
      if (v25 == v22)
      {
        unint64_t v24 = v22;
        break;
      }
    }
    if (v24 == v22)
    {
LABEL_37:
      uint64_t v10 = 0;
      if (!v44) {
        return v10;
      }
      goto LABEL_60;
    }
    unint64_t v26 = (unint64_t)v44[4];
    if (v48 == v26 && WORD2(v48) == WORD2(v26) && (HIWORD(v26) & 1) != (BYTE6(v48) == 0)) {
      unsigned int v23 = (_OWORD *)sub_66F838(&v44, 1uLL);
    }
    long long v27 = *v23;
    long long v28 = v23[1];
    uint64_t v43 = *((void *)v23 + 4);
    v42[0] = v27;
    v42[1] = v28;
    int v29 = *a2;
    long long v30 = (unsigned __int16 *)((char *)*a2 - **a2);
    unsigned int v31 = *v30;
    if (*((unsigned char *)a2 + 38))
    {
      if (v31 < 0x47) {
        goto LABEL_46;
      }
      uint64_t v32 = v30[35];
      if (!v32) {
        goto LABEL_46;
      }
      int v33 = *(int *)((char *)v29 + v32);
      if ((v33 & 0x141510) != 0) {
        goto LABEL_44;
      }
      int v34 = 64;
    }
    else
    {
      if (v31 < 0x47) {
        goto LABEL_46;
      }
      uint64_t v35 = v30[35];
      if (!v35) {
        goto LABEL_46;
      }
      int v33 = *(int *)((char *)v29 + v35);
      if ((v33 & 0xA0A88) != 0)
      {
LABEL_44:
        if (sub_69BA5C((int **)v47) && !sub_69BA5C((int **)v42)) {
          goto LABEL_59;
        }
LABEL_46:
        double v36 = (unsigned __int16 *)(*(void *)&v42[0] - (int)**(_DWORD **)&v42[0]);
        unsigned int v37 = *v36;
        if (v37 >= 0xB)
        {
          if (v36[5] && (*(unsigned char *)(*(void *)&v42[0] + v36[5] + 2) & 6) != 0) {
            goto LABEL_59;
          }
          if (v37 >= 0x47)
          {
            if (v36[35] && (*(unsigned char *)(*(void *)&v42[0] + v36[35]) & 4) != 0) {
              goto LABEL_59;
            }
            goto LABEL_54;
          }
          if (v37 >= 0x2F)
          {
LABEL_54:
            uint64_t v38 = v36[23];
            if (v38)
            {
              unsigned int v39 = *(unsigned __int8 *)(*(void *)&v42[0] + v38) - 15;
              if (v39 < 0x21 && ((0x1C5C08009uLL >> v39) & 1) != 0) {
                goto LABEL_59;
              }
            }
          }
        }
        double v40 = sub_69B314(a1, a2, (int **)v47, *(double *)&v27);
        double v41 = sub_69B2B8(a1, a2, (int **)v47, (int **)v42, v40);
        if (fabs(v40) >= *(double *)(a1 + 184) && fabs(v41) <= *(double *)(a1 + 400))
        {
          uint64_t v10 = 1;
          unsigned int v23 = v44;
          if (!v44) {
            return v10;
          }
          goto LABEL_60;
        }
LABEL_59:
        uint64_t v10 = 0;
        unsigned int v23 = v44;
        if (!v44) {
          return v10;
        }
LABEL_60:
        uint64_t v45 = (int **)v23;
        operator delete(v23);
        return v10;
      }
      int v34 = 32;
    }
    if ((v34 & v33) == 0) {
      goto LABEL_46;
    }
    goto LABEL_44;
  }
  uint64_t v10 = 0;
  switch(*((unsigned char *)v15 + v16[23]))
  {
    case 6:
    case 0xC:
    case 0x2B:
      uint64_t v17 = v16[5];
      if (v17 && (*((unsigned char *)v15 + v17 + 2) & 0x20) != 0) {
        goto LABEL_13;
      }
      return 0;
    case 0x2C:
      return v10;
    default:
      goto LABEL_13;
  }
  return v10;
}

void sub_69A3DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

unint64_t sub_69A4A4(uint64_t a1, uint64_t a2)
{
  sub_2954EC(a1, *(void *)(a2 + 32), (uint64_t)v8);
  int v2 = __p;
  if (__p == v10)
  {
    unint64_t v5 = 0xFFFFFFFF00000000;
    uint64_t v6 = 0xFFFFFFFFLL;
    if (!__p) {
      return v5 | v6;
    }
    goto LABEL_3;
  }
  unint64_t v3 = sub_2E40A4((uint64_t)v8);
  unsigned int v4 = v3;
  unint64_t v5 = v3 & 0xFFFFFFFF00000000;
  int v2 = __p;
  uint64_t v6 = v4;
  if (__p)
  {
LABEL_3:
    uint64_t v10 = v2;
    operator delete(v2);
  }
  return v5 | v6;
}

void sub_69A52C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_69A548(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 & 0xFF000000000000;
  unint64_t v3 = (int *)sub_2D5D58(a1, a2 & 0xFFFFFFFFFFFFLL);
  unsigned int v4 = (unsigned __int16 *)((char *)v3 - *v3);
  unsigned int v5 = *v4;
  if (!v2)
  {
    if (v5 < 0x27) {
      return 0;
    }
    unsigned int v6 = v4[19];
    if (!v6) {
      return 0;
    }
    return *(unsigned int *)((char *)v3 + v6 + *(int *)((char *)v3 + v6));
  }
  if (v5 >= 0x29)
  {
    unsigned int v6 = v4[20];
    if (v6) {
      return *(unsigned int *)((char *)v3 + v6 + *(int *)((char *)v3 + v6));
    }
  }
  return 0;
}

BOOL sub_69A5C0(uint64_t a1, int **a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a3 + 32);
  int v5 = *((unsigned __int8 *)a2 + 38);
  uint64_t v6 = (uint64_t)*a2;
  uint64_t v7 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v8 = *v7;
  if (*((unsigned char *)a2 + 38))
  {
    if (v8 < 0x29) {
      return 0;
    }
    unsigned int v9 = v7[20];
    if (!v7[20]) {
      return 0;
    }
  }
  else
  {
    if (v8 < 0x27) {
      return 0;
    }
    unsigned int v9 = v7[19];
    if (!v7[19]) {
      return 0;
    }
  }
  uint64_t v10 = v9;
  uint64_t v11 = (unsigned int *)(v6 + v9);
  uint64_t v12 = *v11;
  long long v13 = (unsigned int *)((char *)v11 + v12);
  unsigned int v16 = *v13;
  long long v14 = v13 + 1;
  uint64_t v15 = v16;
  if (!v16) {
    return 0;
  }
  int v17 = 0;
  uint64_t v18 = &v14[v15];
  uint64_t v19 = v4 & 0xFFFFFFFFFFFFLL;
  uint64_t v20 = v4 & 0xFF000000000000;
  uint64_t v21 = v10 + v12 + v6 + 8;
  do
  {
    uint64_t v23 = *v14;
    unint64_t v24 = (unsigned __int16 *)((char *)v14 + v23 - *(int *)((char *)v14 + v23));
    if (*v24 >= 0xDu)
    {
      uint64_t v25 = v24[6];
      if (v24[6])
      {
        unint64_t v26 = (unsigned int *)((char *)v14 + v23 + v25);
        uint64_t v27 = *v26;
        uint64_t v28 = *(unsigned int *)((char *)v26 + v27);
        if (v28)
        {
          uint64_t v29 = 0;
          uint64_t v30 = 4 * v28;
          uint64_t v31 = v21 + v25 + v23 + v27;
          while (1)
          {
            uint64_t v32 = *(void *)(v31
                            + v29
                            + *(unsigned int *)(v31 + v29)
                            + (unint64_t)*(unsigned __int16 *)(v31
                                                                    + v29
                                                                    + *(unsigned int *)(v31 + v29)
                                                                    - (uint64_t)*(int *)(v31
                                                                                      + v29
                                                                                      + *(unsigned int *)(v31 + v29))
                                                                    + 4));
            if (v19 == (v32 & 0xFFFFFFFFFFFFLL) && (v20 != 0) != ((v32 & 0xFF000000000000) != 0)) {
              break;
            }
            v29 += 4;
            if (v30 == v29) {
              goto LABEL_9;
            }
          }
          int v22 = 1;
        }
        else
        {
LABEL_9:
          int v22 = 0;
        }
        v17 += v22;
      }
    }
    ++v14;
    v21 += 4;
  }
  while (v14 != v18);
  if (!v17) {
    return 0;
  }
  uint64_t v33 = *(void *)(a4 + 32);
  if (!v5)
  {
    unsigned int v34 = v7[19];
    if (v34) {
      goto LABEL_27;
    }
    return v34 != 0;
  }
  if (v8 < 0x29)
  {
    unsigned int v34 = 0;
    return v34 != 0;
  }
  unsigned int v34 = v7[20];
  if (!v34) {
    return v34 != 0;
  }
LABEL_27:
  uint64_t v36 = v34;
  unsigned int v37 = (unsigned int *)(v6 + v34);
  uint64_t v38 = *v37;
  unsigned int v39 = (unsigned int *)((char *)v37 + v38 + 4);
  uint64_t v40 = *(unsigned int *)((char *)v37 + v38);
  if (v40)
  {
    unsigned int v34 = 0;
    double v41 = &v39[v40];
    uint64_t v42 = v33 & 0xFFFFFFFFFFFFLL;
    uint64_t v43 = v33 & 0xFF000000000000;
    uint64_t v44 = v36 + v38 + v6 + 8;
    do
    {
      uint64_t v46 = *v39;
      uint64_t v47 = (unsigned __int16 *)((char *)v39 + v46 - *(int *)((char *)v39 + v46));
      if (*v47 >= 0xDu)
      {
        uint64_t v48 = v47[6];
        if (v47[6])
        {
          BOOL v49 = (unsigned int *)((char *)v39 + v46 + v48);
          uint64_t v50 = *v49;
          uint64_t v51 = *(unsigned int *)((char *)v49 + v50);
          if (v51)
          {
            uint64_t v52 = 0;
            uint64_t v53 = 4 * v51;
            uint64_t v54 = v44 + v48 + v46 + v50;
            while (1)
            {
              uint64_t v55 = *(void *)(v54
                              + v52
                              + *(unsigned int *)(v54 + v52)
                              + (unint64_t)*(unsigned __int16 *)(v54
                                                                      + v52
                                                                      + *(unsigned int *)(v54 + v52)
                                                                      - (uint64_t)*(int *)(v54
                                                                                        + v52
                                                                                        + *(unsigned int *)(v54 + v52))
                                                                      + 4));
              if (v42 == (v55 & 0xFFFFFFFFFFFFLL) && (v43 != 0) != ((v55 & 0xFF000000000000) != 0)) {
                break;
              }
              v52 += 4;
              if (v53 == v52) {
                goto LABEL_29;
              }
            }
            int v45 = 1;
          }
          else
          {
LABEL_29:
            int v45 = 0;
          }
          v34 += v45;
        }
      }
      ++v39;
      v44 += 4;
    }
    while (v39 != v41);
    return v34 != 0;
  }
  return 0;
}

uint64_t sub_69A840(uint64_t a1, int **a2, uint64_t *a3, unint64_t a4, int a5, uint64_t a6)
{
  uint64_t v12 = (long long *)sub_5A7C34(a3, a4);
  long long v13 = (unsigned __int16 *)(*(void *)v12 - **(int **)v12);
  if (*v13 < 0x2Fu) {
    return 0;
  }
  uint64_t v14 = v13[23];
  if (!v14) {
    return 0;
  }
  unsigned int v15 = *(unsigned __int8 *)(*(void *)v12 + v14);
  BOOL v16 = v15 > 0x2A;
  uint64_t v17 = (1 << v15) & 0x50426810004;
  if (v16 || v17 == 0) {
    return 0;
  }
  uint64_t v19 = v12;
  uint64_t v20 = sub_6D7AFC(a1 + 1160, a2, a3, -1);
  uint64_t v21 = 0;
  if (v20 != -1 && v20 != a4)
  {
    uint64_t v114 = a6;
    unint64_t v115 = v20;
    unsigned int v117 = a2;
    uint64_t v118 = a1 + 1160;
    int v113 = a5;
    int v140 = 0;
    long long v141 = 0;
    int v142 = 0;
    sub_64F484(&v140, (long long *)a2);
    sub_64F484(&v140, v19);
    long long v22 = *v19;
    long long v23 = v19[1];
    char v138 = (int *)*((void *)v19 + 4);
    uint64_t v139 = 0;
    long long v136 = v22;
    long long v137 = v23;
    long long v133 = 0;
    unint64_t v134 = 0;
    uint64_t v135 = 0;
    do
    {
      uint64_t v28 = (unsigned __int16 *)(v136 - *(int *)v136);
      if (*v28 < 9u)
      {
        uint64_t v29 = 0;
      }
      else
      {
        uint64_t v29 = v28[4];
        if (v29) {
          uint64_t v29 = *(unsigned int *)(v136 + v29);
        }
      }
      uint64_t v30 = v139 + v29;
      uint64_t v139 = v30;
      uint64_t v31 = (unsigned __int16 *)(v136 - *(int *)v136);
      if (*v31 < 0x2Fu) {
        goto LABEL_58;
      }
      uint64_t v32 = v31[23];
      if (!v32) {
        goto LABEL_58;
      }
      unsigned int v33 = *(unsigned __int8 *)(v136 + v32);
      BOOL v16 = v33 > 0x2A;
      uint64_t v34 = (1 << v33) & 0x50426810004;
      BOOL v35 = v16 || v34 == 0;
      if (v35 || v30 > *(void *)(a1 + 456)) {
        goto LABEL_58;
      }
      sub_2E44A4(*(void *)a1, (uint64_t)&v136, &v133);
      uint64_t v36 = sub_6CDA8C(v133, v134);
      unsigned int v37 = v133;
      if (v134 != v36) {
        unint64_t v134 = v36;
      }
      if (v133 == v36)
      {
        uint64_t v21 = 0;
        goto LABEL_60;
      }
      *(void *)&long long v130 = &v136;
      if ((char *)v36 - (char *)v133 < 5121)
      {
LABEL_32:
        uint64_t v40 = 0;
        unint64_t v38 = 0;
      }
      else
      {
        unint64_t v38 = 0xCCCCCCCCCCCCCCCDLL * (v36 - v133);
        while (1)
        {
          unsigned int v39 = operator new(40 * v38, &std::nothrow);
          if (v39) {
            break;
          }
          BOOL v16 = v38 > 1;
          v38 >>= 1;
          if (!v16) {
            goto LABEL_32;
          }
        }
        uint64_t v40 = v39;
      }
      sub_6CDC10(v37, v36, (int ***)&v130, 0xCCCCCCCCCCCCCCCDLL * (v36 - v37), (uint64_t)v40, v38);
      if (v40) {
        operator delete(v40);
      }
      double v41 = v133;
      uint64_t v42 = v133[4];
      long long v43 = *((_OWORD *)v133 + 1);
      long long v136 = *(_OWORD *)v133;
      long long v137 = v43;
      char v138 = v42;
      uint64_t v44 = v141;
      if (v141 < v142)
      {
        long long v25 = *(_OWORD *)v133;
        long long v26 = *((_OWORD *)v133 + 1);
        *((void *)v141 + 4) = v133[4];
        *uint64_t v44 = v25;
        v44[1] = v26;
        uint64_t v27 = (char *)v44 + 40;
      }
      else
      {
        int v45 = v140;
        unint64_t v46 = 0xCCCCCCCCCCCCCCCDLL * ((v141 - v140) >> 3);
        unint64_t v47 = v46 + 1;
        if (v46 + 1 > 0x666666666666666) {
          sub_2E00();
        }
        if (0x999999999999999ALL * ((v142 - v140) >> 3) > v47) {
          unint64_t v47 = 0x999999999999999ALL * ((v142 - v140) >> 3);
        }
        if (0xCCCCCCCCCCCCCCCDLL * ((v142 - v140) >> 3) >= 0x333333333333333) {
          unint64_t v48 = 0x666666666666666;
        }
        else {
          unint64_t v48 = v47;
        }
        if (v48)
        {
          if (v48 > 0x666666666666666) {
            sub_188D718();
          }
          BOOL v49 = (char *)operator new(40 * v48);
        }
        else
        {
          BOOL v49 = 0;
        }
        uint64_t v50 = &v49[40 * v46];
        long long v51 = v137;
        *(_OWORD *)uint64_t v50 = v136;
        *((_OWORD *)v50 + 1) = v51;
        *((void *)v50 + 4) = v138;
        uint64_t v52 = v50;
        if (v44 != (_OWORD *)v45)
        {
          do
          {
            long long v53 = *(_OWORD *)((char *)v44 - 40);
            long long v54 = *(_OWORD *)((char *)v44 - 24);
            *((void *)v52 - 1) = *((void *)v44 - 1);
            *(_OWORD *)(v52 - 24) = v54;
            *(_OWORD *)(v52 - 40) = v53;
            v52 -= 40;
            uint64_t v44 = (_OWORD *)((char *)v44 - 40);
          }
          while (v44 != (_OWORD *)v45);
          uint64_t v44 = v45;
        }
        uint64_t v27 = v50 + 40;
        int v140 = v52;
        long long v141 = v50 + 40;
        int v142 = &v49[40 * v48];
        if (v44)
        {
          operator delete(v44);
          double v41 = v133;
        }
      }
      long long v141 = v27;
    }
    while (0xCCCCCCCCCCCCCCCDLL * (v134 - v41) < 2);
    if (0xCCCCCCCCCCCCCCCDLL * ((v27 - v140) >> 3) < 3
      || ((double v55 = sub_69BAF0(v117, (int **)v19), v55 >= 0.0) ? (v56 = 90.0) : (v56 = -90.0),
          double v57 = sub_69BAF0(v117, (int **)v141 - 5),
          v58.i16[0] = *(_WORD *)(a1 + 464),
          vabdd_f64(v57, v56) > (double)vmovl_s16(v58).i32[0]))
    {
LABEL_58:
      uint64_t v21 = 0;
LABEL_59:
      uint64_t v36 = v133;
LABEL_60:
      if (v36)
      {
        unint64_t v134 = v36;
        operator delete(v36);
      }
      if (v140)
      {
        long long v141 = v140;
        operator delete(v140);
      }
      return v21;
    }
    uint64_t v59 = sub_5A7C34(a3, v115);
    long long v60 = *(_OWORD *)v59;
    long long v61 = *(_OWORD *)(v59 + 16);
    uint64_t v132 = *(void *)(v59 + 32);
    long long v130 = v60;
    long long v131 = v61;
    LODWORD(v129) = 0;
    long long v127 = 0u;
    long long v128 = 0u;
    uint64_t v62 = sub_69CFC4(&v139, 2.0);
    uint64_t v63 = 0;
    uint64_t v64 = *(void *)(a1 + 456);
    if (v64 >= v62) {
      uint64_t v64 = v62;
    }
    uint64_t v116 = v64;
    uint64_t v65 = v130;
    BOOL v66 = (unsigned __int16 *)(v130 - *(int *)v130);
    if (*v66 < 9u) {
      goto LABEL_69;
    }
LABEL_67:
    uint64_t v67 = v66[4];
    if (v67)
    {
      uint64_t v68 = *(unsigned int *)(v65 + v67);
      goto LABEL_70;
    }
    while (1)
    {
LABEL_69:
      uint64_t v68 = 0;
LABEL_70:
      v63 += v68;
      if (v63 > v116) {
        goto LABEL_58;
      }
      sub_2E44A4(*(void *)a1, (uint64_t)&v130, &v133);
      uint64_t v70 = v133;
      unsigned int v71 = (char *)v134;
      if (v133 == v134) {
        goto LABEL_58;
      }
      int v119 = (unsigned int *)&v130;
      long long __p = *(void **)&v56;
      if ((char *)v134 - (char *)v133 < 5121)
      {
LABEL_76:
        BOOL v74 = 0;
        unint64_t v72 = 0;
      }
      else
      {
        unint64_t v72 = 0xCCCCCCCCCCCCCCCDLL * (v134 - v133);
        while (1)
        {
          int v73 = operator new(40 * v72, &std::nothrow);
          if (v73) {
            break;
          }
          BOOL v16 = v72 > 1;
          v72 >>= 1;
          if (!v16) {
            goto LABEL_76;
          }
        }
        BOOL v74 = v73;
      }
      sub_6CEF64(v70, v71, (double *)&v119, 0xCCCCCCCCCCCCCCCDLL * ((v71 - (char *)v70) >> 3), (uint64_t)v74, v72, v69);
      if (v74) {
        operator delete(v74);
      }
      unsigned int v75 = (unsigned __int16 *)(v130 - *(int *)v130);
      unsigned int v76 = *v75;
      if (BYTE6(v132))
      {
        if (v76 >= 0x49)
        {
          unsigned int v77 = v75[36];
          if (v77) {
            goto LABEL_86;
          }
        }
      }
      else if (v76 >= 0x4B)
      {
        unsigned int v77 = v75[37];
        if (v77)
        {
LABEL_86:
          __int16 v78 = *(_WORD *)(v130 + v77);
          goto LABEL_88;
        }
      }
      __int16 v78 = -1;
LABEL_88:
      int v79 = *v133;
      long long v80 = (unsigned __int16 *)((char *)v79 - *v79);
      unsigned int v81 = *v80;
      if (*((unsigned char *)v133 + 38))
      {
        if (v81 >= 0x4B)
        {
          unsigned int v82 = v80[37];
          if (v82) {
            goto LABEL_94;
          }
        }
      }
      else if (v81 >= 0x49)
      {
        unsigned int v82 = v80[36];
        if (v82)
        {
LABEL_94:
          int v83 = *(unsigned __int16 *)((char *)v79 + v82);
          goto LABEL_96;
        }
      }
      int v83 = 0xFFFF;
LABEL_96:
      unsigned __int16 v84 = v78 + 18000;
      unsigned __int16 v85 = v78 - 18000;
      if ((unsigned __int16)(v84 >> 5) < 0x465u) {
        unsigned __int16 v85 = v84;
      }
      int v86 = v83 - v85;
      if (v86 > 18000) {
        v86 -= 36000;
      }
      if (v86 < -17999) {
        v86 += 36000;
      }
      int16x4_t v87 = (int16x4_t)0x4059000000000000;
      v87.i16[0] = *(_WORD *)(a1 + 464);
      if (vabdd_f64((double)v86 / 100.0, v56) < (double)vmovl_s16(v87).i32[0])
      {
        int v119 = (unsigned int *)sub_2E4738((int **)&v130);
        if ((sub_3CCE68(a1 + 8, &v119) & 1) == 0)
        {
          unsigned int v92 = v133[4];
          long long v93 = *((_OWORD *)v133 + 1);
          long long v127 = *(_OWORD *)v133;
          long long v128 = v93;
          int v129 = v92;
          long long v95 = *(_OWORD *)v133;
          long long v94 = *((_OWORD *)v133 + 1);
          char v138 = v133[4];
          long long v136 = v95;
          long long v137 = v94;
          unsigned int v96 = v141;
          uint64_t v124 = 0;
          char v125 = 0;
          uint64_t v126 = 0;
          if (v116 < 1)
          {
LABEL_118:
            sub_693CB0(v114);
            goto LABEL_58;
          }
          uint64_t v97 = 0;
          while (1)
          {
            unint64_t v98 = *((void *)v96 - 1);
            if (((unint64_t)v138 & 0xFFFFFFFFFFFFLL) == (v98 & 0xFFFFFFFFFFFFLL)
              && (((unint64_t)v138 & 0xFF000000000000) == 0) != (HIWORD(v98) & 1))
            {
              break;
            }
            sub_2E44A4(*(void *)a1, (uint64_t)&v136, &v133);
            unint64_t v99 = sub_6D7AFC(v118, (int **)&v136, (uint64_t *)&v133, -1);
            if (v99 == -1) {
              goto LABEL_58;
            }
            double v100 = (unsigned __int16 *)(v136 - *(int *)v136);
            if (*v100 >= 9u && (uint64_t v101 = v100[4]) != 0) {
              uint64_t v102 = *(unsigned int *)(v136 + v101);
            }
            else {
              uint64_t v102 = 0;
            }
            uint64_t v103 = sub_66F838(&v133, v99);
            v97 += v102;
            long long v104 = *(_OWORD *)v103;
            long long v105 = *(_OWORD *)(v103 + 16);
            char v138 = *(int **)(v103 + 32);
            long long v136 = v104;
            long long v137 = v105;
            if (v97 >= v116) {
              goto LABEL_118;
            }
          }
          sub_693CB0(v114);
          sub_69D028(v114, 0xCCCCCCCCCCCCCCCDLL * ((v141 - v140) >> 3));
          BOOL v106 = v140;
          for (unint64_t i = v141; v106 != i; v106 += 40)
          {
            int v119 = (unsigned int *)*((void *)v106 + 4);
            sub_2D5B74((char **)v114, &v119);
          }
          if (v55 < 0.0) {
            int v108 = 1;
          }
          else {
            int v108 = 2;
          }
          *(_DWORD *)(v114 + 24) = v108;
          sub_2954EC(*(void *)a1, v132, (uint64_t)&v119);
          unint64_t v122 = sub_2E40A4((uint64_t)&v119);
          int v123 = v109;
          if (__p)
          {
            uint64_t v121 = __p;
            operator delete(__p);
          }
          uint64_t v110 = sub_69D0E4((uint64_t *)a1, &v140, (unsigned int *)&v122);
          *(void *)(v114 + 152) = v110;
          *(void *)(v114 + 160) = v111;
          BOOL v112 = v110 == -1 || v111 == 0x7FFFFFFFFFFFFFFFLL;
          uint64_t v21 = !v112;
          if (v112)
          {
            sub_693CB0(v114);
          }
          else if (v113)
          {
            sub_68E1D8(a1, &v130, (char **)&v124, 0);
            sub_69D578(a1 + 64, (long long *)v117, &v130, (uint64_t)&v127, (char **)&v124);
            if (v124)
            {
              char v125 = v124;
              operator delete(v124);
            }
            uint64_t v21 = 1;
          }
          goto LABEL_59;
        }
      }
      unint64_t v88 = sub_6D7AFC(v118, (int **)&v130, (uint64_t *)&v133, -1);
      if (v88 == -1 || (sub_6D8104(v118, (int **)&v130, (uint64_t *)&v133, v88) & 1) != 0) {
        goto LABEL_58;
      }
      uint64_t v89 = sub_66F838(&v133, v88);
      long long v90 = *(_OWORD *)v89;
      long long v91 = *(_OWORD *)(v89 + 16);
      uint64_t v132 = *(void *)(v89 + 32);
      long long v130 = v90;
      long long v131 = v91;
      uint64_t v65 = v90;
      BOOL v66 = (unsigned __int16 *)(v90 - *(int *)v90);
      if (*v66 >= 9u) {
        goto LABEL_67;
      }
    }
  }
  return v21;
}

void sub_69B1D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  if (__p) {
    operator delete(__p);
  }
  long long v25 = *(void **)(v23 - 200);
  if (v25)
  {
    *(void *)(v23 - 192) = v25;
    operator delete(v25);
    long long v26 = *(void **)(v23 - 128);
    if (!v26) {
LABEL_5:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    long long v26 = *(void **)(v23 - 128);
    if (!v26) {
      goto LABEL_5;
    }
  }
  *(void *)(v23 - 120) = v26;
  operator delete(v26);
  _Unwind_Resume(exception_object);
}

double sub_69B2B8(uint64_t a1, int **a2, int **a3, int **a4, double a5)
{
  double v8 = sub_69B314(a1, a2, a3, a5);
  return fabs(v8) - fabs(sub_69B314(a1, a2, a4, v8));
}

double sub_69B314(uint64_t a1, int **a2, int **a3, double a4)
{
  LODWORD(a4) = *(_DWORD *)(a1 + 720);
  if (sub_3E75E0(*(void *)a1, a1 + 8, a2, a3, *(void *)(a1 + 1120), *(void *)(a1 + 1112), (double)*(unint64_t *)&a4, *(double *)(a1 + 1104)))
  {
    uint64_t v7 = (unsigned __int16 *)((char *)*a2 - **a2);
    unsigned int v8 = *v7;
    if (*((unsigned char *)a2 + 38))
    {
      if (v8 < 0x49) {
        goto LABEL_15;
      }
      unsigned int v9 = v7[36];
      if (!v9) {
        goto LABEL_15;
      }
    }
    else if (v8 < 0x4B || (unsigned int v9 = v7[37]) == 0)
    {
LABEL_15:
      __int16 v11 = -1;
      uint64_t v12 = *a3;
      long long v13 = (unsigned __int16 *)((char *)*a3 - **a3);
      unsigned int v14 = *v13;
      if (*((unsigned char *)a3 + 38)) {
        goto LABEL_16;
      }
      goto LABEL_12;
    }
    __int16 v11 = *(_WORD *)((char *)*a2 + v9);
    uint64_t v12 = *a3;
    long long v13 = (unsigned __int16 *)((char *)*a3 - **a3);
    unsigned int v14 = *v13;
    if (*((unsigned char *)a3 + 38))
    {
LABEL_16:
      if (v14 >= 0x4B)
      {
        unsigned int v15 = v13[37];
        if (v15)
        {
LABEL_18:
          int v16 = *(unsigned __int16 *)((char *)v12 + v15);
LABEL_20:
          unsigned __int16 v17 = v11 + 18000;
          unsigned __int16 v18 = v11 - 18000;
          if ((unsigned __int16)(v17 >> 5) < 0x465u) {
            unsigned __int16 v18 = v17;
          }
          int v19 = v16 - v18;
          if (v19 > 18000) {
            v19 -= 36000;
          }
          if (v19 < -17999) {
            v19 += 36000;
          }
          return (double)v19 / 100.0;
        }
      }
LABEL_19:
      int v16 = 0xFFFF;
      goto LABEL_20;
    }
LABEL_12:
    if (v14 >= 0x49)
    {
      unsigned int v15 = v13[36];
      if (v15) {
        goto LABEL_18;
      }
    }
    goto LABEL_19;
  }

  return sub_6D82EC(a1 + 1160, a2, a3);
}

double sub_69B494(uint64_t a1, int **a2, int **a3, int **a4, double a5)
{
  double v9 = fabs(sub_69B314(a1, a2, a4, a5));
  if (v9 >= *(double *)(a1 + 408)
    && ((LODWORD(v9) = *(_DWORD *)(a1 + 720),
         (sub_3E75E0(*(void *)a1, a1 + 8, a2, a4, *(void *)(a1 + 1120), *(void *)(a1 + 1112), (double)*(unint64_t *)&v9, *(double *)(a1 + 1104)) & 1) != 0)|| (LODWORD(v10) = *(_DWORD *)(a1 + 720), sub_3E75E0(*(void *)a1, a1 + 8, a2, a3, *(void *)(a1 + 1120), *(void *)(a1 + 1112), (double)v10, *(double *)(a1 + 1104)))))
  {
    return *(double *)(a1 + 392);
  }
  else
  {
    return *(double *)(a1 + 400);
  }
}

uint64_t sub_69B568(char **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = &(*a1)[-*(int *)*a1];
  unsigned int v3 = *(unsigned __int16 *)v2;
  if (v3 < 0x15)
  {
    if (v3 < 0xB) {
      return 1;
    }
  }
  else
  {
    uint64_t v4 = *((unsigned __int16 *)v2 + 10);
    if (*((_WORD *)v2 + 10))
    {
      uint64_t result = v1[v4];
      if (v1[v4]) {
        return result;
      }
    }
  }
  uint64_t v6 = *((unsigned __int16 *)v2 + 5);
  if (!v6) {
    return 1;
  }
  int v7 = *(_DWORD *)&v1[v6];
  uint64_t result = 1;
  if (v7)
  {
    if ((v7 & 2) != 0) {
      return 2;
    }
    else {
      return 1;
    }
  }
  return result;
}

uint64_t sub_69B5C8(char **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = &(*a1)[-*(int *)*a1];
  unsigned int v3 = *(unsigned __int16 *)v2;
  if (v3 < 0xB) {
    return 0;
  }
  if (*((_WORD *)v2 + 5))
  {
    if (v3 < 0x39 || (*(_DWORD *)&v1[*((unsigned __int16 *)v2 + 5)] & 3) != 0) {
      return 0;
    }
  }
  else if (v3 < 0x39)
  {
    return 0;
  }
  uint64_t v5 = *((unsigned __int16 *)v2 + 28);
  if (!v5) {
    return 0;
  }
  unsigned int v6 = *(_DWORD *)&v1[v5];
  if ((v6 & 3) != 0 || (v6 & 7) == 4) {
    return 1;
  }
  else {
    return (v6 >> 5) & 1;
  }
}

unint64_t sub_69B640(uint64_t a1, void *a2)
{
  uint64_t v2 = (unsigned __int16 *)(*a2 - *(int *)*a2);
  if (*v2 >= 0x2Fu && (v3 = v2[23]) != 0 && (unsigned int v4 = *(unsigned __int8 *)(*a2 + v3), v4 <= 0x2C)) {
    return (0x7FFFFFFAFBFuLL >> v4) & 1;
  }
  else {
    return 1;
  }
}

BOOL sub_69B688(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = (unsigned __int16 *)(*a2 - *(int *)*a2);
  if (*v3 >= 0x2Fu
    && (uint64_t v4 = v3[23]) != 0
    && !*(unsigned char *)(*a2 + v4)
    && (uint64_t v5 = (unsigned __int16 *)(*a3 - *(int *)*a3), *v5 >= 0x2Fu)
    && (uint64_t v6 = v5[23]) != 0)
  {
    return *(unsigned char *)(*a3 + v6) == 38;
  }
  else
  {
    return 0;
  }
}

BOOL sub_69B6E8(uint64_t a1, int **a2, void *a3, int **a4)
{
  uint64_t v4 = (char *)*a2;
  uint64_t v5 = (unsigned __int16 *)((char *)*a2 - **a2);
  if (*v5 < 0x2Fu) {
    return 0;
  }
  if (!v5[23]) {
    return 0;
  }
  if (v4[v5[23]]) {
    return 0;
  }
  uint64_t v6 = (unsigned __int16 *)(*a3 - *(int *)*a3);
  if (*v6 < 0x2Fu) {
    return 0;
  }
  uint64_t v7 = v6[23];
  if (!v7) {
    return 0;
  }
  if (*(unsigned char *)(*a3 + v7)) {
    return 0;
  }
  unsigned int v8 = (unsigned __int16 *)((char *)*a4 - **a4);
  if (*v8 < 0x2Fu) {
    return 0;
  }
  uint64_t v9 = v8[23];
  if (!v9 || *((unsigned char *)*a4 + v9) != 26) {
    return 0;
  }
  if (v5[10])
  {
    if (v4[v5[10]] == 1) {
      return 0;
    }
    if (v4[v5[10]]) {
      goto LABEL_15;
    }
  }
  if (!v5[5] || (~*(_DWORD *)&v4[v5[5]] & 3) != 0) {
    return 0;
  }
LABEL_15:
  unint64_t v10 = (unint64_t)a4[4];
  if (*((unsigned char *)a2 + 38))
  {
    unsigned int v11 = v5[20];
    if (!v11) {
      return v11 == 1;
    }
LABEL_20:
    uint64_t v13 = v11;
    unsigned int v14 = &v4[v11];
    uint64_t v15 = *(unsigned int *)v14;
    int v16 = (unsigned int *)&v14[v15 + 4];
    uint64_t v17 = *(unsigned int *)&v14[v15];
    if (v17)
    {
      unsigned int v11 = 0;
      unsigned __int16 v18 = &v16[v17];
      uint64_t v19 = v10 & 0xFFFFFFFFFFFFLL;
      uint64_t v20 = v10 & 0xFF000000000000;
      uint64_t v21 = (uint64_t)&v4[v13 + 8 + v15];
      do
      {
        uint64_t v23 = *v16;
        unint64_t v24 = (unsigned __int16 *)((char *)v16 + v23 - *(int *)((char *)v16 + v23));
        if (*v24 >= 0xDu)
        {
          uint64_t v25 = v24[6];
          if (v24[6])
          {
            long long v26 = (unsigned int *)((char *)v16 + v23 + v25);
            uint64_t v27 = *v26;
            uint64_t v28 = *(unsigned int *)((char *)v26 + v27);
            if (v28)
            {
              uint64_t v29 = 0;
              uint64_t v30 = 4 * v28;
              uint64_t v31 = v21 + v25 + v23 + v27;
              while (1)
              {
                uint64_t v32 = *(void *)(v31
                                + v29
                                + *(unsigned int *)(v31 + v29)
                                + (unint64_t)*(unsigned __int16 *)(v31
                                                                        + v29
                                                                        + *(unsigned int *)(v31 + v29)
                                                                        - (uint64_t)*(int *)(v31
                                                                                          + v29
                                                                                          + *(unsigned int *)(v31 + v29))
                                                                        + 4));
                if (v19 == (v32 & 0xFFFFFFFFFFFFLL) && (v20 != 0) != ((v32 & 0xFF000000000000) != 0)) {
                  break;
                }
                v29 += 4;
                if (v30 == v29) {
                  goto LABEL_22;
                }
              }
              int v22 = 1;
            }
            else
            {
LABEL_22:
              int v22 = 0;
            }
            v11 += v22;
          }
        }
        ++v16;
        v21 += 4;
      }
      while (v16 != v18);
    }
    else
    {
      unsigned int v11 = 0;
    }
    return v11 == 1;
  }
  unsigned int v11 = v5[19];
  if (v11) {
    goto LABEL_20;
  }
  return v11 == 1;
}

uint64_t sub_69B8C0(uint64_t a1, int **a2, int ***a3)
{
  uint64_t v3 = *a3;
  uint64_t v4 = a3[1];
  if (*a3 != v4)
  {
    uint64_t v7 = 0;
    uint64_t v8 = a1 + 1160;
    while (1)
    {
      uint64_t v9 = *a2;
      unint64_t v10 = (unsigned __int16 *)((char *)*a2 - **a2);
      if (*v10 >= 0x2Fu && v10[23])
      {
        unsigned int v11 = *((unsigned __int8 *)v9 + v10[23]);
        BOOL v12 = v11 > 0x2B || ((1 << v11) & 0x80000001040) == 0;
        if (v12 || (uint64_t v13 = v10[5]) != 0 && (*((unsigned char *)v9 + v13 + 2) & 0x20) != 0)
        {
          BOOL v14 = v11 == 44;
          uint64_t v15 = *v3;
          int v16 = (unsigned __int16 *)((char *)*v3 - **v3);
          if (*v16 < 0x2Fu)
          {
LABEL_26:
            if (v14) {
              goto LABEL_4;
            }
            goto LABEL_3;
          }
        }
        else
        {
          BOOL v14 = 1;
          uint64_t v15 = *v3;
          int v16 = (unsigned __int16 *)((char *)*v3 - **v3);
          if (*v16 < 0x2Fu) {
            goto LABEL_26;
          }
        }
      }
      else
      {
        BOOL v14 = 0;
        uint64_t v15 = *v3;
        int v16 = (unsigned __int16 *)((char *)*v3 - **v3);
        if (*v16 < 0x2Fu) {
          goto LABEL_26;
        }
      }
      if (!v16[23]) {
        goto LABEL_26;
      }
      unsigned int v17 = *((unsigned __int8 *)v15 + v16[23]);
      BOOL v18 = v17 > 0x2B || ((1 << v17) & 0x80000001040) == 0;
      if (v18 || (uint64_t v19 = v16[5]) != 0 && (*((unsigned char *)v15 + v19 + 2) & 0x20) != 0)
      {
        if ((v14 ^ (v17 == 44))) {
          goto LABEL_4;
        }
      }
      else if (!v14)
      {
        goto LABEL_4;
      }
LABEL_3:
      v7 += fabs(sub_6D82EC(v8, a2, v3)) < *(double *)(a1 + 200);
LABEL_4:
      v3 += 5;
      if (v3 == v4) {
        return v7;
      }
    }
  }
  return 0;
}

BOOL sub_69BA5C(int **a1)
{
  uint64_t v1 = (char *)*a1;
  uint64_t v2 = (unsigned __int16 *)((char *)*a1 - **a1);
  unsigned int v3 = *v2;
  if (*((unsigned char *)a1 + 38))
  {
    if (v3 >= 0x47)
    {
      uint64_t v4 = v2[35];
      if (v4)
      {
        int v5 = *(_DWORD *)&v1[v4];
        return (v5 & 0x141510) != 0 || (v5 & 0x40) != 0;
      }
    }
    return 0;
  }
  if (v3 < 0x47) {
    return 0;
  }
  uint64_t v7 = v2[35];
  if (!v7) {
    return 0;
  }
  int v8 = *(_DWORD *)&v1[v7];
  return (v8 & 0xA0A88) != 0 || (v8 & 0x20) != 0;
}

double sub_69BAF0(int **a1, int **a2)
{
  uint64_t v2 = (unsigned __int16 *)((char *)*a1 - **a1);
  unsigned int v3 = *v2;
  if (*((unsigned char *)a1 + 38))
  {
    if (v3 < 0x49) {
      goto LABEL_11;
    }
    unsigned int v4 = v2[36];
    if (!v4) {
      goto LABEL_11;
    }
  }
  else if (v3 < 0x4B || (unsigned int v4 = v2[37]) == 0)
  {
LABEL_11:
    __int16 v5 = -1;
    uint64_t v6 = (char *)*a2;
    uint64_t v7 = (unsigned __int16 *)((char *)*a2 - **a2);
    unsigned int v8 = *v7;
    if (*((unsigned char *)a2 + 38)) {
      goto LABEL_12;
    }
LABEL_8:
    if (v8 >= 0x49)
    {
      unsigned int v9 = v7[36];
      if (v9) {
        goto LABEL_14;
      }
    }
    goto LABEL_15;
  }
  __int16 v5 = *(_WORD *)((char *)*a1 + v4);
  uint64_t v6 = (char *)*a2;
  uint64_t v7 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v8 = *v7;
  if (!*((unsigned char *)a2 + 38)) {
    goto LABEL_8;
  }
LABEL_12:
  if (v8 >= 0x4B)
  {
    unsigned int v9 = v7[37];
    if (v9)
    {
LABEL_14:
      int v10 = *(unsigned __int16 *)&v6[v9];
      goto LABEL_16;
    }
  }
LABEL_15:
  int v10 = 0xFFFF;
LABEL_16:
  unsigned __int16 v11 = v5 + 18000;
  unsigned __int16 v12 = v5 - 18000;
  if ((unsigned __int16)(v11 >> 5) < 0x465u) {
    unsigned __int16 v12 = v11;
  }
  int v13 = v10 - v12;
  if (v13 > 18000) {
    v13 -= 36000;
  }
  if (v13 < -17999) {
    v13 += 36000;
  }
  return (double)v13 / 100.0;
}

uint64_t sub_69BBEC(uint64_t a1, void *a2, unint64_t a3, int **a4)
{
  uint64_t v7 = 0;
  uint64_t v36 = 0;
  unsigned int v37 = 0;
  uint64_t v38 = 0;
  long long __p = 0;
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  unsigned int v8 = (unsigned __int16 *)((char *)*a4 - **a4);
  if (*v8 >= 9u)
  {
    uint64_t v9 = v8[4];
    if (v9) {
      uint64_t v7 = *(unsigned int *)((char *)*a4 + v9);
    }
    else {
      uint64_t v7 = 0;
    }
  }
  long long v10 = *((_OWORD *)a4 + 1);
  long long v30 = *(_OWORD *)a4;
  long long v31 = v10;
  uint64_t v32 = a4[4];
  if (v7 >= *(void *)(a1 + 440))
  {
    int v16 = 0;
    uint64_t v15 = 0;
  }
  else
  {
    while (1)
    {
      sub_2E44A4(*(void *)a1, (uint64_t)&v30, &v36);
      sub_6D7A20(a1 + 1160, (uint64_t)&v30, (uint64_t *)&v36);
      if (v36 == v37 || fabs(sub_6D82EC(a1 + 1160, (int **)&v30, (int **)v36)) > *(double *)(a1 + 200)) {
        break;
      }
      unsigned __int16 v11 = (int *)*((void *)v36 + 4);
      long long v12 = *((_OWORD *)v36 + 1);
      long long v30 = *(_OWORD *)v36;
      long long v31 = v12;
      uint64_t v32 = v11;
      uint64_t v29 = v11;
      sub_2D5B74((char **)&__p, &v29);
      int v13 = (unsigned __int16 *)(v30 - *(int *)v30);
      if (*v13 >= 9u && (uint64_t v14 = v13[4]) != 0)
      {
        v7 += *(unsigned int *)(v30 + v14);
        if (v7 >= *(void *)(a1 + 440)) {
          break;
        }
      }
      else if (v7 >= *(void *)(a1 + 440))
      {
        break;
      }
    }
    uint64_t v15 = (int *)__p;
    int v16 = v34;
  }
  unint64_t v17 = 126 - 2 * __clz(((char *)v16 - (char *)v15) >> 3);
  if (v16 == v15) {
    uint64_t v18 = 0;
  }
  else {
    uint64_t v18 = v17;
  }
  sub_303770((uint64_t)v15, v16, (uint64_t)&v29, v18, 1);
  sub_30361C((uint64_t)&__p);
  for (uint64_t i = sub_46CCC8(a2, a3, v19); i < *(void *)(a1 + 440); i += sub_46CCC8(a2, a3, v23))
  {
    if (a3 >= sub_46C760(a2) - 1) {
      break;
    }
    uint64_t v21 = (int **)sub_46C8EC(a2, a3++);
    uint64_t v22 = sub_46C8EC(a2, a3);
    double v23 = fabs(sub_6D82EC(a1 + 1160, v21, (int **)v22));
    if (v23 > *(double *)(a1 + 200)) {
      break;
    }
    unint64_t v24 = (int *)__p;
    if (__p != v34)
    {
      unint64_t v25 = *(void *)(v22 + 32);
      while (__PAIR64__(*((unsigned __int16 *)v24 + 2), *v24) != __PAIR64__(WORD2(v25), v25)
           || (HIWORD(v25) & 1) == (*((unsigned char *)v24 + 6) == 0))
      {
        v24 += 2;
        if (v24 == v34)
        {
          unint64_t v24 = v34;
          break;
        }
      }
    }
    if (v24 != v34)
    {
      uint64_t v26 = 1;
      uint64_t v27 = (int *)__p;
      if (__p) {
        goto LABEL_31;
      }
      goto LABEL_32;
    }
  }
  uint64_t v26 = 0;
  uint64_t v27 = (int *)__p;
  if (__p)
  {
LABEL_31:
    uint64_t v34 = v27;
    operator delete(v27);
  }
LABEL_32:
  if (v36)
  {
    unsigned int v37 = v36;
    operator delete(v36);
  }
  return v26;
}

void sub_69BEBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, void *a20,uint64_t a21)
{
  if (__p)
  {
    operator delete(__p);
    uint64_t v22 = a20;
    if (!a20) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    uint64_t v22 = a20;
    if (!a20) {
      goto LABEL_3;
    }
  }
  operator delete(v22);
  _Unwind_Resume(exception_object);
}

int **sub_69BF14(int ***a1, uint64_t a2)
{
  uint64_t result = *a1;
  unsigned int v4 = a1[1];
  if (result != v4)
  {
    uint64_t v5 = *(void *)(*(void *)a2 + 32);
    while (1)
    {
      if (__PAIR64__(*((unsigned __int16 *)result + 18), *((_DWORD *)result + 8)) != __PAIR64__(WORD2(v5), v5)
        || ((v5 & 0x1000000000000) == 0) != (*((unsigned char *)result + 38) == 0))
      {
        uint64_t v6 = (unsigned __int16 *)((char *)*result - **result);
        if (*v6 >= 0x2Fu)
        {
          uint64_t v7 = v6[23];
          if (v7)
          {
            if (!*((unsigned char *)*result + v7)) {
              break;
            }
          }
        }
      }
      result += 5;
      if (result == v4) {
        return v4;
      }
    }
  }
  return result;
}

BOOL sub_69BFAC(uint64_t a1, int **a2, int **a3, char a4)
{
  unint64_t v8 = sub_2E4738(a2);
  if (v8 == sub_2E48C4(a3)) {
    return 0;
  }
  double v9 = sub_2E3ED8(*(void *)a1, (uint64_t)a2, (uint64_t)a3);
  uint64_t v10 = *(void *)a1;
  long long v31 = a2[4];
  long long v11 = *((_OWORD *)a2 + 1);
  v30[0] = *(_OWORD *)a2;
  v30[1] = v11;
  BYTE6(v31) ^= 1u;
  double v12 = sub_2E3ED8(v10, (uint64_t)a3, (uint64_t)v30);
  if (v12 < v9) {
    double v9 = v12;
  }
  if ((a4 & 1) == 0)
  {
    if ((int v13 = (unsigned __int16 *)((char *)*a2 - **a2), *v13 < 0x2Fu)
      || (uint64_t v14 = v13[23]) == 0
      || ((v15 = *((unsigned __int8 *)*a2 + v14), BOOL v16 = v15 > 0x2A, v17 = (1 << v15) & 0x50426810004, !v16)
        ? (BOOL v18 = v17 == 0)
        : (BOOL v18 = 1),
          v18 || (unint64_t v19 = sub_2E68E8(*(void *)a1, (uint64_t)a2[4]), v19 <= 0xFFFFFFFEFFFFFFFFLL) && v19))
    {
      if ((uint64_t v20 = (unsigned __int16 *)((char *)*a3 - **a3), *v20 < 0x2Fu)
        || (uint64_t v21 = v20[23]) == 0
        || ((unsigned int v22 = *((unsigned __int8 *)*a3 + v21), v16 = v22 > 0x2A, v23 = (1 << v22) & 0x50426810004, !v16)
          ? (BOOL v24 = v23 == 0)
          : (BOOL v24 = 1),
            v24 || (unint64_t v25 = sub_2E68E8(*(void *)a1, (uint64_t)a3[4]), v25 <= 0xFFFFFFFEFFFFFFFFLL) && v25))
      {
        if (fabs(sub_6A2704(*(void *)a1, a2, a3)) > *(double *)(a1 + 1032)
          && v9 > (double)*(uint64_t *)(a1 + 1016) / 100.0)
        {
          return 1;
        }
      }
    }
  }
  double v26 = sub_6D82EC(a1 + 1160, a2, a3);
  if (v9 <= (double)*(uint64_t *)(a1 + 1024) / 100.0) {
    return 0;
  }
  if (fabs(v26) >= *(double *)(a1 + 1032)) {
    return 0;
  }
  uint64_t v27 = a1 + 8;
  *(void *)&v30[0] = sub_2E4738(a2);
  if (sub_3CCE68(v27, (unsigned int **)v30)) {
    return 0;
  }
  uint64_t v29 = (unsigned int *)sub_2E48C4(a3);
  return (sub_3CCE68(v27, &v29) & 1) == 0;
}

BOOL sub_69C1F0(int **a1)
{
  uint64_t v1 = (char *)*a1;
  uint64_t v2 = (unsigned __int16 *)((char *)*a1 - **a1);
  unsigned int v3 = *v2;
  if (*((unsigned char *)a1 + 38))
  {
    if (v3 >= 0xB)
    {
      unsigned int v4 = v2[5];
      if (v4) {
        return (*(_DWORD *)&v1[v4] & 0x40) != 0;
      }
    }
  }
  else if (v3 >= 0xB)
  {
    unsigned int v6 = v2[5];
    if (v6) {
      return (*(_DWORD *)&v1[v6] & 0x80) != 0;
    }
  }
  return 0;
}

uint64_t sub_69C254(uint64_t a1, int **a2, int **a3)
{
  unint64_t v6 = (unint64_t)a2[4];
  unint64_t v7 = (unint64_t)a3[4];
  if ((v6 & 0xFFFFFFFFFFFFLL) == (v7 & 0xFFFFFFFFFFFFLL)
    && ((v6 & 0xFF000000000000) == 0x1000000000000) != (HIWORD(v7) & 1))
  {
    return 1;
  }
  double v9 = *a2;
  uint64_t v10 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v11 = *v10;
  if ((v6 & 0xFF000000000000) != 0)
  {
    if (v11 < 0xB) {
      return 0;
    }
    if (!v10[5]) {
      return 0;
    }
    int v12 = *(int *)((char *)v9 + v10[5]);
    if ((v12 & 2) == 0) {
      return 0;
    }
  }
  else
  {
    if (v11 < 0xB) {
      return 0;
    }
    if (!v10[5]) {
      return 0;
    }
    int v12 = *(int *)((char *)v9 + v10[5]);
    if ((v12 & 1) == 0) {
      return 0;
    }
  }
  int v13 = *a3;
  uint64_t v14 = (unsigned __int16 *)((char *)*a3 - **a3);
  unsigned int v15 = *v14;
  if ((v7 & 0xFF000000000000) != 0)
  {
    if (v15 < 0xB) {
      return 0;
    }
    if (!v14[5]) {
      return 0;
    }
    int v16 = *(int *)((char *)v13 + v14[5]);
    if ((v16 & 2) == 0) {
      return 0;
    }
  }
  else
  {
    if (v15 < 0xB) {
      return 0;
    }
    if (!v14[5]) {
      return 0;
    }
    int v16 = *(int *)((char *)v13 + v14[5]);
    if ((v16 & 1) == 0) {
      return 0;
    }
  }
  if ((v16 & 1) == (v16 & 2) >> 1) {
    return 0;
  }
  if ((v12 & 4) != 0) {
    goto LABEL_34;
  }
  if (v11 >= 0x2F && (uint64_t v17 = v10[23]) != 0)
  {
    if (*((unsigned char *)v9 + v17) != 32 || (v12 & 3) != 3) {
      goto LABEL_34;
    }
  }
  else if ((~v12 & 3) != 0)
  {
LABEL_34:
    LOBYTE(v19) = 1;
LABEL_35:
    if ((v12 ^ ((v12 & 2) >> 1))) {
      goto LABEL_42;
    }
    goto LABEL_36;
  }
  if (v15 < 0x2F)
  {
    LOBYTE(v19) = 0;
    if ((v12 ^ ((v12 & 2) >> 1))) {
      goto LABEL_42;
    }
    goto LABEL_36;
  }
  uint64_t v19 = v14[23];
  if (!v14[23]) {
    goto LABEL_35;
  }
  LOBYTE(v19) = *((unsigned char *)v13 + v19) != 32;
  if ((v12 ^ ((v12 & 2) >> 1))) {
    goto LABEL_42;
  }
LABEL_36:
  if (*(unsigned char *)(a1 + 433)) {
    char v20 = v19;
  }
  else {
    char v20 = 1;
  }
  if (v20) {
    return 0;
  }
LABEL_42:
  double v21 = sub_6D82EC(a1 + 1160, a2, a3);
  unsigned int v22 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v23 = *v22;
  if (!*((unsigned char *)a2 + 38))
  {
    if (v23 < 0x4B) {
      goto LABEL_49;
    }
    unsigned int v24 = v22[37];
    if (!v24) {
      goto LABEL_49;
    }
LABEL_48:
    __int16 v25 = *(_WORD *)((char *)*a2 + v24);
    goto LABEL_50;
  }
  if (v23 >= 0x49)
  {
    unsigned int v24 = v22[36];
    if (v24) {
      goto LABEL_48;
    }
  }
LABEL_49:
  __int16 v25 = -1;
LABEL_50:
  double v26 = (unsigned __int16 *)((char *)*a3 - **a3);
  unsigned int v27 = *v26;
  if (*((unsigned char *)a3 + 38))
  {
    if (v27 < 0x4B || (unsigned int v28 = v26[37]) == 0)
    {
LABEL_57:
      int v29 = 0xFFFF;
      goto LABEL_58;
    }
  }
  else
  {
    if (v27 < 0x49) {
      goto LABEL_57;
    }
    unsigned int v28 = v26[36];
    if (!v28) {
      goto LABEL_57;
    }
  }
  int v29 = *(unsigned __int16 *)((char *)*a3 + v28);
LABEL_58:
  unsigned __int16 v30 = v25 + 18000;
  unsigned __int16 v31 = v25 - 18000;
  if ((unsigned __int16)(v30 >> 5) < 0x465u) {
    unsigned __int16 v31 = v30;
  }
  int v32 = v29 - v31;
  if (v32 > 18000) {
    v32 -= 36000;
  }
  if (v32 >= -17999) {
    int v33 = v32;
  }
  else {
    int v33 = v32 + 36000;
  }
  double v34 = sub_6A2704(*(void *)a1, a2, a3);
  uint64_t v35 = (unsigned __int16 *)((char *)*a2 - **a2);
  if (*v35 >= 0xBu && (uint64_t v36 = v35[5]) != 0)
  {
    if (((v34 > 0.0) ^ (*((unsigned __int8 *)*a2 + v36 + 1) >> 7))) {
      return 0;
    }
  }
  else if (v34 > 0.0)
  {
    return 0;
  }
  double v37 = fabs(v21);
  double v38 = *(double *)(a1 + 320);
  if (v37 > v38) {
    return 1;
  }
  double v39 = fabs((double)v33 / 100.0);
  if (v39 > v38) {
    return 1;
  }
  double v40 = *(double *)(a1 + 312);
  if (v37 > v40 || v39 > v40) && (sub_2E79EC(*(void *)a1, (uint64_t)a2[4], (uint64_t)a3[4])) {
    return 1;
  }
  unint64_t v41 = sub_2E4738(a2);
  if (v41 == sub_2E48C4(a3))
  {
    uint64_t v42 = (unsigned int *)sub_2E4738(a2);
    if (sub_3CCE68(a1 + 8, &v42)) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_69C61C(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_5A7C34(a3, a4);
  LODWORD(v129) = 0;
  long long v127 = 0u;
  long long v128 = 0u;
  WORD2(v129) = -1;
  BYTE6(v129) = 0;
  LODWORD(v126) = 0;
  long long v124 = 0u;
  long long v125 = 0u;
  WORD2(v126) = -1;
  BYTE6(v126) = 0;
  LODWORD(v123) = 0;
  long long v121 = 0u;
  long long v122 = 0u;
  WORD2(v123) = -1;
  BYTE6(v123) = 0;
  LODWORD(v120) = 0;
  long long v118 = 0u;
  long long v119 = 0u;
  WORD2(v120) = -1;
  BYTE6(v120) = 0;
  LODWORD(v117) = 0;
  long long v115 = 0u;
  long long v116 = 0u;
  WORD2(v117) = -1;
  BYTE6(v117) = 0;
  BOOL v112 = 0;
  *(void *)int v113 = 0;
  uint64_t v114 = 0;
  sub_64F484((char **)&v112, (long long *)a2);
  *(_DWORD *)(a5 + 64) = 0;
  int v109 = 0;
  uint64_t v110 = 0;
  uint64_t v111 = 0;
  BOOL v106 = 0;
  uint64_t v107 = 0;
  uint64_t v108 = 0;
  long long __p = 0;
  long long v104 = 0;
  uint64_t v105 = 0;
  sub_69D680(a1, (int **)a2, (uint64_t)&v109);
  if (v109 == v110)
  {
    if (0xCCCCCCCCCCCCCCCDLL * ((a3[1] - *a3) >> 3) >= 2 && sub_6D7AFC(a1 + 1160, (int **)a2, a3, -1) != a4)
    {
      sub_69DA04((uint64_t *)a1, v10, (void *)(a1 + 472), (uint64_t)&__p);
      BOOL v18 = (char *)__p;
      if (__p == v104) {
        goto LABEL_31;
      }
      char v34 = *(v104 - 1);
      char v35 = *(v104 - 2) ^ 1;
      long long v36 = *(_OWORD *)(v104 - 40);
      long long v37 = *(_OWORD *)(v104 - 24);
      int v38 = *((_DWORD *)v104 - 2);
      WORD2(v117) = *((_WORD *)v104 - 2);
      LODWORD(v117) = v38;
      long long v115 = v36;
      long long v116 = v37;
      BYTE6(v117) = v35;
      HIBYTE(v117) = v34;
      sub_69D680(a1, (int **)&v115, (uint64_t)&v109);
      if (v109 != v110)
      {
        long long v39 = *(_OWORD *)v109;
        long long v40 = *((_OWORD *)v109 + 1);
        uint64_t v129 = *((void *)v109 + 4);
        long long v127 = v39;
        long long v128 = v40;
        long long v41 = *(_OWORD *)(v110 - 5);
        long long v42 = *(_OWORD *)(v110 - 3);
        uint64_t v126 = *(v110 - 1);
        long long v124 = v41;
        long long v125 = v42;
        sub_69DA04((uint64_t *)a1, (uint64_t)&v127, (void *)(a1 + 480), (uint64_t)&v106);
        if (v106 != v107)
        {
          long long v43 = *(_OWORD *)(a2 + 16);
          long long v121 = *(_OWORD *)a2;
          long long v122 = v43;
          uint64_t v123 = *(void *)(a2 + 32);
          long long v44 = *(_OWORD *)(v107 - 24);
          long long v45 = *(_OWORD *)(v107 - 40);
          uint64_t v120 = *((void *)v107 - 1);
          long long v118 = v45;
          long long v119 = v44;
          sub_473C00((uint64_t)&v112, *(uint64_t *)v113, (char *)__p, v104, 0xCCCCCCCCCCCCCCCDLL * ((v104 - (unsigned char *)__p) >> 3));
          int v24 = 2;
          goto LABEL_5;
        }
      }
    }
LABEL_17:
    uint64_t v31 = 0;
    goto LABEL_18;
  }
  long long v11 = *(_OWORD *)(a2 + 16);
  long long v115 = *(_OWORD *)a2;
  long long v116 = v11;
  unint64_t v117 = *(void *)(a2 + 32);
  long long v13 = *(_OWORD *)v109;
  long long v12 = *((_OWORD *)v109 + 1);
  uint64_t v129 = *((void *)v109 + 4);
  long long v127 = v13;
  long long v128 = v12;
  long long v14 = *(_OWORD *)(v110 - 3);
  long long v15 = *(_OWORD *)(v110 - 5);
  uint64_t v126 = *(v110 - 1);
  long long v124 = v15;
  long long v125 = v14;
  sub_69DA04((uint64_t *)a1, (uint64_t)&v127, (void *)(a1 + 472), (uint64_t)&v106);
  if (v106 == v107) {
    goto LABEL_17;
  }
  long long v16 = *(_OWORD *)(v107 - 40);
  long long v17 = *(_OWORD *)(v107 - 24);
  uint64_t v120 = *((void *)v107 - 1);
  long long v118 = v16;
  long long v119 = v17;
  sub_69DA04((uint64_t *)a1, (uint64_t)&v124, (void *)(a1 + 480), (uint64_t)&__p);
  BOOL v18 = (char *)__p;
  if (__p != v104)
  {
    char v19 = *(v104 - 1);
    char v20 = *(v104 - 2) ^ 1;
    long long v21 = *(_OWORD *)(v104 - 40);
    long long v22 = *(_OWORD *)(v104 - 24);
    int v23 = *((_DWORD *)v104 - 2);
    WORD2(v123) = *((_WORD *)v104 - 2);
    LODWORD(v123) = v23;
    long long v121 = v21;
    long long v122 = v22;
    BYTE6(v123) = v20;
    HIBYTE(v123) = v19;
    sub_473C00((uint64_t)&v112, *(uint64_t *)v113, (char *)v106, v107, 0xCCCCCCCCCCCCCCCDLL * ((v107 - (unsigned char *)v106) >> 3));
    int v24 = 1;
LABEL_5:
    *(_DWORD *)(a1 + 176) = v24;
    __int16 v25 = (unsigned __int16 *)(v121 - *(int *)v121);
    if (*v25 >= 0x2Fu && (uint64_t v26 = v25[23]) != 0 && !*(unsigned char *)(v121 + v26)
      || (unsigned int v27 = (unsigned __int16 *)(v118 - *(int *)v118), *v27 >= 0x2Fu)
      && (uint64_t v28 = v27[23]) != 0
      && !*(unsigned char *)(v118 + v28)
      || (double v29 = sub_6D82EC(a1 + 1160, (int **)v112, (int **)(*(void *)v113 - 40)),
          double v30 = fabs(v29),
          v30 < *(double *)(a1 + 288))
      || v30 > *(double *)(a1 + 304))
    {
      uint64_t v31 = 0;
      *(void *)(a5 + 8) = *(void *)a5;
      *(void *)(a5 + 48) = *(void *)(a5 + 40);
      *(void *)&long long v32 = -1;
      *((void *)&v32 + 1) = -1;
      *(_OWORD *)(a5 + 72) = v32;
      *(_OWORD *)(a5 + 88) = v32;
      *(_OWORD *)(a5 + 104) = v32;
      *(void *)(a5 + 120) = -1;
      *(void *)(a5 + 136) = -1;
      *(_DWORD *)(a5 + 24) = 0;
      *(_DWORD *)(a5 + 64) = 0;
      *(_DWORD *)(a5 + 128) = 0;
      *(_DWORD *)(a5 + 144) = 0;
      *(_OWORD *)(a5 + 152) = xmmword_20E2060;
      *(_WORD *)(a5 + 168) = 0;
      *(unsigned char *)(a5 + 170) = 0;
      *(void *)(a5 + 176) = 0;
      *(unsigned char *)(a5 + 188) = 0;
      *(unsigned char *)(a5 + 190) = 0;
      BOOL v18 = (char *)__p;
      if (!__p) {
        goto LABEL_20;
      }
LABEL_19:
      long long v104 = v18;
      operator delete(v18);
      goto LABEL_20;
    }
    if (v29 <= 0.0) {
      int v46 = 1;
    }
    else {
      int v46 = 2;
    }
    double v100 = 0;
    uint64_t v101 = 0;
    uint64_t v102 = 0;
    sub_69DD54((uint64_t *)a1, &v121, (uint64_t)&v118, (uint64_t *)(a1 + 488), &v100);
    unint64_t v47 = v100;
    int16x4_t v87 = v101;
    if (v100 == v101)
    {
      sub_693CB0(a5);
      uint64_t v31 = 0;
      goto LABEL_91;
    }
    uint64_t v86 = a2;
    unint64_t v88 = (const void **)(a1 + 40);
    *(void *)(a1 + 48) = *(void *)(a1 + 40);
    while (1)
    {
      sub_2954EC(*(void *)a1, v47[4], (uint64_t)&v96);
      uint64_t v48 = *(void *)(a1 + 48);
      sub_2E51EC((uint64_t)&v96, (uint64_t)&v92);
      if (v99)
      {
        if (v97 == v98) {
          goto LABEL_44;
        }
        uint64_t v49 = v96;
        long long v90 = 0u;
        long long v91 = 0u;
        char v50 = 1;
        int v51 = -1;
        LODWORD(v52) = -1;
      }
      else
      {
        if (v97 == v98)
        {
LABEL_44:
          int v51 = 0;
          char v50 = 0;
          LODWORD(v52) = 0;
          uint64_t v49 = 0;
          long long v90 = 0u;
          long long v91 = 0u;
          memset(v89, 0, 7);
          goto LABEL_45;
        }
        unint64_t v53 = *((void *)v98 - 1);
        long long v54 = sub_2964C4(v96, v53, 1);
        char v50 = 0;
        double v55 = &v54[*(unsigned __int16 *)&v54[-*(int *)v54 + 4]];
        uint64_t v56 = (uint64_t)&v55[4 * HIDWORD(v53) + *(unsigned int *)v55];
        double v57 = (int *)(v56 + 4 + *(unsigned int *)(v56 + 4));
        uint64_t v49 = v96;
        int16x4_t v58 = (unsigned int *)((char *)v57 + *(unsigned __int16 *)((char *)v57 - *v57 + 6));
        int v51 = *(unsigned int *)((char *)v58 + *v58);
        unint64_t v52 = (unint64_t)(v98 - (unsigned char *)v97) >> 3;
        long long v90 = 0u;
        long long v91 = 0u;
      }
LABEL_45:
      v138[0] = v92;
      v138[1] = v93;
      v138[2] = v94;
      v138[3] = v95;
      long long v131 = v90;
      long long v132 = v91;
      long long v139 = v92;
      long long v140 = v93;
      uint64_t v130 = v49;
      uint64_t v133 = 0;
      int v134 = v52;
      int v135 = v51;
      char v136 = v50;
      *(_DWORD *)&v137[3] = *(_DWORD *)((char *)v89 + 3);
      *(_DWORD *)long long v137 = v89[0];
      long long v141 = v94;
      long long v142 = v95;
      if ((void)v95 == __PAIR64__(v51, v52))
      {
        uint64_t v59 = 0;
      }
      else
      {
        uint64_t v59 = 0;
        do
        {
          if (BYTE8(v142)) {
            sub_2E7608((uint64_t)&v139);
          }
          else {
            sub_2E74E8((uint64_t)&v139);
          }
          ++v59;
        }
        while (v142 != v52 || DWORD1(v142) != v51);
      }
      sub_6CFD9C(v88, v48, v138, (long long *)&v130, v59);
      if (v97)
      {
        unint64_t v98 = (char *)v97;
        operator delete(v97);
      }
      v47 += 5;
      if (v47 == v87)
      {
        *(void *)&v138[0] = sub_69A4A4(*(void *)a1, (uint64_t)&v115);
        DWORD2(v138[0]) = v61;
        sub_3B8BC4((unsigned int **)v88, (unsigned int *)v138, 0, 0, (uint64_t)&v139, v62, v63, v64, v65);
        uint64_t v66 = v86;
        uint64_t v130 = *((void *)&v139 + 1);
        LODWORD(v131) = v140;
        *(_DWORD *)(a5 + 24) = v46;
        uint64_t v67 = v112;
        uint64_t v68 = *(void *)v113;
        if (v112 != *(void **)v113)
        {
          __n128 v69 = *(_DWORD **)(a5 + 8);
          do
          {
            uint64_t v71 = v67[4];
            unint64_t v72 = *(void *)(a5 + 16);
            if ((unint64_t)v69 < v72)
            {
              *(void *)__n128 v69 = v71;
              uint64_t v70 = v69 + 2;
            }
            else
            {
              int v73 = *(_DWORD **)a5;
              uint64_t v74 = ((uint64_t)v69 - *(void *)a5) >> 3;
              unint64_t v75 = v74 + 1;
              if ((unint64_t)(v74 + 1) >> 61) {
                sub_2E00();
              }
              uint64_t v76 = v72 - (void)v73;
              if (v76 >> 2 > v75) {
                unint64_t v75 = v76 >> 2;
              }
              if ((unint64_t)v76 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v77 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v77 = v75;
              }
              if (v77)
              {
                if (v77 >> 61) {
                  sub_188D718();
                }
                __int16 v78 = (char *)operator new(8 * v77);
                uint64_t v79 = (uint64_t)&v78[8 * v74];
                *(void *)uint64_t v79 = v71;
                uint64_t v70 = (void *)(v79 + 8);
                if (v69 != v73)
                {
                  do
                  {
LABEL_73:
                    int v81 = *(v69 - 2);
                    v69 -= 2;
                    int v82 = *(_DWORD *)((char *)v69 + 3);
                    *(_DWORD *)(v79 - 8) = v81;
                    v79 -= 8;
                    *(_DWORD *)(v79 + 3) = v82;
                  }
                  while (v69 != v73);
                  __n128 v69 = *(_DWORD **)a5;
                  *(void *)a5 = v79;
                  *(void *)(a5 + 8) = v70;
                  *(void *)(a5 + 16) = &v78[8 * v77];
                  uint64_t v66 = v86;
                  if (!v69) {
                    goto LABEL_60;
                  }
LABEL_77:
                  operator delete(v69);
                  goto LABEL_60;
                }
              }
              else
              {
                __int16 v78 = 0;
                uint64_t v79 = 8 * v74;
                long long v80 = (void *)(8 * v74);
                *long long v80 = v71;
                uint64_t v70 = v80 + 1;
                if (v69 != v73) {
                  goto LABEL_73;
                }
              }
              *(void *)a5 = v79;
              *(void *)(a5 + 8) = v70;
              *(void *)(a5 + 16) = &v78[8 * v77];
              uint64_t v66 = v86;
              if (v69) {
                goto LABEL_77;
              }
            }
LABEL_60:
            *(void *)(a5 + 8) = v70;
            v67 += 5;
            __n128 v69 = v70;
          }
          while (v67 != (void *)v68);
        }
        uint64_t v83 = sub_69D0E4((uint64_t *)a1, &v112, (unsigned int *)&v130);
        BOOL v85 = v83 == -1 || v84 == 0x7FFFFFFFFFFFFFFFLL;
        uint64_t v31 = !v85;
        if (v85)
        {
          sub_693CB0(a5);
        }
        else
        {
          if (__PAIR64__(*(unsigned __int16 *)(v66 + 36), *(_DWORD *)(v66 + 32)) == __PAIR64__(WORD2(v117), v117)
            && (HIWORD(v117) & 1) != (*(unsigned char *)(v66 + 38) == 0))
          {
            *(void *)(a5 + 152) = v83;
            *(void *)(a5 + 160) = v84;
          }
          *(void *)(a5 + 176) = 0;
        }
LABEL_91:
        if (v100)
        {
          uint64_t v101 = v100;
          operator delete(v100);
          BOOL v18 = (char *)__p;
          if (__p) {
            goto LABEL_19;
          }
          goto LABEL_20;
        }
LABEL_18:
        BOOL v18 = (char *)__p;
        if (!__p) {
          goto LABEL_20;
        }
        goto LABEL_19;
      }
    }
  }
LABEL_31:
  uint64_t v31 = 0;
  if (v18) {
    goto LABEL_19;
  }
LABEL_20:
  if (v106)
  {
    uint64_t v107 = (char *)v106;
    operator delete(v106);
  }
  if (v109)
  {
    uint64_t v110 = v109;
    operator delete(v109);
  }
  if (v112)
  {
    *(void *)int v113 = v112;
    operator delete(v112);
  }
  return v31;
}

void sub_69CECC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,uint64_t a36,void *__p,uint64_t a38,uint64_t a39,void *a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,uint64_t a45,void *a46,uint64_t a47)
{
  if (__p)
  {
    operator delete(__p);
    uint64_t v48 = a40;
    if (!a40)
    {
LABEL_3:
      uint64_t v49 = a43;
      if (!a43) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v48 = a40;
    if (!a40) {
      goto LABEL_3;
    }
  }
  operator delete(v48);
  uint64_t v49 = a43;
  if (!a43)
  {
LABEL_4:
    char v50 = a46;
    if (!a46) {
      goto LABEL_5;
    }
    goto LABEL_9;
  }
LABEL_8:
  operator delete(v49);
  char v50 = a46;
  if (!a46) {
LABEL_5:
  }
    _Unwind_Resume(exception_object);
LABEL_9:
  operator delete(v50);
  _Unwind_Resume(exception_object);
}

uint64_t sub_69CFC4(uint64_t *a1, double a2)
{
  double v2 = (double)*a1 * a2;
  if (v2 >= 0.0)
  {
    if (v2 < 4.50359963e15)
    {
      uint64_t v3 = (uint64_t)(v2 + v2) + 1;
      return (uint64_t)(double)(v3 >> 1);
    }
  }
  else if (v2 > -4.50359963e15)
  {
    uint64_t v3 = (uint64_t)(v2 + v2);
    if (v3 >= 1) {
      --v3;
    }
    return (uint64_t)(double)(v3 >> 1);
  }
  return (uint64_t)v2;
}

void sub_69D028(uint64_t a1, unint64_t a2)
{
  double v2 = *(void **)a1;
  if (a2 > (uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3)
  {
    if (a2 >> 61) {
      sub_2E00();
    }
    uint64_t v4 = *(void *)(a1 + 8);
    uint64_t v5 = 8 * a2;
    unint64_t v6 = (char *)operator new(8 * a2);
    unint64_t v7 = &v6[v4 - (void)v2];
    unint64_t v8 = v7;
    if ((void *)v4 != v2)
    {
      unint64_t v8 = &v6[v4 - (void)v2];
      do
      {
        int v9 = *(_DWORD *)(v4 - 8);
        v4 -= 8;
        int v10 = *(_DWORD *)(v4 + 3);
        *((_DWORD *)v8 - 2) = v9;
        v8 -= 8;
        *(_DWORD *)(v8 + 3) = v10;
      }
      while ((void *)v4 != v2);
    }
    *(void *)a1 = v8;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = &v6[v5];
    if (v2)
    {
      operator delete(v2);
    }
  }
}

uint64_t sub_69D0E4(uint64_t *a1, void *a2, unsigned int *a3)
{
  unint64_t v4 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a2[1] - *a2) >> 3) - 1;
  if (v4 <= 1) {
    unint64_t v5 = 1;
  }
  else {
    unint64_t v5 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a2[1] - *a2) >> 3) - 1;
  }
  if (v4 >= 2)
  {
    uint64_t v6 = 0;
    uint64_t v7 = -1;
    unint64_t v14 = 1;
    double v8 = 1.79769313e308;
    while (1)
    {
      uint64_t v42 = -1;
      int v43 = 0x7FFFFFFF;
      uint64_t v17 = sub_5A7C34(a2, v14);
      sub_2954EC(*a1, *(void *)(v17 + 32), (uint64_t)&v36);
      sub_2E4B5C((uint64_t)&v36, &__p);
      if (v37)
      {
        int v38 = (uint64_t *)v37;
        operator delete(v37);
      }
      sub_3B8BC4((unsigned int **)&__p, a3, 0, 0, (uint64_t)&v36, v18, v19, v20, v21);
      *(double *)&__int16 v25 = v36;
      uint64_t v42 = (uint64_t)v37;
      int v43 = (int)v38;
      if (v36 < v8)
      {
        uint64_t v46 = 0x7FEFFFFFFFFFFFFFLL;
        double v26 = NAN;
        uint64_t v44 = -1;
        int v45 = 0x7FFFFFFF;
        double v36 = COERCE_DOUBLE(&v42);
        long long v37 = &v46;
        int v38 = &v44;
        unsigned int v27 = __p;
        uint64_t v28 = v41;
        if (__p != v41 && (char *)__p + 12 != v41)
        {
          do
          {
            sub_457FB8((uint64_t)&v36, v27, v27 + 3, v26, v22, v23, v24);
            double v29 = v27 + 6;
            v27 += 3;
          }
          while (v29 != v28);
          unsigned int v27 = __p;
          uint64_t v28 = v41;
        }
        uint64_t v48 = 0;
        uint64_t v49 = 0;
        uint64_t v47 = 0x7FEFFFFFFFFFFFFFLL;
        double v36 = COERCE_DOUBLE(&v44);
        long long v37 = &v47;
        int v38 = &v48;
        long long v39 = &v49;
        if (v27 != v28 && v27 + 3 != v28)
        {
          do
          {
            double v26 = sub_4582C8((double **)&v36, (uint64_t)v27, v27 + 3, v26);
            double v30 = v27 + 6;
            v27 += 3;
          }
          while (v30 != v28);
        }
        sub_5A7C34(a2, v14);
        uint64_t v7 = v14;
        double v8 = *(double *)&v25;
      }
      uint64_t v31 = (void *)sub_5A7C34(a2, v14);
      long long v32 = (unsigned __int16 *)(*v31 - *(int *)*v31);
      if (*v32 >= 9u)
      {
        uint64_t v33 = v32[4];
        if (v33) {
          break;
        }
      }
      uint64_t v15 = 0;
      long long v16 = (char *)__p;
      if (__p) {
        goto LABEL_13;
      }
LABEL_14:
      v6 += v15;
      if (++v14 == v5) {
        goto LABEL_6;
      }
    }
    uint64_t v15 = *(unsigned int *)(*v31 + v33);
    long long v16 = (char *)__p;
    if (!__p) {
      goto LABEL_14;
    }
LABEL_13:
    long long v41 = v16;
    operator delete(v16);
    goto LABEL_14;
  }
  uint64_t v6 = 0;
  uint64_t v7 = -1;
  double v8 = 1.79769313e308;
LABEL_6:
  double v9 = v8 * 100.0;
  if (v8 * 100.0 >= 0.0)
  {
    double v10 = v8 * 100.0;
    if (v9 >= 4.50359963e15) {
      goto LABEL_33;
    }
    uint64_t v11 = (uint64_t)(v9 + v9) + 1;
  }
  else
  {
    double v10 = v8 * 100.0;
    if (v9 <= -4.50359963e15) {
      goto LABEL_33;
    }
    uint64_t v11 = (uint64_t)(v9 + v9);
    if (v11 >= 1) {
      --v11;
    }
  }
  double v10 = (double)(v11 >> 1);
LABEL_33:
  if (v10 < 9.22337204e18)
  {
    if (v9 >= 0.0)
    {
      if (v9 >= 4.50359963e15) {
        goto LABEL_45;
      }
      uint64_t v34 = (uint64_t)(v9 + v9) + 1;
    }
    else
    {
      if (v9 <= -4.50359963e15) {
        goto LABEL_45;
      }
      uint64_t v34 = (uint64_t)(v9 + v9);
      if (v34 >= 1) {
        --v34;
      }
    }
    double v9 = (double)(v34 >> 1);
LABEL_45:
    if ((uint64_t)v9 <= a1[63]) {
      return v7;
    }
    goto LABEL_46;
  }
  if (a1[63] == 0x7FFFFFFFFFFFFFFFLL || a1[63] == 0x7FFFFFFFFFFFFFFELL) {
    return v7;
  }
LABEL_46:
  if (v6 > a1[64]) {
    return -1;
  }
  return v7;
}

void sub_69D538(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

char **sub_69D578(uint64_t a1, long long *a2, long long *a3, uint64_t a4, char **a5)
{
  long long v8 = *a2;
  long long v9 = a2[1];
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(_OWORD *)a1 = v8;
  *(_OWORD *)(a1 + 16) = v9;
  long long v10 = *a3;
  long long v11 = a3[1];
  *(void *)(a1 + 72) = *((void *)a3 + 4);
  *(_OWORD *)(a1 + 56) = v11;
  *(_OWORD *)(a1 + 40) = v10;
  uint64_t result = (char **)(a1 + 80);
  if (result != a5) {
    uint64_t result = (char **)sub_4721B0(result, *a5, a5[1], 0xCCCCCCCCCCCCCCCDLL * ((a5[1] - *a5) >> 3));
  }
  *(void *)(a1 + 104) = -1;
  long long v13 = a5[1];
  if (*a5 != v13)
  {
    unint64_t v14 = *(void *)(a4 + 32);
    uint64_t v15 = v14 & 0xFFFFFFFFFFFFLL;
    uint64_t v16 = HIWORD(v14) & 1;
    uint64_t v17 = *a5;
    while (1)
    {
      uint64_t v18 = *((void *)v17 + 4);
      if (v18 & 0xFFFFFFFFFFFFLL) == v15 && ((v16 ^ ((v18 & 0xFF000000000000) == 0))) {
        break;
      }
      v17 += 40;
      if (v17 == v13) {
        goto LABEL_10;
      }
    }
    if (v17 != v13) {
      *(void *)(a1 + 104) = 0xCCCCCCCCCCCCCCCDLL * ((v17 - *a5) >> 3);
    }
  }
LABEL_10:
  *(_DWORD *)(a1 + 112) = 3;
  return result;
}

void sub_69D680(uint64_t a1, int **a2, uint64_t a3)
{
  *(void *)(a3 + 8) = *(void *)a3;
  uint64_t v6 = (unsigned __int16 *)((char *)*a2 - **a2);
  if (*v6 < 0xBu || (uint64_t v7 = v6[5]) == 0 || (*((unsigned char *)*a2 + v7) & 4) == 0)
  {
    long long __p = 0;
    long long v39 = 0;
    uint64_t v40 = 0;
    sub_2E44A4(*(void *)a1, (uint64_t)a2, &__p);
    long long v8 = sub_6CDA8C((int **)__p, v39);
    long long v9 = (long long *)__p;
    if (v39 != v8) {
      long long v39 = v8;
    }
    if ((char *)v8 - (unsigned char *)__p != 80) {
      goto LABEL_66;
    }
    uint64_t v10 = *(void *)__p;
    long long v11 = (unsigned __int16 *)(*(void *)__p - **(int **)__p);
    unsigned int v12 = *v11;
    if (v12 < 0xB) {
      goto LABEL_66;
    }
    if (!v11[5]) {
      goto LABEL_66;
    }
    if ((*(_DWORD *)(v10 + v11[5]) & 1) == (*(_DWORD *)(v10 + v11[5]) & 2u) >> 1) {
      goto LABEL_66;
    }
    long long v13 = (long long *)(v8 - 5);
    unint64_t v14 = *(v8 - 5);
    uint64_t v15 = (unsigned __int16 *)((char *)v14 - *v14);
    unsigned int v16 = *v15;
    if (v16 < 0xB) {
      goto LABEL_66;
    }
    if (!v15[5]) {
      goto LABEL_66;
    }
    int v17 = *(int *)((char *)v14 + v15[5]);
    if (((v17 ^ ((v17 & 2) >> 1)) & 1) == 0) {
      goto LABEL_66;
    }
    uint64_t v18 = (char *)*a2;
    double v19 = (unsigned __int16 *)((char *)*a2 - **a2);
    unsigned int v20 = *v19;
    if (*((unsigned char *)a2 + 38))
    {
      if (v20 < 0x49 || (unsigned int v21 = v19[36]) == 0)
      {
LABEL_20:
        __int16 v22 = -1;
LABEL_21:
        if (*((unsigned char *)__p + 38))
        {
          if (v12 < 0x4B || (unsigned int v23 = v11[37]) == 0)
          {
LABEL_28:
            int v24 = 0xFFFF;
LABEL_29:
            unsigned __int16 v25 = v22 + 18000;
            unsigned __int16 v26 = v22 - 18000;
            if ((unsigned __int16)(v25 >> 5) >= 0x465u) {
              unsigned __int16 v25 = v26;
            }
            int v27 = v24 - v25;
            if (v27 > 18000) {
              v27 -= 36000;
            }
            if (v27 < -17999) {
              v27 += 36000;
            }
            double v28 = (double)v27 / 100.0;
            double v29 = fabs(v28);
            LOWORD(v28) = *(_WORD *)(a1 + 496);
            double v30 = (double)vmovl_s16(*(int16x4_t *)&v28).i32[0];
            if (v29 > v30) {
              goto LABEL_66;
            }
            if (*((unsigned char *)a2 + 38))
            {
              if (v20 < 0x49 || (unsigned int v31 = v19[36]) == 0)
              {
LABEL_43:
                __int16 v32 = -1;
LABEL_44:
                if (*((unsigned char *)v8 - 2))
                {
                  if (v16 < 0x4B || (unsigned int v33 = v15[37]) == 0)
                  {
LABEL_51:
                    int v34 = 0xFFFF;
LABEL_52:
                    unsigned __int16 v35 = v32 + 18000;
                    unsigned __int16 v36 = v32 - 18000;
                    if ((unsigned __int16)(v35 >> 5) >= 0x465u) {
                      unsigned __int16 v35 = v36;
                    }
                    int v37 = v34 - v35;
                    if (v37 > 18000) {
                      v37 -= 36000;
                    }
                    if (v37 < -17999) {
                      v37 += 36000;
                    }
                    if (fabs((double)v37 / 100.0) > v30) {
                      goto LABEL_66;
                    }
                    if (sub_6561B0((int **)__p) && sub_699454(v8 - 5))
                    {
                      sub_64F484((char **)a3, v9);
                    }
                    else
                    {
                      if (!sub_699454((int **)v9) || !sub_6561B0(v8 - 5)) {
                        goto LABEL_66;
                      }
                      sub_64F484((char **)a3, (long long *)(v8 - 5));
                      long long v13 = v9;
                    }
                    sub_64F484((char **)a3, v13);
LABEL_66:
                    if (__p)
                    {
                      long long v39 = (int **)__p;
                      operator delete(__p);
                    }
                    return;
                  }
                }
                else
                {
                  if (v16 < 0x49) {
                    goto LABEL_51;
                  }
                  unsigned int v33 = v15[36];
                  if (!v33) {
                    goto LABEL_51;
                  }
                }
                int v34 = *(unsigned __int16 *)((char *)v14 + v33);
                goto LABEL_52;
              }
            }
            else
            {
              if (v20 < 0x4B) {
                goto LABEL_43;
              }
              unsigned int v31 = v19[37];
              if (!v31) {
                goto LABEL_43;
              }
            }
            __int16 v32 = *(_WORD *)&v18[v31];
            goto LABEL_44;
          }
        }
        else
        {
          if (v12 < 0x49) {
            goto LABEL_28;
          }
          unsigned int v23 = v11[36];
          if (!v23) {
            goto LABEL_28;
          }
        }
        int v24 = *(unsigned __int16 *)(v10 + v23);
        goto LABEL_29;
      }
    }
    else
    {
      if (v20 < 0x4B) {
        goto LABEL_20;
      }
      unsigned int v21 = v19[37];
      if (!v19[37]) {
        goto LABEL_20;
      }
    }
    __int16 v22 = *(_WORD *)&v18[v21];
    goto LABEL_21;
  }
}

void sub_69D9E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_69DA04(uint64_t *a1, uint64_t a2, void *a3, uint64_t a4)
{
  *(void *)(a4 + 8) = *(void *)a4;
  sub_64F484((char **)a4, (long long *)a2);
  long long v8 = 0;
  uint64_t v9 = 0;
  long long v10 = *(_OWORD *)(a2 + 16);
  long long v41 = *(_OWORD *)a2;
  long long v42 = v10;
  int v43 = *(int **)(a2 + 32);
  int v38 = 0;
  long long v39 = 0;
  uint64_t v40 = 0;
  while (1)
  {
    long long v13 = (unsigned __int16 *)(v41 - *(int *)v41);
    unsigned int v14 = *v13;
    if (v14 < 9)
    {
      uint64_t v15 = 0;
    }
    else
    {
      uint64_t v15 = v13[4];
      if (v13[4]) {
        uint64_t v15 = *(unsigned int *)(v41 + v15);
      }
    }
    v9 += v15;
    if (v9 > *a3) {
      break;
    }
    if (v14 < 0x2F)
    {
      if (v14 < 0xB) {
        break;
      }
    }
    else if (v13[23] && *(unsigned char *)(v41 + v13[23]) == 23)
    {
      goto LABEL_21;
    }
    if (!v13[5] || (*(unsigned char *)(v41 + v13[5]) & 4) == 0)
    {
      if (v14 < 0x2F) {
        break;
      }
      uint64_t v16 = v13[23];
      if (!v16) {
        break;
      }
      unsigned int v17 = *(unsigned __int8 *)(v41 + v16);
      BOOL v18 = v17 > 0x2A;
      uint64_t v19 = (1 << v17) & 0x50426810004;
      if (v18 || v19 == 0) {
        break;
      }
    }
LABEL_21:
    sub_2E44A4(*a1, (uint64_t)&v41, &v38);
    sub_6D7A20((uint64_t)(a1 + 145), (uint64_t)&v41, (uint64_t *)&v38);
    unsigned int v21 = sub_6CDA8C(v38, v39);
    long long v8 = v38;
    if (v39 != v21) {
      long long v39 = v21;
    }
    if (v38 == v21)
    {
      long long v8 = v21;
      break;
    }
    long long v22 = *(_OWORD *)v38;
    long long v23 = *((_OWORD *)v38 + 1);
    int v43 = v38[4];
    long long v41 = v22;
    long long v42 = v23;
    unsigned __int16 v25 = *(char **)(a4 + 8);
    unint64_t v24 = *(void *)(a4 + 16);
    if ((unint64_t)v25 < v24)
    {
      long long v11 = *(_OWORD *)v38;
      long long v12 = *((_OWORD *)v38 + 1);
      *((void *)v25 + 4) = v38[4];
      *(_OWORD *)unsigned __int16 v25 = v11;
      *((_OWORD *)v25 + 1) = v12;
      *(void *)(a4 + 8) = v25 + 40;
      if (0xCCCCCCCCCCCCCCCDLL * (v21 - v8) >= 2) {
        goto LABEL_44;
      }
    }
    else
    {
      unsigned __int16 v26 = *(char **)a4;
      unint64_t v27 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)&v25[-*(void *)a4] >> 3);
      unint64_t v28 = v27 + 1;
      if (v27 + 1 > 0x666666666666666) {
        sub_2E00();
      }
      unint64_t v29 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v24 - (void)v26) >> 3);
      if (2 * v29 > v28) {
        unint64_t v28 = 2 * v29;
      }
      if (v29 >= 0x333333333333333) {
        unint64_t v30 = 0x666666666666666;
      }
      else {
        unint64_t v30 = v28;
      }
      if (v30)
      {
        if (v30 > 0x666666666666666) {
          sub_188D718();
        }
        unsigned int v31 = (char *)operator new(40 * v30);
      }
      else
      {
        unsigned int v31 = 0;
      }
      __int16 v32 = &v31[40 * v27];
      long long v33 = v42;
      *(_OWORD *)__int16 v32 = v41;
      *((_OWORD *)v32 + 1) = v33;
      *((void *)v32 + 4) = v43;
      int v34 = v32;
      if (v25 != v26)
      {
        do
        {
          long long v35 = *(_OWORD *)(v25 - 40);
          long long v36 = *(_OWORD *)(v25 - 24);
          *((void *)v34 - 1) = *((void *)v25 - 1);
          *(_OWORD *)(v34 - 24) = v36;
          *(_OWORD *)(v34 - 40) = v35;
          v34 -= 40;
          v25 -= 40;
        }
        while (v25 != v26);
        unsigned __int16 v25 = *(char **)a4;
      }
      int v37 = v32 + 40;
      *(void *)a4 = v34;
      *(void *)(a4 + 8) = v32 + 40;
      *(void *)(a4 + 16) = &v31[40 * v30];
      if (v25)
      {
        operator delete(v25);
        long long v8 = v38;
        unsigned int v21 = v39;
      }
      *(void *)(a4 + 8) = v37;
      if (0xCCCCCCCCCCCCCCCDLL * (v21 - v8) >= 2) {
        goto LABEL_44;
      }
    }
  }
  *(void *)(a4 + 8) = *(void *)a4;
LABEL_44:
  if (v8)
  {
    long long v39 = v8;
    operator delete(v8);
  }
}

void sub_69DD30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_69DD54(uint64_t *a1, long long *a2, uint64_t a3, uint64_t *a4, void *a5)
{
  uint64_t v6 = (char *)*a5;
  a5[1] = *a5;
  long long __p = 0;
  int v45 = 0;
  uint64_t v46 = 0;
  long long v7 = a2[1];
  long long v41 = *a2;
  long long v42 = v7;
  uint64_t v43 = *((void *)a2 + 4);
  if (*a4 >= 1)
  {
    uint64_t v10 = 0;
    uint64_t v11 = (uint64_t)(a1 + 145);
    do
    {
      uint64_t v15 = (unsigned __int16 *)(v41 - *(int *)v41);
      if (*v15 >= 0x2Fu)
      {
        uint64_t v16 = v15[23];
        if (v16)
        {
          unsigned int v17 = *(unsigned __int8 *)(v41 + v16);
          BOOL v18 = v17 > 0x36;
          uint64_t v19 = (1 << v17) & 0x44000000000008;
          if (!v18 && v19 != 0) {
            break;
          }
        }
      }
      sub_2E44A4(*a1, (uint64_t)&v41, &__p);
      sub_6D7A20(v11, (uint64_t)&v41, (uint64_t *)&__p);
      if (__p == v45) {
        break;
      }
      long long v22 = *(_OWORD *)__p;
      long long v21 = *((_OWORD *)__p + 1);
      uint64_t v43 = *((void *)__p + 4);
      long long v41 = v22;
      long long v42 = v21;
      long long v23 = (unsigned __int16 *)(v22 - *(int *)v22);
      if (*v23 < 9u)
      {
        uint64_t v25 = 0;
      }
      else
      {
        uint64_t v24 = v23[4];
        if (v24) {
          uint64_t v25 = *(unsigned int *)(v22 + v24);
        }
        else {
          uint64_t v25 = 0;
        }
      }
      unint64_t v26 = *(void *)(a3 + 32);
      if ((v43 & 0xFFFFFFFFFFFFLL) == (v26 & 0xFFFFFFFFFFFFLL)
        && ((v43 & 0xFF000000000000) == 0) != (HIWORD(v26) & 1))
      {
        goto LABEL_38;
      }
      unint64_t v28 = (char *)a5[1];
      unint64_t v27 = a5[2];
      if ((unint64_t)v28 < v27)
      {
        long long v12 = *(_OWORD *)__p;
        long long v13 = *((_OWORD *)__p + 1);
        *((void *)v28 + 4) = *((void *)__p + 4);
        *(_OWORD *)unint64_t v28 = v12;
        *((_OWORD *)v28 + 1) = v13;
        unsigned int v14 = v28 + 40;
      }
      else
      {
        unint64_t v29 = (char *)*a5;
        unint64_t v30 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)&v28[-*a5] >> 3);
        unint64_t v31 = v30 + 1;
        if (v30 + 1 > 0x666666666666666) {
          sub_2E00();
        }
        unint64_t v32 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v27 - (void)v29) >> 3);
        if (2 * v32 > v31) {
          unint64_t v31 = 2 * v32;
        }
        unint64_t v33 = v32 >= 0x333333333333333 ? 0x666666666666666 : v31;
        if (v33)
        {
          if (v33 > 0x666666666666666) {
            sub_188D718();
          }
          int v34 = (char *)operator new(40 * v33);
        }
        else
        {
          int v34 = 0;
        }
        long long v35 = &v34[40 * v30];
        long long v36 = v42;
        *(_OWORD *)long long v35 = v41;
        *((_OWORD *)v35 + 1) = v36;
        *((void *)v35 + 4) = v43;
        int v37 = v35;
        if (v28 != v29)
        {
          do
          {
            long long v38 = *(_OWORD *)(v28 - 40);
            long long v39 = *(_OWORD *)(v28 - 24);
            *((void *)v37 - 1) = *((void *)v28 - 1);
            *(_OWORD *)(v37 - 24) = v39;
            *(_OWORD *)(v37 - 40) = v38;
            v37 -= 40;
            v28 -= 40;
          }
          while (v28 != v29);
          unint64_t v28 = (char *)*a5;
        }
        unsigned int v14 = v35 + 40;
        *a5 = v37;
        a5[1] = v35 + 40;
        a5[2] = &v34[40 * v33];
        if (v28) {
          operator delete(v28);
        }
      }
      v10 += v25;
      a5[1] = v14;
    }
    while (v10 < *a4);
    uint64_t v6 = (char *)*a5;
  }
  a5[1] = v6;
LABEL_38:
  if (__p)
  {
    int v45 = __p;
    operator delete(__p);
  }
}

void sub_69E020(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_69E040(uint64_t *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (void *)sub_46C8EC(a2, a3);
  unint64_t v7 = a3 + 1;
  long long v8 = (void *)sub_46C8EC(a2, v7);
  uint64_t v9 = (unsigned __int16 *)(*v6 - *(int *)*v6);
  if (*v9 >= 0x2Fu)
  {
    uint64_t v10 = v9[23];
    if (v10)
    {
      unsigned int v11 = *(unsigned __int8 *)(*v6 + v10) - 2;
      if (v11 < 0x29 && ((0x14109A04001uLL >> v11) & 1) != 0) {
        goto LABEL_16;
      }
    }
  }
  if ((long long v12 = (unsigned __int16 *)(*v8 - *(int *)*v8), *v12 < 0x2Fu)
    || (uint64_t v13 = v12[23]) == 0
    || ((v14 = *(unsigned __int8 *)(*v8 + v13), v15 = v14 > 0x2A, uint64_t v16 = (1 << v14) & 0x50426810004, !v15)
      ? (BOOL v17 = v16 == 0)
      : (BOOL v17 = 1),
        v17))
  {
LABEL_16:
    char v20 = 0;
  }
  else
  {
    long long __p = 0;
    uint64_t v46 = 0;
    uint64_t v47 = 0;
    unint64_t v18 = sub_46C760(a2);
    if (v7 <= v18) {
      unint64_t v19 = v18;
    }
    else {
      unint64_t v19 = v7;
    }
    unint64_t v40 = v19;
    if (v7 >= v18)
    {
LABEL_38:
      char v20 = 0;
    }
    else
    {
      char v20 = 1;
      while (1)
      {
        uint64_t v22 = sub_46C8EC(a2, v7);
        uint64_t v23 = *a1;
        uint64_t v24 = *(void *)(v22 + 32);
        uint64_t v25 = (int *)sub_2D5D58(*a1, v24 & 0xFFFFFFFFFFFFLL);
        if (*(unsigned char *)(v23 + 7772))
        {
          unint64_t v26 = sub_2DB8E0(v23 + 3896, v24, 0);
          unint64_t v27 = &v26[-*(int *)v26];
          if (*(unsigned __int16 *)v27 < 5u)
          {
            uint64_t v28 = 0;
          }
          else
          {
            uint64_t v28 = *((unsigned __int16 *)v27 + 2);
            if (v28) {
              v28 += (uint64_t)&v26[*(unsigned int *)&v26[v28]];
            }
          }
          unint64_t v29 = (int *)(v28 + 4 * WORD2(v24) + 4 + *(unsigned int *)(v28 + 4 * WORD2(v24) + 4));
        }
        else
        {
          unint64_t v29 = 0;
        }
        unint64_t v30 = (int *)sub_2E5C38(v23, v24 & 0xFFFFFFFFFFFFLL, 1);
        v41[0] = v25;
        v41[1] = v29;
        v41[2] = v30;
        v41[3] = v31;
        int v42 = v24;
        __int16 v43 = WORD2(v24);
        BOOL v44 = (v24 & 0xFF000000000000) != 0;
        sub_2E44A4(*a1, (uint64_t)v41, &__p);
        unint64_t v32 = (unsigned __int16 *)((char *)v41[0] - *v41[0]);
        if (*v32 < 0x2Fu) {
          break;
        }
        uint64_t v33 = v32[23];
        if (!v33) {
          break;
        }
        unsigned int v34 = *((unsigned __int8 *)v41[0] + v33);
        if (v34 > 0x2A || ((1 << v34) & 0x50426810004) == 0)
        {
          v20 |= v34 == 0;
          long long v39 = __p;
          if (__p) {
            goto LABEL_40;
          }
          return v20 & 1;
        }
        unint64_t v36 = sub_6D7AFC((uint64_t)(a1 + 145), v41, (uint64_t *)&__p, -1);
        if (++v7 < sub_46C760(a2))
        {
          if (v36 == -1
            || (uint64_t v37 = *(void *)(sub_66F838(&__p, v36) + 32),
                uint64_t v38 = *(void *)(sub_46C8EC(a2, v7) + 32),
                (v37 & 0xFFFFFFFFFFFFLL) != (v38 & 0xFFFFFFFFFFFFLL))
            || ((v37 & 0xFF000000000000) == 0) != ((v38 & 0x1000000000000) == 0))
          {
            char v20 = 0;
          }
        }
        if (v40 == v7) {
          goto LABEL_38;
        }
      }
    }
    long long v39 = __p;
    if (__p)
    {
LABEL_40:
      uint64_t v46 = v39;
      operator delete(v39);
    }
  }
  return v20 & 1;
}

void sub_69E34C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_69E374(uint64_t a1, void *a2, unint64_t a3, uint64_t a4)
{
  *(_DWORD *)(a4 + 24) = 0;
  unint64_t v5 = (_OWORD *)(a4 + 24);
  *(void *)(a4 + 8) = *(void *)a4;
  *(void *)(a4 + 48) = *(void *)(a4 + 40);
  *(_DWORD *)(a4 + 64) = 0;
  *(void *)&long long v6 = -1;
  *((void *)&v6 + 1) = -1;
  *(_OWORD *)(a4 + 72) = v6;
  uint64_t v7 = a4 + 72;
  *(_OWORD *)(a4 + 88) = v6;
  *(_OWORD *)(a4 + 104) = v6;
  *(void *)(a4 + 120) = -1;
  *(_DWORD *)(a4 + 128) = 0;
  *(void *)(a4 + 136) = -1;
  *(_DWORD *)(a4 + 144) = 0;
  *(_OWORD *)(a4 + 152) = xmmword_20E2060;
  *(_WORD *)(a4 + 168) = 0;
  *(unsigned char *)(a4 + 170) = 0;
  *(void *)(a4 + 176) = 0;
  *(unsigned char *)(a4 + 188) = 0;
  *(unsigned char *)(a4 + 190) = 0;
  sub_695C3C(a1, a2, a3, 1, (uint64_t)__p);
  long long v8 = *(void **)a4;
  if (*(void *)a4)
  {
    *(void *)(a4 + 8) = v8;
    operator delete(v8);
  }
  *(_OWORD *)a4 = *(_OWORD *)__p;
  *(void *)(a4 + 16) = v16;
  __p[1] = 0;
  uint64_t v16 = 0;
  __p[0] = 0;
  _OWORD *v5 = v17;
  uint64_t v9 = *(void **)(a4 + 40);
  if (v9)
  {
    *(void *)(a4 + 48) = v9;
    operator delete(v9);
    uint64_t v9 = __p[0];
  }
  *(_OWORD *)(a4 + 40) = v18;
  *(void *)(a4 + 56) = v19;
  uint64_t v19 = 0;
  long long v18 = 0uLL;
  *(_DWORD *)(a4 + 64) = v20;
  long long v10 = v26;
  *(_OWORD *)(v7 + 64) = v25;
  *(_OWORD *)(v7 + 80) = v10;
  *(_OWORD *)(v7 + 96) = *(_OWORD *)v27;
  *(void *)(v7 + 111) = *(void *)&v27[15];
  long long v11 = v22;
  *(_OWORD *)uint64_t v7 = v21;
  *(_OWORD *)(v7 + 16) = v11;
  long long v12 = v24;
  *(_OWORD *)(v7 + 32) = v23;
  *(_OWORD *)(v7 + 48) = v12;
  if (v9)
  {
    __p[1] = v9;
    operator delete(v9);
  }
  if (*(_DWORD *)v5 == 20)
  {
    int v13 = 62;
    goto LABEL_11;
  }
  if (*(_DWORD *)v5 == 21)
  {
    int v13 = 63;
LABEL_11:
    *(_DWORD *)unint64_t v5 = v13;
  }
  *(unsigned char *)(a4 + 188) = 1;
  return 1;
}

uint64_t sub_69E4EC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void **)a1;
  if (v4)
  {
    *(void *)(a1 + 8) = v4;
    operator delete(v4);
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  unint64_t v5 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  if (v5)
  {
    *(void *)(a1 + 48) = v5;
    operator delete(v5);
    *(void *)(a1 + 40) = 0;
    *(void *)(a1 + 48) = 0;
    *(void *)(a1 + 56) = 0;
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = 0;
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  long long v6 = *(_OWORD *)(a2 + 72);
  long long v7 = *(_OWORD *)(a2 + 88);
  long long v8 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = v8;
  *(_OWORD *)(a1 + 88) = v7;
  *(_OWORD *)(a1 + 72) = v6;
  long long v9 = *(_OWORD *)(a2 + 136);
  long long v10 = *(_OWORD *)(a2 + 152);
  long long v11 = *(_OWORD *)(a2 + 168);
  *(void *)(a1 + 183) = *(void *)(a2 + 183);
  *(_OWORD *)(a1 + 168) = v11;
  *(_OWORD *)(a1 + 152) = v10;
  *(_OWORD *)(a1 + 136) = v9;
  return a1;
}

uint64_t sub_69E5D0(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_46C8EC(a2, a3);
  uint64_t v9 = *a1;
  uint64_t v10 = *(void *)(v8 + 32);
  long long v11 = (int *)sub_2D5D58(*a1, v10 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v9 + 7772))
  {
    long long v12 = sub_2DB8E0(v9 + 3896, v10, 0);
    int v13 = &v12[-*(int *)v12];
    if (*(unsigned __int16 *)v13 < 5u)
    {
      uint64_t v14 = 0;
    }
    else
    {
      uint64_t v14 = *((unsigned __int16 *)v13 + 2);
      if (v14) {
        v14 += (uint64_t)&v12[*(unsigned int *)&v12[v14]];
      }
    }
    BOOL v15 = (int *)(v14 + 4 * WORD2(v10) + 4 + *(unsigned int *)(v14 + 4 * WORD2(v10) + 4));
  }
  else
  {
    BOOL v15 = 0;
  }
  v70[0] = v11;
  v70[1] = v15;
  v70[2] = (int *)sub_2E5C38(v9, v10 & 0xFFFFFFFFFFFFLL, 1);
  v70[3] = v16;
  LODWORD(v71) = v10;
  WORD2(v71) = WORD2(v10);
  uint64_t v17 = a3 + 1;
  BYTE6(v71) = (v10 & 0xFF000000000000) != 0;
  uint64_t v18 = sub_46C8EC(a2, a3 + 1);
  uint64_t v19 = *a1;
  uint64_t v20 = *(void *)(v18 + 32);
  long long v21 = (int *)sub_2D5D58(*a1, v20 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v19 + 7772)) {
    sub_2DB8E0(v19 + 3896, v20, 0);
  }
  sub_2E5C38(v19, v20 & 0xFFFFFFFFFFFFLL, 1);
  long long v22 = (unsigned __int16 *)((char *)v11 - *v11);
  if (*v22 >= 0x2Fu)
  {
    uint64_t v23 = v22[23];
    if (v23)
    {
      unsigned int v24 = *((unsigned __int8 *)v11 + v23);
      BOOL v25 = v24 > 0x36;
      uint64_t v26 = (1 << v24) & 0x44000000000008;
      if (!v25 && v26 != 0) {
        return 0;
      }
    }
  }
  uint64_t v28 = (unsigned __int16 *)((char *)v21 - *v21);
  if (*v28 >= 0x2Fu)
  {
    uint64_t v29 = v28[23];
    if (v29)
    {
      if (*((unsigned char *)v21 + v29) == 54)
      {
        *(_DWORD *)(a4 + 24) = 6;
        *(void *)&long long v64 = v71;
        sub_2D5B74((char **)a4, &v64);
        *(void *)&long long v64 = v20 & 0xFFFFFFFFFFFFLL | ((unint64_t)((v20 & 0xFF000000000000) != 0) << 48);
        sub_2D5B74((char **)a4, &v64);
        return 1;
      }
    }
  }
  unint64_t v61 = a3;
  uint64_t v62 = a4;
  uint64_t v31 = 0;
  unint64_t v32 = v17;
  while (1)
  {
    uint64_t v33 = sub_46C8EC(a2, v32);
    uint64_t v34 = *a1;
    uint64_t v35 = *(void *)(v33 + 32);
    unint64_t v36 = (int *)sub_2D5D58(*a1, v35 & 0xFFFFFFFFFFFFLL);
    if (*(unsigned char *)(v34 + 7772)) {
      sub_2DB8E0(v34 + 3896, v35, 0);
    }
    sub_2E5C38(v34, v35 & 0xFFFFFFFFFFFFLL, 1);
    uint64_t v37 = (unsigned __int16 *)((char *)v36 - *v36);
    unsigned int v38 = *v37;
    if (v38 >= 0x2F) {
      break;
    }
    if (v38 < 9)
    {
      if (v31 > a1[77]) {
        return 0;
      }
      goto LABEL_34;
    }
LABEL_29:
    uint64_t v39 = v37[4];
    if (v39) {
      uint64_t v39 = *(unsigned int *)((char *)v36 + v39);
    }
    v31 += v39;
    if (v31 > a1[77]) {
      return 0;
    }
LABEL_34:
    if (++v32 == sub_46C760(a2)) {
      return 0;
    }
  }
  if (!v37[23] || *((unsigned char *)v36 + v37[23]) != 54) {
    goto LABEL_29;
  }
  long long __p = 0;
  uint64_t v68 = 0;
  uint64_t v69 = 0;
  sub_2E44A4(*a1, (uint64_t)v70, &__p);
  unint64_t v41 = v61;
  int v42 = __p;
  if (v68 - (unsigned char *)__p == 80)
  {
    if (sub_69B8C0((uint64_t)a1, v70, (int ***)&__p) == 2)
    {
      uint64_t v43 = sub_66F838(&__p, 0);
      uint64_t v44 = sub_46C8EC(a2, v17);
      uint64_t v45 = *a1;
      uint64_t v46 = *(void *)(v44 + 32);
      sub_2D5D58(*a1, v46 & 0xFFFFFFFFFFFFLL);
      if (*(unsigned char *)(v45 + 7772)) {
        sub_2DB8E0(v45 + 3896, v46, 0);
      }
      sub_2E5C38(v45, v46 & 0xFFFFFFFFFFFFLL, 1);
      unint64_t v47 = __PAIR64__(*(unsigned __int16 *)(v43 + 36), *(_DWORD *)(v43 + 32)) == __PAIR64__(WORD2(v46), v46)
         && ((v46 & 0xFF000000000000) != 0) != (*(unsigned char *)(v43 + 38) == 0);
      uint64_t v48 = sub_66F838(&__p, v47);
      uint64_t v49 = 0;
      long long v50 = *(_OWORD *)v48;
      long long v51 = *(_OWORD *)(v48 + 16);
      uint64_t v66 = *(void *)(v48 + 32);
      long long v64 = v50;
      for (long long i = v51; ; long long i = v60)
      {
        uint64_t v68 = __p;
        sub_2E44A4(*a1, (uint64_t)&v64, &__p);
        unint64_t v52 = __p;
        if (__p != v68)
        {
          while (1)
          {
            unint64_t v53 = (unsigned __int16 *)(*v52 - *(int *)*v52);
            if (*v53 >= 0x2Fu)
            {
              uint64_t v54 = v53[23];
              if (v54)
              {
                if (*(unsigned char *)(*v52 + v54) == 54) {
                  break;
                }
              }
            }
            v52 += 5;
            if (v52 == (void *)v68) {
              goto LABEL_54;
            }
          }
        }
        if (v52 != (void *)v68) {
          break;
        }
LABEL_54:
        double v55 = (unsigned __int16 *)(v64 - *(int *)v64);
        if (*v55 >= 9u && (uint64_t v56 = v55[4]) != 0)
        {
          v49 += *(unsigned int *)(v64 + v56);
          if (v49 > a1[77]) {
            goto LABEL_61;
          }
        }
        else if (v49 > a1[77])
        {
          goto LABEL_61;
        }
        unint64_t v57 = sub_6D7AFC((uint64_t)(a1 + 145), (int **)&v64, (uint64_t *)&__p, -1);
        if (v57 == -1) {
          goto LABEL_61;
        }
        uint64_t v58 = sub_66F838(&__p, v57);
        long long v59 = *(_OWORD *)v58;
        long long v60 = *(_OWORD *)(v58 + 16);
        uint64_t v66 = *(void *)(v58 + 32);
        long long v64 = v59;
      }
      *(_DWORD *)(v62 + 24) = 6;
      if (v32 >= v61)
      {
        do
        {
          uint64_t v63 = *(void *)(sub_46C8EC(a2, v41) + 32);
          sub_2D5B74((char **)v62, &v63);
          ++v41;
        }
        while (v41 <= v32);
      }
      uint64_t v30 = 1;
    }
    else
    {
LABEL_61:
      uint64_t v30 = 0;
    }
    int v42 = __p;
  }
  else
  {
    uint64_t v30 = 0;
  }
  if (v42)
  {
    uint64_t v68 = v42;
    operator delete(v42);
  }
  return v30;
}

void sub_69EB24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_69EB54(uint64_t a1, int **a2, int **a3, int a4)
{
  long long v7 = (unsigned __int16 *)((char *)*a3 - **a3);
  unsigned int v8 = *v7;
  if (*((unsigned char *)a3 + 38))
  {
    if (v8 < 0x49) {
      goto LABEL_11;
    }
    unsigned int v9 = v7[36];
    if (!v9) {
      goto LABEL_11;
    }
  }
  else if (v8 < 0x4B || (unsigned int v9 = v7[37]) == 0)
  {
LABEL_11:
    __int16 v10 = -1;
    long long v11 = *a2;
    long long v12 = (unsigned __int16 *)((char *)*a2 - **a2);
    unsigned int v13 = *v12;
    if (*((unsigned char *)a2 + 38)) {
      goto LABEL_12;
    }
LABEL_8:
    if (v13 >= 0x49)
    {
      unsigned int v14 = v12[36];
      if (v14) {
        goto LABEL_14;
      }
    }
    goto LABEL_15;
  }
  __int16 v10 = *(_WORD *)((char *)*a3 + v9);
  long long v11 = *a2;
  long long v12 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v13 = *v12;
  if (!*((unsigned char *)a2 + 38)) {
    goto LABEL_8;
  }
LABEL_12:
  if (v13 >= 0x4B)
  {
    unsigned int v14 = v12[37];
    if (v14)
    {
LABEL_14:
      int v15 = *(unsigned __int16 *)((char *)v11 + v14);
      goto LABEL_16;
    }
  }
LABEL_15:
  int v15 = 0xFFFF;
LABEL_16:
  unsigned __int16 v16 = v10 + 18000;
  unsigned __int16 v17 = v10 - 18000;
  if ((unsigned __int16)(v16 >> 5) < 0x465u) {
    unsigned __int16 v17 = v16;
  }
  int v18 = v15 - v17;
  if (v18 > 18000) {
    v18 -= 36000;
  }
  if (v18 >= -17999) {
    int v19 = v18;
  }
  else {
    int v19 = v18 + 36000;
  }
  double v20 = sub_6D82EC(a1 + 1160, a3, a2);
  long long v21 = (unsigned __int16 *)((char *)*a3 - **a3);
  if (*v21 >= 0xBu && (uint64_t v22 = v21[5]) != 0 && (*((unsigned char *)*a3 + v22 + 1) & 0x80) != 0)
  {
    double v23 = *(double *)(a1 + 272);
    BOOL result = v20 > v23;
    if (v20 > v23) {
      return result;
    }
  }
  else
  {
    double v23 = *(double *)(a1 + 272);
    BOOL result = v20 < -v23;
    if (v20 < -v23) {
      return result;
    }
  }
  if (a4) {
    return fabs((double)v19 / 100.0) < v23;
  }
  return result;
}

uint64_t sub_69ECF0(int ***a1)
{
  uint64_t v1 = *a1;
  double v2 = a1[1];
  if (*a1 == v2) {
    return 1;
  }
  while (1)
  {
    uint64_t v3 = *v1;
    unint64_t v4 = (unsigned __int16 *)((char *)*v1 - **v1);
    if (*v4 < 0x2Fu || !v4[23]) {
      break;
    }
    uint64_t result = 0;
    unsigned int v6 = *((unsigned __int8 *)v3 + v4[23]);
    if (v6 > 0x2C) {
      return result;
    }
    if (((1 << v6) & 0x80000001040) != 0)
    {
      uint64_t v7 = v4[5];
      if (v7)
      {
        int v8 = *(int *)((char *)v3 + v7) & 0x200000;
        if (v6 != 14 && v8 != 0) {
          return 0;
        }
      }
    }
    else if (((1 << v6) & 0x100000004000) == 0)
    {
      return result;
    }
    v1 += 5;
    if (v1 == v2) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_69ED94(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!*(unsigned char *)(a1 + 712)) {
    return 0;
  }
  if (sub_69FF10(a1, a2, a3, a4)) {
    return 1;
  }
  uint64_t v203 = a5;
  unint64_t v204 = a3;
  uint64_t v11 = sub_46C8EC(a2, a3);
  uint64_t v12 = *(void *)a1;
  unint64_t v205 = (int **)v11;
  uint64_t v13 = *(void *)(v11 + 32);
  uint64_t v14 = sub_2D5D58(*(void *)a1, v13 & 0xFFFFFFFFFFFFLL);
  uint64_t v206 = a4;
  if (*(unsigned char *)(v12 + 7772))
  {
    int v15 = sub_2DB8E0(v12 + 3896, v13, 0);
    unsigned __int16 v16 = &v15[-*(int *)v15];
    if (*(unsigned __int16 *)v16 < 5u)
    {
      uint64_t v17 = 0;
    }
    else
    {
      uint64_t v17 = *((unsigned __int16 *)v16 + 2);
      if (v17) {
        v17 += (uint64_t)&v15[*(unsigned int *)&v15[v17]];
      }
    }
    uint64_t v18 = v17 + 4 * WORD2(v13) + 4 + *(unsigned int *)(v17 + 4 * WORD2(v13) + 4);
  }
  else
  {
    uint64_t v18 = 0;
  }
  *((void *)&v227 + 1) = v18;
  *(void *)&long long v228 = sub_2E5C38(v12, v13 & 0xFFFFFFFFFFFFLL, 1);
  *((void *)&v228 + 1) = v19;
  LODWORD(v229) = v13;
  WORD2(v229) = WORD2(v13);
  BYTE6(v229) = (v13 & 0xFF000000000000) != 0;
  uint64_t v214 = a1;
  v226[0] = (uint64_t *)a1;
  v226[1] = (uint64_t *)&v227;
  *(void *)&long long v227 = v14;
  sub_46B060();
  long long v21 = v20;
  unint64_t v23 = v22;
  sub_46B060();
  long long v216 = v24;
  unint64_t v212 = v25;
  sub_46B058();
  uint64_t v210 = v26;
  uint64_t v28 = v27;
  sub_46B058();
  BOOL v215 = 0;
  uint64_t v29 = v28 + v204;
  *(void *)&long long __src = v30;
  *((void *)&__src + 1) = v204 + 1 + v31;
  uint64_t v207 = a1 + 3048;
  while (1)
  {
    sub_46B060();
    uint64_t v34 = v32;
    unint64_t v35 = v33;
    if ((void)__src)
    {
      unint64_t v36 = *((void *)&__src + 1);
      unint64_t v37 = sub_46C760((void *)__src);
      unint64_t v38 = v37;
      if (v34)
      {
        BOOL v39 = v36 < v37;
        unint64_t v40 = sub_46C760(v34);
        if (v35 < v40 && v39)
        {
          uint64_t v42 = sub_46C8EC((void *)__src, *((uint64_t *)&__src + 1));
          if (v42 == sub_46C8EC(v34, v35)) {
            goto LABEL_68;
          }
        }
        else if (v36 < v38 == v35 < v40)
        {
          goto LABEL_68;
        }
      }
      else if (v36 >= v37)
      {
        goto LABEL_68;
      }
    }
    else if (!v32 || v33 >= sub_46C760(v32))
    {
      goto LABEL_68;
    }
    uint64_t v43 = (void *)sub_46C8EC((void *)__src, *((uint64_t *)&__src + 1));
    uint64_t v44 = (unsigned __int16 *)(*v43 - *(int *)*v43);
    if (*v44 >= 0x2Fu)
    {
      uint64_t v45 = v44[23];
      if (v45)
      {
        unsigned int v46 = *(unsigned __int8 *)(*v43 + v45);
        BOOL v47 = v46 > 0x36;
        uint64_t v48 = (1 << v46) & 0x44000000000008;
        if (!v47 && v48 != 0) {
          return 0;
        }
      }
    }
    uint64_t v50 = sub_46C8EC((void *)__src, *((uint64_t *)&__src + 1));
    uint64_t v51 = *(void *)v214;
    uint64_t v52 = *(void *)(v50 + 32);
    unint64_t v53 = (int *)sub_2D5D58(*(void *)v214, v52 & 0xFFFFFFFFFFFFLL);
    if (*(unsigned char *)(v51 + 7772)) {
      sub_2DB8E0(v51 + 3896, v52, 0);
    }
    sub_2E5C38(v51, v52 & 0xFFFFFFFFFFFFLL, 1);
    uint64_t v54 = (unsigned __int16 *)((char *)v53 - *v53);
    if (*v54 >= 0x2Fu && (uint64_t v55 = v54[23]) != 0 && *((unsigned char *)v53 + v55) == 14)
    {
      BOOL v56 = 1;
      if (!v215) {
        goto LABEL_40;
      }
    }
    else
    {
      BOOL v56 = sub_6A0418(v226, (void **)&__src);
      if (!v215)
      {
LABEL_40:
        BOOL v215 = sub_6A0418(v226, (void **)&__src);
        goto LABEL_43;
      }
    }
    BOOL v215 = 1;
LABEL_43:
    sub_46B060();
    uint64_t v58 = v57;
    unint64_t v60 = v59;
    if (v21)
    {
      BOOL v61 = v23 < sub_46C760(v21);
      if (!v58) {
        goto LABEL_51;
      }
    }
    else
    {
      BOOL v61 = 0;
      if (!v57)
      {
LABEL_51:
        BOOL v63 = 0;
        goto LABEL_52;
      }
    }
    unint64_t v62 = sub_46C760(v58);
    BOOL v63 = v60 < v62;
    if (v60 < v62 && v61)
    {
      uint64_t v65 = sub_46C8EC(v21, v23);
      int v66 = v65 == sub_46C8EC(v58, v60);
      goto LABEL_53;
    }
LABEL_52:
    int v66 = v61 ^ v63 ^ 1;
LABEL_53:
    if ((v66 & v56) != 0)
    {
      unint64_t v23 = *((void *)&__src + 1);
      long long v21 = (void *)__src;
    }
    sub_46B060();
    uint64_t v68 = v67;
    unint64_t v70 = v69;
    if (v216)
    {
      BOOL v71 = v212 < sub_46C760(v216);
      if (!v68) {
        goto LABEL_64;
      }
    }
    else
    {
      BOOL v71 = 0;
      if (!v67)
      {
LABEL_64:
        BOOL v73 = 0;
        goto LABEL_65;
      }
    }
    unint64_t v72 = sub_46C760(v68);
    BOOL v73 = v70 < v72;
    if (v70 < v72 && v71)
    {
      uint64_t v75 = sub_46C8EC(v216, v212);
      if (v75 != sub_46C8EC(v68, v70) || v56) {
        goto LABEL_12;
      }
      goto LABEL_66;
    }
LABEL_65:
    if ((v71 ^ v73 | v56)) {
      goto LABEL_12;
    }
LABEL_66:
    uint64_t v76 = (int **)sub_46C8EC((void *)__src, *((uint64_t *)&__src + 1));
    if ((sub_6618C0(v207, v76) & 1) == 0) {
      break;
    }
LABEL_12:
    uint64_t v29 = *((void *)&__src + 1);
    uint64_t v210 = (void *)__src;
    ++*((void *)&__src + 1);
  }
  unint64_t v212 = *((void *)&__src + 1);
  long long v216 = (void *)__src;
LABEL_68:
  sub_46B060();
  uint64_t v79 = v77;
  unint64_t v80 = v78;
  if (v21)
  {
    unint64_t v81 = sub_46C760(v21);
    unint64_t v82 = v81;
    if (v79)
    {
      BOOL v83 = v23 < v81;
      unint64_t v84 = sub_46C760(v79);
      if (v80 < v84 && v83)
      {
        uint64_t v86 = sub_46C8EC(v21, v23);
        if (v86 == sub_46C8EC(v79, v80)) {
          goto LABEL_115;
        }
      }
      else if (v23 < v82 == v80 < v84)
      {
        goto LABEL_115;
      }
LABEL_82:
      sub_46B060();
      uint64_t v89 = v87;
      unint64_t v90 = v88;
      if (v216)
      {
        unint64_t v91 = sub_46C760(v216);
        unint64_t v92 = v91;
        if (v89)
        {
          BOOL v93 = v212 < v91;
          unint64_t v94 = sub_46C760(v89);
          if (v90 < v94 && v93)
          {
            uint64_t v96 = sub_46C8EC(v216, v212);
            if (v96 != sub_46C8EC(v89, v90)) {
              goto LABEL_115;
            }
          }
          else if (v212 < v92 != v90 < v94)
          {
            goto LABEL_115;
          }
LABEL_96:
          uint64_t v97 = *(void *)v214;
          unint64_t v98 = (unint64_t)v205[4];
          uint64_t v208 = sub_2D5D58(*(void *)v214, v98 & 0xFFFFFFFFFFFFLL);
          if (*(unsigned char *)(v97 + 7772))
          {
            char v99 = sub_2DB8E0(v97 + 3896, v98, 0);
            double v100 = &v99[-*(int *)v99];
            if (*(unsigned __int16 *)v100 < 5u)
            {
              uint64_t v101 = 0;
            }
            else
            {
              uint64_t v101 = *((unsigned __int16 *)v100 + 2);
              if (v101) {
                v101 += (uint64_t)&v99[*(unsigned int *)&v99[v101]];
              }
            }
            uint64_t v102 = v101 + 4 * WORD2(v98) + 4 + *(unsigned int *)(v101 + 4 * WORD2(v98) + 4);
          }
          else
          {
            uint64_t v102 = 0;
          }
          uint64_t v103 = sub_2E5C38(v97, v98 & 0xFFFFFFFFFFFFLL, 1);
          *(void *)&long long __src = v208;
          *((void *)&__src + 1) = v102;
          *(void *)&long long v231 = v103;
          *((void *)&v231 + 1) = v104;
          LODWORD(v232) = v98;
          WORD2(v232) = WORD2(v98);
          BYTE6(v232) = (v98 & 0xFF000000000000) != 0;
          uint64_t v105 = sub_46C8EC(v210, v29);
          uint64_t v106 = *(void *)v214;
          uint64_t v107 = *(void *)(v105 + 32);
          uint64_t v209 = sub_2D5D58(*(void *)v214, v107 & 0xFFFFFFFFFFFFLL);
          if (*(unsigned char *)(v106 + 7772))
          {
            uint64_t v108 = sub_2DB8E0(v106 + 3896, v107, 0);
            int v109 = &v108[-*(int *)v108];
            if (*(unsigned __int16 *)v109 < 5u)
            {
              uint64_t v110 = 0;
            }
            else
            {
              uint64_t v110 = *((unsigned __int16 *)v109 + 2);
              if (v110) {
                v110 += (uint64_t)&v108[*(unsigned int *)&v108[v110]];
              }
            }
            uint64_t v111 = v110 + 4 * WORD2(v107) + 4 + *(unsigned int *)(v110 + 4 * WORD2(v107) + 4);
          }
          else
          {
            uint64_t v111 = 0;
          }
          *(void *)&long long v223 = v209;
          *((void *)&v223 + 1) = v111;
          *(void *)&long long v224 = sub_2E5C38(v106, v107 & 0xFFFFFFFFFFFFLL, 1);
          *((void *)&v224 + 1) = v112;
          LODWORD(v225) = v107;
          WORD2(v225) = WORD2(v107);
          BYTE6(v225) = (v107 & 0xFF000000000000) != 0;
          int v113 = sub_53EA04(v214, (int **)&__src, (int **)&v223);
          uint64_t v114 = v216;
          if (v113) {
            uint64_t v114 = v210;
          }
          long long v216 = v114;
          unint64_t v115 = v212;
          if (v113) {
            unint64_t v115 = v29;
          }
          unint64_t v212 = v115;
        }
        else if (v212 >= v91)
        {
          goto LABEL_96;
        }
      }
      else if (!v87 || v88 >= sub_46C760(v87))
      {
        goto LABEL_96;
      }
    }
    else if (v23 < v81)
    {
      goto LABEL_82;
    }
  }
  else if (v77 && v78 < sub_46C760(v77))
  {
    goto LABEL_82;
  }
LABEL_115:
  sub_46B060();
  long long v118 = v116;
  unint64_t v119 = v117;
  if (!v21)
  {
    if (v116 && v117 < sub_46C760(v116)) {
      goto LABEL_129;
    }
    return 0;
  }
  unint64_t v120 = sub_46C760(v21);
  unint64_t v121 = v120;
  if (!v118)
  {
    if (v23 < v120) {
      goto LABEL_129;
    }
    return 0;
  }
  BOOL v122 = v23 < v120;
  unint64_t v123 = sub_46C760(v118);
  if (v119 < v123 && v122)
  {
    uint64_t v125 = sub_46C8EC(v21, v23);
    if (v125 == sub_46C8EC(v118, v119)) {
      return 0;
    }
  }
  else if (v23 < v121 == v119 < v123)
  {
    return 0;
  }
LABEL_129:
  sub_46B060();
  long long v127 = v126;
  unint64_t v129 = v128;
  if (v216)
  {
    int v130 = v212 < sub_46C760(v216);
    if (v127) {
      goto LABEL_131;
    }
LABEL_138:
    int v132 = 0;
    goto LABEL_139;
  }
  int v130 = 0;
  if (!v126) {
    goto LABEL_138;
  }
LABEL_131:
  unint64_t v131 = sub_46C760(v127);
  int v132 = v129 < v131;
  if (v129 < v131) {
    int v133 = v130;
  }
  else {
    int v133 = 0;
  }
  if (v133 == 1)
  {
    uint64_t v134 = sub_46C8EC(v216, v212);
    uint64_t v135 = sub_46C8EC(v127, v129);
    uint64_t v10 = 0;
    if (v134 == v135) {
      return v10;
    }
LABEL_140:
    if (v23 < v212)
    {
      sub_46B058();
      uint64_t v137 = v136;
      uint64_t v138 = sub_46C8EC(v216, v212);
      long long v139 = *(_OWORD *)v138;
      long long v140 = *(_OWORD *)(v138 + 16);
      uint64_t v225 = *(void *)(v138 + 32);
      long long v223 = v139;
      long long v224 = v140;
      uint64_t v141 = *(void *)v214;
      uint64_t v142 = sub_46C8EC(v216, v212);
      sub_6921A0(v141, *(void *)(v142 + 32), 1, 1, (uint64_t)&v220);
      uint64_t v218 = 0;
      uint64_t v219 = 0;
      unint64_t v143 = sub_46C760(a2);
      unint64_t v144 = v204;
      if (v204 <= v143) {
        unint64_t v145 = v143;
      }
      else {
        unint64_t v145 = v204;
      }
      unint64_t v211 = v145;
      if (v143 > v204)
      {
        uint64_t v146 = 0;
        LOBYTE(v147) = 0;
        uint64_t v213 = v212 - v137;
        double v148 = 0.0;
        while (1)
        {
          long long v149 = (int **)sub_46C8EC(a2, v144);
          __p[0] = v149[4];
          sub_2D5B74((char **)v206, __p);
          if (v147)
          {
            BOOL v147 = 1;
          }
          else
          {
            uint64_t v150 = *(void *)v214;
            unint64_t v151 = (unint64_t)v149[4];
            uint64_t v152 = sub_2D5D58(*(void *)v214, v151 & 0xFFFFFFFFFFFFLL);
            if (*(unsigned char *)(v150 + 7772))
            {
              uint64_t v153 = sub_2DB8E0(v150 + 3896, v151, 0);
              int v154 = &v153[-*(int *)v153];
              if (*(unsigned __int16 *)v154 < 5u)
              {
                uint64_t v155 = 0;
              }
              else
              {
                uint64_t v155 = *((unsigned __int16 *)v154 + 2);
                if (v155) {
                  v155 += (uint64_t)&v153[*(unsigned int *)&v153[v155]];
                }
              }
              uint64_t v156 = v155 + 4 * WORD2(v151) + 4 + *(unsigned int *)(v155 + 4 * WORD2(v151) + 4);
            }
            else
            {
              uint64_t v156 = 0;
            }
            uint64_t v157 = sub_2E5C38(v150, v151 & 0xFFFFFFFFFFFFLL, 1);
            *(void *)&long long __src = v152;
            *((void *)&__src + 1) = v156;
            *(void *)&long long v231 = v157;
            *((void *)&v231 + 1) = v158;
            LODWORD(v232) = v151;
            WORD2(v232) = WORD2(v151);
            BYTE6(v232) = (v151 & 0xFF000000000000) != 0;
            BOOL v147 = !sub_6D855C(v214 + 1160, (int **)&__src);
          }
          if (v213 == v144) {
            goto LABEL_213;
          }
          unint64_t v159 = sub_46C760(a2);
          double v160 = 0.0;
          if (v144 < v159 - 1) {
            break;
          }
LABEL_181:
          double v174 = fabs(v160);
          if (v174 >= v148) {
            double v148 = v174;
          }
          long long v175 = (unsigned __int16 *)((char *)*v205 - **v205);
          unsigned int v176 = *v175;
          if (*((unsigned char *)v205 + 38))
          {
            if (v176 >= 0x49)
            {
              unsigned int v177 = v175[36];
              if (v177) {
                goto LABEL_189;
              }
            }
          }
          else if (v176 >= 0x4B)
          {
            unsigned int v177 = v175[37];
            if (v177)
            {
LABEL_189:
              __int16 v178 = *(_WORD *)((char *)*v205 + v177);
              unint64_t v179 = (char *)*v149;
              unint64_t v180 = (unsigned __int16 *)((char *)*v149 - **v149);
              unsigned int v181 = *v180;
              if (*((unsigned char *)v149 + 38)) {
                goto LABEL_194;
              }
              goto LABEL_190;
            }
          }
          __int16 v178 = -1;
          unint64_t v179 = (char *)*v149;
          unint64_t v180 = (unsigned __int16 *)((char *)*v149 - **v149);
          unsigned int v181 = *v180;
          if (*((unsigned char *)v149 + 38))
          {
LABEL_194:
            if (v181 < 0x4B) {
              goto LABEL_197;
            }
            unsigned int v182 = v180[37];
            if (!v182) {
              goto LABEL_197;
            }
            goto LABEL_196;
          }
LABEL_190:
          if (v181 < 0x49 || (unsigned int v182 = v180[36]) == 0)
          {
LABEL_197:
            int v183 = 0xFFFF;
            goto LABEL_198;
          }
LABEL_196:
          int v183 = *(unsigned __int16 *)&v179[v182];
LABEL_198:
          unsigned __int16 v184 = v178 + 18000;
          unsigned __int16 v185 = v178 - 18000;
          if ((unsigned __int16)(v184 >> 5) < 0x465u) {
            unsigned __int16 v185 = v184;
          }
          int v186 = v183 - v185;
          if (v186 > 18000) {
            v186 -= 36000;
          }
          if (v186 < -17999) {
            v186 += 36000;
          }
          int16x4_t v187 = (int16x4_t)0x4059000000000000;
          double v188 = fabs((double)v186 / 100.0);
          v187.i16[0] = *(_WORD *)(v214 + 744);
          if (v188 >= (double)vmovl_s16(v187).i32[0]) {
            uint64_t v189 = sub_46CCC8(a2, v144, v188);
          }
          else {
            uint64_t v189 = 0;
          }
          v219 += v189;
          if (LODWORD(__p[0]) == v229
            && WORD2(__p[0]) == WORD2(v229)
            && ((v229 & 0x1000000000000) == 0) == (BYTE6(__p[0]) == 0))
          {
            uint64_t v218 = v146;
            if (v211 == ++v144) {
              goto LABEL_213;
            }
          }
          else
          {
            v146 += sub_46CCC8(a2, v144, v188);
            uint64_t v218 = v146;
            if (v211 == ++v144) {
              goto LABEL_213;
            }
          }
        }
        unint64_t v161 = (int **)sub_46C8EC(a2, v144 + 1);
        unint64_t v162 = (unsigned __int16 *)((char *)*v149 - **v149);
        unsigned int v163 = *v162;
        if (*((unsigned char *)v149 + 38))
        {
          if (v163 < 0x49) {
            goto LABEL_169;
          }
          unsigned int v164 = v162[36];
          if (!v164) {
            goto LABEL_169;
          }
LABEL_165:
          __int16 v165 = *(_WORD *)((char *)*v149 + v164);
          long long v166 = (char *)*v161;
          long long v167 = (unsigned __int16 *)((char *)*v161 - **v161);
          unsigned int v168 = *v167;
          if (!*((unsigned char *)v161 + 38)) {
            goto LABEL_166;
          }
LABEL_170:
          if (v168 >= 0x4B)
          {
            unsigned int v169 = v167[37];
            if (v169) {
              goto LABEL_172;
            }
          }
LABEL_173:
          int v170 = 0xFFFF;
        }
        else
        {
          if (v163 >= 0x4B)
          {
            unsigned int v164 = v162[37];
            if (v164) {
              goto LABEL_165;
            }
          }
LABEL_169:
          __int16 v165 = -1;
          long long v166 = (char *)*v161;
          long long v167 = (unsigned __int16 *)((char *)*v161 - **v161);
          unsigned int v168 = *v167;
          if (*((unsigned char *)v161 + 38)) {
            goto LABEL_170;
          }
LABEL_166:
          if (v168 < 0x49) {
            goto LABEL_173;
          }
          unsigned int v169 = v167[36];
          if (!v169) {
            goto LABEL_173;
          }
LABEL_172:
          int v170 = *(unsigned __int16 *)&v166[v169];
        }
        unsigned __int16 v171 = v165 + 18000;
        unsigned __int16 v172 = v165 - 18000;
        if ((unsigned __int16)(v171 >> 5) < 0x465u) {
          unsigned __int16 v172 = v171;
        }
        int v173 = v170 - v172;
        if (v173 > 18000) {
          v173 -= 36000;
        }
        if (v173 < -17999) {
          v173 += 36000;
        }
        double v160 = (double)v173 / 100.0;
        goto LABEL_181;
      }
      BOOL v147 = 0;
      double v148 = 0.0;
LABEL_213:
      uint64_t v190 = (void *)(v203 + 80);
      if (sub_6A05E0(v214, (uint64_t)v205, (uint64_t)&v223, &v219, v148))
      {
        *(_DWORD *)(v206 + 24) = 3;
        uint64_t v191 = *(void *)(sub_5A7C34(v190, *(void *)(v203 + 104)) + 32);
        if (v222 == v191
          && WORD2(v222) == WORD2(v191)
          && !(((v191 & 0x1000000000000) == 0) ^ (BYTE6(v222) == 0) | v147))
        {
          sub_69878C(v214, a2, v204, (int **)v203, v206, 1);
          uint64_t v192 = (unsigned __int16 *)(*((void *)&v227 + 1) - (int)**((_DWORD **)&v227 + 1));
          double v193 = 0.0;
          double v194 = 0.0;
          if (*v192 >= 0x13u)
          {
            uint64_t v195 = v192[9];
            if (v195)
            {
              LOWORD(v194) = *(_WORD *)(*((void *)&v227 + 1) + v195);
              double v194 = (double)*(unint64_t *)&v194;
            }
          }
          unint64_t v196 = (unsigned __int16 *)(*((void *)&v220 + 1) - (int)**((_DWORD **)&v220 + 1));
          if (*v196 >= 0x13u)
          {
            uint64_t v197 = v196[9];
            if (v197)
            {
              LOWORD(v193) = *(_WORD *)(*((void *)&v220 + 1) + v197);
              double v193 = (double)*(unint64_t *)&v193;
            }
          }
          if (v194 >= v193) {
            double v193 = v194;
          }
          LODWORD(v194) = *(_DWORD *)(v214 + 716);
          int v198 = *(_DWORD *)(v206 + 24);
          if (v193 > (double)*(unint64_t *)&v194) {
            int v198 = 3;
          }
          *(_DWORD *)(v206 + 24) = v198;
          *(void *)(v206 + 176) = sub_699998((uint64_t *)v214, v206);
        }
        long long __src = v220;
        long long v231 = v221;
        unint64_t v232 = v222;
        uint64_t v10 = 1;
        sub_4721B0((void *)(v214 + 144), (char *)&__src, (char *)v233, 1uLL);
        *(void *)(v214 + 168) = 0;
        *(_DWORD *)(v214 + 176) = 4;
        *(unsigned char *)(v206 + 168) = 1;
        return v10;
      }
      if (!sub_53F3B0(v214, (int **)&v227, (int **)&v220, &v218))
      {
        sub_693CB0(v206);
        return 0;
      }
      sub_6921A0(*(void *)v214, v222, 1, 1, (uint64_t)&__src);
      if (sub_69C254(v214, (int **)&v227, (int **)&__src))
      {
        *(_DWORD *)(v206 + 24) = 4;
        goto LABEL_232;
      }
      if (v215
        || v147
        || (unint64_t v201 = *(void *)(sub_5A7C34(v190, *(void *)(v203 + 104)) + 32), v222 != v201)
        || WORD2(v222) != WORD2(v201)
        || (HIWORD(v201) & 1) == (BYTE6(v222) == 0))
      {
        long long __src = v220;
        long long v231 = v221;
        unint64_t v232 = v222;
        sub_6A0AA4(__p, &__src, 1uLL);
        uint64_t v199 = v214;
        *(_DWORD *)(v206 + 24) = sub_69813C(v214, (int **)&v227, __p, 0, 0xFFFFFFFFFFFFFFFFLL);
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }
      }
      else
      {
        sub_69878C(v214, a2, v204, (int **)v203, v206, 1);
        *(void *)(v206 + 176) = sub_699998((uint64_t *)v214, v206);
LABEL_232:
        uint64_t v199 = v214;
      }
      *(_DWORD *)(v199 + 176) = 4;
      if (v215)
      {
        uint64_t v202 = sub_46C8EC(a2, v204 + 1);
        sub_68E0EC((uint64_t *)v214, v202, (uint64_t)&__src);
        uint64_t v199 = v214;
      }
      else
      {
        long long __src = v227;
        long long v231 = v228;
        unint64_t v232 = v229;
      }
      *(unsigned char *)(v206 + 168) = sub_53F2A4(v199, (uint64_t)&v227, (int **)&__src, (int **)&v220);
      return 1;
    }
  }
  else
  {
LABEL_139:
    uint64_t v10 = 0;
    if (v130 != v132) {
      goto LABEL_140;
    }
  }
  return v10;
}

void sub_69FEE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22)
{
  if (__p)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_69FF10(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  if (!*(unsigned char *)(a1 + 859)) {
    return 0;
  }
  uint64_t v7 = (uint64_t *)a1;
  uint64_t v8 = sub_46C8EC(a2, a3);
  unsigned int v9 = (int *)*v7;
  unint64_t v10 = sub_2E68E8(*v7, *(void *)(v8 + 32));
  sub_3BDB4C(v9, v10, &__p);
  uint64_t v11 = v62;
  if ((v62 & 0x80u) != 0) {
    uint64_t v11 = v61;
  }
  if (v11)
  {
    __s1 = *(void **)(v8 + 32);
    sub_2D5B74((char **)a4, &__s1);
    unint64_t v12 = sub_46C760(a2);
    unint64_t v55 = a3 + 1;
    if (a3 + 1 > v12) {
      unint64_t v13 = a3 + 1;
    }
    else {
      unint64_t v13 = v12;
    }
    unint64_t v56 = v13;
    if (a3 + 1 < v12)
    {
      uint64_t v14 = 0;
      unint64_t v15 = a3 + 1;
      uint64_t v54 = (int **)v8;
      while (1)
      {
        uint64_t v16 = sub_46C8EC(a2, v15);
        __s1 = *(void **)(v16 + 32);
        sub_2D5B74((char **)a4, &__s1);
        uint64_t v17 = v7;
        uint64_t v18 = *v7;
        uint64_t v19 = *(void *)(v16 + 32);
        double v20 = (int *)sub_2D5D58(v18, v19 & 0xFFFFFFFFFFFFLL);
        if (*(unsigned char *)(v18 + 7772)) {
          sub_2DB8E0(v18 + 3896, v19, 0);
        }
        sub_2E5C38(v18, v19 & 0xFFFFFFFFFFFFLL, 1);
        if (v14 > v17[92])
        {
          uint64_t v28 = 0;
          *(void *)(a4 + 8) = *(void *)a4;
          *(void *)(a4 + 48) = *(void *)(a4 + 40);
          *(void *)&long long v38 = -1;
          *((void *)&v38 + 1) = -1;
          *(_OWORD *)(a4 + 72) = v38;
          *(_OWORD *)(a4 + 88) = v38;
          *(_OWORD *)(a4 + 104) = v38;
          *(void *)(a4 + 120) = -1;
          *(void *)(a4 + 136) = -1;
          *(_DWORD *)(a4 + 24) = 0;
          *(_DWORD *)(a4 + 64) = 0;
          *(_DWORD *)(a4 + 128) = 0;
          *(_DWORD *)(a4 + 144) = 0;
          *(_OWORD *)(a4 + 152) = xmmword_20E2060;
          *(_WORD *)(a4 + 168) = 0;
          *(unsigned char *)(a4 + 170) = 0;
          *(void *)(a4 + 176) = 0;
          *(unsigned char *)(a4 + 188) = 0;
          *(unsigned char *)(a4 + 190) = 0;
          if (((char)v62 & 0x80000000) == 0) {
            return v28;
          }
          goto LABEL_73;
        }
        uint64_t v7 = v17;
        unint64_t v22 = (unsigned __int16 *)((char *)v20 - *v20);
        if (*v22 < 0x2Fu) {
          break;
        }
        uint64_t v23 = v22[23];
        if (!v23) {
          break;
        }
        unsigned int v24 = *((unsigned __int8 *)v20 + v23);
        BOOL v25 = v24 > 0x2A;
        uint64_t v26 = (1 << v24) & 0x50400004000;
        if (v25 || v26 == 0) {
          break;
        }
        v14 += sub_46CCC8(a2, v15++, v21);
        if (v56 == v15) {
          goto LABEL_72;
        }
      }
      uint64_t v29 = (int *)*v17;
      unint64_t v30 = sub_2E68E8(*v17, *(void *)(v16 + 32));
      sub_3BDB4C(v29, v30, &__s1);
      if ((v59 & 0x80u) == 0) {
        size_t v31 = v59;
      }
      else {
        size_t v31 = __n;
      }
      uint64_t v32 = v62;
      if ((v62 & 0x80u) != 0) {
        uint64_t v32 = v61;
      }
      if (v31 == v32)
      {
        if ((v62 & 0x80u) == 0) {
          p_p = (unsigned __int8 *)&__p;
        }
        else {
          p_p = (unsigned __int8 *)__p;
        }
        uint64_t v34 = v54;
        if ((v59 & 0x80) != 0)
        {
          unint64_t v37 = __s1;
          if (memcmp(__s1, p_p, __n)) {
            unint64_t v15 = -1;
          }
          goto LABEL_46;
        }
        if (v59)
        {
          p_s1 = &__s1;
          uint64_t v36 = v59;
          while (*(unsigned __int8 *)p_s1 == *p_p)
          {
            p_s1 = (void **)((char *)p_s1 + 1);
            ++p_p;
            if (!--v36) {
              goto LABEL_40;
            }
          }
          unint64_t v15 = -1;
          if ((v59 & 0x80) != 0)
          {
LABEL_41:
            unint64_t v37 = __s1;
LABEL_46:
            operator delete(v37);
          }
        }
      }
      else
      {
        unint64_t v15 = -1;
        uint64_t v34 = v54;
LABEL_40:
        if ((v59 & 0x80) != 0) {
          goto LABEL_41;
        }
      }
      if (v15 == -1 || v15 <= v55) {
        goto LABEL_72;
      }
      BOOL v39 = (int **)sub_46C8EC(a2, v15);
      unint64_t v40 = (unsigned __int16 *)((char *)*v34 - **v34);
      unsigned int v41 = *v40;
      if (*((unsigned char *)v34 + 38))
      {
        if (v41 < 0x49 || (unsigned int v42 = v40[36]) == 0)
        {
LABEL_56:
          __int16 v43 = -1;
LABEL_57:
          uint64_t v44 = (unsigned __int16 *)((char *)*v39 - **v39);
          unsigned int v45 = *v44;
          if (*((unsigned char *)v39 + 38))
          {
            if (v45 < 0x4B || (unsigned int v46 = v44[37]) == 0)
            {
LABEL_64:
              int v47 = 0xFFFF;
              goto LABEL_65;
            }
          }
          else
          {
            if (v45 < 0x49) {
              goto LABEL_64;
            }
            unsigned int v46 = v44[36];
            if (!v46) {
              goto LABEL_64;
            }
          }
          int v47 = *(unsigned __int16 *)((char *)*v39 + v46);
LABEL_65:
          unsigned __int16 v48 = v43 + 18000;
          unsigned __int16 v49 = v43 - 18000;
          if ((unsigned __int16)(v48 >> 5) < 0x465u) {
            unsigned __int16 v49 = v48;
          }
          int v50 = v47 - v49;
          if (v50 > 18000) {
            v50 -= 36000;
          }
          if (v50 < -17999) {
            v50 += 36000;
          }
          int16x4_t v51 = (int16x4_t)0x4059000000000000;
          v51.i16[0] = *((_WORD *)v17 + 372);
          if (fabs((double)v50 / 100.0) >= (double)vmovl_s16(v51).i32[0]) {
            goto LABEL_72;
          }
          *(_DWORD *)(a4 + 24) = 0;
          uint64_t v28 = 1;
          if (((char)v62 & 0x80000000) == 0) {
            return v28;
          }
          goto LABEL_73;
        }
      }
      else
      {
        if (v41 < 0x4B) {
          goto LABEL_56;
        }
        unsigned int v42 = v40[37];
        if (!v42) {
          goto LABEL_56;
        }
      }
      __int16 v43 = *(_WORD *)((char *)*v34 + v42);
      goto LABEL_57;
    }
LABEL_72:
    uint64_t v28 = 0;
    *(void *)(a4 + 8) = *(void *)a4;
    *(void *)(a4 + 48) = *(void *)(a4 + 40);
    *(void *)&long long v52 = -1;
    *((void *)&v52 + 1) = -1;
    *(_OWORD *)(a4 + 72) = v52;
    *(_OWORD *)(a4 + 88) = v52;
    *(_OWORD *)(a4 + 104) = v52;
    *(void *)(a4 + 120) = -1;
    *(void *)(a4 + 136) = -1;
    *(_DWORD *)(a4 + 24) = 0;
    *(_DWORD *)(a4 + 64) = 0;
    *(_DWORD *)(a4 + 128) = 0;
    *(_DWORD *)(a4 + 144) = 0;
    *(_OWORD *)(a4 + 152) = xmmword_20E2060;
    *(_WORD *)(a4 + 168) = 0;
    *(unsigned char *)(a4 + 170) = 0;
    *(void *)(a4 + 176) = 0;
    *(unsigned char *)(a4 + 188) = 0;
    *(unsigned char *)(a4 + 190) = 0;
    if ((char)v62 < 0) {
LABEL_73:
    }
      operator delete(__p);
  }
  else
  {
    uint64_t v28 = 0;
    if ((char)v62 < 0) {
      goto LABEL_73;
    }
  }
  return v28;
}

void sub_6A03E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_6A0418(uint64_t **a1, void **a2)
{
  unint64_t v4 = *a1;
  uint64_t v5 = **a1;
  uint64_t v6 = *(void *)(sub_46C8EC(*a2, (uint64_t)a2[1]) + 32);
  uint64_t v7 = (int *)sub_2D5D58(v5, v6 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v5 + 7772))
  {
    uint64_t v8 = sub_2DB8E0(v5 + 3896, v6, 0);
    unsigned int v9 = &v8[-*(int *)v8];
    if (*(unsigned __int16 *)v9 < 5u)
    {
      uint64_t v10 = 0;
    }
    else
    {
      uint64_t v10 = *((unsigned __int16 *)v9 + 2);
      if (v10) {
        v10 += (uint64_t)&v8[*(unsigned int *)&v8[v10]];
      }
    }
    uint64_t v11 = (int *)(v10 + 4 * WORD2(v6) + 4 + *(unsigned int *)(v10 + 4 * WORD2(v6) + 4));
  }
  else
  {
    uint64_t v11 = 0;
  }
  v25[0] = v7;
  v25[1] = v11;
  v25[2] = (int *)sub_2E5C38(v5, v6 & 0xFFFFFFFFFFFFLL, 1);
  v25[3] = v12;
  int v26 = v6;
  __int16 v27 = WORD2(v6);
  BOOL v28 = (v6 & 0xFF000000000000) != 0;
  uint64_t v14 = (unsigned __int16 *)((char *)v7 - *v7);
  if (*v14 >= 0x2Fu)
  {
    uint64_t v15 = v14[23];
    if (v15)
    {
      unsigned int v16 = *((unsigned __int8 *)v7 + v15);
      BOOL v17 = v16 > 0x36;
      uint64_t v18 = (1 << v16) & 0x44000000000008;
      if (!v17 && v18 != 0) {
        return 0;
      }
    }
  }
  double v20 = (int *)*a1[1];
  double v21 = (unsigned __int16 *)((char *)v20 - *v20);
  unsigned int v22 = *v21;
  if (v22 < 0x2F)
  {
    if (v22 < 0xB) {
      return 0;
    }
    goto LABEL_20;
  }
  if (!v21[23] || *((unsigned char *)v20 + v21[23]) != 23)
  {
LABEL_20:
    uint64_t v23 = v21[5];
    if (!v23 || (*((unsigned char *)v20 + v23) & 4) == 0) {
      return 0;
    }
  }
  if (*((unsigned char *)v4 + 713) && sub_46CCC8(*a2, (unint64_t)a2[1], v13) <= v4[91]) {
    return sub_6D862C(v4 + 145, v25);
  }
  return 0;
}

uint64_t sub_6A05E0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, double a5)
{
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v11 = *(void *)a1;
  unint64_t v12 = (int *)sub_2D5D58(*(void *)a1, v10 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v11 + 7772))
  {
    double v13 = sub_2DB8E0(v11 + 3896, v10, 0);
    uint64_t v14 = &v13[-*(int *)v13];
    if (*(unsigned __int16 *)v14 < 5u)
    {
      uint64_t v15 = 0;
    }
    else
    {
      uint64_t v15 = *((unsigned __int16 *)v14 + 2);
      if (v15) {
        v15 += (uint64_t)&v13[*(unsigned int *)&v13[v15]];
      }
    }
    unsigned int v16 = (int *)(v15 + 4 * WORD2(v10) + 4 + *(unsigned int *)(v15 + 4 * WORD2(v10) + 4));
  }
  else
  {
    unsigned int v16 = 0;
  }
  v66[0] = v12;
  v66[1] = v16;
  v66[2] = (int *)sub_2E5C38(v11, v10 & 0xFFFFFFFFFFFFLL, 1);
  v66[3] = v17;
  int v67 = v10;
  __int16 v68 = WORD2(v10);
  BOOL v69 = (v10 & 0xFF000000000000) != 0;
  uint64_t v18 = *(void *)(a3 + 32);
  uint64_t v19 = *(void *)a1;
  double v20 = (int *)sub_2D5D58(*(void *)a1, v18 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v19 + 7772))
  {
    double v21 = sub_2DB8E0(v19 + 3896, v18, 0);
    unsigned int v22 = &v21[-*(int *)v21];
    if (*(unsigned __int16 *)v22 < 5u)
    {
      uint64_t v23 = 0;
    }
    else
    {
      uint64_t v23 = *((unsigned __int16 *)v22 + 2);
      if (v23) {
        v23 += (uint64_t)&v21[*(unsigned int *)&v21[v23]];
      }
    }
    unsigned int v24 = (int *)(v23 + 4 * WORD2(v18) + 4 + *(unsigned int *)(v23 + 4 * WORD2(v18) + 4));
  }
  else
  {
    unsigned int v24 = 0;
  }
  v62[0] = v20;
  v62[1] = v24;
  v62[2] = (int *)sub_2E5C38(v19, v18 & 0xFFFFFFFFFFFFLL, 1);
  v62[3] = v25;
  int v63 = v18;
  __int16 v64 = WORD2(v18);
  BOOL v65 = (v18 & 0xFF000000000000) != 0;
  double v26 = sub_2E3ED8(*(void *)a1, (uint64_t)v66, (uint64_t)v62) * 100.0;
  if (v26 >= 0.0)
  {
    double v27 = v26;
    if (v26 >= 4.50359963e15) {
      goto LABEL_23;
    }
    uint64_t v28 = (uint64_t)(v26 + v26) + 1;
  }
  else
  {
    double v27 = v26;
    if (v26 <= -4.50359963e15) {
      goto LABEL_23;
    }
    uint64_t v28 = (uint64_t)(v26 + v26);
    if (v28 >= 1) {
      --v28;
    }
  }
  double v27 = (double)(v28 >> 1);
LABEL_23:
  if (v27 < 9.22337204e18)
  {
    if (v26 >= 0.0)
    {
      if (v26 < 4.50359963e15)
      {
        uint64_t v29 = (uint64_t)(v26 + v26) + 1;
LABEL_32:
        double v26 = (double)(v29 >> 1);
      }
    }
    else if (v26 > -4.50359963e15)
    {
      uint64_t v29 = (uint64_t)(v26 + v26);
      if (v29 >= 1) {
        --v29;
      }
      goto LABEL_32;
    }
    uint64_t v30 = (uint64_t)v26;
    goto LABEL_34;
  }
  uint64_t v30 = 0x7FFFFFFFFFFFFFFELL;
LABEL_34:
  uint64_t v61 = v30;
  if (!sub_53F220(a1, (char **)v66, (char **)v62, &v61) || *(unsigned char *)(a1 + 1008)) {
    return 0;
  }
  double v33 = sub_6A2704(*(void *)a1, v66, v62);
  double v34 = sub_6D82EC(a1 + 1160, v66, v62);
  uint64_t v31 = 0;
  double v35 = *(double *)(a1 + 200);
  if (v35 <= a5 && fabs(v34) < v35)
  {
    if (fabs(v33) < *(double *)(a1 + 984)) {
      return 0;
    }
    uint64_t v36 = *(void *)a1;
    uint64_t v37 = *(void *)(a2 + 32);
    long long v38 = (int *)sub_2D5D58(*(void *)a1, v37 & 0xFFFFFFFFFFFFLL);
    if (*(unsigned char *)(v36 + 7772))
    {
      BOOL v39 = sub_2DB8E0(v36 + 3896, v37, 0);
      unint64_t v40 = &v39[-*(int *)v39];
      if (*(unsigned __int16 *)v40 < 5u)
      {
        uint64_t v41 = 0;
      }
      else
      {
        uint64_t v41 = *((unsigned __int16 *)v40 + 2);
        if (v41) {
          v41 += (uint64_t)&v39[*(unsigned int *)&v39[v41]];
        }
      }
      unsigned int v42 = (int *)(v41 + 4 * WORD2(v37) + 4 + *(unsigned int *)(v41 + 4 * WORD2(v37) + 4));
    }
    else
    {
      unsigned int v42 = 0;
    }
    v57[0] = v38;
    v57[1] = v42;
    v57[2] = (int *)sub_2E5C38(v36, v37 & 0xFFFFFFFFFFFFLL, 1);
    v57[3] = v43;
    int v58 = v37;
    __int16 v59 = WORD2(v37);
    BOOL v60 = (v37 & 0xFF000000000000) != 0;
    uint64_t v44 = *(void *)a1;
    uint64_t v45 = *(void *)(a3 + 32);
    unsigned int v46 = (int *)sub_2D5D58(*(void *)a1, v45 & 0xFFFFFFFFFFFFLL);
    if (*(unsigned char *)(v44 + 7772))
    {
      int v47 = sub_2DB8E0(v44 + 3896, v45, 0);
      unsigned __int16 v48 = &v47[-*(int *)v47];
      if (*(unsigned __int16 *)v48 < 5u)
      {
        uint64_t v49 = 0;
      }
      else
      {
        uint64_t v49 = *((unsigned __int16 *)v48 + 2);
        if (v49) {
          v49 += (uint64_t)&v47[*(unsigned int *)&v47[v49]];
        }
      }
      int v50 = (int *)(v49 + 4 * WORD2(v45) + 4 + *(unsigned int *)(v49 + 4 * WORD2(v45) + 4));
    }
    else
    {
      int v50 = 0;
    }
    uint64_t v31 = 1;
    v53[0] = v46;
    v53[1] = v50;
    v53[2] = (int *)sub_2E5C38(v44, v45 & 0xFFFFFFFFFFFFLL, 1);
    v53[3] = v51;
    int v54 = v45;
    __int16 v55 = WORD2(v45);
    BOOL v56 = (v45 & 0xFF000000000000) != 0;
    unsigned int v52 = sub_53EA04(a1, v57, v53);
    if (*a4 < *(void *)(a1 + 1000))
    {
      if (v61 > *(void *)(a1 + 992)) {
        return 1;
      }
      else {
        return v52;
      }
    }
  }
  return v31;
}

void *sub_6A0AA4(void *a1, const void *a2, unint64_t a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a3)
  {
    if (a3 >= 0x666666666666667) {
      sub_2E00();
    }
    size_t v5 = 40 * a3;
    uint64_t v6 = (char *)operator new(40 * a3);
    *a1 = v6;
    a1[1] = v6;
    uint64_t v7 = &v6[v5];
    a1[2] = &v6[v5];
    memmove(v6, a2, v5);
    a1[1] = v7;
  }
  return a1;
}

void sub_6A0B2C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6A0B48(uint64_t a1, void *a2, void *a3, int **a4, int **a5, int a6, int a7)
{
  BOOL v14 = sub_6D855C(a1 + 1160, a4);
  uint64_t v15 = *a4;
  uint64_t v16 = **a4;
  if (!v14)
  {
    uint64_t v23 = (char *)v15 - v16;
    unsigned int v24 = *(unsigned __int16 *)((char *)v15 - v16);
    if (*((unsigned char *)a4 + 38))
    {
      if (v24 < 0xB) {
        return 0;
      }
      unsigned int v25 = *((unsigned __int16 *)v23 + 5);
      if (!v25 || (*(int *)((char *)v15 + v25) & 2) == 0) {
        return 0;
      }
    }
    else
    {
      if (v24 < 0xB) {
        return 0;
      }
      unsigned int v35 = *((unsigned __int16 *)v23 + 5);
      if (!v35 || (*(int *)((char *)v15 + v35) & 1) == 0) {
        return 0;
      }
    }
  }
  uint64_t v17 = -v16;
  if (*(unsigned __int16 *)((char *)v15 + v17) >= 0x2Fu && *(_WORD *)((char *)v15 + v17 + 46))
  {
    unsigned int v18 = *((unsigned __int8 *)v15 + *(unsigned __int16 *)((char *)v15 + v17 + 46));
    BOOL v19 = v18 > 0x36;
    uint64_t v20 = (1 << v18) & 0x44000000000008;
    if (!v19 && v20 != 0) {
      return 0;
    }
  }
  if (a6)
  {
    if (sub_69EB54(a1, a4, a5, a7)) {
      return 0;
    }
    uint64_t v15 = *a4;
    uint64_t v17 = -(uint64_t)**a4;
  }
  double v26 = (unsigned __int16 *)((char *)v15 + v17);
  if (*v26 >= 0x2Fu)
  {
    uint64_t v27 = v26[23];
    if (v27)
    {
      if ((*((unsigned __int8 *)v15 + v27) | 2) == 0xA) {
        return 0;
      }
    }
  }
  double v28 = sub_6A2704(*(void *)a1, a5, a4);
  uint64_t v29 = *a4;
  uint64_t v30 = (unsigned __int16 *)((char *)*a4 - **a4);
  unsigned int v31 = *v30;
  if (v31 >= 0x2F)
  {
    uint64_t v36 = v30[23];
    if (v30[23])
    {
      LOBYTE(v32) = 0;
      switch(*((unsigned char *)v29 + v36))
      {
        case 6:
        case 0xC:
        case 0x2B:
          uint64_t v32 = v30[5];
          if (!v30[5]) {
            goto LABEL_34;
          }
          if ((*((unsigned char *)v29 + v32 + 2) & 0x20) != 0) {
            goto LABEL_49;
          }
          LOBYTE(v32) = 0;
          double v33 = *a5;
          double v34 = (unsigned __int16 *)((char *)*a5 - **a5);
          if (*v34 < 0x2Fu) {
            goto LABEL_50;
          }
          goto LABEL_35;
        case 0x2C:
          goto LABEL_34;
        default:
LABEL_49:
          LOBYTE(v32) = *((unsigned char *)v29 + v36) != 14;
          double v33 = *a5;
          double v34 = (unsigned __int16 *)((char *)*a5 - **a5);
          if (*v34 < 0x2Fu) {
            goto LABEL_50;
          }
          goto LABEL_35;
      }
    }
    LOBYTE(v32) = 1;
LABEL_34:
    double v33 = *a5;
    double v34 = (unsigned __int16 *)((char *)*a5 - **a5);
    if (*v34 < 0x2Fu) {
      goto LABEL_50;
    }
  }
  else
  {
    LOBYTE(v32) = 1;
    double v33 = *a5;
    double v34 = (unsigned __int16 *)((char *)*a5 - **a5);
    if (*v34 < 0x2Fu) {
      goto LABEL_50;
    }
  }
LABEL_35:
  if (v34[23])
  {
    unsigned int v37 = *((unsigned __int8 *)v33 + v34[23]);
    BOOL v19 = v37 > 0x36;
    uint64_t v38 = (1 << v37) & 0x44000000000008;
    if (!v19 && v38 != 0)
    {
      uint64_t v40 = v34[5];
      if (v40)
      {
        if (*((unsigned char *)a5 + 38)) {
          int v41 = 2;
        }
        else {
          int v41 = 1;
        }
        int v42 = *(int *)((char *)v33 + v40);
        if ((v42 & v41) == 0) {
          LOBYTE(v32) = 1;
        }
        if (v32 & 1) == 0 && (((v28 < 0.0) ^ ((unsigned __int16)(v42 & 0x8000) >> 15))) {
          return 0;
        }
      }
    }
  }
LABEL_50:
  __int16 v43 = (unsigned __int16 *)(*a3 - *(int *)*a3);
  if (*v43 >= 0x43u && (uint64_t v44 = v43[33]) != 0)
  {
    if (v31 < 0x2F || *(unsigned __int8 *)(*a3 + v44) >= *(_DWORD *)(a1 + 688)) {
      goto LABEL_68;
    }
  }
  else if (v31 < 0x2F || *(_DWORD *)(a1 + 688) == 0)
  {
    goto LABEL_68;
  }
  uint64_t v47 = v30[23];
  if (v47)
  {
    unsigned int v48 = *((unsigned __int8 *)v29 + v47);
    BOOL v19 = v48 > 0x2F;
    uint64_t v49 = (1 << v48) & 0xE2E040048000;
    if (!v19 && v49 != 0)
    {
      unint64_t v51 = sub_2E68E8(*(void *)a1, (uint64_t)a4[4]);
      if (v51 > 0xFFFFFFFEFFFFFFFFLL || !v51)
      {
        uint64_t result = sub_6906B4((char **)a4);
        unsigned int v52 = *a4;
        unint64_t v53 = (unsigned __int16 *)((char *)*a4 - **a4);
        if (*v53 < 0xBu) {
          return result;
        }
        goto LABEL_69;
      }
    }
  }
LABEL_68:
  uint64_t result = 1;
  unsigned int v52 = *a4;
  unint64_t v53 = (unsigned __int16 *)((char *)*a4 - **a4);
  if (*v53 < 0xBu) {
    return result;
  }
LABEL_69:
  uint64_t v54 = v53[5];
  if (v54 && (*((unsigned char *)v52 + v54 + 2) & 2) != 0)
  {
    __int16 v55 = (unsigned __int16 *)(*a2 - *(int *)*a2);
    if (*v55 >= 0xBu)
    {
      uint64_t v56 = v55[5];
      if (v56) {
        return result & (*(unsigned __int8 *)(*a2 + v56 + 2) >> 1);
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_6A0FFC(uint64_t a1, void *a2, char a3)
{
  uint64_t v3 = *a2;
  unint64_t v4 = *(int **)(*a2 + 8);
  size_t v5 = (unsigned __int16 *)((char *)v4 - *v4);
  unsigned int v6 = *v5;
  if (a3)
  {
    if (*(unsigned char *)(*a2 + 38))
    {
      if (v6 < 5) {
        goto LABEL_18;
      }
      unsigned int v7 = v5[2];
      if (!v7) {
        goto LABEL_18;
      }
LABEL_12:
      uint64_t result = *(unsigned __int16 *)((char *)v4 + v7);
      uint64_t v9 = a2[1];
      if (v9 - v3 == 40) {
        return result;
      }
      goto LABEL_13;
    }
    goto LABEL_7;
  }
  if (*(unsigned char *)(*a2 + 38))
  {
LABEL_7:
    if (v6 >= 9)
    {
      unsigned int v7 = v5[4];
      if (v7) {
        goto LABEL_12;
      }
    }
    goto LABEL_18;
  }
  if (v6 >= 5)
  {
    unsigned int v7 = v5[2];
    if (v7) {
      goto LABEL_12;
    }
  }
LABEL_18:
  uint64_t result = 0;
  uint64_t v9 = a2[1];
  if (v9 - v3 == 40) {
    return result;
  }
LABEL_13:
  int v10 = *(unsigned __int8 *)(v9 - 2);
  uint64_t v11 = *(int **)(v9 - 32);
  unint64_t v12 = (unsigned __int16 *)((char *)v11 - *v11);
  unsigned int v13 = *v12;
  if ((a3 & 1) == 0)
  {
    if (!v10)
    {
      if (v13 < 5) {
        goto LABEL_27;
      }
      unsigned int v14 = v12[2];
      if (!v14) {
        goto LABEL_27;
      }
      goto LABEL_26;
    }
    goto LABEL_21;
  }
  if (!v10)
  {
LABEL_21:
    if (v13 < 9) {
      goto LABEL_27;
    }
    unsigned int v14 = v12[4];
    if (!v14) {
      goto LABEL_27;
    }
    goto LABEL_26;
  }
  if (v13 < 5 || (unsigned int v14 = v12[2]) == 0)
  {
LABEL_27:
    int v15 = 0;
    goto LABEL_28;
  }
LABEL_26:
  int v15 = *(unsigned __int16 *)((char *)v11 + v14);
LABEL_28:
  int v16 = v15 - result;
  if (v16 > 18000) {
    v16 -= 36000;
  }
  if (v16 < -17999) {
    v16 += 36000;
  }
  int v17 = vcvtad_u64_f64((double)v16 / 100.0 * 0.5 * 100.0) + result;
  return (v17 + (v17 < 0 ? 0x8CA0 : 0)) % 0x8CA0u;
}

void sub_6A115C(uint64_t a1, void *a2, uint64_t a3, int a4, uint64_t a5)
{
  *(_DWORD *)(a5 + 32) = 0;
  *(_OWORD *)a5 = 0u;
  *(_OWORD *)(a5 + 16) = 0u;
  *(_WORD *)(a5 + 36) = -1;
  *(unsigned char *)(a5 + 38) = 0;
  *(_OWORD *)(a5 + 40) = 0u;
  *(_OWORD *)(a5 + 56) = 0u;
  *(_DWORD *)(a5 + 72) = 0;
  *(_WORD *)(a5 + 76) = -1;
  *(unsigned char *)(a5 + 78) = 0;
  uint64_t v8 = (char **)(a5 + 80);
  *(void *)(a5 + 88) = *(void *)(a5 + 80);
  *(void *)(a5 + 104) = -1;
  *(_DWORD *)(a5 + 112) = 0;
  uint64_t v9 = sub_46C8EC(a2, a3);
  uint64_t v10 = *(void *)a1;
  unint64_t v80 = (int **)v9;
  uint64_t v11 = *(void *)(v9 + 32);
  unint64_t v12 = (int *)sub_2D5D58(*(void *)a1, v11 & 0xFFFFFFFFFFFFLL);
  unint64_t v82 = v8;
  if (*(unsigned char *)(v10 + 7772))
  {
    unsigned int v13 = sub_2DB8E0(v10 + 3896, v11, 0);
    unsigned int v14 = &v13[-*(int *)v13];
    if (*(unsigned __int16 *)v14 < 5u)
    {
      uint64_t v15 = 0;
    }
    else
    {
      uint64_t v15 = *((unsigned __int16 *)v14 + 2);
      if (v15) {
        v15 += (uint64_t)&v13[*(unsigned int *)&v13[v15]];
      }
    }
    uint64_t v16 = v15 + 4 * WORD2(v11) + 4 + *(unsigned int *)(v15 + 4 * WORD2(v11) + 4);
  }
  else
  {
    uint64_t v16 = 0;
  }
  *(void *)&long long v90 = v12;
  *((void *)&v90 + 1) = v16;
  *(void *)&long long v91 = sub_2E5C38(v10, v11 & 0xFFFFFFFFFFFFLL, 1);
  *((void *)&v91 + 1) = v17;
  LODWORD(v92) = v11;
  WORD2(v92) = WORD2(v11);
  unint64_t v18 = a3 + 1;
  BYTE6(v92) = (v11 & 0xFF000000000000) != 0;
  uint64_t v19 = sub_46C8EC(a2, a3 + 1);
  uint64_t v20 = *(void *)a1;
  unint64_t v84 = (int **)v19;
  uint64_t v21 = *(void *)(v19 + 32);
  BOOL v83 = (int *)sub_2D5D58(*(void *)a1, v21 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v20 + 7772))
  {
    unsigned int v22 = sub_2DB8E0(v20 + 3896, v21, 0);
    uint64_t v23 = &v22[-*(int *)v22];
    if (*(unsigned __int16 *)v23 < 5u)
    {
      uint64_t v24 = 0;
    }
    else
    {
      uint64_t v24 = *((unsigned __int16 *)v23 + 2);
      if (v24) {
        v24 += (uint64_t)&v22[*(unsigned int *)&v22[v24]];
      }
    }
    uint64_t v25 = v24 + 4 * WORD2(v21) + 4 + *(unsigned int *)(v24 + 4 * WORD2(v21) + 4);
  }
  else
  {
    uint64_t v25 = 0;
  }
  *(void *)&long long v86 = v83;
  *((void *)&v86 + 1) = v25;
  uint64_t v87 = sub_2E5C38(v20, v21 & 0xFFFFFFFFFFFFLL, 1);
  uint64_t v88 = v26;
  LODWORD(v89) = v21;
  WORD2(v89) = WORD2(v21);
  BYTE6(v89) = (v21 & 0xFF000000000000) != 0;
  long long v27 = v91;
  *(_OWORD *)a5 = v90;
  *(_OWORD *)(a5 + 16) = v27;
  *(void *)(a5 + 32) = v92;
  double v28 = (unsigned __int16 *)((char *)v12 - *v12);
  unsigned int v29 = *v28;
  if (v29 < 0x2F
    || (uint64_t v30 = v28[23]) == 0
    || ((unsigned int v31 = *((unsigned __int8 *)v12 + v30), v32 = v31 > 0x36, v33 = (1 << v31) & 0x44000000000008, !v32)
      ? (BOOL v34 = v33 == 0)
      : (BOOL v34 = 1),
        v34))
  {
    BOOL v39 = (unsigned __int16 *)((char *)v83 - *v83);
    if (*v39 >= 0x2Fu && (uint64_t v40 = v39[23]) != 0)
    {
      unsigned int v41 = *((unsigned __int8 *)v83 + v40);
      BOOL v32 = v41 > 0x36;
      unint64_t v42 = (0x44000000000008uLL >> v41) & 1;
      if (v32) {
        int v35 = 0;
      }
      else {
        int v35 = v42;
      }
      unsigned int v37 = v82;
      uint64_t v36 = a3;
      int v38 = a4;
      if (a3) {
        goto LABEL_37;
      }
    }
    else
    {
      int v35 = 0;
      unsigned int v37 = v82;
      uint64_t v36 = a3;
      int v38 = a4;
      if (a3) {
        goto LABEL_37;
      }
    }
    if (v29 < 0x2F || (LODWORD(v30) = v28[23]) == 0)
    {
      int v43 = 1;
      goto LABEL_38;
    }
  }
  else
  {
    int v35 = 0;
    uint64_t v36 = a3;
    if (a3)
    {
      unsigned int v37 = v82;
      int v38 = a4;
LABEL_37:
      int v43 = v35 | sub_6618C0(a1 + 3048, v80) ^ 1;
      goto LABEL_38;
    }
    unsigned int v37 = v82;
    int v38 = a4;
  }
  unsigned int v44 = *((unsigned __int8 *)v12 + v30);
  int v43 = 1;
  if (v44 <= 0x36 && ((1 << v44) & 0x44000000000008) != 0) {
    goto LABEL_37;
  }
LABEL_38:
  if (v38 && (sub_6618C0(a1 + 3048, v84) & v43) == 1)
  {
    sub_68E1D8(a1, &v90, v37, 0);
    uint64_t v45 = *(void *)(a5 + 88);
    unint64_t v46 = sub_46C760(a2);
    if (v18 <= v46) {
      unint64_t v47 = v46;
    }
    else {
      unint64_t v47 = a3 + 1;
    }
    if (v18 < v46) {
      goto LABEL_53;
    }
  }
  else
  {
    sub_2E44A4(*(void *)a1, (uint64_t)&v90, v37);
    sub_6D7A20(a1 + 1160, (uint64_t)&v90, (uint64_t *)v37);
    uint64_t v45 = *(void *)(a5 + 88);
    unint64_t v48 = sub_46C760(a2);
    if (v18 <= v48) {
      unint64_t v47 = v48;
    }
    else {
      unint64_t v47 = a3 + 1;
    }
    if (v18 < v48)
    {
      while (1)
      {
LABEL_53:
        uint64_t v51 = sub_46C8EC(a2, v18);
        uint64_t v45 = *(void *)(a5 + 80);
        uint64_t v49 = *(void *)(a5 + 88);
        if (v45 != v49)
        {
          while (1)
          {
            uint64_t v52 = *(void *)(v45 + 32);
            if (__PAIR64__(*(unsigned __int16 *)(v51 + 36), *(_DWORD *)(v51 + 32)) == __PAIR64__(WORD2(v52), v52)
              && ((v52 & 0xFF000000000000) == 0) != ((unint64_t)*(unsigned __int8 *)(v51 + 38) << 48 != 0))
            {
              break;
            }
            v45 += 40;
            if (v45 == v49) {
              goto LABEL_52;
            }
          }
        }
        if (v45 != v49) {
          break;
        }
LABEL_52:
        if (++v18 == v47)
        {
          unint64_t v50 = -1;
          uint64_t v45 = *(void *)(a5 + 88);
          if (*(unsigned char *)(a1 + 1040)) {
            goto LABEL_62;
          }
          goto LABEL_71;
        }
      }
      unint64_t v50 = v18 + 1;
      if (!*(unsigned char *)(a1 + 1040)) {
        goto LABEL_71;
      }
      goto LABEL_62;
    }
  }
  uint64_t v49 = *(void *)(a5 + 88);
  unint64_t v50 = -1;
  if (!*(unsigned char *)(a1 + 1040)) {
    goto LABEL_71;
  }
LABEL_62:
  if (v45 != v49)
  {
LABEL_71:
    uint64_t v49 = v45;
    goto LABEL_75;
  }
  if (sub_6618C0(a1 + 3048, v84))
  {
    uint64_t v53 = sub_6A183C((uint64_t *)a1, a2, v36, (long long **)v37);
    if (v53 != -1)
    {
      uint64_t v54 = v53;
      uint64_t v55 = sub_46C8EC(a2, v53);
      uint64_t v56 = *(void *)(a5 + 80);
      uint64_t v57 = *(void *)(a5 + 88);
      if (v56 == v57)
      {
        uint64_t v49 = *(void *)(a5 + 80);
      }
      else
      {
        unint64_t v58 = *(void *)(v55 + 32);
        uint64_t v59 = v58 & 0xFFFFFFFFFFFFLL;
        uint64_t v60 = HIWORD(v58) & 1;
        uint64_t v49 = *(void *)(a5 + 80);
        while (1)
        {
          uint64_t v61 = *(void *)(v49 + 32);
          if (v61 & 0xFFFFFFFFFFFFLL) == v59 && ((v60 ^ ((v61 & 0xFF000000000000) == 0))) {
            break;
          }
          v49 += 40;
          if (v49 == v57)
          {
            uint64_t v49 = *(void *)(a5 + 88);
            break;
          }
        }
      }
      *(void *)(a5 + 104) = 0xCCCCCCCCCCCCCCCDLL * ((v49 - v56) >> 3);
      unint64_t v50 = v54 + 1;
    }
  }
LABEL_75:
  char v62 = sub_6A1D48(a1, a2, v36, v50);
  if (v49 == *(void *)(a5 + 88) || (v62 & 1) != 0) {
    goto LABEL_101;
  }
  unint64_t v63 = sub_46C760(a2);
  if (v50 != -1)
  {
    unint64_t v64 = v36 + 2;
    if (v64 < v63)
    {
      if ((BOOL v65 = (unsigned __int16 *)((char *)v83 - *v83), *v65 < 0x2Fu)
        || (uint64_t v66 = v65[23]) == 0
        || ((v67 = *((unsigned __int8 *)v83 + v66), BOOL v32 = v67 > 0x36, v68 = (1 << v67) & 0x44000000000008, !v32)
          ? (BOOL v69 = v68 == 0)
          : (BOOL v69 = 1),
            v69))
      {
        if (sub_6618C0(a1 + 3048, v84))
        {
          sub_46B058();
          BOOL v71 = v70;
          unint64_t v73 = v64 + v72;
          sub_46B058();
          if (sub_6C88C0(v71, v73, v75, v74 + v50))
          {
LABEL_101:
            if (sub_6618C0(a1 + 3048, v84))
            {
              sub_2E44A4(*(void *)a1, (uint64_t)&v90, v37);
              sub_6D7A20(a1 + 1160, (uint64_t)&v90, (uint64_t *)v37);
              uint64_t v49 = *(void *)(a5 + 80);
              uint64_t v76 = *(void *)(a5 + 88);
              if (v49 != v76)
              {
                while (1)
                {
                  uint64_t v77 = *(void *)(v49 + 32);
                  if ((v77 & 0xFFFFFFFFFFFFLL) == (v89 & 0xFFFFFFFFFFFFLL)
                    && (HIWORD(v89) & 1) != ((v77 & 0xFF000000000000) == 0))
                  {
                    break;
                  }
                  v49 += 40;
                  if (v49 == v76)
                  {
                    uint64_t v78 = *(void *)(a5 + 80);
                    goto LABEL_97;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  uint64_t v78 = *(void *)(a5 + 80);
  if (v49 == *(void *)(a5 + 88))
  {
LABEL_97:
    *(void *)(a5 + 88) = v78;
    sub_64F484(v37, &v86);
    unint64_t v79 = 0;
  }
  else
  {
    unint64_t v79 = 0xCCCCCCCCCCCCCCCDLL * ((v49 - v78) >> 3);
  }
  *(void *)(a5 + 104) = v79;
}

uint64_t sub_6A183C(uint64_t *a1, void *a2, uint64_t a3, long long **a4)
{
  uint64_t v8 = sub_46C8EC(a2, a3);
  uint64_t v9 = *a1;
  uint64_t v10 = *(void *)(v8 + 32);
  uint64_t v11 = sub_2D5D58(*a1, v10 & 0xFFFFFFFFFFFFLL);
  uint64_t v59 = a4;
  if (*(unsigned char *)(v9 + 7772))
  {
    unint64_t v12 = sub_2DB8E0(v9 + 3896, v10, 0);
    unsigned int v13 = &v12[-*(int *)v12];
    if (*(unsigned __int16 *)v13 < 5u)
    {
      uint64_t v14 = 0;
    }
    else
    {
      uint64_t v14 = *((unsigned __int16 *)v13 + 2);
      if (v14) {
        v14 += (uint64_t)&v12[*(unsigned int *)&v12[v14]];
      }
    }
    uint64_t v15 = v14 + 4 * WORD2(v10) + 4 + *(unsigned int *)(v14 + 4 * WORD2(v10) + 4);
  }
  else
  {
    uint64_t v15 = 0;
  }
  v73[0] = v11;
  v73[1] = v15;
  v73[2] = sub_2E5C38(v9, v10 & 0xFFFFFFFFFFFFLL, 1);
  v73[3] = v16;
  int v74 = v10;
  __int16 v75 = WORD2(v10);
  unint64_t v17 = a3 + 1;
  BOOL v76 = (v10 & 0xFF000000000000) != 0;
  unint64_t v18 = sub_46C760(a2);
  if (a3 + 1 > v18) {
    unint64_t v19 = a3 + 1;
  }
  else {
    unint64_t v19 = v18;
  }
  if (v17 >= v18) {
    return -1;
  }
  uint64_t v20 = 0;
  while (1)
  {
    uint64_t v21 = sub_46C8EC(a2, v17);
    if ((sub_6618C0((uint64_t)(a1 + 381), (int **)v21) & 1) == 0) {
      break;
    }
    v20 += sub_46CCC8(a2, v17++, v22);
    if (v19 == v17) {
      return -1;
    }
  }
  uint64_t v23 = *(void *)(v21 + 32);
  unint64_t v24 = *(void *)(v8 + 32);
  if ((v23 & 0xFFFFFFFFFFFFLL) == (v24 & 0xFFFFFFFFFFFFLL) && ((v23 & 0xFF000000000000) == 0) != (HIWORD(v24) & 1)) {
    return -1;
  }
  uint64_t v25 = *a1;
  uint64_t v26 = sub_2D5D58(*a1, v24 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v25 + 7772))
  {
    long long v27 = sub_2DB8E0(v25 + 3896, v24, 0);
    double v28 = &v27[-*(int *)v27];
    if (*(unsigned __int16 *)v28 < 5u)
    {
      uint64_t v29 = 0;
    }
    else
    {
      uint64_t v29 = *((unsigned __int16 *)v28 + 2);
      if (v29) {
        v29 += (uint64_t)&v27[*(unsigned int *)&v27[v29]];
      }
    }
    uint64_t v30 = v29 + 4 * WORD2(v24) + 4 + *(unsigned int *)(v29 + 4 * WORD2(v24) + 4);
  }
  else
  {
    uint64_t v30 = 0;
  }
  *(void *)&long long v67 = v26;
  *((void *)&v67 + 1) = v30;
  uint64_t v68 = sub_2E5C38(v25, v24 & 0xFFFFFFFFFFFFLL, 1);
  uint64_t v69 = v31;
  int v70 = v24;
  __int16 v71 = WORD2(v24);
  BOOL v72 = (v24 & 0xFF000000000000) != 0;
  uint64_t v32 = *a1;
  uint64_t v33 = *(void *)(v21 + 32);
  BOOL v34 = (void *)sub_2D5D58(*a1, v33 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v32 + 7772))
  {
    int v35 = sub_2DB8E0(v32 + 3896, v33, 0);
    uint64_t v36 = &v35[-*(int *)v35];
    if (*(unsigned __int16 *)v36 < 5u)
    {
      uint64_t v37 = 0;
    }
    else
    {
      uint64_t v37 = *((unsigned __int16 *)v36 + 2);
      if (v37) {
        v37 += (uint64_t)&v35[*(unsigned int *)&v35[v37]];
      }
    }
    uint64_t v38 = v37 + 4 * WORD2(v33) + 4 + *(unsigned int *)(v37 + 4 * WORD2(v33) + 4);
  }
  else
  {
    uint64_t v38 = 0;
  }
  long long __p = v34;
  uint64_t v61 = (void *)v38;
  uint64_t v62 = sub_2E5C38(v32, v33 & 0xFFFFFFFFFFFFLL, 1);
  uint64_t v63 = v39;
  int v64 = v33;
  __int16 v65 = WORD2(v33);
  BOOL v66 = (v33 & 0xFF000000000000) != 0;
  if (sub_53EA04((uint64_t)a1, (int **)&v67, (int **)&__p)) {
    return -1;
  }
  uint64_t v41 = *a1;
  uint64_t v42 = *(void *)(v21 + 32);
  uint64_t v43 = sub_2D5D58(*a1, v42 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v41 + 7772))
  {
    unsigned int v44 = sub_2DB8E0(v41 + 3896, v42, 0);
    uint64_t v45 = &v44[-*(int *)v44];
    if (*(unsigned __int16 *)v45 < 5u)
    {
      uint64_t v46 = 0;
    }
    else
    {
      uint64_t v46 = *((unsigned __int16 *)v45 + 2);
      if (v46) {
        v46 += (uint64_t)&v44[*(unsigned int *)&v44[v46]];
      }
    }
    uint64_t v47 = v46 + 4 * WORD2(v42) + 4 + *(unsigned int *)(v46 + 4 * WORD2(v42) + 4);
  }
  else
  {
    uint64_t v47 = 0;
  }
  uint64_t v48 = sub_2E5C38(v41, v42 & 0xFFFFFFFFFFFFLL, 1);
  *(void *)&long long v67 = v43;
  *((void *)&v67 + 1) = v47;
  uint64_t v68 = v48;
  uint64_t v69 = v49;
  int v70 = v42;
  __int16 v71 = WORD2(v42);
  BOOL v72 = (v42 & 0xFF000000000000) != 0;
  long long __p = 0;
  uint64_t v61 = 0;
  uint64_t v62 = 0;
  unint64_t v50 = *v59;
  uint64_t v51 = v59[1];
  if (*v59 != v51)
  {
    do
    {
      if (a1[131] >= v20) {
        uint64_t v52 = v20;
      }
      else {
        uint64_t v52 = a1[131];
      }
      if (sub_6A2FC8(a1, v50, (uint64_t)&v67, v52))
      {
        v77[0] = *((void *)v50 + 4);
        sub_2D5B74((char **)&__p, v77);
      }
      unint64_t v50 = (long long *)((char *)v50 + 40);
    }
    while (v50 != v51);
    if (__p != v61)
    {
      uint64_t v53 = sub_6D0990(*v59, v59[1], (uint64_t *)&__p);
      if (v59[1] != v53) {
        v59[1] = v53;
      }
    }
  }
  sub_64F484((char **)v59, &v67);
  uint64_t v54 = *v59;
  uint64_t v55 = (int **)v59[1];
  unint64_t v56 = 126 - 2 * __clz(0xCCCCCCCCCCCCCCCDLL * (((char *)v55 - (char *)*v59) >> 3));
  BOOL v57 = v55 == (int **)*v59;
  v77[0] = (uint64_t)a1;
  v77[1] = (uint64_t)v73;
  if (v57) {
    uint64_t v58 = 0;
  }
  else {
    uint64_t v58 = v56;
  }
  sub_6D0AF4(v54, v55, v77, v58, 1);
  if (__p)
  {
    uint64_t v61 = __p;
    operator delete(__p);
  }
  return v17;
}

void sub_6A1D20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6A1D48(uint64_t a1, void *a2, uint64_t a3, unint64_t a4)
{
  if (*(unsigned char *)(a1 + 546)) {
    BOOL v4 = a3 == -1;
  }
  else {
    BOOL v4 = 1;
  }
  if (v4 || a4 == -1) {
    return 0;
  }
  uint64_t v7 = a1;
  unint64_t v8 = a3 + 1;
  double v9 = 0.0;
  if (a3 + 1 > a4) {
    unint64_t v10 = a3 + 1;
  }
  else {
    unint64_t v10 = a4;
  }
  unint64_t v73 = v10;
  if (a3 + 1 < a4)
  {
    uint64_t v11 = 0;
    uint64_t v12 = a1 + 3048;
    double v13 = 0.0;
    unint64_t v69 = a4 - 1;
    uint64_t v70 = a3;
    BOOL v72 = (uint64_t *)(a1 + 3048);
    do
    {
      uint64_t v14 = (int **)sub_46C8EC(a2, v8);
      if (*(unsigned char *)(v7 + 560) && sub_661A68(v12, v14)) {
        continue;
      }
      uint64_t v15 = (unsigned __int16 *)((char *)*v14 - **v14);
      if (*v15 >= 0x2Fu)
      {
        uint64_t v16 = v15[23];
        if (v16)
        {
          if (*((unsigned char *)*v14 + v16) == 14) {
            continue;
          }
        }
      }
      uint64_t v17 = *(void *)v7;
      unint64_t v18 = (unint64_t)v14[4];
      unint64_t v19 = (int *)sub_2D5D58(*(void *)v7, v18 & 0xFFFFFFFFFFFFLL);
      if (*(unsigned char *)(v17 + 7772))
      {
        uint64_t v20 = sub_2DB8E0(v17 + 3896, v18, 0);
        uint64_t v21 = &v20[-*(int *)v20];
        if (*(unsigned __int16 *)v21 < 5u)
        {
          uint64_t v22 = 0;
        }
        else
        {
          uint64_t v22 = *((unsigned __int16 *)v21 + 2);
          if (v22) {
            v22 += (uint64_t)&v20[*(unsigned int *)&v20[v22]];
          }
        }
        uint64_t v23 = v22 + 4 * WORD2(v18) + 4 + *(unsigned int *)(v22 + 4 * WORD2(v18) + 4);
      }
      else
      {
        uint64_t v23 = 0;
      }
      uint64_t v24 = sub_2E5C38(v17, v18 & 0xFFFFFFFFFFFFLL, 1);
      uint64_t v78 = v19;
      uint64_t v79 = v23;
      uint64_t v80 = v24;
      uint64_t v81 = v25;
      int v82 = v18;
      __int16 v83 = WORD2(v18);
      BOOL v84 = (v18 & 0xFF000000000000) != 0;
      uint64_t v12 = (uint64_t)v72;
      if (sub_660D98(v72, &v78))
      {
        uint64_t v7 = a1;
        continue;
      }
      uint64_t v26 = (int **)sub_46C8EC(a2, v70);
      long long v27 = (unsigned __int16 *)((char *)*v26 - **v26);
      unsigned int v28 = *v27;
      if (*((unsigned char *)v26 + 38))
      {
        if (v28 >= 0x49)
        {
          unsigned int v29 = v27[36];
          if (v29) {
            goto LABEL_34;
          }
        }
      }
      else if (v28 >= 0x4B)
      {
        unsigned int v29 = v27[37];
        if (v29)
        {
LABEL_34:
          __int16 v30 = *(_WORD *)((char *)*v26 + v29);
          goto LABEL_36;
        }
      }
      __int16 v30 = -1;
LABEL_36:
      uint64_t v7 = a1;
      uint64_t v31 = *v14;
      uint64_t v32 = (unsigned __int16 *)((char *)*v14 - **v14);
      unsigned int v33 = *v32;
      if (*((unsigned char *)v14 + 38))
      {
        if (v33 >= 0x4B)
        {
          int v34 = v32[37];
          if (v32[37]) {
            goto LABEL_42;
          }
        }
      }
      else if (v33 >= 0x49)
      {
        int v34 = v32[36];
        if (v32[36])
        {
LABEL_42:
          int v35 = *(unsigned __int16 *)&v31[v34];
          goto LABEL_44;
        }
      }
      int v35 = 0xFFFF;
LABEL_44:
      unsigned __int16 v36 = v30 + 18000;
      unsigned __int16 v37 = v30 - 18000;
      if ((unsigned __int16)(v36 >> 5) < 0x465u) {
        unsigned __int16 v37 = v36;
      }
      int v38 = v35 - v37;
      if (v38 > 18000) {
        v38 -= 36000;
      }
      if (v38 < -17999) {
        v38 += 36000;
      }
      double v39 = (double)v38 / 100.0;
      double v9 = v9 + v39;
      if (v8 >= v69) {
        goto LABEL_72;
      }
      if (!*((unsigned char *)v14 + 38))
      {
        if (v33 < 0x49)
        {
          int v40 = 0xFFFF;
LABEL_64:
          __int16 v42 = -1;
          goto LABEL_65;
        }
        if (v32[36])
        {
          int v40 = *(unsigned __int16 *)&v31[v32[36]];
          if (v33 < 0x4B) {
            goto LABEL_64;
          }
        }
        else
        {
          int v40 = 0xFFFF;
          if (v33 < 0x4B) {
            goto LABEL_64;
          }
        }
        int v41 = v32[37];
        if (!v41) {
          goto LABEL_64;
        }
        goto LABEL_62;
      }
      if (v33 >= 0x4B)
      {
        if (v32[37])
        {
          int v40 = *(unsigned __int16 *)&v31[v32[37]];
          int v41 = v32[36];
          if (!v41) {
            goto LABEL_64;
          }
        }
        else
        {
          int v40 = 0xFFFF;
          int v41 = v32[36];
          if (!v41) {
            goto LABEL_64;
          }
        }
        goto LABEL_62;
      }
      int v40 = 0xFFFF;
      __int16 v42 = -1;
      if (v33 >= 0x49)
      {
        int v41 = v32[36];
        if (!v41) {
          goto LABEL_64;
        }
LABEL_62:
        __int16 v42 = *(_WORD *)&v31[v41];
      }
LABEL_65:
      unsigned __int16 v43 = v42 + 18000;
      if ((unsigned __int16)((unsigned __int16)(v42 + 18000) >> 5) >= 0x465u) {
        unsigned __int16 v43 = v42 - 18000;
      }
      int v44 = v43 - v40;
      if (v44 > 18000) {
        v44 -= 36000;
      }
      if (v44 < -17999) {
        v44 += 36000;
      }
      double v9 = v9 + (double)v44 / 100.0;
LABEL_72:
      double v45 = fabs(v39);
      if (v45 <= *(double *)(a1 + 200))
      {
        double v39 = v13;
      }
      else
      {
        if (v11 > *(void *)(a1 + 552) && v13 != 0.0 && v13 > 0.0 == v39 <= 0.0) {
          return 1;
        }
        uint64_t v11 = 0;
      }
      v11 += sub_46CCC8(a2, v8, v45);
      uint64_t v70 = v8;
      double v13 = v39;
    }
    while (v73 != ++v8);
  }
  if (fabs(v9) <= 180.0) {
    return 0;
  }
  uint64_t v46 = sub_46C8EC(a2, a3);
  uint64_t v47 = *(void *)v7;
  uint64_t v48 = *(void *)(v46 + 32);
  uint64_t v49 = (int *)sub_2D5D58(*(void *)v7, v48 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v47 + 7772))
  {
    unint64_t v50 = sub_2DB8E0(v47 + 3896, v48, 0);
    uint64_t v51 = &v50[-*(int *)v50];
    if (*(unsigned __int16 *)v51 < 5u)
    {
      uint64_t v52 = 0;
    }
    else
    {
      uint64_t v52 = *((unsigned __int16 *)v51 + 2);
      if (v52) {
        v52 += (uint64_t)&v50[*(unsigned int *)&v50[v52]];
      }
    }
    uint64_t v53 = v52 + 4 * WORD2(v48) + 4 + *(unsigned int *)(v52 + 4 * WORD2(v48) + 4);
  }
  else
  {
    uint64_t v53 = 0;
  }
  uint64_t v54 = sub_2E5C38(v47, v48 & 0xFFFFFFFFFFFFLL, 1);
  uint64_t v78 = v49;
  uint64_t v79 = v53;
  uint64_t v80 = v54;
  uint64_t v81 = v55;
  int v82 = v48;
  __int16 v83 = WORD2(v48);
  BOOL v84 = (v48 & 0xFF000000000000) != 0;
  uint64_t v56 = sub_46C8EC(a2, a4 - 1);
  uint64_t v57 = *(void *)v7;
  uint64_t v58 = *(void *)(v56 + 32);
  uint64_t v59 = (int *)sub_2D5D58(*(void *)v7, v58 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v57 + 7772))
  {
    uint64_t v60 = sub_2DB8E0(v57 + 3896, v58, 0);
    uint64_t v61 = &v60[-*(int *)v60];
    if (*(unsigned __int16 *)v61 < 5u)
    {
      uint64_t v62 = 0;
    }
    else
    {
      uint64_t v62 = *((unsigned __int16 *)v61 + 2);
      if (v62) {
        v62 += (uint64_t)&v60[*(unsigned int *)&v60[v62]];
      }
    }
    uint64_t v63 = (int *)(v62 + 4 * WORD2(v58) + 4 + *(unsigned int *)(v62 + 4 * WORD2(v58) + 4));
  }
  else
  {
    uint64_t v63 = 0;
  }
  uint64_t v64 = 1;
  v74[0] = v59;
  v74[1] = v63;
  v74[2] = (int *)sub_2E5C38(v57, v58 & 0xFFFFFFFFFFFFLL, 1);
  v74[3] = v65;
  int v75 = v58;
  __int16 v76 = WORD2(v58);
  BOOL v77 = (v58 & 0xFF000000000000) != 0;
  if (sub_69C254(v7, &v78, v74)) {
    return 0;
  }
  return v64;
}

uint64_t sub_6A2344(uint64_t a1, uint64_t a2, int ***a3, uint64_t a4)
{
  BOOL v19 = fabs(sub_6D82EC(a1 + 1160, (int **)a2, (int **)a4)) <= *(double *)(a1 + 200);
  unint64_t v8 = sub_2E68E8(*(void *)a1, *(void *)(a2 + 32));
  BOOL v9 = v8 > 0xFFFFFFFEFFFFFFFFLL || v8 == 0;
  if (v9
    || ((unint64_t v10 = sub_2E68E8(*(void *)a1, *(void *)(a4 + 32)), v10 <= 0xFFFFFFFEFFFFFFFFLL)
      ? (BOOL v11 = v10 == 0)
      : (BOOL v11 = 1),
        v11))
  {
    char v12 = 0;
  }
  else
  {
    char v12 = sub_2E79EC(*(void *)a1, *(void *)(a2 + 32), *(void *)(a4 + 32));
  }
  char v18 = v12;
  uint64_t v14 = *a3;
  double v13 = a3[1];
  v17[0] = (int **)a4;
  v17[1] = (int **)a2;
  void v17[2] = (int **)a1;
  v17[3] = (int **)&v19;
  v17[4] = (int **)&v18;
  if (v14 == v13) {
    return 0;
  }
  uint64_t v15 = 0;
  do
  {
    v15 += sub_6D036C(v17, v14);
    v14 += 5;
  }
  while (v14 != v13);
  return v15;
}

BOOL sub_6A244C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  BOOL v3 = *(void *)a1 != -1 && *(void *)a2 == -1;
  int v4 = !v3;
  BOOL v5 = !v3 && v2 == -1;
  if (v2 != -1 && v4 != 0)
  {
    uint64_t v14 = *(void *)(a1 + 16);
    BOOL v15 = v14 == -1;
    BOOL v9 = v14 == -1 && *(void *)(a2 + 8) != -1;
    if (!v15 && *(void *)(a2 + 8) != -1) {
      goto LABEL_36;
    }
LABEL_23:
    uint64_t v11 = *(void *)(a1 + 24);
    BOOL v12 = v11 == -1;
    BOOL v13 = v11 == -1 && v9;
    if (v12) {
      goto LABEL_42;
    }
    goto LABEL_40;
  }
  uint64_t v7 = *(void *)(a1 + 16);
  BOOL v8 = v7 == -1;
  BOOL v9 = v7 == -1 && v5;
  if (v8 || !v5) {
    goto LABEL_23;
  }
LABEL_36:
  BOOL v9 = *(void *)(a2 + 16) != -1;
  uint64_t v17 = *(void *)(a1 + 24);
  BOOL v18 = v17 == -1;
  BOOL v13 = v17 == -1 && *(void *)(a2 + 16) != -1;
  if (v18) {
    goto LABEL_42;
  }
LABEL_40:
  if (v9) {
    BOOL v13 = *(void *)(a2 + 24) != -1;
  }
LABEL_42:
  uint64_t v19 = *(void *)(a1 + 32);
  BOOL v20 = v19 == -1;
  BOOL v21 = v19 == -1 && v13;
  if (!v20 && v13) {
    BOOL v21 = *(void *)(a2 + 32) != -1;
  }
  uint64_t v22 = *(void *)(a1 + 40);
  BOOL v23 = v22 == -1;
  BOOL v24 = v22 == -1 && v21;
  if (!v23 && v21) {
    BOOL v24 = *(void *)(a2 + 40) != -1;
  }
  uint64_t v25 = *(void *)(a1 + 48);
  BOOL v26 = v25 == -1;
  BOOL v27 = v25 == -1 && v24;
  if (!v26 && v24) {
    BOOL v27 = *(void *)(a2 + 48) != -1;
  }
  int v28 = *(_DWORD *)(a1 + 56);
  if (v28) {
    BOOL result = 0;
  }
  else {
    BOOL result = v27;
  }
  if (v28)
  {
    if (v27) {
      return *(_DWORD *)(a2 + 56) != 0;
    }
  }
  return result;
}

uint64_t sub_6A2570(uint64_t a1, unsigned int *a2)
{
  uint64_t v3 = *(void *)a1;
  sub_2D5904(*(void *)a1, a2, 0, (char **)(*(void *)a1 + 7800));
  int v4 = *(unsigned char **)(v3 + 7800);
  BOOL v5 = *(unsigned char **)(v3 + 7808);
  uint64_t v6 = v5 - v4;
  if (v5 == v4) {
    return 0;
  }
  if (v6 < 0) {
    sub_2E00();
  }
  uint64_t v7 = (char *)operator new(v5 - v4);
  memcpy(v7, v4, v6 - 1);
  uint64_t v8 = 0;
  uint64_t v9 = 8 * (v6 >> 3);
  do
  {
    uint64_t v10 = *(void *)&v7[v8];
    uint64_t v11 = *(void *)a1;
    BOOL v12 = (int *)sub_2D5D58(*(void *)a1, v10 & 0xFFFFFFFFFFFFLL);
    if (*(unsigned char *)(v11 + 7772)) {
      sub_2DB8E0(v11 + 3896, v10, 0);
    }
    sub_2E5C38(v11, v10 & 0xFFFFFFFFFFFFLL, 1);
    BOOL v13 = (unsigned __int16 *)((char *)v12 - *v12);
    if (*v13 >= 0x2Fu)
    {
      uint64_t v14 = v13[23];
      if (v14)
      {
        int v15 = *((unsigned __int8 *)v12 + v14);
        if (v15 == 9
          || (v15 != 20 ? (BOOL v16 = *(unsigned char *)(a1 + 695) == 0) : (BOOL v16 = 1), !v16 ? (v17 = 43) : (v17 = 20), v15 == v17))
        {
          uint64_t v18 = 1;
          goto LABEL_19;
        }
      }
    }
    v8 += 8;
  }
  while (v9 != v8);
  uint64_t v18 = 0;
LABEL_19:
  operator delete(v7);
  return v18;
}

void sub_6A26DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_6A2704(uint64_t a1, int **a2, int **a3)
{
  unint64_t v6 = sub_2E4738(a2);
  if (v6 == sub_2E48C4(a3))
  {
    uint64_t v7 = (unsigned __int16 *)((char *)*a2 - **a2);
    unsigned int v8 = *v7;
    if (*((unsigned char *)a2 + 38))
    {
      if (v8 < 0x49) {
        goto LABEL_32;
      }
      unsigned int v9 = v7[36];
      if (!v9) {
        goto LABEL_32;
      }
    }
    else if (v8 < 0x4B || (unsigned int v9 = v7[37]) == 0)
    {
LABEL_32:
      __int16 v24 = -1;
      uint64_t v25 = *a3;
      BOOL v26 = (unsigned __int16 *)((char *)*a3 - **a3);
      unsigned int v27 = *v26;
      if (*((unsigned char *)a3 + 38)) {
        goto LABEL_33;
      }
      goto LABEL_29;
    }
    __int16 v24 = *(_WORD *)((char *)*a2 + v9);
    uint64_t v25 = *a3;
    BOOL v26 = (unsigned __int16 *)((char *)*a3 - **a3);
    unsigned int v27 = *v26;
    if (*((unsigned char *)a3 + 38))
    {
LABEL_33:
      if (v27 >= 0x4B)
      {
        unsigned int v28 = v26[37];
        if (v28)
        {
LABEL_35:
          int v19 = *(unsigned __int16 *)((char *)v25 + v28);
          goto LABEL_45;
        }
      }
      goto LABEL_36;
    }
LABEL_29:
    if (v27 >= 0x49)
    {
      unsigned int v28 = v26[36];
      if (v28) {
        goto LABEL_35;
      }
    }
LABEL_36:
    int v19 = 0xFFFF;
    goto LABEL_45;
  }
  sub_2954EC(a1, (uint64_t)a2[4], (uint64_t)v33);
  uint64_t v10 = __p;
  if (__p != v35)
  {
    unint64_t v11 = sub_2E40A4((uint64_t)v33);
    uint64_t v10 = __p;
    unint64_t v12 = HIDWORD(v11);
    if (!__p) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  LODWORD(v11) = -1;
  LODWORD(v12) = -1;
  if (__p)
  {
LABEL_8:
    int v35 = v10;
    operator delete(v10);
  }
LABEL_9:
  sub_2954EC(a1, (uint64_t)a3[4], (uint64_t)v33);
  BOOL v13 = __p;
  if (__p == v35)
  {
    LODWORD(v14) = -1;
    LODWORD(v15) = -1;
    if (!__p) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  unint64_t v14 = sub_2E1AA4((uint64_t)v33);
  BOOL v13 = __p;
  unint64_t v15 = HIDWORD(v14);
  if (__p)
  {
LABEL_11:
    int v35 = v13;
    operator delete(v13);
  }
LABEL_12:
  if (v14 != v11 || (double i = 0.0, v12 != v15))
  {
    double v17 = -(double)(v11 - v14);
    if ((int)v14 - (int)v11 < (v11 - v14)) {
      double v17 = (double)(v14 - v11);
    }
    for (double i = (atan2((double)v15 - (double)v12, v17) + 1.57079633) * 180.0 / 3.14159265;
          i >= 180.0;
    for (; i < -180.0; double i = i + 360.0)
      ;
  }
  unsigned int v18 = (int)llround(i * 100.0) % 36000;
  int v19 = v18 + 36000;
  if (v18 <= 0xFFFF735F) {
    int v19 = v18;
  }
  BOOL v20 = a2[1];
  BOOL v21 = (unsigned __int16 *)((char *)v20 - *v20);
  unsigned int v22 = *v21;
  if (!*((unsigned char *)a2 + 38))
  {
    if (v22 < 9) {
      goto LABEL_44;
    }
    unsigned int v23 = v21[4];
    if (!v23) {
      goto LABEL_44;
    }
LABEL_43:
    __int16 v24 = *(_WORD *)((char *)v20 + v23);
    goto LABEL_45;
  }
  if (v22 >= 5)
  {
    unsigned int v23 = v21[2];
    if (v23) {
      goto LABEL_43;
    }
  }
LABEL_44:
  __int16 v24 = 0;
LABEL_45:
  unsigned __int16 v29 = v24 + 18000;
  unsigned __int16 v30 = v24 - 18000;
  if ((unsigned __int16)(v29 >> 5) < 0x465u) {
    unsigned __int16 v30 = v29;
  }
  int v31 = v19 - v30;
  if (v31 > 18000) {
    v31 -= 36000;
  }
  if (v31 < -17999) {
    v31 += 36000;
  }
  return (double)v31 / 100.0;
}

void sub_6A2A44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6A2A64(uint64_t a1, void *a2, uint64_t a3, void *a4, unint64_t a5, uint64_t a6)
{
  if (!*(unsigned char *)(a1 + 1060)) {
    return 0;
  }
  unint64_t v8 = a3;
  *(_DWORD *)(a6 + 24) = 0;
  *(void *)(a6 + 8) = *(void *)a6;
  *(void *)(a6 + 48) = *(void *)(a6 + 40);
  *(_DWORD *)(a6 + 64) = 0;
  *(void *)&long long v11 = -1;
  *((void *)&v11 + 1) = -1;
  *(_OWORD *)(a6 + 72) = v11;
  uint64_t v53 = a6 + 72;
  *(_OWORD *)(a6 + 88) = v11;
  *(_OWORD *)(a6 + 104) = v11;
  *(void *)(a6 + 120) = -1;
  *(_DWORD *)(a6 + 128) = 0;
  *(void *)(a6 + 136) = -1;
  *(_DWORD *)(a6 + 144) = 0;
  *(_OWORD *)(a6 + 152) = xmmword_20E2060;
  *(_WORD *)(a6 + 168) = 0;
  *(unsigned char *)(a6 + 170) = 0;
  *(void *)(a6 + 176) = 0;
  *(unsigned char *)(a6 + 188) = 0;
  *(unsigned char *)(a6 + 190) = 0;
  uint64_t v12 = sub_46C8EC(a2, a3);
  uint64_t v56 = a1;
  uint64_t v13 = *(void *)a1;
  uint64_t v14 = *(void *)(v12 + 32);
  unint64_t v15 = (int *)sub_2D5D58(*(void *)a1, v14 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v13 + 7772))
  {
    BOOL v16 = sub_2DB8E0(v13 + 3896, v14, 0);
    double v17 = &v16[-*(int *)v16];
    if (*(unsigned __int16 *)v17 < 5u)
    {
      uint64_t v18 = 0;
    }
    else
    {
      uint64_t v18 = *((unsigned __int16 *)v17 + 2);
      if (v18) {
        v18 += (uint64_t)&v16[*(unsigned int *)&v16[v18]];
      }
    }
    int v19 = (int *)(v18 + 4 * WORD2(v14) + 4 + *(unsigned int *)(v18 + 4 * WORD2(v14) + 4));
  }
  else
  {
    int v19 = 0;
  }
  v59[0] = v15;
  v59[1] = v19;
  v59[2] = (int *)sub_2E5C38(v13, v14 & 0xFFFFFFFFFFFFLL, 1);
  v59[3] = v20;
  LODWORD(v60) = v14;
  WORD2(v60) = WORD2(v14);
  BYTE6(v60) = (v14 & 0xFF000000000000) != 0;
  BOOL v21 = (int **)sub_5A7C34(a4, a5);
  unsigned int v22 = (unsigned __int16 *)((char *)v15 - *v15);
  if (*v22 >= 0x2Fu && v22[23])
  {
    unsigned int v23 = *((unsigned __int8 *)v15 + v22[23]);
    BOOL v24 = v23 > 0x2B || ((1 << v23) & 0x80000001040) == 0;
    v26 = !v24 && ((uint64_t v25 = v22[5]) == 0 || (*((unsigned char *)v15 + v25 + 2) & 0x20) == 0) || v23 == 44;
  }
  else
  {
    BOOL v26 = 0;
  }
  uint64_t v27 = v56;
  unsigned int v28 = *v21;
  unsigned __int16 v29 = (unsigned __int16 *)((char *)*v21 - **v21);
  if (*v29 < 0x2Fu || !v29[23])
  {
    if (v26) {
      goto LABEL_28;
    }
    return 0;
  }
  unsigned int v30 = *((unsigned __int8 *)v28 + v29[23]);
  BOOL v31 = v30 > 0x2B || ((1 << v30) & 0x80000001040) == 0;
  if (v31 || (uint64_t v32 = v29[5]) != 0 && (*((unsigned char *)v28 + v32 + 2) & 0x20) != 0)
  {
    if (v26 != (v30 == 44)) {
      goto LABEL_28;
    }
    return 0;
  }
  if (v26) {
    return 0;
  }
LABEL_28:
  uint64_t v52 = v60;
  unint64_t v33 = (unint64_t)v21[4];
  unint64_t v58 = v33;
  uint64_t v55 = v21;
  double v34 = sub_6D82EC(v56 + 1160, v59, v21);
  unint64_t v35 = sub_46C760(a2);
  if (v8 <= v35) {
    unint64_t v36 = v35;
  }
  else {
    unint64_t v36 = v8;
  }
  if (v35 > v8)
  {
    uint64_t v37 = v33 & 0xFFFFFFFFFFFFLL;
    uint64_t v38 = HIWORD(v33) & 1;
    while (1)
    {
      uint64_t v39 = sub_46C8EC(a2, v8);
      uint64_t v40 = *(void *)v27;
      uint64_t v41 = *(void *)(v39 + 32);
      uint64_t v42 = v41 & 0xFFFFFFFFFFFFLL;
      sub_2D5D58(v40, v41 & 0xFFFFFFFFFFFFLL);
      if (*(unsigned char *)(v40 + 7772)) {
        sub_2DB8E0(v40 + 3896, v41, 0);
      }
      sub_2E5C38(v40, v41 & 0xFFFFFFFFFFFFLL, 1);
      if (v42 == v37 && ((v41 & 0xFF000000000000) == 0) != v38) {
        break;
      }
      unint64_t v57 = v42 | ((unint64_t)((v41 & 0xFF000000000000) != 0) << 48);
      sub_2D5B74((char **)a6, &v57);
      ++v8;
      uint64_t v27 = v56;
      if (v36 == v8) {
        goto LABEL_47;
      }
    }
    sub_2D5B74((char **)a6, &v58);
    uint64_t v27 = v56;
  }
LABEL_47:
  double v45 = (unsigned __int16 *)((char *)v59[0] - *v59[0]);
  if ((*v45 < 0x2Fu || (uint64_t v46 = v45[23]) == 0 || *((unsigned char *)v59[0] + v46) == 32)
    && (uint64_t v47 = (unsigned __int16 *)((char *)*v55 - **v55), *v47 >= 0x2Fu)
    && (uint64_t v48 = v47[23]) != 0
    && *((unsigned char *)*v55 + v48) == 44
    && (unint64_t v49 = sub_2E68E8(*(void *)v27, v52), v49 <= 0xFFFFFFFEFFFFFFFFLL)
    && v49
    && (unint64_t v50 = sub_2E68E8(*(void *)v27, (uint64_t)v55[4]), v50 <= 0xFFFFFFFEFFFFFFFFLL)
    && v50
    && sub_2E79EC(*(void *)v27, v60, (uint64_t)v55[4])
    && fabs(v34) < *(double *)(v27 + 1064))
  {
    *(_DWORD *)(a6 + 24) = 3;
    uint64_t result = 1;
    *(unsigned char *)(a6 + 169) = 1;
    *(_DWORD *)(v27 + 176) = 5;
  }
  else
  {
    uint64_t result = 0;
    *(void *)(a6 + 8) = *(void *)a6;
    *(void *)(a6 + 48) = *(void *)(a6 + 40);
    *(void *)&long long v51 = -1;
    *((void *)&v51 + 1) = -1;
    *(_OWORD *)uint64_t v53 = v51;
    *(_OWORD *)(v53 + 16) = v51;
    *(_OWORD *)(v53 + 32) = v51;
    *(void *)(v53 + 48) = -1;
    *(_DWORD *)(a6 + 24) = 0;
    *(_DWORD *)(a6 + 64) = 0;
    *(_DWORD *)(a6 + 128) = 0;
    *(void *)(a6 + 136) = -1;
    *(_DWORD *)(a6 + 144) = 0;
    *(_OWORD *)(a6 + 152) = xmmword_20E2060;
    *(_WORD *)(a6 + 168) = 0;
    *(unsigned char *)(a6 + 170) = 0;
    *(void *)(a6 + 176) = 0;
    *(unsigned char *)(a6 + 188) = 0;
    *(unsigned char *)(a6 + 190) = 0;
  }
  return result;
}

BOOL sub_6A2F18(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  if (a1 == a2) {
    return 1;
  }
  uint64_t v7 = a1 + 8;
  do
  {
    uint64_t v8 = sub_46C8EC(a3, a4);
    BOOL result = *(_DWORD *)(v7 - 8) == *(_DWORD *)(v8 + 32)
          && *(unsigned __int16 *)(v7 - 4) == *(unsigned __int16 *)(v8 + 36);
    ++a4;
    BOOL v11 = !result || v7 == a2;
    v7 += 8;
  }
  while (!v11);
  return result;
}

void sub_6A2F9C(uint64_t *a1, unint64_t a2)
{
  unint64_t v2 = (a1[1] - *a1) >> 3;
  BOOL v3 = a2 >= v2;
  unint64_t v4 = a2 - v2;
  if (v4 != 0 && v3)
  {
    sub_6D0774(a1, v4);
  }
  else if (!v3)
  {
    a1[1] = *a1 + 8 * a2;
  }
}

uint64_t sub_6A2FC8(uint64_t *a1, long long *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = 0;
  BOOL v93 = 0;
  unint64_t v94 = 0;
  uint64_t v95 = 0;
  uint64_t v8 = (unsigned __int16 *)(*(void *)a2 - **(int **)a2);
  if (*v8 >= 9u)
  {
    uint64_t v7 = v8[4];
    if (v8[4]) {
      uint64_t v7 = *(unsigned int *)(*(void *)a2 + v7);
    }
  }
  *(void *)&long long v96 = v7;
  sub_69070C((char **)&v93, a2, &v96);
  unsigned int v9 = v93;
  if (v94 - (unsigned char *)v93 >= 49)
  {
    unint64_t v10 = ((v94 - (unsigned char *)v93) / 0x30uLL - 2) >> 1;
    uint64_t v11 = *((void *)v94 - 1);
    if (*((void *)v93 + 6 * v10 + 5) > v11)
    {
      uint64_t v12 = v94 - 48;
      long long v99 = *((_OWORD *)v94 - 3);
      long long v100 = *((_OWORD *)v94 - 2);
      uint64_t v101 = *((void *)v94 - 2);
      do
      {
        uint64_t v13 = v12;
        uint64_t v12 = (char *)&v9[6 * v10];
        long long v14 = *(_OWORD *)v12;
        long long v15 = *((_OWORD *)v12 + 1);
        *((void *)v13 + 4) = *((void *)v12 + 4);
        *(_OWORD *)uint64_t v13 = v14;
        *((_OWORD *)v13 + 1) = v15;
        *((void *)v13 + 5) = *((void *)v12 + 5);
        if (!v10) {
          break;
        }
        unint64_t v10 = (v10 - 1) >> 1;
      }
      while (v9[6 * v10 + 5] > v11);
      *(_OWORD *)uint64_t v12 = v99;
      *((_OWORD *)v12 + 1) = v100;
      *((void *)v12 + 4) = v101;
      *((void *)v12 + 5) = v11;
    }
  }
  long long v90 = 0;
  long long v91 = 0;
  uint64_t v92 = 0;
  *(void *)&long long v99 = *((unsigned int *)a2 + 8) | ((unint64_t)*((unsigned __int16 *)a2 + 18) << 32);
  sub_29603C(&v90, &v99);
  long long __p = 0;
  uint64_t v88 = 0;
  uint64_t v89 = 0;
  BOOL v16 = v93;
  double v17 = v94;
  if (v93 == v94)
  {
    uint64_t v79 = 0;
    goto LABEL_79;
  }
  do
  {
    long long v18 = *v16;
    long long v19 = v16[1];
    uint64_t v20 = *((void *)v16 + 5);
    uint64_t v86 = *((void *)v16 + 4);
    v85[0] = v18;
    v85[1] = v19;
    if (v17 - (unsigned char *)v16 >= 49)
    {
      uint64_t v21 = 0;
      int64_t v22 = 0xAAAAAAAAAAAAAAABLL * ((v17 - (unsigned char *)v16) >> 4);
      long long v96 = *v16;
      long long v97 = v16[1];
      uint64_t v98 = *((void *)v16 + 4);
      unsigned int v23 = v16;
      do
      {
        uint64_t v26 = v21 + 1;
        uint64_t v27 = (char *)&v23[3 * v21 + 3];
        uint64_t v28 = (2 * v21) | 1;
        uint64_t v29 = 2 * v21 + 2;
        if (v29 < v22)
        {
          uint64_t v30 = *((void *)&v23[3 * v26 + 2] + 1);
          uint64_t v31 = *((void *)v27 + 11);
          v27 += 48 * (v30 > v31);
          if (v30 > v31) {
            uint64_t v28 = v29;
          }
        }
        long long v24 = *(_OWORD *)v27;
        long long v25 = *((_OWORD *)v27 + 1);
        *((void *)v23 + 4) = *((void *)v27 + 4);
        _OWORD *v23 = v24;
        v23[1] = v25;
        *((void *)v23 + 5) = *((void *)v27 + 5);
        unsigned int v23 = v27;
        uint64_t v21 = v28;
      }
      while (v28 <= (uint64_t)((unint64_t)(v22 - 2) >> 1));
      uint64_t v32 = (long long *)(v17 - 48);
      if (v27 == v17 - 48)
      {
        long long v43 = v97;
        uint64_t v44 = v98;
        *(_OWORD *)uint64_t v27 = v96;
        *((_OWORD *)v27 + 1) = v43;
        *((void *)v27 + 4) = v44;
        *((void *)v27 + 5) = v20;
      }
      else
      {
        long long v33 = *v32;
        long long v34 = *((_OWORD *)v17 - 2);
        *((void *)v27 + 4) = *((void *)v17 - 2);
        *(_OWORD *)uint64_t v27 = v33;
        *((_OWORD *)v27 + 1) = v34;
        *((void *)v27 + 5) = *((void *)v17 - 1);
        long long *v32 = v96;
        *((_OWORD *)v17 - 2) = v97;
        *((void *)v17 - 2) = v98;
        *((void *)v17 - 1) = v20;
        uint64_t v35 = v27 - (char *)v16 + 48;
        if (v35 >= 49)
        {
          unint64_t v36 = (v35 / 0x30uLL - 2) >> 1;
          uint64_t v37 = *((void *)v27 + 5);
          if (*((void *)&v16[3 * v36 + 2] + 1) > v37)
          {
            long long v38 = *(_OWORD *)v27;
            long long v39 = *((_OWORD *)v27 + 1);
            uint64_t v101 = *((void *)v27 + 4);
            long long v99 = v38;
            long long v100 = v39;
            do
            {
              uint64_t v40 = v27;
              uint64_t v27 = (char *)&v16[3 * v36];
              long long v41 = *(_OWORD *)v27;
              long long v42 = *((_OWORD *)v27 + 1);
              *((void *)v40 + 4) = *((void *)v27 + 4);
              *(_OWORD *)uint64_t v40 = v41;
              *((_OWORD *)v40 + 1) = v42;
              *((void *)v40 + 5) = *((void *)v27 + 5);
              if (!v36) {
                break;
              }
              unint64_t v36 = (v36 - 1) >> 1;
            }
            while (*((void *)&v16[3 * v36 + 2] + 1) > v37);
            *(_OWORD *)uint64_t v27 = v99;
            *((_OWORD *)v27 + 1) = v100;
            *((void *)v27 + 4) = v101;
            *((void *)v27 + 5) = v37;
          }
        }
      }
      double v17 = v94;
    }
    unint64_t v94 = v17 - 48;
    sub_2E44A4(*a1, (uint64_t)v85, &__p);
    double v45 = (long long *)__p;
    uint64_t v46 = v88;
    __int16 v83 = v88;
    uint64_t v84 = v20;
    if (__p != v88)
    {
      while (1)
      {
        uint64_t v47 = *((unsigned __int16 *)v45 + 18);
        uint64_t v48 = *((unsigned int *)v45 + 8);
        unint64_t v49 = (char *)v90;
        unint64_t v50 = v91;
        long long v51 = (char *)v90;
        if (v90 != v91)
        {
          long long v51 = (char *)v90;
          while (*(void *)v51 != __PAIR64__(v47, v48))
          {
            v51 += 8;
            if (v51 == v91) {
              goto LABEL_38;
            }
          }
        }
        if (v51 != v91) {
          goto LABEL_32;
        }
LABEL_38:
        if (v48 == *(_DWORD *)(a3 + 32) && v47 == *(unsigned __int16 *)(a3 + 36))
        {
          uint64_t v79 = 1;
          uint64_t v80 = (int **)__p;
          if (__p) {
            goto LABEL_78;
          }
          goto LABEL_79;
        }
        uint64_t v53 = v48 | (v47 << 32);
        if (v91 >= v92) {
          break;
        }
        *(void *)long long v91 = v53;
        uint64_t v54 = (uint64_t)(v50 + 8);
LABEL_66:
        long long v91 = (char *)v54;
        uint64_t v70 = (unsigned __int16 *)(*(void *)v45 - **(int **)v45);
        if (*v70 >= 9u && (uint64_t v71 = v70[4]) != 0)
        {
          *(void *)&long long v96 = *(unsigned int *)(*(void *)v45 + v71) + v20;
          if ((uint64_t)v96 <= a4) {
            goto LABEL_71;
          }
        }
        else
        {
          *(void *)&long long v96 = v20;
          if (v20 <= a4)
          {
LABEL_71:
            sub_69070C((char **)&v93, v45, &v96);
            BOOL v72 = v93;
            if (v94 - (unsigned char *)v93 >= 49)
            {
              unint64_t v73 = ((v94 - (unsigned char *)v93) / 0x30uLL - 2) >> 1;
              uint64_t v74 = *((void *)v94 - 1);
              if (*((void *)v93 + 6 * v73 + 5) > v74)
              {
                int v75 = v94 - 48;
                long long v99 = *((_OWORD *)v94 - 3);
                long long v100 = *((_OWORD *)v94 - 2);
                uint64_t v101 = *((void *)v94 - 2);
                do
                {
                  __int16 v76 = v75;
                  int v75 = (char *)&v72[6 * v73];
                  long long v77 = *(_OWORD *)v75;
                  long long v78 = *((_OWORD *)v75 + 1);
                  *((void *)v76 + 4) = *((void *)v75 + 4);
                  *(_OWORD *)__int16 v76 = v77;
                  *((_OWORD *)v76 + 1) = v78;
                  *((void *)v76 + 5) = *((void *)v75 + 5);
                  if (!v73) {
                    break;
                  }
                  unint64_t v73 = (v73 - 1) >> 1;
                }
                while (v72[6 * v73 + 5] > v74);
                *(_OWORD *)int v75 = v99;
                *((_OWORD *)v75 + 1) = v100;
                *((void *)v75 + 4) = v101;
                *((void *)v75 + 5) = v74;
              }
            }
          }
        }
LABEL_32:
        double v45 = (long long *)((char *)v45 + 40);
        if (v45 == (long long *)v46) {
          goto LABEL_12;
        }
      }
      uint64_t v55 = (v91 - (unsigned char *)v90) >> 3;
      unint64_t v56 = v55 + 1;
      if ((unint64_t)(v55 + 1) >> 61) {
        sub_2E00();
      }
      uint64_t v57 = v92 - (unsigned char *)v90;
      if ((v92 - (unsigned char *)v90) >> 2 > v56) {
        unint64_t v56 = v57 >> 2;
      }
      if ((unint64_t)v57 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v58 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v58 = v56;
      }
      if (v58)
      {
        if (v58 >> 61) {
          sub_188D718();
        }
        uint64_t v59 = operator new(8 * v58);
        uint64_t v60 = (uint64_t *)&v59[8 * v55];
        uint64_t *v60 = v53;
        uint64_t v54 = (uint64_t)(v60 + 1);
        if (v49 != v50)
        {
LABEL_53:
          unint64_t v61 = v50 - 8 - v49;
          if (v61 < 0x58) {
            goto LABEL_91;
          }
          if ((unint64_t)(v49 - v59) < 0x20) {
            goto LABEL_91;
          }
          uint64_t v62 = (v61 >> 3) + 1;
          uint64_t v63 = 8 * (v62 & 0x3FFFFFFFFFFFFFFCLL);
          uint64_t v64 = &v50[-v63];
          uint64_t v60 = (uint64_t *)((char *)v60 - v63);
          __int16 v65 = &v59[8 * v55 - 16];
          BOOL v66 = v50 - 16;
          uint64_t v67 = v62 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            long long v68 = *(_OWORD *)v66;
            *(v65 - 1) = *((_OWORD *)v66 - 1);
            *__int16 v65 = v68;
            v65 -= 2;
            v66 -= 32;
            v67 -= 4;
          }
          while (v67);
          unint64_t v50 = v64;
          if (v62 != (v62 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_91:
            do
            {
              uint64_t v69 = *((void *)v50 - 1);
              v50 -= 8;
              *--uint64_t v60 = v69;
            }
            while (v50 != v49);
          }
          unint64_t v49 = (char *)v90;
          long long v90 = v60;
          long long v91 = (char *)v54;
          uint64_t v92 = &v59[8 * v58];
          uint64_t v20 = v84;
          if (!v49) {
            goto LABEL_65;
          }
LABEL_64:
          operator delete(v49);
LABEL_65:
          uint64_t v46 = v83;
          goto LABEL_66;
        }
      }
      else
      {
        uint64_t v59 = 0;
        uint64_t v60 = (uint64_t *)(8 * v55);
        *(void *)(8 * v55) = v53;
        uint64_t v54 = 8 * v55 + 8;
        if (v49 != v50) {
          goto LABEL_53;
        }
      }
      long long v90 = v60;
      long long v91 = (char *)v54;
      uint64_t v92 = &v59[8 * v58];
      uint64_t v20 = v84;
      if (!v49) {
        goto LABEL_65;
      }
      goto LABEL_64;
    }
LABEL_12:
    BOOL v16 = v93;
    double v17 = v94;
  }
  while (v93 != v94);
  uint64_t v79 = 0;
  uint64_t v80 = (int **)__p;
  if (__p)
  {
LABEL_78:
    uint64_t v88 = v80;
    operator delete(v80);
  }
LABEL_79:
  if (v90)
  {
    long long v91 = (char *)v90;
    operator delete(v90);
  }
  if (v93)
  {
    unint64_t v94 = v93;
    operator delete(v93);
  }
  return v79;
}

void sub_6A36D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,uint64_t a24,void *a25,uint64_t a26)
{
  if (__p)
  {
    operator delete(__p);
    uint64_t v27 = a25;
    if (!a25) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    uint64_t v27 = a25;
    if (!a25) {
      goto LABEL_3;
    }
  }
  operator delete(v27);
  _Unwind_Resume(exception_object);
}

uint64_t sub_6A3754(void *a1)
{
  uint64_t v1 = (unsigned __int16 *)(*a1 - *(int *)*a1);
  if (*v1 >= 0x2Fu && (uint64_t v2 = v1[23]) != 0 && (v3 = *(unsigned __int8 *)(*a1 + v2), v3 <= 0x1A)) {
    return (0x4810001u >> v3) & 1;
  }
  else {
    return 0;
  }
}

void sub_6A379C(double *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_5A7C34((void *)(a2 + 80), *(void *)(a2 + 104));
  long long v7 = *(_OWORD *)(v6 + 16);
  long long v14 = *(_OWORD *)v6;
  long long v15 = v7;
  uint64_t v16 = *(void *)(v6 + 32);
  uint64_t v8 = operator new(0x28uLL);
  long long v18 = (char *)v8 + 40;
  long long v19 = (char *)v8 + 40;
  long long v9 = v15;
  _OWORD *v8 = v14;
  v8[1] = v9;
  *((void *)v8 + 4) = v16;
  double v17 = v8;
  int v11 = 0;
  memset(v10, 0, sizeof(v10));
  __int16 v12 = -1;
  char v13 = 0;
  sub_699204(a1, (int **)a2, (uint64_t *)&v17, 0, (uint64_t)v10, a3 + 40);
  if (v17)
  {
    long long v18 = v17;
    operator delete(v17);
  }
}

void sub_6A3858(_Unwind_Exception *exception_object)
{
  unsigned int v3 = *(void **)(v1 - 56);
  if (v3)
  {
    *(void *)(v1 - 48) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_6A3874(uint64_t a1, int **a2, uint64_t a3)
{
  *(void *)(a3 + 48) = *(void *)(a3 + 40);
  uint64_t v70 = a3 + 40;
  *(_DWORD *)(a3 + 64) = 0;
  BOOL v5 = a2 + 10;
  sub_6A3E64(a1, (int ***)a2 + 10, (uint64_t)&__p);
  uint64_t v6 = (int **)*a2;
  long long v7 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v8 = *v7;
  if (v8 < 0x2F)
  {
    if (v8 < 0xB) {
      goto LABEL_14;
    }
  }
  else if (v7[23] && *((unsigned char *)v6 + v7[23]) == 23)
  {
    goto LABEL_8;
  }
  uint64_t v9 = v7[5];
  if (!v9 || (*((unsigned char *)v6 + v9) & 4) == 0)
  {
LABEL_14:
    uint64_t v21 = operator new(0x28uLL);
    int64_t v22 = a2[4];
    v21[4] = v22;
    long long v23 = *((_OWORD *)a2 + 1);
    *(_OWORD *)uint64_t v21 = *(_OWORD *)a2;
    *((_OWORD *)v21 + 1) = v23;
    int v24 = BYTE6(v22);
    long long v25 = (int *)v21[1];
    uint64_t v26 = (unsigned __int16 *)((char *)v25 - *v25);
    unsigned int v27 = *v26;
    if (v24)
    {
      if (v27 < 5) {
        goto LABEL_23;
      }
      unsigned int v28 = v26[2];
      if (!v28) {
        goto LABEL_23;
      }
    }
    else if (v27 < 9 || (unsigned int v28 = v26[4]) == 0)
    {
LABEL_23:
      LOWORD(v29) = 0;
      operator delete(v21);
      unint64_t v30 = (unint64_t)a2[13];
      if (v30 == -1) {
        goto LABEL_21;
      }
LABEL_24:
      unint64_t v36 = (uint64_t *)sub_5A7C34(v5, v30);
      uint64_t v31 = *v36;
      uint64_t v32 = v36[1];
      unint64_t v33 = v36[4];
      long long v34 = (int ***)__p;
      uint64_t v35 = v74;
      if (__p == v74) {
        goto LABEL_70;
      }
      goto LABEL_25;
    }
    LOWORD(v29) = *(_WORD *)((char *)v25 + v28);
    operator delete(v21);
    unint64_t v30 = (unint64_t)a2[13];
    if (v30 == -1) {
      goto LABEL_21;
    }
    goto LABEL_24;
  }
LABEL_8:
  if (__p == v74) {
    goto LABEL_14;
  }
  uint64_t v10 = (uint64_t)*(v74 - 2);
  if (v10 - (void)*(v74 - 3) != 40) {
    goto LABEL_14;
  }
  long long v78 = *(_OWORD *)(v10 - 40);
  v79[0] = *(_OWORD *)(v10 - 24);
  *(void *)((char *)v79 + 14) = *(void *)(v10 - 10);
  int v11 = *(unsigned __int8 *)(v10 - 2);
  char v12 = *(unsigned char *)(v10 - 1);
  long long v13 = *((_OWORD *)a2 + 1);
  long long v75 = *(_OWORD *)a2;
  long long v76 = v13;
  long long v77 = a2[4];
  long long v14 = (char *)operator new(0x50uLL);
  long long v15 = v79[0];
  *(_OWORD *)long long v14 = v78;
  *((_OWORD *)v14 + 1) = v15;
  long long v16 = v76;
  *(_OWORD *)(v14 + 40) = v75;
  *(void *)(v14 + 30) = *(void *)((char *)v79 + 14);
  v14[38] = v11 ^ 1;
  v14[39] = v12;
  *(_OWORD *)(v14 + 56) = v16;
  *((void *)v14 + 9) = v77;
  double v17 = (int *)*((void *)v14 + 1);
  long long v18 = (unsigned __int16 *)((char *)v17 - *v17);
  unsigned int v19 = *v18;
  if (v11 != 1)
  {
    if (v19 < 5) {
      goto LABEL_85;
    }
    unsigned int v20 = v18[2];
    if (!v20) {
      goto LABEL_85;
    }
  }
  else if (v19 < 9 || (unsigned int v20 = v18[4]) == 0)
  {
LABEL_85:
    int v60 = 0;
    unint64_t v61 = (int *)*((void *)v14 + 6);
    uint64_t v62 = (unsigned __int16 *)((char *)v61 - *v61);
    unsigned int v63 = *v62;
    if (v14[78]) {
      goto LABEL_86;
    }
LABEL_82:
    if (v63 >= 9)
    {
      unsigned int v64 = v62[4];
      if (v64) {
        goto LABEL_88;
      }
    }
    goto LABEL_89;
  }
  int v60 = *(unsigned __int16 *)((char *)v17 + v20);
  unint64_t v61 = (int *)*((void *)v14 + 6);
  uint64_t v62 = (unsigned __int16 *)((char *)v61 - *v61);
  unsigned int v63 = *v62;
  if (!v14[78]) {
    goto LABEL_82;
  }
LABEL_86:
  if (v63 >= 5)
  {
    unsigned int v64 = v62[2];
    if (v64)
    {
LABEL_88:
      int v65 = *(unsigned __int16 *)((char *)v61 + v64);
      goto LABEL_90;
    }
  }
LABEL_89:
  int v65 = 0;
LABEL_90:
  int v66 = v65 - v60;
  if (v66 > 18000) {
    v66 -= 36000;
  }
  if (v66 < -17999) {
    v66 += 36000;
  }
  int v67 = v60 + vcvtad_u64_f64((double)v66 / 100.0 * 0.5 * 100.0);
  unsigned int v29 = (v67 + (v67 < 0 ? 0x8CA0 : 0)) % 0x8CA0u;
  operator delete(v14);
  uint64_t v69 = v74 - 3;
  long long v68 = *(v74 - 3);
  if (v68)
  {
    *(v74 - 2) = v68;
    operator delete(v68);
  }
  uint64_t v74 = v69;
  unint64_t v30 = (unint64_t)a2[13];
  if (v30 != -1) {
    goto LABEL_24;
  }
LABEL_21:
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  unint64_t v33 = 0xFFFF00000000;
  long long v34 = (int ***)__p;
  uint64_t v35 = v74;
  if (__p != v74)
  {
LABEL_25:
    unsigned __int16 v37 = v29 + 18000;
    if ((unsigned __int16)((unsigned __int16)(v29 + 18000) >> 5) >= 0x465u) {
      unsigned __int16 v37 = v29 - 18000;
    }
    int v38 = v37;
    if (v33) {
      BOOL v39 = v31 == 0;
    }
    else {
      BOOL v39 = 1;
    }
    int v41 = !v39 && v32 != 0;
    while (1)
    {
      long long v42 = **v34;
      long long v43 = (unsigned __int16 *)((char *)v42 - *v42);
      if (*v43 >= 0xBu && (uint64_t v44 = v43[5]) != 0) {
        int v45 = *((unsigned __int8 *)v42 + v44 + 1) >> 7;
      }
      else {
        int v45 = 0;
      }
      int v46 = (unsigned __int16)sub_6A0FFC(a1, v34, 0) - v38;
      if (v46 > 18000) {
        v46 -= 36000;
      }
      if (v46 < -17999) {
        v46 += 36000;
      }
      double v47 = (double)v46 / 100.0;
      *(double *)&long long v75 = v47;
      if (v41)
      {
        uint64_t v48 = *v34;
        unint64_t v49 = v34[1];
        if (*v34 != v49)
        {
          while (__PAIR64__(*((unsigned __int16 *)v48 + 18), *((_DWORD *)v48 + 8)) != __PAIR64__(WORD2(v33), v33)
               || (HIWORD(v33) & 1) == (*((unsigned char *)v48 + 38) == 0))
          {
            v48 += 5;
            if (v48 == v49)
            {
              uint64_t v48 = v34[1];
              break;
            }
          }
        }
        BOOL v50 = v48 != v49;
        BOOL v72 = v50;
        uint64_t v51 = *(void *)(a3 + 48);
        if (*(void *)(a3 + 40) == v51) {
          goto LABEL_68;
        }
      }
      else
      {
        BOOL v50 = 0;
        BOOL v72 = 0;
        uint64_t v51 = *(void *)(a3 + 48);
        if (*(void *)(a3 + 40) == v51) {
          goto LABEL_68;
        }
      }
      int v52 = *(__int16 *)(v51 - 4);
      if (v52 > 0) {
        int v53 = v45;
      }
      else {
        int v53 = 0;
      }
      if (v53 == 1 && v47 < 0.0 || (v45 & 1) == 0 && v52 < 0 && v47 > 0.0)
      {
        if (v50)
        {
          double v54 = *(double *)(a1 + 848);
          if (!v45) {
            double v54 = -v54;
          }
          *(double *)&long long v78 = v54;
          sub_6D35E8(v70, (double *)&v78, (char *)&v72);
        }
        goto LABEL_36;
      }
LABEL_68:
      sub_6D35E8(v70, (double *)&v75, (char *)&v72);
      *(_DWORD *)(a3 + 64) = 1;
LABEL_36:
      v34 += 3;
      if (v34 == v35)
      {
        long long v34 = (int ***)__p;
        break;
      }
    }
  }
LABEL_70:
  if (v34)
  {
    uint64_t v55 = v74;
    unint64_t v56 = v34;
    if (v74 != v34)
    {
      uint64_t v57 = v74;
      do
      {
        uint64_t v59 = *(v57 - 3);
        v57 -= 3;
        unint64_t v58 = v59;
        if (v59)
        {
          *(v55 - 2) = v58;
          operator delete(v58);
        }
        uint64_t v55 = v57;
      }
      while (v57 != v34);
      unint64_t v56 = __p;
    }
    uint64_t v74 = v34;
    operator delete(v56);
  }
}

void sub_6A3DE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_36094((void **)va);
  _Unwind_Resume(a1);
}

void sub_6A3DFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_36094((void **)va);
  _Unwind_Resume(a1);
}

void sub_6A3E10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_36094((void **)va);
  _Unwind_Resume(a1);
}

void sub_6A3E28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_36094((void **)va);
  _Unwind_Resume(a1);
}

void sub_6A3E3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_36094((void **)va);
  _Unwind_Resume(a1);
}

void sub_6A3E50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_36094((void **)va);
  _Unwind_Resume(a1);
}

void sub_6A3E64(uint64_t a1@<X0>, int ***a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  unsigned int v3 = *a2;
  unint64_t v4 = a2[1];
  if (*a2 != v4)
  {
    uint64_t v6 = a1 + 1160;
    do
    {
      if (sub_6D855C(v6, v3)) {
        goto LABEL_22;
      }
      long long v7 = *v3;
      unsigned int v8 = (unsigned __int16 *)((char *)*v3 - **v3);
      unsigned int v9 = *v8;
      if (*((unsigned char *)v3 + 38))
      {
        if (v9 < 0xB) {
          goto LABEL_22;
        }
        unsigned int v10 = v8[5];
        if (!v8[5]) {
          goto LABEL_17;
        }
        if ((*(int *)((char *)v7 + v8[5]) & 2) != 0) {
          goto LABEL_22;
        }
      }
      else
      {
        if (v9 < 0xB) {
          goto LABEL_22;
        }
        unsigned int v10 = v8[5];
        if (!v8[5])
        {
LABEL_17:
          if (v9 <= 0x2E) {
            goto LABEL_22;
          }
          unsigned int v10 = 0;
          uint64_t v11 = v8[23];
          if (v11)
          {
LABEL_19:
            if (*((unsigned char *)v7 + v11) == 23) {
              goto LABEL_25;
            }
          }
LABEL_20:
          if (!v10) {
            goto LABEL_22;
          }
          goto LABEL_21;
        }
        if (*(int *)((char *)v7 + v8[5])) {
          goto LABEL_22;
        }
      }
      if (v9 >= 0x2F)
      {
        uint64_t v11 = v8[23];
        if (v11) {
          goto LABEL_19;
        }
        goto LABEL_20;
      }
LABEL_21:
      if ((*((unsigned char *)v7 + v10) & 4) != 0)
      {
LABEL_25:
        uint64_t v16 = *(void *)(a3 + 8);
        if (*(void *)a3 != v16)
        {
          long long v18 = *(char **)(v16 - 24);
          double v17 = *(char **)(v16 - 16);
          if (v17 - v18 == 40)
          {
            unint64_t v19 = *(void *)(v16 - 8);
            if ((unint64_t)v17 >= v19)
            {
              unint64_t v22 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v19 - (void)v18) >> 3);
              if (2 * v22 <= 2) {
                uint64_t v23 = 2;
              }
              else {
                uint64_t v23 = 2 * v22;
              }
              if (v22 >= 0x333333333333333) {
                unint64_t v24 = 0x666666666666666;
              }
              else {
                unint64_t v24 = v23;
              }
              if (v24 > 0x666666666666666) {
                sub_188D718();
              }
              long long v25 = (char *)operator new(40 * v24);
              long long v26 = *(_OWORD *)v3;
              long long v27 = *((_OWORD *)v3 + 1);
              *((void *)v25 + 9) = v3[4];
              *(_OWORD *)(v25 + 40) = v26;
              *(_OWORD *)(v25 + 56) = v27;
              unsigned int v28 = v25 + 40;
              if (v17 != v18)
              {
                do
                {
                  long long v29 = *(_OWORD *)(v17 - 40);
                  long long v30 = *(_OWORD *)(v17 - 24);
                  *((void *)v28 - 1) = *((void *)v17 - 1);
                  *(_OWORD *)(v28 - 24) = v30;
                  *(_OWORD *)(v28 - 40) = v29;
                  v28 -= 40;
                  v17 -= 40;
                }
                while (v17 != v18);
                double v17 = *(char **)(v16 - 24);
              }
              uint64_t v31 = v25 + 80;
              *(void *)(v16 - 24) = v28;
              *(void *)(v16 - 16) = v25 + 80;
              *(void *)(v16 - 8) = &v25[40 * v24];
              if (v17) {
                operator delete(v17);
              }
              *(void *)(v16 - 16) = v31;
            }
            else
            {
              long long v20 = *(_OWORD *)v3;
              long long v21 = *((_OWORD *)v3 + 1);
              *((void *)v17 + 4) = v3[4];
              *(_OWORD *)double v17 = v20;
              *((_OWORD *)v17 + 1) = v21;
              *(void *)(v16 - 16) = v17 + 40;
            }
          }
        }
        goto LABEL_4;
      }
LABEL_22:
      long long v32 = *(_OWORD *)v3;
      long long v33 = *((_OWORD *)v3 + 1);
      long long v34 = v3[4];
      char v12 = operator new(0x28uLL);
      __p[1] = (char *)v12 + 40;
      unint64_t v36 = (char *)v12 + 40;
      *char v12 = v32;
      v12[1] = v33;
      *((void *)v12 + 4) = v34;
      __p[0] = v12;
      long long v13 = *(void **)(a3 + 8);
      if ((unint64_t)v13 < *(void *)(a3 + 16))
      {
        *long long v13 = 0;
        v13[1] = 0;
        v13[2] = 0;
        *(_OWORD *)long long v13 = *(_OWORD *)__p;
        v13[2] = v36;
        *(void *)(a3 + 8) = v13 + 3;
      }
      else
      {
        long long v14 = sub_4D088((char **)a3, (uint64_t)__p);
        long long v15 = __p[0];
        *(void *)(a3 + 8) = v14;
        if (v15)
        {
          __p[1] = v15;
          operator delete(v15);
        }
      }
LABEL_4:
      v3 += 5;
    }
    while (v3 != v4);
  }
}

void sub_6A4130(_Unwind_Exception *a1)
{
  sub_36094(v1);
  _Unwind_Resume(a1);
}

void sub_6A4144(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  if (__p)
  {
    operator delete(__p);
    sub_36094(v16);
    _Unwind_Resume(a1);
  }
  sub_36094(v16);
  _Unwind_Resume(a1);
}

void sub_6A4190(uint64_t *a1, void *a2)
{
  *a1 = sub_3750CC(a2);
  sub_3CCE64(a1 + 1, a2);
  operator new();
}

void sub_6A42E8(_Unwind_Exception *a1)
{
  sub_68D148(v2);
  sub_5139D0(v3);
  long long v7 = *v5;
  if (*v5)
  {
    v1[19] = v7;
    operator delete(v7);
    unsigned int v8 = *v4;
    if (!*v4)
    {
LABEL_3:
      uint64_t v9 = v1[3];
      v1[3] = 0;
      if (!v9) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else
  {
    unsigned int v8 = *v4;
    if (!*v4) {
      goto LABEL_3;
    }
  }
  v1[6] = v8;
  operator delete(v8);
  uint64_t v10 = v1[3];
  v1[3] = 0;
  if (!v10) {
LABEL_4:
  }
    _Unwind_Resume(a1);
LABEL_7:
  operator delete();
}

void sub_6A4394(uint64_t a1, uint64_t a2, int a3)
{
  if (*(void *)(a2 + 9952) == *(void *)(a2 + 9960)) {
    sub_6A43AC(a1, a2, a3);
  }
}

void sub_6A43AC(uint64_t a1, uint64_t a2, int a3)
{
  if (sub_46C760((void *)a2) != 1)
  {
    unint64_t v5 = 0;
    long long v43 = (_OWORD *)(a1 + 64);
    do
    {
      sub_6A72C0(a1, (void *)a2, v5, (uint64_t)v55);
      v67[16] = sub_35E640();
      sub_6ED4F4(a1 + 5944, (void *)a2, v5, (uint64_t)v55);
      sub_6A763C(a1, (uint64_t)v43, (uint64_t)v55);
      int64_t v6 = ((char *)v55[1] - (char *)v55[0]) >> 3;
      int64_t v7 = v6 - 1;
      if (v6 == 1)
      {
        sub_E1B4((uint64_t)v50);
        unsigned __int16 v37 = sub_188FC78(v51, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MapsOfflineServices/submodules/routing/routing/src/guidance/ManeuverGenerator.cpp", 119);
        sub_188FC78(v37, (uint64_t)":", 1);
        int v38 = (void *)std::ostream::operator<<();
        BOOL v39 = sub_188FC78(v38, (uint64_t)":", 1);
        sub_188FC78(v39, (uint64_t)"Invalid maneuver with segment_delta of 0.", 41);
        exception = __cxa_allocate_exception(0x40uLL);
        std::stringbuf::str();
        int v41 = (void *)sub_2F404((uint64_t)exception, &v44);
      }
      uint64_t v8 = sub_46C8EC((void *)a2, v5);
      uint64_t v9 = *(void *)a1;
      uint64_t v10 = *(void *)(v8 + 32);
      uint64_t v11 = (int *)sub_2D5D58(*(void *)a1, v10 & 0xFFFFFFFFFFFFLL);
      if (*(unsigned char *)(v9 + 7772))
      {
        char v12 = sub_2DB8E0(v9 + 3896, v10, 0);
        long long v13 = &v12[-*(int *)v12];
        if (*(unsigned __int16 *)v13 < 5u)
        {
          uint64_t v14 = 0;
        }
        else
        {
          uint64_t v14 = *((unsigned __int16 *)v13 + 2);
          if (v14) {
            v14 += (uint64_t)&v12[*(unsigned int *)&v12[v14]];
          }
        }
        long long v15 = (int *)(v14 + 4 * WORD2(v10) + 4 + *(unsigned int *)(v14 + 4 * WORD2(v10) + 4));
      }
      else
      {
        long long v15 = 0;
      }
      uint64_t v16 = sub_2E5C38(v9, v10 & 0xFFFFFFFFFFFFLL, 1);
      v50[0] = v11;
      v50[1] = v15;
      v51[0] = v16;
      v51[1] = v17;
      int v52 = v10;
      __int16 v53 = WORD2(v10);
      unint64_t v18 = v7 + v5;
      BOOL v54 = (v10 & 0xFF000000000000) != 0;
      uint64_t v19 = sub_46C8EC((void *)a2, v7 + v5);
      uint64_t v20 = *(void *)a1;
      uint64_t v21 = *(void *)(v19 + 32);
      uint64_t v22 = sub_2D5D58(*(void *)a1, v21 & 0xFFFFFFFFFFFFLL);
      if (*(unsigned char *)(v20 + 7772))
      {
        uint64_t v23 = sub_2DB8E0(v20 + 3896, v21, 0);
        unint64_t v24 = &v23[-*(int *)v23];
        if (*(unsigned __int16 *)v24 < 5u)
        {
          uint64_t v25 = 0;
        }
        else
        {
          uint64_t v25 = *((unsigned __int16 *)v24 + 2);
          if (v25) {
            v25 += (uint64_t)&v23[*(unsigned int *)&v23[v25]];
          }
        }
        uint64_t v26 = v25 + 4 * WORD2(v21) + 4 + *(unsigned int *)(v25 + 4 * WORD2(v21) + 4);
      }
      else
      {
        uint64_t v26 = 0;
      }
      uint64_t v27 = sub_2E5C38(v20, v21 & 0xFFFFFFFFFFFFLL, 1);
      *(void *)&long long v44 = v22;
      *((void *)&v44 + 1) = v26;
      uint64_t v45 = v27;
      uint64_t v46 = v28;
      int v47 = v21;
      __int16 v48 = WORD2(v21);
      BOOL v49 = (v21 & 0xFF000000000000) != 0;
      *((void *)&v57 + 1) = v5;
      if (v57 || v67[2] || v67[21] || sub_69115C(a1, v50, (int **)&v44, a3))
      {
        unint64_t v29 = *(void *)(a2 + 9960);
        if (v29 >= *(void *)(a2 + 9968))
        {
          unint64_t v36 = sub_6CA248((void **)(a2 + 9952), (uint64_t)v55);
        }
        else
        {
          *(void *)(v29 + 8) = 0;
          *(void *)(v29 + 16) = 0;
          *(void *)unint64_t v29 = 0;
          *(_OWORD *)unint64_t v29 = *(_OWORD *)v55;
          *(void *)(v29 + 16) = v56;
          v55[0] = 0;
          v55[1] = 0;
          uint64_t v56 = 0;
          *(_OWORD *)(v29 + 24) = v57;
          *(void *)(v29 + 48) = 0;
          *(void *)(v29 + 56) = 0;
          *(void *)(v29 + 40) = 0;
          *(_OWORD *)(v29 + 40) = __p;
          *(void *)(v29 + 56) = v59;
          long long __p = 0uLL;
          uint64_t v59 = 0;
          *(_DWORD *)(v29 + 64) = v60;
          long long v30 = v61;
          long long v31 = v62;
          long long v32 = v63;
          *(_OWORD *)(v29 + 120) = v64;
          *(_OWORD *)(v29 + 104) = v32;
          *(_OWORD *)(v29 + 88) = v31;
          *(_OWORD *)(v29 + 72) = v30;
          long long v33 = v65;
          long long v34 = v66;
          long long v35 = *(_OWORD *)v67;
          *(void *)(v29 + 183) = *(void *)&v67[15];
          *(_OWORD *)(v29 + 168) = v35;
          *(_OWORD *)(v29 + 152) = v34;
          *(_OWORD *)(v29 + 136) = v33;
          unint64_t v36 = (char *)(v29 + 192);
        }
        *(void *)(a2 + 9960) = v36;
      }
      *(_DWORD *)(a1 + 96) = 0;
      *long long v43 = 0u;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_WORD *)(a1 + 100) = -1;
      *(unsigned char *)(a1 + 102) = 0;
      *(_OWORD *)(a1 + 104) = 0u;
      *(_OWORD *)(a1 + 120) = 0u;
      *(_DWORD *)(a1 + 136) = 0;
      *(_WORD *)(a1 + 140) = -1;
      *(unsigned char *)(a1 + 142) = 0;
      *(void *)(a1 + 152) = *(void *)(a1 + 144);
      *(void *)(a1 + 168) = -1;
      *(_DWORD *)(a1 + 176) = 0;
      if ((void)__p)
      {
        *((void *)&__p + 1) = __p;
        operator delete((void *)__p);
      }
      if (v55[0])
      {
        v55[1] = v55[0];
        operator delete(v55[0]);
      }
      unint64_t v5 = v18;
    }
    while (v18 < sub_46C760((void *)a2) - 1);
  }
  sub_6A7978(a1, (void *)a2);
}

void sub_6A484C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,char a60)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  sub_1C02990((uint64_t)&a25);
  sub_592058((uint64_t)&a60);
  _Unwind_Resume(a1);
}

void sub_6A4890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
}

void sub_6A48A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
}

void sub_6A48B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
}

void sub_6A48CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
}

void sub_6A48E0(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t **a4@<X8>)
{
  char v4 = a3;
  uint64_t v8 = *(unsigned __int8 *)(a1 + 6000);
  uint64_t v85 = *(void *)(a2 + 32);
  unsigned __int8 v86 = v8;
  unsigned __int8 v87 = a3;
  unsigned __int8 v88 = 0;
  unint64_t v9 = (((unint64_t)v85 << 6)
      + WORD2(v85)
      + ((unint64_t)v85 >> 2)
      + 2654435769u) ^ v85;
  unint64_t v10 = ((v8 | (v9 << 6)) + (v9 >> 2) + 2654435769u) ^ v9;
  if (a3) {
    uint64_t v11 = 2654435770;
  }
  else {
    uint64_t v11 = 2654435769;
  }
  unint64_t v12 = (v11 + (v10 << 6) + (v10 >> 2)) ^ v10;
  sub_6C93AC((uint64_t *)(*(void *)(*(void *)(a1 + 32) + 16)+ 272 * ((((v12 << 6) + (v12 >> 2) + 2654435769u) ^ v12) % **(void **)(a1 + 32))), (unsigned int *)&v85, (uint64_t)&v82);
  if (v84)
  {
    long long v13 = (uint64_t *)v83;
    *a4 = v82;
    a4[1] = v13;
    if (v13) {
      atomic_fetch_add_explicit(v13 + 1, 1uLL, memory_order_relaxed);
    }
    goto LABEL_91;
  }
  uint64_t v14 = *(void *)a1;
  uint64_t v15 = *(void *)(a2 + 32);
  uint64_t v16 = sub_2D5D58(*(void *)a1, v15 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v14 + 7772))
  {
    uint64_t v17 = sub_2DB8E0(v14 + 3896, v15, 0);
    unint64_t v18 = &v17[-*(int *)v17];
    if (*(unsigned __int16 *)v18 < 5u)
    {
      uint64_t v19 = 0;
    }
    else
    {
      uint64_t v19 = *((unsigned __int16 *)v18 + 2);
      if (v19) {
        v19 += (uint64_t)&v17[*(unsigned int *)&v17[v19]];
      }
    }
    uint64_t v20 = v19 + 4 * WORD2(v15) + 4 + *(unsigned int *)(v19 + 4 * WORD2(v15) + 4);
  }
  else
  {
    uint64_t v20 = 0;
  }
  *(void *)&long long v78 = v16;
  *((void *)&v78 + 1) = v20;
  uint64_t v79 = sub_2E5C38(v14, v15 & 0xFFFFFFFFFFFFLL, 1);
  uint64_t v80 = v21;
  LODWORD(v81) = v15;
  WORD2(v81) = WORD2(v15);
  BYTE6(v81) = (v15 & 0xFF000000000000) != 0;
  long long v75 = 0;
  long long v76 = 0;
  uint64_t v77 = 0;
  if ((v4 & 1) != 0 || sub_663238(a1 + 3048, (int **)a2))
  {
    sub_2E44A4(*(void *)a1, (uint64_t)&v78, &v75);
    sub_6DBA6C(a1 + 1160, (uint64_t)&v78, (uint64_t *)&v75);
  }
  else
  {
    sub_6A51D8(a1, &v78, (char **)&v75, 0);
  }
  long long __p = 0;
  unint64_t v73 = 0;
  uint64_t v74 = 0;
  sub_68F4F8(*(void *)a1, *(unsigned int *)(a2 + 32) | ((unint64_t)*(unsigned __int16 *)(a2 + 36) << 32), &v70);
  uint64_t v22 = (unint64_t *)v70;
  uint64_t v23 = v71;
  if (v70 != v71)
  {
    unint64_t v24 = 0;
    while (1)
    {
      unint64_t v26 = *v22;
      uint64_t v27 = (int *)sub_2DBC9C(*(void *)a1, *v22);
      uint64_t v28 = (unsigned __int16 *)((char *)v27 - *v27);
      unsigned int v29 = *v28;
      if (v29 < 0xF)
      {
        if (v29 < 5) {
          goto LABEL_31;
        }
      }
      else if (v28[7] && (*((unsigned char *)v27 + v28[7]) & 1) == 0)
      {
        goto LABEL_21;
      }
      if ((!v28[2] || *((unsigned __int8 *)v27 + v28[2]) - 1 >= 5) && (v29 < 9 || !v28[4]))
      {
LABEL_31:
        sub_68F5DC(*(void *)a1, v26, (unint64_t *)&__src);
        long long v30 = v90;
        if (v24 < v74)
        {
          *(void *)unint64_t v24 = *((void *)v90 - 1);
          uint64_t v25 = v24 + 8;
          goto LABEL_49;
        }
        long long v31 = (char *)__p;
        uint64_t v32 = (v24 - (unsigned char *)__p) >> 3;
        unint64_t v33 = v32 + 1;
        if ((unint64_t)(v32 + 1) >> 61) {
          sub_2E00();
        }
        uint64_t v34 = v74 - (unsigned char *)__p;
        if ((v74 - (unsigned char *)__p) >> 2 > v33) {
          unint64_t v33 = v34 >> 2;
        }
        if ((unint64_t)v34 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v35 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v35 = v33;
        }
        if (v35)
        {
          if (v35 >> 61) {
            sub_188D718();
          }
          unint64_t v36 = (char *)operator new(8 * v35);
          unsigned __int16 v37 = &v36[8 * v32];
          *(void *)unsigned __int16 v37 = *((void *)v30 - 1);
          uint64_t v25 = v37 + 8;
          if (v24 == v31)
          {
LABEL_47:
            long long __p = v37;
            unint64_t v73 = v25;
            uint64_t v74 = &v36[8 * v35];
            if (v24) {
              goto LABEL_48;
            }
            goto LABEL_49;
          }
        }
        else
        {
          unint64_t v36 = 0;
          unsigned __int16 v37 = (char *)(8 * v32);
          *(void *)(8 * v32) = *((void *)v90 - 1);
          uint64_t v25 = (void *)(8 * v32 + 8);
          if (v24 == v31) {
            goto LABEL_47;
          }
        }
        do
        {
          int v38 = *((_DWORD *)v24 - 2);
          v24 -= 8;
          int v39 = *(_DWORD *)(v24 + 3);
          *((_DWORD *)v37 - 2) = v38;
          v37 -= 8;
          *(_DWORD *)(v37 + 3) = v39;
        }
        while (v24 != v31);
        unint64_t v24 = (char *)__p;
        long long __p = v37;
        unint64_t v73 = v25;
        uint64_t v74 = &v36[8 * v35];
        if (v24) {
LABEL_48:
        }
          operator delete(v24);
LABEL_49:
        unint64_t v73 = v25;
        if (__src)
        {
          long long v90 = __src;
          operator delete(__src);
        }
        goto LABEL_22;
      }
LABEL_21:
      uint64_t v25 = v24;
LABEL_22:
      ++v22;
      unint64_t v24 = (char *)v25;
      if (v22 == v23) {
        goto LABEL_52;
      }
    }
  }
  uint64_t v25 = 0;
LABEL_52:
  uint64_t v40 = operator new(0x30uLL);
  v40[1] = 0;
  v40[2] = 0;
  *uint64_t v40 = off_243A340;
  v40[3] = 0;
  int v41 = (void **)(v40 + 3);
  uint64_t v40[4] = 0;
  v40[5] = 0;
  *a4 = v40 + 3;
  a4[1] = v40;
  long long v43 = v75;
  long long v42 = v76;
  unint64_t v44 = 0xCCCCCCCCCCCCCCCDLL * ((v76 - (unsigned char *)v75) >> 3);
  if (v76 != v75)
  {
    sub_6C973C(v41, 0xCCCCCCCCCCCCCCCDLL * ((v76 - (unsigned char *)v75) >> 3));
    long long v43 = v75;
    long long v42 = v76;
    unint64_t v44 = 0xCCCCCCCCCCCCCCCDLL * ((v76 - (unsigned char *)v75) >> 3);
  }
  if (v42 != v43)
  {
    for (unint64_t i = 0; i != v44; ++i)
    {
      int v47 = (int **)sub_66F838(&v75, i);
      uint64_t v48 = sub_68F6BC(*a4, i);
      long long __src = v81;
      uint64_t v69 = v47[4];
      if ((sub_6A64F8(a1, (unsigned int *)&__src, &v69, v48) & 1) == 0
        && (sub_6AF52C(a1, (int **)&v78, (uint64_t *)&v75, i, 1, v48) & 1) == 0
        && (sub_6B02CC(a1, (uint64_t)&v78, (uint64_t *)&v75, i, v48) & 1) == 0)
      {
        BOOL v49 = v47[4];
        long long __src = v81;
        long long v90 = v49;
        sub_2D8554((void *)v48, (char *)&__src, v91, 2uLL);
        *(_DWORD *)(v48 + 24) = sub_6A67C8(a1, (int **)&v78, (uint64_t *)&v75, i, 1, 1, 0);
      }
      BOOL v50 = (char *)*v47;
      uint64_t v51 = (unsigned __int16 *)((char *)*v47 - **v47);
      unsigned int v52 = *v51;
      if (*((unsigned char *)v47 + 38))
      {
        if (v52 < 0xB) {
          goto LABEL_75;
        }
        unsigned int v53 = v51[5];
        if (v51[5])
        {
          int v54 = 2;
LABEL_69:
          LOBYTE(v53) = (*(_DWORD *)&v50[v53] & v54) != 0;
        }
      }
      else
      {
        if (v52 < 0xB)
        {
LABEL_75:
          *(unsigned char *)(v48 + 185) = 0;
          *(unsigned char *)(v48 + 186) = 0;
          long long v57 = __p;
          uint64_t v46 = v25;
          if (__p != v25) {
            goto LABEL_78;
          }
          goto LABEL_57;
        }
        unsigned int v53 = v51[5];
        if (v51[5])
        {
          int v54 = 1;
          goto LABEL_69;
        }
      }
      *(unsigned char *)(v48 + 185) = v53;
      if (v52 >= 0x2F && (uint64_t v55 = v51[23]) != 0 && (v56 = v50[v55], v56 < 0x30))
      {
        *(unsigned char *)(v48 + 186) = (0xE2E040048000uLL >> v56) & 1;
        long long v57 = __p;
        uint64_t v46 = v25;
        if (__p != v25) {
          goto LABEL_78;
        }
      }
      else
      {
        *(unsigned char *)(v48 + 186) = 0;
        long long v57 = __p;
        uint64_t v46 = v25;
        if (__p != v25)
        {
LABEL_78:
          unint64_t v58 = (unint64_t)v47[4];
          uint64_t v46 = v57;
          while ((*v46 & 0xFFFFFFFFFFFFLL) != (v58 & 0xFFFFFFFFFFFFLL)
               || (HIWORD(v58) & 1) == ((*v46 & 0xFF000000000000) == 0))
          {
            if (++v46 == v25)
            {
              uint64_t v46 = v25;
              break;
            }
          }
        }
      }
LABEL_57:
      *(unsigned char *)(v48 + 187) = v46 != v25;
    }
  }
  uint64_t v59 = *(void **)(a1 + 32);
  int v60 = (uint64_t *)(*a4)[1];
  long long v61 = (uint64_t *)**a4;
  for (uint64_t j = (*a4)[2] - (void)v61; v61 != v60; v61 += 24)
  {
    uint64_t v63 = v61[2];
    uint64_t v64 = *v61;
    uint64_t j = j + v63 - v64 + sub_6E6650(v61 + 5);
  }
  unint64_t v65 = (WORD2(v85)
       + 2654435769
       + ((unint64_t)v85 << 6)
       + ((unint64_t)v85 >> 2)) ^ v85;
  unint64_t v66 = (v86 + 2654435769 + (v65 << 6) + (v65 >> 2)) ^ v65;
  unint64_t v67 = (v87 + 2654435769 + (v66 << 6) + (v66 >> 2)) ^ v66;
  sub_6C9A3C(v59[2] + 272 * (((v88 + 2654435769 + (v67 << 6) + (v67 >> 2)) ^ v67) % *v59), (unsigned int *)&v85, a4, j + 24);
  if (v70)
  {
    uint64_t v71 = (unint64_t *)v70;
    operator delete(v70);
  }
  if (__p) {
    operator delete(__p);
  }
  if (v75)
  {
    long long v76 = v75;
    operator delete(v75);
  }
LABEL_91:
  long long v68 = v83;
  if (v83)
  {
    if (!atomic_fetch_add(&v83->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
      std::__shared_weak_count::__release_weak(v68);
    }
  }
}

void sub_6A50C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
  if (__p)
  {
    operator delete(__p);
    unint64_t v26 = a14;
    if (!a14)
    {
LABEL_3:
      uint64_t v27 = a17;
      if (!a17) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else
  {
    unint64_t v26 = a14;
    if (!a14) {
      goto LABEL_3;
    }
  }
  operator delete(v26);
  uint64_t v27 = a17;
  if (!a17)
  {
LABEL_4:
    sub_14A84((uint64_t)&a25);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(v27);
  sub_14A84((uint64_t)&a25);
  _Unwind_Resume(a1);
}

void sub_6A51D8(uint64_t a1, long long *a2, char **a3, char a4)
{
  a3[1] = *a3;
  unint64_t v212 = 0;
  uint64_t v213 = 0;
  uint64_t v214 = 0;
  *(void *)&long long v215 = 0;
  sub_69070C((char **)&v212, a2, &v215);
  unint64_t v5 = v212;
  if (v213 - (unsigned char *)v212 >= 49)
  {
    unint64_t v6 = ((v213 - (unsigned char *)v212) / 0x30uLL - 2) >> 1;
    uint64_t v7 = *((void *)v213 - 1);
    if (*((void *)v212 + 6 * v6 + 5) > v7)
    {
      uint64_t v8 = v213 - 48;
      long long v218 = *((_OWORD *)v213 - 3);
      long long v219 = *((_OWORD *)v213 - 2);
      uint64_t v220 = *((void *)v213 - 2);
      do
      {
        unint64_t v9 = v8;
        uint64_t v8 = (char *)&v5[6 * v6];
        long long v10 = *(_OWORD *)v8;
        long long v11 = *((_OWORD *)v8 + 1);
        *((void *)v9 + 4) = *((void *)v8 + 4);
        *(_OWORD *)unint64_t v9 = v10;
        *((_OWORD *)v9 + 1) = v11;
        *((void *)v9 + 5) = *((void *)v8 + 5);
        if (!v6) {
          break;
        }
        unint64_t v6 = (v6 - 1) >> 1;
      }
      while (v5[6 * v6 + 5] > v7);
      *(_OWORD *)uint64_t v8 = v218;
      *((_OWORD *)v8 + 1) = v219;
      *((void *)v8 + 4) = v220;
      *((void *)v8 + 5) = v7;
    }
  }
  uint64_t v209 = 0;
  uint64_t v210 = 0;
  unint64_t v211 = 0;
  *(void *)&long long v218 = *((unsigned int *)a2 + 8) | ((unint64_t)*((unsigned __int16 *)a2 + 18) << 32);
  sub_29603C(&v209, &v218);
  double v194 = a3;
  uint64_t v206 = 0;
  uint64_t v207 = 0;
  uint64_t v208 = 0;
  long long __p = 0;
  unint64_t v204 = 0;
  unint64_t v205 = 0;
  unint64_t v12 = v212;
  long long v13 = v213;
  if (v212 == v213)
  {
    unint64_t v151 = 0;
    unsigned int v177 = 0;
    long long v215 = 0uLL;
    *(void *)&long long v216 = 0;
    goto LABEL_227;
  }
  uint64_t v14 = 0;
  uint64_t v15 = a1 + 1160;
  uint64_t v195 = a1 + 8;
  while (2)
  {
    long long v16 = *v12;
    long long v17 = v12[1];
    uint64_t v198 = *((void *)v12 + 5);
    uint64_t v202 = *((void *)v12 + 4);
    v201[0] = v16;
    v201[1] = v17;
    if (v13 - (char *)v12 >= 49)
    {
      uint64_t v18 = 0;
      int64_t v19 = 0xAAAAAAAAAAAAAAABLL * ((v13 - (char *)v12) >> 4);
      long long v215 = *v12;
      long long v216 = v12[1];
      uint64_t v217 = *((void *)v12 + 4);
      uint64_t v20 = v12;
      do
      {
        uint64_t v23 = v18 + 1;
        unint64_t v24 = (char *)&v20[3 * v18 + 3];
        uint64_t v25 = (2 * v18) | 1;
        uint64_t v26 = 2 * v18 + 2;
        if (v26 < v19)
        {
          uint64_t v27 = *((void *)&v20[3 * v23 + 2] + 1);
          uint64_t v28 = *((void *)v24 + 11);
          v24 += 48 * (v27 > v28);
          if (v27 > v28) {
            uint64_t v25 = v26;
          }
        }
        long long v21 = *(_OWORD *)v24;
        long long v22 = *((_OWORD *)v24 + 1);
        *((void *)v20 + 4) = *((void *)v24 + 4);
        *uint64_t v20 = v21;
        v20[1] = v22;
        *((void *)v20 + 5) = *((void *)v24 + 5);
        uint64_t v20 = v24;
        uint64_t v18 = v25;
      }
      while (v25 <= (uint64_t)((unint64_t)(v19 - 2) >> 1));
      unsigned int v29 = (long long *)(v13 - 48);
      if (v24 == v13 - 48)
      {
        long long v40 = v216;
        uint64_t v41 = v217;
        *(_OWORD *)unint64_t v24 = v215;
        *((_OWORD *)v24 + 1) = v40;
        *((void *)v24 + 4) = v41;
        *((void *)v24 + 5) = v198;
      }
      else
      {
        long long v30 = *v29;
        long long v31 = *((_OWORD *)v13 - 2);
        *((void *)v24 + 4) = *((void *)v13 - 2);
        *(_OWORD *)unint64_t v24 = v30;
        *((_OWORD *)v24 + 1) = v31;
        *((void *)v24 + 5) = *((void *)v13 - 1);
        *unsigned int v29 = v215;
        *((_OWORD *)v13 - 2) = v216;
        *((void *)v13 - 2) = v217;
        *((void *)v13 - 1) = v198;
        uint64_t v32 = v24 - (char *)v12 + 48;
        if (v32 >= 49)
        {
          unint64_t v33 = (v32 / 0x30uLL - 2) >> 1;
          uint64_t v34 = *((void *)v24 + 5);
          if (*((void *)&v12[3 * v33 + 2] + 1) > v34)
          {
            long long v35 = *(_OWORD *)v24;
            long long v36 = *((_OWORD *)v24 + 1);
            uint64_t v220 = *((void *)v24 + 4);
            long long v218 = v35;
            long long v219 = v36;
            do
            {
              unsigned __int16 v37 = v24;
              unint64_t v24 = (char *)&v12[3 * v33];
              long long v38 = *(_OWORD *)v24;
              long long v39 = *((_OWORD *)v24 + 1);
              *((void *)v37 + 4) = *((void *)v24 + 4);
              *(_OWORD *)unsigned __int16 v37 = v38;
              *((_OWORD *)v37 + 1) = v39;
              *((void *)v37 + 5) = *((void *)v24 + 5);
              if (!v33) {
                break;
              }
              unint64_t v33 = (v33 - 1) >> 1;
            }
            while (*((void *)&v12[3 * v33 + 2] + 1) > v34);
            *(_OWORD *)unint64_t v24 = v218;
            *((_OWORD *)v24 + 1) = v219;
            *((void *)v24 + 4) = v220;
            *((void *)v24 + 5) = v34;
          }
        }
      }
      long long v13 = v213;
    }
    uint64_t v213 = v13 - 48;
    sub_2E44A4(*(void *)a1, (uint64_t)v201, &v206);
    long long v43 = (int **)v206;
    long long v42 = v207;
    unsigned int v200 = v207;
    while (v43 != v42)
    {
      uint64_t v44 = *((unsigned __int16 *)v43 + 18);
      uint64_t v45 = *((unsigned int *)v43 + 8);
      int v47 = (char *)v209;
      uint64_t v46 = v210;
      uint64_t v48 = (char *)v209;
      if (v209 != v210)
      {
        uint64_t v48 = (char *)v209;
        while (*(void *)v48 != __PAIR64__(v44, v45))
        {
          v48 += 8;
          if (v48 == v210) {
            goto LABEL_35;
          }
        }
      }
      if (v48 != v210) {
        goto LABEL_28;
      }
LABEL_35:
      uint64_t v49 = v45 | (v44 << 32);
      if (v210 < v211)
      {
        *(void *)uint64_t v210 = v49;
        uint64_t v50 = (uint64_t)(v46 + 8);
        goto LABEL_58;
      }
      uint64_t v51 = v14;
      uint64_t v52 = (v210 - (unsigned char *)v209) >> 3;
      unint64_t v53 = v52 + 1;
      if ((unint64_t)(v52 + 1) >> 61) {
        sub_2E00();
      }
      uint64_t v54 = v211 - (unsigned char *)v209;
      if ((v211 - (unsigned char *)v209) >> 2 > v53) {
        unint64_t v53 = v54 >> 2;
      }
      if ((unint64_t)v54 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v55 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v55 = v53;
      }
      if (v55)
      {
        if (v55 >> 61) {
          sub_188D718();
        }
        unsigned int v56 = operator new(8 * v55);
        long long v57 = (uint64_t *)&v56[8 * v52];
        uint64_t *v57 = v49;
        uint64_t v50 = (uint64_t)(v57 + 1);
        if (v47 != v46)
        {
LABEL_46:
          unint64_t v58 = v46 - 8 - v47;
          if (v58 < 0x58)
          {
            uint64_t v15 = a1 + 1160;
            goto LABEL_55;
          }
          uint64_t v15 = a1 + 1160;
          if ((unint64_t)(v47 - v56) < 0x20) {
            goto LABEL_263;
          }
          uint64_t v59 = (v58 >> 3) + 1;
          uint64_t v60 = 8 * (v59 & 0x3FFFFFFFFFFFFFFCLL);
          long long v61 = &v46[-v60];
          long long v57 = (uint64_t *)((char *)v57 - v60);
          long long v62 = &v56[8 * v52 - 16];
          uint64_t v63 = v46 - 16;
          uint64_t v64 = v59 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            long long v65 = *(_OWORD *)v63;
            *(v62 - 1) = *((_OWORD *)v63 - 1);
            _OWORD *v62 = v65;
            v62 -= 2;
            v63 -= 32;
            v64 -= 4;
          }
          while (v64);
          uint64_t v46 = v61;
          if (v59 != (v59 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_263:
            do
            {
LABEL_55:
              uint64_t v66 = *((void *)v46 - 1);
              v46 -= 8;
              *--long long v57 = v66;
            }
            while (v46 != v47);
          }
          int v47 = (char *)v209;
          uint64_t v209 = v57;
          uint64_t v210 = (char *)v50;
          unint64_t v211 = &v56[8 * v55];
          uint64_t v14 = v51;
          if (!v47) {
            goto LABEL_58;
          }
LABEL_57:
          operator delete(v47);
          goto LABEL_58;
        }
      }
      else
      {
        unsigned int v56 = 0;
        long long v57 = (uint64_t *)(8 * v52);
        *(void *)(8 * v52) = v49;
        uint64_t v50 = 8 * v52 + 8;
        if (v47 != v46) {
          goto LABEL_46;
        }
      }
      uint64_t v15 = a1 + 1160;
      uint64_t v209 = v57;
      uint64_t v210 = (char *)v50;
      unint64_t v211 = &v56[8 * v55];
      uint64_t v14 = v51;
      if (v47) {
        goto LABEL_57;
      }
LABEL_58:
      uint64_t v210 = (char *)v50;
      if (sub_66341C(a1 + 3048, v43))
      {
        unint64_t v67 = (unsigned __int16 *)((char *)*v43 - **v43);
        v69 = *v67 >= 0x2Fu && (uint64_t v68 = v67[23]) != 0 && (*((unsigned char *)*v43 + v68) & 0xF7) == 34;
        uint64_t v14 = v14 | v69;
        if (sub_6DB184(v15, v43)) {
          goto LABEL_67;
        }
        if (!*(unsigned char *)(a1 + 1080)) {
          goto LABEL_28;
        }
        long long v97 = *v43;
        uint64_t v98 = (unsigned __int16 *)((char *)*v43 - **v43);
        unsigned int v99 = *v98;
        if (*((unsigned char *)v43 + 38))
        {
          if (v99 >= 0xB && v98[5] && (*(int *)((char *)v97 + v98[5]) & 2) != 0) {
            goto LABEL_67;
          }
        }
        else if (v99 >= 0xB && v98[5] && (*(int *)((char *)v97 + v98[5]) & 1) != 0)
        {
          goto LABEL_67;
        }
        uint64_t v120 = *(void *)a2;
        unint64_t v121 = (unsigned __int16 *)(*(void *)a2 - **(int **)a2);
        unsigned int v122 = *v121;
        if (v122 >= 0x2F && v121[23])
        {
          int v123 = *(unsigned __int8 *)(v120 + v121[23]);
          if (v99 < 0x2F) {
            goto LABEL_138;
          }
LABEL_135:
          if (v98[23])
          {
            if (v123 != *((unsigned __int8 *)v97 + v98[23])) {
              goto LABEL_28;
            }
            goto LABEL_139;
          }
        }
        else
        {
          int v123 = 32;
          if (v99 >= 0x2F) {
            goto LABEL_135;
          }
        }
LABEL_138:
        if (v123 != 32) {
          goto LABEL_28;
        }
LABEL_139:
        if (v122 >= 0x43 && (uint64_t v124 = v121[33]) != 0)
        {
          int v125 = *(unsigned __int8 *)(v120 + v124);
          if (v99 < 0x43) {
            goto LABEL_168;
          }
LABEL_156:
          uint64_t v134 = v98[33];
          if (v134)
          {
            if (v125 != *((unsigned __int8 *)v97 + v134)) {
              goto LABEL_28;
            }
            goto LABEL_169;
          }
        }
        else
        {
          int v125 = 0;
          if (v99 >= 0x43) {
            goto LABEL_156;
          }
        }
LABEL_168:
        if (v125) {
          goto LABEL_28;
        }
LABEL_169:
        if (fabs(sub_6D82EC(v15, (int **)a2, v43)) < *(double *)(a1 + 288)) {
          goto LABEL_28;
        }
        *(void *)&long long v218 = sub_2E4738((int **)a2);
        if (sub_3CCE68(v195, (unsigned int **)&v218)) {
          goto LABEL_28;
        }
        uint64_t v138 = (unsigned __int16 *)(*(void *)a2 - **(int **)a2);
        if (*v138 >= 0xBu && (uint64_t v139 = v138[5]) != 0)
        {
          int v140 = (*(unsigned __int8 *)(*(void *)a2 + v139) >> 2) & 1;
          uint64_t v141 = *v43;
          uint64_t v142 = (unsigned __int16 *)((char *)*v43 - **v43);
          if (*v142 < 0xBu) {
            goto LABEL_191;
          }
LABEL_184:
          uint64_t v149 = v142[5];
          if (v149)
          {
            if (v140 != (*(int *)((char *)v141 + v149) & 4u) >> 2) {
              goto LABEL_28;
            }
            goto LABEL_67;
          }
        }
        else
        {
          int v140 = 0;
          uint64_t v141 = *v43;
          uint64_t v142 = (unsigned __int16 *)((char *)*v43 - **v43);
          if (*v142 >= 0xBu) {
            goto LABEL_184;
          }
        }
LABEL_191:
        if (v140) {
          goto LABEL_28;
        }
LABEL_67:
        uint64_t v74 = (unsigned __int16 *)((char *)*v43 - **v43);
        if (*v74 >= 9u)
        {
          uint64_t v75 = v74[4];
          if (v75)
          {
            uint64_t v76 = *(unsigned int *)((char *)*v43 + v75) + v198;
            long long v78 = v213;
            uint64_t v77 = v214;
            if (v213 >= v214) {
              goto LABEL_70;
            }
LABEL_108:
            long long v112 = *((_OWORD *)v43 + 1);
            int v113 = v43[4];
            *(_OWORD *)long long v78 = *(_OWORD *)v43;
            *((_OWORD *)v78 + 1) = v112;
            *((void *)v78 + 4) = v113;
            *((void *)v78 + 5) = v76;
            uint64_t v92 = v78 + 48;
LABEL_145:
            uint64_t v213 = v92;
            uint64_t v126 = v212;
            if (v92 - (unsigned char *)v212 >= 49)
            {
              unint64_t v127 = ((v92 - (unsigned char *)v212) / 0x30uLL - 2) >> 1;
              uint64_t v128 = *((void *)v92 - 1);
              if (*((void *)v212 + 6 * v127 + 5) > v128)
              {
                unint64_t v129 = v92 - 48;
                long long v218 = *((_OWORD *)v92 - 3);
                long long v219 = *((_OWORD *)v92 - 2);
                uint64_t v220 = *((void *)v92 - 2);
                do
                {
                  int v130 = v129;
                  unint64_t v129 = (char *)&v126[6 * v127];
                  long long v131 = *(_OWORD *)v129;
                  long long v132 = *((_OWORD *)v129 + 1);
                  *((void *)v130 + 4) = *((void *)v129 + 4);
                  *(_OWORD *)int v130 = v131;
                  *((_OWORD *)v130 + 1) = v132;
                  *((void *)v130 + 5) = *((void *)v129 + 5);
                  if (!v127) {
                    break;
                  }
                  unint64_t v127 = (v127 - 1) >> 1;
                }
                while (v126[6 * v127 + 5] > v128);
                *(_OWORD *)unint64_t v129 = v218;
                *((_OWORD *)v129 + 1) = v219;
                *((void *)v129 + 4) = v220;
                *((void *)v129 + 5) = v128;
              }
            }
            goto LABEL_28;
          }
        }
        uint64_t v76 = v198;
        long long v78 = v213;
        uint64_t v77 = v214;
        if (v213 < v214) {
          goto LABEL_108;
        }
LABEL_70:
        uint64_t v79 = (char *)v212;
        unint64_t v80 = 0xAAAAAAAAAAAAAAABLL * ((v78 - (unsigned char *)v212) >> 4);
        unint64_t v81 = v80 + 1;
        if (v80 + 1 > 0x555555555555555) {
          sub_2E00();
        }
        unint64_t v82 = 0xAAAAAAAAAAAAAAABLL * ((v77 - (unsigned char *)v212) >> 4);
        if (2 * v82 > v81) {
          unint64_t v81 = 2 * v82;
        }
        if (v82 >= 0x2AAAAAAAAAAAAAALL) {
          unint64_t v83 = 0x555555555555555;
        }
        else {
          unint64_t v83 = v81;
        }
        if (v83 > 0x555555555555555) {
          sub_188D718();
        }
        char v84 = (char *)operator new(48 * v83);
        uint64_t v85 = &v84[48 * v80];
        long long v86 = *((_OWORD *)v43 + 1);
        unsigned __int8 v87 = v43[4];
        *(_OWORD *)uint64_t v85 = *(_OWORD *)v43;
        *((_OWORD *)v85 + 1) = v86;
        *((void *)v85 + 4) = v87;
        *((void *)v85 + 5) = v76;
        if (v78 == v79)
        {
          uint64_t v92 = v85 + 48;
          unint64_t v212 = &v84[48 * v80];
          uint64_t v213 = v85 + 48;
          uint64_t v214 = &v84[48 * v83];
          if (!v79) {
            goto LABEL_145;
          }
        }
        else
        {
          unsigned __int8 v88 = &v84[48 * v80];
          do
          {
            uint64_t v89 = v88 - 48;
            long long v90 = *((_OWORD *)v78 - 3);
            long long v91 = *((_OWORD *)v78 - 1);
            *((_OWORD *)v88 - 2) = *((_OWORD *)v78 - 2);
            *((_OWORD *)v88 - 1) = v91;
            *((_OWORD *)v88 - 3) = v90;
            v78 -= 48;
            v88 -= 48;
          }
          while (v78 != v79);
          uint64_t v92 = v85 + 48;
          unint64_t v212 = v89;
          uint64_t v213 = v85 + 48;
          uint64_t v214 = &v84[48 * v83];
          if (!v79) {
            goto LABEL_145;
          }
        }
        operator delete(v79);
        goto LABEL_145;
      }
      if (sub_6DB184(v15, v43)) {
        goto LABEL_63;
      }
      if (!*(unsigned char *)(a1 + 1080)) {
        goto LABEL_162;
      }
      unint64_t v94 = *v43;
      uint64_t v95 = (unsigned __int16 *)((char *)*v43 - **v43);
      unsigned int v96 = *v95;
      if (*((unsigned char *)v43 + 38))
      {
        if (v96 >= 0xB && v95[5] && (*(int *)((char *)v94 + v95[5]) & 2) != 0) {
          goto LABEL_63;
        }
      }
      else if (v96 >= 0xB && v95[5] && (*(int *)((char *)v94 + v95[5]) & 1) != 0)
      {
LABEL_63:
        uint64_t v70 = v204;
        if (v204 >= v205)
        {
          long long v100 = (char *)__p;
          unint64_t v101 = 0xAAAAAAAAAAAAAAABLL * ((v204 - (unsigned char *)__p) >> 4);
          unint64_t v102 = v101 + 1;
          if (v101 + 1 > 0x555555555555555) {
            sub_2E00();
          }
          if (0x5555555555555556 * ((v205 - (unsigned char *)__p) >> 4) > v102) {
            unint64_t v102 = 0x5555555555555556 * ((v205 - (unsigned char *)__p) >> 4);
          }
          if (0xAAAAAAAAAAAAAAABLL * ((v205 - (unsigned char *)__p) >> 4) >= 0x2AAAAAAAAAAAAAALL) {
            unint64_t v103 = 0x555555555555555;
          }
          else {
            unint64_t v103 = v102;
          }
          if (v103 > 0x555555555555555) {
            sub_188D718();
          }
          uint64_t v104 = (char *)operator new(48 * v103);
          uint64_t v105 = &v104[48 * v101];
          long long v106 = *((_OWORD *)v43 + 1);
          uint64_t v107 = v43[4];
          *(_OWORD *)uint64_t v105 = *(_OWORD *)v43;
          *((_OWORD *)v105 + 1) = v106;
          *((void *)v105 + 4) = v107;
          *((void *)v105 + 5) = v198;
          if (v70 == v100)
          {
            unint64_t v73 = v105 + 48;
            long long __p = &v104[48 * v101];
            unint64_t v204 = v105 + 48;
            unint64_t v205 = &v104[48 * v103];
            if (!v100) {
              goto LABEL_106;
            }
          }
          else
          {
            uint64_t v108 = &v104[48 * v101];
            do
            {
              int v109 = v108 - 48;
              long long v110 = *((_OWORD *)v70 - 3);
              long long v111 = *((_OWORD *)v70 - 1);
              *((_OWORD *)v108 - 2) = *((_OWORD *)v70 - 2);
              *((_OWORD *)v108 - 1) = v111;
              *((_OWORD *)v108 - 3) = v110;
              v70 -= 48;
              v108 -= 48;
            }
            while (v70 != v100);
            unint64_t v73 = v105 + 48;
            long long __p = v109;
            unint64_t v204 = v105 + 48;
            unint64_t v205 = &v104[48 * v103];
            if (!v100) {
              goto LABEL_106;
            }
          }
          operator delete(v100);
        }
        else
        {
          long long v71 = *((_OWORD *)v43 + 1);
          BOOL v72 = v43[4];
          *(_OWORD *)unint64_t v204 = *(_OWORD *)v43;
          *((_OWORD *)v70 + 1) = v71;
          *((void *)v70 + 4) = v72;
          *((void *)v70 + 5) = v198;
          unint64_t v73 = v70 + 48;
        }
LABEL_106:
        unint64_t v204 = v73;
        goto LABEL_28;
      }
      uint64_t v114 = *(void *)a2;
      unint64_t v115 = (unsigned __int16 *)(*(void *)a2 - **(int **)a2);
      unsigned int v116 = *v115;
      if (v116 >= 0x2F && v115[23])
      {
        int v117 = *(unsigned __int8 *)(v114 + v115[23]);
        if (v96 < 0x2F) {
          goto LABEL_122;
        }
      }
      else
      {
        int v117 = 32;
        if (v96 < 0x2F) {
          goto LABEL_122;
        }
      }
      if (v95[23])
      {
        if (v117 != *((unsigned __int8 *)v94 + v95[23])) {
          goto LABEL_162;
        }
        goto LABEL_123;
      }
LABEL_122:
      if (v117 != 32) {
        goto LABEL_162;
      }
LABEL_123:
      if (v116 >= 0x43 && (uint64_t v118 = v115[33]) != 0)
      {
        int v119 = *(unsigned __int8 *)(v114 + v118);
        if (v96 < 0x43) {
          goto LABEL_159;
        }
      }
      else
      {
        int v119 = 0;
        if (v96 < 0x43) {
          goto LABEL_159;
        }
      }
      uint64_t v133 = v95[33];
      if (v133)
      {
        if (v119 != *((unsigned __int8 *)v94 + v133)) {
          goto LABEL_162;
        }
        goto LABEL_160;
      }
LABEL_159:
      if (v119) {
        goto LABEL_162;
      }
LABEL_160:
      if (fabs(sub_6D82EC(v15, (int **)a2, v43)) < *(double *)(a1 + 288)) {
        goto LABEL_162;
      }
      *(void *)&long long v218 = sub_2E4738((int **)a2);
      if (sub_3CCE68(v195, (unsigned int **)&v218)) {
        goto LABEL_162;
      }
      unint64_t v144 = (unsigned __int16 *)(*(void *)a2 - **(int **)a2);
      if (*v144 >= 0xBu && (uint64_t v145 = v144[5]) != 0)
      {
        int v146 = (*(unsigned __int8 *)(*(void *)a2 + v145) >> 2) & 1;
        BOOL v147 = *v43;
        double v148 = (unsigned __int16 *)((char *)*v43 - **v43);
        if (*v148 < 0xBu) {
          goto LABEL_193;
        }
      }
      else
      {
        int v146 = 0;
        BOOL v147 = *v43;
        double v148 = (unsigned __int16 *)((char *)*v43 - **v43);
        if (*v148 < 0xBu) {
          goto LABEL_193;
        }
      }
      uint64_t v150 = v148[5];
      if (v150)
      {
        if ((v146 ^ (*((unsigned __int8 *)v147 + v150) >> 2) & 1 ^ 1)) {
          goto LABEL_63;
        }
        goto LABEL_162;
      }
LABEL_193:
      if ((v146 ^ 1)) {
        goto LABEL_63;
      }
LABEL_162:
      if (a4) {
        goto LABEL_63;
      }
      if (*(unsigned char *)(a1 + 968))
      {
        uint64_t v135 = *v43;
        uint64_t v136 = (unsigned __int16 *)((char *)*v43 - **v43);
        unsigned int v137 = *v136;
        if (v137 < 0x2F)
        {
          if (v137 < 0xB) {
            goto LABEL_63;
          }
        }
        else if (v136[23] && *((unsigned char *)v135 + v136[23]) == 23)
        {
          goto LABEL_28;
        }
        uint64_t v143 = v136[5];
        if (!v143 || (*((unsigned char *)v135 + v143) & 4) == 0) {
          goto LABEL_63;
        }
      }
LABEL_28:
      v43 += 5;
      long long v42 = v200;
    }
    unint64_t v12 = v212;
    long long v13 = v213;
    if (v212 != v213) {
      continue;
    }
    break;
  }
  unint64_t v151 = (char *)__p;
  uint64_t v152 = 568;
  if (v14) {
    uint64_t v152 = 576;
  }
  uint64_t v153 = *(void *)(a1 + v152);
  long long v215 = 0uLL;
  *(void *)&long long v216 = 0;
  uint64_t v154 = v204 - (unsigned char *)__p;
  if (v204 == __p) {
    goto LABEL_224;
  }
  if (v154 < 0) {
    sub_2E00();
  }
  unint64_t v155 = 0xAAAAAAAAAAAAAAABLL * (v154 >> 4);
  long long v215 = (unint64_t)operator new(8 * (((v155 - 1) >> 6) + 1));
  *(void *)&long long v216 = ((v155 - 1) >> 6) + 1;
  sub_43284(&v215, v155, 0);
  unint64_t v151 = v204;
  if (v204 == __p)
  {
LABEL_224:
    unsigned int v177 = v151;
    goto LABEL_227;
  }
  unint64_t v156 = 0;
  unint64_t v157 = 0xAAAAAAAAAAAAAAABLL * ((v204 - (unsigned char *)__p) >> 4);
  while (2)
  {
    uint64_t v158 = (char *)__p + 48 * v156;
    long long v159 = *(_OWORD *)v158;
    long long v160 = *((_OWORD *)v158 + 1);
    uint64_t v220 = *((void *)v158 + 4);
    long long v218 = v159;
    long long v219 = v160;
    unint64_t v161 = (unsigned __int16 *)(v159 - *(int *)v159);
    if (*v161 >= 9u && (uint64_t v162 = v161[4]) != 0)
    {
      uint64_t v163 = *(unsigned int *)(v159 + v162);
      if (v163 < v153) {
        goto LABEL_207;
      }
    }
    else
    {
      uint64_t v163 = 0;
      if (v153 > 0)
      {
LABEL_207:
        uint64_t v164 = *((void *)v158 + 5);
        while (1)
        {
          sub_2E44A4(*(void *)a1, (uint64_t)&v218, &v206);
          sub_6DBA6C(v15, (uint64_t)&v218, (uint64_t *)&v206);
          unint64_t v165 = sub_6DBACC(v15, (int **)&v218, (uint64_t *)&v206, -1);
          if (v165 == -1) {
            break;
          }
          uint64_t v166 = sub_66F838(&v206, v165);
          long long v167 = *(_OWORD *)v166;
          long long v168 = *(_OWORD *)(v166 + 16);
          uint64_t v220 = *(void *)(v166 + 32);
          long long v218 = v167;
          long long v219 = v168;
          if (v204 != __p)
          {
            unint64_t v169 = 0;
            uint64_t v170 = (v204 - (unsigned char *)__p) / 48;
            do
            {
              if (v156 != v169)
              {
                uint64_t v173 = v220;
                unint64_t v174 = *(void *)(sub_690874(&__p, v169) + 32);
                if ((v173 & 0xFFFFFFFFFFFFLL) == (v174 & 0xFFFFFFFFFFFFLL)
                  && ((v173 & 0xFF000000000000) == 0) != (HIWORD(v174) & 1))
                {
                  if (v163 + v164 > *(void *)(sub_690874(&__p, v169) + 40)) {
                    unsigned __int16 v171 = (void *)sub_415F0(&v215, v156);
                  }
                  else {
                    unsigned __int16 v171 = (void *)sub_415F0(&v215, v169);
                  }
                  *v171 |= v172;
                }
              }
              ++v169;
            }
            while (v170 != v169);
          }
          long long v175 = (unsigned __int16 *)(v218 - *(int *)v218);
          if (*v175 >= 9u && (uint64_t v176 = v175[4]) != 0)
          {
            uint64_t v15 = a1 + 1160;
            v163 += *(unsigned int *)(v218 + v176);
            if (v163 >= v153) {
              break;
            }
          }
          else
          {
            uint64_t v15 = a1 + 1160;
            if (v163 >= v153) {
              break;
            }
          }
        }
      }
    }
    if (++v156 != v157) {
      continue;
    }
    break;
  }
  unint64_t v151 = (char *)__p;
  unsigned int v177 = v204;
LABEL_227:
  unint64_t v178 = 0xAAAAAAAAAAAAAAABLL * ((v177 - v151) >> 4);
  unint64_t v179 = *v194;
  if (0xCCCCCCCCCCCCCCCDLL * ((v194[2] - *v194) >> 3) < v178)
  {
    if (v178 >= 0x666666666666667) {
      sub_2E00();
    }
    unint64_t v180 = v194[1];
    unsigned int v181 = (char *)operator new(0xAAAAAAAAAAAAAAB8 * ((v177 - v151) >> 4));
    unsigned int v182 = &v181[40 * ((v180 - v179) / 40)];
    int v183 = v182;
    if (v180 != v179)
    {
      unsigned __int16 v184 = &v181[40 * ((v180 - v179) / 40)];
      do
      {
        long long v185 = *(_OWORD *)(v180 - 40);
        long long v186 = *(_OWORD *)(v180 - 24);
        int v183 = v184 - 40;
        *((void *)v184 - 1) = *((void *)v180 - 1);
        *(_OWORD *)(v184 - 24) = v186;
        *(_OWORD *)(v184 - 40) = v185;
        v180 -= 40;
        v184 -= 40;
      }
      while (v180 != v179);
    }
    *double v194 = v183;
    v194[1] = v182;
    v194[2] = &v181[0xAAAAAAAAAAAAAAB8 * ((v177 - v151) >> 4)];
    if (v179)
    {
      operator delete(v179);
      unint64_t v151 = (char *)__p;
      unsigned int v177 = v204;
      unint64_t v178 = 0xAAAAAAAAAAAAAAABLL * ((v204 - (unsigned char *)__p) >> 4);
    }
  }
  if (v177 != v151)
  {
    unint64_t v187 = 0;
    do
    {
      if (((*(void *)(v215 + ((v187 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v187) & 1) == 0)
      {
        double v188 = (long long *)sub_690874(&__p, v187);
        sub_64F484(v194, v188);
      }
      ++v187;
    }
    while (v178 != v187);
  }
  uint64_t v189 = *v194;
  uint64_t v190 = (int **)v194[1];
  unint64_t v191 = 126 - 2 * __clz(0xCCCCCCCCCCCCCCCDLL * (((char *)v190 - *v194) >> 3));
  BOOL v192 = v190 == (int **)*v194;
  *(void *)&long long v218 = a1;
  *((void *)&v218 + 1) = a2;
  if (v192) {
    uint64_t v193 = 0;
  }
  else {
    uint64_t v193 = v191;
  }
  sub_6D4CAC((long long *)v189, v190, (uint64_t *)&v218, v193, 1);
  if ((void)v215) {
    operator delete((void *)v215);
  }
  if (__p)
  {
    unint64_t v204 = (char *)__p;
    operator delete(__p);
  }
  if (v206)
  {
    uint64_t v207 = (int **)v206;
    operator delete(v206);
  }
  if (v209)
  {
    uint64_t v210 = (char *)v209;
    operator delete(v209);
  }
  if (v212)
  {
    uint64_t v213 = (char *)v212;
    operator delete(v212);
  }
}

void sub_6A63BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,void *__p,uint64_t a31,uint64_t a32,void *a33,uint64_t a34)
{
  if (__p)
  {
    operator delete(__p);
    long long v35 = a33;
    if (!a33) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    long long v35 = a33;
    if (!a33) {
      goto LABEL_3;
    }
  }
  operator delete(v35);
  _Unwind_Resume(exception_object);
}

uint64_t sub_6A64F8(uint64_t a1, unsigned int *a2, void *a3, uint64_t a4)
{
  uint64_t v8 = (int *)sub_2D5D58(*(void *)a1, *a2 | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32));
  unint64_t v9 = (unsigned __int16 *)((char *)v8 - *v8);
  if (*v9 < 0xBu) {
    return 0;
  }
  uint64_t v10 = v9[5];
  if (!v10) {
    return 0;
  }
  if ((*((unsigned char *)v8 + v10 + 3) & 2) == 0) {
    return 0;
  }
  if (!*(unsigned char *)(a1 + 681)) {
    return 0;
  }
  long long v11 = (int *)sub_2D5D58(*(void *)a1, *a2 | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32));
  unint64_t v12 = (unsigned __int16 *)((char *)v11 - *v11);
  if (*v12 < 0x21u || !v12[16]) {
    return 0;
  }
  sub_68F4F8(*(void *)a1, *a2 | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32), &v30);
  long long v13 = (unint64_t *)v30;
  uint64_t v14 = v31;
  if (v30 == v31)
  {
    uint64_t v15 = 0;
    goto LABEL_31;
  }
  while (1)
  {
    long long v17 = (int *)sub_2DBC9C(*(void *)a1, *v13);
    uint64_t v18 = (unsigned __int16 *)((char *)v17 - *v17);
    if (*v18 < 0xDu) {
      goto LABEL_12;
    }
    uint64_t v19 = v18[6];
    if (!v19) {
      goto LABEL_12;
    }
    uint64_t v20 = (int *)((char *)v17 + v19 + *(unsigned int *)((char *)v17 + v19));
    long long v21 = (unsigned __int16 *)((char *)v20 - *v20);
    if (*v21 >= 5u && (uint64_t v22 = v21[2]) != 0)
    {
      unsigned int v23 = *((unsigned __int8 *)v20 + v22);
      if (v23 >= 0xF || ((0x7EFFu >> v23) & 1) == 0) {
        goto LABEL_12;
      }
      int v24 = dword_20E8B9C[(char)v23];
    }
    else
    {
      int v24 = 0;
    }
    sub_68F5DC(*(void *)a1, *v13, (unint64_t *)&__p);
    uint64_t v25 = (char *)__p;
    if (__PAIR64__(*((unsigned __int16 *)__p + 2), *(_DWORD *)__p) == __PAIR64__((unsigned __int16)WORD2(*(void *)a2), *(void *)a2)&& (HIWORD(*(void *)a2) & 1) != (*((unsigned char *)__p + 6) == 0))
    {
      uint64_t v26 = *(char **)v29;
      if (__PAIR64__(*(unsigned __int16 *)(*(void *)v29 - 4), *(_DWORD *)(*(void *)v29 - 8)) == __PAIR64__((unsigned __int16)WORD2(*a3), *a3)
        && (HIWORD(*a3) & 1) != (*(unsigned char *)(*(void *)v29 - 2) == 0))
      {
        break;
      }
    }
    *(void *)unsigned int v29 = __p;
    operator delete(__p);
LABEL_12:
    if (++v13 == v14)
    {
      uint64_t v15 = 0;
      goto LABEL_29;
    }
  }
  *(_DWORD *)(a4 + 24) = v24;
  if (&__p == (void **)a4)
  {
    *(void *)unsigned int v29 = v25;
    uint64_t v27 = v25;
LABEL_34:
    operator delete(v27);
  }
  else
  {
    sub_2D8554((void *)a4, v25, v26, (v26 - v25) >> 3);
    uint64_t v27 = __p;
    if (__p)
    {
      *(void *)unsigned int v29 = __p;
      goto LABEL_34;
    }
  }
  uint64_t v15 = 1;
LABEL_29:
  long long v13 = (unint64_t *)v30;
LABEL_31:
  if (v13)
  {
    long long v31 = v13;
    operator delete(v13);
  }
  return v15;
}

void sub_6A6778(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p)
  {
    operator delete(__p);
    uint64_t v14 = a12;
    if (!a12) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    uint64_t v14 = a12;
    if (!a12) {
      goto LABEL_3;
    }
  }
  operator delete(v14);
  _Unwind_Resume(exception_object);
}

uint64_t sub_6A67C8(uint64_t a1, int **a2, uint64_t *a3, unint64_t a4, int a5, uint64_t a6, char a7)
{
  sub_6ABA18(a1, a2, a3, a4, (uint64_t)&v56);
  if (a6 && v57) {
    return v56;
  }
  if (sub_6ABE94(a1, a2, (long long **)a3)) {
    return 0;
  }
  sub_696728(a1, a2, (int ***)a3, a4, (uint64_t)&v54);
  if (v55) {
    return v54;
  }
  uint64_t v50 = a1 + 1160;
  unint64_t v16 = sub_6DBACC(a1 + 1160, a2, a3, a4);
  if (!sub_6AC04C(a1, a2, a3, v16, a4, a7))
  {
    uint64_t v14 = 0;
    int v18 = 1;
    goto LABEL_19;
  }
  long long v17 = (int **)sub_5A7C34(a3, 0);
  int v18 = 1;
  uint64_t v19 = (int **)sub_5A7C34(a3, 1uLL);
  double v20 = sub_697680(a1, a2, v17, v19);
  if (a4 == 1)
  {
    int v18 = 0;
    BOOL v22 = v20 < v21;
    unsigned int v23 = 20;
    unsigned int v24 = 21;
  }
  else
  {
    if (a4)
    {
      uint64_t v14 = 0;
      goto LABEL_19;
    }
    int v18 = 0;
    BOOL v22 = v20 < v21;
    unsigned int v23 = 21;
    unsigned int v24 = 20;
  }
  if (v22) {
    uint64_t v14 = v24;
  }
  else {
    uint64_t v14 = v23;
  }
LABEL_19:
  uint64_t v25 = sub_5A7C34(a3, a4);
  uint64_t v26 = *(void *)(v25 + 32);
  long long v27 = *(_OWORD *)(v25 + 16);
  v52[0] = *(_OWORD *)v25;
  v52[1] = v27;
  uint64_t v53 = v26;
  uint64_t v51 = (unsigned int *)sub_2E4738(a2);
  int v28 = sub_3CCE68(a1 + 8, &v51);
  char v29 = v28;
  if (v16 == -1)
  {
    if (!v28) {
      goto LABEL_44;
    }
LABEL_24:
    long long v31 = *a2;
    uint64_t v32 = (unsigned __int16 *)((char *)*a2 - **a2);
    unsigned int v33 = *v32;
    if (v33 < 0x2F)
    {
      if (v33 < 0xB) {
        goto LABEL_31;
      }
    }
    else if (v32[23] && *((unsigned char *)v31 + v32[23]) == 23)
    {
LABEL_44:
      if (!v18) {
        goto LABEL_46;
      }
      goto LABEL_45;
    }
    uint64_t v34 = v32[5];
    if (v34 && (*((unsigned char *)v31 + v34) & 4) != 0) {
      goto LABEL_44;
    }
LABEL_31:
    long long v35 = (unsigned __int16 *)(*(void *)&v52[0] - (int)**(_DWORD **)&v52[0]);
    unsigned int v36 = *v35;
    if (v36 < 0x2F)
    {
      if (v36 < 0xB) {
        goto LABEL_44;
      }
    }
    else if (v35[23] && *(unsigned char *)(*(void *)&v52[0] + v35[23]) == 23)
    {
      goto LABEL_38;
    }
    uint64_t v37 = v35[5];
    if (!v37 || (*(unsigned char *)(*(void *)&v52[0] + v37) & 4) == 0) {
      goto LABEL_44;
    }
LABEL_38:
    BOOL v30 = (sub_2E79EC(*(void *)a1, (uint64_t)a2[4], v53) & 1) != 0
       || fabs(sub_6D82EC(v50, a2, (int **)v52)) < *(double *)(a1 + 200);
    goto LABEL_41;
  }
  BOOL v30 = v16 == a4;
  if (v16 != a4 && ((v28 ^ 1) & 1) == 0) {
    goto LABEL_24;
  }
LABEL_41:
  if ((v18 & v30) != 1) {
    goto LABEL_44;
  }
  if (sub_6ACDD8(a1, a2, (int ***)a3, a4))
  {
    uint64_t v14 = 3;
    goto LABEL_46;
  }
  if (sub_6AD338(a1, a2, (int **)v52, (int ***)a3, v29, v38))
  {
LABEL_45:
    uint64_t v14 = sub_69813C(a1, a2, a3, a4, v16);
    goto LABEL_46;
  }
  uint64_t v14 = 0;
LABEL_46:
  if (sub_6AD630(a1, (char **)a2, a3, a4, v16))
  {
    if ((int)v14 > 61)
    {
      if (v14 != 62)
      {
        if (v14 != 63) {
          goto LABEL_50;
        }
        goto LABEL_57;
      }
    }
    else if (v14 != 20)
    {
      if (v14 != 21) {
        goto LABEL_50;
      }
LABEL_57:
      uint64_t v46 = (unsigned __int16 *)((char *)*a2 - **a2);
      if (*v46 < 0xBu) {
        return 11;
      }
      uint64_t v47 = v46[5];
      uint64_t v14 = 11;
      if (v47)
      {
        if ((*(int *)((char *)*a2 + v47) & 0x8000) != 0) {
          return 30;
        }
        else {
          return 11;
        }
      }
      return v14;
    }
    uint64_t v48 = (unsigned __int16 *)((char *)*a2 - **a2);
    if (*v48 < 0xBu) {
      return 29;
    }
    uint64_t v49 = v48[5];
    uint64_t v14 = 29;
    if (v49)
    {
      if ((*(int *)((char *)*a2 + v49) & 0x8000) != 0) {
        return 11;
      }
      else {
        return 29;
      }
    }
    return v14;
  }
LABEL_50:
  if (a5 && sub_6AD8E4(a1, (long long *)a2, v14, a6))
  {
    double v40 = v39;
    double v41 = sub_6D82EC(v50, a2, (int **)v52);
    double v42 = fabs(v41);
    if (v42 > *(double *)(a1 + 280) || v42 >= v40)
    {
      if (v42 < *(double *)(a1 + 296)) {
        return v14;
      }
      BOOL v43 = v41 < 0.0;
      unsigned int v44 = 61;
      unsigned int v45 = 60;
    }
    else
    {
      BOOL v43 = v41 < 0.0;
      unsigned int v44 = 63;
      unsigned int v45 = 62;
    }
    if (v43) {
      return v45;
    }
    else {
      return v44;
    }
  }
  return v14;
}

uint64_t sub_6A6C20(uint64_t a1, void *a2)
{
  unint64_t v4 = sub_46C760(a2);
  uint64_t v5 = sub_64EFC4((uint64_t)a2);
  int v6 = *(_DWORD *)(v5 + 8);
  uint64_t v80 = *(void *)v5;
  int v81 = v6;
  char v7 = sub_64F240((uint64_t)a2);
  BOOL v8 = sub_64F348((uint64_t)a2);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = sub_46C8EC(a2, v4 - 1);
  sub_2954EC(v9, *(void *)(v10 + 32), (uint64_t)&v67);
  sub_2E4B5C((uint64_t)&v67, v74);
  uint64_t v14 = *(void **)(a1 + 40);
  if (v14)
  {
    *(void *)(a1 + 48) = v14;
    operator delete(v14);
    *(void *)(a1 + 40) = 0;
    *(void *)(a1 + 48) = 0;
    *(void *)(a1 + 56) = 0;
  }
  uint64_t v15 = v74[0];
  *(_OWORD *)(a1 + 40) = *(_OWORD *)v74;
  *(void *)(a1 + 56) = v75;
  v74[1] = 0;
  uint64_t v75 = 0;
  v74[0] = 0;
  if (__p)
  {
    BOOL v69 = __p;
    operator delete(__p);
  }
  if (v8) {
    uint64_t v16 = 82;
  }
  else {
    uint64_t v16 = 18;
  }
  if (v80 != -1 && *(void *)(a1 + 40) != *(void *)(a1 + 48))
  {
    sub_3B8BC4((unsigned int **)(a1 + 40), (unsigned int *)&v80, 0, 0, (uint64_t)&v67, (unint64_t)v15, v11, v12, v13);
    long long v17 = v67;
    uint64_t v18 = *(void *)(a1 + 888);
    uint64_t v19 = v18 / 100;
    __int16 v20 = v18 % 100;
    __int16 v21 = v18 < 0 ? -50 : 50;
    if (*(double *)&v67 >= (double)(v19
                                   + (int)(((5243 * (__int16)(v21 + v20)) >> 19)
                                         + ((5243 * (__int16)(v21 + v20)) >> 31))))
    {
      int v22 = (int)__p;
      int v65 = (int)v69;
      int v66 = HIDWORD(__p);
      int64_t v23 = v70;
      if (sub_64EFDC((uint64_t)a2)
        || ((uint64_t v24 = *(void *)(a1 + 896), v25 = v24 / 100, v26 = v24 % 100, v24 < 0) ? (v27 = -50) : (v27 = 50),
            *(double *)&v17 <= (double)(v25
                                      + (int)(((5243 * (__int16)(v27 + v26)) >> 19)
                                            + ((5243 * (__int16)(v27 + v26)) >> 31)))))
      {
        uint64_t v28 = sub_38128((void *)(a1 + 40), v23);
        unint64_t v67 = *(void **)v28;
        LODWORD(__p) = *(_DWORD *)(v28 + 8);
        char v29 = operator new(0x18uLL);
        BOOL v30 = v29;
        long long v78 = v29 + 6;
        uint64_t v79 = v29 + 6;
        *(double *)char v29 = *(double *)&v67;
        int v29[2] = __p;
        v29[3] = v22;
        v29[4] = v66;
        v29[5] = v65;
        uint64_t v77 = v29;
        LODWORD(v31) = *v29;
        if (*v29 == v22)
        {
          LODWORD(v31) = v22;
          if (v29[1] == v66)
          {
            LODWORD(v31) = v22;
            if (v29[2] == v65)
            {
              LODWORD(v31) = v22;
              if ((v23 & 0x80000000) == 0)
              {
                int64_t v23 = v23;
                while (1)
                {
                  uint64_t v32 = (_DWORD *)sub_38128((void *)(a1 + 40), v23);
                  LODWORD(v31) = *v32;
                  if (*v32 != *v30 || v32[1] != v30[1] || v32[2] != v30[2]) {
                    break;
                  }
                  if (v23-- < 1) {
                    goto LABEL_35;
                  }
                }
                uint64_t v34 = sub_38128((void *)(a1 + 40), v23);
                uint64_t v31 = *(void *)v34;
                _OWORD v30[2] = *(_DWORD *)(v34 + 8);
                *(void *)BOOL v30 = v31;
              }
            }
          }
        }
LABEL_35:
        if (v31 == v30[3] && v30[1] == v30[4] && v30[2] == v30[5] && v4 != 1)
        {
          uint64_t v35 = sub_46C8EC(a2, v4 - 2);
          sub_2954EC(*(void *)a1, *(void *)(v35 + 32), (uint64_t)v74);
          sub_3A5CB4((uint64_t)v74, (uint64_t)&v67);
          while (1)
          {
            unsigned int v36 = (char *)v74[1];
            if (v76)
            {
              if (v74[1] == v75)
              {
                int v44 = 0;
                LODWORD(v42) = 0;
              }
              else
              {
                unint64_t v37 = *((void *)v75 - 1);
                double v38 = sub_2964C4((uint64_t)v74[0], v37, 1);
                double v39 = &v38[*(unsigned __int16 *)&v38[-*(int *)v38 + 4]];
                uint64_t v40 = (uint64_t)&v39[4 * HIDWORD(v37) + *(unsigned int *)v39];
                double v41 = (int *)(v40 + 4 + *(unsigned int *)(v40 + 4));
                unsigned int v36 = (char *)v74[1];
                unint64_t v42 = (unint64_t)(v75 - (char *)v74[1]) >> 3;
                BOOL v43 = (unsigned int *)((char *)v41 + *(unsigned __int16 *)((char *)v41 - *v41 + 6));
                int v44 = *(unsigned int *)((char *)v43 + *v43);
              }
            }
            else
            {
              int v44 = v74[1] == v75 ? 0 : -1;
              LODWORD(v42) = v44;
            }
            if (v71 == v42 && v72 == v44) {
              break;
            }
            if (*(void *)v30 != sub_2E1BC0((uint64_t)&v67) || v30[2] != v46)
            {
              *(void *)BOOL v30 = sub_2E1BC0((uint64_t)&v67);
              _OWORD v30[2] = v47;
              unsigned int v36 = (char *)v74[1];
              break;
            }
            if (v73) {
              sub_2E7608((uint64_t)&v67);
            }
            else {
              sub_2E74E8((uint64_t)&v67);
            }
          }
          if (v36)
          {
            uint64_t v75 = v36;
            operator delete(v36);
          }
        }
        double v48 = COERCE_DOUBLE(operator new(0x18uLL));
        long long __p = (void *)(*(void *)&v48 + 24);
        BOOL v69 = (void *)(*(void *)&v48 + 24);
        **(_DWORD **)&double v48 = v22;
        *(_DWORD *)(*(void *)&v48 + 4) = v66;
        *(_DWORD *)(*(void *)&v48 + 8) = v65;
        int v52 = v80;
        *(void *)(*(void *)&v48 + 12) = v80;
        *(_DWORD *)(*(void *)&v48 + 20) = v81;
        *(double *)&unint64_t v67 = v48;
        if (v22 == v52 && v66 == *(_DWORD *)(*(void *)&v48 + 16) && v65 == *(_DWORD *)(*(void *)&v48 + 20)) {
          goto LABEL_77;
        }
        BOOL v53 = !v8;
        if (v8) {
          uint64_t v54 = 83;
        }
        else {
          uint64_t v54 = 33;
        }
        if (v53) {
          uint64_t v55 = 34;
        }
        else {
          uint64_t v55 = 84;
        }
        sub_49344((uint64_t *)&v77, 0, 30.0, v49, v50, v51);
        double v57 = v56;
        sub_49344((uint64_t *)&v67, 1, 30.0, v58, v59, v60);
        for (double i = v61 + -180.0 - v57; i >= 180.0; double i = i + -360.0)
          ;
        for (; i < -180.0; double i = i + 360.0)
          ;
        double v63 = (double)(uint64_t)llround(i);
        if (*(double *)(a1 + 904) >= v63 || *(double *)(a1 + 912) <= v63)
        {
          if (*(double *)(a1 + 920) >= v63 || (uint64_t v54 = v55, *(double *)(a1 + 928) <= v63)) {
LABEL_77:
          }
            uint64_t v54 = v16;
        }
        if (*(double *)&v67 != 0.0)
        {
          long long __p = v67;
          operator delete(v67);
        }
        if (v77)
        {
          long long v78 = v77;
          operator delete(v77);
        }
        return v54;
      }
      else if ((v7 & 1) == 0)
      {
        if (sub_64F1DC((uint64_t)a2)) {
          return 16;
        }
        else {
          return 39;
        }
      }
    }
  }
  return v16;
}

void sub_6A7254(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  if (__p) {
    operator delete(__p);
  }
  operator delete(v25);
  _Unwind_Resume(a1);
}

void sub_6A72C0(uint64_t a1@<X0>, void *a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  __p[0] = 0;
  __p[1] = 0;
  LODWORD(v24) = 0;
  uint64_t v23 = 0;
  *((void *)&v24 + 1) = -1;
  v25[0] = 0;
  v25[1] = 0;
  uint64_t v26 = 0;
  int v27 = 0;
  *(void *)&long long v8 = -1;
  *((void *)&v8 + 1) = -1;
  long long v28 = v8;
  long long v29 = v8;
  long long v30 = v8;
  *(void *)&long long v31 = -1;
  DWORD2(v31) = 0;
  *(void *)&long long v32 = -1;
  DWORD2(v32) = 0;
  long long v33 = xmmword_20E2060;
  *(_WORD *)uint64_t v34 = 0;
  v34[2] = 0;
  *(void *)&v34[15] = 0;
  *(void *)&v34[8] = 0;
  if (!a3 && !sub_46CABC((uint64_t)a2)
    || sub_46C760(a2) - 2 == a3 && !sub_46CAC4((uint64_t)a2))
  {
    __src[0] = *(void *)(sub_46C8EC(a2, a3) + 32);
    __src[1] = *(void *)(sub_46C8EC(a2, a3 + 1) + 32);
    sub_2D8554(__p, (char *)__src, (char *)&v36, 2uLL);
    LODWORD(v24) = 0;
    *(_OWORD *)a4 = *(_OWORD *)__p;
    *(void *)(a4 + 16) = v23;
    __p[0] = 0;
    __p[1] = 0;
    uint64_t v23 = 0;
LABEL_16:
    long long v15 = v24;
    goto LABEL_17;
  }
  if (sub_6A9B3C(a1, a2, a3, (uint64_t)__p)) {
    goto LABEL_15;
  }
  sub_5A79B4(a1, a2, a3, (uint64_t)__p);
  if (v9 || sub_6A9CF0(a1, a2, a3, (uint64_t)__p)) {
    goto LABEL_15;
  }
  if (*(unsigned char *)(a1 + 746))
  {
    uint64_t v10 = (int **)sub_46C8EC(a2, a3);
    uint64_t v11 = sub_46C8EC(a2, a3 + 1);
    double v12 = (unsigned __int16 *)((char *)*v10 - **v10);
    if (*v12 >= 0x2Fu)
    {
      uint64_t v13 = v12[23];
      if (v13)
      {
        if (*((unsigned char *)*v10 + v13) == 8)
        {
          uint64_t v14 = v11;
          LODWORD(v24) = 0;
          __src[0] = v10[4];
          sub_2D5B74((char **)__p, __src);
          __src[0] = *(void *)(v14 + 32);
          sub_2D5B74((char **)__p, __src);
          *(_OWORD *)a4 = *(_OWORD *)__p;
          *(void *)(a4 + 16) = v23;
          __p[0] = 0;
          __p[1] = 0;
          uint64_t v23 = 0;
          long long v15 = v24;
LABEL_17:
          *(_OWORD *)(a4 + 24) = v15;
          *(_OWORD *)(a4 + 40) = *(_OWORD *)v25;
          *(void *)(a4 + 56) = v26;
          v25[1] = 0;
          uint64_t v26 = 0;
          v25[0] = 0;
          *(_DWORD *)(a4 + 64) = v27;
          long long v16 = v28;
          long long v17 = v29;
          long long v18 = v30;
          *(_OWORD *)(a4 + 120) = v31;
          *(_OWORD *)(a4 + 104) = v18;
          *(_OWORD *)(a4 + 88) = v17;
          *(_OWORD *)(a4 + 72) = v16;
          long long v19 = v32;
          long long v20 = v33;
          long long v21 = *(_OWORD *)v34;
          *(void *)(a4 + 183) = *(void *)&v34[15];
          *(_OWORD *)(a4 + 168) = v21;
          *(_OWORD *)(a4 + 152) = v20;
          *(_OWORD *)(a4 + 136) = v19;
          goto LABEL_18;
        }
      }
    }
  }
  if (sub_6A9FE0((uint64_t *)a1, a2, a3, (uint64_t)__p))
  {
LABEL_15:
    *(_OWORD *)a4 = *(_OWORD *)__p;
    *(void *)(a4 + 16) = v23;
    __p[1] = 0;
    uint64_t v23 = 0;
    __p[0] = 0;
    goto LABEL_16;
  }
  sub_6AB560(a1, a2, a3, 1, a4);
  if (v25[0])
  {
    v25[1] = v25[0];
    operator delete(v25[0]);
  }
LABEL_18:
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
}

void sub_6A75EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_6A7600(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_6A7614(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_6A7628(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_6A763C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = **(void **)a3;
  long long v8 = (int *)sub_2D5D58(*(void *)a1, v7 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v6 + 7772))
  {
    int v9 = sub_2DB8E0(v6 + 3896, v7, 0);
    uint64_t v10 = &v9[-*(int *)v9];
    if (*(unsigned __int16 *)v10 < 5u)
    {
      uint64_t v11 = 0;
    }
    else
    {
      uint64_t v11 = *((unsigned __int16 *)v10 + 2);
      if (v11) {
        v11 += (uint64_t)&v9[*(unsigned int *)&v9[v11]];
      }
    }
    double v12 = (int *)(v11 + 4 * WORD2(v7) + 4 + *(unsigned int *)(v11 + 4 * WORD2(v7) + 4));
  }
  else
  {
    double v12 = 0;
  }
  v23[0] = v8;
  v23[1] = v12;
  v23[2] = (int *)sub_2E5C38(v6, v7 & 0xFFFFFFFFFFFFLL, 1);
  v23[3] = v13;
  int v24 = v7;
  __int16 v25 = WORD2(v7);
  BOOL v26 = (v7 & 0xFF000000000000) != 0;
  uint64_t v14 = *(void *)a1;
  uint64_t v15 = *(void *)(*(void *)(a3 + 8) - 8);
  sub_2D5D58(*(void *)a1, v15 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v14 + 7772)) {
    sub_2DB8E0(v14 + 3896, v15, 0);
  }
  sub_2E5C38(v14, v15 & 0xFFFFFFFFFFFFLL, 1);
  int v16 = *(_DWORD *)(a3 + 24);
  char v17 = sub_35E640();
  if (sub_6AE97C(a1, v16, v17))
  {
    int v18 = *(_DWORD *)(a2 + 112);
    switch(v18)
    {
      case 0:
        uint64_t v20 = *(void *)(a2 + 104);
        int v29 = 0;
        long long v27 = 0u;
        long long v28 = 0u;
        __int16 v30 = -1;
        char v31 = 0;
        sub_6AE4B4((double *)a1, v23, (uint64_t *)(a2 + 80), v20, (uint64_t)&v27, a3 + 40);
        break;
      case 1:
      case 2:
        *(_DWORD *)(a3 + 64) = 0;
        if (v18 == 1) {
          long long v19 = (double *)(a1 + 800);
        }
        else {
          long long v19 = (double *)(a1 + 776);
        }
        LOBYTE(v27) = 0;
        sub_6D35E8(a3 + 40, v19, (char *)&v27);
        LOBYTE(v27) = 1;
        sub_6D35E8(a3 + 40, (double *)(a1 + 832), (char *)&v27);
        break;
      case 3:
        uint64_t v21 = *(void *)(a2 + 104);
        if (v21 != -1) {
          sub_6AE4B4((double *)a1, (int **)(a2 + 40), (uint64_t *)(a2 + 80), v21, a2, a3 + 40);
        }
        break;
      case 4:
        uint64_t v22 = *(void *)(a2 + 104);
        int v29 = 0;
        long long v27 = 0u;
        long long v28 = 0u;
        __int16 v30 = -1;
        char v31 = 0;
        sub_6AE4B4((double *)a1, (int **)a2, (uint64_t *)(a2 + 80), v22, (uint64_t)&v27, a3 + 40);
        break;
      case 5:
        sub_6B62CC((double *)a1, a2, a3);
        break;
      case 6:
        sub_6B63A4(a1, (int **)a2, a3);
        break;
      default:
        return;
    }
  }
}

void sub_6A7978(uint64_t a1, void *a2)
{
  uint64_t v2 = a2[1245] - a2[1244];
  if (v2)
  {
    uint64_t v4 = a1;
    unint64_t v5 = 0;
    uint64_t v6 = a2 + 1244;
    unint64_t v7 = 0xAAAAAAAAAAAAAAABLL * (v2 >> 6);
    unint64_t v122 = v7;
    do
    {
      uint64_t v9 = sub_68F6BC(v6, v5);
      if (*(void *)v9 != *(void *)(v9 + 8) && *(unsigned char *)(v9 + 184) == 0)
      {
        uint64_t v11 = v9;
        uint64_t v12 = *(void *)(v4 + 696);
        uint64_t v13 = (void *)sub_68F6BC(v6, v5);
        unint64_t v8 = v5 + 1;
        unint64_t v14 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[1245] - a2[1244]) >> 6);
        if (v5 + 1 > v14) {
          unint64_t v15 = v5 + 1;
        }
        else {
          unint64_t v15 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[1245] - a2[1244]) >> 6);
        }
        if (v5 + 1 >= v14)
        {
          unint64_t v21 = -1;
        }
        else
        {
          uint64_t v16 = v13[4] + ((uint64_t)(v13[1] - *v13) >> 3) - 1;
          unint64_t v17 = v5 + 1;
          while (1)
          {
            uint64_t v18 = sub_68F6BC(v6, v17);
            if (*(void *)v18 != *(void *)(v18 + 8) && *(_DWORD *)(v18 + 24) != 0) {
              break;
            }
            if (v15 == ++v17)
            {
              unint64_t v21 = -1;
              goto LABEL_25;
            }
          }
          if (sub_46CE10(a2, v16, 1, *(void *)(v18 + 32), 1u, v19) > v12) {
            unint64_t v21 = -1;
          }
          else {
            unint64_t v21 = v17;
          }
LABEL_25:
          unint64_t v7 = v122;
        }
        v22.i64[0] = -1;
        v22.i64[1] = -1;
        if ((vmaxv_u16((uint16x4_t)vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)(v11 + 72), v22), (int32x4_t)vceqq_s64(*(int64x2_t *)(v11 + 88), v22))))) & 1) == 0&& (*(void *)(v11 + 104) & *(void *)(v11 + 112)) == -1&& *(void *)(v11 + 120) == -1&& (v21 == -1|| (uint64_t v23 = sub_68F6BC(v6, v21), v24.i64[0] = -1, v24.i64[1] = -1, (vmaxv_u16((uint16x4_t)vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)(v23 + 72), v24), (int32x4_t)vceqq_s64(*(int64x2_t *)(v23 + 88), v24))))) & 1) == 0)
           && (*(void *)(v23 + 104) & *(void *)(v23 + 112)) == -1
           && *(void *)(v23 + 120) == -1))
        {
          switch(*(_DWORD *)(v11 + 24))
          {
            case 3:
              if (*(unsigned __int8 *)(v11 + 168) | *(unsigned __int8 *)(v11 + 169)) {
                goto LABEL_99;
              }
              goto LABEL_35;
            case 5:
              uint64_t v36 = a2[63];
              int v37 = *(unsigned __int8 *)(a1 + 656);
              uint64_t v38 = sub_68F6BC(v6, v5);
              unint64_t v39 = v5;
              while (v39)
              {
                uint64_t v40 = sub_68F6BC(v6, --v39);
                uint64_t v42 = *(void *)(v40 + 8);
                if (*(void *)v40 != v42 && *(_DWORD *)(v40 + 24) != 0)
                {
                  uint64_t v44 = *(void *)(v40 + 32);
                  if (v37) {
                    uint64_t v45 = v44 + 1;
                  }
                  else {
                    uint64_t v45 = v44 + ((v42 - *(void *)v40) >> 3) - 1;
                  }
                  if (sub_46CE10(a2, v45, 1, *(void *)(v38 + 32), 1u, v41) <= v36
                    && *(_DWORD *)(sub_68F6BC(v6, v39) + 24) == 5)
                  {
                    goto LABEL_98;
                  }
                  goto LABEL_99;
                }
              }
              goto LABEL_99;
            case 0xC:
LABEL_35:
              uint64_t v25 = *(void *)(a1 + 632);
              int v26 = *(unsigned __int8 *)(a1 + 656);
              uint64_t v27 = sub_68F6BC(v6, v5);
              unint64_t v28 = v5;
              do
              {
                if (!v28)
                {
                  unint64_t v35 = -1;
                  goto LABEL_83;
                }
                uint64_t v29 = sub_68F6BC(v6, --v28);
                uint64_t v31 = *(void *)(v29 + 8);
              }
              while (*(void *)v29 == v31 || *(_DWORD *)(v29 + 24) == 0);
              uint64_t v33 = *(void *)(v29 + 32);
              if (v26) {
                uint64_t v34 = v33 + 1;
              }
              else {
                uint64_t v34 = v33 + ((v31 - *(void *)v29) >> 3) - 1;
              }
              if (sub_46CE10(a2, v34, 1, *(void *)(v27 + 32), 1u, v30) > v25) {
                unint64_t v35 = -1;
              }
              else {
                unint64_t v35 = v28;
              }
LABEL_83:
              uint64_t v68 = *(void *)(a1 + 624);
              BOOL v69 = (void *)sub_68F6BC(v6, v5);
              unint64_t v70 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[1245] - a2[1244]) >> 6);
              BOOL v71 = v8 >= v70;
              if (v8 > v70) {
                unint64_t v70 = v5 + 1;
              }
              if (v71)
              {
LABEL_93:
                int v79 = 0;
                unint64_t v80 = -1;
              }
              else
              {
                uint64_t v120 = v68;
                uint64_t v72 = v69[4] + ((uint64_t)(v69[1] - *v69) >> 3) - 1;
                unint64_t v73 = v70 - 1;
                unint64_t v74 = v5;
                while (1)
                {
                  unint64_t v75 = v74 + 1;
                  uint64_t v76 = sub_68F6BC(v6, v74 + 1);
                  if (*(void *)v76 != *(void *)(v76 + 8) && *(_DWORD *)(v76 + 24) != 0) {
                    break;
                  }
                  ++v74;
                  if (v73 == v75) {
                    goto LABEL_93;
                  }
                }
                uint64_t v110 = sub_46CE10(a2, v72, 1, *(void *)(v76 + 32), 1u, v77);
                int v79 = 0;
                unint64_t v80 = -1;
                if (v74 != -2 && v110 <= v120)
                {
                  unint64_t v7 = v122;
                  if (*(unsigned char *)(sub_68F6BC(v6, v74 + 1) + 190))
                  {
                    uint64_t v4 = a1;
                    goto LABEL_3;
                  }
                  int v79 = 1;
                  unint64_t v80 = v74 + 1;
                }
              }
              if (v35 != -1)
              {
                int v81 = (void *)sub_68F6BC(v6, v35);
                if (*v81 != v81[1]) {
                  goto LABEL_98;
                }
              }
              if (v79)
              {
                unint64_t v82 = (void *)sub_68F6BC(v6, v80);
                if (*v82 != v82[1]) {
                  goto LABEL_98;
                }
              }
              goto LABEL_99;
            case 0x14:
              uint64_t v46 = *(void *)(a1 + 584);
              int v47 = (void *)sub_68F6BC(v6, v5);
              unint64_t v48 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[1245] - a2[1244]) >> 6);
              BOOL v49 = v8 >= v48;
              if (v8 > v48) {
                unint64_t v48 = v5 + 1;
              }
              if (v49) {
                goto LABEL_99;
              }
              uint64_t v50 = v47[4] + ((uint64_t)(v47[1] - *v47) >> 3) - 1;
              unint64_t v51 = v48 - 1;
              unint64_t v52 = v5;
              while (1)
              {
                unint64_t v53 = v52 + 1;
                uint64_t v54 = sub_68F6BC(v6, v52 + 1);
                if (*(void *)v54 != *(void *)(v54 + 8) && *(_DWORD *)(v54 + 24) != 0) {
                  break;
                }
                ++v52;
                if (v51 == v53) {
                  goto LABEL_99;
                }
              }
              uint64_t v111 = sub_46CE10(a2, v50, 1, *(void *)(v54 + 32), 1u, v55);
              if (v52 == -2 || v111 > v46 || *(_DWORD *)(sub_68F6BC(v6, v52 + 1) + 24) != 1) {
                goto LABEL_99;
              }
              goto LABEL_98;
            case 0x15:
              uint64_t v57 = *(void *)(a1 + 584);
              double v58 = (void *)sub_68F6BC(v6, v5);
              unint64_t v59 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[1245] - a2[1244]) >> 6);
              BOOL v60 = v8 >= v59;
              if (v8 > v59) {
                unint64_t v59 = v5 + 1;
              }
              if (v60) {
                goto LABEL_99;
              }
              uint64_t v61 = v58[4] + ((uint64_t)(v58[1] - *v58) >> 3) - 1;
              unint64_t v62 = v59 - 1;
              unint64_t v63 = v5;
              break;
            default:
              goto LABEL_99;
          }
          while (1)
          {
            unint64_t v64 = v63 + 1;
            uint64_t v65 = sub_68F6BC(v6, v63 + 1);
            if (*(void *)v65 != *(void *)(v65 + 8) && *(_DWORD *)(v65 + 24) != 0) {
              break;
            }
            ++v63;
            if (v62 == v64) {
              goto LABEL_99;
            }
          }
          uint64_t v112 = sub_46CE10(a2, v61, 1, *(void *)(v65 + 32), 1u, v66);
          if (v63 != -2 && v112 <= v57 && *(_DWORD *)(sub_68F6BC(v6, v63 + 1) + 24) == 2) {
LABEL_98:
          }
            *(_DWORD *)(v11 + 24) = 0;
LABEL_99:
          uint64_t v83 = *(void *)(a1 + 640);
          char v84 = (void *)sub_68F6BC(v6, v5);
          unint64_t v85 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[1245] - a2[1244]) >> 6);
          BOOL v86 = v8 >= v85;
          if (v8 > v85) {
            unint64_t v85 = v5 + 1;
          }
          if (!v86)
          {
            uint64_t v87 = v84[4] + ((uint64_t)(v84[1] - *v84) >> 3) - 1;
            unint64_t v88 = v85 - 1;
            unint64_t v89 = v5;
            while (1)
            {
              unint64_t v90 = v89 + 1;
              uint64_t v91 = sub_68F6BC(v6, v89 + 1);
              if (*(void *)v91 != *(void *)(v91 + 8) && *(_DWORD *)(v91 + 24) != 0) {
                break;
              }
              ++v89;
              if (v88 == v90) {
                goto LABEL_114;
              }
            }
            uint64_t v94 = sub_46CE10(a2, v87, 1, *(void *)(v91 + 32), 1u, v92);
            if (v89 != -2 && v94 <= v83)
            {
              uint64_t v95 = sub_68F6BC(v6, v89 + 1);
              if (sub_6A8BA0((uint64_t *)a1, v11, v95))
              {
                *(_DWORD *)(v11 + 24) = 0;
                *(_DWORD *)(sub_68F6BC(v6, v89 + 1) + 24) = 0;
              }
            }
          }
LABEL_114:
          unint64_t v7 = v122;
          uint64_t v4 = a1;
          switch(*(_DWORD *)(v11 + 24))
          {
            case 1:
            case 2:
            case 3:
            case 0x14:
            case 0x15:
            case 0x1B:
            case 0x1C:
            case 0x1D:
            case 0x1E:
            case 0x21:
            case 0x22:
            case 0x3C:
            case 0x3D:
            case 0x3E:
            case 0x3F:
            case 0x41:
            case 0x42:
              if (!*(unsigned char *)(v11 + 168))
              {
                uint64_t v96 = *(void *)(a1 + 648);
                uint64_t v97 = sub_68F6BC(v6, v5);
                unint64_t v98 = v5;
                do
                {
                  if (!v98) {
                    goto LABEL_158;
                  }
                  uint64_t v99 = sub_68F6BC(v6, --v98);
                  uint64_t v101 = *(void *)(v99 + 8);
                }
                while (*(void *)v99 == v101 || *(_DWORD *)(v99 + 24) == 0);
                if (sub_46CE10(a2, *(void *)(v99 + 32) + ((v101 - *(void *)v99) >> 3) - 1, 1, *(void *)(v97 + 32), 1u, v100) > v96)goto LABEL_158; {
                uint64_t v103 = sub_68F6BC(v6, v98);
                }
                v104.i64[0] = *(void *)(v103 + 120);
                v104.i64[1] = *(void *)(v11 + 72);
                v105.i64[0] = -1;
                v105.i64[1] = -1;
                if (vmaxv_u8((uint8x8_t)vmovn_s16((int16x8_t)vmvnq_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)(v103 + 72), v105), (int32x4_t)vceqq_s64(*(int64x2_t *)(v103 + 88), v105)), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)(v103 + 104), v105), (int32x4_t)vceqq_s64(v104, v105)))))))goto LABEL_158; {
                BOOL v107 = (vaddvq_s32((int32x4_t)vbicq_s8((int8x16_t)xmmword_20B8880, (int8x16_t)vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)(v11 + 80), v105), (int32x4_t)vceqq_s64(*(int64x2_t *)(v11 + 96), v105)))) & 0xF) == 0&& *(void *)(v11 + 112) == -1&& *(void *)(v11 + 120) == -1;
                }
                unint64_t v7 = v122;
                if (v107)
                {
                  int v108 = *(_DWORD *)(v103 + 24);
                  switch(v108)
                  {
                    case 1:
                    case 20:
                    case 27:
                    case 29:
                    case 33:
                    case 60:
                    case 62:
                    case 65:
                      int v109 = *(_DWORD *)(v11 + 24);
                      switch(v109)
                      {
                        case 1:
                        case 20:
                        case 27:
                        case 29:
                        case 33:
                        case 60:
                        case 62:
                        case 65:
                          goto LABEL_147;
                        default:
                          goto LABEL_161;
                      }
                    case 2:
                    case 21:
                    case 28:
                    case 30:
                    case 34:
                    case 61:
                    case 63:
                    case 66:
                      int v109 = *(_DWORD *)(v11 + 24);
                      switch(v109)
                      {
                        case 2:
                        case 21:
                        case 28:
                        case 30:
                        case 34:
                        case 61:
                        case 63:
                        case 66:
                          goto LABEL_147;
                        default:
                          goto LABEL_161;
                      }
                    default:
                      int v109 = *(_DWORD *)(v11 + 24);
LABEL_161:
                      if ((v108 - 41) >= 0x13 && v109 != 3) {
                        goto LABEL_3;
                      }
LABEL_147:
                      uint64_t v113 = *(void *)(*(void *)(v11 + 8) - 8);
                      if (!v113) {
                        goto LABEL_158;
                      }
                      uint64_t v114 = *(void *)(*(void *)(v103 + 8) - 8);
                      if (!v114) {
                        goto LABEL_157;
                      }
                      unint64_t v115 = sub_2E68E8(*(void *)a1, v113);
                      if (v115 > 0xFFFFFFFEFFFFFFFFLL || !v115) {
                        goto LABEL_157;
                      }
                      uint64_t v116 = *(void *)a1;
                      unint64_t v121 = v113 & 0xFFFFFFFFFFFFLL;
                      sub_2D5D58(*(void *)a1, v113 & 0xFFFFFFFFFFFFLL);
                      if (*(unsigned char *)(v116 + 7772)) {
                        sub_2DB8E0(v116 + 3896, v113, 0);
                      }
                      sub_2E5C38(v116, v121, 1);
                      uint64_t v117 = *(void *)a1;
                      sub_2D5D58(*(void *)a1, v114 & 0xFFFFFFFFFFFFLL);
                      if (*(unsigned char *)(v117 + 7772)) {
                        sub_2DB8E0(v117 + 3896, v114, 0);
                      }
                      sub_2E5C38(v117, v114 & 0xFFFFFFFFFFFFLL, 1);
                      unint64_t v118 = v118 & 0xFF00000000000000 | ((unint64_t)((v114 & 0xFF000000000000) != 0) << 48) | v114 & 0xFFFFFFFFFFFFLL;
                      unint64_t v119 = v119 & 0xFF00000000000000 | ((unint64_t)((v113 & 0xFF000000000000) != 0) << 48) | v121;
                      if (!sub_2E79EC(v116, v119, v118)) {
                        goto LABEL_157;
                      }
                      uint64_t v4 = a1;
                      sub_6A9410(a1, (uint64_t)a2, v98, v5);
                      break;
                  }
                  goto LABEL_158;
                }
              }
              break;
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 0xA:
            case 0xB:
            case 0xC:
            case 0xD:
            case 0xE:
            case 0xF:
            case 0x10:
            case 0x11:
            case 0x12:
            case 0x13:
            case 0x16:
            case 0x17:
            case 0x18:
            case 0x19:
            case 0x1A:
            case 0x1F:
            case 0x20:
            case 0x23:
            case 0x24:
            case 0x25:
            case 0x26:
            case 0x27:
            case 0x28:
            case 0x29:
            case 0x2A:
            case 0x2B:
            case 0x2C:
            case 0x2D:
            case 0x2E:
            case 0x2F:
            case 0x30:
            case 0x31:
            case 0x32:
            case 0x33:
            case 0x34:
            case 0x35:
            case 0x36:
            case 0x37:
            case 0x38:
            case 0x39:
            case 0x3A:
            case 0x3B:
            case 0x40:
              break;
            default:
LABEL_157:
              uint64_t v4 = a1;
LABEL_158:
              unint64_t v7 = v122;
              break;
          }
        }
        else
        {
          sub_6A8844(v4, a2, v5);
        }
      }
      else
      {
        unint64_t v8 = v5 + 1;
      }
LABEL_3:
      unint64_t v5 = v8;
    }
    while (v8 != v7);
  }
}

uint64_t sub_6A8844(uint64_t a1, void *a2, unint64_t a3)
{
  unint64_t v3 = a3;
  uint64_t v6 = a2 + 1244;
  uint64_t result = sub_68F6BC(a2 + 1244, a3);
  if (*(void *)(result + 112) != -1) {
    return result;
  }
  unint64_t v8 = (int64x2_t *)result;
  uint64_t v9 = result + 72;
  uint64_t v10 = *(void *)(a1 + 696);
  uint64_t v11 = (void *)sub_68F6BC(v6, v3);
  unint64_t v12 = v3 + 1;
  unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[1245] - a2[1244]) >> 6);
  if (v3 + 1 > v13) {
    unint64_t v14 = v3 + 1;
  }
  else {
    unint64_t v14 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[1245] - a2[1244]) >> 6);
  }
  if (v3 + 1 >= v13)
  {
LABEL_14:
    unint64_t v12 = -1;
    if (*(void *)v9 == -1) {
      goto LABEL_19;
    }
LABEL_33:
    if (v8[6].i64[0] == -1 && v8[6].i64[1] == -1 && v12 != -1)
    {
      uint64_t v28 = sub_68F6BC(v6, v12);
      if (*(void *)(v28 + 96) != -1 || *(void *)(v28 + 104) != -1)
      {
        uint64_t v29 = (void *)sub_68F6BC(v6, v12);
        v8[6].i64[0] = v29[12];
        v8[6].i64[1] = v29[13];
        v8[8].i64[1] = v29[17];
      }
    }
    goto LABEL_43;
  }
  uint64_t v15 = v11[4] + ((uint64_t)(v11[1] - *v11) >> 3) - 1;
  while (1)
  {
    uint64_t v16 = sub_68F6BC(v6, v12);
    if (*(void *)v16 != *(void *)(v16 + 8) && *(_DWORD *)(v16 + 24) != 0) {
      break;
    }
    if (v14 == ++v12) {
      goto LABEL_14;
    }
  }
  if (sub_46CE10(a2, v15, 1, *(void *)(v16 + 32), 1u, v17) > v10) {
    unint64_t v12 = -1;
  }
  if (*(void *)v9 != -1) {
    goto LABEL_33;
  }
LABEL_19:
  BOOL v19 = 0;
  v20.i64[0] = -1;
  v20.i64[1] = -1;
  uint64_t v21 = v8[5].i64[1];
  if (vmaxv_u16((uint16x4_t)vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqq_s64(v8[5], v20), (int32x4_t)vceqq_s64(v8[6], v20))))))goto LABEL_28; {
  if (v8[7].i64[0] != -1)
  }
    goto LABEL_28;
  BOOL v19 = 0;
  uint64_t v21 = -1;
  if (v8[7].i64[1] != -1 || v8[10].i8[8] || v12 == -1) {
    goto LABEL_28;
  }
  uint64_t v22 = sub_68F6BC(v6, v12);
  v23.i64[0] = *(void *)(v22 + 88);
  v23.i64[1] = *(void *)(v22 + 120);
  v24.i64[0] = -1;
  v24.i64[1] = -1;
  if ((vmaxv_u16((uint16x4_t)vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqq_s64((int64x2_t)vextq_s8(*(int8x16_t *)(v22 + 72), *(int8x16_t *)(v22 + 72), 8uLL), v24), (int32x4_t)vceqq_s64(v23, v24))))) & 1) == 0&& *(void *)(v22 + 96) == -1&& *(void *)(v22 + 104) == -1)
  {
    uint64_t v21 = v8[5].i64[1];
    BOOL v19 = v8[4].i64[1] != -1;
LABEL_28:
    if (!v19 && v21 == -1 && v8[7].i64[1] == -1) {
      goto LABEL_43;
    }
    goto LABEL_33;
  }
  if (sub_6EC34C(a1 + 5944, (uint64_t)v8))
  {
    uint64_t v39 = sub_68F6BC(v6, v12);
    *(_OWORD *)uint64_t v9 = *(_OWORD *)(v39 + 72);
    long long v40 = *(_OWORD *)(v39 + 104);
    long long v41 = *(_OWORD *)(v39 + 120);
    long long v42 = *(_OWORD *)(v39 + 88);
    *(_OWORD *)(v9 + 60) = *(_OWORD *)(v39 + 132);
    *(_OWORD *)(v9 + 32) = v40;
    *(_OWORD *)(v9 + 48) = v41;
    *(_OWORD *)(v9 + 16) = v42;
    sub_6EDC24(a1 + 5944, (uint64_t)v8);
  }
LABEL_43:
  uint64_t v30 = *(void *)(a1 + 696);
  int v31 = *(unsigned __int8 *)(a1 + 656);
  uint64_t result = sub_68F6BC(v6, v3);
  uint64_t v32 = result;
  while (v3)
  {
    uint64_t result = sub_68F6BC(v6, --v3);
    uint64_t v34 = *(void *)(result + 8);
    if (*(void *)result != v34 && *(_DWORD *)(result + 24) != 0)
    {
      uint64_t v36 = *(void *)(result + 32);
      if (v31) {
        uint64_t v37 = v36 + 1;
      }
      else {
        uint64_t v37 = v36 + ((v34 - *(void *)result) >> 3) - 1;
      }
      uint64_t result = sub_46CE10(a2, v37, 1, *(void *)(v32 + 32), 1u, v33);
      if (result <= v30)
      {
        uint64_t v38 = sub_68F6BC(v6, v3);
        uint64_t result = sub_6A244C(v9, v38 + 72);
        if (result) {
          v8[1].i32[2] = 0;
        }
      }
      return result;
    }
  }
  return result;
}

uint64_t sub_6A8BA0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(a2 + 168)) {
    return 0;
  }
  uint64_t v3 = 0;
  switch(*(_DWORD *)(a2 + 24))
  {
    case 1:
    case 2:
    case 0x14:
    case 0x15:
    case 0x1B:
    case 0x1C:
    case 0x1D:
    case 0x1E:
    case 0x21:
    case 0x22:
    case 0x3C:
    case 0x3D:
    case 0x3E:
    case 0x3F:
    case 0x41:
    case 0x42:
      switch(*(_DWORD *)(a2 + 24))
      {
        case 1:
        case 0x14:
        case 0x1B:
        case 0x1D:
        case 0x21:
        case 0x3C:
        case 0x3E:
        case 0x41:
          uint64_t v3 = 0;
          switch(*(_DWORD *)(a3 + 24))
          {
            case 2:
            case 0x15:
            case 0x1C:
            case 0x1E:
            case 0x22:
            case 0x3D:
            case 0x3F:
            case 0x42:
              goto LABEL_7;
            default:
              return v3;
          }
        default:
          uint64_t v3 = 0;
          switch(*(_DWORD *)(a3 + 24))
          {
            case 1:
            case 0x14:
            case 0x1B:
            case 0x1D:
            case 0x21:
            case 0x3C:
            case 0x3E:
            case 0x41:
LABEL_7:
              if (*(void *)a2 == *(void *)(a2 + 8)) {
                return 0;
              }
              uint64_t v8 = *(void *)(a3 + 8);
              if (*(void *)a3 == v8) {
                return 0;
              }
              unint64_t v9 = **(void **)a2;
              unint64_t v10 = *(void *)(v8 - 8);
              uint64_t v11 = *a1;
              unint64_t v30 = v10 & 0xFFFFFFFFFFFFLL;
              unint64_t v12 = (int *)sub_2D5D58(*a1, v10 & 0xFFFFFFFFFFFFLL);
              if (*(unsigned char *)(v11 + 7772))
              {
                unint64_t v13 = sub_2DB8E0(v11 + 3896, v10, 0);
                unint64_t v14 = &v13[-*(int *)v13];
                if (*(unsigned __int16 *)v14 < 5u)
                {
                  uint64_t v15 = 0;
                }
                else
                {
                  uint64_t v15 = *((unsigned __int16 *)v14 + 2);
                  if (v15) {
                    v15 += (uint64_t)&v13[*(unsigned int *)&v13[v15]];
                  }
                }
                uint64_t v16 = v15 + 4 * WORD2(v10) + 4 + *(unsigned int *)(v15 + 4 * WORD2(v10) + 4);
              }
              else
              {
                uint64_t v16 = 0;
              }
              uint64_t v34 = v12;
              v35[0] = v16;
              v35[1] = sub_2E5C38(v11, v30, 1);
              int v35[2] = v17;
              int v36 = v10;
              __int16 v37 = WORD2(v10);
              BOOL v38 = (v10 & 0xFF000000000000) != 0;
              if (!sub_6DB184((uint64_t)(a1 + 145), &v34)) {
                return 0;
              }
              sub_6921A0(*a1, v9, 1, 1, (uint64_t)v40);
              sub_6921A0(*a1, v10, 1, 1, (uint64_t)v39);
              if (sub_693F58(v40))
              {
                if (!sub_693F58(v39) && !sub_693FBC(v39)) {
                  return 0;
                }
              }
              else
              {
                BOOL v18 = sub_693FBC(v40);
                if (sub_693F58(v39))
                {
                  if (!v18) {
                    return 0;
                  }
                }
                else if (v18 != sub_693FBC(v39))
                {
                  return 0;
                }
              }
              sub_58E730(*a1, v9, 1u, &v32);
              sub_6A9A30((uint64_t *)&v32, (uint64_t)&v34);
              sub_53BD98(&v32);
              sub_58E730(*a1, v10, 1u, v31);
              sub_6A9A30((uint64_t *)v31, (uint64_t)&v32);
              sub_53BD98(v31);
              if (!sub_2DE448((uint64_t)&v34)) {
                goto LABEL_41;
              }
              if (!sub_2DE448((uint64_t)&v32)) {
                goto LABEL_41;
              }
              if (sub_69412C((unsigned __int8 *)v35, v33)) {
                goto LABEL_41;
              }
              int v19 = sub_6941D4(*a1, v9 & 0xFFFFFFFFFFFFLL);
              if (v19 != sub_6941D4(*a1, v30)) {
                goto LABEL_41;
              }
              uint64_t v20 = *(void *)(a2 + 176);
              uint64_t v21 = *(unint64_t **)a2;
              uint64_t v22 = (uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 3;
              v31[0] = a1;
              if (v20 + 1 == v22)
              {
LABEL_34:
                uint64_t v25 = *(void *)(a3 + 176);
                int v26 = *(uint64_t **)a3;
                v31[0] = a1;
                if (v25)
                {
                  uint64_t v27 = 8 * v25 - 8;
                  do
                  {
                    unint64_t v28 = sub_6C8F00((uint64_t **)v31, v26);
                    uint64_t v3 = v28;
                    ++v26;
                    if (v27) {
                      char v29 = v28;
                    }
                    else {
                      char v29 = 0;
                    }
                    v27 -= 8;
                  }
                  while ((v29 & 1) != 0);
                }
                else
                {
                  uint64_t v3 = 1;
                }
              }
              else
              {
                int64x2_t v23 = (uint64_t *)&v21[v20 + 1];
                uint64_t v24 = 8 * v22 - 8 * v20 - 8;
                while ((sub_6C8F00((uint64_t **)v31, v23) & 1) != 0)
                {
                  ++v23;
                  v24 -= 8;
                  if (!v24) {
                    goto LABEL_34;
                  }
                }
LABEL_41:
                uint64_t v3 = 0;
              }
              sub_2DF404((uint64_t)&v32);
              sub_2DF404((uint64_t)&v34);
              break;
            default:
              return v3;
          }
          break;
      }
      break;
    default:
      return v3;
  }
  return v3;
}

void sub_6A8F94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
}

void sub_6A9410(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 9960) - *(void *)(a2 + 9952)) >> 6);
  if (v4 <= a3 || v4 <= a4) {
    return;
  }
  unint64_t v10 = (void *)(a2 + 9952);
  uint64_t v11 = sub_68F6BC((void *)(a2 + 9952), a3);
  uint64_t v12 = sub_68F6BC(v10, a4);
  if (*(void *)v11 == *(void *)(v11 + 8)) {
    return;
  }
  uint64_t v13 = v12;
  if (*(void *)v12 == *(void *)(v12 + 8)) {
    return;
  }
  if (!*(_DWORD *)(v11 + 24) || *(_DWORD *)(v12 + 24) == 0) {
    return;
  }
  sub_594714((uint64_t)&v38, v11);
  sub_693300((uint64_t)&v38, v13);
  long long __p = 0;
  int v36 = 0;
  uint64_t v37 = 0;
  unint64_t v15 = a3 + 1;
  unint64_t v34 = a3 + 1;
  if (a3 + 1 >= a4)
  {
LABEL_23:
    sub_46B058();
    int64x2_t v23 = v22;
    uint64_t v25 = v24;
    uint64_t v26 = *(void *)(v11 + 32);
    uint64_t v28 = *(void *)v11;
    uint64_t v27 = *(void *)(v11 + 8);
    sub_46B058();
    sub_693530(v23, v25 + v26 + ((v27 - v28) >> 3) - 1, v30, *(void *)(v13 + 32) + v29 + ((uint64_t)(*(void *)(v13 + 8) - *(void *)v13) >> 3), (char **)&v38);
    sub_30361C((uint64_t)&v38);
    int v31 = *(_DWORD *)(v11 + 24);
    if ((v31 - 6) >= 2 && (v31 - 86) >= 2 && (v31 - 41) >= 0x13)
    {
      switch(v31)
      {
        case 7:
        case 11:
        case 22:
        case 23:
        case 24:
        case 29:
        case 30:
        case 64:
        case 65:
        case 66:
        case 86:
        case 87:
          break;
        default:
          int v40 = sub_693690(a1, (uint64_t **)v11, (uint64_t **)v13);
          sub_6A98B0((unint64_t *)(v11 + 40), v13 + 40, (uint64_t *)&v32);
          if (v41[0])
          {
            v41[1] = v41[0];
            operator delete(v41[0]);
          }
          *(_OWORD *)long long v41 = v32;
          uint64_t v42 = v33;
          break;
      }
    }
    sub_693BFC(v11, (uint64_t)&v38);
    sub_693CB0(v13);
    *(void *)&long long v32 = a2;
    sub_693D10((unint64_t **)&__p, &v32);
    goto LABEL_28;
  }
  while (1)
  {
    uint64_t v16 = sub_68F6BC(v10, v15);
    unint64_t v17 = *(void *)v16;
    BOOL v18 = *(char **)(v16 + 8);
    if (*(_DWORD *)(v16 + 24)) {
      break;
    }
    uint64_t v19 = (uint64_t)&v18[-v17];
LABEL_22:
    sub_3455C4((uint64_t)&v38, *(uint64_t *)v39, v17, v18, v19 >> 3);
    sub_A4710((uint64_t)&__p, &v34);
    unint64_t v15 = v34 + 1;
    unint64_t v34 = v15;
    if (v15 >= a4) {
      goto LABEL_23;
    }
  }
  uint64_t v19 = (uint64_t)&v18[-v17];
  uint64_t v20 = *(uint64_t **)v13;
  if (&v18[-v17] != (char *)(*(void *)(v13 + 8) - *(void *)v13)) {
    goto LABEL_28;
  }
  if ((char *)v17 == v18) {
    goto LABEL_22;
  }
  uint64_t v21 = *(char **)v16;
  while (__PAIR64__(*((unsigned __int16 *)v21 + 2), *(_DWORD *)v21) == __PAIR64__((unsigned __int16)WORD2(*v20), *v20)
       && (HIWORD(*v20) & 1) != (v21[6] == 0))
  {
    ++v20;
    v21 += 8;
    if (v21 == v18) {
      goto LABEL_22;
    }
  }
LABEL_28:
  if (__p)
  {
    int v36 = __p;
    operator delete(__p);
  }
  if (v41[0])
  {
    v41[1] = v41[0];
    operator delete(v41[0]);
  }
  if (v38)
  {
    *(void *)uint64_t v39 = v38;
    operator delete(v38);
  }
}

void sub_6A9718(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, uint64_t a16, char a17)
{
  if (__p) {
    operator delete(__p);
  }
  sub_592058((uint64_t)&a17);
  _Unwind_Resume(a1);
}

uint64_t sub_6A98B0@<X0>(unint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t v6 = *(const void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v7 = v5 - *(void *)a2;
  if (v5 == *(void *)a2)
  {
    uint64_t v9 = 0;
    uint64_t v8 = 0;
    unint64_t v10 = *a1;
    uint64_t v11 = (char *)a1[1];
    uint64_t v12 = (char *)*a1;
    if ((char *)*a1 == v11) {
      goto LABEL_10;
    }
LABEL_6:
    uint64_t v12 = (char *)v10;
    while (!v12[2])
    {
      v12 += 4;
      if (v12 == v11) {
        goto LABEL_11;
      }
    }
    goto LABEL_10;
  }
  if (v7 < 0) {
    sub_2E00();
  }
  uint64_t v8 = operator new(v5 - *(void *)a2);
  *a3 = (uint64_t)v8;
  uint64_t v9 = (uint64_t)&v8[2 * (v7 >> 2)];
  a3[2] = v9;
  memcpy(v8, v6, v7 - 1);
  a3[1] = v9;
  unint64_t v10 = *a1;
  uint64_t v11 = (char *)a1[1];
  uint64_t v12 = (char *)v10;
  if ((char *)v10 != v11) {
    goto LABEL_6;
  }
LABEL_10:
  if (v12 == v11)
  {
LABEL_11:
    sub_6CA5AC((uint64_t)a3, v9, v10, v11, (uint64_t)&v11[-v10] >> 2);
  }
  else
  {
    while (v8 != (_WORD *)v9)
    {
      *v8 += *(_WORD *)v12;
      v8 += 2;
    }
    while ((char *)v10 != v11)
    {
      if (!*(unsigned char *)(v10 + 2)) {
        sub_6CA4A8(a3, (_DWORD *)v10);
      }
      v10 += 4;
    }
  }
  return sub_693DCC(a3, (unsigned int (*)(unint64_t, unint64_t))sub_693F28, (uint64_t (*)(unint64_t, unint64_t))sub_693F48);
}

void sub_6A9A08(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

double sub_6A9A30@<D0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (unsigned char *)a1[1];
  if ((unsigned char *)v4 == v5)
  {
LABEL_9:
    *(_OWORD *)(a2 + 112) = 0u;
    *(_OWORD *)(a2 + 128) = 0u;
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 96) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
    *(void *)(a2 + 56) = sub_1133328();
    *(void *)(a2 + 128) = 0;
    *(void *)(a2 + 136) = 0;
    *(void *)(a2 + 120) = 0;
    double result = 0.0;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 96) = 0u;
    *(_DWORD *)(a2 + 111) = 0;
  }
  else
  {
    uint64_t v6 = (unsigned char *)v4;
    do
    {
      if (!*v6)
      {
        uint64_t v7 = a2;
        uint64_t v4 = (uint64_t)v6;
        goto LABEL_8;
      }
      v6 += 144;
    }
    while (v6 != v5);
    if ((unsigned char *)v4 == v5) {
      goto LABEL_9;
    }
    uint64_t v7 = a2;
LABEL_8:
    sub_6C8AE4(v7, v4);
  }
  return result;
}

void sub_6A9B00(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 55) < 0)
  {
    operator delete(*(void **)(v1 + 32));
    if ((*(char *)(v1 + 31) & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((*(char *)(v1 + 31) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(v1 + 8));
  _Unwind_Resume(exception_object);
}

uint64_t sub_6A9B3C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  if (!*(unsigned char *)(a1 + 1155)) {
    return 0;
  }
  sub_46C894(a2, a3);
  if (!v7) {
    return 0;
  }
  uint64_t v8 = sub_46C894(a2, a3);
  if (!*(unsigned char *)(v8 + 48 * v9 - 8) || sub_46C760(a2) - 1 == a3) {
    return 0;
  }
  uint64_t v11 = *(void *)(sub_46C8EC(a2, a3) + 32);
  uint64_t v12 = sub_46C8EC(a2, a3 + 1);
  uint64_t result = 0;
  unint64_t v13 = *(void *)(v12 + 32);
  if (v11 == v13 && WORD2(v11) == WORD2(v13))
  {
    if ((BYTE6(v11) == 0) == (HIWORD(v13) & 1))
    {
      *(_DWORD *)(a4 + 24) = 0;
      *(void *)(a4 + 8) = *(void *)a4;
      *(void *)(a4 + 48) = *(void *)(a4 + 40);
      *(_DWORD *)(a4 + 64) = 0;
      *(void *)&long long v14 = -1;
      *((void *)&v14 + 1) = -1;
      *(_OWORD *)(a4 + 72) = v14;
      *(_OWORD *)(a4 + 88) = v14;
      *(_OWORD *)(a4 + 104) = v14;
      *(void *)(a4 + 120) = -1;
      *(_DWORD *)(a4 + 128) = 0;
      *(void *)(a4 + 136) = -1;
      *(_DWORD *)(a4 + 144) = 0;
      *(_OWORD *)(a4 + 152) = xmmword_20E2060;
      *(_WORD *)(a4 + 168) = 0;
      *(unsigned char *)(a4 + 170) = 0;
      *(void *)(a4 + 176) = 0;
      *(unsigned char *)(a4 + 188) = 0;
      *(unsigned char *)(a4 + 190) = 0;
      int __src = v11;
      __int16 v16 = WORD2(v11);
      char v17 = BYTE6(v11);
      char v20 = BYTE6(v13);
      __int16 v19 = WORD2(v13);
      int v18 = v13;
      sub_2D8554((void *)a4, (char *)&__src, (char *)&v21, 2uLL);
      *(_DWORD *)(a4 + 24) = 94;
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_6A9CF0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_46C8EC(a2, a3);
  unint64_t v9 = *(unsigned int *)(v8 + 32) | ((unint64_t)*(unsigned __int16 *)(v8 + 36) << 32);
  unint64_t v10 = (int *)sub_2D5D58(*(void *)a1, v9);
  uint64_t v11 = (unsigned __int16 *)((char *)v10 - *v10);
  if (*v11 < 0xBu) {
    return 0;
  }
  uint64_t v12 = v11[5];
  if (!v12 || (*((unsigned char *)v10 + v12 + 3) & 2) == 0 || !*(unsigned char *)(a1 + 681)) {
    return 0;
  }
  *(void *)unint64_t v35 = a4;
  sub_68F4F8(*(void *)a1, v9, &v38);
  unint64_t v13 = v38;
  long long v14 = v39;
  if (v38 == v39)
  {
    uint64_t v15 = 0;
    goto LABEL_37;
  }
  do
  {
    __int16 v16 = (int *)sub_2DBC9C(*(void *)a1, *v13);
    char v17 = (unsigned __int16 *)((char *)v16 - *v16);
    if (*v17 < 0xDu) {
      goto LABEL_7;
    }
    uint64_t v18 = v17[6];
    if (!v18) {
      goto LABEL_7;
    }
    __int16 v19 = (int *)((char *)v16 + v18 + *(unsigned int *)((char *)v16 + v18));
    char v20 = (unsigned __int16 *)((char *)v19 - *v19);
    if (*v20 >= 5u && (uint64_t v21 = v20[2]) != 0)
    {
      unsigned int v22 = *((unsigned __int8 *)v19 + v21);
      if (v22 >= 0xF || ((0x7EFFu >> v22) & 1) == 0) {
        goto LABEL_7;
      }
      int v23 = dword_20E8B9C[(char)v22];
    }
    else
    {
      int v23 = 0;
    }
    sub_68F5DC(*(void *)a1, *v13, (unint64_t *)&__p);
    unint64_t v24 = sub_46C760(a2);
    uint64_t v25 = (char *)__p;
    uint64_t v26 = v37;
    if (v24 - a3 < (v37 - (unsigned char *)__p) >> 3)
    {
      int v27 = 3;
      uint64_t v28 = (char *)__p;
      if (!__p) {
        goto LABEL_28;
      }
LABEL_27:
      uint64_t v37 = v28;
      operator delete(v28);
      goto LABEL_28;
    }
    sub_46B058();
    if (v25 == v26)
    {
LABEL_24:
      *(_DWORD *)(*(void *)v35 + 24) = v23;
      if (&__p != *(void ***)v35) {
        sub_2D8554(*(void **)v35, (char *)__p, v37, (v37 - (unsigned char *)__p) >> 3);
      }
      int v27 = 1;
      uint64_t v28 = (char *)__p;
      if (__p) {
        goto LABEL_27;
      }
    }
    else
    {
      int v31 = v29;
      uint64_t v32 = v30 + a3;
      while (1)
      {
        unint64_t v33 = *(void *)(sub_46C8EC(v31, v32) + 32);
        if (__PAIR64__(*((unsigned __int16 *)v25 + 2), *(_DWORD *)v25) != __PAIR64__(WORD2(v33), v33)
          || (HIWORD(v33) & 1) == (v25[6] == 0))
        {
          break;
        }
        ++v32;
        v25 += 8;
        if (v25 == v26) {
          goto LABEL_24;
        }
      }
      int v27 = 0;
      uint64_t v28 = (char *)__p;
      if (__p) {
        goto LABEL_27;
      }
    }
LABEL_28:
    if (v27 != 3 && v27)
    {
      uint64_t v15 = 1;
      goto LABEL_36;
    }
LABEL_7:
    ++v13;
  }
  while (v13 != v14);
  uint64_t v15 = 0;
LABEL_36:
  unint64_t v13 = v38;
LABEL_37:
  if (v13)
  {
    uint64_t v39 = v13;
    operator delete(v13);
  }
  return v15;
}

void sub_6A9F78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, void *a14, uint64_t a15)
{
  if (__p)
  {
    operator delete(__p);
    __int16 v16 = a14;
    if (!a14) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    __int16 v16 = a14;
    if (!a14) {
      goto LABEL_3;
    }
  }
  operator delete(v16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_6A9FE0(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  if (sub_6B1F74(a1, a2, a3, a4)) {
    return 1;
  }
  uint64_t v9 = sub_46C8EC(a2, a3);
  uint64_t v208 = (uint64_t)a1;
  uint64_t v10 = *a1;
  uint64_t v11 = *(void *)(v9 + 32);
  uint64_t v12 = (int *)sub_2D5D58(v10, v11 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v10 + 7772))
  {
    unint64_t v13 = sub_2DB8E0(v10 + 3896, v11, 0);
    long long v14 = &v13[-*(int *)v13];
    if (*(unsigned __int16 *)v14 < 5u)
    {
      uint64_t v15 = 0;
    }
    else
    {
      uint64_t v15 = *((unsigned __int16 *)v14 + 2);
      if (v15) {
        v15 += (uint64_t)&v13[*(unsigned int *)&v13[v15]];
      }
    }
    uint64_t v16 = v15 + 4 * WORD2(v11) + 4 + *(unsigned int *)(v15 + 4 * WORD2(v11) + 4);
  }
  else
  {
    uint64_t v16 = 0;
  }
  *(void *)&long long v232 = v12;
  *((void *)&v232 + 1) = v16;
  *(void *)&long long v233 = sub_2E5C38(v10, v11 & 0xFFFFFFFFFFFFLL, 1);
  *((void *)&v233 + 1) = v17;
  LODWORD(v234) = v11;
  WORD2(v234) = WORD2(v11);
  BYTE6(v234) = (v11 & 0xFF000000000000) != 0;
  uint64_t v18 = (unsigned __int16 *)((char *)v12 - *v12);
  if (*v18 >= 0x2Fu)
  {
    uint64_t v19 = v18[23];
    if (v19)
    {
      unsigned int v20 = *((unsigned __int8 *)v12 + v19);
      BOOL v21 = v20 > 0x36;
      uint64_t v22 = (1 << v20) & 0x44000000000008;
      if (!v21 && v22 != 0) {
        return 0;
      }
    }
  }
  uint64_t v209 = v234;
  sub_2D5B74((char **)a4, &v209);
  unint64_t v24 = a3 + 1;
  uint64_t v25 = sub_46C8EC(a2, a3 + 1);
  uint64_t v26 = *(void *)v208;
  unint64_t v27 = *(void *)(v25 + 32);
  unint64_t v204 = (int *)sub_2D5D58(*(void *)v208, v27 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v26 + 7772))
  {
    uint64_t v28 = sub_2DB8E0(v26 + 3896, v27, 0);
    uint64_t v29 = &v28[-*(int *)v28];
    if (*(unsigned __int16 *)v29 < 5u)
    {
      uint64_t v30 = 0;
    }
    else
    {
      uint64_t v30 = *((unsigned __int16 *)v29 + 2);
      if (v30) {
        v30 += (uint64_t)&v28[*(unsigned int *)&v28[v30]];
      }
    }
    uint64_t v199 = v30 + ((v27 >> 30) & 0x3FFFC) + 4 + *(unsigned int *)(v30 + ((v27 >> 30) & 0x3FFFC) + 4);
  }
  else
  {
    uint64_t v199 = 0;
  }
  uint64_t v31 = sub_2E5C38(v26, v27 & 0xFFFFFFFFFFFFLL, 1);
  uint64_t v194 = v32;
  uint64_t v197 = v31;
  unint64_t v201 = v27 & 0xFFFFFFFFFFFFLL | ((unint64_t)((v27 & 0xFF000000000000) != 0) << 48);
  if (v24 < sub_46C760(a2))
  {
    while (1)
    {
      unint64_t v33 = (int **)sub_46C8EC(a2, v24);
      unint64_t v34 = v33;
      unint64_t v35 = (unsigned __int16 *)((char *)*v33 - **v33);
      if (*v35 >= 0x2Fu)
      {
        uint64_t v36 = v35[23];
        if (v36)
        {
          unsigned int v37 = *((unsigned __int8 *)*v33 + v36);
          BOOL v21 = v37 > 0x36;
          uint64_t v38 = (1 << v37) & 0x44000000000008;
          if (!v21 && v38 != 0) {
            break;
          }
        }
      }
      if ((sub_663238(v208 + 3048, v33) & 1) == 0)
      {
        uint64_t v8 = 0;
        *(void *)(a4 + 8) = *(void *)a4;
        *(void *)(a4 + 48) = *(void *)(a4 + 40);
        *(void *)&long long v40 = -1;
        *((void *)&v40 + 1) = -1;
        *(_OWORD *)(a4 + 72) = v40;
        *(_OWORD *)(a4 + 88) = v40;
        *(_OWORD *)(a4 + 104) = v40;
        *(void *)(a4 + 120) = -1;
        *(void *)(a4 + 136) = -1;
        long long v41 = xmmword_20E2060;
        *(_DWORD *)(a4 + 24) = 0;
        *(_DWORD *)(a4 + 64) = 0;
        *(_DWORD *)(a4 + 128) = 0;
        *(_DWORD *)(a4 + 144) = 0;
        goto LABEL_98;
      }
      uint64_t v209 = v34[4];
      sub_2D5B74((char **)a4, &v209);
      if (++v24 >= sub_46C760(a2)) {
        goto LABEL_44;
      }
    }
    uint64_t v42 = *(void *)v208;
    unint64_t v43 = (unint64_t)v33[4];
    unint64_t v204 = (int *)sub_2D5D58(*(void *)v208, v43 & 0xFFFFFFFFFFFFLL);
    if (*(unsigned char *)(v42 + 7772))
    {
      uint64_t v44 = sub_2DB8E0(v42 + 3896, v43, 0);
      uint64_t v45 = &v44[-*(int *)v44];
      if (*(unsigned __int16 *)v45 < 5u)
      {
        uint64_t v46 = 0;
      }
      else
      {
        uint64_t v46 = *((unsigned __int16 *)v45 + 2);
        if (v46) {
          v46 += (uint64_t)&v44[*(unsigned int *)&v44[v46]];
        }
      }
      uint64_t v199 = v46 + ((v43 >> 30) & 0x3FFFC) + 4 + *(unsigned int *)(v46 + ((v43 >> 30) & 0x3FFFC) + 4);
    }
    else
    {
      uint64_t v199 = 0;
    }
    uint64_t v47 = sub_2E5C38(v42, v43 & 0xFFFFFFFFFFFFLL, 1);
    uint64_t v194 = v48;
    uint64_t v197 = v47;
    unint64_t v201 = v43 & 0xFFFFFFFFFFFFLL | ((unint64_t)((v43 & 0xFF000000000000) != 0) << 48);
  }
LABEL_44:
  BOOL v49 = (unsigned __int16 *)((char *)v204 - *v204);
  unint64_t v193 = a3;
  if (*v49 >= 0x2Fu && (uint64_t v50 = v49[23]) != 0) {
    int v51 = *((unsigned __int8 *)v204 + v50);
  }
  else {
    int v51 = 32;
  }
  int v207 = v51;
  uint64_t v52 = sub_46C8EC(a2, v24 - 1);
  uint64_t v53 = *(void *)v208;
  uint64_t v54 = *(void *)(v52 + 32);
  uint64_t v55 = sub_2D5D58(*(void *)v208, v54 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v53 + 7772))
  {
    double v56 = sub_2DB8E0(v53 + 3896, v54, 0);
    uint64_t v57 = &v56[-*(int *)v56];
    if (*(unsigned __int16 *)v57 < 5u)
    {
      uint64_t v58 = 0;
    }
    else
    {
      uint64_t v58 = *((unsigned __int16 *)v57 + 2);
      if (v58) {
        v58 += (uint64_t)&v56[*(unsigned int *)&v56[v58]];
      }
    }
    uint64_t v59 = v58 + 4 * WORD2(v54) + 4 + *(unsigned int *)(v58 + 4 * WORD2(v54) + 4);
  }
  else
  {
    uint64_t v59 = 0;
  }
  uint64_t v60 = sub_2E5C38(v53, v54 & 0xFFFFFFFFFFFFLL, 1);
  v228[0] = v55;
  v228[1] = v59;
  v228[2] = v60;
  v228[3] = v61;
  int v229 = v54;
  __int16 v230 = WORD2(v54);
  BOOL v231 = (v54 & 0xFF000000000000) != 0;
  long long v225 = v232;
  long long v226 = v233;
  uint64_t v203 = (_OWORD *)(a4 + 72);
  long long v227 = v234;
  do
  {
    if (v24 >= sub_46C760(a2)) {
      goto LABEL_92;
    }
    unint64_t v63 = (int **)sub_46C8EC(a2, v24);
    uint64_t v209 = v63[4];
    sub_2D5B74((char **)a4, &v209);
    uint64_t v64 = *(void *)v208;
    unint64_t v65 = (unint64_t)v63[4];
    double v66 = (int *)sub_2D5D58(*(void *)v208, v65 & 0xFFFFFFFFFFFFLL);
    if (*(unsigned char *)(v64 + 7772))
    {
      unint64_t v67 = sub_2DB8E0(v64 + 3896, v65, 0);
      uint64_t v68 = &v67[-*(int *)v67];
      if (*(unsigned __int16 *)v68 < 5u)
      {
        uint64_t v69 = 0;
      }
      else
      {
        uint64_t v69 = *((unsigned __int16 *)v68 + 2);
        if (v69) {
          v69 += (uint64_t)&v67[*(unsigned int *)&v67[v69]];
        }
      }
      uint64_t v70 = v69 + 4 * WORD2(v65) + 4 + *(unsigned int *)(v69 + 4 * WORD2(v65) + 4);
    }
    else
    {
      uint64_t v70 = 0;
    }
    uint64_t v71 = sub_2E5C38(v64, v65 & 0xFFFFFFFFFFFFLL, 1);
    uint64_t v209 = v66;
    uint64_t v210 = v70;
    uint64_t v211 = v71;
    uint64_t v212 = v72;
    int v213 = v65;
    __int16 v214 = WORD2(v65);
    BOOL v215 = (v65 & 0xFF000000000000) != 0;
    if (!sub_6DB184(v208 + 1160, &v209)) {
      goto LABEL_97;
    }
    unint64_t v73 = (unsigned __int16 *)((char *)*v63 - **v63);
    if (*v73 < 0x2Fu
      || (uint64_t v74 = v73[23]) == 0
      || ((v75 = *((unsigned __int8 *)*v63 + v74), BOOL v21 = v75 > 0x36, v76 = (1 << v75) & 0x44000000000008, !v21)
        ? (BOOL v77 = v76 == 0)
        : (BOOL v77 = 1),
          v77))
    {
      uint64_t v85 = sub_46C8EC(a2, v24);
      uint64_t v86 = *(void *)v208;
      uint64_t v87 = *(void *)(v85 + 32);
      unint64_t v88 = (int *)sub_2D5D58(*(void *)v208, v87 & 0xFFFFFFFFFFFFLL);
      if (*(unsigned char *)(v86 + 7772))
      {
        unint64_t v89 = sub_2DB8E0(v86 + 3896, v87, 0);
        unint64_t v90 = &v89[-*(int *)v89];
        if (*(unsigned __int16 *)v90 < 5u)
        {
          uint64_t v91 = 0;
        }
        else
        {
          uint64_t v91 = *((unsigned __int16 *)v90 + 2);
          if (v91) {
            v91 += (uint64_t)&v89[*(unsigned int *)&v89[v91]];
          }
        }
        uint64_t v92 = v91 + 4 * WORD2(v87) + 4 + *(unsigned int *)(v91 + 4 * WORD2(v87) + 4);
      }
      else
      {
        uint64_t v92 = 0;
      }
      uint64_t v93 = sub_2E5C38(v86, v87 & 0xFFFFFFFFFFFFLL, 1);
      uint64_t v209 = v88;
      uint64_t v210 = v92;
      uint64_t v211 = v93;
      uint64_t v212 = v94;
      int v213 = v87;
      __int16 v214 = WORD2(v87);
      BOOL v215 = (v87 & 0xFF000000000000) != 0;
      if (v207 == 50 && sub_69EB54(v208, &v209, (int **)&v225, 0))
      {
        *(_DWORD *)(a4 + 24) = 0;
        *(void *)(a4 + 8) = *(void *)a4;
        *(void *)(a4 + 48) = *(void *)(a4 + 40);
        *(_DWORD *)(a4 + 64) = 0;
        *(void *)&long long v95 = -1;
        *((void *)&v95 + 1) = -1;
        _OWORD *v203 = v95;
        *(_OWORD *)(a4 + 88) = v95;
        *(_OWORD *)(a4 + 104) = v95;
        *(void *)(a4 + 120) = -1;
        *(_DWORD *)(a4 + 128) = 0;
        *(void *)(a4 + 136) = -1;
        *(_DWORD *)(a4 + 144) = 0;
        *(_OWORD *)(a4 + 152) = xmmword_20E2060;
        *(_WORD *)(a4 + 168) = 0;
        *(unsigned char *)(a4 + 170) = 0;
        *(void *)(a4 + 176) = 0;
        *(unsigned char *)(a4 + 188) = 0;
        int v62 = 1;
        *(unsigned char *)(a4 + 190) = 0;
      }
      else
      {
        int v62 = 5;
      }
    }
    else
    {
      uint64_t v78 = sub_46C8EC(a2, v24);
      uint64_t v79 = *(void *)v208;
      uint64_t v80 = *(void *)(v78 + 32);
      uint64_t v81 = sub_2D5D58(*(void *)v208, v80 & 0xFFFFFFFFFFFFLL);
      if (*(unsigned char *)(v79 + 7772))
      {
        unint64_t v82 = sub_2DB8E0(v79 + 3896, v80, 0);
        uint64_t v83 = &v82[-*(int *)v82];
        if (*(unsigned __int16 *)v83 < 5u)
        {
          uint64_t v84 = 0;
        }
        else
        {
          uint64_t v84 = *((unsigned __int16 *)v83 + 2);
          if (v84) {
            v84 += (uint64_t)&v82[*(unsigned int *)&v82[v84]];
          }
        }
        uint64_t v96 = v84 + 4 * WORD2(v80) + 4 + *(unsigned int *)(v84 + 4 * WORD2(v80) + 4);
      }
      else
      {
        uint64_t v96 = 0;
      }
      uint64_t v97 = sub_2E5C38(v79, v80 & 0xFFFFFFFFFFFFLL, 1);
      int v62 = 0;
      *(void *)&long long v225 = v81;
      *((void *)&v225 + 1) = v96;
      *(void *)&long long v226 = v97;
      *((void *)&v226 + 1) = v98;
      LODWORD(v227) = v80;
      WORD2(v227) = WORD2(v80);
      ++v24;
      BYTE6(v227) = (v80 & 0xFF000000000000) != 0;
    }
  }
  while (!v62);
  if (v62 != 5) {
    return 0;
  }
LABEL_92:
  if (v24 >= sub_46C760(a2))
  {
LABEL_97:
    uint64_t v8 = 0;
    *(void *)(a4 + 8) = *(void *)a4;
    *(void *)(a4 + 48) = *(void *)(a4 + 40);
    *(void *)&long long v102 = -1;
    *((void *)&v102 + 1) = -1;
    _OWORD *v203 = v102;
    *(_OWORD *)(a4 + 88) = v102;
    *(_OWORD *)(a4 + 104) = v102;
    *(void *)(a4 + 120) = -1;
    *(_DWORD *)(a4 + 24) = 0;
    *(_DWORD *)(a4 + 64) = 0;
    *(_DWORD *)(a4 + 128) = 0;
    *(void *)(a4 + 136) = -1;
    *(_DWORD *)(a4 + 144) = 0;
    long long v41 = xmmword_20E2060;
LABEL_98:
    *(_OWORD *)(a4 + 152) = v41;
    *(_WORD *)(a4 + 168) = 0;
    *(unsigned char *)(a4 + 170) = 0;
    *(void *)(a4 + 176) = 0;
    *(unsigned char *)(a4 + 188) = 0;
    *(unsigned char *)(a4 + 190) = 0;
  }
  else
  {
    uint64_t v192 = sub_46C8EC(a2, v24);
    uint64_t v99 = 0;
    *(void *)&long long v216 = v204;
    *((void *)&v216 + 1) = v199;
    unint64_t v222 = 0;
    long long v223 = 0;
    uint64_t v224 = 0;
    long long __p = 0;
    uint64_t v220 = 0;
    unint64_t v221 = 0;
    *(void *)&long long v217 = v197;
    *((void *)&v217 + 1) = v194;
    unint64_t v218 = v201;
    double v100 = (unsigned __int16 *)((char *)v204 - *v204);
    if (*v100 >= 9u)
    {
      uint64_t v101 = v100[4];
      if (v101) {
        uint64_t v99 = *(unsigned int *)((char *)v204 + v101);
      }
      else {
        uint64_t v99 = 0;
      }
    }
    long long v225 = v232;
    long long v226 = v233;
    long long v227 = v234;
    int64x2_t v104 = (unsigned __int16 *)(v232 - *(int *)v232);
    if (*v104 >= 0x2Fu && (uint64_t v105 = v104[23]) != 0)
    {
      BOOL v106 = 1;
      switch(*(unsigned char *)(v232 + v105))
      {
        case 6:
        case 0xC:
        case 0x2B:
          uint64_t v107 = v104[5];
          if (v107 && (*(unsigned char *)(v232 + v107 + 2) & 0x20) != 0) {
            goto LABEL_106;
          }
          break;
        case 0x2C:
          break;
        default:
LABEL_106:
          BOOL v106 = *(unsigned char *)(v232 + v105) == 14;
          break;
      }
    }
    else
    {
      BOOL v106 = 0;
    }
    sub_2E44A4(*(void *)v208, (uint64_t)v228, &v222);
    int v109 = v222;
    int v108 = v223;
    if (v222 == v223) {
      goto LABEL_115;
    }
    while ((sub_6B4208(v208, &v232, &v216, v109, (int **)&v225, v207 == 50, 1) & 1) == 0)
    {
      v109 += 5;
      if (v109 == v108)
      {
        int v109 = v108;
        break;
      }
    }
    if (v109 == v223)
    {
LABEL_115:
      unsigned int v200 = 0;
    }
    else
    {
      uint64_t v110 = v220;
      if ((unint64_t)v220 >= v221)
      {
        uint64_t v114 = (char *)__p;
        unint64_t v115 = 0xCCCCCCCCCCCCCCCDLL * ((v220 - (unsigned char *)__p) >> 3);
        unint64_t v116 = v115 + 1;
        if (v115 + 1 > 0x666666666666666) {
LABEL_259:
        }
          sub_2E00();
        if (0x999999999999999ALL * ((uint64_t)(v221 - (void)__p) >> 3) > v116) {
          unint64_t v116 = 0x999999999999999ALL * ((uint64_t)(v221 - (void)__p) >> 3);
        }
        if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v221 - (void)__p) >> 3) >= 0x333333333333333) {
          unint64_t v117 = 0x666666666666666;
        }
        else {
          unint64_t v117 = v116;
        }
        if (v117)
        {
          if (v117 > 0x666666666666666) {
LABEL_260:
          }
            sub_188D718();
          unint64_t v118 = (char *)operator new(40 * v117);
        }
        else
        {
          unint64_t v118 = 0;
        }
        unint64_t v119 = &v118[40 * v115];
        long long v120 = *(_OWORD *)v109;
        long long v121 = *((_OWORD *)v109 + 1);
        *((void *)v119 + 4) = v109[4];
        *(_OWORD *)unint64_t v119 = v120;
        *((_OWORD *)v119 + 1) = v121;
        uint64_t v113 = v119 + 40;
        if (v110 != v114)
        {
          do
          {
            long long v122 = *(_OWORD *)(v110 - 40);
            long long v123 = *(_OWORD *)(v110 - 24);
            *((void *)v119 - 1) = *((void *)v110 - 1);
            *(_OWORD *)(v119 - 24) = v123;
            *(_OWORD *)(v119 - 40) = v122;
            v119 -= 40;
            v110 -= 40;
          }
          while (v110 != v114);
          uint64_t v110 = v114;
        }
        long long __p = v119;
        uint64_t v220 = v113;
        unint64_t v221 = (unint64_t)&v118[40 * v117];
        if (v110) {
          operator delete(v110);
        }
      }
      else
      {
        long long v111 = *(_OWORD *)v109;
        long long v112 = *((_OWORD *)v109 + 1);
        *((void *)v220 + 4) = v109[4];
        *(_OWORD *)uint64_t v110 = v111;
        *((_OWORD *)v110 + 1) = v112;
        uint64_t v113 = v110 + 40;
      }
      uint64_t v220 = v113;
      unsigned int v200 = 1;
    }
    uint64_t v198 = -1;
    unint64_t v205 = HIWORD(v201);
    uint64_t v206 = v201 & 0xFFFFFFFFFFFFLL;
    long long v223 = v222;
LABEL_133:
    BOOL v202 = v106;
    while (1)
    {
LABEL_134:
      sub_2E44A4(*(void *)v208, (uint64_t)&v216, &v222);
      uint64_t v124 = v222;
      int v125 = v223;
      uint64_t v126 = v222;
      if (v222 != v223)
      {
        uint64_t v126 = v222;
        while (1)
        {
          unint64_t v127 = (unsigned __int16 *)((char *)*v126 - **v126);
          if (*v127 >= 0x2Fu)
          {
            uint64_t v128 = v127[23];
            if (v128)
            {
              unsigned int v129 = *((unsigned __int8 *)*v126 + v128);
              BOOL v21 = v129 > 0x36;
              uint64_t v130 = (1 << v129) & 0x44000000000008;
              if (!v21 && v130 != 0) {
                break;
              }
            }
          }
          v126 += 5;
          if (v126 == v223) {
            goto LABEL_233;
          }
        }
      }
      if (v126 == v223)
      {
LABEL_233:
        sub_693CB0(a4);
        uint64_t v8 = 0;
        goto LABEL_234;
      }
      long long v225 = v216;
      long long v226 = v217;
      long long v227 = (int *)v218;
      long long v133 = *(_OWORD *)v126;
      long long v132 = *((_OWORD *)v126 + 1);
      unint64_t v134 = (unint64_t)v126[4];
      unint64_t v218 = v134;
      long long v216 = v133;
      long long v217 = v132;
      if (v134 & 0xFFFFFFFFFFFFLL) == v206 && ((v205 ^ ((v134 & 0xFF000000000000) == 0))) {
        break;
      }
      uint64_t v135 = (unsigned __int16 *)(v216 - *(int *)v216);
      if (*v135 >= 9u && (uint64_t v136 = v135[4]) != 0)
      {
        v99 += *(unsigned int *)(v216 + v136);
        if (v99 > *(void *)(v208 + 600)) {
          goto LABEL_233;
        }
      }
      else if (v99 > *(void *)(v208 + 600))
      {
        goto LABEL_233;
      }
      if (v222 != v223)
      {
        unint64_t v137 = *(void *)(v192 + 32);
        uint64_t v138 = v222;
        while (1)
        {
          uint64_t v139 = v138[4];
          if (((unint64_t)v139 & 0xFFFFFFFFFFFFLL) == (v137 & 0xFFFFFFFFFFFFLL)
            && (HIWORD(v137) & 1) != (((unint64_t)v139 & 0xFF000000000000) == 0))
          {
            break;
          }
          v138 += 5;
          if (v138 == v223) {
            goto LABEL_158;
          }
        }
        if (v138 == v223)
        {
LABEL_158:
          while ((sub_6B4208(v208, &v232, &v216, v124, (int **)&v225, v207 == 50, 0) & 1) == 0)
          {
            v124 += 5;
            if (v124 == v125)
            {
              uint64_t v124 = v125;
              break;
            }
          }
          int v125 = v223;
        }
        else
        {
          uint64_t v124 = v138;
        }
      }
      if (v124 == v125)
      {
        for (double i = v222; ; i += 5)
        {
          if (i == v125) {
            goto LABEL_134;
          }
          uint64_t v141 = *i;
          uint64_t v142 = **i;
          uint64_t v143 = (unsigned __int16 *)((char *)*i - v142);
          unsigned int v144 = *v143;
          if (*((unsigned char *)i + 38))
          {
            if (v144 < 0xB) {
              continue;
            }
            int v145 = v143[5];
            if (!v143[5]) {
              goto LABEL_178;
            }
            LODWORD(v142) = *(int *)((char *)v141 + v143[5]);
            if ((v142 & 2) != 0) {
              continue;
            }
          }
          else
          {
            if (v144 < 0xB) {
              continue;
            }
            int v145 = v143[5];
            if (!v143[5])
            {
LABEL_178:
              if (v144 <= 0x2E) {
                continue;
              }
              int v145 = 0;
              uint64_t v146 = v143[23];
              if (v146)
              {
LABEL_180:
                if (*((unsigned char *)v141 + v146) == 23)
                {
LABEL_183:
                  if (i != v125)
                  {
                    BOOL v147 = v220;
                    if ((unint64_t)v220 >= v221)
                    {
                      uint64_t v150 = (char *)__p;
                      unint64_t v151 = 0xCCCCCCCCCCCCCCCDLL * ((v220 - (unsigned char *)__p) >> 3);
                      unint64_t v152 = v151 + 1;
                      if (v151 + 1 > 0x666666666666666) {
                        goto LABEL_259;
                      }
                      if (0x999999999999999ALL * ((uint64_t)(v221 - (void)__p) >> 3) > v152) {
                        unint64_t v152 = 0x999999999999999ALL * ((uint64_t)(v221 - (void)__p) >> 3);
                      }
                      if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v221 - (void)__p) >> 3) >= 0x333333333333333) {
                        unint64_t v153 = 0x666666666666666;
                      }
                      else {
                        unint64_t v153 = v152;
                      }
                      if (v153)
                      {
                        if (v153 > 0x666666666666666) {
                          goto LABEL_260;
                        }
                        unint64_t v195 = v153;
                        uint64_t v154 = (char *)operator new(40 * v153);
                        unint64_t v153 = v195;
                      }
                      else
                      {
                        uint64_t v154 = 0;
                      }
                      uint64_t v164 = &v154[40 * v151];
                      long long v165 = *(_OWORD *)i;
                      long long v166 = *((_OWORD *)i + 1);
                      *((void *)v164 + 4) = i[4];
                      *(_OWORD *)uint64_t v164 = v165;
                      *((_OWORD *)v164 + 1) = v166;
                      long long v167 = v164;
                      if (v147 != v150)
                      {
                        do
                        {
                          long long v168 = *(_OWORD *)(v147 - 40);
                          long long v169 = *(_OWORD *)(v147 - 24);
                          *((void *)v167 - 1) = *((void *)v147 - 1);
                          *(_OWORD *)(v167 - 24) = v169;
                          *(_OWORD *)(v167 - 40) = v168;
                          v167 -= 40;
                          v147 -= 40;
                        }
                        while (v147 != v150);
                        BOOL v147 = v150;
                      }
                      uint64_t v170 = v164 + 40;
                      long long __p = v167;
                      uint64_t v220 = v164 + 40;
                      unint64_t v221 = (unint64_t)&v154[40 * v153];
                      if (v147) {
                        operator delete(v147);
                      }
                      uint64_t v220 = v170;
                    }
                    else
                    {
                      long long v148 = *(_OWORD *)i;
                      long long v149 = *((_OWORD *)i + 1);
                      *((void *)v220 + 4) = i[4];
                      *(_OWORD *)BOOL v147 = v148;
                      *((_OWORD *)v147 + 1) = v149;
                      uint64_t v220 = v147 + 40;
                    }
                  }
                  goto LABEL_134;
                }
              }
LABEL_181:
              if (!v145) {
                continue;
              }
              goto LABEL_164;
            }
            LODWORD(v142) = *(int *)((char *)v141 + v143[5]);
            if (v142) {
              continue;
            }
          }
          if (v144 >= 0x2F)
          {
            uint64_t v146 = v143[23];
            if (v146) {
              goto LABEL_180;
            }
            goto LABEL_181;
          }
LABEL_164:
          if ((v142 & 4) != 0) {
            goto LABEL_183;
          }
        }
      }
      if (v200 >= *(unsigned __int8 *)(v208 + 594))
      {
        uint64_t v8 = 0;
        *(void *)(a4 + 8) = *(void *)a4;
        *(void *)(a4 + 48) = *(void *)(a4 + 40);
        *(void *)&long long v191 = -1;
        *((void *)&v191 + 1) = -1;
        _OWORD *v203 = v191;
        *(_OWORD *)(a4 + 88) = v191;
        *(_OWORD *)(a4 + 104) = v191;
        *(void *)(a4 + 120) = -1;
        *(_DWORD *)(a4 + 24) = 0;
        *(_DWORD *)(a4 + 64) = 0;
        *(_DWORD *)(a4 + 128) = 0;
        *(void *)(a4 + 136) = -1;
        *(_DWORD *)(a4 + 144) = 0;
        *(_OWORD *)(a4 + 152) = xmmword_20E2060;
        *(_WORD *)(a4 + 168) = 0;
        *(unsigned char *)(a4 + 170) = 0;
        *(void *)(a4 + 176) = 0;
        *(unsigned char *)(a4 + 188) = 0;
        *(unsigned char *)(a4 + 190) = 0;
        goto LABEL_234;
      }
      unint64_t v155 = v220;
      if ((unint64_t)v220 >= v221)
      {
        long long v159 = (char *)__p;
        unint64_t v160 = 0xCCCCCCCCCCCCCCCDLL * ((v220 - (unsigned char *)__p) >> 3);
        unint64_t v161 = v160 + 1;
        if (v160 + 1 > 0x666666666666666) {
          sub_2E00();
        }
        if (0x999999999999999ALL * ((uint64_t)(v221 - (void)__p) >> 3) > v161) {
          unint64_t v161 = 0x999999999999999ALL * ((uint64_t)(v221 - (void)__p) >> 3);
        }
        if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v221 - (void)__p) >> 3) >= 0x333333333333333) {
          unint64_t v162 = 0x666666666666666;
        }
        else {
          unint64_t v162 = v161;
        }
        if (v162)
        {
          if (v162 > 0x666666666666666) {
            sub_188D718();
          }
          unint64_t v196 = v162;
          uint64_t v163 = (char *)operator new(40 * v162);
          unint64_t v162 = v196;
        }
        else
        {
          uint64_t v163 = 0;
        }
        unsigned __int16 v171 = &v163[40 * v160];
        long long v172 = *(_OWORD *)v124;
        long long v173 = *((_OWORD *)v124 + 1);
        *((void *)v171 + 4) = v124[4];
        *(_OWORD *)unsigned __int16 v171 = v172;
        *((_OWORD *)v171 + 1) = v173;
        unint64_t v174 = v171;
        if (v155 != v159)
        {
          do
          {
            long long v175 = *(_OWORD *)(v155 - 40);
            long long v176 = *(_OWORD *)(v155 - 24);
            *((void *)v174 - 1) = *((void *)v155 - 1);
            *(_OWORD *)(v174 - 24) = v176;
            *(_OWORD *)(v174 - 40) = v175;
            v174 -= 40;
            v155 -= 40;
          }
          while (v155 != v159);
          unint64_t v155 = v159;
        }
        uint64_t v158 = v171 + 40;
        long long __p = v174;
        uint64_t v220 = v171 + 40;
        unint64_t v221 = (unint64_t)&v163[40 * v162];
        if (v155) {
          operator delete(v155);
        }
      }
      else
      {
        long long v156 = *(_OWORD *)v124;
        long long v157 = *((_OWORD *)v124 + 1);
        *((void *)v220 + 4) = v124[4];
        *(_OWORD *)unint64_t v155 = v156;
        *((_OWORD *)v155 + 1) = v157;
        uint64_t v158 = v155 + 40;
      }
      uint64_t v220 = v158;
      unint64_t v177 = (unint64_t)v124[4];
      unint64_t v178 = *(void *)(v192 + 32);
      if ((v177 & 0xFFFFFFFFFFFFLL) == (v178 & 0xFFFFFFFFFFFFLL)
        && ((v177 & 0xFF000000000000) == 0) != (HIWORD(v178) & 1))
      {
        *(_DWORD *)(a4 + 24) = v200 + 41;
        uint64_t v198 = -1 - 0x3333333333333333 * ((v158 - (unsigned char *)__p) >> 3);
      }
      ++v200;
      if (v198 != -1)
      {
        unint64_t v179 = (unint64_t)v124[4];
        unint64_t v180 = *(void *)(v192 + 32);
        if ((v179 & 0xFFFFFFFFFFFFLL) != (v180 & 0xFFFFFFFFFFFFLL)
          || ((v179 & 0xFF000000000000) == 0) == (HIWORD(v180) & 1))
        {
          continue;
        }
      }
      unsigned int v181 = *v124;
      unsigned int v182 = (unsigned __int16 *)((char *)*v124 - **v124);
      if (*v182 >= 0x2Fu)
      {
        uint64_t v183 = v182[23];
        if (v182[23])
        {
          BOOL v106 = 1;
          switch(*((unsigned char *)v181 + v183))
          {
            case 6:
            case 0xC:
            case 0x2B:
              uint64_t v184 = v182[5];
              if (!v184 || (*((unsigned char *)v181 + v184 + 2) & 0x20) == 0) {
                goto LABEL_133;
              }
              break;
            case 0x2C:
              goto LABEL_133;
            default:
              break;
          }
          if (*((unsigned char *)v181 + v183) == 14)
          {
            BOOL v106 = 1;
            goto LABEL_133;
          }
        }
      }
    }
    uint64_t v185 = *(void *)(v192 + 32);
    if ((v185 & 0xFFFFFFFFFFFFLL) == ((unint64_t)v234 & 0xFFFFFFFFFFFFLL)
      && ((v185 & 0xFF000000000000) == 0x1000000000000) != (((unint64_t)v234 >> 48) & 1))
    {
      *(_DWORD *)(a4 + 24) = 26;
    }
    if (!sub_6906B4((char **)&v232)
      || __p == v220
      || (uint64_t v186 = *((void *)v220 - 1),
          unint64_t v187 = *(void *)(v192 + 32),
          (v186 & 0xFFFFFFFFFFFFLL) != (v187 & 0xFFFFFFFFFFFFLL))
      || ((v186 & 0xFF000000000000) == 0) == (HIWORD(v187) & 1))
    {
      unint64_t v188 = v193;
      if (*(_DWORD *)(a4 + 24) != 26 && v99 < *(void *)(v208 + 608))
      {
        uint64_t v8 = sub_6B1DFC(v208, a2, v193, a4);
        goto LABEL_234;
      }
    }
    else
    {
      *(_DWORD *)(a4 + 24) = 26;
      unint64_t v188 = v193;
    }
    if (sub_69ECF0((int ***)&__p) & 1 | !v202)
    {
      long long v189 = v233;
      *(_OWORD *)(v208 + 64) = v232;
      *(_OWORD *)(v208 + 80) = v189;
      *(void *)(v208 + 96) = v234;
      if ((void **)(v208 + 144) != &__p) {
        sub_4721B0((void *)(v208 + 144), (char *)__p, v220, 0xCCCCCCCCCCCCCCCDLL * ((v220 - (unsigned char *)__p) >> 3));
      }
      *(void *)(v208 + 168) = v198;
      *(_DWORD *)(v208 + 176) = 6;
      if ((*(_DWORD *)(a4 + 24) - 41) > 0x12) {
        uint64_t v190 = -1;
      }
      else {
        uint64_t v190 = v24 + ~v188;
      }
      *(void *)(a4 + 176) = v190;
    }
    else
    {
      sub_693CB0(a4);
      sub_6AB560(v208, a2, v188, 0, (uint64_t)&v209);
      sub_69E4EC(a4, (uint64_t)&v209);
      sub_592058((uint64_t)&v209);
    }
    uint64_t v8 = 1;
LABEL_234:
    if (__p)
    {
      uint64_t v220 = (char *)__p;
      operator delete(__p);
    }
    if (v222)
    {
      long long v223 = v222;
      operator delete(v222);
    }
  }
  return v8;
}

void sub_6AB3C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,void *__p,uint64_t a54)
{
  if (__p)
  {
    operator delete(__p);
    double v56 = *(void **)(v54 - 248);
    if (!v56) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    double v56 = *(void **)(v54 - 248);
    if (!v56) {
      goto LABEL_3;
    }
  }
  *(void *)(v54 - 240) = v56;
  operator delete(v56);
  _Unwind_Resume(exception_object);
}

void sub_6AB560(uint64_t a1@<X0>, void *a2@<X1>, unint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v9 = (int **)(a1 + 64);
  sub_6B46BC(a1, a2, a3, a4, a1 + 64);
  unint64_t v10 = *(void *)(a1 + 168);
  uint64_t v11 = (void *)(a5 + 40);
  uint64_t v12 = (_OWORD *)(a5 + 72);
  if (*(void *)(a1 + 144) == *(void *)(a1 + 152) || v10 == -1)
  {
    *(void *)a5 = 0;
    *(void *)(a5 + 8) = 0;
    *(_DWORD *)(a5 + 24) = 0;
    *(void *)(a5 + 16) = 0;
    *(void *)(a5 + 32) = -1;
    *(void *)(a5 + 48) = 0;
    *(void *)(a5 + 56) = 0;
    *uint64_t v11 = 0;
    *(_DWORD *)(a5 + 64) = 0;
    *(void *)&long long v14 = -1;
    *((void *)&v14 + 1) = -1;
    *uint64_t v12 = v14;
    *(_OWORD *)(a5 + 88) = v14;
    *(_OWORD *)(a5 + 104) = v14;
    *(void *)(a5 + 120) = -1;
    *(_DWORD *)(a5 + 128) = 0;
    *(void *)(a5 + 136) = -1;
    *(_DWORD *)(a5 + 144) = 0;
    *(_OWORD *)(a5 + 152) = xmmword_20E2060;
    *(_WORD *)(a5 + 168) = 0;
    *(unsigned char *)(a5 + 170) = 0;
    *(void *)(a5 + 183) = 0;
    *(void *)(a5 + 176) = 0;
    return;
  }
  uint64_t v32 = sub_5A7C34((void *)(a1 + 144), *(void *)(a1 + 168));
  *(void *)(a5 + 8) = 0;
  *(void *)(a5 + 16) = 0;
  *(void *)a5 = 0;
  *(_DWORD *)(a5 + 24) = 0;
  *(void *)(a5 + 32) = -1;
  *(void *)(a5 + 48) = 0;
  *(void *)(a5 + 56) = 0;
  *uint64_t v11 = 0;
  *(_DWORD *)(a5 + 64) = 0;
  *(void *)&long long v15 = -1;
  *((void *)&v15 + 1) = -1;
  *uint64_t v12 = v15;
  *(_OWORD *)(a5 + 88) = v15;
  *(_OWORD *)(a5 + 104) = v15;
  *(void *)(a5 + 120) = -1;
  *(_DWORD *)(a5 + 128) = 0;
  *(void *)(a5 + 136) = -1;
  *(_DWORD *)(a5 + 144) = 0;
  *(_OWORD *)(a5 + 152) = xmmword_20E2060;
  *(_WORD *)(a5 + 168) = 0;
  *(unsigned char *)(a5 + 170) = 0;
  *(void *)(a5 + 176) = 0;
  uint64_t v16 = (uint64_t *)(a5 + 176);
  *(void *)(a5 + 183) = 0;
  if ((sub_6B24F8(a1, a2, a3, a5, (uint64_t)v9) & 1) == 0
    && (sub_6A2A64(a1, a2, a3, (void *)(a1 + 144), v10, a5) & 1) == 0)
  {
    uint64_t v17 = *(void *)(a1 + 96);
    unint64_t v18 = *(void *)(v32 + 32);
    if ((v17 & 0xFFFFFFFFFFFFLL) == (v18 & 0xFFFFFFFFFFFFLL)
      && ((v17 & 0xFF000000000000) == 0x1000000000000) != (HIWORD(v18) & 1))
    {
      __src[0] = *(void *)(a1 + 96);
      __src[1] = v18;
      sub_2D8554((void *)a5, (char *)__src, (char *)&v35, 2uLL);
      *(_DWORD *)(a5 + 24) = 35;
      return;
    }
    if ((sub_6AF52C(a1, v9, (uint64_t *)(a1 + 144), v10, 1, a5) & 1) == 0
      && !sub_6B02CC(a1, (uint64_t)v9, (uint64_t *)(a1 + 144), v10, a5))
    {
      goto LABEL_24;
    }
    uint64_t v20 = *(void *)a5;
    uint64_t v19 = *(void *)(a5 + 8);
    unint64_t v21 = sub_46C760(a2);
    if (v21 - a3 >= (v19 - v20) >> 3) {
      unint64_t v22 = (v19 - v20) >> 3;
    }
    else {
      unint64_t v22 = v21 - a3;
    }
    uint64_t v23 = *(void *)a5;
    sub_46B058();
    uint64_t v16 = (uint64_t *)(a5 + 176);
    if (!sub_6A2F18(v23, v23 + 8 * v22, v25, v24 + a3)) {
      goto LABEL_23;
    }
    sub_6A2F9C((uint64_t *)a5, v22);
    unint64_t v26 = *(void *)(a5 + 152);
    uint64_t v27 = (uint64_t)(*(void *)(a5 + 8) - *(void *)a5) >> 3;
    if (v26 != -1 && *(void *)(a5 + 160) != 0x7FFFFFFFFFFFFFFFLL && v26 >= v27 - 1)
    {
      *(void *)(a5 + 152) = v27 - 1;
      *(void *)(a5 + 160) = 0;
    }
    uint64_t v28 = (int **)sub_46C8EC(a2, a3 + v27 - 1);
    if (sub_663238(a1 + 3048, v28))
    {
LABEL_23:
      sub_6B46BC(a1, a2, a3, a4, (uint64_t)v9);
LABEL_24:
      *(_DWORD *)(a1 + 176) = 0;
      sub_6ADAB0(a1, a2, a3, v9, a5, 0);
      int v29 = *(_DWORD *)(a5 + 24);
      if ((v29 == 3 || !v29) && sub_6B1AC8((uint64_t *)a1, a2, a3)) {
        *(_DWORD *)(a5 + 24) = 12;
      }
      uint64_t v30 = sub_6DBACC(a1 + 1160, v9, (uint64_t *)(a1 + 144), v10);
      if ((*(_DWORD *)(a5 + 24) & 0xFFFFFFFE) == 0x14
        && v30 == v10
        && 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a1 + 152) - *(void *)(a1 + 144)) >> 3) >= 2)
      {
        uint64_t v31 = (int **)sub_5A7C34((void *)(a1 + 144), v10 == 0);
        if (sub_6AFFA4(a1, a2, a3 + 1, v31)) {
          *(_DWORD *)(a5 + 24) = 0;
        }
      }
      *uint64_t v16 = sub_6AEAD0((uint64_t *)a1, a5);
    }
  }
}

void sub_6AB964(_Unwind_Exception *a1)
{
  sub_592058(v1);
  _Unwind_Resume(a1);
}

void sub_6AB978(_Unwind_Exception *a1)
{
  sub_592058(v1);
  _Unwind_Resume(a1);
}

void sub_6AB98C(_Unwind_Exception *a1)
{
  sub_592058(v1);
  _Unwind_Resume(a1);
}

void sub_6AB9A0(_Unwind_Exception *a1)
{
  sub_592058(v1);
  _Unwind_Resume(a1);
}

void sub_6AB9B4(_Unwind_Exception *a1)
{
  sub_592058(v1);
  _Unwind_Resume(a1);
}

void sub_6AB9C8(_Unwind_Exception *a1)
{
  sub_592058(v1);
  _Unwind_Resume(a1);
}

void sub_6AB9DC(_Unwind_Exception *a1)
{
  sub_592058(v1);
  _Unwind_Resume(a1);
}

void sub_6AB9F0(_Unwind_Exception *a1)
{
  sub_592058(v1);
  _Unwind_Resume(a1);
}

void sub_6ABA04(_Unwind_Exception *a1)
{
  sub_592058(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_6ABA18@<X0>(uint64_t a1@<X0>, int **a2@<X1>, uint64_t *a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result = sub_5A7C34(a3, a4);
  uint64_t v11 = result;
  uint64_t v12 = *a2;
  unint64_t v13 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v14 = *v13;
  if (v14 >= 0x2F)
  {
    uint64_t v15 = v13[23];
    if (v13[23])
    {
      unsigned int v16 = *((unsigned __int8 *)v12 + v15);
      BOOL v17 = v16 > 0x36;
      uint64_t v18 = (1 << v16) & 0x44000000000008;
      if (!v17 && v18 != 0) {
        goto LABEL_38;
      }
    }
  }
  uint64_t v20 = (unsigned __int16 *)(*(void *)result - **(int **)result);
  if (*v20 >= 0x2Fu)
  {
    uint64_t v21 = v20[23];
    if (v21)
    {
      unsigned int v22 = *(unsigned __int8 *)(*(void *)result + v21);
      BOOL v17 = v22 > 0x36;
      uint64_t v23 = (1 << v22) & 0x44000000000008;
      if (!v17 && v23 != 0)
      {
        *(_DWORD *)a5 = 6;
        *(unsigned char *)(a5 + 4) = 1;
        return result;
      }
    }
  }
  if (v14 >= 0x2F)
  {
    LODWORD(v15) = v13[23];
    if (v13[23])
    {
LABEL_38:
      unsigned int v25 = *((unsigned __int8 *)v12 + v15);
      if (v25 <= 0x36 && ((1 << v25) & 0x44000000000008) != 0)
      {
        uint64_t v27 = (unsigned __int16 *)(*(void *)result - **(int **)result);
        if (*v27 >= 0x2Fu)
        {
          uint64_t v28 = v27[23];
          if (v28)
          {
            unsigned int v29 = *(unsigned __int8 *)(*(void *)result + v28);
            BOOL v17 = v29 > 0x36;
            uint64_t v30 = (1 << v29) & 0x44000000000008;
            if (!v17 && v30 != 0)
            {
              *(_DWORD *)a5 = 0;
              *(unsigned char *)(a5 + 4) = 1;
              return result;
            }
          }
        }
      }
      unsigned int v32 = *((unsigned __int8 *)v12 + v15);
      if (v32 <= 0x36 && ((1 << v32) & 0x44000000000008) != 0)
      {
        if ((unint64_t v34 = (unsigned __int16 *)(*(void *)result - **(int **)result), *v34 < 0x2Fu)
          || (uint64_t v35 = v34[23]) == 0
          || ((unsigned int v36 = *(unsigned __int8 *)(*(void *)result + v35),
               BOOL v17 = v36 > 0x36,
               uint64_t v37 = (1 << v36) & 0x44000000000008,
               !v17)
            ? (BOOL v38 = v37 == 0)
            : (BOOL v38 = 1),
              v38))
        {
          int v43 = 7;
          goto LABEL_91;
        }
      }
      if (*((unsigned char *)v12 + v15) == 17) {
        goto LABEL_42;
      }
    }
  }
  uint64_t v39 = *(void *)result;
  long long v40 = (unsigned __int16 *)(*(void *)result - **(int **)result);
  unsigned int v41 = *v40;
  if (v41 >= 0x2F && v40[23] && *(unsigned char *)(v39 + v40[23]) == 17) {
    goto LABEL_42;
  }
  if (v14 < 0xB || (uint64_t v42 = v13[5]) == 0 || (*(int *)((char *)v12 + v42) & 0x208) != 8)
  {
    if (v41 >= 0xB && v40[5] && (*(_DWORD *)(v39 + v40[5]) & 0x208) == 8)
    {
      int v43 = 22;
LABEL_91:
      *(_DWORD *)a5 = v43;
      goto LABEL_92;
    }
    if (v14 < 0xB || (LODWORD(v42) = v13[5]) == 0)
    {
LABEL_68:
      if (v41 >= 0xB && v40[5] && (*(unsigned char *)(v39 + v40[5] + 1) & 2) != 0)
      {
        BOOL v47 = *(unsigned char *)(a1 + 1096) == 0;
        int v43 = 91;
        int v48 = 22;
        goto LABEL_89;
      }
      if (v14 < 0xB) {
        goto LABEL_80;
      }
      LODWORD(v42) = v13[5];
      if (!v13[5]) {
        goto LABEL_80;
      }
LABEL_73:
      if ((*((unsigned char *)v12 + v42 + 1) & 2) != 0
        && (v41 < 0xB || !v40[5] || (*(unsigned char *)(v39 + v40[5] + 1) & 2) == 0))
      {
        BOOL v47 = *(unsigned char *)(a1 + 1096) == 0;
        int v43 = 92;
        int v48 = 23;
        goto LABEL_89;
      }
      int v45 = *(int *)((char *)v12 + v42) & 0x200;
      BOOL v46 = v41 < 0xB || v45 == 0;
      if (v46 || !v40[5] || (*(unsigned char *)(v39 + v40[5] + 1) & 2) == 0)
      {
LABEL_80:
        uint64_t result = sub_6AEED4(a1, a2, a3, a4);
        if (!result)
        {
          *(void *)a5 = 0;
          return result;
        }
        int v43 = 5;
        goto LABEL_91;
      }
      uint64_t result = sub_699DF8((uint64_t)a3);
      if (result) {
        goto LABEL_42;
      }
      uint64_t result = sub_2E79EC(*(void *)a1, (uint64_t)a2[4], *(void *)(v11 + 32));
      if (result) {
        goto LABEL_42;
      }
      BOOL v47 = *(unsigned char *)(a1 + 1096) == 0;
      int v43 = 93;
      int v48 = 24;
LABEL_89:
      if (v47) {
        int v43 = v48;
      }
      goto LABEL_91;
    }
  }
  if ((*(int *)((char *)v12 + v42) & 0x208) == 8)
  {
    if (v41 < 0xB || !v40[5] || (uint64_t result = 520, (*(_DWORD *)(v39 + v40[5]) & 0x208) != 8))
    {
      int v43 = 23;
      goto LABEL_91;
    }
  }
  BOOL v44 = v41 >= 0xB && (*(int *)((char *)v12 + v42) & 0x208) == 8;
  if (!v44 || !v40[5] || (*(_DWORD *)(v39 + v40[5]) & 0x208) != 8)
  {
    if ((*((unsigned char *)v12 + v42 + 1) & 2) != 0) {
      goto LABEL_73;
    }
    goto LABEL_68;
  }
  uint64_t result = sub_699D9C((uint64_t)a3);
  if ((result & 1) == 0)
  {
    uint64_t result = sub_2E79EC(*(void *)a1, (uint64_t)a2[4], *(void *)(v11 + 32));
    if ((result & 1) == 0)
    {
      int v43 = 24;
      goto LABEL_91;
    }
  }
LABEL_42:
  *(_DWORD *)a5 = 0;
LABEL_92:
  *(unsigned char *)(a5 + 4) = 1;
  return result;
}

uint64_t sub_6ABE94(uint64_t a1, int **a2, long long **a3)
{
  uint64_t v6 = (unsigned __int16 *)((char *)*a2 - **a2);
  if (*v6 >= 0x2Fu)
  {
    uint64_t v7 = v6[23];
    if (v7)
    {
      int v8 = *((unsigned __int8 *)*a2 + v7);
      if (v8 == 9 || v8 == 20) {
        return 0;
      }
    }
  }
  uint64_t v11 = *a3;
  uint64_t v12 = a3[1];
  if (*a3 == v12) {
    return 1;
  }
  while (1)
  {
    long long v13 = *v11;
    long long v14 = v11[1];
    uint64_t v26 = *((void *)v11 + 4);
    long long v24 = v13;
    long long v25 = v14;
    if (fabs(sub_6D82EC(a1 + 1160, a2, (int **)&v24)) > *(double *)(a1 + 184)) {
      return 0;
    }
    uint64_t v11 = (long long *)((char *)v11 + 40);
    if (v11 == v12)
    {
      unsigned int v16 = *a3;
      uint64_t v15 = a3[1];
      while (1)
      {
        if (v16 == v15) {
          return 1;
        }
        long long v17 = *v16;
        long long v18 = v16[1];
        uint64_t v26 = *((void *)v16 + 4);
        long long v24 = v17;
        long long v25 = v18;
        uint64_t v19 = (unsigned int *)sub_2E4738((int **)&v24);
        uint64_t v20 = (unsigned __int16 *)(v24 - *(int *)v24);
        unsigned int v21 = *v20;
        if (v21 >= 0x2F)
        {
          if (v20[23])
          {
            int v22 = *(unsigned __int8 *)(v24 + v20[23]);
            if (v22 == 9) {
              goto LABEL_16;
            }
            if (!*(unsigned char *)(a1 + 695) || v22 == 20)
            {
              if (v22 == 20) {
                goto LABEL_16;
              }
            }
            else if (v22 == 43)
            {
              goto LABEL_16;
            }
          }
        }
        else if (v21 < 9)
        {
          goto LABEL_14;
        }
        uint64_t v23 = v20[4];
        if (v23)
        {
          if (*(unsigned int *)(v24 + v23) > *(uint64_t *)(a1 + 704)) {
            return 0;
          }
          goto LABEL_15;
        }
LABEL_14:
        if (*(uint64_t *)(a1 + 704) < 0) {
          return 0;
        }
LABEL_15:
        uint64_t result = sub_6B59AC(a1, v19);
        if (!result) {
          return result;
        }
LABEL_16:
        unsigned int v16 = (long long *)((char *)v16 + 40);
      }
    }
  }
}

BOOL sub_6AC04C(uint64_t a1, int **a2, uint64_t *a3, unint64_t a4, unint64_t a5, char a6)
{
  if (a4 > 1) {
    return 0;
  }
  BOOL v6 = 0;
  if (sub_6AF02C(a1, a2, (uint64_t)a3, a4, a5))
  {
    unint64_t v132 = a5;
    if ((a6 & 1) == 0)
    {
      uint64_t v14 = sub_5A7C34(a3, a4);
      uint64_t v15 = sub_5A7C34(a3, 1 - a4);
      sub_2954EC(*(void *)a1, (uint64_t)a2[4], (uint64_t)&v139);
      unsigned int v16 = __p;
      if (__p == v141)
      {
        unsigned int v137 = -1;
        unsigned int v18 = -1;
        if (!__p)
        {
LABEL_9:
          sub_2954EC(*(void *)a1, (uint64_t)a2[4], (uint64_t)&v139);
          uint64_t v19 = __p;
          if (__p == v141)
          {
            unsigned int v20 = -1;
            unsigned int v22 = -1;
            if (!__p)
            {
LABEL_12:
              sub_2954EC(*(void *)a1, *(void *)(v14 + 32), (uint64_t)&v139);
              uint64_t v23 = __p;
              unint64_t v134 = (char **)v14;
              uint64_t v135 = a2;
              if (__p == v141)
              {
                unint64_t v26 = 0xFFFFFFFF00000000;
                uint64_t v27 = 0xFFFFFFFFLL;
                if (!__p)
                {
LABEL_15:
                  sub_2954EC(*(void *)a1, *(void *)(v15 + 32), (uint64_t)&v139);
                  uint64_t v28 = __p;
                  long long v133 = (int **)v15;
                  if (__p == v141)
                  {
                    unint64_t v31 = 0xFFFFFFFF00000000;
                    uint64_t v32 = 0xFFFFFFFFLL;
                    if (!__p) {
                      goto LABEL_18;
                    }
                  }
                  else
                  {
                    unint64_t v29 = sub_2E1AA4((uint64_t)&v139);
                    unsigned int v30 = v29;
                    unint64_t v31 = v29 & 0xFFFFFFFF00000000;
                    uint64_t v28 = __p;
                    uint64_t v32 = v30;
                    if (!__p)
                    {
LABEL_18:
                      double v33 = (double)v137 - (double)v20;
                      double v34 = (double)v22 - (double)v18;
                      if (v33 != 0.0 || (double v35 = 0.0, v36 = 0.0, v34 != 0.0))
                      {
                        double v37 = ((double)v18 - (double)v22) * (double)v137 + ((double)v20 - (double)v137) * (double)v18;
                        double v38 = v34 * v34 + v33 * v33;
                        double v39 = -(v37 + v33 * (double)v27 + v34 * (double)HIDWORD(v26)) / v38;
                        LODWORD(v40) = (v34 * v39 + (double)HIDWORD(v26));
                        if (v40 >= 0xFFFFFFFE) {
                          uint64_t v40 = 4294967294;
                        }
                        else {
                          uint64_t v40 = v40;
                        }
                        double v35 = sqrt((double)(((v33 * v39 + (double)v27) - v27)
                                          * ((v33 * v39 + (double)v27) - v27)
                                          + (v40 - HIDWORD(v26)) * (v40 - HIDWORD(v26))))
                            / 100.0;
                        double v41 = -(v37 + v33 * (double)v32 + v34 * (double)HIDWORD(v31)) / v38;
                        double v42 = v33 * v41 + (double)v32;
                        LODWORD(v40) = (v34 * v41 + (double)HIDWORD(v31));
                        if (v40 >= 0xFFFFFFFE) {
                          uint64_t v40 = 4294967294;
                        }
                        else {
                          uint64_t v40 = v40;
                        }
                        double v34 = sqrt((double)((v42 - v32) * (v42 - v32)
                                          + (v40 - HIDWORD(v31)) * (v40 - HIDWORD(v31))));
                        double v36 = v34 / 100.0;
                      }
                      LODWORD(v34) = *(_DWORD *)(a1 + 360);
                      double v43 = (double)*(unint64_t *)&v34;
                      LODWORD(v34) = *(_DWORD *)(a1 + 356);
                      double v44 = (double)*(unint64_t *)&v34;
                      unint64_t v45 = sub_2E68E8(*(void *)a1, (uint64_t)v135[4]);
                      if (v45 <= 0xFFFFFFFEFFFFFFFFLL && v45)
                      {
                        BOOL v46 = v134;
                        BOOL v6 = 0;
                        int v47 = sub_2E79EC(*(void *)a1, (uint64_t)v135[4], (uint64_t)v134[4]) ^ 1;
                        if (v36 <= v43) {
                          int v48 = 1;
                        }
                        else {
                          int v48 = v47;
                        }
                        BOOL v49 = v36 <= v43 || v35 >= v44;
                        if (v35 >= v36) {
                          int v48 = 1;
                        }
                        if (v48 != 1 || !v49) {
                          return v6;
                        }
                      }
                      else
                      {
                        BOOL v46 = v134;
                        if (v35 < v44 && v36 > v43) {
                          return 0;
                        }
                      }
                      unint64_t v50 = (unint64_t)v46[4];
                      uint64_t v51 = v50 & 0xFF000000000000;
                      uint64_t v52 = (int *)sub_2D5D58(*(void *)a1, v50 & 0xFFFFFFFFFFFFLL);
                      uint64_t v53 = (unsigned __int16 *)((char *)v52 - *v52);
                      unsigned int v54 = *v53;
                      if (v51)
                      {
                        uint64_t v55 = (char **)v133;
                        if (v54 < 0x29 || (unsigned int v56 = v53[20]) == 0)
                        {
LABEL_57:
                          unsigned int v57 = sub_69A548(*(void *)a1, (unint64_t)v46[4] ^ 0x1000000000000);
LABEL_58:
                          unint64_t v58 = (unint64_t)v55[4];
                          uint64_t v59 = v58 & 0xFF000000000000;
                          uint64_t v60 = (int *)sub_2D5D58(*(void *)a1, v58 & 0xFFFFFFFFFFFFLL);
                          uint64_t v61 = (unsigned __int16 *)((char *)v60 - *v60);
                          unsigned int v62 = *v61;
                          if (v59)
                          {
                            if (v62 < 0x29 || (unsigned int v63 = v61[20]) == 0)
                            {
LABEL_65:
                              unsigned int v64 = sub_69A548(*(void *)a1, (unint64_t)v55[4] ^ 0x1000000000000);
LABEL_66:
                              if (v57) {
                                BOOL v65 = v64 == 0;
                              }
                              else {
                                BOOL v65 = 1;
                              }
                              int v66 = !v65;
                              int v136 = v66;
                              BOOL v130 = v65 && sub_69A5C0(a1, v135, (uint64_t)v46, (uint64_t)v55);
                              if (v64 >= v57) {
                                unsigned int v67 = v57;
                              }
                              else {
                                unsigned int v67 = v64;
                              }
                              int v129 = sub_6D7A80(a1 + 1160, v55);
                              int v68 = sub_6D7A80(a1 + 1160, v46);
                              uint64_t v69 = *v46;
                              uint64_t v70 = &(*v46)[-*(int *)*v46];
                              unsigned int v71 = *(unsigned __int16 *)v70;
                              if (*((unsigned char *)v46 + 38))
                              {
                                if (v71 >= 0xB)
                                {
                                  int v72 = *((unsigned __int16 *)v70 + 5);
                                  if (*((_WORD *)v70 + 5))
                                  {
                                    int v73 = 2;
LABEL_85:
                                    BOOL v74 = (*(_DWORD *)&v69[v72] & v73) != 0;
                                    goto LABEL_87;
                                  }
                                }
                              }
                              else if (v71 >= 0xB)
                              {
                                int v72 = *((unsigned __int16 *)v70 + 5);
                                if (*((_WORD *)v70 + 5))
                                {
                                  int v73 = 1;
                                  goto LABEL_85;
                                }
                              }
                              BOOL v74 = 0;
LABEL_87:
                              unsigned int v75 = *v55;
                              uint64_t v76 = &(*v55)[-*(int *)*v55];
                              unsigned int v77 = *(unsigned __int16 *)v76;
                              if (*((unsigned char *)v55 + 38))
                              {
                                if (v77 >= 0xB && *((_WORD *)v76 + 5))
                                {
                                  if ((v74 ^ ((*(_DWORD *)&v75[*((unsigned __int16 *)v76 + 5)] & 2) != 0))) {
                                    return 0;
                                  }
LABEL_96:
                                  if (v71 >= 0xB && (uint64_t v78 = *((unsigned __int16 *)v70 + 5)) != 0)
                                  {
                                    int v79 = (v69[v78 + 1] >> 4) & 1;
                                    if (v77 < 0xB) {
                                      goto LABEL_104;
                                    }
                                  }
                                  else
                                  {
                                    int v79 = 0;
                                    if (v77 < 0xB) {
                                      goto LABEL_104;
                                    }
                                  }
                                  if (*((_WORD *)v76 + 5))
                                  {
                                    if (v79 == (v75[*((unsigned __int16 *)v76 + 5) + 1] & 0x10) >> 4)
                                    {
LABEL_105:
                                      int v128 = v68;
                                      uint64_t v139 = 0;
                                      long long __p = 0;
                                      int v142 = 0;
                                      uint64_t v141 = 0;
                                      uint64_t v143 = -1;
                                      uint64_t v144 = 0;
                                      uint64_t v145 = 0;
                                      uint64_t v146 = 0;
                                      int v147 = 0;
                                      *(void *)&long long v80 = -1;
                                      *((void *)&v80 + 1) = -1;
                                      long long v148 = v80;
                                      long long v149 = v80;
                                      long long v150 = v80;
                                      uint64_t v151 = -1;
                                      int v152 = 0;
                                      uint64_t v153 = -1;
                                      int v154 = 0;
                                      long long v155 = xmmword_20E2060;
                                      __int16 v156 = 0;
                                      char v157 = 0;
                                      *(void *)((char *)v158 + 7) = 0;
                                      v158[0] = 0;
                                      if (sub_6AF52C(a1, v135, a3, 1 - a4, 0, (uint64_t)&v139))
                                      {
LABEL_106:
                                        BOOL v6 = 0;
LABEL_107:
                                        sub_592058((uint64_t)&v139);
                                        return v6;
                                      }
                                      int v131 = v57 - v64;
                                      uint64_t v81 = &(*v46)[-*(int *)*v46];
                                      if (*(unsigned __int16 *)v81 >= 0x2Fu)
                                      {
                                        uint64_t v82 = *((unsigned __int16 *)v81 + 23);
                                        if (v82)
                                        {
                                          unsigned int v83 = (*v46)[v82];
                                          if (v83 <= 0x2A && ((1 << v83) & 0x50426810004) != 0)
                                          {
                                            uint64_t v84 = &(*v55)[-*(int *)*v55];
                                            if (*(unsigned __int16 *)v84 >= 0x2Fu)
                                            {
                                              uint64_t v85 = *((unsigned __int16 *)v84 + 23);
                                              if (v85)
                                              {
                                                unsigned int v86 = (*v55)[v85];
                                                if (v86 <= 0x2A && ((1 << v86) & 0x50426810004) != 0)
                                                {
                                                  BOOL v6 = v131 < *(_DWORD *)(a1 + 420);
                                                  goto LABEL_107;
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      uint64_t v87 = *v55;
                                      unint64_t v88 = &(*v55)[-*(int *)*v55];
                                      unsigned int v89 = *(unsigned __int16 *)v88;
                                      if (v89 < 0x2F)
                                      {
                                        if (v89 < 0xB) {
                                          goto LABEL_128;
                                        }
                                      }
                                      else if (*((_WORD *)v88 + 23) && v87[*((unsigned __int16 *)v88 + 23)] == 28)
                                      {
                                        goto LABEL_106;
                                      }
                                      if (*((_WORD *)v88 + 5) && (v87[*((unsigned __int16 *)v88 + 5)] & 4) != 0)
                                      {
                                        if (v89 < 0x2F || (uint64_t v90 = *((unsigned __int16 *)v88 + 23)) == 0)
                                        {
                                          BOOL v91 = 0;
                                          goto LABEL_132;
                                        }
                                        BOOL v91 = 0;
                                        unsigned int v92 = v87[v90];
                                        if (v92 > 0x2A || ((1 << v92) & 0x50426810004) == 0)
                                        {
LABEL_132:
                                          if (sub_6906B4((char **)v135)
                                            && (sub_6906B4(v46) & v91 & 1) != 0
                                            || sub_6D7A80(a1 + 1160, v46) < *(_DWORD *)(a1 + 368)
                                            && sub_6D7A80(a1 + 1160, v55) > *(_DWORD *)(a1 + 368))
                                          {
                                            goto LABEL_106;
                                          }
                                          uint64_t v127 = a1 + 1160;
                                          uint64_t v94 = &(*v55)[-*(int *)*v55];
                                          if (*(unsigned __int16 *)v94 >= 0x2Fu)
                                          {
                                            uint64_t v95 = *((unsigned __int16 *)v94 + 23);
                                            if (v95)
                                            {
                                              unsigned int v96 = (*v55)[v95];
                                              if (v96 <= 0x2D && ((1 << v96) & 0x208040000000) != 0)
                                              {
                                                uint64_t v97 = &(*v46)[-*(int *)*v46];
                                                if (*(unsigned __int16 *)v97 < 0x2Fu) {
                                                  goto LABEL_106;
                                                }
                                                uint64_t v98 = *((unsigned __int16 *)v97 + 23);
                                                if (!v98) {
                                                  goto LABEL_106;
                                                }
                                                BOOL v6 = 0;
                                                unsigned int v99 = (*v46)[v98];
                                                if (v99 > 0x2D || ((1 << v99) & 0x208040000000) == 0) {
                                                  goto LABEL_107;
                                                }
                                              }
                                            }
                                          }
                                          if (v132 == a4 && (sub_35E640() & 1) != 0) {
                                            goto LABEL_106;
                                          }
                                          double v100 = sub_69B2B8(a1, v135, v133, (int **)v46, v93);
                                          double v101 = sub_69B314(a1, v135, (int **)v46, v100);
                                          double v102 = sub_69B314(a1, v135, v133, v101);
                                          if (v100 >= sub_69B494(a1, v135, v133, (int **)v46, v102)) {
                                            goto LABEL_106;
                                          }
                                          if (sub_6561B0((int **)v46)
                                            && sub_699454((int **)v46)
                                            && sub_69B568(v46) >= 2)
                                          {
                                            uint64_t v103 = (unsigned __int16 *)((char *)*v135 - **v135);
                                            if (*v103 >= 0xBu && (uint64_t v104 = v103[5]) != 0)
                                            {
                                              if (v102 >= 0.0 == *((unsigned __int8 *)*v135 + v104 + 1) >> 7) {
                                                goto LABEL_106;
                                              }
                                            }
                                            else if (v102 < 0.0)
                                            {
                                              goto LABEL_106;
                                            }
                                          }
                                          if (sub_69B5C8((char **)v135))
                                          {
                                            double v105 = fabs(v102);
                                            if (fabs(v101) > *(double *)(a1 + 184) == v105 <= *(double *)(a1 + 184)) {
                                              goto LABEL_106;
                                            }
                                          }
                                          BOOL v106 = *v46;
                                          uint64_t v107 = &(*v46)[-*(int *)*v46];
                                          unsigned int v108 = *(unsigned __int16 *)v107;
                                          if (v108 >= 0x2F)
                                          {
                                            uint64_t v109 = *((unsigned __int16 *)v107 + 23);
                                            if (*((_WORD *)v107 + 23))
                                            {
                                              if (v106[v109] == 44) {
                                                goto LABEL_168;
                                              }
                                            }
                                          }
                                          uint64_t v110 = (unsigned __int16 *)((char *)*v133 - **v133);
                                          if (*v110 < 0x2Fu) {
                                            goto LABEL_177;
                                          }
                                          uint64_t v111 = v110[23];
                                          if (!v111 || *((unsigned char *)*v133 + v111) != 44) {
                                            goto LABEL_177;
                                          }
                                          if (v108 >= 0x2F)
                                          {
                                            LODWORD(v109) = *((unsigned __int16 *)v107 + 23);
                                            if (*((_WORD *)v107 + 23))
                                            {
LABEL_168:
                                              if (v106[v109] == 44)
                                              {
                                                long long v112 = (unsigned __int16 *)((char *)*v133 - **v133);
                                                if (*v112 >= 0x2Fu)
                                                {
                                                  uint64_t v113 = v112[23];
                                                  if (v113)
                                                  {
                                                    if (*((unsigned char *)*v133 + v113) == 44) {
                                                      goto LABEL_171;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          if ((sub_69B640((uint64_t)&v138, v46) & 1) != 0
                                            || sub_69B640((uint64_t)&v138, v133))
                                          {
LABEL_171:
                                            unint64_t v114 = sub_2E68E8(*(void *)a1, (uint64_t)v46[4]);
                                            if (v114 <= 0xFFFFFFFEFFFFFFFFLL)
                                            {
                                              if (v114)
                                              {
                                                unint64_t v115 = sub_2E68E8(*(void *)a1, (uint64_t)v133[4]);
                                                if (v115 <= 0xFFFFFFFEFFFFFFFFLL
                                                  && v115
                                                  && (sub_2E79EC(*(void *)a1, (uint64_t)v46[4], (uint64_t)v133[4]) & 1) != 0)
                                                {
                                                  goto LABEL_106;
                                                }
                                              }
                                            }
                                            double v105 = vabdd_f64(v102, v101);
                                            if (v105 < *(double *)(a1 + 424)) {
                                              goto LABEL_106;
                                            }
                                          }
LABEL_177:
                                          if (v131 < 0) {
                                            char v116 = v136;
                                          }
                                          else {
                                            char v116 = 0;
                                          }
                                          if (v116) {
                                            goto LABEL_201;
                                          }
                                          unsigned int v117 = *(_DWORD *)(a1 + 364);
                                          if (v67 > v117 || v57 == v64 && v67 == v117) {
                                            goto LABEL_201;
                                          }
                                          if ((v131 & 0x80000000) == 0)
                                          {
                                            LOWORD(v105) = *(_WORD *)(a1 + 416);
                                            if (v100 >= (double)vmovl_s16(*(int16x4_t *)&v105).i32[0]) {
                                              goto LABEL_106;
                                            }
                                          }
                                          int v118 = *(_DWORD *)(a1 + 372);
                                          int v119 = *(_DWORD *)(a1 + 380);
                                          long long v120 = (unsigned __int16 *)((char *)*v133 - **v133);
                                          if (*v120 >= 0x2Fu)
                                          {
                                            uint64_t v121 = v120[23];
                                            if (v121)
                                            {
                                              unsigned int v122 = *((unsigned __int8 *)*v133 + v121);
                                              if (v122 <= 0x2A && ((1 << v122) & 0x50426810004) != 0)
                                              {
                                                long long v123 = (unsigned __int16 *)((char *)*v135 - **v135);
                                                if (*v123 >= 0xBu && (uint64_t v124 = v123[5]) != 0)
                                                {
                                                  if (v102 >= 0.0 == *((unsigned __int8 *)*v135 + v124 + 1) >> 7) {
                                                    goto LABEL_197;
                                                  }
                                                }
                                                else if (v102 < 0.0)
                                                {
                                                  goto LABEL_197;
                                                }
                                                if (fabs(v101) < *(double *)(a1 + 184))
                                                {
                                                  int v118 = *(_DWORD *)(a1 + 376);
                                                  int v119 = *(_DWORD *)(a1 + 384);
                                                }
                                              }
                                            }
                                          }
LABEL_197:
                                          if (v131 <= v118) {
                                            char v125 = v136;
                                          }
                                          else {
                                            char v125 = 0;
                                          }
                                          if ((v125 & 1) == 0)
                                          {
                                            if (sub_69B688(a1, v46, v133) || v130 && sub_69B6E8(a1, v135, v46, v133)) {
                                              goto LABEL_106;
                                            }
                                            int v126 = v129 - v128 > v119 ? 1 : v136;
                                            if (v126 == 1
                                              && ((v136 & 1) != 0
                                               || sub_6D7A80(v127, v46) < *(_DWORD *)(a1 + 368)
                                               || sub_6D7A80(v127, (char **)v133) < *(_DWORD *)(a1 + 368)
                                               || v129 - v128 > *(_DWORD *)(a1 + 388)))
                                            {
                                              goto LABEL_106;
                                            }
                                          }
LABEL_201:
                                          BOOL v6 = 1;
                                          goto LABEL_107;
                                        }
                                      }
LABEL_128:
                                      BOOL v91 = (sub_66341C(a1 + 3048, (int **)v55) & 1) != 0
                                         || sub_6DC210((void *)(a1 + 1160), (int **)v55);
                                      goto LABEL_132;
                                    }
                                    return 0;
                                  }
LABEL_104:
                                  if ((v79 & 1) == 0) {
                                    goto LABEL_105;
                                  }
                                  return 0;
                                }
                              }
                              else if (v77 >= 0xB && *((_WORD *)v76 + 5))
                              {
                                LOBYTE(v74) = v74 ^ ((*(_DWORD *)&v75[*((unsigned __int16 *)v76 + 5)] & 1) != 0);
                              }
                              if (v74) {
                                return 0;
                              }
                              goto LABEL_96;
                            }
                          }
                          else
                          {
                            if (v62 < 0x27) {
                              goto LABEL_65;
                            }
                            unsigned int v63 = v61[19];
                            if (!v63) {
                              goto LABEL_65;
                            }
                          }
                          unsigned int v64 = *(int *)((char *)v60 + v63 + *(int *)((char *)v60 + v63));
                          if (v64) {
                            goto LABEL_66;
                          }
                          goto LABEL_65;
                        }
                      }
                      else
                      {
                        uint64_t v55 = (char **)v133;
                        if (v54 < 0x27) {
                          goto LABEL_57;
                        }
                        unsigned int v56 = v53[19];
                        if (!v56) {
                          goto LABEL_57;
                        }
                      }
                      unsigned int v57 = *(int *)((char *)v52 + v56 + *(int *)((char *)v52 + v56));
                      if (v57) {
                        goto LABEL_58;
                      }
                      goto LABEL_57;
                    }
                  }
                  uint64_t v141 = v28;
                  operator delete(v28);
                  goto LABEL_18;
                }
              }
              else
              {
                unint64_t v24 = sub_2E1AA4((uint64_t)&v139);
                unsigned int v25 = v24;
                unint64_t v26 = v24 & 0xFFFFFFFF00000000;
                uint64_t v23 = __p;
                uint64_t v27 = v25;
                if (!__p) {
                  goto LABEL_15;
                }
              }
              uint64_t v141 = v23;
              operator delete(v23);
              goto LABEL_15;
            }
          }
          else
          {
            unint64_t v21 = sub_2E40A4((uint64_t)&v139);
            unsigned int v20 = HIDWORD(v21);
            uint64_t v19 = __p;
            unsigned int v22 = v21;
            if (!__p) {
              goto LABEL_12;
            }
          }
          uint64_t v141 = v19;
          operator delete(v19);
          goto LABEL_12;
        }
      }
      else
      {
        unint64_t v17 = sub_2E1AA4((uint64_t)&v139);
        unsigned int v137 = HIDWORD(v17);
        unsigned int v16 = __p;
        unsigned int v18 = v17;
        if (!__p) {
          goto LABEL_9;
        }
      }
      uint64_t v141 = v16;
      operator delete(v16);
      goto LABEL_9;
    }
  }
  return v6;
}

void sub_6ACD10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  sub_592058((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_6ACD24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  sub_592058((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_6ACD38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  sub_592058((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_6ACD4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  sub_592058((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_6ACD60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  sub_592058((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_6ACD74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  sub_592058((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_6ACD88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  sub_592058((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_6ACD9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  sub_592058((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_6ACDB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6ACDD8(uint64_t a1, int **a2, int ***a3, unint64_t a4)
{
  uint64_t v7 = (int **)sub_5A7C34(a3, a4);
  int v8 = *a3;
  uint64_t v9 = a3[1];
  if (*a3 == v9)
  {
    unint64_t v10 = 0;
  }
  else
  {
    unint64_t v10 = 0;
    do
    {
      if (sub_6DB184(a1 + 1160, v8) || *(unsigned char *)(a1 + 432) && sub_6DC1A4(a1 + 1160, v8)) {
        ++v10;
      }
      v8 += 5;
    }
    while (v8 != v9);
  }
  uint64_t v11 = *a2;
  uint64_t v12 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v13 = *v12;
  if (v13 < 0x2F
    || (uint64_t v14 = v12[23]) == 0
    || ((v15 = *((unsigned __int8 *)v11 + v14), v23 = v15 > 0x2A, uint64_t v16 = (1 << v15) & 0x50426810004, !v23)
      ? (BOOL v17 = v16 == 0)
      : (BOOL v17 = 1),
        v17))
  {
    unsigned int v18 = (unsigned __int16 *)((char *)*v7 - **v7);
    if (*v18 >= 0x2Fu)
    {
      uint64_t v19 = v18[23];
      if (v19)
      {
        unsigned int v20 = *((unsigned __int8 *)*v7 + v19);
        BOOL v23 = v20 > 0x2A;
        uint64_t v21 = (1 << v20) & 0x50426810004;
        BOOL v22 = v23 || v21 == 0;
        BOOL v23 = !v22 && v10 > 2;
        if (v23) {
          return 1;
        }
      }
    }
    if (v13 < 0x2F || (LODWORD(v14) = v12[23]) == 0)
    {
LABEL_31:
      char v25 = sub_2E79EC(*(void *)a1, (uint64_t)a2[4], (uint64_t)v7[4]);
      long long __p = 0;
      int v66 = 0;
      uint64_t v67 = 0;
      if (v25)
      {
        if (sub_6ADE44(a1, (uint64_t)a2) || sub_6ADE44(a1, (uint64_t)v7))
        {
LABEL_88:
          BOOL v39 = 0;
          unint64_t v58 = (int **)__p;
          if (!__p) {
            return v39;
          }
          goto LABEL_93;
        }
LABEL_78:
        if (!sub_69BFAC(a1, a2, v7, v25))
        {
          uint64_t v50 = *(void *)(a1 + 24);
          long long v51 = *((_OWORD *)a2 + 1);
          long long v62 = *(_OWORD *)a2;
          long long v63 = v51;
          unsigned int v64 = a2[4];
          int v52 = sub_656558(v50, (uint64_t)&v62, 0);
          uint64_t v53 = *(void *)(a1 + 24);
          long long v54 = *(_OWORD *)v7;
          long long v55 = *((_OWORD *)v7 + 1);
          unsigned int v64 = v7[4];
          long long v62 = v54;
          long long v63 = v55;
          int v56 = sub_656558(v53, (uint64_t)&v62, 0);
          if (!*(unsigned char *)(a1 + 863) || v52 == v56 || !v52 || !v56)
          {
            double v57 = sub_6D82EC(a1 + 1160, a2, v7);
            if (!*(unsigned char *)(a1 + 1059) || v57 <= *(double *)(a1 + 184) || !sub_69C1F0(a2))
            {
              if (!*(unsigned char *)(a1 + 1058) || sub_699190((char **)a2)) {
                goto LABEL_88;
              }
              BOOL v39 = sub_654F1C(*v7, *((unsigned __int8 *)v7 + 38));
              unint64_t v58 = (int **)__p;
              if (!__p) {
                return v39;
              }
LABEL_93:
              int v66 = v58;
              operator delete(v58);
              return v39;
            }
          }
        }
LABEL_92:
        BOOL v39 = 1;
        unint64_t v58 = (int **)__p;
        if (!__p) {
          return v39;
        }
        goto LABEL_93;
      }
      if (*(unsigned char *)(a1 + 1154))
      {
        unint64_t v26 = (unsigned __int16 *)((char *)*a2 - **a2);
        if (*v26 >= 0x2Fu)
        {
          uint64_t v27 = v26[23];
          if (v27)
          {
            if (!*((unsigned char *)*a2 + v27))
            {
              uint64_t v28 = (unsigned __int16 *)((char *)*v7 - **v7);
              if (*v28 >= 0x2Fu)
              {
                uint64_t v29 = v28[23];
                if (v29)
                {
                  if (!*((unsigned char *)*v7 + v29))
                  {
                    unint64_t v61 = sub_2E68E8(*(void *)a1, (uint64_t)v7[4]);
                    if (v61 <= 0xFFFFFFFEFFFFFFFFLL)
                    {
                      if (v61)
                      {
                        *(void *)&long long v62 = v7;
                        if (a3[1] != sub_69BF14(a3, (uint64_t)&v62)) {
                          goto LABEL_92;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      int v30 = sub_6D7A80(a1 + 1160, (char **)a2);
      int v31 = v30 - sub_6D7A80(a1 + 1160, (char **)v7);
      if (v31 >= 0) {
        unsigned int v32 = v31;
      }
      else {
        unsigned int v32 = -v31;
      }
      unsigned int v33 = *(unsigned __int8 *)(a1 + 1152);
      unint64_t v34 = (unint64_t)a2[4];
      double v35 = (int *)sub_2D5D58(*(void *)a1, v34 & 0xFFFFFFFFFFFFLL);
      double v36 = (unsigned __int16 *)((char *)v35 - *v35);
      unsigned int v37 = *v36;
      if ((v34 & 0xFF000000000000) != 0)
      {
        if (v37 < 0x29 || (unsigned int v38 = v36[20]) == 0)
        {
LABEL_53:
          int v40 = 0;
LABEL_54:
          unint64_t v41 = (unint64_t)v7[4];
          double v42 = (int *)sub_2D5D58(*(void *)a1, v41 & 0xFFFFFFFFFFFFLL);
          double v43 = (unsigned __int16 *)((char *)v42 - *v42);
          unsigned int v44 = *v43;
          if ((v41 & 0xFF000000000000) != 0)
          {
            if (v44 >= 0x29)
            {
              int v45 = v43[20];
              if (v45)
              {
LABEL_57:
                BOOL v46 = 0;
                int v45 = *(int *)((char *)v42 + v45 + *(unsigned int *)((char *)v42 + v45));
                if (v40 >= 1 && v45 >= 1)
                {
                  int v47 = v40 - v45;
                  if (v47 < 0) {
                    int v47 = -v47;
                  }
                  BOOL v46 = v47 >= *(unsigned __int8 *)(a1 + 1153);
                  int v45 = 1;
                  if (v32 < v33) {
                    goto LABEL_73;
                  }
LABEL_69:
                  if (!v40) {
                    BOOL v46 = 1;
                  }
                  if (v46 || !v45)
                  {
                    unint64_t v59 = sub_2E68E8(*(void *)a1, (uint64_t)v7[4]);
                    if (v59 <= 0xFFFFFFFEFFFFFFFFLL)
                    {
                      if (v59) {
                        goto LABEL_92;
                      }
                    }
                  }
LABEL_73:
                  sub_6A51D8(a1, (long long *)a2, (char **)&__p, 0);
                  int v48 = (int **)__p;
                  BOOL v49 = v66;
                  *(void *)&long long v62 = a1;
                  *((void *)&v62 + 1) = a2;
                  *(void *)&long long v63 = v7;
                  if (__p != v66)
                  {
                    while ((sub_6D3A80((uint64_t *)&v62, v48) & 1) == 0)
                    {
                      v48 += 5;
                      if (v48 == v49)
                      {
                        int v48 = v49;
                        break;
                      }
                    }
                    if (v48 != v66) {
                      goto LABEL_92;
                    }
                  }
                  goto LABEL_78;
                }
LABEL_68:
                if (v32 < v33) {
                  goto LABEL_73;
                }
                goto LABEL_69;
              }
LABEL_65:
              BOOL v46 = 0;
              if (v32 < v33) {
                goto LABEL_73;
              }
              goto LABEL_69;
            }
          }
          else if (v44 >= 0x27)
          {
            int v45 = v43[19];
            if (v45) {
              goto LABEL_57;
            }
            goto LABEL_65;
          }
          int v45 = 0;
          BOOL v46 = 0;
          goto LABEL_68;
        }
      }
      else
      {
        if (v37 < 0x27) {
          goto LABEL_53;
        }
        unsigned int v38 = v36[19];
        if (!v38) {
          goto LABEL_53;
        }
      }
      int v40 = *(int *)((char *)v35 + v38 + *(int *)((char *)v35 + v38));
      goto LABEL_54;
    }
LABEL_29:
    unsigned int v24 = *((unsigned __int8 *)v11 + v14) - 2;
    if (v24 < 0x29 && ((0x14109A04001uLL >> v24) & 1) != 0) {
      return 0;
    }
    goto LABEL_31;
  }
  if (v10 <= 2) {
    goto LABEL_29;
  }
  return 1;
}

void sub_6AD2F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_6AD338(uint64_t a1, int **a2, int **a3, int ***a4, char a5, double a6)
{
  if (a5) {
    return 0;
  }
  v27[12] = v6;
  v27[13] = v7;
  double v26 = fabs(sub_69B314(a1, a2, a3, a6));
  if (v26 < *(double *)(a1 + 1128)) {
    return 0;
  }
  unsigned int v13 = *a2;
  uint64_t v14 = (unsigned __int16 *)((char *)*a2 - **a2);
  if (*v14 >= 0x2Fu && v14[23])
  {
    BOOL result = 0;
    switch(*((unsigned char *)v13 + v14[23]))
    {
      case 6:
      case 0xC:
      case 0x2B:
        uint64_t v15 = v14[5];
        if (v15 && (*((unsigned char *)v13 + v15 + 2) & 0x20) != 0) {
          goto LABEL_11;
        }
        return 0;
      case 0x2C:
        return result;
      default:
        goto LABEL_11;
    }
  }
  else
  {
LABEL_11:
    uint64_t v16 = *a3;
    BOOL v17 = (unsigned __int16 *)((char *)*a3 - **a3);
    if (*v17 >= 0x2Fu && v17[23])
    {
      BOOL result = 0;
      switch(*((unsigned char *)v16 + v17[23]))
      {
        case 6:
        case 0xC:
        case 0x2B:
          uint64_t v18 = v17[5];
          if (v18 && (*((unsigned char *)v16 + v18 + 2) & 0x20) != 0) {
            goto LABEL_16;
          }
          return 0;
        case 0x2C:
          return result;
        default:
          goto LABEL_16;
      }
    }
    else
    {
LABEL_16:
      int v25 = sub_2E35CC(a2);
      uint64_t v19 = (unsigned __int16 *)((char *)*a2 - **a2);
      if (*v19 >= 0x43u && (uint64_t v20 = v19[33]) != 0) {
        int v21 = *((unsigned __int8 *)*a2 + v20);
      }
      else {
        int v21 = 0;
      }
      int v24 = v21;
      BOOL v23 = *a4;
      BOOL v22 = a4[1];
      v27[0] = &v25;
      v27[1] = a1;
      v27[2] = &v24;
      v27[3] = a3;
      v27[4] = a2;
      v27[5] = &v26;
      if (v23 == v22) {
        return 0;
      }
      do
      {
        BOOL result = sub_6D3704((uint64_t)v27, v23);
        if (result) {
          break;
        }
        v23 += 5;
      }
      while (v23 != v22);
    }
  }
  return result;
}

uint64_t sub_6AD630(uint64_t a1, char **a2, void *a3, unint64_t a4, unint64_t a5)
{
  if (a5 == -1) {
    return 0;
  }
  uint64_t v9 = (char **)sub_5A7C34(a3, a5);
  unint64_t v10 = (char **)sub_5A7C34(a3, a4);
  uint64_t v11 = &(*a2)[-*(int *)*a2];
  if (*(unsigned __int16 *)v11 >= 0x2Fu)
  {
    uint64_t v12 = *((unsigned __int16 *)v11 + 23);
    if (v12)
    {
      unsigned int v13 = (*a2)[v12];
      BOOL v14 = v13 > 0x2A;
      uint64_t v15 = (1 << v13) & 0x50426810004;
      if (!v14 && v15 != 0)
      {
        BOOL v17 = &(*v9)[-*(int *)*v9];
        if (*(unsigned __int16 *)v17 >= 0x2Fu)
        {
          uint64_t v18 = *((unsigned __int16 *)v17 + 23);
          if (v18)
          {
            unsigned int v19 = (*v9)[v18] - 2;
            if (v19 < 0x29 && ((0x14109A04001uLL >> v19) & 1) != 0) {
              return 0;
            }
          }
        }
      }
    }
  }
  sub_68F4F8(*(void *)a1, *((unsigned int *)v10 + 8) | ((unint64_t)*((unsigned __int16 *)v10 + 18) << 32), &__p);
  uint64_t v20 = (unint64_t *)__p;
  int v21 = v38;
  v36[0] = a1;
  v36[1] = a2;
  v36[2] = v10;
  if (__p != v38)
  {
    while (!sub_6D3C7C((uint64_t)v36, v20))
    {
      if (++v20 == v21)
      {
        uint64_t v20 = v21;
        break;
      }
    }
    if (v20 != v38)
    {
LABEL_17:
      uint64_t v22 = 1;
      BOOL v23 = (unint64_t *)__p;
      if (!__p) {
        return v22;
      }
      goto LABEL_38;
    }
  }
  int v24 = &(*a2)[-*(int *)*a2];
  if (*(unsigned __int16 *)v24 >= 0x2Fu)
  {
    uint64_t v25 = *((unsigned __int16 *)v24 + 23);
    if (v25)
    {
      if (!(*a2)[v25])
      {
        double v26 = &(*v10)[-*(int *)*v10];
        if (*(unsigned __int16 *)v26 >= 0x2Fu)
        {
          uint64_t v27 = *((unsigned __int16 *)v26 + 23);
          if (v27)
          {
            unsigned int v28 = (*v10)[v27];
            BOOL v14 = v28 > 0x2A;
            uint64_t v29 = (1 << v28) & 0x50426810004;
            if (!v14 && v29 != 0)
            {
              int v31 = &(*v9)[-*(int *)*v9];
              if (*(unsigned __int16 *)v31 >= 0x2Fu)
              {
                uint64_t v32 = *((unsigned __int16 *)v31 + 23);
                if (v32)
                {
                  int v33 = (*v9)[v32];
                  if (v33 - 2) < 0x29 && ((0x14109A04001uLL >> (v33 - 2))) {
                    goto LABEL_37;
                  }
                  if (!(*v9)[v32])
                  {
LABEL_35:
                    if (sub_6D7A80(a1 + 1160, v10) >= *(_DWORD *)(a1 + 448)
                      || sub_6D7A80(a1 + 1160, a2) <= *(_DWORD *)(a1 + 448))
                    {
                      goto LABEL_17;
                    }
                    goto LABEL_37;
                  }
                }
              }
              unsigned int v34 = sub_6D7A80(a1 + 1160, v10);
              if (v34 >= sub_6D7A80(a1 + 1160, v9)) {
                goto LABEL_35;
              }
            }
          }
        }
      }
    }
  }
LABEL_37:
  uint64_t v22 = 0;
  BOOL v23 = (unint64_t *)__p;
  if (__p)
  {
LABEL_38:
    unsigned int v38 = v23;
    operator delete(v23);
  }
  return v22;
}

void sub_6AD8C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_6AD8E4(uint64_t a1, long long *a2, int a3, uint64_t a4)
{
  if ((a3 - 3) < 0xFFFFFFFE) {
    return 0;
  }
  int v24 = 0;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  sub_6A51D8(a1, a2, &v24, 0);
  uint64_t v9 = v24;
  unint64_t v10 = 0xCCCCCCCCCCCCCCCDLL * ((v25 - v24) >> 3);
  double v11 = 0.0;
  if (v10 < 2
    || (uint64_t v12 = (unsigned __int16 *)(*(void *)a2 - **(int **)a2), *v12 >= 0x2Fu)
    && (uint64_t v13 = v12[23]) != 0
    && ((v14 = *(unsigned __int8 *)(*(void *)a2 + v13), v15 = v14 > 0x2A, uint64_t v16 = (1 << v14) & 0x50426810004, !v15)
      ? (BOOL v17 = v16 == 0)
      : (BOOL v17 = 1),
        !v17))
  {
    BOOL v4 = 0;
    if (!v24) {
      return v4;
    }
LABEL_11:
    uint64_t v25 = v9;
    operator delete(v9);
    return v4;
  }
  unsigned int v19 = 0;
  for (unint64_t i = 0; i != v10; ++i)
  {
    if (sub_6A67C8(a1, a2, &v24, i, 0, a4, 0) == a3)
    {
      int v21 = (int **)sub_66F838(&v24, i);
      if (sub_6DB184(a1 + 1160, v21))
      {
        uint64_t v22 = (int **)sub_66F838(&v24, i);
        double v23 = fabs(sub_6D82EC(a1 + 1160, (int **)a2, v22));
        if (v23 >= v11) {
          double v11 = v23;
        }
        ++v19;
      }
    }
  }
  BOOL v4 = v19 > 1;
  uint64_t v9 = v24;
  if (v24) {
    goto LABEL_11;
  }
  return v4;
}

void sub_6ADA8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6ADAB0(uint64_t a1, void *a2, unint64_t a3, int **a4, uint64_t a5, int a6)
{
  *(_DWORD *)(a5 + 24) = 0;
  *(void *)(a5 + 8) = *(void *)a5;
  *(void *)(a5 + 48) = *(void *)(a5 + 40);
  *(_DWORD *)(a5 + 64) = 0;
  *(void *)&long long v11 = -1;
  *((void *)&v11 + 1) = -1;
  *(_OWORD *)(a5 + 72) = v11;
  *(_OWORD *)(a5 + 88) = v11;
  *(_OWORD *)(a5 + 104) = v11;
  *(void *)(a5 + 120) = -1;
  *(_DWORD *)(a5 + 128) = 0;
  *(void *)(a5 + 136) = -1;
  *(_DWORD *)(a5 + 144) = 0;
  *(_OWORD *)(a5 + 152) = xmmword_20E2060;
  *(_WORD *)(a5 + 168) = 0;
  *(unsigned char *)(a5 + 170) = 0;
  *(void *)(a5 + 176) = 0;
  *(unsigned char *)(a5 + 188) = 0;
  *(unsigned char *)(a5 + 190) = 0;
  uint64_t v12 = (uint64_t *)(a4 + 10);
  unint64_t v13 = (unint64_t)a4[13];
  uint64_t v14 = sub_5A7C34(a4 + 10, v13);
  unint64_t v15 = sub_46C760(a2);
  if (a3 <= v15) {
    unint64_t v16 = v15;
  }
  else {
    unint64_t v16 = a3;
  }
  if (v15 > a3)
  {
    uint64_t v17 = a3;
    do
    {
      unint64_t v28 = *(void *)(sub_46C8EC(a2, v17) + 32);
      sub_2D5B74((char **)a5, &v28);
      uint64_t v18 = *(void *)(v14 + 32);
      if ((v18 & 0xFFFFFFFFFFFFLL) == (v28 & 0xFFFFFFFFFFFFLL)
        && ((v18 & 0xFF000000000000) == 0) != (HIWORD(v28) & 1))
      {
        break;
      }
      ++v17;
    }
    while (v17 != v16);
    int v19 = sub_2E79EC(*(void *)a1, (uint64_t)a4[4], v18);
    if (v19) {
      goto LABEL_10;
    }
LABEL_13:
    int v20 = a6;
    goto LABEL_15;
  }
  int v19 = sub_2E79EC(*(void *)a1, (uint64_t)a4[4], *(void *)(v14 + 32));
  if (!v19) {
    goto LABEL_13;
  }
LABEL_10:
  int v20 = a6;
  LOBYTE(v19) = sub_6ADE44(a1, (uint64_t)a4) || sub_6ADE44(a1, v14);
LABEL_15:
  *(unsigned char *)(a5 + 189) = v19;
  uint64_t result = sub_6A67C8(a1, a4, v12, v13, 1, 1, v20);
  *(_DWORD *)(a5 + 24) = result;
  if (result)
  {
    uint64_t result = sub_6AE08C(a1, a2, a3, (int **)v14, a5);
    if (result)
    {
      *(_DWORD *)(a5 + 24) = 0;
    }
    else if (*(unsigned char *)(a1 + 1058) && *(_DWORD *)(a5 + 24) == 3)
    {
      uint64_t v22 = *a4;
      double v23 = (unsigned __int16 *)((char *)*a4 - **a4);
      if (*v23 >= 0x2Fu && v23[23])
      {
        switch(*((unsigned char *)v22 + v23[23]))
        {
          case 6:
          case 0xC:
          case 0x2B:
            uint64_t v24 = v23[5];
            if (v24 && (*((unsigned char *)v22 + v24 + 2) & 0x20) != 0) {
              goto LABEL_25;
            }
            break;
          case 0x2C:
            break;
          default:
            goto LABEL_25;
        }
      }
      else
      {
LABEL_25:
        uint64_t v25 = sub_5A7C34(v12, v13);
        uint64_t result = sub_654F1C(*(int **)v25, *(unsigned __int8 *)(v25 + 38));
        if (result) {
          *(unsigned char *)(a5 + 190) = 1;
        }
      }
    }
  }
  if (*(unsigned char *)(a1 + 747))
  {
    uint64_t result = sub_2E4CD4(*(void *)a1, (uint64_t)a4[4]);
    if (result)
    {
      uint64_t result = sub_2E4CD4(*(void *)a1, *(void *)(v14 + 32));
      if (result)
      {
        if (*(_DWORD *)(a5 + 24))
        {
          *(unsigned char *)(a5 + 170) = 1;
          *(_DWORD *)(a5 + 24) = 0;
        }
      }
    }
  }
  if (v20)
  {
    unsigned int v26 = *(_DWORD *)(a5 + 24);
    if (v26 <= 0x15 && ((1 << v26) & 0x300001) != 0) {
      unsigned int v26 = 3;
    }
    *(_DWORD *)(a5 + 24) = v26;
  }
  return result;
}

BOOL sub_6ADE44(uint64_t a1, uint64_t a2)
{
  if (!*(unsigned char *)(a1 + 1056)) {
    return 0;
  }
  sub_58E730(*(void *)a1, *(void *)(a2 + 32), 1u, &__p);
  if (__p == v11)
  {
    long long v19 = 0u;
    *(_OWORD *)uint64_t v17 = 0u;
    memset(v18, 0, sizeof(v18));
    long long v15 = 0u;
    *(_OWORD *)unint64_t v16 = 0u;
    long long v13 = 0u;
    *(_OWORD *)uint64_t v14 = 0u;
    *(_OWORD *)uint64_t v12 = 0u;
    *((void *)&v15 + 1) = sub_1133328();
    long long v19 = 0uLL;
    v18[3] = 0;
    *(_OWORD *)unint64_t v16 = 0u;
    *(_OWORD *)uint64_t v17 = 0u;
    memset(v18, 0, 19);
    uint64_t v3 = __p;
    if (!__p) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v2 = __p;
    while (*v2)
    {
      v2 += 144;
      if (v2 == v11)
      {
        uint64_t v2 = __p;
        break;
      }
    }
    sub_6C8AE4((uint64_t)v12, (uint64_t)v2);
    uint64_t v3 = __p;
    if (!__p)
    {
LABEL_8:
      BOOL v4 = LOBYTE(v18[2]) != 0;
      if ((SHIBYTE(v19) & 0x80000000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_20;
    }
  }
  uint64_t v7 = (uint64_t)v11;
  int v8 = v3;
  if (v11 != v3)
  {
    do
      uint64_t v7 = sub_2DF404(v7 - 144);
    while ((unsigned char *)v7 != v3);
    int v8 = __p;
  }
  long long v11 = v3;
  operator delete(v8);
  BOOL v4 = LOBYTE(v18[2]) != 0;
  if ((SHIBYTE(v19) & 0x80000000) == 0)
  {
LABEL_9:
    if ((SHIBYTE(v18[1]) & 0x80000000) == 0) {
      goto LABEL_10;
    }
LABEL_21:
    operator delete(v17[1]);
    uint64_t v5 = (void **)v16[0];
    if (!v16[0])
    {
LABEL_11:
      if (SBYTE7(v15) < 0) {
        goto LABEL_32;
      }
      goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_20:
  operator delete(v18[3]);
  if (SHIBYTE(v18[1]) < 0) {
    goto LABEL_21;
  }
LABEL_10:
  uint64_t v5 = (void **)v16[0];
  if (!v16[0]) {
    goto LABEL_11;
  }
LABEL_22:
  uint64_t v9 = (void **)v16[1];
  if (v16[1] == v5)
  {
    v16[1] = v5;
    operator delete(v5);
    if ((SBYTE7(v15) & 0x80000000) == 0) {
      goto LABEL_12;
    }
LABEL_32:
    operator delete(v14[0]);
    if ((SHIBYTE(v13) & 0x80000000) == 0) {
      return v4;
    }
    goto LABEL_33;
  }
  do
  {
    if (*((char *)v9 - 9) < 0)
    {
      operator delete(*(v9 - 4));
      if ((*((char *)v9 - 33) & 0x80000000) == 0) {
        goto LABEL_25;
      }
    }
    else if ((*((char *)v9 - 33) & 0x80000000) == 0)
    {
      goto LABEL_25;
    }
    operator delete(*(v9 - 7));
LABEL_25:
    v9 -= 7;
  }
  while (v9 != v5);
  v16[1] = v5;
  operator delete(v16[0]);
  if (SBYTE7(v15) < 0) {
    goto LABEL_32;
  }
LABEL_12:
  if ((SHIBYTE(v13) & 0x80000000) == 0) {
    return v4;
  }
LABEL_33:
  operator delete(v12[1]);
  return v4;
}

void sub_6AE064(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_53BD98((void **)va);
  _Unwind_Resume(a1);
}

void sub_6AE078(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_53BD98((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_6AE08C(uint64_t a1, void *a2, unint64_t a3, int **a4, uint64_t a5)
{
  if (!*(unsigned char *)(a1 + 862)) {
    return 0;
  }
  uint64_t v51 = a1 + 1160;
  if (!sub_6DB184(a1 + 1160, a4)) {
    return 0;
  }
  uint64_t v9 = (unsigned __int16 *)((char *)*a4 - **a4);
  if (*v9 >= 0x2Fu)
  {
    uint64_t v10 = v9[23];
    if (v10)
    {
      uint64_t v11 = 0;
      int v12 = *((unsigned __int8 *)*a4 + v10);
      if (v12 == 14 || v12 == 44) {
        return v11;
      }
    }
  }
  unsigned int v13 = *(_DWORD *)(a5 + 24) - 3;
  if (v13 < 0x16 && ((0x380001u >> v13) & 1) != 0) {
    return 0;
  }
  uint64_t v14 = sub_46C8EC(a2, a3);
  uint64_t v15 = *(void *)a1;
  uint64_t v16 = *(void *)(v14 + 32);
  uint64_t v17 = sub_2D5D58(*(void *)a1, v16 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v15 + 7772))
  {
    uint64_t v18 = sub_2DB8E0(v15 + 3896, v16, 0);
    long long v19 = &v18[-*(int *)v18];
    if (*(unsigned __int16 *)v19 < 5u)
    {
      uint64_t v20 = 0;
    }
    else
    {
      uint64_t v20 = *((unsigned __int16 *)v19 + 2);
      if (v20) {
        v20 += (uint64_t)&v18[*(unsigned int *)&v18[v20]];
      }
    }
    uint64_t v22 = v20 + 4 * WORD2(v16) + 4 + *(unsigned int *)(v20 + 4 * WORD2(v16) + 4);
  }
  else
  {
    uint64_t v22 = 0;
  }
  v63[0] = v17;
  v63[1] = v22;
  void v63[2] = sub_2E5C38(v15, v16 & 0xFFFFFFFFFFFFLL, 1);
  v63[3] = v23;
  int v64 = v16;
  __int16 v65 = WORD2(v16);
  BOOL v66 = (v16 & 0xFF000000000000) != 0;
  long long __p = 0;
  unint64_t v61 = 0;
  uint64_t v62 = 0;
  unint64_t v24 = sub_46C760(a2);
  if (a3 <= v24) {
    unint64_t v25 = v24;
  }
  else {
    unint64_t v25 = a3;
  }
  unint64_t v50 = v25;
  if (v24 > a3)
  {
    do
    {
      uint64_t v26 = sub_46C8EC(a2, a3);
      unint64_t v27 = (unint64_t)a4[4];
      unint64_t v28 = *(void *)(v26 + 32);
      if ((v27 & 0xFFFFFFFFFFFFLL) == (v28 & 0xFFFFFFFFFFFFLL)
        && ((v27 & 0xFF000000000000) == 0) != (HIWORD(v28) & 1))
      {
        break;
      }
      uint64_t v29 = *(void *)a1;
      int v30 = (int *)sub_2D5D58(*(void *)a1, v28 & 0xFFFFFFFFFFFFLL);
      if (*(unsigned char *)(v29 + 7772))
      {
        int v31 = sub_2DB8E0(v29 + 3896, v28, 0);
        uint64_t v32 = &v31[-*(int *)v31];
        if (*(unsigned __int16 *)v32 < 5u)
        {
          uint64_t v33 = 0;
        }
        else
        {
          uint64_t v33 = *((unsigned __int16 *)v32 + 2);
          if (v33) {
            v33 += (uint64_t)&v31[*(unsigned int *)&v31[v33]];
          }
        }
        uint64_t v34 = v33 + 4 * WORD2(v28) + 4 + *(unsigned int *)(v33 + 4 * WORD2(v28) + 4);
      }
      else
      {
        uint64_t v34 = 0;
      }
      uint64_t v35 = sub_2E5C38(v29, v28 & 0xFFFFFFFFFFFFLL, 1);
      uint64_t v53 = v30;
      uint64_t v54 = v34;
      uint64_t v55 = v35;
      uint64_t v56 = v36;
      int v57 = v28;
      __int16 v58 = WORD2(v28);
      BOOL v59 = (v28 & 0xFF000000000000) != 0;
      if (!sub_6DB184(v51, &v53)) {
        goto LABEL_47;
      }
      unsigned int v37 = (unsigned __int16 *)((char *)v53 - *v53);
      if (*v37 >= 0x2Fu)
      {
        uint64_t v38 = v37[23];
        if (v38)
        {
          int v39 = *((unsigned __int8 *)v53 + v38);
          if (v39 == 14 || v39 == 44) {
            goto LABEL_47;
          }
        }
      }
      uint64_t v40 = *(void *)a1;
      uint64_t v41 = *(void *)(v26 + 32);
      double v42 = (int *)sub_2D5D58(*(void *)a1, v41 & 0xFFFFFFFFFFFFLL);
      if (*(unsigned char *)(v40 + 7772))
      {
        double v43 = sub_2DB8E0(v40 + 3896, v41, 0);
        unsigned int v44 = &v43[-*(int *)v43];
        if (*(unsigned __int16 *)v44 < 5u)
        {
          uint64_t v45 = 0;
        }
        else
        {
          uint64_t v45 = *((unsigned __int16 *)v44 + 2);
          if (v45) {
            v45 += (uint64_t)&v43[*(unsigned int *)&v43[v45]];
          }
        }
        uint64_t v46 = v45 + 4 * WORD2(v41) + 4 + *(unsigned int *)(v45 + 4 * WORD2(v41) + 4);
      }
      else
      {
        uint64_t v46 = 0;
      }
      uint64_t v47 = sub_2E5C38(v40, v41 & 0xFFFFFFFFFFFFLL, 1);
      uint64_t v53 = v42;
      uint64_t v54 = v46;
      uint64_t v55 = v47;
      uint64_t v56 = v48;
      int v57 = v41;
      __int16 v58 = WORD2(v41);
      BOOL v59 = (v41 & 0xFF000000000000) != 0;
      sub_2E44A4(v40, (uint64_t)&v53, &__p);
      if (sub_6B58A4(a1, (uint64_t)v63, (int ***)&__p, (uint64_t)a4) != 1)
      {
LABEL_47:
        uint64_t v11 = 0;
        BOOL v49 = __p;
        if (!__p) {
          return v11;
        }
        goto LABEL_48;
      }
      ++a3;
    }
    while (v50 != a3);
  }
  uint64_t v11 = 1;
  BOOL v49 = __p;
  if (__p)
  {
LABEL_48:
    unint64_t v61 = v49;
    operator delete(v49);
  }
  return v11;
}

void sub_6AE488(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_6AE4B4(double *a1, int **a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(a6 + 8) = *(void *)a6;
  *(_DWORD *)(a6 + 24) = 0;
  uint64_t v7 = a3[1] - *a3;
  if (!v7)
  {
LABEL_39:
    sub_693DCC((uint64_t *)a6, (unsigned int (*)(unint64_t, unint64_t))sub_693F28, (uint64_t (*)(unint64_t, unint64_t))sub_693F48);
    return;
  }
  unint64_t v13 = 0;
  uint64_t v14 = v7 / 40;
  while (1)
  {
    uint64_t v15 = (int **)sub_5A7C34(a3, v13);
    uint64_t v16 = *a2;
    uint64_t v17 = (unsigned __int16 *)((char *)*a2 - **a2);
    unsigned int v18 = *v17;
    if (*((unsigned char *)a2 + 38))
    {
      if (v18 < 0xB) {
        goto LABEL_32;
      }
      unsigned int v19 = v17[5];
      if (!v19 || (*(int *)((char *)v16 + v19) & 2) == 0) {
        goto LABEL_32;
      }
    }
    else
    {
      if (v18 < 0xB) {
        goto LABEL_32;
      }
      unsigned int v20 = v17[5];
      if (!v20 || (*(int *)((char *)v16 + v20) & 1) == 0) {
        goto LABEL_32;
      }
    }
    int v21 = (char *)*v15;
    uint64_t v22 = (unsigned __int16 *)((char *)*v15 - **v15);
    unsigned int v23 = *v22;
    if (*((unsigned char *)v15 + 38)) {
      break;
    }
    if (v23 >= 0xB)
    {
      uint64_t v26 = v22[5];
      if (v26)
      {
        if ((v21[v26] & 1) == 0 && (*(_DWORD *)&v21[v26] & 2) == 0 && a4 != v13) {
          goto LABEL_3;
        }
        goto LABEL_32;
      }
    }
LABEL_31:
    if (a4 == v13) {
      goto LABEL_32;
    }
LABEL_3:
    if (v14 == ++v13) {
      goto LABEL_39;
    }
  }
  if (v23 < 0xB) {
    goto LABEL_31;
  }
  uint64_t v24 = v22[5];
  if (!v24) {
    goto LABEL_31;
  }
  if ((v21[v24] & 2) == 0 && (*(_DWORD *)&v21[v24] & 1) == 0 && a4 != v13) {
    goto LABEL_3;
  }
LABEL_32:
  int v28 = sub_6A67C8((uint64_t)a1, a2, a3, v13, 1, 1, 0);
  if (v28 == 4) {
    goto LABEL_3;
  }
  int v29 = v28;
  if (*(_DWORD *)(a5 + 32) && *(void *)a5)
  {
    if (*(void *)(a5 + 8)) {
      int v29 = sub_6A67C8((uint64_t)a1, (int **)a5, a3, v13, 1, 1, 0);
    }
  }
  sub_6AE704(a1, v29, (uint64_t)&v31);
  if (v32)
  {
    BOOL v30 = a4 == v13;
    sub_699730(a6, &v31, (char *)&v30);
    goto LABEL_3;
  }
  *(void *)(a6 + 8) = *(void *)a6;
  *(_DWORD *)(a6 + 24) = 0;
}

double sub_6AE704@<D0>(double *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  switch(a2)
  {
    case 0:
    case 3:
    case 5:
    case 12:
    case 89:
    case 90:
      double result = a1[97];
      *(_WORD *)a3 = (int)result;
      *(unsigned char *)(a3 + 2) = 1;
      break;
    case 1:
      double result = a1[100];
      *(_WORD *)a3 = (int)result;
      *(unsigned char *)(a3 + 2) = 1;
      break;
    case 2:
      double result = a1[104];
      *(_WORD *)a3 = (int)result;
      *(unsigned char *)(a3 + 2) = 1;
      break;
    case 20:
      double result = a1[98];
      *(_WORD *)a3 = (int)result;
      *(unsigned char *)(a3 + 2) = 1;
      break;
    case 21:
      double result = a1[102];
      *(_WORD *)a3 = (int)result;
      *(unsigned char *)(a3 + 2) = 1;
      break;
    case 60:
      double result = a1[101];
      *(_WORD *)a3 = (int)result;
      *(unsigned char *)(a3 + 2) = 1;
      break;
    case 61:
      double result = a1[105];
      *(_WORD *)a3 = (int)result;
      *(unsigned char *)(a3 + 2) = 1;
      break;
    case 62:
      double result = a1[99];
      *(_WORD *)a3 = (int)result;
      *(unsigned char *)(a3 + 2) = 1;
      break;
    case 63:
      double result = a1[103];
      *(_WORD *)a3 = (int)result;
      *(unsigned char *)(a3 + 2) = 1;
      break;
    default:
      *(_DWORD *)a3 = 0;
      break;
  }
  return result;
}

uint64_t sub_6AE97C(uint64_t a1, int a2, char a3)
{
  if (a3) {
    return 0;
  }
  uint64_t result = 0;
  switch(a2)
  {
    case 0:
    case 4:
    case 6:
    case 7:
    case 11:
    case 20:
    case 21:
    case 35:
    case 65:
    case 66:
      return result;
    default:
      uint64_t result = 1;
      break;
  }
  return result;
}

uint64_t sub_6AEAD0(uint64_t *a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 24);
  if (!v2) {
    return -1;
  }
  uint64_t v3 = *(uint64_t **)a2;
  int v39 = *(uint64_t **)(a2 + 8);
  uint64_t v4 = (uint64_t)v39 - *(void *)a2;
  if ((unint64_t)v4 < 0x18) {
    return 0;
  }
  uint64_t v6 = v4 >> 3;
  switch(v2)
  {
    case 12:
      return v6 - 2;
    case 4:
      return -1;
    case 3:
      return v6 - 2;
  }
  long long __p = 0;
  uint64_t v47 = 0;
  uint64_t v48 = 0;
  if ((unint64_t)v4 >= 0x3333333333333331) {
    sub_2E00();
  }
  int v8 = (int **)operator new(40 * v6);
  uint64_t v9 = v8;
  long long __p = v8;
  uint64_t v47 = (char *)v8;
  uint64_t v48 = (char *)&v8[5 * v6];
  if (v3 != v39)
  {
    do
    {
      uint64_t v10 = *a1;
      uint64_t v11 = *v3;
      unint64_t v12 = *v3 & 0xFFFFFFFFFFFFLL;
      uint64_t v13 = sub_2D5D58(*a1, v12);
      if (*(unsigned char *)(v10 + 7772))
      {
        uint64_t v14 = sub_2DB8E0(v10 + 3896, v11, 0);
        uint64_t v15 = &v14[-*(int *)v14];
        if (*(unsigned __int16 *)v15 < 5u)
        {
          uint64_t v16 = 0;
        }
        else
        {
          uint64_t v16 = *((unsigned __int16 *)v15 + 2);
          if (v16) {
            v16 += (uint64_t)&v14[*(unsigned int *)&v14[v16]];
          }
        }
        uint64_t v41 = v16 + 4 * WORD2(v11) + 4 + *(unsigned int *)(v16 + 4 * WORD2(v11) + 4);
      }
      else
      {
        uint64_t v41 = 0;
      }
      uint64_t v17 = sub_2E5C38(v10, v12, 1);
      uint64_t v19 = v17;
      uint64_t v20 = v18;
      BOOL v21 = (v11 & 0xFF000000000000) != 0;
      uint64_t v22 = v47;
      if (v47 < v48)
      {
        *(void *)uint64_t v47 = v13;
        *((void *)v22 + 1) = v41;
        *((void *)v22 + 2) = v17;
        *((void *)v22 + 3) = v18;
        *((_DWORD *)v22 + 8) = v11;
        *((_WORD *)v22 + 18) = WORD2(v11);
        uint64_t v9 = (int **)(v22 + 40);
        v22[38] = v21;
      }
      else
      {
        unsigned int v23 = (char *)__p;
        unint64_t v24 = 0xCCCCCCCCCCCCCCCDLL * ((v47 - (unsigned char *)__p) >> 3);
        unint64_t v25 = v24 + 1;
        if (v24 + 1 > 0x666666666666666) {
          sub_2E00();
        }
        if (0x999999999999999ALL * ((v48 - (unsigned char *)__p) >> 3) > v25) {
          unint64_t v25 = 0x999999999999999ALL * ((v48 - (unsigned char *)__p) >> 3);
        }
        if (0xCCCCCCCCCCCCCCCDLL * ((v48 - (unsigned char *)__p) >> 3) >= 0x333333333333333) {
          unint64_t v26 = 0x666666666666666;
        }
        else {
          unint64_t v26 = v25;
        }
        if (v26)
        {
          if (v26 > 0x666666666666666) {
            sub_188D718();
          }
          unint64_t v27 = (char *)operator new(40 * v26);
        }
        else
        {
          unint64_t v27 = 0;
        }
        int v28 = &v27[8 * ((v47 - (unsigned char *)__p) >> 3)];
        *(void *)int v28 = v13;
        *((void *)v28 + 1) = v41;
        *((void *)v28 + 2) = v19;
        *((void *)v28 + 3) = v20;
        *((_DWORD *)v28 + 8) = v11;
        *((_WORD *)v28 + 18) = WORD2(v11);
        v28[38] = v21;
        int v29 = &v27[40 * v24];
        if (v22 != v23)
        {
          do
          {
            long long v30 = *(_OWORD *)(v22 - 40);
            long long v31 = *(_OWORD *)(v22 - 24);
            *((void *)v29 - 1) = *((void *)v22 - 1);
            *(_OWORD *)(v29 - 24) = v31;
            *(_OWORD *)(v29 - 40) = v30;
            v29 -= 40;
            v22 -= 40;
          }
          while (v22 != v23);
          uint64_t v22 = v23;
        }
        uint64_t v9 = (int **)(v28 + 40);
        long long __p = v29;
        uint64_t v48 = &v27[40 * v26];
        if (v22) {
          operator delete(v22);
        }
      }
      uint64_t v47 = (char *)v9;
      ++v3;
    }
    while (v3 != v39);
    int v8 = (int **)__p;
  }
  double v43 = 0;
  unsigned int v44 = 0;
  uint64_t v45 = 0;
  v42[0] = (uint64_t)&v43;
  v42[1] = (uint64_t)a1;
  sub_6CC3CC(v8, v9, v42);
  if (v43 != v44)
  {
    char v32 = v43 + 1;
    uint64_t v33 = v43;
    if (v43 + 1 != v44)
    {
      double v34 = *v43;
      uint64_t v33 = v43;
      uint64_t v35 = v43 + 1;
      do
      {
        double v36 = *v35++;
        double v37 = v36;
        if (v34 < v36)
        {
          double v34 = v37;
          uint64_t v33 = v32;
        }
        char v32 = v35;
      }
      while (v35 != v44);
    }
    uint64_t v38 = (char *)v33 - (char *)v43;
    if (!v43) {
      goto LABEL_47;
    }
    goto LABEL_46;
  }
  uint64_t v38 = 0;
  if (v43)
  {
LABEL_46:
    unsigned int v44 = v43;
    operator delete(v43);
  }
LABEL_47:
  uint64_t v5 = v38 >> 3;
  if (__p)
  {
    uint64_t v47 = (char *)__p;
    operator delete(__p);
  }
  return v5;
}

void sub_6AEE68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, uint64_t a17, void *a18, uint64_t a19)
{
  if (__p)
  {
    operator delete(__p);
    uint64_t v20 = a18;
    if (!a18) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    uint64_t v20 = a18;
    if (!a18) {
      goto LABEL_3;
    }
  }
  operator delete(v20);
  _Unwind_Resume(exception_object);
}

uint64_t sub_6AEED4(uint64_t a1, int **a2, uint64_t *a3, uint64_t a4)
{
  if (!*(unsigned char *)(a1 + 694)) {
    return 0;
  }
  uint64_t v8 = sub_6DBACC(a1 + 1160, a2, a3, -1);
  if (v8 != -1 && v8 == a4) {
    return 0;
  }
  uint64_t result = sub_2E79EC(*(void *)a1, (uint64_t)a2[4], *(void *)(*a3 + 40 * a4 + 32));
  if (!result) {
    return result;
  }
  uint64_t v10 = (unsigned __int16 *)((char *)*a2 - **a2);
  if (*v10 < 0x2Fu) {
    return 0;
  }
  uint64_t v11 = v10[23];
  if (!v11) {
    return 0;
  }
  unsigned int v12 = *((unsigned __int8 *)*a2 + v11);
  BOOL v13 = v12 > 0x2B;
  uint64_t v14 = (1 << v12) & 0x80000001040;
  if (v13 || v14 == 0) {
    return 0;
  }
  uint64_t v16 = (void *)*a3;
  uint64_t v17 = (void *)a3[1];
  if ((void *)*a3 != v17)
  {
    uint64_t result = 1;
    while (1)
    {
      uint64_t v18 = (unsigned __int16 *)(*v16 - *(int *)*v16);
      if (*v18 < 0x2Fu) {
        break;
      }
      uint64_t v19 = v18[23];
      if (!v19) {
        break;
      }
      unsigned int v20 = *(unsigned __int8 *)(*v16 + v19);
      BOOL v13 = v20 > 0x2B;
      uint64_t v21 = (1 << v20) & 0x80000001040;
      if (v13 || v21 == 0) {
        break;
      }
      v16 += 5;
      if (v16 == v17) {
        return result;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_6AF02C(uint64_t a1, int **a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if ((unint64_t)sub_69B8C0(a1, a2, (int ***)a3) > 1) {
    return 1;
  }
  if (!*(unsigned char *)(a1 + 1097) || a4 != -1 && a4 != a5) {
    return 0;
  }
  uint64_t v12 = sub_5A7C34((void *)a3, a5);
  long long v13 = *(_OWORD *)v12;
  long long v14 = *(_OWORD *)(v12 + 16);
  unint64_t v48 = *(void *)(v12 + 32);
  v47[0] = v13;
  v47[1] = v14;
  uint64_t v15 = *a2;
  uint64_t v16 = (unsigned __int16 *)((char *)*a2 - **a2);
  if (*v16 < 0x2Fu || !v16[23])
  {
LABEL_13:
    unsigned int v44 = 0;
    uint64_t v45 = 0;
    uint64_t v46 = 0;
    uint64_t v18 = *(int ***)a3;
    int64_t v19 = *(void *)(a3 + 8) - *(void *)a3;
    if (v19)
    {
      if (0xCCCCCCCCCCCCCCCDLL * (v19 >> 3) >= 0x666666666666667) {
        sub_2E00();
      }
      unsigned int v20 = (int **)operator new(v19);
      uint64_t v21 = &v20[v19 >> 3];
      unsigned int v44 = v20;
      uint64_t v46 = v21;
      memcpy(v20, v18, v19);
      uint64_t v45 = v21;
    }
    else
    {
      uint64_t v21 = 0;
      unsigned int v20 = 0;
    }
    uint64_t v22 = sub_6D38F8(v20, v21, a1);
    unsigned int v23 = v44;
    if (v45 != v22) {
      uint64_t v45 = v22;
    }
    if (0xCCCCCCCCCCCCCCCDLL * (v22 - v44) < 2 || v44 == v22) {
      goto LABEL_37;
    }
    unint64_t v24 = v44;
    unint64_t v25 = v44;
    while (__PAIR64__(*((unsigned __int16 *)v25 + 18), *((_DWORD *)v25 + 8)) != __PAIR64__(WORD2(v48), v48)
         || (HIWORD(v48) & 1) == (*((unsigned char *)v25 + 38) == 0))
    {
      v25 += 5;
      v24 += 5;
      if (v25 == v22)
      {
        unint64_t v24 = v22;
        break;
      }
    }
    if (v24 == v22)
    {
LABEL_37:
      uint64_t v10 = 0;
      if (!v44) {
        return v10;
      }
      goto LABEL_60;
    }
    unint64_t v26 = (unint64_t)v44[4];
    if (v48 == v26 && WORD2(v48) == WORD2(v26) && (HIWORD(v26) & 1) != (BYTE6(v48) == 0)) {
      unsigned int v23 = (_OWORD *)sub_66F838(&v44, 1uLL);
    }
    long long v27 = *v23;
    long long v28 = v23[1];
    uint64_t v43 = *((void *)v23 + 4);
    v42[0] = v27;
    v42[1] = v28;
    int v29 = *a2;
    long long v30 = (unsigned __int16 *)((char *)*a2 - **a2);
    unsigned int v31 = *v30;
    if (*((unsigned char *)a2 + 38))
    {
      if (v31 < 0x47) {
        goto LABEL_46;
      }
      uint64_t v32 = v30[35];
      if (!v32) {
        goto LABEL_46;
      }
      int v33 = *(int *)((char *)v29 + v32);
      if ((v33 & 0x141510) != 0) {
        goto LABEL_44;
      }
      int v34 = 64;
    }
    else
    {
      if (v31 < 0x47) {
        goto LABEL_46;
      }
      uint64_t v35 = v30[35];
      if (!v35) {
        goto LABEL_46;
      }
      int v33 = *(int *)((char *)v29 + v35);
      if ((v33 & 0xA0A88) != 0)
      {
LABEL_44:
        if (sub_69BA5C((int **)v47) && !sub_69BA5C((int **)v42)) {
          goto LABEL_59;
        }
LABEL_46:
        double v36 = (unsigned __int16 *)(*(void *)&v42[0] - (int)**(_DWORD **)&v42[0]);
        unsigned int v37 = *v36;
        if (v37 >= 0xB)
        {
          if (v36[5] && (*(unsigned char *)(*(void *)&v42[0] + v36[5] + 2) & 6) != 0) {
            goto LABEL_59;
          }
          if (v37 >= 0x47)
          {
            if (v36[35] && (*(unsigned char *)(*(void *)&v42[0] + v36[35]) & 4) != 0) {
              goto LABEL_59;
            }
            goto LABEL_54;
          }
          if (v37 >= 0x2F)
          {
LABEL_54:
            uint64_t v38 = v36[23];
            if (v38)
            {
              unsigned int v39 = *(unsigned __int8 *)(*(void *)&v42[0] + v38) - 15;
              if (v39 < 0x21 && ((0x1C5C08009uLL >> v39) & 1) != 0) {
                goto LABEL_59;
              }
            }
          }
        }
        double v40 = sub_69B314(a1, a2, (int **)v47, *(double *)&v27);
        double v41 = sub_69B2B8(a1, a2, (int **)v47, (int **)v42, v40);
        if (fabs(v40) >= *(double *)(a1 + 184) && fabs(v41) <= *(double *)(a1 + 400))
        {
          uint64_t v10 = 1;
          unsigned int v23 = v44;
          if (!v44) {
            return v10;
          }
          goto LABEL_60;
        }
LABEL_59:
        uint64_t v10 = 0;
        unsigned int v23 = v44;
        if (!v44) {
          return v10;
        }
LABEL_60:
        uint64_t v45 = (int **)v23;
        operator delete(v23);
        return v10;
      }
      int v34 = 32;
    }
    if ((v34 & v33) == 0) {
      goto LABEL_46;
    }
    goto LABEL_44;
  }
  uint64_t v10 = 0;
  switch(*((unsigned char *)v15 + v16[23]))
  {
    case 6:
    case 0xC:
    case 0x2B:
      uint64_t v17 = v16[5];
      if (v17 && (*((unsigned char *)v15 + v17 + 2) & 0x20) != 0) {
        goto LABEL_13;
      }
      return 0;
    case 0x2C:
      return v10;
    default:
      goto LABEL_13;
  }
  return v10;
}

void sub_6AF464(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6AF52C(uint64_t a1, int **a2, uint64_t *a3, unint64_t a4, int a5, uint64_t a6)
{
  uint64_t v12 = (long long *)sub_5A7C34(a3, a4);
  long long v13 = (unsigned __int16 *)(*(void *)v12 - **(int **)v12);
  if (*v13 < 0x2Fu) {
    return 0;
  }
  uint64_t v14 = v13[23];
  if (!v14) {
    return 0;
  }
  unsigned int v15 = *(unsigned __int8 *)(*(void *)v12 + v14);
  BOOL v16 = v15 > 0x2A;
  uint64_t v17 = (1 << v15) & 0x50426810004;
  if (v16 || v17 == 0) {
    return 0;
  }
  int64_t v19 = v12;
  uint64_t v20 = sub_6DBACC(a1 + 1160, a2, a3, -1);
  uint64_t v21 = 0;
  if (v20 != -1 && v20 != a4)
  {
    uint64_t v114 = a6;
    unint64_t v115 = v20;
    unsigned int v117 = a2;
    uint64_t v118 = a1 + 1160;
    int v113 = a5;
    int v140 = 0;
    uint64_t v141 = 0;
    int v142 = 0;
    sub_64F484(&v140, (long long *)a2);
    sub_64F484(&v140, v19);
    long long v22 = *v19;
    long long v23 = v19[1];
    char v138 = (int *)*((void *)v19 + 4);
    uint64_t v139 = 0;
    long long v136 = v22;
    long long v137 = v23;
    long long v133 = 0;
    unint64_t v134 = 0;
    uint64_t v135 = 0;
    do
    {
      long long v28 = (unsigned __int16 *)(v136 - *(int *)v136);
      if (*v28 < 9u)
      {
        uint64_t v29 = 0;
      }
      else
      {
        uint64_t v29 = v28[4];
        if (v29) {
          uint64_t v29 = *(unsigned int *)(v136 + v29);
        }
      }
      uint64_t v30 = v139 + v29;
      uint64_t v139 = v30;
      unsigned int v31 = (unsigned __int16 *)(v136 - *(int *)v136);
      if (*v31 < 0x2Fu) {
        goto LABEL_58;
      }
      uint64_t v32 = v31[23];
      if (!v32) {
        goto LABEL_58;
      }
      unsigned int v33 = *(unsigned __int8 *)(v136 + v32);
      BOOL v16 = v33 > 0x2A;
      uint64_t v34 = (1 << v33) & 0x50426810004;
      BOOL v35 = v16 || v34 == 0;
      if (v35 || v30 > *(void *)(a1 + 456)) {
        goto LABEL_58;
      }
      sub_2E44A4(*(void *)a1, (uint64_t)&v136, &v133);
      double v36 = sub_6CDA8C(v133, v134);
      unsigned int v37 = v133;
      if (v134 != v36) {
        unint64_t v134 = v36;
      }
      if (v133 == v36)
      {
        uint64_t v21 = 0;
        goto LABEL_60;
      }
      *(void *)&long long v130 = &v136;
      if ((char *)v36 - (char *)v133 < 5121)
      {
LABEL_32:
        double v40 = 0;
        unint64_t v38 = 0;
      }
      else
      {
        unint64_t v38 = 0xCCCCCCCCCCCCCCCDLL * (v36 - v133);
        while (1)
        {
          unsigned int v39 = operator new(40 * v38, &std::nothrow);
          if (v39) {
            break;
          }
          BOOL v16 = v38 > 1;
          v38 >>= 1;
          if (!v16) {
            goto LABEL_32;
          }
        }
        double v40 = v39;
      }
      sub_6D3E1C(v37, v36, (int ***)&v130, 0xCCCCCCCCCCCCCCCDLL * (v36 - v37), (uint64_t)v40, v38);
      if (v40) {
        operator delete(v40);
      }
      double v41 = v133;
      double v42 = v133[4];
      long long v43 = *((_OWORD *)v133 + 1);
      long long v136 = *(_OWORD *)v133;
      long long v137 = v43;
      char v138 = v42;
      unsigned int v44 = v141;
      if (v141 < v142)
      {
        long long v25 = *(_OWORD *)v133;
        long long v26 = *((_OWORD *)v133 + 1);
        *((void *)v141 + 4) = v133[4];
        *unsigned int v44 = v25;
        v44[1] = v26;
        long long v27 = (char *)v44 + 40;
      }
      else
      {
        uint64_t v45 = v140;
        unint64_t v46 = 0xCCCCCCCCCCCCCCCDLL * ((v141 - v140) >> 3);
        unint64_t v47 = v46 + 1;
        if (v46 + 1 > 0x666666666666666) {
          sub_2E00();
        }
        if (0x999999999999999ALL * ((v142 - v140) >> 3) > v47) {
          unint64_t v47 = 0x999999999999999ALL * ((v142 - v140) >> 3);
        }
        if (0xCCCCCCCCCCCCCCCDLL * ((v142 - v140) >> 3) >= 0x333333333333333) {
          unint64_t v48 = 0x666666666666666;
        }
        else {
          unint64_t v48 = v47;
        }
        if (v48)
        {
          if (v48 > 0x666666666666666) {
            sub_188D718();
          }
          BOOL v49 = (char *)operator new(40 * v48);
        }
        else
        {
          BOOL v49 = 0;
        }
        unint64_t v50 = &v49[40 * v46];
        long long v51 = v137;
        *(_OWORD *)unint64_t v50 = v136;
        *((_OWORD *)v50 + 1) = v51;
        *((void *)v50 + 4) = v138;
        int v52 = v50;
        if (v44 != (_OWORD *)v45)
        {
          do
          {
            long long v53 = *(_OWORD *)((char *)v44 - 40);
            long long v54 = *(_OWORD *)((char *)v44 - 24);
            *((void *)v52 - 1) = *((void *)v44 - 1);
            *(_OWORD *)(v52 - 24) = v54;
            *(_OWORD *)(v52 - 40) = v53;
            v52 -= 40;
            unsigned int v44 = (_OWORD *)((char *)v44 - 40);
          }
          while (v44 != (_OWORD *)v45);
          unsigned int v44 = v45;
        }
        long long v27 = v50 + 40;
        int v140 = v52;
        uint64_t v141 = v50 + 40;
        int v142 = &v49[40 * v48];
        if (v44)
        {
          operator delete(v44);
          double v41 = v133;
        }
      }
      uint64_t v141 = v27;
    }
    while (0xCCCCCCCCCCCCCCCDLL * (v134 - v41) < 2);
    if (0xCCCCCCCCCCCCCCCDLL * ((v27 - v140) >> 3) < 3
      || ((double v55 = sub_69BAF0(v117, (int **)v19), v55 >= 0.0) ? (v56 = 90.0) : (v56 = -90.0),
          double v57 = sub_69BAF0(v117, (int **)v141 - 5),
          v58.i16[0] = *(_WORD *)(a1 + 464),
          vabdd_f64(v57, v56) > (double)vmovl_s16(v58).i32[0]))
    {
LABEL_58:
      uint64_t v21 = 0;
LABEL_59:
      double v36 = v133;
LABEL_60:
      if (v36)
      {
        unint64_t v134 = v36;
        operator delete(v36);
      }
      if (v140)
      {
        uint64_t v141 = v140;
        operator delete(v140);
      }
      return v21;
    }
    uint64_t v59 = sub_5A7C34(a3, v115);
    long long v60 = *(_OWORD *)v59;
    long long v61 = *(_OWORD *)(v59 + 16);
    uint64_t v132 = *(void *)(v59 + 32);
    long long v130 = v60;
    long long v131 = v61;
    LODWORD(v129) = 0;
    long long v127 = 0u;
    long long v128 = 0u;
    uint64_t v62 = sub_69CFC4(&v139, 2.0);
    uint64_t v63 = 0;
    uint64_t v64 = *(void *)(a1 + 456);
    if (v64 >= v62) {
      uint64_t v64 = v62;
    }
    uint64_t v116 = v64;
    uint64_t v65 = v130;
    BOOL v66 = (unsigned __int16 *)(v130 - *(int *)v130);
    if (*v66 < 9u) {
      goto LABEL_69;
    }
LABEL_67:
    uint64_t v67 = v66[4];
    if (v67)
    {
      uint64_t v68 = *(unsigned int *)(v65 + v67);
      goto LABEL_70;
    }
    while (1)
    {
LABEL_69:
      uint64_t v68 = 0;
LABEL_70:
      v63 += v68;
      if (v63 > v116) {
        goto LABEL_58;
      }
      sub_2E44A4(*(void *)a1, (uint64_t)&v130, &v133);
      uint64_t v70 = v133;
      unsigned int v71 = (char *)v134;
      if (v133 == v134) {
        goto LABEL_58;
      }
      int v119 = (unsigned int *)&v130;
      long long __p = *(void **)&v56;
      if ((char *)v134 - (char *)v133 < 5121)
      {
LABEL_76:
        BOOL v74 = 0;
        unint64_t v72 = 0;
      }
      else
      {
        unint64_t v72 = 0xCCCCCCCCCCCCCCCDLL * (v134 - v133);
        while (1)
        {
          int v73 = operator new(40 * v72, &std::nothrow);
          if (v73) {
            break;
          }
          BOOL v16 = v72 > 1;
          v72 >>= 1;
          if (!v16) {
            goto LABEL_76;
          }
        }
        BOOL v74 = v73;
      }
      sub_6D42D0(v70, v71, (double *)&v119, 0xCCCCCCCCCCCCCCCDLL * ((v71 - (char *)v70) >> 3), (uint64_t)v74, v72, v69);
      if (v74) {
        operator delete(v74);
      }
      unsigned int v75 = (unsigned __int16 *)(v130 - *(int *)v130);
      unsigned int v76 = *v75;
      if (BYTE6(v132))
      {
        if (v76 >= 0x49)
        {
          unsigned int v77 = v75[36];
          if (v77) {
            goto LABEL_86;
          }
        }
      }
      else if (v76 >= 0x4B)
      {
        unsigned int v77 = v75[37];
        if (v77)
        {
LABEL_86:
          __int16 v78 = *(_WORD *)(v130 + v77);
          goto LABEL_88;
        }
      }
      __int16 v78 = -1;
LABEL_88:
      int v79 = *v133;
      long long v80 = (unsigned __int16 *)((char *)v79 - *v79);
      unsigned int v81 = *v80;
      if (*((unsigned char *)v133 + 38))
      {
        if (v81 >= 0x4B)
        {
          unsigned int v82 = v80[37];
          if (v82) {
            goto LABEL_94;
          }
        }
      }
      else if (v81 >= 0x49)
      {
        unsigned int v82 = v80[36];
        if (v82)
        {
LABEL_94:
          int v83 = *(unsigned __int16 *)((char *)v79 + v82);
          goto LABEL_96;
        }
      }
      int v83 = 0xFFFF;
LABEL_96:
      unsigned __int16 v84 = v78 + 18000;
      unsigned __int16 v85 = v78 - 18000;
      if ((unsigned __int16)(v84 >> 5) < 0x465u) {
        unsigned __int16 v85 = v84;
      }
      int v86 = v83 - v85;
      if (v86 > 18000) {
        v86 -= 36000;
      }
      if (v86 < -17999) {
        v86 += 36000;
      }
      int16x4_t v87 = (int16x4_t)0x4059000000000000;
      v87.i16[0] = *(_WORD *)(a1 + 464);
      if (vabdd_f64((double)v86 / 100.0, v56) < (double)vmovl_s16(v87).i32[0])
      {
        int v119 = (unsigned int *)sub_2E4738((int **)&v130);
        if ((sub_3CCE68(a1 + 8, &v119) & 1) == 0)
        {
          unsigned int v92 = v133[4];
          long long v93 = *((_OWORD *)v133 + 1);
          long long v127 = *(_OWORD *)v133;
          long long v128 = v93;
          int v129 = v92;
          long long v95 = *(_OWORD *)v133;
          long long v94 = *((_OWORD *)v133 + 1);
          char v138 = v133[4];
          long long v136 = v95;
          long long v137 = v94;
          unsigned int v96 = v141;
          uint64_t v124 = 0;
          char v125 = 0;
          uint64_t v126 = 0;
          if (v116 < 1)
          {
LABEL_118:
            sub_693CB0(v114);
            goto LABEL_58;
          }
          uint64_t v97 = 0;
          while (1)
          {
            unint64_t v98 = *((void *)v96 - 1);
            if (((unint64_t)v138 & 0xFFFFFFFFFFFFLL) == (v98 & 0xFFFFFFFFFFFFLL)
              && (((unint64_t)v138 & 0xFF000000000000) == 0) != (HIWORD(v98) & 1))
            {
              break;
            }
            sub_2E44A4(*(void *)a1, (uint64_t)&v136, &v133);
            unint64_t v99 = sub_6DBACC(v118, (int **)&v136, (uint64_t *)&v133, -1);
            if (v99 == -1) {
              goto LABEL_58;
            }
            double v100 = (unsigned __int16 *)(v136 - *(int *)v136);
            if (*v100 >= 9u && (uint64_t v101 = v100[4]) != 0) {
              uint64_t v102 = *(unsigned int *)(v136 + v101);
            }
            else {
              uint64_t v102 = 0;
            }
            uint64_t v103 = sub_66F838(&v133, v99);
            v97 += v102;
            long long v104 = *(_OWORD *)v103;
            long long v105 = *(_OWORD *)(v103 + 16);
            char v138 = *(int **)(v103 + 32);
            long long v136 = v104;
            long long v137 = v105;
            if (v97 >= v116) {
              goto LABEL_118;
            }
          }
          sub_693CB0(v114);
          sub_69D028(v114, 0xCCCCCCCCCCCCCCCDLL * ((v141 - v140) >> 3));
          BOOL v106 = v140;
          for (unint64_t i = v141; v106 != i; v106 += 40)
          {
            int v119 = (unsigned int *)*((void *)v106 + 4);
            sub_2D5B74((char **)v114, &v119);
          }
          if (v55 < 0.0) {
            int v108 = 1;
          }
          else {
            int v108 = 2;
          }
          *(_DWORD *)(v114 + 24) = v108;
          sub_2954EC(*(void *)a1, v132, (uint64_t)&v119);
          unint64_t v122 = sub_2E40A4((uint64_t)&v119);
          int v123 = v109;
          if (__p)
          {
            uint64_t v121 = __p;
            operator delete(__p);
          }
          uint64_t v110 = sub_6B0C74((uint64_t *)a1, &v140, (unsigned int *)&v122);
          *(void *)(v114 + 152) = v110;
          *(void *)(v114 + 160) = v111;
          BOOL v112 = v110 == -1 || v111 == 0x7FFFFFFFFFFFFFFFLL;
          uint64_t v21 = !v112;
          if (v112)
          {
            sub_693CB0(v114);
          }
          else if (v113)
          {
            sub_6A51D8(a1, &v130, (char **)&v124, 0);
            sub_69D578(a1 + 64, (long long *)v117, &v130, (uint64_t)&v127, (char **)&v124);
            if (v124)
            {
              char v125 = v124;
              operator delete(v124);
            }
            uint64_t v21 = 1;
          }
          goto LABEL_59;
        }
      }
      unint64_t v88 = sub_6DBACC(v118, (int **)&v130, (uint64_t *)&v133, -1);
      if (v88 == -1 || (sub_6D8104(v118, (int **)&v130, (uint64_t *)&v133, v88) & 1) != 0) {
        goto LABEL_58;
      }
      uint64_t v89 = sub_66F838(&v133, v88);
      long long v90 = *(_OWORD *)v89;
      long long v91 = *(_OWORD *)(v89 + 16);
      uint64_t v132 = *(void *)(v89 + 32);
      long long v130 = v90;
      long long v131 = v91;
      uint64_t v65 = v90;
      BOOL v66 = (unsigned __int16 *)(v90 - *(int *)v90);
      if (*v66 >= 9u) {
        goto LABEL_67;
      }
    }
  }
  return v21;
}

void sub_6AFEC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  if (__p) {
    operator delete(__p);
  }
  long long v25 = *(void **)(v23 - 200);
  if (v25)
  {
    *(void *)(v23 - 192) = v25;
    operator delete(v25);
    long long v26 = *(void **)(v23 - 128);
    if (!v26) {
LABEL_5:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    long long v26 = *(void **)(v23 - 128);
    if (!v26) {
      goto LABEL_5;
    }
  }
  *(void *)(v23 - 120) = v26;
  operator delete(v26);
  _Unwind_Resume(exception_object);
}

uint64_t sub_6AFFA4(uint64_t a1, void *a2, unint64_t a3, int **a4)
{
  uint64_t v7 = 0;
  double v36 = 0;
  unsigned int v37 = 0;
  uint64_t v38 = 0;
  long long __p = 0;
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  uint64_t v8 = (unsigned __int16 *)((char *)*a4 - **a4);
  if (*v8 >= 9u)
  {
    uint64_t v9 = v8[4];
    if (v9) {
      uint64_t v7 = *(unsigned int *)((char *)*a4 + v9);
    }
    else {
      uint64_t v7 = 0;
    }
  }
  long long v10 = *((_OWORD *)a4 + 1);
  long long v30 = *(_OWORD *)a4;
  long long v31 = v10;
  uint64_t v32 = a4[4];
  if (v7 >= *(void *)(a1 + 440))
  {
    BOOL v16 = 0;
    unsigned int v15 = 0;
  }
  else
  {
    while (1)
    {
      sub_2E44A4(*(void *)a1, (uint64_t)&v30, &v36);
      sub_6DBA6C(a1 + 1160, (uint64_t)&v30, (uint64_t *)&v36);
      if (v36 == v37 || fabs(sub_6D82EC(a1 + 1160, (int **)&v30, (int **)v36)) > *(double *)(a1 + 200)) {
        break;
      }
      uint64_t v11 = (int *)*((void *)v36 + 4);
      long long v12 = *((_OWORD *)v36 + 1);
      long long v30 = *(_OWORD *)v36;
      long long v31 = v12;
      uint64_t v32 = v11;
      uint64_t v29 = v11;
      sub_2D5B74((char **)&__p, &v29);
      long long v13 = (unsigned __int16 *)(v30 - *(int *)v30);
      if (*v13 >= 9u && (uint64_t v14 = v13[4]) != 0)
      {
        v7 += *(unsigned int *)(v30 + v14);
        if (v7 >= *(void *)(a1 + 440)) {
          break;
        }
      }
      else if (v7 >= *(void *)(a1 + 440))
      {
        break;
      }
    }
    unsigned int v15 = (int *)__p;
    BOOL v16 = v34;
  }
  unint64_t v17 = 126 - 2 * __clz(((char *)v16 - (char *)v15) >> 3);
  if (v16 == v15) {
    uint64_t v18 = 0;
  }
  else {
    uint64_t v18 = v17;
  }
  sub_303770((uint64_t)v15, v16, (uint64_t)&v29, v18, 1);
  sub_30361C((uint64_t)&__p);
  for (uint64_t i = sub_46CCC8(a2, a3, v19); i < *(void *)(a1 + 440); i += sub_46CCC8(a2, a3, v23))
  {
    if (a3 >= sub_46C760(a2) - 1) {
      break;
    }
    uint64_t v21 = (int **)sub_46C8EC(a2, a3++);
    uint64_t v22 = sub_46C8EC(a2, a3);
    double v23 = fabs(sub_6D82EC(a1 + 1160, v21, (int **)v22));
    if (v23 > *(double *)(a1 + 200)) {
      break;
    }
    unint64_t v24 = (int *)__p;
    if (__p != v34)
    {
      unint64_t v25 = *(void *)(v22 + 32);
      while (__PAIR64__(*((unsigned __int16 *)v24 + 2), *v24) != __PAIR64__(WORD2(v25), v25)
           || (HIWORD(v25) & 1) == (*((unsigned char *)v24 + 6) == 0))
      {
        v24 += 2;
        if (v24 == v34)
        {
          unint64_t v24 = v34;
          break;
        }
      }
    }
    if (v24 != v34)
    {
      uint64_t v26 = 1;
      long long v27 = (int *)__p;
      if (__p) {
        goto LABEL_31;
      }
      goto LABEL_32;
    }
  }
  uint64_t v26 = 0;
  long long v27 = (int *)__p;
  if (__p)
  {
LABEL_31:
    uint64_t v34 = v27;
    operator delete(v27);
  }
LABEL_32:
  if (v36)
  {
    unsigned int v37 = v36;
    operator delete(v36);
  }
  return v26;
}

void sub_6B0274(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, void *a20,uint64_t a21)
{
  if (__p)
  {
    operator delete(__p);
    uint64_t v22 = a20;
    if (!a20) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    uint64_t v22 = a20;
    if (!a20) {
      goto LABEL_3;
    }
  }
  operator delete(v22);
  _Unwind_Resume(exception_object);
}

uint64_t sub_6B02CC(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_5A7C34(a3, a4);
  LODWORD(v129) = 0;
  long long v127 = 0u;
  long long v128 = 0u;
  WORD2(v129) = -1;
  BYTE6(v129) = 0;
  LODWORD(v126) = 0;
  long long v124 = 0u;
  long long v125 = 0u;
  WORD2(v126) = -1;
  BYTE6(v126) = 0;
  LODWORD(v123) = 0;
  long long v121 = 0u;
  long long v122 = 0u;
  WORD2(v123) = -1;
  BYTE6(v123) = 0;
  LODWORD(v120) = 0;
  long long v118 = 0u;
  long long v119 = 0u;
  WORD2(v120) = -1;
  BYTE6(v120) = 0;
  LODWORD(v117) = 0;
  long long v115 = 0u;
  long long v116 = 0u;
  WORD2(v117) = -1;
  BYTE6(v117) = 0;
  BOOL v112 = 0;
  *(void *)int v113 = 0;
  uint64_t v114 = 0;
  sub_64F484((char **)&v112, (long long *)a2);
  *(_DWORD *)(a5 + 64) = 0;
  int v109 = 0;
  uint64_t v110 = 0;
  uint64_t v111 = 0;
  BOOL v106 = 0;
  uint64_t v107 = 0;
  uint64_t v108 = 0;
  long long __p = 0;
  long long v104 = 0;
  uint64_t v105 = 0;
  sub_6B1108(a1, (int **)a2, (uint64_t)&v109);
  if (v109 == v110)
  {
    if (0xCCCCCCCCCCCCCCCDLL * ((a3[1] - *a3) >> 3) >= 2 && sub_6DBACC(a1 + 1160, (int **)a2, a3, -1) != a4)
    {
      sub_6B148C((uint64_t *)a1, v10, (void *)(a1 + 472), (uint64_t)&__p);
      uint64_t v18 = (char *)__p;
      if (__p == v104) {
        goto LABEL_31;
      }
      char v34 = *(v104 - 1);
      char v35 = *(v104 - 2) ^ 1;
      long long v36 = *(_OWORD *)(v104 - 40);
      long long v37 = *(_OWORD *)(v104 - 24);
      int v38 = *((_DWORD *)v104 - 2);
      WORD2(v117) = *((_WORD *)v104 - 2);
      LODWORD(v117) = v38;
      long long v115 = v36;
      long long v116 = v37;
      BYTE6(v117) = v35;
      HIBYTE(v117) = v34;
      sub_6B1108(a1, (int **)&v115, (uint64_t)&v109);
      if (v109 != v110)
      {
        long long v39 = *(_OWORD *)v109;
        long long v40 = *((_OWORD *)v109 + 1);
        uint64_t v129 = *((void *)v109 + 4);
        long long v127 = v39;
        long long v128 = v40;
        long long v41 = *(_OWORD *)(v110 - 5);
        long long v42 = *(_OWORD *)(v110 - 3);
        uint64_t v126 = *(v110 - 1);
        long long v124 = v41;
        long long v125 = v42;
        sub_6B148C((uint64_t *)a1, (uint64_t)&v127, (void *)(a1 + 480), (uint64_t)&v106);
        if (v106 != v107)
        {
          long long v43 = *(_OWORD *)(a2 + 16);
          long long v121 = *(_OWORD *)a2;
          long long v122 = v43;
          uint64_t v123 = *(void *)(a2 + 32);
          long long v44 = *(_OWORD *)(v107 - 24);
          long long v45 = *(_OWORD *)(v107 - 40);
          uint64_t v120 = *((void *)v107 - 1);
          long long v118 = v45;
          long long v119 = v44;
          sub_473C00((uint64_t)&v112, *(uint64_t *)v113, (char *)__p, v104, 0xCCCCCCCCCCCCCCCDLL * ((v104 - (unsigned char *)__p) >> 3));
          int v24 = 2;
          goto LABEL_5;
        }
      }
    }
LABEL_17:
    uint64_t v31 = 0;
    goto LABEL_18;
  }
  long long v11 = *(_OWORD *)(a2 + 16);
  long long v115 = *(_OWORD *)a2;
  long long v116 = v11;
  unint64_t v117 = *(void *)(a2 + 32);
  long long v13 = *(_OWORD *)v109;
  long long v12 = *((_OWORD *)v109 + 1);
  uint64_t v129 = *((void *)v109 + 4);
  long long v127 = v13;
  long long v128 = v12;
  long long v14 = *(_OWORD *)(v110 - 3);
  long long v15 = *(_OWORD *)(v110 - 5);
  uint64_t v126 = *(v110 - 1);
  long long v124 = v15;
  long long v125 = v14;
  sub_6B148C((uint64_t *)a1, (uint64_t)&v127, (void *)(a1 + 472), (uint64_t)&v106);
  if (v106 == v107) {
    goto LABEL_17;
  }
  long long v16 = *(_OWORD *)(v107 - 40);
  long long v17 = *(_OWORD *)(v107 - 24);
  uint64_t v120 = *((void *)v107 - 1);
  long long v118 = v16;
  long long v119 = v17;
  sub_6B148C((uint64_t *)a1, (uint64_t)&v124, (void *)(a1 + 480), (uint64_t)&__p);
  uint64_t v18 = (char *)__p;
  if (__p != v104)
  {
    char v19 = *(v104 - 1);
    char v20 = *(v104 - 2) ^ 1;
    long long v21 = *(_OWORD *)(v104 - 40);
    long long v22 = *(_OWORD *)(v104 - 24);
    int v23 = *((_DWORD *)v104 - 2);
    WORD2(v123) = *((_WORD *)v104 - 2);
    LODWORD(v123) = v23;
    long long v121 = v21;
    long long v122 = v22;
    BYTE6(v123) = v20;
    HIBYTE(v123) = v19;
    sub_473C00((uint64_t)&v112, *(uint64_t *)v113, (char *)v106, v107, 0xCCCCCCCCCCCCCCCDLL * ((v107 - (unsigned char *)v106) >> 3));
    int v24 = 1;
LABEL_5:
    *(_DWORD *)(a1 + 176) = v24;
    unint64_t v25 = (unsigned __int16 *)(v121 - *(int *)v121);
    if (*v25 >= 0x2Fu && (uint64_t v26 = v25[23]) != 0 && !*(unsigned char *)(v121 + v26)
      || (long long v27 = (unsigned __int16 *)(v118 - *(int *)v118), *v27 >= 0x2Fu)
      && (uint64_t v28 = v27[23]) != 0
      && !*(unsigned char *)(v118 + v28)
      || (double v29 = sub_6D82EC(a1 + 1160, (int **)v112, (int **)(*(void *)v113 - 40)),
          double v30 = fabs(v29),
          v30 < *(double *)(a1 + 288))
      || v30 > *(double *)(a1 + 304))
    {
      uint64_t v31 = 0;
      *(void *)(a5 + 8) = *(void *)a5;
      *(void *)(a5 + 48) = *(void *)(a5 + 40);
      *(void *)&long long v32 = -1;
      *((void *)&v32 + 1) = -1;
      *(_OWORD *)(a5 + 72) = v32;
      *(_OWORD *)(a5 + 88) = v32;
      *(_OWORD *)(a5 + 104) = v32;
      *(void *)(a5 + 120) = -1;
      *(void *)(a5 + 136) = -1;
      *(_DWORD *)(a5 + 24) = 0;
      *(_DWORD *)(a5 + 64) = 0;
      *(_DWORD *)(a5 + 128) = 0;
      *(_DWORD *)(a5 + 144) = 0;
      *(_OWORD *)(a5 + 152) = xmmword_20E2060;
      *(_WORD *)(a5 + 168) = 0;
      *(unsigned char *)(a5 + 170) = 0;
      *(void *)(a5 + 176) = 0;
      *(unsigned char *)(a5 + 188) = 0;
      *(unsigned char *)(a5 + 190) = 0;
      uint64_t v18 = (char *)__p;
      if (!__p) {
        goto LABEL_20;
      }
LABEL_19:
      long long v104 = v18;
      operator delete(v18);
      goto LABEL_20;
    }
    if (v29 <= 0.0) {
      int v46 = 1;
    }
    else {
      int v46 = 2;
    }
    double v100 = 0;
    uint64_t v101 = 0;
    uint64_t v102 = 0;
    sub_6B17DC((uint64_t *)a1, &v121, (uint64_t)&v118, (uint64_t *)(a1 + 488), &v100);
    unint64_t v47 = v100;
    int16x4_t v87 = v101;
    if (v100 == v101)
    {
      sub_693CB0(a5);
      uint64_t v31 = 0;
      goto LABEL_91;
    }
    uint64_t v86 = a2;
    unint64_t v88 = (const void **)(a1 + 40);
    *(void *)(a1 + 48) = *(void *)(a1 + 40);
    while (1)
    {
      sub_2954EC(*(void *)a1, v47[4], (uint64_t)&v96);
      uint64_t v48 = *(void *)(a1 + 48);
      sub_2E51EC((uint64_t)&v96, (uint64_t)&v92);
      if (v99)
      {
        if (v97 == v98) {
          goto LABEL_44;
        }
        uint64_t v49 = v96;
        long long v90 = 0u;
        long long v91 = 0u;
        char v50 = 1;
        int v51 = -1;
        LODWORD(v52) = -1;
      }
      else
      {
        if (v97 == v98)
        {
LABEL_44:
          int v51 = 0;
          char v50 = 0;
          LODWORD(v52) = 0;
          uint64_t v49 = 0;
          long long v90 = 0u;
          long long v91 = 0u;
          memset(v89, 0, 7);
          goto LABEL_45;
        }
        unint64_t v53 = *((void *)v98 - 1);
        long long v54 = sub_2964C4(v96, v53, 1);
        char v50 = 0;
        double v55 = &v54[*(unsigned __int16 *)&v54[-*(int *)v54 + 4]];
        uint64_t v56 = (uint64_t)&v55[4 * HIDWORD(v53) + *(unsigned int *)v55];
        double v57 = (int *)(v56 + 4 + *(unsigned int *)(v56 + 4));
        uint64_t v49 = v96;
        int16x4_t v58 = (unsigned int *)((char *)v57 + *(unsigned __int16 *)((char *)v57 - *v57 + 6));
        int v51 = *(unsigned int *)((char *)v58 + *v58);
        unint64_t v52 = (unint64_t)(v98 - (unsigned char *)v97) >> 3;
        long long v90 = 0u;
        long long v91 = 0u;
      }
LABEL_45:
      v138[0] = v92;
      v138[1] = v93;
      v138[2] = v94;
      v138[3] = v95;
      long long v131 = v90;
      long long v132 = v91;
      long long v139 = v92;
      long long v140 = v93;
      uint64_t v130 = v49;
      uint64_t v133 = 0;
      int v134 = v52;
      int v135 = v51;
      char v136 = v50;
      *(_DWORD *)&v137[3] = *(_DWORD *)((char *)v89 + 3);
      *(_DWORD *)long long v137 = v89[0];
      long long v141 = v94;
      long long v142 = v95;
      if ((void)v95 == __PAIR64__(v51, v52))
      {
        uint64_t v59 = 0;
      }
      else
      {
        uint64_t v59 = 0;
        do
        {
          if (BYTE8(v142)) {
            sub_2E7608((uint64_t)&v139);
          }
          else {
            sub_2E74E8((uint64_t)&v139);
          }
          ++v59;
        }
        while (v142 != v52 || DWORD1(v142) != v51);
      }
      sub_6CFD9C(v88, v48, v138, (long long *)&v130, v59);
      if (v97)
      {
        unint64_t v98 = (char *)v97;
        operator delete(v97);
      }
      v47 += 5;
      if (v47 == v87)
      {
        *(void *)&v138[0] = sub_69A4A4(*(void *)a1, (uint64_t)&v115);
        DWORD2(v138[0]) = v61;
        sub_3B8BC4((unsigned int **)v88, (unsigned int *)v138, 0, 0, (uint64_t)&v139, v62, v63, v64, v65);
        uint64_t v66 = v86;
        uint64_t v130 = *((void *)&v139 + 1);
        LODWORD(v131) = v140;
        *(_DWORD *)(a5 + 24) = v46;
        uint64_t v67 = v112;
        uint64_t v68 = *(void *)v113;
        if (v112 != *(void **)v113)
        {
          __n128 v69 = *(_DWORD **)(a5 + 8);
          do
          {
            uint64_t v71 = v67[4];
            unint64_t v72 = *(void *)(a5 + 16);
            if ((unint64_t)v69 < v72)
            {
              *(void *)__n128 v69 = v71;
              uint64_t v70 = v69 + 2;
            }
            else
            {
              int v73 = *(_DWORD **)a5;
              uint64_t v74 = ((uint64_t)v69 - *(void *)a5) >> 3;
              unint64_t v75 = v74 + 1;
              if ((unint64_t)(v74 + 1) >> 61) {
                sub_2E00();
              }
              uint64_t v76 = v72 - (void)v73;
              if (v76 >> 2 > v75) {
                unint64_t v75 = v76 >> 2;
              }
              if ((unint64_t)v76 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v77 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v77 = v75;
              }
              if (v77)
              {
                if (v77 >> 61) {
                  sub_188D718();
                }
                __int16 v78 = (char *)operator new(8 * v77);
                uint64_t v79 = (uint64_t)&v78[8 * v74];
                *(void *)uint64_t v79 = v71;
                uint64_t v70 = (void *)(v79 + 8);
                if (v69 != v73)
                {
                  do
                  {
LABEL_73:
                    int v81 = *(v69 - 2);
                    v69 -= 2;
                    int v82 = *(_DWORD *)((char *)v69 + 3);
                    *(_DWORD *)(v79 - 8) = v81;
                    v79 -= 8;
                    *(_DWORD *)(v79 + 3) = v82;
                  }
                  while (v69 != v73);
                  __n128 v69 = *(_DWORD **)a5;
                  *(void *)a5 = v79;
                  *(void *)(a5 + 8) = v70;
                  *(void *)(a5 + 16) = &v78[8 * v77];
                  uint64_t v66 = v86;
                  if (!v69) {
                    goto LABEL_60;
                  }
LABEL_77:
                  operator delete(v69);
                  goto LABEL_60;
                }
              }
              else
              {
                __int16 v78 = 0;
                uint64_t v79 = 8 * v74;
                long long v80 = (void *)(8 * v74);
                *long long v80 = v71;
                uint64_t v70 = v80 + 1;
                if (v69 != v73) {
                  goto LABEL_73;
                }
              }
              *(void *)a5 = v79;
              *(void *)(a5 + 8) = v70;
              *(void *)(a5 + 16) = &v78[8 * v77];
              uint64_t v66 = v86;
              if (v69) {
                goto LABEL_77;
              }
            }
LABEL_60:
            *(void *)(a5 + 8) = v70;
            v67 += 5;
            __n128 v69 = v70;
          }
          while (v67 != (void *)v68);
        }
        uint64_t v83 = sub_6B0C74((uint64_t *)a1, &v112, (unsigned int *)&v130);
        BOOL v85 = v83 == -1 || v84 == 0x7FFFFFFFFFFFFFFFLL;
        uint64_t v31 = !v85;
        if (v85)
        {
          sub_693CB0(a5);
        }
        else
        {
          if (__PAIR64__(*(unsigned __int16 *)(v66 + 36), *(_DWORD *)(v66 + 32)) == __PAIR64__(WORD2(v117), v117)
            && (HIWORD(v117) & 1) != (*(unsigned char *)(v66 + 38) == 0))
          {
            *(void *)(a5 + 152) = v83;
            *(void *)(a5 + 160) = v84;
          }
          *(void *)(a5 + 176) = 0;
        }
LABEL_91:
        if (v100)
        {
          uint64_t v101 = v100;
          operator delete(v100);
          uint64_t v18 = (char *)__p;
          if (__p) {
            goto LABEL_19;
          }
          goto LABEL_20;
        }
LABEL_18:
        uint64_t v18 = (char *)__p;
        if (!__p) {
          goto LABEL_20;
        }
        goto LABEL_19;
      }
    }
  }
LABEL_31:
  uint64_t v31 = 0;
  if (v18) {
    goto LABEL_19;
  }
LABEL_20:
  if (v106)
  {
    uint64_t v107 = (char *)v106;
    operator delete(v106);
  }
  if (v109)
  {
    uint64_t v110 = v109;
    operator delete(v109);
  }
  if (v112)
  {
    *(void *)int v113 = v112;
    operator delete(v112);
  }
  return v31;
}

void sub_6B0B7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,uint64_t a36,void *__p,uint64_t a38,uint64_t a39,void *a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,uint64_t a45,void *a46,uint64_t a47)
{
  if (__p)
  {
    operator delete(__p);
    uint64_t v48 = a40;
    if (!a40)
    {
LABEL_3:
      uint64_t v49 = a43;
      if (!a43) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v48 = a40;
    if (!a40) {
      goto LABEL_3;
    }
  }
  operator delete(v48);
  uint64_t v49 = a43;
  if (!a43)
  {
LABEL_4:
    char v50 = a46;
    if (!a46) {
      goto LABEL_5;
    }
    goto LABEL_9;
  }
LABEL_8:
  operator delete(v49);
  char v50 = a46;
  if (!a46) {
LABEL_5:
  }
    _Unwind_Resume(exception_object);
LABEL_9:
  operator delete(v50);
  _Unwind_Resume(exception_object);
}

uint64_t sub_6B0C74(uint64_t *a1, void *a2, unsigned int *a3)
{
  unint64_t v4 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a2[1] - *a2) >> 3) - 1;
  if (v4 <= 1) {
    unint64_t v5 = 1;
  }
  else {
    unint64_t v5 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a2[1] - *a2) >> 3) - 1;
  }
  if (v4 >= 2)
  {
    uint64_t v6 = 0;
    uint64_t v7 = -1;
    unint64_t v14 = 1;
    double v8 = 1.79769313e308;
    while (1)
    {
      uint64_t v42 = -1;
      int v43 = 0x7FFFFFFF;
      uint64_t v17 = sub_5A7C34(a2, v14);
      sub_2954EC(*a1, *(void *)(v17 + 32), (uint64_t)&v36);
      sub_2E4B5C((uint64_t)&v36, &__p);
      if (v37)
      {
        int v38 = (uint64_t *)v37;
        operator delete(v37);
      }
      sub_3B8BC4((unsigned int **)&__p, a3, 0, 0, (uint64_t)&v36, v18, v19, v20, v21);
      *(double *)&unint64_t v25 = v36;
      uint64_t v42 = (uint64_t)v37;
      int v43 = (int)v38;
      if (v36 < v8)
      {
        uint64_t v46 = 0x7FEFFFFFFFFFFFFFLL;
        double v26 = NAN;
        uint64_t v44 = -1;
        int v45 = 0x7FFFFFFF;
        double v36 = COERCE_DOUBLE(&v42);
        long long v37 = &v46;
        int v38 = &v44;
        long long v27 = __p;
        uint64_t v28 = v41;
        if (__p != v41 && (char *)__p + 12 != v41)
        {
          do
          {
            sub_457FB8((uint64_t)&v36, v27, v27 + 3, v26, v22, v23, v24);
            double v29 = v27 + 6;
            v27 += 3;
          }
          while (v29 != v28);
          long long v27 = __p;
          uint64_t v28 = v41;
        }
        uint64_t v48 = 0;
        uint64_t v49 = 0;
        uint64_t v47 = 0x7FEFFFFFFFFFFFFFLL;
        double v36 = COERCE_DOUBLE(&v44);
        long long v37 = &v47;
        int v38 = &v48;
        long long v39 = &v49;
        if (v27 != v28 && v27 + 3 != v28)
        {
          do
          {
            double v26 = sub_4582C8((double **)&v36, (uint64_t)v27, v27 + 3, v26);
            double v30 = v27 + 6;
            v27 += 3;
          }
          while (v30 != v28);
        }
        sub_5A7C34(a2, v14);
        uint64_t v7 = v14;
        double v8 = *(double *)&v25;
      }
      uint64_t v31 = (void *)sub_5A7C34(a2, v14);
      long long v32 = (unsigned __int16 *)(*v31 - *(int *)*v31);
      if (*v32 >= 9u)
      {
        uint64_t v33 = v32[4];
        if (v33) {
          break;
        }
      }
      uint64_t v15 = 0;
      long long v16 = (char *)__p;
      if (__p) {
        goto LABEL_13;
      }
LABEL_14:
      v6 += v15;
      if (++v14 == v5) {
        goto LABEL_6;
      }
    }
    uint64_t v15 = *(unsigned int *)(*v31 + v33);
    long long v16 = (char *)__p;
    if (!__p) {
      goto LABEL_14;
    }
LABEL_13:
    long long v41 = v16;
    operator delete(v16);
    goto LABEL_14;
  }
  uint64_t v6 = 0;
  uint64_t v7 = -1;
  double v8 = 1.79769313e308;
LABEL_6:
  double v9 = v8 * 100.0;
  if (v8 * 100.0 >= 0.0)
  {
    double v10 = v8 * 100.0;
    if (v9 >= 4.50359963e15) {
      goto LABEL_33;
    }
    uint64_t v11 = (uint64_t)(v9 + v9) + 1;
  }
  else
  {
    double v10 = v8 * 100.0;
    if (v9 <= -4.50359963e15) {
      goto LABEL_33;
    }
    uint64_t v11 = (uint64_t)(v9 + v9);
    if (v11 >= 1) {
      --v11;
    }
  }
  double v10 = (double)(v11 >> 1);
LABEL_33:
  if (v10 < 9.22337204e18)
  {
    if (v9 >= 0.0)
    {
      if (v9 >= 4.50359963e15) {
        goto LABEL_45;
      }
      uint64_t v34 = (uint64_t)(v9 + v9) + 1;
    }
    else
    {
      if (v9 <= -4.50359963e15) {
        goto LABEL_45;
      }
      uint64_t v34 = (uint64_t)(v9 + v9);
      if (v34 >= 1) {
        --v34;
      }
    }
    double v9 = (double)(v34 >> 1);
LABEL_45:
    if ((uint64_t)v9 <= a1[63]) {
      return v7;
    }
    goto LABEL_46;
  }
  if (a1[63] == 0x7FFFFFFFFFFFFFFFLL || a1[63] == 0x7FFFFFFFFFFFFFFELL) {
    return v7;
  }
LABEL_46:
  if (v6 > a1[64]) {
    return -1;
  }
  return v7;
}

void sub_6B10C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_6B1108(uint64_t a1, int **a2, uint64_t a3)
{
  *(void *)(a3 + 8) = *(void *)a3;
  uint64_t v6 = (unsigned __int16 *)((char *)*a2 - **a2);
  if (*v6 < 0xBu || (uint64_t v7 = v6[5]) == 0 || (*((unsigned char *)*a2 + v7) & 4) == 0)
  {
    long long __p = 0;
    long long v39 = 0;
    uint64_t v40 = 0;
    sub_2E44A4(*(void *)a1, (uint64_t)a2, &__p);
    double v8 = sub_6CDA8C((int **)__p, v39);
    double v9 = (long long *)__p;
    if (v39 != v8) {
      long long v39 = v8;
    }
    if ((char *)v8 - (unsigned char *)__p != 80) {
      goto LABEL_66;
    }
    uint64_t v10 = *(void *)__p;
    uint64_t v11 = (unsigned __int16 *)(*(void *)__p - **(int **)__p);
    unsigned int v12 = *v11;
    if (v12 < 0xB) {
      goto LABEL_66;
    }
    if (!v11[5]) {
      goto LABEL_66;
    }
    if ((*(_DWORD *)(v10 + v11[5]) & 1) == (*(_DWORD *)(v10 + v11[5]) & 2u) >> 1) {
      goto LABEL_66;
    }
    long long v13 = (long long *)(v8 - 5);
    unint64_t v14 = *(v8 - 5);
    uint64_t v15 = (unsigned __int16 *)((char *)v14 - *v14);
    unsigned int v16 = *v15;
    if (v16 < 0xB) {
      goto LABEL_66;
    }
    if (!v15[5]) {
      goto LABEL_66;
    }
    int v17 = *(int *)((char *)v14 + v15[5]);
    if (((v17 ^ ((v17 & 2) >> 1)) & 1) == 0) {
      goto LABEL_66;
    }
    unint64_t v18 = (char *)*a2;
    double v19 = (unsigned __int16 *)((char *)*a2 - **a2);
    unsigned int v20 = *v19;
    if (*((unsigned char *)a2 + 38))
    {
      if (v20 < 0x49 || (unsigned int v21 = v19[36]) == 0)
      {
LABEL_20:
        __int16 v22 = -1;
LABEL_21:
        if (*((unsigned char *)__p + 38))
        {
          if (v12 < 0x4B || (unsigned int v23 = v11[37]) == 0)
          {
LABEL_28:
            int v24 = 0xFFFF;
LABEL_29:
            unsigned __int16 v25 = v22 + 18000;
            unsigned __int16 v26 = v22 - 18000;
            if ((unsigned __int16)(v25 >> 5) >= 0x465u) {
              unsigned __int16 v25 = v26;
            }
            int v27 = v24 - v25;
            if (v27 > 18000) {
              v27 -= 36000;
            }
            if (v27 < -17999) {
              v27 += 36000;
            }
            double v28 = (double)v27 / 100.0;
            double v29 = fabs(v28);
            LOWORD(v28) = *(_WORD *)(a1 + 496);
            double v30 = (double)vmovl_s16(*(int16x4_t *)&v28).i32[0];
            if (v29 > v30) {
              goto LABEL_66;
            }
            if (*((unsigned char *)a2 + 38))
            {
              if (v20 < 0x49 || (unsigned int v31 = v19[36]) == 0)
              {
LABEL_43:
                __int16 v32 = -1;
LABEL_44:
                if (*((unsigned char *)v8 - 2))
                {
                  if (v16 < 0x4B || (unsigned int v33 = v15[37]) == 0)
                  {
LABEL_51:
                    int v34 = 0xFFFF;
LABEL_52:
                    unsigned __int16 v35 = v32 + 18000;
                    unsigned __int16 v36 = v32 - 18000;
                    if ((unsigned __int16)(v35 >> 5) >= 0x465u) {
                      unsigned __int16 v35 = v36;
                    }
                    int v37 = v34 - v35;
                    if (v37 > 18000) {
                      v37 -= 36000;
                    }
                    if (v37 < -17999) {
                      v37 += 36000;
                    }
                    if (fabs((double)v37 / 100.0) > v30) {
                      goto LABEL_66;
                    }
                    if (sub_6561B0((int **)__p) && sub_699454(v8 - 5))
                    {
                      sub_64F484((char **)a3, v9);
                    }
                    else
                    {
                      if (!sub_699454((int **)v9) || !sub_6561B0(v8 - 5)) {
                        goto LABEL_66;
                      }
                      sub_64F484((char **)a3, (long long *)(v8 - 5));
                      long long v13 = v9;
                    }
                    sub_64F484((char **)a3, v13);
LABEL_66:
                    if (__p)
                    {
                      long long v39 = (int **)__p;
                      operator delete(__p);
                    }
                    return;
                  }
                }
                else
                {
                  if (v16 < 0x49) {
                    goto LABEL_51;
                  }
                  unsigned int v33 = v15[36];
                  if (!v33) {
                    goto LABEL_51;
                  }
                }
                int v34 = *(unsigned __int16 *)((char *)v14 + v33);
                goto LABEL_52;
              }
            }
            else
            {
              if (v20 < 0x4B) {
                goto LABEL_43;
              }
              unsigned int v31 = v19[37];
              if (!v31) {
                goto LABEL_43;
              }
            }
            __int16 v32 = *(_WORD *)&v18[v31];
            goto LABEL_44;
          }
        }
        else
        {
          if (v12 < 0x49) {
            goto LABEL_28;
          }
          unsigned int v23 = v11[36];
          if (!v23) {
            goto LABEL_28;
          }
        }
        int v24 = *(unsigned __int16 *)(v10 + v23);
        goto LABEL_29;
      }
    }
    else
    {
      if (v20 < 0x4B) {
        goto LABEL_20;
      }
      unsigned int v21 = v19[37];
      if (!v19[37]) {
        goto LABEL_20;
      }
    }
    __int16 v22 = *(_WORD *)&v18[v21];
    goto LABEL_21;
  }
}

void sub_6B1468(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_6B148C(uint64_t *a1, uint64_t a2, void *a3, uint64_t a4)
{
  *(void *)(a4 + 8) = *(void *)a4;
  sub_64F484((char **)a4, (long long *)a2);
  double v8 = 0;
  uint64_t v9 = 0;
  long long v10 = *(_OWORD *)(a2 + 16);
  long long v41 = *(_OWORD *)a2;
  long long v42 = v10;
  int v43 = *(int **)(a2 + 32);
  int v38 = 0;
  long long v39 = 0;
  uint64_t v40 = 0;
  while (1)
  {
    long long v13 = (unsigned __int16 *)(v41 - *(int *)v41);
    unsigned int v14 = *v13;
    if (v14 < 9)
    {
      uint64_t v15 = 0;
    }
    else
    {
      uint64_t v15 = v13[4];
      if (v13[4]) {
        uint64_t v15 = *(unsigned int *)(v41 + v15);
      }
    }
    v9 += v15;
    if (v9 > *a3) {
      break;
    }
    if (v14 < 0x2F)
    {
      if (v14 < 0xB) {
        break;
      }
    }
    else if (v13[23] && *(unsigned char *)(v41 + v13[23]) == 23)
    {
      goto LABEL_21;
    }
    if (!v13[5] || (*(unsigned char *)(v41 + v13[5]) & 4) == 0)
    {
      if (v14 < 0x2F) {
        break;
      }
      uint64_t v16 = v13[23];
      if (!v16) {
        break;
      }
      unsigned int v17 = *(unsigned __int8 *)(v41 + v16);
      BOOL v18 = v17 > 0x2A;
      uint64_t v19 = (1 << v17) & 0x50426810004;
      if (v18 || v19 == 0) {
        break;
      }
    }
LABEL_21:
    sub_2E44A4(*a1, (uint64_t)&v41, &v38);
    sub_6DBA6C((uint64_t)(a1 + 145), (uint64_t)&v41, (uint64_t *)&v38);
    unsigned int v21 = sub_6CDA8C(v38, v39);
    double v8 = v38;
    if (v39 != v21) {
      long long v39 = v21;
    }
    if (v38 == v21)
    {
      double v8 = v21;
      break;
    }
    long long v22 = *(_OWORD *)v38;
    long long v23 = *((_OWORD *)v38 + 1);
    int v43 = v38[4];
    long long v41 = v22;
    long long v42 = v23;
    unsigned __int16 v25 = *(char **)(a4 + 8);
    unint64_t v24 = *(void *)(a4 + 16);
    if ((unint64_t)v25 < v24)
    {
      long long v11 = *(_OWORD *)v38;
      long long v12 = *((_OWORD *)v38 + 1);
      *((void *)v25 + 4) = v38[4];
      *(_OWORD *)unsigned __int16 v25 = v11;
      *((_OWORD *)v25 + 1) = v12;
      *(void *)(a4 + 8) = v25 + 40;
      if (0xCCCCCCCCCCCCCCCDLL * (v21 - v8) >= 2) {
        goto LABEL_44;
      }
    }
    else
    {
      unsigned __int16 v26 = *(char **)a4;
      unint64_t v27 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)&v25[-*(void *)a4] >> 3);
      unint64_t v28 = v27 + 1;
      if (v27 + 1 > 0x666666666666666) {
        sub_2E00();
      }
      unint64_t v29 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v24 - (void)v26) >> 3);
      if (2 * v29 > v28) {
        unint64_t v28 = 2 * v29;
      }
      if (v29 >= 0x333333333333333) {
        unint64_t v30 = 0x666666666666666;
      }
      else {
        unint64_t v30 = v28;
      }
      if (v30)
      {
        if (v30 > 0x666666666666666) {
          sub_188D718();
        }
        unsigned int v31 = (char *)operator new(40 * v30);
      }
      else
      {
        unsigned int v31 = 0;
      }
      __int16 v32 = &v31[40 * v27];
      long long v33 = v42;
      *(_OWORD *)__int16 v32 = v41;
      *((_OWORD *)v32 + 1) = v33;
      *((void *)v32 + 4) = v43;
      int v34 = v32;
      if (v25 != v26)
      {
        do
        {
          long long v35 = *(_OWORD *)(v25 - 40);
          long long v36 = *(_OWORD *)(v25 - 24);
          *((void *)v34 - 1) = *((void *)v25 - 1);
          *(_OWORD *)(v34 - 24) = v36;
          *(_OWORD *)(v34 - 40) = v35;
          v34 -= 40;
          v25 -= 40;
        }
        while (v25 != v26);
        unsigned __int16 v25 = *(char **)a4;
      }
      int v37 = v32 + 40;
      *(void *)a4 = v34;
      *(void *)(a4 + 8) = v32 + 40;
      *(void *)(a4 + 16) = &v31[40 * v30];
      if (v25)
      {
        operator delete(v25);
        double v8 = v38;
        unsigned int v21 = v39;
      }
      *(void *)(a4 + 8) = v37;
      if (0xCCCCCCCCCCCCCCCDLL * (v21 - v8) >= 2) {
        goto LABEL_44;
      }
    }
  }
  *(void *)(a4 + 8) = *(void *)a4;
LABEL_44:
  if (v8)
  {
    long long v39 = v8;
    operator delete(v8);
  }
}

void sub_6B17B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_6B17DC(uint64_t *a1, long long *a2, uint64_t a3, uint64_t *a4, void *a5)
{
  uint64_t v6 = (char *)*a5;
  a5[1] = *a5;
  long long __p = 0;
  int v45 = 0;
  uint64_t v46 = 0;
  long long v7 = a2[1];
  long long v41 = *a2;
  long long v42 = v7;
  uint64_t v43 = *((void *)a2 + 4);
  if (*a4 >= 1)
  {
    uint64_t v10 = 0;
    uint64_t v11 = (uint64_t)(a1 + 145);
    do
    {
      uint64_t v15 = (unsigned __int16 *)(v41 - *(int *)v41);
      if (*v15 >= 0x2Fu)
      {
        uint64_t v16 = v15[23];
        if (v16)
        {
          unsigned int v17 = *(unsigned __int8 *)(v41 + v16);
          BOOL v18 = v17 > 0x36;
          uint64_t v19 = (1 << v17) & 0x44000000000008;
          if (!v18 && v19 != 0) {
            break;
          }
        }
      }
      sub_2E44A4(*a1, (uint64_t)&v41, &__p);
      sub_6DBA6C(v11, (uint64_t)&v41, (uint64_t *)&__p);
      if (__p == v45) {
        break;
      }
      long long v22 = *(_OWORD *)__p;
      long long v21 = *((_OWORD *)__p + 1);
      uint64_t v43 = *((void *)__p + 4);
      long long v41 = v22;
      long long v42 = v21;
      long long v23 = (unsigned __int16 *)(v22 - *(int *)v22);
      if (*v23 < 9u)
      {
        uint64_t v25 = 0;
      }
      else
      {
        uint64_t v24 = v23[4];
        if (v24) {
          uint64_t v25 = *(unsigned int *)(v22 + v24);
        }
        else {
          uint64_t v25 = 0;
        }
      }
      unint64_t v26 = *(void *)(a3 + 32);
      if ((v43 & 0xFFFFFFFFFFFFLL) == (v26 & 0xFFFFFFFFFFFFLL)
        && ((v43 & 0xFF000000000000) == 0) != (HIWORD(v26) & 1))
      {
        goto LABEL_38;
      }
      unint64_t v28 = (char *)a5[1];
      unint64_t v27 = a5[2];
      if ((unint64_t)v28 < v27)
      {
        long long v12 = *(_OWORD *)__p;
        long long v13 = *((_OWORD *)__p + 1);
        *((void *)v28 + 4) = *((void *)__p + 4);
        *(_OWORD *)unint64_t v28 = v12;
        *((_OWORD *)v28 + 1) = v13;
        unsigned int v14 = v28 + 40;
      }
      else
      {
        unint64_t v29 = (char *)*a5;
        unint64_t v30 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)&v28[-*a5] >> 3);
        unint64_t v31 = v30 + 1;
        if (v30 + 1 > 0x666666666666666) {
          sub_2E00();
        }
        unint64_t v32 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v27 - (void)v29) >> 3);
        if (2 * v32 > v31) {
          unint64_t v31 = 2 * v32;
        }
        unint64_t v33 = v32 >= 0x333333333333333 ? 0x666666666666666 : v31;
        if (v33)
        {
          if (v33 > 0x666666666666666) {
            sub_188D718();
          }
          int v34 = (char *)operator new(40 * v33);
        }
        else
        {
          int v34 = 0;
        }
        long long v35 = &v34[40 * v30];
        long long v36 = v42;
        *(_OWORD *)long long v35 = v41;
        *((_OWORD *)v35 + 1) = v36;
        *((void *)v35 + 4) = v43;
        int v37 = v35;
        if (v28 != v29)
        {
          do
          {
            long long v38 = *(_OWORD *)(v28 - 40);
            long long v39 = *(_OWORD *)(v28 - 24);
            *((void *)v37 - 1) = *((void *)v28 - 1);
            *(_OWORD *)(v37 - 24) = v39;
            *(_OWORD *)(v37 - 40) = v38;
            v37 -= 40;
            v28 -= 40;
          }
          while (v28 != v29);
          unint64_t v28 = (char *)*a5;
        }
        unsigned int v14 = v35 + 40;
        *a5 = v37;
        a5[1] = v35 + 40;
        a5[2] = &v34[40 * v33];
        if (v28) {
          operator delete(v28);
        }
      }
      v10 += v25;
      a5[1] = v14;
    }
    while (v10 < *a4);
    uint64_t v6 = (char *)*a5;
  }
  a5[1] = v6;
LABEL_38:
  if (__p)
  {
    int v45 = __p;
    operator delete(__p);
  }
}

void sub_6B1AA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6B1AC8(uint64_t *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (void *)sub_46C8EC(a2, a3);
  unint64_t v7 = a3 + 1;
  double v8 = (void *)sub_46C8EC(a2, v7);
  uint64_t v9 = (unsigned __int16 *)(*v6 - *(int *)*v6);
  if (*v9 >= 0x2Fu)
  {
    uint64_t v10 = v9[23];
    if (v10)
    {
      unsigned int v11 = *(unsigned __int8 *)(*v6 + v10) - 2;
      if (v11 < 0x29 && ((0x14109A04001uLL >> v11) & 1) != 0) {
        goto LABEL_16;
      }
    }
  }
  if ((long long v12 = (unsigned __int16 *)(*v8 - *(int *)*v8), *v12 < 0x2Fu)
    || (uint64_t v13 = v12[23]) == 0
    || ((v14 = *(unsigned __int8 *)(*v8 + v13), v15 = v14 > 0x2A, uint64_t v16 = (1 << v14) & 0x50426810004, !v15)
      ? (BOOL v17 = v16 == 0)
      : (BOOL v17 = 1),
        v17))
  {
LABEL_16:
    char v20 = 0;
  }
  else
  {
    long long __p = 0;
    uint64_t v46 = 0;
    uint64_t v47 = 0;
    unint64_t v18 = sub_46C760(a2);
    if (v7 <= v18) {
      unint64_t v19 = v18;
    }
    else {
      unint64_t v19 = v7;
    }
    unint64_t v40 = v19;
    if (v7 >= v18)
    {
LABEL_38:
      char v20 = 0;
    }
    else
    {
      char v20 = 1;
      while (1)
      {
        uint64_t v22 = sub_46C8EC(a2, v7);
        uint64_t v23 = *a1;
        uint64_t v24 = *(void *)(v22 + 32);
        uint64_t v25 = (int *)sub_2D5D58(*a1, v24 & 0xFFFFFFFFFFFFLL);
        if (*(unsigned char *)(v23 + 7772))
        {
          unint64_t v26 = sub_2DB8E0(v23 + 3896, v24, 0);
          unint64_t v27 = &v26[-*(int *)v26];
          if (*(unsigned __int16 *)v27 < 5u)
          {
            uint64_t v28 = 0;
          }
          else
          {
            uint64_t v28 = *((unsigned __int16 *)v27 + 2);
            if (v28) {
              v28 += (uint64_t)&v26[*(unsigned int *)&v26[v28]];
            }
          }
          unint64_t v29 = (int *)(v28 + 4 * WORD2(v24) + 4 + *(unsigned int *)(v28 + 4 * WORD2(v24) + 4));
        }
        else
        {
          unint64_t v29 = 0;
        }
        unint64_t v30 = (int *)sub_2E5C38(v23, v24 & 0xFFFFFFFFFFFFLL, 1);
        v41[0] = v25;
        v41[1] = v29;
        v41[2] = v30;
        v41[3] = v31;
        int v42 = v24;
        __int16 v43 = WORD2(v24);
        BOOL v44 = (v24 & 0xFF000000000000) != 0;
        sub_2E44A4(*a1, (uint64_t)v41, &__p);
        unint64_t v32 = (unsigned __int16 *)((char *)v41[0] - *v41[0]);
        if (*v32 < 0x2Fu) {
          break;
        }
        uint64_t v33 = v32[23];
        if (!v33) {
          break;
        }
        unsigned int v34 = *((unsigned __int8 *)v41[0] + v33);
        if (v34 > 0x2A || ((1 << v34) & 0x50426810004) == 0)
        {
          v20 |= v34 == 0;
          long long v39 = __p;
          if (__p) {
            goto LABEL_40;
          }
          return v20 & 1;
        }
        unint64_t v36 = sub_6DBACC((uint64_t)(a1 + 145), v41, (uint64_t *)&__p, -1);
        if (++v7 < sub_46C760(a2))
        {
          if (v36 == -1
            || (uint64_t v37 = *(void *)(sub_66F838(&__p, v36) + 32),
                uint64_t v38 = *(void *)(sub_46C8EC(a2, v7) + 32),
                (v37 & 0xFFFFFFFFFFFFLL) != (v38 & 0xFFFFFFFFFFFFLL))
            || ((v37 & 0xFF000000000000) == 0) != ((v38 & 0x1000000000000) == 0))
          {
            char v20 = 0;
          }
        }
        if (v40 == v7) {
          goto LABEL_38;
        }
      }
    }
    long long v39 = __p;
    if (__p)
    {
LABEL_40:
      uint64_t v46 = v39;
      operator delete(v39);
    }
  }
  return v20 & 1;
}

void sub_6B1DD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6B1DFC(uint64_t a1, void *a2, unint64_t a3, uint64_t a4)
{
  *(_DWORD *)(a4 + 24) = 0;
  unint64_t v5 = (_OWORD *)(a4 + 24);
  *(void *)(a4 + 8) = *(void *)a4;
  *(void *)(a4 + 48) = *(void *)(a4 + 40);
  *(_DWORD *)(a4 + 64) = 0;
  *(void *)&long long v6 = -1;
  *((void *)&v6 + 1) = -1;
  *(_OWORD *)(a4 + 72) = v6;
  uint64_t v7 = a4 + 72;
  *(_OWORD *)(a4 + 88) = v6;
  *(_OWORD *)(a4 + 104) = v6;
  *(void *)(a4 + 120) = -1;
  *(_DWORD *)(a4 + 128) = 0;
  *(void *)(a4 + 136) = -1;
  *(_DWORD *)(a4 + 144) = 0;
  *(_OWORD *)(a4 + 152) = xmmword_20E2060;
  *(_WORD *)(a4 + 168) = 0;
  *(unsigned char *)(a4 + 170) = 0;
  *(void *)(a4 + 176) = 0;
  *(unsigned char *)(a4 + 188) = 0;
  *(unsigned char *)(a4 + 190) = 0;
  sub_6AB560(a1, a2, a3, 1, (uint64_t)__p);
  double v8 = *(void **)a4;
  if (*(void *)a4)
  {
    *(void *)(a4 + 8) = v8;
    operator delete(v8);
  }
  *(_OWORD *)a4 = *(_OWORD *)__p;
  *(void *)(a4 + 16) = v16;
  __p[1] = 0;
  uint64_t v16 = 0;
  __p[0] = 0;
  _OWORD *v5 = v17;
  uint64_t v9 = *(void **)(a4 + 40);
  if (v9)
  {
    *(void *)(a4 + 48) = v9;
    operator delete(v9);
    uint64_t v9 = __p[0];
  }
  *(_OWORD *)(a4 + 40) = v18;
  *(void *)(a4 + 56) = v19;
  uint64_t v19 = 0;
  long long v18 = 0uLL;
  *(_DWORD *)(a4 + 64) = v20;
  long long v10 = v26;
  *(_OWORD *)(v7 + 64) = v25;
  *(_OWORD *)(v7 + 80) = v10;
  *(_OWORD *)(v7 + 96) = *(_OWORD *)v27;
  *(void *)(v7 + 111) = *(void *)&v27[15];
  long long v11 = v22;
  *(_OWORD *)uint64_t v7 = v21;
  *(_OWORD *)(v7 + 16) = v11;
  long long v12 = v24;
  *(_OWORD *)(v7 + 32) = v23;
  *(_OWORD *)(v7 + 48) = v12;
  if (v9)
  {
    __p[1] = v9;
    operator delete(v9);
  }
  if (*(_DWORD *)v5 == 20)
  {
    int v13 = 62;
    goto LABEL_11;
  }
  if (*(_DWORD *)v5 == 21)
  {
    int v13 = 63;
LABEL_11:
    *(_DWORD *)unint64_t v5 = v13;
  }
  *(unsigned char *)(a4 + 188) = 1;
  return 1;
}

uint64_t sub_6B1F74(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_46C8EC(a2, a3);
  uint64_t v9 = *a1;
  uint64_t v10 = *(void *)(v8 + 32);
  long long v11 = (int *)sub_2D5D58(*a1, v10 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v9 + 7772))
  {
    long long v12 = sub_2DB8E0(v9 + 3896, v10, 0);
    int v13 = &v12[-*(int *)v12];
    if (*(unsigned __int16 *)v13 < 5u)
    {
      uint64_t v14 = 0;
    }
    else
    {
      uint64_t v14 = *((unsigned __int16 *)v13 + 2);
      if (v14) {
        v14 += (uint64_t)&v12[*(unsigned int *)&v12[v14]];
      }
    }
    BOOL v15 = (int *)(v14 + 4 * WORD2(v10) + 4 + *(unsigned int *)(v14 + 4 * WORD2(v10) + 4));
  }
  else
  {
    BOOL v15 = 0;
  }
  v70[0] = v11;
  v70[1] = v15;
  v70[2] = (int *)sub_2E5C38(v9, v10 & 0xFFFFFFFFFFFFLL, 1);
  v70[3] = v16;
  LODWORD(v71) = v10;
  WORD2(v71) = WORD2(v10);
  uint64_t v17 = a3 + 1;
  BYTE6(v71) = (v10 & 0xFF000000000000) != 0;
  uint64_t v18 = sub_46C8EC(a2, a3 + 1);
  uint64_t v19 = *a1;
  uint64_t v20 = *(void *)(v18 + 32);
  long long v21 = (int *)sub_2D5D58(*a1, v20 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v19 + 7772)) {
    sub_2DB8E0(v19 + 3896, v20, 0);
  }
  sub_2E5C38(v19, v20 & 0xFFFFFFFFFFFFLL, 1);
  long long v22 = (unsigned __int16 *)((char *)v11 - *v11);
  if (*v22 >= 0x2Fu)
  {
    uint64_t v23 = v22[23];
    if (v23)
    {
      unsigned int v24 = *((unsigned __int8 *)v11 + v23);
      BOOL v25 = v24 > 0x36;
      uint64_t v26 = (1 << v24) & 0x44000000000008;
      if (!v25 && v26 != 0) {
        return 0;
      }
    }
  }
  uint64_t v28 = (unsigned __int16 *)((char *)v21 - *v21);
  if (*v28 >= 0x2Fu)
  {
    uint64_t v29 = v28[23];
    if (v29)
    {
      if (*((unsigned char *)v21 + v29) == 54)
      {
        *(_DWORD *)(a4 + 24) = 6;
        *(void *)&long long v64 = v71;
        sub_2D5B74((char **)a4, &v64);
        *(void *)&long long v64 = v20 & 0xFFFFFFFFFFFFLL | ((unint64_t)((v20 & 0xFF000000000000) != 0) << 48);
        sub_2D5B74((char **)a4, &v64);
        return 1;
      }
    }
  }
  unint64_t v61 = a3;
  uint64_t v62 = a4;
  uint64_t v31 = 0;
  unint64_t v32 = v17;
  while (1)
  {
    uint64_t v33 = sub_46C8EC(a2, v32);
    uint64_t v34 = *a1;
    uint64_t v35 = *(void *)(v33 + 32);
    unint64_t v36 = (int *)sub_2D5D58(*a1, v35 & 0xFFFFFFFFFFFFLL);
    if (*(unsigned char *)(v34 + 7772)) {
      sub_2DB8E0(v34 + 3896, v35, 0);
    }
    sub_2E5C38(v34, v35 & 0xFFFFFFFFFFFFLL, 1);
    uint64_t v37 = (unsigned __int16 *)((char *)v36 - *v36);
    unsigned int v38 = *v37;
    if (v38 >= 0x2F) {
      break;
    }
    if (v38 < 9)
    {
      if (v31 > a1[77]) {
        return 0;
      }
      goto LABEL_34;
    }
LABEL_29:
    uint64_t v39 = v37[4];
    if (v39) {
      uint64_t v39 = *(unsigned int *)((char *)v36 + v39);
    }
    v31 += v39;
    if (v31 > a1[77]) {
      return 0;
    }
LABEL_34:
    if (++v32 == sub_46C760(a2)) {
      return 0;
    }
  }
  if (!v37[23] || *((unsigned char *)v36 + v37[23]) != 54) {
    goto LABEL_29;
  }
  long long __p = 0;
  uint64_t v68 = 0;
  uint64_t v69 = 0;
  sub_2E44A4(*a1, (uint64_t)v70, &__p);
  unint64_t v41 = v61;
  int v42 = __p;
  if (v68 - (unsigned char *)__p == 80)
  {
    if (sub_69B8C0((uint64_t)a1, v70, (int ***)&__p) == 2)
    {
      uint64_t v43 = sub_66F838(&__p, 0);
      uint64_t v44 = sub_46C8EC(a2, v17);
      uint64_t v45 = *a1;
      uint64_t v46 = *(void *)(v44 + 32);
      sub_2D5D58(*a1, v46 & 0xFFFFFFFFFFFFLL);
      if (*(unsigned char *)(v45 + 7772)) {
        sub_2DB8E0(v45 + 3896, v46, 0);
      }
      sub_2E5C38(v45, v46 & 0xFFFFFFFFFFFFLL, 1);
      unint64_t v47 = __PAIR64__(*(unsigned __int16 *)(v43 + 36), *(_DWORD *)(v43 + 32)) == __PAIR64__(WORD2(v46), v46)
         && ((v46 & 0xFF000000000000) != 0) != (*(unsigned char *)(v43 + 38) == 0);
      uint64_t v48 = sub_66F838(&__p, v47);
      uint64_t v49 = 0;
      long long v50 = *(_OWORD *)v48;
      long long v51 = *(_OWORD *)(v48 + 16);
      uint64_t v66 = *(void *)(v48 + 32);
      long long v64 = v50;
      for (long long i = v51; ; long long i = v60)
      {
        uint64_t v68 = __p;
        sub_2E44A4(*a1, (uint64_t)&v64, &__p);
        unint64_t v52 = __p;
        if (__p != v68)
        {
          while (1)
          {
            unint64_t v53 = (unsigned __int16 *)(*v52 - *(int *)*v52);
            if (*v53 >= 0x2Fu)
            {
              uint64_t v54 = v53[23];
              if (v54)
              {
                if (*(unsigned char *)(*v52 + v54) == 54) {
                  break;
                }
              }
            }
            v52 += 5;
            if (v52 == (void *)v68) {
              goto LABEL_54;
            }
          }
        }
        if (v52 != (void *)v68) {
          break;
        }
LABEL_54:
        double v55 = (unsigned __int16 *)(v64 - *(int *)v64);
        if (*v55 >= 9u && (uint64_t v56 = v55[4]) != 0)
        {
          v49 += *(unsigned int *)(v64 + v56);
          if (v49 > a1[77]) {
            goto LABEL_61;
          }
        }
        else if (v49 > a1[77])
        {
          goto LABEL_61;
        }
        unint64_t v57 = sub_6DBACC((uint64_t)(a1 + 145), (int **)&v64, (uint64_t *)&__p, -1);
        if (v57 == -1) {
          goto LABEL_61;
        }
        uint64_t v58 = sub_66F838(&__p, v57);
        long long v59 = *(_OWORD *)v58;
        long long v60 = *(_OWORD *)(v58 + 16);
        uint64_t v66 = *(void *)(v58 + 32);
        long long v64 = v59;
      }
      *(_DWORD *)(v62 + 24) = 6;
      if (v32 >= v61)
      {
        do
        {
          uint64_t v63 = *(void *)(sub_46C8EC(a2, v41) + 32);
          sub_2D5B74((char **)v62, &v63);
          ++v41;
        }
        while (v41 <= v32);
      }
      uint64_t v30 = 1;
    }
    else
    {
LABEL_61:
      uint64_t v30 = 0;
    }
    int v42 = __p;
  }
  else
  {
    uint64_t v30 = 0;
  }
  if (v42)
  {
    uint64_t v68 = v42;
    operator delete(v42);
  }
  return v30;
}

void sub_6B24C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6B24F8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!*(unsigned char *)(a1 + 712)) {
    return 0;
  }
  if (sub_6B3674(a1, a2, a3, a4)) {
    return 1;
  }
  uint64_t v203 = a5;
  unint64_t v204 = a3;
  uint64_t v11 = sub_46C8EC(a2, a3);
  uint64_t v12 = *(void *)a1;
  unint64_t v205 = (int **)v11;
  uint64_t v13 = *(void *)(v11 + 32);
  uint64_t v14 = sub_2D5D58(*(void *)a1, v13 & 0xFFFFFFFFFFFFLL);
  uint64_t v206 = a4;
  if (*(unsigned char *)(v12 + 7772))
  {
    BOOL v15 = sub_2DB8E0(v12 + 3896, v13, 0);
    uint64_t v16 = &v15[-*(int *)v15];
    if (*(unsigned __int16 *)v16 < 5u)
    {
      uint64_t v17 = 0;
    }
    else
    {
      uint64_t v17 = *((unsigned __int16 *)v16 + 2);
      if (v17) {
        v17 += (uint64_t)&v15[*(unsigned int *)&v15[v17]];
      }
    }
    uint64_t v18 = v17 + 4 * WORD2(v13) + 4 + *(unsigned int *)(v17 + 4 * WORD2(v13) + 4);
  }
  else
  {
    uint64_t v18 = 0;
  }
  *((void *)&v227 + 1) = v18;
  *(void *)&long long v228 = sub_2E5C38(v12, v13 & 0xFFFFFFFFFFFFLL, 1);
  *((void *)&v228 + 1) = v19;
  LODWORD(v229) = v13;
  WORD2(v229) = WORD2(v13);
  BYTE6(v229) = (v13 & 0xFF000000000000) != 0;
  uint64_t v214 = a1;
  v226[0] = (uint64_t *)a1;
  v226[1] = (uint64_t *)&v227;
  *(void *)&long long v227 = v14;
  sub_46B060();
  long long v21 = v20;
  unint64_t v23 = v22;
  sub_46B060();
  long long v216 = v24;
  unint64_t v212 = v25;
  sub_46B058();
  uint64_t v210 = v26;
  uint64_t v28 = v27;
  sub_46B058();
  BOOL v215 = 0;
  uint64_t v29 = v28 + v204;
  *(void *)&long long __src = v30;
  *((void *)&__src + 1) = v204 + 1 + v31;
  uint64_t v207 = a1 + 3048;
  while (1)
  {
    sub_46B060();
    uint64_t v34 = v32;
    unint64_t v35 = v33;
    if ((void)__src)
    {
      unint64_t v36 = *((void *)&__src + 1);
      unint64_t v37 = sub_46C760((void *)__src);
      unint64_t v38 = v37;
      if (v34)
      {
        BOOL v39 = v36 < v37;
        unint64_t v40 = sub_46C760(v34);
        if (v35 < v40 && v39)
        {
          uint64_t v42 = sub_46C8EC((void *)__src, *((uint64_t *)&__src + 1));
          if (v42 == sub_46C8EC(v34, v35)) {
            goto LABEL_68;
          }
        }
        else if (v36 < v38 == v35 < v40)
        {
          goto LABEL_68;
        }
      }
      else if (v36 >= v37)
      {
        goto LABEL_68;
      }
    }
    else if (!v32 || v33 >= sub_46C760(v32))
    {
      goto LABEL_68;
    }
    uint64_t v43 = (void *)sub_46C8EC((void *)__src, *((uint64_t *)&__src + 1));
    uint64_t v44 = (unsigned __int16 *)(*v43 - *(int *)*v43);
    if (*v44 >= 0x2Fu)
    {
      uint64_t v45 = v44[23];
      if (v45)
      {
        unsigned int v46 = *(unsigned __int8 *)(*v43 + v45);
        BOOL v47 = v46 > 0x36;
        uint64_t v48 = (1 << v46) & 0x44000000000008;
        if (!v47 && v48 != 0) {
          return 0;
        }
      }
    }
    uint64_t v50 = sub_46C8EC((void *)__src, *((uint64_t *)&__src + 1));
    uint64_t v51 = *(void *)v214;
    uint64_t v52 = *(void *)(v50 + 32);
    unint64_t v53 = (int *)sub_2D5D58(*(void *)v214, v52 & 0xFFFFFFFFFFFFLL);
    if (*(unsigned char *)(v51 + 7772)) {
      sub_2DB8E0(v51 + 3896, v52, 0);
    }
    sub_2E5C38(v51, v52 & 0xFFFFFFFFFFFFLL, 1);
    uint64_t v54 = (unsigned __int16 *)((char *)v53 - *v53);
    if (*v54 >= 0x2Fu && (uint64_t v55 = v54[23]) != 0 && *((unsigned char *)v53 + v55) == 14)
    {
      BOOL v56 = 1;
      if (!v215) {
        goto LABEL_40;
      }
    }
    else
    {
      BOOL v56 = sub_6B3B7C(v226, (void **)&__src);
      if (!v215)
      {
LABEL_40:
        BOOL v215 = sub_6B3B7C(v226, (void **)&__src);
        goto LABEL_43;
      }
    }
    BOOL v215 = 1;
LABEL_43:
    sub_46B060();
    uint64_t v58 = v57;
    unint64_t v60 = v59;
    if (v21)
    {
      BOOL v61 = v23 < sub_46C760(v21);
      if (!v58) {
        goto LABEL_51;
      }
    }
    else
    {
      BOOL v61 = 0;
      if (!v57)
      {
LABEL_51:
        BOOL v63 = 0;
        goto LABEL_52;
      }
    }
    unint64_t v62 = sub_46C760(v58);
    BOOL v63 = v60 < v62;
    if (v60 < v62 && v61)
    {
      uint64_t v65 = sub_46C8EC(v21, v23);
      int v66 = v65 == sub_46C8EC(v58, v60);
      goto LABEL_53;
    }
LABEL_52:
    int v66 = v61 ^ v63 ^ 1;
LABEL_53:
    if ((v66 & v56) != 0)
    {
      unint64_t v23 = *((void *)&__src + 1);
      long long v21 = (void *)__src;
    }
    sub_46B060();
    uint64_t v68 = v67;
    unint64_t v70 = v69;
    if (v216)
    {
      BOOL v71 = v212 < sub_46C760(v216);
      if (!v68) {
        goto LABEL_64;
      }
    }
    else
    {
      BOOL v71 = 0;
      if (!v67)
      {
LABEL_64:
        BOOL v73 = 0;
        goto LABEL_65;
      }
    }
    unint64_t v72 = sub_46C760(v68);
    BOOL v73 = v70 < v72;
    if (v70 < v72 && v71)
    {
      uint64_t v75 = sub_46C8EC(v216, v212);
      if (v75 != sub_46C8EC(v68, v70) || v56) {
        goto LABEL_12;
      }
      goto LABEL_66;
    }
LABEL_65:
    if ((v71 ^ v73 | v56)) {
      goto LABEL_12;
    }
LABEL_66:
    uint64_t v76 = (int **)sub_46C8EC((void *)__src, *((uint64_t *)&__src + 1));
    if ((sub_663238(v207, v76) & 1) == 0) {
      break;
    }
LABEL_12:
    uint64_t v29 = *((void *)&__src + 1);
    uint64_t v210 = (void *)__src;
    ++*((void *)&__src + 1);
  }
  unint64_t v212 = *((void *)&__src + 1);
  long long v216 = (void *)__src;
LABEL_68:
  sub_46B060();
  uint64_t v79 = v77;
  unint64_t v80 = v78;
  if (v21)
  {
    unint64_t v81 = sub_46C760(v21);
    unint64_t v82 = v81;
    if (v79)
    {
      BOOL v83 = v23 < v81;
      unint64_t v84 = sub_46C760(v79);
      if (v80 < v84 && v83)
      {
        uint64_t v86 = sub_46C8EC(v21, v23);
        if (v86 == sub_46C8EC(v79, v80)) {
          goto LABEL_115;
        }
      }
      else if (v23 < v82 == v80 < v84)
      {
        goto LABEL_115;
      }
LABEL_82:
      sub_46B060();
      uint64_t v89 = v87;
      unint64_t v90 = v88;
      if (v216)
      {
        unint64_t v91 = sub_46C760(v216);
        unint64_t v92 = v91;
        if (v89)
        {
          BOOL v93 = v212 < v91;
          unint64_t v94 = sub_46C760(v89);
          if (v90 < v94 && v93)
          {
            uint64_t v96 = sub_46C8EC(v216, v212);
            if (v96 != sub_46C8EC(v89, v90)) {
              goto LABEL_115;
            }
          }
          else if (v212 < v92 != v90 < v94)
          {
            goto LABEL_115;
          }
LABEL_96:
          uint64_t v97 = *(void *)v214;
          unint64_t v98 = (unint64_t)v205[4];
          uint64_t v208 = sub_2D5D58(*(void *)v214, v98 & 0xFFFFFFFFFFFFLL);
          if (*(unsigned char *)(v97 + 7772))
          {
            char v99 = sub_2DB8E0(v97 + 3896, v98, 0);
            double v100 = &v99[-*(int *)v99];
            if (*(unsigned __int16 *)v100 < 5u)
            {
              uint64_t v101 = 0;
            }
            else
            {
              uint64_t v101 = *((unsigned __int16 *)v100 + 2);
              if (v101) {
                v101 += (uint64_t)&v99[*(unsigned int *)&v99[v101]];
              }
            }
            uint64_t v102 = v101 + 4 * WORD2(v98) + 4 + *(unsigned int *)(v101 + 4 * WORD2(v98) + 4);
          }
          else
          {
            uint64_t v102 = 0;
          }
          uint64_t v103 = sub_2E5C38(v97, v98 & 0xFFFFFFFFFFFFLL, 1);
          *(void *)&long long __src = v208;
          *((void *)&__src + 1) = v102;
          *(void *)&long long v231 = v103;
          *((void *)&v231 + 1) = v104;
          LODWORD(v232) = v98;
          WORD2(v232) = WORD2(v98);
          BYTE6(v232) = (v98 & 0xFF000000000000) != 0;
          uint64_t v105 = sub_46C8EC(v210, v29);
          uint64_t v106 = *(void *)v214;
          uint64_t v107 = *(void *)(v105 + 32);
          uint64_t v209 = sub_2D5D58(*(void *)v214, v107 & 0xFFFFFFFFFFFFLL);
          if (*(unsigned char *)(v106 + 7772))
          {
            uint64_t v108 = sub_2DB8E0(v106 + 3896, v107, 0);
            int v109 = &v108[-*(int *)v108];
            if (*(unsigned __int16 *)v109 < 5u)
            {
              uint64_t v110 = 0;
            }
            else
            {
              uint64_t v110 = *((unsigned __int16 *)v109 + 2);
              if (v110) {
                v110 += (uint64_t)&v108[*(unsigned int *)&v108[v110]];
              }
            }
            uint64_t v111 = v110 + 4 * WORD2(v107) + 4 + *(unsigned int *)(v110 + 4 * WORD2(v107) + 4);
          }
          else
          {
            uint64_t v111 = 0;
          }
          *(void *)&long long v223 = v209;
          *((void *)&v223 + 1) = v111;
          *(void *)&long long v224 = sub_2E5C38(v106, v107 & 0xFFFFFFFFFFFFLL, 1);
          *((void *)&v224 + 1) = v112;
          LODWORD(v225) = v107;
          WORD2(v225) = WORD2(v107);
          BYTE6(v225) = (v107 & 0xFF000000000000) != 0;
          int v113 = sub_35E640();
          uint64_t v114 = v216;
          if (v113) {
            uint64_t v114 = v210;
          }
          long long v216 = v114;
          unint64_t v115 = v212;
          if (v113) {
            unint64_t v115 = v29;
          }
          unint64_t v212 = v115;
        }
        else if (v212 >= v91)
        {
          goto LABEL_96;
        }
      }
      else if (!v87 || v88 >= sub_46C760(v87))
      {
        goto LABEL_96;
      }
    }
    else if (v23 < v81)
    {
      goto LABEL_82;
    }
  }
  else if (v77 && v78 < sub_46C760(v77))
  {
    goto LABEL_82;
  }
LABEL_115:
  sub_46B060();
  long long v118 = v116;
  unint64_t v119 = v117;
  if (!v21)
  {
    if (v116 && v117 < sub_46C760(v116)) {
      goto LABEL_129;
    }
    return 0;
  }
  unint64_t v120 = sub_46C760(v21);
  unint64_t v121 = v120;
  if (!v118)
  {
    if (v23 < v120) {
      goto LABEL_129;
    }
    return 0;
  }
  BOOL v122 = v23 < v120;
  unint64_t v123 = sub_46C760(v118);
  if (v119 < v123 && v122)
  {
    uint64_t v125 = sub_46C8EC(v21, v23);
    if (v125 == sub_46C8EC(v118, v119)) {
      return 0;
    }
  }
  else if (v23 < v121 == v119 < v123)
  {
    return 0;
  }
LABEL_129:
  sub_46B060();
  long long v127 = v126;
  unint64_t v129 = v128;
  if (v216)
  {
    int v130 = v212 < sub_46C760(v216);
    if (v127) {
      goto LABEL_131;
    }
LABEL_138:
    int v132 = 0;
    goto LABEL_139;
  }
  int v130 = 0;
  if (!v126) {
    goto LABEL_138;
  }
LABEL_131:
  unint64_t v131 = sub_46C760(v127);
  int v132 = v129 < v131;
  if (v129 < v131) {
    int v133 = v130;
  }
  else {
    int v133 = 0;
  }
  if (v133 == 1)
  {
    uint64_t v134 = sub_46C8EC(v216, v212);
    uint64_t v135 = sub_46C8EC(v127, v129);
    uint64_t v10 = 0;
    if (v134 == v135) {
      return v10;
    }
LABEL_140:
    if (v23 < v212)
    {
      sub_46B058();
      uint64_t v137 = v136;
      uint64_t v138 = sub_46C8EC(v216, v212);
      long long v139 = *(_OWORD *)v138;
      long long v140 = *(_OWORD *)(v138 + 16);
      uint64_t v225 = *(void *)(v138 + 32);
      long long v223 = v139;
      long long v224 = v140;
      uint64_t v141 = *(void *)v214;
      uint64_t v142 = sub_46C8EC(v216, v212);
      sub_6921A0(v141, *(void *)(v142 + 32), 1, 1, (uint64_t)&v220);
      uint64_t v218 = 0;
      uint64_t v219 = 0;
      unint64_t v143 = sub_46C760(a2);
      unint64_t v144 = v204;
      if (v204 <= v143) {
        unint64_t v145 = v143;
      }
      else {
        unint64_t v145 = v204;
      }
      unint64_t v211 = v145;
      if (v143 > v204)
      {
        uint64_t v146 = 0;
        LOBYTE(v147) = 0;
        uint64_t v213 = v212 - v137;
        double v148 = 0.0;
        while (1)
        {
          long long v149 = (int **)sub_46C8EC(a2, v144);
          __p[0] = v149[4];
          sub_2D5B74((char **)v206, __p);
          if (v147)
          {
            BOOL v147 = 1;
          }
          else
          {
            uint64_t v150 = *(void *)v214;
            unint64_t v151 = (unint64_t)v149[4];
            uint64_t v152 = sub_2D5D58(*(void *)v214, v151 & 0xFFFFFFFFFFFFLL);
            if (*(unsigned char *)(v150 + 7772))
            {
              uint64_t v153 = sub_2DB8E0(v150 + 3896, v151, 0);
              int v154 = &v153[-*(int *)v153];
              if (*(unsigned __int16 *)v154 < 5u)
              {
                uint64_t v155 = 0;
              }
              else
              {
                uint64_t v155 = *((unsigned __int16 *)v154 + 2);
                if (v155) {
                  v155 += (uint64_t)&v153[*(unsigned int *)&v153[v155]];
                }
              }
              uint64_t v156 = v155 + 4 * WORD2(v151) + 4 + *(unsigned int *)(v155 + 4 * WORD2(v151) + 4);
            }
            else
            {
              uint64_t v156 = 0;
            }
            uint64_t v157 = sub_2E5C38(v150, v151 & 0xFFFFFFFFFFFFLL, 1);
            *(void *)&long long __src = v152;
            *((void *)&__src + 1) = v156;
            *(void *)&long long v231 = v157;
            *((void *)&v231 + 1) = v158;
            LODWORD(v232) = v151;
            WORD2(v232) = WORD2(v151);
            BYTE6(v232) = (v151 & 0xFF000000000000) != 0;
            BOOL v147 = !sub_6DB184(v214 + 1160, (int **)&__src);
          }
          if (v213 == v144) {
            goto LABEL_213;
          }
          unint64_t v159 = sub_46C760(a2);
          double v160 = 0.0;
          if (v144 < v159 - 1) {
            break;
          }
LABEL_181:
          double v174 = fabs(v160);
          if (v174 >= v148) {
            double v148 = v174;
          }
          long long v175 = (unsigned __int16 *)((char *)*v205 - **v205);
          unsigned int v176 = *v175;
          if (*((unsigned char *)v205 + 38))
          {
            if (v176 >= 0x49)
            {
              unsigned int v177 = v175[36];
              if (v177) {
                goto LABEL_189;
              }
            }
          }
          else if (v176 >= 0x4B)
          {
            unsigned int v177 = v175[37];
            if (v177)
            {
LABEL_189:
              __int16 v178 = *(_WORD *)((char *)*v205 + v177);
              unint64_t v179 = (char *)*v149;
              unint64_t v180 = (unsigned __int16 *)((char *)*v149 - **v149);
              unsigned int v181 = *v180;
              if (*((unsigned char *)v149 + 38)) {
                goto LABEL_194;
              }
              goto LABEL_190;
            }
          }
          __int16 v178 = -1;
          unint64_t v179 = (char *)*v149;
          unint64_t v180 = (unsigned __int16 *)((char *)*v149 - **v149);
          unsigned int v181 = *v180;
          if (*((unsigned char *)v149 + 38))
          {
LABEL_194:
            if (v181 < 0x4B) {
              goto LABEL_197;
            }
            unsigned int v182 = v180[37];
            if (!v182) {
              goto LABEL_197;
            }
            goto LABEL_196;
          }
LABEL_190:
          if (v181 < 0x49 || (unsigned int v182 = v180[36]) == 0)
          {
LABEL_197:
            int v183 = 0xFFFF;
            goto LABEL_198;
          }
LABEL_196:
          int v183 = *(unsigned __int16 *)&v179[v182];
LABEL_198:
          unsigned __int16 v184 = v178 + 18000;
          unsigned __int16 v185 = v178 - 18000;
          if ((unsigned __int16)(v184 >> 5) < 0x465u) {
            unsigned __int16 v185 = v184;
          }
          int v186 = v183 - v185;
          if (v186 > 18000) {
            v186 -= 36000;
          }
          if (v186 < -17999) {
            v186 += 36000;
          }
          int16x4_t v187 = (int16x4_t)0x4059000000000000;
          double v188 = fabs((double)v186 / 100.0);
          v187.i16[0] = *(_WORD *)(v214 + 744);
          if (v188 >= (double)vmovl_s16(v187).i32[0]) {
            uint64_t v189 = sub_46CCC8(a2, v144, v188);
          }
          else {
            uint64_t v189 = 0;
          }
          v219 += v189;
          if (LODWORD(__p[0]) == v229
            && WORD2(__p[0]) == WORD2(v229)
            && ((v229 & 0x1000000000000) == 0) == (BYTE6(__p[0]) == 0))
          {
            uint64_t v218 = v146;
            if (v211 == ++v144) {
              goto LABEL_213;
            }
          }
          else
          {
            v146 += sub_46CCC8(a2, v144, v188);
            uint64_t v218 = v146;
            if (v211 == ++v144) {
              goto LABEL_213;
            }
          }
        }
        unint64_t v161 = (int **)sub_46C8EC(a2, v144 + 1);
        unint64_t v162 = (unsigned __int16 *)((char *)*v149 - **v149);
        unsigned int v163 = *v162;
        if (*((unsigned char *)v149 + 38))
        {
          if (v163 < 0x49) {
            goto LABEL_169;
          }
          unsigned int v164 = v162[36];
          if (!v164) {
            goto LABEL_169;
          }
LABEL_165:
          __int16 v165 = *(_WORD *)((char *)*v149 + v164);
          long long v166 = (char *)*v161;
          long long v167 = (unsigned __int16 *)((char *)*v161 - **v161);
          unsigned int v168 = *v167;
          if (!*((unsigned char *)v161 + 38)) {
            goto LABEL_166;
          }
LABEL_170:
          if (v168 >= 0x4B)
          {
            unsigned int v169 = v167[37];
            if (v169) {
              goto LABEL_172;
            }
          }
LABEL_173:
          int v170 = 0xFFFF;
        }
        else
        {
          if (v163 >= 0x4B)
          {
            unsigned int v164 = v162[37];
            if (v164) {
              goto LABEL_165;
            }
          }
LABEL_169:
          __int16 v165 = -1;
          long long v166 = (char *)*v161;
          long long v167 = (unsigned __int16 *)((char *)*v161 - **v161);
          unsigned int v168 = *v167;
          if (*((unsigned char *)v161 + 38)) {
            goto LABEL_170;
          }
LABEL_166:
          if (v168 < 0x49) {
            goto LABEL_173;
          }
          unsigned int v169 = v167[36];
          if (!v169) {
            goto LABEL_173;
          }
LABEL_172:
          int v170 = *(unsigned __int16 *)&v166[v169];
        }
        unsigned __int16 v171 = v165 + 18000;
        unsigned __int16 v172 = v165 - 18000;
        if ((unsigned __int16)(v171 >> 5) < 0x465u) {
          unsigned __int16 v172 = v171;
        }
        int v173 = v170 - v172;
        if (v173 > 18000) {
          v173 -= 36000;
        }
        if (v173 < -17999) {
          v173 += 36000;
        }
        double v160 = (double)v173 / 100.0;
        goto LABEL_181;
      }
      BOOL v147 = 0;
      double v148 = 0.0;
LABEL_213:
      uint64_t v190 = (void *)(v203 + 80);
      if (sub_6B3D44(v214, (uint64_t)v205, (uint64_t)&v223, &v219, v148))
      {
        *(_DWORD *)(v206 + 24) = 3;
        uint64_t v191 = *(void *)(sub_5A7C34(v190, *(void *)(v203 + 104)) + 32);
        if (v222 == v191
          && WORD2(v222) == WORD2(v191)
          && !(((v191 & 0x1000000000000) == 0) ^ (BYTE6(v222) == 0) | v147))
        {
          sub_6ADAB0(v214, a2, v204, (int **)v203, v206, 1);
          uint64_t v192 = (unsigned __int16 *)(*((void *)&v227 + 1) - (int)**((_DWORD **)&v227 + 1));
          double v193 = 0.0;
          double v194 = 0.0;
          if (*v192 >= 0x13u)
          {
            uint64_t v195 = v192[9];
            if (v195)
            {
              LOWORD(v194) = *(_WORD *)(*((void *)&v227 + 1) + v195);
              double v194 = (double)*(unint64_t *)&v194;
            }
          }
          unint64_t v196 = (unsigned __int16 *)(*((void *)&v220 + 1) - (int)**((_DWORD **)&v220 + 1));
          if (*v196 >= 0x13u)
          {
            uint64_t v197 = v196[9];
            if (v197)
            {
              LOWORD(v193) = *(_WORD *)(*((void *)&v220 + 1) + v197);
              double v193 = (double)*(unint64_t *)&v193;
            }
          }
          if (v194 >= v193) {
            double v193 = v194;
          }
          LODWORD(v194) = *(_DWORD *)(v214 + 716);
          int v198 = *(_DWORD *)(v206 + 24);
          if (v193 > (double)*(unint64_t *)&v194) {
            int v198 = 3;
          }
          *(_DWORD *)(v206 + 24) = v198;
          *(void *)(v206 + 176) = sub_6AEAD0((uint64_t *)v214, v206);
        }
        long long __src = v220;
        long long v231 = v221;
        unint64_t v232 = v222;
        uint64_t v10 = 1;
        sub_4721B0((void *)(v214 + 144), (char *)&__src, (char *)v233, 1uLL);
        *(void *)(v214 + 168) = 0;
        *(_DWORD *)(v214 + 176) = 4;
        *(unsigned char *)(v206 + 168) = 1;
        return v10;
      }
      if (!sub_35E640())
      {
        sub_693CB0(v206);
        return 0;
      }
      sub_6921A0(*(void *)v214, v222, 1, 1, (uint64_t)&__src);
      if (sub_69C254(v214, (int **)&v227, (int **)&__src))
      {
        *(_DWORD *)(v206 + 24) = 4;
        goto LABEL_232;
      }
      if (v215
        || v147
        || (unint64_t v201 = *(void *)(sub_5A7C34(v190, *(void *)(v203 + 104)) + 32), v222 != v201)
        || WORD2(v222) != WORD2(v201)
        || (HIWORD(v201) & 1) == (BYTE6(v222) == 0))
      {
        long long __src = v220;
        long long v231 = v221;
        unint64_t v232 = v222;
        sub_6A0AA4(__p, &__src, 1uLL);
        uint64_t v199 = v214;
        *(_DWORD *)(v206 + 24) = sub_69813C(v214, (int **)&v227, __p, 0, 0xFFFFFFFFFFFFFFFFLL);
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }
      }
      else
      {
        sub_6ADAB0(v214, a2, v204, (int **)v203, v206, 1);
        *(void *)(v206 + 176) = sub_6AEAD0((uint64_t *)v214, v206);
LABEL_232:
        uint64_t v199 = v214;
      }
      *(_DWORD *)(v199 + 176) = 4;
      if (v215)
      {
        uint64_t v202 = sub_46C8EC(a2, v204 + 1);
        sub_68E0EC((uint64_t *)v214, v202, (uint64_t)&__src);
      }
      else
      {
        long long __src = v227;
        long long v231 = v228;
        unint64_t v232 = v229;
      }
      *(unsigned char *)(v206 + 168) = sub_35E640();
      return 1;
    }
  }
  else
  {
LABEL_139:
    uint64_t v10 = 0;
    if (v130 != v132) {
      goto LABEL_140;
    }
  }
  return v10;
}

void sub_6B364C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22)
{
  if (__p)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6B3674(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  if (!*(unsigned char *)(a1 + 859)) {
    return 0;
  }
  uint64_t v7 = (uint64_t *)a1;
  uint64_t v8 = sub_46C8EC(a2, a3);
  uint64_t v9 = (int *)*v7;
  unint64_t v10 = sub_2E68E8(*v7, *(void *)(v8 + 32));
  sub_3BDB4C(v9, v10, &__p);
  uint64_t v11 = v62;
  if ((v62 & 0x80u) != 0) {
    uint64_t v11 = v61;
  }
  if (v11)
  {
    __s1 = *(void **)(v8 + 32);
    sub_2D5B74((char **)a4, &__s1);
    unint64_t v12 = sub_46C760(a2);
    unint64_t v55 = a3 + 1;
    if (a3 + 1 > v12) {
      unint64_t v13 = a3 + 1;
    }
    else {
      unint64_t v13 = v12;
    }
    unint64_t v56 = v13;
    if (a3 + 1 < v12)
    {
      uint64_t v14 = 0;
      unint64_t v15 = a3 + 1;
      uint64_t v54 = (int **)v8;
      while (1)
      {
        uint64_t v16 = sub_46C8EC(a2, v15);
        __s1 = *(void **)(v16 + 32);
        sub_2D5B74((char **)a4, &__s1);
        uint64_t v17 = v7;
        uint64_t v18 = *v7;
        uint64_t v19 = *(void *)(v16 + 32);
        uint64_t v20 = (int *)sub_2D5D58(v18, v19 & 0xFFFFFFFFFFFFLL);
        if (*(unsigned char *)(v18 + 7772)) {
          sub_2DB8E0(v18 + 3896, v19, 0);
        }
        sub_2E5C38(v18, v19 & 0xFFFFFFFFFFFFLL, 1);
        if (v14 > v17[92])
        {
          uint64_t v28 = 0;
          *(void *)(a4 + 8) = *(void *)a4;
          *(void *)(a4 + 48) = *(void *)(a4 + 40);
          *(void *)&long long v38 = -1;
          *((void *)&v38 + 1) = -1;
          *(_OWORD *)(a4 + 72) = v38;
          *(_OWORD *)(a4 + 88) = v38;
          *(_OWORD *)(a4 + 104) = v38;
          *(void *)(a4 + 120) = -1;
          *(void *)(a4 + 136) = -1;
          *(_DWORD *)(a4 + 24) = 0;
          *(_DWORD *)(a4 + 64) = 0;
          *(_DWORD *)(a4 + 128) = 0;
          *(_DWORD *)(a4 + 144) = 0;
          *(_OWORD *)(a4 + 152) = xmmword_20E2060;
          *(_WORD *)(a4 + 168) = 0;
          *(unsigned char *)(a4 + 170) = 0;
          *(void *)(a4 + 176) = 0;
          *(unsigned char *)(a4 + 188) = 0;
          *(unsigned char *)(a4 + 190) = 0;
          if (((char)v62 & 0x80000000) == 0) {
            return v28;
          }
          goto LABEL_73;
        }
        uint64_t v7 = v17;
        unint64_t v22 = (unsigned __int16 *)((char *)v20 - *v20);
        if (*v22 < 0x2Fu) {
          break;
        }
        uint64_t v23 = v22[23];
        if (!v23) {
          break;
        }
        unsigned int v24 = *((unsigned __int8 *)v20 + v23);
        BOOL v25 = v24 > 0x2A;
        uint64_t v26 = (1 << v24) & 0x50400004000;
        if (v25 || v26 == 0) {
          break;
        }
        v14 += sub_46CCC8(a2, v15++, v21);
        if (v56 == v15) {
          goto LABEL_72;
        }
      }
      uint64_t v29 = (int *)*v17;
      unint64_t v30 = sub_2E68E8(*v17, *(void *)(v16 + 32));
      sub_3BDB4C(v29, v30, &__s1);
      if ((v59 & 0x80u) == 0) {
        size_t v31 = v59;
      }
      else {
        size_t v31 = __n;
      }
      uint64_t v32 = v62;
      if ((v62 & 0x80u) != 0) {
        uint64_t v32 = v61;
      }
      if (v31 == v32)
      {
        if ((v62 & 0x80u) == 0) {
          p_p = (unsigned __int8 *)&__p;
        }
        else {
          p_p = (unsigned __int8 *)__p;
        }
        uint64_t v34 = v54;
        if ((v59 & 0x80) != 0)
        {
          unint64_t v37 = __s1;
          if (memcmp(__s1, p_p, __n)) {
            unint64_t v15 = -1;
          }
          goto LABEL_46;
        }
        if (v59)
        {
          p_s1 = &__s1;
          uint64_t v36 = v59;
          while (*(unsigned __int8 *)p_s1 == *p_p)
          {
            p_s1 = (void **)((char *)p_s1 + 1);
            ++p_p;
            if (!--v36) {
              goto LABEL_40;
            }
          }
          unint64_t v15 = -1;
          if ((v59 & 0x80) != 0)
          {
LABEL_41:
            unint64_t v37 = __s1;
LABEL_46:
            operator delete(v37);
          }
        }
      }
      else
      {
        unint64_t v15 = -1;
        uint64_t v34 = v54;
LABEL_40:
        if ((v59 & 0x80) != 0) {
          goto LABEL_41;
        }
      }
      if (v15 == -1 || v15 <= v55) {
        goto LABEL_72;
      }
      BOOL v39 = (int **)sub_46C8EC(a2, v15);
      unint64_t v40 = (unsigned __int16 *)((char *)*v34 - **v34);
      unsigned int v41 = *v40;
      if (*((unsigned char *)v34 + 38))
      {
        if (v41 < 0x49 || (unsigned int v42 = v40[36]) == 0)
        {
LABEL_56:
          __int16 v43 = -1;
LABEL_57:
          uint64_t v44 = (unsigned __int16 *)((char *)*v39 - **v39);
          unsigned int v45 = *v44;
          if (*((unsigned char *)v39 + 38))
          {
            if (v45 < 0x4B || (unsigned int v46 = v44[37]) == 0)
            {
LABEL_64:
              int v47 = 0xFFFF;
              goto LABEL_65;
            }
          }
          else
          {
            if (v45 < 0x49) {
              goto LABEL_64;
            }
            unsigned int v46 = v44[36];
            if (!v46) {
              goto LABEL_64;
            }
          }
          int v47 = *(unsigned __int16 *)((char *)*v39 + v46);
LABEL_65:
          unsigned __int16 v48 = v43 + 18000;
          unsigned __int16 v49 = v43 - 18000;
          if ((unsigned __int16)(v48 >> 5) < 0x465u) {
            unsigned __int16 v49 = v48;
          }
          int v50 = v47 - v49;
          if (v50 > 18000) {
            v50 -= 36000;
          }
          if (v50 < -17999) {
            v50 += 36000;
          }
          int16x4_t v51 = (int16x4_t)0x4059000000000000;
          v51.i16[0] = *((_WORD *)v17 + 372);
          if (fabs((double)v50 / 100.0) >= (double)vmovl_s16(v51).i32[0]) {
            goto LABEL_72;
          }
          *(_DWORD *)(a4 + 24) = 0;
          uint64_t v28 = 1;
          if (((char)v62 & 0x80000000) == 0) {
            return v28;
          }
          goto LABEL_73;
        }
      }
      else
      {
        if (v41 < 0x4B) {
          goto LABEL_56;
        }
        unsigned int v42 = v40[37];
        if (!v42) {
          goto LABEL_56;
        }
      }
      __int16 v43 = *(_WORD *)((char *)*v34 + v42);
      goto LABEL_57;
    }
LABEL_72:
    uint64_t v28 = 0;
    *(void *)(a4 + 8) = *(void *)a4;
    *(void *)(a4 + 48) = *(void *)(a4 + 40);
    *(void *)&long long v52 = -1;
    *((void *)&v52 + 1) = -1;
    *(_OWORD *)(a4 + 72) = v52;
    *(_OWORD *)(a4 + 88) = v52;
    *(_OWORD *)(a4 + 104) = v52;
    *(void *)(a4 + 120) = -1;
    *(void *)(a4 + 136) = -1;
    *(_DWORD *)(a4 + 24) = 0;
    *(_DWORD *)(a4 + 64) = 0;
    *(_DWORD *)(a4 + 128) = 0;
    *(_DWORD *)(a4 + 144) = 0;
    *(_OWORD *)(a4 + 152) = xmmword_20E2060;
    *(_WORD *)(a4 + 168) = 0;
    *(unsigned char *)(a4 + 170) = 0;
    *(void *)(a4 + 176) = 0;
    *(unsigned char *)(a4 + 188) = 0;
    *(unsigned char *)(a4 + 190) = 0;
    if ((char)v62 < 0) {
LABEL_73:
    }
      operator delete(__p);
  }
  else
  {
    uint64_t v28 = 0;
    if ((char)v62 < 0) {
      goto LABEL_73;
    }
  }
  return v28;
}

void sub_6B3B44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_6B3B7C(uint64_t **a1, void **a2)
{
  unint64_t v4 = *a1;
  uint64_t v5 = **a1;
  uint64_t v6 = *(void *)(sub_46C8EC(*a2, (uint64_t)a2[1]) + 32);
  uint64_t v7 = (int *)sub_2D5D58(v5, v6 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v5 + 7772))
  {
    uint64_t v8 = sub_2DB8E0(v5 + 3896, v6, 0);
    uint64_t v9 = &v8[-*(int *)v8];
    if (*(unsigned __int16 *)v9 < 5u)
    {
      uint64_t v10 = 0;
    }
    else
    {
      uint64_t v10 = *((unsigned __int16 *)v9 + 2);
      if (v10) {
        v10 += (uint64_t)&v8[*(unsigned int *)&v8[v10]];
      }
    }
    uint64_t v11 = (int *)(v10 + 4 * WORD2(v6) + 4 + *(unsigned int *)(v10 + 4 * WORD2(v6) + 4));
  }
  else
  {
    uint64_t v11 = 0;
  }
  v25[0] = v7;
  v25[1] = v11;
  v25[2] = (int *)sub_2E5C38(v5, v6 & 0xFFFFFFFFFFFFLL, 1);
  v25[3] = v12;
  int v26 = v6;
  __int16 v27 = WORD2(v6);
  BOOL v28 = (v6 & 0xFF000000000000) != 0;
  uint64_t v14 = (unsigned __int16 *)((char *)v7 - *v7);
  if (*v14 >= 0x2Fu)
  {
    uint64_t v15 = v14[23];
    if (v15)
    {
      unsigned int v16 = *((unsigned __int8 *)v7 + v15);
      BOOL v17 = v16 > 0x36;
      uint64_t v18 = (1 << v16) & 0x44000000000008;
      if (!v17 && v18 != 0) {
        return 0;
      }
    }
  }
  uint64_t v20 = (int *)*a1[1];
  double v21 = (unsigned __int16 *)((char *)v20 - *v20);
  unsigned int v22 = *v21;
  if (v22 < 0x2F)
  {
    if (v22 < 0xB) {
      return 0;
    }
    goto LABEL_20;
  }
  if (!v21[23] || *((unsigned char *)v20 + v21[23]) != 23)
  {
LABEL_20:
    uint64_t v23 = v21[5];
    if (!v23 || (*((unsigned char *)v20 + v23) & 4) == 0) {
      return 0;
    }
  }
  if (*((unsigned char *)v4 + 713) && sub_46CCC8(*a2, (unint64_t)a2[1], v13) <= v4[91]) {
    return sub_6DC210(v4 + 145, v25);
  }
  return 0;
}

uint64_t sub_6B3D44(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, double a5)
{
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v11 = *(void *)a1;
  unint64_t v12 = (int *)sub_2D5D58(*(void *)a1, v10 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v11 + 7772))
  {
    double v13 = sub_2DB8E0(v11 + 3896, v10, 0);
    uint64_t v14 = &v13[-*(int *)v13];
    if (*(unsigned __int16 *)v14 < 5u)
    {
      uint64_t v15 = 0;
    }
    else
    {
      uint64_t v15 = *((unsigned __int16 *)v14 + 2);
      if (v15) {
        v15 += (uint64_t)&v13[*(unsigned int *)&v13[v15]];
      }
    }
    unsigned int v16 = (int *)(v15 + 4 * WORD2(v10) + 4 + *(unsigned int *)(v15 + 4 * WORD2(v10) + 4));
  }
  else
  {
    unsigned int v16 = 0;
  }
  v46[0] = v12;
  v46[1] = v16;
  v46[2] = (int *)sub_2E5C38(v11, v10 & 0xFFFFFFFFFFFFLL, 1);
  v46[3] = v17;
  int v47 = v10;
  __int16 v48 = WORD2(v10);
  BOOL v49 = (v10 & 0xFF000000000000) != 0;
  uint64_t v18 = *(void *)(a3 + 32);
  uint64_t v19 = *(void *)a1;
  uint64_t v20 = (int *)sub_2D5D58(*(void *)a1, v18 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v19 + 7772))
  {
    double v21 = sub_2DB8E0(v19 + 3896, v18, 0);
    unsigned int v22 = &v21[-*(int *)v21];
    if (*(unsigned __int16 *)v22 < 5u)
    {
      uint64_t v23 = 0;
    }
    else
    {
      uint64_t v23 = *((unsigned __int16 *)v22 + 2);
      if (v23) {
        v23 += (uint64_t)&v21[*(unsigned int *)&v21[v23]];
      }
    }
    unsigned int v24 = (int *)(v23 + 4 * WORD2(v18) + 4 + *(unsigned int *)(v23 + 4 * WORD2(v18) + 4));
  }
  else
  {
    unsigned int v24 = 0;
  }
  v42[0] = v20;
  v42[1] = v24;
  _OWORD v42[2] = (int *)sub_2E5C38(v19, v18 & 0xFFFFFFFFFFFFLL, 1);
  v42[3] = v25;
  int v43 = v18;
  __int16 v44 = WORD2(v18);
  BOOL v45 = (v18 & 0xFF000000000000) != 0;
  double v26 = sub_2E3ED8(*(void *)a1, (uint64_t)v46, (uint64_t)v42) * 100.0;
  if (v26 >= 0.0)
  {
    double v27 = v26;
    if (v26 >= 4.50359963e15) {
      goto LABEL_23;
    }
    uint64_t v28 = (uint64_t)(v26 + v26) + 1;
  }
  else
  {
    double v27 = v26;
    if (v26 <= -4.50359963e15) {
      goto LABEL_23;
    }
    uint64_t v28 = (uint64_t)(v26 + v26);
    if (v28 >= 1) {
      --v28;
    }
  }
  double v27 = (double)(v28 >> 1);
LABEL_23:
  if (v27 < 9.22337204e18)
  {
    if (v26 >= 0.0)
    {
      if (v26 < 4.50359963e15)
      {
        uint64_t v29 = (uint64_t)(v26 + v26) + 1;
LABEL_32:
        double v26 = (double)(v29 >> 1);
      }
    }
    else if (v26 > -4.50359963e15)
    {
      uint64_t v29 = (uint64_t)(v26 + v26);
      if (v29 >= 1) {
        --v29;
      }
      goto LABEL_32;
    }
    uint64_t v30 = (uint64_t)v26;
    goto LABEL_34;
  }
  uint64_t v30 = 0x7FFFFFFFFFFFFFFELL;
LABEL_34:
  uint64_t v41 = v30;
  if (!sub_35E640() || *(unsigned char *)(a1 + 1008)) {
    return 0;
  }
  double v33 = sub_6A2704(*(void *)a1, v46, v42);
  double v34 = sub_6D82EC(a1 + 1160, v46, v42);
  uint64_t v31 = 0;
  double v35 = *(double *)(a1 + 200);
  if (v35 <= a5 && fabs(v34) < v35)
  {
    if (fabs(v33) < *(double *)(a1 + 984)) {
      return 0;
    }
    uint64_t v36 = *(void *)a1;
    uint64_t v37 = *(void *)(a2 + 32);
    sub_2D5D58(*(void *)a1, v37 & 0xFFFFFFFFFFFFLL);
    if (*(unsigned char *)(v36 + 7772)) {
      sub_2DB8E0(v36 + 3896, v37, 0);
    }
    sub_2E5C38(v36, v37 & 0xFFFFFFFFFFFFLL, 1);
    uint64_t v38 = *(void *)a1;
    uint64_t v39 = *(void *)(a3 + 32);
    sub_2D5D58(*(void *)a1, v39 & 0xFFFFFFFFFFFFLL);
    if (*(unsigned char *)(v38 + 7772)) {
      sub_2DB8E0(v38 + 3896, v39, 0);
    }
    uint64_t v31 = 1;
    sub_2E5C38(v38, v39 & 0xFFFFFFFFFFFFLL, 1);
    unsigned int v40 = sub_35E640();
    if (*a4 < *(void *)(a1 + 1000))
    {
      if (v41 > *(void *)(a1 + 992)) {
        return 1;
      }
      else {
        return v40;
      }
    }
  }
  return v31;
}

uint64_t sub_6B4208(uint64_t a1, void *a2, void *a3, int **a4, int **a5, int a6, int a7)
{
  BOOL v14 = sub_6DB184(a1 + 1160, a4);
  uint64_t v15 = *a4;
  uint64_t v16 = **a4;
  if (!v14)
  {
    uint64_t v23 = (char *)v15 - v16;
    unsigned int v24 = *(unsigned __int16 *)((char *)v15 - v16);
    if (*((unsigned char *)a4 + 38))
    {
      if (v24 < 0xB) {
        return 0;
      }
      unsigned int v25 = *((unsigned __int16 *)v23 + 5);
      if (!v25 || (*(int *)((char *)v15 + v25) & 2) == 0) {
        return 0;
      }
    }
    else
    {
      if (v24 < 0xB) {
        return 0;
      }
      unsigned int v35 = *((unsigned __int16 *)v23 + 5);
      if (!v35 || (*(int *)((char *)v15 + v35) & 1) == 0) {
        return 0;
      }
    }
  }
  uint64_t v17 = -v16;
  if (*(unsigned __int16 *)((char *)v15 + v17) >= 0x2Fu && *(_WORD *)((char *)v15 + v17 + 46))
  {
    unsigned int v18 = *((unsigned __int8 *)v15 + *(unsigned __int16 *)((char *)v15 + v17 + 46));
    BOOL v19 = v18 > 0x36;
    uint64_t v20 = (1 << v18) & 0x44000000000008;
    if (!v19 && v20 != 0) {
      return 0;
    }
  }
  if (a6)
  {
    if (sub_69EB54(a1, a4, a5, a7)) {
      return 0;
    }
    uint64_t v15 = *a4;
    uint64_t v17 = -(uint64_t)**a4;
  }
  double v26 = (unsigned __int16 *)((char *)v15 + v17);
  if (*v26 >= 0x2Fu)
  {
    uint64_t v27 = v26[23];
    if (v27)
    {
      if ((*((unsigned __int8 *)v15 + v27) | 2) == 0xA) {
        return 0;
      }
    }
  }
  double v28 = sub_6A2704(*(void *)a1, a5, a4);
  uint64_t v29 = *a4;
  uint64_t v30 = (unsigned __int16 *)((char *)*a4 - **a4);
  unsigned int v31 = *v30;
  if (v31 >= 0x2F)
  {
    uint64_t v36 = v30[23];
    if (v30[23])
    {
      LOBYTE(v32) = 0;
      switch(*((unsigned char *)v29 + v36))
      {
        case 6:
        case 0xC:
        case 0x2B:
          uint64_t v32 = v30[5];
          if (!v30[5]) {
            goto LABEL_34;
          }
          if ((*((unsigned char *)v29 + v32 + 2) & 0x20) != 0) {
            goto LABEL_49;
          }
          LOBYTE(v32) = 0;
          double v33 = *a5;
          double v34 = (unsigned __int16 *)((char *)*a5 - **a5);
          if (*v34 < 0x2Fu) {
            goto LABEL_50;
          }
          goto LABEL_35;
        case 0x2C:
          goto LABEL_34;
        default:
LABEL_49:
          LOBYTE(v32) = *((unsigned char *)v29 + v36) != 14;
          double v33 = *a5;
          double v34 = (unsigned __int16 *)((char *)*a5 - **a5);
          if (*v34 < 0x2Fu) {
            goto LABEL_50;
          }
          goto LABEL_35;
      }
    }
    LOBYTE(v32) = 1;
LABEL_34:
    double v33 = *a5;
    double v34 = (unsigned __int16 *)((char *)*a5 - **a5);
    if (*v34 < 0x2Fu) {
      goto LABEL_50;
    }
  }
  else
  {
    LOBYTE(v32) = 1;
    double v33 = *a5;
    double v34 = (unsigned __int16 *)((char *)*a5 - **a5);
    if (*v34 < 0x2Fu) {
      goto LABEL_50;
    }
  }
LABEL_35:
  if (v34[23])
  {
    unsigned int v37 = *((unsigned __int8 *)v33 + v34[23]);
    BOOL v19 = v37 > 0x36;
    uint64_t v38 = (1 << v37) & 0x44000000000008;
    if (!v19 && v38 != 0)
    {
      uint64_t v40 = v34[5];
      if (v40)
      {
        if (*((unsigned char *)a5 + 38)) {
          int v41 = 2;
        }
        else {
          int v41 = 1;
        }
        int v42 = *(int *)((char *)v33 + v40);
        if ((v42 & v41) == 0) {
          LOBYTE(v32) = 1;
        }
        if (v32 & 1) == 0 && (((v28 < 0.0) ^ ((unsigned __int16)(v42 & 0x8000) >> 15))) {
          return 0;
        }
      }
    }
  }
LABEL_50:
  int v43 = (unsigned __int16 *)(*a3 - *(int *)*a3);
  if (*v43 >= 0x43u && (uint64_t v44 = v43[33]) != 0)
  {
    if (v31 < 0x2F || *(unsigned __int8 *)(*a3 + v44) >= *(_DWORD *)(a1 + 688)) {
      goto LABEL_68;
    }
  }
  else if (v31 < 0x2F || *(_DWORD *)(a1 + 688) == 0)
  {
    goto LABEL_68;
  }
  uint64_t v47 = v30[23];
  if (v47)
  {
    unsigned int v48 = *((unsigned __int8 *)v29 + v47);
    BOOL v19 = v48 > 0x2F;
    uint64_t v49 = (1 << v48) & 0xE2E040048000;
    if (!v19 && v49 != 0)
    {
      unint64_t v51 = sub_2E68E8(*(void *)a1, (uint64_t)a4[4]);
      if (v51 > 0xFFFFFFFEFFFFFFFFLL || !v51)
      {
        uint64_t result = sub_6906B4((char **)a4);
        long long v52 = *a4;
        unint64_t v53 = (unsigned __int16 *)((char *)*a4 - **a4);
        if (*v53 < 0xBu) {
          return result;
        }
        goto LABEL_69;
      }
    }
  }
LABEL_68:
  uint64_t result = 1;
  long long v52 = *a4;
  unint64_t v53 = (unsigned __int16 *)((char *)*a4 - **a4);
  if (*v53 < 0xBu) {
    return result;
  }
LABEL_69:
  uint64_t v54 = v53[5];
  if (v54 && (*((unsigned char *)v52 + v54 + 2) & 2) != 0)
  {
    unint64_t v55 = (unsigned __int16 *)(*a2 - *(int *)*a2);
    if (*v55 >= 0xBu)
    {
      uint64_t v56 = v55[5];
      if (v56) {
        return result & (*(unsigned __int8 *)(*a2 + v56 + 2) >> 1);
      }
    }
    return 0;
  }
  return result;
}

void sub_6B46BC(uint64_t a1, void *a2, uint64_t a3, int a4, uint64_t a5)
{
  *(_DWORD *)(a5 + 32) = 0;
  *(_OWORD *)a5 = 0u;
  *(_OWORD *)(a5 + 16) = 0u;
  *(_WORD *)(a5 + 36) = -1;
  *(unsigned char *)(a5 + 38) = 0;
  *(_OWORD *)(a5 + 40) = 0u;
  *(_OWORD *)(a5 + 56) = 0u;
  *(_DWORD *)(a5 + 72) = 0;
  *(_WORD *)(a5 + 76) = -1;
  *(unsigned char *)(a5 + 78) = 0;
  uint64_t v8 = (char **)(a5 + 80);
  *(void *)(a5 + 88) = *(void *)(a5 + 80);
  *(void *)(a5 + 104) = -1;
  *(_DWORD *)(a5 + 112) = 0;
  uint64_t v9 = sub_46C8EC(a2, a3);
  uint64_t v10 = *(void *)a1;
  unint64_t v80 = (int **)v9;
  uint64_t v11 = *(void *)(v9 + 32);
  unint64_t v12 = (int *)sub_2D5D58(*(void *)a1, v11 & 0xFFFFFFFFFFFFLL);
  unint64_t v82 = v8;
  if (*(unsigned char *)(v10 + 7772))
  {
    double v13 = sub_2DB8E0(v10 + 3896, v11, 0);
    BOOL v14 = &v13[-*(int *)v13];
    if (*(unsigned __int16 *)v14 < 5u)
    {
      uint64_t v15 = 0;
    }
    else
    {
      uint64_t v15 = *((unsigned __int16 *)v14 + 2);
      if (v15) {
        v15 += (uint64_t)&v13[*(unsigned int *)&v13[v15]];
      }
    }
    uint64_t v16 = v15 + 4 * WORD2(v11) + 4 + *(unsigned int *)(v15 + 4 * WORD2(v11) + 4);
  }
  else
  {
    uint64_t v16 = 0;
  }
  *(void *)&long long v90 = v12;
  *((void *)&v90 + 1) = v16;
  *(void *)&long long v91 = sub_2E5C38(v10, v11 & 0xFFFFFFFFFFFFLL, 1);
  *((void *)&v91 + 1) = v17;
  LODWORD(v92) = v11;
  WORD2(v92) = WORD2(v11);
  unint64_t v18 = a3 + 1;
  BYTE6(v92) = (v11 & 0xFF000000000000) != 0;
  uint64_t v19 = sub_46C8EC(a2, a3 + 1);
  uint64_t v20 = *(void *)a1;
  unint64_t v84 = (int **)v19;
  uint64_t v21 = *(void *)(v19 + 32);
  BOOL v83 = (int *)sub_2D5D58(*(void *)a1, v21 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v20 + 7772))
  {
    unsigned int v22 = sub_2DB8E0(v20 + 3896, v21, 0);
    uint64_t v23 = &v22[-*(int *)v22];
    if (*(unsigned __int16 *)v23 < 5u)
    {
      uint64_t v24 = 0;
    }
    else
    {
      uint64_t v24 = *((unsigned __int16 *)v23 + 2);
      if (v24) {
        v24 += (uint64_t)&v22[*(unsigned int *)&v22[v24]];
      }
    }
    uint64_t v25 = v24 + 4 * WORD2(v21) + 4 + *(unsigned int *)(v24 + 4 * WORD2(v21) + 4);
  }
  else
  {
    uint64_t v25 = 0;
  }
  *(void *)&long long v86 = v83;
  *((void *)&v86 + 1) = v25;
  uint64_t v87 = sub_2E5C38(v20, v21 & 0xFFFFFFFFFFFFLL, 1);
  uint64_t v88 = v26;
  LODWORD(v89) = v21;
  WORD2(v89) = WORD2(v21);
  BYTE6(v89) = (v21 & 0xFF000000000000) != 0;
  long long v27 = v91;
  *(_OWORD *)a5 = v90;
  *(_OWORD *)(a5 + 16) = v27;
  *(void *)(a5 + 32) = v92;
  double v28 = (unsigned __int16 *)((char *)v12 - *v12);
  unsigned int v29 = *v28;
  if (v29 < 0x2F
    || (uint64_t v30 = v28[23]) == 0
    || ((unsigned int v31 = *((unsigned __int8 *)v12 + v30), v32 = v31 > 0x36, v33 = (1 << v31) & 0x44000000000008, !v32)
      ? (BOOL v34 = v33 == 0)
      : (BOOL v34 = 1),
        v34))
  {
    uint64_t v39 = (unsigned __int16 *)((char *)v83 - *v83);
    if (*v39 >= 0x2Fu && (uint64_t v40 = v39[23]) != 0)
    {
      unsigned int v41 = *((unsigned __int8 *)v83 + v40);
      BOOL v32 = v41 > 0x36;
      unint64_t v42 = (0x44000000000008uLL >> v41) & 1;
      if (v32) {
        int v35 = 0;
      }
      else {
        int v35 = v42;
      }
      unsigned int v37 = v82;
      uint64_t v36 = a3;
      int v38 = a4;
      if (a3) {
        goto LABEL_37;
      }
    }
    else
    {
      int v35 = 0;
      unsigned int v37 = v82;
      uint64_t v36 = a3;
      int v38 = a4;
      if (a3) {
        goto LABEL_37;
      }
    }
    if (v29 < 0x2F || (LODWORD(v30) = v28[23]) == 0)
    {
      int v43 = 1;
      goto LABEL_38;
    }
  }
  else
  {
    int v35 = 0;
    uint64_t v36 = a3;
    if (a3)
    {
      unsigned int v37 = v82;
      int v38 = a4;
LABEL_37:
      int v43 = v35 | sub_663238(a1 + 3048, v80) ^ 1;
      goto LABEL_38;
    }
    unsigned int v37 = v82;
    int v38 = a4;
  }
  unsigned int v44 = *((unsigned __int8 *)v12 + v30);
  int v43 = 1;
  if (v44 <= 0x36 && ((1 << v44) & 0x44000000000008) != 0) {
    goto LABEL_37;
  }
LABEL_38:
  if (v38 && (sub_663238(a1 + 3048, v84) & v43) == 1)
  {
    sub_6A51D8(a1, &v90, v37, 0);
    uint64_t v45 = *(void *)(a5 + 88);
    unint64_t v46 = sub_46C760(a2);
    if (v18 <= v46) {
      unint64_t v47 = v46;
    }
    else {
      unint64_t v47 = a3 + 1;
    }
    if (v18 < v46) {
      goto LABEL_53;
    }
  }
  else
  {
    sub_2E44A4(*(void *)a1, (uint64_t)&v90, v37);
    sub_6DBA6C(a1 + 1160, (uint64_t)&v90, (uint64_t *)v37);
    uint64_t v45 = *(void *)(a5 + 88);
    unint64_t v48 = sub_46C760(a2);
    if (v18 <= v48) {
      unint64_t v47 = v48;
    }
    else {
      unint64_t v47 = a3 + 1;
    }
    if (v18 < v48)
    {
      while (1)
      {
LABEL_53:
        uint64_t v51 = sub_46C8EC(a2, v18);
        uint64_t v45 = *(void *)(a5 + 80);
        uint64_t v49 = *(void *)(a5 + 88);
        if (v45 != v49)
        {
          while (1)
          {
            uint64_t v52 = *(void *)(v45 + 32);
            if (__PAIR64__(*(unsigned __int16 *)(v51 + 36), *(_DWORD *)(v51 + 32)) == __PAIR64__(WORD2(v52), v52)
              && ((v52 & 0xFF000000000000) == 0) != ((unint64_t)*(unsigned __int8 *)(v51 + 38) << 48 != 0))
            {
              break;
            }
            v45 += 40;
            if (v45 == v49) {
              goto LABEL_52;
            }
          }
        }
        if (v45 != v49) {
          break;
        }
LABEL_52:
        if (++v18 == v47)
        {
          unint64_t v50 = -1;
          uint64_t v45 = *(void *)(a5 + 88);
          if (*(unsigned char *)(a1 + 1040)) {
            goto LABEL_62;
          }
          goto LABEL_71;
        }
      }
      unint64_t v50 = v18 + 1;
      if (!*(unsigned char *)(a1 + 1040)) {
        goto LABEL_71;
      }
      goto LABEL_62;
    }
  }
  uint64_t v49 = *(void *)(a5 + 88);
  unint64_t v50 = -1;
  if (!*(unsigned char *)(a1 + 1040)) {
    goto LABEL_71;
  }
LABEL_62:
  if (v45 != v49)
  {
LABEL_71:
    uint64_t v49 = v45;
    goto LABEL_75;
  }
  if (sub_663238(a1 + 3048, v84))
  {
    uint64_t v53 = sub_6B4D9C((uint64_t *)a1, a2, v36, (long long **)v37);
    if (v53 != -1)
    {
      uint64_t v54 = v53;
      uint64_t v55 = sub_46C8EC(a2, v53);
      uint64_t v56 = *(void *)(a5 + 80);
      uint64_t v57 = *(void *)(a5 + 88);
      if (v56 == v57)
      {
        uint64_t v49 = *(void *)(a5 + 80);
      }
      else
      {
        unint64_t v58 = *(void *)(v55 + 32);
        uint64_t v59 = v58 & 0xFFFFFFFFFFFFLL;
        uint64_t v60 = HIWORD(v58) & 1;
        uint64_t v49 = *(void *)(a5 + 80);
        while (1)
        {
          uint64_t v61 = *(void *)(v49 + 32);
          if (v61 & 0xFFFFFFFFFFFFLL) == v59 && ((v60 ^ ((v61 & 0xFF000000000000) == 0))) {
            break;
          }
          v49 += 40;
          if (v49 == v57)
          {
            uint64_t v49 = *(void *)(a5 + 88);
            break;
          }
        }
      }
      *(void *)(a5 + 104) = 0xCCCCCCCCCCCCCCCDLL * ((v49 - v56) >> 3);
      unint64_t v50 = v54 + 1;
    }
  }
LABEL_75:
  char v62 = sub_6B52A8(a1, a2, v36, v50);
  if (v49 == *(void *)(a5 + 88) || (v62 & 1) != 0) {
    goto LABEL_101;
  }
  unint64_t v63 = sub_46C760(a2);
  if (v50 != -1)
  {
    unint64_t v64 = v36 + 2;
    if (v64 < v63)
    {
      if ((uint64_t v65 = (unsigned __int16 *)((char *)v83 - *v83), *v65 < 0x2Fu)
        || (uint64_t v66 = v65[23]) == 0
        || ((v67 = *((unsigned __int8 *)v83 + v66), BOOL v32 = v67 > 0x36, v68 = (1 << v67) & 0x44000000000008, !v32)
          ? (BOOL v69 = v68 == 0)
          : (BOOL v69 = 1),
            v69))
      {
        if (sub_663238(a1 + 3048, v84))
        {
          sub_46B058();
          BOOL v71 = v70;
          unint64_t v73 = v64 + v72;
          sub_46B058();
          if (sub_6C88C0(v71, v73, v75, v74 + v50))
          {
LABEL_101:
            if (sub_663238(a1 + 3048, v84))
            {
              sub_2E44A4(*(void *)a1, (uint64_t)&v90, v37);
              sub_6DBA6C(a1 + 1160, (uint64_t)&v90, (uint64_t *)v37);
              uint64_t v49 = *(void *)(a5 + 80);
              uint64_t v76 = *(void *)(a5 + 88);
              if (v49 != v76)
              {
                while (1)
                {
                  uint64_t v77 = *(void *)(v49 + 32);
                  if ((v77 & 0xFFFFFFFFFFFFLL) == (v89 & 0xFFFFFFFFFFFFLL)
                    && (HIWORD(v89) & 1) != ((v77 & 0xFF000000000000) == 0))
                  {
                    break;
                  }
                  v49 += 40;
                  if (v49 == v76)
                  {
                    uint64_t v78 = *(void *)(a5 + 80);
                    goto LABEL_97;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  uint64_t v78 = *(void *)(a5 + 80);
  if (v49 == *(void *)(a5 + 88))
  {
LABEL_97:
    *(void *)(a5 + 88) = v78;
    sub_64F484(v37, &v86);
    unint64_t v79 = 0;
  }
  else
  {
    unint64_t v79 = 0xCCCCCCCCCCCCCCCDLL * ((v49 - v78) >> 3);
  }
  *(void *)(a5 + 104) = v79;
}

uint64_t sub_6B4D9C(uint64_t *a1, void *a2, uint64_t a3, long long **a4)
{
  uint64_t v8 = sub_46C8EC(a2, a3);
  uint64_t v9 = *a1;
  uint64_t v10 = *(void *)(v8 + 32);
  uint64_t v11 = sub_2D5D58(*a1, v10 & 0xFFFFFFFFFFFFLL);
  unint64_t v58 = a4;
  if (*(unsigned char *)(v9 + 7772))
  {
    unint64_t v12 = sub_2DB8E0(v9 + 3896, v10, 0);
    double v13 = &v12[-*(int *)v12];
    if (*(unsigned __int16 *)v13 < 5u)
    {
      uint64_t v14 = 0;
    }
    else
    {
      uint64_t v14 = *((unsigned __int16 *)v13 + 2);
      if (v14) {
        v14 += (uint64_t)&v12[*(unsigned int *)&v12[v14]];
      }
    }
    uint64_t v15 = v14 + 4 * WORD2(v10) + 4 + *(unsigned int *)(v14 + 4 * WORD2(v10) + 4);
  }
  else
  {
    uint64_t v15 = 0;
  }
  v72[0] = v11;
  v72[1] = v15;
  v72[2] = sub_2E5C38(v9, v10 & 0xFFFFFFFFFFFFLL, 1);
  v72[3] = v16;
  int v73 = v10;
  __int16 v74 = WORD2(v10);
  unint64_t v17 = a3 + 1;
  BOOL v75 = (v10 & 0xFF000000000000) != 0;
  unint64_t v18 = sub_46C760(a2);
  if (a3 + 1 > v18) {
    unint64_t v19 = a3 + 1;
  }
  else {
    unint64_t v19 = v18;
  }
  if (v17 >= v18) {
    return -1;
  }
  uint64_t v20 = 0;
  while (1)
  {
    uint64_t v21 = sub_46C8EC(a2, v17);
    if ((sub_663238((uint64_t)(a1 + 381), (int **)v21) & 1) == 0) {
      break;
    }
    v20 += sub_46CCC8(a2, v17++, v22);
    if (v19 == v17) {
      return -1;
    }
  }
  uint64_t v23 = *(void *)(v21 + 32);
  unint64_t v24 = *(void *)(v8 + 32);
  if ((v23 & 0xFFFFFFFFFFFFLL) == (v24 & 0xFFFFFFFFFFFFLL) && ((v23 & 0xFF000000000000) == 0) != (HIWORD(v24) & 1)) {
    return -1;
  }
  uint64_t v25 = *a1;
  uint64_t v26 = sub_2D5D58(*a1, v24 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v25 + 7772))
  {
    long long v27 = sub_2DB8E0(v25 + 3896, v24, 0);
    double v28 = &v27[-*(int *)v27];
    if (*(unsigned __int16 *)v28 < 5u)
    {
      uint64_t v29 = 0;
    }
    else
    {
      uint64_t v29 = *((unsigned __int16 *)v28 + 2);
      if (v29) {
        v29 += (uint64_t)&v27[*(unsigned int *)&v27[v29]];
      }
    }
    uint64_t v30 = v29 + 4 * WORD2(v24) + 4 + *(unsigned int *)(v29 + 4 * WORD2(v24) + 4);
  }
  else
  {
    uint64_t v30 = 0;
  }
  *(void *)&long long v66 = v26;
  *((void *)&v66 + 1) = v30;
  uint64_t v67 = sub_2E5C38(v25, v24 & 0xFFFFFFFFFFFFLL, 1);
  uint64_t v68 = v31;
  int v69 = v24;
  __int16 v70 = WORD2(v24);
  BOOL v71 = (v24 & 0xFF000000000000) != 0;
  uint64_t v32 = *a1;
  uint64_t v33 = *(void *)(v21 + 32);
  BOOL v34 = (void *)sub_2D5D58(*a1, v33 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v32 + 7772))
  {
    int v35 = sub_2DB8E0(v32 + 3896, v33, 0);
    uint64_t v36 = &v35[-*(int *)v35];
    if (*(unsigned __int16 *)v36 < 5u)
    {
      uint64_t v37 = 0;
    }
    else
    {
      uint64_t v37 = *((unsigned __int16 *)v36 + 2);
      if (v37) {
        v37 += (uint64_t)&v35[*(unsigned int *)&v35[v37]];
      }
    }
    uint64_t v38 = v37 + 4 * WORD2(v33) + 4 + *(unsigned int *)(v37 + 4 * WORD2(v33) + 4);
  }
  else
  {
    uint64_t v38 = 0;
  }
  long long __p = v34;
  uint64_t v60 = (void *)v38;
  uint64_t v61 = sub_2E5C38(v32, v33 & 0xFFFFFFFFFFFFLL, 1);
  uint64_t v62 = v39;
  int v63 = v33;
  __int16 v64 = WORD2(v33);
  BOOL v65 = (v33 & 0xFF000000000000) != 0;
  if (sub_35E640()) {
    return -1;
  }
  uint64_t v41 = *a1;
  uint64_t v42 = *(void *)(v21 + 32);
  uint64_t v43 = sub_2D5D58(*a1, v42 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v41 + 7772))
  {
    unsigned int v44 = sub_2DB8E0(v41 + 3896, v42, 0);
    uint64_t v45 = &v44[-*(int *)v44];
    if (*(unsigned __int16 *)v45 < 5u)
    {
      uint64_t v46 = 0;
    }
    else
    {
      uint64_t v46 = *((unsigned __int16 *)v45 + 2);
      if (v46) {
        v46 += (uint64_t)&v44[*(unsigned int *)&v44[v46]];
      }
    }
    uint64_t v47 = v46 + 4 * WORD2(v42) + 4 + *(unsigned int *)(v46 + 4 * WORD2(v42) + 4);
  }
  else
  {
    uint64_t v47 = 0;
  }
  *(void *)&long long v66 = v43;
  *((void *)&v66 + 1) = v47;
  uint64_t v67 = sub_2E5C38(v41, v42 & 0xFFFFFFFFFFFFLL, 1);
  uint64_t v68 = v48;
  int v69 = v42;
  __int16 v70 = WORD2(v42);
  BOOL v71 = (v42 & 0xFF000000000000) != 0;
  long long __p = 0;
  uint64_t v60 = 0;
  uint64_t v61 = 0;
  uint64_t v49 = *v58;
  unint64_t v50 = v58[1];
  if (*v58 != v50)
  {
    do
    {
      if (a1[131] >= v20) {
        uint64_t v51 = v20;
      }
      else {
        uint64_t v51 = a1[131];
      }
      if (sub_6B5B40(a1, v49, (uint64_t)&v66, v51))
      {
        v76[0] = *((void *)v49 + 4);
        sub_2D5B74((char **)&__p, v76);
      }
      uint64_t v49 = (long long *)((char *)v49 + 40);
    }
    while (v49 != v50);
    if (__p != v60)
    {
      uint64_t v52 = sub_6D0990(*v58, v58[1], (uint64_t *)&__p);
      if (v58[1] != v52) {
        v58[1] = v52;
      }
    }
  }
  sub_64F484((char **)v58, &v66);
  uint64_t v53 = *v58;
  uint64_t v54 = (int **)v58[1];
  unint64_t v55 = 126 - 2 * __clz(0xCCCCCCCCCCCCCCCDLL * (((char *)v54 - (char *)*v58) >> 3));
  BOOL v56 = v54 == (int **)*v58;
  v76[0] = (uint64_t)a1;
  v76[1] = (uint64_t)v72;
  if (v56) {
    uint64_t v57 = 0;
  }
  else {
    uint64_t v57 = v55;
  }
  sub_6D4CAC(v53, v54, v76, v57, 1);
  if (__p)
  {
    uint64_t v60 = __p;
    operator delete(__p);
  }
  return v17;
}

void sub_6B5280(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6B52A8(uint64_t a1, void *a2, uint64_t a3, unint64_t a4)
{
  if (*(unsigned char *)(a1 + 546)) {
    BOOL v4 = a3 == -1;
  }
  else {
    BOOL v4 = 1;
  }
  if (v4 || a4 == -1) {
    return 0;
  }
  uint64_t v7 = a1;
  unint64_t v8 = a3 + 1;
  double v9 = 0.0;
  if (a3 + 1 > a4) {
    unint64_t v10 = a3 + 1;
  }
  else {
    unint64_t v10 = a4;
  }
  unint64_t v73 = v10;
  if (a3 + 1 < a4)
  {
    uint64_t v11 = 0;
    uint64_t v12 = a1 + 3048;
    double v13 = 0.0;
    unint64_t v69 = a4 - 1;
    uint64_t v70 = a3;
    uint64_t v72 = (uint64_t *)(a1 + 3048);
    do
    {
      uint64_t v14 = (int **)sub_46C8EC(a2, v8);
      if (*(unsigned char *)(v7 + 560) && sub_6633B4(v12, v14)) {
        continue;
      }
      uint64_t v15 = (unsigned __int16 *)((char *)*v14 - **v14);
      if (*v15 >= 0x2Fu)
      {
        uint64_t v16 = v15[23];
        if (v16)
        {
          if (*((unsigned char *)*v14 + v16) == 14) {
            continue;
          }
        }
      }
      uint64_t v17 = *(void *)v7;
      unint64_t v18 = (unint64_t)v14[4];
      unint64_t v19 = (int *)sub_2D5D58(*(void *)v7, v18 & 0xFFFFFFFFFFFFLL);
      if (*(unsigned char *)(v17 + 7772))
      {
        uint64_t v20 = sub_2DB8E0(v17 + 3896, v18, 0);
        uint64_t v21 = &v20[-*(int *)v20];
        if (*(unsigned __int16 *)v21 < 5u)
        {
          uint64_t v22 = 0;
        }
        else
        {
          uint64_t v22 = *((unsigned __int16 *)v21 + 2);
          if (v22) {
            v22 += (uint64_t)&v20[*(unsigned int *)&v20[v22]];
          }
        }
        uint64_t v23 = v22 + 4 * WORD2(v18) + 4 + *(unsigned int *)(v22 + 4 * WORD2(v18) + 4);
      }
      else
      {
        uint64_t v23 = 0;
      }
      uint64_t v24 = sub_2E5C38(v17, v18 & 0xFFFFFFFFFFFFLL, 1);
      uint64_t v78 = v19;
      uint64_t v79 = v23;
      uint64_t v80 = v24;
      uint64_t v81 = v25;
      int v82 = v18;
      __int16 v83 = WORD2(v18);
      BOOL v84 = (v18 & 0xFF000000000000) != 0;
      uint64_t v12 = (uint64_t)v72;
      if (sub_662728(v72, &v78))
      {
        uint64_t v7 = a1;
        continue;
      }
      uint64_t v26 = (int **)sub_46C8EC(a2, v70);
      long long v27 = (unsigned __int16 *)((char *)*v26 - **v26);
      unsigned int v28 = *v27;
      if (*((unsigned char *)v26 + 38))
      {
        if (v28 >= 0x49)
        {
          unsigned int v29 = v27[36];
          if (v29) {
            goto LABEL_34;
          }
        }
      }
      else if (v28 >= 0x4B)
      {
        unsigned int v29 = v27[37];
        if (v29)
        {
LABEL_34:
          __int16 v30 = *(_WORD *)((char *)*v26 + v29);
          goto LABEL_36;
        }
      }
      __int16 v30 = -1;
LABEL_36:
      uint64_t v7 = a1;
      uint64_t v31 = *v14;
      uint64_t v32 = (unsigned __int16 *)((char *)*v14 - **v14);
      unsigned int v33 = *v32;
      if (*((unsigned char *)v14 + 38))
      {
        if (v33 >= 0x4B)
        {
          int v34 = v32[37];
          if (v32[37]) {
            goto LABEL_42;
          }
        }
      }
      else if (v33 >= 0x49)
      {
        int v34 = v32[36];
        if (v32[36])
        {
LABEL_42:
          int v35 = *(unsigned __int16 *)&v31[v34];
          goto LABEL_44;
        }
      }
      int v35 = 0xFFFF;
LABEL_44:
      unsigned __int16 v36 = v30 + 18000;
      unsigned __int16 v37 = v30 - 18000;
      if ((unsigned __int16)(v36 >> 5) < 0x465u) {
        unsigned __int16 v37 = v36;
      }
      int v38 = v35 - v37;
      if (v38 > 18000) {
        v38 -= 36000;
      }
      if (v38 < -17999) {
        v38 += 36000;
      }
      double v39 = (double)v38 / 100.0;
      double v9 = v9 + v39;
      if (v8 >= v69) {
        goto LABEL_72;
      }
      if (!*((unsigned char *)v14 + 38))
      {
        if (v33 < 0x49)
        {
          int v40 = 0xFFFF;
LABEL_64:
          __int16 v42 = -1;
          goto LABEL_65;
        }
        if (v32[36])
        {
          int v40 = *(unsigned __int16 *)&v31[v32[36]];
          if (v33 < 0x4B) {
            goto LABEL_64;
          }
        }
        else
        {
          int v40 = 0xFFFF;
          if (v33 < 0x4B) {
            goto LABEL_64;
          }
        }
        int v41 = v32[37];
        if (!v41) {
          goto LABEL_64;
        }
        goto LABEL_62;
      }
      if (v33 >= 0x4B)
      {
        if (v32[37])
        {
          int v40 = *(unsigned __int16 *)&v31[v32[37]];
          int v41 = v32[36];
          if (!v41) {
            goto LABEL_64;
          }
        }
        else
        {
          int v40 = 0xFFFF;
          int v41 = v32[36];
          if (!v41) {
            goto LABEL_64;
          }
        }
        goto LABEL_62;
      }
      int v40 = 0xFFFF;
      __int16 v42 = -1;
      if (v33 >= 0x49)
      {
        int v41 = v32[36];
        if (!v41) {
          goto LABEL_64;
        }
LABEL_62:
        __int16 v42 = *(_WORD *)&v31[v41];
      }
LABEL_65:
      unsigned __int16 v43 = v42 + 18000;
      if ((unsigned __int16)((unsigned __int16)(v42 + 18000) >> 5) >= 0x465u) {
        unsigned __int16 v43 = v42 - 18000;
      }
      int v44 = v43 - v40;
      if (v44 > 18000) {
        v44 -= 36000;
      }
      if (v44 < -17999) {
        v44 += 36000;
      }
      double v9 = v9 + (double)v44 / 100.0;
LABEL_72:
      double v45 = fabs(v39);
      if (v45 <= *(double *)(a1 + 200))
      {
        double v39 = v13;
      }
      else
      {
        if (v11 > *(void *)(a1 + 552) && v13 != 0.0 && v13 > 0.0 == v39 <= 0.0) {
          return 1;
        }
        uint64_t v11 = 0;
      }
      v11 += sub_46CCC8(a2, v8, v45);
      uint64_t v70 = v8;
      double v13 = v39;
    }
    while (v73 != ++v8);
  }
  if (fabs(v9) <= 180.0) {
    return 0;
  }
  uint64_t v46 = sub_46C8EC(a2, a3);
  uint64_t v47 = *(void *)v7;
  uint64_t v48 = *(void *)(v46 + 32);
  uint64_t v49 = (int *)sub_2D5D58(*(void *)v7, v48 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v47 + 7772))
  {
    unint64_t v50 = sub_2DB8E0(v47 + 3896, v48, 0);
    uint64_t v51 = &v50[-*(int *)v50];
    if (*(unsigned __int16 *)v51 < 5u)
    {
      uint64_t v52 = 0;
    }
    else
    {
      uint64_t v52 = *((unsigned __int16 *)v51 + 2);
      if (v52) {
        v52 += (uint64_t)&v50[*(unsigned int *)&v50[v52]];
      }
    }
    uint64_t v53 = v52 + 4 * WORD2(v48) + 4 + *(unsigned int *)(v52 + 4 * WORD2(v48) + 4);
  }
  else
  {
    uint64_t v53 = 0;
  }
  uint64_t v54 = sub_2E5C38(v47, v48 & 0xFFFFFFFFFFFFLL, 1);
  uint64_t v78 = v49;
  uint64_t v79 = v53;
  uint64_t v80 = v54;
  uint64_t v81 = v55;
  int v82 = v48;
  __int16 v83 = WORD2(v48);
  BOOL v84 = (v48 & 0xFF000000000000) != 0;
  uint64_t v56 = sub_46C8EC(a2, a4 - 1);
  uint64_t v57 = *(void *)v7;
  uint64_t v58 = *(void *)(v56 + 32);
  uint64_t v59 = (int *)sub_2D5D58(*(void *)v7, v58 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v57 + 7772))
  {
    uint64_t v60 = sub_2DB8E0(v57 + 3896, v58, 0);
    uint64_t v61 = &v60[-*(int *)v60];
    if (*(unsigned __int16 *)v61 < 5u)
    {
      uint64_t v62 = 0;
    }
    else
    {
      uint64_t v62 = *((unsigned __int16 *)v61 + 2);
      if (v62) {
        v62 += (uint64_t)&v60[*(unsigned int *)&v60[v62]];
      }
    }
    int v63 = (int *)(v62 + 4 * WORD2(v58) + 4 + *(unsigned int *)(v62 + 4 * WORD2(v58) + 4));
  }
  else
  {
    int v63 = 0;
  }
  uint64_t v64 = 1;
  v74[0] = v59;
  v74[1] = v63;
  v74[2] = (int *)sub_2E5C38(v57, v58 & 0xFFFFFFFFFFFFLL, 1);
  v74[3] = v65;
  int v75 = v58;
  __int16 v76 = WORD2(v58);
  BOOL v77 = (v58 & 0xFF000000000000) != 0;
  if (sub_69C254(v7, &v78, v74)) {
    return 0;
  }
  return v64;
}

uint64_t sub_6B58A4(uint64_t a1, uint64_t a2, int ***a3, uint64_t a4)
{
  BOOL v19 = fabs(sub_6D82EC(a1 + 1160, (int **)a2, (int **)a4)) <= *(double *)(a1 + 200);
  unint64_t v8 = sub_2E68E8(*(void *)a1, *(void *)(a2 + 32));
  BOOL v9 = v8 > 0xFFFFFFFEFFFFFFFFLL || v8 == 0;
  if (v9
    || ((unint64_t v10 = sub_2E68E8(*(void *)a1, *(void *)(a4 + 32)), v10 <= 0xFFFFFFFEFFFFFFFFLL)
      ? (BOOL v11 = v10 == 0)
      : (BOOL v11 = 1),
        v11))
  {
    char v12 = 0;
  }
  else
  {
    char v12 = sub_2E79EC(*(void *)a1, *(void *)(a2 + 32), *(void *)(a4 + 32));
  }
  char v18 = v12;
  uint64_t v14 = *a3;
  double v13 = a3[1];
  v17[0] = (int **)a4;
  v17[1] = (int **)a2;
  void v17[2] = (int **)a1;
  v17[3] = (int **)&v19;
  v17[4] = (int **)&v18;
  if (v14 == v13) {
    return 0;
  }
  uint64_t v15 = 0;
  do
  {
    v15 += sub_6D4880(v17, v14);
    v14 += 5;
  }
  while (v14 != v13);
  return v15;
}

uint64_t sub_6B59AC(uint64_t a1, unsigned int *a2)
{
  uint64_t v3 = *(void *)a1;
  sub_2D5904(*(void *)a1, a2, 0, (char **)(*(void *)a1 + 7800));
  BOOL v4 = *(unsigned char **)(v3 + 7800);
  uint64_t v5 = *(unsigned char **)(v3 + 7808);
  uint64_t v6 = v5 - v4;
  if (v5 == v4) {
    return 0;
  }
  if (v6 < 0) {
    sub_2E00();
  }
  uint64_t v7 = (char *)operator new(v5 - v4);
  memcpy(v7, v4, v6 - 1);
  uint64_t v8 = 0;
  uint64_t v9 = 8 * (v6 >> 3);
  do
  {
    uint64_t v10 = *(void *)&v7[v8];
    uint64_t v11 = *(void *)a1;
    char v12 = (int *)sub_2D5D58(*(void *)a1, v10 & 0xFFFFFFFFFFFFLL);
    if (*(unsigned char *)(v11 + 7772)) {
      sub_2DB8E0(v11 + 3896, v10, 0);
    }
    sub_2E5C38(v11, v10 & 0xFFFFFFFFFFFFLL, 1);
    double v13 = (unsigned __int16 *)((char *)v12 - *v12);
    if (*v13 >= 0x2Fu)
    {
      uint64_t v14 = v13[23];
      if (v14)
      {
        int v15 = *((unsigned __int8 *)v12 + v14);
        if (v15 == 9
          || (v15 != 20 ? (BOOL v16 = *(unsigned char *)(a1 + 695) == 0) : (BOOL v16 = 1), !v16 ? (v17 = 43) : (v17 = 20), v15 == v17))
        {
          uint64_t v18 = 1;
          goto LABEL_19;
        }
      }
    }
    v8 += 8;
  }
  while (v9 != v8);
  uint64_t v18 = 0;
LABEL_19:
  operator delete(v7);
  return v18;
}

void sub_6B5B18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6B5B40(uint64_t *a1, long long *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = 0;
  BOOL v93 = 0;
  unint64_t v94 = 0;
  uint64_t v95 = 0;
  uint64_t v8 = (unsigned __int16 *)(*(void *)a2 - **(int **)a2);
  if (*v8 >= 9u)
  {
    uint64_t v7 = v8[4];
    if (v8[4]) {
      uint64_t v7 = *(unsigned int *)(*(void *)a2 + v7);
    }
  }
  *(void *)&long long v96 = v7;
  sub_69070C((char **)&v93, a2, &v96);
  uint64_t v9 = v93;
  if (v94 - (unsigned char *)v93 >= 49)
  {
    unint64_t v10 = ((v94 - (unsigned char *)v93) / 0x30uLL - 2) >> 1;
    uint64_t v11 = *((void *)v94 - 1);
    if (*((void *)v93 + 6 * v10 + 5) > v11)
    {
      char v12 = v94 - 48;
      long long v99 = *((_OWORD *)v94 - 3);
      long long v100 = *((_OWORD *)v94 - 2);
      uint64_t v101 = *((void *)v94 - 2);
      do
      {
        double v13 = v12;
        char v12 = (char *)&v9[6 * v10];
        long long v14 = *(_OWORD *)v12;
        long long v15 = *((_OWORD *)v12 + 1);
        *((void *)v13 + 4) = *((void *)v12 + 4);
        *(_OWORD *)double v13 = v14;
        *((_OWORD *)v13 + 1) = v15;
        *((void *)v13 + 5) = *((void *)v12 + 5);
        if (!v10) {
          break;
        }
        unint64_t v10 = (v10 - 1) >> 1;
      }
      while (v9[6 * v10 + 5] > v11);
      *(_OWORD *)char v12 = v99;
      *((_OWORD *)v12 + 1) = v100;
      *((void *)v12 + 4) = v101;
      *((void *)v12 + 5) = v11;
    }
  }
  long long v90 = 0;
  long long v91 = 0;
  uint64_t v92 = 0;
  *(void *)&long long v99 = *((unsigned int *)a2 + 8) | ((unint64_t)*((unsigned __int16 *)a2 + 18) << 32);
  sub_29603C(&v90, &v99);
  long long __p = 0;
  uint64_t v88 = 0;
  uint64_t v89 = 0;
  BOOL v16 = v93;
  int v17 = v94;
  if (v93 == v94)
  {
    uint64_t v79 = 0;
    goto LABEL_79;
  }
  do
  {
    long long v18 = *v16;
    long long v19 = v16[1];
    uint64_t v20 = *((void *)v16 + 5);
    uint64_t v86 = *((void *)v16 + 4);
    v85[0] = v18;
    v85[1] = v19;
    if (v17 - (unsigned char *)v16 >= 49)
    {
      uint64_t v21 = 0;
      int64_t v22 = 0xAAAAAAAAAAAAAAABLL * ((v17 - (unsigned char *)v16) >> 4);
      long long v96 = *v16;
      long long v97 = v16[1];
      uint64_t v98 = *((void *)v16 + 4);
      uint64_t v23 = v16;
      do
      {
        uint64_t v26 = v21 + 1;
        long long v27 = (char *)&v23[3 * v21 + 3];
        uint64_t v28 = (2 * v21) | 1;
        uint64_t v29 = 2 * v21 + 2;
        if (v29 < v22)
        {
          uint64_t v30 = *((void *)&v23[3 * v26 + 2] + 1);
          uint64_t v31 = *((void *)v27 + 11);
          v27 += 48 * (v30 > v31);
          if (v30 > v31) {
            uint64_t v28 = v29;
          }
        }
        long long v24 = *(_OWORD *)v27;
        long long v25 = *((_OWORD *)v27 + 1);
        *((void *)v23 + 4) = *((void *)v27 + 4);
        _OWORD *v23 = v24;
        v23[1] = v25;
        *((void *)v23 + 5) = *((void *)v27 + 5);
        uint64_t v23 = v27;
        uint64_t v21 = v28;
      }
      while (v28 <= (uint64_t)((unint64_t)(v22 - 2) >> 1));
      uint64_t v32 = (long long *)(v17 - 48);
      if (v27 == v17 - 48)
      {
        long long v43 = v97;
        uint64_t v44 = v98;
        *(_OWORD *)long long v27 = v96;
        *((_OWORD *)v27 + 1) = v43;
        *((void *)v27 + 4) = v44;
        *((void *)v27 + 5) = v20;
      }
      else
      {
        long long v33 = *v32;
        long long v34 = *((_OWORD *)v17 - 2);
        *((void *)v27 + 4) = *((void *)v17 - 2);
        *(_OWORD *)long long v27 = v33;
        *((_OWORD *)v27 + 1) = v34;
        *((void *)v27 + 5) = *((void *)v17 - 1);
        long long *v32 = v96;
        *((_OWORD *)v17 - 2) = v97;
        *((void *)v17 - 2) = v98;
        *((void *)v17 - 1) = v20;
        uint64_t v35 = v27 - (char *)v16 + 48;
        if (v35 >= 49)
        {
          unint64_t v36 = (v35 / 0x30uLL - 2) >> 1;
          uint64_t v37 = *((void *)v27 + 5);
          if (*((void *)&v16[3 * v36 + 2] + 1) > v37)
          {
            long long v38 = *(_OWORD *)v27;
            long long v39 = *((_OWORD *)v27 + 1);
            uint64_t v101 = *((void *)v27 + 4);
            long long v99 = v38;
            long long v100 = v39;
            do
            {
              int v40 = v27;
              long long v27 = (char *)&v16[3 * v36];
              long long v41 = *(_OWORD *)v27;
              long long v42 = *((_OWORD *)v27 + 1);
              *((void *)v40 + 4) = *((void *)v27 + 4);
              *(_OWORD *)int v40 = v41;
              *((_OWORD *)v40 + 1) = v42;
              *((void *)v40 + 5) = *((void *)v27 + 5);
              if (!v36) {
                break;
              }
              unint64_t v36 = (v36 - 1) >> 1;
            }
            while (*((void *)&v16[3 * v36 + 2] + 1) > v37);
            *(_OWORD *)long long v27 = v99;
            *((_OWORD *)v27 + 1) = v100;
            *((void *)v27 + 4) = v101;
            *((void *)v27 + 5) = v37;
          }
        }
      }
      int v17 = v94;
    }
    unint64_t v94 = v17 - 48;
    sub_2E44A4(*a1, (uint64_t)v85, &__p);
    double v45 = (long long *)__p;
    uint64_t v46 = v88;
    __int16 v83 = v88;
    uint64_t v84 = v20;
    if (__p != v88)
    {
      while (1)
      {
        uint64_t v47 = *((unsigned __int16 *)v45 + 18);
        uint64_t v48 = *((unsigned int *)v45 + 8);
        uint64_t v49 = (char *)v90;
        unint64_t v50 = v91;
        uint64_t v51 = (char *)v90;
        if (v90 != v91)
        {
          uint64_t v51 = (char *)v90;
          while (*(void *)v51 != __PAIR64__(v47, v48))
          {
            v51 += 8;
            if (v51 == v91) {
              goto LABEL_38;
            }
          }
        }
        if (v51 != v91) {
          goto LABEL_32;
        }
LABEL_38:
        if (v48 == *(_DWORD *)(a3 + 32) && v47 == *(unsigned __int16 *)(a3 + 36))
        {
          uint64_t v79 = 1;
          uint64_t v80 = (int **)__p;
          if (__p) {
            goto LABEL_78;
          }
          goto LABEL_79;
        }
        uint64_t v53 = v48 | (v47 << 32);
        if (v91 >= v92) {
          break;
        }
        *(void *)long long v91 = v53;
        uint64_t v54 = (uint64_t)(v50 + 8);
LABEL_66:
        long long v91 = (char *)v54;
        uint64_t v70 = (unsigned __int16 *)(*(void *)v45 - **(int **)v45);
        if (*v70 >= 9u && (uint64_t v71 = v70[4]) != 0)
        {
          *(void *)&long long v96 = *(unsigned int *)(*(void *)v45 + v71) + v20;
          if ((uint64_t)v96 <= a4) {
            goto LABEL_71;
          }
        }
        else
        {
          *(void *)&long long v96 = v20;
          if (v20 <= a4)
          {
LABEL_71:
            sub_69070C((char **)&v93, v45, &v96);
            uint64_t v72 = v93;
            if (v94 - (unsigned char *)v93 >= 49)
            {
              unint64_t v73 = ((v94 - (unsigned char *)v93) / 0x30uLL - 2) >> 1;
              uint64_t v74 = *((void *)v94 - 1);
              if (*((void *)v93 + 6 * v73 + 5) > v74)
              {
                int v75 = v94 - 48;
                long long v99 = *((_OWORD *)v94 - 3);
                long long v100 = *((_OWORD *)v94 - 2);
                uint64_t v101 = *((void *)v94 - 2);
                do
                {
                  __int16 v76 = v75;
                  int v75 = (char *)&v72[6 * v73];
                  long long v77 = *(_OWORD *)v75;
                  long long v78 = *((_OWORD *)v75 + 1);
                  *((void *)v76 + 4) = *((void *)v75 + 4);
                  *(_OWORD *)__int16 v76 = v77;
                  *((_OWORD *)v76 + 1) = v78;
                  *((void *)v76 + 5) = *((void *)v75 + 5);
                  if (!v73) {
                    break;
                  }
                  unint64_t v73 = (v73 - 1) >> 1;
                }
                while (v72[6 * v73 + 5] > v74);
                *(_OWORD *)int v75 = v99;
                *((_OWORD *)v75 + 1) = v100;
                *((void *)v75 + 4) = v101;
                *((void *)v75 + 5) = v74;
              }
            }
          }
        }
LABEL_32:
        double v45 = (long long *)((char *)v45 + 40);
        if (v45 == (long long *)v46) {
          goto LABEL_12;
        }
      }
      uint64_t v55 = (v91 - (unsigned char *)v90) >> 3;
      unint64_t v56 = v55 + 1;
      if ((unint64_t)(v55 + 1) >> 61) {
        sub_2E00();
      }
      uint64_t v57 = v92 - (unsigned char *)v90;
      if ((v92 - (unsigned char *)v90) >> 2 > v56) {
        unint64_t v56 = v57 >> 2;
      }
      if ((unint64_t)v57 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v58 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v58 = v56;
      }
      if (v58)
      {
        if (v58 >> 61) {
          sub_188D718();
        }
        uint64_t v59 = operator new(8 * v58);
        uint64_t v60 = (uint64_t *)&v59[8 * v55];
        uint64_t *v60 = v53;
        uint64_t v54 = (uint64_t)(v60 + 1);
        if (v49 != v50)
        {
LABEL_53:
          unint64_t v61 = v50 - 8 - v49;
          if (v61 < 0x58) {
            goto LABEL_91;
          }
          if ((unint64_t)(v49 - v59) < 0x20) {
            goto LABEL_91;
          }
          uint64_t v62 = (v61 >> 3) + 1;
          uint64_t v63 = 8 * (v62 & 0x3FFFFFFFFFFFFFFCLL);
          uint64_t v64 = &v50[-v63];
          uint64_t v60 = (uint64_t *)((char *)v60 - v63);
          BOOL v65 = &v59[8 * v55 - 16];
          long long v66 = v50 - 16;
          uint64_t v67 = v62 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            long long v68 = *(_OWORD *)v66;
            *(v65 - 1) = *((_OWORD *)v66 - 1);
            *BOOL v65 = v68;
            v65 -= 2;
            v66 -= 32;
            v67 -= 4;
          }
          while (v67);
          unint64_t v50 = v64;
          if (v62 != (v62 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_91:
            do
            {
              uint64_t v69 = *((void *)v50 - 1);
              v50 -= 8;
              *--uint64_t v60 = v69;
            }
            while (v50 != v49);
          }
          uint64_t v49 = (char *)v90;
          long long v90 = v60;
          long long v91 = (char *)v54;
          uint64_t v92 = &v59[8 * v58];
          uint64_t v20 = v84;
          if (!v49) {
            goto LABEL_65;
          }
LABEL_64:
          operator delete(v49);
LABEL_65:
          uint64_t v46 = v83;
          goto LABEL_66;
        }
      }
      else
      {
        uint64_t v59 = 0;
        uint64_t v60 = (uint64_t *)(8 * v55);
        *(void *)(8 * v55) = v53;
        uint64_t v54 = 8 * v55 + 8;
        if (v49 != v50) {
          goto LABEL_53;
        }
      }
      long long v90 = v60;
      long long v91 = (char *)v54;
      uint64_t v92 = &v59[8 * v58];
      uint64_t v20 = v84;
      if (!v49) {
        goto LABEL_65;
      }
      goto LABEL_64;
    }
LABEL_12:
    BOOL v16 = v93;
    int v17 = v94;
  }
  while (v93 != v94);
  uint64_t v79 = 0;
  uint64_t v80 = (int **)__p;
  if (__p)
  {
LABEL_78:
    uint64_t v88 = v80;
    operator delete(v80);
  }
LABEL_79:
  if (v90)
  {
    long long v91 = (char *)v90;
    operator delete(v90);
  }
  if (v93)
  {
    unint64_t v94 = v93;
    operator delete(v93);
  }
  return v79;
}

void sub_6B624C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,uint64_t a24,void *a25,uint64_t a26)
{
  if (__p)
  {
    operator delete(__p);
    long long v27 = a25;
    if (!a25) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    long long v27 = a25;
    if (!a25) {
      goto LABEL_3;
    }
  }
  operator delete(v27);
  _Unwind_Resume(exception_object);
}

void sub_6B62CC(double *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_5A7C34((void *)(a2 + 80), *(void *)(a2 + 104));
  long long v7 = *(_OWORD *)(v6 + 16);
  long long v14 = *(_OWORD *)v6;
  long long v15 = v7;
  uint64_t v16 = *(void *)(v6 + 32);
  uint64_t v8 = operator new(0x28uLL);
  long long v18 = (char *)v8 + 40;
  long long v19 = (char *)v8 + 40;
  long long v9 = v15;
  _OWORD *v8 = v14;
  v8[1] = v9;
  *((void *)v8 + 4) = v16;
  int v17 = v8;
  int v11 = 0;
  memset(v10, 0, sizeof(v10));
  __int16 v12 = -1;
  char v13 = 0;
  sub_6AE4B4(a1, (int **)a2, (uint64_t *)&v17, 0, (uint64_t)v10, a3 + 40);
  if (v17)
  {
    long long v18 = v17;
    operator delete(v17);
  }
}

void sub_6B6388(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)(v1 - 56);
  if (v3)
  {
    *(void *)(v1 - 48) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_6B63A4(uint64_t a1, int **a2, uint64_t a3)
{
  *(void *)(a3 + 48) = *(void *)(a3 + 40);
  uint64_t v70 = a3 + 40;
  *(_DWORD *)(a3 + 64) = 0;
  uint64_t v5 = a2 + 10;
  sub_6B6994(a1, (int ***)a2 + 10, (uint64_t)&__p);
  uint64_t v6 = (int **)*a2;
  long long v7 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v8 = *v7;
  if (v8 < 0x2F)
  {
    if (v8 < 0xB) {
      goto LABEL_14;
    }
  }
  else if (v7[23] && *((unsigned char *)v6 + v7[23]) == 23)
  {
    goto LABEL_8;
  }
  uint64_t v9 = v7[5];
  if (!v9 || (*((unsigned char *)v6 + v9) & 4) == 0)
  {
LABEL_14:
    uint64_t v21 = operator new(0x28uLL);
    int64_t v22 = a2[4];
    v21[4] = v22;
    long long v23 = *((_OWORD *)a2 + 1);
    *(_OWORD *)uint64_t v21 = *(_OWORD *)a2;
    *((_OWORD *)v21 + 1) = v23;
    int v24 = BYTE6(v22);
    long long v25 = (int *)v21[1];
    uint64_t v26 = (unsigned __int16 *)((char *)v25 - *v25);
    unsigned int v27 = *v26;
    if (v24)
    {
      if (v27 < 5) {
        goto LABEL_23;
      }
      unsigned int v28 = v26[2];
      if (!v28) {
        goto LABEL_23;
      }
    }
    else if (v27 < 9 || (unsigned int v28 = v26[4]) == 0)
    {
LABEL_23:
      LOWORD(v29) = 0;
      operator delete(v21);
      unint64_t v30 = (unint64_t)a2[13];
      if (v30 == -1) {
        goto LABEL_21;
      }
LABEL_24:
      unint64_t v36 = (uint64_t *)sub_5A7C34(v5, v30);
      uint64_t v31 = *v36;
      uint64_t v32 = v36[1];
      unint64_t v33 = v36[4];
      long long v34 = (int ***)__p;
      uint64_t v35 = v74;
      if (__p == v74) {
        goto LABEL_70;
      }
      goto LABEL_25;
    }
    LOWORD(v29) = *(_WORD *)((char *)v25 + v28);
    operator delete(v21);
    unint64_t v30 = (unint64_t)a2[13];
    if (v30 == -1) {
      goto LABEL_21;
    }
    goto LABEL_24;
  }
LABEL_8:
  if (__p == v74) {
    goto LABEL_14;
  }
  uint64_t v10 = (uint64_t)*(v74 - 2);
  if (v10 - (void)*(v74 - 3) != 40) {
    goto LABEL_14;
  }
  long long v78 = *(_OWORD *)(v10 - 40);
  v79[0] = *(_OWORD *)(v10 - 24);
  *(void *)((char *)v79 + 14) = *(void *)(v10 - 10);
  int v11 = *(unsigned __int8 *)(v10 - 2);
  char v12 = *(unsigned char *)(v10 - 1);
  long long v13 = *((_OWORD *)a2 + 1);
  long long v75 = *(_OWORD *)a2;
  long long v76 = v13;
  long long v77 = a2[4];
  long long v14 = (char *)operator new(0x50uLL);
  long long v15 = v79[0];
  *(_OWORD *)long long v14 = v78;
  *((_OWORD *)v14 + 1) = v15;
  long long v16 = v76;
  *(_OWORD *)(v14 + 40) = v75;
  *(void *)(v14 + 30) = *(void *)((char *)v79 + 14);
  v14[38] = v11 ^ 1;
  v14[39] = v12;
  *(_OWORD *)(v14 + 56) = v16;
  *((void *)v14 + 9) = v77;
  int v17 = (int *)*((void *)v14 + 1);
  long long v18 = (unsigned __int16 *)((char *)v17 - *v17);
  unsigned int v19 = *v18;
  if (v11 != 1)
  {
    if (v19 < 5) {
      goto LABEL_85;
    }
    unsigned int v20 = v18[2];
    if (!v20) {
      goto LABEL_85;
    }
  }
  else if (v19 < 9 || (unsigned int v20 = v18[4]) == 0)
  {
LABEL_85:
    int v60 = 0;
    unint64_t v61 = (int *)*((void *)v14 + 6);
    uint64_t v62 = (unsigned __int16 *)((char *)v61 - *v61);
    unsigned int v63 = *v62;
    if (v14[78]) {
      goto LABEL_86;
    }
LABEL_82:
    if (v63 >= 9)
    {
      unsigned int v64 = v62[4];
      if (v64) {
        goto LABEL_88;
      }
    }
    goto LABEL_89;
  }
  int v60 = *(unsigned __int16 *)((char *)v17 + v20);
  unint64_t v61 = (int *)*((void *)v14 + 6);
  uint64_t v62 = (unsigned __int16 *)((char *)v61 - *v61);
  unsigned int v63 = *v62;
  if (!v14[78]) {
    goto LABEL_82;
  }
LABEL_86:
  if (v63 >= 5)
  {
    unsigned int v64 = v62[2];
    if (v64)
    {
LABEL_88:
      int v65 = *(unsigned __int16 *)((char *)v61 + v64);
      goto LABEL_90;
    }
  }
LABEL_89:
  int v65 = 0;
LABEL_90:
  int v66 = v65 - v60;
  if (v66 > 18000) {
    v66 -= 36000;
  }
  if (v66 < -17999) {
    v66 += 36000;
  }
  int v67 = v60 + vcvtad_u64_f64((double)v66 / 100.0 * 0.5 * 100.0);
  unsigned int v29 = (v67 + (v67 < 0 ? 0x8CA0 : 0)) % 0x8CA0u;
  operator delete(v14);
  uint64_t v69 = v74 - 3;
  long long v68 = *(v74 - 3);
  if (v68)
  {
    *(v74 - 2) = v68;
    operator delete(v68);
  }
  uint64_t v74 = v69;
  unint64_t v30 = (unint64_t)a2[13];
  if (v30 != -1) {
    goto LABEL_24;
  }
LABEL_21:
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  unint64_t v33 = 0xFFFF00000000;
  long long v34 = (int ***)__p;
  uint64_t v35 = v74;
  if (__p != v74)
  {
LABEL_25:
    unsigned __int16 v37 = v29 + 18000;
    if ((unsigned __int16)((unsigned __int16)(v29 + 18000) >> 5) >= 0x465u) {
      unsigned __int16 v37 = v29 - 18000;
    }
    int v38 = v37;
    if (v33) {
      BOOL v39 = v31 == 0;
    }
    else {
      BOOL v39 = 1;
    }
    int v41 = !v39 && v32 != 0;
    while (1)
    {
      long long v42 = **v34;
      long long v43 = (unsigned __int16 *)((char *)v42 - *v42);
      if (*v43 >= 0xBu && (uint64_t v44 = v43[5]) != 0) {
        int v45 = *((unsigned __int8 *)v42 + v44 + 1) >> 7;
      }
      else {
        int v45 = 0;
      }
      int v46 = (unsigned __int16)sub_6A0FFC(a1, v34, 0) - v38;
      if (v46 > 18000) {
        v46 -= 36000;
      }
      if (v46 < -17999) {
        v46 += 36000;
      }
      double v47 = (double)v46 / 100.0;
      *(double *)&long long v75 = v47;
      if (v41)
      {
        uint64_t v48 = *v34;
        uint64_t v49 = v34[1];
        if (*v34 != v49)
        {
          while (__PAIR64__(*((unsigned __int16 *)v48 + 18), *((_DWORD *)v48 + 8)) != __PAIR64__(WORD2(v33), v33)
               || (HIWORD(v33) & 1) == (*((unsigned char *)v48 + 38) == 0))
          {
            v48 += 5;
            if (v48 == v49)
            {
              uint64_t v48 = v34[1];
              break;
            }
          }
        }
        BOOL v50 = v48 != v49;
        BOOL v72 = v50;
        uint64_t v51 = *(void *)(a3 + 48);
        if (*(void *)(a3 + 40) == v51) {
          goto LABEL_68;
        }
      }
      else
      {
        BOOL v50 = 0;
        BOOL v72 = 0;
        uint64_t v51 = *(void *)(a3 + 48);
        if (*(void *)(a3 + 40) == v51) {
          goto LABEL_68;
        }
      }
      int v52 = *(__int16 *)(v51 - 4);
      if (v52 > 0) {
        int v53 = v45;
      }
      else {
        int v53 = 0;
      }
      if (v53 == 1 && v47 < 0.0 || (v45 & 1) == 0 && v52 < 0 && v47 > 0.0)
      {
        if (v50)
        {
          double v54 = *(double *)(a1 + 848);
          if (!v45) {
            double v54 = -v54;
          }
          *(double *)&long long v78 = v54;
          sub_6D35E8(v70, (double *)&v78, (char *)&v72);
        }
        goto LABEL_36;
      }
LABEL_68:
      sub_6D35E8(v70, (double *)&v75, (char *)&v72);
      *(_DWORD *)(a3 + 64) = 1;
LABEL_36:
      v34 += 3;
      if (v34 == v35)
      {
        long long v34 = (int ***)__p;
        break;
      }
    }
  }
LABEL_70:
  if (v34)
  {
    uint64_t v55 = v74;
    unint64_t v56 = v34;
    if (v74 != v34)
    {
      uint64_t v57 = v74;
      do
      {
        uint64_t v59 = *(v57 - 3);
        v57 -= 3;
        unint64_t v58 = v59;
        if (v59)
        {
          *(v55 - 2) = v58;
          operator delete(v58);
        }
        uint64_t v55 = v57;
      }
      while (v57 != v34);
      unint64_t v56 = __p;
    }
    uint64_t v74 = v34;
    operator delete(v56);
  }
}

void sub_6B6918(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_36094((void **)va);
  _Unwind_Resume(a1);
}

void sub_6B692C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_36094((void **)va);
  _Unwind_Resume(a1);
}

void sub_6B6940(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_36094((void **)va);
  _Unwind_Resume(a1);
}

void sub_6B6958(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_36094((void **)va);
  _Unwind_Resume(a1);
}

void sub_6B696C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_36094((void **)va);
  _Unwind_Resume(a1);
}

void sub_6B6980(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_36094((void **)va);
  _Unwind_Resume(a1);
}

void sub_6B6994(uint64_t a1@<X0>, int ***a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  uint64_t v3 = *a2;
  BOOL v4 = a2[1];
  if (*a2 != v4)
  {
    uint64_t v6 = a1 + 1160;
    do
    {
      if (sub_6DB184(v6, v3)) {
        goto LABEL_22;
      }
      long long v7 = *v3;
      unsigned int v8 = (unsigned __int16 *)((char *)*v3 - **v3);
      unsigned int v9 = *v8;
      if (*((unsigned char *)v3 + 38))
      {
        if (v9 < 0xB) {
          goto LABEL_22;
        }
        unsigned int v10 = v8[5];
        if (!v8[5]) {
          goto LABEL_17;
        }
        if ((*(int *)((char *)v7 + v8[5]) & 2) != 0) {
          goto LABEL_22;
        }
      }
      else
      {
        if (v9 < 0xB) {
          goto LABEL_22;
        }
        unsigned int v10 = v8[5];
        if (!v8[5])
        {
LABEL_17:
          if (v9 <= 0x2E) {
            goto LABEL_22;
          }
          unsigned int v10 = 0;
          uint64_t v11 = v8[23];
          if (v11)
          {
LABEL_19:
            if (*((unsigned char *)v7 + v11) == 23) {
              goto LABEL_25;
            }
          }
LABEL_20:
          if (!v10) {
            goto LABEL_22;
          }
          goto LABEL_21;
        }
        if (*(int *)((char *)v7 + v8[5])) {
          goto LABEL_22;
        }
      }
      if (v9 >= 0x2F)
      {
        uint64_t v11 = v8[23];
        if (v11) {
          goto LABEL_19;
        }
        goto LABEL_20;
      }
LABEL_21:
      if ((*((unsigned char *)v7 + v10) & 4) != 0)
      {
LABEL_25:
        uint64_t v16 = *(void *)(a3 + 8);
        if (*(void *)a3 != v16)
        {
          long long v18 = *(char **)(v16 - 24);
          int v17 = *(char **)(v16 - 16);
          if (v17 - v18 == 40)
          {
            unint64_t v19 = *(void *)(v16 - 8);
            if ((unint64_t)v17 >= v19)
            {
              unint64_t v22 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v19 - (void)v18) >> 3);
              if (2 * v22 <= 2) {
                uint64_t v23 = 2;
              }
              else {
                uint64_t v23 = 2 * v22;
              }
              if (v22 >= 0x333333333333333) {
                unint64_t v24 = 0x666666666666666;
              }
              else {
                unint64_t v24 = v23;
              }
              if (v24 > 0x666666666666666) {
                sub_188D718();
              }
              long long v25 = (char *)operator new(40 * v24);
              long long v26 = *(_OWORD *)v3;
              long long v27 = *((_OWORD *)v3 + 1);
              *((void *)v25 + 9) = v3[4];
              *(_OWORD *)(v25 + 40) = v26;
              *(_OWORD *)(v25 + 56) = v27;
              unsigned int v28 = v25 + 40;
              if (v17 != v18)
              {
                do
                {
                  long long v29 = *(_OWORD *)(v17 - 40);
                  long long v30 = *(_OWORD *)(v17 - 24);
                  *((void *)v28 - 1) = *((void *)v17 - 1);
                  *(_OWORD *)(v28 - 24) = v30;
                  *(_OWORD *)(v28 - 40) = v29;
                  v28 -= 40;
                  v17 -= 40;
                }
                while (v17 != v18);
                int v17 = *(char **)(v16 - 24);
              }
              uint64_t v31 = v25 + 80;
              *(void *)(v16 - 24) = v28;
              *(void *)(v16 - 16) = v25 + 80;
              *(void *)(v16 - 8) = &v25[40 * v24];
              if (v17) {
                operator delete(v17);
              }
              *(void *)(v16 - 16) = v31;
            }
            else
            {
              long long v20 = *(_OWORD *)v3;
              long long v21 = *((_OWORD *)v3 + 1);
              *((void *)v17 + 4) = v3[4];
              *(_OWORD *)int v17 = v20;
              *((_OWORD *)v17 + 1) = v21;
              *(void *)(v16 - 16) = v17 + 40;
            }
          }
        }
        goto LABEL_4;
      }
LABEL_22:
      long long v32 = *(_OWORD *)v3;
      long long v33 = *((_OWORD *)v3 + 1);
      long long v34 = v3[4];
      char v12 = operator new(0x28uLL);
      __p[1] = (char *)v12 + 40;
      unint64_t v36 = (char *)v12 + 40;
      *char v12 = v32;
      v12[1] = v33;
      *((void *)v12 + 4) = v34;
      __p[0] = v12;
      long long v13 = *(void **)(a3 + 8);
      if ((unint64_t)v13 < *(void *)(a3 + 16))
      {
        *long long v13 = 0;
        v13[1] = 0;
        v13[2] = 0;
        *(_OWORD *)long long v13 = *(_OWORD *)__p;
        v13[2] = v36;
        *(void *)(a3 + 8) = v13 + 3;
      }
      else
      {
        long long v14 = sub_4D088((char **)a3, (uint64_t)__p);
        long long v15 = __p[0];
        *(void *)(a3 + 8) = v14;
        if (v15)
        {
          __p[1] = v15;
          operator delete(v15);
        }
      }
LABEL_4:
      v3 += 5;
    }
    while (v3 != v4);
  }
}

void sub_6B6C60(_Unwind_Exception *a1)
{
  sub_36094(v1);
  _Unwind_Resume(a1);
}

void sub_6B6C74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  if (__p)
  {
    operator delete(__p);
    sub_36094(v16);
    _Unwind_Resume(a1);
  }
  sub_36094(v16);
  _Unwind_Resume(a1);
}

void sub_6B6CC0(uint64_t *a1, void *a2)
{
  *a1 = sub_3750CC(a2);
  sub_3CCE64(a1 + 1, a2);
  operator new();
}

void sub_6B6E18(_Unwind_Exception *a1)
{
  sub_68D148(v2);
  sub_5139D0(v3);
  long long v7 = *v5;
  if (*v5)
  {
    v1[19] = v7;
    operator delete(v7);
    unsigned int v8 = *v4;
    if (!*v4)
    {
LABEL_3:
      uint64_t v9 = v1[3];
      v1[3] = 0;
      if (!v9) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else
  {
    unsigned int v8 = *v4;
    if (!*v4) {
      goto LABEL_3;
    }
  }
  v1[6] = v8;
  operator delete(v8);
  uint64_t v10 = v1[3];
  v1[3] = 0;
  if (!v10) {
LABEL_4:
  }
    _Unwind_Resume(a1);
LABEL_7:
  operator delete();
}

void sub_6B6EC4(uint64_t a1, void *a2, int a3)
{
  if (a2[1244] == a2[1245]) {
    sub_6B6EDC(a1, a2, a3);
  }
}

void sub_6B6EDC(uint64_t a1, void *a2, int a3)
{
  uint64_t v3 = a2;
  if (sub_470ADC(a2) != 1)
  {
    unint64_t v5 = 0;
    int v52 = (_OWORD *)(a1 + 64);
    int v53 = v3;
    BOOL v50 = (void **)(v3 + 1244);
    do
    {
      sub_6B9CE8((uint64_t *)a1, v3, v5, (uint64_t)v65);
      v77[16] = sub_35E640();
      sub_6EE33C(a1 + 5944, v53, v5, (uint64_t)v65);
      sub_6B9FFC(a1, (uint64_t)v52, (uint64_t)v65);
      int64_t v6 = ((char *)v65[1] - (char *)v65[0]) >> 3;
      int64_t v7 = v6 - 1;
      if (v6 == 1)
      {
        sub_E1B4((uint64_t)v60);
        int v45 = sub_188FC78(v61, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/MapsOfflineServices/submodules/routing/routing/src/guidance/ManeuverGenerator.cpp", 119);
        sub_188FC78(v45, (uint64_t)":", 1);
        int v46 = (void *)std::ostream::operator<<();
        double v47 = sub_188FC78(v46, (uint64_t)":", 1);
        sub_188FC78(v47, (uint64_t)"Invalid maneuver with segment_delta of 0.", 41);
        exception = __cxa_allocate_exception(0x40uLL);
        std::stringbuf::str();
        uint64_t v49 = (void *)sub_2F404((uint64_t)exception, &v54);
      }
      unsigned int v8 = (unsigned int *)sub_470B40(v53, v5);
      uint64_t v9 = *(void *)a1;
      uint64_t v10 = *v8;
      unint64_t v11 = ((unint64_t)(v8[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v8[1] << 32) | v10;
      unint64_t v12 = v11 & 0xFFFFFFFFFFFFLL;
      long long v13 = (int *)sub_2D5D58(*(void *)a1, v11 & 0xFFFFFFFFFFFFLL);
      char v14 = BYTE6(v11) ^ 1;
      unint64_t v15 = (v11 ^ 0x1000000000000) >> 32;
      if (*(unsigned char *)(v9 + 7772))
      {
        uint64_t v16 = sub_2DB8E0(v9 + 3896, v10, 0);
        int v17 = &v16[-*(int *)v16];
        if (*(unsigned __int16 *)v17 < 5u)
        {
          uint64_t v18 = 0;
        }
        else
        {
          uint64_t v18 = *((unsigned __int16 *)v17 + 2);
          if (v18) {
            v18 += (uint64_t)&v16[*(unsigned int *)&v16[v18]];
          }
        }
        unint64_t v19 = (int *)(v18
                    + 4 * (unsigned __int16)((v11 ^ 0x1000000000000) >> 32)
                    + 4
                    + *(unsigned int *)(v18 + 4 * (unsigned __int16)((v11 ^ 0x1000000000000) >> 32) + 4));
      }
      else
      {
        unint64_t v19 = 0;
      }
      uint64_t v20 = sub_2E5C38(v9, v12, 1);
      v60[0] = v13;
      v60[1] = v19;
      v61[0] = v20;
      v61[1] = v21;
      int v62 = v10;
      __int16 v63 = v15;
      unint64_t v22 = v7 + v5;
      char v64 = v14;
      uint64_t v23 = (unsigned int *)sub_470B40(v53, v7 + v5);
      uint64_t v24 = *(void *)a1;
      uint64_t v25 = *v23;
      unint64_t v26 = ((unint64_t)(v23[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v23[1] << 32) | v25;
      unint64_t v27 = v26 & 0xFFFFFFFFFFFFLL;
      uint64_t v28 = sub_2D5D58(*(void *)a1, v26 & 0xFFFFFFFFFFFFLL);
      char v29 = BYTE6(v26) ^ 1;
      unint64_t v30 = (v26 ^ 0x1000000000000) >> 32;
      if (*(unsigned char *)(v24 + 7772))
      {
        uint64_t v31 = sub_2DB8E0(v24 + 3896, v25, 0);
        long long v32 = &v31[-*(int *)v31];
        if (*(unsigned __int16 *)v32 < 5u)
        {
          uint64_t v33 = 0;
        }
        else
        {
          uint64_t v33 = *((unsigned __int16 *)v32 + 2);
          if (v33) {
            v33 += (uint64_t)&v31[*(unsigned int *)&v31[v33]];
          }
        }
        uint64_t v34 = v33
            + 4 * (unsigned __int16)((v26 ^ 0x1000000000000) >> 32)
            + 4
            + *(unsigned int *)(v33 + 4 * (unsigned __int16)((v26 ^ 0x1000000000000) >> 32) + 4);
      }
      else
      {
        uint64_t v34 = 0;
      }
      uint64_t v35 = sub_2E5C38(v24, v27, 1);
      *(void *)&long long v54 = v28;
      *((void *)&v54 + 1) = v34;
      uint64_t v55 = v35;
      uint64_t v56 = v36;
      int v57 = v25;
      __int16 v58 = v30;
      char v59 = v29;
      *((void *)&v67 + 1) = v5;
      if (v67 || v77[2] || v77[21] || sub_69115C(a1, v60, (int **)&v54, a3))
      {
        unint64_t v37 = v53[1245];
        if (v37 >= v53[1246])
        {
          uint64_t v44 = sub_6CA248(v50, (uint64_t)v65);
        }
        else
        {
          *(void *)(v37 + 8) = 0;
          *(void *)(v37 + 16) = 0;
          *(void *)unint64_t v37 = 0;
          *(_OWORD *)unint64_t v37 = *(_OWORD *)v65;
          *(void *)(v37 + 16) = v66;
          v65[0] = 0;
          v65[1] = 0;
          uint64_t v66 = 0;
          *(_OWORD *)(v37 + 24) = v67;
          *(void *)(v37 + 48) = 0;
          *(void *)(v37 + 56) = 0;
          *(void *)(v37 + 40) = 0;
          *(_OWORD *)(v37 + 40) = __p;
          *(void *)(v37 + 56) = v69;
          long long __p = 0uLL;
          uint64_t v69 = 0;
          *(_DWORD *)(v37 + 64) = v70;
          long long v38 = v71;
          long long v39 = v72;
          long long v40 = v73;
          *(_OWORD *)(v37 + 120) = v74;
          *(_OWORD *)(v37 + 104) = v40;
          *(_OWORD *)(v37 + 88) = v39;
          *(_OWORD *)(v37 + 72) = v38;
          long long v41 = v75;
          long long v42 = v76;
          long long v43 = *(_OWORD *)v77;
          *(void *)(v37 + 183) = *(void *)&v77[15];
          *(_OWORD *)(v37 + 168) = v43;
          *(_OWORD *)(v37 + 152) = v42;
          *(_OWORD *)(v37 + 136) = v41;
          uint64_t v44 = (char *)(v37 + 192);
        }
        v53[1245] = v44;
      }
      *(_DWORD *)(a1 + 96) = 0;
      *int v52 = 0u;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_WORD *)(a1 + 100) = -1;
      *(unsigned char *)(a1 + 102) = 0;
      *(_OWORD *)(a1 + 104) = 0u;
      *(_OWORD *)(a1 + 120) = 0u;
      *(_DWORD *)(a1 + 136) = 0;
      *(_WORD *)(a1 + 140) = -1;
      *(unsigned char *)(a1 + 142) = 0;
      *(void *)(a1 + 152) = *(void *)(a1 + 144);
      *(void *)(a1 + 168) = -1;
      *(_DWORD *)(a1 + 176) = 0;
      if ((void)__p)
      {
        *((void *)&__p + 1) = __p;
        operator delete((void *)__p);
      }
      if (v65[0])
      {
        v65[1] = v65[0];
        operator delete(v65[0]);
      }
      uint64_t v3 = v53;
      unint64_t v5 = v22;
    }
    while (v22 < sub_470ADC(v53) - 1);
  }
  sub_6BA338(a1, v3);
}

void sub_6B73B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  sub_1C02990((uint64_t)&a27);
  sub_592058((uint64_t)&a62);
  _Unwind_Resume(a1);
}

void sub_6B73F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
}

void sub_6B7408(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
}

void sub_6B741C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
}

void sub_6B7430(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
}

void sub_6B7444(uint64_t a1@<X0>, unsigned int *a2@<X1>, int a3@<W2>, uint64_t **a4@<X8>)
{
  char v4 = a3;
  unint64_t v8 = *a2;
  int v9 = (unsigned __int16)a2[1];
  uint64_t v10 = *(unsigned __int8 *)(a1 + 6000);
  unint64_t v70 = (((unint64_t)(a2[1] & 0x20000000) << 19) & 0xFFFF0000FFFFFFFFLL | ((unint64_t)(unsigned __int16)a2[1] << 32) | v8) ^ 0x1000000000000;
  unsigned __int8 v71 = v10;
  unsigned __int8 v72 = a3;
  unsigned __int8 v73 = 2;
  unint64_t v11 = ((v9 - 1640531527) + (v8 << 6) + (v8 >> 2)) ^ v8;
  unint64_t v12 = ((v10 | (v11 << 6)) + (v11 >> 2) + 2654435769u) ^ v11;
  if (a3) {
    uint64_t v13 = 2654435770;
  }
  else {
    uint64_t v13 = 2654435769;
  }
  unint64_t v14 = (v13 + (v12 << 6) + (v12 >> 2)) ^ v12;
  sub_6C93AC((uint64_t *)(*(void *)(*(void *)(a1 + 32) + 16)+ 272 * ((((v14 << 6) + (v14 >> 2) + 2654435771u) ^ v14) % **(void **)(a1 + 32))), (unsigned int *)&v70, (uint64_t)&v67);
  if (v69)
  {
    unint64_t v15 = (uint64_t *)v68;
    *a4 = v67;
    a4[1] = v15;
    if (v15) {
      atomic_fetch_add_explicit(v15 + 1, 1uLL, memory_order_relaxed);
    }
    goto LABEL_49;
  }
  uint64_t v16 = *(void *)a1;
  uint64_t v17 = *a2;
  unint64_t v18 = ((unint64_t)(a2[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)a2[1] << 32) | v17;
  unint64_t v19 = v18 & 0xFFFFFFFFFFFFLL;
  uint64_t v56 = sub_2D5D58(*(void *)a1, v18 & 0xFFFFFFFFFFFFLL);
  char v20 = BYTE6(v18) ^ 1;
  unint64_t v21 = (v18 ^ 0x1000000000000) >> 32;
  if (*(unsigned char *)(v16 + 7772))
  {
    unint64_t v22 = sub_2DB8E0(v16 + 3896, v17, 0);
    uint64_t v23 = &v22[-*(int *)v22];
    if (*(unsigned __int16 *)v23 < 5u)
    {
      uint64_t v24 = 0;
    }
    else
    {
      uint64_t v24 = *((unsigned __int16 *)v23 + 2);
      if (v24) {
        v24 += (uint64_t)&v22[*(unsigned int *)&v22[v24]];
      }
    }
    uint64_t v25 = v24
        + 4 * (unsigned __int16)((v18 ^ 0x1000000000000) >> 32)
        + 4
        + *(unsigned int *)(v24 + 4 * (unsigned __int16)((v18 ^ 0x1000000000000) >> 32) + 4);
  }
  else
  {
    uint64_t v25 = 0;
  }
  *(void *)&long long v63 = v56;
  *((void *)&v63 + 1) = v25;
  uint64_t v64 = sub_2E5C38(v16, v19, 1);
  uint64_t v65 = v26;
  LODWORD(v66) = v17;
  WORD2(v66) = v21;
  BYTE6(v66) = v20;
  int v60 = 0;
  unint64_t v61 = 0;
  uint64_t v62 = 0;
  if ((v4 & 1) != 0 || sub_664888(a1 + 3048, a2))
  {
    sub_2E44A4(*(void *)a1, (uint64_t)&v63, &v60);
    sub_6DE780(a1 + 1160, (uint64_t)&v63, (uint64_t *)&v60);
  }
  else
  {
    sub_6B7BD0(a1, &v63, (char **)&v60, 0);
  }
  sub_68F4F8(*(void *)a1, *a2 | ((unint64_t)(a2[1] & 0x1FFFFFFF) << 32), &__p);
  unint64_t v27 = (unint64_t *)__p;
  uint64_t v28 = v59;
  if (__p != v59)
  {
    do
      sub_2DBC9C(*(void *)a1, *v27++);
    while (v27 != v28);
  }
  char v29 = operator new(0x30uLL);
  v29[1] = 0;
  int v29[2] = 0;
  *char v29 = off_243A340;
  v29[3] = 0;
  unint64_t v30 = (void **)(v29 + 3);
  v29[4] = 0;
  v29[5] = 0;
  *a4 = v29 + 3;
  a4[1] = v29;
  long long v32 = v60;
  uint64_t v31 = v61;
  unint64_t v33 = 0xCCCCCCCCCCCCCCCDLL * ((v61 - (unsigned char *)v60) >> 3);
  if (v61 != v60)
  {
    sub_6C973C(v30, 0xCCCCCCCCCCCCCCCDLL * ((v61 - (unsigned char *)v60) >> 3));
    long long v32 = v60;
    uint64_t v31 = v61;
    unint64_t v33 = 0xCCCCCCCCCCCCCCCDLL * ((v61 - (unsigned char *)v60) >> 3);
  }
  if (v31 != v32)
  {
    for (unint64_t i = 0; v33 != i; ++i)
    {
      uint64_t v36 = (int **)sub_66F838(&v60, i);
      uint64_t v37 = sub_68F6BC(*a4, i);
      __src[0] = v66;
      int v57 = v36[4];
      if ((sub_6B8EF0(a1, (unsigned int *)__src, &v57, v37) & 1) == 0
        && (sub_6C0D10(a1, (int **)&v63, (uint64_t *)&v60, i, 1, v37) & 1) == 0
        && (sub_6C1AB0(a1, (uint64_t)&v63, (uint64_t *)&v60, i, v37) & 1) == 0)
      {
        long long v38 = v36[4];
        __src[0] = v66;
        __src[1] = v38;
        sub_2D8554((void *)v37, (char *)__src, (char *)&v75, 2uLL);
        *(_DWORD *)(v37 + 24) = sub_6B91C0(a1, (int **)&v63, (uint64_t *)&v60, i, 1, 1, 0);
      }
      long long v39 = (char *)*v36;
      long long v40 = (unsigned __int16 *)((char *)*v36 - **v36);
      unsigned int v41 = *v40;
      if (*((unsigned char *)v36 + 38))
      {
        if (v41 >= 0xB)
        {
          unsigned int v42 = v40[5];
          if (v40[5])
          {
            int v43 = 2;
            goto LABEL_37;
          }
          goto LABEL_38;
        }
      }
      else if (v41 >= 0xB)
      {
        unsigned int v42 = v40[5];
        if (v40[5])
        {
          int v43 = 1;
LABEL_37:
          LOBYTE(v42) = (*(_DWORD *)&v39[v42] & v43) != 0;
        }
LABEL_38:
        *(unsigned char *)(v37 + 185) = v42;
        if (v41 >= 0x2F && (uint64_t v44 = v40[23]) != 0 && (v45 = v39[v44], v45 < 0x30)) {
          unint64_t v35 = (0xE2E040048000uLL >> v45) & 1;
        }
        else {
          LOBYTE(v35) = 0;
        }
        goto LABEL_25;
      }
      LOBYTE(v35) = 0;
      *(unsigned char *)(v37 + 185) = 0;
LABEL_25:
      *(unsigned char *)(v37 + 186) = v35;
      *(unsigned char *)(v37 + 187) = 0;
    }
  }
  int v46 = *(void **)(a1 + 32);
  double v47 = (uint64_t *)(*a4)[1];
  uint64_t v48 = (uint64_t *)**a4;
  for (uint64_t j = (*a4)[2] - (void)v48; v48 != v47; v48 += 24)
  {
    uint64_t v50 = v48[2];
    uint64_t v51 = *v48;
    uint64_t j = j + v50 - v51 + sub_6E6650(v48 + 5);
  }
  unint64_t v52 = (WORD2(v70)
       + 2654435769
       + ((unint64_t)v70 << 6)
       + ((unint64_t)v70 >> 2)) ^ v70;
  unint64_t v53 = (v71 + 2654435769 + (v52 << 6) + (v52 >> 2)) ^ v52;
  unint64_t v54 = (v72 + 2654435769 + (v53 << 6) + (v53 >> 2)) ^ v53;
  sub_6C9A3C(v46[2] + 272 * (((v73 + 2654435769 + (v54 << 6) + (v54 >> 2)) ^ v54) % *v46), (unsigned int *)&v70, a4, j + 24);
  if (__p)
  {
    char v59 = (unint64_t *)__p;
    operator delete(__p);
  }
  if (v60)
  {
    unint64_t v61 = v60;
    operator delete(v60);
  }
LABEL_49:
  uint64_t v55 = v68;
  if (v68)
  {
    if (!atomic_fetch_add(&v68->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
      std::__shared_weak_count::__release_weak(v55);
    }
  }
}

void sub_6B7A20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  if (__p)
  {
    operator delete(__p);
    uint64_t v23 = a14;
    if (!a14)
    {
LABEL_3:
      sub_14A84((uint64_t)&a22);
      _Unwind_Resume(a1);
    }
  }
  else
  {
    uint64_t v23 = a14;
    if (!a14) {
      goto LABEL_3;
    }
  }
  operator delete(v23);
  sub_14A84((uint64_t)&a22);
  _Unwind_Resume(a1);
}

uint64_t sub_6B7AD0@<X0>(uint64_t *a1@<X0>, unsigned int *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *a2;
  unint64_t v6 = ((unint64_t)(a2[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)a2[1] << 32) | v5;
  char v7 = BYTE6(v6) ^ 1;
  unint64_t v8 = (v6 ^ 0x1000000000000) >> 32;
  unint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
  uint64_t v10 = sub_2D5D58(*a1, v6 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v4 + 7772))
  {
    unint64_t v11 = sub_2DB8E0(v4 + 3896, v5, 0);
    unint64_t v12 = &v11[-*(int *)v11];
    if (*(unsigned __int16 *)v12 < 5u)
    {
      uint64_t v13 = 0;
    }
    else
    {
      uint64_t v13 = *((unsigned __int16 *)v12 + 2);
      if (v13) {
        v13 += (uint64_t)&v11[*(unsigned int *)&v11[v13]];
      }
    }
    uint64_t v14 = v13 + 4 * (unsigned __int16)v8 + 4 + *(unsigned int *)(v13 + 4 * (unsigned __int16)v8 + 4);
  }
  else
  {
    uint64_t v14 = 0;
  }
  uint64_t result = sub_2E5C38(v4, v9, 1);
  *(void *)a3 = v10;
  *(void *)(a3 + 8) = v14;
  *(void *)(a3 + 16) = result;
  *(void *)(a3 + 24) = v16;
  *(_DWORD *)(a3 + 32) = v5;
  *(_WORD *)(a3 + 36) = v8;
  *(unsigned char *)(a3 + 38) = v7;
  return result;
}

void sub_6B7BD0(uint64_t a1, long long *a2, char **a3, char a4)
{
  a3[1] = *a3;
  unint64_t v212 = 0;
  uint64_t v213 = 0;
  uint64_t v214 = 0;
  *(void *)&long long v215 = 0;
  sub_69070C((char **)&v212, a2, &v215);
  uint64_t v5 = v212;
  if (v213 - (unsigned char *)v212 >= 49)
  {
    unint64_t v6 = ((v213 - (unsigned char *)v212) / 0x30uLL - 2) >> 1;
    uint64_t v7 = *((void *)v213 - 1);
    if (*((void *)v212 + 6 * v6 + 5) > v7)
    {
      unint64_t v8 = v213 - 48;
      long long v218 = *((_OWORD *)v213 - 3);
      long long v219 = *((_OWORD *)v213 - 2);
      uint64_t v220 = *((void *)v213 - 2);
      do
      {
        unint64_t v9 = v8;
        unint64_t v8 = (char *)&v5[6 * v6];
        long long v10 = *(_OWORD *)v8;
        long long v11 = *((_OWORD *)v8 + 1);
        *((void *)v9 + 4) = *((void *)v8 + 4);
        *(_OWORD *)unint64_t v9 = v10;
        *((_OWORD *)v9 + 1) = v11;
        *((void *)v9 + 5) = *((void *)v8 + 5);
        if (!v6) {
          break;
        }
        unint64_t v6 = (v6 - 1) >> 1;
      }
      while (v5[6 * v6 + 5] > v7);
      *(_OWORD *)unint64_t v8 = v218;
      *((_OWORD *)v8 + 1) = v219;
      *((void *)v8 + 4) = v220;
      *((void *)v8 + 5) = v7;
    }
  }
  uint64_t v209 = 0;
  uint64_t v210 = 0;
  unint64_t v211 = 0;
  *(void *)&long long v218 = *((unsigned int *)a2 + 8) | ((unint64_t)*((unsigned __int16 *)a2 + 18) << 32);
  sub_29603C(&v209, &v218);
  double v194 = a3;
  uint64_t v206 = 0;
  uint64_t v207 = 0;
  uint64_t v208 = 0;
  long long __p = 0;
  unint64_t v204 = 0;
  unint64_t v205 = 0;
  unint64_t v12 = v212;
  uint64_t v13 = v213;
  if (v212 == v213)
  {
    unint64_t v151 = 0;
    unsigned int v177 = 0;
    long long v215 = 0uLL;
    *(void *)&long long v216 = 0;
    goto LABEL_227;
  }
  uint64_t v14 = 0;
  uint64_t v15 = a1 + 1160;
  uint64_t v195 = a1 + 8;
  while (2)
  {
    long long v16 = *v12;
    long long v17 = v12[1];
    uint64_t v198 = *((void *)v12 + 5);
    uint64_t v202 = *((void *)v12 + 4);
    v201[0] = v16;
    v201[1] = v17;
    if (v13 - (char *)v12 >= 49)
    {
      uint64_t v18 = 0;
      int64_t v19 = 0xAAAAAAAAAAAAAAABLL * ((v13 - (char *)v12) >> 4);
      long long v215 = *v12;
      long long v216 = v12[1];
      uint64_t v217 = *((void *)v12 + 4);
      char v20 = v12;
      do
      {
        uint64_t v23 = v18 + 1;
        uint64_t v24 = (char *)&v20[3 * v18 + 3];
        uint64_t v25 = (2 * v18) | 1;
        uint64_t v26 = 2 * v18 + 2;
        if (v26 < v19)
        {
          uint64_t v27 = *((void *)&v20[3 * v23 + 2] + 1);
          uint64_t v28 = *((void *)v24 + 11);
          v24 += 48 * (v27 > v28);
          if (v27 > v28) {
            uint64_t v25 = v26;
          }
        }
        long long v21 = *(_OWORD *)v24;
        long long v22 = *((_OWORD *)v24 + 1);
        *((void *)v20 + 4) = *((void *)v24 + 4);
        *char v20 = v21;
        v20[1] = v22;
        *((void *)v20 + 5) = *((void *)v24 + 5);
        char v20 = v24;
        uint64_t v18 = v25;
      }
      while (v25 <= (uint64_t)((unint64_t)(v19 - 2) >> 1));
      char v29 = (long long *)(v13 - 48);
      if (v24 == v13 - 48)
      {
        long long v40 = v216;
        uint64_t v41 = v217;
        *(_OWORD *)uint64_t v24 = v215;
        *((_OWORD *)v24 + 1) = v40;
        *((void *)v24 + 4) = v41;
        *((void *)v24 + 5) = v198;
      }
      else
      {
        long long v30 = *v29;
        long long v31 = *((_OWORD *)v13 - 2);
        *((void *)v24 + 4) = *((void *)v13 - 2);
        *(_OWORD *)uint64_t v24 = v30;
        *((_OWORD *)v24 + 1) = v31;
        *((void *)v24 + 5) = *((void *)v13 - 1);
        *char v29 = v215;
        *((_OWORD *)v13 - 2) = v216;
        *((void *)v13 - 2) = v217;
        *((void *)v13 - 1) = v198;
        uint64_t v32 = v24 - (char *)v12 + 48;
        if (v32 >= 49)
        {
          unint64_t v33 = (v32 / 0x30uLL - 2) >> 1;
          uint64_t v34 = *((void *)v24 + 5);
          if (*((void *)&v12[3 * v33 + 2] + 1) > v34)
          {
            long long v35 = *(_OWORD *)v24;
            long long v36 = *((_OWORD *)v24 + 1);
            uint64_t v220 = *((void *)v24 + 4);
            long long v218 = v35;
            long long v219 = v36;
            do
            {
              uint64_t v37 = v24;
              uint64_t v24 = (char *)&v12[3 * v33];
              long long v38 = *(_OWORD *)v24;
              long long v39 = *((_OWORD *)v24 + 1);
              *((void *)v37 + 4) = *((void *)v24 + 4);
              *(_OWORD *)uint64_t v37 = v38;
              *((_OWORD *)v37 + 1) = v39;
              *((void *)v37 + 5) = *((void *)v24 + 5);
              if (!v33) {
                break;
              }
              unint64_t v33 = (v33 - 1) >> 1;
            }
            while (*((void *)&v12[3 * v33 + 2] + 1) > v34);
            *(_OWORD *)uint64_t v24 = v218;
            *((_OWORD *)v24 + 1) = v219;
            *((void *)v24 + 4) = v220;
            *((void *)v24 + 5) = v34;
          }
        }
      }
      uint64_t v13 = v213;
    }
    uint64_t v213 = v13 - 48;
    sub_2E44A4(*(void *)a1, (uint64_t)v201, &v206);
    int v43 = (int **)v206;
    unsigned int v42 = v207;
    unsigned int v200 = v207;
    while (v43 != v42)
    {
      uint64_t v44 = *((unsigned __int16 *)v43 + 18);
      uint64_t v45 = *((unsigned int *)v43 + 8);
      double v47 = (char *)v209;
      int v46 = v210;
      uint64_t v48 = (char *)v209;
      if (v209 != v210)
      {
        uint64_t v48 = (char *)v209;
        while (*(void *)v48 != __PAIR64__(v44, v45))
        {
          v48 += 8;
          if (v48 == v210) {
            goto LABEL_35;
          }
        }
      }
      if (v48 != v210) {
        goto LABEL_28;
      }
LABEL_35:
      uint64_t v49 = v45 | (v44 << 32);
      if (v210 < v211)
      {
        *(void *)uint64_t v210 = v49;
        uint64_t v50 = (uint64_t)(v46 + 8);
        goto LABEL_58;
      }
      uint64_t v51 = v14;
      uint64_t v52 = (v210 - (unsigned char *)v209) >> 3;
      unint64_t v53 = v52 + 1;
      if ((unint64_t)(v52 + 1) >> 61) {
        sub_2E00();
      }
      uint64_t v54 = v211 - (unsigned char *)v209;
      if ((v211 - (unsigned char *)v209) >> 2 > v53) {
        unint64_t v53 = v54 >> 2;
      }
      if ((unint64_t)v54 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v55 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v55 = v53;
      }
      if (v55)
      {
        if (v55 >> 61) {
          sub_188D718();
        }
        uint64_t v56 = operator new(8 * v55);
        int v57 = (uint64_t *)&v56[8 * v52];
        uint64_t *v57 = v49;
        uint64_t v50 = (uint64_t)(v57 + 1);
        if (v47 != v46)
        {
LABEL_46:
          unint64_t v58 = v46 - 8 - v47;
          if (v58 < 0x58)
          {
            uint64_t v15 = a1 + 1160;
            goto LABEL_55;
          }
          uint64_t v15 = a1 + 1160;
          if ((unint64_t)(v47 - v56) < 0x20) {
            goto LABEL_263;
          }
          uint64_t v59 = (v58 >> 3) + 1;
          uint64_t v60 = 8 * (v59 & 0x3FFFFFFFFFFFFFFCLL);
          unint64_t v61 = &v46[-v60];
          int v57 = (uint64_t *)((char *)v57 - v60);
          uint64_t v62 = &v56[8 * v52 - 16];
          long long v63 = v46 - 16;
          uint64_t v64 = v59 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            long long v65 = *(_OWORD *)v63;
            *(v62 - 1) = *((_OWORD *)v63 - 1);
            _OWORD *v62 = v65;
            v62 -= 2;
            v63 -= 32;
            v64 -= 4;
          }
          while (v64);
          int v46 = v61;
          if (v59 != (v59 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_263:
            do
            {
LABEL_55:
              uint64_t v66 = *((void *)v46 - 1);
              v46 -= 8;
              *--int v57 = v66;
            }
            while (v46 != v47);
          }
          double v47 = (char *)v209;
          uint64_t v209 = v57;
          uint64_t v210 = (char *)v50;
          unint64_t v211 = &v56[8 * v55];
          uint64_t v14 = v51;
          if (!v47) {
            goto LABEL_58;
          }
LABEL_57:
          operator delete(v47);
          goto LABEL_58;
        }
      }
      else
      {
        uint64_t v56 = 0;
        int v57 = (uint64_t *)(8 * v52);
        *(void *)(8 * v52) = v49;
        uint64_t v50 = 8 * v52 + 8;
        if (v47 != v46) {
          goto LABEL_46;
        }
      }
      uint64_t v15 = a1 + 1160;
      uint64_t v209 = v57;
      uint64_t v210 = (char *)v50;
      unint64_t v211 = &v56[8 * v55];
      uint64_t v14 = v51;
      if (v47) {
        goto LABEL_57;
      }
LABEL_58:
      uint64_t v210 = (char *)v50;
      if (sub_66529C(a1 + 3048, v43))
      {
        long long v67 = (unsigned __int16 *)((char *)*v43 - **v43);
        v69 = *v67 >= 0x2Fu && (uint64_t v68 = v67[23]) != 0 && (*((unsigned char *)*v43 + v68) & 0xF7) == 34;
        uint64_t v14 = v14 | v69;
        if (sub_6DEDE8(v15, v43)) {
          goto LABEL_67;
        }
        if (!*(unsigned char *)(a1 + 1080)) {
          goto LABEL_28;
        }
        long long v97 = *v43;
        uint64_t v98 = (unsigned __int16 *)((char *)*v43 - **v43);
        unsigned int v99 = *v98;
        if (*((unsigned char *)v43 + 38))
        {
          if (v99 >= 0xB && v98[5] && (*(int *)((char *)v97 + v98[5]) & 2) != 0) {
            goto LABEL_67;
          }
        }
        else if (v99 >= 0xB && v98[5] && (*(int *)((char *)v97 + v98[5]) & 1) != 0)
        {
          goto LABEL_67;
        }
        uint64_t v120 = *(void *)a2;
        unint64_t v121 = (unsigned __int16 *)(*(void *)a2 - **(int **)a2);
        unsigned int v122 = *v121;
        if (v122 >= 0x2F && v121[23])
        {
          int v123 = *(unsigned __int8 *)(v120 + v121[23]);
          if (v99 < 0x2F) {
            goto LABEL_138;
          }
LABEL_135:
          if (v98[23])
          {
            if (v123 != *((unsigned __int8 *)v97 + v98[23])) {
              goto LABEL_28;
            }
            goto LABEL_139;
          }
        }
        else
        {
          int v123 = 32;
          if (v99 >= 0x2F) {
            goto LABEL_135;
          }
        }
LABEL_138:
        if (v123 != 32) {
          goto LABEL_28;
        }
LABEL_139:
        if (v122 >= 0x43 && (uint64_t v124 = v121[33]) != 0)
        {
          int v125 = *(unsigned __int8 *)(v120 + v124);
          if (v99 < 0x43) {
            goto LABEL_168;
          }
LABEL_156:
          uint64_t v134 = v98[33];
          if (v134)
          {
            if (v125 != *((unsigned __int8 *)v97 + v134)) {
              goto LABEL_28;
            }
            goto LABEL_169;
          }
        }
        else
        {
          int v125 = 0;
          if (v99 >= 0x43) {
            goto LABEL_156;
          }
        }
LABEL_168:
        if (v125) {
          goto LABEL_28;
        }
LABEL_169:
        if (fabs(sub_6D82EC(v15, (int **)a2, v43)) < *(double *)(a1 + 288)) {
          goto LABEL_28;
        }
        *(void *)&long long v218 = sub_2E4738((int **)a2);
        if (sub_3CCE68(v195, (unsigned int **)&v218)) {
          goto LABEL_28;
        }
        uint64_t v138 = (unsigned __int16 *)(*(void *)a2 - **(int **)a2);
        if (*v138 >= 0xBu && (uint64_t v139 = v138[5]) != 0)
        {
          int v140 = (*(unsigned __int8 *)(*(void *)a2 + v139) >> 2) & 1;
          uint64_t v141 = *v43;
          uint64_t v142 = (unsigned __int16 *)((char *)*v43 - **v43);
          if (*v142 < 0xBu) {
            goto LABEL_191;
          }
LABEL_184:
          uint64_t v149 = v142[5];
          if (v149)
          {
            if (v140 != (*(int *)((char *)v141 + v149) & 4u) >> 2) {
              goto LABEL_28;
            }
            goto LABEL_67;
          }
        }
        else
        {
          int v140 = 0;
          uint64_t v141 = *v43;
          uint64_t v142 = (unsigned __int16 *)((char *)*v43 - **v43);
          if (*v142 >= 0xBu) {
            goto LABEL_184;
          }
        }
LABEL_191:
        if (v140) {
          goto LABEL_28;
        }
LABEL_67:
        long long v74 = (unsigned __int16 *)((char *)*v43 - **v43);
        if (*v74 >= 9u)
        {
          uint64_t v75 = v74[4];
          if (v75)
          {
            uint64_t v76 = *(unsigned int *)((char *)*v43 + v75) + v198;
            long long v78 = v213;
            long long v77 = v214;
            if (v213 >= v214) {
              goto LABEL_70;
            }
LABEL_108:
            long long v112 = *((_OWORD *)v43 + 1);
            int v113 = v43[4];
            *(_OWORD *)long long v78 = *(_OWORD *)v43;
            *((_OWORD *)v78 + 1) = v112;
            *((void *)v78 + 4) = v113;
            *((void *)v78 + 5) = v76;
            uint64_t v92 = v78 + 48;
LABEL_145:
            uint64_t v213 = v92;
            uint64_t v126 = v212;
            if (v92 - (unsigned char *)v212 >= 49)
            {
              unint64_t v127 = ((v92 - (unsigned char *)v212) / 0x30uLL - 2) >> 1;
              uint64_t v128 = *((void *)v92 - 1);
              if (*((void *)v212 + 6 * v127 + 5) > v128)
              {
                unint64_t v129 = v92 - 48;
                long long v218 = *((_OWORD *)v92 - 3);
                long long v219 = *((_OWORD *)v92 - 2);
                uint64_t v220 = *((void *)v92 - 2);
                do
                {
                  int v130 = v129;
                  unint64_t v129 = (char *)&v126[6 * v127];
                  long long v131 = *(_OWORD *)v129;
                  long long v132 = *((_OWORD *)v129 + 1);
                  *((void *)v130 + 4) = *((void *)v129 + 4);
                  *(_OWORD *)int v130 = v131;
                  *((_OWORD *)v130 + 1) = v132;
                  *((void *)v130 + 5) = *((void *)v129 + 5);
                  if (!v127) {
                    break;
                  }
                  unint64_t v127 = (v127 - 1) >> 1;
                }
                while (v126[6 * v127 + 5] > v128);
                *(_OWORD *)unint64_t v129 = v218;
                *((_OWORD *)v129 + 1) = v219;
                *((void *)v129 + 4) = v220;
                *((void *)v129 + 5) = v128;
              }
            }
            goto LABEL_28;
          }
        }
        uint64_t v76 = v198;
        long long v78 = v213;
        long long v77 = v214;
        if (v213 < v214) {
          goto LABEL_108;
        }
LABEL_70:
        uint64_t v79 = (char *)v212;
        unint64_t v80 = 0xAAAAAAAAAAAAAAABLL * ((v78 - (unsigned char *)v212) >> 4);
        unint64_t v81 = v80 + 1;
        if (v80 + 1 > 0x555555555555555) {
          sub_2E00();
        }
        unint64_t v82 = 0xAAAAAAAAAAAAAAABLL * ((v77 - (unsigned char *)v212) >> 4);
        if (2 * v82 > v81) {
          unint64_t v81 = 2 * v82;
        }
        if (v82 >= 0x2AAAAAAAAAAAAAALL) {
          unint64_t v83 = 0x555555555555555;
        }
        else {
          unint64_t v83 = v81;
        }
        if (v83 > 0x555555555555555) {
          sub_188D718();
        }
        uint64_t v84 = (char *)operator new(48 * v83);
        BOOL v85 = &v84[48 * v80];
        long long v86 = *((_OWORD *)v43 + 1);
        uint64_t v87 = v43[4];
        *(_OWORD *)BOOL v85 = *(_OWORD *)v43;
        *((_OWORD *)v85 + 1) = v86;
        *((void *)v85 + 4) = v87;
        *((void *)v85 + 5) = v76;
        if (v78 == v79)
        {
          uint64_t v92 = v85 + 48;
          unint64_t v212 = &v84[48 * v80];
          uint64_t v213 = v85 + 48;
          uint64_t v214 = &v84[48 * v83];
          if (!v79) {
            goto LABEL_145;
          }
        }
        else
        {
          uint64_t v88 = &v84[48 * v80];
          do
          {
            uint64_t v89 = v88 - 48;
            long long v90 = *((_OWORD *)v78 - 3);
            long long v91 = *((_OWORD *)v78 - 1);
            *((_OWORD *)v88 - 2) = *((_OWORD *)v78 - 2);
            *((_OWORD *)v88 - 1) = v91;
            *((_OWORD *)v88 - 3) = v90;
            v78 -= 48;
            v88 -= 48;
          }
          while (v78 != v79);
          uint64_t v92 = v85 + 48;
          unint64_t v212 = v89;
          uint64_t v213 = v85 + 48;
          uint64_t v214 = &v84[48 * v83];
          if (!v79) {
            goto LABEL_145;
          }
        }
        operator delete(v79);
        goto LABEL_145;
      }
      if (sub_6DEDE8(v15, v43)) {
        goto LABEL_63;
      }
      if (!*(unsigned char *)(a1 + 1080)) {
        goto LABEL_162;
      }
      unint64_t v94 = *v43;
      uint64_t v95 = (unsigned __int16 *)((char *)*v43 - **v43);
      unsigned int v96 = *v95;
      if (*((unsigned char *)v43 + 38))
      {
        if (v96 >= 0xB && v95[5] && (*(int *)((char *)v94 + v95[5]) & 2) != 0) {
          goto LABEL_63;
        }
      }
      else if (v96 >= 0xB && v95[5] && (*(int *)((char *)v94 + v95[5]) & 1) != 0)
      {
LABEL_63:
        unint64_t v70 = v204;
        if (v204 >= v205)
        {
          long long v100 = (char *)__p;
          unint64_t v101 = 0xAAAAAAAAAAAAAAABLL * ((v204 - (unsigned char *)__p) >> 4);
          unint64_t v102 = v101 + 1;
          if (v101 + 1 > 0x555555555555555) {
            sub_2E00();
          }
          if (0x5555555555555556 * ((v205 - (unsigned char *)__p) >> 4) > v102) {
            unint64_t v102 = 0x5555555555555556 * ((v205 - (unsigned char *)__p) >> 4);
          }
          if (0xAAAAAAAAAAAAAAABLL * ((v205 - (unsigned char *)__p) >> 4) >= 0x2AAAAAAAAAAAAAALL) {
            unint64_t v103 = 0x555555555555555;
          }
          else {
            unint64_t v103 = v102;
          }
          if (v103 > 0x555555555555555) {
            sub_188D718();
          }
          uint64_t v104 = (char *)operator new(48 * v103);
          uint64_t v105 = &v104[48 * v101];
          long long v106 = *((_OWORD *)v43 + 1);
          uint64_t v107 = v43[4];
          *(_OWORD *)uint64_t v105 = *(_OWORD *)v43;
          *((_OWORD *)v105 + 1) = v106;
          *((void *)v105 + 4) = v107;
          *((void *)v105 + 5) = v198;
          if (v70 == v100)
          {
            unsigned __int8 v73 = v105 + 48;
            long long __p = &v104[48 * v101];
            unint64_t v204 = v105 + 48;
            unint64_t v205 = &v104[48 * v103];
            if (!v100) {
              goto LABEL_106;
            }
          }
          else
          {
            uint64_t v108 = &v104[48 * v101];
            do
            {
              int v109 = v108 - 48;
              long long v110 = *((_OWORD *)v70 - 3);
              long long v111 = *((_OWORD *)v70 - 1);
              *((_OWORD *)v108 - 2) = *((_OWORD *)v70 - 2);
              *((_OWORD *)v108 - 1) = v111;
              *((_OWORD *)v108 - 3) = v110;
              v70 -= 48;
              v108 -= 48;
            }
            while (v70 != v100);
            unsigned __int8 v73 = v105 + 48;
            long long __p = v109;
            unint64_t v204 = v105 + 48;
            unint64_t v205 = &v104[48 * v103];
            if (!v100) {
              goto LABEL_106;
            }
          }
          operator delete(v100);
        }
        else
        {
          long long v71 = *((_OWORD *)v43 + 1);
          unsigned __int8 v72 = v43[4];
          *(_OWORD *)unint64_t v204 = *(_OWORD *)v43;
          *((_OWORD *)v70 + 1) = v71;
          *((void *)v70 + 4) = v72;
          *((void *)v70 + 5) = v198;
          unsigned __int8 v73 = v70 + 48;
        }
LABEL_106:
        unint64_t v204 = v73;
        goto LABEL_28;
      }
      uint64_t v114 = *(void *)a2;
      unint64_t v115 = (unsigned __int16 *)(*(void *)a2 - **(int **)a2);
      unsigned int v116 = *v115;
      if (v116 >= 0x2F && v115[23])
      {
        int v117 = *(unsigned __int8 *)(v114 + v115[23]);
        if (v96 < 0x2F) {
          goto LABEL_122;
        }
      }
      else
      {
        int v117 = 32;
        if (v96 < 0x2F) {
          goto LABEL_122;
        }
      }
      if (v95[23])
      {
        if (v117 != *((unsigned __int8 *)v94 + v95[23])) {
          goto LABEL_162;
        }
        goto LABEL_123;
      }
LABEL_122:
      if (v117 != 32) {
        goto LABEL_162;
      }
LABEL_123:
      if (v116 >= 0x43 && (uint64_t v118 = v115[33]) != 0)
      {
        int v119 = *(unsigned __int8 *)(v114 + v118);
        if (v96 < 0x43) {
          goto LABEL_159;
        }
      }
      else
      {
        int v119 = 0;
        if (v96 < 0x43) {
          goto LABEL_159;
        }
      }
      uint64_t v133 = v95[33];
      if (v133)
      {
        if (v119 != *((unsigned __int8 *)v94 + v133)) {
          goto LABEL_162;
        }
        goto LABEL_160;
      }
LABEL_159:
      if (v119) {
        goto LABEL_162;
      }
LABEL_160:
      if (fabs(sub_6D82EC(v15, (int **)a2, v43)) < *(double *)(a1 + 288)) {
        goto LABEL_162;
      }
      *(void *)&long long v218 = sub_2E4738((int **)a2);
      if (sub_3CCE68(v195, (unsigned int **)&v218)) {
        goto LABEL_162;
      }
      unint64_t v144 = (unsigned __int16 *)(*(void *)a2 - **(int **)a2);
      if (*v144 >= 0xBu && (uint64_t v145 = v144[5]) != 0)
      {
        int v146 = (*(unsigned __int8 *)(*(void *)a2 + v145) >> 2) & 1;
        BOOL v147 = *v43;
        double v148 = (unsigned __int16 *)((char *)*v43 - **v43);
        if (*v148 < 0xBu) {
          goto LABEL_193;
        }
      }
      else
      {
        int v146 = 0;
        BOOL v147 = *v43;
        double v148 = (unsigned __int16 *)((char *)*v43 - **v43);
        if (*v148 < 0xBu) {
          goto LABEL_193;
        }
      }
      uint64_t v150 = v148[5];
      if (v150)
      {
        if ((v146 ^ (*((unsigned __int8 *)v147 + v150) >> 2) & 1 ^ 1)) {
          goto LABEL_63;
        }
        goto LABEL_162;
      }
LABEL_193:
      if ((v146 ^ 1)) {
        goto LABEL_63;
      }
LABEL_162:
      if (a4) {
        goto LABEL_63;
      }
      if (*(unsigned char *)(a1 + 968))
      {
        uint64_t v135 = *v43;
        uint64_t v136 = (unsigned __int16 *)((char *)*v43 - **v43);
        unsigned int v137 = *v136;
        if (v137 < 0x2F)
        {
          if (v137 < 0xB) {
            goto LABEL_63;
          }
        }
        else if (v136[23] && *((unsigned char *)v135 + v136[23]) == 23)
        {
          goto LABEL_28;
        }
        uint64_t v143 = v136[5];
        if (!v143 || (*((unsigned char *)v135 + v143) & 4) == 0) {
          goto LABEL_63;
        }
      }
LABEL_28:
      v43 += 5;
      unsigned int v42 = v200;
    }
    unint64_t v12 = v212;
    uint64_t v13 = v213;
    if (v212 != v213) {
      continue;
    }
    break;
  }
  unint64_t v151 = (char *)__p;
  uint64_t v152 = 568;
  if (v14) {
    uint64_t v152 = 576;
  }
  uint64_t v153 = *(void *)(a1 + v152);
  long long v215 = 0uLL;
  *(void *)&long long v216 = 0;
  uint64_t v154 = v204 - (unsigned char *)__p;
  if (v204 == __p) {
    goto LABEL_224;
  }
  if (v154 < 0) {
    sub_2E00();
  }
  unint64_t v155 = 0xAAAAAAAAAAAAAAABLL * (v154 >> 4);
  long long v215 = (unint64_t)operator new(8 * (((v155 - 1) >> 6) + 1));
  *(void *)&long long v216 = ((v155 - 1) >> 6) + 1;
  sub_43284(&v215, v155, 0);
  unint64_t v151 = v204;
  if (v204 == __p)
  {
LABEL_224:
    unsigned int v177 = v151;
    goto LABEL_227;
  }
  unint64_t v156 = 0;
  unint64_t v157 = 0xAAAAAAAAAAAAAAABLL * ((v204 - (unsigned char *)__p) >> 4);
  while (2)
  {
    uint64_t v158 = (char *)__p + 48 * v156;
    long long v159 = *(_OWORD *)v158;
    long long v160 = *((_OWORD *)v158 + 1);
    uint64_t v220 = *((void *)v158 + 4);
    long long v218 = v159;
    long long v219 = v160;
    unint64_t v161 = (unsigned __int16 *)(v159 - *(int *)v159);
    if (*v161 >= 9u && (uint64_t v162 = v161[4]) != 0)
    {
      uint64_t v163 = *(unsigned int *)(v159 + v162);
      if (v163 < v153) {
        goto LABEL_207;
      }
    }
    else
    {
      uint64_t v163 = 0;
      if (v153 > 0)
      {
LABEL_207:
        uint64_t v164 = *((void *)v158 + 5);
        while (1)
        {
          sub_2E44A4(*(void *)a1, (uint64_t)&v218, &v206);
          sub_6DE780(v15, (uint64_t)&v218, (uint64_t *)&v206);
          unint64_t v165 = sub_6DE7E0(v15, (int **)&v218, (uint64_t *)&v206, -1);
          if (v165 == -1) {
            break;
          }
          uint64_t v166 = sub_66F838(&v206, v165);
          long long v167 = *(_OWORD *)v166;
          long long v168 = *(_OWORD *)(v166 + 16);
          uint64_t v220 = *(void *)(v166 + 32);
          long long v218 = v167;
          long long v219 = v168;
          if (v204 != __p)
          {
            unint64_t v169 = 0;
            uint64_t v170 = (v204 - (unsigned char *)__p) / 48;
            do
            {
              if (v156 != v169)
              {
                uint64_t v173 = v220;
                unint64_t v174 = *(void *)(sub_690874(&__p, v169) + 32);
                if ((v173 & 0xFFFFFFFFFFFFLL) == (v174 & 0xFFFFFFFFFFFFLL)
                  && ((v173 & 0xFF000000000000) == 0) != (HIWORD(v174) & 1))
                {
                  if (v163 + v164 > *(void *)(sub_690874(&__p, v169) + 40)) {
                    unsigned __int16 v171 = (void *)sub_415F0(&v215, v156);
                  }
                  else {
                    unsigned __int16 v171 = (void *)sub_415F0(&v215, v169);
                  }
                  *v171 |= v172;
                }
              }
              ++v169;
            }
            while (v170 != v169);
          }
          long long v175 = (unsigned __int16 *)(v218 - *(int *)v218);
          if (*v175 >= 9u && (uint64_t v176 = v175[4]) != 0)
          {
            uint64_t v15 = a1 + 1160;
            v163 += *(unsigned int *)(v218 + v176);
            if (v163 >= v153) {
              break;
            }
          }
          else
          {
            uint64_t v15 = a1 + 1160;
            if (v163 >= v153) {
              break;
            }
          }
        }
      }
    }
    if (++v156 != v157) {
      continue;
    }
    break;
  }
  unint64_t v151 = (char *)__p;
  unsigned int v177 = v204;
LABEL_227:
  unint64_t v178 = 0xAAAAAAAAAAAAAAABLL * ((v177 - v151) >> 4);
  unint64_t v179 = *v194;
  if (0xCCCCCCCCCCCCCCCDLL * ((v194[2] - *v194) >> 3) < v178)
  {
    if (v178 >= 0x666666666666667) {
      sub_2E00();
    }
    unint64_t v180 = v194[1];
    unsigned int v181 = (char *)operator new(0xAAAAAAAAAAAAAAB8 * ((v177 - v151) >> 4));
    unsigned int v182 = &v181[40 * ((v180 - v179) / 40)];
    int v183 = v182;
    if (v180 != v179)
    {
      unsigned __int16 v184 = &v181[40 * ((v180 - v179) / 40)];
      do
      {
        long long v185 = *(_OWORD *)(v180 - 40);
        long long v186 = *(_OWORD *)(v180 - 24);
        int v183 = v184 - 40;
        *((void *)v184 - 1) = *((void *)v180 - 1);
        *(_OWORD *)(v184 - 24) = v186;
        *(_OWORD *)(v184 - 40) = v185;
        v180 -= 40;
        v184 -= 40;
      }
      while (v180 != v179);
    }
    *double v194 = v183;
    v194[1] = v182;
    v194[2] = &v181[0xAAAAAAAAAAAAAAB8 * ((v177 - v151) >> 4)];
    if (v179)
    {
      operator delete(v179);
      unint64_t v151 = (char *)__p;
      unsigned int v177 = v204;
      unint64_t v178 = 0xAAAAAAAAAAAAAAABLL * ((v204 - (unsigned char *)__p) >> 4);
    }
  }
  if (v177 != v151)
  {
    unint64_t v187 = 0;
    do
    {
      if (((*(void *)(v215 + ((v187 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v187) & 1) == 0)
      {
        double v188 = (long long *)sub_690874(&__p, v187);
        sub_64F484(v194, v188);
      }
      ++v187;
    }
    while (v178 != v187);
  }
  uint64_t v189 = *v194;
  uint64_t v190 = (int **)v194[1];
  unint64_t v191 = 126 - 2 * __clz(0xCCCCCCCCCCCCCCCDLL * (((char *)v190 - *v194) >> 3));
  BOOL v192 = v190 == (int **)*v194;
  *(void *)&long long v218 = a1;
  *((void *)&v218 + 1) = a2;
  if (v192) {
    uint64_t v193 = 0;
  }
  else {
    uint64_t v193 = v191;
  }
  sub_6D6BD4((long long *)v189, v190, (uint64_t *)&v218, v193, 1);
  if ((void)v215) {
    operator delete((void *)v215);
  }
  if (__p)
  {
    unint64_t v204 = (char *)__p;
    operator delete(__p);
  }
  if (v206)
  {
    uint64_t v207 = (int **)v206;
    operator delete(v206);
  }
  if (v209)
  {
    uint64_t v210 = (char *)v209;
    operator delete(v209);
  }
  if (v212)
  {
    uint64_t v213 = (char *)v212;
    operator delete(v212);
  }
}

void sub_6B8DB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,void *__p,uint64_t a31,uint64_t a32,void *a33,uint64_t a34)
{
  if (__p)
  {
    operator delete(__p);
    long long v35 = a33;
    if (!a33) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    long long v35 = a33;
    if (!a33) {
      goto LABEL_3;
    }
  }
  operator delete(v35);
  _Unwind_Resume(exception_object);
}

uint64_t sub_6B8EF0(uint64_t a1, unsigned int *a2, void *a3, uint64_t a4)
{
  unint64_t v8 = (int *)sub_2D5D58(*(void *)a1, *a2 | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32));
  unint64_t v9 = (unsigned __int16 *)((char *)v8 - *v8);
  if (*v9 < 0xBu) {
    return 0;
  }
  uint64_t v10 = v9[5];
  if (!v10) {
    return 0;
  }
  if ((*((unsigned char *)v8 + v10 + 3) & 2) == 0) {
    return 0;
  }
  if (!*(unsigned char *)(a1 + 681)) {
    return 0;
  }
  long long v11 = (int *)sub_2D5D58(*(void *)a1, *a2 | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32));
  unint64_t v12 = (unsigned __int16 *)((char *)v11 - *v11);
  if (*v12 < 0x21u || !v12[16]) {
    return 0;
  }
  sub_68F4F8(*(void *)a1, *a2 | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32), &v30);
  uint64_t v13 = (unint64_t *)v30;
  uint64_t v14 = v31;
  if (v30 == v31)
  {
    uint64_t v15 = 0;
    goto LABEL_31;
  }
  while (1)
  {
    long long v17 = (int *)sub_2DBC9C(*(void *)a1, *v13);
    uint64_t v18 = (unsigned __int16 *)((char *)v17 - *v17);
    if (*v18 < 0xDu) {
      goto LABEL_12;
    }
    uint64_t v19 = v18[6];
    if (!v19) {
      goto LABEL_12;
    }
    char v20 = (int *)((char *)v17 + v19 + *(unsigned int *)((char *)v17 + v19));
    long long v21 = (unsigned __int16 *)((char *)v20 - *v20);
    if (*v21 >= 5u && (uint64_t v22 = v21[2]) != 0)
    {
      unsigned int v23 = *((unsigned __int8 *)v20 + v22);
      if (v23 >= 0xF || ((0x7EFFu >> v23) & 1) == 0) {
        goto LABEL_12;
      }
      int v24 = dword_20E8B9C[(char)v23];
    }
    else
    {
      int v24 = 0;
    }
    sub_68F5DC(*(void *)a1, *v13, (unint64_t *)&__p);
    uint64_t v25 = (char *)__p;
    if (__PAIR64__(*((unsigned __int16 *)__p + 2), *(_DWORD *)__p) == __PAIR64__((unsigned __int16)WORD2(*(void *)a2), *(void *)a2)&& (HIWORD(*(void *)a2) & 1) != (*((unsigned char *)__p + 6) == 0))
    {
      uint64_t v26 = *(char **)v29;
      if (__PAIR64__(*(unsigned __int16 *)(*(void *)v29 - 4), *(_DWORD *)(*(void *)v29 - 8)) == __PAIR64__((unsigned __int16)WORD2(*a3), *a3)
        && (HIWORD(*a3) & 1) != (*(unsigned char *)(*(void *)v29 - 2) == 0))
      {
        break;
      }
    }
    *(void *)char v29 = __p;
    operator delete(__p);
LABEL_12:
    if (++v13 == v14)
    {
      uint64_t v15 = 0;
      goto LABEL_29;
    }
  }
  *(_DWORD *)(a4 + 24) = v24;
  if (&__p == (void **)a4)
  {
    *(void *)char v29 = v25;
    uint64_t v27 = v25;
LABEL_34:
    operator delete(v27);
  }
  else
  {
    sub_2D8554((void *)a4, v25, v26, (v26 - v25) >> 3);
    uint64_t v27 = __p;
    if (__p)
    {
      *(void *)char v29 = __p;
      goto LABEL_34;
    }
  }
  uint64_t v15 = 1;
LABEL_29:
  uint64_t v13 = (unint64_t *)v30;
LABEL_31:
  if (v13)
  {
    long long v31 = v13;
    operator delete(v13);
  }
  return v15;
}

void sub_6B9170(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p)
  {
    operator delete(__p);
    uint64_t v14 = a12;
    if (!a12) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    uint64_t v14 = a12;
    if (!a12) {
      goto LABEL_3;
    }
  }
  operator delete(v14);
  _Unwind_Resume(exception_object);
}

uint64_t sub_6B91C0(uint64_t a1, int **a2, uint64_t *a3, unint64_t a4, int a5, uint64_t a6, char a7)
{
  sub_6BD148(a1, a2, a3, a4, (uint64_t)&v56);
  if (a6 && v57) {
    return v56;
  }
  if (sub_6BD5C4(a1, a2, (long long **)a3)) {
    return 0;
  }
  sub_696728(a1, a2, (int ***)a3, a4, (uint64_t)&v54);
  if (v55) {
    return v54;
  }
  uint64_t v50 = a1 + 1160;
  unint64_t v16 = sub_6DE7E0(a1 + 1160, a2, a3, a4);
  if (!sub_6BD77C(a1, a2, a3, v16, a4, a7))
  {
    uint64_t v14 = 0;
    int v18 = 1;
    goto LABEL_19;
  }
  long long v17 = (int **)sub_5A7C34(a3, 0);
  int v18 = 1;
  uint64_t v19 = (int **)sub_5A7C34(a3, 1uLL);
  double v20 = sub_697680(a1, a2, v17, v19);
  if (a4 == 1)
  {
    int v18 = 0;
    BOOL v22 = v20 < v21;
    unsigned int v23 = 20;
    unsigned int v24 = 21;
  }
  else
  {
    if (a4)
    {
      uint64_t v14 = 0;
      goto LABEL_19;
    }
    int v18 = 0;
    BOOL v22 = v20 < v21;
    unsigned int v23 = 21;
    unsigned int v24 = 20;
  }
  if (v22) {
    uint64_t v14 = v24;
  }
  else {
    uint64_t v14 = v23;
  }
LABEL_19:
  uint64_t v25 = sub_5A7C34(a3, a4);
  uint64_t v26 = *(void *)(v25 + 32);
  long long v27 = *(_OWORD *)(v25 + 16);
  v52[0] = *(_OWORD *)v25;
  v52[1] = v27;
  uint64_t v53 = v26;
  uint64_t v51 = (unsigned int *)sub_2E4738(a2);
  int v28 = sub_3CCE68(a1 + 8, &v51);
  char v29 = v28;
  if (v16 == -1)
  {
    if (!v28) {
      goto LABEL_44;
    }
LABEL_24:
    long long v31 = *a2;
    uint64_t v32 = (unsigned __int16 *)((char *)*a2 - **a2);
    unsigned int v33 = *v32;
    if (v33 < 0x2F)
    {
      if (v33 < 0xB) {
        goto LABEL_31;
      }
    }
    else if (v32[23] && *((unsigned char *)v31 + v32[23]) == 23)
    {
LABEL_44:
      if (!v18) {
        goto LABEL_46;
      }
      goto LABEL_45;
    }
    uint64_t v34 = v32[5];
    if (v34 && (*((unsigned char *)v31 + v34) & 4) != 0) {
      goto LABEL_44;
    }
LABEL_31:
    long long v35 = (unsigned __int16 *)(*(void *)&v52[0] - (int)**(_DWORD **)&v52[0]);
    unsigned int v36 = *v35;
    if (v36 < 0x2F)
    {
      if (v36 < 0xB) {
        goto LABEL_44;
      }
    }
    else if (v35[23] && *(unsigned char *)(*(void *)&v52[0] + v35[23]) == 23)
    {
      goto LABEL_38;
    }
    uint64_t v37 = v35[5];
    if (!v37 || (*(unsigned char *)(*(void *)&v52[0] + v37) & 4) == 0) {
      goto LABEL_44;
    }
LABEL_38:
    BOOL v30 = (sub_2E79EC(*(void *)a1, (uint64_t)a2[4], v53) & 1) != 0
       || fabs(sub_6D82EC(v50, a2, (int **)v52)) < *(double *)(a1 + 200);
    goto LABEL_41;
  }
  BOOL v30 = v16 == a4;
  if (v16 != a4 && ((v28 ^ 1) & 1) == 0) {
    goto LABEL_24;
  }
LABEL_41:
  if ((v18 & v30) != 1) {
    goto LABEL_44;
  }
  if (sub_6BE4F8(a1, a2, (int ***)a3, a4))
  {
    uint64_t v14 = 3;
    goto LABEL_46;
  }
  if (sub_6BEAB0(a1, a2, (int **)v52, (int ***)a3, v29, v38))
  {
LABEL_45:
    uint64_t v14 = sub_69813C(a1, a2, a3, a4, v16);
    goto LABEL_46;
  }
  uint64_t v14 = 0;
LABEL_46:
  if (sub_6BEDA8(a1, (char **)a2, a3, a4, v16))
  {
    if ((int)v14 > 61)
    {
      if (v14 != 62)
      {
        if (v14 != 63) {
          goto LABEL_50;
        }
        goto LABEL_57;
      }
    }
    else if (v14 != 20)
    {
      if (v14 != 21) {
        goto LABEL_50;
      }
LABEL_57:
      int v46 = (unsigned __int16 *)((char *)*a2 - **a2);
      if (*v46 < 0xBu) {
        return 11;
      }
      uint64_t v47 = v46[5];
      uint64_t v14 = 11;
      if (v47)
      {
        if ((*(int *)((char *)*a2 + v47) & 0x8000) != 0) {
          return 30;
        }
        else {
          return 11;
        }
      }
      return v14;
    }
    uint64_t v48 = (unsigned __int16 *)((char *)*a2 - **a2);
    if (*v48 < 0xBu) {
      return 29;
    }
    uint64_t v49 = v48[5];
    uint64_t v14 = 29;
    if (v49)
    {
      if ((*(int *)((char *)*a2 + v49) & 0x8000) != 0) {
        return 11;
      }
      else {
        return 29;
      }
    }
    return v14;
  }
LABEL_50:
  if (a5 && sub_6BF05C(a1, (long long *)a2, v14, a6))
  {
    double v40 = v39;
    double v41 = sub_6D82EC(v50, a2, (int **)v52);
    double v42 = fabs(v41);
    if (v42 > *(double *)(a1 + 280) || v42 >= v40)
    {
      if (v42 < *(double *)(a1 + 296)) {
        return v14;
      }
      BOOL v43 = v41 < 0.0;
      unsigned int v44 = 61;
      unsigned int v45 = 60;
    }
    else
    {
      BOOL v43 = v41 < 0.0;
      unsigned int v44 = 63;
      unsigned int v45 = 62;
    }
    if (v43) {
      return v45;
    }
    else {
      return v44;
    }
  }
  return v14;
}

uint64_t sub_6B9618(uint64_t a1, void *a2)
{
  unint64_t v4 = sub_470ADC(a2);
  uint64_t v5 = sub_64EFC4((uint64_t)a2);
  int v6 = *(_DWORD *)(v5 + 8);
  uint64_t v80 = *(void *)v5;
  int v81 = v6;
  char v7 = sub_64F240((uint64_t)a2);
  BOOL v8 = sub_64F348((uint64_t)a2);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = (unsigned int *)sub_470B40(a2, v4 - 1);
  sub_2954EC(v9, (((unint64_t)(v10[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v10[1] << 32) | *v10) ^ 0x1000000000000, (uint64_t)&v67);
  sub_2E4B5C((uint64_t)&v67, v74);
  uint64_t v14 = *(void **)(a1 + 40);
  if (v14)
  {
    *(void *)(a1 + 48) = v14;
    operator delete(v14);
    *(void *)(a1 + 40) = 0;
    *(void *)(a1 + 48) = 0;
    *(void *)(a1 + 56) = 0;
  }
  uint64_t v15 = v74[0];
  *(_OWORD *)(a1 + 40) = *(_OWORD *)v74;
  *(void *)(a1 + 56) = v75;
  v74[1] = 0;
  uint64_t v75 = 0;
  v74[0] = 0;
  if (__p)
  {
    BOOL v69 = __p;
    operator delete(__p);
  }
  if (v8) {
    uint64_t v16 = 82;
  }
  else {
    uint64_t v16 = 18;
  }
  if (v80 != -1 && *(void *)(a1 + 40) != *(void *)(a1 + 48))
  {
    sub_3B8BC4((unsigned int **)(a1 + 40), (unsigned int *)&v80, 0, 0, (uint64_t)&v67, (unint64_t)v15, v11, v12, v13);
    long long v17 = v67;
    uint64_t v18 = *(void *)(a1 + 888);
    uint64_t v19 = v18 / 100;
    __int16 v20 = v18 % 100;
    __int16 v21 = v18 < 0 ? -50 : 50;
    if (*(double *)&v67 >= (double)(v19
                                   + (int)(((5243 * (__int16)(v21 + v20)) >> 19)
                                         + ((5243 * (__int16)(v21 + v20)) >> 31))))
    {
      int v22 = (int)__p;
      int v65 = (int)v69;
      int v66 = HIDWORD(__p);
      int64_t v23 = v70;
      if (sub_64EFDC((uint64_t)a2)
        || ((uint64_t v24 = *(void *)(a1 + 896), v25 = v24 / 100, v26 = v24 % 100, v24 < 0) ? (v27 = -50) : (v27 = 50),
            *(double *)&v17 <= (double)(v25
                                      + (int)(((5243 * (__int16)(v27 + v26)) >> 19)
                                            + ((5243 * (__int16)(v27 + v26)) >> 31)))))
      {
        uint64_t v28 = sub_38128((void *)(a1 + 40), v23);
        long long v67 = *(void **)v28;
        LODWORD(__p) = *(_DWORD *)(v28 + 8);
        char v29 = operator new(0x18uLL);
        BOOL v30 = v29;
        long long v78 = v29 + 6;
        uint64_t v79 = v29 + 6;
        *(double *)char v29 = *(double *)&v67;
        int v29[2] = __p;
        v29[3] = v22;
        v29[4] = v66;
        v29[5] = v65;
        long long v77 = v29;
        LODWORD(v31) = *v29;
        if (*v29 == v22)
        {
          LODWORD(v31) = v22;
          if (v29[1] == v66)
          {
            LODWORD(v31) = v22;
            if (v29[2] == v65)
            {
              LODWORD(v31) = v22;
              if ((v23 & 0x80000000) == 0)
              {
                int64_t v23 = v23;
                while (1)
                {
                  uint64_t v32 = (_DWORD *)sub_38128((void *)(a1 + 40), v23);
                  LODWORD(v31) = *v32;
                  if (*v32 != *v30 || v32[1] != v30[1] || v32[2] != v30[2]) {
                    break;
                  }
                  if (v23-- < 1) {
                    goto LABEL_35;
                  }
                }
                uint64_t v34 = sub_38128((void *)(a1 + 40), v23);
                uint64_t v31 = *(void *)v34;
                _OWORD v30[2] = *(_DWORD *)(v34 + 8);
                *(void *)BOOL v30 = v31;
              }
            }
          }
        }
LABEL_35:
        if (v31 == v30[3] && v30[1] == v30[4] && v30[2] == v30[5] && v4 != 1)
        {
          long long v35 = (unsigned int *)sub_470B40(a2, v4 - 2);
          sub_2954EC(*(void *)a1, (((unint64_t)(v35[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v35[1] << 32) | *v35) ^ 0x1000000000000, (uint64_t)v74);
          sub_3A5CB4((uint64_t)v74, (uint64_t)&v67);
          while (1)
          {
            unsigned int v36 = (char *)v74[1];
            if (v76)
            {
              if (v74[1] == v75)
              {
                int v44 = 0;
                LODWORD(v42) = 0;
              }
              else
              {
                unint64_t v37 = *((void *)v75 - 1);
                double v38 = sub_2964C4((uint64_t)v74[0], v37, 1);
                double v39 = &v38[*(unsigned __int16 *)&v38[-*(int *)v38 + 4]];
                uint64_t v40 = (uint64_t)&v39[4 * HIDWORD(v37) + *(unsigned int *)v39];
                double v41 = (int *)(v40 + 4 + *(unsigned int *)(v40 + 4));
                unsigned int v36 = (char *)v74[1];
                unint64_t v42 = (unint64_t)(v75 - (char *)v74[1]) >> 3;
                BOOL v43 = (unsigned int *)((char *)v41 + *(unsigned __int16 *)((char *)v41 - *v41 + 6));
                int v44 = *(unsigned int *)((char *)v43 + *v43);
              }
            }
            else
            {
              int v44 = v74[1] == v75 ? 0 : -1;
              LODWORD(v42) = v44;
            }
            if (v71 == v42 && v72 == v44) {
              break;
            }
            if (*(void *)v30 != sub_2E1BC0((uint64_t)&v67) || v30[2] != v46)
            {
              *(void *)BOOL v30 = sub_2E1BC0((uint64_t)&v67);
              _OWORD v30[2] = v47;
              unsigned int v36 = (char *)v74[1];
              break;
            }
            if (v73) {
              sub_2E7608((uint64_t)&v67);
            }
            else {
              sub_2E74E8((uint64_t)&v67);
            }
          }
          if (v36)
          {
            uint64_t v75 = v36;
            operator delete(v36);
          }
        }
        double v48 = COERCE_DOUBLE(operator new(0x18uLL));
        long long __p = (void *)(*(void *)&v48 + 24);
        BOOL v69 = (void *)(*(void *)&v48 + 24);
        **(_DWORD **)&double v48 = v22;
        *(_DWORD *)(*(void *)&v48 + 4) = v66;
        *(_DWORD *)(*(void *)&v48 + 8) = v65;
        int v52 = v80;
        *(void *)(*(void *)&v48 + 12) = v80;
        *(_DWORD *)(*(void *)&v48 + 20) = v81;
        *(double *)&long long v67 = v48;
        if (v22 == v52 && v66 == *(_DWORD *)(*(void *)&v48 + 16) && v65 == *(_DWORD *)(*(void *)&v48 + 20)) {
          goto LABEL_77;
        }
        BOOL v53 = !v8;
        if (v8) {
          uint64_t v54 = 83;
        }
        else {
          uint64_t v54 = 33;
        }
        if (v53) {
          uint64_t v55 = 34;
        }
        else {
          uint64_t v55 = 84;
        }
        sub_49344((uint64_t *)&v77, 0, 30.0, v49, v50, v51);
        double v57 = v56;
        sub_49344((uint64_t *)&v67, 1, 30.0, v58, v59, v60);
        for (double i = v61 + -180.0 - v57; i >= 180.0; double i = i + -360.0)
          ;
        for (; i < -180.0; double i = i + 360.0)
          ;
        double v63 = (double)(uint64_t)llround(i);
        if (*(double *)(a1 + 904) >= v63 || *(double *)(a1 + 912) <= v63)
        {
          if (*(double *)(a1 + 920) >= v63 || (uint64_t v54 = v55, *(double *)(a1 + 928) <= v63)) {
LABEL_77:
          }
            uint64_t v54 = v16;
        }
        if (*(double *)&v67 != 0.0)
        {
          long long __p = v67;
          operator delete(v67);
        }
        if (v77)
        {
          long long v78 = v77;
          operator delete(v77);
        }
        return v54;
      }
      else if ((v7 & 1) == 0)
      {
        if (sub_64F1DC((uint64_t)a2)) {
          return 16;
        }
        else {
          return 39;
        }
      }
    }
  }
  return v16;
}

void sub_6B9C7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  if (__p) {
    operator delete(__p);
  }
  operator delete(v25);
  _Unwind_Resume(a1);
}

void sub_6B9CE8(uint64_t *a1@<X0>, void *a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  __p[0] = 0;
  __p[1] = 0;
  LODWORD(v19) = 0;
  uint64_t v18 = 0;
  *((void *)&v19 + 1) = -1;
  v20[0] = 0;
  v20[1] = 0;
  uint64_t v21 = 0;
  int v22 = 0;
  *(void *)&long long v8 = -1;
  *((void *)&v8 + 1) = -1;
  long long v23 = v8;
  long long v24 = v8;
  long long v25 = v8;
  *(void *)&long long v26 = -1;
  DWORD2(v26) = 0;
  *(void *)&long long v27 = -1;
  DWORD2(v27) = 0;
  long long v28 = xmmword_20E2060;
  *(_WORD *)char v29 = 0;
  int v29[2] = 0;
  *(void *)&v29[15] = 0;
  *(void *)&v29[8] = 0;
  if (!a3 && !sub_46CABC((uint64_t)a2)
    || sub_470ADC(a2) - 2 == a3 && !sub_46CAC4((uint64_t)a2))
  {
    uint64_t v9 = (unsigned int *)sub_470B40(a2, a3);
    __src[0] = (((unint64_t)(v9[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v9[1] << 32) | *v9) ^ 0x1000000000000;
    uint64_t v10 = (unsigned int *)sub_470B40(a2, a3 + 1);
    __src[1] = (((unint64_t)(v10[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v10[1] << 32) | *v10) ^ 0x1000000000000;
    sub_2D8554(__p, (char *)__src, (char *)&v31, 2uLL);
    LODWORD(v19) = 0;
    *(_OWORD *)a4 = *(_OWORD *)__p;
    *(void *)(a4 + 16) = v18;
    __p[0] = 0;
    __p[1] = 0;
    uint64_t v18 = 0;
    goto LABEL_12;
  }
  if (sub_6BC6A4((uint64_t)a1, a2, a3, (uint64_t)__p)
    || sub_35E640()
    || sub_6BC880((uint64_t)a1, a2, a3, (uint64_t)__p)
    || sub_6BCB8C((uint64_t)a1, a2, a3, (uint64_t)__p)
    || sub_8DB990(a1, a2, a3, (uint64_t)__p))
  {
    *(_OWORD *)a4 = *(_OWORD *)__p;
    *(void *)(a4 + 16) = v18;
    __p[1] = 0;
    uint64_t v18 = 0;
    __p[0] = 0;
LABEL_12:
    *(_OWORD *)(a4 + 24) = v19;
    *(_OWORD *)(a4 + 40) = *(_OWORD *)v20;
    *(void *)(a4 + 56) = v21;
    v20[1] = 0;
    uint64_t v21 = 0;
    v20[0] = 0;
    *(_DWORD *)(a4 + 64) = v22;
    long long v11 = v23;
    long long v12 = v24;
    long long v13 = v25;
    *(_OWORD *)(a4 + 120) = v26;
    *(_OWORD *)(a4 + 104) = v13;
    *(_OWORD *)(a4 + 88) = v12;
    *(_OWORD *)(a4 + 72) = v11;
    long long v14 = v27;
    long long v15 = v28;
    long long v16 = *(_OWORD *)v29;
    *(void *)(a4 + 183) = *(void *)&v29[15];
    *(_OWORD *)(a4 + 168) = v16;
    *(_OWORD *)(a4 + 152) = v15;
    *(_OWORD *)(a4 + 136) = v14;
    goto LABEL_13;
  }
  sub_6BCC90((uint64_t)a1, a2, a3, 1, a4);
  if (v20[0])
  {
    v20[1] = v20[0];
    operator delete(v20[0]);
  }
LABEL_13:
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
}

void sub_6B9FAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_6B9FC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_6B9FD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_6B9FE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_6B9FFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = **(void **)a3;
  long long v8 = (int *)sub_2D5D58(*(void *)a1, v7 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v6 + 7772))
  {
    uint64_t v9 = sub_2DB8E0(v6 + 3896, v7, 0);
    uint64_t v10 = &v9[-*(int *)v9];
    if (*(unsigned __int16 *)v10 < 5u)
    {
      uint64_t v11 = 0;
    }
    else
    {
      uint64_t v11 = *((unsigned __int16 *)v10 + 2);
      if (v11) {
        v11 += (uint64_t)&v9[*(unsigned int *)&v9[v11]];
      }
    }
    long long v12 = (int *)(v11 + 4 * WORD2(v7) + 4 + *(unsigned int *)(v11 + 4 * WORD2(v7) + 4));
  }
  else
  {
    long long v12 = 0;
  }
  v23[0] = v8;
  v23[1] = v12;
  v23[2] = (int *)sub_2E5C38(v6, v7 & 0xFFFFFFFFFFFFLL, 1);
  v23[3] = v13;
  int v24 = v7;
  __int16 v25 = WORD2(v7);
  BOOL v26 = (v7 & 0xFF000000000000) != 0;
  uint64_t v14 = *(void *)a1;
  uint64_t v15 = *(void *)(*(void *)(a3 + 8) - 8);
  sub_2D5D58(*(void *)a1, v15 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v14 + 7772)) {
    sub_2DB8E0(v14 + 3896, v15, 0);
  }
  sub_2E5C38(v14, v15 & 0xFFFFFFFFFFFFLL, 1);
  int v16 = *(_DWORD *)(a3 + 24);
  char v17 = sub_35E640();
  if (sub_6C0160(a1, v16, v17))
  {
    int v18 = *(_DWORD *)(a2 + 112);
    switch(v18)
    {
      case 0:
        uint64_t v20 = *(void *)(a2 + 104);
        int v29 = 0;
        long long v27 = 0u;
        long long v28 = 0u;
        __int16 v30 = -1;
        char v31 = 0;
        sub_6BFC98((double *)a1, v23, (uint64_t *)(a2 + 80), v20, (uint64_t)&v27, a3 + 40);
        break;
      case 1:
      case 2:
        *(_DWORD *)(a3 + 64) = 0;
        if (v18 == 1) {
          long long v19 = (double *)(a1 + 800);
        }
        else {
          long long v19 = (double *)(a1 + 776);
        }
        LOBYTE(v27) = 0;
        sub_6D35E8(a3 + 40, v19, (char *)&v27);
        LOBYTE(v27) = 1;
        sub_6D35E8(a3 + 40, (double *)(a1 + 832), (char *)&v27);
        break;
      case 3:
        uint64_t v21 = *(void *)(a2 + 104);
        if (v21 != -1) {
          sub_6BFC98((double *)a1, (int **)(a2 + 40), (uint64_t *)(a2 + 80), v21, a2, a3 + 40);
        }
        break;
      case 4:
        uint64_t v22 = *(void *)(a2 + 104);
        int v29 = 0;
        long long v27 = 0u;
        long long v28 = 0u;
        __int16 v30 = -1;
        char v31 = 0;
        sub_6BFC98((double *)a1, (int **)a2, (uint64_t *)(a2 + 80), v22, (uint64_t)&v27, a3 + 40);
        break;
      case 5:
        sub_6C7C20((double *)a1, a2, a3);
        break;
      case 6:
        sub_6C7CF8(a1, (int **)a2, a3);
        break;
      default:
        return;
    }
  }
}

void sub_6BA338(uint64_t a1, void *a2)
{
  uint64_t v2 = a2[1245] - a2[1244];
  if (v2)
  {
    uint64_t v4 = a1;
    unint64_t v5 = 0;
    uint64_t v6 = a2 + 1244;
    unint64_t v7 = 0xAAAAAAAAAAAAAAABLL * (v2 >> 6);
    unint64_t v122 = v7;
    do
    {
      uint64_t v9 = sub_68F6BC(v6, v5);
      if (*(void *)v9 != *(void *)(v9 + 8) && *(unsigned char *)(v9 + 184) == 0)
      {
        uint64_t v11 = v9;
        uint64_t v12 = *(void *)(v4 + 696);
        long long v13 = (void *)sub_68F6BC(v6, v5);
        unint64_t v8 = v5 + 1;
        unint64_t v14 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[1245] - a2[1244]) >> 6);
        if (v5 + 1 > v14) {
          unint64_t v15 = v5 + 1;
        }
        else {
          unint64_t v15 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[1245] - a2[1244]) >> 6);
        }
        if (v5 + 1 >= v14)
        {
          unint64_t v21 = -1;
        }
        else
        {
          uint64_t v16 = v13[4] + ((uint64_t)(v13[1] - *v13) >> 3) - 1;
          unint64_t v17 = v5 + 1;
          while (1)
          {
            uint64_t v18 = sub_68F6BC(v6, v17);
            if (*(void *)v18 != *(void *)(v18 + 8) && *(_DWORD *)(v18 + 24) != 0) {
              break;
            }
            if (v15 == ++v17)
            {
              unint64_t v21 = -1;
              goto LABEL_25;
            }
          }
          if (sub_471074(a2, v16, 1, *(void *)(v18 + 32), 1u, v19) > v12) {
            unint64_t v21 = -1;
          }
          else {
            unint64_t v21 = v17;
          }
LABEL_25:
          unint64_t v7 = v122;
        }
        v22.i64[0] = -1;
        v22.i64[1] = -1;
        if ((vmaxv_u16((uint16x4_t)vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)(v11 + 72), v22), (int32x4_t)vceqq_s64(*(int64x2_t *)(v11 + 88), v22))))) & 1) == 0&& (*(void *)(v11 + 104) & *(void *)(v11 + 112)) == -1&& *(void *)(v11 + 120) == -1&& (v21 == -1|| (uint64_t v23 = sub_68F6BC(v6, v21), v24.i64[0] = -1, v24.i64[1] = -1, (vmaxv_u16((uint16x4_t)vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)(v23 + 72), v24), (int32x4_t)vceqq_s64(*(int64x2_t *)(v23 + 88), v24))))) & 1) == 0)
           && (*(void *)(v23 + 104) & *(void *)(v23 + 112)) == -1
           && *(void *)(v23 + 120) == -1))
        {
          switch(*(_DWORD *)(v11 + 24))
          {
            case 3:
              if (*(unsigned __int8 *)(v11 + 168) | *(unsigned __int8 *)(v11 + 169)) {
                goto LABEL_99;
              }
              goto LABEL_35;
            case 5:
              uint64_t v36 = a2[63];
              int v37 = *(unsigned __int8 *)(a1 + 656);
              uint64_t v38 = sub_68F6BC(v6, v5);
              unint64_t v39 = v5;
              while (v39)
              {
                uint64_t v40 = sub_68F6BC(v6, --v39);
                uint64_t v42 = *(void *)(v40 + 8);
                if (*(void *)v40 != v42 && *(_DWORD *)(v40 + 24) != 0)
                {
                  uint64_t v44 = *(void *)(v40 + 32);
                  if (v37) {
                    uint64_t v45 = v44 + 1;
                  }
                  else {
                    uint64_t v45 = v44 + ((v42 - *(void *)v40) >> 3) - 1;
                  }
                  if (sub_471074(a2, v45, 1, *(void *)(v38 + 32), 1u, v41) <= v36
                    && *(_DWORD *)(sub_68F6BC(v6, v39) + 24) == 5)
                  {
                    goto LABEL_98;
                  }
                  goto LABEL_99;
                }
              }
              goto LABEL_99;
            case 0xC:
LABEL_35:
              uint64_t v25 = *(void *)(a1 + 632);
              int v26 = *(unsigned __int8 *)(a1 + 656);
              uint64_t v27 = sub_68F6BC(v6, v5);
              unint64_t v28 = v5;
              do
              {
                if (!v28)
                {
                  unint64_t v35 = -1;
                  goto LABEL_83;
                }
                uint64_t v29 = sub_68F6BC(v6, --v28);
                uint64_t v31 = *(void *)(v29 + 8);
              }
              while (*(void *)v29 == v31 || *(_DWORD *)(v29 + 24) == 0);
              uint64_t v33 = *(void *)(v29 + 32);
              if (v26) {
                uint64_t v34 = v33 + 1;
              }
              else {
                uint64_t v34 = v33 + ((v31 - *(void *)v29) >> 3) - 1;
              }
              if (sub_471074(a2, v34, 1, *(void *)(v27 + 32), 1u, v30) > v25) {
                unint64_t v35 = -1;
              }
              else {
                unint64_t v35 = v28;
              }
LABEL_83:
              uint64_t v68 = *(void *)(a1 + 624);
              BOOL v69 = (void *)sub_68F6BC(v6, v5);
              unint64_t v70 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[1245] - a2[1244]) >> 6);
              BOOL v71 = v8 >= v70;
              if (v8 > v70) {
                unint64_t v70 = v5 + 1;
              }
              if (v71)
              {
LABEL_93:
                int v79 = 0;
                unint64_t v80 = -1;
              }
              else
              {
                uint64_t v120 = v68;
                uint64_t v72 = v69[4] + ((uint64_t)(v69[1] - *v69) >> 3) - 1;
                unint64_t v73 = v70 - 1;
                unint64_t v74 = v5;
                while (1)
                {
                  unint64_t v75 = v74 + 1;
                  uint64_t v76 = sub_68F6BC(v6, v74 + 1);
                  if (*(void *)v76 != *(void *)(v76 + 8) && *(_DWORD *)(v76 + 24) != 0) {
                    break;
                  }
                  ++v74;
                  if (v73 == v75) {
                    goto LABEL_93;
                  }
                }
                uint64_t v110 = sub_471074(a2, v72, 1, *(void *)(v76 + 32), 1u, v77);
                int v79 = 0;
                unint64_t v80 = -1;
                if (v74 != -2 && v110 <= v120)
                {
                  unint64_t v7 = v122;
                  if (*(unsigned char *)(sub_68F6BC(v6, v74 + 1) + 190))
                  {
                    uint64_t v4 = a1;
                    goto LABEL_3;
                  }
                  int v79 = 1;
                  unint64_t v80 = v74 + 1;
                }
              }
              if (v35 != -1)
              {
                int v81 = (void *)sub_68F6BC(v6, v35);
                if (*v81 != v81[1]) {
                  goto LABEL_98;
                }
              }
              if (v79)
              {
                unint64_t v82 = (void *)sub_68F6BC(v6, v80);
                if (*v82 != v82[1]) {
                  goto LABEL_98;
                }
              }
              goto LABEL_99;
            case 0x14:
              uint64_t v46 = *(void *)(a1 + 584);
              int v47 = (void *)sub_68F6BC(v6, v5);
              unint64_t v48 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[1245] - a2[1244]) >> 6);
              BOOL v49 = v8 >= v48;
              if (v8 > v48) {
                unint64_t v48 = v5 + 1;
              }
              if (v49) {
                goto LABEL_99;
              }
              uint64_t v50 = v47[4] + ((uint64_t)(v47[1] - *v47) >> 3) - 1;
              unint64_t v51 = v48 - 1;
              unint64_t v52 = v5;
              while (1)
              {
                unint64_t v53 = v52 + 1;
                uint64_t v54 = sub_68F6BC(v6, v52 + 1);
                if (*(void *)v54 != *(void *)(v54 + 8) && *(_DWORD *)(v54 + 24) != 0) {
                  break;
                }
                ++v52;
                if (v51 == v53) {
                  goto LABEL_99;
                }
              }
              uint64_t v111 = sub_471074(a2, v50, 1, *(void *)(v54 + 32), 1u, v55);
              if (v52 == -2 || v111 > v46 || *(_DWORD *)(sub_68F6BC(v6, v52 + 1) + 24) != 1) {
                goto LABEL_99;
              }
              goto LABEL_98;
            case 0x15:
              uint64_t v57 = *(void *)(a1 + 584);
              double v58 = (void *)sub_68F6BC(v6, v5);
              unint64_t v59 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[1245] - a2[1244]) >> 6);
              BOOL v60 = v8 >= v59;
              if (v8 > v59) {
                unint64_t v59 = v5 + 1;
              }
              if (v60) {
                goto LABEL_99;
              }
              uint64_t v61 = v58[4] + ((uint64_t)(v58[1] - *v58) >> 3) - 1;
              unint64_t v62 = v59 - 1;
              unint64_t v63 = v5;
              break;
            default:
              goto LABEL_99;
          }
          while (1)
          {
            unint64_t v64 = v63 + 1;
            uint64_t v65 = sub_68F6BC(v6, v63 + 1);
            if (*(void *)v65 != *(void *)(v65 + 8) && *(_DWORD *)(v65 + 24) != 0) {
              break;
            }
            ++v63;
            if (v62 == v64) {
              goto LABEL_99;
            }
          }
          uint64_t v112 = sub_471074(a2, v61, 1, *(void *)(v65 + 32), 1u, v66);
          if (v63 != -2 && v112 <= v57 && *(_DWORD *)(sub_68F6BC(v6, v63 + 1) + 24) == 2) {
LABEL_98:
          }
            *(_DWORD *)(v11 + 24) = 0;
LABEL_99:
          uint64_t v83 = *(void *)(a1 + 640);
          uint64_t v84 = (void *)sub_68F6BC(v6, v5);
          unint64_t v85 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[1245] - a2[1244]) >> 6);
          BOOL v86 = v8 >= v85;
          if (v8 > v85) {
            unint64_t v85 = v5 + 1;
          }
          if (!v86)
          {
            uint64_t v87 = v84[4] + ((uint64_t)(v84[1] - *v84) >> 3) - 1;
            unint64_t v88 = v85 - 1;
            unint64_t v89 = v5;
            while (1)
            {
              unint64_t v90 = v89 + 1;
              uint64_t v91 = sub_68F6BC(v6, v89 + 1);
              if (*(void *)v91 != *(void *)(v91 + 8) && *(_DWORD *)(v91 + 24) != 0) {
                break;
              }
              ++v89;
              if (v88 == v90) {
                goto LABEL_114;
              }
            }
            uint64_t v94 = sub_471074(a2, v87, 1, *(void *)(v91 + 32), 1u, v92);
            if (v89 != -2 && v94 <= v83)
            {
              uint64_t v95 = sub_68F6BC(v6, v89 + 1);
              if (sub_6BB560((uint64_t *)a1, v11, v95))
              {
                *(_DWORD *)(v11 + 24) = 0;
                *(_DWORD *)(sub_68F6BC(v6, v89 + 1) + 24) = 0;
              }
            }
          }
LABEL_114:
          unint64_t v7 = v122;
          uint64_t v4 = a1;
          switch(*(_DWORD *)(v11 + 24))
          {
            case 1:
            case 2:
            case 3:
            case 0x14:
            case 0x15:
            case 0x1B:
            case 0x1C:
            case 0x1D:
            case 0x1E:
            case 0x21:
            case 0x22:
            case 0x3C:
            case 0x3D:
            case 0x3E:
            case 0x3F:
            case 0x41:
            case 0x42:
              if (!*(unsigned char *)(v11 + 168))
              {
                uint64_t v96 = *(void *)(a1 + 648);
                uint64_t v97 = sub_68F6BC(v6, v5);
                unint64_t v98 = v5;
                do
                {
                  if (!v98) {
                    goto LABEL_158;
                  }
                  uint64_t v99 = sub_68F6BC(v6, --v98);
                  uint64_t v101 = *(void *)(v99 + 8);
                }
                while (*(void *)v99 == v101 || *(_DWORD *)(v99 + 24) == 0);
                if (sub_471074(a2, *(void *)(v99 + 32) + ((v101 - *(void *)v99) >> 3) - 1, 1, *(void *)(v97 + 32), 1u, v100) > v96)goto LABEL_158; {
                uint64_t v103 = sub_68F6BC(v6, v98);
                }
                v104.i64[0] = *(void *)(v103 + 120);
                v104.i64[1] = *(void *)(v11 + 72);
                v105.i64[0] = -1;
                v105.i64[1] = -1;
                if (vmaxv_u8((uint8x8_t)vmovn_s16((int16x8_t)vmvnq_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)(v103 + 72), v105), (int32x4_t)vceqq_s64(*(int64x2_t *)(v103 + 88), v105)), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)(v103 + 104), v105), (int32x4_t)vceqq_s64(v104, v105)))))))goto LABEL_158; {
                BOOL v107 = (vaddvq_s32((int32x4_t)vbicq_s8((int8x16_t)xmmword_20B8880, (int8x16_t)vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)(v11 + 80), v105), (int32x4_t)vceqq_s64(*(int64x2_t *)(v11 + 96), v105)))) & 0xF) == 0&& *(void *)(v11 + 112) == -1&& *(void *)(v11 + 120) == -1;
                }
                unint64_t v7 = v122;
                if (v107)
                {
                  int v108 = *(_DWORD *)(v103 + 24);
                  switch(v108)
                  {
                    case 1:
                    case 20:
                    case 27:
                    case 29:
                    case 33:
                    case 60:
                    case 62:
                    case 65:
                      int v109 = *(_DWORD *)(v11 + 24);
                      switch(v109)
                      {
                        case 1:
                        case 20:
                        case 27:
                        case 29:
                        case 33:
                        case 60:
                        case 62:
                        case 65:
                          goto LABEL_147;
                        default:
                          goto LABEL_161;
                      }
                    case 2:
                    case 21:
                    case 28:
                    case 30:
                    case 34:
                    case 61:
                    case 63:
                    case 66:
                      int v109 = *(_DWORD *)(v11 + 24);
                      switch(v109)
                      {
                        case 2:
                        case 21:
                        case 28:
                        case 30:
                        case 34:
                        case 61:
                        case 63:
                        case 66:
                          goto LABEL_147;
                        default:
                          goto LABEL_161;
                      }
                    default:
                      int v109 = *(_DWORD *)(v11 + 24);
LABEL_161:
                      if ((v108 - 41) >= 0x13 && v109 != 3) {
                        goto LABEL_3;
                      }
LABEL_147:
                      uint64_t v113 = *(void *)(*(void *)(v11 + 8) - 8);
                      if (!v113) {
                        goto LABEL_158;
                      }
                      uint64_t v114 = *(void *)(*(void *)(v103 + 8) - 8);
                      if (!v114) {
                        goto LABEL_157;
                      }
                      unint64_t v115 = sub_2E68E8(*(void *)a1, v113);
                      if (v115 > 0xFFFFFFFEFFFFFFFFLL || !v115) {
                        goto LABEL_157;
                      }
                      uint64_t v116 = *(void *)a1;
                      unint64_t v121 = v113 & 0xFFFFFFFFFFFFLL;
                      sub_2D5D58(*(void *)a1, v113 & 0xFFFFFFFFFFFFLL);
                      if (*(unsigned char *)(v116 + 7772)) {
                        sub_2DB8E0(v116 + 3896, v113, 0);
                      }
                      sub_2E5C38(v116, v121, 1);
                      uint64_t v117 = *(void *)a1;
                      sub_2D5D58(*(void *)a1, v114 & 0xFFFFFFFFFFFFLL);
                      if (*(unsigned char *)(v117 + 7772)) {
                        sub_2DB8E0(v117 + 3896, v114, 0);
                      }
                      sub_2E5C38(v117, v114 & 0xFFFFFFFFFFFFLL, 1);
                      unint64_t v118 = v118 & 0xFF00000000000000 | ((unint64_t)((v114 & 0xFF000000000000) != 0) << 48) | v114 & 0xFFFFFFFFFFFFLL;
                      unint64_t v119 = v119 & 0xFF00000000000000 | ((unint64_t)((v113 & 0xFF000000000000) != 0) << 48) | v121;
                      if (!sub_2E79EC(v116, v119, v118)) {
                        goto LABEL_157;
                      }
                      uint64_t v4 = a1;
                      sub_6BBDD0(a1, (uint64_t)a2, v98, v5);
                      break;
                  }
                  goto LABEL_158;
                }
              }
              break;
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 0xA:
            case 0xB:
            case 0xC:
            case 0xD:
            case 0xE:
            case 0xF:
            case 0x10:
            case 0x11:
            case 0x12:
            case 0x13:
            case 0x16:
            case 0x17:
            case 0x18:
            case 0x19:
            case 0x1A:
            case 0x1F:
            case 0x20:
            case 0x23:
            case 0x24:
            case 0x25:
            case 0x26:
            case 0x27:
            case 0x28:
            case 0x29:
            case 0x2A:
            case 0x2B:
            case 0x2C:
            case 0x2D:
            case 0x2E:
            case 0x2F:
            case 0x30:
            case 0x31:
            case 0x32:
            case 0x33:
            case 0x34:
            case 0x35:
            case 0x36:
            case 0x37:
            case 0x38:
            case 0x39:
            case 0x3A:
            case 0x3B:
            case 0x40:
              break;
            default:
LABEL_157:
              uint64_t v4 = a1;
LABEL_158:
              unint64_t v7 = v122;
              break;
          }
        }
        else
        {
          sub_6BB204(v4, a2, v5);
        }
      }
      else
      {
        unint64_t v8 = v5 + 1;
      }
LABEL_3:
      unint64_t v5 = v8;
    }
    while (v8 != v7);
  }
}

uint64_t sub_6BB204(uint64_t a1, void *a2, unint64_t a3)
{
  unint64_t v3 = a3;
  uint64_t v6 = a2 + 1244;
  uint64_t result = sub_68F6BC(a2 + 1244, a3);
  if (*(void *)(result + 112) != -1) {
    return result;
  }
  unint64_t v8 = (int64x2_t *)result;
  uint64_t v9 = result + 72;
  uint64_t v10 = *(void *)(a1 + 696);
  uint64_t v11 = (void *)sub_68F6BC(v6, v3);
  unint64_t v12 = v3 + 1;
  unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[1245] - a2[1244]) >> 6);
  if (v3 + 1 > v13) {
    unint64_t v14 = v3 + 1;
  }
  else {
    unint64_t v14 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[1245] - a2[1244]) >> 6);
  }
  if (v3 + 1 >= v13)
  {
LABEL_14:
    unint64_t v12 = -1;
    if (*(void *)v9 == -1) {
      goto LABEL_19;
    }
LABEL_33:
    if (v8[6].i64[0] == -1 && v8[6].i64[1] == -1 && v12 != -1)
    {
      uint64_t v28 = sub_68F6BC(v6, v12);
      if (*(void *)(v28 + 96) != -1 || *(void *)(v28 + 104) != -1)
      {
        uint64_t v29 = (void *)sub_68F6BC(v6, v12);
        v8[6].i64[0] = v29[12];
        v8[6].i64[1] = v29[13];
        v8[8].i64[1] = v29[17];
      }
    }
    goto LABEL_43;
  }
  uint64_t v15 = v11[4] + ((uint64_t)(v11[1] - *v11) >> 3) - 1;
  while (1)
  {
    uint64_t v16 = sub_68F6BC(v6, v12);
    if (*(void *)v16 != *(void *)(v16 + 8) && *(_DWORD *)(v16 + 24) != 0) {
      break;
    }
    if (v14 == ++v12) {
      goto LABEL_14;
    }
  }
  if (sub_471074(a2, v15, 1, *(void *)(v16 + 32), 1u, v17) > v10) {
    unint64_t v12 = -1;
  }
  if (*(void *)v9 != -1) {
    goto LABEL_33;
  }
LABEL_19:
  BOOL v19 = 0;
  v20.i64[0] = -1;
  v20.i64[1] = -1;
  uint64_t v21 = v8[5].i64[1];
  if (vmaxv_u16((uint16x4_t)vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqq_s64(v8[5], v20), (int32x4_t)vceqq_s64(v8[6], v20))))))goto LABEL_28; {
  if (v8[7].i64[0] != -1)
  }
    goto LABEL_28;
  BOOL v19 = 0;
  uint64_t v21 = -1;
  if (v8[7].i64[1] != -1 || v8[10].i8[8] || v12 == -1) {
    goto LABEL_28;
  }
  uint64_t v22 = sub_68F6BC(v6, v12);
  v23.i64[0] = *(void *)(v22 + 88);
  v23.i64[1] = *(void *)(v22 + 120);
  v24.i64[0] = -1;
  v24.i64[1] = -1;
  if ((vmaxv_u16((uint16x4_t)vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqq_s64((int64x2_t)vextq_s8(*(int8x16_t *)(v22 + 72), *(int8x16_t *)(v22 + 72), 8uLL), v24), (int32x4_t)vceqq_s64(v23, v24))))) & 1) == 0&& *(void *)(v22 + 96) == -1&& *(void *)(v22 + 104) == -1)
  {
    uint64_t v21 = v8[5].i64[1];
    BOOL v19 = v8[4].i64[1] != -1;
LABEL_28:
    if (!v19 && v21 == -1 && v8[7].i64[1] == -1) {
      goto LABEL_43;
    }
    goto LABEL_33;
  }
  if (sub_6EEB1C(a1 + 5944, (uint64_t)v8))
  {
    uint64_t v39 = sub_68F6BC(v6, v12);
    *(_OWORD *)uint64_t v9 = *(_OWORD *)(v39 + 72);
    long long v40 = *(_OWORD *)(v39 + 104);
    long long v41 = *(_OWORD *)(v39 + 120);
    long long v42 = *(_OWORD *)(v39 + 88);
    *(_OWORD *)(v9 + 60) = *(_OWORD *)(v39 + 132);
    *(_OWORD *)(v9 + 32) = v40;
    *(_OWORD *)(v9 + 48) = v41;
    *(_OWORD *)(v9 + 16) = v42;
    sub_6EEBFC(a1 + 5944, (uint64_t)v8);
  }
LABEL_43:
  uint64_t v30 = *(void *)(a1 + 696);
  int v31 = *(unsigned __int8 *)(a1 + 656);
  uint64_t result = sub_68F6BC(v6, v3);
  uint64_t v32 = result;
  while (v3)
  {
    uint64_t result = sub_68F6BC(v6, --v3);
    uint64_t v34 = *(void *)(result + 8);
    if (*(void *)result != v34 && *(_DWORD *)(result + 24) != 0)
    {
      uint64_t v36 = *(void *)(result + 32);
      if (v31) {
        uint64_t v37 = v36 + 1;
      }
      else {
        uint64_t v37 = v36 + ((v34 - *(void *)result) >> 3) - 1;
      }
      uint64_t result = sub_471074(a2, v37, 1, *(void *)(v32 + 32), 1u, v33);
      if (result <= v30)
      {
        uint64_t v38 = sub_68F6BC(v6, v3);
        uint64_t result = sub_6A244C(v9, v38 + 72);
        if (result) {
          v8[1].i32[2] = 0;
        }
      }
      return result;
    }
  }
  return result;
}

uint64_t sub_6BB560(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(a2 + 168)) {
    return 0;
  }
  uint64_t v3 = 0;
  switch(*(_DWORD *)(a2 + 24))
  {
    case 1:
    case 2:
    case 0x14:
    case 0x15:
    case 0x1B:
    case 0x1C:
    case 0x1D:
    case 0x1E:
    case 0x21:
    case 0x22:
    case 0x3C:
    case 0x3D:
    case 0x3E:
    case 0x3F:
    case 0x41:
    case 0x42:
      switch(*(_DWORD *)(a2 + 24))
      {
        case 1:
        case 0x14:
        case 0x1B:
        case 0x1D:
        case 0x21:
        case 0x3C:
        case 0x3E:
        case 0x41:
          uint64_t v3 = 0;
          switch(*(_DWORD *)(a3 + 24))
          {
            case 2:
            case 0x15:
            case 0x1C:
            case 0x1E:
            case 0x22:
            case 0x3D:
            case 0x3F:
            case 0x42:
              goto LABEL_7;
            default:
              return v3;
          }
        default:
          uint64_t v3 = 0;
          switch(*(_DWORD *)(a3 + 24))
          {
            case 1:
            case 0x14:
            case 0x1B:
            case 0x1D:
            case 0x21:
            case 0x3C:
            case 0x3E:
            case 0x41:
LABEL_7:
              if (*(void *)a2 == *(void *)(a2 + 8)) {
                return 0;
              }
              uint64_t v8 = *(void *)(a3 + 8);
              if (*(void *)a3 == v8) {
                return 0;
              }
              unint64_t v9 = **(void **)a2;
              unint64_t v10 = *(void *)(v8 - 8);
              uint64_t v11 = *a1;
              unint64_t v30 = v10 & 0xFFFFFFFFFFFFLL;
              unint64_t v12 = (int *)sub_2D5D58(*a1, v10 & 0xFFFFFFFFFFFFLL);
              if (*(unsigned char *)(v11 + 7772))
              {
                unint64_t v13 = sub_2DB8E0(v11 + 3896, v10, 0);
                unint64_t v14 = &v13[-*(int *)v13];
                if (*(unsigned __int16 *)v14 < 5u)
                {
                  uint64_t v15 = 0;
                }
                else
                {
                  uint64_t v15 = *((unsigned __int16 *)v14 + 2);
                  if (v15) {
                    v15 += (uint64_t)&v13[*(unsigned int *)&v13[v15]];
                  }
                }
                uint64_t v16 = v15 + 4 * WORD2(v10) + 4 + *(unsigned int *)(v15 + 4 * WORD2(v10) + 4);
              }
              else
              {
                uint64_t v16 = 0;
              }
              uint64_t v34 = v12;
              v35[0] = v16;
              v35[1] = sub_2E5C38(v11, v30, 1);
              int v35[2] = v17;
              int v36 = v10;
              __int16 v37 = WORD2(v10);
              BOOL v38 = (v10 & 0xFF000000000000) != 0;
              if (!sub_6DEDE8((uint64_t)(a1 + 145), &v34)) {
                return 0;
              }
              sub_6921A0(*a1, v9, 1, 1, (uint64_t)v40);
              sub_6921A0(*a1, v10, 1, 1, (uint64_t)v39);
              if (sub_693F58(v40))
              {
                if (!sub_693F58(v39) && !sub_693FBC(v39)) {
                  return 0;
                }
              }
              else
              {
                BOOL v18 = sub_693FBC(v40);
                if (sub_693F58(v39))
                {
                  if (!v18) {
                    return 0;
                  }
                }
                else if (v18 != sub_693FBC(v39))
                {
                  return 0;
                }
              }
              sub_58E730(*a1, v9, 1u, &v32);
              sub_6BC598((uint64_t *)&v32, (uint64_t)&v34);
              sub_53BD98(&v32);
              sub_58E730(*a1, v10, 1u, v31);
              sub_6BC598((uint64_t *)v31, (uint64_t)&v32);
              sub_53BD98(v31);
              if (!sub_2DE448((uint64_t)&v34)) {
                goto LABEL_41;
              }
              if (!sub_2DE448((uint64_t)&v32)) {
                goto LABEL_41;
              }
              if (sub_69412C((unsigned __int8 *)v35, v33)) {
                goto LABEL_41;
              }
              int v19 = sub_6941D4(*a1, v9 & 0xFFFFFFFFFFFFLL);
              if (v19 != sub_6941D4(*a1, v30)) {
                goto LABEL_41;
              }
              uint64_t v20 = *(void *)(a2 + 176);
              uint64_t v21 = *(unint64_t **)a2;
              uint64_t v22 = (uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 3;
              v31[0] = a1;
              if (v20 + 1 == v22)
              {
LABEL_34:
                uint64_t v25 = *(void *)(a3 + 176);
                int v26 = *(uint64_t **)a3;
                v31[0] = a1;
                if (v25)
                {
                  uint64_t v27 = 8 * v25 - 8;
                  do
                  {
                    unint64_t v28 = sub_6C9044((uint64_t **)v31, v26);
                    uint64_t v3 = v28;
                    ++v26;
                    if (v27) {
                      char v29 = v28;
                    }
                    else {
                      char v29 = 0;
                    }
                    v27 -= 8;
                  }
                  while ((v29 & 1) != 0);
                }
                else
                {
                  uint64_t v3 = 1;
                }
              }
              else
              {
                int64x2_t v23 = (uint64_t *)&v21[v20 + 1];
                uint64_t v24 = 8 * v22 - 8 * v20 - 8;
                while ((sub_6C9044((uint64_t **)v31, v23) & 1) != 0)
                {
                  ++v23;
                  v24 -= 8;
                  if (!v24) {
                    goto LABEL_34;
                  }
                }
LABEL_41:
                uint64_t v3 = 0;
              }
              sub_2DF404((uint64_t)&v32);
              sub_2DF404((uint64_t)&v34);
              break;
            default:
              return v3;
          }
          break;
      }
      break;
    default:
      return v3;
  }
  return v3;
}

void sub_6BB954(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
}

void sub_6BBDD0(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 9960) - *(void *)(a2 + 9952)) >> 6);
  if (v4 <= a3 || v4 <= a4) {
    return;
  }
  unint64_t v10 = (void *)(a2 + 9952);
  uint64_t v11 = sub_68F6BC((void *)(a2 + 9952), a3);
  uint64_t v12 = sub_68F6BC(v10, a4);
  if (*(void *)v11 == *(void *)(v11 + 8)) {
    return;
  }
  uint64_t v13 = v12;
  if (*(void *)v12 == *(void *)(v12 + 8)) {
    return;
  }
  if (!*(_DWORD *)(v11 + 24) || *(_DWORD *)(v12 + 24) == 0) {
    return;
  }
  sub_594714((uint64_t)&v38, v11);
  sub_693300((uint64_t)&v38, v13);
  long long __p = 0;
  int v36 = 0;
  uint64_t v37 = 0;
  unint64_t v15 = a3 + 1;
  unint64_t v34 = a3 + 1;
  if (a3 + 1 >= a4)
  {
LABEL_23:
    sub_46B058();
    int64x2_t v23 = v22;
    uint64_t v25 = v24;
    uint64_t v26 = *(void *)(v11 + 32);
    uint64_t v28 = *(void *)v11;
    uint64_t v27 = *(void *)(v11 + 8);
    sub_46B058();
    sub_6BC270(v23, v25 + v26 + ((v27 - v28) >> 3) - 1, v30, *(void *)(v13 + 32) + v29 + ((uint64_t)(*(void *)(v13 + 8) - *(void *)v13) >> 3), (char **)&v38);
    sub_30361C((uint64_t)&v38);
    int v31 = *(_DWORD *)(v11 + 24);
    if ((v31 - 6) >= 2 && (v31 - 86) >= 2 && (v31 - 41) >= 0x13)
    {
      switch(v31)
      {
        case 7:
        case 11:
        case 22:
        case 23:
        case 24:
        case 29:
        case 30:
        case 64:
        case 65:
        case 66:
        case 86:
        case 87:
          break;
        default:
          int v40 = sub_693690(a1, (uint64_t **)v11, (uint64_t **)v13);
          sub_6BC418((unint64_t *)(v11 + 40), v13 + 40, (uint64_t *)&v32);
          if (v41[0])
          {
            v41[1] = v41[0];
            operator delete(v41[0]);
          }
          *(_OWORD *)long long v41 = v32;
          uint64_t v42 = v33;
          break;
      }
    }
    sub_693BFC(v11, (uint64_t)&v38);
    sub_693CB0(v13);
    *(void *)&long long v32 = a2;
    sub_693D10((unint64_t **)&__p, &v32);
    goto LABEL_28;
  }
  while (1)
  {
    uint64_t v16 = sub_68F6BC(v10, v15);
    unint64_t v17 = *(void *)v16;
    BOOL v18 = *(char **)(v16 + 8);
    if (*(_DWORD *)(v16 + 24)) {
      break;
    }
    uint64_t v19 = (uint64_t)&v18[-v17];
LABEL_22:
    sub_3455C4((uint64_t)&v38, *(uint64_t *)v39, v17, v18, v19 >> 3);
    sub_A4710((uint64_t)&__p, &v34);
    unint64_t v15 = v34 + 1;
    unint64_t v34 = v15;
    if (v15 >= a4) {
      goto LABEL_23;
    }
  }
  uint64_t v19 = (uint64_t)&v18[-v17];
  uint64_t v20 = *(uint64_t **)v13;
  if (&v18[-v17] != (char *)(*(void *)(v13 + 8) - *(void *)v13)) {
    goto LABEL_28;
  }
  if ((char *)v17 == v18) {
    goto LABEL_22;
  }
  uint64_t v21 = *(char **)v16;
  while (__PAIR64__(*((unsigned __int16 *)v21 + 2), *(_DWORD *)v21) == __PAIR64__((unsigned __int16)WORD2(*v20), *v20)
       && (HIWORD(*v20) & 1) != (v21[6] == 0))
  {
    ++v20;
    v21 += 8;
    if (v21 == v18) {
      goto LABEL_22;
    }
  }
LABEL_28:
  if (__p)
  {
    int v36 = __p;
    operator delete(__p);
  }
  if (v41[0])
  {
    v41[1] = v41[0];
    operator delete(v41[0]);
  }
  if (v38)
  {
    *(void *)uint64_t v39 = v38;
    operator delete(v38);
  }
}