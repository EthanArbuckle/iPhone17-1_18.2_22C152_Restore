char *sub_177B9D0(uint64_t a1, char *a2, void *a3)
{
  char *v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t vars8;

  v4 = a2;
  v6 = *(_DWORD *)(a1 + 40);
  if (v6) {
    v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  if ((v6 & 2) != 0) {
    v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  v7 = *(unsigned int *)(a1 + 56);
  if ((int)v7 >= 1)
  {
    v8 = 0;
    v9 = 8 * v7;
    do
    {
      v4 = (char *)sub_125CE58(a3, 3, *(void *)(*(void *)(a1 + 64) + v8 + 8), v4);
      v8 += 8;
    }
    while (v9 != v8);
  }
  if (*(_WORD *)(a1 + 26)) {
    v4 = sub_1886844(a1 + 16, 200, 2000, v4, a3);
  }
  v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    v13 = *(void **)(v12 + 8);
    v14 = *(void *)(v12 + 16);
  }
  else
  {
    v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_177BB2C(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  uint64_t result = v2 + v3;
  if ((int)v3 >= 1)
  {
    v5 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v6 = *v5++;
      uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
      uint64_t v8 = *(void *)(v6 + 8);
      if ((v7 & 0x80u) == 0) {
        uint64_t v8 = v7;
      }
      result += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      --v3;
    }
    while (v3);
  }
  int v9 = *(_DWORD *)(a1 + 40);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      unint64_t v10 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
      uint64_t v12 = *(void *)(v10 + 8);
      if ((v11 & 0x80u) == 0) {
        uint64_t v12 = v11;
      }
      result += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v9 & 2) != 0)
    {
      unint64_t v13 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
      uint64_t v15 = *(void *)(v13 + 8);
      if ((v14 & 0x80u) == 0) {
        uint64_t v15 = v14;
      }
      result += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v17 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    result += v18;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_177BC70(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    v5 = (const std::string **)(*(void *)(a2 + 64) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_188FB98(a1 + 48, v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      unint64_t v10 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (uint64_t *)*v12;
      }
      sub_1881DF4((std::string **)(a1 + 72), v10, v12);
    }
    if ((v9 & 2) != 0)
    {
      unint64_t v13 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 2u;
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (uint64_t *)*v15;
      }
      sub_1881DF4((std::string **)(a1 + 80), v13, v15);
    }
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_177BDC0(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_177BDC8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PrototypeContainer.Prototype");
}

uint64_t sub_177BDD8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D9798;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 40) = a2;
  *(_DWORD *)(a1 + 64) = 0;
  return a1;
}

void sub_177BE48(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_177BE78(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D9798;
  *(_DWORD *)(a1 + 24) = 0;
  uint64_t v6 = (uint64_t *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  int v7 = *(_DWORD *)(a2 + 48);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 56);
    int v9 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_1872D34(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v10 = *(_DWORD *)(a1 + 48) + v7;
    *(_DWORD *)(a1 + 48) = v10;
    uint64_t v11 = *(int **)(a1 + 56);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  *(_DWORD *)(a1 + 64) = 0;
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  return a1;
}

void sub_177BF78(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_177BFC8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1870E3C(a1 + 5);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_177C050(void *a1)
{
  sub_177BFC8(a1);

  operator delete();
}

char *sub_177C088(uint64_t a1, char *a2, int32x2_t *a3)
{
  v20 = a2;
  if ((sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v6 = v20 + 1;
      unsigned int v7 = *v20;
      if (*v20 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          uint64_t v6 = (char *)sub_188C180((uint64_t)v20, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          uint64_t v6 = v20 + 2;
        }
      }
      v20 = v6;
      if (v7 == 10)
      {
        unint64_t v13 = v6 - 1;
        while (1)
        {
          uint64_t v14 = (unsigned __int8 *)(v13 + 1);
          v20 = v13 + 1;
          uint64_t v15 = *(_DWORD **)(a1 + 56);
          if (v15 && (uint64_t v16 = *(int *)(a1 + 48), (int)v16 < *v15))
          {
            *(_DWORD *)(a1 + 48) = v16 + 1;
            uint64_t v17 = *(void *)&v15[2 * v16 + 2];
          }
          else
          {
            uint64_t v18 = sub_178E3B4(*(void *)(a1 + 40));
            uint64_t v17 = sub_188CDC8(a1 + 40, (uint64_t)v18);
            uint64_t v14 = (unsigned __int8 *)v20;
          }
          unint64_t v13 = (char *)sub_177C278(a3, v17, v14);
          v20 = v13;
          if (!v13) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v13 || *v13 != 10) {
            goto LABEL_28;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (v7 - 1600 < 0xFA0 || (v7 - 8000) >> 6 <= 0x7C)
      {
        uint64_t v12 = sub_18859DC((uint64_t **)(a1 + 16), v7, v6, (uint64_t)&off_2549110, (uint64_t *)(a1 + 8), a3);
      }
      else
      {
        if (*v5)
        {
          uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          uint64_t v6 = v20;
        }
        uint64_t v12 = sub_1885AC0(v7, v11, v6, a3);
      }
      v20 = (char *)v12;
      if (!v12) {
        return 0;
      }
LABEL_28:
      if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
        return v20;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v20;
    }
    return 0;
  }
  return v20;
}

uint64_t sub_177C278(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_177B6F0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_177C308(uint64_t a1, char *a2, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 48);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      a2[1] = v9;
      if (v9 > 0x7F) {
        int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        int v10 = a2 + 2;
      }
      a2 = sub_177B9D0(v8, v10, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 200, 2000, a2, a3);
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return a2;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)a2 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(a2, v14, (int)v15);
    a2 += v16;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, a2);
}

uint64_t sub_177C470(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 48);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_177BB2C(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v4 += v13;
  }
  *(_DWORD *)(a1 + 64) = v4;
  return v4;
}

void *sub_177C524@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PrototypeContainer");
}

uint64_t sub_177C534(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = (uint64_t *)(a1 + 16);
  *(void *)a1 = off_24D9818;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_154F638(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    uint64_t v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_177C614(_Unwind_Exception *a1)
{
  sub_154F538(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_177C658(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_154F538(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_177C6D8(void *a1)
{
  sub_177C658(a1);

  operator delete();
}

char *sub_177C710(uint64_t a1, char *a2, int32x2_t *a3)
{
  v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      int v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          int v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          int v6 = v19 + 2;
        }
      }
      v19 = v6;
      if (v7 == 10)
      {
        unint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_1854FE8(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          unint64_t v12 = sub_154DF54(a3, v16, v13);
          v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        int v6 = v19;
      }
      v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_177C8B0(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_1854784(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_177C9F4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_18549D0(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void *sub_177CAA4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.StorefrontFaces");
}

uint64_t sub_177CAB4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D9898;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_177CB18(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_177CB48(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_177CBC4(void *a1)
{
  sub_177CB48(a1);

  operator delete();
}

char *sub_177CBFC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    uint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      uint64_t v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v15 + 2;
        }
      }
      uint64_t v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          unint64_t v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          unint64_t v13 = (std::string *)sub_188DBD8(v5);
          uint64_t v7 = v15;
        }
        unint64_t v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        unint64_t v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_2549188, v5, a3);
      }
      uint64_t v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_177CD4C(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_177CE18(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

void *sub_177CE70@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlacecardLayoutConfigurationFilter");
}

uint64_t sub_177CE80(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D9918;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_177CEE4(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_177CF14(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_177CF90(void *a1)
{
  sub_177CF14(a1);

  operator delete();
}

char *sub_177CFC8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    uint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      uint64_t v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v15 + 2;
        }
      }
      uint64_t v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          unint64_t v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          unint64_t v13 = (std::string *)sub_188DBD8(v5);
          uint64_t v7 = v15;
        }
        unint64_t v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        unint64_t v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_25491B8, v5, a3);
      }
      uint64_t v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_177D118(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_177D1E4(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

void *sub_177D23C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PrototypeContainerFilter");
}

uint64_t sub_177D24C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D9998;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_177D2B0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_177D2E0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_177D35C(void *a1)
{
  sub_177D2E0(a1);

  operator delete();
}

char *sub_177D394(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    uint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      uint64_t v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v15 + 2;
        }
      }
      uint64_t v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          unint64_t v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          unint64_t v13 = (std::string *)sub_188DBD8(v5);
          uint64_t v7 = v15;
        }
        unint64_t v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        unint64_t v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_25491E8, v5, a3);
      }
      uint64_t v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_177D4E4(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_177D5B0(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

void *sub_177D608@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.VehiclePositionFilter");
}

uint64_t sub_177D618(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D9A18;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_177D67C(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_177D6AC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_177D728(void *a1)
{
  sub_177D6AC(a1);

  operator delete();
}

char *sub_177D760(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    uint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      uint64_t v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v15 + 2;
        }
      }
      uint64_t v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          unint64_t v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          unint64_t v13 = (std::string *)sub_188DBD8(v5);
          uint64_t v7 = v15;
        }
        unint64_t v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        unint64_t v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_2549218, v5, a3);
      }
      uint64_t v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_177D8B0(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_177D97C(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

void *sub_177D9D4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.LinkedServiceFilter");
}

uint64_t sub_177D9E4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D9A98;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_177DA48(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_177DA78(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_177DAF4(void *a1)
{
  sub_177DA78(a1);

  operator delete();
}

char *sub_177DB2C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    uint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      uint64_t v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v15 + 2;
        }
      }
      uint64_t v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          unint64_t v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          unint64_t v13 = (std::string *)sub_188DBD8(v5);
          uint64_t v7 = v15;
        }
        unint64_t v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        unint64_t v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_2549248, v5, a3);
      }
      uint64_t v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_177DC7C(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_177DD48(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

void *sub_177DDA0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.BusinessHoursFilter");
}

uint64_t sub_177DDB0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D9B18;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(_WORD *)(a1 + 56) = 0;
  return a1;
}

void sub_177DE18(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_177DE48(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_177DEC4(void *a1)
{
  sub_177DE48(a1);

  operator delete();
}

char *sub_177DEFC(uint64_t a1, char *a2, int32x2_t *a3)
{
  v50 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v50, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = v50 + 1;
    unsigned int v9 = *v50;
    if (*v50 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v50, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v50 + 2;
      }
    }
    v50 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_44;
        }
        v5 |= 1u;
        unint64_t v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v12 = v8 + 2;
LABEL_13:
          v50 = v12;
          *(_DWORD *)(a1 + 48) = v13;
          goto LABEL_54;
        }
        v36 = (char *)sub_188C0D0((uint64_t)v8, v13);
        v50 = v36;
        *(_DWORD *)(a1 + 48) = v37;
        if (v36) {
          goto LABEL_54;
        }
        goto LABEL_73;
      case 2u:
        if (v9 != 16) {
          goto LABEL_44;
        }
        v5 |= 2u;
        uint64_t v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          v38 = (char *)sub_188C138((uint64_t)v8, v16);
          v50 = v38;
          *(unsigned char *)(a1 + 52) = v39 != 0;
          if (!v38) {
            goto LABEL_73;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_18:
          v50 = v15;
          *(unsigned char *)(a1 + 52) = v16 != 0;
        }
        goto LABEL_54;
      case 3u:
        if (v9 != 24) {
          goto LABEL_44;
        }
        v5 |= 4u;
        uint64_t v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          v40 = (char *)sub_188C138((uint64_t)v8, v19);
          v50 = v40;
          *(unsigned char *)(a1 + 53) = v41 != 0;
          if (!v40) {
            goto LABEL_73;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          v50 = v18;
          *(unsigned char *)(a1 + 53) = v19 != 0;
        }
        goto LABEL_54;
      case 4u:
        if (v9 != 32) {
          goto LABEL_44;
        }
        v5 |= 8u;
        v21 = v8 + 1;
        uint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          v42 = (char *)sub_188C138((uint64_t)v8, v22);
          v50 = v42;
          *(unsigned char *)(a1 + 54) = v43 != 0;
          if (!v42) {
            goto LABEL_73;
          }
        }
        else
        {
          v21 = v8 + 2;
LABEL_28:
          v50 = v21;
          *(unsigned char *)(a1 + 54) = v22 != 0;
        }
        goto LABEL_54;
      case 5u:
        if (v9 != 40) {
          goto LABEL_44;
        }
        v5 |= 0x10u;
        v24 = v8 + 1;
        uint64_t v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        uint64_t v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          v44 = (char *)sub_188C138((uint64_t)v8, v25);
          v50 = v44;
          *(unsigned char *)(a1 + 55) = v45 != 0;
          if (!v44) {
            goto LABEL_73;
          }
        }
        else
        {
          v24 = v8 + 2;
LABEL_33:
          v50 = v24;
          *(unsigned char *)(a1 + 55) = v25 != 0;
        }
        goto LABEL_54;
      case 6u:
        if (v9 != 48) {
          goto LABEL_44;
        }
        v5 |= 0x20u;
        v27 = v8 + 1;
        uint64_t v28 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v29 = *v27;
        uint64_t v28 = v28 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          v46 = (char *)sub_188C138((uint64_t)v8, v28);
          v50 = v46;
          *(unsigned char *)(a1 + 56) = v47 != 0;
          if (!v46) {
            goto LABEL_73;
          }
        }
        else
        {
          v27 = v8 + 2;
LABEL_38:
          v50 = v27;
          *(unsigned char *)(a1 + 56) = v28 != 0;
        }
        goto LABEL_54;
      case 7u:
        if (v9 != 56) {
          goto LABEL_44;
        }
        v5 |= 0x40u;
        v30 = v8 + 1;
        uint64_t v31 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v32 = *v30;
        uint64_t v31 = v31 + (v32 << 7) - 128;
        if (v32 < 0)
        {
          v48 = (char *)sub_188C138((uint64_t)v8, v31);
          v50 = v48;
          *(unsigned char *)(a1 + 57) = v49 != 0;
          if (!v48) {
            goto LABEL_73;
          }
        }
        else
        {
          v30 = v8 + 2;
LABEL_43:
          v50 = v30;
          *(unsigned char *)(a1 + 57) = v31 != 0;
        }
        goto LABEL_54;
      default:
LABEL_44:
        if (v9) {
          BOOL v33 = (v9 & 7) == 4;
        }
        else {
          BOOL v33 = 1;
        }
        if (!v33)
        {
          if ((v9 - 8000) >> 6 > 0x7C)
          {
            if (*v7)
            {
              v35 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              unint64_t v8 = v50;
            }
            v34 = sub_1885AC0(v9, v35, v8, a3);
          }
          else
          {
            v34 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2549278, (uint64_t *)(a1 + 8), a3);
          }
          v50 = (char *)v34;
          if (!v34) {
            goto LABEL_73;
          }
LABEL_54:
          if (sub_11947B8((uint64_t)a3, &v50, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_73:
        }
          v50 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return v50;
    }
  }
}

char *sub_177E398(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 48);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 52);
    *uint64_t v4 = 16;
    v4[1] = v10;
    v4 += 2;
    if ((v6 & 4) == 0)
    {
LABEL_10:
      if ((v6 & 8) == 0) {
        goto LABEL_11;
      }
      goto LABEL_21;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_10;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v11 = *(unsigned char *)(a1 + 53);
  *uint64_t v4 = 24;
  v4[1] = v11;
  v4 += 2;
  if ((v6 & 8) == 0)
  {
LABEL_11:
    if ((v6 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_24;
  }
LABEL_21:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v12 = *(unsigned char *)(a1 + 54);
  *uint64_t v4 = 32;
  v4[1] = v12;
  v4 += 2;
  if ((v6 & 0x10) == 0)
  {
LABEL_12:
    if ((v6 & 0x20) == 0) {
      goto LABEL_13;
    }
    goto LABEL_27;
  }
LABEL_24:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v13 = *(unsigned char *)(a1 + 55);
  *uint64_t v4 = 40;
  v4[1] = v13;
  v4 += 2;
  if ((v6 & 0x20) == 0)
  {
LABEL_13:
    if ((v6 & 0x40) == 0) {
      goto LABEL_33;
    }
    goto LABEL_30;
  }
LABEL_27:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v14 = *(unsigned char *)(a1 + 56);
  *uint64_t v4 = 48;
  v4[1] = v14;
  v4 += 2;
  if ((v6 & 0x40) != 0)
  {
LABEL_30:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v15 = *(unsigned char *)(a1 + 57);
    *uint64_t v4 = 56;
    v4[1] = v15;
    v4 += 2;
  }
LABEL_33:
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_177E64C(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x7F) != 0)
  {
    if (v3) {
      result += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v4 = result + 2;
    if ((v3 & 2) == 0) {
      uint64_t v4 = result;
    }
    if ((v3 & 4) != 0) {
      v4 += 2;
    }
    if ((v3 & 8) != 0) {
      v4 += 2;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 2;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 2;
    }
    if ((v3 & 0x40) != 0) {
      uint64_t result = v4 + 2;
    }
    else {
      uint64_t result = v4;
    }
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    result += v7;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void *sub_177E720@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceCollectionFilter");
}

void *sub_177E730(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C45E8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_177E7B0(void *a1)
{
  sub_177E730(a1);

  operator delete();
}

char *sub_177E7E8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      unint64_t v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          unint64_t v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          unint64_t v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        char v12 = v6 - 1;
        while (1)
        {
          char v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          char v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_185089C(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            char v13 = (unsigned __int8 *)v19;
          }
          char v12 = sub_12688D0(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        char v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        char v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        unint64_t v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_177E988(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        char v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        char v10 = __dst + 2;
      }
      __dst = sub_184B3AC(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    char v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    char v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_177EACC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_184B568(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void *sub_177EB7C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceCollectionItemFilter");
}

uint64_t sub_177EB8C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D9C18;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_177EBF0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_177EC20(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_177EC9C(void *a1)
{
  sub_177EC20(a1);

  operator delete();
}

char *sub_177ECD4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    uint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      uint64_t v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v15 + 2;
        }
      }
      uint64_t v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          unint64_t v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          unint64_t v13 = (std::string *)sub_188DBD8(v5);
          uint64_t v7 = v15;
        }
        char v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        char v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_25492E8, v5, a3);
      }
      uint64_t v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_177EE24(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_177EEF0(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

void *sub_177EF48@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.GuideGroupFilter");
}

uint64_t sub_177EF58(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D9C98;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_177EFBC(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_177EFEC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_177F068(void *a1)
{
  sub_177EFEC(a1);

  operator delete();
}

char *sub_177F0A0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    uint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      uint64_t v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v15 + 2;
        }
      }
      uint64_t v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          unint64_t v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          unint64_t v13 = (std::string *)sub_188DBD8(v5);
          uint64_t v7 = v15;
        }
        char v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        char v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_2549318, v5, a3);
      }
      uint64_t v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_177F1F0(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_177F2BC(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

void *sub_177F314@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ExploreGuidesFilter");
}

void *sub_177F324(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  a1[1] = v4;
  *a1 = off_24D9D18;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  *(void *)((char *)a1 + 45) = 0;
  a1[5] = 0;
  return a1;
}

void sub_177F38C(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_177F3BC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_177F438(void *a1)
{
  sub_177F3BC(a1);

  operator delete();
}

char *sub_177F470(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v26 + 2;
      }
    }
    int v26 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_23;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_23:
      int v26 = v15;
      *(unsigned char *)(a1 + 52) = v16 != 0;
      goto LABEL_32;
    }
    uint64_t v22 = (char *)sub_188C138((uint64_t)v8, v16);
    int v26 = v22;
    *(unsigned char *)(a1 + 52) = v23 != 0;
    if (!v22) {
      goto LABEL_41;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v19 = v8 + 1;
    LODWORD(v18) = *v8;
    if ((v18 & 0x80) == 0) {
      goto LABEL_27;
    }
    int v20 = *v19;
    uint64_t v18 = v18 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_27:
      int v26 = v19;
      *(_DWORD *)(a1 + 48) = v18;
      goto LABEL_32;
    }
    v24 = (char *)sub_188C138((uint64_t)v8, v18);
    int v26 = v24;
    *(_DWORD *)(a1 + 48) = v25;
    if (!v24) {
      goto LABEL_41;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if ((v9 - 8000) >> 6 > 0x7C)
    {
      if (*v7)
      {
        uint64_t v21 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v21 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        unint64_t v8 = v26;
      }
      char v14 = sub_1885AC0(v9, v21, v8, a3);
    }
    else
    {
      char v14 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2549348, (uint64_t *)(a1 + 8), a3);
    }
    int v26 = (char *)v14;
    if (!v14) {
      goto LABEL_41;
    }
    goto LABEL_32;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_41:
  int v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v26;
}

char *sub_177F6B0(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(int *)(a1 + 48);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 52);
    *uint64_t v4 = 16;
    v4[1] = v10;
    v4 += 2;
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    char v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    char v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_177F834(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 3) != 0)
  {
    if (v3)
    {
      int v4 = *(_DWORD *)(a1 + 48);
      if (v4 < 0) {
        uint64_t v5 = 11;
      }
      else {
        uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      result += v5;
    }
    if ((v3 & 2) != 0) {
      result += 2;
    }
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    result += v8;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void *sub_177F8D8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.RelatedPlaceFilter");
}

uint64_t sub_177F8E8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D9D98;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_177F94C(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_177F97C(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_177F9F8(void *a1)
{
  sub_177F97C(a1);

  operator delete();
}

char *sub_177FA30(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    uint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      unint64_t v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          unint64_t v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          unint64_t v7 = v15 + 2;
        }
      }
      uint64_t v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          unint64_t v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          unint64_t v13 = (std::string *)sub_188DBD8(v5);
          unint64_t v7 = v15;
        }
        char v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        char v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_2549380, v5, a3);
      }
      uint64_t v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_177FB80(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_177FC4C(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

void *sub_177FCA4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitTripStopFilter");
}

uint64_t sub_177FCB4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D9E18;
  sub_1882BC4(a1 + 16, a2);
  *(unsigned char *)(a1 + 72) = 0;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return a1;
}

void sub_177FD24(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_177FD54(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_25493B0)
  {
    uint64_t v5 = *(void *)(a1 + 48);
    if (v5)
    {
      sub_16B5CC0(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_16B5CC0(v6);
      operator delete();
    }
    unint64_t v7 = *(void **)(a1 + 64);
    if (v7)
    {
      sub_16B660C(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_177FE4C(uint64_t a1)
{
  sub_177FD54(a1);

  operator delete();
}

char *sub_177FE84(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v25 + 2;
      }
    }
    int v25 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        char v12 = *(void **)(a1 + 48);
        if (v12) {
          goto LABEL_20;
        }
        unint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unint64_t v13 = (void *)*v13;
        }
        char v12 = sub_1786034((uint64_t)v13);
        *(void *)(a1 + 48) = v12;
        goto LABEL_19;
      case 2u:
        if (v9 != 18) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        char v12 = *(void **)(a1 + 56);
        if (!v12)
        {
          char v14 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            char v14 = (void *)*v14;
          }
          char v12 = sub_1786034((uint64_t)v14);
          *(void *)(a1 + 56) = v12;
LABEL_19:
          unint64_t v8 = v25;
        }
LABEL_20:
        uint64_t v15 = sub_16D020C(a3, (uint64_t)v12, (unsigned __int8 *)v8);
        goto LABEL_41;
      case 3u:
        if (v9 != 26) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v16 = *(void **)(a1 + 64);
        if (!v16)
        {
          int v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v17 = (void *)*v17;
          }
          uint64_t v16 = sub_17860B0((uint64_t)v17);
          *(void *)(a1 + 64) = v16;
          unint64_t v8 = v25;
        }
        uint64_t v15 = sub_16B6084(a3, (uint64_t)v16, (unsigned __int8 *)v8);
        goto LABEL_41;
      case 4u:
        if (v9 != 32) {
          goto LABEL_32;
        }
        v5 |= 8u;
        uint64_t v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_31;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v23 = (char *)sub_188C138((uint64_t)v8, v19);
          int v25 = v23;
          *(unsigned char *)(a1 + 72) = v24 != 0;
          if (!v23) {
            goto LABEL_49;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_31:
          int v25 = v18;
          *(unsigned char *)(a1 + 72) = v19 != 0;
        }
        goto LABEL_42;
      default:
LABEL_32:
        if (v9) {
          BOOL v21 = (v9 & 7) == 4;
        }
        else {
          BOOL v21 = 1;
        }
        if (!v21)
        {
          if ((v9 - 8000) >> 6 > 0x7C)
          {
            if (*v7)
            {
              uint64_t v22 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              unint64_t v8 = v25;
            }
            uint64_t v15 = (char *)sub_1885AC0(v9, v22, v8, a3);
          }
          else
          {
            uint64_t v15 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_25493B0, (uint64_t *)(a1 + 8), a3);
          }
LABEL_41:
          int v25 = v15;
          if (!v15) {
            goto LABEL_49;
          }
LABEL_42:
          if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_49:
        }
          int v25 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return v25;
    }
  }
}

char *sub_1780180(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_16B6114(v7, (unint64_t)v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 56);
  *uint64_t v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    char v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    char v12 = v4 + 2;
  }
  uint64_t v4 = sub_16B6114(v10, (unint64_t)v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_27;
    }
    goto LABEL_24;
  }
LABEL_18:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 64);
  *uint64_t v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  uint64_t v4 = sub_16B68A8(v13, (unint64_t)v15, a3);
  if ((v6 & 8) != 0)
  {
LABEL_24:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v16 = *(unsigned char *)(a1 + 72);
    *uint64_t v4 = 32;
    v4[1] = v16;
    v4 += 2;
  }
LABEL_27:
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if ((v17 & 1) == 0) {
    return v4;
  }
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v19 + 31) < 0)
  {
    int v20 = *(void **)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
  }
  else
  {
    int v20 = (void *)(v19 + 8);
    LODWORD(v21) = *(unsigned __int8 *)(v19 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v21)
  {
    uint64_t v22 = (int)v21;
    memcpy(v4, v20, (int)v21);
    v4 += v22;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v20, v21, v4);
}

uint64_t sub_17803D0(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0xF) == 0) {
    goto LABEL_8;
  }
  if (v3)
  {
    uint64_t v7 = sub_16B6328(*(void *)(a1 + 48));
    v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_6;
      }
      goto LABEL_5;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v8 = sub_16B6328(*(void *)(a1 + 56));
  v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 4) != 0)
  {
LABEL_5:
    uint64_t v4 = sub_16B6A4C(*(void *)(a1 + 64));
    v2 += v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_6:
  if ((v3 & 8) != 0) {
    v2 += 2;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v9 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v2 += v10;
  }
  *(_DWORD *)(a1 + 44) = v2;
  return v2;
}

void *sub_17804EC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitTripStopTimeFilter");
}

uint64_t sub_17804FC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D9E98;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_1780560(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1780590(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_178060C(void *a1)
{
  sub_1780590(a1);

  operator delete();
}

char *sub_1780644(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    int v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      uint64_t v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v15 + 2;
        }
      }
      uint64_t v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          uint64_t v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          uint64_t v13 = (std::string *)sub_188DBD8(v5);
          uint64_t v7 = v15;
        }
        char v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        char v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_2549400, v5, a3);
      }
      uint64_t v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_1780794(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_1780860(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

void *sub_17808B8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitTripGeometryFilter");
}

uint64_t sub_17808C8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D9F18;
  sub_1882BC4(a1 + 16, a2);
  *(unsigned char *)(a1 + 48) = 0;
  *(void *)(a1 + 40) = 0;
  return a1;
}

void sub_1780930(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1780960(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17809DC(void *a1)
{
  sub_1780960(a1);

  operator delete();
}

char *sub_1780A14(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v20 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    goto LABEL_29;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v20 + 1;
    unsigned int v8 = *v20;
    if (*v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v20 + 2;
      }
    }
    int v20 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v13 = v7 + 1;
    uint64_t v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_17;
    }
    int v15 = *v13;
    uint64_t v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v7 + 2;
LABEL_17:
      int v20 = v13;
      *(unsigned char *)(a1 + 48) = v14 != 0;
      int v5 = 1;
      goto LABEL_22;
    }
    uint64_t v17 = (char *)sub_188C138((uint64_t)v7, v14);
    int v20 = v17;
    *(unsigned char *)(a1 + 48) = v18 != 0;
    int v5 = 1;
    if (!v17) {
      goto LABEL_30;
    }
LABEL_22:
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      goto LABEL_29;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if ((v8 - 8000) >> 6 > 0x7C)
    {
      if (*v6)
      {
        char v16 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        char v16 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = v20;
      }
      char v12 = sub_1885AC0(v8, v16, v7, a3);
    }
    else
    {
      char v12 = sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_2549430, (uint64_t *)(a1 + 8), a3);
    }
    int v20 = (char *)v12;
    if (!v12) {
      goto LABEL_30;
    }
    goto LABEL_22;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_29;
  }
LABEL_30:
  int v20 = 0;
LABEL_29:
  *(_DWORD *)(a1 + 40) |= v5;
  return v20;
}

char *sub_1780BE8(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  if (*(unsigned char *)(a1 + 40))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    char v6 = *(unsigned char *)(a1 + 48);
    *uint64_t v4 = 8;
    v4[1] = v6;
    v4 += 2;
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_1780CF0(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  if (*(unsigned char *)(a1 + 40)) {
    result += 2;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void *sub_1780D58@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PublisherFilter");
}

uint64_t sub_1780D68(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D9F98;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_1780DCC(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1780DFC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1780E78(void *a1)
{
  sub_1780DFC(a1);

  operator delete();
}

char *sub_1780EB0(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    char v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      uint64_t v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v15 + 2;
        }
      }
      int v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          uint64_t v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          uint64_t v13 = (std::string *)sub_188DBD8(v5);
          uint64_t v7 = v15;
        }
        uint64_t v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        uint64_t v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_2549468, v5, a3);
      }
      int v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_1781000(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_17810CC(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

void *sub_1781124@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.CollectionIdsFilter");
}

uint64_t sub_1781134(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17811EC(uint64_t a1)
{
  sub_1781134(a1);

  operator delete();
}

uint64_t sub_1781224(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_17812A0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)int v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        char v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          char v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      char v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        char v16 = (uint64_t *)*v16;
      }
      uint64_t v17 = (void *)(a1 + 24);
LABEL_27:
      unint64_t v19 = (std::string *)sub_1880F84(v17, v16);
      uint64_t v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v20;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)int v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)int v20 = 0;
  return *(void *)v20;
}

char *sub_1781448(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_1781534(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1781610()
{
  return 1;
}

void *sub_1781618@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.MediaLink.ThirdPartyLink");
}

void *sub_1781628(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_178169C(void *a1)
{
  sub_1781628(a1);

  operator delete();
}

uint64_t sub_17816D4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_17816F8(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v26 + 2;
      }
    }
    int v26 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    int v20 = v8 + 1;
    LODWORD(v19) = *v8;
    if ((v19 & 0x80) == 0) {
      goto LABEL_31;
    }
    int v21 = *v20;
    uint64_t v19 = v19 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      int v20 = v8 + 2;
LABEL_31:
      int v26 = v20;
      *(_DWORD *)(a1 + 24) = v19;
      int v5 = 1;
      goto LABEL_32;
    }
    uint64_t v23 = (char *)sub_188C138((uint64_t)v8, v19);
    int v26 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    int v5 = 1;
    if (!v23) {
      goto LABEL_45;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 16)
  {
    uint64_t v15 = v8 + 1;
    unint64_t v16 = *v8;
    if (*v8 < 0)
    {
      int v17 = *v15;
      int v18 = v16 + (v17 << 7);
      unint64_t v16 = (v18 - 128);
      if (v17 < 0)
      {
        int v26 = (char *)sub_188C138((uint64_t)v8, (v18 - 128));
        if (!v26) {
          goto LABEL_45;
        }
        unint64_t v16 = v22;
        goto LABEL_26;
      }
      uint64_t v15 = v8 + 2;
    }
    int v26 = v15;
LABEL_26:
    if (v16 > 2)
    {
      if (*v7) {
        int v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        int v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v16, v25);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 28) = v16;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v26;
    }
    int v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_45;
    }
    goto LABEL_32;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_45:
  int v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

unsigned char *sub_178192C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 28);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1781AD0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_14;
  }
  if (v1)
  {
    int v3 = *(_DWORD *)(a1 + 24);
    if (v3 < 0)
    {
      uint64_t v2 = 11;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v4 = *(_DWORD *)(a1 + 28);
  if (v4 < 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v5;
LABEL_14:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1781B90()
{
  return 1;
}

void *sub_1781B98@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.MediaLink.MediaLinkPositionMetaData");
}

uint64_t sub_1781BA8(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if ((uint64_t (***)())a1 != &off_25494B8)
  {
    uint64_t v6 = *(void **)(a1 + 64);
    if (v6)
    {
      sub_1781628(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_1870EBC((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1781C9C(uint64_t a1)
{
  sub_1781BA8(a1);

  operator delete();
}

uint64_t sub_1781CD4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1781224(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 7) == 0) {
    goto LABEL_10;
  }
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
  unint64_t v8 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v8 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v8 = 0;
    *(unsigned char *)(v8 + 23) = 0;
    if ((v5 & 2) != 0) {
      goto LABEL_20;
    }
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  **(unsigned char **)unint64_t v8 = 0;
  *(void *)(v8 + 8) = 0;
  if ((v5 & 2) == 0) {
    goto LABEL_8;
  }
LABEL_20:
  unint64_t v9 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v9 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v9 = 0;
    *(unsigned char *)(v9 + 23) = 0;
    if ((v5 & 4) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t result = sub_17816D4(*(void *)(v1 + 64));
    goto LABEL_10;
  }
  **(unsigned char **)unint64_t v9 = 0;
  *(void *)(v9 + 8) = 0;
  if ((v5 & 4) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v5 & 0x18) != 0) {
    *(void *)(v1 + 72) = 0;
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_1781DE4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v38 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v38, a3[11].i32[1])) {
    return *(void *)v38;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    char v7 = (unsigned __int8 *)(*(void *)v38 + 1);
    unsigned int v8 = **(unsigned char **)v38;
    if ((char)**(unsigned char **)v38 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        char v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v38, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = (unsigned __int8 *)(*(void *)v38 + 2);
      }
    }
    *(void *)v38 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_48;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 48);
        goto LABEL_17;
      case 2u:
        if (v8 != 18) {
          goto LABEL_48;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 56);
LABEL_17:
        unint64_t v15 = (std::string *)sub_1880F84(v13, v12);
        unint64_t v16 = (void *)sub_188C244(v15, *(char **)v38, (uint64_t)a3);
        goto LABEL_55;
      case 3u:
        if (v8 != 24) {
          goto LABEL_48;
        }
        uint64_t v17 = (char *)(v7 + 1);
        unint64_t v18 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        int v19 = *v17;
        int v20 = v18 + (v19 << 7);
        unint64_t v18 = (v20 - 128);
        if (v19 < 0)
        {
          *(void *)v38 = sub_188C138((uint64_t)v7, (v20 - 128));
          if (!*(void *)v38) {
            return 0;
          }
          unint64_t v18 = v34;
        }
        else
        {
          uint64_t v17 = (char *)(v7 + 2);
LABEL_22:
          *(void *)v38 = v17;
        }
        if (sub_129EB9C(v18))
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 72) = v18;
          goto LABEL_56;
        }
        if (*v6) {
          v36 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v37 = 3;
        goto LABEL_68;
      case 4u:
        if (v8 != 32) {
          goto LABEL_48;
        }
        int v21 = (char *)(v7 + 1);
        unint64_t v18 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_29;
        }
        int v22 = *v21;
        int v23 = v18 + (v22 << 7);
        unint64_t v18 = (v23 - 128);
        if (v22 < 0)
        {
          *(void *)v38 = sub_188C138((uint64_t)v7, (v23 - 128));
          if (!*(void *)v38) {
            return 0;
          }
          unint64_t v18 = v35;
        }
        else
        {
          int v21 = (char *)(v7 + 2);
LABEL_29:
          *(void *)v38 = v21;
        }
        if (sub_15B0770(v18))
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 76) = v18;
        }
        else
        {
          if (*v6) {
            v36 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v37 = 4;
LABEL_68:
          sub_188C020(v37, v18, v36);
        }
        goto LABEL_56;
      case 5u:
        if (v8 != 42) {
          goto LABEL_48;
        }
        int v24 = v7 - 1;
        while (1)
        {
          int v25 = v24 + 1;
          *(void *)v38 = v24 + 1;
          int v26 = *(_DWORD **)(a1 + 40);
          if (v26 && (uint64_t v27 = *(int *)(a1 + 32), (int)v27 < *v26))
          {
            *(_DWORD *)(a1 + 32) = v27 + 1;
            uint64_t v28 = *(void *)&v26[2 * v27 + 2];
          }
          else
          {
            int v29 = sub_178EAB4(*(void *)(a1 + 24));
            uint64_t v28 = sub_188CDC8(a1 + 24, (uint64_t)v29);
            int v25 = *(unsigned __int8 **)v38;
          }
          int v24 = (unsigned __int8 *)sub_17821EC(a3, v28, v25);
          *(void *)v38 = v24;
          if (!v24) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v24 || *v24 != 42) {
            goto LABEL_56;
          }
        }
      case 6u:
        if (v8 != 50) {
          goto LABEL_48;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        v30 = *(void **)(a1 + 64);
        if (!v30)
        {
          uint64_t v31 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v31 = (void *)*v31;
          }
          v30 = sub_178EB38((uint64_t)v31);
          *(void *)(a1 + 64) = v30;
          char v7 = *(unsigned __int8 **)v38;
        }
        unint64_t v16 = sub_178227C(a3, (uint64_t)v30, v7);
        goto LABEL_55;
      default:
LABEL_48:
        if (v8) {
          BOOL v32 = (v8 & 7) == 4;
        }
        else {
          BOOL v32 = 1;
        }
        if (!v32)
        {
          if (*v6)
          {
            BOOL v33 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            BOOL v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v7 = *(unsigned __int8 **)v38;
          }
          unint64_t v16 = sub_1885AC0(v8, v33, (char *)v7, a3);
LABEL_55:
          *(void *)v38 = v16;
          if (!v16) {
            return 0;
          }
LABEL_56:
          if (sub_11947B8((uint64_t)a3, (char **)v38, a3[11].i32[1])) {
            return *(void *)v38;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v38;
    }
  }
}

uint64_t sub_17821EC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17812A0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_178227C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17816F8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_178230C(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_13;
      }
      goto LABEL_7;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0) {
    goto LABEL_13;
  }
LABEL_7:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v7 = *(int *)(a1 + 72);
  *uint64_t v4 = 24;
  v4[1] = v7;
  if (v7 > 0x7F)
  {
    v4[1] = v7 | 0x80;
    unint64_t v8 = v7 >> 7;
    v4[2] = v7 >> 7;
    v4 += 3;
    if (v7 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v9 = v8 >> 14;
        v8 >>= 7;
        *v4++ = v8;
      }
      while (v9);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_13:
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 76);
    *uint64_t v4 = 32;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 42;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        uint64_t v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        uint64_t v17 = v4 + 2;
      }
      uint64_t v4 = sub_1781448(v15, v17, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v18 = *(void *)(a1 + 64);
    *uint64_t v4 = 50;
    unsigned int v19 = *(_DWORD *)(v18 + 20);
    v4[1] = v19;
    if (v19 > 0x7F) {
      int v20 = sub_188A9CC(v19, v4 + 1);
    }
    else {
      int v20 = v4 + 2;
    }
    uint64_t v4 = sub_178192C(v18, (unint64_t)v20, a3);
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return v4;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    int v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    int v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if (*a3 - (void)v4 >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(v4, v24, (int)v25);
    v4 += v26;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v24, v25, v4);
}

uint64_t sub_17825FC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1781534(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0x1F) == 0) {
    goto LABEL_31;
  }
  if (v8)
  {
    unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_22;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  unint64_t v12 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  uint64_t v14 = *(void *)(v12 + 8);
  if ((v13 & 0x80u) == 0) {
    uint64_t v14 = v13;
  }
  v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t v15 = sub_1781AD0(*(void *)(a1 + 64));
  v2 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) == 0)
  {
LABEL_14:
    if ((v8 & 0x10) == 0) {
      goto LABEL_31;
    }
    goto LABEL_27;
  }
LABEL_23:
  int v16 = *(_DWORD *)(a1 + 72);
  if (v16 < 0) {
    uint64_t v17 = 11;
  }
  else {
    uint64_t v17 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v17;
  if ((v8 & 0x10) != 0)
  {
LABEL_27:
    int v18 = *(_DWORD *)(a1 + 76);
    if (v18 < 0) {
      uint64_t v19 = 11;
    }
    else {
      uint64_t v19 = ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v19;
  }
LABEL_31:
  uint64_t v20 = *(void *)(a1 + 8);
  if (v20)
  {
    unint64_t v22 = v20 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v22 + 31) < 0) {
      uint64_t v23 = *(void *)(v22 + 16);
    }
    else {
      uint64_t v23 = *(unsigned __int8 *)(v22 + 31);
    }
    v2 += v23;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_17827EC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_1872DC0(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0x1F) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_22;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    uint64_t v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
    int v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      int v16 = (uint64_t *)*v16;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_30;
    }
LABEL_22:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    uint64_t v17 = (std::string *)v3[2].__r_.__value_.__r.__words[2];
    if (!v17)
    {
      std::string::size_type v18 = v3->__r_.__value_.__l.__size_;
      uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v19 = (void *)*v19;
      }
      uint64_t v17 = (std::string *)sub_178EB38((uint64_t)v19);
      v3[2].__r_.__value_.__r.__words[2] = (std::string::size_type)v17;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v20 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      uint64_t v20 = &off_2549498;
    }
    uint64_t result = sub_117EF04(v17, (uint64_t)v20);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
        goto LABEL_12;
      }
LABEL_10:
      HIDWORD(v3[3].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 76);
      goto LABEL_11;
    }
LABEL_30:
    LODWORD(v3[3].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 72);
    if ((v9 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_17829B4()
{
  return 1;
}

void *sub_17829BC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.MediaLink");
}

void *sub_17829CC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1782A40(void *a1)
{
  sub_17829CC(a1);

  operator delete();
}

char *sub_1782A78(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v12 = a2;
  int v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    unint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    unint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_1782B78(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_1782C10(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_1782C44(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1782C60()
{
  return 1;
}

void *sub_1782C68@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ISO3166CodeFilter");
}

uint64_t sub_1782C78(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24DA218;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_1782CDC(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1782D0C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1782D88(void *a1)
{
  sub_1782D0C(a1);

  operator delete();
}

char *sub_1782DC0(uint64_t a1, char *a2, int32x2_t *a3)
{
  std::string::size_type v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    unint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      unsigned int v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          unsigned int v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          unsigned int v7 = v15 + 2;
        }
      }
      std::string::size_type v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          uint64_t v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          uint64_t v13 = (std::string *)sub_188DBD8(v5);
          unsigned int v7 = v15;
        }
        unint64_t v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        unint64_t v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_2549520, v5, a3);
      }
      std::string::size_type v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_1782F10(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_1782FDC(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

void *sub_1783034@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceQuestionnaireFilter");
}

uint64_t sub_1783044(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DA298;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v5 = *(_DWORD *)(a2 + 16);
  if (v5) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  if ((v5 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  uint64_t v6 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(void *)(a1 + 40) = v6;
  return a1;
}

void sub_1783138()
{
}

uint64_t sub_17831A4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2549550)
  {
    int v5 = *(void **)(a1 + 24);
    if (v5)
    {
      sub_147B564(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_1783B90(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1783274(uint64_t a1)
{
  sub_17831A4(a1);

  operator delete();
}

uint64_t sub_17832AC(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_14152BC(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_14152BC(*(void *)(v1 + 32));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_178331C(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v24 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = v24 + 1;
    unsigned int v9 = *v24;
    if (*v24 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v24, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v24 + 2;
      }
    }
    int v24 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (!v12)
        {
          uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v13 = (void *)*v13;
          }
          sub_1481CB0((uint64_t)v13);
          uint64_t v12 = v14;
          *(void *)(a1 + 24) = v14;
          unint64_t v8 = v24;
        }
        std::string::size_type v15 = sub_1415818(a3, v12, (unsigned __int8 *)v8);
        goto LABEL_35;
      case 2u:
        if (v9 != 21) {
          goto LABEL_28;
        }
        int v17 = *(_DWORD *)v8;
        int v16 = v8 + 4;
        v5 |= 4u;
        *(_DWORD *)(a1 + 40) = v17;
        goto LABEL_21;
      case 3u:
        if (v9 != 29) {
          goto LABEL_28;
        }
        int v18 = *(_DWORD *)v8;
        int v16 = v8 + 4;
        v5 |= 8u;
        *(_DWORD *)(a1 + 44) = v18;
        goto LABEL_21;
      case 4u:
        if (v9 != 37) {
          goto LABEL_28;
        }
        int v19 = *(_DWORD *)v8;
        int v16 = v8 + 4;
        v5 |= 0x10u;
        *(_DWORD *)(a1 + 48) = v19;
LABEL_21:
        int v24 = v16;
        goto LABEL_36;
      case 5u:
        if (v9 != 42) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v20 = *(void **)(a1 + 32);
        if (!v20)
        {
          uint64_t v21 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v21 = (void *)*v21;
          }
          uint64_t v20 = sub_178EDAC((uint64_t)v21);
          *(void *)(a1 + 32) = v20;
          unint64_t v8 = v24;
        }
        std::string::size_type v15 = sub_1783580(a3, (uint64_t)v20, (unsigned __int8 *)v8);
        goto LABEL_35;
      default:
LABEL_28:
        if (v9) {
          BOOL v22 = (v9 & 7) == 4;
        }
        else {
          BOOL v22 = 1;
        }
        if (!v22)
        {
          if (*v7)
          {
            uint64_t v23 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = v24;
          }
          std::string::size_type v15 = (char *)sub_1885AC0(v9, v23, v8, a3);
LABEL_35:
          int v24 = v15;
          if (!v15) {
            goto LABEL_41;
          }
LABEL_36:
          if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_41:
        }
          int v24 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v24;
    }
  }
}

char *sub_1783580(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1783C98(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1783610(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_147B738(v7, (unint64_t)v9, a3);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  *char v4 = 21;
  *(_DWORD *)(v4 + 1) = v10;
  v4 += 5;
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_16:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v11 = *(_DWORD *)(a1 + 44);
  *char v4 = 29;
  *(_DWORD *)(v4 + 1) = v11;
  v4 += 5;
  if ((v6 & 0x10) == 0)
  {
LABEL_5:
    if ((v6 & 2) == 0) {
      goto LABEL_28;
    }
    goto LABEL_22;
  }
LABEL_19:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v12 = *(_DWORD *)(a1 + 48);
  *char v4 = 37;
  *(_DWORD *)(v4 + 1) = v12;
  v4 += 5;
  if ((v6 & 2) != 0)
  {
LABEL_22:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 32);
    *char v4 = 42;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      std::string::size_type v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      std::string::size_type v15 = v4 + 2;
    }
    char v4 = sub_1783E4C(v13, (unint64_t)v15, a3);
  }
LABEL_28:
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_178384C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x1F) == 0)
  {
    uint64_t result = 0;
    goto LABEL_15;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v5 = sub_147B898(*(void *)(a1 + 24));
  uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v6 = sub_1783FCC(*(void *)(a1 + 32));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v7 = v3 + 5;
  if ((v2 & 4) == 0) {
    uint64_t v7 = v3;
  }
  if ((v2 & 8) != 0) {
    v7 += 5;
  }
  if ((v2 & 0x10) != 0) {
    uint64_t result = v7 + 5;
  }
  else {
    uint64_t result = v7;
  }
LABEL_15:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    result += v10;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_1783944(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v7 = (void *)*v7;
        }
        sub_1481CB0((uint64_t)v7);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v8 = &off_2539D18;
      }
      uint64_t result = sub_1415F98(data, (uint64_t)v8);
    }
    if ((v4 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      unint64_t v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
      if (!v9)
      {
        std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
        int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          int v11 = (void *)*v11;
        }
        sub_1481CB0((uint64_t)v11);
        v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
      }
      if (*(void *)(a2 + 32)) {
        int v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        int v12 = &off_2539D18;
      }
      uint64_t result = sub_1415F98(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1783A40()
{
  return 1;
}

void *sub_1783A48@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ViewportFrame");
}

uint64_t sub_1783A58(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DA318;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v5 = *(_DWORD *)(a2 + 16);
  if (v5) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  if ((v5 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  return a1;
}

void sub_1783B3C()
{
}

uint64_t sub_1783B90(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2549588)
  {
    int v5 = *(void **)(a1 + 24);
    if (v5)
    {
      sub_147B564(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_147B564(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1783C60(uint64_t a1)
{
  sub_1783B90(a1);

  operator delete();
}

char *sub_1783C98(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    return v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v20 + 1;
    unsigned int v8 = *v20;
    if (*v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v20 + 2;
      }
    }
    uint64_t v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 32);
        if (!v15)
        {
          uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v16 = (void *)*v16;
          }
          sub_1481CB0((uint64_t)v16);
          uint64_t v15 = v17;
          *(void *)(a1 + 32) = v17;
LABEL_29:
          uint64_t v7 = v20;
        }
LABEL_30:
        unsigned int v14 = sub_1415818(a3, v15, (unsigned __int8 *)v7);
        goto LABEL_31;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v15 = *(void *)(a1 + 24);
      if (!v15)
      {
        unint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          unint64_t v18 = (void *)*v18;
        }
        sub_1481CB0((uint64_t)v18);
        uint64_t v15 = v19;
        *(void *)(a1 + 24) = v19;
        goto LABEL_29;
      }
      goto LABEL_30;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v20;
    }
    unsigned int v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
LABEL_31:
    uint64_t v20 = v14;
    if (!v14) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      return v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v20;
  }
  return 0;
}

unsigned char *sub_1783E4C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_147B738(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    *uint64_t v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      int v12 = v4 + 2;
    }
    uint64_t v4 = sub_147B738(v10, (unint64_t)v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1783FCC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_147B898(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_147B898(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v3 += v9;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_17840A4()
{
  return 1;
}

void *sub_17840AC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.BoundingCube");
}

uint64_t sub_17840BC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = (uint64_t *)(a1 + 16);
  *(void *)a1 = off_24DA398;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    unint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_1872E3C(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    uint64_t v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_178419C(_Unwind_Exception *a1)
{
  sub_1870F3C(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17841E0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1870F3C(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1784260(void *a1)
{
  sub_17841E0(a1);

  operator delete();
}

char *sub_1784298(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      int v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          int v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          int v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        int v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          unsigned int v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_1788710(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          int v12 = (char *)sub_1550A68(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        int v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_1784438(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_16EBC08(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unsigned int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unsigned int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_178457C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_16EBD94(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void *sub_178462C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchEnrichment");
}

void *sub_178463C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17846B0(void *a1)
{
  sub_178463C(a1);

  operator delete();
}

char *sub_17846E8(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v12 = a2;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_17847E8(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_1784880(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_17848B4(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_17848D0()
{
  return 1;
}

void *sub_17848D8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchEnrichmentFilter");
}

uint64_t sub_17848E8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24DA498;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = &qword_2550250;
  *(void *)(a1 + 80) = &qword_2550250;
  *(void *)(a1 + 88) = 0;
  *(_DWORD *)(a1 + 96) = 0;
  return a1;
}

void sub_1784968(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1784998(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if ((uint64_t (***)())a1 != &off_25495F8)
  {
    uint64_t v6 = *(void *)(a1 + 88);
    if (v6)
    {
      sub_16F5B20(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_1889DE8((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1784A90(uint64_t a1)
{
  sub_1784998(a1);

  operator delete();
}

uint64_t sub_1784AC8(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t result = sub_188CC00(a1 + 48);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_14;
  }
  unint64_t v6 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v6 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v3 & 2) != 0) {
      goto LABEL_14;
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  if ((v3 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_14:
  unint64_t v7 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v7 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    if ((v3 & 4) == 0) {
      goto LABEL_6;
    }
LABEL_5:
    uint64_t result = sub_16F5C4C(*(void *)(a1 + 88));
    goto LABEL_6;
  }
  **(unsigned char **)unint64_t v7 = 0;
  *(void *)(v7 + 8) = 0;
  if ((v3 & 4) != 0) {
    goto LABEL_5;
  }
LABEL_6:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 88) = 0;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_1784BAC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v35 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
    return *(void *)v35;
  }
  unint64_t v6 = (uint64_t **)(a1 + 48);
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v35 + 1);
    unsigned int v9 = **(unsigned char **)v35;
    if ((char)**(unsigned char **)v35 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v35, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v35 + 2);
      }
    }
    *(void *)unint64_t v35 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_46;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        int v12 = *(void **)(a1 + 88);
        if (!v12)
        {
          unint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v13 = (void *)*v13;
          }
          int v12 = sub_1788FDC((uint64_t)v13);
          *(void *)(a1 + 88) = v12;
          uint64_t v8 = *(unsigned __int8 **)v35;
        }
        uint64_t v14 = sub_17260D4(a3, (uint64_t)v12, v8);
        goto LABEL_24;
      case 2u:
        if (v9 != 18) {
          goto LABEL_46;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 72);
        goto LABEL_23;
      case 3u:
        if (v9 != 26) {
          goto LABEL_46;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 80);
LABEL_23:
        uint64_t v19 = (std::string *)sub_1880F84(v17, v16);
        uint64_t v14 = (uint64_t)sub_188C244(v19, *(char **)v35, (uint64_t)a3);
        goto LABEL_24;
      case 4u:
        if (v9 != 32) {
          goto LABEL_46;
        }
        uint64_t v20 = (char *)(v8 + 1);
        unint64_t v21 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v22 = *v20;
        int v23 = v21 + (v22 << 7);
        unint64_t v21 = (v23 - 128);
        if (v22 < 0)
        {
          *(void *)unint64_t v35 = sub_188C138((uint64_t)v8, (v23 - 128));
          if (!*(void *)v35) {
            return 0;
          }
          unint64_t v21 = v33;
        }
        else
        {
          uint64_t v20 = (char *)(v8 + 2);
LABEL_30:
          *(void *)unint64_t v35 = v20;
        }
        if (v21 > 9)
        {
          if (*v7) {
            unint64_t v34 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(4, v21, v34);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 8u;
          *(_DWORD *)(a1 + 96) = v21;
        }
        goto LABEL_44;
      case 5u:
        if (v9 != 42) {
          goto LABEL_46;
        }
        int v24 = (const std::string::value_type *)(v8 - 1);
        while (1)
        {
          uint64_t v25 = (char *)(v24 + 1);
          *(void *)unint64_t v35 = v24 + 1;
          uint64_t v26 = *(_DWORD **)(a1 + 64);
          if (v26 && (uint64_t v27 = *(int *)(a1 + 56), (int)v27 < *v26))
          {
            *(_DWORD *)(a1 + 56) = v27 + 1;
            uint64_t v28 = *(std::string **)&v26[2 * v27 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            void *v30 = v29;
            v30[1] = sub_3A6EDC;
            *int v29 = 0;
            v29[1] = 0;
            v29[2] = 0;
            uint64_t v28 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v29);
            uint64_t v25 = *(char **)v35;
          }
          int v24 = sub_188C244(v28, v25, (uint64_t)a3);
          *(void *)unint64_t v35 = v24;
          if (!v24) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v24 || *v24 != 42) {
            goto LABEL_44;
          }
        }
      default:
LABEL_46:
        if (v9) {
          BOOL v31 = (v9 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if ((v9 - 8000) >> 6 > 0x7C)
          {
            if (*v7)
            {
              BOOL v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              BOOL v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = *(unsigned __int8 **)v35;
            }
            uint64_t v14 = (uint64_t)sub_1885AC0(v9, v32, (char *)v8, a3);
          }
          else
          {
            uint64_t v14 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_25495F8, (uint64_t *)(a1 + 8), a3);
          }
LABEL_24:
          *(void *)unint64_t v35 = v14;
          if (!v14) {
            return 0;
          }
LABEL_44:
          if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
            return *(void *)v35;
          }
          continue;
        }
        if (!v8) {
          return 0;
        }
        a3[10].i32[0] = v9 - 1;
        return *(void *)v35;
    }
  }
}

char *sub_1784F9C(uint64_t a1, char *a2, void *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 88);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_16F6208(v7, v9, a3);
    if ((v6 & 1) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_20;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0) {
    goto LABEL_20;
  }
LABEL_14:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v10 = *(int *)(a1 + 96);
  *uint64_t v4 = 32;
  v4[1] = v10;
  if (v10 > 0x7F)
  {
    v4[1] = v10 | 0x80;
    unint64_t v11 = v10 >> 7;
    v4[2] = v10 >> 7;
    v4 += 3;
    if (v10 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v12 = v11 >> 14;
        v11 >>= 7;
        *v4++ = v11;
      }
      while (v12);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_20:
  uint64_t v13 = *(unsigned int *)(a1 + 56);
  if ((int)v13 >= 1)
  {
    uint64_t v14 = 0;
    uint64_t v15 = 8 * v13;
    do
    {
      uint64_t v16 = *(void **)(*(void *)(a1 + 64) + v14 + 8);
      if (*((char *)v16 + 23) < 0)
      {
        int64_t v17 = v16[1];
        if (v17 > 127) {
          goto LABEL_31;
        }
      }
      else
      {
        int64_t v17 = *((unsigned __int8 *)v16 + 23);
      }
      if (*a3 - (void)v4 + 14 >= v17)
      {
        *uint64_t v4 = 42;
        v4[1] = v17;
        if (*((char *)v16 + 23) < 0) {
          uint64_t v16 = (void *)*v16;
        }
        uint64_t v18 = v4 + 2;
        memcpy(v18, v16, v17);
        uint64_t v4 = &v18[v17];
        goto LABEL_29;
      }
LABEL_31:
      uint64_t v4 = (char *)sub_188A868(a3, 5, (uint64_t)v16, v4);
LABEL_29:
      v14 += 8;
    }
    while (v15 != v14);
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_178525C(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  if ((int)v3 >= 1)
  {
    char v5 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v6 = *v5++;
      uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
      uint64_t v8 = *(void *)(v6 + 8);
      if ((v7 & 0x80u) == 0) {
        uint64_t v8 = v7;
      }
      v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      --v3;
    }
    while (v3);
  }
  int v9 = *(_DWORD *)(a1 + 40);
  if ((v9 & 0xF) != 0)
  {
    if (v9)
    {
      unint64_t v10 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
      uint64_t v12 = *(void *)(v10 + 8);
      if ((v11 & 0x80u) == 0) {
        uint64_t v12 = v11;
      }
      v4 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v9 & 2) == 0)
      {
LABEL_9:
        if ((v9 & 4) == 0) {
          goto LABEL_10;
        }
        goto LABEL_18;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_9;
    }
    unint64_t v13 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
    uint64_t v15 = *(void *)(v13 + 8);
    if ((v14 & 0x80u) == 0) {
      uint64_t v15 = v14;
    }
    v4 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v9 & 4) == 0)
    {
LABEL_10:
      if ((v9 & 8) == 0) {
        goto LABEL_23;
      }
      goto LABEL_19;
    }
LABEL_18:
    uint64_t v16 = sub_16F650C(*(void *)(a1 + 88));
    v4 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v9 & 8) == 0) {
      goto LABEL_23;
    }
LABEL_19:
    int v17 = *(_DWORD *)(a1 + 96);
    if (v17 < 0) {
      uint64_t v18 = 11;
    }
    else {
      uint64_t v18 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v18;
  }
LABEL_23:
  uint64_t v19 = *(void *)(a1 + 8);
  if (v19)
  {
    unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v21 + 31) < 0) {
      uint64_t v22 = *(void *)(v21 + 16);
    }
    else {
      uint64_t v22 = *(unsigned __int8 *)(v21 + 31);
    }
    v4 += v22;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_1785420(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    char v5 = (const std::string **)(*(void *)(a2 + 64) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_188FB98(a1 + 48, v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((v9 & 0xF) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        unint64_t v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 72), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_21;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    uint64_t v14 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    sub_1881DF4((std::string **)(a1 + 80), v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0)
      {
LABEL_10:
        *(_DWORD *)(a1 + 40) |= v9;
        goto LABEL_11;
      }
LABEL_9:
      *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
      goto LABEL_10;
    }
LABEL_21:
    *(_DWORD *)(a1 + 40) |= 4u;
    int v17 = *(void **)(a1 + 88);
    if (!v17)
    {
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v19 = (void *)*v19;
      }
      int v17 = sub_1788FDC((uint64_t)v19);
      *(void *)(a1 + 88) = v17;
    }
    if (*(void *)(a2 + 88)) {
      uint64_t v20 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      uint64_t v20 = &off_2545F00;
    }
    sub_16F6748((uint64_t)v17, (uint64_t)v20);
    if ((v9 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17855E4(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 40) & 4) == 0) {
      return 1;
    }
    uint64_t result = sub_18856CC(*(void *)(a1 + 88) + 16);
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_178562C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.EnrichmentData.EnrichmentDataEntity");
}

uint64_t sub_178563C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24DA518;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  char v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1872EC8(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v12 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v12);
  }
  return a1;
}

void sub_1785760(_Unwind_Exception *a1)
{
  sub_1870FBC(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17857A4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  char v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1870FBC((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1785850(uint64_t a1)
{
  sub_17857A4(a1);

  operator delete();
}

uint64_t sub_1785888(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)uint64_t v24 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    int v17 = (std::string *)sub_1880F84((void *)(a1 + 48), v16);
    uint64_t v14 = (void *)sub_188C244(v17, *(char **)v24, (uint64_t)a3);
LABEL_24:
    *(void *)uint64_t v24 = v14;
    if (!v14) {
      goto LABEL_39;
    }
LABEL_25:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    uint64_t v18 = v7 - 1;
    while (1)
    {
      uint64_t v19 = (unsigned __int8 *)(v18 + 1);
      *(void *)uint64_t v24 = v18 + 1;
      uint64_t v20 = *(_DWORD **)(a1 + 40);
      if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
      {
        *(_DWORD *)(a1 + 32) = v21 + 1;
        uint64_t v22 = *(void *)&v20[2 * v21 + 2];
      }
      else
      {
        uint64_t v23 = sub_178EF40(*(void *)(a1 + 24));
        uint64_t v22 = sub_188CDC8(a1 + 24, v23);
        uint64_t v19 = *(unsigned __int8 **)v24;
      }
      uint64_t v18 = (char *)sub_1785A88(a3, v22, v19);
      *(void *)uint64_t v24 = v18;
      if (!v18) {
        goto LABEL_39;
      }
      if (*(void *)a3 <= (unint64_t)v18 || *v18 != 10) {
        goto LABEL_25;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v24;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_24;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_39:
  *(void *)uint64_t v24 = 0;
  return *(void *)v24;
}

uint64_t sub_1785A88(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1784BAC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1785B18(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_1784F9C(v8, v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 16)) {
    __dst = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_1785C80(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    int v4 = (uint64_t *)(v3 + 8);
  }
  else {
    int v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_178525C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void *sub_1785D78@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.EnrichmentData");
}

void *sub_1785D88(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1785DFC(void *a1)
{
  sub_1785D88(a1);

  operator delete();
}

char *sub_1785E34(uint64_t a1, char *a2, int32x2_t *a3)
{
  BOOL v12 = a2;
  int v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    BOOL v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    BOOL v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_1785F34(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_1785FCC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_1786000(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_178601C()
{
  return 1;
}

void *sub_1786024@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.EnrichmentDataFilter");
}

void *sub_1786034(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24D0918;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

void *sub_17860B0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24D0998;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_1786128(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24D0A18;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_17861A0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D0A98;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(void *)(result + 56) = &qword_2550250;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

uint64_t sub_1786248(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D0B18;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void *sub_17862C4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24D0B98;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

uint64_t sub_1786348(uint64_t a1)
{
  if (!a1)
  {
    sub_1872F54();
  }

  return sub_16B88D8(v3, a1, 0);
}

uint64_t sub_17863A4(uint64_t a1)
{
  if (!a1)
  {
    sub_1872FC0();
  }

  return sub_16BD760(v3, a1, 0);
}

void *sub_1786400(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24D0D18;
  result[2] = 0;
  result[3] = &qword_2550250;
  return result;
}

uint64_t sub_1786484(uint64_t a1)
{
  if (!a1)
  {
    sub_187302C();
  }

  return sub_16BE43C(v3, a1, 0);
}

uint64_t sub_17864E0(uint64_t a1)
{
  if (!a1)
  {
    sub_1873098();
  }

  return sub_16BEE80(v3, a1, 0);
}

void *sub_178653C(uint64_t a1)
{
  if (!a1)
  {
    sub_1873104();
  }

  return sub_16BFB38(v3, a1, 0);
}

double sub_1786598(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24D0F18;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = xmmword_2161E90;
  return result;
}

void *sub_1786618(uint64_t a1)
{
  if (!a1)
  {
    sub_1873170();
  }

  return sub_16C0CD0(v3, a1, 0);
}

uint64_t sub_1786674(uint64_t a1)
{
  if (!a1)
  {
    sub_18731DC();
  }

  return sub_16C12B0(v3, a1, 0);
}

uint64_t sub_17866D0(uint64_t a1)
{
  if (!a1)
  {
    sub_1873248();
  }

  return sub_16C20B4(v3, a1, 0);
}

uint64_t sub_178672C(uint64_t a1)
{
  if (!a1)
  {
    sub_18732B4();
  }

  return sub_16C281C(v3, a1, 0);
}

uint64_t sub_1786788(uint64_t a1)
{
  if (!a1)
  {
    sub_1873320();
  }

  return sub_16C3A28(v3, a1, 0);
}

uint64_t sub_17867E4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D1218;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1786884(uint64_t a1)
{
  if (!a1)
  {
    sub_187338C();
  }

  return sub_16C4570(v3, a1, 0);
}

uint64_t sub_17868E0(uint64_t a1)
{
  if (!a1)
  {
    sub_18733F8();
  }

  return sub_16C4994(v3, a1, 0);
}

uint64_t sub_178693C(uint64_t a1)
{
  if (!a1)
  {
    sub_1873464();
  }

  return sub_16C57F8(v3, a1, 0);
}

void *sub_1786998(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24D1418;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

void *sub_1786A1C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24D1498;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

uint64_t sub_1786AA0(uint64_t a1)
{
  if (!a1)
  {
    sub_18734D0();
  }

  return sub_16C6944(v3, a1, 0);
}

uint64_t sub_1786AFC(uint64_t a1)
{
  if (!a1)
  {
    sub_187353C();
  }

  return sub_16C7A10(v3, a1, 0);
}

void *sub_1786B58(uint64_t a1)
{
  if (!a1)
  {
    sub_18735A8();
  }

  return sub_16C7E34(v3, a1, 0);
}

uint64_t sub_1786BB4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D1698;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(unsigned char *)(result + 48) = 0;
  return result;
}

void *sub_1786C50(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24D1718;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  return result;
}

uint64_t sub_1786CF4(uint64_t a1)
{
  if (!a1)
  {
    sub_1873614();
  }

  return sub_16C90B8(v3, a1, 0);
}

uint64_t sub_1786D50(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D1818;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void *sub_1786DC8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24D1898;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[4] = a1;
  result[5] = &qword_2550250;
  result[6] = &qword_2550250;
  return result;
}

uint64_t sub_1786E6C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D1918;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1786F0C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D1998;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void *sub_1786F84(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24D1A18;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[5] = 0;
  result[6] = 0;
  result[4] = a1;
  return result;
}

double sub_1787024(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24D1A98;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = 0;
  *(void *)(v2 + 80) = 0;
  *(void *)(v2 + 88) = 0;
  *(_DWORD *)(v2 + 96) = 0;
  *(void *)&double result = 0xC8000000C8;
  *(void *)(v2 + 100) = 0xC8000000C8;
  return result;
}

double sub_17870E8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t v2 = off_24D1B18;
  v2[1] = a1;
  v2[2] = 0;
  v2[3] = 0;
  v2[5] = 0;
  v2[6] = 0;
  v2[4] = a1;
  *(void *)&double result = 0xC8000000C8;
  v2[7] = 0xC8000000C8;
  return result;
}

void *sub_1787190(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = off_24D1B98;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[4] = a1;
  result[5] = 0;
  result[6] = 0;
  result[7] = 0;
  return result;
}

uint64_t sub_1787230(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D1C18;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = a1;
  *(_OWORD *)(result + 48) = 0u;
  *(_OWORD *)(result + 64) = 0u;
  *(_OWORD *)(result + 80) = 0u;
  return result;
}

uint64_t sub_17872D4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D1C98;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_178734C(uint64_t a1)
{
  if (!a1)
  {
    sub_1873680();
  }

  return sub_16CF7BC(v3, a1, 0);
}

double sub_17873A8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24D1D98;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(unsigned char *)(v2 + 48) = 0;
  return result;
}

uint64_t sub_1787428(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D1E18;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = &qword_2550250;
  *(unsigned char *)(result + 72) = 0;
  return result;
}

uint64_t sub_17874D8(uint64_t a1)
{
  if (!a1)
  {
    sub_18736EC();
  }

  return sub_16D1F9C(v3, a1, 0);
}

uint64_t sub_1787534(uint64_t a1)
{
  if (!a1)
  {
    sub_1873758();
  }

  return sub_16D3848(v3, a1, 0);
}

double sub_1787590(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24D1F98;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  return result;
}

uint64_t sub_178760C(uint64_t a1)
{
  if (!a1)
  {
    sub_18737C4();
  }

  return sub_16D4FD0(v3, a1, 0);
}

uint64_t sub_1787668(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D2098;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_17876E0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D2118;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_1787760(uint64_t a1)
{
  if (!a1)
  {
    sub_1873830();
  }

  return sub_16D7398(v3, a1, 0);
}

void *sub_17877BC(uint64_t a1)
{
  if (!a1)
  {
    sub_187389C();
  }

  return sub_16D8FBC(v3, a1, 0);
}

uint64_t sub_1787818(uint64_t a1)
{
  if (!a1)
  {
    sub_1873908();
  }

  return sub_16D9B64(v3, a1, 0);
}

uint64_t sub_1787874(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D2318;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_17878EC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D2398;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_178798C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D2418;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1787A04(uint64_t a1)
{
  if (!a1)
  {
    sub_1873974();
  }

  return sub_16DB168(v3, a1, 0);
}

uint64_t sub_1787A60(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D2518;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1787AD8(uint64_t a1)
{
  if (!a1)
  {
    sub_18739E0();
  }

  return sub_16DBC7C(v3, a1, 0);
}

uint64_t sub_1787B34(uint64_t a1)
{
  if (!a1)
  {
    sub_1873A4C();
  }

  return sub_16DC4FC(v3, a1, 0);
}

void *sub_1787B90(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24D2698;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

uint64_t sub_1787C14(uint64_t a1)
{
  if (!a1)
  {
    sub_1873AB8();
  }

  return sub_16DD294(v3, a1, 0);
}

uint64_t sub_1787C70(uint64_t a1)
{
  if (!a1)
  {
    sub_1873B24();
  }

  return sub_16DDD8C(v3, a1, 0);
}

void *sub_1787CCC(uint64_t a1)
{
  if (!a1)
  {
    sub_1873B90();
  }

  return sub_16DE9E8(v3, a1, 0);
}

uint64_t sub_1787D28(uint64_t a1)
{
  if (!a1)
  {
    sub_1873BFC();
  }

  return sub_16DF3B8(v3, a1, 0);
}

void *sub_1787D84(uint64_t a1)
{
  if (!a1)
  {
    sub_1873C68();
  }

  return sub_16E070C(v3, a1, 0);
}

uint64_t sub_1787DE0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D2998;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1787E58(uint64_t a1)
{
  if (!a1)
  {
    sub_1873CD4();
  }

  return sub_16E15C4(v3, a1, 0);
}

uint64_t sub_1787EB4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D2A98;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1787F2C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D2B18;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1787FA4(uint64_t a1)
{
  if (!a1)
  {
    sub_1873D40();
  }

  return sub_16E2428(v3, a1, 0);
}

uint64_t sub_1788000(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D2C18;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1788078(uint64_t a1)
{
  if (!a1)
  {
    sub_1873DAC();
  }

  return sub_16E31EC(v3, a1, 0);
}

uint64_t sub_17880D4(uint64_t a1)
{
  if (!a1)
  {
    sub_1873E18();
  }

  return sub_16E3E60(v3, a1, 0);
}

void *sub_1788130(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24D2D98;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

void *sub_17881B4(uint64_t a1)
{
  if (!a1)
  {
    sub_1873E84();
  }

  return sub_16E4A50(v3, a1, 0);
}

uint64_t sub_1788210(uint64_t a1)
{
  if (!a1)
  {
    sub_1873EF0();
  }

  return sub_16E5A44(v3, a1, 0);
}

void *sub_178826C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24D2F18;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

void *sub_17882F0(uint64_t a1)
{
  if (!a1)
  {
    sub_1873F5C();
  }

  return sub_16E6908(v3, a1, 0);
}

uint64_t sub_178834C(uint64_t a1)
{
  if (!a1)
  {
    sub_1873FC8();
  }

  return sub_16E76C4(v3, a1, 0);
}

void *sub_17883A8(uint64_t a1)
{
  if (!a1)
  {
    sub_1874034();
  }

  return sub_16E7CC0(v3, a1, 0);
}

uint64_t sub_1788404(uint64_t a1)
{
  if (!a1)
  {
    sub_18740A0();
  }

  return sub_16E830C(v3, a1, 0);
}

void *sub_1788460(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24D3198;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_17884D8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D3218;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  return result;
}

void *sub_1788574(uint64_t a1)
{
  if (!a1)
  {
    sub_187410C();
  }

  return sub_16E950C(v3, a1, 0);
}

void *sub_17885D0(uint64_t a1)
{
  if (!a1)
  {
    sub_1874178();
  }

  return sub_16EA360(v3, a1, 0);
}

uint64_t sub_178862C(uint64_t a1)
{
  if (!a1)
  {
    sub_18741E4();
  }

  return sub_16EAA3C(v3, a1, 0);
}

uint64_t sub_1788688(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D3418;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_1788710(uint64_t a1)
{
  if (!a1)
  {
    sub_1874250();
  }

  return sub_16EB610(v3, a1, 0);
}

uint64_t sub_178876C(uint64_t a1)
{
  if (!a1)
  {
    sub_18742BC();
  }

  return sub_16EBEA0(v3, a1, 0);
}

uint64_t sub_17887C8(uint64_t a1)
{
  if (!a1)
  {
    sub_1874328();
  }

  return sub_16EC49C(v3, a1, 0);
}

uint64_t sub_1788824(uint64_t a1)
{
  if (!a1)
  {
    sub_1874394();
  }

  return sub_16ECDDC(v3, a1, 0);
}

uint64_t sub_1788880(uint64_t a1)
{
  if (!a1)
  {
    sub_1874400();
  }

  return sub_16ED200(v3, a1, 0);
}

double sub_17888DC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24D3718;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = a1;
  double result = 0.0;
  *(_OWORD *)(v2 + 40) = 0u;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 67) = 0u;
  return result;
}

uint64_t sub_178898C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D3798;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void *sub_1788A04(uint64_t a1)
{
  if (!a1)
  {
    sub_187446C();
  }

  return sub_16EF9A0(v3, a1, 0);
}

uint64_t sub_1788A60(uint64_t a1)
{
  if (!a1)
  {
    sub_18744D8();
  }

  return sub_16F0128(v3, a1, 0);
}

uint64_t sub_1788ABC(uint64_t a1)
{
  if (!a1)
  {
    sub_1874544();
  }

  return sub_16F07B8(v3, a1, 0);
}

uint64_t sub_1788B18(uint64_t a1)
{
  if (!a1)
  {
    sub_18745B0();
  }

  return sub_16F1714(v3, a1, 0);
}

uint64_t sub_1788B74(uint64_t a1)
{
  if (!a1)
  {
    sub_187461C();
  }

  return sub_16F2258(v3, a1, 0);
}

uint64_t sub_1788BD0(uint64_t a1)
{
  if (!a1)
  {
    sub_1874688();
  }

  return sub_16F2758(v3, a1, 0);
}

uint64_t sub_1788C2C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D3B18;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void *sub_1788CA4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24D3B98;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

void *sub_1788D20(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24D3C18;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_1788DBC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D3C98;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void *sub_1788E34(uint64_t a1)
{
  if (!a1)
  {
    sub_18746F4();
  }

  return sub_16F3F88(v3, a1, 0);
}

uint64_t sub_1788E90(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D3D98;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1788F08(uint64_t a1)
{
  if (!a1)
  {
    sub_1874760();
  }

  return sub_16F4C90(v3, a1, 0);
}

uint64_t sub_1788F64(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D3E98;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void *sub_1788FDC(uint64_t a1)
{
  if (!a1)
  {
    sub_18747CC();
  }

  return sub_16F5774(v3, a1, 0);
}

uint64_t sub_1789038(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D3F98;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_17890B0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D4018;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1789150(uint64_t a1)
{
  if (!a1)
  {
    sub_1874838();
  }

  return sub_16F71A4(v3, a1, 0);
}

uint64_t sub_17891AC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D4118;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void *sub_1789224(uint64_t a1)
{
  if (!a1)
  {
    sub_18748A4();
  }

  return sub_16F7E80(v3, a1, 0);
}

uint64_t sub_1789280(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D4218;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_17892F8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D4298;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1789374(uint64_t a1)
{
  if (!a1)
  {
    sub_1874910();
  }

  return sub_16F8FBC(v3, a1, 0);
}

uint64_t sub_17893D0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D4398;
  *(void *)(result + 16) = 0;
  *(unsigned char *)(result + 24) = 0;
  return result;
}

uint64_t sub_178944C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D4418;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(void *)(result + 40) = &qword_2550250;
  *(void *)(result + 48) = &qword_2550250;
  *(void *)(result + 56) = &qword_2550250;
  *(unsigned char *)(result + 64) = 0;
  return result;
}

uint64_t sub_17894DC(uint64_t a1)
{
  if (!a1)
  {
    sub_187497C();
  }

  return sub_16FB6E0(v3, a1, 0);
}

uint64_t sub_1789538(uint64_t a1)
{
  if (!a1)
  {
    sub_18749E8();
  }

  return sub_16FD204(v3, a1, 0);
}

void *sub_1789594(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24D4598;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  return result;
}

uint64_t sub_1789638(uint64_t a1)
{
  if (!a1)
  {
    sub_1874A54();
  }

  return sub_16FE758(v3, a1, 0);
}

void *sub_1789694(uint64_t a1)
{
  if (!a1)
  {
    sub_1874AC0();
  }

  return sub_16FF3E0(v3, a1, 0);
}

uint64_t sub_17896F0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D4718;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1789790(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D4798;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

void *sub_1789834(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24D4818;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_17898BC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D4898;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void *sub_1789934(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24D4918;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  result[6] = &qword_2550250;
  return result;
}

uint64_t sub_17899BC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D4998;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_1789A58(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D4A18;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_1789AEC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24D4A98;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = 0;
  return result;
}

double sub_1789B90(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24D4B18;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = a1;
  double result = 0.0;
  *(_OWORD *)(v2 + 40) = 0u;
  *(_OWORD *)(v2 + 56) = 0u;
  *(void *)(v2 + 72) = 0;
  return result;
}

void *sub_1789C3C(uint64_t a1)
{
  if (!a1)
  {
    sub_1874B2C();
  }

  return sub_1704D30(v3, a1, 0);
}

uint64_t sub_1789C98(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D4C18;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1789D10(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D4C98;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void *sub_1789D88(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24D4D18;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_1789E00(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24D4D98;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_1789E78(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D4E18;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

double sub_1789EF0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24D4E98;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_DWORD *)(v2 + 64) = 0;
  return result;
}

uint64_t sub_1789F74(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D4F18;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1789FF4(uint64_t a1)
{
  if (!a1)
  {
    sub_1874B98();
  }

  return sub_1708224(v3, a1, 0);
}

double sub_178A050(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24D5018;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = a1;
  *(unsigned char *)(v2 + 40) = 0;
  *(void *)&double result = 0x300000003;
  *(void *)(v2 + 44) = 0x300000003;
  return result;
}

uint64_t sub_178A0F4(uint64_t a1)
{
  if (!a1)
  {
    sub_1874C04();
  }

  return sub_170A384(v3, a1, 0);
}

uint64_t sub_178A150(uint64_t a1)
{
  if (!a1)
  {
    sub_1874C70();
  }

  return sub_170B1FC(v3, a1, 0);
}

uint64_t sub_178A1AC(uint64_t a1)
{
  if (!a1)
  {
    sub_1874CDC();
  }

  return sub_170C14C(v3, a1, 0);
}

uint64_t sub_178A208(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D5218;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_178A284(uint64_t a1)
{
  if (!a1)
  {
    sub_1874D48();
  }

  return sub_170CCF0(v3, a1, 0);
}

void *sub_178A2E0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24D5318;
  result[2] = 0;
  result[3] = &qword_2550250;
  return result;
}

uint64_t sub_178A364(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D5398;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void *sub_178A3DC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24D5418;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  return result;
}

uint64_t sub_178A480(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D5498;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void *sub_178A4F8(uint64_t a1)
{
  if (!a1)
  {
    sub_1874DB4();
  }

  return sub_170E2E4(v3, a1, 0);
}

uint64_t sub_178A554(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D5598;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void *sub_178A5CC(uint64_t a1)
{
  if (!a1)
  {
    sub_1874E20();
  }

  return sub_170F8A4(v3, a1, 0);
}

uint64_t sub_178A628(uint64_t a1)
{
  if (!a1)
  {
    sub_1874E8C();
  }

  return sub_1710860(v3, a1, 0);
}

uint64_t sub_178A684(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D5718;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_178A700(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D5798;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  return result;
}

uint64_t sub_178A79C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D5818;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_178A814(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D5898;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_178A8B4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D5918;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_178A92C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D5998;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_178A9A8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D5A18;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_178AA20(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D5A98;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

uint64_t sub_178AAC4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D5B18;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void *sub_178AB3C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24D5B98;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_178ABC4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D5C18;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void *sub_178AC3C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24D5C98;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_178ACB4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D5D18;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void *sub_178AD2C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24D5D98;
  result[2] = 0;
  result[4] = 0;
  result[5] = 0;
  result[3] = &qword_2550250;
  return result;
}

uint64_t sub_178ADB4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D5E18;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_178AE2C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D5E98;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void *sub_178AEA4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24D5F18;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[6] = 0;
  result[7] = 0;
  result[5] = &qword_2550250;
  return result;
}

void *sub_178AF30(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24D5F98;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

void *sub_178AFCC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24D6018;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  result[6] = 0;
  return result;
}

uint64_t sub_178B054(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D6098;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_178B0F0(uint64_t a1)
{
  if (!a1)
  {
    sub_1874EF8();
  }

  return sub_17184DC(v3, a1, 0);
}

uint64_t sub_178B14C(uint64_t a1)
{
  if (!a1)
  {
    sub_1874F64();
  }

  return sub_1719D48(v3, a1, 0);
}

void *sub_178B1A8(uint64_t a1)
{
  if (!a1)
  {
    sub_1874FD0();
  }

  return sub_171A248(v3, a1, 0);
}

uint64_t sub_178B204(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D6298;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_178B28C(uint64_t a1)
{
  if (!a1)
  {
    sub_187503C();
  }

  return sub_171B53C(v3, a1, 0);
}

void *sub_178B2E8(uint64_t a1)
{
  if (!a1)
  {
    sub_18750A8();
  }

  return sub_171C1E8(v3, a1, 0);
}

uint64_t sub_178B344(uint64_t a1)
{
  if (!a1)
  {
    sub_1875114();
  }

  return sub_171CA88(v3, a1, 0);
}

uint64_t sub_178B3A0(uint64_t a1)
{
  if (!a1)
  {
    sub_1875180();
  }

  return sub_171D260(v3, a1, 0);
}

uint64_t sub_178B3FC(uint64_t a1)
{
  if (!a1)
  {
    sub_18751EC();
  }

  return sub_17310F8(v3, a1, 0);
}

uint64_t sub_178B458(uint64_t a1)
{
  if (!a1)
  {
    sub_1875258();
  }

  return sub_173F568(v3, a1, 0);
}

double sub_178B4B4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24D6618;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_DWORD *)(v2 + 48) = 0;
  return result;
}

uint64_t sub_178B534(uint64_t a1)
{
  if (!a1)
  {
    sub_18752C4();
  }

  return sub_1742294(v3, a1, 0);
}

uint64_t sub_178B590(uint64_t a1)
{
  if (!a1)
  {
    sub_1875330();
  }

  return sub_1742C60(v3, a1, 0);
}

uint64_t sub_178B5EC(uint64_t a1)
{
  if (!a1)
  {
    sub_187539C();
  }

  return sub_1743C38(v3, a1, 0);
}

uint64_t sub_178B648(uint64_t a1)
{
  if (!a1)
  {
    sub_1875408();
  }

  return sub_1747060(v3, a1, 0);
}

uint64_t sub_178B6A4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D6898;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_178B720(uint64_t a1)
{
  if (!a1)
  {
    sub_1875474();
  }

  return sub_1748BA8(v3, a1, 0);
}

void *sub_178B77C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24D6998;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

uint64_t sub_178B800(uint64_t a1)
{
  if (!a1)
  {
    sub_18754E0();
  }

  return sub_1749B74(v3, a1, 0);
}

uint64_t sub_178B85C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D6A98;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(void *)(result + 40) = 0;
  *(unsigned char *)(result + 48) = 0;
  return result;
}

uint64_t sub_178B8E4(uint64_t a1)
{
  if (!a1)
  {
    sub_187554C();
  }

  return sub_174AA58(v3, a1, 0);
}

uint64_t sub_178B940(uint64_t a1)
{
  if (!a1)
  {
    sub_18755B8();
  }

  return sub_174B48C(v3, a1, 0);
}

uint64_t sub_178B99C(uint64_t a1)
{
  if (!a1)
  {
    sub_1875624();
  }

  return sub_174C0AC(v3, a1, 0);
}

void *sub_178B9F8(uint64_t a1)
{
  if (!a1)
  {
    sub_1875690();
  }

  return sub_174C54C(v3, a1, 0);
}

uint64_t sub_178BA54(uint64_t a1)
{
  if (!a1)
  {
    sub_18756FC();
  }

  return sub_174CB80(v3, a1, 0);
}

void *sub_178BAB0(uint64_t a1)
{
  if (!a1)
  {
    sub_1875768();
  }

  return sub_174CF4C(v3, a1, 0);
}

uint64_t sub_178BB0C(uint64_t a1)
{
  if (!a1)
  {
    sub_18757D4();
  }

  return sub_174D7BC(v3, a1, 0);
}

void *sub_178BB68(uint64_t a1)
{
  if (!a1)
  {
    sub_1875840();
  }

  return sub_174DB88(v3, a1, 0);
}

uint64_t sub_178BBC4(uint64_t a1)
{
  if (!a1)
  {
    sub_18758AC();
  }

  return sub_174E7B0(v3, a1, 0);
}

uint64_t sub_178BC20(uint64_t a1)
{
  if (!a1)
  {
    sub_1875918();
  }

  return sub_174EB7C(v3, a1, 0);
}

uint64_t sub_178BC7C(uint64_t a1)
{
  if (!a1)
  {
    sub_1875984();
  }

  return sub_174F640(v3, a1, 0);
}

void *sub_178BCD8(uint64_t a1)
{
  if (!a1)
  {
    sub_18759F0();
  }

  return sub_174FA0C(v3, a1, 0);
}

uint64_t sub_178BD34(uint64_t a1)
{
  if (!a1)
  {
    sub_1875A5C();
  }

  return sub_174FFD4(v3, a1, 0);
}

void *sub_178BD90(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24D7198;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

uint64_t sub_178BE14(uint64_t a1)
{
  if (!a1)
  {
    sub_1875AC8();
  }

  return sub_1750894(v3, a1, 0);
}

uint64_t sub_178BE70(uint64_t a1)
{
  if (!a1)
  {
    sub_1875B34();
  }

  return sub_17513D4(v3, a1, 0);
}

uint64_t sub_178BECC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D7318;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

double sub_178BF6C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24D7398;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  double result = 0.0;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 88) = 0u;
  *(unsigned char *)(v2 + 104) = 0;
  return result;
}

void *sub_178C028(uint64_t a1)
{
  if (!a1)
  {
    sub_1875BA0();
  }

  return sub_1752E2C(v3, a1, 0);
}

uint64_t sub_178C084(uint64_t a1)
{
  if (!a1)
  {
    sub_1875C0C();
  }

  return sub_1753A48(v3, a1, 0);
}

void *sub_178C0E0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = off_24D7518;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  return result;
}

uint64_t sub_178C184(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D7598;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_178C224(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24D7618;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_178C29C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24D7698;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_178C314(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D7718;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

double sub_178C3B4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24D7798;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_DWORD *)(v2 + 64) = 0;
  return result;
}

uint64_t sub_178C438(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D7818;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(_OWORD *)(result + 64) = 0u;
  *(_OWORD *)(result + 80) = 0u;
  *(unsigned char *)(result + 96) = 0;
  return result;
}

void *sub_178C4DC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24D7898;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_178C554(uint64_t a1)
{
  if (!a1)
  {
    sub_1875C78();
  }

  return sub_1758258(v3, a1, 0);
}

uint64_t sub_178C5B0(uint64_t a1)
{
  if (!a1)
  {
    sub_1875CE4();
  }

  return sub_1758D1C(v3, a1, 0);
}

void *sub_178C60C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24D7A18;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_178C684(uint64_t a1)
{
  if (!a1)
  {
    sub_1875D50();
  }

  return sub_1759608(v3, a1, 0);
}

void *sub_178C6E0(uint64_t a1)
{
  if (!a1)
  {
    sub_1875DBC();
  }

  return sub_175A044(v3, a1, 0);
}

uint64_t sub_178C73C(uint64_t a1)
{
  if (!a1)
  {
    sub_1875E28();
  }

  return sub_175A7F8(v3, a1, 0);
}

void *sub_178C798(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24D7C18;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_178C820(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D7C98;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 55) = 0;
  return result;
}

uint64_t sub_178C8C4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D7D18;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_178C958(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24D7D98;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  result[8] = &qword_2550250;
  result[9] = &qword_2550250;
  result[10] = &qword_2550250;
  result[11] = 0;
  result[12] = 0;
  result[13] = 0;
  return result;
}

uint64_t sub_178CA08(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D7E18;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = &qword_2550250;
  *(void *)(result + 72) = &qword_2550250;
  *(void *)(result + 88) = 0;
  *(void *)(result + 96) = 0;
  *(void *)(result + 80) = &qword_2550250;
  *(_DWORD *)(result + 104) = 0;
  return result;
}

double sub_178CAC0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24D7E98;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_DWORD *)(v2 + 48) = 0;
  return result;
}

double sub_178CB40(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24D7F18;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_DWORD *)(v2 + 64) = 0;
  return result;
}

uint64_t sub_178CBC4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D7F98;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_178CC68(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D8018;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

void *sub_178CD0C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24D8098;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_178CDA8(uint64_t a1)
{
  if (!a1)
  {
    sub_1875E94();
  }

  return sub_1762848(v3, a1, 0);
}

uint64_t sub_178CE04(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D8198;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_178CE84(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24D8218;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

uint64_t sub_178CF08(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D8298;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_178CF88(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D8318;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_178D004(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D8398;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

void *sub_178D0A8(uint64_t a1)
{
  if (!a1)
  {
    sub_1875F00();
  }

  return sub_1766A9C(v3, a1, 0);
}

uint64_t sub_178D104(uint64_t a1)
{
  if (!a1)
  {
    sub_1875F6C();
  }

  return sub_1767900(v3, a1, 0);
}

void *sub_178D160(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24D8518;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_178D1FC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D8598;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_178D278(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24D8618;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(void *)(v2 + 96) = 0;
  return result;
}

void *sub_178D300(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24D8698;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

uint64_t sub_178D384(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D8718;
  *(void *)(result + 16) = 0;
  *(unsigned char *)(result + 24) = 0;
  return result;
}

uint64_t sub_178D400(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D8798;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  *(_DWORD *)(result + 52) = 1;
  return result;
}

uint64_t sub_178D4A0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D8818;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  *(_DWORD *)(result + 60) = 1;
  return result;
}

void *sub_178D54C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24D8898;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_178D5C4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D8918;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_178D640(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D8998;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_178D6D4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D8A18;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_178D754(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D8A98;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_178D7F4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D8B18;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void *sub_178D870(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24D8B98;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_178D8E8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D8C18;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_178D988(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D8C98;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_178DA08(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D8D18;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_178DA9C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D8D98;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_178DB3C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D8E18;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_178DBDC(uint64_t a1)
{
  if (!a1)
  {
    sub_1875FD8();
  }

  return sub_1770EDC(v3, a1, 0);
}

void *sub_178DC38(uint64_t a1)
{
  if (!a1)
  {
    sub_1876044();
  }

  return sub_17718B0(v3, a1, 0);
}

void *sub_178DC94(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24D8F98;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[4] = a1;
  result[5] = &qword_2550250;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  return result;
}

uint64_t sub_178DD3C(uint64_t a1)
{
  if (!a1)
  {
    sub_18760B0();
  }

  return sub_1772C10(v3, a1, 0);
}

uint64_t sub_178DD98(uint64_t a1)
{
  if (!a1)
  {
    sub_187611C();
  }

  return sub_177365C(v3, a1, 0);
}

void *sub_178DDF4(uint64_t a1)
{
  if (!a1)
  {
    sub_1876188();
  }

  return sub_17746F0(v3, a1, 0);
}

void *sub_178DE50(uint64_t a1)
{
  if (!a1)
  {
    sub_18761F4();
  }

  return sub_177502C(v3, a1, 0);
}

uint64_t sub_178DEAC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D9218;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_178DF40(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D9298;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void *sub_178DFBC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24D9318;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = &qword_2550250;
  return result;
}

void *sub_178E06C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24D9398;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_178E0E8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24D9418;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_178E168(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24D9498;
  result[2] = 0;
  result[3] = &qword_2550250;
  return result;
}

void *sub_178E1EC(uint64_t a1)
{
  if (!a1)
  {
    sub_1876260();
  }

  return sub_1778588(v3, a1, 0);
}

uint64_t sub_178E248(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D9598;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = &qword_2550250;
  *(_DWORD *)(result + 80) = 0;
  return result;
}

uint64_t sub_178E2FC(uint64_t a1)
{
  if (!a1)
  {
    sub_18762CC();
  }

  return sub_1779CC4(v3, a1, 0);
}

uint64_t sub_178E358(uint64_t a1)
{
  if (!a1)
  {
    sub_1876338();
  }

  return sub_177A4A4(v3, a1, 0);
}

void *sub_178E3B4(uint64_t a1)
{
  if (!a1)
  {
    sub_18763A4();
  }

  return sub_177B480(v3, a1, 0);
}

uint64_t sub_178E410(uint64_t a1)
{
  if (!a1)
  {
    sub_1876410();
  }

  return sub_177BDD8(v3, a1, 0);
}

uint64_t sub_178E46C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D9818;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_178E50C(uint64_t a1)
{
  if (!a1)
  {
    sub_187647C();
  }

  return sub_177CAB4(v3, a1, 0);
}

uint64_t sub_178E568(uint64_t a1)
{
  if (!a1)
  {
    sub_18764E8();
  }

  return sub_177CE80(v3, a1, 0);
}

uint64_t sub_178E5C4(uint64_t a1)
{
  if (!a1)
  {
    sub_1876554();
  }

  return sub_177D24C(v3, a1, 0);
}

uint64_t sub_178E620(uint64_t a1)
{
  if (!a1)
  {
    sub_18765C0();
  }

  return sub_177D618(v3, a1, 0);
}

uint64_t sub_178E67C(uint64_t a1)
{
  if (!a1)
  {
    sub_187662C();
  }

  return sub_177D9E4(v3, a1, 0);
}

uint64_t sub_178E6D8(uint64_t a1)
{
  if (!a1)
  {
    sub_1876698();
  }

  return sub_177DDB0(v3, a1, 0);
}

uint64_t sub_178E734(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24D9B98;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_178E7D4(uint64_t a1)
{
  if (!a1)
  {
    sub_1876704();
  }

  return sub_177EB8C(v3, a1, 0);
}

uint64_t sub_178E830(uint64_t a1)
{
  if (!a1)
  {
    sub_1876770();
  }

  return sub_177EF58(v3, a1, 0);
}

void *sub_178E88C(uint64_t a1)
{
  if (!a1)
  {
    sub_18767DC();
  }

  return sub_177F324(v3, a1, 0);
}

uint64_t sub_178E8E8(uint64_t a1)
{
  if (!a1)
  {
    sub_1876848();
  }

  return sub_177F8E8(v3, a1, 0);
}

uint64_t sub_178E944(uint64_t a1)
{
  if (!a1)
  {
    sub_18768B4();
  }

  return sub_177FCB4(v3, a1, 0);
}

uint64_t sub_178E9A0(uint64_t a1)
{
  if (!a1)
  {
    sub_1876920();
  }

  return sub_17804FC(v3, a1, 0);
}

uint64_t sub_178E9FC(uint64_t a1)
{
  if (!a1)
  {
    sub_187698C();
  }

  return sub_17808C8(v3, a1, 0);
}

uint64_t sub_178EA58(uint64_t a1)
{
  if (!a1)
  {
    sub_18769F8();
  }

  return sub_1780D68(v3, a1, 0);
}

void *sub_178EAB4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24DA018;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

void *sub_178EB38(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24DA098;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_178EBB0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24DA118;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  result[8] = 0;
  result[9] = 0;
  return result;
}

uint64_t sub_178EC58(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DA198;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_178ECD0(uint64_t a1)
{
  if (!a1)
  {
    sub_1876A64();
  }

  return sub_1782C78(v3, a1, 0);
}

double sub_178ED2C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24DA298;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_DWORD *)(v2 + 48) = 0;
  return result;
}

void *sub_178EDAC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24DA318;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_178EE28(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DA398;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_178EEC8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DA418;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_178EF40(uint64_t a1)
{
  if (!a1)
  {
    sub_1876AD0();
  }

  return sub_17848E8(v3, a1, 0);
}

void *sub_178EF9C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24DA518;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  return result;
}

uint64_t sub_178F040(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DA598;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_178F0B8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DA618;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  long long v5 = *(_OWORD *)(a2 + 40);
  long long v6 = *(_OWORD *)(a2 + 56);
  long long v7 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 84) = *(_OWORD *)(a2 + 84);
  *(_OWORD *)(a1 + 72) = v7;
  *(_OWORD *)(a1 + 56) = v6;
  *(_OWORD *)(a1 + 40) = v5;
  return a1;
}

void sub_178F154(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_178F184(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_178F1F8(void *a1)
{
  sub_178F184(a1);

  operator delete();
}

char *sub_178F230(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  long long v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v26 + 2;
      }
    }
    uint64_t v26 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 9) {
          goto LABEL_34;
        }
        uint64_t v13 = *(void *)v8;
        BOOL v12 = v8 + 8;
        v5 |= 1u;
        *(void *)(a1 + 24) = v13;
        goto LABEL_31;
      case 2u:
        if (v9 != 17) {
          goto LABEL_34;
        }
        uint64_t v14 = *(void *)v8;
        BOOL v12 = v8 + 8;
        v5 |= 2u;
        *(void *)(a1 + 32) = v14;
        goto LABEL_31;
      case 3u:
        if (v9 != 25) {
          goto LABEL_34;
        }
        uint64_t v15 = *(void *)v8;
        BOOL v12 = v8 + 8;
        v5 |= 4u;
        *(void *)(a1 + 40) = v15;
        goto LABEL_31;
      case 4u:
        if (v9 != 33) {
          goto LABEL_34;
        }
        uint64_t v16 = *(void *)v8;
        BOOL v12 = v8 + 8;
        v5 |= 8u;
        *(void *)(a1 + 48) = v16;
        goto LABEL_31;
      case 5u:
        if (v9 != 41) {
          goto LABEL_34;
        }
        uint64_t v17 = *(void *)v8;
        BOOL v12 = v8 + 8;
        v5 |= 0x10u;
        *(void *)(a1 + 56) = v17;
        goto LABEL_31;
      case 6u:
        if (v9 != 49) {
          goto LABEL_34;
        }
        uint64_t v18 = *(void *)v8;
        BOOL v12 = v8 + 8;
        v5 |= 0x20u;
        *(void *)(a1 + 64) = v18;
        goto LABEL_31;
      case 7u:
        if (v9 != 57) {
          goto LABEL_34;
        }
        uint64_t v19 = *(void *)v8;
        BOOL v12 = v8 + 8;
        v5 |= 0x40u;
        *(void *)(a1 + 72) = v19;
        goto LABEL_31;
      case 8u:
        if (v9 != 65) {
          goto LABEL_34;
        }
        uint64_t v20 = *(void *)v8;
        BOOL v12 = v8 + 8;
        v5 |= 0x80u;
        *(void *)(a1 + 80) = v20;
        goto LABEL_31;
      case 9u:
        if (v9 != 77) {
          goto LABEL_34;
        }
        int v21 = *(_DWORD *)v8;
        BOOL v12 = v8 + 4;
        v5 |= 0x100u;
        *(_DWORD *)(a1 + 88) = v21;
        goto LABEL_31;
      case 0xAu:
        if (v9 != 85) {
          goto LABEL_34;
        }
        int v22 = *(_DWORD *)v8;
        BOOL v12 = v8 + 4;
        v5 |= 0x400u;
        *(_DWORD *)(a1 + 96) = v22;
        goto LABEL_31;
      case 0xBu:
        if (v9 != 93) {
          goto LABEL_34;
        }
        int v23 = *(_DWORD *)v8;
        BOOL v12 = v8 + 4;
        v5 |= 0x200u;
        *(_DWORD *)(a1 + 92) = v23;
LABEL_31:
        uint64_t v26 = v12;
        goto LABEL_32;
      default:
LABEL_34:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            uint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v26;
          }
          uint64_t v26 = (char *)sub_1885AC0(v9, v25, v8, a3);
          if (!v26) {
            goto LABEL_45;
          }
LABEL_32:
          if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_45:
        }
          uint64_t v26 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v26;
    }
  }
}

_OWORD *sub_178F4EC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *(unsigned char *)uint64_t v4 = 9;
    *(void *)((char *)v4 + 1) = v7;
    uint64_t v4 = (_OWORD *)((char *)v4 + 9);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v8 = *(void *)(a1 + 32);
  *(unsigned char *)uint64_t v4 = 17;
  *(void *)((char *)v4 + 1) = v8;
  uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }
LABEL_19:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v9 = *(void *)(a1 + 40);
  *(unsigned char *)uint64_t v4 = 25;
  *(void *)((char *)v4 + 1) = v9;
  uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_25;
  }
LABEL_22:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 48);
  *(unsigned char *)uint64_t v4 = 33;
  *(void *)((char *)v4 + 1) = v10;
  uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_28;
  }
LABEL_25:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v11 = *(void *)(a1 + 56);
  *(unsigned char *)uint64_t v4 = 41;
  *(void *)((char *)v4 + 1) = v11;
  uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_31;
  }
LABEL_28:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v12 = *(void *)(a1 + 64);
  *(unsigned char *)uint64_t v4 = 49;
  *(void *)((char *)v4 + 1) = v12;
  uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_34;
  }
LABEL_31:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 72);
  *(unsigned char *)uint64_t v4 = 57;
  *(void *)((char *)v4 + 1) = v13;
  uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_37;
  }
LABEL_34:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v14 = *(void *)(a1 + 80);
  *(unsigned char *)uint64_t v4 = 65;
  *(void *)((char *)v4 + 1) = v14;
  uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_40;
  }
LABEL_37:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v15 = *(_DWORD *)(a1 + 88);
  *(unsigned char *)uint64_t v4 = 77;
  *(_DWORD *)((char *)v4 + 1) = v15;
  uint64_t v4 = (_OWORD *)((char *)v4 + 5);
  if ((v6 & 0x400) == 0)
  {
LABEL_11:
    if ((v6 & 0x200) == 0) {
      goto LABEL_46;
    }
    goto LABEL_43;
  }
LABEL_40:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v16 = *(_DWORD *)(a1 + 96);
  *(unsigned char *)uint64_t v4 = 85;
  *(_DWORD *)((char *)v4 + 1) = v16;
  uint64_t v4 = (_OWORD *)((char *)v4 + 5);
  if ((v6 & 0x200) != 0)
  {
LABEL_43:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v17 = *(_DWORD *)(a1 + 92);
    *(unsigned char *)uint64_t v4 = 93;
    *(_DWORD *)((char *)v4 + 1) = v17;
    uint64_t v4 = (_OWORD *)((char *)v4 + 5);
  }
LABEL_46:
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    int v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    int v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    return (_OWORD *)((char *)v4 + v23);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_178F82C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v1)
  {
    uint64_t v2 = 9;
    if ((v1 & 1) == 0) {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      v2 += 9;
    }
    if ((v1 & 8) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x10) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x20) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x40) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x80) != 0) {
      v2 += 9;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v3 = v2 + 5;
  if ((v1 & 0x100) == 0) {
    uint64_t v3 = v2;
  }
  if ((v1 & 0x200) != 0) {
    v3 += 5;
  }
  if ((v1 & 0x400) != 0) {
    v3 += 5;
  }
  if ((v1 & 0x700) != 0) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = v2;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v4 += v8;
  }
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

uint64_t sub_178F904()
{
  return 1;
}

void *sub_178F90C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Flyover.CameraPathFrame");
}

void *sub_178F91C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_178F990(void *a1)
{
  sub_178F91C(a1);

  operator delete();
}

uint64_t sub_178F9C8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_178F9F0(uint64_t a1, char *a2, int32x2_t *a3)
{
  BOOL v24 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v24 + 1;
    unsigned int v9 = *v24;
    if (*v24 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v24, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v24 + 2;
      }
    }
    BOOL v24 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3) {
      break;
    }
    if (v12 == 2)
    {
      if (v9 == 21)
      {
        int v18 = *(_DWORD *)v8;
        int v16 = v8 + 4;
        v5 |= 2u;
        *(_DWORD *)(a1 + 28) = v18;
        goto LABEL_26;
      }
      goto LABEL_14;
    }
    if (v12 != 1 || v9 != 8) {
      goto LABEL_14;
    }
    v5 |= 1u;
    uint64_t v19 = v8 + 1;
    int v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_30;
    }
    int v21 = *v19;
    int v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_30:
      BOOL v24 = v19;
      *(_DWORD *)(a1 + 24) = v20;
      goto LABEL_31;
    }
    uint64_t v22 = (char *)sub_188C0D0((uint64_t)v8, v20);
    BOOL v24 = v22;
    *(_DWORD *)(a1 + 24) = v23;
    if (!v22) {
      goto LABEL_38;
    }
LABEL_31:
    if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 29)
  {
    int v17 = *(_DWORD *)v8;
    int v16 = v8 + 4;
    v5 |= 4u;
    *(_DWORD *)(a1 + 32) = v17;
LABEL_26:
    BOOL v24 = v16;
    goto LABEL_31;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      int v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v24;
    }
    BOOL v24 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v24) {
      goto LABEL_38;
    }
    goto LABEL_31;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_38:
  BOOL v24 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v24;
}

unsigned char *sub_178FBC8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v10 = *(_DWORD *)(a1 + 28);
    *uint64_t v4 = 21;
    *(_DWORD *)(v4 + 1) = v10;
    v4 += 5;
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v11 = *(_DWORD *)(a1 + 32);
    *uint64_t v4 = 29;
    *(_DWORD *)(v4 + 1) = v11;
    v4 += 5;
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    int v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    int v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    v4 += v17;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_178FD60(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) != 0)
  {
    if (v1) {
      uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += 5;
    }
    if ((v1 & 4) != 0) {
      uint64_t v3 = v2 + 5;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_178FDF0(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_7;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_10:
    HIDWORD(result[1].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 28);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  LODWORD(result[1].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 24);
  if ((v2 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v2 & 4) != 0) {
LABEL_5:
  }
    LODWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
LABEL_6:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_7:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_178FE54()
{
  return 1;
}

void *sub_178FE5C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Flyover.LabelFrame");
}

void *sub_178FE6C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C1DB8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_178FEEC(void *a1)
{
  sub_178FE6C(a1);

  operator delete();
}

uint64_t sub_178FF24(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B2C80(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  int v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_178FFA0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    int v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          unint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_15C1B30(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = (char *)sub_125CF74(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        int v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        int v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_1790140(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        int v10 = __dst + 2;
      }
      __dst = sub_15B2EA4(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_1790284(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B2F90(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

uint64_t sub_1790334()
{
  return 1;
}

void *sub_179033C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Flyover.LabelLocalizations");
}

uint64_t sub_179034C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24DA798;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = a2;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(unsigned char *)(a1 + 144) = 0;
  return a1;
}

void sub_17903D0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1790400(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24DA798;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    unsigned int v9 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1876CBC(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v12 = *(_DWORD *)(a2 + 80);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 88);
    unint64_t v14 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_1876D48((uint64_t *)(a1 + 72), v14, (uint64_t *)(v13 + 8), v12, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v15 = *(_DWORD *)(a1 + 80) + v12;
    *(_DWORD *)(a1 + 80) = v15;
    uint64_t v16 = *(int **)(a1 + 88);
    if (*v16 < v15) {
      *uint64_t v16 = v15;
    }
  }
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  int v17 = *(_DWORD *)(a2 + 104);
  if (v17)
  {
    uint64_t v18 = *(void *)(a2 + 112);
    uint64_t v19 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_1876DD4((uint64_t *)(a1 + 96), v19, (uint64_t *)(v18 + 8), v17, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v20 = *(_DWORD *)(a1 + 104) + v17;
    *(_DWORD *)(a1 + 104) = v20;
    int v21 = *(int **)(a1 + 112);
    if (*v21 < v20) {
      int *v21 = v20;
    }
  }
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  int v22 = *(_DWORD *)(a2 + 128);
  if (v22)
  {
    uint64_t v23 = *(void *)(a2 + 136);
    BOOL v24 = (std::string **)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_12C1E38((std::string *)(a1 + 120), v24, (uint64_t *)(v23 + 8), v22, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v25 = *(_DWORD *)(a1 + 128) + v22;
    *(_DWORD *)(a1 + 128) = v25;
    uint64_t v26 = *(int **)(a1 + 136);
    if (*v26 < v25) {
      *uint64_t v26 = v25;
    }
  }
  uint64_t v27 = *(void *)(a2 + 8);
  if (v27) {
    sub_188B4F8(v4, (v27 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  return a1;
}

void sub_1790658(_Unwind_Exception *a1)
{
  sub_1876C3C(v6);
  sub_1876BBC(v5);
  sub_1876B3C(v4);
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17906E4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C1DB8(a1 + 15);
  sub_1876C3C(a1 + 12);
  sub_1876BBC(a1 + 9);
  sub_1876B3C(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1790790(void *a1)
{
  sub_17906E4(a1);

  operator delete();
}

char *sub_17907C8(uint64_t a1, char *a2, int32x2_t *a3)
{
  v44 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v44, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v44 + 1;
    unsigned int v9 = *v44;
    if (*v44 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v44, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v44 + 2;
      }
    }
    v44 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_54;
        }
        int v12 = v8 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          v44 = v12 + 1;
          unint64_t v14 = *(_DWORD **)(a1 + 64);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 56), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 56) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            sub_1791234(*(void *)(a1 + 48));
            uint64_t v16 = sub_188CDC8(a1 + 48, v17);
            uint64_t v13 = (unsigned __int8 *)v44;
          }
          int v12 = sub_1264784(a3, v16, v13);
          v44 = v12;
          if (!v12) {
            goto LABEL_71;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_64;
          }
        }
      case 2u:
        if (v9 != 16) {
          goto LABEL_54;
        }
        uint64_t v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          v42 = (char *)sub_188C138((uint64_t)v8, v19);
          v44 = v42;
          *(unsigned char *)(a1 + 144) = v43 != 0;
          int v5 = 1;
          if (!v42) {
            goto LABEL_71;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          v44 = v18;
          *(unsigned char *)(a1 + 144) = v19 != 0;
          int v5 = 1;
        }
        goto LABEL_64;
      case 3u:
        if (v9 != 26) {
          goto LABEL_54;
        }
        int v21 = v8 - 1;
        while (1)
        {
          int v22 = (unsigned __int8 *)(v21 + 1);
          v44 = v21 + 1;
          uint64_t v23 = *(_DWORD **)(a1 + 88);
          if (v23 && (uint64_t v24 = *(int *)(a1 + 80), (int)v24 < *v23))
          {
            *(_DWORD *)(a1 + 80) = v24 + 1;
            uint64_t v25 = *(void *)&v23[2 * v24 + 2];
          }
          else
          {
            uint64_t v26 = sub_17912C0(*(void *)(a1 + 72));
            uint64_t v25 = sub_188CDC8(a1 + 72, v26);
            int v22 = (unsigned __int8 *)v44;
          }
          int v21 = sub_1790C24(a3, v25, v22);
          v44 = v21;
          if (!v21) {
            goto LABEL_71;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *v21 != 26) {
            goto LABEL_64;
          }
        }
      case 4u:
        if (v9 != 34) {
          goto LABEL_54;
        }
        uint64_t v27 = v8 - 1;
        while (1)
        {
          uint64_t v28 = (unsigned __int8 *)(v27 + 1);
          v44 = v27 + 1;
          int v29 = *(_DWORD **)(a1 + 112);
          if (v29 && (uint64_t v30 = *(int *)(a1 + 104), (int)v30 < *v29))
          {
            *(_DWORD *)(a1 + 104) = v30 + 1;
            uint64_t v31 = *(void *)&v29[2 * v30 + 2];
          }
          else
          {
            uint64_t v32 = sub_179133C(*(void *)(a1 + 96));
            uint64_t v31 = sub_188CDC8(a1 + 96, v32);
            uint64_t v28 = (unsigned __int8 *)v44;
          }
          uint64_t v27 = sub_1790CB4(a3, v31, v28);
          v44 = v27;
          if (!v27) {
            goto LABEL_71;
          }
          if (*(void *)a3 <= (unint64_t)v27 || *v27 != 34) {
            goto LABEL_64;
          }
        }
      case 5u:
        if (v9 != 42) {
          goto LABEL_54;
        }
        unint64_t v33 = v8 - 1;
        while (1)
        {
          unint64_t v34 = (unsigned __int8 *)(v33 + 1);
          v44 = v33 + 1;
          unint64_t v35 = *(_DWORD **)(a1 + 136);
          if (v35 && (uint64_t v36 = *(int *)(a1 + 128), (int)v36 < *v35))
          {
            *(_DWORD *)(a1 + 128) = v36 + 1;
            uint64_t v37 = *(void *)&v35[2 * v36 + 2];
          }
          else
          {
            v38 = sub_15C1B30(*(void *)(a1 + 120));
            uint64_t v37 = sub_188CDC8(a1 + 120, (uint64_t)v38);
            unint64_t v34 = (unsigned __int8 *)v44;
          }
          unint64_t v33 = (char *)sub_125CF74(a3, v37, v34);
          v44 = v33;
          if (!v33) {
            goto LABEL_71;
          }
          if (*(void *)a3 <= (unint64_t)v33 || *v33 != 42) {
            goto LABEL_64;
          }
        }
      default:
LABEL_54:
        if (v9) {
          BOOL v39 = (v9 & 7) == 4;
        }
        else {
          BOOL v39 = 1;
        }
        if (!v39)
        {
          if (v9 - 1600 > 0xF9F)
          {
            if (*v7)
            {
              uint64_t v41 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v41 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = v44;
            }
            v40 = sub_1885AC0(v9, v41, v8, a3);
          }
          else
          {
            v40 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2549718, (uint64_t *)(a1 + 8), a3);
          }
          v44 = (char *)v40;
          if (!v40) {
            goto LABEL_71;
          }
LABEL_64:
          if (sub_11947B8((uint64_t)a3, &v44, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_71:
        }
          v44 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return v44;
    }
  }
}

char *sub_1790C24(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_178F9F0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1790CB4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_178FFA0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1790D44(uint64_t a1, char *a2, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = (char *)sub_178F4EC(v8, (unint64_t)v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 40))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    char v11 = *(unsigned char *)(a1 + 144);
    *a2 = 16;
    a2[1] = v11;
    a2 += 2;
  }
  int v12 = *(_DWORD *)(a1 + 80);
  if (v12)
  {
    for (int j = 0; j != v12; ++j)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v14 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *a2 = 26;
      unsigned int v15 = *(_DWORD *)(v14 + 20);
      a2[1] = v15;
      if (v15 > 0x7F) {
        uint64_t v16 = sub_188A9CC(v15, a2 + 1);
      }
      else {
        uint64_t v16 = a2 + 2;
      }
      a2 = sub_178FBC8(v14, (unint64_t)v16, a3);
    }
  }
  int v17 = *(_DWORD *)(a1 + 104);
  if (v17)
  {
    for (int k = 0; k != v17; ++k)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v19 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      *a2 = 34;
      unsigned int v20 = *(_DWORD *)(v19 + 40);
      a2[1] = v20;
      if (v20 > 0x7F) {
        int v21 = sub_188A9CC(v20, a2 + 1);
      }
      else {
        int v21 = a2 + 2;
      }
      a2 = sub_1790140(v19, v21, a3);
    }
  }
  int v22 = *(_DWORD *)(a1 + 128);
  if (v22)
  {
    for (int m = 0; m != v22; ++m)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v24 = *(void *)(*(void *)(a1 + 136) + 8 * m + 8);
      *a2 = 42;
      unsigned int v25 = *(_DWORD *)(v24 + 20);
      a2[1] = v25;
      if (v25 > 0x7F) {
        uint64_t v26 = sub_188A9CC(v25, a2 + 1);
      }
      else {
        uint64_t v26 = a2 + 2;
      }
      a2 = sub_15B2EA4(v24, v26, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 200, 700, a2, a3);
  }
  uint64_t v27 = *(void *)(a1 + 8);
  if ((v27 & 1) == 0) {
    return a2;
  }
  unint64_t v29 = v27 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v29 + 31) < 0)
  {
    uint64_t v30 = *(void **)(v29 + 8);
    uint64_t v31 = *(void *)(v29 + 16);
  }
  else
  {
    uint64_t v30 = (void *)(v29 + 8);
    LODWORD(v31) = *(unsigned __int8 *)(v29 + 31);
  }
  if (*(void *)a3 - (void)a2 >= (int)v31)
  {
    uint64_t v32 = (int)v31;
    memcpy(a2, v30, (int)v31);
    a2 += v32;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v30, v31, a2);
}

uint64_t sub_1791074(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_178F82C(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    uint64_t v13 = (uint64_t *)(v12 + 8);
  }
  else {
    uint64_t v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_178FD60(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(int *)(a1 + 104);
  uint64_t v18 = v11 + v17;
  uint64_t v19 = *(void *)(a1 + 112);
  if (v19) {
    unsigned int v20 = (uint64_t *)(v19 + 8);
  }
  else {
    unsigned int v20 = 0;
  }
  if (v17)
  {
    uint64_t v21 = 8 * v17;
    do
    {
      uint64_t v22 = *v20++;
      uint64_t v23 = sub_1790284(v22);
      v18 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6);
      v21 -= 8;
    }
    while (v21);
  }
  uint64_t v24 = *(int *)(a1 + 128);
  uint64_t v25 = v18 + v24;
  uint64_t v26 = *(void *)(a1 + 136);
  if (v26) {
    uint64_t v27 = (uint64_t *)(v26 + 8);
  }
  else {
    uint64_t v27 = 0;
  }
  if (v24)
  {
    uint64_t v28 = 8 * v24;
    do
    {
      uint64_t v29 = *v27++;
      uint64_t v30 = sub_15B2F90(v29);
      v25 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6);
      v28 -= 8;
    }
    while (v28);
  }
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t result = v25 + 2;
  }
  else {
    uint64_t result = v25;
  }
  uint64_t v32 = *(void *)(a1 + 8);
  if (v32)
  {
    unint64_t v33 = v32 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v33 + 31) < 0) {
      uint64_t v34 = *(void *)(v33 + 16);
    }
    else {
      uint64_t v34 = *(unsigned __int8 *)(v33 + 31);
    }
    result += v34;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void *sub_1791224@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Flyover");
}

double sub_1791234(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24DA618;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_DWORD *)(v2 + 96) = 1065353216;
  return result;
}

uint64_t sub_17912C0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DA698;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_179133C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24DA718;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_17913DC(uint64_t a1)
{
  if (!a1)
  {
    sub_1876E60();
  }

  return sub_179034C(v3, a1, 0);
}

uint64_t sub_1791438(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24DA818;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 48) = 0;
  return a1;
}

void sub_17914A0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17914D0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(void *)a1 = off_24DA818;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v4, a2 + 16);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  return a1;
}

void sub_1791570(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17915AC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1791628(void *a1)
{
  sub_17915AC(a1);

  operator delete();
}

char *sub_1791660(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v20 = a2;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    return v20;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    int v6 = v20 + 1;
    unsigned int v7 = *v20;
    if (*v20 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        int v6 = (char *)sub_188C180((uint64_t)v20, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        int v6 = v20 + 2;
      }
    }
    unsigned int v20 = v6;
    if (v7 == 8)
    {
      uint64_t v12 = v6 + 1;
      unint64_t v13 = *v6;
      if (*v6 < 0)
      {
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          unsigned int v20 = (char *)sub_188C138((uint64_t)v6, (v15 - 128));
          if (!v20) {
            return 0;
          }
          unint64_t v13 = v17;
          goto LABEL_18;
        }
        uint64_t v12 = v6 + 2;
      }
      unsigned int v20 = v12;
LABEL_18:
      if (v13 > 2)
      {
        if (*v5) {
          uint64_t v18 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v18 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v13, v18);
      }
      else
      {
        *(_DWORD *)(a1 + 40) |= 1u;
        *(_DWORD *)(a1 + 48) = v13;
      }
      goto LABEL_24;
    }
    if (!v7 || (v7 & 7) == 4) {
      break;
    }
    if ((v7 - 80000) >> 6 > 0x7C)
    {
      if (*v5)
      {
        uint64_t v16 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v16 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        int v6 = v20;
      }
      uint64_t v11 = sub_1885AC0(v7, v16, v6, a3);
    }
    else
    {
      uint64_t v11 = sub_18859DC((uint64_t **)(a1 + 16), v7, v6, (uint64_t)&off_25497B0, (uint64_t *)(a1 + 8), a3);
    }
    unsigned int v20 = (char *)v11;
    if (!v11) {
      return 0;
    }
LABEL_24:
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      return v20;
    }
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v20;
  }
  return 0;
}

char *sub_1791858(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  if (*(unsigned char *)(a1 + 40))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v6 = *(int *)(a1 + 48);
    *uint64_t v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 10000, 11000, v4, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_17919A4(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  if (*(unsigned char *)(a1 + 40))
  {
    int v3 = *(_DWORD *)(a1 + 48);
    if (v3 < 0) {
      uint64_t v4 = 11;
    }
    else {
      uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v4;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    result += v7;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void *sub_1791A34@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Rap");
}

void *sub_1791A44(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1791AB8(void *a1)
{
  sub_1791A44(a1);

  operator delete();
}

char *sub_1791AF0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v12 = a2;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    uint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    uint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_1791BF0(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_1791C88(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_1791CBC(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1791CD8()
{
  return 1;
}

void *sub_1791CE0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.RapFilter");
}

uint64_t sub_1791CF0(uint64_t a1)
{
  if (!a1)
  {
    sub_1876ECC();
  }

  return sub_1791438(v3, a1, 0);
}

uint64_t sub_1791D4C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24DA898;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

BOOL sub_1791DC4(unsigned int a1)
{
  return a1 < 6;
}

BOOL sub_1791DD0(unsigned int a1)
{
  return a1 < 3;
}

BOOL sub_1791DDC(unsigned int a1)
{
  return a1 < 6;
}

BOOL sub_1791DE8(unsigned int a1)
{
  return a1 < 4;
}

BOOL sub_1791DF4(unsigned int a1)
{
  return a1 < 5;
}

BOOL sub_1791E00(unsigned int a1)
{
  return a1 < 0x3F;
}

uint64_t *sub_1791E0C(int a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2623898, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2623898))
  {
    byte_2623890 = sub_1889E98((uint64_t)&qword_26232A8, (int *)":", 63, qword_26238A0);
    __cxa_guard_release(&qword_2623898);
  }
  int v2 = sub_1889E18((uint64_t)&qword_26232A8, (int *)":", 0x3FuLL, a1);
  if (v2 != -1) {
    return &qword_26238A0[3 * v2];
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)byte_2550268, memory_order_acquire) & 1) == 0) {
    sub_1889F30();
  }
  return &qword_2550250;
}

void sub_1791EDC(_Unwind_Exception *a1)
{
}

BOOL sub_1791EF4(unsigned int a1)
{
  return a1 < 3;
}

void *sub_1791F00(void *result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *uint64_t result = off_24DA918;
  result[1] = v3;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_1791F34(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DA918;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

void sub_1791FE8()
{
}

uint64_t sub_179203C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2549800)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_15B1678(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17920F4(uint64_t a1)
{
  sub_179203C(a1);

  operator delete();
}

unsigned char *sub_179212C(unsigned char *result)
{
  uint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if (v2) {
    uint64_t result = sub_15B16B4(*((unsigned char **)result + 3));
  }
  if ((v2 & 6) != 0) {
    *((void *)v1 + 4) = 0;
  }
  char v4 = v1[8];
  uint64_t v3 = v1 + 8;
  *((_DWORD *)v3 + 2) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_1792194(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v30 + 1;
    unsigned int v9 = *v30;
    if (*v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v30 + 2;
      }
    }
    uint64_t v30 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      unint64_t v17 = v8 + 1;
      unint64_t v18 = *v8;
      if (*v8 < 0)
      {
        int v19 = *v17;
        int v20 = v18 + (v19 << 7);
        unint64_t v18 = (v20 - 128);
        if (v19 < 0)
        {
          uint64_t v30 = (char *)sub_188C138((uint64_t)v8, (v20 - 128));
          if (!v30) {
            goto LABEL_52;
          }
          unint64_t v18 = v26;
          goto LABEL_26;
        }
        unint64_t v17 = v8 + 2;
      }
      uint64_t v30 = v17;
LABEL_26:
      if (sub_1369B8C(v18))
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        *(_DWORD *)(a1 + 36) = v18;
      }
      else
      {
        if (*v7) {
          uint64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(3, v18, v29);
      }
      goto LABEL_39;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v21 = v8 + 1;
    int v22 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    int v23 = *v21;
    int v22 = v22 + (v23 << 7) - 128;
    if ((v23 & 0x80000000) == 0)
    {
      uint64_t v21 = v8 + 2;
LABEL_32:
      uint64_t v30 = v21;
      *(_DWORD *)(a1 + 32) = v22;
      goto LABEL_39;
    }
    uint64_t v27 = (char *)sub_188C0D0((uint64_t)v8, v22);
    uint64_t v30 = v27;
    *(_DWORD *)(a1 + 32) = v28;
    if (!v27) {
      goto LABEL_52;
    }
LABEL_39:
    if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v24 = *(void *)(a1 + 24);
    if (!v24)
    {
      uint64_t v25 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v25 = (void *)*v25;
      }
      uint64_t v24 = sub_15C19EC((uint64_t)v25);
      *(void *)(a1 + 24) = v24;
      uint64_t v8 = v30;
    }
    uint64_t v16 = sub_11E1C60(a3, v24, (unsigned __int8 *)v8);
LABEL_38:
    uint64_t v30 = v16;
    if (!v16) {
      goto LABEL_52;
    }
    goto LABEL_39;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      int v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v30;
    }
    uint64_t v16 = (char *)sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_38;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_52:
  uint64_t v30 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v30;
}

unsigned char *sub_1792424(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_15B1A68(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 32);
    *char v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 36);
    *char v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_1792638(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t result = 0;
    goto LABEL_13;
  }
  if (v2)
  {
    uint64_t v4 = sub_15B1D1C(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t result = 0;
  if ((v2 & 2) != 0) {
LABEL_7:
  }
    result += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v2 & 4) != 0)
  {
    int v5 = *(_DWORD *)(a1 + 36);
    if (v5 < 0) {
      uint64_t v6 = 11;
    }
    else {
      uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v6;
  }
LABEL_13:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_1792730(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(void *)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        unint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          unint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = sub_15C19EC((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v9 = &off_253F208;
      }
      sub_15B1E3C(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          *(_DWORD *)(a1 + 16) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_1792818(unsigned char *a1, uint64_t a2)
{
  if ((unsigned char *)a2 != a1)
  {
    sub_179212C(a1);
    sub_1792730((uint64_t)a1, a2);
  }
}

BOOL sub_1792864(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = sub_15B1FC0(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1792890@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ViewportInfo");
}

void *sub_17928A0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C1DB8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1792920(void *a1)
{
  sub_17928A0(a1);

  operator delete();
}

uint64_t sub_1792958(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      BOOL result = sub_15B2C80(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_17929D4(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      int v19 = v6;
      if (v7 == 10)
      {
        unsigned int v12 = v6 - 1;
        while (1)
        {
          unint64_t v13 = (unsigned __int8 *)(v12 + 1);
          int v19 = v12 + 1;
          unint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            unint64_t v17 = sub_15C1B30(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            unint64_t v13 = (unsigned __int8 *)v19;
          }
          unsigned int v12 = (char *)sub_125CF74(a3, v16, v13);
          int v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        unsigned int v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unsigned int v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_1792B74(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_15B2EA4(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_1792CB8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B2F90(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

uint64_t sub_1792D68()
{
  return 1;
}

void *sub_1792D70@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.MultiLocalizedString");
}

uint64_t sub_1792D80(uint64_t result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)BOOL result = off_24DAA18;
  *(void *)(result + 8) = v3;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(void *)(result + 56) = &qword_2550250;
  *(void *)(result + 64) = &qword_2550250;
  *(void *)(result + 72) = &qword_2550250;
  *(void *)(result + 80) = &qword_2550250;
  *(void *)(result + 88) = &qword_2550250;
  *(_DWORD *)(result + 96) = 0;
  return result;
}

uint64_t sub_1792DD0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24DAA18;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = a1 + 24;
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(v5, v8, (const std::string **)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    unint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *unint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  int v12 = *(_DWORD *)(a2 + 16);
  if (v12)
  {
    unint64_t v13 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v13 = (uint64_t *)*v13;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v13);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 56) = &qword_2550250;
  if ((v12 & 2) != 0)
  {
    unint64_t v14 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v14 = (uint64_t *)*v14;
    }
    sub_1881DF4((std::string **)(a1 + 56), (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL), v14);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 64) = &qword_2550250;
  if ((v12 & 4) != 0)
  {
    uint64_t v15 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    sub_1881DF4((std::string **)(a1 + 64), (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL), v15);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 72) = &qword_2550250;
  if ((v12 & 8) != 0)
  {
    uint64_t v16 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    sub_1881DF4((std::string **)(a1 + 72), (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL), v16);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 80) = &qword_2550250;
  if ((v12 & 0x10) != 0)
  {
    unint64_t v17 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v17 = (uint64_t *)*v17;
    }
    sub_1881DF4((std::string **)(a1 + 80), (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL), v17);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 88) = &qword_2550250;
  if ((v12 & 0x20) != 0)
  {
    unint64_t v18 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v18 = (uint64_t *)*v18;
    }
    sub_1881DF4((std::string **)(a1 + 88), (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL), v18);
  }
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  return a1;
}

void sub_1792FEC(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1793030(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_17;
    }
  }
  else if (v4)
  {
    goto LABEL_17;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 72));
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(uint64_t **)(a1 + 88) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 88));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_17:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1793140(uint64_t a1)
{
  sub_1793030(a1);

  operator delete();
}

uint64_t sub_1793178(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 0x3F) != 0)
  {
    if ((v3 & 1) == 0)
    {
      if ((v3 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_13:
      unint64_t v5 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v5 + 23) < 0)
      {
        **(unsigned char **)unint64_t v5 = 0;
        *(void *)(v5 + 8) = 0;
        if ((v3 & 4) != 0) {
          goto LABEL_17;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v5 = 0;
        *(unsigned char *)(v5 + 23) = 0;
        if ((v3 & 4) != 0) {
          goto LABEL_17;
        }
      }
LABEL_5:
      if ((v3 & 8) == 0) {
        goto LABEL_6;
      }
LABEL_21:
      unint64_t v7 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v7 + 23) < 0)
      {
        **(unsigned char **)unint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
        if ((v3 & 0x10) != 0) {
          goto LABEL_25;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v7 = 0;
        *(unsigned char *)(v7 + 23) = 0;
        if ((v3 & 0x10) != 0) {
          goto LABEL_25;
        }
      }
LABEL_7:
      if ((v3 & 0x20) == 0) {
        goto LABEL_32;
      }
LABEL_29:
      unint64_t v9 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v9 + 23) < 0)
      {
        **(unsigned char **)unint64_t v9 = 0;
        *(void *)(v9 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v9 = 0;
        *(unsigned char *)(v9 + 23) = 0;
      }
      goto LABEL_32;
    }
    unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_13;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_13;
      }
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_17:
    unint64_t v6 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v3 & 8) != 0) {
        goto LABEL_21;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v3 & 8) != 0) {
        goto LABEL_21;
      }
    }
LABEL_6:
    if ((v3 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_25:
    unint64_t v8 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
      if ((v3 & 0x20) == 0) {
        goto LABEL_32;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
      if ((v3 & 0x20) == 0) {
        goto LABEL_32;
      }
    }
    goto LABEL_29;
  }
LABEL_32:
  char v11 = *(unsigned char *)(a1 + 8);
  uint64_t v10 = a1 + 8;
  *(_DWORD *)(v10 + 88) = 0;
  *(_DWORD *)(v10 + 8) = 0;
  if (v11)
  {
    return sub_188B4AC((uint64_t *)v10);
  }
  return result;
}

uint64_t sub_1793310(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v37 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v37, a3[11].i32[1])) {
    return *(void *)v37;
  }
  uint64_t v36 = (uint64_t *)(a1 + 8);
  unint64_t v6 = (uint64_t **)(a1 + 24);
  while (2)
  {
    unint64_t v7 = (char *)(*(void *)v37 + 1);
    unsigned int v8 = **(unsigned char **)v37;
    if ((char)**(unsigned char **)v37 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180(*(uint64_t *)v37, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (char *)(*(void *)v37 + 2);
      }
    }
    *(void *)uint64_t v37 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_56;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        int v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          int v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 48);
        goto LABEL_52;
      case 2u:
        if (v8 != 18) {
          goto LABEL_56;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        int v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          int v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 56);
        goto LABEL_52;
      case 3u:
        if (v8 != 26) {
          goto LABEL_56;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v15 = *(void *)(a1 + 8);
        int v12 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          int v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 64);
        goto LABEL_52;
      case 4u:
        if (v8 != 32) {
          goto LABEL_56;
        }
        uint64_t v16 = v7 + 1;
        unint64_t v17 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v18 = *v16;
        int v19 = v17 + (v18 << 7);
        unint64_t v17 = (v19 - 128);
        if (v18 < 0)
        {
          *(void *)uint64_t v37 = sub_188C138((uint64_t)v7, (v19 - 128));
          if (!*(void *)v37) {
            return 0;
          }
          unint64_t v17 = v34;
        }
        else
        {
          uint64_t v16 = v7 + 2;
LABEL_25:
          *(void *)uint64_t v37 = v16;
        }
        if (sub_129EB9C(v17))
        {
          *(_DWORD *)(a1 + 16) |= 0x40u;
          *(_DWORD *)(a1 + 96) = v17;
        }
        else
        {
          if (*v36) {
            unint64_t v35 = (std::string *)((*v36 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v35 = (std::string *)sub_188DBD8(v36);
          }
          sub_188C020(4, v17, v35);
        }
        goto LABEL_54;
      case 5u:
        if (v8 != 42) {
          goto LABEL_56;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v20 = *(void *)(a1 + 8);
        int v12 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
        if (v20) {
          int v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 72);
        goto LABEL_52;
      case 6u:
        if (v8 != 50) {
          goto LABEL_56;
        }
        uint64_t v21 = v7 - 1;
        while (1)
        {
          int v22 = (char *)(v21 + 1);
          *(void *)uint64_t v37 = v21 + 1;
          int v23 = *(_DWORD **)(a1 + 40);
          if (v23 && (uint64_t v24 = *(int *)(a1 + 32), (int)v24 < *v23))
          {
            *(_DWORD *)(a1 + 32) = v24 + 1;
            uint64_t v25 = *(std::string **)&v23[2 * v24 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            void *v27 = v26;
            v27[1] = sub_3A6EDC;
            *unint64_t v26 = 0;
            v26[1] = 0;
            v26[2] = 0;
            uint64_t v25 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v26);
            int v22 = *(char **)v37;
          }
          uint64_t v21 = sub_188C244(v25, v22, (uint64_t)a3);
          *(void *)uint64_t v37 = v21;
          if (!v21) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *v21 != 50) {
            goto LABEL_54;
          }
        }
      case 7u:
        if (v8 != 58) {
          goto LABEL_56;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v28 = *(void *)(a1 + 8);
        int v12 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
        if (v28) {
          int v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 80);
        goto LABEL_52;
      case 8u:
        if (v8 != 66) {
          goto LABEL_56;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v29 = *(void *)(a1 + 8);
        int v12 = (uint64_t *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
        if (v29) {
          int v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 88);
LABEL_52:
        uint64_t v30 = (std::string *)sub_1880F84(v13, v12);
        uint64_t v31 = (void *)sub_188C244(v30, *(char **)v37, (uint64_t)a3);
        goto LABEL_53;
      default:
LABEL_56:
        if (v8) {
          BOOL v32 = (v8 & 7) == 4;
        }
        else {
          BOOL v32 = 1;
        }
        if (!v32)
        {
          if (*v36)
          {
            unint64_t v33 = (std::string *)((*v36 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v33 = (std::string *)sub_188DBD8(v36);
            unint64_t v7 = *(char **)v37;
          }
          uint64_t v31 = sub_1885AC0(v8, v33, v7, a3);
LABEL_53:
          *(void *)uint64_t v37 = v31;
          if (!v31) {
            return 0;
          }
LABEL_54:
          if (sub_11947B8((uint64_t)a3, (char **)v37, a3[11].i32[1])) {
            return *(void *)v37;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v37;
    }
  }
}

unsigned char *sub_1793774(uint64_t a1, unsigned char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 0x40) == 0) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x40) == 0) {
    goto LABEL_15;
  }
LABEL_9:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v7 = *(int *)(a1 + 96);
  *unint64_t v4 = 32;
  v4[1] = v7;
  if (v7 > 0x7F)
  {
    v4[1] = v7 | 0x80;
    unint64_t v8 = v7 >> 7;
    v4[2] = v7 >> 7;
    v4 += 3;
    if (v7 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v9 = v8 >> 14;
        v8 >>= 7;
        *v4++ = v8;
      }
      while (v9);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_15:
  if ((v6 & 8) != 0) {
    unint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(unsigned int *)(a1 + 32);
  if ((int)v10 >= 1)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 8 * v10;
    do
    {
      unint64_t v4 = (unsigned char *)sub_125CE58(a3, 6, *(void *)(*(void *)(a1 + 40) + v11 + 8), v4);
      v11 += 8;
    }
    while (v12 != v11);
  }
  if ((v6 & 0x10) != 0) {
    unint64_t v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x20) != 0) {
    unint64_t v4 = sub_117A0AC(a3, 8, (const void **)(*(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_17939B8(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  int v7 = *(_DWORD *)(a1 + 16);
  if ((v7 & 0x7F) == 0) {
    goto LABEL_39;
  }
  if (v7)
  {
    unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v7 & 2) == 0)
    {
LABEL_11:
      if ((v7 & 4) == 0) {
        goto LABEL_12;
      }
      goto LABEL_23;
    }
  }
  else if ((v7 & 2) == 0)
  {
    goto LABEL_11;
  }
  unint64_t v11 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
  uint64_t v13 = *(void *)(v11 + 8);
  if ((v12 & 0x80u) == 0) {
    uint64_t v13 = v12;
  }
  v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v7 & 4) == 0)
  {
LABEL_12:
    if ((v7 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_26;
  }
LABEL_23:
  unint64_t v14 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
  uint64_t v16 = *(void *)(v14 + 8);
  if ((v15 & 0x80u) == 0) {
    uint64_t v16 = v15;
  }
  v3 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v7 & 8) == 0)
  {
LABEL_13:
    if ((v7 & 0x10) == 0) {
      goto LABEL_14;
    }
LABEL_29:
    unint64_t v20 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v21 = *(unsigned __int8 *)(v20 + 23);
    uint64_t v22 = *(void *)(v20 + 8);
    if ((v21 & 0x80u) == 0) {
      uint64_t v22 = v21;
    }
    v3 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v7 & 0x20) == 0)
    {
LABEL_15:
      if ((v7 & 0x40) == 0) {
        goto LABEL_39;
      }
      goto LABEL_35;
    }
    goto LABEL_32;
  }
LABEL_26:
  unint64_t v17 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
  uint64_t v19 = *(void *)(v17 + 8);
  if ((v18 & 0x80u) == 0) {
    uint64_t v19 = v18;
  }
  v3 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v7 & 0x10) != 0) {
    goto LABEL_29;
  }
LABEL_14:
  if ((v7 & 0x20) == 0) {
    goto LABEL_15;
  }
LABEL_32:
  unint64_t v23 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v24 = *(unsigned __int8 *)(v23 + 23);
  uint64_t v25 = *(void *)(v23 + 8);
  if ((v24 & 0x80u) == 0) {
    uint64_t v25 = v24;
  }
  v3 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v7 & 0x40) != 0)
  {
LABEL_35:
    int v26 = *(_DWORD *)(a1 + 96);
    if (v26 < 0) {
      uint64_t v27 = 11;
    }
    else {
      uint64_t v27 = ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v27;
  }
LABEL_39:
  uint64_t v28 = *(void *)(a1 + 8);
  if (v28)
  {
    unint64_t v30 = v28 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v30 + 31) < 0) {
      uint64_t v31 = *(void *)(v30 + 16);
    }
    else {
      uint64_t v31 = *(unsigned __int8 *)(v30 + 31);
    }
    v3 += v31;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_1793C44(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    unint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *unint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0x7F) != 0)
  {
    if (v9)
    {
      unint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_24;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    unint64_t v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_27;
    }
LABEL_24:
    unint64_t v17 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v18 = v3->__r_.__value_.__l.__size_;
    uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (uint64_t *)*v19;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__r.__words[2], v17, v19);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_30;
    }
LABEL_27:
    unint64_t v20 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::size_type v21 = v3->__r_.__value_.__l.__size_;
    uint64_t v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      uint64_t v22 = (uint64_t *)*v22;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3], v20, v22);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0) {
        goto LABEL_11;
      }
      goto LABEL_33;
    }
LABEL_30:
    unint64_t v23 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
    std::string::size_type v24 = v3->__r_.__value_.__l.__size_;
    uint64_t v25 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
    if (v24) {
      uint64_t v25 = (uint64_t *)*v25;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__l.__size_, v23, v25);
    if ((v9 & 0x20) == 0)
    {
LABEL_11:
      if ((v9 & 0x40) == 0)
      {
LABEL_13:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
        goto LABEL_14;
      }
LABEL_12:
      LODWORD(v3[4].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 96);
      goto LABEL_13;
    }
LABEL_33:
    int v26 = (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x20u;
    std::string::size_type v27 = v3->__r_.__value_.__l.__size_;
    uint64_t v28 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
    if (v27) {
      uint64_t v28 = (uint64_t *)*v28;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__r.__words[2], v26, v28);
    if ((v9 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_14:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1793E8C()
{
  return 1;
}

void *sub_1793E94@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.RecentRouteInfo");
}

void *sub_1793EA4(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  a1[1] = v4;
  *a1 = off_24DAA98;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = 0;
  a1[7] = 0;
  return a1;
}

void sub_1793F0C(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1793F3C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1793FB8(void *a1)
{
  sub_1793F3C(a1);

  operator delete();
}

unsigned char *sub_1793FF0(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  if ((*(unsigned char *)(a1 + 40) & 0xF) != 0)
  {
    *(void *)(a1 + 48) = 0;
    *(void *)(a1 + 56) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 32) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_1794054(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v35 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v35, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = v35 + 1;
    unsigned int v9 = *v35;
    if (*v35 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v35, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v35 + 2;
      }
    }
    unint64_t v35 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_29;
        }
        v5 |= 1u;
        uint64_t v13 = v8 + 1;
        LODWORD(v12) = *v8;
        if ((v12 & 0x80) == 0) {
          goto LABEL_13;
        }
        int v14 = *v13;
        uint64_t v12 = v12 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v13 = v8 + 2;
LABEL_13:
          unint64_t v35 = v13;
          *(_DWORD *)(a1 + 48) = v12;
          goto LABEL_39;
        }
        std::string::size_type v27 = (char *)sub_188C138((uint64_t)v8, v12);
        unint64_t v35 = v27;
        *(_DWORD *)(a1 + 48) = v28;
        if (v27) {
          goto LABEL_39;
        }
        goto LABEL_52;
      case 2u:
        if (v9 != 16) {
          goto LABEL_29;
        }
        v5 |= 2u;
        std::string::size_type v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v29 = (char *)sub_188C0D0((uint64_t)v8, v16);
          unint64_t v35 = v29;
          *(_DWORD *)(a1 + 52) = v30;
          if (!v29) {
            goto LABEL_52;
          }
        }
        else
        {
          std::string::size_type v15 = v8 + 2;
LABEL_18:
          unint64_t v35 = v15;
          *(_DWORD *)(a1 + 52) = v16;
        }
        goto LABEL_39;
      case 3u:
        if (v9 != 24) {
          goto LABEL_29;
        }
        v5 |= 4u;
        uint64_t v19 = v8 + 1;
        LODWORD(v18) = *v8;
        if ((v18 & 0x80) == 0) {
          goto LABEL_23;
        }
        int v20 = *v19;
        uint64_t v18 = v18 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v31 = (char *)sub_188C138((uint64_t)v8, v18);
          unint64_t v35 = v31;
          *(_DWORD *)(a1 + 56) = v32;
          if (!v31) {
            goto LABEL_52;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_23:
          unint64_t v35 = v19;
          *(_DWORD *)(a1 + 56) = v18;
        }
        goto LABEL_39;
      case 4u:
        if (v9 != 32) {
          goto LABEL_29;
        }
        v5 |= 8u;
        std::string::size_type v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          unint64_t v33 = (char *)sub_188C0D0((uint64_t)v8, v22);
          unint64_t v35 = v33;
          *(_DWORD *)(a1 + 60) = v34;
          if (!v33) {
            goto LABEL_52;
          }
        }
        else
        {
          std::string::size_type v21 = v8 + 2;
LABEL_28:
          unint64_t v35 = v21;
          *(_DWORD *)(a1 + 60) = v22;
        }
        goto LABEL_39;
      default:
LABEL_29:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (v9 - 800 > 0x31F)
          {
            if (*v7)
            {
              int v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              int v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              unint64_t v8 = v35;
            }
            uint64_t v25 = sub_1885AC0(v9, v26, v8, a3);
          }
          else
          {
            uint64_t v25 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_25498C0, (uint64_t *)(a1 + 8), a3);
          }
          unint64_t v35 = (char *)v25;
          if (!v25) {
            goto LABEL_52;
          }
LABEL_39:
          if (sub_11947B8((uint64_t)a3, &v35, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_52:
        }
          unint64_t v35 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return v35;
    }
  }
}

char *sub_1794360(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(int *)(a1 + 48);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 52);
    *char v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 56);
    *char v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 60);
    *char v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 100, 200, v4, a3);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_1794620(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0xF) == 0) {
    goto LABEL_7;
  }
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_13:
    result += ((9 * (__clz(*(_DWORD *)(a1 + 52) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 4) == 0)
    {
LABEL_5:
      if ((v3 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    goto LABEL_14;
  }
  int v5 = *(_DWORD *)(a1 + 48);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
  if ((v3 & 2) != 0) {
    goto LABEL_13;
  }
LABEL_4:
  if ((v3 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_14:
  int v7 = *(_DWORD *)(a1 + 56);
  if (v7 < 0) {
    uint64_t v8 = 11;
  }
  else {
    uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v8;
  if ((v3 & 8) != 0) {
LABEL_6:
  }
    result += ((9 * (__clz(*(_DWORD *)(a1 + 60) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_7:
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v9 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    result += v10;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_179474C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_14;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        *(_DWORD *)(a1 + 40) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
      goto LABEL_7;
    }
LABEL_14:
    *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1794804(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_179480C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ResultDetourInfo");
}

uint64_t sub_179481C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24DAB18;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = a2;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = a2;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = a2;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = a2;
  *(void *)(a1 + 136) = a2;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = &qword_2550250;
  *(void *)(a1 + 168) = &qword_2550250;
  *(void *)(a1 + 176) = &qword_2550250;
  *(void *)(a1 + 184) = &qword_2550250;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 347) = 0u;
  *(_DWORD *)(a1 + 364) = 10;
  return a1;
}

void sub_17948F0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1794920(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v28 = a1 + 16;
  *(void *)a1 = off_24DAB18;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  int v5 = *(_DWORD *)(a2 + 56);
  if (v5)
  {
    sub_188C80C((unsigned int *)(a1 + 56), v5);
    uint64_t v6 = *(void **)(a1 + 64);
    *(_DWORD *)(a1 + 56) += *(_DWORD *)(a2 + 56);
    memcpy(v6, *(const void **)(a2 + 64), 4 * *(int *)(a2 + 56));
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  int v7 = *(_DWORD *)(a2 + 72);
  if (v7)
  {
    sub_188C80C((unsigned int *)(a1 + 72), v7);
    uint64_t v8 = *(void **)(a1 + 80);
    *(_DWORD *)(a1 + 72) += *(_DWORD *)(a2 + 72);
    memcpy(v8, *(const void **)(a2 + 80), 4 * *(int *)(a2 + 72));
  }
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  int v9 = *(_DWORD *)(a2 + 88);
  if (v9)
  {
    sub_188C80C((unsigned int *)(a1 + 88), v9);
    uint64_t v10 = *(void **)(a1 + 96);
    *(_DWORD *)(a1 + 88) += *(_DWORD *)(a2 + 88);
    memcpy(v10, *(const void **)(a2 + 96), 4 * *(int *)(a2 + 88));
  }
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  int v11 = *(_DWORD *)(a2 + 104);
  if (v11)
  {
    sub_188C80C((unsigned int *)(a1 + 104), v11);
    unsigned int v12 = *(void **)(a1 + 112);
    *(_DWORD *)(a1 + 104) += *(_DWORD *)(a2 + 104);
    memcpy(v12, *(const void **)(a2 + 112), 4 * *(int *)(a2 + 104));
  }
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  int v13 = *(_DWORD *)(a2 + 120);
  if (v13)
  {
    sub_188C80C((unsigned int *)(a1 + 120), v13);
    unint64_t v14 = *(void **)(a1 + 128);
    *(_DWORD *)(a1 + 120) += *(_DWORD *)(a2 + 120);
    memcpy(v14, *(const void **)(a2 + 128), 4 * *(int *)(a2 + 120));
  }
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  int v15 = *(_DWORD *)(a2 + 144);
  if (v15)
  {
    uint64_t v16 = *(void *)(a2 + 152);
    unsigned int v17 = (std::string **)sub_188CCE4(a1 + 136, *(_DWORD *)(a2 + 144));
    sub_18785B8((uint64_t *)(a1 + 136), v17, (uint64_t *)(v16 + 8), v15, **(_DWORD **)(a1 + 152) - *(_DWORD *)(a1 + 144));
    int v18 = *(_DWORD *)(a1 + 144) + v15;
    *(_DWORD *)(a1 + 144) = v18;
    uint64_t v19 = *(int **)(a1 + 152);
    if (*v19 < v18) {
      int *v19 = v18;
    }
  }
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20) {
    sub_188B4F8(v4, (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v28, a2 + 16);
  *(void *)(a1 + 160) = &qword_2550250;
  int v21 = *(_DWORD *)(a2 + 40);
  if (v21)
  {
    int v22 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v22 = (uint64_t *)*v22;
    }
    sub_1881DF4((std::string **)(a1 + 160), (long long *)(*(void *)(a2 + 160) & 0xFFFFFFFFFFFFFFFELL), v22);
    int v21 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 168) = &qword_2550250;
  if ((v21 & 2) != 0)
  {
    uint64_t v23 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v23 = (uint64_t *)*v23;
    }
    sub_1881DF4((std::string **)(a1 + 168), (long long *)(*(void *)(a2 + 168) & 0xFFFFFFFFFFFFFFFELL), v23);
    int v21 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 176) = &qword_2550250;
  if ((v21 & 4) != 0)
  {
    uint64_t v24 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v24 = (uint64_t *)*v24;
    }
    sub_1881DF4((std::string **)(a1 + 176), (long long *)(*(void *)(a2 + 176) & 0xFFFFFFFFFFFFFFFELL), v24);
    int v21 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 184) = &qword_2550250;
  if ((v21 & 8) != 0)
  {
    uint64_t v25 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v25 = (uint64_t *)*v25;
    }
    sub_1881DF4((std::string **)(a1 + 184), (long long *)(*(void *)(a2 + 184) & 0xFFFFFFFFFFFFFFFELL), v25);
    int v21 = *(_DWORD *)(a2 + 40);
  }
  if ((v21 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 192) = 0;
  if ((v21 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 200) = 0;
  if ((v21 & 0x40) != 0) {
    operator new();
  }
  *(void *)(a1 + 208) = 0;
  if ((v21 & 0x80) != 0) {
    operator new();
  }
  *(void *)(a1 + 216) = 0;
  if ((v21 & 0x100) != 0) {
    operator new();
  }
  *(void *)(a1 + 224) = 0;
  if ((v21 & 0x200) != 0) {
    operator new();
  }
  *(void *)(a1 + 232) = 0;
  if ((v21 & 0x400) != 0) {
    operator new();
  }
  *(void *)(a1 + 240) = 0;
  if ((v21 & 0x800) != 0) {
    operator new();
  }
  *(void *)(a1 + 248) = 0;
  if ((v21 & 0x1000) != 0) {
    operator new();
  }
  *(void *)(a1 + 256) = 0;
  if ((v21 & 0x2000) != 0) {
    operator new();
  }
  *(void *)(a1 + 264) = 0;
  if ((v21 & 0x4000) != 0) {
    operator new();
  }
  *(void *)(a1 + 272) = 0;
  if ((v21 & 0x8000) != 0) {
    operator new();
  }
  *(void *)(a1 + 280) = 0;
  if ((v21 & 0x10000) != 0) {
    operator new();
  }
  *(void *)(a1 + 288) = 0;
  if ((v21 & 0x20000) != 0) {
    operator new();
  }
  *(void *)(a1 + 296) = 0;
  if ((v21 & 0x40000) != 0) {
    operator new();
  }
  *(void *)(a1 + 304) = 0;
  if ((v21 & 0x80000) != 0) {
    operator new();
  }
  *(void *)(a1 + 312) = 0;
  if ((v21 & 0x100000) != 0) {
    operator new();
  }
  *(void *)(a1 + 320) = 0;
  if ((v21 & 0x200000) != 0) {
    operator new();
  }
  *(void *)(a1 + 328) = 0;
  long long v26 = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 352) = v26;
  return a1;
}

void sub_1795034()
{
}

void *sub_1795230(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_17952F0((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1876F38(a1 + 17);
  sub_1889DA8((uint64_t)(a1 + 15));
  sub_1889DA8((uint64_t)(a1 + 13));
  sub_1889DA8((uint64_t)(a1 + 11));
  sub_1889DA8((uint64_t)(a1 + 9));
  sub_1889DA8((uint64_t)(a1 + 7));
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_17952F0(uint64_t a1)
{
  int v3 = *(uint64_t **)(a1 + 160);
  uint64_t v2 = (void ***)(a1 + 160);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 168) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 168));
  }
  if (*(uint64_t **)(a1 + 176) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 176));
  }
  uint64_t result = (void ***)(a1 + 184);
  if (*(uint64_t **)(a1 + 184) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2549900)
  {
    uint64_t v5 = *(void *)(a1 + 192);
    if (v5)
    {
      sub_179203C(v5);
      operator delete();
    }
    if (*(void *)(a1 + 200))
    {
      sub_1318AD4();
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 208);
    if (v6)
    {
      sub_128EB3C(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 216);
    if (v7)
    {
      sub_128F6FC(v7);
      operator delete();
    }
    uint64_t v8 = *(void *)(a1 + 224);
    if (v8)
    {
      sub_1793030(v8);
      operator delete();
    }
    uint64_t v9 = *(void *)(a1 + 232);
    if (v9)
    {
      sub_12925EC(v9);
      operator delete();
    }
    if (*(void *)(a1 + 240))
    {
      sub_12A0FF0();
      operator delete();
    }
    uint64_t v10 = *(void *)(a1 + 248);
    if (v10)
    {
      sub_1291CF8(v10);
      operator delete();
    }
    int v11 = *(void **)(a1 + 256);
    if (v11)
    {
      sub_1298CF0(v11);
      operator delete();
    }
    uint64_t v12 = *(void *)(a1 + 264);
    if (v12)
    {
      sub_16EE610(v12);
      operator delete();
    }
    if (*(void *)(a1 + 272))
    {
      sub_12B75F4();
      operator delete();
    }
    uint64_t v13 = *(void *)(a1 + 280);
    if (v13)
    {
      sub_179203C(v13);
      operator delete();
    }
    if (*(void *)(a1 + 288))
    {
      sub_12A46C8();
      operator delete();
    }
    unint64_t v14 = *(void **)(a1 + 296);
    if (v14)
    {
      sub_129AC40(v14);
      operator delete();
    }
    int v15 = *(void **)(a1 + 304);
    if (v15)
    {
      sub_130C960(v15);
      operator delete();
    }
    uint64_t v16 = *(void *)(a1 + 312);
    if (v16)
    {
      sub_129B2BC(v16);
      operator delete();
    }
    unsigned int v17 = *(void **)(a1 + 320);
    if (v17)
    {
      sub_129D77C(v17);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 328);
    if (result)
    {
      sub_1799B38((uint64_t)result);
      operator delete();
    }
  }
  return result;
}

void sub_17955D0(void *a1)
{
  sub_1795230(a1);

  operator delete();
}

uint64_t sub_1795608(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  *(_DWORD *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 72) = 0;
  *(_DWORD *)(a1 + 88) = 0;
  *(_DWORD *)(a1 + 104) = 0;
  *(_DWORD *)(a1 + 120) = 0;
  uint64_t v3 = *(unsigned int *)(a1 + 144);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 152) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_12B851C(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 144) = 0;
  }
  unsigned int v6 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v6) {
    goto LABEL_15;
  }
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_8;
    }
LABEL_61:
    unint64_t v10 = *(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v10 + 23) < 0)
    {
      **(unsigned char **)unint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
      if ((v6 & 4) != 0) {
        goto LABEL_65;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v10 = 0;
      *(unsigned char *)(v10 + 23) = 0;
      if ((v6 & 4) != 0) {
        goto LABEL_65;
      }
    }
LABEL_9:
    if ((v6 & 8) == 0) {
      goto LABEL_10;
    }
LABEL_69:
    unint64_t v12 = *(void *)(a1 + 184) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v12 + 23) < 0)
    {
      **(unsigned char **)unint64_t v12 = 0;
      *(void *)(v12 + 8) = 0;
      if ((v6 & 0x10) != 0) {
        goto LABEL_73;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v12 = 0;
      *(unsigned char *)(v12 + 23) = 0;
      if ((v6 & 0x10) != 0) {
        goto LABEL_73;
      }
    }
LABEL_11:
    if ((v6 & 0x20) == 0) {
      goto LABEL_12;
    }
LABEL_74:
    uint64_t result = sub_1318B10(*(void *)(a1 + 200));
    if ((v6 & 0x40) == 0)
    {
LABEL_13:
      if ((v6 & 0x80) == 0) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
    goto LABEL_75;
  }
  unint64_t v9 = *(void *)(a1 + 160) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v9 + 23) < 0)
  {
    **(unsigned char **)unint64_t v9 = 0;
    *(void *)(v9 + 8) = 0;
    if ((v6 & 2) != 0) {
      goto LABEL_61;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v9 = 0;
    *(unsigned char *)(v9 + 23) = 0;
    if ((v6 & 2) != 0) {
      goto LABEL_61;
    }
  }
LABEL_8:
  if ((v6 & 4) == 0) {
    goto LABEL_9;
  }
LABEL_65:
  unint64_t v11 = *(void *)(a1 + 176) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v11 + 23) < 0)
  {
    **(unsigned char **)unint64_t v11 = 0;
    *(void *)(v11 + 8) = 0;
    if ((v6 & 8) != 0) {
      goto LABEL_69;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v11 = 0;
    *(unsigned char *)(v11 + 23) = 0;
    if ((v6 & 8) != 0) {
      goto LABEL_69;
    }
  }
LABEL_10:
  if ((v6 & 0x10) == 0) {
    goto LABEL_11;
  }
LABEL_73:
  uint64_t result = (uint64_t)sub_179212C(*(unsigned char **)(a1 + 192));
  if ((v6 & 0x20) != 0) {
    goto LABEL_74;
  }
LABEL_12:
  if ((v6 & 0x40) == 0) {
    goto LABEL_13;
  }
LABEL_75:
  uint64_t result = sub_128EB78(*(void *)(a1 + 208));
  if ((v6 & 0x80) != 0) {
LABEL_14:
  }
    uint64_t result = sub_128F738(*(void *)(a1 + 216));
LABEL_15:
  if ((v6 & 0xFF00) == 0) {
    goto LABEL_25;
  }
  if ((v6 & 0x100) != 0)
  {
    uint64_t result = sub_1793178(*(void *)(a1 + 224));
    if ((v6 & 0x200) == 0)
    {
LABEL_18:
      if ((v6 & 0x400) == 0) {
        goto LABEL_19;
      }
      goto LABEL_48;
    }
  }
  else if ((v6 & 0x200) == 0)
  {
    goto LABEL_18;
  }
  uint64_t result = sub_1292628(*(void *)(a1 + 232));
  if ((v6 & 0x400) == 0)
  {
LABEL_19:
    if ((v6 & 0x800) == 0) {
      goto LABEL_20;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = sub_12A102C(*(void *)(a1 + 240));
  if ((v6 & 0x800) == 0)
  {
LABEL_20:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = sub_1291D34(*(void *)(a1 + 248));
  if ((v6 & 0x1000) == 0)
  {
LABEL_21:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = sub_1298D2C(*(void *)(a1 + 256));
  if ((v6 & 0x2000) == 0)
  {
LABEL_22:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = sub_16EE7C0(*(void *)(a1 + 264));
  if ((v6 & 0x4000) == 0)
  {
LABEL_23:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
LABEL_52:
  uint64_t result = sub_12B7630(*(void *)(a1 + 272));
  if ((v6 & 0x8000) != 0) {
LABEL_24:
  }
    uint64_t result = (uint64_t)sub_179212C(*(unsigned char **)(a1 + 280));
LABEL_25:
  if ((v6 & 0x3F0000) == 0) {
    goto LABEL_33;
  }
  if ((v6 & 0x10000) != 0)
  {
    uint64_t result = (uint64_t)sub_12A4704(*(unsigned char **)(a1 + 288));
    if ((v6 & 0x20000) == 0)
    {
LABEL_28:
      if ((v6 & 0x40000) == 0) {
        goto LABEL_29;
      }
      goto LABEL_56;
    }
  }
  else if ((v6 & 0x20000) == 0)
  {
    goto LABEL_28;
  }
  uint64_t result = (uint64_t)sub_129AC7C(*(void *)(a1 + 296));
  if ((v6 & 0x40000) == 0)
  {
LABEL_29:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t result = (uint64_t)sub_130C99C(*(void *)(a1 + 304));
  if ((v6 & 0x80000) == 0)
  {
LABEL_30:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t result = sub_129B2F8(*(void *)(a1 + 312));
  if ((v6 & 0x100000) == 0)
  {
LABEL_31:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_32;
  }
LABEL_58:
  uint64_t result = sub_129D7B8(*(void *)(a1 + 320));
  if ((v6 & 0x200000) != 0) {
LABEL_32:
  }
    uint64_t result = sub_17958E8(*(void *)(a1 + 328));
LABEL_33:
  if ((v6 & 0xC00000) != 0) {
    *(void *)(a1 + 336) = 0;
  }
  if (HIBYTE(v6))
  {
    *(void *)(a1 + 344) = 0;
    *(void *)(a1 + 352) = 0;
    *(unsigned char *)(a1 + 360) = 0;
  }
  if ((*(unsigned char *)(a1 + 44) & 7) != 0)
  {
    *(_WORD *)(a1 + 361) = 0;
    *(_DWORD *)(a1 + 364) = 10;
  }
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = (uint64_t *)(a1 + 8);
  v7[4] = 0;
  if (v8)
  {
    return sub_188B4AC(v7);
  }
  return result;
}

uint64_t sub_17958E8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(unsigned char *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1795930(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v167 = a2;
  char v5 = sub_11947B8((uint64_t)a3, (char **)v167, a3[11].i32[1]);
  uint64_t result = *(char **)v167;
  if ((v5 & 1) == 0)
  {
    v165 = (uint64_t *)(a1 + 8);
    v166 = (uint64_t *)(a1 + 136);
    while (1)
    {
      uint64_t v7 = result + 1;
      unsigned int v8 = *result;
      if (*result < 0)
      {
        int v9 = *v7;
        unsigned int v10 = v8 + (v9 << 7);
        unsigned int v8 = v10 - 128;
        if (v9 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)result, v10 - 128);
          unsigned int v8 = v11;
        }
        else
        {
          uint64_t v7 = result + 2;
        }
      }
      *(void *)v167 = v7;
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 8) {
            goto LABEL_354;
          }
          unint64_t v12 = v7 + 1;
          unint64_t v13 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_13;
          }
          int v14 = *v12;
          int v15 = v13 + (v14 << 7);
          unint64_t v13 = (v15 - 128);
          if (v14 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v7, (v15 - 128));
            *(void *)v167 = result;
            if (!result) {
              return result;
            }
            unint64_t v13 = v146;
          }
          else
          {
            unint64_t v12 = v7 + 2;
LABEL_13:
            *(void *)v167 = v12;
          }
          if (v13 <= 3)
          {
            *(_DWORD *)(a1 + 40) |= 0x400000u;
            *(_DWORD *)(a1 + 336) = v13;
            goto LABEL_364;
          }
          if (*v165) {
            v163 = (std::string *)((*v165 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v163 = (std::string *)sub_188DBD8(v165);
          }
          int v164 = 1;
          goto LABEL_378;
        case 2u:
          if (v8 != 16) {
            goto LABEL_354;
          }
          *(_DWORD *)(a1 + 44) |= 4u;
          uint64_t v16 = v7 + 1;
          int v17 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_20;
          }
          int v18 = *v16;
          int v17 = v17 + (v18 << 7) - 128;
          if (v18 < 0)
          {
            uint64_t result = (char *)sub_188C0D0((uint64_t)v7, v17);
            *(void *)v167 = result;
            *(_DWORD *)(a1 + 364) = v147;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v16 = v7 + 2;
LABEL_20:
            *(void *)v167 = v16;
            *(_DWORD *)(a1 + 364) = v17;
          }
          goto LABEL_364;
        case 3u:
          if (v8 != 26) {
            goto LABEL_354;
          }
          *(_DWORD *)(a1 + 40) |= 1u;
          uint64_t v19 = *(void *)(a1 + 8);
          uint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
          if (v19) {
            uint64_t v20 = (uint64_t *)*v20;
          }
          int v21 = (void *)(a1 + 160);
          goto LABEL_276;
        case 4u:
          if (v8 != 34) {
            goto LABEL_354;
          }
          *(_DWORD *)(a1 + 40) |= 0x10u;
          int v22 = *(void **)(a1 + 192);
          if (v22) {
            goto LABEL_215;
          }
          uint64_t v23 = (void *)(*v165 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v165) {
            uint64_t v23 = (void *)*v23;
          }
          int v22 = sub_18302C8((uint64_t)v23);
          *(void *)(a1 + 192) = v22;
          goto LABEL_214;
        case 5u:
          if (v8 != 42) {
            goto LABEL_354;
          }
          *(_DWORD *)(a1 + 40) |= 2u;
          uint64_t v24 = *(void *)(a1 + 8);
          uint64_t v20 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
          if (v24) {
            uint64_t v20 = (uint64_t *)*v20;
          }
          int v21 = (void *)(a1 + 168);
          goto LABEL_276;
        case 6u:
          if (v8 != 50) {
            goto LABEL_354;
          }
          *(_DWORD *)(a1 + 40) |= 4u;
          uint64_t v25 = *(void *)(a1 + 8);
          uint64_t v20 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
          if (v25) {
            uint64_t v20 = (uint64_t *)*v20;
          }
          int v21 = (void *)(a1 + 176);
          goto LABEL_276;
        case 7u:
          if (v8 != 58) {
            goto LABEL_354;
          }
          *(_DWORD *)(a1 + 40) |= 0x20u;
          uint64_t v26 = *(void *)(a1 + 200);
          if (!v26)
          {
            std::string::size_type v27 = (void *)(*v165 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v165) {
              std::string::size_type v27 = (void *)*v27;
            }
            uint64_t v26 = sub_131BDDC((uint64_t)v27);
            *(void *)(a1 + 200) = v26;
            uint64_t v7 = *(char **)v167;
          }
          uint64_t result = (char *)sub_1277414(a3, v26, (unsigned __int8 *)v7);
          goto LABEL_363;
        case 8u:
          if (v8 != 64) {
            goto LABEL_354;
          }
          uint64_t v28 = v7 + 1;
          unint64_t v13 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_48;
          }
          int v29 = *v28;
          int v30 = v13 + (v29 << 7);
          unint64_t v13 = (v30 - 128);
          if (v29 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v7, (v30 - 128));
            *(void *)v167 = result;
            if (!result) {
              return result;
            }
            unint64_t v13 = v148;
          }
          else
          {
            uint64_t v28 = v7 + 2;
LABEL_48:
            *(void *)v167 = v28;
          }
          if (v13 <= 5)
          {
            *(_DWORD *)(a1 + 40) |= 0x800000u;
            *(_DWORD *)(a1 + 340) = v13;
            goto LABEL_364;
          }
          if (*v165) {
            v163 = (std::string *)((*v165 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v163 = (std::string *)sub_188DBD8(v165);
          }
          int v164 = 8;
          goto LABEL_378;
        case 9u:
          if (v8 != 74) {
            goto LABEL_354;
          }
          *(_DWORD *)(a1 + 40) |= 0x40u;
          uint64_t v31 = *(void **)(a1 + 208);
          if (!v31)
          {
            int v32 = (void *)(*v165 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v165) {
              int v32 = (void *)*v32;
            }
            uint64_t v31 = sub_129DD40((uint64_t)v32);
            *(void *)(a1 + 208) = v31;
            uint64_t v7 = *(char **)v167;
          }
          uint64_t result = sub_1796F44(a3, (uint64_t)v31, (unsigned __int8 *)v7);
          goto LABEL_363;
        case 0xAu:
          if (v8 != 82) {
            goto LABEL_354;
          }
          *(_DWORD *)(a1 + 40) |= 0x80u;
          uint64_t v33 = *(void *)(a1 + 216);
          if (!v33)
          {
            int v34 = (void *)(*v165 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v165) {
              int v34 = (void *)*v34;
            }
            uint64_t v33 = sub_129DE34((uint64_t)v34);
            *(void *)(a1 + 216) = v33;
            uint64_t v7 = *(char **)v167;
          }
          uint64_t result = sub_1796FD4(a3, v33, (unsigned __int8 *)v7);
          goto LABEL_363;
        case 0xBu:
          if (v8 != 90) {
            goto LABEL_354;
          }
          *(_DWORD *)(a1 + 40) |= 0x100u;
          uint64_t v35 = *(void *)(a1 + 224);
          if (!v35)
          {
            uint64_t v36 = (void *)(*v165 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v165) {
              uint64_t v36 = (void *)*v36;
            }
            uint64_t v35 = sub_18303E4((uint64_t)v36);
            *(void *)(a1 + 224) = v35;
            uint64_t v7 = *(char **)v167;
          }
          uint64_t result = (char *)sub_1797064(a3, v35, (unsigned __int8 *)v7);
          goto LABEL_363;
        case 0xCu:
          if (v8 != 98) {
            goto LABEL_354;
          }
          *(_DWORD *)(a1 + 40) |= 0x200u;
          uint64_t v37 = *(void *)(a1 + 232);
          if (!v37)
          {
            v38 = (void *)(*v165 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v165) {
              v38 = (void *)*v38;
            }
            sub_129E0BC((uint64_t)v38);
            uint64_t v37 = v39;
            *(void *)(a1 + 232) = v39;
            uint64_t v7 = *(char **)v167;
          }
          uint64_t result = sub_14B20C0(a3, v37, (unsigned __int8 *)v7);
          goto LABEL_363;
        case 0xDu:
          if (v8 != 104) {
            goto LABEL_354;
          }
          *(_DWORD *)(a1 + 40) |= 0x1000000u;
          v40 = v7 + 1;
          uint64_t v41 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_79;
          }
          int v42 = *v40;
          uint64_t v41 = v41 + (v42 << 7) - 128;
          if (v42 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v7, v41);
            *(void *)v167 = result;
            *(unsigned char *)(a1 + 344) = v149 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            v40 = v7 + 2;
LABEL_79:
            *(void *)v167 = v40;
            *(unsigned char *)(a1 + 344) = v41 != 0;
          }
          goto LABEL_364;
        case 0xEu:
          if (v8 != 112) {
            goto LABEL_354;
          }
          *(_DWORD *)(a1 + 40) |= 0x2000000u;
          uint64_t v43 = v7 + 1;
          uint64_t v44 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_84;
          }
          int v45 = *v43;
          uint64_t v44 = v44 + (v45 << 7) - 128;
          if (v45 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v7, v44);
            *(void *)v167 = result;
            *(unsigned char *)(a1 + 345) = v150 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v43 = v7 + 2;
LABEL_84:
            *(void *)v167 = v43;
            *(unsigned char *)(a1 + 345) = v44 != 0;
          }
          goto LABEL_364;
        case 0xFu:
          if (v8 != 120) {
            goto LABEL_354;
          }
          *(_DWORD *)(a1 + 40) |= 0x4000000u;
          v46 = v7 + 1;
          uint64_t v47 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_89;
          }
          int v48 = *v46;
          uint64_t v47 = v47 + (v48 << 7) - 128;
          if (v48 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v7, v47);
            *(void *)v167 = result;
            *(unsigned char *)(a1 + 346) = v151 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            v46 = v7 + 2;
LABEL_89:
            *(void *)v167 = v46;
            *(unsigned char *)(a1 + 346) = v47 != 0;
          }
          goto LABEL_364;
        case 0x10u:
          if (v8 != 130) {
            goto LABEL_354;
          }
          *(_DWORD *)(a1 + 40) |= 0x400u;
          uint64_t v49 = *(void *)(a1 + 240);
          if (!v49)
          {
            v50 = (void *)(*v165 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v165) {
              v50 = (void *)*v50;
            }
            uint64_t v49 = sub_12BBB40((uint64_t)v50);
            *(void *)(a1 + 240) = v49;
            uint64_t v7 = *(char **)v167;
          }
          uint64_t result = (char *)sub_120AA94(a3, v49, (unsigned __int8 *)v7);
          goto LABEL_363;
        case 0x11u:
          if (v8 != 136) {
            goto LABEL_354;
          }
          *(_DWORD *)(a1 + 40) |= 0x8000000u;
          v51 = v7 + 1;
          uint64_t v52 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_100;
          }
          int v53 = *v51;
          uint64_t v52 = v52 + (v53 << 7) - 128;
          if (v53 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v7, v52);
            *(void *)v167 = result;
            *(unsigned char *)(a1 + 347) = v152 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            v51 = v7 + 2;
LABEL_100:
            *(void *)v167 = v51;
            *(unsigned char *)(a1 + 347) = v52 != 0;
          }
          goto LABEL_364;
        case 0x12u:
          if (v8 != 144) {
            goto LABEL_354;
          }
          *(_DWORD *)(a1 + 40) |= 0x80000000;
          v54 = v7 + 1;
          uint64_t v55 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_105;
          }
          int v56 = *v54;
          uint64_t v55 = v55 + (v56 << 7) - 128;
          if (v56 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v7, v55);
            *(void *)v167 = result;
            *(unsigned char *)(a1 + 360) = v153 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            v54 = v7 + 2;
LABEL_105:
            *(void *)v167 = v54;
            *(unsigned char *)(a1 + 360) = v55 != 0;
          }
          goto LABEL_364;
        case 0x13u:
          if (v8 != 152) {
            goto LABEL_354;
          }
          v57 = v7 + 1;
          unint64_t v13 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_110;
          }
          int v58 = *v57;
          int v59 = v13 + (v58 << 7);
          unint64_t v13 = (v59 - 128);
          if (v58 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v7, (v59 - 128));
            *(void *)v167 = result;
            if (!result) {
              return result;
            }
            unint64_t v13 = v154;
          }
          else
          {
            v57 = v7 + 2;
LABEL_110:
            *(void *)v167 = v57;
          }
          if (sub_119BBA8(v13))
          {
            *(_DWORD *)(a1 + 40) |= 0x10000000u;
            *(_DWORD *)(a1 + 348) = v13;
            goto LABEL_364;
          }
          if (*v165) {
            v163 = (std::string *)((*v165 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v163 = (std::string *)sub_188DBD8(v165);
          }
          int v164 = 19;
          goto LABEL_378;
        case 0x14u:
          if (v8 != 162) {
            goto LABEL_354;
          }
          *(_DWORD *)(a1 + 40) |= 0x800u;
          v60 = *(void **)(a1 + 248);
          if (!v60)
          {
            v61 = (void *)(*v165 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v165) {
              v61 = (void *)*v61;
            }
            v60 = sub_129E044((uint64_t)v61);
            *(void *)(a1 + 248) = v60;
            uint64_t v7 = *(char **)v167;
          }
          uint64_t result = sub_17970F4(a3, (uint64_t)v60, (unsigned __int8 *)v7);
          goto LABEL_363;
        case 0x15u:
          if (v8 == 168)
          {
            v62 = v7 - 2;
            while (1)
            {
              *(void *)v167 = v62 + 2;
              unint64_t v63 = v62[2];
              v64 = v62 + 3;
              if (v62[2] < 0)
              {
                int v65 = *v64;
                int v66 = v63 + (v65 << 7);
                unint64_t v63 = (v66 - 128);
                if (v65 < 0)
                {
                  uint64_t result = (char *)sub_188C138((uint64_t)(v62 + 2), (v66 - 128));
                  *(void *)v167 = result;
                  if (!result) {
                    return result;
                  }
                  unint64_t v63 = v69;
                  goto LABEL_125;
                }
                v64 = v62 + 4;
              }
              *(void *)v167 = v64;
LABEL_125:
              if (sub_129EB90(v63))
              {
                uint64_t v67 = *(unsigned int *)(a1 + 56);
                if (v67 == *(_DWORD *)(a1 + 60))
                {
                  int v68 = v67 + 1;
                  sub_188C80C((unsigned int *)(a1 + 56), v67 + 1);
                  *(_DWORD *)(*(void *)(a1 + 64) + 4 * v67) = v63;
                }
                else
                {
                  *(_DWORD *)(*(void *)(a1 + 64) + 4 * v67) = v63;
                  int v68 = v67 + 1;
                }
                *(_DWORD *)(a1 + 56) = v68;
              }
              else
              {
                if (*v165) {
                  v70 = (std::string *)((*v165 & 0xFFFFFFFFFFFFFFFCLL) + 8);
                }
                else {
                  v70 = (std::string *)sub_188DBD8(v165);
                }
                sub_188C020(21, v63, v70);
              }
              v62 = *(char **)v167;
              if (*(void *)a3 <= *(void *)v167 || **(_WORD **)v167 != 424) {
                goto LABEL_364;
              }
            }
          }
          if (v8 != 170) {
            goto LABEL_354;
          }
          *(void *)&long long v168 = a1 + 56;
          *((void *)&v168 + 1) = sub_129EB90;
          uint64_t v169 = a1 + 8;
          int v159 = 21;
          goto LABEL_353;
        case 0x16u:
          if (v8 != 178) {
            goto LABEL_354;
          }
          *(_DWORD *)(a1 + 40) |= 0x1000u;
          uint64_t v71 = *(void *)(a1 + 256);
          if (!v71)
          {
            v72 = (void *)(*v165 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v165) {
              v72 = (void *)*v72;
            }
            uint64_t v71 = sub_129E61C((uint64_t)v72);
            *(void *)(a1 + 256) = v71;
            uint64_t v7 = *(char **)v167;
          }
          uint64_t result = (char *)sub_1797184(a3, v71, (unsigned __int8 *)v7);
          goto LABEL_363;
        case 0x17u:
          if (v8 != 186) {
            goto LABEL_354;
          }
          *(_DWORD *)(a1 + 40) |= 0x2000u;
          uint64_t v73 = *(void *)(a1 + 264);
          if (!v73)
          {
            v74 = (void *)(*v165 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v165) {
              v74 = (void *)*v74;
            }
            sub_17888DC((uint64_t)v74);
            uint64_t v73 = v75;
            *(void *)(a1 + 264) = v75;
            uint64_t v7 = *(char **)v167;
          }
          uint64_t result = sub_1735748(a3, v73, (unsigned __int8 *)v7);
          goto LABEL_363;
        case 0x18u:
          if (v8 == 192)
          {
            v76 = v7 - 2;
            while (1)
            {
              *(void *)v167 = v76 + 2;
              unint64_t v77 = v76[2];
              v78 = v76 + 3;
              if (v76[2] < 0)
              {
                int v79 = *v78;
                int v80 = v77 + (v79 << 7);
                unint64_t v77 = (v80 - 128);
                if (v79 < 0)
                {
                  uint64_t result = (char *)sub_188C138((uint64_t)(v76 + 2), (v80 - 128));
                  *(void *)v167 = result;
                  if (!result) {
                    return result;
                  }
                  unint64_t v77 = v83;
                  goto LABEL_157;
                }
                v78 = v76 + 4;
              }
              *(void *)v167 = v78;
LABEL_157:
              if (sub_128EA10(v77))
              {
                uint64_t v81 = *(unsigned int *)(a1 + 72);
                if (v81 == *(_DWORD *)(a1 + 76))
                {
                  int v82 = v81 + 1;
                  sub_188C80C((unsigned int *)(a1 + 72), v81 + 1);
                  *(_DWORD *)(*(void *)(a1 + 80) + 4 * v81) = v77;
                }
                else
                {
                  *(_DWORD *)(*(void *)(a1 + 80) + 4 * v81) = v77;
                  int v82 = v81 + 1;
                }
                *(_DWORD *)(a1 + 72) = v82;
              }
              else
              {
                if (*v165) {
                  v84 = (std::string *)((*v165 & 0xFFFFFFFFFFFFFFFCLL) + 8);
                }
                else {
                  v84 = (std::string *)sub_188DBD8(v165);
                }
                sub_188C020(24, v77, v84);
              }
              v76 = *(char **)v167;
              if (*(void *)a3 <= *(void *)v167 || **(_WORD **)v167 != 448) {
                goto LABEL_364;
              }
            }
          }
          if (v8 != 194) {
            goto LABEL_354;
          }
          *(void *)&long long v168 = a1 + 72;
          *((void *)&v168 + 1) = sub_128EA10;
          uint64_t v169 = a1 + 8;
          int v159 = 24;
          goto LABEL_353;
        case 0x19u:
          if (v8 != 200) {
            goto LABEL_354;
          }
          *(_DWORD *)(a1 + 40) |= 0x20000000u;
          v85 = v7 + 1;
          int v86 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_175;
          }
          int v87 = *v85;
          int v86 = v86 + (v87 << 7) - 128;
          if (v87 < 0)
          {
            uint64_t result = (char *)sub_188C0D0((uint64_t)v7, v86);
            *(void *)v167 = result;
            *(_DWORD *)(a1 + 352) = v155;
            if (!result) {
              return result;
            }
          }
          else
          {
            v85 = v7 + 2;
LABEL_175:
            *(void *)v167 = v85;
            *(_DWORD *)(a1 + 352) = v86;
          }
          goto LABEL_364;
        case 0x1Au:
          if (v8 != 210) {
            goto LABEL_354;
          }
          *(_DWORD *)(a1 + 40) |= 0x4000u;
          uint64_t v88 = *(void *)(a1 + 272);
          if (!v88)
          {
            v89 = (void *)(*v165 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v165) {
              v89 = (void *)*v89;
            }
            uint64_t v88 = sub_12BCE18((uint64_t)v89);
            *(void *)(a1 + 272) = v88;
            uint64_t v7 = *(char **)v167;
          }
          uint64_t result = sub_12099E8(a3, v88, (unsigned __int8 *)v7);
          goto LABEL_363;
        case 0x1Bu:
          if (v8 == 216)
          {
            v90 = v7 - 2;
            while (1)
            {
              *(void *)v167 = v90 + 2;
              unint64_t v91 = v90[2];
              v92 = v90 + 3;
              if (v90[2] < 0)
              {
                int v93 = *v92;
                int v94 = v91 + (v93 << 7);
                unint64_t v91 = (v94 - 128);
                if (v93 < 0)
                {
                  uint64_t result = (char *)sub_188C138((uint64_t)(v90 + 2), (v94 - 128));
                  *(void *)v167 = result;
                  if (!result) {
                    return result;
                  }
                  unint64_t v91 = v97;
                  goto LABEL_188;
                }
                v92 = v90 + 4;
              }
              *(void *)v167 = v92;
LABEL_188:
              if (sub_129EBC0(v91))
              {
                uint64_t v95 = *(unsigned int *)(a1 + 88);
                if (v95 == *(_DWORD *)(a1 + 92))
                {
                  int v96 = v95 + 1;
                  sub_188C80C((unsigned int *)(a1 + 88), v95 + 1);
                  *(_DWORD *)(*(void *)(a1 + 96) + 4 * v95) = v91;
                }
                else
                {
                  *(_DWORD *)(*(void *)(a1 + 96) + 4 * v95) = v91;
                  int v96 = v95 + 1;
                }
                *(_DWORD *)(a1 + 88) = v96;
              }
              else
              {
                if (*v165) {
                  v98 = (std::string *)((*v165 & 0xFFFFFFFFFFFFFFFCLL) + 8);
                }
                else {
                  v98 = (std::string *)sub_188DBD8(v165);
                }
                sub_188C020(27, v91, v98);
              }
              v90 = *(char **)v167;
              if (*(void *)a3 <= *(void *)v167 || **(_WORD **)v167 != 472) {
                goto LABEL_364;
              }
            }
          }
          if (v8 != 218) {
            goto LABEL_354;
          }
          *(void *)&long long v168 = a1 + 88;
          *((void *)&v168 + 1) = sub_129EBC0;
          uint64_t v169 = a1 + 8;
          int v159 = 27;
          goto LABEL_353;
        case 0x1Cu:
          if (v8 != 224) {
            goto LABEL_354;
          }
          v99 = v7 + 1;
          unint64_t v13 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_206;
          }
          int v100 = *v99;
          int v101 = v13 + (v100 << 7);
          unint64_t v13 = (v101 - 128);
          if (v100 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v7, (v101 - 128));
            *(void *)v167 = result;
            if (!result) {
              return result;
            }
            unint64_t v13 = v156;
          }
          else
          {
            v99 = v7 + 2;
LABEL_206:
            *(void *)v167 = v99;
          }
          if (v13 > 0x23)
          {
            if (*v165) {
              v163 = (std::string *)((*v165 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              v163 = (std::string *)sub_188DBD8(v165);
            }
            int v164 = 28;
LABEL_378:
            sub_188C020(v164, v13, v163);
          }
          else
          {
            *(_DWORD *)(a1 + 40) |= 0x40000000u;
            *(_DWORD *)(a1 + 356) = v13;
          }
          goto LABEL_364;
        case 0x1Du:
          if (v8 != 234) {
            goto LABEL_354;
          }
          *(_DWORD *)(a1 + 40) |= 0x8000u;
          int v22 = *(void **)(a1 + 280);
          if (v22) {
            goto LABEL_215;
          }
          v102 = (void *)(*v165 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v165) {
            v102 = (void *)*v102;
          }
          int v22 = sub_18302C8((uint64_t)v102);
          *(void *)(a1 + 280) = v22;
LABEL_214:
          uint64_t v7 = *(char **)v167;
LABEL_215:
          uint64_t result = sub_120FE50(a3, (uint64_t)v22, (unsigned __int8 *)v7);
          goto LABEL_363;
        case 0x1Eu:
          if (v8 == 240)
          {
            v103 = v7 - 2;
            while (1)
            {
              *(void *)v167 = v103 + 2;
              unint64_t v104 = v103[2];
              v105 = v103 + 3;
              if (v103[2] < 0)
              {
                int v106 = *v105;
                int v107 = v104 + (v106 << 7);
                unint64_t v104 = (v107 - 128);
                if (v106 < 0)
                {
                  uint64_t result = (char *)sub_188C138((uint64_t)(v103 + 2), (v107 - 128));
                  *(void *)v167 = result;
                  if (!result) {
                    return result;
                  }
                  unint64_t v104 = v110;
                  goto LABEL_222;
                }
                v105 = v103 + 4;
              }
              *(void *)v167 = v105;
LABEL_222:
              if (v104 > 4)
              {
                if (*v165) {
                  v111 = (std::string *)((*v165 & 0xFFFFFFFFFFFFFFFCLL) + 8);
                }
                else {
                  v111 = (std::string *)sub_188DBD8(v165);
                }
                sub_188C020(30, v104, v111);
              }
              else
              {
                uint64_t v108 = *(unsigned int *)(a1 + 104);
                if (v108 == *(_DWORD *)(a1 + 108))
                {
                  int v109 = v108 + 1;
                  sub_188C80C((unsigned int *)(a1 + 104), v108 + 1);
                  *(_DWORD *)(*(void *)(a1 + 112) + 4 * v108) = v104;
                }
                else
                {
                  *(_DWORD *)(*(void *)(a1 + 112) + 4 * v108) = v104;
                  int v109 = v108 + 1;
                }
                *(_DWORD *)(a1 + 104) = v109;
              }
              v103 = *(char **)v167;
              if (*(void *)a3 <= *(void *)v167 || **(_WORD **)v167 != 496) {
                goto LABEL_364;
              }
            }
          }
          if (v8 != 242) {
            goto LABEL_354;
          }
          *(void *)&long long v168 = a1 + 104;
          *((void *)&v168 + 1) = sub_1797214;
          uint64_t v169 = a1 + 8;
          int v159 = 30;
          goto LABEL_353;
        case 0x1Fu:
          if (v8 == 248)
          {
            v112 = v7 - 2;
            while (1)
            {
              *(void *)v167 = v112 + 2;
              unint64_t v113 = v112[2];
              v114 = v112 + 3;
              if (v112[2] < 0)
              {
                int v115 = *v114;
                int v116 = v113 + (v115 << 7);
                unint64_t v113 = (v116 - 128);
                if (v115 < 0)
                {
                  uint64_t result = (char *)sub_188C138((uint64_t)(v112 + 2), (v116 - 128));
                  *(void *)v167 = result;
                  if (!result) {
                    return result;
                  }
                  unint64_t v113 = v119;
                  goto LABEL_242;
                }
                v114 = v112 + 4;
              }
              *(void *)v167 = v114;
LABEL_242:
              if (sub_129EBB4(v113))
              {
                uint64_t v117 = *(unsigned int *)(a1 + 120);
                if (v117 == *(_DWORD *)(a1 + 124))
                {
                  int v118 = v117 + 1;
                  sub_188C80C((unsigned int *)(a1 + 120), v117 + 1);
                  *(_DWORD *)(*(void *)(a1 + 128) + 4 * v117) = v113;
                }
                else
                {
                  *(_DWORD *)(*(void *)(a1 + 128) + 4 * v117) = v113;
                  int v118 = v117 + 1;
                }
                *(_DWORD *)(a1 + 120) = v118;
              }
              else
              {
                if (*v165) {
                  v120 = (std::string *)((*v165 & 0xFFFFFFFFFFFFFFFCLL) + 8);
                }
                else {
                  v120 = (std::string *)sub_188DBD8(v165);
                }
                sub_188C020(31, v113, v120);
              }
              v112 = *(char **)v167;
              if (*(void *)a3 <= *(void *)v167 || **(_WORD **)v167 != 504) {
                goto LABEL_364;
              }
            }
          }
          if (v8 == 250)
          {
            *(void *)&long long v168 = a1 + 120;
            *((void *)&v168 + 1) = sub_129EBB4;
            uint64_t v169 = a1 + 8;
            int v159 = 31;
LABEL_353:
            int v170 = v159;
            uint64_t result = sub_1112E88((uint64_t)a3, v7, &v168);
          }
          else
          {
LABEL_354:
            if (v8) {
              BOOL v160 = (v8 & 7) == 4;
            }
            else {
              BOOL v160 = 1;
            }
            if (v160)
            {
              if (!v7) {
                return 0;
              }
              a3[10].i32[0] = v8 - 1;
              return v7;
            }
            if (v8 - 800 > 0x31F)
            {
              if (*v165)
              {
                v161 = (std::string *)((*v165 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else
              {
                v161 = (std::string *)sub_188DBD8(v165);
                uint64_t v7 = *(char **)v167;
              }
              uint64_t result = (char *)sub_1885AC0(v8, v161, v7, a3);
            }
            else
            {
              uint64_t result = (char *)sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_2549900, v165, a3);
            }
          }
LABEL_363:
          *(void *)v167 = result;
          if (!result) {
            return result;
          }
LABEL_364:
          int v162 = sub_11947B8((uint64_t)a3, (char **)v167, a3[11].i32[1]);
          uint64_t result = *(char **)v167;
          if (v162) {
            return result;
          }
          break;
        case 0x20u:
          if ((_BYTE)v8) {
            goto LABEL_354;
          }
          *(_DWORD *)(a1 + 44) |= 1u;
          v121 = v7 + 1;
          uint64_t v122 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_260;
          }
          int v123 = *v121;
          uint64_t v122 = v122 + (v123 << 7) - 128;
          if (v123 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v7, v122);
            *(void *)v167 = result;
            *(unsigned char *)(a1 + 361) = v157 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            v121 = v7 + 2;
LABEL_260:
            *(void *)v167 = v121;
            *(unsigned char *)(a1 + 361) = v122 != 0;
          }
          goto LABEL_364;
        case 0x21u:
          if (v8 != 10) {
            goto LABEL_354;
          }
          *(_DWORD *)(a1 + 40) |= 0x10000u;
          v124 = *(void **)(a1 + 288);
          if (!v124)
          {
            v125 = (void *)(*v165 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v165) {
              v125 = (void *)*v125;
            }
            v124 = sub_12BBF44((uint64_t)v125);
            *(void *)(a1 + 288) = v124;
            uint64_t v7 = *(char **)v167;
          }
          uint64_t result = sub_1209958(a3, (uint64_t)v124, (unsigned __int8 *)v7);
          goto LABEL_363;
        case 0x22u:
          if (v8 != 16) {
            goto LABEL_354;
          }
          *(_DWORD *)(a1 + 44) |= 2u;
          v126 = v7 + 1;
          uint64_t v127 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_271;
          }
          int v128 = *v126;
          uint64_t v127 = v127 + (v128 << 7) - 128;
          if (v128 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v7, v127);
            *(void *)v167 = result;
            *(unsigned char *)(a1 + 362) = v158 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            v126 = v7 + 2;
LABEL_271:
            *(void *)v167 = v126;
            *(unsigned char *)(a1 + 362) = v127 != 0;
          }
          goto LABEL_364;
        case 0x23u:
          if (v8 != 26) {
            goto LABEL_354;
          }
          *(_DWORD *)(a1 + 40) |= 8u;
          uint64_t v129 = *(void *)(a1 + 8);
          uint64_t v20 = (uint64_t *)(v129 & 0xFFFFFFFFFFFFFFFCLL);
          if (v129) {
            uint64_t v20 = (uint64_t *)*v20;
          }
          int v21 = (void *)(a1 + 184);
LABEL_276:
          v130 = (std::string *)sub_1880F84(v21, v20);
          uint64_t result = (char *)sub_188C244(v130, *(char **)v167, (uint64_t)a3);
          goto LABEL_363;
        case 0x24u:
          if (v8 != 34) {
            goto LABEL_354;
          }
          uint64_t result = v7 - 2;
          while (1)
          {
            v131 = result + 2;
            *(void *)v167 = result + 2;
            v132 = *(_DWORD **)(a1 + 152);
            if (v132 && (uint64_t v133 = *(int *)(a1 + 144), (int)v133 < *v132))
            {
              *(_DWORD *)(a1 + 144) = v133 + 1;
              uint64_t v134 = *(void *)&v132[2 * v133 + 2];
            }
            else
            {
              uint64_t v135 = sub_12BCF44(*v166);
              uint64_t v134 = sub_188CDC8((uint64_t)v166, v135);
              v131 = *(char **)v167;
            }
            uint64_t result = sub_1797220(a3, v134, (unsigned __int8 *)v131);
            *(void *)v167 = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 674) {
              goto LABEL_364;
            }
          }
        case 0x25u:
          if (v8 != 42) {
            goto LABEL_354;
          }
          *(_DWORD *)(a1 + 40) |= 0x20000u;
          uint64_t v136 = *(void *)(a1 + 296);
          if (!v136)
          {
            v137 = (void *)(*v165 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v165) {
              v137 = (void *)*v137;
            }
            uint64_t v136 = sub_129E840((uint64_t)v137);
            *(void *)(a1 + 296) = v136;
            uint64_t v7 = *(char **)v167;
          }
          uint64_t result = sub_17972B0(a3, v136, (unsigned __int8 *)v7);
          goto LABEL_363;
        case 0x26u:
          if (v8 != 50) {
            goto LABEL_354;
          }
          *(_DWORD *)(a1 + 40) |= 0x40000u;
          uint64_t v138 = *(void *)(a1 + 304);
          if (!v138)
          {
            v139 = (void *)(*v165 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v165) {
              v139 = (void *)*v139;
            }
            uint64_t v138 = sub_131B2B4((uint64_t)v139);
            *(void *)(a1 + 304) = v138;
            uint64_t v7 = *(char **)v167;
          }
          uint64_t result = sub_1797340(a3, v138, (unsigned __int8 *)v7);
          goto LABEL_363;
        case 0x27u:
          if (v8 != 58) {
            goto LABEL_354;
          }
          *(_DWORD *)(a1 + 40) |= 0x80000u;
          v140 = *(void **)(a1 + 312);
          if (!v140)
          {
            v141 = (void *)(*v165 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v165) {
              v141 = (void *)*v141;
            }
            v140 = sub_129E89C((uint64_t)v141);
            *(void *)(a1 + 312) = v140;
            uint64_t v7 = *(char **)v167;
          }
          uint64_t result = (char *)sub_17973D0(a3, (uint64_t)v140, (unsigned __int8 *)v7);
          goto LABEL_363;
        case 0x28u:
          if (v8 != 66) {
            goto LABEL_354;
          }
          *(_DWORD *)(a1 + 40) |= 0x100000u;
          uint64_t v142 = *(void *)(a1 + 320);
          if (!v142)
          {
            v143 = (void *)(*v165 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v165) {
              v143 = (void *)*v143;
            }
            uint64_t v142 = sub_129EACC((uint64_t)v143);
            *(void *)(a1 + 320) = v142;
            uint64_t v7 = *(char **)v167;
          }
          uint64_t result = sub_1797460(a3, v142, (unsigned __int8 *)v7);
          goto LABEL_363;
        case 0x29u:
          if (v8 != 74) {
            goto LABEL_354;
          }
          *(_DWORD *)(a1 + 40) |= 0x200000u;
          uint64_t v144 = *(void *)(a1 + 328);
          if (!v144)
          {
            v145 = (void *)(*v165 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v165) {
              v145 = (void *)*v145;
            }
            uint64_t v144 = sub_183054C((uint64_t)v145);
            *(void *)(a1 + 328) = v144;
            uint64_t v7 = *(char **)v167;
          }
          uint64_t result = (char *)sub_17974F0(a3, v144, (unsigned __int8 *)v7);
          goto LABEL_363;
        default:
          goto LABEL_354;
      }
    }
  }
  return result;
}

char *sub_1796F44(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_128EB9C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1796FD4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_128F7A8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1797064(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1793310(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17970F4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1291D90(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1797184(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1298DB4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

BOOL sub_1797214(unsigned int a1)
{
  return a1 < 5;
}

char *sub_1797220(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12B8534(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17972B0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_129ACCC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1797340(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_130C9EC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_17973D0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_129B534(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1797460(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_129D834(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_17974F0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1799C10(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1797580(uint64_t a1, char *a2, unint64_t *a3)
{
  int v4 = a2;
  if ((*(unsigned char *)(a1 + 42) & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v6 = *(int *)(a1 + 336);
    *int v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((*(unsigned char *)(a1 + 44) & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v9 = *(_DWORD *)(a1 + 364);
    *int v4 = 16;
    v4[1] = v9;
    if (v9 > 0x7F)
    {
      v4[1] = v9 | 0x80;
      unsigned int v10 = v9 >> 7;
      v4[2] = v9 >> 7;
      v4 += 3;
      if (v9 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v11 = v10 >> 14;
          v10 >>= 7;
          *v4++ = v10;
        }
        while (v11);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v12 = *(_DWORD *)(a1 + 40);
  if (v12)
  {
    int v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 160) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v12 & 0x10) == 0)
    {
LABEL_17:
      if ((v12 & 2) == 0) {
        goto LABEL_18;
      }
      goto LABEL_29;
    }
  }
  else if ((v12 & 0x10) == 0)
  {
    goto LABEL_17;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 192);
  *int v4 = 34;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    int v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    int v15 = v4 + 2;
  }
  int v4 = sub_1792424(v13, (unint64_t)v15, a3);
  if ((v12 & 2) == 0)
  {
LABEL_18:
    if ((v12 & 4) == 0) {
      goto LABEL_19;
    }
    goto LABEL_30;
  }
LABEL_29:
  int v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v12 & 4) == 0)
  {
LABEL_19:
    if ((v12 & 0x20) == 0) {
      goto LABEL_20;
    }
    goto LABEL_31;
  }
LABEL_30:
  int v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 176) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v12 & 0x20) == 0)
  {
LABEL_20:
    if ((v12 & 0x800000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_37;
  }
LABEL_31:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 200);
  *int v4 = 58;
  unsigned int v17 = *(_DWORD *)(v16 + 44);
  v4[1] = v17;
  if (v17 > 0x7F) {
    int v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    int v18 = v4 + 2;
  }
  int v4 = sub_1319D58(v16, v18, a3);
  if ((v12 & 0x800000) != 0)
  {
LABEL_37:
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(int *)(a1 + 340);
    *int v4 = 64;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_43:
  if ((v12 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v22 = *(void *)(a1 + 208);
    *int v4 = 74;
    unsigned int v23 = *(_DWORD *)(v22 + 20);
    v4[1] = v23;
    if (v23 > 0x7F) {
      uint64_t v24 = sub_188A9CC(v23, v4 + 1);
    }
    else {
      uint64_t v24 = v4 + 2;
    }
    int v4 = sub_128EDF4(v22, (unint64_t)v24, a3);
    if ((v12 & 0x80) == 0)
    {
LABEL_45:
      if ((v12 & 0x100) == 0) {
        goto LABEL_46;
      }
      goto LABEL_67;
    }
  }
  else if ((v12 & 0x80) == 0)
  {
    goto LABEL_45;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v25 = *(void *)(a1 + 216);
  *int v4 = 82;
  unsigned int v26 = *(_DWORD *)(v25 + 20);
  v4[1] = v26;
  if (v26 > 0x7F) {
    std::string::size_type v27 = sub_188A9CC(v26, v4 + 1);
  }
  else {
    std::string::size_type v27 = v4 + 2;
  }
  int v4 = sub_128FA48(v25, (unint64_t)v27, a3);
  if ((v12 & 0x100) == 0)
  {
LABEL_46:
    if ((v12 & 0x200) == 0) {
      goto LABEL_47;
    }
    goto LABEL_73;
  }
LABEL_67:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v28 = *(void *)(a1 + 224);
  *int v4 = 90;
  unsigned int v29 = *(_DWORD *)(v28 + 20);
  v4[1] = v29;
  if (v29 > 0x7F) {
    int v30 = sub_188A9CC(v29, v4 + 1);
  }
  else {
    int v30 = v4 + 2;
  }
  int v4 = sub_1793774(v28, v30, a3);
  if ((v12 & 0x200) == 0)
  {
LABEL_47:
    if ((v12 & 0x1000000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_79;
  }
LABEL_73:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v31 = *(void *)(a1 + 232);
  *int v4 = 98;
  unsigned int v32 = *(_DWORD *)(v31 + 20);
  v4[1] = v32;
  if (v32 > 0x7F) {
    uint64_t v33 = sub_188A9CC(v32, v4 + 1);
  }
  else {
    uint64_t v33 = v4 + 2;
  }
  int v4 = sub_129318C(v31, (unint64_t)v33, a3);
  if ((v12 & 0x1000000) == 0)
  {
LABEL_48:
    if ((v12 & 0x2000000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_82;
  }
LABEL_79:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v34 = *(unsigned char *)(a1 + 344);
  *int v4 = 104;
  v4[1] = v34;
  v4 += 2;
  if ((v12 & 0x2000000) == 0)
  {
LABEL_49:
    if ((v12 & 0x4000000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_85;
  }
LABEL_82:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v35 = *(unsigned char *)(a1 + 345);
  *int v4 = 112;
  v4[1] = v35;
  v4 += 2;
  if ((v12 & 0x4000000) == 0)
  {
LABEL_50:
    if ((v12 & 0x400) == 0) {
      goto LABEL_51;
    }
    goto LABEL_88;
  }
LABEL_85:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v36 = *(unsigned char *)(a1 + 346);
  *int v4 = 120;
  v4[1] = v36;
  v4 += 2;
  if ((v12 & 0x400) == 0)
  {
LABEL_51:
    if ((v12 & 0x8000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_94;
  }
LABEL_88:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v37 = *(void *)(a1 + 240);
  *(_WORD *)int v4 = 386;
  unsigned int v38 = *(_DWORD *)(v37 + 20);
  v4[2] = v38;
  if (v38 > 0x7F) {
    uint64_t v39 = sub_188A9CC(v38, v4 + 2);
  }
  else {
    uint64_t v39 = v4 + 3;
  }
  int v4 = sub_12A12FC(v37, v39, a3);
  if ((v12 & 0x8000000) == 0)
  {
LABEL_52:
    if ((v12 & 0x80000000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_97;
  }
LABEL_94:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v40 = *(unsigned char *)(a1 + 347);
  *(_WORD *)int v4 = 392;
  v4[2] = v40;
  v4 += 3;
  if ((v12 & 0x80000000) == 0)
  {
LABEL_53:
    if ((v12 & 0x10000000) == 0) {
      goto LABEL_106;
    }
    goto LABEL_100;
  }
LABEL_97:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v41 = *(unsigned char *)(a1 + 360);
  *(_WORD *)int v4 = 400;
  v4[2] = v41;
  v4 += 3;
  if ((v12 & 0x10000000) != 0)
  {
LABEL_100:
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v42 = *(int *)(a1 + 348);
    *(_WORD *)int v4 = 408;
    v4[2] = v42;
    if (v42 > 0x7F)
    {
      v4[2] = v42 | 0x80;
      unint64_t v43 = v42 >> 7;
      v4[3] = v42 >> 7;
      v4 += 4;
      if (v42 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v44 = v43 >> 14;
          v43 >>= 7;
          *v4++ = v43;
        }
        while (v44);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_106:
  if ((v12 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v45 = *(void *)(a1 + 248);
    *(_WORD *)int v4 = 418;
    unsigned int v46 = *(_DWORD *)(v45 + 20);
    v4[2] = v46;
    if (v46 > 0x7F) {
      uint64_t v47 = sub_188A9CC(v46, v4 + 2);
    }
    else {
      uint64_t v47 = v4 + 3;
    }
    int v4 = sub_1291EE8(v45, (unint64_t)v47, a3);
  }
  uint64_t v48 = *(unsigned int *)(a1 + 56);
  if ((int)v48 >= 1)
  {
    for (uint64_t i = 0; i != v48; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v50 = *(int *)(*(void *)(a1 + 64) + 4 * i);
      *(_WORD *)int v4 = 424;
      v4[2] = v50;
      if (v50 > 0x7F)
      {
        v4[2] = v50 | 0x80;
        unint64_t v51 = v50 >> 7;
        v4[3] = v50 >> 7;
        v4 += 4;
        if (v50 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v52 = v51 >> 14;
            v51 >>= 7;
            *v4++ = v51;
          }
          while (v52);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v12 & 0x1000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v53 = *(void *)(a1 + 256);
    *(_WORD *)int v4 = 434;
    unsigned int v54 = *(_DWORD *)(v53 + 80);
    v4[2] = v54;
    if (v54 > 0x7F) {
      uint64_t v55 = sub_188A9CC(v54, v4 + 2);
    }
    else {
      uint64_t v55 = v4 + 3;
    }
    int v4 = sub_12991CC(v53, v55, a3);
  }
  if ((v12 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v56 = *(void *)(a1 + 264);
    *(_WORD *)int v4 = 442;
    unsigned int v57 = *(_DWORD *)(v56 + 20);
    v4[2] = v57;
    if (v57 > 0x7F) {
      int v58 = sub_188A9CC(v57, v4 + 2);
    }
    else {
      int v58 = v4 + 3;
    }
    int v4 = sub_16EEE18(v56, v58, a3);
  }
  uint64_t v59 = *(unsigned int *)(a1 + 72);
  if ((int)v59 >= 1)
  {
    for (uint64_t j = 0; j != v59; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v61 = *(int *)(*(void *)(a1 + 80) + 4 * j);
      *(_WORD *)int v4 = 448;
      v4[2] = v61;
      if (v61 > 0x7F)
      {
        v4[2] = v61 | 0x80;
        unint64_t v62 = v61 >> 7;
        v4[3] = v61 >> 7;
        v4 += 4;
        if (v61 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v63 = v62 >> 14;
            v62 >>= 7;
            *v4++ = v62;
          }
          while (v63);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v12 & 0x20000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v64 = *(_DWORD *)(a1 + 352);
    *(_WORD *)int v4 = 456;
    v4[2] = v64;
    if (v64 > 0x7F)
    {
      v4[2] = v64 | 0x80;
      unsigned int v65 = v64 >> 7;
      v4[3] = v64 >> 7;
      v4 += 4;
      if (v64 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v66 = v65 >> 14;
          v65 >>= 7;
          *v4++ = v65;
        }
        while (v66);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v12 & 0x4000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v67 = *(void *)(a1 + 272);
    *(_WORD *)int v4 = 466;
    unsigned int v68 = *(_DWORD *)(v67 + 20);
    v4[2] = v68;
    if (v68 > 0x7F) {
      unint64_t v69 = sub_188A9CC(v68, v4 + 2);
    }
    else {
      unint64_t v69 = v4 + 3;
    }
    int v4 = sub_12B7A54(v67, v69, a3);
  }
  uint64_t v70 = *(unsigned int *)(a1 + 88);
  if ((int)v70 >= 1)
  {
    for (uint64_t k = 0; k != v70; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v72 = *(int *)(*(void *)(a1 + 96) + 4 * k);
      *(_WORD *)int v4 = 472;
      v4[2] = v72;
      if (v72 > 0x7F)
      {
        v4[2] = v72 | 0x80;
        unint64_t v73 = v72 >> 7;
        v4[3] = v72 >> 7;
        v4 += 4;
        if (v72 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v74 = v73 >> 14;
            v73 >>= 7;
            *v4++ = v73;
          }
          while (v74);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v12 & 0x40000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v75 = *(int *)(a1 + 356);
    *(_WORD *)int v4 = 480;
    v4[2] = v75;
    if (v75 > 0x7F)
    {
      v4[2] = v75 | 0x80;
      unint64_t v76 = v75 >> 7;
      v4[3] = v75 >> 7;
      v4 += 4;
      if (v75 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v77 = v76 >> 14;
          v76 >>= 7;
          *v4++ = v76;
        }
        while (v77);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v12 & 0x8000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v78 = *(void *)(a1 + 280);
    *(_WORD *)int v4 = 490;
    unsigned int v79 = *(_DWORD *)(v78 + 20);
    v4[2] = v79;
    if (v79 > 0x7F) {
      int v80 = sub_188A9CC(v79, v4 + 2);
    }
    else {
      int v80 = v4 + 3;
    }
    int v4 = sub_1792424(v78, (unint64_t)v80, a3);
  }
  uint64_t v81 = *(unsigned int *)(a1 + 104);
  if ((int)v81 >= 1)
  {
    for (uint64_t m = 0; m != v81; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v83 = *(int *)(*(void *)(a1 + 112) + 4 * m);
      *(_WORD *)int v4 = 496;
      v4[2] = v83;
      if (v83 > 0x7F)
      {
        v4[2] = v83 | 0x80;
        unint64_t v84 = v83 >> 7;
        v4[3] = v83 >> 7;
        v4 += 4;
        if (v83 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v85 = v84 >> 14;
            v84 >>= 7;
            *v4++ = v84;
          }
          while (v85);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  uint64_t v86 = *(unsigned int *)(a1 + 120);
  if ((int)v86 >= 1)
  {
    for (uint64_t n = 0; n != v86; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v88 = *(int *)(*(void *)(a1 + 128) + 4 * n);
      *(_WORD *)int v4 = 504;
      v4[2] = v88;
      if (v88 > 0x7F)
      {
        v4[2] = v88 | 0x80;
        unint64_t v89 = v88 >> 7;
        v4[3] = v88 >> 7;
        v4 += 4;
        if (v88 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v90 = v89 >> 14;
            v89 >>= 7;
            *v4++ = v89;
          }
          while (v90);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if (*(unsigned char *)(a1 + 44))
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v91 = *(unsigned char *)(a1 + 361);
    *(_WORD *)int v4 = 640;
    v4[2] = v91;
    v4 += 3;
  }
  if (*(unsigned char *)(a1 + 42))
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v92 = *(void *)(a1 + 288);
    *(_WORD *)int v4 = 650;
    unsigned int v93 = *(_DWORD *)(v92 + 20);
    v4[2] = v93;
    if (v93 > 0x7F) {
      int v94 = sub_188A9CC(v93, v4 + 2);
    }
    else {
      int v94 = v4 + 3;
    }
    int v4 = sub_12A4C18(v92, (unint64_t)v94, a3);
  }
  if ((*(unsigned char *)(a1 + 44) & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v95 = *(unsigned char *)(a1 + 362);
    *(_WORD *)int v4 = 656;
    v4[2] = v95;
    v4 += 3;
  }
  int v96 = *(_DWORD *)(a1 + 40);
  if ((v96 & 8) != 0) {
    int v4 = sub_117A0AC(a3, 35, (const void **)(*(void *)(a1 + 184) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v97 = *(_DWORD *)(a1 + 144);
  if (v97)
  {
    for (iuint64_t i = 0; ii != v97; ++ii)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v99 = *(void *)(*(void *)(a1 + 152) + 8 * ii + 8);
      *(_WORD *)int v4 = 674;
      unsigned int v100 = *(_DWORD *)(v99 + 20);
      v4[2] = v100;
      if (v100 > 0x7F) {
        int v101 = sub_188A9CC(v100, v4 + 2);
      }
      else {
        int v101 = v4 + 3;
      }
      int v4 = sub_12B86DC(v99, (unint64_t)v101, a3);
    }
  }
  if ((v96 & 0x20000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v102 = *(void *)(a1 + 296);
    *(_WORD *)int v4 = 682;
    unsigned int v103 = *(_DWORD *)(v102 + 40);
    v4[2] = v103;
    if (v103 > 0x7F) {
      unint64_t v104 = sub_188A9CC(v103, v4 + 2);
    }
    else {
      unint64_t v104 = v4 + 3;
    }
    int v4 = sub_129AE14(v102, v104, a3);
    if ((v96 & 0x40000) == 0)
    {
LABEL_227:
      if ((v96 & 0x80000) == 0) {
        goto LABEL_228;
      }
      goto LABEL_243;
    }
  }
  else if ((v96 & 0x40000) == 0)
  {
    goto LABEL_227;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v105 = *(void *)(a1 + 304);
  *(_WORD *)int v4 = 690;
  unsigned int v106 = *(_DWORD *)(v105 + 40);
  v4[2] = v106;
  if (v106 > 0x7F) {
    int v107 = sub_188A9CC(v106, v4 + 2);
  }
  else {
    int v107 = v4 + 3;
  }
  int v4 = sub_130CB34(v105, v107, a3);
  if ((v96 & 0x80000) == 0)
  {
LABEL_228:
    if ((v96 & 0x100000) == 0) {
      goto LABEL_229;
    }
    goto LABEL_249;
  }
LABEL_243:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v108 = *(void *)(a1 + 312);
  *(_WORD *)int v4 = 698;
  unsigned int v109 = *(_DWORD *)(v108 + 20);
  v4[2] = v109;
  if (v109 > 0x7F) {
    unint64_t v110 = sub_188A9CC(v109, v4 + 2);
  }
  else {
    unint64_t v110 = v4 + 3;
  }
  int v4 = sub_129B924(v108, v110, a3);
  if ((v96 & 0x100000) == 0)
  {
LABEL_229:
    if ((v96 & 0x200000) == 0) {
      goto LABEL_261;
    }
    goto LABEL_255;
  }
LABEL_249:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v111 = *(void *)(a1 + 320);
  *(_WORD *)int v4 = 706;
  unsigned int v112 = *(_DWORD *)(v111 + 40);
  v4[2] = v112;
  if (v112 > 0x7F) {
    unint64_t v113 = sub_188A9CC(v112, v4 + 2);
  }
  else {
    unint64_t v113 = v4 + 3;
  }
  int v4 = sub_129DA64(v111, v113, a3);
  if ((v96 & 0x200000) != 0)
  {
LABEL_255:
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v114 = *(void *)(a1 + 328);
    *(_WORD *)int v4 = 714;
    unsigned int v115 = *(_DWORD *)(v114 + 20);
    v4[2] = v115;
    if (v115 > 0x7F) {
      int v116 = sub_188A9CC(v115, v4 + 2);
    }
    else {
      int v116 = v4 + 3;
    }
    int v4 = sub_1799DFC(v114, (unint64_t)v116, a3);
  }
LABEL_261:
  if (*(_WORD *)(a1 + 26)) {
    int v4 = sub_1886844(a1 + 16, 100, 200, v4, a3);
  }
  uint64_t v117 = *(void *)(a1 + 8);
  if ((v117 & 1) == 0) {
    return v4;
  }
  unint64_t v119 = v117 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v119 + 31) < 0)
  {
    v120 = *(void **)(v119 + 8);
    uint64_t v121 = *(void *)(v119 + 16);
  }
  else
  {
    v120 = (void *)(v119 + 8);
    LODWORD(v121) = *(unsigned __int8 *)(v119 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v121)
  {
    uint64_t v122 = (int)v121;
    memcpy(v4, v120, (int)v121);
    v4 += v122;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v120, v121, v4);
}

uint64_t sub_1798660(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if (v3)
  {
    uint64_t v4 = 0;
    int v5 = 0;
    do
    {
      int v6 = *(_DWORD *)(*(void *)(a1 + 64) + 4 * v5);
      if (v6 < 0) {
        uint64_t v7 = 10;
      }
      else {
        uint64_t v7 = (9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6;
      }
      v4 += v7;
      ++v5;
    }
    while (v3 != v5);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 72);
  if (v8)
  {
    int v9 = 0;
    uint64_t v10 = 0;
    do
    {
      int v11 = *(_DWORD *)(*(void *)(a1 + 80) + 4 * v9);
      if (v11 < 0) {
        uint64_t v12 = 10;
      }
      else {
        uint64_t v12 = (9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6;
      }
      v10 += v12;
      ++v9;
    }
    while (v8 != v9);
  }
  else
  {
    uint64_t v10 = 0;
  }
  uint64_t v13 = *(unsigned int *)(a1 + 88);
  if (v13)
  {
    int v14 = 0;
    uint64_t v15 = 0;
    do
    {
      int v16 = *(_DWORD *)(*(void *)(a1 + 96) + 4 * v14);
      if (v16 < 0) {
        uint64_t v17 = 10;
      }
      else {
        uint64_t v17 = (9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6;
      }
      v15 += v17;
      ++v14;
    }
    while (v13 != v14);
  }
  else
  {
    uint64_t v15 = 0;
  }
  uint64_t v18 = *(unsigned int *)(a1 + 104);
  if (v18)
  {
    int v19 = 0;
    uint64_t v20 = 0;
    do
    {
      int v21 = *(_DWORD *)(*(void *)(a1 + 112) + 4 * v19);
      if (v21 < 0) {
        uint64_t v22 = 10;
      }
      else {
        uint64_t v22 = (9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6;
      }
      v20 += v22;
      ++v19;
    }
    while (v18 != v19);
  }
  else
  {
    uint64_t v20 = 0;
  }
  uint64_t v23 = *(unsigned int *)(a1 + 120);
  if (v23)
  {
    int v24 = 0;
    uint64_t v25 = 0;
    do
    {
      int v26 = *(_DWORD *)(*(void *)(a1 + 128) + 4 * v24);
      if (v26 < 0) {
        uint64_t v27 = 10;
      }
      else {
        uint64_t v27 = (9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6;
      }
      v25 += v27;
      ++v24;
    }
    while (v23 != v24);
  }
  else
  {
    uint64_t v25 = 0;
  }
  uint64_t v28 = *(int *)(a1 + 144);
  uint64_t v29 = v4 + v2 + v10 + v15 + v20 + v25 + 2 * (v8 + v3 + v13 + v18 + v23 + v28);
  uint64_t v30 = *(void *)(a1 + 152);
  if (v30) {
    uint64_t v31 = (uint64_t *)(v30 + 8);
  }
  else {
    uint64_t v31 = 0;
  }
  if (v28)
  {
    uint64_t v32 = 8 * v28;
    do
    {
      uint64_t v33 = *v31++;
      uint64_t v34 = sub_12B8804(v33);
      v29 += v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6);
      v32 -= 8;
    }
    while (v32);
  }
  int v35 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v35) {
    goto LABEL_57;
  }
  if (v35)
  {
    unint64_t v49 = *(void *)(a1 + 160) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v50 = *(unsigned __int8 *)(v49 + 23);
    uint64_t v51 = *(void *)(v49 + 8);
    if ((v50 & 0x80u) == 0) {
      uint64_t v51 = v50;
    }
    v29 += v51 + ((9 * (__clz(v51 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v35 & 2) == 0)
    {
LABEL_50:
      if ((v35 & 4) == 0) {
        goto LABEL_51;
      }
      goto LABEL_115;
    }
  }
  else if ((v35 & 2) == 0)
  {
    goto LABEL_50;
  }
  unint64_t v52 = *(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v53 = *(unsigned __int8 *)(v52 + 23);
  uint64_t v54 = *(void *)(v52 + 8);
  if ((v53 & 0x80u) == 0) {
    uint64_t v54 = v53;
  }
  v29 += v54 + ((9 * (__clz(v54 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v35 & 4) == 0)
  {
LABEL_51:
    if ((v35 & 8) == 0) {
      goto LABEL_52;
    }
    goto LABEL_118;
  }
LABEL_115:
  unint64_t v55 = *(void *)(a1 + 176) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v56 = *(unsigned __int8 *)(v55 + 23);
  uint64_t v57 = *(void *)(v55 + 8);
  if ((v56 & 0x80u) == 0) {
    uint64_t v57 = v56;
  }
  v29 += v57 + ((9 * (__clz(v57 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v35 & 8) == 0)
  {
LABEL_52:
    if ((v35 & 0x10) == 0) {
      goto LABEL_53;
    }
    goto LABEL_121;
  }
LABEL_118:
  unint64_t v58 = *(void *)(a1 + 184) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v59 = *(unsigned __int8 *)(v58 + 23);
  uint64_t v60 = *(void *)(v58 + 8);
  if ((v59 & 0x80u) == 0) {
    uint64_t v60 = v59;
  }
  v29 += v60 + ((9 * (__clz(v60 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v35 & 0x10) == 0)
  {
LABEL_53:
    if ((v35 & 0x20) == 0) {
      goto LABEL_54;
    }
LABEL_122:
    uint64_t v62 = sub_131A6A8(*(void *)(a1 + 200));
    v29 += v62 + ((9 * (__clz(v62 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v35 & 0x40) == 0)
    {
LABEL_55:
      if ((v35 & 0x80) == 0) {
        goto LABEL_57;
      }
      goto LABEL_56;
    }
    goto LABEL_123;
  }
LABEL_121:
  uint64_t v61 = sub_1792638(*(void *)(a1 + 192));
  v29 += v61 + ((9 * (__clz(v61 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v35 & 0x20) != 0) {
    goto LABEL_122;
  }
LABEL_54:
  if ((v35 & 0x40) == 0) {
    goto LABEL_55;
  }
LABEL_123:
  uint64_t v63 = sub_128EF98(*(void *)(a1 + 208));
  v29 += v63 + ((9 * (__clz(v63 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v35 & 0x80) != 0)
  {
LABEL_56:
    uint64_t v36 = sub_128FBD4(*(void *)(a1 + 216));
    v29 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_57:
  if ((v35 & 0xFF00) == 0) {
    goto LABEL_67;
  }
  if ((v35 & 0x100) != 0)
  {
    uint64_t v64 = sub_17939B8(*(void *)(a1 + 224));
    v29 += v64 + ((9 * (__clz(v64 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v35 & 0x200) == 0)
    {
LABEL_60:
      if ((v35 & 0x400) == 0) {
        goto LABEL_61;
      }
      goto LABEL_127;
    }
  }
  else if ((v35 & 0x200) == 0)
  {
    goto LABEL_60;
  }
  uint64_t v65 = sub_1293614(*(void *)(a1 + 232));
  v29 += v65 + ((9 * (__clz(v65 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v35 & 0x400) == 0)
  {
LABEL_61:
    if ((v35 & 0x800) == 0) {
      goto LABEL_62;
    }
    goto LABEL_128;
  }
LABEL_127:
  uint64_t v66 = sub_12A1464(*(void *)(a1 + 240));
  v29 += v66 + ((9 * (__clz(v66 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v35 & 0x800) == 0)
  {
LABEL_62:
    if ((v35 & 0x1000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_129;
  }
LABEL_128:
  uint64_t v67 = sub_1291FF8(*(void *)(a1 + 248));
  v29 += v67 + ((9 * (__clz(v67 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v35 & 0x1000) == 0)
  {
LABEL_63:
    if ((v35 & 0x2000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_130;
  }
LABEL_129:
  uint64_t v68 = sub_1299454(*(void *)(a1 + 256));
  v29 += v68 + ((9 * (__clz(v68 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v35 & 0x2000) == 0)
  {
LABEL_64:
    if ((v35 & 0x4000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_131;
  }
LABEL_130:
  uint64_t v69 = sub_16EF228(*(void *)(a1 + 264));
  v29 += v69 + ((9 * (__clz(v69 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v35 & 0x4000) == 0)
  {
LABEL_65:
    if ((v35 & 0x8000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_66;
  }
LABEL_131:
  uint64_t v70 = sub_12B7D00(*(void *)(a1 + 272));
  v29 += v70 + ((9 * (__clz(v70 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v35 & 0x8000) != 0)
  {
LABEL_66:
    uint64_t v37 = sub_1792638(*(void *)(a1 + 280));
    v29 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_67:
  if ((v35 & 0xFF0000) == 0) {
    goto LABEL_80;
  }
  if ((v35 & 0x10000) != 0)
  {
    uint64_t v71 = sub_12A4ED4(*(void *)(a1 + 288));
    v29 += v71 + ((9 * (__clz(v71 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v35 & 0x20000) == 0)
    {
LABEL_70:
      if ((v35 & 0x40000) == 0) {
        goto LABEL_71;
      }
      goto LABEL_135;
    }
  }
  else if ((v35 & 0x20000) == 0)
  {
    goto LABEL_70;
  }
  uint64_t v72 = sub_129AEE0(*(void *)(a1 + 296));
  v29 += v72 + ((9 * (__clz(v72 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v35 & 0x40000) == 0)
  {
LABEL_71:
    if ((v35 & 0x80000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_136;
  }
LABEL_135:
  uint64_t v73 = sub_130CC00(*(void *)(a1 + 304));
  v29 += v73 + ((9 * (__clz(v73 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v35 & 0x80000) == 0)
  {
LABEL_72:
    if ((v35 & 0x100000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_137;
  }
LABEL_136:
  uint64_t v74 = sub_129BB54(*(void *)(a1 + 312));
  v29 += v74 + ((9 * (__clz(v74 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v35 & 0x100000) == 0)
  {
LABEL_73:
    if ((v35 & 0x200000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_138;
  }
LABEL_137:
  uint64_t v75 = sub_129DBA8(*(void *)(a1 + 320));
  v29 += v75 + ((9 * (__clz(v75 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v35 & 0x200000) == 0)
  {
LABEL_74:
    if ((v35 & 0x400000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_139;
  }
LABEL_138:
  uint64_t v76 = sub_1799F00(*(void *)(a1 + 328));
  v29 += v76 + ((9 * (__clz(v76 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v35 & 0x400000) == 0)
  {
LABEL_75:
    if ((v35 & 0x800000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_76;
  }
LABEL_139:
  int v77 = *(_DWORD *)(a1 + 336);
  uint64_t v78 = ((9 * (__clz(v77 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v77 >= 0) {
    uint64_t v79 = v78;
  }
  else {
    uint64_t v79 = 11;
  }
  v29 += v79;
  if ((v35 & 0x800000) != 0)
  {
LABEL_76:
    int v38 = *(_DWORD *)(a1 + 340);
    uint64_t v39 = ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v38 >= 0) {
      uint64_t v40 = v39;
    }
    else {
      uint64_t v40 = 11;
    }
    v29 += v40;
  }
LABEL_80:
  if (!HIBYTE(v35)) {
    goto LABEL_99;
  }
  uint64_t v41 = v29 + 2;
  if ((v35 & 0x1000000) == 0) {
    uint64_t v41 = v29;
  }
  if ((v35 & 0x2000000) != 0) {
    v41 += 2;
  }
  if ((v35 & 0x4000000) != 0) {
    v41 += 2;
  }
  if ((v35 & 0x8000000) != 0) {
    v41 += 3;
  }
  if ((v35 & 0x10000000) == 0)
  {
    if ((v35 & 0x20000000) == 0) {
      goto LABEL_91;
    }
LABEL_148:
    v41 += ((9 * (__clz(*(_DWORD *)(a1 + 352) | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v35 & 0x40000000) != 0) {
      goto LABEL_92;
    }
    goto LABEL_96;
  }
  int v80 = *(_DWORD *)(a1 + 348);
  uint64_t v81 = ((9 * (__clz(v80 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if (v80 >= 0) {
    uint64_t v82 = v81;
  }
  else {
    uint64_t v82 = 12;
  }
  v41 += v82;
  if ((v35 & 0x20000000) != 0) {
    goto LABEL_148;
  }
LABEL_91:
  if ((v35 & 0x40000000) != 0)
  {
LABEL_92:
    int v42 = *(_DWORD *)(a1 + 356);
    uint64_t v43 = ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v42 >= 0) {
      uint64_t v44 = v43;
    }
    else {
      uint64_t v44 = 12;
    }
    v41 += v44;
  }
LABEL_96:
  if (v35 >= 0) {
    uint64_t v29 = v41;
  }
  else {
    uint64_t v29 = v41 + 3;
  }
LABEL_99:
  int v45 = *(_DWORD *)(a1 + 44);
  if ((v45 & 7) != 0)
  {
    uint64_t v46 = v29 + 3;
    if ((v45 & 1) == 0) {
      uint64_t v46 = v29;
    }
    if ((v45 & 2) != 0) {
      uint64_t v29 = v46 + 3;
    }
    else {
      uint64_t v29 = v46;
    }
    if ((v45 & 4) != 0) {
      v29 += ((9 * (__clz(*(_DWORD *)(a1 + 364) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v47 = *(void *)(a1 + 8);
  if (v47)
  {
    unint64_t v83 = v47 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v83 + 31) < 0) {
      uint64_t v84 = *(void *)(v83 + 16);
    }
    else {
      uint64_t v84 = *(unsigned __int8 *)(v83 + 31);
    }
    v29 += v84;
  }
  *(_DWORD *)(a1 + 48) = v29;
  return v29;
}

void sub_1798F60(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    int v5 = (_DWORD *)(a1 + 56);
    uint64_t v6 = *(int *)(a1 + 56);
    sub_188C80C((unsigned int *)(a1 + 56), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 64);
    *v5 += *(_DWORD *)(a2 + 56);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 64), 4 * *(int *)(a2 + 56));
  }
  int v8 = *(_DWORD *)(a2 + 72);
  if (v8)
  {
    uint64_t v9 = *(int *)(a1 + 72);
    sub_188C80C((unsigned int *)(a1 + 72), v9 + v8);
    uint64_t v10 = *(void *)(a1 + 80);
    *(_DWORD *)(a1 + 72) += *(_DWORD *)(a2 + 72);
    memcpy((void *)(v10 + 4 * v9), *(const void **)(a2 + 80), 4 * *(int *)(a2 + 72));
  }
  int v11 = *(_DWORD *)(a2 + 88);
  if (v11)
  {
    uint64_t v12 = *(int *)(a1 + 88);
    sub_188C80C((unsigned int *)(a1 + 88), v12 + v11);
    uint64_t v13 = *(void *)(a1 + 96);
    *(_DWORD *)(a1 + 88) += *(_DWORD *)(a2 + 88);
    memcpy((void *)(v13 + 4 * v12), *(const void **)(a2 + 96), 4 * *(int *)(a2 + 88));
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = *(int *)(a1 + 104);
    sub_188C80C((unsigned int *)(a1 + 104), v15 + v14);
    uint64_t v16 = *(void *)(a1 + 112);
    *(_DWORD *)(a1 + 104) += *(_DWORD *)(a2 + 104);
    memcpy((void *)(v16 + 4 * v15), *(const void **)(a2 + 112), 4 * *(int *)(a2 + 104));
  }
  int v17 = *(_DWORD *)(a2 + 120);
  if (v17)
  {
    uint64_t v18 = *(int *)(a1 + 120);
    sub_188C80C((unsigned int *)(a1 + 120), v18 + v17);
    uint64_t v19 = *(void *)(a1 + 128);
    *(_DWORD *)(a1 + 120) += *(_DWORD *)(a2 + 120);
    memcpy((void *)(v19 + 4 * v18), *(const void **)(a2 + 128), 4 * *(int *)(a2 + 120));
  }
  int v20 = *(_DWORD *)(a2 + 144);
  if (v20)
  {
    int v21 = (uint64_t *)(*(void *)(a2 + 152) + 8);
    uint64_t v22 = (std::string **)sub_188CCE4(a1 + 136, *(_DWORD *)(a2 + 144));
    sub_18785B8((uint64_t *)(a1 + 136), v22, v21, v20, **(_DWORD **)(a1 + 152) - *(_DWORD *)(a1 + 144));
    int v23 = *(_DWORD *)(a1 + 144) + v20;
    *(_DWORD *)(a1 + 144) = v23;
    int v24 = *(int **)(a1 + 152);
    if (*v24 < v23) {
      int *v24 = v23;
    }
  }
  unsigned int v25 = *(_DWORD *)(a2 + 40);
  if (!(_BYTE)v25) {
    goto LABEL_68;
  }
  if (v25)
  {
    int v26 = (long long *)(*(void *)(a2 + 160) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v27 = *(void *)(a1 + 8);
    uint64_t v28 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
    if (v27) {
      uint64_t v28 = (uint64_t *)*v28;
    }
    sub_1881DF4((std::string **)(a1 + 160), v26, v28);
    if ((v25 & 2) == 0)
    {
LABEL_17:
      if ((v25 & 4) == 0) {
        goto LABEL_18;
      }
      goto LABEL_30;
    }
  }
  else if ((v25 & 2) == 0)
  {
    goto LABEL_17;
  }
  uint64_t v29 = (long long *)(*(void *)(a2 + 168) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 2u;
  uint64_t v30 = *(void *)(a1 + 8);
  uint64_t v31 = (uint64_t *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
  if (v30) {
    uint64_t v31 = (uint64_t *)*v31;
  }
  sub_1881DF4((std::string **)(a1 + 168), v29, v31);
  if ((v25 & 4) == 0)
  {
LABEL_18:
    if ((v25 & 8) == 0) {
      goto LABEL_19;
    }
    goto LABEL_33;
  }
LABEL_30:
  uint64_t v32 = (long long *)(*(void *)(a2 + 176) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v33 = *(void *)(a1 + 8);
  uint64_t v34 = (uint64_t *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
  if (v33) {
    uint64_t v34 = (uint64_t *)*v34;
  }
  sub_1881DF4((std::string **)(a1 + 176), v32, v34);
  if ((v25 & 8) == 0)
  {
LABEL_19:
    if ((v25 & 0x10) == 0) {
      goto LABEL_20;
    }
    goto LABEL_36;
  }
LABEL_33:
  int v35 = (long long *)(*(void *)(a2 + 184) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 8u;
  uint64_t v36 = *(void *)(a1 + 8);
  uint64_t v37 = (uint64_t *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
  if (v36) {
    uint64_t v37 = (uint64_t *)*v37;
  }
  sub_1881DF4((std::string **)(a1 + 184), v35, v37);
  if ((v25 & 0x10) == 0)
  {
LABEL_20:
    if ((v25 & 0x20) == 0) {
      goto LABEL_21;
    }
LABEL_44:
    *(_DWORD *)(a1 + 40) |= 0x20u;
    uint64_t v42 = *(void *)(a1 + 200);
    if (!v42)
    {
      uint64_t v43 = *(void *)(a1 + 8);
      uint64_t v44 = (void *)(v43 & 0xFFFFFFFFFFFFFFFCLL);
      if (v43) {
        uint64_t v44 = (void *)*v44;
      }
      uint64_t v42 = sub_131BDDC((uint64_t)v44);
      *(void *)(a1 + 200) = v42;
    }
    if (*(void *)(a2 + 200)) {
      int v45 = *(uint64_t (****)())(a2 + 200);
    }
    else {
      int v45 = &off_2532BC8;
    }
    sub_131AB94(v42, (uint64_t)v45);
    if ((v25 & 0x40) == 0)
    {
LABEL_22:
      if ((v25 & 0x80) == 0) {
        goto LABEL_68;
      }
      goto LABEL_60;
    }
    goto LABEL_52;
  }
LABEL_36:
  *(_DWORD *)(a1 + 40) |= 0x10u;
  int v38 = *(void **)(a1 + 192);
  if (!v38)
  {
    uint64_t v39 = *(void *)(a1 + 8);
    uint64_t v40 = (void *)(v39 & 0xFFFFFFFFFFFFFFFCLL);
    if (v39) {
      uint64_t v40 = (void *)*v40;
    }
    int v38 = sub_18302C8((uint64_t)v40);
    *(void *)(a1 + 192) = v38;
  }
  if (*(void *)(a2 + 192)) {
    uint64_t v41 = *(uint64_t (****)())(a2 + 192);
  }
  else {
    uint64_t v41 = &off_2549800;
  }
  sub_1792730((uint64_t)v38, (uint64_t)v41);
  if ((v25 & 0x20) != 0) {
    goto LABEL_44;
  }
LABEL_21:
  if ((v25 & 0x40) == 0) {
    goto LABEL_22;
  }
LABEL_52:
  *(_DWORD *)(a1 + 40) |= 0x40u;
  uint64_t v46 = *(std::string **)(a1 + 208);
  if (!v46)
  {
    uint64_t v47 = *(void *)(a1 + 8);
    uint64_t v48 = (void *)(v47 & 0xFFFFFFFFFFFFFFFCLL);
    if (v47) {
      uint64_t v48 = (void *)*v48;
    }
    uint64_t v46 = (std::string *)sub_129DD40((uint64_t)v48);
    *(void *)(a1 + 208) = v46;
  }
  if (*(void *)(a2 + 208)) {
    unint64_t v49 = *(uint64_t (****)())(a2 + 208);
  }
  else {
    unint64_t v49 = &off_25302A0;
  }
  sub_117EF04(v46, (uint64_t)v49);
  if ((v25 & 0x80) != 0)
  {
LABEL_60:
    *(_DWORD *)(a1 + 40) |= 0x80u;
    uint64_t v50 = *(std::string **)(a1 + 216);
    if (!v50)
    {
      uint64_t v51 = *(void *)(a1 + 8);
      unint64_t v52 = (void *)(v51 & 0xFFFFFFFFFFFFFFFCLL);
      if (v51) {
        unint64_t v52 = (void *)*v52;
      }
      uint64_t v50 = (std::string *)sub_129DE34((uint64_t)v52);
      *(void *)(a1 + 216) = v50;
    }
    if (*(void *)(a2 + 216)) {
      uint64_t v53 = *(uint64_t (****)())(a2 + 216);
    }
    else {
      uint64_t v53 = &off_25302E0;
    }
    sub_128FCA4(v50, (uint64_t)v53);
  }
LABEL_68:
  if ((v25 & 0xFF00) == 0) {
    goto LABEL_142;
  }
  if ((v25 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x100u;
    uint64_t v54 = *(std::string **)(a1 + 224);
    if (!v54)
    {
      uint64_t v55 = *(void *)(a1 + 8);
      uint64_t v56 = (void *)(v55 & 0xFFFFFFFFFFFFFFFCLL);
      if (v55) {
        uint64_t v56 = (void *)*v56;
      }
      uint64_t v54 = (std::string *)sub_18303E4((uint64_t)v56);
      *(void *)(a1 + 224) = v54;
    }
    if (*(void *)(a2 + 224)) {
      uint64_t v57 = *(uint64_t (****)())(a2 + 224);
    }
    else {
      uint64_t v57 = &off_2549858;
    }
    sub_1793C44(v54, (uint64_t)v57);
    if ((v25 & 0x200) == 0)
    {
LABEL_71:
      if ((v25 & 0x400) == 0) {
        goto LABEL_72;
      }
      goto LABEL_94;
    }
  }
  else if ((v25 & 0x200) == 0)
  {
    goto LABEL_71;
  }
  *(_DWORD *)(a1 + 40) |= 0x200u;
  uint64_t v58 = *(void *)(a1 + 232);
  if (!v58)
  {
    uint64_t v59 = *(void *)(a1 + 8);
    uint64_t v60 = (void *)(v59 & 0xFFFFFFFFFFFFFFFCLL);
    if (v59) {
      uint64_t v60 = (void *)*v60;
    }
    sub_129E0BC((uint64_t)v60);
    *(void *)(a1 + 232) = v58;
  }
  if (*(void *)(a2 + 232)) {
    uint64_t v61 = *(uint64_t (****)())(a2 + 232);
  }
  else {
    uint64_t v61 = &off_25303B8;
  }
  sub_129384C(v58, (uint64_t)v61);
  if ((v25 & 0x400) == 0)
  {
LABEL_72:
    if ((v25 & 0x800) == 0) {
      goto LABEL_73;
    }
    goto LABEL_102;
  }
LABEL_94:
  *(_DWORD *)(a1 + 40) |= 0x400u;
  uint64_t v62 = *(std::string **)(a1 + 240);
  if (!v62)
  {
    uint64_t v63 = *(void *)(a1 + 8);
    uint64_t v64 = (void *)(v63 & 0xFFFFFFFFFFFFFFFCLL);
    if (v63) {
      uint64_t v64 = (void *)*v64;
    }
    uint64_t v62 = (std::string *)sub_12BBB40((uint64_t)v64);
    *(void *)(a1 + 240) = v62;
  }
  if (*(void *)(a2 + 240)) {
    uint64_t v65 = *(uint64_t (****)())(a2 + 240);
  }
  else {
    uint64_t v65 = &off_2530888;
  }
  sub_117DA78(v62, (uint64_t)v65);
  if ((v25 & 0x800) == 0)
  {
LABEL_73:
    if ((v25 & 0x1000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_110;
  }
LABEL_102:
  *(_DWORD *)(a1 + 40) |= 0x800u;
  uint64_t v66 = *(std::string **)(a1 + 248);
  if (!v66)
  {
    uint64_t v67 = *(void *)(a1 + 8);
    uint64_t v68 = (void *)(v67 & 0xFFFFFFFFFFFFFFFCLL);
    if (v67) {
      uint64_t v68 = (void *)*v68;
    }
    uint64_t v66 = (std::string *)sub_129E044((uint64_t)v68);
    *(void *)(a1 + 248) = v66;
  }
  if (*(void *)(a2 + 248)) {
    uint64_t v69 = *(uint64_t (****)())(a2 + 248);
  }
  else {
    uint64_t v69 = &off_2530398;
  }
  sub_1292080(v66, (uint64_t)v69);
  if ((v25 & 0x1000) == 0)
  {
LABEL_74:
    if ((v25 & 0x2000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_118;
  }
LABEL_110:
  *(_DWORD *)(a1 + 40) |= 0x1000u;
  uint64_t v70 = *(std::string **)(a1 + 256);
  if (!v70)
  {
    uint64_t v71 = *(void *)(a1 + 8);
    uint64_t v72 = (void *)(v71 & 0xFFFFFFFFFFFFFFFCLL);
    if (v71) {
      uint64_t v72 = (void *)*v72;
    }
    uint64_t v70 = (std::string *)sub_129E61C((uint64_t)v72);
    *(void *)(a1 + 256) = v70;
  }
  if (*(void *)(a2 + 256)) {
    uint64_t v73 = *(uint64_t (****)())(a2 + 256);
  }
  else {
    uint64_t v73 = &off_25305C8;
  }
  sub_129956C(v70, (uint64_t)v73);
  if ((v25 & 0x2000) == 0)
  {
LABEL_75:
    if ((v25 & 0x4000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_126;
  }
LABEL_118:
  *(_DWORD *)(a1 + 40) |= 0x2000u;
  uint64_t v74 = *(void *)(a1 + 264);
  if (!v74)
  {
    uint64_t v75 = *(void *)(a1 + 8);
    uint64_t v76 = (void *)(v75 & 0xFFFFFFFFFFFFFFFCLL);
    if (v75) {
      uint64_t v76 = (void *)*v76;
    }
    sub_17888DC((uint64_t)v76);
    *(void *)(a1 + 264) = v74;
  }
  if (*(void *)(a2 + 264)) {
    int v77 = *(uint64_t (****)())(a2 + 264);
  }
  else {
    int v77 = &off_2545B88;
  }
  sub_16EF40C(v74, (uint64_t)v77);
  if ((v25 & 0x4000) == 0)
  {
LABEL_76:
    if ((v25 & 0x8000) == 0) {
      goto LABEL_142;
    }
    goto LABEL_134;
  }
LABEL_126:
  *(_DWORD *)(a1 + 40) |= 0x4000u;
  uint64_t v78 = *(void *)(a1 + 272);
  if (!v78)
  {
    uint64_t v79 = *(void *)(a1 + 8);
    int v80 = (void *)(v79 & 0xFFFFFFFFFFFFFFFCLL);
    if (v79) {
      int v80 = (void *)*v80;
    }
    uint64_t v78 = sub_12BCE18((uint64_t)v80);
    *(void *)(a1 + 272) = v78;
  }
  if (*(void *)(a2 + 272)) {
    uint64_t v81 = *(uint64_t (****)())(a2 + 272);
  }
  else {
    uint64_t v81 = &off_2530F90;
  }
  sub_12B7E70(v78, (uint64_t)v81);
  if ((v25 & 0x8000) != 0)
  {
LABEL_134:
    *(_DWORD *)(a1 + 40) |= 0x8000u;
    uint64_t v82 = *(void **)(a1 + 280);
    if (!v82)
    {
      uint64_t v83 = *(void *)(a1 + 8);
      uint64_t v84 = (void *)(v83 & 0xFFFFFFFFFFFFFFFCLL);
      if (v83) {
        uint64_t v84 = (void *)*v84;
      }
      uint64_t v82 = sub_18302C8((uint64_t)v84);
      *(void *)(a1 + 280) = v82;
    }
    if (*(void *)(a2 + 280)) {
      unint64_t v85 = *(uint64_t (****)())(a2 + 280);
    }
    else {
      unint64_t v85 = &off_2549800;
    }
    sub_1792730((uint64_t)v82, (uint64_t)v85);
  }
LABEL_142:
  if ((v25 & 0xFF0000) == 0) {
    goto LABEL_153;
  }
  if ((v25 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x10000u;
    unint64_t v88 = *(void **)(a1 + 288);
    if (!v88)
    {
      uint64_t v89 = *(void *)(a1 + 8);
      unint64_t v90 = (void *)(v89 & 0xFFFFFFFFFFFFFFFCLL);
      if (v89) {
        unint64_t v90 = (void *)*v90;
      }
      unint64_t v88 = sub_12BBF44((uint64_t)v90);
      *(void *)(a1 + 288) = v88;
    }
    if (*(void *)(a2 + 288)) {
      char v91 = *(uint64_t (****)())(a2 + 288);
    }
    else {
      char v91 = &off_25309E0;
    }
    sub_12A5038((uint64_t)v88, (uint64_t)v91);
    if ((v25 & 0x20000) == 0)
    {
LABEL_145:
      if ((v25 & 0x40000) == 0) {
        goto LABEL_146;
      }
      goto LABEL_189;
    }
  }
  else if ((v25 & 0x20000) == 0)
  {
    goto LABEL_145;
  }
  *(_DWORD *)(a1 + 40) |= 0x20000u;
  uint64_t v92 = *(void *)(a1 + 296);
  if (!v92)
  {
    uint64_t v93 = *(void *)(a1 + 8);
    int v94 = (void *)(v93 & 0xFFFFFFFFFFFFFFFCLL);
    if (v93) {
      int v94 = (void *)*v94;
    }
    uint64_t v92 = sub_129E840((uint64_t)v94);
    *(void *)(a1 + 296) = v92;
  }
  if (*(void *)(a2 + 296)) {
    char v95 = *(uint64_t (****)())(a2 + 296);
  }
  else {
    char v95 = &off_2530690;
  }
  sub_129AF38(v92, (uint64_t)v95);
  if ((v25 & 0x40000) == 0)
  {
LABEL_146:
    if ((v25 & 0x80000) == 0) {
      goto LABEL_147;
    }
    goto LABEL_197;
  }
LABEL_189:
  *(_DWORD *)(a1 + 40) |= 0x40000u;
  uint64_t v96 = *(void *)(a1 + 304);
  if (!v96)
  {
    uint64_t v97 = *(void *)(a1 + 8);
    v98 = (void *)(v97 & 0xFFFFFFFFFFFFFFFCLL);
    if (v97) {
      v98 = (void *)*v98;
    }
    uint64_t v96 = sub_131B2B4((uint64_t)v98);
    *(void *)(a1 + 304) = v96;
  }
  if (*(void *)(a2 + 304)) {
    uint64_t v99 = *(uint64_t (****)())(a2 + 304);
  }
  else {
    uint64_t v99 = &off_2532768;
  }
  sub_129AF38(v96, (uint64_t)v99);
  if ((v25 & 0x80000) == 0)
  {
LABEL_147:
    if ((v25 & 0x100000) == 0) {
      goto LABEL_148;
    }
    goto LABEL_205;
  }
LABEL_197:
  *(_DWORD *)(a1 + 40) |= 0x80000u;
  unsigned int v100 = *(void **)(a1 + 312);
  if (!v100)
  {
    uint64_t v101 = *(void *)(a1 + 8);
    uint64_t v102 = (void *)(v101 & 0xFFFFFFFFFFFFFFFCLL);
    if (v101) {
      uint64_t v102 = (void *)*v102;
    }
    unsigned int v100 = sub_129E89C((uint64_t)v102);
    *(void *)(a1 + 312) = v100;
  }
  if (*(void *)(a2 + 312)) {
    unsigned int v103 = *(uint64_t (****)())(a2 + 312);
  }
  else {
    unsigned int v103 = &off_25306C0;
  }
  sub_129BCC0((uint64_t)v100, (uint64_t)v103);
  if ((v25 & 0x100000) == 0)
  {
LABEL_148:
    if ((v25 & 0x200000) == 0) {
      goto LABEL_149;
    }
    goto LABEL_213;
  }
LABEL_205:
  *(_DWORD *)(a1 + 40) |= 0x100000u;
  unint64_t v104 = *(std::string **)(a1 + 320);
  if (!v104)
  {
    uint64_t v105 = *(void *)(a1 + 8);
    unsigned int v106 = (void *)(v105 & 0xFFFFFFFFFFFFFFFCLL);
    if (v105) {
      unsigned int v106 = (void *)*v106;
    }
    unint64_t v104 = (std::string *)sub_129EACC((uint64_t)v106);
    *(void *)(a1 + 320) = v104;
  }
  if (*(void *)(a2 + 320)) {
    int v107 = *(uint64_t (****)())(a2 + 320);
  }
  else {
    int v107 = &off_2530770;
  }
  sub_129DC58(v104, (uint64_t)v107);
  if ((v25 & 0x200000) == 0)
  {
LABEL_149:
    if ((v25 & 0x400000) == 0) {
      goto LABEL_150;
    }
LABEL_221:
    *(_DWORD *)(a1 + 336) = *(_DWORD *)(a2 + 336);
    if ((v25 & 0x800000) == 0) {
      goto LABEL_152;
    }
    goto LABEL_151;
  }
LABEL_213:
  *(_DWORD *)(a1 + 40) |= 0x200000u;
  uint64_t v108 = *(std::string **)(a1 + 328);
  if (!v108)
  {
    uint64_t v109 = *(void *)(a1 + 8);
    unint64_t v110 = (void *)(v109 & 0xFFFFFFFFFFFFFFFCLL);
    if (v109) {
      unint64_t v110 = (void *)*v110;
    }
    uint64_t v108 = (std::string *)sub_183054C((uint64_t)v110);
    *(void *)(a1 + 328) = v108;
  }
  if (*(void *)(a2 + 328)) {
    uint64_t v111 = *(uint64_t (****)())(a2 + 328);
  }
  else {
    uint64_t v111 = &off_2549A70;
  }
  sub_142E300(v108, (uint64_t)v111);
  if ((v25 & 0x400000) != 0) {
    goto LABEL_221;
  }
LABEL_150:
  if ((v25 & 0x800000) != 0) {
LABEL_151:
  }
    *(_DWORD *)(a1 + 340) = *(_DWORD *)(a2 + 340);
LABEL_152:
  *(_DWORD *)(a1 + 40) |= v25;
LABEL_153:
  if (!HIBYTE(v25)) {
    goto LABEL_163;
  }
  if ((v25 & 0x1000000) != 0)
  {
    *(unsigned char *)(a1 + 344) = *(unsigned char *)(a2 + 344);
    if ((v25 & 0x2000000) == 0)
    {
LABEL_156:
      if ((v25 & 0x4000000) == 0) {
        goto LABEL_157;
      }
      goto LABEL_228;
    }
  }
  else if ((v25 & 0x2000000) == 0)
  {
    goto LABEL_156;
  }
  *(unsigned char *)(a1 + 345) = *(unsigned char *)(a2 + 345);
  if ((v25 & 0x4000000) == 0)
  {
LABEL_157:
    if ((v25 & 0x8000000) == 0) {
      goto LABEL_158;
    }
    goto LABEL_229;
  }
LABEL_228:
  *(unsigned char *)(a1 + 346) = *(unsigned char *)(a2 + 346);
  if ((v25 & 0x8000000) == 0)
  {
LABEL_158:
    if ((v25 & 0x10000000) == 0) {
      goto LABEL_159;
    }
    goto LABEL_230;
  }
LABEL_229:
  *(unsigned char *)(a1 + 347) = *(unsigned char *)(a2 + 347);
  if ((v25 & 0x10000000) == 0)
  {
LABEL_159:
    if ((v25 & 0x20000000) == 0) {
      goto LABEL_160;
    }
    goto LABEL_231;
  }
LABEL_230:
  *(_DWORD *)(a1 + 348) = *(_DWORD *)(a2 + 348);
  if ((v25 & 0x20000000) == 0)
  {
LABEL_160:
    if ((v25 & 0x40000000) == 0) {
      goto LABEL_161;
    }
LABEL_232:
    *(_DWORD *)(a1 + 356) = *(_DWORD *)(a2 + 356);
    if ((v25 & 0x80000000) == 0) {
      goto LABEL_162;
    }
LABEL_233:
    *(unsigned char *)(a1 + 360) = *(unsigned char *)(a2 + 360);
    goto LABEL_162;
  }
LABEL_231:
  *(_DWORD *)(a1 + 352) = *(_DWORD *)(a2 + 352);
  if ((v25 & 0x40000000) != 0) {
    goto LABEL_232;
  }
LABEL_161:
  if ((v25 & 0x80000000) != 0) {
    goto LABEL_233;
  }
LABEL_162:
  *(_DWORD *)(a1 + 40) |= v25;
LABEL_163:
  int v86 = *(_DWORD *)(a2 + 44);
  if ((v86 & 7) == 0) {
    goto LABEL_169;
  }
  if ((v86 & 1) == 0)
  {
    if ((v86 & 2) == 0) {
      goto LABEL_166;
    }
LABEL_224:
    *(unsigned char *)(a1 + 362) = *(unsigned char *)(a2 + 362);
    if ((v86 & 4) == 0) {
      goto LABEL_168;
    }
    goto LABEL_167;
  }
  *(unsigned char *)(a1 + 361) = *(unsigned char *)(a2 + 361);
  if ((v86 & 2) != 0) {
    goto LABEL_224;
  }
LABEL_166:
  if ((v86 & 4) != 0) {
LABEL_167:
  }
    *(_DWORD *)(a1 + 364) = *(_DWORD *)(a2 + 364);
LABEL_168:
  *(_DWORD *)(a1 + 44) |= v86;
LABEL_169:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v87 = *(void *)(a2 + 8);
  if (v87)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v87 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1799934(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if ((v3 & 0x10) != 0)
    {
      uint64_t v4 = *(void *)(a1 + 192);
      if (*(unsigned char *)(v4 + 16))
      {
        uint64_t result = sub_15B1FC0(*(void *)(v4 + 24));
        if (!result) {
          return result;
        }
        int v3 = *(_DWORD *)(a1 + 40);
      }
    }
    if ((v3 & 0x20) != 0)
    {
      uint64_t result = sub_131B154(*(void *)(a1 + 200));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x200) != 0)
    {
      uint64_t result = sub_1293D50(*(void *)(a1 + 232));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x2000) != 0)
    {
      uint64_t result = sub_16EF688(*(void *)(a1 + 264));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x4000) != 0)
    {
      uint64_t result = sub_12B8014(*(void *)(a1 + 272));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x8000) != 0)
    {
      uint64_t v5 = *(void *)(a1 + 280);
      if (*(unsigned char *)(v5 + 16))
      {
        uint64_t result = sub_15B1FC0(*(void *)(v5 + 24));
        if (!result) {
          return result;
        }
        int v3 = *(_DWORD *)(a1 + 40);
      }
    }
    if ((v3 & 0x10000) != 0)
    {
      uint64_t result = sub_12A51B0(*(void *)(a1 + 288));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x20000) != 0)
    {
      uint64_t result = sub_129AF98(*(void *)(a1 + 296));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x40000) != 0)
    {
      uint64_t result = sub_130CC58(*(void *)(a1 + 304));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x80000) == 0) {
      return 1;
    }
    uint64_t result = sub_129BFCC(*(void *)(a1 + 312));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_1799A44@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchParameters");
}

uint64_t sub_1799A54(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24DAB98;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v6 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v6 = (uint64_t *)*v6;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v6);
  }
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

void sub_1799B08(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1799B38(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1799BD8(uint64_t a1)
{
  sub_1799B38(a1);

  operator delete();
}

uint64_t sub_1799C10(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v24 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = (char *)(*(void *)v24 + 1);
    unsigned int v9 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180(*(uint64_t *)v24, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)int v24 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v19 = v8 + 1;
    uint64_t v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v21 = *v19;
    uint64_t v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_29:
      *(void *)int v24 = v19;
      *(unsigned char *)(a1 + 32) = v20 != 0;
      goto LABEL_30;
    }
    uint64_t v22 = sub_188C138((uint64_t)v8, v20);
    *(void *)int v24 = v22;
    *(unsigned char *)(a1 + 32) = v23 != 0;
    if (!v22) {
      goto LABEL_37;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v16 = *(void *)(a1 + 8);
    int v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
    if (v16) {
      int v17 = (uint64_t *)*v17;
    }
    uint64_t v18 = (std::string *)sub_1880F84((void *)(a1 + 24), v17);
    uint64_t v15 = (void *)sub_188C244(v18, *(char **)v24, (uint64_t)a3);
LABEL_24:
    *(void *)int v24 = v15;
    if (!v15) {
      goto LABEL_37;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = *(char **)v24;
    }
    uint64_t v15 = sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_24;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_37:
  *(void *)int v24 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v24;
}

unsigned char *sub_1799DFC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 32);
    *uint64_t v4 = 8;
    v4[1] = v7;
    v4 += 2;
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if ((v8 & 1) == 0) {
    return v4;
  }
  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v10 + 31) < 0)
  {
    unsigned int v11 = *(void **)(v10 + 8);
    uint64_t v12 = *(void *)(v10 + 16);
  }
  else
  {
    unsigned int v11 = (void *)(v10 + 8);
    LODWORD(v12) = *(unsigned __int8 *)(v10 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v12)
  {
    uint64_t v13 = (int)v12;
    memcpy(v4, v11, (int)v12);
    v4 += v13;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v11, v12, v4);
}

uint64_t sub_1799F00(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      uint64_t v3 = v2 + 2;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v3 += v10;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_1799FA0()
{
  return 1;
}

void *sub_1799FA8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PaginationParameters");
}

uint64_t sub_1799FB8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DAC18;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  return a1;
}

void sub_179A034(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_179A064(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_179A0D8(void *a1)
{
  sub_179A064(a1);

  operator delete();
}

uint64_t sub_179A110(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_WORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_179A128(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v25 + 2;
      }
    }
    unsigned int v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      unsigned int v25 = v15;
      *(unsigned char *)(a1 + 25) = v16 != 0;
      goto LABEL_30;
    }
    int v21 = (char *)sub_188C138((uint64_t)v8, v16);
    unsigned int v25 = v21;
    *(unsigned char *)(a1 + 25) = v22 != 0;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v18 = v8 + 1;
    uint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    uint64_t v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      unsigned int v25 = v18;
      *(unsigned char *)(a1 + 24) = v19 != 0;
      goto LABEL_30;
    }
    uint64_t v23 = (char *)sub_188C138((uint64_t)v8, v19);
    unsigned int v25 = v23;
    *(unsigned char *)(a1 + 24) = v24 != 0;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v25;
    }
    unsigned int v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  unsigned int v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_179A338(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v7;
    v4 += 2;
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v8 = *(unsigned char *)(a1 + 25);
    *uint64_t v4 = 16;
    v4[1] = v8;
    v4 += 2;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_179A454(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  uint64_t v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 3) != 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_179A4AC()
{
  return 1;
}

void *sub_179A4B4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchClientBehavior");
}

uint64_t sub_179A4C4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  int v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2549AB8)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_12A17E0(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_179A590(uint64_t a1)
{
  sub_179A4C4(a1);

  operator delete();
}

uint64_t sub_179A5C8(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_12A181C(*(void *)(result + 32));
  }
LABEL_7:
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_179A660(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v27 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    return *(void *)v27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v27 + 1);
    unsigned int v8 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v27 + 2);
      }
    }
    *(void *)uint64_t v27 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v16 = *(void **)(a1 + 32);
      if (!v16)
      {
        int v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          int v17 = (void *)*v17;
        }
        uint64_t v16 = sub_12BBBC8((uint64_t)v17);
        *(void *)(a1 + 32) = v16;
        uint64_t v7 = *(unsigned __int8 **)v27;
      }
      uint64_t v15 = sub_12B117C(a3, (uint64_t)v16, v7);
      goto LABEL_31;
    }
    if (v11 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v18 = *(void *)(a1 + 8);
    uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (uint64_t *)*v19;
    }
    int v20 = (std::string *)sub_1880F84((void *)(a1 + 24), v19);
    uint64_t v15 = (uint64_t)sub_188C244(v20, *(char **)v27, (uint64_t)a3);
LABEL_31:
    *(void *)uint64_t v27 = v15;
    if (!v15) {
      goto LABEL_50;
    }
LABEL_39:
    if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
      return *(void *)v27;
    }
  }
  if (v11 == 1 && v8 == 8)
  {
    int v21 = (char *)(v7 + 1);
    unint64_t v22 = *v7;
    if (((char)*v7 & 0x80000000) == 0) {
      goto LABEL_36;
    }
    int v23 = *v21;
    int v24 = v22 + (v23 << 7);
    unint64_t v22 = (v24 - 128);
    if (v23 < 0)
    {
      *(void *)uint64_t v27 = sub_188C138((uint64_t)v7, (v24 - 128));
      if (!*(void *)v27) {
        goto LABEL_50;
      }
      unint64_t v22 = v25;
    }
    else
    {
      int v21 = (char *)(v7 + 2);
LABEL_36:
      *(void *)uint64_t v27 = v21;
    }
    if (v22 > 2)
    {
      if (*v6) {
        int v26 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        int v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v22, v26);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 4u;
      *(_DWORD *)(a1 + 40) = v22;
    }
    goto LABEL_39;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v27;
    }
    uint64_t v15 = (uint64_t)sub_1885AC0(v8, v14, (char *)v7, a3);
    goto LABEL_31;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v27;
  }
LABEL_50:
  *(void *)uint64_t v27 = 0;
  return *(void *)v27;
}

char *sub_179A8C8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    *uint64_t v4 = 26;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    uint64_t v4 = sub_12A1AC4(v10, v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_179AA74(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_15;
  }
  if (v2)
  {
    unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    uint64_t v7 = sub_12A1BDC(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    int v8 = *(_DWORD *)(a1 + 40);
    if (v8 < 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v9;
  }
LABEL_15:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_179AB94(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_12BBBC8((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_25308B8;
    }
    uint64_t result = sub_11D2930(v10, (uint64_t)v13);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_179ACA4()
{
  return 1;
}

void *sub_179ACAC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.DisplayHeaderSubstitute");
}

uint64_t sub_179ACBC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1846DFC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_18478D0(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = v1 + 8;
  *(_DWORD *)(v8 + 64) = 0;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

uint64_t sub_179AD68(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24DAD18;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = a2;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = a2;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = a2;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = a2;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = a2;
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 240) = &qword_2550250;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  *(_OWORD *)(a1 + 296) = 0u;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 328) = 0u;
  *(_OWORD *)(a1 + 344) = 0u;
  *(_OWORD *)(a1 + 360) = 0u;
  *(_OWORD *)(a1 + 372) = 0u;
  *(_DWORD *)(a1 + 388) = 10;
  *(unsigned char *)(a1 + 392) = 1;
  return a1;
}

void sub_179AE3C(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_179AE6C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v50 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v51 = a1 + 16;
  *(void *)a1 = off_24DAD18;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v4 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v5 = *(_DWORD *)(a2 + 56);
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 64);
    uint64_t v7 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1878644(v4, v7, (uint64_t *)(v6 + 8), v5, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v8 = *(_DWORD *)(a1 + 56) + v5;
    *(_DWORD *)(a1 + 56) = v8;
    char v9 = *(int **)(a1 + 64);
    if (*v9 < v8) {
      *char v9 = v8;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v10 = *(_DWORD *)(a2 + 80);
  if (v10)
  {
    uint64_t v11 = *(void *)(a2 + 88);
    unint64_t v12 = (std::string **)sub_188CCE4(a1 + 72, v10);
    sub_18786C0((std::string *)(a1 + 72), v12, (uint64_t *)(v11 + 8), v10, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v13 = *(_DWORD *)(a1 + 80) + v10;
    *(_DWORD *)(a1 + 80) = v13;
    uint64_t v14 = *(int **)(a1 + 88);
    if (*v14 < v13) {
      *uint64_t v14 = v13;
    }
  }
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  int v15 = *(_DWORD *)(a2 + 104);
  if (v15)
  {
    uint64_t v16 = *(void *)(a2 + 112);
    uint64_t v17 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_187873C((uint64_t *)(a1 + 96), v17, (uint64_t *)(v16 + 8), v15, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v18 = *(_DWORD *)(a1 + 104) + v15;
    *(_DWORD *)(a1 + 104) = v18;
    uint64_t v19 = *(int **)(a1 + 112);
    if (*v19 < v18) {
      int *v19 = v18;
    }
  }
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  int v20 = *(_DWORD *)(a2 + 128);
  if (v20)
  {
    uint64_t v21 = *(void *)(a2 + 136);
    unint64_t v22 = (std::string **)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_18787C8((uint64_t *)(a1 + 120), v22, (uint64_t *)(v21 + 8), v20, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v23 = *(_DWORD *)(a1 + 128) + v20;
    *(_DWORD *)(a1 + 128) = v23;
    int v24 = *(int **)(a1 + 136);
    if (*v24 < v23) {
      int *v24 = v23;
    }
  }
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  int v25 = *(_DWORD *)(a2 + 152);
  if (v25)
  {
    uint64_t v26 = *(void *)(a2 + 160);
    uint64_t v27 = (std::string **)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_166507C((uint64_t *)(a1 + 144), v27, (uint64_t *)(v26 + 8), v25, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v28 = *(_DWORD *)(a1 + 152) + v25;
    *(_DWORD *)(a1 + 152) = v28;
    uint64_t v29 = *(int **)(a1 + 160);
    if (*v29 < v28) {
      *uint64_t v29 = v28;
    }
  }
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  int v30 = *(_DWORD *)(a2 + 176);
  if (v30)
  {
    uint64_t v31 = *(void *)(a2 + 184);
    uint64_t v32 = (uint64_t *)sub_188CCE4(a1 + 168, *(_DWORD *)(a2 + 176));
    sub_1878854((uint64_t *)(a1 + 168), v32, (uint64_t *)(v31 + 8), v30, **(_DWORD **)(a1 + 184) - *(_DWORD *)(a1 + 176));
    int v33 = *(_DWORD *)(a1 + 176) + v30;
    *(_DWORD *)(a1 + 176) = v33;
    uint64_t v34 = *(int **)(a1 + 184);
    if (*v34 < v33) {
      int *v34 = v33;
    }
  }
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = 0;
  int v35 = *(_DWORD *)(a2 + 200);
  if (v35)
  {
    uint64_t v36 = *(void *)(a2 + 208);
    uint64_t v37 = (uint64_t *)sub_188CCE4(a1 + 192, *(_DWORD *)(a2 + 200));
    sub_12C4EBC((uint64_t *)(a1 + 192), v37, (uint64_t *)(v36 + 8), v35, **(_DWORD **)(a1 + 208) - *(_DWORD *)(a1 + 200));
    int v38 = *(_DWORD *)(a1 + 200) + v35;
    *(_DWORD *)(a1 + 200) = v38;
    uint64_t v39 = *(int **)(a1 + 208);
    if (*v39 < v38) {
      *uint64_t v39 = v38;
    }
  }
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = 0;
  int v40 = *(_DWORD *)(a2 + 224);
  if (v40)
  {
    uint64_t v41 = *(void *)(a2 + 232);
    uint64_t v42 = (std::string **)sub_188CCE4(a1 + 216, *(_DWORD *)(a2 + 224));
    sub_154B4D4((uint64_t *)(a1 + 216), v42, (uint64_t *)(v41 + 8), v40, **(_DWORD **)(a1 + 232) - *(_DWORD *)(a1 + 224));
    int v43 = *(_DWORD *)(a1 + 224) + v40;
    *(_DWORD *)(a1 + 224) = v43;
    uint64_t v44 = *(int **)(a1 + 232);
    if (*v44 < v43) {
      int *v44 = v43;
    }
  }
  uint64_t v45 = *(void *)(a2 + 8);
  if (v45) {
    sub_188B4F8(v50, (v45 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v51, a2 + 16);
  *(void *)(a1 + 240) = &qword_2550250;
  int v46 = *(_DWORD *)(a2 + 40);
  if (v46)
  {
    uint64_t v47 = (uint64_t *)(*v50 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v50) {
      uint64_t v47 = (uint64_t *)*v47;
    }
    sub_1881DF4((std::string **)(a1 + 240), (long long *)(*(void *)(a2 + 240) & 0xFFFFFFFFFFFFFFFELL), v47);
    int v46 = *(_DWORD *)(a2 + 40);
  }
  if ((v46 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 248) = 0;
  if ((v46 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 256) = 0;
  if ((v46 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 264) = 0;
  if ((v46 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 272) = 0;
  if ((v46 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 280) = 0;
  if ((v46 & 0x40) != 0) {
    operator new();
  }
  *(void *)(a1 + 288) = 0;
  if ((v46 & 0x80) != 0) {
    operator new();
  }
  *(void *)(a1 + 296) = 0;
  if ((v46 & 0x100) != 0) {
    operator new();
  }
  *(void *)(a1 + 304) = 0;
  if ((v46 & 0x200) != 0) {
    operator new();
  }
  *(void *)(a1 + 312) = 0;
  if ((v46 & 0x400) != 0) {
    operator new();
  }
  *(void *)(a1 + 320) = 0;
  if ((v46 & 0x800) != 0) {
    operator new();
  }
  *(void *)(a1 + 328) = 0;
  if ((v46 & 0x1000) != 0) {
    operator new();
  }
  *(void *)(a1 + 336) = 0;
  if ((v46 & 0x2000) != 0) {
    operator new();
  }
  *(void *)(a1 + 344) = 0;
  if ((v46 & 0x4000) != 0) {
    operator new();
  }
  *(void *)(a1 + 352) = 0;
  if ((v46 & 0x8000) != 0) {
    operator new();
  }
  *(void *)(a1 + 360) = 0;
  long long v48 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 377) = *(_OWORD *)(a2 + 377);
  *(_OWORD *)(a1 + 368) = v48;
  return a1;
}

void sub_179B610()
{
}

void *sub_179B820(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_179B90C((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_154AFA8(a1 + 27);
  sub_12C48E8(a1 + 24);
  sub_18771B8(a1 + 21);
  sub_1664DDC(a1 + 18);
  sub_1877138(a1 + 15);
  sub_18770B8(a1 + 12);
  sub_1877038(a1 + 9);
  sub_1876FB8(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_179B90C(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 240);
  uint64_t result = (void ***)(a1 + 240);
  if (v3 != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2549AE8)
  {
    uint64_t v4 = *(void *)(a1 + 248);
    if (v4)
    {
      sub_15B1678(v4);
      operator delete();
    }
    uint64_t v5 = *(void *)(a1 + 256);
    if (v5)
    {
      sub_12A17E0(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 264);
    if (v6)
    {
      sub_179A064(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 272);
    if (v7)
    {
      sub_1764334(v7);
      operator delete();
    }
    uint64_t v8 = *(void *)(a1 + 280);
    if (v8)
    {
      sub_1764C90(v8);
      operator delete();
    }
    if (*(void *)(a1 + 288))
    {
      sub_12B5EB4();
      operator delete();
    }
    char v9 = *(void **)(a1 + 296);
    if (v9)
    {
      sub_1299EA4(v9);
      operator delete();
    }
    int v10 = *(void **)(a1 + 304);
    if (v10)
    {
      sub_1848204(v10);
      operator delete();
    }
    uint64_t v11 = *(void **)(a1 + 312);
    if (v11)
    {
      sub_12A7118(v11);
      operator delete();
    }
    uint64_t v12 = *(void *)(a1 + 320);
    if (v12)
    {
      sub_12BA86C(v12);
      operator delete();
    }
    int v13 = *(void **)(a1 + 328);
    if (v13)
    {
      sub_129AC40(v13);
      operator delete();
    }
    uint64_t v14 = *(void *)(a1 + 336);
    if (v14)
    {
      sub_184AFBC(v14);
      operator delete();
    }
    int v15 = *(void **)(a1 + 344);
    if (v15)
    {
      sub_14823C4(v15);
      operator delete();
    }
    uint64_t v16 = *(void *)(a1 + 352);
    if (v16)
    {
      sub_179F8E0(v16);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 360);
    if (result)
    {
      sub_129A550(result);
      operator delete();
    }
  }
  return result;
}

void sub_179BB50(void *a1)
{
  sub_179B820(a1);

  operator delete();
}

uint64_t sub_179BB88(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_1792958(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_12A181C(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 104);
  if ((int)v9 >= 1)
  {
    int v10 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = (uint64_t)sub_1793FF0(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 104) = 0;
  }
  uint64_t v12 = *(unsigned int *)(a1 + 128);
  if ((int)v12 >= 1)
  {
    int v13 = (uint64_t *)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v14 = *v13++;
      uint64_t result = sub_179A5C8(v14);
      --v12;
    }
    while (v12);
    *(_DWORD *)(a1 + 128) = 0;
  }
  uint64_t v15 = *(unsigned int *)(a1 + 152);
  if ((int)v15 >= 1)
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 160) + 8);
    do
    {
      uint64_t v17 = *v16++;
      uint64_t result = sub_12A102C(v17);
      --v15;
    }
    while (v15);
    *(_DWORD *)(a1 + 152) = 0;
  }
  uint64_t v18 = *(unsigned int *)(a1 + 176);
  if ((int)v18 >= 1)
  {
    uint64_t v19 = (uint64_t *)(*(void *)(a1 + 184) + 8);
    do
    {
      uint64_t v20 = *v19++;
      uint64_t result = sub_1296FFC(v20);
      --v18;
    }
    while (v18);
    *(_DWORD *)(a1 + 176) = 0;
  }
  uint64_t v21 = *(unsigned int *)(a1 + 200);
  if ((int)v21 >= 1)
  {
    unint64_t v22 = (unsigned char **)(*(void *)(a1 + 208) + 8);
    do
    {
      int v23 = *v22++;
      uint64_t result = (uint64_t)sub_12A2DEC(v23);
      --v21;
    }
    while (v21);
    *(_DWORD *)(a1 + 200) = 0;
  }
  uint64_t v24 = *(unsigned int *)(a1 + 224);
  if ((int)v24 >= 1)
  {
    int v25 = (uint64_t *)(*(void *)(a1 + 232) + 8);
    do
    {
      uint64_t v26 = *v25++;
      uint64_t result = sub_12997A8(v26);
      --v24;
    }
    while (v24);
    *(_DWORD *)(a1 + 224) = 0;
  }
  int v27 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v27) {
    goto LABEL_52;
  }
  if (v27)
  {
    unint64_t v28 = *(void *)(a1 + 240) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v28 + 23) < 0)
    {
      **(unsigned char **)unint64_t v28 = 0;
      *(void *)(v28 + 8) = 0;
      if ((v27 & 2) != 0) {
        goto LABEL_43;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v28 = 0;
      *(unsigned char *)(v28 + 23) = 0;
      if ((v27 & 2) != 0) {
        goto LABEL_43;
      }
    }
LABEL_36:
    if ((v27 & 4) == 0) {
      goto LABEL_37;
    }
    goto LABEL_44;
  }
  if ((v27 & 2) == 0) {
    goto LABEL_36;
  }
LABEL_43:
  uint64_t result = (uint64_t)sub_15B16B4(*(unsigned char **)(a1 + 248));
  if ((v27 & 4) == 0)
  {
LABEL_37:
    if ((v27 & 8) == 0) {
      goto LABEL_47;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = sub_12A181C(*(void *)(a1 + 256));
  if ((v27 & 8) == 0) {
    goto LABEL_47;
  }
LABEL_45:
  uint64_t v29 = *(void *)(a1 + 264);
  char v30 = *(unsigned char *)(v29 + 8);
  uint64_t result = v29 + 8;
  *(_WORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v30) {
    uint64_t result = sub_188B4AC((uint64_t *)result);
  }
LABEL_47:
  if ((v27 & 0x10) == 0)
  {
    if ((v27 & 0x20) == 0) {
      goto LABEL_49;
    }
LABEL_71:
    uint64_t result = sub_17644B0(*(void *)(a1 + 280));
    if ((v27 & 0x40) == 0)
    {
LABEL_50:
      if ((v27 & 0x80) == 0) {
        goto LABEL_52;
      }
      goto LABEL_51;
    }
    goto LABEL_72;
  }
  uint64_t result = sub_176443C(*(void *)(a1 + 272));
  if ((v27 & 0x20) != 0) {
    goto LABEL_71;
  }
LABEL_49:
  if ((v27 & 0x40) == 0) {
    goto LABEL_50;
  }
LABEL_72:
  uint64_t result = sub_12B5EF0(*(void *)(a1 + 288));
  if ((v27 & 0x80) != 0) {
LABEL_51:
  }
    uint64_t result = sub_1299EE0(*(void *)(a1 + 296));
LABEL_52:
  if ((v27 & 0xFF00) == 0) {
    goto LABEL_62;
  }
  if ((v27 & 0x100) != 0)
  {
    uint64_t result = sub_179ACBC(*(void *)(a1 + 304));
    if ((v27 & 0x200) == 0)
    {
LABEL_55:
      if ((v27 & 0x400) == 0) {
        goto LABEL_56;
      }
      goto LABEL_76;
    }
  }
  else if ((v27 & 0x200) == 0)
  {
    goto LABEL_55;
  }
  uint64_t result = (uint64_t)sub_12A7154(*(unsigned char **)(a1 + 312));
  if ((v27 & 0x400) == 0)
  {
LABEL_56:
    if ((v27 & 0x800) == 0) {
      goto LABEL_57;
    }
    goto LABEL_77;
  }
LABEL_76:
  uint64_t result = sub_12BA8A8(*(void *)(a1 + 320));
  if ((v27 & 0x800) == 0)
  {
LABEL_57:
    if ((v27 & 0x1000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_78;
  }
LABEL_77:
  uint64_t result = (uint64_t)sub_129AC7C(*(void *)(a1 + 328));
  if ((v27 & 0x1000) == 0)
  {
LABEL_58:
    if ((v27 & 0x2000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_79;
  }
LABEL_78:
  uint64_t result = (uint64_t)sub_16CD894(*(void *)(a1 + 336));
  if ((v27 & 0x2000) == 0)
  {
LABEL_59:
    if ((v27 & 0x4000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_80;
  }
LABEL_79:
  uint64_t result = sub_1482400(*(void *)(a1 + 344));
  if ((v27 & 0x4000) == 0)
  {
LABEL_60:
    if ((v27 & 0x8000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_61;
  }
LABEL_80:
  uint64_t result = sub_179BE98(*(void *)(a1 + 352));
  if ((v27 & 0x8000) != 0) {
LABEL_61:
  }
    uint64_t result = sub_129A58C(*(void *)(a1 + 360));
LABEL_62:
  if ((v27 & 0xFF0000) != 0)
  {
    *(void *)(a1 + 368) = 0;
    *(void *)(a1 + 376) = 0;
    *(_DWORD *)(a1 + 384) = 0;
  }
  if ((v27 & 0x3000000) != 0)
  {
    *(_DWORD *)(a1 + 388) = 10;
    *(unsigned char *)(a1 + 392) = 1;
  }
  char v32 = *(unsigned char *)(a1 + 8);
  uint64_t v31 = a1 + 8;
  *(_DWORD *)(v31 + 32) = 0;
  if (v32)
  {
    return sub_188B4AC((uint64_t *)v31);
  }
  return result;
}

uint64_t sub_179BE98(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)unint64_t v2 = 0;
        *(void *)(v2 + 8) = 0;
        if ((v1 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  if ((v1 & 0xC) != 0) {
    *(void *)(a1 + 40) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_179BF20(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v150 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v150, a3[11].i32[1]))
  {
    int v149 = 0;
    goto LABEL_3;
  }
  int v149 = 0;
  int v147 = (uint64_t *)(a1 + 8);
  unint64_t v148 = (uint64_t *)(a1 + 216);
  while (2)
  {
    uint64_t v6 = (unsigned __int8 *)(*(void *)v150 + 1);
    unsigned int v7 = **(unsigned char **)v150;
    if ((char)**(unsigned char **)v150 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if ((char)*v6 < 0)
      {
        uint64_t v6 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v150, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = (unsigned __int8 *)(*(void *)v150 + 2);
      }
    }
    *(void *)uint64_t v150 = v6;
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 10) {
          goto LABEL_240;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v10 = *(void *)(a1 + 248);
        if (!v10)
        {
          uint64_t v11 = (void *)(*v147 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v147) {
            uint64_t v11 = (void *)*v11;
          }
          uint64_t v10 = sub_15C19EC((uint64_t)v11);
          *(void *)(a1 + 248) = v10;
          uint64_t v6 = *(unsigned __int8 **)v150;
        }
        uint64_t v12 = (uint64_t)sub_11E1C60(a3, v10, v6);
        goto LABEL_249;
      case 2u:
        if (v7 != 18) {
          goto LABEL_240;
        }
        int v13 = (char *)(v6 - 1);
        while (1)
        {
          uint64_t v14 = (unsigned __int8 *)(v13 + 1);
          *(void *)uint64_t v150 = v13 + 1;
          uint64_t v15 = *(_DWORD **)(a1 + 64);
          if (v15 && (uint64_t v16 = *(int *)(a1 + 56), (int)v16 < *v15))
          {
            *(_DWORD *)(a1 + 56) = v16 + 1;
            uint64_t v17 = *(void *)&v15[2 * v16 + 2];
          }
          else
          {
            uint64_t v18 = sub_1830344(*(void *)(a1 + 48));
            uint64_t v17 = sub_188CDC8(a1 + 48, v18);
            uint64_t v14 = *(unsigned __int8 **)v150;
          }
          int v13 = sub_179CFFC(a3, v17, v14);
          *(void *)uint64_t v150 = v13;
          if (!v13) {
            goto LABEL_288;
          }
          if (*(void *)a3 <= (unint64_t)v13 || *v13 != 18) {
            goto LABEL_250;
          }
        }
      case 3u:
        if (v7 != 24) {
          goto LABEL_240;
        }
        v149 |= 0x40000u;
        uint64_t v19 = (char *)(v6 + 1);
        uint64_t v20 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v21 = *v19;
        uint64_t v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v128 = sub_188C138((uint64_t)v6, v20);
          *(void *)uint64_t v150 = v128;
          *(unsigned char *)(a1 + 376) = v129 != 0;
          if (!v128) {
            goto LABEL_288;
          }
        }
        else
        {
          uint64_t v19 = (char *)(v6 + 2);
LABEL_30:
          *(void *)uint64_t v150 = v19;
          *(unsigned char *)(a1 + 376) = v20 != 0;
        }
        goto LABEL_250;
      case 4u:
        if (v7 != 34) {
          goto LABEL_240;
        }
        unint64_t v22 = v6 - 1;
        while (1)
        {
          int v23 = v22 + 1;
          *(void *)uint64_t v150 = v22 + 1;
          uint64_t v24 = *(_DWORD **)(a1 + 88);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 80), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 80) = v25 + 1;
            uint64_t v26 = *(void *)&v24[2 * v25 + 2];
          }
          else
          {
            int v27 = sub_12BBBC8(*(void *)(a1 + 72));
            uint64_t v26 = sub_188CDC8(a1 + 72, (uint64_t)v27);
            int v23 = *(unsigned __int8 **)v150;
          }
          unint64_t v22 = (unsigned __int8 *)sub_12B117C(a3, v26, v23);
          *(void *)uint64_t v150 = v22;
          if (!v22) {
            goto LABEL_288;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 34) {
            goto LABEL_250;
          }
        }
      case 5u:
        if (v7 != 40) {
          goto LABEL_240;
        }
        unint64_t v28 = (char *)(v6 + 1);
        unint64_t v29 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_45;
        }
        int v30 = *v28;
        int v31 = v29 + (v30 << 7);
        unint64_t v29 = (v31 - 128);
        if (v30 < 0)
        {
          *(void *)uint64_t v150 = sub_188C138((uint64_t)v6, (v31 - 128));
          if (!*(void *)v150) {
            goto LABEL_288;
          }
          unint64_t v29 = v130;
        }
        else
        {
          unint64_t v28 = (char *)(v6 + 2);
LABEL_45:
          *(void *)uint64_t v150 = v28;
        }
        if (v29 <= 4)
        {
          *(_DWORD *)(a1 + 40) |= 0x10000u;
          *(_DWORD *)(a1 + 368) = v29;
          goto LABEL_250;
        }
        if (*v147) {
          v145 = (std::string *)((*v147 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v145 = (std::string *)sub_188DBD8(v147);
        }
        int v146 = 5;
        goto LABEL_281;
      case 6u:
        if (v7 != 50) {
          goto LABEL_240;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v32 = *(void *)(a1 + 8);
        int v33 = (uint64_t *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
        if (v32) {
          int v33 = (uint64_t *)*v33;
        }
        uint64_t v34 = (std::string *)sub_1880F84((void *)(a1 + 240), v33);
        uint64_t v12 = (uint64_t)sub_188C244(v34, *(char **)v150, (uint64_t)a3);
        goto LABEL_249;
      case 7u:
        if (v7 != 58) {
          goto LABEL_240;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        int v35 = *(void **)(a1 + 256);
        if (!v35)
        {
          uint64_t v36 = (void *)(*v147 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v147) {
            uint64_t v36 = (void *)*v36;
          }
          int v35 = sub_12BBBC8((uint64_t)v36);
          *(void *)(a1 + 256) = v35;
          uint64_t v6 = *(unsigned __int8 **)v150;
        }
        uint64_t v12 = sub_12B117C(a3, (uint64_t)v35, v6);
        goto LABEL_249;
      case 8u:
        if (v7 != 66) {
          goto LABEL_240;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v37 = *(void *)(a1 + 264);
        if (!v37)
        {
          int v38 = (void *)(*v147 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v147) {
            int v38 = (void *)*v38;
          }
          uint64_t v37 = sub_18305D4((uint64_t)v38);
          *(void *)(a1 + 264) = v37;
          uint64_t v6 = *(unsigned __int8 **)v150;
        }
        uint64_t v12 = (uint64_t)sub_179D08C(a3, v37, v6);
        goto LABEL_249;
      case 9u:
        if (v7 != 74) {
          goto LABEL_240;
        }
        uint64_t v39 = (char *)(v6 - 1);
        while (1)
        {
          int v40 = (unsigned __int8 *)(v39 + 1);
          *(void *)uint64_t v150 = v39 + 1;
          uint64_t v41 = *(_DWORD **)(a1 + 112);
          if (v41 && (uint64_t v42 = *(int *)(a1 + 104), (int)v42 < *v41))
          {
            *(_DWORD *)(a1 + 104) = v42 + 1;
            uint64_t v43 = *(void *)&v41[2 * v42 + 2];
          }
          else
          {
            uint64_t v44 = sub_1830494(*(void *)(a1 + 96));
            uint64_t v43 = sub_188CDC8(a1 + 96, (uint64_t)v44);
            int v40 = *(unsigned __int8 **)v150;
          }
          uint64_t v39 = sub_14F0B44(a3, v43, v40);
          *(void *)uint64_t v150 = v39;
          if (!v39) {
            goto LABEL_288;
          }
          if (*(void *)a3 <= (unint64_t)v39 || *v39 != 74) {
            goto LABEL_250;
          }
        }
      case 0xAu:
        if (v7 != 82) {
          goto LABEL_240;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v45 = *(void *)(a1 + 272);
        if (!v45)
        {
          int v46 = (void *)(*v147 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v147) {
            int v46 = (void *)*v46;
          }
          uint64_t v45 = sub_178CE04((uint64_t)v46);
          *(void *)(a1 + 272) = v45;
          uint64_t v6 = *(unsigned __int8 **)v150;
        }
        uint64_t v12 = (uint64_t)sub_1317850(a3, v45, v6);
        goto LABEL_249;
      case 0xBu:
        if (v7 != 90) {
          goto LABEL_240;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        uint64_t v47 = *(void **)(a1 + 280);
        if (!v47)
        {
          long long v48 = (void *)(*v147 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v147) {
            long long v48 = (void *)*v48;
          }
          uint64_t v47 = sub_178CE84((uint64_t)v48);
          *(void *)(a1 + 280) = v47;
          uint64_t v6 = *(unsigned __int8 **)v150;
        }
        uint64_t v12 = sub_129757C(a3, (uint64_t)v47, v6);
        goto LABEL_249;
      case 0xCu:
        if (v7 != 98) {
          goto LABEL_240;
        }
        unint64_t v49 = v6 - 1;
        while (1)
        {
          uint64_t v50 = v49 + 1;
          *(void *)uint64_t v150 = v49 + 1;
          uint64_t v51 = *(_DWORD **)(a1 + 136);
          if (v51 && (uint64_t v52 = *(int *)(a1 + 128), (int)v52 < *v51))
          {
            *(_DWORD *)(a1 + 128) = v52 + 1;
            uint64_t v53 = *(void *)&v51[2 * v52 + 2];
          }
          else
          {
            uint64_t v54 = sub_1830650(*(void *)(a1 + 120));
            uint64_t v53 = sub_188CDC8(a1 + 120, v54);
            uint64_t v50 = *(unsigned __int8 **)v150;
          }
          unint64_t v49 = (unsigned __int8 *)sub_179D11C(a3, v53, v50);
          *(void *)uint64_t v150 = v49;
          if (!v49) {
            goto LABEL_288;
          }
          if (*(void *)a3 <= (unint64_t)v49 || *v49 != 98) {
            goto LABEL_250;
          }
        }
      case 0xDu:
        if (v7 != 104) {
          goto LABEL_240;
        }
        v149 |= 0x80000u;
        uint64_t v55 = (char *)(v6 + 1);
        uint64_t v56 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_100;
        }
        int v57 = *v55;
        uint64_t v56 = v56 + (v57 << 7) - 128;
        if (v57 < 0)
        {
          uint64_t v131 = sub_188C138((uint64_t)v6, v56);
          *(void *)uint64_t v150 = v131;
          *(unsigned char *)(a1 + 377) = v132 != 0;
          if (!v131) {
            goto LABEL_288;
          }
        }
        else
        {
          uint64_t v55 = (char *)(v6 + 2);
LABEL_100:
          *(void *)uint64_t v150 = v55;
          *(unsigned char *)(a1 + 377) = v56 != 0;
        }
        goto LABEL_250;
      case 0xEu:
        if (v7 != 112) {
          goto LABEL_240;
        }
        v149 |= 0x1000000u;
        uint64_t v58 = (char *)(v6 + 1);
        int v59 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_105;
        }
        int v60 = *v58;
        int v59 = v59 + (v60 << 7) - 128;
        if (v60 < 0)
        {
          uint64_t v133 = sub_188C0D0((uint64_t)v6, v59);
          *(void *)uint64_t v150 = v133;
          *(_DWORD *)(a1 + 388) = v134;
          if (!v133) {
            goto LABEL_288;
          }
        }
        else
        {
          uint64_t v58 = (char *)(v6 + 2);
LABEL_105:
          *(void *)uint64_t v150 = v58;
          *(_DWORD *)(a1 + 388) = v59;
        }
        goto LABEL_250;
      case 0xFu:
        if (v7 != 120) {
          goto LABEL_240;
        }
        v149 |= 0x2000000u;
        uint64_t v61 = (char *)(v6 + 1);
        uint64_t v62 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_110;
        }
        int v63 = *v61;
        uint64_t v62 = v62 + (v63 << 7) - 128;
        if (v63 < 0)
        {
          uint64_t v135 = sub_188C138((uint64_t)v6, v62);
          *(void *)uint64_t v150 = v135;
          *(unsigned char *)(a1 + 392) = v136 != 0;
          if (!v135) {
            goto LABEL_288;
          }
        }
        else
        {
          uint64_t v61 = (char *)(v6 + 2);
LABEL_110:
          *(void *)uint64_t v150 = v61;
          *(unsigned char *)(a1 + 392) = v62 != 0;
        }
        goto LABEL_250;
      case 0x10u:
        if (v7 != 128) {
          goto LABEL_240;
        }
        v149 |= 0x20000u;
        uint64_t v64 = (char *)(v6 + 1);
        int v65 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_115;
        }
        int v66 = *v64;
        int v65 = v65 + (v66 << 7) - 128;
        if (v66 < 0)
        {
          uint64_t v137 = sub_188C0D0((uint64_t)v6, v65);
          *(void *)uint64_t v150 = v137;
          *(_DWORD *)(a1 + 372) = v138;
          if (!v137) {
            goto LABEL_288;
          }
        }
        else
        {
          uint64_t v64 = (char *)(v6 + 2);
LABEL_115:
          *(void *)uint64_t v150 = v64;
          *(_DWORD *)(a1 + 372) = v65;
        }
        goto LABEL_250;
      case 0x11u:
        if (v7 != 138) {
          goto LABEL_240;
        }
        uint64_t v67 = v6 - 2;
        while (1)
        {
          uint64_t v68 = v67 + 2;
          *(void *)uint64_t v150 = v67 + 2;
          uint64_t v69 = *(_DWORD **)(a1 + 160);
          if (v69 && (uint64_t v70 = *(int *)(a1 + 152), (int)v70 < *v69))
          {
            *(_DWORD *)(a1 + 152) = v70 + 1;
            uint64_t v71 = *(void *)&v69[2 * v70 + 2];
          }
          else
          {
            uint64_t v72 = sub_12BBB40(*(void *)(a1 + 144));
            uint64_t v71 = sub_188CDC8(a1 + 144, v72);
            uint64_t v68 = *(unsigned __int8 **)v150;
          }
          uint64_t v67 = (unsigned __int8 *)sub_120AA94(a3, v71, v68);
          *(void *)uint64_t v150 = v67;
          if (!v67) {
            goto LABEL_288;
          }
          if (*(void *)a3 <= (unint64_t)v67 || *(_WORD *)v67 != 394) {
            goto LABEL_250;
          }
        }
      case 0x12u:
        if (v7 != 146) {
          goto LABEL_240;
        }
        uint64_t v73 = v6 - 2;
        while (1)
        {
          uint64_t v74 = v73 + 2;
          *(void *)uint64_t v150 = v73 + 2;
          uint64_t v75 = *(_DWORD **)(a1 + 184);
          if (v75 && (uint64_t v76 = *(int *)(a1 + 176), (int)v76 < *v75))
          {
            *(_DWORD *)(a1 + 176) = v76 + 1;
            uint64_t v77 = *(void *)&v75[2 * v76 + 2];
          }
          else
          {
            uint64_t v78 = sub_129E4E4(*(void *)(a1 + 168));
            uint64_t v77 = sub_188CDC8(a1 + 168, (uint64_t)v78);
            uint64_t v74 = *(unsigned __int8 **)v150;
          }
          uint64_t v73 = (unsigned __int8 *)sub_179D1AC(a3, v77, v74);
          *(void *)uint64_t v150 = v73;
          if (!v73) {
            goto LABEL_288;
          }
          if (*(void *)a3 <= (unint64_t)v73 || *(_WORD *)v73 != 402) {
            goto LABEL_250;
          }
        }
      case 0x13u:
        if (v7 != 154) {
          goto LABEL_240;
        }
        uint64_t v79 = v6 - 2;
        while (1)
        {
          int v80 = v79 + 2;
          *(void *)uint64_t v150 = v79 + 2;
          uint64_t v81 = *(_DWORD **)(a1 + 208);
          if (v81 && (uint64_t v82 = *(int *)(a1 + 200), (int)v82 < *v81))
          {
            *(_DWORD *)(a1 + 200) = v82 + 1;
            uint64_t v83 = *(void *)&v81[2 * v82 + 2];
          }
          else
          {
            uint64_t v84 = sub_12BBDA0(*(void *)(a1 + 192));
            uint64_t v83 = sub_188CDC8(a1 + 192, (uint64_t)v84);
            int v80 = *(unsigned __int8 **)v150;
          }
          uint64_t v79 = (unsigned __int8 *)sub_12B6EC4(a3, v83, v80);
          *(void *)uint64_t v150 = v79;
          if (!v79) {
            goto LABEL_288;
          }
          if (*(void *)a3 <= (unint64_t)v79 || *(_WORD *)v79 != 410) {
            goto LABEL_250;
          }
        }
      case 0x14u:
        if (v7 != 162) {
          goto LABEL_240;
        }
        unint64_t v85 = (char *)(v6 - 2);
        while (1)
        {
          int v86 = (unsigned __int8 *)(v85 + 2);
          *(void *)uint64_t v150 = v85 + 2;
          uint64_t v87 = *(_DWORD **)(a1 + 232);
          if (v87 && (uint64_t v88 = *(int *)(a1 + 224), (int)v88 < *v87))
          {
            *(_DWORD *)(a1 + 224) = v88 + 1;
            uint64_t v89 = *(void *)&v87[2 * v88 + 2];
          }
          else
          {
            uint64_t v90 = sub_129E6C4(*v148);
            uint64_t v89 = sub_188CDC8((uint64_t)v148, v90);
            int v86 = *(unsigned __int8 **)v150;
          }
          unint64_t v85 = sub_1541068(a3, v89, v86);
          *(void *)uint64_t v150 = v85;
          if (!v85) {
            goto LABEL_288;
          }
          if (*(void *)a3 <= (unint64_t)v85 || *(_WORD *)v85 != 418) {
            goto LABEL_250;
          }
        }
      case 0x15u:
        if (v7 != 170) {
          goto LABEL_240;
        }
        *(_DWORD *)(a1 + 40) |= 0x40u;
        uint64_t v91 = *(void *)(a1 + 288);
        if (!v91)
        {
          uint64_t v92 = (void *)(*v147 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v147) {
            uint64_t v92 = (void *)*v92;
          }
          sub_12BCD00((uint64_t)v92);
          uint64_t v91 = v93;
          *(void *)(a1 + 288) = v93;
          uint64_t v6 = *(unsigned __int8 **)v150;
        }
        uint64_t v12 = (uint64_t)sub_1208B38(a3, v91, v6);
        goto LABEL_249;
      case 0x16u:
        if (v7 != 178) {
          goto LABEL_240;
        }
        *(_DWORD *)(a1 + 40) |= 0x80u;
        uint64_t v94 = *(void *)(a1 + 296);
        if (!v94)
        {
          char v95 = (void *)(*v147 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v147) {
            char v95 = (void *)*v95;
          }
          sub_129E740((uint64_t)v95);
          uint64_t v94 = v96;
          *(void *)(a1 + 296) = v96;
          uint64_t v6 = *(unsigned __int8 **)v150;
        }
        uint64_t v12 = (uint64_t)sub_179D23C(a3, v94, v6);
        goto LABEL_249;
      case 0x17u:
        if (v7 != 186) {
          goto LABEL_240;
        }
        *(_DWORD *)(a1 + 40) |= 0x100u;
        uint64_t v97 = *(void *)(a1 + 304);
        if (!v97)
        {
          v98 = (void *)(*v147 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v147) {
            v98 = (void *)*v98;
          }
          uint64_t v97 = sub_1849FB4((uint64_t)v98);
          *(void *)(a1 + 304) = v97;
          uint64_t v6 = *(unsigned __int8 **)v150;
        }
        uint64_t v12 = (uint64_t)sub_12BAFE4(a3, v97, v6);
        goto LABEL_249;
      case 0x18u:
        if (v7 != 194) {
          goto LABEL_240;
        }
        *(_DWORD *)(a1 + 40) |= 0x200u;
        uint64_t v99 = *(void *)(a1 + 312);
        if (!v99)
        {
          unsigned int v100 = (void *)(*v147 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v147) {
            unsigned int v100 = (void *)*v100;
          }
          uint64_t v99 = sub_12BC1AC((uint64_t)v100);
          *(void *)(a1 + 312) = v99;
          uint64_t v6 = *(unsigned __int8 **)v150;
        }
        uint64_t v12 = (uint64_t)sub_12B6F54(a3, v99, v6);
        goto LABEL_249;
      case 0x19u:
        if (v7 != 200) {
          goto LABEL_240;
        }
        v149 |= 0x100000u;
        uint64_t v101 = (char *)(v6 + 1);
        uint64_t v102 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_184;
        }
        int v103 = *v101;
        uint64_t v102 = v102 + (v103 << 7) - 128;
        if (v103 < 0)
        {
          uint64_t v139 = sub_188C138((uint64_t)v6, v102);
          *(void *)uint64_t v150 = v139;
          *(unsigned char *)(a1 + 378) = v140 != 0;
          if (!v139) {
            goto LABEL_288;
          }
        }
        else
        {
          uint64_t v101 = (char *)(v6 + 2);
LABEL_184:
          *(void *)uint64_t v150 = v101;
          *(unsigned char *)(a1 + 378) = v102 != 0;
        }
        goto LABEL_250;
      case 0x1Au:
        if (v7 != 208) {
          goto LABEL_240;
        }
        unint64_t v104 = (char *)(v6 + 1);
        unint64_t v29 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_189;
        }
        int v105 = *v104;
        int v106 = v29 + (v105 << 7);
        unint64_t v29 = (v106 - 128);
        if (v105 < 0)
        {
          *(void *)uint64_t v150 = sub_188C138((uint64_t)v6, (v106 - 128));
          if (!*(void *)v150) {
            goto LABEL_288;
          }
          unint64_t v29 = v141;
        }
        else
        {
          unint64_t v104 = (char *)(v6 + 2);
LABEL_189:
          *(void *)uint64_t v150 = v104;
        }
        if (sub_119BBA8(v29))
        {
          *(_DWORD *)(a1 + 40) |= 0x400000u;
          *(_DWORD *)(a1 + 380) = v29;
          goto LABEL_250;
        }
        if (*v147) {
          v145 = (std::string *)((*v147 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v145 = (std::string *)sub_188DBD8(v147);
        }
        int v146 = 26;
        goto LABEL_281;
      case 0x1Bu:
        if (v7 != 218) {
          goto LABEL_240;
        }
        *(_DWORD *)(a1 + 40) |= 0x400u;
        int v107 = *(void **)(a1 + 320);
        if (!v107)
        {
          uint64_t v108 = (void *)(*v147 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v147) {
            uint64_t v108 = (void *)*v108;
          }
          int v107 = sub_12BD16C((uint64_t)v108);
          *(void *)(a1 + 320) = v107;
          uint64_t v6 = *(unsigned __int8 **)v150;
        }
        uint64_t v12 = sub_179D2CC(a3, (uint64_t)v107, v6);
        goto LABEL_249;
      case 0x1Cu:
        if (v7 != 224) {
          goto LABEL_240;
        }
        v149 |= 0x200000u;
        uint64_t v109 = (char *)(v6 + 1);
        uint64_t v110 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_202;
        }
        int v111 = *v109;
        uint64_t v110 = v110 + (v111 << 7) - 128;
        if (v111 < 0)
        {
          uint64_t v142 = sub_188C138((uint64_t)v6, v110);
          *(void *)uint64_t v150 = v142;
          *(unsigned char *)(a1 + 379) = v143 != 0;
          if (!v142) {
            goto LABEL_288;
          }
        }
        else
        {
          uint64_t v109 = (char *)(v6 + 2);
LABEL_202:
          *(void *)uint64_t v150 = v109;
          *(unsigned char *)(a1 + 379) = v110 != 0;
        }
        goto LABEL_250;
      case 0x1Du:
        if (v7 != 234) {
          goto LABEL_240;
        }
        *(_DWORD *)(a1 + 40) |= 0x800u;
        uint64_t v112 = *(void *)(a1 + 328);
        if (!v112)
        {
          unint64_t v113 = (void *)(*v147 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v147) {
            unint64_t v113 = (void *)*v113;
          }
          uint64_t v112 = sub_129E840((uint64_t)v113);
          *(void *)(a1 + 328) = v112;
          uint64_t v6 = *(unsigned __int8 **)v150;
        }
        uint64_t v12 = (uint64_t)sub_17972B0(a3, v112, v6);
        goto LABEL_249;
      case 0x1Eu:
        if (v7 != 242) {
          goto LABEL_240;
        }
        *(_DWORD *)(a1 + 40) |= 0x1000u;
        uint64_t v114 = *(void *)(a1 + 336);
        if (!v114)
        {
          unsigned int v115 = (void *)(*v147 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v147) {
            unsigned int v115 = (void *)*v115;
          }
          uint64_t v114 = sub_185089C((uint64_t)v115);
          *(void *)(a1 + 336) = v114;
          uint64_t v6 = *(unsigned __int8 **)v150;
        }
        uint64_t v12 = (uint64_t)sub_12688D0(a3, v114, v6);
        goto LABEL_249;
      case 0x1Fu:
        if (v7 != 248) {
          goto LABEL_240;
        }
        int v116 = (char *)(v6 + 1);
        unint64_t v29 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_219;
        }
        int v117 = *v116;
        int v118 = v29 + (v117 << 7);
        unint64_t v29 = (v118 - 128);
        if (v117 < 0)
        {
          *(void *)uint64_t v150 = sub_188C138((uint64_t)v6, (v118 - 128));
          if (!*(void *)v150) {
            goto LABEL_288;
          }
          unint64_t v29 = v144;
        }
        else
        {
          int v116 = (char *)(v6 + 2);
LABEL_219:
          *(void *)uint64_t v150 = v116;
        }
        if (sub_15B077C(v29))
        {
          *(_DWORD *)(a1 + 40) |= 0x800000u;
          *(_DWORD *)(a1 + 384) = v29;
        }
        else
        {
          if (*v147) {
            v145 = (std::string *)((*v147 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v145 = (std::string *)sub_188DBD8(v147);
          }
          int v146 = 31;
LABEL_281:
          sub_188C020(v146, v29, v145);
        }
        goto LABEL_250;
      case 0x20u:
        if (v7 != 2) {
          goto LABEL_240;
        }
        *(_DWORD *)(a1 + 40) |= 0x2000u;
        uint64_t v119 = *(void *)(a1 + 344);
        if (!v119)
        {
          v120 = (void *)(*v147 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v147) {
            v120 = (void *)*v120;
          }
          uint64_t v119 = sub_1482774((uint64_t)v120);
          *(void *)(a1 + 344) = v119;
          uint64_t v6 = *(unsigned __int8 **)v150;
        }
        uint64_t v12 = (uint64_t)sub_179D35C(a3, v119, v6);
        goto LABEL_249;
      case 0x21u:
        if (v7 != 10) {
          goto LABEL_240;
        }
        *(_DWORD *)(a1 + 40) |= 0x4000u;
        uint64_t v121 = *(void **)(a1 + 352);
        if (!v121)
        {
          uint64_t v122 = (void *)(*v147 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v147) {
            uint64_t v122 = (void *)*v122;
          }
          uint64_t v121 = sub_1830734((uint64_t)v122);
          *(void *)(a1 + 352) = v121;
          uint64_t v6 = *(unsigned __int8 **)v150;
        }
        uint64_t v12 = sub_179D3EC(a3, (uint64_t)v121, v6);
        goto LABEL_249;
      case 0x22u:
        if (v7 != 18) {
          goto LABEL_240;
        }
        *(_DWORD *)(a1 + 40) |= 0x8000u;
        uint64_t v123 = *(void *)(a1 + 360);
        if (!v123)
        {
          v124 = (void *)(*v147 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v147) {
            v124 = (void *)*v124;
          }
          sub_129E7C0((uint64_t)v124);
          uint64_t v123 = v125;
          *(void *)(a1 + 360) = v125;
          uint64_t v6 = *(unsigned __int8 **)v150;
        }
        uint64_t v12 = (uint64_t)sub_179D47C(a3, v123, v6);
        goto LABEL_249;
      default:
LABEL_240:
        if (v7) {
          BOOL v126 = (v7 & 7) == 4;
        }
        else {
          BOOL v126 = 1;
        }
        if (!v126)
        {
          if (v7 - 800 > 0x31F)
          {
            if (*v147)
            {
              uint64_t v127 = (std::string *)((*v147 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v127 = (std::string *)sub_188DBD8(v147);
              uint64_t v6 = *(unsigned __int8 **)v150;
            }
            uint64_t v12 = (uint64_t)sub_1885AC0(v7, v127, (char *)v6, a3);
          }
          else
          {
            uint64_t v12 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v7, (char *)v6, (uint64_t)&off_2549AE8, v147, a3);
          }
LABEL_249:
          *(void *)uint64_t v150 = v12;
          if (!v12) {
            goto LABEL_288;
          }
LABEL_250:
          if (sub_11947B8((uint64_t)a3, (char **)v150, a3[11].i32[1])) {
            goto LABEL_3;
          }
          continue;
        }
        if (v6) {
          a3[10].i32[0] = v7 - 1;
        }
        else {
LABEL_288:
        }
          *(void *)uint64_t v150 = 0;
LABEL_3:
        *(_DWORD *)(a1 + 40) |= v149;
        return *(void *)v150;
    }
  }
}

char *sub_179CFFC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17929D4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_179D08C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_179A128(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_179D11C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_179A660(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_179D1AC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1297140(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_179D23C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1299F0C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_179D2CC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12BA9A8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_179D35C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1482418(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_179D3EC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_179F9D0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_179D47C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_129A5B8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_179D50C(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 248);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_15B1A68(v7, (unint64_t)v9, a3);
  }
  int v10 = *(_DWORD *)(a1 + 56);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 40);
      v4[1] = v13;
      if (v13 > 0x7F) {
        uint64_t v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        uint64_t v14 = v4 + 2;
      }
      uint64_t v4 = sub_1792B74(v12, v14, a3);
    }
  }
  if ((v6 & 0x40000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v15 = *(unsigned char *)(a1 + 376);
    *uint64_t v4 = 24;
    v4[1] = v15;
    v4 += 2;
  }
  int v16 = *(_DWORD *)(a1 + 80);
  if (v16)
  {
    for (int j = 0; j != v16; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *uint64_t v4 = 34;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      v4[1] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, v4 + 1);
      }
      else {
        uint64_t v20 = v4 + 2;
      }
      uint64_t v4 = sub_12A1AC4(v18, v20, a3);
    }
  }
  if ((v6 & 0x10000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v21 = *(int *)(a1 + 368);
    *uint64_t v4 = 40;
    v4[1] = v21;
    if (v21 > 0x7F)
    {
      v4[1] = v21 | 0x80;
      unint64_t v22 = v21 >> 7;
      v4[2] = v21 >> 7;
      v4 += 3;
      if (v21 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v23 = v22 >> 14;
          v22 >>= 7;
          *v4++ = v22;
        }
        while (v23);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 240) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 4) == 0)
    {
LABEL_37:
      if ((v6 & 8) == 0) {
        goto LABEL_52;
      }
      goto LABEL_46;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_37;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v24 = *(void *)(a1 + 256);
  *uint64_t v4 = 58;
  unsigned int v25 = *(_DWORD *)(v24 + 20);
  v4[1] = v25;
  if (v25 > 0x7F) {
    uint64_t v26 = sub_188A9CC(v25, v4 + 1);
  }
  else {
    uint64_t v26 = v4 + 2;
  }
  uint64_t v4 = sub_12A1AC4(v24, v26, a3);
  if ((v6 & 8) != 0)
  {
LABEL_46:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v27 = *(void *)(a1 + 264);
    *uint64_t v4 = 66;
    unsigned int v28 = *(_DWORD *)(v27 + 20);
    v4[1] = v28;
    if (v28 > 0x7F) {
      unint64_t v29 = sub_188A9CC(v28, v4 + 1);
    }
    else {
      unint64_t v29 = v4 + 2;
    }
    uint64_t v4 = sub_179A338(v27, (unint64_t)v29, a3);
  }
LABEL_52:
  int v30 = *(_DWORD *)(a1 + 104);
  if (v30)
  {
    for (int k = 0; k != v30; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v32 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      *uint64_t v4 = 74;
      unsigned int v33 = *(_DWORD *)(v32 + 44);
      v4[1] = v33;
      if (v33 > 0x7F) {
        uint64_t v34 = sub_188A9CC(v33, v4 + 1);
      }
      else {
        uint64_t v34 = v4 + 2;
      }
      uint64_t v4 = sub_1794360(v32, v34, a3);
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v35 = *(void *)(a1 + 272);
    *uint64_t v4 = 82;
    unsigned int v36 = *(_DWORD *)(v35 + 20);
    v4[1] = v36;
    if (v36 > 0x7F) {
      uint64_t v37 = sub_188A9CC(v36, v4 + 1);
    }
    else {
      uint64_t v37 = v4 + 2;
    }
    uint64_t v4 = sub_1764760(v35, (unint64_t)v37, a3);
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v38 = *(void *)(a1 + 280);
    *uint64_t v4 = 90;
    unsigned int v39 = *(_DWORD *)(v38 + 20);
    v4[1] = v39;
    if (v39 > 0x7F) {
      int v40 = sub_188A9CC(v39, v4 + 1);
    }
    else {
      int v40 = v4 + 2;
    }
    uint64_t v4 = sub_1764FF8(v38, v40, a3);
  }
  int v41 = *(_DWORD *)(a1 + 128);
  if (v41)
  {
    for (int m = 0; m != v41; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v43 = *(void *)(*(void *)(a1 + 136) + 8 * m + 8);
      *uint64_t v4 = 98;
      unsigned int v44 = *(_DWORD *)(v43 + 20);
      v4[1] = v44;
      if (v44 > 0x7F) {
        uint64_t v45 = sub_188A9CC(v44, v4 + 1);
      }
      else {
        uint64_t v45 = v4 + 2;
      }
      uint64_t v4 = sub_179A8C8(v43, (unint64_t)v45, a3);
    }
  }
  if ((v6 & 0x80000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v46 = *(unsigned char *)(a1 + 377);
    *uint64_t v4 = 104;
    v4[1] = v46;
    v4 += 2;
  }
  if ((v6 & 0x1000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v47 = *(_DWORD *)(a1 + 388);
    *uint64_t v4 = 112;
    v4[1] = v47;
    if (v47 > 0x7F)
    {
      v4[1] = v47 | 0x80;
      unsigned int v48 = v47 >> 7;
      v4[2] = v47 >> 7;
      v4 += 3;
      if (v47 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v49 = v48 >> 14;
          v48 >>= 7;
          *v4++ = v48;
        }
        while (v49);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x2000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v50 = *(unsigned char *)(a1 + 392);
    *uint64_t v4 = 120;
    v4[1] = v50;
    v4 += 2;
  }
  if ((v6 & 0x20000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v51 = *(_DWORD *)(a1 + 372);
    *(_WORD *)uint64_t v4 = 384;
    v4[2] = v51;
    if (v51 > 0x7F)
    {
      v4[2] = v51 | 0x80;
      unsigned int v52 = v51 >> 7;
      v4[3] = v51 >> 7;
      v4 += 4;
      if (v51 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v53 = v52 >> 14;
          v52 >>= 7;
          *v4++ = v52;
        }
        while (v53);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  int v54 = *(_DWORD *)(a1 + 152);
  if (v54)
  {
    for (int n = 0; n != v54; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v56 = *(void *)(*(void *)(a1 + 160) + 8 * n + 8);
      *(_WORD *)uint64_t v4 = 394;
      unsigned int v57 = *(_DWORD *)(v56 + 20);
      v4[2] = v57;
      if (v57 > 0x7F) {
        uint64_t v58 = sub_188A9CC(v57, v4 + 2);
      }
      else {
        uint64_t v58 = v4 + 3;
      }
      uint64_t v4 = sub_12A12FC(v56, v58, a3);
    }
  }
  int v59 = *(_DWORD *)(a1 + 176);
  if (v59)
  {
    for (iint i = 0; ii != v59; ++ii)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v61 = *(void *)(*(void *)(a1 + 184) + 8 * ii + 8);
      *(_WORD *)uint64_t v4 = 402;
      unsigned int v62 = *(_DWORD *)(v61 + 20);
      v4[2] = v62;
      if (v62 > 0x7F) {
        int v63 = sub_188A9CC(v62, v4 + 2);
      }
      else {
        int v63 = v4 + 3;
      }
      uint64_t v4 = sub_129769C(v61, v63, a3);
    }
  }
  int v64 = *(_DWORD *)(a1 + 200);
  if (v64)
  {
    for (jint j = 0; jj != v64; ++jj)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v66 = *(void *)(*(void *)(a1 + 208) + 8 * jj + 8);
      *(_WORD *)uint64_t v4 = 410;
      unsigned int v67 = *(_DWORD *)(v66 + 20);
      v4[2] = v67;
      if (v67 > 0x7F) {
        uint64_t v68 = sub_188A9CC(v67, v4 + 2);
      }
      else {
        uint64_t v68 = v4 + 3;
      }
      uint64_t v4 = sub_12A3294(v66, v68, a3);
    }
  }
  int v69 = *(_DWORD *)(a1 + 224);
  if (v69)
  {
    for (kint k = 0; kk != v69; ++kk)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v71 = *(void *)(*(void *)(a1 + 232) + 8 * kk + 8);
      *(_WORD *)uint64_t v4 = 418;
      unsigned int v72 = *(_DWORD *)(v71 + 20);
      v4[2] = v72;
      if (v72 > 0x7F) {
        uint64_t v73 = sub_188A9CC(v72, v4 + 2);
      }
      else {
        uint64_t v73 = v4 + 3;
      }
      uint64_t v4 = sub_1299A68(v71, (unint64_t)v73, a3);
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v74 = *(void *)(a1 + 288);
    *(_WORD *)uint64_t v4 = 426;
    unsigned int v75 = *(_DWORD *)(v74 + 20);
    v4[2] = v75;
    if (v75 > 0x7F) {
      uint64_t v76 = sub_188A9CC(v75, v4 + 2);
    }
    else {
      uint64_t v76 = v4 + 3;
    }
    uint64_t v4 = sub_12B6340(v74, (unint64_t)v76, a3);
    if ((v6 & 0x80) == 0)
    {
LABEL_138:
      if ((v6 & 0x100) == 0) {
        goto LABEL_139;
      }
      goto LABEL_155;
    }
  }
  else if ((v6 & 0x80) == 0)
  {
    goto LABEL_138;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v77 = *(void *)(a1 + 296);
  *(_WORD *)uint64_t v4 = 434;
  unsigned int v78 = *(_DWORD *)(v77 + 20);
  v4[2] = v78;
  if (v78 > 0x7F) {
    uint64_t v79 = sub_188A9CC(v78, v4 + 2);
  }
  else {
    uint64_t v79 = v4 + 3;
  }
  uint64_t v4 = sub_129A128(v77, (unint64_t)v79, a3);
  if ((v6 & 0x100) == 0)
  {
LABEL_139:
    if ((v6 & 0x200) == 0) {
      goto LABEL_140;
    }
    goto LABEL_161;
  }
LABEL_155:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v80 = *(void *)(a1 + 304);
  *(_WORD *)uint64_t v4 = 442;
  unsigned int v81 = *(_DWORD *)(v80 + 20);
  v4[2] = v81;
  if (v81 > 0x7F) {
    uint64_t v82 = sub_188A9CC(v81, v4 + 2);
  }
  else {
    uint64_t v82 = v4 + 3;
  }
  uint64_t v4 = sub_18486D8(v80, (unint64_t)v82, a3);
  if ((v6 & 0x200) == 0)
  {
LABEL_140:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_141;
    }
    goto LABEL_167;
  }
LABEL_161:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v83 = *(void *)(a1 + 312);
  *(_WORD *)uint64_t v4 = 450;
  unsigned int v84 = *(_DWORD *)(v83 + 40);
  v4[2] = v84;
  if (v84 > 0x7F) {
    unint64_t v85 = sub_188A9CC(v84, v4 + 2);
  }
  else {
    unint64_t v85 = v4 + 3;
  }
  uint64_t v4 = sub_12A7400(v83, v85, a3);
  if ((v6 & 0x100000) == 0)
  {
LABEL_141:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_176;
    }
    goto LABEL_170;
  }
LABEL_167:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v86 = *(unsigned char *)(a1 + 378);
  *(_WORD *)uint64_t v4 = 456;
  v4[2] = v86;
  v4 += 3;
  if ((v6 & 0x400000) != 0)
  {
LABEL_170:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v87 = *(int *)(a1 + 380);
    *(_WORD *)uint64_t v4 = 464;
    v4[2] = v87;
    if (v87 > 0x7F)
    {
      v4[2] = v87 | 0x80;
      unint64_t v88 = v87 >> 7;
      v4[3] = v87 >> 7;
      v4 += 4;
      if (v87 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v89 = v88 >> 14;
          v88 >>= 7;
          *v4++ = v88;
        }
        while (v89);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_176:
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v90 = *(void *)(a1 + 320);
    *(_WORD *)uint64_t v4 = 474;
    unsigned int v91 = *(_DWORD *)(v90 + 20);
    v4[2] = v91;
    if (v91 > 0x7F) {
      uint64_t v92 = sub_188A9CC(v91, v4 + 2);
    }
    else {
      uint64_t v92 = v4 + 3;
    }
    uint64_t v4 = sub_12BB104(v90, v92, a3);
    if ((v6 & 0x200000) == 0)
    {
LABEL_178:
      if ((v6 & 0x800) == 0) {
        goto LABEL_179;
      }
      goto LABEL_191;
    }
  }
  else if ((v6 & 0x200000) == 0)
  {
    goto LABEL_178;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v93 = *(unsigned char *)(a1 + 379);
  *(_WORD *)uint64_t v4 = 480;
  v4[2] = v93;
  v4 += 3;
  if ((v6 & 0x800) == 0)
  {
LABEL_179:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_180;
    }
    goto LABEL_197;
  }
LABEL_191:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v94 = *(void *)(a1 + 328);
  *(_WORD *)uint64_t v4 = 490;
  unsigned int v95 = *(_DWORD *)(v94 + 40);
  v4[2] = v95;
  if (v95 > 0x7F) {
    uint64_t v96 = sub_188A9CC(v95, v4 + 2);
  }
  else {
    uint64_t v96 = v4 + 3;
  }
  uint64_t v4 = sub_129AE14(v94, v96, a3);
  if ((v6 & 0x1000) == 0)
  {
LABEL_180:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_209;
    }
    goto LABEL_203;
  }
LABEL_197:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v97 = *(void *)(a1 + 336);
  *(_WORD *)uint64_t v4 = 498;
  unsigned int v98 = *(_DWORD *)(v97 + 44);
  v4[2] = v98;
  if (v98 > 0x7F) {
    uint64_t v99 = sub_188A9CC(v98, v4 + 2);
  }
  else {
    uint64_t v99 = v4 + 3;
  }
  uint64_t v4 = sub_184B3AC(v97, v99, a3);
  if ((v6 & 0x800000) != 0)
  {
LABEL_203:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v100 = *(int *)(a1 + 384);
    *(_WORD *)uint64_t v4 = 504;
    v4[2] = v100;
    if (v100 > 0x7F)
    {
      v4[2] = v100 | 0x80;
      unint64_t v101 = v100 >> 7;
      v4[3] = v100 >> 7;
      v4 += 4;
      if (v100 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v102 = v101 >> 14;
          v101 >>= 7;
          *v4++ = v101;
        }
        while (v102);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_209:
  if ((v6 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v103 = *(void *)(a1 + 344);
    *(_WORD *)uint64_t v4 = 642;
    unsigned int v104 = *(_DWORD *)(v103 + 20);
    v4[2] = v104;
    if (v104 > 0x7F) {
      int v105 = sub_188A9CC(v104, v4 + 2);
    }
    else {
      int v105 = v4 + 3;
    }
    uint64_t v4 = sub_14825C0(v103, (unint64_t)v105, a3);
    if ((v6 & 0x4000) == 0)
    {
LABEL_211:
      if ((v6 & 0x8000) == 0) {
        goto LABEL_231;
      }
      goto LABEL_225;
    }
  }
  else if ((v6 & 0x4000) == 0)
  {
    goto LABEL_211;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v106 = *(void *)(a1 + 352);
  *(_WORD *)uint64_t v4 = 650;
  unsigned int v107 = *(_DWORD *)(v106 + 20);
  v4[2] = v107;
  if (v107 > 0x7F) {
    uint64_t v108 = sub_188A9CC(v107, v4 + 2);
  }
  else {
    uint64_t v108 = v4 + 3;
  }
  uint64_t v4 = sub_179FC7C(v106, v108, a3);
  if ((v6 & 0x8000) != 0)
  {
LABEL_225:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v109 = *(void *)(a1 + 360);
    *(_WORD *)uint64_t v4 = 658;
    unsigned int v110 = *(_DWORD *)(v109 + 20);
    v4[2] = v110;
    if (v110 > 0x7F) {
      int v111 = sub_188A9CC(v110, v4 + 2);
    }
    else {
      int v111 = v4 + 3;
    }
    uint64_t v4 = sub_129A7D4(v109, (unint64_t)v111, a3);
  }
LABEL_231:
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 100, 200, v4, a3);
  }
  uint64_t v112 = *(void *)(a1 + 8);
  if ((v112 & 1) == 0) {
    return v4;
  }
  unint64_t v114 = v112 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v114 + 31) < 0)
  {
    unsigned int v115 = *(void **)(v114 + 8);
    uint64_t v116 = *(void *)(v114 + 16);
  }
  else
  {
    unsigned int v115 = (void *)(v114 + 8);
    LODWORD(v116) = *(unsigned __int8 *)(v114 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v116)
  {
    uint64_t v117 = (int)v116;
    memcpy(v4, v115, (int)v116);
    v4 += v117;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v115, v116, v4);
}

uint64_t sub_179E3D8(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_1792CB8(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    unsigned int v13 = (uint64_t *)(v12 + 8);
  }
  else {
    unsigned int v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_12A1BDC(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(int *)(a1 + 104);
  uint64_t v18 = v11 + v17;
  uint64_t v19 = *(void *)(a1 + 112);
  if (v19) {
    uint64_t v20 = (uint64_t *)(v19 + 8);
  }
  else {
    uint64_t v20 = 0;
  }
  if (v17)
  {
    uint64_t v21 = 8 * v17;
    do
    {
      uint64_t v22 = *v20++;
      uint64_t v23 = sub_1794620(v22);
      v18 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6);
      v21 -= 8;
    }
    while (v21);
  }
  uint64_t v24 = *(int *)(a1 + 128);
  uint64_t v25 = v18 + v24;
  uint64_t v26 = *(void *)(a1 + 136);
  if (v26) {
    uint64_t v27 = (uint64_t *)(v26 + 8);
  }
  else {
    uint64_t v27 = 0;
  }
  if (v24)
  {
    uint64_t v28 = 8 * v24;
    do
    {
      uint64_t v29 = *v27++;
      uint64_t v30 = sub_179AA74(v29);
      v25 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6);
      v28 -= 8;
    }
    while (v28);
  }
  uint64_t v31 = *(int *)(a1 + 152);
  uint64_t v32 = v25 + 2 * v31;
  uint64_t v33 = *(void *)(a1 + 160);
  if (v33) {
    uint64_t v34 = (uint64_t *)(v33 + 8);
  }
  else {
    uint64_t v34 = 0;
  }
  if (v31)
  {
    uint64_t v35 = 8 * v31;
    do
    {
      uint64_t v36 = *v34++;
      uint64_t v37 = sub_12A1464(v36);
      v32 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6);
      v35 -= 8;
    }
    while (v35);
  }
  uint64_t v38 = *(int *)(a1 + 176);
  uint64_t v39 = v32 + 2 * v38;
  uint64_t v40 = *(void *)(a1 + 184);
  if (v40) {
    int v41 = (uint64_t *)(v40 + 8);
  }
  else {
    int v41 = 0;
  }
  if (v38)
  {
    uint64_t v42 = 8 * v38;
    do
    {
      uint64_t v43 = *v41++;
      uint64_t v44 = sub_12979A0(v43);
      v39 += v44 + ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6);
      v42 -= 8;
    }
    while (v42);
  }
  uint64_t v45 = *(int *)(a1 + 200);
  uint64_t v46 = v39 + 2 * v45;
  uint64_t v47 = *(void *)(a1 + 208);
  if (v47) {
    unsigned int v48 = (uint64_t *)(v47 + 8);
  }
  else {
    unsigned int v48 = 0;
  }
  if (v45)
  {
    uint64_t v49 = 8 * v45;
    do
    {
      uint64_t v50 = *v48++;
      uint64_t v51 = sub_12A34BC(v50);
      v46 += v51 + ((9 * (__clz(v51 | 1) ^ 0x1F) + 73) >> 6);
      v49 -= 8;
    }
    while (v49);
  }
  uint64_t v52 = *(int *)(a1 + 224);
  uint64_t v53 = v46 + 2 * v52;
  uint64_t v54 = *(void *)(a1 + 232);
  if (v54) {
    uint64_t v55 = (uint64_t *)(v54 + 8);
  }
  else {
    uint64_t v55 = 0;
  }
  if (v52)
  {
    uint64_t v56 = 8 * v52;
    do
    {
      uint64_t v57 = *v55++;
      uint64_t v58 = sub_1299C88(v57);
      v53 += v58 + ((9 * (__clz(v58 | 1) ^ 0x1F) + 73) >> 6);
      v56 -= 8;
    }
    while (v56);
  }
  int v59 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v59) {
    goto LABEL_59;
  }
  if (v59)
  {
    unint64_t v74 = *(void *)(a1 + 240) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v75 = *(unsigned __int8 *)(v74 + 23);
    uint64_t v76 = *(void *)(v74 + 8);
    if ((v75 & 0x80u) == 0) {
      uint64_t v76 = v75;
    }
    v53 += v76 + ((9 * (__clz(v76 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v59 & 2) == 0)
    {
LABEL_52:
      if ((v59 & 4) == 0) {
        goto LABEL_53;
      }
      goto LABEL_107;
    }
  }
  else if ((v59 & 2) == 0)
  {
    goto LABEL_52;
  }
  uint64_t v77 = sub_15B1D1C(*(void *)(a1 + 248));
  v53 += v77 + ((9 * (__clz(v77 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v59 & 4) == 0)
  {
LABEL_53:
    if ((v59 & 8) == 0) {
      goto LABEL_54;
    }
    goto LABEL_108;
  }
LABEL_107:
  uint64_t v78 = sub_12A1BDC(*(void *)(a1 + 256));
  v53 += v78 + ((9 * (__clz(v78 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v59 & 8) == 0)
  {
LABEL_54:
    if ((v59 & 0x10) == 0) {
      goto LABEL_55;
    }
    goto LABEL_109;
  }
LABEL_108:
  uint64_t v79 = sub_179A454(*(void *)(a1 + 264));
  v53 += v79 + ((9 * (__clz(v79 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v59 & 0x10) == 0)
  {
LABEL_55:
    if ((v59 & 0x20) == 0) {
      goto LABEL_56;
    }
LABEL_110:
    uint64_t v81 = sub_17651BC(*(void *)(a1 + 280));
    v53 += v81 + ((9 * (__clz(v81 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v59 & 0x40) == 0)
    {
LABEL_57:
      if ((v59 & 0x80) == 0) {
        goto LABEL_59;
      }
      goto LABEL_58;
    }
    goto LABEL_111;
  }
LABEL_109:
  uint64_t v80 = sub_1764968(*(void *)(a1 + 272));
  v53 += v80 + ((9 * (__clz(v80 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v59 & 0x20) != 0) {
    goto LABEL_110;
  }
LABEL_56:
  if ((v59 & 0x40) == 0) {
    goto LABEL_57;
  }
LABEL_111:
  uint64_t v82 = sub_12B6530(*(void *)(a1 + 288));
  v53 += v82 + ((9 * (__clz(v82 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v59 & 0x80) != 0)
  {
LABEL_58:
    uint64_t v60 = sub_129A304(*(void *)(a1 + 296));
    v53 += v60 + ((9 * (__clz(v60 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_59:
  if ((v59 & 0xFF00) == 0) {
    goto LABEL_69;
  }
  if ((v59 & 0x100) != 0)
  {
    uint64_t v83 = sub_1848920(*(void *)(a1 + 304));
    v53 += v83 + ((9 * (__clz(v83 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v59 & 0x200) == 0)
    {
LABEL_62:
      if ((v59 & 0x400) == 0) {
        goto LABEL_63;
      }
      goto LABEL_115;
    }
  }
  else if ((v59 & 0x200) == 0)
  {
    goto LABEL_62;
  }
  uint64_t v84 = sub_12A7544(*(void *)(a1 + 312));
  v53 += v84 + ((9 * (__clz(v84 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v59 & 0x400) == 0)
  {
LABEL_63:
    if ((v59 & 0x800) == 0) {
      goto LABEL_64;
    }
    goto LABEL_116;
  }
LABEL_115:
  uint64_t v85 = sub_12BB4E8(*(void *)(a1 + 320));
  v53 += v85 + ((9 * (__clz(v85 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v59 & 0x800) == 0)
  {
LABEL_64:
    if ((v59 & 0x1000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_117;
  }
LABEL_116:
  uint64_t v86 = sub_129AEE0(*(void *)(a1 + 328));
  v53 += v86 + ((9 * (__clz(v86 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v59 & 0x1000) == 0)
  {
LABEL_65:
    if ((v59 & 0x2000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_118;
  }
LABEL_117:
  uint64_t v87 = sub_184B568(*(void *)(a1 + 336));
  v53 += v87 + ((9 * (__clz(v87 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v59 & 0x2000) == 0)
  {
LABEL_66:
    if ((v59 & 0x4000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_119;
  }
LABEL_118:
  uint64_t v88 = sub_14826E8(*(void *)(a1 + 344));
  v53 += v88 + ((9 * (__clz(v88 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v59 & 0x4000) == 0)
  {
LABEL_67:
    if ((v59 & 0x8000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_68;
  }
LABEL_119:
  uint64_t v89 = sub_179FE6C(*(void *)(a1 + 352));
  v53 += v89 + ((9 * (__clz(v89 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v59 & 0x8000) != 0)
  {
LABEL_68:
    uint64_t v61 = sub_129A9B0(*(void *)(a1 + 360));
    v53 += v61 + ((9 * (__clz(v61 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_69:
  if ((v59 & 0xFF0000) != 0)
  {
    if ((v59 & 0x10000) != 0)
    {
      int v62 = *(_DWORD *)(a1 + 368);
      uint64_t v63 = ((9 * (__clz(v62 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v62 >= 0) {
        uint64_t v64 = v63;
      }
      else {
        uint64_t v64 = 11;
      }
      v53 += v64;
    }
    if ((v59 & 0x20000) != 0) {
      v53 += ((9 * (__clz(*(_DWORD *)(a1 + 372) | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v65 = v53 + 2;
    if ((v59 & 0x40000) == 0) {
      uint64_t v65 = v53;
    }
    if ((v59 & 0x80000) != 0) {
      v65 += 2;
    }
    if ((v59 & 0x100000) != 0) {
      v65 += 3;
    }
    if ((v59 & 0x200000) != 0) {
      uint64_t v53 = v65 + 3;
    }
    else {
      uint64_t v53 = v65;
    }
    if ((v59 & 0x400000) != 0)
    {
      int v66 = *(_DWORD *)(a1 + 380);
      uint64_t v67 = ((9 * (__clz(v66 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v66 >= 0) {
        uint64_t v68 = v67;
      }
      else {
        uint64_t v68 = 12;
      }
      v53 += v68;
    }
    if ((v59 & 0x800000) != 0)
    {
      int v69 = *(_DWORD *)(a1 + 384);
      uint64_t v70 = ((9 * (__clz(v69 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v69 >= 0) {
        uint64_t v71 = v70;
      }
      else {
        uint64_t v71 = 12;
      }
      v53 += v71;
    }
  }
  if ((v59 & 0x3000000) != 0)
  {
    if ((v59 & 0x1000000) != 0) {
      v53 += ((9 * (__clz(*(_DWORD *)(a1 + 388) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v59 & 0x2000000) != 0) {
      v53 += 2;
    }
  }
  uint64_t v72 = *(void *)(a1 + 8);
  if (v72)
  {
    unint64_t v90 = v72 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v90 + 31) < 0) {
      uint64_t v91 = *(void *)(v90 + 16);
    }
    else {
      uint64_t v91 = *(unsigned __int8 *)(v90 + 31);
    }
    v53 += v91;
  }
  *(_DWORD *)(a1 + 44) = v53;
  return v53;
}

void sub_179EB5C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1878644((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_18786C0((std::string *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    unsigned int v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      *unsigned int v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_187873C((uint64_t *)(a1 + 96), v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 128);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_18787C8((uint64_t *)(a1 + 120), v21, v20, v19, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v22 = *(_DWORD *)(a1 + 128) + v19;
    *(_DWORD *)(a1 + 128) = v22;
    uint64_t v23 = *(int **)(a1 + 136);
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 152);
  if (v24)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(a2 + 160) + 8);
    uint64_t v26 = (std::string **)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_166507C((uint64_t *)(a1 + 144), v26, v25, v24, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v27 = *(_DWORD *)(a1 + 152) + v24;
    *(_DWORD *)(a1 + 152) = v27;
    uint64_t v28 = *(int **)(a1 + 160);
    if (*v28 < v27) {
      *uint64_t v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 176);
  if (v29)
  {
    uint64_t v30 = (uint64_t *)(*(void *)(a2 + 184) + 8);
    uint64_t v31 = (uint64_t *)sub_188CCE4(a1 + 168, *(_DWORD *)(a2 + 176));
    sub_1878854((uint64_t *)(a1 + 168), v31, v30, v29, **(_DWORD **)(a1 + 184) - *(_DWORD *)(a1 + 176));
    int v32 = *(_DWORD *)(a1 + 176) + v29;
    *(_DWORD *)(a1 + 176) = v32;
    uint64_t v33 = *(int **)(a1 + 184);
    if (*v33 < v32) {
      *uint64_t v33 = v32;
    }
  }
  int v34 = *(_DWORD *)(a2 + 200);
  if (v34)
  {
    uint64_t v35 = (uint64_t *)(*(void *)(a2 + 208) + 8);
    uint64_t v36 = (uint64_t *)sub_188CCE4(a1 + 192, *(_DWORD *)(a2 + 200));
    sub_12C4EBC((uint64_t *)(a1 + 192), v36, v35, v34, **(_DWORD **)(a1 + 208) - *(_DWORD *)(a1 + 200));
    int v37 = *(_DWORD *)(a1 + 200) + v34;
    *(_DWORD *)(a1 + 200) = v37;
    uint64_t v38 = *(int **)(a1 + 208);
    if (*v38 < v37) {
      int *v38 = v37;
    }
  }
  int v39 = *(_DWORD *)(a2 + 224);
  if (v39)
  {
    uint64_t v40 = (uint64_t *)(*(void *)(a2 + 232) + 8);
    int v41 = (std::string **)sub_188CCE4(a1 + 216, *(_DWORD *)(a2 + 224));
    sub_154B4D4((uint64_t *)(a1 + 216), v41, v40, v39, **(_DWORD **)(a1 + 232) - *(_DWORD *)(a1 + 224));
    int v42 = *(_DWORD *)(a1 + 224) + v39;
    *(_DWORD *)(a1 + 224) = v42;
    uint64_t v43 = *(int **)(a1 + 232);
    if (*v43 < v42) {
      *uint64_t v43 = v42;
    }
  }
  int v44 = *(_DWORD *)(a2 + 40);
  if (!(_BYTE)v44) {
    goto LABEL_94;
  }
  if (v44)
  {
    uint64_t v45 = (long long *)(*(void *)(a2 + 240) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v46 = *(void *)(a1 + 8);
    uint64_t v47 = (uint64_t *)(v46 & 0xFFFFFFFFFFFFFFFCLL);
    if (v46) {
      uint64_t v47 = (uint64_t *)*v47;
    }
    sub_1881DF4((std::string **)(a1 + 240), v45, v47);
    if ((v44 & 2) == 0)
    {
LABEL_28:
      if ((v44 & 4) == 0) {
        goto LABEL_29;
      }
      goto LABEL_46;
    }
  }
  else if ((v44 & 2) == 0)
  {
    goto LABEL_28;
  }
  *(_DWORD *)(a1 + 40) |= 2u;
  uint64_t v48 = *(void *)(a1 + 248);
  if (!v48)
  {
    uint64_t v49 = *(void *)(a1 + 8);
    uint64_t v50 = (void *)(v49 & 0xFFFFFFFFFFFFFFFCLL);
    if (v49) {
      uint64_t v50 = (void *)*v50;
    }
    uint64_t v48 = sub_15C19EC((uint64_t)v50);
    *(void *)(a1 + 248) = v48;
  }
  if (*(void *)(a2 + 248)) {
    uint64_t v51 = *(uint64_t (****)())(a2 + 248);
  }
  else {
    uint64_t v51 = &off_253F208;
  }
  sub_15B1E3C(v48, (uint64_t)v51);
  if ((v44 & 4) == 0)
  {
LABEL_29:
    if ((v44 & 8) == 0) {
      goto LABEL_30;
    }
    goto LABEL_54;
  }
LABEL_46:
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v52 = *(std::string **)(a1 + 256);
  if (!v52)
  {
    uint64_t v53 = *(void *)(a1 + 8);
    uint64_t v54 = (void *)(v53 & 0xFFFFFFFFFFFFFFFCLL);
    if (v53) {
      uint64_t v54 = (void *)*v54;
    }
    uint64_t v52 = (std::string *)sub_12BBBC8((uint64_t)v54);
    *(void *)(a1 + 256) = v52;
  }
  if (*(void *)(a2 + 256)) {
    uint64_t v55 = *(uint64_t (****)())(a2 + 256);
  }
  else {
    uint64_t v55 = &off_25308B8;
  }
  sub_11D2930(v52, (uint64_t)v55);
  if ((v44 & 8) == 0)
  {
LABEL_30:
    if ((v44 & 0x10) == 0) {
      goto LABEL_31;
    }
    goto LABEL_62;
  }
LABEL_54:
  *(_DWORD *)(a1 + 40) |= 8u;
  uint64_t v56 = *(std::string **)(a1 + 264);
  if (!v56)
  {
    uint64_t v57 = *(void *)(a1 + 8);
    uint64_t v58 = (void *)(v57 & 0xFFFFFFFFFFFFFFFCLL);
    if (v57) {
      uint64_t v58 = (void *)*v58;
    }
    uint64_t v56 = (std::string *)sub_18305D4((uint64_t)v58);
    *(void *)(a1 + 264) = v56;
  }
  if (*(void *)(a2 + 264)) {
    int v59 = *(uint64_t (****)())(a2 + 264);
  }
  else {
    int v59 = &off_2549A98;
  }
  sub_11B0678(v56, (uint64_t)v59);
  if ((v44 & 0x10) == 0)
  {
LABEL_31:
    if ((v44 & 0x20) == 0) {
      goto LABEL_32;
    }
LABEL_70:
    *(_DWORD *)(a1 + 40) |= 0x20u;
    uint64_t v64 = *(std::string **)(a1 + 280);
    if (!v64)
    {
      uint64_t v65 = *(void *)(a1 + 8);
      int v66 = (void *)(v65 & 0xFFFFFFFFFFFFFFFCLL);
      if (v65) {
        int v66 = (void *)*v66;
      }
      uint64_t v64 = (std::string *)sub_178CE84((uint64_t)v66);
      *(void *)(a1 + 280) = v64;
    }
    if (*(void *)(a2 + 280)) {
      uint64_t v67 = *(uint64_t (****)())(a2 + 280);
    }
    else {
      uint64_t v67 = &off_2548798;
    }
    sub_11EB228(v64, (uint64_t)v67);
    if ((v44 & 0x40) == 0)
    {
LABEL_33:
      if ((v44 & 0x80) == 0) {
        goto LABEL_94;
      }
      goto LABEL_86;
    }
    goto LABEL_78;
  }
LABEL_62:
  *(_DWORD *)(a1 + 40) |= 0x10u;
  uint64_t v60 = *(std::string **)(a1 + 272);
  if (!v60)
  {
    uint64_t v61 = *(void *)(a1 + 8);
    int v62 = (void *)(v61 & 0xFFFFFFFFFFFFFFFCLL);
    if (v61) {
      int v62 = (void *)*v62;
    }
    uint64_t v60 = (std::string *)sub_178CE04((uint64_t)v62);
    *(void *)(a1 + 272) = v60;
  }
  if (*(void *)(a2 + 272)) {
    uint64_t v63 = *(uint64_t (****)())(a2 + 272);
  }
  else {
    uint64_t v63 = &off_2548768;
  }
  sub_1764A74(v60, (uint64_t)v63);
  if ((v44 & 0x20) != 0) {
    goto LABEL_70;
  }
LABEL_32:
  if ((v44 & 0x40) == 0) {
    goto LABEL_33;
  }
LABEL_78:
  *(_DWORD *)(a1 + 40) |= 0x40u;
  uint64_t v68 = *(void *)(a1 + 288);
  if (!v68)
  {
    uint64_t v69 = *(void *)(a1 + 8);
    uint64_t v70 = (void *)(v69 & 0xFFFFFFFFFFFFFFFCLL);
    if (v69) {
      uint64_t v70 = (void *)*v70;
    }
    sub_12BCD00((uint64_t)v70);
    *(void *)(a1 + 288) = v68;
  }
  if (*(void *)(a2 + 288)) {
    uint64_t v71 = *(uint64_t (****)())(a2 + 288);
  }
  else {
    uint64_t v71 = &off_2530F28;
  }
  sub_12B6638(v68, (uint64_t)v71);
  if ((v44 & 0x80) != 0)
  {
LABEL_86:
    *(_DWORD *)(a1 + 40) |= 0x80u;
    uint64_t v72 = *(std::string **)(a1 + 296);
    if (!v72)
    {
      uint64_t v73 = *(void *)(a1 + 8);
      unint64_t v74 = (void *)(v73 & 0xFFFFFFFFFFFFFFFCLL);
      if (v73) {
        unint64_t v74 = (void *)*v74;
      }
      sub_129E740((uint64_t)v74);
      *(void *)(a1 + 296) = v72;
    }
    if (*(void *)(a2 + 296)) {
      uint64_t v75 = *(uint64_t (****)())(a2 + 296);
    }
    else {
      uint64_t v75 = &off_2530620;
    }
    sub_129A39C(v72, (uint64_t)v75);
  }
LABEL_94:
  if ((v44 & 0xFF00) == 0) {
    goto LABEL_168;
  }
  if ((v44 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x100u;
    uint64_t v76 = *(void *)(a1 + 304);
    if (!v76)
    {
      uint64_t v77 = *(void *)(a1 + 8);
      uint64_t v78 = (void *)(v77 & 0xFFFFFFFFFFFFFFFCLL);
      if (v77) {
        uint64_t v78 = (void *)*v78;
      }
      uint64_t v76 = sub_1849FB4((uint64_t)v78);
      *(void *)(a1 + 304) = v76;
    }
    if (*(void *)(a2 + 304)) {
      uint64_t v79 = *(uint64_t (****)())(a2 + 304);
    }
    else {
      uint64_t v79 = &off_254D220;
    }
    sub_179F4B0(v76, (uint64_t)v79);
    if ((v44 & 0x200) == 0)
    {
LABEL_97:
      if ((v44 & 0x400) == 0) {
        goto LABEL_98;
      }
      goto LABEL_120;
    }
  }
  else if ((v44 & 0x200) == 0)
  {
    goto LABEL_97;
  }
  *(_DWORD *)(a1 + 40) |= 0x200u;
  uint64_t v80 = *(void *)(a1 + 312);
  if (!v80)
  {
    uint64_t v81 = *(void *)(a1 + 8);
    uint64_t v82 = (void *)(v81 & 0xFFFFFFFFFFFFFFFCLL);
    if (v81) {
      uint64_t v82 = (void *)*v82;
    }
    uint64_t v80 = sub_12BC1AC((uint64_t)v82);
    *(void *)(a1 + 312) = v80;
  }
  if (*(void *)(a2 + 312)) {
    uint64_t v83 = *(uint64_t (****)())(a2 + 312);
  }
  else {
    uint64_t v83 = &off_2530AB8;
  }
  sub_12A75F4(v80, (uint64_t)v83);
  if ((v44 & 0x400) == 0)
  {
LABEL_98:
    if ((v44 & 0x800) == 0) {
      goto LABEL_99;
    }
    goto LABEL_128;
  }
LABEL_120:
  *(_DWORD *)(a1 + 40) |= 0x400u;
  uint64_t v84 = *(void **)(a1 + 320);
  if (!v84)
  {
    uint64_t v85 = *(void *)(a1 + 8);
    uint64_t v86 = (void *)(v85 & 0xFFFFFFFFFFFFFFFCLL);
    if (v85) {
      uint64_t v86 = (void *)*v86;
    }
    uint64_t v84 = sub_12BD16C((uint64_t)v86);
    *(void *)(a1 + 320) = v84;
  }
  if (*(void *)(a2 + 320)) {
    uint64_t v87 = *(uint64_t (****)())(a2 + 320);
  }
  else {
    uint64_t v87 = &off_2531088;
  }
  sub_12BB73C((uint64_t)v84, (uint64_t)v87);
  if ((v44 & 0x800) == 0)
  {
LABEL_99:
    if ((v44 & 0x1000) == 0) {
      goto LABEL_100;
    }
    goto LABEL_136;
  }
LABEL_128:
  *(_DWORD *)(a1 + 40) |= 0x800u;
  uint64_t v88 = *(void *)(a1 + 328);
  if (!v88)
  {
    uint64_t v89 = *(void *)(a1 + 8);
    unint64_t v90 = (void *)(v89 & 0xFFFFFFFFFFFFFFFCLL);
    if (v89) {
      unint64_t v90 = (void *)*v90;
    }
    uint64_t v88 = sub_129E840((uint64_t)v90);
    *(void *)(a1 + 328) = v88;
  }
  if (*(void *)(a2 + 328)) {
    uint64_t v91 = *(uint64_t (****)())(a2 + 328);
  }
  else {
    uint64_t v91 = &off_2530690;
  }
  sub_129AF38(v88, (uint64_t)v91);
  if ((v44 & 0x1000) == 0)
  {
LABEL_100:
    if ((v44 & 0x2000) == 0) {
      goto LABEL_101;
    }
    goto LABEL_144;
  }
LABEL_136:
  *(_DWORD *)(a1 + 40) |= 0x1000u;
  uint64_t v92 = *(void *)(a1 + 336);
  if (!v92)
  {
    uint64_t v93 = *(void *)(a1 + 8);
    uint64_t v94 = (void *)(v93 & 0xFFFFFFFFFFFFFFFCLL);
    if (v93) {
      uint64_t v94 = (void *)*v94;
    }
    uint64_t v92 = sub_185089C((uint64_t)v94);
    *(void *)(a1 + 336) = v92;
  }
  if (*(void *)(a2 + 336)) {
    unsigned int v95 = *(uint64_t (****)())(a2 + 336);
  }
  else {
    unsigned int v95 = &off_254D2B0;
  }
  sub_16CE3CC(v92, (uint64_t)v95);
  if ((v44 & 0x2000) == 0)
  {
LABEL_101:
    if ((v44 & 0x4000) == 0) {
      goto LABEL_102;
    }
    goto LABEL_152;
  }
LABEL_144:
  *(_DWORD *)(a1 + 40) |= 0x2000u;
  uint64_t v96 = *(std::string **)(a1 + 344);
  if (!v96)
  {
    uint64_t v97 = *(void *)(a1 + 8);
    unsigned int v98 = (void *)(v97 & 0xFFFFFFFFFFFFFFFCLL);
    if (v97) {
      unsigned int v98 = (void *)*v98;
    }
    uint64_t v96 = (std::string *)sub_1482774((uint64_t)v98);
    *(void *)(a1 + 344) = v96;
  }
  if (*(void *)(a2 + 344)) {
    uint64_t v99 = *(uint64_t (****)())(a2 + 344);
  }
  else {
    uint64_t v99 = &off_2539FF8;
  }
  sub_11A7934(v96, (uint64_t)v99);
  if ((v44 & 0x4000) == 0)
  {
LABEL_102:
    if ((v44 & 0x8000) == 0) {
      goto LABEL_168;
    }
    goto LABEL_160;
  }
LABEL_152:
  *(_DWORD *)(a1 + 40) |= 0x4000u;
  unint64_t v100 = *(std::string **)(a1 + 352);
  if (!v100)
  {
    uint64_t v101 = *(void *)(a1 + 8);
    unint64_t v102 = (void *)(v101 & 0xFFFFFFFFFFFFFFFCLL);
    if (v101) {
      unint64_t v102 = (void *)*v102;
    }
    unint64_t v100 = (std::string *)sub_1830734((uint64_t)v102);
    *(void *)(a1 + 352) = v100;
  }
  if (*(void *)(a2 + 352)) {
    uint64_t v103 = *(uint64_t (****)())(a2 + 352);
  }
  else {
    uint64_t v103 = &off_2549C78;
  }
  sub_11B9C54(v100, (uint64_t)v103);
  if ((v44 & 0x8000) != 0)
  {
LABEL_160:
    *(_DWORD *)(a1 + 40) |= 0x8000u;
    unsigned int v104 = *(std::string **)(a1 + 360);
    if (!v104)
    {
      uint64_t v105 = *(void *)(a1 + 8);
      uint64_t v106 = (void *)(v105 & 0xFFFFFFFFFFFFFFFCLL);
      if (v105) {
        uint64_t v106 = (void *)*v106;
      }
      sub_129E7C0((uint64_t)v106);
      *(void *)(a1 + 360) = v104;
    }
    if (*(void *)(a2 + 360)) {
      unsigned int v107 = *(uint64_t (****)())(a2 + 360);
    }
    else {
      unsigned int v107 = &off_2530658;
    }
    sub_129A39C(v104, (uint64_t)v107);
  }
LABEL_168:
  if ((v44 & 0xFF0000) == 0) {
    goto LABEL_179;
  }
  if ((v44 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 368) = *(_DWORD *)(a2 + 368);
    if ((v44 & 0x20000) == 0)
    {
LABEL_171:
      if ((v44 & 0x40000) == 0) {
        goto LABEL_172;
      }
      goto LABEL_191;
    }
  }
  else if ((v44 & 0x20000) == 0)
  {
    goto LABEL_171;
  }
  *(_DWORD *)(a1 + 372) = *(_DWORD *)(a2 + 372);
  if ((v44 & 0x40000) == 0)
  {
LABEL_172:
    if ((v44 & 0x80000) == 0) {
      goto LABEL_173;
    }
    goto LABEL_192;
  }
LABEL_191:
  *(unsigned char *)(a1 + 376) = *(unsigned char *)(a2 + 376);
  if ((v44 & 0x80000) == 0)
  {
LABEL_173:
    if ((v44 & 0x100000) == 0) {
      goto LABEL_174;
    }
    goto LABEL_193;
  }
LABEL_192:
  *(unsigned char *)(a1 + 377) = *(unsigned char *)(a2 + 377);
  if ((v44 & 0x100000) == 0)
  {
LABEL_174:
    if ((v44 & 0x200000) == 0) {
      goto LABEL_175;
    }
    goto LABEL_194;
  }
LABEL_193:
  *(unsigned char *)(a1 + 378) = *(unsigned char *)(a2 + 378);
  if ((v44 & 0x200000) == 0)
  {
LABEL_175:
    if ((v44 & 0x400000) == 0) {
      goto LABEL_176;
    }
LABEL_195:
    *(_DWORD *)(a1 + 380) = *(_DWORD *)(a2 + 380);
    if ((v44 & 0x800000) == 0) {
      goto LABEL_178;
    }
    goto LABEL_177;
  }
LABEL_194:
  *(unsigned char *)(a1 + 379) = *(unsigned char *)(a2 + 379);
  if ((v44 & 0x400000) != 0) {
    goto LABEL_195;
  }
LABEL_176:
  if ((v44 & 0x800000) != 0) {
LABEL_177:
  }
    *(_DWORD *)(a1 + 384) = *(_DWORD *)(a2 + 384);
LABEL_178:
  *(_DWORD *)(a1 + 40) |= v44;
LABEL_179:
  if ((v44 & 0x3000000) != 0)
  {
    if ((v44 & 0x1000000) != 0) {
      *(_DWORD *)(a1 + 388) = *(_DWORD *)(a2 + 388);
    }
    if ((v44 & 0x2000000) != 0) {
      *(unsigned char *)(a1 + 392) = *(unsigned char *)(a2 + 392);
    }
    *(_DWORD *)(a1 + 40) |= v44;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v108 = *(void *)(a2 + 8);
  if (v108)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v108 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_179F4B0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_187B168((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_187B1F4((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    unsigned int v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *unsigned int v13 = v12;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v14 = *(_DWORD *)(a2 + 72);
    *(_DWORD *)(a1 + 16) |= 1u;
    *(_DWORD *)(a1 + 72) = v14;
  }
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_179F600(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 104);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_18856CC(*(void *)(*(void *)(a1 + 112) + 8 * v3) + 16);
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v6 = *(unsigned int *)(a1 + 176);
    while ((int)v6 >= 1)
    {
      uint64_t v7 = v6 - 1;
      char v8 = sub_1297DD8(*(void *)(*(void *)(a1 + 184) + 8 * v6));
      uint64_t v6 = v7;
      if ((v8 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v9 = *(unsigned int *)(a1 + 200);
    while ((int)v9 >= 1)
    {
      uint64_t v10 = v9 - 1;
      char v11 = sub_12A37FC(*(void *)(*(void *)(a1 + 208) + 8 * v9));
      uint64_t v9 = v10;
      if ((v11 & 1) == 0) {
        return 0;
      }
    }
    int v12 = *(_DWORD *)(a1 + 40);
    if ((v12 & 2) != 0)
    {
      uint64_t result = sub_15B1FC0(*(void *)(a1 + 248));
      if (!result) {
        return result;
      }
      int v12 = *(_DWORD *)(a1 + 40);
    }
    if ((v12 & 0x40) != 0)
    {
      uint64_t result = sub_12B6904(*(void *)(a1 + 288));
      if (!result) {
        return result;
      }
      int v12 = *(_DWORD *)(a1 + 40);
    }
    if ((v12 & 0x100) != 0)
    {
      uint64_t result = sub_179F73C(*(void *)(a1 + 304));
      if (!result) {
        return result;
      }
      int v12 = *(_DWORD *)(a1 + 40);
    }
    if ((v12 & 0x200) != 0)
    {
      uint64_t result = sub_12A76C4(*(void *)(a1 + 312));
      if (!result) {
        return result;
      }
      int v12 = *(_DWORD *)(a1 + 40);
    }
    if ((v12 & 0x400) != 0)
    {
      uint64_t result = sub_12BB974(*(void *)(a1 + 320));
      if (!result) {
        return result;
      }
      int v12 = *(_DWORD *)(a1 + 40);
    }
    if ((v12 & 0x800) != 0)
    {
      uint64_t result = sub_129AF98(*(void *)(a1 + 328));
      if (!result) {
        return result;
      }
      int v12 = *(_DWORD *)(a1 + 40);
    }
    if ((v12 & 0x1000) == 0) {
      return 1;
    }
    uint64_t result = sub_16CE508(*(void *)(a1 + 336));
    if (result) {
      return 1;
    }
  }
  return result;
}

BOOL sub_179F73C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_1847764(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v6 = *(unsigned int *)(a1 + 56);
  do
  {
    BOOL v5 = (int)v6 < 1;
    if ((int)v6 < 1) {
      break;
    }
    uint64_t v7 = v6 - 1;
    BOOL v8 = sub_1847FB8(*(void *)(*(void *)(a1 + 64) + 8 * v6));
    uint64_t v6 = v7;
  }
  while (v8);
  return v5;
}

void *sub_179F7BC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchResult");
}

uint64_t sub_179F7CC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  char v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24DAD98;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 32) = &qword_2550250;
  if ((v6 & 2) != 0)
  {
    BOOL v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      BOOL v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 32), (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL), v8);
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

void sub_179F8B0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_179F8E0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_179F998(uint64_t a1)
{
  sub_179F8E0(a1);

  operator delete();
}

uint64_t sub_179F9D0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    BOOL v8 = (char *)(*(void *)v30 + 1);
    unsigned int v9 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        BOOL v8 = (char *)sub_188C180(*(uint64_t *)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        BOOL v8 = (char *)(*(void *)v30 + 2);
      }
    }
    *(void *)uint64_t v30 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        unsigned int v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          unsigned int v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 24);
        goto LABEL_17;
      case 2u:
        if (v9 != 18) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        unsigned int v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unsigned int v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 32);
LABEL_17:
        uint64_t v16 = (std::string *)sub_1880F84(v14, v13);
        int v17 = (void *)sub_188C244(v16, *(char **)v30, (uint64_t)a3);
        goto LABEL_35;
      case 4u:
        if (v9 != 32) {
          goto LABEL_28;
        }
        v5 |= 4u;
        uint64_t v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v26 = sub_188C0D0((uint64_t)v8, v19);
          *(void *)uint64_t v30 = v26;
          *(_DWORD *)(a1 + 40) = v27;
          if (!v26) {
            goto LABEL_45;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_22:
          *(void *)uint64_t v30 = v18;
          *(_DWORD *)(a1 + 40) = v19;
        }
        goto LABEL_36;
      case 5u:
        if (v9 != 40) {
          goto LABEL_28;
        }
        v5 |= 8u;
        uint64_t v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v28 = sub_188C0D0((uint64_t)v8, v22);
          *(void *)uint64_t v30 = v28;
          *(_DWORD *)(a1 + 44) = v29;
          if (!v28) {
            goto LABEL_45;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_27:
          *(void *)uint64_t v30 = v21;
          *(_DWORD *)(a1 + 44) = v22;
        }
        goto LABEL_36;
      default:
LABEL_28:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            uint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            BOOL v8 = *(char **)v30;
          }
          int v17 = sub_1885AC0(v9, v25, v8, a3);
LABEL_35:
          *(void *)uint64_t v30 = v17;
          if (!v17) {
            goto LABEL_45;
          }
LABEL_36:
          if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_45:
        }
          *(void *)uint64_t v30 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v30;
    }
  }
}

unsigned char *sub_179FC7C(uint64_t a1, unsigned char *__dst, void *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_7;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  char v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0) {
    goto LABEL_13;
  }
LABEL_7:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unsigned int v7 = *(_DWORD *)(a1 + 40);
  *char v4 = 32;
  v4[1] = v7;
  if (v7 > 0x7F)
  {
    v4[1] = v7 | 0x80;
    unsigned int v8 = v7 >> 7;
    v4[2] = v7 >> 7;
    v4 += 3;
    if (v7 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unsigned int v9 = v8 >> 14;
        v8 >>= 7;
        *v4++ = v8;
      }
      while (v9);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_13:
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 44);
    *char v4 = 40;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_179FE6C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_15;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) == 0)
  {
    if ((v1 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 8) != 0) {
LABEL_14:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 44) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_15:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_179FFA0()
{
  return 1;
}

void *sub_179FFA8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PaginationInfo");
}

uint64_t sub_179FFB8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24DAE18;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  *(void *)(a1 + 28) = 0;
  int v5 = *(_DWORD *)(a2 + 24);
  if (v5)
  {
    sub_188C80C((unsigned int *)(a1 + 24), v5);
    unint64_t v6 = *(void **)(a1 + 32);
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
    memcpy(v6, *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  int v7 = *(_DWORD *)(a2 + 48);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 56);
    uint64_t v9 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_188FB98(a1 + 40, v9, (const std::string **)(v8 + 8), v7, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v10 = *(_DWORD *)(a1 + 48) + v7;
    *(_DWORD *)(a1 + 48) = v10;
    unint64_t v11 = *(int **)(a1 + 56);
    if (*v11 < v10) {
      *unint64_t v11 = v10;
    }
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v13 = *(_DWORD *)(a2 + 16);
  if (v13) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  if ((v13 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  if ((v13 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 80) = 0;
  if ((v13 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 88) = 0;
  long long v14 = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = v14;
  return a1;
}

void sub_17A01D8()
{
}

uint64_t sub_17A0284(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_17A0318((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DE8((void *)(a1 + 40));
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_17A0318(uint64_t (***result)()))()
{
  if (result != &off_2549CA8)
  {
    int v1 = result;
    uint64_t v2 = (uint64_t)result[8];
    if (v2)
    {
      sub_179203C(v2);
      operator delete();
    }
    if (v1[9])
    {
      sub_1362774();
      operator delete();
    }
    unint64_t v3 = v1[10];
    if (v3)
    {
      sub_1298CF0(v3);
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[11];
    if (result)
    {
      sub_12A46C8();
      operator delete();
    }
  }
  return result;
}

void sub_17A03E4(uint64_t a1)
{
  sub_17A0284(a1);

  operator delete();
}

uint64_t sub_17A041C(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  uint64_t result = sub_188CC00(a1 + 40);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 0xF) == 0) {
    goto LABEL_7;
  }
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_16:
    uint64_t result = (uint64_t)sub_13627B0(*(void *)(a1 + 72));
    if ((v3 & 4) == 0)
    {
LABEL_5:
      if ((v3 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    goto LABEL_17;
  }
  uint64_t result = (uint64_t)sub_179212C(*(unsigned char **)(a1 + 64));
  if ((v3 & 2) != 0) {
    goto LABEL_16;
  }
LABEL_4:
  if ((v3 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_17:
  uint64_t result = sub_1298D2C(*(void *)(a1 + 80));
  if ((v3 & 8) != 0) {
LABEL_6:
  }
    uint64_t result = (uint64_t)sub_12A4704(*(unsigned char **)(a1 + 88));
LABEL_7:
  if ((v3 & 0xF0) != 0)
  {
    *(void *)(a1 + 102) = 0;
    *(void *)(a1 + 96) = 0;
  }
  if ((v3 & 0xF00) != 0)
  {
    *(_WORD *)(a1 + 114) = 0;
    *(_DWORD *)(a1 + 110) = 0;
    *(_DWORD *)(a1 + 116) = 8;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_17A04E8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v77 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v77, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (uint64_t **)(a1 + 40);
  uint64_t v8 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v9 = (unsigned __int8 *)(*(void *)v77 + 1);
    unsigned int v10 = **(unsigned char **)v77;
    if ((char)**(unsigned char **)v77 < 0)
    {
      int v11 = (char)*v9;
      unsigned int v12 = v10 + (v11 << 7);
      unsigned int v10 = v12 - 128;
      if (v11 < 0)
      {
        uint64_t v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v77, v12 - 128);
        unsigned int v10 = v13;
      }
      else
      {
        uint64_t v9 = (unsigned __int8 *)(*(void *)v77 + 2);
      }
    }
    *(void *)uint64_t v77 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_122;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        long long v14 = *(void **)(a1 + 64);
        if (!v14)
        {
          unint64_t v15 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v8) {
            unint64_t v15 = (void *)*v15;
          }
          long long v14 = sub_18302C8((uint64_t)v15);
          *(void *)(a1 + 64) = v14;
          uint64_t v9 = *(unsigned __int8 **)v77;
        }
        uint64_t v16 = (uint64_t)sub_120FE50(a3, (uint64_t)v14, v9);
        goto LABEL_129;
      case 2u:
        if (v10 != 17) {
          goto LABEL_122;
        }
        v5 |= 0x10u;
        *(void *)(a1 + 96) = *(void *)v9;
        *(void *)uint64_t v77 = v9 + 8;
        goto LABEL_130;
      case 3u:
        if (v10 != 24) {
          goto LABEL_122;
        }
        v5 |= 0x800u;
        uint64_t v18 = (char *)(v9 + 1);
        LODWORD(v17) = *v9;
        if ((v17 & 0x80) == 0) {
          goto LABEL_21;
        }
        int v19 = *v18;
        uint64_t v17 = v17 + (v19 << 7) - 128;
        if (v19 < 0)
        {
          uint64_t v61 = sub_188C138((uint64_t)v9, v17);
          *(void *)uint64_t v77 = v61;
          *(_DWORD *)(a1 + 116) = v62;
          if (!v61) {
            goto LABEL_144;
          }
        }
        else
        {
          uint64_t v18 = (char *)(v9 + 2);
LABEL_21:
          *(void *)uint64_t v77 = v18;
          *(_DWORD *)(a1 + 116) = v17;
        }
        goto LABEL_130;
      case 4u:
        if (v10 != 32) {
          goto LABEL_122;
        }
        v5 |= 0x40u;
        int v20 = (char *)(v9 + 1);
        uint64_t v21 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_26;
        }
        int v22 = *v20;
        uint64_t v21 = v21 + (v22 << 7) - 128;
        if (v22 < 0)
        {
          uint64_t v63 = sub_188C138((uint64_t)v9, v21);
          *(void *)uint64_t v77 = v63;
          *(unsigned char *)(a1 + 108) = v64 != 0;
          if (!v63) {
            goto LABEL_144;
          }
        }
        else
        {
          int v20 = (char *)(v9 + 2);
LABEL_26:
          *(void *)uint64_t v77 = v20;
          *(unsigned char *)(a1 + 108) = v21 != 0;
        }
        goto LABEL_130;
      case 5u:
        if (v10 != 40) {
          goto LABEL_122;
        }
        int v23 = (char *)(v9 + 1);
        unint64_t v24 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_31;
        }
        int v25 = *v23;
        int v26 = v24 + (v25 << 7);
        unint64_t v24 = (v26 - 128);
        if (v25 < 0)
        {
          *(void *)uint64_t v77 = sub_188C138((uint64_t)v9, (v26 - 128));
          if (!*(void *)v77) {
            goto LABEL_144;
          }
          unint64_t v24 = v65;
        }
        else
        {
          int v23 = (char *)(v9 + 2);
LABEL_31:
          *(void *)uint64_t v77 = v23;
        }
        if (v24 <= 3)
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 104) = v24;
          goto LABEL_130;
        }
        if (*v8) {
          uint64_t v75 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v75 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v76 = 5;
        goto LABEL_138;
      case 6u:
        if (v10 == 48)
        {
          uint64_t v27 = (uint64_t)(v9 - 1);
          while (1)
          {
            *(void *)uint64_t v77 = v27 + 1;
            unint64_t v28 = *(unsigned __int8 *)(v27 + 1);
            int v29 = (char *)(v27 + 2);
            if (*(char *)(v27 + 1) < 0)
            {
              int v30 = *v29;
              int v31 = v28 + (v30 << 7);
              unint64_t v28 = (v31 - 128);
              if (v30 < 0)
              {
                *(void *)uint64_t v77 = sub_188C138(v27 + 1, (v31 - 128));
                if (!*(void *)v77) {
                  goto LABEL_144;
                }
                unint64_t v28 = v34;
                goto LABEL_40;
              }
              int v29 = (char *)(v27 + 3);
            }
            *(void *)uint64_t v77 = v29;
LABEL_40:
            if (sub_15B0764(v28))
            {
              uint64_t v32 = *(unsigned int *)(a1 + 24);
              if (v32 == *(_DWORD *)(a1 + 28))
              {
                int v33 = v32 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v32 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v32) = v28;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v32) = v28;
                int v33 = v32 + 1;
              }
              *(_DWORD *)(a1 + 24) = v33;
            }
            else
            {
              if (*v8) {
                uint64_t v35 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(6, v28, v35);
            }
            uint64_t v27 = *(void *)v77;
            if (*(void *)a3 <= *(void *)v77 || **(unsigned char **)v77 != 48) {
              goto LABEL_130;
            }
          }
        }
        if (v10 == 50)
        {
          *(void *)&long long v78 = a1 + 24;
          *((void *)&v78 + 1) = sub_15B0764;
          uint64_t v79 = a1 + 8;
          int v80 = 6;
          uint64_t v16 = (uint64_t)sub_1112E88((uint64_t)a3, (char *)v9, &v78);
LABEL_129:
          *(void *)uint64_t v77 = v16;
          if (!v16) {
            goto LABEL_144;
          }
LABEL_130:
          if (sub_11947B8((uint64_t)a3, (char **)v77, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_122:
        if (v10) {
          BOOL v73 = (v10 & 7) == 4;
        }
        else {
          BOOL v73 = 1;
        }
        if (!v73)
        {
          if (*v8)
          {
            unint64_t v74 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v74 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v9 = *(unsigned __int8 **)v77;
          }
          uint64_t v16 = (uint64_t)sub_1885AC0(v10, v74, (char *)v9, a3);
          goto LABEL_129;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_144:
        }
          *(void *)uint64_t v77 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v77;
      case 7u:
        if (v10 != 58) {
          goto LABEL_122;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v36 = *(void *)(a1 + 72);
        if (!v36)
        {
          int v37 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v8) {
            int v37 = (void *)*v37;
          }
          uint64_t v36 = sub_1363A48((uint64_t)v37);
          *(void *)(a1 + 72) = v36;
          uint64_t v9 = *(unsigned __int8 **)v77;
        }
        uint64_t v16 = (uint64_t)sub_129424C(a3, v36, v9);
        goto LABEL_129;
      case 8u:
        if (v10 != 64) {
          goto LABEL_122;
        }
        v5 |= 0x80u;
        uint64_t v38 = (char *)(v9 + 1);
        uint64_t v39 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_64;
        }
        int v40 = *v38;
        uint64_t v39 = v39 + (v40 << 7) - 128;
        if (v40 < 0)
        {
          uint64_t v66 = sub_188C138((uint64_t)v9, v39);
          *(void *)uint64_t v77 = v66;
          *(unsigned char *)(a1 + 109) = v67 != 0;
          if (!v66) {
            goto LABEL_144;
          }
        }
        else
        {
          uint64_t v38 = (char *)(v9 + 2);
LABEL_64:
          *(void *)uint64_t v77 = v38;
          *(unsigned char *)(a1 + 109) = v39 != 0;
        }
        goto LABEL_130;
      case 9u:
        if (v10 != 72) {
          goto LABEL_122;
        }
        v5 |= 0x100u;
        int v41 = (char *)(v9 + 1);
        uint64_t v42 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_69;
        }
        int v43 = *v41;
        uint64_t v42 = v42 + (v43 << 7) - 128;
        if (v43 < 0)
        {
          uint64_t v68 = sub_188C138((uint64_t)v9, v42);
          *(void *)uint64_t v77 = v68;
          *(unsigned char *)(a1 + 110) = v69 != 0;
          if (!v68) {
            goto LABEL_144;
          }
        }
        else
        {
          int v41 = (char *)(v9 + 2);
LABEL_69:
          *(void *)uint64_t v77 = v41;
          *(unsigned char *)(a1 + 110) = v42 != 0;
        }
        goto LABEL_130;
      case 0xAu:
        if (v10 != 80) {
          goto LABEL_122;
        }
        int v44 = (char *)(v9 + 1);
        unint64_t v24 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_74;
        }
        int v45 = *v44;
        int v46 = v24 + (v45 << 7);
        unint64_t v24 = (v46 - 128);
        if (v45 < 0)
        {
          *(void *)uint64_t v77 = sub_188C138((uint64_t)v9, (v46 - 128));
          if (!*(void *)v77) {
            goto LABEL_144;
          }
          unint64_t v24 = v70;
        }
        else
        {
          int v44 = (char *)(v9 + 2);
LABEL_74:
          *(void *)uint64_t v77 = v44;
        }
        if (sub_129EB9C(v24))
        {
          *(_DWORD *)(a1 + 16) |= 0x400u;
          *(_DWORD *)(a1 + 112) = v24;
        }
        else
        {
          if (*v8) {
            uint64_t v75 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v75 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v76 = 10;
LABEL_138:
          sub_188C020(v76, v24, v75);
        }
        goto LABEL_130;
      case 0xBu:
        if (v10 != 88) {
          goto LABEL_122;
        }
        v5 |= 0x200u;
        uint64_t v47 = (char *)(v9 + 1);
        uint64_t v48 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_81;
        }
        int v49 = *v47;
        uint64_t v48 = v48 + (v49 << 7) - 128;
        if (v49 < 0)
        {
          uint64_t v71 = sub_188C138((uint64_t)v9, v48);
          *(void *)uint64_t v77 = v71;
          *(unsigned char *)(a1 + 111) = v72 != 0;
          if (!v71) {
            goto LABEL_144;
          }
        }
        else
        {
          uint64_t v47 = (char *)(v9 + 2);
LABEL_81:
          *(void *)uint64_t v77 = v47;
          *(unsigned char *)(a1 + 111) = v48 != 0;
        }
        goto LABEL_130;
      case 0xCu:
        if (v10 != 98) {
          goto LABEL_122;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v50 = *(void *)(a1 + 80);
        if (!v50)
        {
          uint64_t v51 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v8) {
            uint64_t v51 = (void *)*v51;
          }
          uint64_t v50 = sub_129E61C((uint64_t)v51);
          *(void *)(a1 + 80) = v50;
          uint64_t v9 = *(unsigned __int8 **)v77;
        }
        uint64_t v16 = sub_1797184(a3, v50, v9);
        goto LABEL_129;
      case 0xDu:
        if (v10 != 106) {
          goto LABEL_122;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v52 = *(void **)(a1 + 88);
        if (!v52)
        {
          uint64_t v53 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v8) {
            uint64_t v53 = (void *)*v53;
          }
          uint64_t v52 = sub_12BBF44((uint64_t)v53);
          *(void *)(a1 + 88) = v52;
          uint64_t v9 = *(unsigned __int8 **)v77;
        }
        uint64_t v16 = (uint64_t)sub_1209958(a3, (uint64_t)v52, v9);
        goto LABEL_129;
      case 0xEu:
        if (v10 != 114) {
          goto LABEL_122;
        }
        uint64_t v54 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          uint64_t v55 = (char *)(v54 + 1);
          *(void *)uint64_t v77 = v54 + 1;
          uint64_t v56 = *(_DWORD **)(a1 + 56);
          if (v56 && (uint64_t v57 = *(int *)(a1 + 48), (int)v57 < *v56))
          {
            *(_DWORD *)(a1 + 48) = v57 + 1;
            uint64_t v58 = *(std::string **)&v56[2 * v57 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            void *v60 = v59;
            v60[1] = sub_3A6EDC;
            *int v59 = 0;
            v59[1] = 0;
            v59[2] = 0;
            uint64_t v58 = (std::string *)sub_188CDC8(a1 + 40, (uint64_t)v59);
            uint64_t v55 = *(char **)v77;
          }
          uint64_t v54 = sub_188C244(v58, v55, (uint64_t)a3);
          *(void *)uint64_t v77 = v54;
          if (!v54) {
            goto LABEL_144;
          }
          if (*(void *)a3 <= (unint64_t)v54 || *v54 != 114) {
            goto LABEL_130;
          }
        }
      default:
        goto LABEL_122;
    }
  }
}

char *sub_17A0D48(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 64);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      uint64_t v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      uint64_t v9 = v4 + 2;
    }
    uint64_t v4 = sub_1792424(v7, (unint64_t)v9, a3);
    if ((v6 & 0x10) == 0)
    {
LABEL_3:
      if ((v6 & 0x800) == 0) {
        goto LABEL_20;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 96);
  *uint64_t v4 = 17;
  *(void *)(v4 + 1) = v10;
  v4 += 9;
  if ((v6 & 0x800) != 0)
  {
LABEL_14:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v11 = *(int *)(a1 + 116);
    *uint64_t v4 = 24;
    v4[1] = v11;
    if (v11 > 0x7F)
    {
      v4[1] = v11 | 0x80;
      unint64_t v12 = v11 >> 7;
      v4[2] = v11 >> 7;
      v4 += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v13 = v12 >> 14;
          v12 >>= 7;
          *v4++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_20:
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v14 = *(unsigned char *)(a1 + 108);
    *uint64_t v4 = 32;
    v4[1] = v14;
    v4 += 2;
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v15 = *(int *)(a1 + 104);
    *uint64_t v4 = 40;
    v4[1] = v15;
    if (v15 > 0x7F)
    {
      v4[1] = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      v4[2] = v15 >> 7;
      v4 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *v4++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v18 = *(unsigned int *)(a1 + 24);
  if ((int)v18 >= 1)
  {
    for (uint64_t i = 0; i != v18; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v20 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *uint64_t v4 = 48;
      v4[1] = v20;
      if (v20 > 0x7F)
      {
        v4[1] = v20 | 0x80;
        unint64_t v21 = v20 >> 7;
        v4[2] = v20 >> 7;
        v4 += 3;
        if (v20 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v22 = v21 >> 14;
            v21 >>= 7;
            *v4++ = v21;
          }
          while (v22);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v23 = *(void *)(a1 + 72);
    *uint64_t v4 = 58;
    unsigned int v24 = *(_DWORD *)(v23 + 44);
    v4[1] = v24;
    if (v24 > 0x7F) {
      int v25 = sub_188A9CC(v24, v4 + 1);
    }
    else {
      int v25 = v4 + 2;
    }
    uint64_t v4 = sub_1362F44(v23, v25, a3);
    if ((v6 & 0x80) == 0)
    {
LABEL_42:
      if ((v6 & 0x100) == 0) {
        goto LABEL_43;
      }
      goto LABEL_54;
    }
  }
  else if ((v6 & 0x80) == 0)
  {
    goto LABEL_42;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v26 = *(unsigned char *)(a1 + 109);
  *uint64_t v4 = 64;
  v4[1] = v26;
  v4 += 2;
  if ((v6 & 0x100) == 0)
  {
LABEL_43:
    if ((v6 & 0x400) == 0) {
      goto LABEL_63;
    }
    goto LABEL_57;
  }
LABEL_54:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v27 = *(unsigned char *)(a1 + 110);
  *uint64_t v4 = 72;
  v4[1] = v27;
  v4 += 2;
  if ((v6 & 0x400) != 0)
  {
LABEL_57:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v28 = *(int *)(a1 + 112);
    *uint64_t v4 = 80;
    v4[1] = v28;
    if (v28 > 0x7F)
    {
      v4[1] = v28 | 0x80;
      unint64_t v29 = v28 >> 7;
      v4[2] = v28 >> 7;
      v4 += 3;
      if (v28 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v30 = v29 >> 14;
          v29 >>= 7;
          *v4++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_63:
  if ((v6 & 0x200) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v31 = *(unsigned char *)(a1 + 111);
    *uint64_t v4 = 88;
    v4[1] = v31;
    v4 += 2;
    if ((v6 & 4) == 0)
    {
LABEL_65:
      if ((v6 & 8) == 0) {
        goto LABEL_82;
      }
      goto LABEL_76;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_65;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v32 = *(void *)(a1 + 80);
  *uint64_t v4 = 98;
  unsigned int v33 = *(_DWORD *)(v32 + 80);
  v4[1] = v33;
  if (v33 > 0x7F) {
    unint64_t v34 = sub_188A9CC(v33, v4 + 1);
  }
  else {
    unint64_t v34 = v4 + 2;
  }
  uint64_t v4 = sub_12991CC(v32, v34, a3);
  if ((v6 & 8) != 0)
  {
LABEL_76:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v35 = *(void *)(a1 + 88);
    *uint64_t v4 = 106;
    unsigned int v36 = *(_DWORD *)(v35 + 20);
    v4[1] = v36;
    if (v36 > 0x7F) {
      int v37 = sub_188A9CC(v36, v4 + 1);
    }
    else {
      int v37 = v4 + 2;
    }
    uint64_t v4 = sub_12A4C18(v35, (unint64_t)v37, a3);
  }
LABEL_82:
  uint64_t v38 = *(unsigned int *)(a1 + 48);
  if ((int)v38 >= 1)
  {
    uint64_t v39 = 0;
    uint64_t v40 = 8 * v38;
    do
    {
      int v41 = *(void **)(*(void *)(a1 + 56) + v39 + 8);
      if (*((char *)v41 + 23) < 0)
      {
        int64_t v42 = v41[1];
        if (v42 > 127) {
          goto LABEL_93;
        }
      }
      else
      {
        int64_t v42 = *((unsigned __int8 *)v41 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v42)
      {
        *uint64_t v4 = 114;
        v4[1] = v42;
        if (*((char *)v41 + 23) < 0) {
          int v41 = (void *)*v41;
        }
        int v43 = v4 + 2;
        memcpy(v43, v41, v42);
        uint64_t v4 = &v43[v42];
        goto LABEL_91;
      }
LABEL_93:
      uint64_t v4 = (char *)sub_188A868(a3, 14, (uint64_t)v41, v4);
LABEL_91:
      v39 += 8;
    }
    while (v40 != v39);
  }
  uint64_t v44 = *(void *)(a1 + 8);
  if ((v44 & 1) == 0) {
    return v4;
  }
  unint64_t v46 = v44 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v46 + 31) < 0)
  {
    uint64_t v47 = *(void **)(v46 + 8);
    uint64_t v48 = *(void *)(v46 + 16);
  }
  else
  {
    uint64_t v47 = (void *)(v46 + 8);
    LODWORD(v48) = *(unsigned __int8 *)(v46 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v48)
  {
    uint64_t v49 = (int)v48;
    memcpy(v4, v47, (int)v48);
    v4 += v49;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v47, v48, v4);
}

uint64_t sub_17A1394(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v3);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v4 += v6;
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v7 = v4 + v2;
  uint64_t v8 = *(unsigned int *)(a1 + 48);
  uint64_t v9 = v7 + v8;
  if ((int)v8 >= 1)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v9 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      --v8;
    }
    while (v8);
  }
  int v14 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v14)
  {
    if (v14)
    {
      uint64_t v29 = sub_1792638(*(void *)(a1 + 64));
      v9 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v14 & 2) == 0)
      {
LABEL_17:
        if ((v14 & 4) == 0) {
          goto LABEL_18;
        }
        goto LABEL_52;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_17;
    }
    uint64_t v30 = sub_136363C(*(void *)(a1 + 72));
    v9 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v14 & 4) == 0)
    {
LABEL_18:
      if ((v14 & 8) == 0)
      {
LABEL_20:
        uint64_t v16 = v9 + 9;
        if ((v14 & 0x10) == 0) {
          uint64_t v16 = v9;
        }
        if ((v14 & 0x20) != 0)
        {
          int v17 = *(_DWORD *)(a1 + 104);
          uint64_t v18 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
          if (v17 >= 0) {
            uint64_t v19 = v18;
          }
          else {
            uint64_t v19 = 11;
          }
          v16 += v19;
        }
        if ((v14 & 0x40) != 0) {
          v16 += 2;
        }
        if ((v14 & 0x80) != 0) {
          uint64_t v9 = v16 + 2;
        }
        else {
          uint64_t v9 = v16;
        }
        goto LABEL_32;
      }
LABEL_19:
      uint64_t v15 = sub_12A4ED4(*(void *)(a1 + 88));
      v9 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
      goto LABEL_20;
    }
LABEL_52:
    uint64_t v31 = sub_1299454(*(void *)(a1 + 80));
    v9 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v14 & 8) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_32:
  if ((v14 & 0xF00) != 0)
  {
    uint64_t v20 = v9 + 2;
    if ((v14 & 0x100) == 0) {
      uint64_t v20 = v9;
    }
    if ((v14 & 0x200) != 0) {
      uint64_t v9 = v20 + 2;
    }
    else {
      uint64_t v9 = v20;
    }
    if ((v14 & 0x400) != 0)
    {
      int v21 = *(_DWORD *)(a1 + 112);
      uint64_t v22 = ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v21 >= 0) {
        uint64_t v23 = v22;
      }
      else {
        uint64_t v23 = 11;
      }
      v9 += v23;
    }
    if ((v14 & 0x800) != 0)
    {
      int v24 = *(_DWORD *)(a1 + 116);
      uint64_t v25 = ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v24 >= 0) {
        uint64_t v26 = v25;
      }
      else {
        uint64_t v26 = 11;
      }
      v9 += v26;
    }
  }
  uint64_t v27 = *(void *)(a1 + 8);
  if (v27)
  {
    unint64_t v32 = v27 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v32 + 31) < 0) {
      uint64_t v33 = *(void *)(v32 + 16);
    }
    else {
      uint64_t v33 = *(unsigned __int8 *)(v32 + 31);
    }
    v9 += v33;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

void sub_17A165C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188C80C((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 48);
  if (v8)
  {
    uint64_t v9 = (const std::string **)(*(void *)(a2 + 56) + 8);
    uint64_t v10 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_188FB98(a1 + 40, v10, v9, v8, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v11 = *(_DWORD *)(a1 + 48) + v8;
    *(_DWORD *)(a1 + 48) = v11;
    uint64_t v12 = *(int **)(a1 + 56);
    if (*v12 < v11) {
      *uint64_t v12 = v11;
    }
  }
  int v13 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v13)
  {
    if (v13)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v15 = *(void **)(a1 + 64);
      if (!v15)
      {
        uint64_t v16 = *(void *)(a1 + 8);
        int v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          int v17 = (void *)*v17;
        }
        uint64_t v15 = sub_18302C8((uint64_t)v17);
        *(void *)(a1 + 64) = v15;
      }
      if (*(void *)(a2 + 64)) {
        uint64_t v18 = *(uint64_t (****)())(a2 + 64);
      }
      else {
        uint64_t v18 = &off_2549800;
      }
      sub_1792730((uint64_t)v15, (uint64_t)v18);
      if ((v13 & 2) == 0)
      {
LABEL_9:
        if ((v13 & 4) == 0) {
          goto LABEL_10;
        }
        goto LABEL_44;
      }
    }
    else if ((v13 & 2) == 0)
    {
      goto LABEL_9;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v19 = *(void *)(a1 + 72);
    if (!v19)
    {
      uint64_t v20 = *(void *)(a1 + 8);
      int v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        int v21 = (void *)*v21;
      }
      uint64_t v19 = sub_1363A48((uint64_t)v21);
      *(void *)(a1 + 72) = v19;
    }
    if (*(void *)(a2 + 72)) {
      uint64_t v22 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      uint64_t v22 = &off_25343A8;
    }
    sub_1363878(v19, (uint64_t)v22);
    if ((v13 & 4) == 0)
    {
LABEL_10:
      if ((v13 & 8) == 0) {
        goto LABEL_11;
      }
      goto LABEL_52;
    }
LABEL_44:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v23 = *(std::string **)(a1 + 80);
    if (!v23)
    {
      uint64_t v24 = *(void *)(a1 + 8);
      uint64_t v25 = (void *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
      if (v24) {
        uint64_t v25 = (void *)*v25;
      }
      uint64_t v23 = (std::string *)sub_129E61C((uint64_t)v25);
      *(void *)(a1 + 80) = v23;
    }
    if (*(void *)(a2 + 80)) {
      uint64_t v26 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      uint64_t v26 = &off_25305C8;
    }
    sub_129956C(v23, (uint64_t)v26);
    if ((v13 & 8) == 0)
    {
LABEL_11:
      if ((v13 & 0x10) == 0) {
        goto LABEL_12;
      }
      goto LABEL_60;
    }
LABEL_52:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v27 = *(void **)(a1 + 88);
    if (!v27)
    {
      uint64_t v28 = *(void *)(a1 + 8);
      uint64_t v29 = (void *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
      if (v28) {
        uint64_t v29 = (void *)*v29;
      }
      uint64_t v27 = sub_12BBF44((uint64_t)v29);
      *(void *)(a1 + 88) = v27;
    }
    if (*(void *)(a2 + 88)) {
      uint64_t v30 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      uint64_t v30 = &off_25309E0;
    }
    sub_12A5038((uint64_t)v27, (uint64_t)v30);
    if ((v13 & 0x10) == 0)
    {
LABEL_12:
      if ((v13 & 0x20) == 0) {
        goto LABEL_13;
      }
      goto LABEL_61;
    }
LABEL_60:
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    if ((v13 & 0x20) == 0)
    {
LABEL_13:
      if ((v13 & 0x40) == 0) {
        goto LABEL_14;
      }
      goto LABEL_62;
    }
LABEL_61:
    *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
    if ((v13 & 0x40) == 0)
    {
LABEL_14:
      if ((v13 & 0x80) == 0)
      {
LABEL_16:
        *(_DWORD *)(a1 + 16) |= v13;
        goto LABEL_17;
      }
LABEL_15:
      *(unsigned char *)(a1 + 109) = *(unsigned char *)(a2 + 109);
      goto LABEL_16;
    }
LABEL_62:
    *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
    if ((v13 & 0x80) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_17:
  if ((v13 & 0xF00) == 0) {
    goto LABEL_24;
  }
  if ((v13 & 0x100) != 0)
  {
    *(unsigned char *)(a1 + 110) = *(unsigned char *)(a2 + 110);
    if ((v13 & 0x200) == 0)
    {
LABEL_20:
      if ((v13 & 0x400) == 0) {
        goto LABEL_21;
      }
LABEL_66:
      *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
      if ((v13 & 0x800) == 0) {
        goto LABEL_23;
      }
      goto LABEL_22;
    }
  }
  else if ((v13 & 0x200) == 0)
  {
    goto LABEL_20;
  }
  *(unsigned char *)(a1 + 111) = *(unsigned char *)(a2 + 111);
  if ((v13 & 0x400) != 0) {
    goto LABEL_66;
  }
LABEL_21:
  if ((v13 & 0x800) != 0) {
LABEL_22:
  }
    *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
LABEL_23:
  *(_DWORD *)(a1 + 16) |= v13;
LABEL_24:
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17A195C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 64);
    if (*(unsigned char *)(v3 + 16))
    {
      uint64_t result = sub_15B1FC0(*(void *)(v3 + 24));
      if (!result) {
        return result;
      }
      int v2 = *(_DWORD *)(a1 + 16);
    }
  }
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_1363A30(*(void *)(a1 + 72));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) == 0) {
    return 1;
  }
  uint64_t result = sub_12A51B0(*(void *)(a1 + 88));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17A19C8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchBrowseCategorySuggestionParameters");
}

uint64_t sub_17A19D8(uint64_t result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)uint64_t result = off_24DAE98;
  *(void *)(result + 8) = v3;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a2;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_17A1A10(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  int v5 = (uint64_t *)(a1 + 16);
  *(void *)a1 = off_24DAE98;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    int v8 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_12C4AE8(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    uint64_t v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_17A1AF0(_Unwind_Exception *a1)
{
  sub_12C4568(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17A1B38(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C4568(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17A1BB8(void *a1)
{
  sub_17A1B38(a1);

  operator delete();
}

uint64_t sub_17A1BF0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_129FB6C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  int v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_17A1C6C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    int v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          int v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            int v17 = sub_12BBAE4(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            int v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = (char *)sub_129EFC8(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_17A1E0C(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = (char *)sub_12A03B8(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_17A1F50(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12A0848(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void sub_17A2000(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_12C4AE8((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_17A20D0(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_17A1BF0(a1);
    sub_17A2000(a1, a2);
  }
}

BOOL sub_17A211C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_12A0DC4(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

__n128 sub_17A2174(__n128 *a1, __n128 *a2)
{
  unint64_t v2 = a1->n128_u64[1];
  a1->n128_u64[1] = a2->n128_u64[1];
  a2->n128_u64[1] = v2;
  unint64_t v3 = a1[1].n128_u64[0];
  unint64_t v4 = a1[1].n128_u64[1];
  __n128 result = a2[1];
  a1[1] = result;
  a2[1].n128_u64[0] = v3;
  a2[1].n128_u64[1] = v4;
  unint64_t v6 = a1[2].n128_u64[0];
  a1[2].n128_u64[0] = a2[2].n128_u64[0];
  a2[2].n128_u64[0] = v6;
  return result;
}

void *sub_17A21A8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchBrowseCategorySuggestionResult");
}

uint64_t sub_17A21B8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24DAF18;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  char v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C4B74(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    unint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *unint64_t v10 = v9;
    }
  }
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  int v11 = *(_DWORD *)(a2 + 56);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 64);
    unint64_t v13 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C4B74((uint64_t *)(a1 + 48), v13, (uint64_t *)(v12 + 8), v11, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v14 = *(_DWORD *)(a1 + 56) + v11;
    *(_DWORD *)(a1 + 56) = v14;
    uint64_t v15 = *(int **)(a1 + 64);
    if (*v15 < v14) {
      *uint64_t v15 = v14;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v16 = *(_DWORD *)(a2 + 80);
  if (v16)
  {
    uint64_t v17 = *(void *)(a2 + 88);
    uint64_t v18 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_188FB98(a1 + 72, v18, (const std::string **)(v17 + 8), v16, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v19 = *(_DWORD *)(a1 + 80) + v16;
    *(_DWORD *)(a1 + 80) = v19;
    uint64_t v20 = *(int **)(a1 + 88);
    if (*v20 < v19) {
      int *v20 = v19;
    }
  }
  uint64_t v21 = *(void *)(a2 + 8);
  if (v21) {
    sub_188B4F8(v4, (v21 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

void sub_17A23BC()
{
}

uint64_t sub_17A2444(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2549D50)
  {
    uint64_t v6 = *(void *)(a1 + 96);
    if (v6)
    {
      sub_179203C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1889DE8((void *)(a1 + 72));
  sub_12C45E8((void *)(a1 + 48));
  sub_12C45E8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17A251C(uint64_t a1)
{
  sub_17A2444(a1);

  operator delete();
}

uint64_t sub_17A2554(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_16CD894(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(a1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_16CD894(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 72);
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t result = (uint64_t)sub_179212C(*(unsigned char **)(a1 + 96));
  }
  char v10 = *(unsigned char *)(a1 + 8);
  uint64_t v9 = a1 + 8;
  *(void *)(v9 + 96) = 0;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

uint64_t sub_17A2618(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v37 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v37, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (uint64_t **)(a1 + 72);
  uint64_t v8 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v9 = (unsigned __int8 *)(*(void *)v37 + 1);
    unsigned int v10 = **(unsigned char **)v37;
    if ((char)**(unsigned char **)v37 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        uint64_t v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v37, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        uint64_t v9 = (unsigned __int8 *)(*(void *)v37 + 2);
      }
    }
    *(void *)int v37 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_49;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        unint64_t v13 = *(void **)(a1 + 96);
        if (!v13)
        {
          int v14 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v8) {
            int v14 = (void *)*v14;
          }
          unint64_t v13 = sub_18302C8((uint64_t)v14);
          *(void *)(a1 + 96) = v13;
          uint64_t v9 = *(unsigned __int8 **)v37;
        }
        uint64_t v15 = sub_120FE50(a3, (uint64_t)v13, v9);
        goto LABEL_56;
      case 2u:
        if (v10 != 17) {
          goto LABEL_49;
        }
        v5 |= 2u;
        *(void *)(a1 + 104) = *(void *)v9;
        *(void *)int v37 = v9 + 8;
        goto LABEL_57;
      case 3u:
        if (v10 != 26) {
          goto LABEL_49;
        }
        int v16 = (char *)(v9 - 1);
        while (1)
        {
          uint64_t v17 = (unsigned __int8 *)(v16 + 1);
          *(void *)int v37 = v16 + 1;
          uint64_t v18 = *(_DWORD **)(a1 + 40);
          if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
          {
            *(_DWORD *)(a1 + 32) = v19 + 1;
            uint64_t v20 = *(void *)&v18[2 * v19 + 2];
          }
          else
          {
            uint64_t v21 = sub_185089C(*(void *)(a1 + 24));
            uint64_t v20 = sub_188CDC8(a1 + 24, v21);
            uint64_t v17 = *(unsigned __int8 **)v37;
          }
          int v16 = sub_12688D0(a3, v20, v17);
          *(void *)int v37 = v16;
          if (!v16) {
            goto LABEL_62;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
            goto LABEL_57;
          }
        }
      case 4u:
        if (v10 != 34) {
          goto LABEL_49;
        }
        uint64_t v22 = (char *)(v9 - 1);
        while (1)
        {
          uint64_t v23 = (unsigned __int8 *)(v22 + 1);
          *(void *)int v37 = v22 + 1;
          uint64_t v24 = *(_DWORD **)(a1 + 64);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 56), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 56) = v25 + 1;
            uint64_t v26 = *(void *)&v24[2 * v25 + 2];
          }
          else
          {
            uint64_t v27 = sub_185089C(*(void *)(a1 + 48));
            uint64_t v26 = sub_188CDC8(a1 + 48, v27);
            uint64_t v23 = *(unsigned __int8 **)v37;
          }
          uint64_t v22 = sub_12688D0(a3, v26, v23);
          *(void *)int v37 = v22;
          if (!v22) {
            goto LABEL_62;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 34) {
            goto LABEL_57;
          }
        }
      case 5u:
        if (v10 != 42) {
          goto LABEL_49;
        }
        uint64_t v28 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          uint64_t v29 = (char *)(v28 + 1);
          *(void *)int v37 = v28 + 1;
          uint64_t v30 = *(_DWORD **)(a1 + 88);
          if (v30 && (uint64_t v31 = *(int *)(a1 + 80), (int)v31 < *v30))
          {
            *(_DWORD *)(a1 + 80) = v31 + 1;
            unint64_t v32 = *(std::string **)&v30[2 * v31 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            void *v34 = v33;
            v34[1] = sub_3A6EDC;
            *uint64_t v33 = 0;
            v33[1] = 0;
            v33[2] = 0;
            unint64_t v32 = (std::string *)sub_188CDC8(a1 + 72, (uint64_t)v33);
            uint64_t v29 = *(char **)v37;
          }
          uint64_t v28 = sub_188C244(v32, v29, (uint64_t)a3);
          *(void *)int v37 = v28;
          if (!v28) {
            goto LABEL_62;
          }
          if (*(void *)a3 <= (unint64_t)v28 || *v28 != 42) {
            goto LABEL_57;
          }
        }
      default:
LABEL_49:
        if (v10) {
          BOOL v35 = (v10 & 7) == 4;
        }
        else {
          BOOL v35 = 1;
        }
        if (!v35)
        {
          if (*v8)
          {
            unsigned int v36 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v9 = *(unsigned __int8 **)v37;
          }
          uint64_t v15 = sub_1885AC0(v10, v36, (char *)v9, a3);
LABEL_56:
          *(void *)int v37 = v15;
          if (!v15) {
            goto LABEL_62;
          }
LABEL_57:
          if (sub_11947B8((uint64_t)a3, (char **)v37, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_62:
        }
          *(void *)int v37 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v37;
    }
  }
}

char *sub_17A2A00(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 96);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      uint64_t v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      uint64_t v9 = v4 + 2;
    }
    uint64_t v4 = sub_1792424(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 104);
    *uint64_t v4 = 17;
    *(void *)(v4 + 1) = v10;
    v4 += 9;
  }
  int v11 = *(_DWORD *)(a1 + 32);
  if (v11)
  {
    for (int i = 0; i != v11; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 26;
      unsigned int v14 = *(_DWORD *)(v13 + 44);
      v4[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, v4 + 1);
      }
      else {
        uint64_t v15 = v4 + 2;
      }
      uint64_t v4 = sub_184B3AC(v13, v15, a3);
    }
  }
  int v16 = *(_DWORD *)(a1 + 56);
  if (v16)
  {
    for (int j = 0; j != v16; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *uint64_t v4 = 34;
      unsigned int v19 = *(_DWORD *)(v18 + 44);
      v4[1] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, v4 + 1);
      }
      else {
        uint64_t v20 = v4 + 2;
      }
      uint64_t v4 = sub_184B3AC(v18, v20, a3);
    }
  }
  uint64_t v21 = *(unsigned int *)(a1 + 80);
  if ((int)v21 >= 1)
  {
    uint64_t v22 = 0;
    uint64_t v23 = 8 * v21;
    do
    {
      uint64_t v24 = *(void **)(*(void *)(a1 + 88) + v22 + 8);
      if (*((char *)v24 + 23) < 0)
      {
        int64_t v25 = v24[1];
        if (v25 > 127) {
          goto LABEL_39;
        }
      }
      else
      {
        int64_t v25 = *((unsigned __int8 *)v24 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v25)
      {
        *uint64_t v4 = 42;
        v4[1] = v25;
        if (*((char *)v24 + 23) < 0) {
          uint64_t v24 = (void *)*v24;
        }
        uint64_t v26 = v4 + 2;
        memcpy(v26, v24, v25);
        uint64_t v4 = &v26[v25];
        goto LABEL_37;
      }
LABEL_39:
      uint64_t v4 = (char *)sub_188A868(a3, 5, (uint64_t)v24, v4);
LABEL_37:
      v22 += 8;
    }
    while (v23 != v22);
  }
  uint64_t v27 = *(void *)(a1 + 8);
  if ((v27 & 1) == 0) {
    return v4;
  }
  unint64_t v29 = v27 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v29 + 31) < 0)
  {
    uint64_t v30 = *(void **)(v29 + 8);
    uint64_t v31 = *(void *)(v29 + 16);
  }
  else
  {
    uint64_t v30 = (void *)(v29 + 8);
    LODWORD(v31) = *(unsigned __int8 *)(v29 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v31)
  {
    uint64_t v32 = (int)v31;
    memcpy(v4, v30, (int)v31);
    v4 += v32;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v30, v31, v4);
}

uint64_t sub_17A2D10(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_184B568(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_184B568(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(unsigned int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  if ((int)v15 >= 1)
  {
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v18 = *v17++;
      uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
      uint64_t v20 = *(void *)(v18 + 8);
      if ((v19 & 0x80u) == 0) {
        uint64_t v20 = v19;
      }
      v16 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6);
      --v15;
    }
    while (v15);
  }
  int v21 = *(_DWORD *)(a1 + 16);
  if ((v21 & 3) != 0)
  {
    if (v21)
    {
      uint64_t v22 = sub_1792638(*(void *)(a1 + 96));
      v16 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v21 & 2) != 0) {
      v16 += 9;
    }
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if (v23)
  {
    unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v25 + 31) < 0) {
      uint64_t v26 = *(void *)(v25 + 16);
    }
    else {
      uint64_t v26 = *(unsigned __int8 *)(v25 + 31);
    }
    v16 += v26;
  }
  *(_DWORD *)(a1 + 20) = v16;
  return v16;
}

void sub_17A2EB0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C4B74((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C4B74((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (const std::string **)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_188FB98(a1 + 72, v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    uint64_t v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 16);
  if ((v19 & 3) != 0)
  {
    if (v19)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v20 = *(void **)(a1 + 96);
      if (!v20)
      {
        uint64_t v21 = *(void *)(a1 + 8);
        uint64_t v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          uint64_t v22 = (void *)*v22;
        }
        uint64_t v20 = sub_18302C8((uint64_t)v22);
        *(void *)(a1 + 96) = v20;
      }
      if (*(void *)(a2 + 96)) {
        uint64_t v23 = *(uint64_t (****)())(a2 + 96);
      }
      else {
        uint64_t v23 = &off_2549800;
      }
      sub_1792730((uint64_t)v20, (uint64_t)v23);
    }
    if ((v19 & 2) != 0) {
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
    }
    *(_DWORD *)(a1 + 16) |= v19;
  }
  uint64_t v24 = *(void *)(a2 + 8);
  if (v24)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v24 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_17A30B8(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_16CE508(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v5 = *(unsigned int *)(a1 + 56);
  while ((int)v5 >= 1)
  {
    uint64_t v6 = v5 - 1;
    char v7 = sub_16CE508(*(void *)(*(void *)(a1 + 64) + 8 * v5));
    uint64_t v5 = v6;
    if ((v7 & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t v9 = *(void *)(a1 + 96);
  if ((*(unsigned char *)(v9 + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = sub_15B1FC0(*(void *)(v9 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17A3150@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.CollectionSuggestionParameters");
}

uint64_t sub_17A3160(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  char v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24DAF98;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C4B74(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  return a1;
}

void sub_17A3284()
{
}

uint64_t sub_17A32E8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2549DC0)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_1749680(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_12C45E8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17A33AC(uint64_t a1)
{
  sub_17A32E8(a1);

  operator delete();
}

uint64_t sub_17A33E4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      BOOL result = (uint64_t)sub_16CD894(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    BOOL result = sub_17211A4(*(void *)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_17A3474(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v23 + 2;
      }
    }
    uint64_t v23 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void **)(a1 + 48);
    if (!v15)
    {
      uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v15 = sub_178B77C((uint64_t)v16);
      *(void *)(a1 + 48) = v15;
      uint64_t v7 = v23;
    }
    int v14 = (char *)sub_1725C54(a3, (uint64_t)v15, (unsigned __int8 *)v7);
LABEL_26:
    uint64_t v23 = v14;
    if (!v14) {
      return 0;
    }
LABEL_27:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    int v17 = v7 - 1;
    while (1)
    {
      uint64_t v18 = (unsigned __int8 *)(v17 + 1);
      uint64_t v23 = v17 + 1;
      int v19 = *(_DWORD **)(a1 + 40);
      if (v19 && (uint64_t v20 = *(int *)(a1 + 32), (int)v20 < *v19))
      {
        *(_DWORD *)(a1 + 32) = v20 + 1;
        uint64_t v21 = *(void *)&v19[2 * v20 + 2];
      }
      else
      {
        uint64_t v22 = sub_185089C(*(void *)(a1 + 24));
        uint64_t v21 = sub_188CDC8(a1 + 24, v22);
        uint64_t v18 = (unsigned __int8 *)v23;
      }
      int v17 = sub_12688D0(a3, v21, v18);
      uint64_t v23 = v17;
      if (!v17) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v17 || *v17 != 10) {
        goto LABEL_27;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v23;
    }
    int v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_26;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

char *sub_17A367C(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_184B3AC(v8, v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v11 = *(void *)(a1 + 48);
    *__dst = 18;
    unsigned int v12 = *(_DWORD *)(v11 + 20);
    __dst[1] = v12;
    if (v12 > 0x7F) {
      uint64_t v13 = sub_188A9CC(v12, __dst + 1);
    }
    else {
      uint64_t v13 = __dst + 2;
    }
    __dst = sub_1749944(v11, (unint64_t)v13, a3);
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return __dst;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(__dst, v17, (int)v18);
    __dst += v19;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, __dst);
}

uint64_t sub_17A3828(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_184B568(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v8 = sub_1749A80(*(void *)(a1 + 48));
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_17A390C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C4B74((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    *(_DWORD *)(a1 + 16) |= 1u;
    unsigned int v10 = *(void **)(a1 + 48);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      unsigned int v10 = sub_178B77C((uint64_t)v12);
      *(void *)(a1 + 48) = v10;
      uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    }
    if (v9) {
      uint64_t v13 = v9;
    }
    else {
      uint64_t v13 = &off_2547AF0;
    }
    sub_172EA84((uint64_t)v10, (uint64_t)v13);
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17A3A30(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_16CE508(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t v6 = *(void *)(a1 + 48);
  if ((*(unsigned char *)(v6 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_1704CAC(*(void *)(v6 + 32));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17A3AA0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.CollectionSuggestionResult");
}

uint64_t sub_17A3AB0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DB018;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

void sub_17A3B64()
{
}

uint64_t sub_17A3BB4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2549DF8)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_179203C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17A3C6C(uint64_t a1)
{
  sub_17A3BB4(a1);

  operator delete();
}

unsigned char *sub_17A3CA4(unsigned char *result)
{
  uint64_t v1 = result;
  if (result[16]) {
    uint64_t result = sub_179212C(*((unsigned char **)result + 3));
  }
  char v3 = v1[8];
  uint64_t v2 = v1 + 8;
  *((void *)v2 + 3) = 0;
  *((_DWORD *)v2 + 2) = 0;
  if (v3)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_17A3D04(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v18 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
    goto LABEL_32;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v18 + 1;
    unsigned int v8 = *v18;
    if (*v18 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v18, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v18 + 2;
      }
    }
    uint64_t v18 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_12;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void **)(a1 + 24);
    if (!v15)
    {
      unint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unint64_t v16 = (void *)*v16;
      }
      uint64_t v15 = sub_18302C8((uint64_t)v16);
      *(void *)(a1 + 24) = v15;
      int v7 = v18;
    }
    uint64_t v14 = sub_120FE50(a3, (uint64_t)v15, (unsigned __int8 *)v7);
LABEL_26:
    uint64_t v18 = v14;
    if (!v14) {
      goto LABEL_33;
    }
LABEL_27:
    if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
      goto LABEL_32;
    }
  }
  if (v8 == 17)
  {
    v5 |= 2u;
    *(void *)(a1 + 32) = *(void *)v7;
    uint64_t v18 = v7 + 8;
    goto LABEL_27;
  }
LABEL_12:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v18;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_26;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_32;
  }
LABEL_33:
  uint64_t v18 = 0;
LABEL_32:
  *(_DWORD *)(a1 + 16) |= v5;
  return v18;
}

unsigned char *sub_17A3EA8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_1792424(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    *uint64_t v4 = 17;
    *(void *)(v4 + 1) = v10;
    v4 += 9;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_17A3FFC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) != 0)
  {
    if (v2)
    {
      uint64_t v5 = sub_1792638(*(void *)(a1 + 24));
      uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v3 = 0;
    }
    if ((v2 & 2) != 0) {
      uint64_t result = v3 + 9;
    }
    else {
      uint64_t result = v3;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    result += v8;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_17A40A0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v5 = *(void **)(a1 + 24);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        unint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          unint64_t v7 = (void *)*v7;
        }
        uint64_t v5 = sub_18302C8((uint64_t)v7);
        *(void *)(a1 + 24) = v5;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v8 = &off_2549800;
      }
      sub_1792730((uint64_t)v5, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
    }
    *(_DWORD *)(a1 + 16) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_17A4170(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t v1 = *(void *)(a1 + 24);
  if ((*(unsigned char *)(v1 + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = sub_15B1FC0(*(void *)(v1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17A41A8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PublisherSuggestionParameters");
}

uint64_t sub_17A41B8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = (uint64_t *)(a1 + 16);
  *(void *)a1 = off_24DB098;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_12C4B74(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    uint64_t v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_17A4298(_Unwind_Exception *a1)
{
  sub_12C45E8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17A42DC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C45E8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17A435C(void *a1)
{
  sub_17A42DC(a1);

  operator delete();
}

unsigned char *sub_17A4394(unsigned char *result)
{
  uint64_t v1 = result;
  uint64_t v2 = *((unsigned int *)result + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*((void *)result + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      BOOL result = sub_16CD894(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 6) = 0;
  }
  char v6 = v1[8];
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return (unsigned char *)sub_188B4AC(v5);
  }
  return result;
}

char *sub_17A4410(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        BOOL v12 = v6 - 1;
        while (1)
        {
          unint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_185089C(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            unint64_t v13 = (unsigned __int8 *)v19;
          }
          BOOL v12 = sub_12688D0(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_17A45B0(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_184B3AC(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_17A46F4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_184B568(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

BOOL sub_17A47A4(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_16CE508(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_17A47FC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PublisherSuggestionResult");
}

uint64_t sub_17A480C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24DB118;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = a1 + 24;
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(v5, v8, (const std::string **)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    unint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *unint64_t v10 = v9;
    }
  }
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  int v11 = *(_DWORD *)(a2 + 56);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 64);
    unint64_t v13 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C4B74((uint64_t *)(a1 + 48), v13, (uint64_t *)(v12 + 8), v11, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v14 = *(_DWORD *)(a1 + 56) + v11;
    *(_DWORD *)(a1 + 56) = v14;
    uint64_t v15 = *(int **)(a1 + 64);
    if (*v15 < v14) {
      *uint64_t v15 = v14;
    }
  }
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16) {
    sub_188B4F8(v4, (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  return a1;
}

void sub_17A49A0()
{
}

uint64_t sub_17A4A14(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2549E50)
  {
    uint64_t v6 = *(void *)(a1 + 72);
    if (v6)
    {
      sub_179203C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_12C45E8((void *)(a1 + 48));
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17A4AE0(uint64_t a1)
{
  sub_17A4A14(a1);

  operator delete();
}

uint64_t sub_17A4B18(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = (uint64_t)sub_16CD894(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t result = (uint64_t)sub_179212C(*(unsigned char **)(a1 + 72));
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_17A4BB0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v32 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1])) {
    return *(void *)v32;
  }
  uint64_t v6 = (uint64_t **)(a1 + 24);
  char v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v32 + 1);
    unsigned int v9 = **(unsigned char **)v32;
    if ((char)**(unsigned char **)v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v32 + 2);
      }
    }
    *(void *)uint64_t v32 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3) {
      break;
    }
    if (v12 == 2)
    {
      if (v9 == 18)
      {
        uint64_t v23 = (const std::string::value_type *)(v8 - 1);
        while (1)
        {
          uint64_t v24 = (char *)(v23 + 1);
          *(void *)uint64_t v32 = v23 + 1;
          unint64_t v25 = *(_DWORD **)(a1 + 40);
          if (v25 && (uint64_t v26 = *(int *)(a1 + 32), (int)v26 < *v25))
          {
            *(_DWORD *)(a1 + 32) = v26 + 1;
            uint64_t v27 = *(std::string **)&v25[2 * v26 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            *unint64_t v29 = v28;
            v29[1] = sub_3A6EDC;
            *uint64_t v28 = 0;
            v28[1] = 0;
            v28[2] = 0;
            uint64_t v27 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v28);
            uint64_t v24 = *(char **)v32;
          }
          uint64_t v23 = sub_188C244(v27, v24, (uint64_t)a3);
          *(void *)uint64_t v32 = v23;
          if (!v23) {
            goto LABEL_54;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 18) {
            goto LABEL_49;
          }
        }
      }
      goto LABEL_14;
    }
    if (v12 != 1 || v9 != 10) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v30 = *(void **)(a1 + 72);
    if (!v30)
    {
      uint64_t v31 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v31 = (void *)*v31;
      }
      uint64_t v30 = sub_18302C8((uint64_t)v31);
      *(void *)(a1 + 72) = v30;
      uint64_t v8 = *(unsigned __int8 **)v32;
    }
    uint64_t v16 = sub_120FE50(a3, (uint64_t)v30, v8);
LABEL_48:
    *(void *)uint64_t v32 = v16;
    if (!v16) {
      goto LABEL_54;
    }
LABEL_49:
    if (sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1])) {
      return *(void *)v32;
    }
  }
  if (v9 == 26)
  {
    uint64_t v17 = (char *)(v8 - 1);
    while (1)
    {
      uint64_t v18 = (unsigned __int8 *)(v17 + 1);
      *(void *)uint64_t v32 = v17 + 1;
      uint64_t v19 = *(_DWORD **)(a1 + 64);
      if (v19 && (uint64_t v20 = *(int *)(a1 + 56), (int)v20 < *v19))
      {
        *(_DWORD *)(a1 + 56) = v20 + 1;
        uint64_t v21 = *(void *)&v19[2 * v20 + 2];
      }
      else
      {
        uint64_t v22 = sub_185089C(*(void *)(a1 + 48));
        uint64_t v21 = sub_188CDC8(a1 + 48, v22);
        uint64_t v18 = *(unsigned __int8 **)v32;
      }
      uint64_t v17 = sub_12688D0(a3, v21, v18);
      *(void *)uint64_t v32 = v17;
      if (!v17) {
        goto LABEL_54;
      }
      if (*(void *)a3 <= (unint64_t)v17 || *v17 != 26) {
        goto LABEL_49;
      }
    }
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(unsigned __int8 **)v32;
    }
    uint64_t v16 = sub_1885AC0(v9, v15, (char *)v8, a3);
    goto LABEL_48;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    return *(void *)v32;
  }
LABEL_54:
  *(void *)uint64_t v32 = 0;
  return *(void *)v32;
}

char *sub_17A4EA4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 72);
    *uint64_t v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      uint64_t v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      uint64_t v8 = v4 + 2;
    }
    uint64_t v4 = sub_1792424(v6, (unint64_t)v8, a3);
  }
  uint64_t v9 = *(unsigned int *)(a1 + 32);
  if ((int)v9 >= 1)
  {
    uint64_t v10 = 0;
    uint64_t v11 = 8 * v9;
    do
    {
      unsigned int v12 = *(void **)(*(void *)(a1 + 40) + v10 + 8);
      if (*((char *)v12 + 23) < 0)
      {
        int64_t v13 = v12[1];
        if (v13 > 127) {
          goto LABEL_19;
        }
      }
      else
      {
        int64_t v13 = *((unsigned __int8 *)v12 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v13)
      {
        *uint64_t v4 = 18;
        v4[1] = v13;
        if (*((char *)v12 + 23) < 0) {
          unsigned int v12 = (void *)*v12;
        }
        BOOL v14 = v4 + 2;
        memcpy(v14, v12, v13);
        uint64_t v4 = &v14[v13];
        goto LABEL_17;
      }
LABEL_19:
      uint64_t v4 = (char *)sub_188A868(a3, 2, (uint64_t)v12, v4);
LABEL_17:
      v10 += 8;
    }
    while (v11 != v10);
  }
  int v15 = *(_DWORD *)(a1 + 56);
  if (v15)
  {
    for (int i = 0; i != v15; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v17 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *uint64_t v4 = 26;
      unsigned int v18 = *(_DWORD *)(v17 + 44);
      v4[1] = v18;
      if (v18 > 0x7F) {
        uint64_t v19 = sub_188A9CC(v18, v4 + 1);
      }
      else {
        uint64_t v19 = v4 + 2;
      }
      uint64_t v4 = sub_184B3AC(v17, v19, a3);
    }
  }
  uint64_t v20 = *(void *)(a1 + 8);
  if ((v20 & 1) == 0) {
    return v4;
  }
  unint64_t v22 = v20 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v22 + 31) < 0)
  {
    uint64_t v23 = *(void **)(v22 + 8);
    uint64_t v24 = *(void *)(v22 + 16);
  }
  else
  {
    uint64_t v23 = (void *)(v22 + 8);
    LODWORD(v24) = *(unsigned __int8 *)(v22 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v24)
  {
    uint64_t v25 = (int)v24;
    memcpy(v4, v23, (int)v24);
    v4 += v25;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v23, v24, v4);
}

uint64_t sub_17A50F8(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    uint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    uint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_184B568(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v15 = sub_1792638(*(void *)(a1 + 72));
    v9 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v18 + 31) < 0) {
      uint64_t v19 = *(void *)(v18 + 16);
    }
    else {
      uint64_t v19 = *(unsigned __int8 *)(v18 + 31);
    }
    v9 += v19;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

void sub_17A5238(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(a1 + 24, v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C4B74((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v14 = *(uint64_t (****)())(a2 + 72);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void **)(a1 + 72);
    if (!v15)
    {
      uint64_t v16 = *(void *)(a1 + 8);
      uint64_t v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        uint64_t v17 = (void *)*v17;
      }
      uint64_t v15 = sub_18302C8((uint64_t)v17);
      *(void *)(a1 + 72) = v15;
      uint64_t v14 = *(uint64_t (****)())(a2 + 72);
    }
    if (v14) {
      unint64_t v18 = v14;
    }
    else {
      unint64_t v18 = &off_2549800;
    }
    sub_1792730((uint64_t)v15, (uint64_t)v18);
  }
  uint64_t v19 = *(void *)(a2 + 8);
  if (v19)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v19 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_17A53C0(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_16CE508(*(void *)(*(void *)(a1 + 64) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t v6 = *(void *)(a1 + 72);
  if ((*(unsigned char *)(v6 + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = sub_15B1FC0(*(void *)(v6 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17A5430@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSuggestionParameters");
}

void *sub_17A5440(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C45E8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17A54C0(void *a1)
{
  sub_17A5440(a1);

  operator delete();
}

unsigned char *sub_17A54F8(unsigned char *result)
{
  uint64_t v1 = result;
  uint64_t v2 = *((unsigned int *)result + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*((void *)result + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      BOOL result = sub_16CD894(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 6) = 0;
  }
  char v6 = v1[8];
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return (unsigned char *)sub_188B4AC(v5);
  }
  return result;
}

char *sub_17A5574(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        int v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_185089C(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          int v12 = sub_12688D0(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_17A5714(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_184B3AC(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_17A5858(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_184B568(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

BOOL sub_17A5908(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_16CE508(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_17A5960@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSuggestionResult");
}

uint64_t sub_17A5970(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DB218;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  return a1;
}

void sub_17A5A1C()
{
}

uint64_t sub_17A5A6C(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2549ED0)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_179203C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17A5B24(uint64_t a1)
{
  sub_17A5A6C(a1);

  operator delete();
}

unsigned char *sub_17A5B5C(unsigned char *result)
{
  uint64_t v1 = result;
  if (result[16]) {
    BOOL result = sub_179212C(*((unsigned char **)result + 3));
  }
  char v3 = v1[8];
  uint64_t v2 = v1 + 8;
  *((_DWORD *)v2 + 2) = 0;
  if (v3)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_17A5BB8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    uint64_t v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    unint64_t v13 = *(void **)(a1 + 24);
    if (!v13)
    {
      uint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v14 = (void *)*v14;
      }
      unint64_t v13 = sub_18302C8((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      uint64_t v6 = v16;
    }
    int v12 = sub_120FE50(a3, (uint64_t)v13, (unsigned __int8 *)v6);
LABEL_20:
    uint64_t v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v16;
    }
    int v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

unsigned char *sub_17A5D10(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *uint64_t v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_1792424(v6, (unint64_t)v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_17A5E20(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_1792638(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_17A5EA8(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    *(_DWORD *)(a1 + 16) |= 1u;
    unint64_t v5 = *(void **)(a1 + 24);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      unsigned int v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        unsigned int v7 = (void *)*v7;
      }
      unint64_t v5 = sub_18302C8((uint64_t)v7);
      *(void *)(a1 + 24) = v5;
      uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_2549800;
    }
    sub_1792730((uint64_t)v5, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_17A5F50(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t v1 = *(void *)(a1 + 24);
  if ((*(unsigned char *)(v1 + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = sub_15B1FC0(*(void *)(v1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17A5F88@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.GuidesLocationsSuggestionParameters");
}

uint64_t sub_17A5F98(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  unint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2549EF0)
  {
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_1703DA0(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1877238((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17A6070(uint64_t a1)
{
  sub_17A5F98(a1);

  operator delete();
}

uint64_t sub_17A60A8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      BOOL result = sub_1703F30(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if ((v5 & 1) == 0) {
      goto LABEL_9;
    }
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v6 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
LABEL_9:
      if ((v5 & 2) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v5 & 2) != 0) {
LABEL_10:
    }
      BOOL result = sub_1703F30(*(void *)(v1 + 56));
  }
LABEL_11:
  char v8 = *(unsigned char *)(v1 + 8);
  uint64_t v7 = v1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_17A6170(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v28 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
    return *(void *)v28;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v28 + 1);
    unsigned int v8 = **(unsigned char **)v28;
    if ((char)**(unsigned char **)v28 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v28, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v28 + 2);
      }
    }
    *(void *)uint64_t v28 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v16 = *(void *)(a1 + 8);
      uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        uint64_t v17 = (uint64_t *)*v17;
      }
      unint64_t v18 = (std::string *)sub_1880F84((void *)(a1 + 48), v17);
      uint64_t v15 = (void *)sub_188C244(v18, *(char **)v28, (uint64_t)a3);
      goto LABEL_31;
    }
    if (v11 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v19 = *(void *)(a1 + 56);
    if (!v19)
    {
      uint64_t v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v20 = (void *)*v20;
      }
      sub_1789B90((uint64_t)v20);
      uint64_t v19 = v21;
      *(void *)(a1 + 56) = v21;
      uint64_t v7 = *(unsigned __int8 **)v28;
    }
    uint64_t v15 = sub_1706220(a3, v19, v7);
LABEL_31:
    *(void *)uint64_t v28 = v15;
    if (!v15) {
      goto LABEL_46;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
      return *(void *)v28;
    }
  }
  if (v11 == 1 && v8 == 10)
  {
    unint64_t v22 = (char *)(v7 - 1);
    while (1)
    {
      uint64_t v23 = (unsigned __int8 *)(v22 + 1);
      *(void *)uint64_t v28 = v22 + 1;
      uint64_t v24 = *(_DWORD **)(a1 + 40);
      if (v24 && (uint64_t v25 = *(int *)(a1 + 32), (int)v25 < *v24))
      {
        *(_DWORD *)(a1 + 32) = v25 + 1;
        uint64_t v26 = *(void *)&v24[2 * v25 + 2];
      }
      else
      {
        sub_1789B90(*(void *)(a1 + 24));
        uint64_t v26 = sub_188CDC8(a1 + 24, v27);
        uint64_t v23 = *(unsigned __int8 **)v28;
      }
      unint64_t v22 = sub_1706220(a3, v26, v23);
      *(void *)uint64_t v28 = v22;
      if (!v22) {
        goto LABEL_46;
      }
      if (*(void *)a3 <= (unint64_t)v22 || *v22 != 10) {
        goto LABEL_32;
      }
    }
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v28;
    }
    uint64_t v15 = sub_1885AC0(v8, v14, (char *)v7, a3);
    goto LABEL_31;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v28;
  }
LABEL_46:
  *(void *)uint64_t v28 = 0;
  return *(void *)v28;
}

char *sub_17A63C8(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_17044FC(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if ((v11 & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v12 = *(void *)(a1 + 56);
    *__dst = 18;
    unsigned int v13 = *(_DWORD *)(v12 + 20);
    __dst[1] = v13;
    if (v13 > 0x7F) {
      uint64_t v14 = sub_188A9CC(v13, __dst + 1);
    }
    else {
      uint64_t v14 = __dst + 2;
    }
    __dst = sub_17044FC(v12, (unint64_t)v14, a3);
  }
  if (v11) {
    __dst = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return __dst;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    unint64_t v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    unint64_t v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(__dst, v18, (int)v19);
    __dst += v20;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v18, v19, __dst);
}

uint64_t sub_17A6594(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_17048E4(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      uint64_t v12 = sub_17048E4(*(void *)(a1 + 56));
      v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v2 += v16;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_17A66C4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_18788E0((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      uint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (uint64_t *)*v12;
      }
      sub_1881DF4((std::string **)(a1 + 48), v10, v12);
    }
    if ((v9 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v13 = *(void *)(a1 + 56);
      if (!v13)
      {
        uint64_t v14 = *(void *)(a1 + 8);
        unint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          unint64_t v15 = (void *)*v15;
        }
        sub_1789B90((uint64_t)v15);
        *(void *)(a1 + 56) = v13;
      }
      if (*(void *)(a2 + 56)) {
        uint64_t v16 = *(uint64_t (****)())(a2 + 56);
      }
      else {
        uint64_t v16 = &off_25464B0;
      }
      sub_1704A90(v13, (uint64_t)v16);
    }
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17A6820(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_1704CAC(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_1704CAC(*(void *)(a1 + 56));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17A6884@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.GuidesLocationsSuggestionResult");
}

uint64_t sub_17A6894(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DB318;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v5 = *(_DWORD *)(a2 + 16);
  if (v5) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  if ((v5 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  if ((v5 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  return a1;
}

void sub_17A69B8()
{
}

uint64_t sub_17A6A20(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_2549F30)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_17A3BB4(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_17A83B4(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 40);
    if (v7)
    {
      sub_179203C(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17A6B10(uint64_t a1)
{
  sub_17A6A20(a1);

  operator delete();
}

uint64_t sub_17A6B48(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) != 0)
  {
    if (v2)
    {
      uint64_t result = (uint64_t)sub_17A3CA4(*(unsigned char **)(result + 24));
      if ((v2 & 2) == 0)
      {
LABEL_4:
        if ((v2 & 4) == 0) {
          goto LABEL_6;
        }
        goto LABEL_5;
      }
    }
    else if ((v2 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t result = sub_17A6BD4(*(void *)(v1 + 32));
    if ((v2 & 4) != 0) {
LABEL_5:
    }
      uint64_t result = (uint64_t)sub_179212C(*(unsigned char **)(v1 + 40));
  }
LABEL_6:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_17A6BD4(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = (uint64_t)sub_17A78F4(*(unsigned char **)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_17A7F10(*(void *)(v1 + 32));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 32) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_17A6C48(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v26 + 2;
      }
    }
    uint64_t v26 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void **)(a1 + 24);
        if (!v12)
        {
          uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v13 = (void *)*v13;
          }
          uint64_t v12 = sub_1830A50((uint64_t)v13);
          *(void *)(a1 + 24) = v12;
          int v8 = v26;
        }
        uint64_t v14 = sub_17A6EFC(a3, (uint64_t)v12, (unsigned __int8 *)v8);
        goto LABEL_39;
      case 2u:
        if (v9 != 16) {
          goto LABEL_32;
        }
        v5 |= 8u;
        unint64_t v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v24 = (char *)sub_188C0D0((uint64_t)v8, v16);
          uint64_t v26 = v24;
          *(_DWORD *)(a1 + 48) = v25;
          if (!v24) {
            goto LABEL_47;
          }
        }
        else
        {
          unint64_t v15 = v8 + 2;
LABEL_19:
          uint64_t v26 = v15;
          *(_DWORD *)(a1 + 48) = v16;
        }
        goto LABEL_40;
      case 3u:
        if (v9 != 26) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 32);
        if (!v18)
        {
          uint64_t v19 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v19 = (void *)*v19;
          }
          uint64_t v18 = sub_1830F3C((uint64_t)v19);
          *(void *)(a1 + 32) = v18;
          int v8 = v26;
        }
        uint64_t v14 = sub_17A6F8C(a3, v18, (unsigned __int8 *)v8);
        goto LABEL_39;
      case 4u:
        if (v9 != 34) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v20 = *(void **)(a1 + 40);
        if (!v20)
        {
          uint64_t v21 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v21 = (void *)*v21;
          }
          uint64_t v20 = sub_18302C8((uint64_t)v21);
          *(void *)(a1 + 40) = v20;
          int v8 = v26;
        }
        uint64_t v14 = sub_120FE50(a3, (uint64_t)v20, (unsigned __int8 *)v8);
        goto LABEL_39;
      default:
LABEL_32:
        if (v9) {
          BOOL v22 = (v9 & 7) == 4;
        }
        else {
          BOOL v22 = 1;
        }
        if (!v22)
        {
          if (*v7)
          {
            uint64_t v23 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v26;
          }
          uint64_t v14 = (char *)sub_1885AC0(v9, v23, v8, a3);
LABEL_39:
          uint64_t v26 = v14;
          if (!v14) {
            goto LABEL_47;
          }
LABEL_40:
          if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_47:
        }
          uint64_t v26 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v26;
    }
  }
}

char *sub_17A6EFC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17A3D04(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17A6F8C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17A84BC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_17A701C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_17A3EA8(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 48);
    *char v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 32);
    *char v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      unint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      unint64_t v15 = v4 + 2;
    }
    char v4 = sub_17A8844(v13, (unint64_t)v15, a3);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 40);
    *char v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      uint64_t v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      uint64_t v18 = v4 + 2;
    }
    char v4 = sub_1792424(v16, (unint64_t)v18, a3);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    BOOL v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    BOOL v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_17A727C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_17A3FFC(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_17A8A40(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  uint64_t v8 = sub_1792638(*(void *)(a1 + 40));
  v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0) {
LABEL_10:
  }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_11:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v9 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v3 += v10;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_17A73B4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(void **)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = sub_1830A50((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v9 = &off_2549DF8;
      }
      sub_17A40A0((uint64_t)v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_28;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void *)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      unsigned int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unsigned int v12 = (void *)*v12;
      }
      uint64_t v10 = sub_1830F3C((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_2549FA8;
    }
    sub_17A752C(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
      goto LABEL_7;
    }
LABEL_28:
    *(_DWORD *)(a1 + 16) |= 4u;
    unsigned int v14 = *(void **)(a1 + 40);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      unsigned int v14 = sub_18302C8((uint64_t)v16);
      *(void *)(a1 + 40) = v14;
    }
    if (*(void *)(a2 + 40)) {
      unsigned int v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      unsigned int v17 = &off_2549800;
    }
    sub_1792730((uint64_t)v14, (uint64_t)v17);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_17A752C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(void **)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = sub_1830E4C((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v9 = &off_2549F68;
      }
      sub_17A7C40((uint64_t)v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          *(_DWORD *)(a1 + 16) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(std::string **)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      unsigned int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unsigned int v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_1830EC4((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_2549F88;
    }
    sub_1705EBC(v10, (uint64_t)v13);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17A7654(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_17A4170(*(void *)(a1 + 24));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_17A76C0(*(void *)(a1 + 32));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) == 0) {
    return 1;
  }
  uint64_t v4 = *(void *)(a1 + 40);
  if ((*(unsigned char *)(v4 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_15B1FC0(*(void *)(v4 + 24));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_17A76C0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t v1 = *(void *)(a1 + 24);
  if ((*(unsigned char *)(v1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_16CE508(*(void *)(v1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17A76F8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AllCollectionsViewParameters");
}

uint64_t sub_17A7708(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DB398;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  return a1;
}

void sub_17A77B4()
{
}

uint64_t sub_17A7804(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2549F68)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_184AFBC(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17A78BC(uint64_t a1)
{
  sub_17A7804(a1);

  operator delete();
}

unsigned char *sub_17A78F4(unsigned char *result)
{
  uint64_t v1 = result;
  if (result[16]) {
    uint64_t result = sub_16CD894(*((void *)result + 3));
  }
  char v3 = v1[8];
  uint64_t v2 = v1 + 8;
  *((_DWORD *)v2 + 2) = 0;
  if (v3)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_17A7950(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    uint64_t v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13)
    {
      unsigned int v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        unsigned int v14 = (void *)*v14;
      }
      uint64_t v13 = sub_185089C((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      uint64_t v6 = v16;
    }
    unsigned int v12 = sub_12688D0(a3, v13, (unsigned __int8 *)v6);
LABEL_20:
    uint64_t v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v16;
    }
    unsigned int v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

char *sub_17A7AA8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *uint64_t v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 44);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_184B3AC(v6, v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unsigned int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unsigned int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_17A7BB8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_184B568(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_17A7C40(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v5 = *(void *)(a1 + 24);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      unsigned int v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        unsigned int v7 = (void *)*v7;
      }
      uint64_t v5 = sub_185089C((uint64_t)v7);
      *(void *)(a1 + 24) = v5;
      uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_254D2B0;
    }
    sub_16CE3CC(v5, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17A7CE8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_16CE508(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17A7D14@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AllCollectionsViewResultFilterTypeAddress");
}

uint64_t sub_17A7D24(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DB418;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  return a1;
}

void sub_17A7DD0()
{
}

uint64_t sub_17A7E20(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2549F88)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_12A17E0(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17A7ED8(uint64_t a1)
{
  sub_17A7E20(a1);

  operator delete();
}

uint64_t sub_17A7F10(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_12A181C(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_17A7F6C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    uint64_t v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void **)(a1 + 24);
    if (!v13)
    {
      uint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v14 = (void *)*v14;
      }
      uint64_t v13 = sub_12BBBC8((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      uint64_t v6 = v16;
    }
    unsigned int v12 = (char *)sub_12B117C(a3, (uint64_t)v13, (unsigned __int8 *)v6);
LABEL_20:
    uint64_t v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v16;
    }
    unsigned int v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

char *sub_17A80C4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *uint64_t v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_12A1AC4(v6, v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unsigned int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unsigned int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_17A81D4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_12A1BDC(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

uint64_t sub_17A825C()
{
  return 1;
}

void *sub_17A8264@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AllCollectionsViewResultFilterTypeKeyword");
}

uint64_t sub_17A8274(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DB498;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v5 = *(_DWORD *)(a2 + 16);
  if (v5) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  if ((v5 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  return a1;
}

void sub_17A8360()
{
}

uint64_t sub_17A83B4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2549FA8)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_17A7804(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_17A7E20(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17A8484(uint64_t a1)
{
  sub_17A83B4(a1);

  operator delete();
}

char *sub_17A84BC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unsigned int v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unsigned int v7 = v26 + 2;
      }
    }
    uint64_t v26 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v16 = *(void **)(a1 + 32);
      if (!v16)
      {
        unsigned int v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          unsigned int v17 = (void *)*v17;
        }
        uint64_t v16 = sub_1830EC4((uint64_t)v17);
        *(void *)(a1 + 32) = v16;
        unsigned int v7 = v26;
      }
      uint64_t v15 = sub_17A87B4(a3, (uint64_t)v16, (unsigned __int8 *)v7);
      goto LABEL_33;
    }
    if (v11 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v18 = *(void **)(a1 + 24);
    if (!v18)
    {
      uint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v19 = (void *)*v19;
      }
      uint64_t v18 = sub_1830E4C((uint64_t)v19);
      *(void *)(a1 + 24) = v18;
      unsigned int v7 = v26;
    }
    uint64_t v15 = sub_17A8724(a3, (uint64_t)v18, (unsigned __int8 *)v7);
LABEL_33:
    uint64_t v26 = v15;
    if (!v15) {
      return 0;
    }
LABEL_41:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      return v26;
    }
  }
  if (v11 == 1 && v8 == 8)
  {
    uint64_t v20 = v7 + 1;
    unint64_t v21 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_38;
    }
    int v22 = *v20;
    int v23 = v21 + (v22 << 7);
    unint64_t v21 = (v23 - 128);
    if (v22 < 0)
    {
      uint64_t v26 = (char *)sub_188C138((uint64_t)v7, (v23 - 128));
      if (!v26) {
        return 0;
      }
      unint64_t v21 = v24;
    }
    else
    {
      uint64_t v20 = v7 + 2;
LABEL_38:
      uint64_t v26 = v20;
    }
    if (v21 > 2)
    {
      if (*v6) {
        int v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        int v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v21, v25);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 4u;
      *(_DWORD *)(a1 + 40) = v21;
    }
    goto LABEL_41;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v7 = v26;
    }
    uint64_t v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_33;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v26;
  }
  return 0;
}

char *sub_17A8724(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17A7950(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17A87B4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17A7F6C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_17A8844(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    *uint64_t v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unsigned int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unsigned int v12 = v4 + 2;
    }
    uint64_t v4 = sub_17A7AA8(v10, (unint64_t)v12, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 32);
    *uint64_t v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    uint64_t v4 = sub_17A80C4(v13, (unint64_t)v15, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_17A8A40(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_13;
  }
  if (v2)
  {
    uint64_t v4 = sub_17A7BB8(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_17A81D4(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    int v6 = *(_DWORD *)(a1 + 40);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v7;
  }
LABEL_13:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void *sub_17A8B4C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AllCollectionsViewResultFilter");
}

uint64_t sub_17A8B5C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24DB518;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_187896C(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    unint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *unint64_t v10 = v9;
    }
  }
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  int v11 = *(_DWORD *)(a2 + 56);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 64);
    uint64_t v13 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C4B74((uint64_t *)(a1 + 48), v13, (uint64_t *)(v12 + 8), v11, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v14 = *(_DWORD *)(a1 + 56) + v11;
    *(_DWORD *)(a1 + 56) = v14;
    uint64_t v15 = *(int **)(a1 + 64);
    if (*v15 < v14) {
      *uint64_t v15 = v14;
    }
  }
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16) {
    sub_188B4F8(v4, (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  return a1;
}

void sub_17A8CF0()
{
}

uint64_t sub_17A8D68(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2549FD8)
  {
    int v6 = *(void **)(a1 + 72);
    if (v6)
    {
      sub_17A42DC(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_12C45E8((void *)(a1 + 48));
  sub_18772B8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17A8E38(uint64_t a1)
{
  sub_17A8D68(a1);

  operator delete();
}

uint64_t sub_17A8E70(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_17A6BD4(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    int v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = (uint64_t)sub_16CD894(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = (uint64_t)sub_17A4394(*(unsigned char **)(v1 + 72));
  }
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = v1 + 8;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

char *sub_17A8F28(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v30 = a2;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    return v30;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v30 + 1;
    unsigned int v8 = *v30;
    if (*v30 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v30, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v30 + 2;
      }
    }
    uint64_t v30 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3) {
      break;
    }
    if (v11 == 2)
    {
      if (v8 == 18)
      {
        int v22 = v7 - 1;
        while (1)
        {
          int v23 = (unsigned __int8 *)(v22 + 1);
          uint64_t v30 = v22 + 1;
          unint64_t v24 = *(_DWORD **)(a1 + 40);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 32), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 32) = v25 + 1;
            uint64_t v26 = *(void *)&v24[2 * v25 + 2];
          }
          else
          {
            uint64_t v27 = sub_1830F3C(*(void *)(a1 + 24));
            uint64_t v26 = sub_188CDC8(a1 + 24, v27);
            int v23 = (unsigned __int8 *)v30;
          }
          int v22 = sub_17A6F8C(a3, v26, v23);
          uint64_t v30 = v22;
          if (!v22) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 18) {
            goto LABEL_47;
          }
        }
      }
      goto LABEL_14;
    }
    if (v11 != 1 || v8 != 10) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v28 = *(void *)(a1 + 72);
    if (!v28)
    {
      unint64_t v29 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unint64_t v29 = (void *)*v29;
      }
      uint64_t v28 = sub_1830ACC((uint64_t)v29);
      *(void *)(a1 + 72) = v28;
      uint64_t v7 = v30;
    }
    uint64_t v15 = sub_17A91C8(a3, v28, (unsigned __int8 *)v7);
LABEL_46:
    uint64_t v30 = v15;
    if (!v15) {
      return 0;
    }
LABEL_47:
    if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
      return v30;
    }
  }
  if (v8 == 26)
  {
    uint64_t v16 = v7 - 1;
    while (1)
    {
      unsigned int v17 = (unsigned __int8 *)(v16 + 1);
      uint64_t v30 = v16 + 1;
      unint64_t v18 = *(_DWORD **)(a1 + 64);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 56), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 56) = v19 + 1;
        uint64_t v20 = *(void *)&v18[2 * v19 + 2];
      }
      else
      {
        uint64_t v21 = sub_185089C(*(void *)(a1 + 48));
        uint64_t v20 = sub_188CDC8(a1 + 48, v21);
        unsigned int v17 = (unsigned __int8 *)v30;
      }
      uint64_t v16 = sub_12688D0(a3, v20, v17);
      uint64_t v30 = v16;
      if (!v16) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
        goto LABEL_47;
      }
    }
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      int v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v30;
    }
    uint64_t v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_46;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v30;
  }
  return 0;
}

char *sub_17A91C8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17A4410(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17A9258(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 72);
    *uint64_t v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 40);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_17A45B0(v6, v8, a3);
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        BOOL v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        BOOL v13 = v4 + 2;
      }
      uint64_t v4 = sub_17A8844(v11, (unint64_t)v13, a3);
    }
  }
  int v14 = *(_DWORD *)(a1 + 56);
  if (v14)
  {
    for (int j = 0; j != v14; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v16 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *uint64_t v4 = 26;
      unsigned int v17 = *(_DWORD *)(v16 + 44);
      v4[1] = v17;
      if (v17 > 0x7F) {
        unint64_t v18 = sub_188A9CC(v17, v4 + 1);
      }
      else {
        unint64_t v18 = v4 + 2;
      }
      uint64_t v4 = sub_184B3AC(v16, v18, a3);
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_17A9488(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_17A8A40(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    uint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    uint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_184B568(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v15 = sub_17A46F4(*(void *)(a1 + 72));
    v9 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v18 + 31) < 0) {
      uint64_t v19 = *(void *)(v18 + 16);
    }
    else {
      uint64_t v19 = *(unsigned __int8 *)(v18 + 31);
    }
    v9 += v19;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

void sub_17A95BC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_187896C((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C4B74((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v14 = *(uint64_t (****)())(a2 + 72);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 72);
    if (!v15)
    {
      uint64_t v16 = *(void *)(a1 + 8);
      unsigned int v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        unsigned int v17 = (void *)*v17;
      }
      uint64_t v15 = sub_1830ACC((uint64_t)v17);
      *(void *)(a1 + 72) = v15;
      uint64_t v14 = *(uint64_t (****)())(a2 + 72);
    }
    if (v14) {
      unint64_t v18 = v14;
    }
    else {
      unint64_t v18 = &off_2549E20;
    }
    sub_12A372C(v15, (uint64_t)v18);
  }
  uint64_t v19 = *(void *)(a2 + 8);
  if (v19)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v19 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17A9744(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_17A76C0(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v5 = *(unsigned int *)(a1 + 56);
  while ((int)v5 >= 1)
  {
    uint64_t v6 = v5 - 1;
    char v7 = sub_16CE508(*(void *)(*(void *)(a1 + 64) + 8 * v5));
    uint64_t v5 = v6;
    if ((v7 & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t v10 = *(void *)(a1 + 72);
  uint64_t v11 = *(unsigned int *)(v10 + 24);
  do
  {
    BOOL v8 = (int)v11 < 1;
    if ((int)v11 < 1) {
      break;
    }
    uint64_t v12 = v11 - 1;
    char v13 = sub_16CE508(*(void *)(*(void *)(v10 + 32) + 8 * v11));
    uint64_t v11 = v12;
  }
  while ((v13 & 1) != 0);
  return v8;
}

void *sub_17A9800@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AllCollectionsViewResult");
}

uint64_t sub_17A9810(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DB598;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v5 = *(_DWORD *)(a2 + 16);
  if (v5) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  if ((v5 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  if ((v5 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  return a1;
}

void sub_17A9934()
{
}

uint64_t sub_17A99AC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_254A028)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_184AFBC(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_17AB208(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 40);
    if (v7)
    {
      sub_179203C(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17A9A9C(uint64_t a1)
{
  sub_17A99AC(a1);

  operator delete();
}

uint64_t sub_17A9AD4(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) != 0)
  {
    if (v2)
    {
      uint64_t result = (uint64_t)sub_16CD894(*(void *)(result + 24));
      if ((v2 & 2) == 0)
      {
LABEL_4:
        if ((v2 & 4) == 0) {
          goto LABEL_6;
        }
        goto LABEL_5;
      }
    }
    else if ((v2 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t result = sub_17A9B60(*(void *)(v1 + 32));
    if ((v2 & 4) != 0) {
LABEL_5:
    }
      uint64_t result = (uint64_t)sub_179212C(*(unsigned char **)(v1 + 40));
  }
LABEL_6:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_17A9B60(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = (uint64_t)sub_17AA7F0(*(unsigned char **)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_17AAD64(*(void *)(v1 + 32));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 32) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_17A9BD4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    BOOL v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        BOOL v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        BOOL v8 = v26 + 2;
      }
    }
    uint64_t v26 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (!v12)
        {
          char v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            char v13 = (void *)*v13;
          }
          uint64_t v12 = sub_185089C((uint64_t)v13);
          *(void *)(a1 + 24) = v12;
          BOOL v8 = v26;
        }
        uint64_t v14 = sub_12688D0(a3, v12, (unsigned __int8 *)v8);
        goto LABEL_39;
      case 2u:
        if (v9 != 16) {
          goto LABEL_32;
        }
        v5 |= 8u;
        uint64_t v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v24 = (char *)sub_188C0D0((uint64_t)v8, v16);
          uint64_t v26 = v24;
          *(_DWORD *)(a1 + 48) = v25;
          if (!v24) {
            goto LABEL_47;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_19:
          uint64_t v26 = v15;
          *(_DWORD *)(a1 + 48) = v16;
        }
        goto LABEL_40;
      case 3u:
        if (v9 != 26) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 32);
        if (!v18)
        {
          uint64_t v19 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v19 = (void *)*v19;
          }
          uint64_t v18 = sub_18311D0((uint64_t)v19);
          *(void *)(a1 + 32) = v18;
          BOOL v8 = v26;
        }
        uint64_t v14 = sub_17A9E88(a3, v18, (unsigned __int8 *)v8);
        goto LABEL_39;
      case 4u:
        if (v9 != 34) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v20 = *(void **)(a1 + 40);
        if (!v20)
        {
          unint64_t v21 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v21 = (void *)*v21;
          }
          uint64_t v20 = sub_18302C8((uint64_t)v21);
          *(void *)(a1 + 40) = v20;
          BOOL v8 = v26;
        }
        uint64_t v14 = sub_120FE50(a3, (uint64_t)v20, (unsigned __int8 *)v8);
        goto LABEL_39;
      default:
LABEL_32:
        if (v9) {
          BOOL v22 = (v9 & 7) == 4;
        }
        else {
          BOOL v22 = 1;
        }
        if (!v22)
        {
          if (*v7)
          {
            uint64_t v23 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            BOOL v8 = v26;
          }
          uint64_t v14 = (char *)sub_1885AC0(v9, v23, v8, a3);
LABEL_39:
          uint64_t v26 = v14;
          if (!v14) {
            goto LABEL_47;
          }
LABEL_40:
          if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_47:
        }
          uint64_t v26 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v26;
    }
  }
}

char *sub_17A9E88(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17AB310(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17A9F18(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_184B3AC(v7, v9, a3);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 48);
    *char v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 32);
    *char v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    char v4 = sub_17AB698(v13, (unint64_t)v15, a3);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 40);
    *char v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      uint64_t v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      uint64_t v18 = v4 + 2;
    }
    char v4 = sub_1792424(v16, (unint64_t)v18, a3);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    BOOL v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    BOOL v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_17AA178(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_184B568(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_17AB894(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  uint64_t v8 = sub_1792638(*(void *)(a1 + 40));
  v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0) {
LABEL_10:
  }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_11:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v9 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v3 += v10;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_17AA2B0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(void *)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = sub_185089C((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v9 = &off_254D2B0;
      }
      sub_16CE3CC(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_28;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void *)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      unsigned int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unsigned int v12 = (void *)*v12;
      }
      uint64_t v10 = sub_18311D0((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_254A0A0;
    }
    sub_17AA428(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
      goto LABEL_7;
    }
LABEL_28:
    *(_DWORD *)(a1 + 16) |= 4u;
    unsigned int v14 = *(void **)(a1 + 40);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      unsigned int v14 = sub_18302C8((uint64_t)v16);
      *(void *)(a1 + 40) = v14;
    }
    if (*(void *)(a2 + 40)) {
      unsigned int v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      unsigned int v17 = &off_2549800;
    }
    sub_1792730((uint64_t)v14, (uint64_t)v17);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_17AA428(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(void **)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = sub_18310E0((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v9 = &off_254A060;
      }
      sub_17A7C40((uint64_t)v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          *(_DWORD *)(a1 + 16) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(std::string **)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      unsigned int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unsigned int v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_1831158((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_254A080;
    }
    sub_1705EBC(v10, (uint64_t)v13);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17AA550(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_16CE508(*(void *)(a1 + 24));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_17AA5BC(*(void *)(a1 + 32));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) == 0) {
    return 1;
  }
  uint64_t v4 = *(void *)(a1 + 40);
  if ((*(unsigned char *)(v4 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_15B1FC0(*(void *)(v4 + 24));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_17AA5BC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t v1 = *(void *)(a1 + 24);
  if ((*(unsigned char *)(v1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_16CE508(*(void *)(v1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17AA5F4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PublisherViewParameters");
}

uint64_t sub_17AA604(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DB618;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  return a1;
}

void sub_17AA6B0()
{
}

uint64_t sub_17AA700(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254A060)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_184AFBC(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17AA7B8(uint64_t a1)
{
  sub_17AA700(a1);

  operator delete();
}

unsigned char *sub_17AA7F0(unsigned char *result)
{
  uint64_t v1 = result;
  if (result[16]) {
    uint64_t result = sub_16CD894(*((void *)result + 3));
  }
  char v3 = v1[8];
  uint64_t v2 = v1 + 8;
  *((_DWORD *)v2 + 2) = 0;
  if (v3)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_17AA84C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    uint64_t v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13)
    {
      unsigned int v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        unsigned int v14 = (void *)*v14;
      }
      uint64_t v13 = sub_185089C((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      uint64_t v6 = v16;
    }
    unsigned int v12 = sub_12688D0(a3, v13, (unsigned __int8 *)v6);
LABEL_20:
    uint64_t v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v16;
    }
    unsigned int v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

char *sub_17AA9A4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *uint64_t v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 44);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_184B3AC(v6, v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unsigned int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unsigned int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_17AAAB4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_184B568(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

uint64_t sub_17AAB3C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_16CE508(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17AAB68@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PublisherViewResultFilterAddress");
}

uint64_t sub_17AAB78(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DB698;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  return a1;
}

void sub_17AAC24()
{
}

uint64_t sub_17AAC74(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254A080)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_12A17E0(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17AAD2C(uint64_t a1)
{
  sub_17AAC74(a1);

  operator delete();
}

uint64_t sub_17AAD64(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_12A181C(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_17AADC0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    uint64_t v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void **)(a1 + 24);
    if (!v13)
    {
      uint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v14 = (void *)*v14;
      }
      uint64_t v13 = sub_12BBBC8((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      uint64_t v6 = v16;
    }
    unsigned int v12 = (char *)sub_12B117C(a3, (uint64_t)v13, (unsigned __int8 *)v6);
LABEL_20:
    uint64_t v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v16;
    }
    unsigned int v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

char *sub_17AAF18(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *uint64_t v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_12A1AC4(v6, v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unsigned int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unsigned int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_17AB028(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_12A1BDC(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

uint64_t sub_17AB0B0()
{
  return 1;
}

void *sub_17AB0B8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PublisherViewResultFilterKeyword");
}

uint64_t sub_17AB0C8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DB718;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v5 = *(_DWORD *)(a2 + 16);
  if (v5) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  if ((v5 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  return a1;
}

void sub_17AB1B4()
{
}

uint64_t sub_17AB208(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_254A0A0)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_17AA700(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_17AAC74(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17AB2D8(uint64_t a1)
{
  sub_17AB208(a1);

  operator delete();
}

char *sub_17AB310(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unsigned int v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unsigned int v7 = v26 + 2;
      }
    }
    uint64_t v26 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v16 = *(void **)(a1 + 32);
      if (!v16)
      {
        unsigned int v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          unsigned int v17 = (void *)*v17;
        }
        uint64_t v16 = sub_1831158((uint64_t)v17);
        *(void *)(a1 + 32) = v16;
        unsigned int v7 = v26;
      }
      uint64_t v15 = sub_17AB608(a3, (uint64_t)v16, (unsigned __int8 *)v7);
      goto LABEL_33;
    }
    if (v11 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v18 = *(void **)(a1 + 24);
    if (!v18)
    {
      uint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v19 = (void *)*v19;
      }
      uint64_t v18 = sub_18310E0((uint64_t)v19);
      *(void *)(a1 + 24) = v18;
      unsigned int v7 = v26;
    }
    uint64_t v15 = sub_17AB578(a3, (uint64_t)v18, (unsigned __int8 *)v7);
LABEL_33:
    uint64_t v26 = v15;
    if (!v15) {
      return 0;
    }
LABEL_41:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      return v26;
    }
  }
  if (v11 == 1 && v8 == 8)
  {
    uint64_t v20 = v7 + 1;
    unint64_t v21 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_38;
    }
    int v22 = *v20;
    int v23 = v21 + (v22 << 7);
    unint64_t v21 = (v23 - 128);
    if (v22 < 0)
    {
      uint64_t v26 = (char *)sub_188C138((uint64_t)v7, (v23 - 128));
      if (!v26) {
        return 0;
      }
      unint64_t v21 = v24;
    }
    else
    {
      uint64_t v20 = v7 + 2;
LABEL_38:
      uint64_t v26 = v20;
    }
    if (v21 > 2)
    {
      if (*v6) {
        int v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        int v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v21, v25);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 4u;
      *(_DWORD *)(a1 + 40) = v21;
    }
    goto LABEL_41;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v7 = v26;
    }
    uint64_t v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_33;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v26;
  }
  return 0;
}

char *sub_17AB578(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17AA84C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17AB608(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17AADC0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_17AB698(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    *uint64_t v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unsigned int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unsigned int v12 = v4 + 2;
    }
    uint64_t v4 = sub_17AA9A4(v10, (unint64_t)v12, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 32);
    *uint64_t v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    uint64_t v4 = sub_17AAF18(v13, (unint64_t)v15, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_17AB894(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_13;
  }
  if (v2)
  {
    uint64_t v4 = sub_17AAAB4(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_17AB028(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    int v6 = *(_DWORD *)(a1 + 40);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v7;
  }
LABEL_13:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void *sub_17AB9A0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PublisherViewResultFilter");
}

uint64_t sub_17AB9B0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = (uint64_t *)(a1 + 16);
  *(void *)a1 = off_24DB798;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_18789F8(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    unint64_t v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *unint64_t v10 = v9;
    }
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  int v11 = *(_DWORD *)(a2 + 48);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 56);
    uint64_t v13 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_12C4B74((uint64_t *)(a1 + 40), v13, (uint64_t *)(v12 + 8), v11, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v14 = *(_DWORD *)(a1 + 48) + v11;
    *(_DWORD *)(a1 + 48) = v14;
    uint64_t v15 = *(int **)(a1 + 56);
    if (*v15 < v14) {
      *uint64_t v15 = v14;
    }
  }
  *(_DWORD *)(a1 + 64) = 0;
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16) {
    sub_188B4F8(v4, (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_17ABB00(_Unwind_Exception *a1)
{
  sub_12C45E8(v4);
  sub_1877338(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17ABB58(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C45E8(a1 + 5);
  sub_1877338(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17ABBE4(void *a1)
{
  sub_17ABB58(a1);

  operator delete();
}

uint64_t sub_17ABC1C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_17A9B60(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 48);
  if ((int)v5 >= 1)
  {
    int v6 = (uint64_t *)(*(void *)(v1 + 56) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = (uint64_t)sub_16CD894(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 48) = 0;
  }
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = (uint64_t *)(v1 + 8);
  if (v9)
  {
    return sub_188B4AC(v8);
  }
  return result;
}

char *sub_17ABCC0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  if ((sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1]) & 1) == 0)
  {
    int v6 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v7 = v26 + 1;
      unsigned int v8 = *v26;
      if (*v26 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v26 + 2;
        }
      }
      uint64_t v26 = v7;
      if (v8 >> 3 == 2)
      {
        if (v8 == 18)
        {
          int v14 = v7 - 1;
          while (1)
          {
            uint64_t v15 = (unsigned __int8 *)(v14 + 1);
            uint64_t v26 = v14 + 1;
            uint64_t v16 = *(_DWORD **)(a1 + 56);
            if (v16 && (uint64_t v17 = *(int *)(a1 + 48), (int)v17 < *v16))
            {
              *(_DWORD *)(a1 + 48) = v17 + 1;
              uint64_t v18 = *(void *)&v16[2 * v17 + 2];
            }
            else
            {
              uint64_t v19 = sub_185089C(*(void *)(a1 + 40));
              uint64_t v18 = sub_188CDC8(a1 + 40, v19);
              uint64_t v15 = (unsigned __int8 *)v26;
            }
            int v14 = sub_12688D0(a3, v18, v15);
            uint64_t v26 = v14;
            if (!v14) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
              goto LABEL_39;
            }
          }
        }
      }
      else if (v8 >> 3 == 1 && v8 == 10)
      {
        uint64_t v20 = v7 - 1;
        while (1)
        {
          uint64_t v21 = (unsigned __int8 *)(v20 + 1);
          uint64_t v26 = v20 + 1;
          int v22 = *(_DWORD **)(a1 + 32);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 24), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 24) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            uint64_t v25 = sub_18311D0(*(void *)(a1 + 16));
            uint64_t v24 = sub_188CDC8(a1 + 16, v25);
            uint64_t v21 = (unsigned __int8 *)v26;
          }
          uint64_t v20 = sub_17A9E88(a3, v24, v21);
          uint64_t v26 = v20;
          if (!v20) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 10) {
            goto LABEL_39;
          }
        }
      }
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (*v6)
      {
        uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = v26;
      }
      uint64_t v26 = (char *)sub_1885AC0(v8, v13, v7, a3);
      if (!v26) {
        return 0;
      }
LABEL_39:
      if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
        return v26;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v26;
    }
    return 0;
  }
  return v26;
}

char *sub_17ABF08(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_17AB698(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 48);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 44);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = sub_184B3AC(v13, v15, a3);
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return __dst;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(__dst, v19, (int)v20);
    __dst += v21;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, __dst);
}

uint64_t sub_17AC0D0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_17AB894(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 48);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_184B568(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v9 += v18;
  }
  *(_DWORD *)(a1 + 64) = v9;
  return v9;
}

void sub_17AC1D0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_18789F8((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v11 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_12C4B74((uint64_t *)(a1 + 40), v11, v10, v9, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v12 = *(_DWORD *)(a1 + 48) + v9;
    *(_DWORD *)(a1 + 48) = v12;
    uint64_t v13 = *(int **)(a1 + 56);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_17AC304(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_17AA5BC(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v6 = *(unsigned int *)(a1 + 48);
  do
  {
    BOOL v5 = (int)v6 < 1;
    if ((int)v6 < 1) {
      break;
    }
    uint64_t v7 = v6 - 1;
    char v8 = sub_16CE508(*(void *)(*(void *)(a1 + 56) + 8 * v6));
    uint64_t v6 = v7;
  }
  while ((v8 & 1) != 0);
  return v5;
}

void *sub_17AC384@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PublisherViewResult");
}

uint64_t sub_17AC394(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  char v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24DB818;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  *(void *)(a1 + 28) = 0;
  int v5 = *(_DWORD *)(a2 + 24);
  if (v5)
  {
    sub_188C80C((unsigned int *)(a1 + 24), v5);
    uint64_t v6 = *(void **)(a1 + 32);
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
    memcpy(v6, *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  uint64_t v7 = *(void *)(a2 + 8);
  if (v7) {
    sub_188B4F8(v4, (v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if (v8) {
    operator new();
  }
  *(void *)(a1 + 40) = 0;
  if ((v8 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  if ((v8 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  if ((v8 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  if ((v8 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  if ((v8 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 80) = 0;
  return a1;
}

void sub_17AC5A4()
{
}

uint64_t sub_17AC668(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_17AC6F4((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_17AC6F4(uint64_t (***result)()))()
{
  if (result != &off_254A118)
  {
    uint64_t v1 = result;
    uint64_t v2 = (uint64_t)result[5];
    if (v2)
    {
      sub_17A0284(v2);
      operator delete();
    }
    uint64_t v3 = (uint64_t)v1[6];
    if (v3)
    {
      sub_17A2444(v3);
      operator delete();
    }
    uint64_t v4 = (uint64_t)v1[7];
    if (v4)
    {
      sub_17A3BB4(v4);
      operator delete();
    }
    uint64_t v5 = (uint64_t)v1[8];
    if (v5)
    {
      sub_17A4A14(v5);
      operator delete();
    }
    uint64_t v6 = (uint64_t)v1[9];
    if (v6)
    {
      sub_17A5A6C(v6);
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[10];
    if (result)
    {
      sub_12A46C8();
      operator delete();
    }
  }
  return result;
}

void sub_17AC800(uint64_t a1)
{
  sub_17AC668(a1);

  operator delete();
}

uint64_t sub_17AC838(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x3F) == 0) {
    goto LABEL_9;
  }
  if (v2)
  {
    uint64_t result = sub_17A041C(*(void *)(result + 40));
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_15;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t result = sub_17A2554(*(void *)(v1 + 48));
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_16:
    uint64_t result = sub_17A4B18(*(void *)(v1 + 64));
    if ((v2 & 0x10) == 0)
    {
LABEL_7:
      if ((v2 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_15:
  uint64_t result = (uint64_t)sub_17A3CA4(*(unsigned char **)(v1 + 56));
  if ((v2 & 8) != 0) {
    goto LABEL_16;
  }
LABEL_6:
  if ((v2 & 0x10) == 0) {
    goto LABEL_7;
  }
LABEL_17:
  uint64_t result = (uint64_t)sub_17A5B5C(*(unsigned char **)(v1 + 72));
  if ((v2 & 0x20) != 0) {
LABEL_8:
  }
    uint64_t result = (uint64_t)sub_12A4704(*(unsigned char **)(v1 + 80));
LABEL_9:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_17AC8F4(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v36 = a2;
  if (sub_11947B8((uint64_t)a3, &v36, a3[11].i32[1])) {
    return v36;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v36 + 1;
    unsigned int v8 = *v36;
    if (*v36 < 0)
    {
      int v9 = *v7;
      unsigned int v10 = v8 + (v9 << 7);
      unsigned int v8 = v10 - 128;
      if (v9 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v36, v10 - 128);
        unsigned int v8 = v11;
      }
      else
      {
        uint64_t v7 = v36 + 2;
      }
    }
    unsigned int v36 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 == 8)
        {
          int v12 = v7 - 1;
          while (1)
          {
            unsigned int v36 = v12 + 1;
            unint64_t v13 = v12[1];
            uint64_t v14 = v12 + 2;
            if (v12[1] < 0)
            {
              int v15 = *v14;
              int v16 = v13 + (v15 << 7);
              unint64_t v13 = (v16 - 128);
              if (v15 < 0)
              {
                unsigned int v36 = (char *)sub_188C138((uint64_t)(v12 + 1), (v16 - 128));
                if (!v36) {
                  return 0;
                }
                unint64_t v13 = v19;
                goto LABEL_15;
              }
              uint64_t v14 = v12 + 3;
            }
            unsigned int v36 = v14;
LABEL_15:
            if (v13 > 5)
            {
              if (*v6) {
                uint64_t v20 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v20 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(1, v13, v20);
            }
            else
            {
              uint64_t v17 = *(unsigned int *)(a1 + 24);
              if (v17 == *(_DWORD *)(a1 + 28))
              {
                int v18 = v17 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v17 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v17) = v13;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v17) = v13;
                int v18 = v17 + 1;
              }
              *(_DWORD *)(a1 + 24) = v18;
            }
            int v12 = v36;
            if (*(void *)a3 <= (unint64_t)v36 || *v36 != 8) {
              goto LABEL_75;
            }
          }
        }
        if (v8 != 10) {
          goto LABEL_67;
        }
        *(void *)&long long v37 = a1 + 24;
        *((void *)&v37 + 1) = sub_1791DDC;
        uint64_t v38 = a1 + 8;
        int v39 = 1;
        uint64_t v23 = sub_1112E88((uint64_t)a3, v7, &v37);
        goto LABEL_74;
      case 2u:
        if (v8 != 18) {
          goto LABEL_67;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v21 = *(void *)(a1 + 40);
        if (!v21)
        {
          int v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v22 = (void *)*v22;
          }
          uint64_t v21 = sub_18307BC((uint64_t)v22);
          *(void *)(a1 + 40) = v21;
          uint64_t v7 = v36;
        }
        uint64_t v23 = (char *)sub_17ACD84(a3, v21, (unsigned __int8 *)v7);
        goto LABEL_74;
      case 3u:
        if (v8 != 26) {
          goto LABEL_67;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v24 = *(void *)(a1 + 48);
        if (!v24)
        {
          uint64_t v25 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v25 = (void *)*v25;
          }
          uint64_t v24 = sub_1830908((uint64_t)v25);
          *(void *)(a1 + 48) = v24;
          uint64_t v7 = v36;
        }
        uint64_t v23 = (char *)sub_17ACE14(a3, v24, (unsigned __int8 *)v7);
        goto LABEL_74;
      case 4u:
        if (v8 != 34) {
          goto LABEL_67;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v26 = *(void **)(a1 + 56);
        if (!v26)
        {
          uint64_t v27 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v27 = (void *)*v27;
          }
          uint64_t v26 = sub_1830A50((uint64_t)v27);
          *(void *)(a1 + 56) = v26;
          uint64_t v7 = v36;
        }
        uint64_t v23 = sub_17A6EFC(a3, (uint64_t)v26, (unsigned __int8 *)v7);
        goto LABEL_74;
      case 5u:
        if (v8 != 42) {
          goto LABEL_67;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v28 = *(void **)(a1 + 64);
        if (!v28)
        {
          unint64_t v29 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v29 = (void *)*v29;
          }
          uint64_t v28 = sub_1830B6C((uint64_t)v29);
          *(void *)(a1 + 64) = v28;
          uint64_t v7 = v36;
        }
        uint64_t v23 = (char *)sub_17ACEA4(a3, (uint64_t)v28, (unsigned __int8 *)v7);
        goto LABEL_74;
      case 6u:
        if (v8 != 50) {
          goto LABEL_67;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v30 = *(void **)(a1 + 72);
        if (!v30)
        {
          uint64_t v31 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v31 = (void *)*v31;
          }
          uint64_t v30 = sub_1830CB0((uint64_t)v31);
          *(void *)(a1 + 72) = v30;
          uint64_t v7 = v36;
        }
        uint64_t v23 = sub_17ACF34(a3, (uint64_t)v30, (unsigned __int8 *)v7);
        goto LABEL_74;
      case 7u:
        if (v8 != 58) {
          goto LABEL_67;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v32 = *(void **)(a1 + 80);
        if (!v32)
        {
          uint64_t v33 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v33 = (void *)*v33;
          }
          uint64_t v32 = sub_12BBF44((uint64_t)v33);
          *(void *)(a1 + 80) = v32;
          uint64_t v7 = v36;
        }
        uint64_t v23 = sub_1209958(a3, (uint64_t)v32, (unsigned __int8 *)v7);
        goto LABEL_74;
      default:
LABEL_67:
        if (v8) {
          BOOL v34 = (v8 & 7) == 4;
        }
        else {
          BOOL v34 = 1;
        }
        if (!v34)
        {
          if (*v6)
          {
            BOOL v35 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            BOOL v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v36;
          }
          uint64_t v23 = (char *)sub_1885AC0(v8, v35, v7, a3);
LABEL_74:
          unsigned int v36 = v23;
          if (!v23) {
            return 0;
          }
LABEL_75:
          if (sub_11947B8((uint64_t)a3, &v36, a3[11].i32[1])) {
            return v36;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v36;
    }
  }
}

uint64_t sub_17ACD84(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17A04E8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_17ACE14(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17A2618(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_17ACEA4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17A4BB0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17ACF34(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17A5BB8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17ACFC4(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v8 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if (v11)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v12 = *(void *)(a1 + 40);
    *__dst = 18;
    unsigned int v13 = *(_DWORD *)(v12 + 20);
    __dst[1] = v13;
    if (v13 > 0x7F) {
      uint64_t v14 = sub_188A9CC(v13, __dst + 1);
    }
    else {
      uint64_t v14 = __dst + 2;
    }
    __dst = sub_17A0D48(v12, (unint64_t)v14, a3);
    if ((v11 & 2) == 0)
    {
LABEL_12:
      if ((v11 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_29;
    }
  }
  else if ((v11 & 2) == 0)
  {
    goto LABEL_12;
  }
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v15 = *(void *)(a1 + 48);
  *__dst = 26;
  unsigned int v16 = *(_DWORD *)(v15 + 20);
  __dst[1] = v16;
  if (v16 > 0x7F) {
    uint64_t v17 = sub_188A9CC(v16, __dst + 1);
  }
  else {
    uint64_t v17 = __dst + 2;
  }
  __dst = sub_17A2A00(v15, (unint64_t)v17, a3);
  if ((v11 & 4) == 0)
  {
LABEL_13:
    if ((v11 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_35;
  }
LABEL_29:
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v18 = *(void *)(a1 + 56);
  *__dst = 34;
  unsigned int v19 = *(_DWORD *)(v18 + 20);
  __dst[1] = v19;
  if (v19 > 0x7F) {
    uint64_t v20 = sub_188A9CC(v19, __dst + 1);
  }
  else {
    uint64_t v20 = __dst + 2;
  }
  __dst = sub_17A3EA8(v18, (unint64_t)v20, a3);
  if ((v11 & 8) == 0)
  {
LABEL_14:
    if ((v11 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_41;
  }
LABEL_35:
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v21 = *(void *)(a1 + 64);
  *__dst = 42;
  unsigned int v22 = *(_DWORD *)(v21 + 20);
  __dst[1] = v22;
  if (v22 > 0x7F) {
    uint64_t v23 = sub_188A9CC(v22, __dst + 1);
  }
  else {
    uint64_t v23 = __dst + 2;
  }
  __dst = sub_17A4EA4(v21, (unint64_t)v23, a3);
  if ((v11 & 0x10) == 0)
  {
LABEL_15:
    if ((v11 & 0x20) == 0) {
      goto LABEL_53;
    }
    goto LABEL_47;
  }
LABEL_41:
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v24 = *(void *)(a1 + 72);
  *__dst = 50;
  unsigned int v25 = *(_DWORD *)(v24 + 20);
  __dst[1] = v25;
  if (v25 > 0x7F) {
    uint64_t v26 = sub_188A9CC(v25, __dst + 1);
  }
  else {
    uint64_t v26 = __dst + 2;
  }
  __dst = sub_17A5D10(v24, (unint64_t)v26, a3);
  if ((v11 & 0x20) != 0)
  {
LABEL_47:
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v27 = *(void *)(a1 + 80);
    *__dst = 58;
    unsigned int v28 = *(_DWORD *)(v27 + 20);
    __dst[1] = v28;
    if (v28 > 0x7F) {
      unint64_t v29 = sub_188A9CC(v28, __dst + 1);
    }
    else {
      unint64_t v29 = __dst + 2;
    }
    __dst = sub_12A4C18(v27, (unint64_t)v29, a3);
  }
LABEL_53:
  uint64_t v30 = *(void *)(a1 + 8);
  if ((v30 & 1) == 0) {
    return __dst;
  }
  unint64_t v32 = v30 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v32 + 31) < 0)
  {
    uint64_t v33 = *(void **)(v32 + 8);
    uint64_t v34 = *(void *)(v32 + 16);
  }
  else
  {
    uint64_t v33 = (void *)(v32 + 8);
    LODWORD(v34) = *(unsigned __int8 *)(v32 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v34)
  {
    uint64_t v35 = (int)v34;
    memcpy(__dst, v33, (int)v34);
    __dst += v35;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v33, v34, __dst);
}

uint64_t sub_17AD388(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v3);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v4 += v6;
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v7 = v4 + v2;
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0x3F) == 0) {
    goto LABEL_17;
  }
  if (v8)
  {
    uint64_t v12 = sub_17A1394(*(void *)(a1 + 40));
    v7 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_21;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v13 = sub_17A2D10(*(void *)(a1 + 48));
  v7 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_14;
    }
LABEL_22:
    uint64_t v15 = sub_17A50F8(*(void *)(a1 + 64));
    v7 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 0x10) == 0)
    {
LABEL_15:
      if ((v8 & 0x20) == 0) {
        goto LABEL_17;
      }
      goto LABEL_16;
    }
    goto LABEL_23;
  }
LABEL_21:
  uint64_t v14 = sub_17A3FFC(*(void *)(a1 + 56));
  v7 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) != 0) {
    goto LABEL_22;
  }
LABEL_14:
  if ((v8 & 0x10) == 0) {
    goto LABEL_15;
  }
LABEL_23:
  uint64_t v16 = sub_17A5E20(*(void *)(a1 + 72));
  v7 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x20) != 0)
  {
LABEL_16:
    uint64_t v9 = sub_12A4ED4(*(void *)(a1 + 80));
    v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_17:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v17 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v7 += v18;
  }
  *(_DWORD *)(a1 + 20) = v7;
  return v7;
}

void sub_17AD580(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188C80C((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((v8 & 0x3F) == 0) {
    goto LABEL_59;
  }
  if (v8)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v9 = *(void *)(a1 + 40);
    if (!v9)
    {
      uint64_t v10 = *(void *)(a1 + 8);
      int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
      if (v10) {
        int v11 = (void *)*v11;
      }
      uint64_t v9 = sub_18307BC((uint64_t)v11);
      *(void *)(a1 + 40) = v9;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v12 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v12 = &off_2549CA8;
    }
    sub_17A165C(v9, (uint64_t)v12);
    if ((v8 & 2) == 0)
    {
LABEL_6:
      if ((v8 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_27;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_6;
  }
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v13 = *(void *)(a1 + 48);
  if (!v13)
  {
    uint64_t v14 = *(void *)(a1 + 8);
    uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (void *)*v15;
    }
    uint64_t v13 = sub_1830908((uint64_t)v15);
    *(void *)(a1 + 48) = v13;
  }
  if (*(void *)(a2 + 48)) {
    uint64_t v16 = *(uint64_t (****)())(a2 + 48);
  }
  else {
    uint64_t v16 = &off_2549D50;
  }
  sub_17A2EB0(v13, (uint64_t)v16);
  if ((v8 & 4) == 0)
  {
LABEL_7:
    if ((v8 & 8) == 0) {
      goto LABEL_8;
    }
LABEL_35:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v21 = *(void **)(a1 + 64);
    if (!v21)
    {
      uint64_t v22 = *(void *)(a1 + 8);
      uint64_t v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        uint64_t v23 = (void *)*v23;
      }
      uint64_t v21 = sub_1830B6C((uint64_t)v23);
      *(void *)(a1 + 64) = v21;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v24 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      uint64_t v24 = &off_2549E50;
    }
    sub_17A5238((uint64_t)v21, (uint64_t)v24);
    if ((v8 & 0x10) == 0)
    {
LABEL_9:
      if ((v8 & 0x20) == 0) {
        goto LABEL_59;
      }
      goto LABEL_51;
    }
    goto LABEL_43;
  }
LABEL_27:
  *(_DWORD *)(a1 + 16) |= 4u;
  unint64_t v17 = *(void **)(a1 + 56);
  if (!v17)
  {
    uint64_t v18 = *(void *)(a1 + 8);
    unsigned int v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      unsigned int v19 = (void *)*v19;
    }
    unint64_t v17 = sub_1830A50((uint64_t)v19);
    *(void *)(a1 + 56) = v17;
  }
  if (*(void *)(a2 + 56)) {
    uint64_t v20 = *(uint64_t (****)())(a2 + 56);
  }
  else {
    uint64_t v20 = &off_2549DF8;
  }
  sub_17A40A0((uint64_t)v17, (uint64_t)v20);
  if ((v8 & 8) != 0) {
    goto LABEL_35;
  }
LABEL_8:
  if ((v8 & 0x10) == 0) {
    goto LABEL_9;
  }
LABEL_43:
  *(_DWORD *)(a1 + 16) |= 0x10u;
  unsigned int v25 = *(void **)(a1 + 72);
  if (!v25)
  {
    uint64_t v26 = *(void *)(a1 + 8);
    uint64_t v27 = (void *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
    if (v26) {
      uint64_t v27 = (void *)*v27;
    }
    unsigned int v25 = sub_1830CB0((uint64_t)v27);
    *(void *)(a1 + 72) = v25;
  }
  if (*(void *)(a2 + 72)) {
    unsigned int v28 = *(uint64_t (****)())(a2 + 72);
  }
  else {
    unsigned int v28 = &off_2549ED0;
  }
  sub_17A5EA8((uint64_t)v25, (uint64_t)v28);
  if ((v8 & 0x20) != 0)
  {
LABEL_51:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    unint64_t v29 = *(void **)(a1 + 80);
    if (!v29)
    {
      uint64_t v30 = *(void *)(a1 + 8);
      uint64_t v31 = (void *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
      if (v30) {
        uint64_t v31 = (void *)*v31;
      }
      unint64_t v29 = sub_12BBF44((uint64_t)v31);
      *(void *)(a1 + 80) = v29;
    }
    if (*(void *)(a2 + 80)) {
      unint64_t v32 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      unint64_t v32 = &off_25309E0;
    }
    sub_12A5038((uint64_t)v29, (uint64_t)v32);
  }
LABEL_59:
  uint64_t v33 = *(void *)(a2 + 8);
  if (v33)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v33 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17AD810(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_17A195C(*(void *)(a1 + 40));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_17A30B8(*(void *)(a1 + 48));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_17A4170(*(void *)(a1 + 56));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) != 0)
  {
    uint64_t result = sub_17A53C0(*(void *)(a1 + 64));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x10) != 0)
  {
    uint64_t result = sub_17A5F50(*(void *)(a1 + 72));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x20) == 0) {
    return 1;
  }
  uint64_t result = sub_12A51B0(*(void *)(a1 + 80));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17AD8AC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.MapsSearchHomeParameters");
}

void *sub_17AD8BC(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_17AD940((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_17AD940(uint64_t a1)
{
  int v3 = *(uint64_t **)(a1 + 24);
  uint64_t result = (void ***)(a1 + 24);
  if (v3 != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_254A170)
  {
    int v4 = *(void **)(a1 + 32);
    if (v4)
    {
      sub_17A1B38(v4);
      operator delete();
    }
    uint64_t v5 = *(void *)(a1 + 40);
    if (v5)
    {
      sub_17A32E8(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 48);
    if (v6)
    {
      sub_17A42DC(v6);
      operator delete();
    }
    uint64_t v7 = *(void **)(a1 + 56);
    if (v7)
    {
      sub_17A5440(v7);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 64);
    if (result)
    {
      sub_17A5F98((uint64_t)result);
      operator delete();
    }
  }
  return result;
}

void sub_17ADA44(void *a1)
{
  sub_17AD8BC(a1);

  operator delete();
}

uint64_t sub_17ADA7C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x3F) == 0) {
    goto LABEL_9;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_17;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_17;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_17:
  uint64_t result = sub_17A1BF0(*(void *)(result + 32));
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_19:
    uint64_t result = (uint64_t)sub_17A4394(*(unsigned char **)(v1 + 48));
    if ((v2 & 0x10) == 0)
    {
LABEL_7:
      if ((v2 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_18:
  uint64_t result = sub_17A33E4(*(void *)(v1 + 40));
  if ((v2 & 8) != 0) {
    goto LABEL_19;
  }
LABEL_6:
  if ((v2 & 0x10) == 0) {
    goto LABEL_7;
  }
LABEL_20:
  uint64_t result = (uint64_t)sub_17A54F8(*(unsigned char **)(v1 + 56));
  if ((v2 & 0x20) != 0) {
LABEL_8:
  }
    uint64_t result = sub_17A60A8(*(void *)(v1 + 64));
LABEL_9:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 64) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_17ADB5C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v33 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
    return *(void *)v33;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v33 + 1);
    unsigned int v8 = **(unsigned char **)v33;
    if ((char)**(unsigned char **)v33 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v33, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v33 + 2);
      }
    }
    *(void *)uint64_t v33 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_50;
        }
        int v11 = (char *)(v7 + 1);
        unint64_t v12 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          *(void *)uint64_t v33 = sub_188C138((uint64_t)v7, (v14 - 128));
          if (!*(void *)v33) {
            return 0;
          }
          unint64_t v12 = v31;
        }
        else
        {
          int v11 = (char *)(v7 + 2);
LABEL_13:
          *(void *)uint64_t v33 = v11;
        }
        if (v12 > 5)
        {
          if (*v6) {
            unint64_t v32 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v12, v32);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x40u;
          *(_DWORD *)(a1 + 72) = v12;
        }
        goto LABEL_58;
      case 2u:
        if (v8 != 18) {
          goto LABEL_50;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        unint64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
        uint64_t v18 = (uint64_t)sub_188C244(v17, *(char **)v33, (uint64_t)a3);
        goto LABEL_57;
      case 3u:
        if (v8 != 26) {
          goto LABEL_50;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 32);
        if (!v19)
        {
          uint64_t v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v20 = (void *)*v20;
          }
          uint64_t v19 = sub_1830868((uint64_t)v20);
          *(void *)(a1 + 32) = v19;
          uint64_t v7 = *(unsigned __int8 **)v33;
        }
        uint64_t v18 = (uint64_t)sub_17ADF38(a3, v19, v7);
        goto LABEL_57;
      case 4u:
        if (v8 != 34) {
          goto LABEL_50;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v21 = *(void **)(a1 + 40);
        if (!v21)
        {
          uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v22 = (void *)*v22;
          }
          uint64_t v21 = sub_18309B4((uint64_t)v22);
          *(void *)(a1 + 40) = v21;
          uint64_t v7 = *(unsigned __int8 **)v33;
        }
        uint64_t v18 = (uint64_t)sub_17ADFC8(a3, (uint64_t)v21, v7);
        goto LABEL_57;
      case 5u:
        if (v8 != 42) {
          goto LABEL_50;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v23 = *(void *)(a1 + 48);
        if (!v23)
        {
          uint64_t v24 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v24 = (void *)*v24;
          }
          uint64_t v23 = sub_1830ACC((uint64_t)v24);
          *(void *)(a1 + 48) = v23;
          uint64_t v7 = *(unsigned __int8 **)v33;
        }
        uint64_t v18 = (uint64_t)sub_17A91C8(a3, v23, v7);
        goto LABEL_57;
      case 6u:
        if (v8 != 50) {
          goto LABEL_50;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v25 = *(void *)(a1 + 56);
        if (!v25)
        {
          uint64_t v26 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v26 = (void *)*v26;
          }
          uint64_t v25 = sub_1830C10((uint64_t)v26);
          *(void *)(a1 + 56) = v25;
          uint64_t v7 = *(unsigned __int8 **)v33;
        }
        uint64_t v18 = (uint64_t)sub_17AE058(a3, v25, v7);
        goto LABEL_57;
      case 7u:
        if (v8 != 58) {
          goto LABEL_50;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v27 = *(void **)(a1 + 64);
        if (!v27)
        {
          unsigned int v28 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unsigned int v28 = (void *)*v28;
          }
          uint64_t v27 = sub_1830D28((uint64_t)v28);
          *(void *)(a1 + 64) = v27;
          uint64_t v7 = *(unsigned __int8 **)v33;
        }
        uint64_t v18 = sub_17AE0E8(a3, (uint64_t)v27, v7);
        goto LABEL_57;
      default:
LABEL_50:
        if (v8) {
          BOOL v29 = (v8 & 7) == 4;
        }
        else {
          BOOL v29 = 1;
        }
        if (!v29)
        {
          if (*v6)
          {
            uint64_t v30 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = *(unsigned __int8 **)v33;
          }
          uint64_t v18 = (uint64_t)sub_1885AC0(v8, v30, (char *)v7, a3);
LABEL_57:
          *(void *)uint64_t v33 = v18;
          if (!v18) {
            return 0;
          }
LABEL_58:
          if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
            return *(void *)v33;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v33;
    }
  }
}

char *sub_17ADF38(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17A1C6C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17ADFC8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17A3474(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17AE058(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17A5574(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_17AE0E8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17A6170(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17AE178(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 72);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_22;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  *char v4 = 26;
  unsigned int v11 = *(_DWORD *)(v10 + 40);
  v4[1] = v11;
  if (v11 > 0x7F) {
    unint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    unint64_t v12 = v4 + 2;
  }
  char v4 = sub_17A1E0C(v10, v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_11:
    if ((v6 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_22:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 40);
  *char v4 = 34;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  char v4 = sub_17A367C(v13, v15, a3);
  if ((v6 & 8) == 0)
  {
LABEL_12:
    if ((v6 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_34;
  }
LABEL_28:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 48);
  *char v4 = 42;
  unsigned int v17 = *(_DWORD *)(v16 + 40);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  char v4 = sub_17A45B0(v16, v18, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_13:
    if ((v6 & 0x20) == 0) {
      goto LABEL_46;
    }
    goto LABEL_40;
  }
LABEL_34:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 56);
  *char v4 = 50;
  unsigned int v20 = *(_DWORD *)(v19 + 40);
  v4[1] = v20;
  if (v20 > 0x7F) {
    uint64_t v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    uint64_t v21 = v4 + 2;
  }
  char v4 = sub_17A5714(v19, v21, a3);
  if ((v6 & 0x20) != 0)
  {
LABEL_40:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v22 = *(void *)(a1 + 64);
    *char v4 = 58;
    unsigned int v23 = *(_DWORD *)(v22 + 20);
    v4[1] = v23;
    if (v23 > 0x7F) {
      uint64_t v24 = sub_188A9CC(v23, v4 + 1);
    }
    else {
      uint64_t v24 = v4 + 2;
    }
    char v4 = sub_17A63C8(v22, v24, a3);
  }
LABEL_46:
  uint64_t v25 = *(void *)(a1 + 8);
  if ((v25 & 1) == 0) {
    return v4;
  }
  unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v27 + 31) < 0)
  {
    unsigned int v28 = *(void **)(v27 + 8);
    uint64_t v29 = *(void *)(v27 + 16);
  }
  else
  {
    unsigned int v28 = (void *)(v27 + 8);
    LODWORD(v29) = *(unsigned __int8 *)(v27 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v29)
  {
    uint64_t v30 = (int)v29;
    memcpy(v4, v28, (int)v29);
    v4 += v30;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v28, v29, v4);
}

uint64_t sub_17AE4D8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x7F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_24;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_17A1F50(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    uint64_t v8 = sub_17A3828(*(void *)(a1 + 40));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_12:
      if ((v2 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_18;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v9 = sub_17A46F4(*(void *)(a1 + 48));
  v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_13:
    if ((v2 & 0x20) == 0) {
      goto LABEL_14;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t v10 = sub_17A5858(*(void *)(a1 + 56));
  v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_14:
    if ((v2 & 0x40) == 0) {
      goto LABEL_24;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v11 = sub_17A6594(*(void *)(a1 + 64));
  v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x40) == 0) {
    goto LABEL_24;
  }
LABEL_20:
  int v12 = *(_DWORD *)(a1 + 72);
  if (v12 < 0) {
    uint64_t v13 = 11;
  }
  else {
    uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v13;
LABEL_24:
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v3 += v17;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_17AE6CC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x7F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_26;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void *)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        int v12 = (void *)*v12;
      }
      uint64_t v10 = sub_1830868((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_2549D20;
    }
    sub_17A2000(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_34;
    }
LABEL_26:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v14 = *(void **)(a1 + 40);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      unint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        unint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = sub_18309B4((uint64_t)v16);
      *(void *)(a1 + 40) = v14;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v17 = &off_2549DC0;
    }
    sub_17A390C((uint64_t)v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_42;
    }
LABEL_34:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v18 = *(void *)(a1 + 48);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      unsigned int v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        unsigned int v20 = (void *)*v20;
      }
      uint64_t v18 = sub_1830ACC((uint64_t)v20);
      *(void *)(a1 + 48) = v18;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v21 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v21 = &off_2549E20;
    }
    sub_12A372C(v18, (uint64_t)v21);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_50;
    }
LABEL_42:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v22 = *(void *)(a1 + 56);
    if (!v22)
    {
      uint64_t v23 = *(void *)(a1 + 8);
      uint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        uint64_t v24 = (void *)*v24;
      }
      uint64_t v22 = sub_1830C10((uint64_t)v24);
      *(void *)(a1 + 56) = v22;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v25 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v25 = &off_2549EA0;
    }
    sub_12A372C(v22, (uint64_t)v25);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0)
      {
LABEL_10:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_11;
      }
LABEL_9:
      *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
      goto LABEL_10;
    }
LABEL_50:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v26 = *(void **)(a1 + 64);
    if (!v26)
    {
      uint64_t v27 = *(void *)(a1 + 8);
      unsigned int v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
      if (v27) {
        unsigned int v28 = (void *)*v28;
      }
      uint64_t v26 = sub_1830D28((uint64_t)v28);
      *(void *)(a1 + 64) = v26;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v29 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      uint64_t v29 = &off_2549EF0;
    }
    sub_17A66C4((uint64_t)v26, (uint64_t)v29);
    if ((v4 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17AE91C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(unsigned int *)(v3 + 24);
    do
    {
      if ((int)v4 < 1)
      {
        int v2 = *(_DWORD *)(a1 + 16);
        goto LABEL_7;
      }
      uint64_t v5 = v4 - 1;
      char v6 = sub_12A0DC4(*(void *)(*(void *)(v3 + 32) + 8 * v4));
      uint64_t v4 = v5;
    }
    while ((v6 & 1) != 0);
    return 0;
  }
  else
  {
LABEL_7:
    if ((v2 & 4) != 0)
    {
      uint64_t result = sub_17A3A30(*(void *)(a1 + 40));
      if (!result) {
        return result;
      }
      int v2 = *(_DWORD *)(a1 + 16);
    }
    if ((v2 & 8) != 0)
    {
      uint64_t v8 = *(void *)(a1 + 48);
      uint64_t v9 = *(unsigned int *)(v8 + 24);
      while ((int)v9 >= 1)
      {
        uint64_t v10 = v9 - 1;
        char v11 = sub_16CE508(*(void *)(*(void *)(v8 + 32) + 8 * v9));
        uint64_t v9 = v10;
        if ((v11 & 1) == 0) {
          return 0;
        }
      }
      int v2 = *(_DWORD *)(a1 + 16);
    }
    if ((v2 & 0x10) != 0)
    {
      uint64_t v12 = *(void *)(a1 + 56);
      uint64_t v13 = *(unsigned int *)(v12 + 24);
      while ((int)v13 >= 1)
      {
        uint64_t v14 = v13 - 1;
        char v15 = sub_16CE508(*(void *)(*(void *)(v12 + 32) + 8 * v13));
        uint64_t v13 = v14;
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      int v2 = *(_DWORD *)(a1 + 16);
    }
    if ((v2 & 0x20) == 0) {
      return 1;
    }
    uint64_t result = sub_17A6820(*(void *)(a1 + 64));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_17AEA10@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.MapsSearchHomeResult.MapsSearchHomeSection");
}

uint64_t sub_17AEA20(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = (uint64_t *)(a1 + 16);
  *(void *)a1 = off_24DB918;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_1878A84(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    uint64_t v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_17AEB00(_Unwind_Exception *a1)
{
  sub_18773B8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17AEB44(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_18773B8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17AEBC4(void *a1)
{
  sub_17AEB44(a1);

  operator delete();
}

uint64_t sub_17AEBFC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_17ADA7C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_17AEC78(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            sub_18313A4(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = (char *)sub_17AEE18(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

uint64_t sub_17AEE18(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17ADB5C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17AEEA8(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_17AE178(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_17AEFEC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_17AE4D8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void sub_17AF09C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_1878A84((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_17AF16C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_17AE91C(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_17AF1C4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.MapsSearchHomeResult");
}

uint64_t sub_17AF1D4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DB998;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  return a1;
}

void sub_17AF288()
{
}

uint64_t sub_17AF2D8(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254A1F0)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_179203C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17AF390(uint64_t a1)
{
  sub_17AF2D8(a1);

  operator delete();
}

unsigned char *sub_17AF3C8(unsigned char *result)
{
  uint64_t v1 = result;
  if (result[16]) {
    uint64_t result = sub_179212C(*((unsigned char **)result + 3));
  }
  char v3 = v1[8];
  uint64_t v2 = v1 + 8;
  *((_DWORD *)v2 + 6) = 0;
  *((_DWORD *)v2 + 2) = 0;
  if (v3)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_17AF428(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v23 + 1;
    unsigned int v9 = *v23;
    if (*v23 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v23, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v23 + 2;
      }
    }
    uint64_t v23 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v16 = v8 + 1;
    int v17 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_24;
    }
    int v18 = *v16;
    int v17 = v17 + (v18 << 7) - 128;
    if ((v18 & 0x80000000) == 0)
    {
      uint64_t v16 = v8 + 2;
LABEL_24:
      uint64_t v23 = v16;
      *(_DWORD *)(a1 + 32) = v17;
      goto LABEL_31;
    }
    uint64_t v21 = (char *)sub_188C0D0((uint64_t)v8, v17);
    uint64_t v23 = v21;
    *(_DWORD *)(a1 + 32) = v22;
    if (!v21) {
      goto LABEL_38;
    }
LABEL_31:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v19 = *(void **)(a1 + 24);
    if (!v19)
    {
      unsigned int v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        unsigned int v20 = (void *)*v20;
      }
      uint64_t v19 = sub_18302C8((uint64_t)v20);
      *(void *)(a1 + 24) = v19;
      uint64_t v8 = v23;
    }
    uint64_t v15 = sub_120FE50(a3, (uint64_t)v19, (unsigned __int8 *)v8);
LABEL_30:
    uint64_t v23 = v15;
    if (!v15) {
      goto LABEL_38;
    }
    goto LABEL_31;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v23;
    }
    uint64_t v15 = (char *)sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_38:
  uint64_t v23 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v23;
}

unsigned char *sub_17AF60C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_1792424(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 32);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_17AF7A4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_1792638(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t result = 0;
  if ((v2 & 2) != 0) {
LABEL_7:
  }
    result += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    result += v7;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_17AF868(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v5 = *(void **)(a1 + 24);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          uint64_t v7 = (void *)*v7;
        }
        uint64_t v5 = sub_18302C8((uint64_t)v7);
        *(void *)(a1 + 24) = v5;
      }
      if (*(void *)(a2 + 24)) {
        unsigned int v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unsigned int v8 = &off_2549800;
      }
      sub_1792730((uint64_t)v5, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
    }
    *(_DWORD *)(a1 + 16) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_17AF938(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t v1 = *(void *)(a1 + 24);
  if ((*(unsigned char *)(v1 + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = sub_15B1FC0(*(void *)(v1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17AF970@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AllGuidesLocationsViewParameters");
}

uint64_t sub_17AF980(uint64_t a1)
{
  char v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_254A218)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_184AFBC(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17AFA4C(uint64_t a1)
{
  sub_17AF980(a1);

  operator delete();
}

unsigned char *sub_17AFA84(unsigned char *result)
{
  uint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *((void *)result + 3) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      BOOL result = sub_16CD894(*((void *)result + 4));
  }
LABEL_7:
  char v5 = v1[8];
  int v4 = v1 + 8;
  *((_DWORD *)v4 + 8) = 0;
  *((_DWORD *)v4 + 2) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_17AFB1C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v27 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    return *(void *)v27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v27 + 1);
    unsigned int v8 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v27 + 2);
      }
    }
    *(void *)uint64_t v27 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v16 = *(void *)(a1 + 32);
      if (!v16)
      {
        uint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v17 = (void *)*v17;
        }
        uint64_t v16 = sub_185089C((uint64_t)v17);
        *(void *)(a1 + 32) = v16;
        uint64_t v7 = *(unsigned __int8 **)v27;
      }
      unint64_t v15 = sub_12688D0(a3, v16, v7);
      goto LABEL_31;
    }
    if (v11 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v18 = *(void *)(a1 + 8);
    uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (uint64_t *)*v19;
    }
    unsigned int v20 = (std::string *)sub_1880F84((void *)(a1 + 24), v19);
    unint64_t v15 = (void *)sub_188C244(v20, *(char **)v27, (uint64_t)a3);
LABEL_31:
    *(void *)uint64_t v27 = v15;
    if (!v15) {
      goto LABEL_50;
    }
LABEL_39:
    if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
      return *(void *)v27;
    }
  }
  if (v11 == 1 && v8 == 8)
  {
    uint64_t v21 = (char *)(v7 + 1);
    unint64_t v22 = *v7;
    if (((char)*v7 & 0x80000000) == 0) {
      goto LABEL_36;
    }
    int v23 = *v21;
    int v24 = v22 + (v23 << 7);
    unint64_t v22 = (v24 - 128);
    if (v23 < 0)
    {
      *(void *)uint64_t v27 = sub_188C138((uint64_t)v7, (v24 - 128));
      if (!*(void *)v27) {
        goto LABEL_50;
      }
      unint64_t v22 = v25;
    }
    else
    {
      uint64_t v21 = (char *)(v7 + 2);
LABEL_36:
      *(void *)uint64_t v27 = v21;
    }
    if (v22 > 2)
    {
      if (*v6) {
        uint64_t v26 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v22, v26);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 4u;
      *(_DWORD *)(a1 + 40) = v22;
    }
    goto LABEL_39;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v27;
    }
    unint64_t v15 = sub_1885AC0(v8, v14, (char *)v7, a3);
    goto LABEL_31;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v27;
  }
LABEL_50:
  *(void *)uint64_t v27 = 0;
  return *(void *)v27;
}

char *sub_17AFD84(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    *int v4 = 26;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unsigned int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unsigned int v12 = v4 + 2;
    }
    int v4 = sub_184B3AC(v10, v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_17AFF30(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_15;
  }
  if (v2)
  {
    unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    uint64_t v7 = sub_184B568(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    int v8 = *(_DWORD *)(a1 + 40);
    if (v8 < 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v9;
  }
LABEL_15:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_17B0050(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          *(_DWORD *)(a1 + 16) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void *)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_185089C((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_254D2B0;
    }
    sub_16CE3CC(v10, (uint64_t)v13);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17B0160(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_16CE508(*(void *)(a1 + 32));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17B018C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AllGuidesLocationsViewResult.AllGuidesLocationsSection.AllGuidesLocationsSectionHeader");
}

uint64_t sub_17B019C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254A248)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_17AF980(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1877238((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17B0260(uint64_t a1)
{
  sub_17B019C(a1);

  operator delete();
}

uint64_t sub_17B0298(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1703F30(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = (uint64_t)sub_17AFA84(*(unsigned char **)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_17B0328(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v23 + 2;
      }
    }
    int v23 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 48);
    if (!v21)
    {
      unint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unint64_t v22 = (void *)*v22;
      }
      uint64_t v21 = sub_1831550((uint64_t)v22);
      *(void *)(a1 + 48) = v21;
      uint64_t v7 = v23;
    }
    uint64_t v14 = (char *)sub_17B0530(a3, v21, (unsigned __int8 *)v7);
LABEL_35:
    int v23 = v14;
    if (!v14) {
      return 0;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 == 18)
  {
    unint64_t v15 = v7 - 1;
    while (1)
    {
      uint64_t v16 = (unsigned __int8 *)(v15 + 1);
      int v23 = v15 + 1;
      uint64_t v17 = *(_DWORD **)(a1 + 40);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 32) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        sub_1789B90(*(void *)(a1 + 24));
        uint64_t v19 = sub_188CDC8(a1 + 24, v20);
        uint64_t v16 = (unsigned __int8 *)v23;
      }
      unint64_t v15 = sub_1706220(a3, v19, v16);
      int v23 = v15;
      if (!v15) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v23;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_35;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

uint64_t sub_17B0530(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17AFB1C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_17B05C0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 48);
    *uint64_t v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_17AFD84(v6, (unint64_t)v8, a3);
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        uint64_t v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        uint64_t v13 = v4 + 2;
      }
      uint64_t v4 = sub_17044FC(v11, (unint64_t)v13, a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_17B076C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_17048E4(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v8 = sub_17AFF30(*(void *)(a1 + 48));
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_17B0850(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_18788E0((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v10 = *(void *)(a1 + 48);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_1831550((uint64_t)v12);
      *(void *)(a1 + 48) = v10;
      uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    }
    if (v9) {
      uint64_t v13 = v9;
    }
    else {
      uint64_t v13 = &off_254A218;
    }
    sub_17B0050(v10, (uint64_t)v13);
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17B0974(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_1704CAC(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t v6 = *(void *)(a1 + 48);
  if ((*(unsigned char *)(v6 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_16CE508(*(void *)(v6 + 32));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17B09E4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AllGuidesLocationsViewResult.AllGuidesLocationsSection");
}

uint64_t sub_17B09F4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  char v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24DBB18;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1878B10(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v12 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v12);
  }
  return a1;
}

void sub_17B0B18(_Unwind_Exception *a1)
{
  sub_1877438(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17B0B5C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1877438((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17B0C08(uint64_t a1)
{
  sub_17B0B5C(a1);

  operator delete();
}

uint64_t sub_17B0C40(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_17B0298(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    unint64_t v5 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_17B0CF0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = (char *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)int v24 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 8);
    unint64_t v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      unint64_t v22 = (uint64_t *)*v22;
    }
    int v23 = (std::string *)sub_1880F84((void *)(a1 + 48), v22);
    uint64_t v14 = (void *)sub_188C244(v23, *(char **)v24, (uint64_t)a3);
LABEL_33:
    *(void *)int v24 = v14;
    if (!v14) {
      goto LABEL_39;
    }
LABEL_34:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 == 18)
  {
    unint64_t v15 = v7 - 1;
    while (1)
    {
      unint64_t v16 = (unsigned __int8 *)(v15 + 1);
      *(void *)int v24 = v15 + 1;
      uint64_t v17 = *(_DWORD **)(a1 + 40);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 32) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        uint64_t v20 = sub_18315D8(*(void *)(a1 + 24));
        uint64_t v19 = sub_188CDC8(a1 + 24, (uint64_t)v20);
        unint64_t v16 = *(unsigned __int8 **)v24;
      }
      unint64_t v15 = sub_17B0EF0(a3, v19, v16);
      *(void *)int v24 = v15;
      if (!v15) {
        goto LABEL_39;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
        goto LABEL_34;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v7 = *(char **)v24;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_33;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_39:
  *(void *)int v24 = 0;
  return *(void *)v24;
}

char *sub_17B0EF0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17B0328(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_17B0F80(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      v4[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, v4 + 1);
      }
      else {
        unsigned int v10 = v4 + 2;
      }
      uint64_t v4 = sub_17B05C0(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_17B10E8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_17B076C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_17B11E0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1878B10((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    unint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *unint64_t v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v10 = *(void *)(a1 + 8);
    uint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      uint64_t v11 = (uint64_t *)*v11;
    }
    sub_1881DF4((std::string **)(a1 + 48), v9, v11);
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_17B12E8(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_17B0974(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_17B1340@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AllGuidesLocationsViewResult");
}

uint64_t sub_17B1350(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DBB98;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  return a1;
}

void sub_17B13FC()
{
}

uint64_t sub_17B144C(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254A2B8)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_12A17E0(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17B1504(uint64_t a1)
{
  sub_17B144C(a1);

  operator delete();
}

uint64_t sub_17B153C(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_12A181C(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_17B1598(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    uint64_t v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    unint64_t v13 = *(void **)(a1 + 24);
    if (!v13)
    {
      uint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v14 = (void *)*v14;
      }
      unint64_t v13 = sub_12BBBC8((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      uint64_t v6 = v16;
    }
    uint64_t v12 = (char *)sub_12B117C(a3, (uint64_t)v13, (unsigned __int8 *)v6);
LABEL_20:
    uint64_t v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v16;
    }
    uint64_t v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

char *sub_17B16F0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *uint64_t v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_12A1AC4(v6, v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_17B1800(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_12A1BDC(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

uint64_t sub_17B1888()
{
  return 1;
}

void *sub_17B1890@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.GuidesHomeResultFilterTypeConcept");
}

uint64_t sub_17B18A0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24DBC18;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  unint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    unsigned int v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1878B9C(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    BOOL v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *BOOL v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  return a1;
}

void sub_17B19CC()
{
}

uint64_t sub_17B1A30(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254A2D8)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_17B144C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_18774B8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17B1AF4(uint64_t a1)
{
  sub_17B1A30(a1);

  operator delete();
}

uint64_t sub_17B1B2C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_17B1B2C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = sub_17B153C(*(void *)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 48) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_17B1BC0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v29 = a2;
  if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
    return v29;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v29 + 1;
    unsigned int v8 = *v29;
    if (*v29 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v29, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v29 + 2;
      }
    }
    uint64_t v29 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 50)
    {
      if (v8 == 146)
      {
        uint64_t v16 = v7 - 2;
        while (1)
        {
          uint64_t v29 = v16 + 2;
          uint64_t v17 = *(_DWORD **)(a1 + 40);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 32) = v18 + 1;
            uint64_t v19 = *(void *)&v17[2 * v18 + 2];
          }
          else
          {
            uint64_t v20 = sub_1831790(*(void *)(a1 + 24));
            uint64_t v19 = sub_188CDC8(a1 + 24, v20);
          }
          uint64_t v16 = (char *)sub_17B1F00(a3, v19);
          uint64_t v29 = v16;
          if (!v16) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *(_WORD *)v16 != 914) {
            goto LABEL_45;
          }
        }
      }
      goto LABEL_14;
    }
    if (v11 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void **)(a1 + 48);
    if (!v21)
    {
      unint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unint64_t v22 = (void *)*v22;
      }
      uint64_t v21 = sub_1831718((uint64_t)v22);
      *(void *)(a1 + 48) = v21;
      uint64_t v7 = v29;
    }
    uint64_t v15 = sub_17B1E70(a3, (uint64_t)v21, (unsigned __int8 *)v7);
LABEL_37:
    uint64_t v29 = v15;
    if (!v15) {
      return 0;
    }
LABEL_45:
    if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
      return v29;
    }
  }
  if (v11 == 1 && v8 == 8)
  {
    int v23 = v7 + 1;
    unint64_t v24 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_42;
    }
    int v25 = *v23;
    int v26 = v24 + (v25 << 7);
    unint64_t v24 = (v26 - 128);
    if (v25 < 0)
    {
      uint64_t v29 = (char *)sub_188C138((uint64_t)v7, (v26 - 128));
      if (!v29) {
        return 0;
      }
      unint64_t v24 = v27;
    }
    else
    {
      int v23 = v7 + 2;
LABEL_42:
      uint64_t v29 = v23;
    }
    if (v24 > 1)
    {
      if (*v6) {
        unsigned int v28 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        unsigned int v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v24, v28);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 56) = v24;
    }
    goto LABEL_45;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v29;
    }
    uint64_t v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_37;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v29;
  }
  return 0;
}

char *sub_17B1E70(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17B1598(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17B1F00(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17B1BC0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_17B1F90(uint64_t a1, unsigned char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(int *)(a1 + 56);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 48);
    *uint64_t v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    uint64_t v4 = sub_17B16F0(v10, (unint64_t)v12, a3);
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *(_WORD *)uint64_t v4 = 914;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[2] = v16;
      if (v16 > 0x7F) {
        uint64_t v17 = sub_188A9CC(v16, v4 + 2);
      }
      else {
        uint64_t v17 = v4 + 3;
      }
      uint64_t v4 = (unsigned char *)sub_17B1F90(v15, v17, a3);
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return (uint64_t)v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return (uint64_t)v4;
  }

  return sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_17B21B8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = 2 * v2;
  uint64_t v4 = *(void *)(a1 + 40);
  if (v4) {
    uint64_t v5 = (uint64_t *)(v4 + 8);
  }
  else {
    uint64_t v5 = 0;
  }
  if (v2)
  {
    uint64_t v6 = 8 * v2;
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v8 = sub_17B21B8(v7);
      v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      v6 -= 8;
    }
    while (v6);
  }
  int v9 = *(_DWORD *)(a1 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      uint64_t v10 = sub_17B1800(*(void *)(a1 + 48));
      v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v9 & 2) != 0)
    {
      int v11 = *(_DWORD *)(a1 + 56);
      if (v11 < 0) {
        uint64_t v12 = 11;
      }
      else {
        uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v3 += v12;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v3 += v16;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_17B22D4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  uint64_t v4 = *(unsigned int *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 40) + 8;
    uint64_t v6 = sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_1878B9C(&v3[1], v6, v5, v4, (*(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1])));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (_DWORD *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)v3[2].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v12 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v12 = (void *)*v12;
        }
        data = (std::string *)sub_1831718((uint64_t)v12);
        v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v13 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v13 = &off_254A2B8;
      }
      uint64_t result = sub_1705EBC(data, (uint64_t)v13);
    }
    if ((v9 & 2) != 0) {
      LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_17B2414()
{
  return 1;
}

void *sub_17B241C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.GuidesHomeResultFilter");
}

uint64_t sub_17B242C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24DBC98;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  *(void *)(a1 + 28) = 0;
  int v5 = *(_DWORD *)(a2 + 24);
  if (v5)
  {
    sub_188C80C((unsigned int *)(a1 + 24), v5);
    uint64_t v6 = *(void **)(a1 + 32);
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
    memcpy(v6, *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  int v7 = *(_DWORD *)(a2 + 40);
  if (v7)
  {
    sub_188C80C((unsigned int *)(a1 + 40), v7);
    uint64_t v8 = *(void **)(a1 + 48);
    *(_DWORD *)(a1 + 40) += *(_DWORD *)(a2 + 40);
    memcpy(v8, *(const void **)(a2 + 48), 4 * *(int *)(a2 + 40));
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9) {
    sub_188B4F8(v4, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v10 = *(_DWORD *)(a2 + 16);
  if (v10) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  if ((v10 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  if ((v10 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  if ((v10 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 80) = 0;
  return a1;
}

void sub_17B2608()
{
}

uint64_t sub_17B26B4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_17B2748((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DA8(a1 + 40);
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_17B2748(uint64_t (***result)()))()
{
  if (result != &off_254A318)
  {
    uint64_t v1 = result;
    uint64_t v2 = (uint64_t)result[7];
    if (v2)
    {
      sub_179203C(v2);
      operator delete();
    }
    uint64_t v3 = (uint64_t)v1[8];
    if (v3)
    {
      sub_1703DA0(v3);
      operator delete();
    }
    uint64_t v4 = (uint64_t)v1[9];
    if (v4)
    {
      sub_17B1A30(v4);
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[10];
    if (result)
    {
      sub_12B0C84(result);
      operator delete();
    }
  }
  return result;
}

void sub_17B2814(uint64_t a1)
{
  sub_17B26B4(a1);

  operator delete();
}

uint64_t sub_17B284C(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_7;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_12:
    uint64_t result = sub_1703F30(*(void *)(v1 + 64));
    if ((v2 & 4) == 0)
    {
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    goto LABEL_13;
  }
  uint64_t result = (uint64_t)sub_179212C(*(unsigned char **)(result + 56));
  if ((v2 & 2) != 0) {
    goto LABEL_12;
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_13:
  uint64_t result = sub_17B1B2C(*(void *)(v1 + 72));
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    uint64_t result = sub_12B0CC0(*(void *)(v1 + 80));
LABEL_7:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_17B28EC(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v43 = a2;
  if (sub_11947B8((uint64_t)a3, &v43, a3[11].i32[1])) {
    return v43;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    int v7 = v43 + 1;
    unsigned int v8 = *v43;
    if (*v43 < 0)
    {
      int v9 = *v7;
      unsigned int v10 = v8 + (v9 << 7);
      unsigned int v8 = v10 - 128;
      if (v9 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v43, v10 - 128);
        unsigned int v8 = v11;
      }
      else
      {
        int v7 = v43 + 2;
      }
    }
    int v43 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 == 8)
        {
          uint64_t v12 = v7 - 1;
          while (1)
          {
            int v43 = v12 + 1;
            unint64_t v13 = v12[1];
            uint64_t v14 = v12 + 2;
            if (v12[1] < 0)
            {
              int v15 = *v14;
              int v16 = v13 + (v15 << 7);
              unint64_t v13 = (v16 - 128);
              if (v15 < 0)
              {
                int v43 = (char *)sub_188C138((uint64_t)(v12 + 1), (v16 - 128));
                if (!v43) {
                  return 0;
                }
                unint64_t v13 = v19;
                goto LABEL_15;
              }
              uint64_t v14 = v12 + 3;
            }
            int v43 = v14;
LABEL_15:
            if (v13 > 3)
            {
              if (*v6) {
                unint64_t v20 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                unint64_t v20 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(1, v13, v20);
            }
            else
            {
              uint64_t v17 = *(unsigned int *)(a1 + 24);
              if (v17 == *(_DWORD *)(a1 + 28))
              {
                int v18 = v17 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v17 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v17) = v13;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v17) = v13;
                int v18 = v17 + 1;
              }
              *(_DWORD *)(a1 + 24) = v18;
            }
            uint64_t v12 = v43;
            if (*(void *)a3 <= (unint64_t)v43 || *v43 != 8) {
              goto LABEL_86;
            }
          }
        }
        if (v8 != 10) {
          goto LABEL_78;
        }
        *(void *)&long long v44 = a1 + 24;
        *((void *)&v44 + 1) = sub_1791DE8;
        uint64_t v45 = a1 + 8;
        int v46 = 1;
        goto LABEL_77;
      case 2u:
        if (v8 == 16)
        {
          uint64_t v21 = v7 - 1;
          while (1)
          {
            int v43 = v21 + 1;
            unint64_t v22 = v21[1];
            uint64_t v23 = v21 + 2;
            if (v21[1] < 0)
            {
              int v24 = *v23;
              int v25 = v22 + (v24 << 7);
              unint64_t v22 = (v25 - 128);
              if (v24 < 0)
              {
                int v43 = (char *)sub_188C138((uint64_t)(v21 + 1), (v25 - 128));
                if (!v43) {
                  return 0;
                }
                unint64_t v22 = v28;
                goto LABEL_35;
              }
              uint64_t v23 = v21 + 3;
            }
            int v43 = v23;
LABEL_35:
            if (v22 > 4)
            {
              if (*v6) {
                uint64_t v29 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(2, v22, v29);
            }
            else
            {
              uint64_t v26 = *(unsigned int *)(a1 + 40);
              if (v26 == *(_DWORD *)(a1 + 44))
              {
                int v27 = v26 + 1;
                sub_188C80C((unsigned int *)(a1 + 40), v26 + 1);
                *(_DWORD *)(*(void *)(a1 + 48) + 4 * v26) = v22;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 48) + 4 * v26) = v22;
                int v27 = v26 + 1;
              }
              *(_DWORD *)(a1 + 40) = v27;
            }
            uint64_t v21 = v43;
            if (*(void *)a3 <= (unint64_t)v43 || *v43 != 16) {
              goto LABEL_86;
            }
          }
        }
        if (v8 == 18)
        {
          *(void *)&long long v44 = a1 + 40;
          *((void *)&v44 + 1) = sub_1791DF4;
          uint64_t v45 = a1 + 8;
          int v46 = 2;
LABEL_77:
          unint64_t v32 = sub_1112E88((uint64_t)a3, v7, &v44);
LABEL_85:
          int v43 = v32;
          if (!v32) {
            return 0;
          }
LABEL_86:
          if (sub_11947B8((uint64_t)a3, &v43, a3[11].i32[1])) {
            return v43;
          }
          continue;
        }
LABEL_78:
        if (v8) {
          BOOL v41 = (v8 & 7) == 4;
        }
        else {
          BOOL v41 = 1;
        }
        if (!v41)
        {
          if (*v6)
          {
            int64_t v42 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int64_t v42 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v7 = v43;
          }
          unint64_t v32 = (char *)sub_1885AC0(v8, v42, v7, a3);
          goto LABEL_85;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v43;
      case 3u:
        if (v8 != 26) {
          goto LABEL_78;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v30 = *(void **)(a1 + 56);
        if (!v30)
        {
          unint64_t v31 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v31 = (void *)*v31;
          }
          uint64_t v30 = sub_18302C8((uint64_t)v31);
          *(void *)(a1 + 56) = v30;
          int v7 = v43;
        }
        unint64_t v32 = sub_120FE50(a3, (uint64_t)v30, (unsigned __int8 *)v7);
        goto LABEL_85;
      case 4u:
        if (v8 != 34) {
          goto LABEL_78;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v33 = *(void *)(a1 + 64);
        if (!v33)
        {
          uint64_t v34 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v34 = (void *)*v34;
          }
          sub_1789B90((uint64_t)v34);
          uint64_t v33 = v35;
          *(void *)(a1 + 64) = v35;
          int v7 = v43;
        }
        unint64_t v32 = sub_1706220(a3, v33, (unsigned __int8 *)v7);
        goto LABEL_85;
      case 5u:
        if (v8 != 42) {
          goto LABEL_78;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v36 = *(void *)(a1 + 72);
        if (!v36)
        {
          long long v37 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            long long v37 = (void *)*v37;
          }
          uint64_t v36 = sub_1831790((uint64_t)v37);
          *(void *)(a1 + 72) = v36;
          int v7 = v43;
        }
        unint64_t v32 = sub_17B1F00(a3, v36, (unsigned __int8 *)v7);
        goto LABEL_85;
      case 6u:
        if (v8 != 50) {
          goto LABEL_78;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v38 = *(void *)(a1 + 80);
        if (!v38)
        {
          int v39 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v39 = (void *)*v39;
          }
          sub_12BC8F8((uint64_t)v39);
          uint64_t v38 = v40;
          *(void *)(a1 + 80) = v40;
          int v7 = v43;
        }
        unint64_t v32 = (char *)sub_12B39D0(a3, v38, (unsigned __int8 *)v7);
        goto LABEL_85;
      default:
        goto LABEL_78;
    }
  }
}

char *sub_17B2DF0(uint64_t a1, char *__dst, unint64_t *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v8 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  uint64_t v11 = *(unsigned int *)(a1 + 40);
  if ((int)v11 >= 1)
  {
    for (uint64_t j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v13 = *(int *)(*(void *)(a1 + 48) + 4 * j);
      *__dst = 16;
      __dst[1] = v13;
      if (v13 > 0x7F)
      {
        __dst[1] = v13 | 0x80;
        unint64_t v14 = v13 >> 7;
        __dst[2] = v13 >> 7;
        __dst += 3;
        if (v13 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v15 = v14 >> 14;
            v14 >>= 7;
            *__dst++ = v14;
          }
          while (v15);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  int v16 = *(_DWORD *)(a1 + 16);
  if (v16)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v17 = *(void *)(a1 + 56);
    *__dst = 26;
    unsigned int v18 = *(_DWORD *)(v17 + 20);
    __dst[1] = v18;
    if (v18 > 0x7F) {
      unint64_t v19 = sub_188A9CC(v18, __dst + 1);
    }
    else {
      unint64_t v19 = __dst + 2;
    }
    __dst = sub_1792424(v17, (unint64_t)v19, a3);
    if ((v16 & 2) == 0)
    {
LABEL_21:
      if ((v16 & 4) == 0) {
        goto LABEL_22;
      }
      goto LABEL_36;
    }
  }
  else if ((v16 & 2) == 0)
  {
    goto LABEL_21;
  }
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v20 = *(void *)(a1 + 64);
  *__dst = 34;
  unsigned int v21 = *(_DWORD *)(v20 + 20);
  __dst[1] = v21;
  if (v21 > 0x7F) {
    unint64_t v22 = sub_188A9CC(v21, __dst + 1);
  }
  else {
    unint64_t v22 = __dst + 2;
  }
  __dst = sub_17044FC(v20, (unint64_t)v22, a3);
  if ((v16 & 4) == 0)
  {
LABEL_22:
    if ((v16 & 8) == 0) {
      goto LABEL_48;
    }
    goto LABEL_42;
  }
LABEL_36:
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v23 = *(void *)(a1 + 72);
  *__dst = 42;
  unsigned int v24 = *(_DWORD *)(v23 + 20);
  __dst[1] = v24;
  if (v24 > 0x7F) {
    int v25 = sub_188A9CC(v24, __dst + 1);
  }
  else {
    int v25 = __dst + 2;
  }
  __dst = (char *)sub_17B1F90(v23, v25, a3);
  if ((v16 & 8) != 0)
  {
LABEL_42:
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v26 = *(void *)(a1 + 80);
    *__dst = 50;
    unsigned int v27 = *(_DWORD *)(v26 + 20);
    __dst[1] = v27;
    if (v27 > 0x7F) {
      unint64_t v28 = sub_188A9CC(v27, __dst + 1);
    }
    else {
      unint64_t v28 = __dst + 2;
    }
    __dst = sub_12B120C(v26, (unint64_t)v28, a3);
  }
LABEL_48:
  uint64_t v29 = *(void *)(a1 + 8);
  if ((v29 & 1) == 0) {
    return __dst;
  }
  unint64_t v31 = v29 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v31 + 31) < 0)
  {
    unint64_t v32 = *(void **)(v31 + 8);
    uint64_t v33 = *(void *)(v31 + 16);
  }
  else
  {
    unint64_t v32 = (void *)(v31 + 8);
    LODWORD(v33) = *(unsigned __int8 *)(v31 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v33)
  {
    uint64_t v34 = (int)v33;
    memcpy(__dst, v32, (int)v33);
    __dst += v34;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v32, v33, __dst);
}

uint64_t sub_17B3180(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v3);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v4 += v6;
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v7 = *(unsigned int *)(a1 + 40);
  if (v7)
  {
    int v8 = 0;
    uint64_t v9 = 0;
    do
    {
      int v10 = *(_DWORD *)(*(void *)(a1 + 48) + 4 * v8);
      if (v10 < 0) {
        uint64_t v11 = 10;
      }
      else {
        uint64_t v11 = (9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6;
      }
      v9 += v11;
      ++v8;
    }
    while (v7 != v8);
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v12 = v4 + v2 + v7 + v9;
  int v13 = *(_DWORD *)(a1 + 16);
  if ((v13 & 0xF) == 0) {
    goto LABEL_23;
  }
  if ((v13 & 1) == 0)
  {
    if ((v13 & 2) == 0) {
      goto LABEL_20;
    }
LABEL_26:
    uint64_t v18 = sub_17048E4(*(void *)(a1 + 64));
    v12 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v13 & 4) == 0)
    {
LABEL_21:
      if ((v13 & 8) == 0) {
        goto LABEL_23;
      }
      goto LABEL_22;
    }
    goto LABEL_27;
  }
  uint64_t v17 = sub_1792638(*(void *)(a1 + 56));
  v12 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v13 & 2) != 0) {
    goto LABEL_26;
  }
LABEL_20:
  if ((v13 & 4) == 0) {
    goto LABEL_21;
  }
LABEL_27:
  uint64_t v19 = sub_17B21B8(*(void *)(a1 + 72));
  v12 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v13 & 8) != 0)
  {
LABEL_22:
    uint64_t v14 = sub_12B156C(*(void *)(a1 + 80));
    v12 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_23:
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v20 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v12 += v21;
  }
  *(_DWORD *)(a1 + 20) = v12;
  return v12;
}

void sub_17B336C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188C80C((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if (v8)
  {
    uint64_t v9 = *(int *)(a1 + 40);
    sub_188C80C((unsigned int *)(a1 + 40), v9 + v8);
    uint64_t v10 = *(void *)(a1 + 48);
    *(_DWORD *)(a1 + 40) += *(_DWORD *)(a2 + 40);
    memcpy((void *)(v10 + 4 * v9), *(const void **)(a2 + 48), 4 * *(int *)(a2 + 40));
  }
  int v11 = *(_DWORD *)(a2 + 16);
  if ((v11 & 0xF) == 0) {
    goto LABEL_43;
  }
  if ((v11 & 1) == 0)
  {
    if ((v11 & 2) == 0) {
      goto LABEL_8;
    }
LABEL_19:
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v16 = *(void *)(a1 + 64);
    if (!v16)
    {
      uint64_t v17 = *(void *)(a1 + 8);
      uint64_t v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        uint64_t v18 = (void *)*v18;
      }
      sub_1789B90((uint64_t)v18);
      *(void *)(a1 + 64) = v16;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v19 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      uint64_t v19 = &off_25464B0;
    }
    sub_1704A90(v16, (uint64_t)v19);
    if ((v11 & 4) == 0)
    {
LABEL_9:
      if ((v11 & 8) == 0) {
        goto LABEL_43;
      }
      goto LABEL_35;
    }
    goto LABEL_27;
  }
  *(_DWORD *)(a1 + 16) |= 1u;
  uint64_t v12 = *(void **)(a1 + 56);
  if (!v12)
  {
    uint64_t v13 = *(void *)(a1 + 8);
    uint64_t v14 = (void *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
    if (v13) {
      uint64_t v14 = (void *)*v14;
    }
    uint64_t v12 = sub_18302C8((uint64_t)v14);
    *(void *)(a1 + 56) = v12;
  }
  if (*(void *)(a2 + 56)) {
    uint64_t v15 = *(uint64_t (****)())(a2 + 56);
  }
  else {
    uint64_t v15 = &off_2549800;
  }
  sub_1792730((uint64_t)v12, (uint64_t)v15);
  if ((v11 & 2) != 0) {
    goto LABEL_19;
  }
LABEL_8:
  if ((v11 & 4) == 0) {
    goto LABEL_9;
  }
LABEL_27:
  *(_DWORD *)(a1 + 16) |= 4u;
  unint64_t v20 = *(std::string **)(a1 + 72);
  if (!v20)
  {
    uint64_t v21 = *(void *)(a1 + 8);
    unint64_t v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      unint64_t v22 = (void *)*v22;
    }
    unint64_t v20 = (std::string *)sub_1831790((uint64_t)v22);
    *(void *)(a1 + 72) = v20;
  }
  if (*(void *)(a2 + 72)) {
    uint64_t v23 = *(uint64_t (****)())(a2 + 72);
  }
  else {
    uint64_t v23 = &off_254A2D8;
  }
  sub_17B22D4(v20, (uint64_t)v23);
  if ((v11 & 8) != 0)
  {
LABEL_35:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v24 = *(void *)(a1 + 80);
    if (!v24)
    {
      uint64_t v25 = *(void *)(a1 + 8);
      uint64_t v26 = (void *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
      if (v25) {
        uint64_t v26 = (void *)*v26;
      }
      sub_12BC8F8((uint64_t)v26);
      *(void *)(a1 + 80) = v24;
    }
    if (*(void *)(a2 + 80)) {
      unsigned int v27 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      unsigned int v27 = &off_2530DC0;
    }
    sub_12B1760(v24, (uint64_t)v27);
  }
LABEL_43:
  uint64_t v28 = *(void *)(a2 + 8);
  if (v28)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v28 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17B35A0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 56);
    if (*(unsigned char *)(v3 + 16))
    {
      uint64_t result = sub_15B1FC0(*(void *)(v3 + 24));
      if (!result) {
        return result;
      }
      int v2 = *(_DWORD *)(a1 + 16);
    }
  }
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_1704CAC(*(void *)(a1 + 64));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) == 0) {
    return 1;
  }
  uint64_t result = sub_12B19B0(*(void *)(a1 + 80));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17B360C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.GuidesHomeParameters");
}

uint64_t sub_17B361C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24DBD18;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  int v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    int v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C4B74(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  int v11 = *(_DWORD *)(a2 + 56);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 64);
    uint64_t v13 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1878B9C((uint64_t *)(a1 + 48), v13, (uint64_t *)(v12 + 8), v11, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v14 = *(_DWORD *)(a1 + 56) + v11;
    *(_DWORD *)(a1 + 56) = v14;
    uint64_t v15 = *(int **)(a1 + 64);
    if (*v15 < v14) {
      *uint64_t v15 = v14;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v16 = *(_DWORD *)(a2 + 80);
  if (v16)
  {
    uint64_t v17 = *(void *)(a2 + 88);
    uint64_t v18 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_12C4B74((uint64_t *)(a1 + 72), v18, (uint64_t *)(v17 + 8), v16, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v19 = *(_DWORD *)(a1 + 80) + v16;
    *(_DWORD *)(a1 + 80) = v19;
    unint64_t v20 = *(int **)(a1 + 88);
    if (*v20 < v19) {
      int *v20 = v19;
    }
  }
  uint64_t v21 = *(void *)(a2 + 8);
  if (v21) {
    sub_188B4F8(v4, (v21 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 96) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    unint64_t v22 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v22 = (uint64_t *)*v22;
    }
    sub_1881DF4((std::string **)(a1 + 96), (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL), v22);
  }
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  return a1;
}

void sub_17B3820(_Unwind_Exception *a1)
{
  sub_12C45E8(v5);
  sub_18774B8(v4);
  sub_12C45E8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17B388C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  int v5 = (void ***)(a1 + 96);
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_12C45E8((void *)(a1 + 72));
  sub_18774B8((void *)(a1 + 48));
  sub_12C45E8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17B3950(uint64_t a1)
{
  sub_17B388C(a1);

  operator delete();
}

uint64_t sub_17B3988(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = (uint64_t)sub_16CD894(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    int v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_17B1B2C(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 80);
  if ((int)v8 >= 1)
  {
    int v9 = (uint64_t *)(*(void *)(v1 + 88) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = (uint64_t)sub_16CD894(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 80) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    unint64_t v11 = *(void *)(v1 + 96) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v11 + 23) < 0)
    {
      **(unsigned char **)unint64_t v11 = 0;
      *(void *)(v11 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v11 = 0;
      *(unsigned char *)(v11 + 23) = 0;
    }
  }
  char v13 = *(unsigned char *)(v1 + 8);
  uint64_t v12 = v1 + 8;
  *(_DWORD *)(v12 + 96) = 0;
  *(_DWORD *)(v12 + 8) = 0;
  if (v13)
  {
    return sub_188B4AC((uint64_t *)v12);
  }
  return result;
}

uint64_t sub_17B3A8C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)BOOL v41 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v41, a3[11].i32[1])) {
    return *(void *)v41;
  }
  int v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (char *)(*(void *)v41 + 1);
    unsigned int v8 = **(unsigned char **)v41;
    if ((char)**(unsigned char **)v41 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v41, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v41 + 2);
      }
    }
    *(void *)BOOL v41 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_50;
        }
        unint64_t v11 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          *(void *)BOOL v41 = sub_188C138((uint64_t)v7, (v14 - 128));
          if (!*(void *)v41) {
            return 0;
          }
          unint64_t v12 = v39;
        }
        else
        {
          unint64_t v11 = v7 + 2;
LABEL_13:
          *(void *)BOOL v41 = v11;
        }
        if (v12 > 3)
        {
          if (*v6) {
            uint64_t v40 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v40 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v12, v40);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          *(_DWORD *)(a1 + 104) = v12;
        }
        goto LABEL_58;
      case 2u:
        if (v8 != 18) {
          goto LABEL_50;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        int v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          int v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 96), v16);
        uint64_t v18 = (void *)sub_188C244(v17, *(char **)v41, (uint64_t)a3);
        goto LABEL_57;
      case 3u:
        if (v8 != 26) {
          goto LABEL_50;
        }
        int v19 = v7 - 1;
        while (1)
        {
          unint64_t v20 = (unsigned __int8 *)(v19 + 1);
          *(void *)BOOL v41 = v19 + 1;
          uint64_t v21 = *(_DWORD **)(a1 + 40);
          if (v21 && (uint64_t v22 = *(int *)(a1 + 32), (int)v22 < *v21))
          {
            *(_DWORD *)(a1 + 32) = v22 + 1;
            uint64_t v23 = *(void *)&v21[2 * v22 + 2];
          }
          else
          {
            uint64_t v24 = sub_185089C(*(void *)(a1 + 24));
            uint64_t v23 = sub_188CDC8(a1 + 24, v24);
            unint64_t v20 = *(unsigned __int8 **)v41;
          }
          int v19 = sub_12688D0(a3, v23, v20);
          *(void *)BOOL v41 = v19;
          if (!v19) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v19 || *v19 != 26) {
            goto LABEL_58;
          }
        }
      case 4u:
        if (v8 != 34) {
          goto LABEL_50;
        }
        uint64_t v25 = v7 - 1;
        while (1)
        {
          uint64_t v26 = (unsigned __int8 *)(v25 + 1);
          *(void *)BOOL v41 = v25 + 1;
          unsigned int v27 = *(_DWORD **)(a1 + 64);
          if (v27 && (uint64_t v28 = *(int *)(a1 + 56), (int)v28 < *v27))
          {
            *(_DWORD *)(a1 + 56) = v28 + 1;
            uint64_t v29 = *(void *)&v27[2 * v28 + 2];
          }
          else
          {
            uint64_t v30 = sub_1831790(*(void *)(a1 + 48));
            uint64_t v29 = sub_188CDC8(a1 + 48, v30);
            uint64_t v26 = *(unsigned __int8 **)v41;
          }
          uint64_t v25 = sub_17B1F00(a3, v29, v26);
          *(void *)BOOL v41 = v25;
          if (!v25) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v25 || *v25 != 34) {
            goto LABEL_58;
          }
        }
      case 5u:
        if (v8 != 42) {
          goto LABEL_50;
        }
        unint64_t v31 = v7 - 1;
        while (1)
        {
          unint64_t v32 = (unsigned __int8 *)(v31 + 1);
          *(void *)BOOL v41 = v31 + 1;
          uint64_t v33 = *(_DWORD **)(a1 + 88);
          if (v33 && (uint64_t v34 = *(int *)(a1 + 80), (int)v34 < *v33))
          {
            *(_DWORD *)(a1 + 80) = v34 + 1;
            uint64_t v35 = *(void *)&v33[2 * v34 + 2];
          }
          else
          {
            uint64_t v36 = sub_185089C(*(void *)(a1 + 72));
            uint64_t v35 = sub_188CDC8(a1 + 72, v36);
            unint64_t v32 = *(unsigned __int8 **)v41;
          }
          unint64_t v31 = sub_12688D0(a3, v35, v32);
          *(void *)BOOL v41 = v31;
          if (!v31) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v31 || *v31 != 42) {
            goto LABEL_58;
          }
        }
      default:
LABEL_50:
        if (v8) {
          BOOL v37 = (v8 & 7) == 4;
        }
        else {
          BOOL v37 = 1;
        }
        if (!v37)
        {
          if (*v6)
          {
            uint64_t v38 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v38 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = *(char **)v41;
          }
          uint64_t v18 = sub_1885AC0(v8, v38, v7, a3);
LABEL_57:
          *(void *)BOOL v41 = v18;
          if (!v18) {
            return 0;
          }
LABEL_58:
          if (sub_11947B8((uint64_t)a3, (char **)v41, a3[11].i32[1])) {
            return *(void *)v41;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v41;
    }
  }
}

char *sub_17B3E88(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 104);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 26;
      unsigned int v13 = *(_DWORD *)(v12 + 44);
      v4[1] = v13;
      if (v13 > 0x7F) {
        int v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        int v14 = v4 + 2;
      }
      uint64_t v4 = sub_184B3AC(v12, v14, a3);
    }
  }
  int v15 = *(_DWORD *)(a1 + 56);
  if (v15)
  {
    for (int j = 0; j != v15; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v17 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *uint64_t v4 = 34;
      unsigned int v18 = *(_DWORD *)(v17 + 20);
      v4[1] = v18;
      if (v18 > 0x7F) {
        int v19 = sub_188A9CC(v18, v4 + 1);
      }
      else {
        int v19 = v4 + 2;
      }
      uint64_t v4 = (char *)sub_17B1F90(v17, v19, a3);
    }
  }
  int v20 = *(_DWORD *)(a1 + 80);
  if (v20)
  {
    for (int k = 0; k != v20; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v22 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      *uint64_t v4 = 42;
      unsigned int v23 = *(_DWORD *)(v22 + 44);
      v4[1] = v23;
      if (v23 > 0x7F) {
        uint64_t v24 = sub_188A9CC(v23, v4 + 1);
      }
      else {
        uint64_t v24 = v4 + 2;
      }
      uint64_t v4 = sub_184B3AC(v22, v24, a3);
    }
  }
  uint64_t v25 = *(void *)(a1 + 8);
  if ((v25 & 1) == 0) {
    return v4;
  }
  unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v27 + 31) < 0)
  {
    uint64_t v28 = *(void **)(v27 + 8);
    uint64_t v29 = *(void *)(v27 + 16);
  }
  else
  {
    uint64_t v28 = (void *)(v27 + 8);
    LODWORD(v29) = *(unsigned __int8 *)(v27 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v29)
  {
    uint64_t v30 = (int)v29;
    memcpy(v4, v28, (int)v29);
    v4 += v30;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v28, v29, v4);
}

uint64_t sub_17B4174(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_184B568(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_17B21B8(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    unsigned int v18 = (uint64_t *)(v17 + 8);
  }
  else {
    unsigned int v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_184B568(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  int v22 = *(_DWORD *)(a1 + 16);
  if ((v22 & 3) != 0)
  {
    if (v22)
    {
      unint64_t v23 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v24 = *(unsigned __int8 *)(v23 + 23);
      uint64_t v25 = *(void *)(v23 + 8);
      if ((v24 & 0x80u) == 0) {
        uint64_t v25 = v24;
      }
      v16 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v22 & 2) != 0)
    {
      int v26 = *(_DWORD *)(a1 + 104);
      uint64_t v27 = ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v26 >= 0) {
        uint64_t v28 = v27;
      }
      else {
        uint64_t v28 = 11;
      }
      v16 += v28;
    }
  }
  uint64_t v29 = *(void *)(a1 + 8);
  if (v29)
  {
    unint64_t v31 = v29 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v31 + 31) < 0) {
      uint64_t v32 = *(void *)(v31 + 16);
    }
    else {
      uint64_t v32 = *(unsigned __int8 *)(v31 + 31);
    }
    v16 += v32;
  }
  *(_DWORD *)(a1 + 20) = v16;
  return v16;
}

void sub_17B4348(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C4B74((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unint64_t v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1878B9C((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_12C4B74((uint64_t *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    unsigned int v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      *unsigned int v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 16);
  if ((v19 & 3) != 0)
  {
    if (v19)
    {
      uint64_t v20 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v21 = *(void *)(a1 + 8);
      int v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
      if (v21) {
        int v22 = (uint64_t *)*v22;
      }
      sub_1881DF4((std::string **)(a1 + 96), v20, v22);
    }
    if ((v19 & 2) != 0) {
      *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
    }
    *(_DWORD *)(a1 + 16) |= v19;
  }
  uint64_t v23 = *(void *)(a2 + 8);
  if (v23)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v23 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_17B4538(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_16CE508(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  do
  {
    BOOL v5 = (int)v6 < 1;
    if ((int)v6 < 1) {
      break;
    }
    uint64_t v7 = v6 - 1;
    char v8 = sub_16CE508(*(void *)(*(void *)(a1 + 88) + 8 * v6));
    uint64_t v6 = v7;
  }
  while ((v8 & 1) != 0);
  return v5;
}

void *sub_17B45B8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.GuidesHomeResult.GuidesHomeFixedSection");
}

uint64_t sub_17B45C8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  BOOL v5 = (void ***)(a1 + 96);
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1877238((void *)(a1 + 72));
  sub_12C45E8((void *)(a1 + 48));
  sub_12C45E8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17B468C(uint64_t a1)
{
  sub_17B45C8(a1);

  operator delete();
}

uint64_t sub_17B46C4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = (uint64_t)sub_16CD894(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = (uint64_t)sub_16CD894(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 80);
  if ((int)v8 >= 1)
  {
    int v9 = (uint64_t *)(*(void *)(v1 + 88) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_1703F30(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 80) = 0;
  }
  int v11 = *(_DWORD *)(v1 + 16);
  if (v11)
  {
    unint64_t v12 = *(void *)(v1 + 96) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v12 + 23) < 0)
    {
      **(unsigned char **)unint64_t v12 = 0;
      *(void *)(v12 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v12 = 0;
      *(unsigned char *)(v12 + 23) = 0;
    }
  }
  if ((v11 & 6) != 0) {
    *(void *)(v1 + 104) = 0;
  }
  char v14 = *(unsigned char *)(v1 + 8);
  uint64_t v13 = v1 + 8;
  *(_DWORD *)(v13 + 8) = 0;
  if (v14)
  {
    return sub_188B4AC((uint64_t *)v13);
  }
  return result;
}

uint64_t sub_17B47D0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v46 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v46, a3[11].i32[1])) {
    return *(void *)v46;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (char *)(*(void *)v46 + 1);
    unsigned int v8 = **(unsigned char **)v46;
    if ((char)**(unsigned char **)v46 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v46, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v46 + 2);
      }
    }
    *(void *)int v46 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_57;
        }
        int v11 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          *(void *)int v46 = sub_188C138((uint64_t)v7, (v14 - 128));
          if (!*(void *)v46) {
            return 0;
          }
          unint64_t v12 = v42;
        }
        else
        {
          int v11 = v7 + 2;
LABEL_13:
          *(void *)int v46 = v11;
        }
        if (v12 <= 4)
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          *(_DWORD *)(a1 + 104) = v12;
          goto LABEL_65;
        }
        if (*v6) {
          long long v44 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          long long v44 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v45 = 1;
        goto LABEL_77;
      case 2u:
        if (v8 != 18) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        int v17 = (std::string *)sub_1880F84((void *)(a1 + 96), v16);
        unsigned int v18 = (void *)sub_188C244(v17, *(char **)v46, (uint64_t)a3);
        goto LABEL_64;
      case 3u:
        if (v8 != 26) {
          goto LABEL_57;
        }
        int v19 = v7 - 1;
        while (1)
        {
          uint64_t v20 = (unsigned __int8 *)(v19 + 1);
          *(void *)int v46 = v19 + 1;
          uint64_t v21 = *(_DWORD **)(a1 + 40);
          if (v21 && (uint64_t v22 = *(int *)(a1 + 32), (int)v22 < *v21))
          {
            *(_DWORD *)(a1 + 32) = v22 + 1;
            uint64_t v23 = *(void *)&v21[2 * v22 + 2];
          }
          else
          {
            uint64_t v24 = sub_185089C(*(void *)(a1 + 24));
            uint64_t v23 = sub_188CDC8(a1 + 24, v24);
            uint64_t v20 = *(unsigned __int8 **)v46;
          }
          int v19 = sub_12688D0(a3, v23, v20);
          *(void *)int v46 = v19;
          if (!v19) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v19 || *v19 != 26) {
            goto LABEL_65;
          }
        }
      case 4u:
        if (v8 != 34) {
          goto LABEL_57;
        }
        uint64_t v25 = v7 - 1;
        while (1)
        {
          int v26 = (unsigned __int8 *)(v25 + 1);
          *(void *)int v46 = v25 + 1;
          uint64_t v27 = *(_DWORD **)(a1 + 64);
          if (v27 && (uint64_t v28 = *(int *)(a1 + 56), (int)v28 < *v27))
          {
            *(_DWORD *)(a1 + 56) = v28 + 1;
            uint64_t v29 = *(void *)&v27[2 * v28 + 2];
          }
          else
          {
            uint64_t v30 = sub_185089C(*(void *)(a1 + 48));
            uint64_t v29 = sub_188CDC8(a1 + 48, v30);
            int v26 = *(unsigned __int8 **)v46;
          }
          uint64_t v25 = sub_12688D0(a3, v29, v26);
          *(void *)int v46 = v25;
          if (!v25) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v25 || *v25 != 34) {
            goto LABEL_65;
          }
        }
      case 5u:
        if (v8 != 42) {
          goto LABEL_57;
        }
        unint64_t v31 = v7 - 1;
        while (1)
        {
          uint64_t v32 = (unsigned __int8 *)(v31 + 1);
          *(void *)int v46 = v31 + 1;
          uint64_t v33 = *(_DWORD **)(a1 + 88);
          if (v33 && (uint64_t v34 = *(int *)(a1 + 80), (int)v34 < *v33))
          {
            *(_DWORD *)(a1 + 80) = v34 + 1;
            uint64_t v35 = *(void *)&v33[2 * v34 + 2];
          }
          else
          {
            sub_1789B90(*(void *)(a1 + 72));
            uint64_t v35 = sub_188CDC8(a1 + 72, v36);
            uint64_t v32 = *(unsigned __int8 **)v46;
          }
          unint64_t v31 = sub_1706220(a3, v35, v32);
          *(void *)int v46 = v31;
          if (!v31) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v31 || *v31 != 42) {
            goto LABEL_65;
          }
        }
      case 6u:
        if (v8 != 48) {
          goto LABEL_57;
        }
        BOOL v37 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_54;
        }
        int v38 = *v37;
        int v39 = v12 + (v38 << 7);
        unint64_t v12 = (v39 - 128);
        if (v38 < 0)
        {
          *(void *)int v46 = sub_188C138((uint64_t)v7, (v39 - 128));
          if (!*(void *)v46) {
            return 0;
          }
          unint64_t v12 = v43;
        }
        else
        {
          BOOL v37 = v7 + 2;
LABEL_54:
          *(void *)int v46 = v37;
        }
        if (v12 > 2)
        {
          if (*v6) {
            long long v44 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            long long v44 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v45 = 6;
LABEL_77:
          sub_188C020(v45, v12, v44);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 108) = v12;
        }
        goto LABEL_65;
      default:
LABEL_57:
        if (v8) {
          BOOL v40 = (v8 & 7) == 4;
        }
        else {
          BOOL v40 = 1;
        }
        if (!v40)
        {
          if (*v6)
          {
            BOOL v41 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            BOOL v41 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = *(char **)v46;
          }
          unsigned int v18 = sub_1885AC0(v8, v41, v7, a3);
LABEL_64:
          *(void *)int v46 = v18;
          if (!v18) {
            return 0;
          }
LABEL_65:
          if (sub_11947B8((uint64_t)a3, (char **)v46, a3[11].i32[1])) {
            return *(void *)v46;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v46;
    }
  }
}

char *sub_17B4C68(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 104);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 26;
      unsigned int v13 = *(_DWORD *)(v12 + 44);
      v4[1] = v13;
      if (v13 > 0x7F) {
        int v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        int v14 = v4 + 2;
      }
      uint64_t v4 = sub_184B3AC(v12, v14, a3);
    }
  }
  int v15 = *(_DWORD *)(a1 + 56);
  if (v15)
  {
    for (int j = 0; j != v15; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v17 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *uint64_t v4 = 34;
      unsigned int v18 = *(_DWORD *)(v17 + 44);
      v4[1] = v18;
      if (v18 > 0x7F) {
        int v19 = sub_188A9CC(v18, v4 + 1);
      }
      else {
        int v19 = v4 + 2;
      }
      uint64_t v4 = sub_184B3AC(v17, v19, a3);
    }
  }
  int v20 = *(_DWORD *)(a1 + 80);
  if (v20)
  {
    for (int k = 0; k != v20; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v22 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      *uint64_t v4 = 42;
      unsigned int v23 = *(_DWORD *)(v22 + 20);
      v4[1] = v23;
      if (v23 > 0x7F) {
        uint64_t v24 = sub_188A9CC(v23, v4 + 1);
      }
      else {
        uint64_t v24 = v4 + 2;
      }
      uint64_t v4 = sub_17044FC(v22, (unint64_t)v24, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v25 = *(int *)(a1 + 108);
    *uint64_t v4 = 48;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unint64_t v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v28 = *(void *)(a1 + 8);
  if ((v28 & 1) == 0) {
    return v4;
  }
  unint64_t v30 = v28 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v30 + 31) < 0)
  {
    unint64_t v31 = *(void **)(v30 + 8);
    uint64_t v32 = *(void *)(v30 + 16);
  }
  else
  {
    unint64_t v31 = (void *)(v30 + 8);
    LODWORD(v32) = *(unsigned __int8 *)(v30 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v32)
  {
    uint64_t v33 = (int)v32;
    memcpy(v4, v31, (int)v32);
    v4 += v33;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v31, v32, v4);
}

uint64_t sub_17B4FD0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_184B568(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_184B568(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    unsigned int v18 = (uint64_t *)(v17 + 8);
  }
  else {
    unsigned int v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_17048E4(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  int v22 = *(_DWORD *)(a1 + 16);
  if ((v22 & 7) != 0)
  {
    if (v22)
    {
      unint64_t v28 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v29 = *(unsigned __int8 *)(v28 + 23);
      uint64_t v30 = *(void *)(v28 + 8);
      if ((v29 & 0x80u) == 0) {
        uint64_t v30 = v29;
      }
      v16 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v22 & 2) == 0)
      {
LABEL_24:
        if ((v22 & 4) == 0) {
          goto LABEL_29;
        }
        goto LABEL_25;
      }
    }
    else if ((v22 & 2) == 0)
    {
      goto LABEL_24;
    }
    int v31 = *(_DWORD *)(a1 + 104);
    uint64_t v32 = ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v31 >= 0) {
      uint64_t v33 = v32;
    }
    else {
      uint64_t v33 = 11;
    }
    v16 += v33;
    if ((v22 & 4) != 0)
    {
LABEL_25:
      int v23 = *(_DWORD *)(a1 + 108);
      uint64_t v24 = ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v23 >= 0) {
        uint64_t v25 = v24;
      }
      else {
        uint64_t v25 = 11;
      }
      v16 += v25;
    }
  }
LABEL_29:
  uint64_t v26 = *(void *)(a1 + 8);
  if (v26)
  {
    unint64_t v34 = v26 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v34 + 31) < 0) {
      uint64_t v35 = *(void *)(v34 + 16);
    }
    else {
      uint64_t v35 = *(unsigned __int8 *)(v34 + 31);
    }
    v16 += v35;
  }
  *(_DWORD *)(a1 + 20) = v16;
  return v16;
}

void sub_17B51E4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C4B74((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C4B74((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_18788E0((uint64_t *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    unsigned int v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      *unsigned int v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 16);
  if ((v19 & 7) != 0)
  {
    if (v19)
    {
      uint64_t v21 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v22 = *(void *)(a1 + 8);
      int v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        int v23 = (uint64_t *)*v23;
      }
      sub_1881DF4((std::string **)(a1 + 96), v21, v23);
      if ((v19 & 2) == 0)
      {
LABEL_13:
        if ((v19 & 4) == 0)
        {
LABEL_15:
          *(_DWORD *)(a1 + 16) |= v19;
          goto LABEL_16;
        }
LABEL_14:
        *(_DWORD *)(a1 + 108) = *(_DWORD *)(a2 + 108);
        goto LABEL_15;
      }
    }
    else if ((v19 & 2) == 0)
    {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
    if ((v19 & 4) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_16:
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_17B53EC(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_16CE508(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v5 = *(unsigned int *)(a1 + 56);
  while ((int)v5 >= 1)
  {
    uint64_t v6 = v5 - 1;
    char v7 = sub_16CE508(*(void *)(*(void *)(a1 + 64) + 8 * v5));
    uint64_t v5 = v6;
    if ((v7 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v10 = *(unsigned int *)(a1 + 80);
  do
  {
    BOOL v8 = (int)v10 < 1;
    if ((int)v10 < 1) {
      break;
    }
    uint64_t v11 = v10 - 1;
    char v12 = sub_1704CAC(*(void *)(*(void *)(a1 + 88) + 8 * v10));
    uint64_t v10 = v11;
  }
  while ((v12 & 1) != 0);
  return v8;
}

void *sub_17B5494@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.GuidesHomeResult.GuidesHomeRepeatableSection");
}

uint64_t sub_17B54A4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  char v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24DBE18;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    BOOL v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1878C28(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v12 = *(_DWORD *)(a2 + 16);
  if (v12) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  if ((v12 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  if ((v12 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  return a1;
}

void sub_17B5638()
{
}

uint64_t sub_17B56A4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_254A3E0)
  {
    uint64_t v5 = *(void *)(a1 + 48);
    if (v5)
    {
      sub_17B388C(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_17B388C(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 64);
    if (v7)
    {
      sub_17B388C(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_1877538((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17B57A0(uint64_t a1)
{
  sub_17B56A4(a1);

  operator delete();
}

uint64_t sub_17B57D8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_17B46C4(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 7) != 0)
  {
    if (v5)
    {
      uint64_t result = sub_17B3988(*(void *)(v1 + 48));
      if ((v5 & 2) == 0)
      {
LABEL_8:
        if ((v5 & 4) == 0) {
          goto LABEL_10;
        }
        goto LABEL_9;
      }
    }
    else if ((v5 & 2) == 0)
    {
      goto LABEL_8;
    }
    uint64_t result = sub_17B3988(*(void *)(v1 + 56));
    if ((v5 & 4) != 0) {
LABEL_9:
    }
      uint64_t result = sub_17B3988(*(void *)(v1 + 64));
  }
LABEL_10:
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_17B5894(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = v26 + 2;
      }
    }
    uint64_t v26 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 > 2)
    {
      if (v11 != 3)
      {
        if (v11 == 50 && v8 == 146)
        {
          uint64_t v15 = v7 - 2;
          while (1)
          {
            uint64_t v16 = (unsigned __int8 *)(v15 + 2);
            uint64_t v26 = v15 + 2;
            int v17 = *(_DWORD **)(a1 + 40);
            if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
            {
              *(_DWORD *)(a1 + 32) = v18 + 1;
              uint64_t v19 = *(void *)&v17[2 * v18 + 2];
            }
            else
            {
              uint64_t v20 = sub_18319A0(*(void *)(a1 + 24));
              uint64_t v19 = sub_188CDC8(a1 + 24, (uint64_t)v20);
              uint64_t v16 = (unsigned __int8 *)v26;
            }
            uint64_t v15 = (char *)sub_17B5BCC(a3, v19, v16);
            uint64_t v26 = v15;
            if (!v15) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v15 || *(_WORD *)v15 != 914) {
              goto LABEL_51;
            }
          }
        }
        goto LABEL_43;
      }
      if (v8 != 26) {
        goto LABEL_43;
      }
      *(_DWORD *)(a1 + 16) |= 4u;
      uint64_t v13 = *(void *)(a1 + 64);
      if (v13) {
        goto LABEL_42;
      }
      uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v22 = (void *)*v22;
      }
      uint64_t v13 = sub_18318E4((uint64_t)v22);
      *(void *)(a1 + 64) = v13;
LABEL_41:
      char v7 = v26;
      goto LABEL_42;
    }
    if (v11 == 1)
    {
      if (v8 != 10) {
        goto LABEL_43;
      }
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v13 = *(void *)(a1 + 48);
      if (v13) {
        goto LABEL_42;
      }
      uint64_t v21 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v21 = (void *)*v21;
      }
      uint64_t v13 = sub_18318E4((uint64_t)v21);
      *(void *)(a1 + 48) = v13;
      goto LABEL_41;
    }
    if (v11 == 2 && v8 == 18)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v13 = *(void *)(a1 + 56);
      if (!v13)
      {
        int v14 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          int v14 = (void *)*v14;
        }
        uint64_t v13 = sub_18318E4((uint64_t)v14);
        *(void *)(a1 + 56) = v13;
        goto LABEL_41;
      }
LABEL_42:
      int v23 = (char *)sub_17B5B3C(a3, v13, (unsigned __int8 *)v7);
      goto LABEL_50;
    }
LABEL_43:
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v7 = v26;
    }
    int v23 = (char *)sub_1885AC0(v8, v25, v7, a3);
LABEL_50:
    uint64_t v26 = v23;
    if (!v23) {
      return 0;
    }
LABEL_51:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      return v26;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v26;
  }
  return 0;
}

uint64_t sub_17B5B3C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17B3A8C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_17B5BCC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17B47D0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_17B5C5C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_17B3E88(v7, (unint64_t)v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_23;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 56);
  *uint64_t v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    int v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    int v12 = v4 + 2;
  }
  uint64_t v4 = sub_17B3E88(v10, (unint64_t)v12, a3);
  if ((v6 & 4) != 0)
  {
LABEL_17:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 64);
    *uint64_t v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    uint64_t v4 = sub_17B3E88(v13, (unint64_t)v15, a3);
  }
LABEL_23:
  int v16 = *(_DWORD *)(a1 + 32);
  if (v16)
  {
    for (int i = 0; i != v16; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *(_WORD *)uint64_t v4 = 914;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      v4[2] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, v4 + 2);
      }
      else {
        uint64_t v20 = v4 + 3;
      }
      uint64_t v4 = sub_17B4C68(v18, (unint64_t)v20, a3);
    }
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return v4;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    uint64_t v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    uint64_t v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(v4, v24, (int)v25);
    v4 += v26;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v24, v25, v4);
}

uint64_t sub_17B5EDC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = 2 * v2;
  uint64_t v4 = *(void *)(a1 + 40);
  if (v4) {
    int v5 = (uint64_t *)(v4 + 8);
  }
  else {
    int v5 = 0;
  }
  if (v2)
  {
    uint64_t v6 = 8 * v2;
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v8 = sub_17B4FD0(v7);
      v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      v6 -= 8;
    }
    while (v6);
  }
  int v9 = *(_DWORD *)(a1 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      uint64_t v13 = sub_17B4174(*(void *)(a1 + 48));
      v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v9 & 2) == 0)
      {
LABEL_10:
        if ((v9 & 4) == 0) {
          goto LABEL_12;
        }
        goto LABEL_11;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_10;
    }
    uint64_t v14 = sub_17B4174(*(void *)(a1 + 56));
    v3 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v9 & 4) != 0)
    {
LABEL_11:
      uint64_t v10 = sub_17B4174(*(void *)(a1 + 64));
      v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
LABEL_12:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v15 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v3 += v16;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_17B6030(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    int v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1878C28((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v10 = *(void *)(a1 + 48);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          int v12 = (void *)*v12;
        }
        uint64_t v10 = sub_18318E4((uint64_t)v12);
        *(void *)(a1 + 48) = v10;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v13 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v13 = &off_254A370;
      }
      sub_17B4348(v10, (uint64_t)v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_33;
        }
        goto LABEL_25;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v14 = *(void *)(a1 + 56);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = sub_18318E4((uint64_t)v16);
      *(void *)(a1 + 56) = v14;
    }
    if (*(void *)(a2 + 56)) {
      int v17 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      int v17 = &off_254A370;
    }
    sub_17B4348(v14, (uint64_t)v17);
    if ((v9 & 4) != 0)
    {
LABEL_25:
      *(_DWORD *)(a1 + 16) |= 4u;
      uint64_t v18 = *(void *)(a1 + 64);
      if (!v18)
      {
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v20 = (void *)*v20;
        }
        uint64_t v18 = sub_18318E4((uint64_t)v20);
        *(void *)(a1 + 64) = v18;
      }
      if (*(void *)(a2 + 64)) {
        uint64_t v21 = *(uint64_t (****)())(a2 + 64);
      }
      else {
        uint64_t v21 = &off_254A370;
      }
      sub_17B4348(v18, (uint64_t)v21);
    }
  }
LABEL_33:
  uint64_t v22 = *(void *)(a2 + 8);
  if (v22)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v22 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_17B61EC(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    BOOL v4 = sub_17B53EC(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if (!v4) {
      return 0;
    }
  }
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    BOOL result = sub_17B4538(*(void *)(a1 + 48));
    if (!result) {
      return result;
    }
    int v6 = *(_DWORD *)(a1 + 16);
  }
  if ((v6 & 2) != 0)
  {
    BOOL result = sub_17B4538(*(void *)(a1 + 56));
    if (!result) {
      return result;
    }
    int v6 = *(_DWORD *)(a1 + 16);
  }
  if ((v6 & 4) == 0) {
    return 1;
  }
  BOOL result = sub_17B4538(*(void *)(a1 + 64));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17B6278@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.GuidesHomeResult");
}

uint64_t sub_17B6288(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DBE98;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

void sub_17B633C()
{
}

uint64_t sub_17B638C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254A428)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_17A2444(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17B6444(uint64_t a1)
{
  sub_17B638C(a1);

  operator delete();
}

uint64_t sub_17B647C(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    BOOL result = sub_17A2554(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(unsigned char *)(v2 + 24) = 0;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_17B64DC(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v23 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v23 + 1;
    unsigned int v9 = *v23;
    if (*v23 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v23, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v23 + 2;
      }
    }
    unint64_t v23 = v8;
    if (v9 >> 3 != 3) {
      break;
    }
    if (v9 != 24) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v16 = v8 + 1;
    uint64_t v17 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_24;
    }
    int v18 = *v16;
    uint64_t v17 = v17 + (v18 << 7) - 128;
    if ((v18 & 0x80000000) == 0)
    {
      uint64_t v16 = v8 + 2;
LABEL_24:
      unint64_t v23 = v16;
      *(unsigned char *)(a1 + 32) = v17 != 0;
      goto LABEL_31;
    }
    uint64_t v21 = (char *)sub_188C138((uint64_t)v8, v17);
    unint64_t v23 = v21;
    *(unsigned char *)(a1 + 32) = v22 != 0;
    if (!v21) {
      goto LABEL_38;
    }
LABEL_31:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 2 && v9 == 18)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v19 = *(void *)(a1 + 24);
    if (!v19)
    {
      uint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v20 = (void *)*v20;
      }
      uint64_t v19 = sub_1830908((uint64_t)v20);
      *(void *)(a1 + 24) = v19;
      uint64_t v8 = v23;
    }
    uint64_t v15 = (char *)sub_17ACE14(a3, v19, (unsigned __int8 *)v8);
LABEL_30:
    unint64_t v23 = v15;
    if (!v15) {
      goto LABEL_38;
    }
    goto LABEL_31;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v23;
    }
    uint64_t v15 = (char *)sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_38:
  unint64_t v23 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v23;
}

unsigned char *sub_17B66D0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *uint64_t v4 = 18;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_17A2A00(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 32);
    *uint64_t v4 = 24;
    v4[1] = v10;
    v4 += 2;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_17B6824(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) != 0)
  {
    if (v2)
    {
      uint64_t v5 = sub_17A2D10(*(void *)(a1 + 24));
      uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v3 = 0;
    }
    if ((v2 & 2) != 0) {
      uint64_t result = v3 + 2;
    }
    else {
      uint64_t result = v3;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    result += v8;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_17B68C8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v5 = *(void *)(a1 + 24);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        unint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          unint64_t v7 = (void *)*v7;
        }
        uint64_t v5 = sub_1830908((uint64_t)v7);
        *(void *)(a1 + 24) = v5;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v8 = &off_2549D50;
      }
      sub_17A2EB0(v5, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    }
    *(_DWORD *)(a1 + 16) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_17B6998(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = sub_17A30B8(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17B69C4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.MapsHomeParameters");
}

uint64_t sub_17B69D4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if ((uint64_t (***)())a1 != &off_254A450)
  {
    uint64_t v6 = *(void *)(a1 + 40);
    if (v6)
    {
      sub_17A32E8(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 48);
    if (v7)
    {
      sub_1703DA0(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17B6ADC(uint64_t a1)
{
  sub_17B69D4(a1);

  operator delete();
}

uint64_t sub_17B6B14(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_7;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_15:
  unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_19;
    }
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  *(unsigned char *)unint64_t v6 = 0;
  *(unsigned char *)(v6 + 23) = 0;
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_19:
  BOOL result = sub_17A33E4(*(void *)(result + 40));
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    BOOL result = sub_1703F30(*(void *)(v1 + 48));
LABEL_7:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 48) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_17B6BF8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v30 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    return *(void *)v30;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v30 + 1);
    unsigned int v8 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v30, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v30 + 2);
      }
    }
    *(void *)uint64_t v30 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_37;
        }
        uint64_t v11 = (char *)(v7 + 1);
        unint64_t v12 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          *(void *)uint64_t v30 = sub_188C138((uint64_t)v7, (v14 - 128));
          if (!*(void *)v30) {
            return 0;
          }
          unint64_t v12 = v28;
        }
        else
        {
          uint64_t v11 = (char *)(v7 + 2);
LABEL_13:
          *(void *)uint64_t v30 = v11;
        }
        if (v12 > 1)
        {
          if (*v6) {
            uint64_t v29 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v12, v29);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 56) = v12;
        }
        goto LABEL_45;
      case 2u:
        if (v8 != 18) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 24);
        goto LABEL_36;
      case 3u:
        if (v8 != 26) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        int v18 = *(void **)(a1 + 40);
        if (!v18)
        {
          uint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v19 = (void *)*v19;
          }
          int v18 = sub_18309B4((uint64_t)v19);
          *(void *)(a1 + 40) = v18;
          uint64_t v7 = *(unsigned __int8 **)v30;
        }
        uint64_t v20 = sub_17ADFC8(a3, (uint64_t)v18, v7);
        goto LABEL_44;
      case 4u:
        if (v8 != 34) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v21 = *(void *)(a1 + 48);
        if (!v21)
        {
          uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v22 = (void *)*v22;
          }
          sub_1789B90((uint64_t)v22);
          uint64_t v21 = v23;
          *(void *)(a1 + 48) = v23;
          uint64_t v7 = *(unsigned __int8 **)v30;
        }
        uint64_t v20 = sub_1706220(a3, v21, v7);
        goto LABEL_44;
      case 5u:
        if (v8 != 42) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v24 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
        if (v24) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
LABEL_36:
        uint64_t v25 = (std::string *)sub_1880F84(v17, v16);
        uint64_t v20 = (void *)sub_188C244(v25, *(char **)v30, (uint64_t)a3);
        goto LABEL_44;
      default:
LABEL_37:
        if (v8) {
          BOOL v26 = (v8 & 7) == 4;
        }
        else {
          BOOL v26 = 1;
        }
        if (!v26)
        {
          if (*v6)
          {
            unint64_t v27 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = *(unsigned __int8 **)v30;
          }
          uint64_t v20 = sub_1885AC0(v8, v27, (char *)v7, a3);
LABEL_44:
          *(void *)uint64_t v30 = v20;
          if (!v20) {
            return 0;
          }
LABEL_45:
          if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
            return *(void *)v30;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v30;
    }
  }
}

char *sub_17B6F14(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 56);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 4) == 0)
    {
LABEL_10:
      if ((v6 & 8) == 0) {
        goto LABEL_11;
      }
      goto LABEL_22;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v12 = *(void *)(a1 + 40);
  *char v4 = 26;
  unsigned int v13 = *(_DWORD *)(v12 + 20);
  v4[1] = v13;
  if (v13 > 0x7F) {
    int v14 = sub_188A9CC(v13, v4 + 1);
  }
  else {
    int v14 = v4 + 2;
  }
  char v4 = sub_17A367C(v12, v14, a3);
  if ((v6 & 8) == 0)
  {
LABEL_11:
    if ((v6 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_22:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v15 = *(void *)(a1 + 48);
  *char v4 = 34;
  unsigned int v16 = *(_DWORD *)(v15 + 20);
  v4[1] = v16;
  if (v16 > 0x7F) {
    uint64_t v17 = sub_188A9CC(v16, v4 + 1);
  }
  else {
    uint64_t v17 = v4 + 2;
  }
  char v4 = sub_17044FC(v15, (unint64_t)v17, a3);
  if ((v6 & 2) != 0) {
LABEL_12:
  }
    char v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_13:
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_17B7160(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x1F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_22;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    uint64_t v10 = sub_17A3828(*(void *)(a1 + 40));
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_22;
      }
      goto LABEL_18;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  uint64_t v11 = sub_17048E4(*(void *)(a1 + 48));
  v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0) {
    goto LABEL_22;
  }
LABEL_18:
  int v12 = *(_DWORD *)(a1 + 56);
  if (v12 < 0) {
    uint64_t v13 = 11;
  }
  else {
    uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v13;
LABEL_22:
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v3 += v17;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_17B7300(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      unint64_t v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_19;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v11 = *(void *)(a1 + 8);
    int v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      int v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 32), v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_27;
    }
LABEL_19:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v13 = *(void **)(a1 + 40);
    if (!v13)
    {
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (void *)*v15;
      }
      uint64_t v13 = sub_18309B4((uint64_t)v15);
      *(void *)(a1 + 40) = v13;
    }
    if (*(void *)(a2 + 40)) {
      unint64_t v16 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      unint64_t v16 = &off_2549DC0;
    }
    sub_17A390C((uint64_t)v13, (uint64_t)v16);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
      goto LABEL_8;
    }
LABEL_27:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v17 = *(void *)(a1 + 48);
    if (!v17)
    {
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v19 = (void *)*v19;
      }
      sub_1789B90((uint64_t)v19);
      *(void *)(a1 + 48) = v17;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v20 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v20 = &off_25464B0;
    }
    sub_1704A90(v17, (uint64_t)v20);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17B7498(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_17A3A30(*(void *)(a1 + 40));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) == 0) {
    return 1;
  }
  uint64_t result = sub_1704CAC(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17B74E4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.MapsHomeResult.MapsHomeSection");
}

uint64_t sub_17B74F4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = (uint64_t *)(a1 + 16);
  *(void *)a1 = off_24DBF98;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_1878CB4(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    uint64_t v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_17B75D4(_Unwind_Exception *a1)
{
  sub_18775B8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17B7618(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_18775B8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17B7698(void *a1)
{
  sub_17B7618(a1);

  operator delete();
}

uint64_t sub_17B76D0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_17B6B14(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_17B774C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        int v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_1831B74(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          int v12 = (char *)sub_17B78EC(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

uint64_t sub_17B78EC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17B6BF8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17B797C(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_17B6F14(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_17B7AC0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_17B7160(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void sub_17B7B70(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_1878CB4((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_17B7C40(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_17B7498(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_17B7C98@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.MapsHomeResult");
}

uint64_t sub_17B7CA8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24DC018;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = a1 + 24;
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(v5, v8, (const std::string **)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    unint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *unint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    int v12 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v12);
  }
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  return a1;
}

void sub_17B7DD4(_Unwind_Exception *a1)
{
  sub_1889DE8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17B7E14(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17B7EBC(uint64_t a1)
{
  sub_17B7E14(a1);

  operator delete();
}

uint64_t sub_17B7EF4(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v3 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 48) = 0;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_17B7F7C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v33 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
    return *(void *)v33;
  }
  int v6 = (uint64_t **)(a1 + 24);
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v33 + 1);
    unsigned int v9 = **(unsigned char **)v33;
    if ((char)**(unsigned char **)v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v33 + 2);
      }
    }
    *(void *)uint64_t v33 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 == 26)
      {
        uint64_t v17 = v8 - 1;
        while (1)
        {
          uint64_t v18 = (char *)(v17 + 1);
          *(void *)uint64_t v33 = v17 + 1;
          uint64_t v19 = *(_DWORD **)(a1 + 40);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 32), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 32) = v20 + 1;
            uint64_t v21 = *(std::string **)&v19[2 * v20 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            *uint64_t v23 = v22;
            v23[1] = sub_3A6EDC;
            *uint64_t v22 = 0;
            v22[1] = 0;
            v22[2] = 0;
            uint64_t v21 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v22);
            uint64_t v18 = *(char **)v33;
          }
          uint64_t v17 = sub_188C244(v21, v18, (uint64_t)a3);
          *(void *)uint64_t v33 = v17;
          if (!v17) {
            goto LABEL_56;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 26) {
            goto LABEL_45;
          }
        }
      }
      goto LABEL_14;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v24 = *(void *)(a1 + 8);
    uint64_t v25 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
    if (v24) {
      uint64_t v25 = (uint64_t *)*v25;
    }
    BOOL v26 = (std::string *)sub_1880F84((void *)(a1 + 48), v25);
    uint64_t v16 = (void *)sub_188C244(v26, *(char **)v33, (uint64_t)a3);
LABEL_37:
    *(void *)uint64_t v33 = v16;
    if (!v16) {
      goto LABEL_56;
    }
LABEL_45:
    if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
      return *(void *)v33;
    }
  }
  if (v12 == 1 && v9 == 8)
  {
    unint64_t v27 = v8 + 1;
    unint64_t v28 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_42;
    }
    int v29 = *v27;
    int v30 = v28 + (v29 << 7);
    unint64_t v28 = (v30 - 128);
    if (v29 < 0)
    {
      *(void *)uint64_t v33 = sub_188C138((uint64_t)v8, (v30 - 128));
      if (!*(void *)v33) {
        goto LABEL_56;
      }
      unint64_t v28 = v31;
    }
    else
    {
      unint64_t v27 = v8 + 2;
LABEL_42:
      *(void *)uint64_t v33 = v27;
    }
    if (v28 > 2)
    {
      if (*v7) {
        uint64_t v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v28, v32);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 56) = v28;
    }
    goto LABEL_45;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(char **)v33;
    }
    uint64_t v16 = sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_37;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    return *(void *)v33;
  }
LABEL_56:
  *(void *)uint64_t v33 = 0;
  return *(void *)v33;
}

char *sub_17B8278(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 56);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(unsigned int *)(a1 + 32);
  if ((int)v10 >= 1)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 8 * v10;
    do
    {
      unint64_t v13 = *(void **)(*(void *)(a1 + 40) + v11 + 8);
      if (*((char *)v13 + 23) < 0)
      {
        int64_t v14 = v13[1];
        if (v14 > 127) {
          goto LABEL_21;
        }
      }
      else
      {
        int64_t v14 = *((unsigned __int8 *)v13 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v14)
      {
        *uint64_t v4 = 26;
        v4[1] = v14;
        if (*((char *)v13 + 23) < 0) {
          unint64_t v13 = (void *)*v13;
        }
        uint64_t v15 = v4 + 2;
        memcpy(v15, v13, v14);
        uint64_t v4 = &v15[v14];
        goto LABEL_19;
      }
LABEL_21:
      uint64_t v4 = (char *)sub_188A868(a3, 3, (uint64_t)v13, v4);
LABEL_19:
      v11 += 8;
    }
    while (v12 != v11);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_17B8480(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  int v7 = *(_DWORD *)(a1 + 16);
  if ((v7 & 3) != 0)
  {
    if (v7)
    {
      unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
      uint64_t v10 = *(void *)(v8 + 8);
      if ((v9 & 0x80u) == 0) {
        uint64_t v10 = v9;
      }
      v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v7 & 2) != 0)
    {
      int v11 = *(_DWORD *)(a1 + 56);
      if (v11 < 0) {
        uint64_t v12 = 11;
      }
      else {
        uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v3 += v12;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v3 += v16;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_17B859C()
{
  return 1;
}

void *sub_17B85A4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.QueryUnderstandingParameters.QueryUnderstandingTaxonomySearchParameters");
}

uint64_t sub_17B85B4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24DC098;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    unint64_t v8 = (std::string **)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_188FB98(v5, v8, (const std::string **)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    uint64_t v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  int v11 = *(_DWORD *)(a2 + 48);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 56);
    uint64_t v13 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_188FB98(a1 + 40, v13, (const std::string **)(v12 + 8), v11, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v14 = *(_DWORD *)(a1 + 48) + v11;
    *(_DWORD *)(a1 + 48) = v14;
    unint64_t v15 = *(int **)(a1 + 56);
    if (*v15 < v14) {
      *unint64_t v15 = v14;
    }
  }
  *(_DWORD *)(a1 + 64) = 0;
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16) {
    sub_188B4F8(v4, (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_17B8704(_Unwind_Exception *a1)
{
  sub_1889DE8(v4);
  sub_1889DE8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17B8754(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DE8(a1 + 5);
  sub_1889DE8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17B87D8(void *a1)
{
  sub_17B8754(a1);

  operator delete();
}

uint64_t sub_17B8810(uint64_t a1)
{
  sub_188CC00(a1 + 16);
  uint64_t result = sub_188CC00(a1 + 40);
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return sub_188B4AC(v3);
  }
  return result;
}

uint64_t sub_17B8868(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v30 = a2;
  if ((sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1]) & 1) == 0)
  {
    int v6 = (uint64_t **)(a1 + 40);
    uint64_t v7 = (uint64_t **)(a1 + 16);
    unint64_t v8 = (void *)(a1 + 8);
    while (1)
    {
      int v9 = (char *)(*(void *)v30 + 1);
      unsigned int v10 = **(unsigned char **)v30;
      if ((char)**(unsigned char **)v30 < 0)
      {
        unsigned int v11 = v10 + (*v9 << 7);
        unsigned int v10 = v11 - 128;
        if (*v9 < 0)
        {
          int v9 = (char *)sub_188C180(*(uint64_t *)v30, v11 - 128);
          unsigned int v10 = v12;
        }
        else
        {
          int v9 = (char *)(*(void *)v30 + 2);
        }
      }
      *(void *)int v30 = v9;
      if (v10 >> 3 == 2)
      {
        if (v10 == 18)
        {
          uint64_t v16 = v9 - 1;
          while (1)
          {
            uint64_t v17 = (char *)(v16 + 1);
            *(void *)int v30 = v16 + 1;
            unint64_t v18 = *(_DWORD **)(a1 + 56);
            if (v18 && (uint64_t v19 = *(int *)(a1 + 48), (int)v19 < *v18))
            {
              *(_DWORD *)(a1 + 48) = v19 + 1;
              uint64_t v20 = *(std::string **)&v18[2 * v19 + 2];
            }
            else
            {
              if (!*v6) {
                operator new();
              }
              *uint64_t v22 = v21;
              v22[1] = sub_3A6EDC;
              void *v21 = 0;
              v21[1] = 0;
              v21[2] = 0;
              uint64_t v20 = (std::string *)sub_188CDC8(a1 + 40, (uint64_t)v21);
              uint64_t v17 = *(char **)v30;
            }
            uint64_t v16 = sub_188C244(v20, v17, (uint64_t)a3);
            *(void *)int v30 = v16;
            if (!v16) {
              goto LABEL_48;
            }
            if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
              goto LABEL_43;
            }
          }
        }
      }
      else if (v10 >> 3 == 1 && v10 == 10)
      {
        uint64_t v23 = v9 - 1;
        while (1)
        {
          uint64_t v24 = (char *)(v23 + 1);
          *(void *)int v30 = v23 + 1;
          uint64_t v25 = *(_DWORD **)(a1 + 32);
          if (v25 && (uint64_t v26 = *(int *)(a1 + 24), (int)v26 < *v25))
          {
            *(_DWORD *)(a1 + 24) = v26 + 1;
            unint64_t v27 = *(std::string **)&v25[2 * v26 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *int v29 = v28;
            v29[1] = sub_3A6EDC;
            *unint64_t v28 = 0;
            v28[1] = 0;
            int v28[2] = 0;
            unint64_t v27 = (std::string *)sub_188CDC8(a1 + 16, (uint64_t)v28);
            uint64_t v24 = *(char **)v30;
          }
          uint64_t v23 = sub_188C244(v27, v24, (uint64_t)a3);
          *(void *)int v30 = v23;
          if (!v23) {
            goto LABEL_48;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 10) {
            goto LABEL_43;
          }
        }
      }
      if (!v10 || (v10 & 7) == 4) {
        break;
      }
      if (*v8)
      {
        unint64_t v15 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        int v9 = *(char **)v30;
      }
      *(void *)int v30 = sub_1885AC0(v10, v15, v9, a3);
      if (!*(void *)v30) {
        goto LABEL_48;
      }
LABEL_43:
      if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
        return *(void *)v30;
      }
    }
    if (v9)
    {
      a3[10].i32[0] = v10 - 1;
      return *(void *)v30;
    }
LABEL_48:
    *(void *)int v30 = 0;
  }
  return *(void *)v30;
}

char *sub_17B8B48(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      int v9 = *(void **)(*(void *)(a1 + 32) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v10)
      {
        *__dst = 10;
        __dst[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          int v9 = (void *)*v9;
        }
        unsigned int v11 = __dst + 2;
        memcpy(v11, v9, v10);
        __dst = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      __dst = (char *)sub_188A868(a3, 1, (uint64_t)v9, __dst);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  uint64_t v12 = *(unsigned int *)(a1 + 48);
  if ((int)v12 >= 1)
  {
    uint64_t v13 = 0;
    uint64_t v14 = 8 * v12;
    do
    {
      unint64_t v15 = *(void **)(*(void *)(a1 + 56) + v13 + 8);
      if (*((char *)v15 + 23) < 0)
      {
        int64_t v16 = v15[1];
        if (v16 > 127) {
          goto LABEL_24;
        }
      }
      else
      {
        int64_t v16 = *((unsigned __int8 *)v15 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v16)
      {
        *__dst = 18;
        __dst[1] = v16;
        if (*((char *)v15 + 23) < 0) {
          unint64_t v15 = (void *)*v15;
        }
        uint64_t v17 = __dst + 2;
        memcpy(v17, v15, v16);
        __dst = &v17[v16];
        goto LABEL_22;
      }
LABEL_24:
      __dst = (char *)sub_188A868(a3, 2, (uint64_t)v15, __dst);
LABEL_22:
      v13 += 8;
    }
    while (v14 != v13);
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return __dst;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(__dst, v21, (int)v22);
    __dst += v23;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, __dst);
}

uint64_t sub_17B8D58(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 24);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 24);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 32) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 24);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  uint64_t v7 = *(unsigned int *)(a1 + 48);
  uint64_t v8 = v3 + v7;
  if ((int)v7 >= 1)
  {
    int v9 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
      uint64_t v12 = *(void *)(v10 + 8);
      if ((v11 & 0x80u) == 0) {
        uint64_t v12 = v11;
      }
      v8 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6);
      --v7;
    }
    while (v7);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v8 += v16;
  }
  *(_DWORD *)(a1 + 64) = v8;
  return v8;
}

uint64_t sub_17B8E48()
{
  return 1;
}

void *sub_17B8E50@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.QueryUnderstandingParameters.QueryUnderstandingTaxonomyLookupParameters");
}

uint64_t sub_17B8E60(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24DC118;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  if ((v6 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 40) = 0;
  if ((v6 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

void sub_17B8FBC()
{
}

uint64_t sub_17B9034(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_254A548)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_179203C(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 40);
    if (v7)
    {
      sub_17B7E14(v7);
      operator delete();
    }
    uint64_t v8 = *(void **)(a1 + 48);
    if (v8)
    {
      sub_17B8754(v8);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17B9140(uint64_t a1)
{
  sub_17B9034(a1);

  operator delete();
}

uint64_t sub_17B9178(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_7;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_17:
    uint64_t result = (uint64_t)sub_179212C(*(unsigned char **)(result + 32));
    if ((v2 & 4) == 0)
    {
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    goto LABEL_18;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_17;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_17;
    }
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_18:
  uint64_t result = sub_17B7EF4(*(void *)(v1 + 40));
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    uint64_t result = sub_17B8810(*(void *)(v1 + 48));
LABEL_7:
  if ((v2 & 0x30) != 0) {
    *(void *)(v1 + 56) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_17B9240(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v34 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v34, a3[11].i32[1])) {
    return *(void *)v34;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v34 + 1);
    unsigned int v8 = **(unsigned char **)v34;
    if ((char)**(unsigned char **)v34 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v34, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v34 + 2);
      }
    }
    *(void *)unint64_t v34 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_45;
        }
        uint64_t v11 = (char *)(v7 + 1);
        unint64_t v12 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          *(void *)unint64_t v34 = sub_188C138((uint64_t)v7, (v14 - 128));
          if (!*(void *)v34) {
            return 0;
          }
          unint64_t v12 = v30;
        }
        else
        {
          uint64_t v11 = (char *)(v7 + 2);
LABEL_13:
          *(void *)unint64_t v34 = v11;
        }
        if (v12 <= 4)
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 56) = v12;
          goto LABEL_53;
        }
        if (*v6) {
          uint64_t v32 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v33 = 1;
        goto LABEL_65;
      case 2u:
        if (v8 != 18) {
          goto LABEL_45;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
        uint64_t v18 = (uint64_t)sub_188C244(v17, *(char **)v34, (uint64_t)a3);
        goto LABEL_52;
      case 3u:
        if (v8 != 26) {
          goto LABEL_45;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void **)(a1 + 32);
        if (!v19)
        {
          unint64_t v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v20 = (void *)*v20;
          }
          uint64_t v19 = sub_18302C8((uint64_t)v20);
          *(void *)(a1 + 32) = v19;
          uint64_t v7 = *(unsigned __int8 **)v34;
        }
        uint64_t v18 = (uint64_t)sub_120FE50(a3, (uint64_t)v19, v7);
        goto LABEL_52;
      case 4u:
        if (v8 != 32) {
          goto LABEL_45;
        }
        uint64_t v21 = (char *)(v7 + 1);
        unint64_t v12 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v22 = *v21;
        int v23 = v12 + (v22 << 7);
        unint64_t v12 = (v23 - 128);
        if (v22 < 0)
        {
          *(void *)unint64_t v34 = sub_188C138((uint64_t)v7, (v23 - 128));
          if (!*(void *)v34) {
            return 0;
          }
          unint64_t v12 = v31;
        }
        else
        {
          uint64_t v21 = (char *)(v7 + 2);
LABEL_30:
          *(void *)unint64_t v34 = v21;
        }
        if (v12 > 4)
        {
          if (*v6) {
            uint64_t v32 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v33 = 4;
LABEL_65:
          sub_188C020(v33, v12, v32);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 60) = v12;
        }
        goto LABEL_53;
      case 5u:
        if (v8 != 42) {
          goto LABEL_45;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v24 = *(void *)(a1 + 40);
        if (!v24)
        {
          uint64_t v25 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v25 = (void *)*v25;
          }
          uint64_t v24 = sub_1831CA0((uint64_t)v25);
          *(void *)(a1 + 40) = v24;
          uint64_t v7 = *(unsigned __int8 **)v34;
        }
        uint64_t v18 = sub_17B9610(a3, v24, v7);
        goto LABEL_52;
      case 6u:
        if (v8 != 50) {
          goto LABEL_45;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v26 = *(void *)(a1 + 48);
        if (!v26)
        {
          unint64_t v27 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v27 = (void *)*v27;
          }
          uint64_t v26 = sub_1831D48((uint64_t)v27);
          *(void *)(a1 + 48) = v26;
          uint64_t v7 = *(unsigned __int8 **)v34;
        }
        uint64_t v18 = sub_17B96A0(a3, v26, v7);
        goto LABEL_52;
      default:
LABEL_45:
        if (v8) {
          BOOL v28 = (v8 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if (*v6)
          {
            int v29 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = *(unsigned __int8 **)v34;
          }
          uint64_t v18 = (uint64_t)sub_1885AC0(v8, v29, (char *)v7, a3);
LABEL_52:
          *(void *)unint64_t v34 = v18;
          if (!v18) {
            return 0;
          }
LABEL_53:
          if (sub_11947B8((uint64_t)a3, (char **)v34, a3[11].i32[1])) {
            return *(void *)v34;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v34;
    }
  }
}

uint64_t sub_17B9610(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17B7F7C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_17B96A0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17B8868(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_17B9730(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 56);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 0x20) == 0) {
        goto LABEL_25;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  *char v4 = 26;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    unint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    unint64_t v12 = v4 + 2;
  }
  char v4 = sub_1792424(v10, (unint64_t)v12, a3);
  if ((v6 & 0x20) != 0)
  {
LABEL_19:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 60);
    *char v4 = 32;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_25:
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 40);
    *char v4 = 42;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      uint64_t v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      uint64_t v18 = v4 + 2;
    }
    char v4 = sub_17B8278(v16, (unint64_t)v18, a3);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v19 = *(void *)(a1 + 48);
    *char v4 = 50;
    unsigned int v20 = *(_DWORD *)(v19 + 64);
    v4[1] = v20;
    if (v20 > 0x7F) {
      uint64_t v21 = sub_188A9CC(v20, v4 + 1);
    }
    else {
      uint64_t v21 = v4 + 2;
    }
    char v4 = sub_17B8B48(v19, v21, a3);
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return v4;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    uint64_t v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    uint64_t v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(v4, v25, (int)v26);
    v4 += v27;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v25, v26, v4);
}

uint64_t sub_17B9A38(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x3F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_25;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_1792638(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    uint64_t v8 = sub_17B8480(*(void *)(a1 + 40));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_12:
      if ((v2 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_17;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v9 = sub_17B8D58(*(void *)(a1 + 48));
  v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_13:
    if ((v2 & 0x20) == 0) {
      goto LABEL_25;
    }
    goto LABEL_21;
  }
LABEL_17:
  int v10 = *(_DWORD *)(a1 + 56);
  if (v10 < 0) {
    uint64_t v11 = 11;
  }
  else {
    uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v11;
  if ((v2 & 0x20) != 0)
  {
LABEL_21:
    int v12 = *(_DWORD *)(a1 + 60);
    if (v12 < 0) {
      uint64_t v13 = 11;
    }
    else {
      uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v13;
  }
LABEL_25:
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v3 += v17;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_17B9BFC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_25;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    int v10 = *(void **)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        int v12 = (void *)*v12;
      }
      int v10 = sub_18302C8((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_2549800;
    }
    sub_1792730((uint64_t)v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_33;
    }
LABEL_25:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v14 = *(std::string **)(a1 + 40);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      unint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        unint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = (std::string *)sub_1831CA0((uint64_t)v16);
      *(void *)(a1 + 40) = v14;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v17 = &off_254A4C0;
    }
    sub_1455818(v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_41;
    }
LABEL_33:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v18 = *(std::string **)(a1 + 48);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      unsigned int v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        unsigned int v20 = (void *)*v20;
      }
      uint64_t v18 = (std::string *)sub_1831D48((uint64_t)v20);
      *(void *)(a1 + 48) = v18;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v21 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v21 = &off_254A500;
    }
    sub_1216B14(v18, (uint64_t)v21);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0)
      {
LABEL_9:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_10;
      }
LABEL_8:
      *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
      goto LABEL_9;
    }
LABEL_41:
    *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_17B9DBC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t v1 = *(void *)(a1 + 32);
  if ((*(unsigned char *)(v1 + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = sub_15B1FC0(*(void *)(v1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17B9DF4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.QueryUnderstandingParameters");
}

uint64_t sub_17B9E04(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24DC198;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_17B9E68(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17B9E98(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17B9F14(void *a1)
{
  sub_17B9E98(a1);

  operator delete();
}

unsigned char *sub_17B9F4C(uint64_t a1)
{
  BOOL result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

char *sub_17B9F9C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    uint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      uint64_t v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v15 + 2;
        }
      }
      uint64_t v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (v8 - 800 > 0x31F)
      {
        if (*v5)
        {
          uint64_t v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          uint64_t v13 = (std::string *)sub_188DBD8(v5);
          uint64_t v7 = v15;
        }
        int v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        int v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_254A588, v5, a3);
      }
      uint64_t v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_17BA0E4(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 100, 200, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_17BA1B0(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

uint64_t sub_17BA208(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_17BA210@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.QueryUnderstandingResult.QueryUnderstandingTaxonomyResultItemCategory");
}

void *sub_17BA220(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17BA294(void *a1)
{
  sub_17BA220(a1);

  operator delete();
}

uint64_t sub_17BA2CC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_17BA2F0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v18 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
    goto LABEL_29;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v18 + 1;
    unsigned int v8 = *v18;
    if (*v18 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v18, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v18 + 2;
      }
    }
    uint64_t v18 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 17)
      {
        uint64_t v15 = *(void *)v7;
        uint64_t v14 = v7 + 8;
        v5 |= 2u;
        *(void *)(a1 + 32) = v15;
LABEL_23:
        uint64_t v18 = v14;
        goto LABEL_24;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 9)
    {
      uint64_t v16 = *(void *)v7;
      uint64_t v14 = v7 + 8;
      v5 |= 1u;
      *(void *)(a1 + 24) = v16;
      goto LABEL_23;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v18;
    }
    uint64_t v18 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v18) {
      goto LABEL_30;
    }
LABEL_24:
    if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
      goto LABEL_29;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_29;
  }
LABEL_30:
  uint64_t v18 = 0;
LABEL_29:
  *(_DWORD *)(a1 + 16) |= v5;
  return v18;
}

_OWORD *sub_17BA460(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unint64_t v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *(unsigned char *)unint64_t v4 = 9;
    *(void *)((char *)v4 + 1) = v7;
    unint64_t v4 = (_OWORD *)((char *)v4 + 9);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v8 = *(void *)(a1 + 32);
    *(unsigned char *)unint64_t v4 = 17;
    *(void *)((char *)v4 + 1) = v8;
    unint64_t v4 = (_OWORD *)((char *)v4 + 9);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    return (_OWORD *)((char *)v4 + v14);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_17BA57C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  uint64_t v2 = 9;
  if ((v1 & 1) == 0) {
    uint64_t v2 = 0;
  }
  if ((v1 & 2) != 0) {
    v2 += 9;
  }
  if ((v1 & 3) != 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_17BA5D8()
{
  return 1;
}

void *sub_17BA5E0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.QueryUnderstandingResult.VectorPoiDisplayDV.ZoomInfo");
}

uint64_t sub_17BA5F0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254A5E0)
  {
    unint64_t v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_147B564(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17BA6A8(uint64_t a1)
{
  sub_17BA5F0(a1);

  operator delete();
}

uint64_t sub_17BA6E0(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_14152BC(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 24) = 0;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_17BA740(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v24 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v24 + 1;
    unsigned int v9 = *v24;
    if (*v24 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v24, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v24 + 2;
      }
    }
    unint64_t v24 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v19 = v8 + 1;
    int v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    int v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_31:
      unint64_t v24 = v19;
      *(_DWORD *)(a1 + 32) = v20;
      goto LABEL_32;
    }
    uint64_t v22 = (char *)sub_188C0D0((uint64_t)v8, v20);
    unint64_t v24 = v22;
    *(_DWORD *)(a1 + 32) = v23;
    if (!v22) {
      goto LABEL_39;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v16 = *(void *)(a1 + 24);
    if (!v16)
    {
      uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v17 = (void *)*v17;
      }
      sub_1481CB0((uint64_t)v17);
      uint64_t v16 = v18;
      *(void *)(a1 + 24) = v18;
      uint64_t v8 = v24;
    }
    uint64_t v15 = sub_1415818(a3, v16, (unsigned __int8 *)v8);
LABEL_26:
    unint64_t v24 = v15;
    if (!v15) {
      goto LABEL_39;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v24;
    }
    uint64_t v15 = (char *)sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_26;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  unint64_t v24 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v24;
}

unsigned char *sub_17BA924(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 32);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    *uint64_t v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      int v12 = v4 + 2;
    }
    uint64_t v4 = sub_147B738(v10, (unint64_t)v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_17BAAB0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_147B898(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t result = 0;
  if ((v2 & 2) != 0) {
LABEL_7:
  }
    result += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    result += v7;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_17BAB74(std::string *result, uint64_t a2)
{
  char v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v7 = (void *)*v7;
        }
        sub_1481CB0((uint64_t)v7);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unsigned int v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unsigned int v8 = &off_2539D18;
      }
      uint64_t result = sub_1415F98(data, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_17BAC44()
{
  return 1;
}

void *sub_17BAC4C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.QueryUnderstandingResult.VectorPoiDisplayDV.CustomLandmark");
}

uint64_t sub_17BAC5C(uint64_t a1)
{
  char v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_17BACE0((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_17BACE0(uint64_t (***result)()))()
{
  if (result != &off_254A608)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[3];
    if (v2)
    {
      sub_17BA220(v2);
      operator delete();
    }
    char v3 = v1[4];
    if (v3)
    {
      sub_17BA220(v3);
      operator delete();
    }
    uint64_t v4 = (uint64_t)v1[5];
    if (v4)
    {
      sub_17BA5F0(v4);
      operator delete();
    }
    uint64_t v5 = v1[6];
    if (v5)
    {
      sub_17BA220(v5);
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[7];
    if (result)
    {
      sub_17BA220(result);
      operator delete();
    }
  }
  return result;
}

void sub_17BADCC(uint64_t a1)
{
  sub_17BAC5C(a1);

  operator delete();
}

uint64_t sub_17BAE04(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t result = sub_17BA2CC(*(void *)(result + 24));
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
LABEL_16:
      uint64_t result = sub_17BA6E0(*(void *)(v1 + 40));
      if ((v2 & 8) == 0)
      {
LABEL_6:
        if ((v2 & 0x10) == 0) {
          goto LABEL_8;
        }
        goto LABEL_7;
      }
      goto LABEL_17;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t result = sub_17BA2CC(*(void *)(v1 + 32));
  if ((v2 & 4) != 0) {
    goto LABEL_16;
  }
LABEL_5:
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_17:
  uint64_t result = sub_17BA2CC(*(void *)(v1 + 48));
  if ((v2 & 0x10) != 0) {
LABEL_7:
  }
    uint64_t result = sub_17BA2CC(*(void *)(v1 + 56));
LABEL_8:
  if ((v2 & 0xE0) != 0)
  {
    *(_DWORD *)(v1 + 72) = 0;
    *(void *)(v1 + 64) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(unsigned char *)(v3 + 68) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_17BAEC0(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v43 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v43, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = v43 + 1;
    unsigned int v9 = *v43;
    if (*v43 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v43, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v43 + 2;
      }
    }
    unint64_t v43 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_62;
        }
        v5 |= 0x20u;
        int v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          int v12 = v8 + 2;
LABEL_13:
          unint64_t v43 = v12;
          *(_DWORD *)(a1 + 64) = v13;
          goto LABEL_55;
        }
        uint64_t v35 = (char *)sub_188C0D0((uint64_t)v8, v13);
        unint64_t v43 = v35;
        *(_DWORD *)(a1 + 64) = v36;
        if (v35) {
          goto LABEL_55;
        }
        goto LABEL_84;
      case 2u:
        if (v9 != 18) {
          goto LABEL_62;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        unint64_t v15 = *(void **)(a1 + 24);
        if (v15) {
          goto LABEL_53;
        }
        uint64_t v16 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v16 = (void *)*v16;
        }
        unint64_t v15 = sub_1831ED0((uint64_t)v16);
        *(void *)(a1 + 24) = v15;
        goto LABEL_52;
      case 3u:
        if (v9 != 24) {
          goto LABEL_62;
        }
        v5 |= 0x40u;
        uint64_t v17 = v8 + 1;
        int v18 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v19 = *v17;
        int v18 = v18 + (v19 << 7) - 128;
        if (v19 < 0)
        {
          BOOL v37 = (char *)sub_188C0D0((uint64_t)v8, v18);
          unint64_t v43 = v37;
          *(_DWORD *)(a1 + 68) = v38;
          if (!v37) {
            goto LABEL_84;
          }
        }
        else
        {
          uint64_t v17 = v8 + 2;
LABEL_23:
          unint64_t v43 = v17;
          *(_DWORD *)(a1 + 68) = v18;
        }
        goto LABEL_55;
      case 4u:
        if (v9 != 34) {
          goto LABEL_62;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        unint64_t v15 = *(void **)(a1 + 32);
        if (v15) {
          goto LABEL_53;
        }
        int v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          int v20 = (void *)*v20;
        }
        unint64_t v15 = sub_1831ED0((uint64_t)v20);
        *(void *)(a1 + 32) = v15;
        goto LABEL_52;
      case 5u:
        if (v9 != 42) {
          goto LABEL_62;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v21 = *(void *)(a1 + 40);
        if (!v21)
        {
          uint64_t v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v22 = (void *)*v22;
          }
          uint64_t v21 = sub_1831F4C((uint64_t)v22);
          *(void *)(a1 + 40) = v21;
          unsigned int v8 = v43;
        }
        int v23 = sub_17BB3FC(a3, v21, (unsigned __int8 *)v8);
        goto LABEL_54;
      case 6u:
        if (v9 != 48) {
          goto LABEL_62;
        }
        unint64_t v24 = v8 + 1;
        unint64_t v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_39;
        }
        int v26 = *v24;
        int v27 = v25 + (v26 << 7);
        unint64_t v25 = (v27 - 128);
        if (v26 < 0)
        {
          unint64_t v43 = (char *)sub_188C138((uint64_t)v8, (v27 - 128));
          if (!v43) {
            goto LABEL_84;
          }
          unint64_t v25 = v39;
        }
        else
        {
          unint64_t v24 = v8 + 2;
LABEL_39:
          unint64_t v43 = v24;
        }
        if (v25 > 4)
        {
          if (*v7) {
            unint64_t v42 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v42 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(6, v25, v42);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x80u;
          *(_DWORD *)(a1 + 72) = v25;
        }
        goto LABEL_55;
      case 7u:
        if (v9 != 58) {
          goto LABEL_62;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        unint64_t v15 = *(void **)(a1 + 48);
        if (v15) {
          goto LABEL_53;
        }
        BOOL v28 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          BOOL v28 = (void *)*v28;
        }
        unint64_t v15 = sub_1831ED0((uint64_t)v28);
        *(void *)(a1 + 48) = v15;
        goto LABEL_52;
      case 8u:
        if (v9 != 66) {
          goto LABEL_62;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        unint64_t v15 = *(void **)(a1 + 56);
        if (v15) {
          goto LABEL_53;
        }
        int v29 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          int v29 = (void *)*v29;
        }
        unint64_t v15 = sub_1831ED0((uint64_t)v29);
        *(void *)(a1 + 56) = v15;
LABEL_52:
        unsigned int v8 = v43;
LABEL_53:
        int v23 = sub_17BB36C(a3, (uint64_t)v15, (unsigned __int8 *)v8);
        goto LABEL_54;
      case 9u:
        if (v9 != 72) {
          goto LABEL_62;
        }
        v5 |= 0x100u;
        unint64_t v30 = v8 + 1;
        uint64_t v31 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_61;
        }
        int v32 = *v30;
        uint64_t v31 = v31 + (v32 << 7) - 128;
        if (v32 < 0)
        {
          BOOL v40 = (char *)sub_188C138((uint64_t)v8, v31);
          unint64_t v43 = v40;
          *(unsigned char *)(a1 + 76) = v41 != 0;
          if (!v40) {
            goto LABEL_84;
          }
        }
        else
        {
          unint64_t v30 = v8 + 2;
LABEL_61:
          unint64_t v43 = v30;
          *(unsigned char *)(a1 + 76) = v31 != 0;
        }
        goto LABEL_55;
      default:
LABEL_62:
        if (v9) {
          BOOL v33 = (v9 & 7) == 4;
        }
        else {
          BOOL v33 = 1;
        }
        if (!v33)
        {
          if (*v7)
          {
            unint64_t v34 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = v43;
          }
          int v23 = (char *)sub_1885AC0(v9, v34, v8, a3);
LABEL_54:
          unint64_t v43 = v23;
          if (!v23) {
            goto LABEL_84;
          }
LABEL_55:
          if (sub_11947B8((uint64_t)a3, &v43, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_84:
        }
          unint64_t v43 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v43;
    }
  }
}

char *sub_17BB36C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17BA2F0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17BB3FC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17BA740(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_17BB48C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 64);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    *char v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      int v12 = v4 + 2;
    }
    char v4 = sub_17BA460(v10, (unint64_t)v12, a3);
  }
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 68);
    *char v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 32);
    *char v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      int v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      int v18 = v4 + 2;
    }
    char v4 = sub_17BA460(v16, (unint64_t)v18, a3);
    if ((v6 & 4) == 0)
    {
LABEL_24:
      if ((v6 & 0x80) == 0) {
        goto LABEL_44;
      }
      goto LABEL_38;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_24;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 40);
  *char v4 = 42;
  unsigned int v20 = *(_DWORD *)(v19 + 20);
  v4[1] = v20;
  if (v20 > 0x7F) {
    uint64_t v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    uint64_t v21 = v4 + 2;
  }
  char v4 = sub_17BA924(v19, (unint64_t)v21, a3);
  if ((v6 & 0x80) != 0)
  {
LABEL_38:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v22 = *(int *)(a1 + 72);
    *char v4 = 48;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unint64_t v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_44:
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v25 = *(void *)(a1 + 48);
    *char v4 = 58;
    unsigned int v26 = *(_DWORD *)(v25 + 20);
    v4[1] = v26;
    if (v26 > 0x7F) {
      int v27 = sub_188A9CC(v26, v4 + 1);
    }
    else {
      int v27 = v4 + 2;
    }
    char v4 = sub_17BA460(v25, (unint64_t)v27, a3);
    if ((v6 & 0x10) == 0)
    {
LABEL_46:
      if ((v6 & 0x100) == 0) {
        goto LABEL_63;
      }
      goto LABEL_60;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_46;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v28 = *(void *)(a1 + 56);
  *char v4 = 66;
  unsigned int v29 = *(_DWORD *)(v28 + 20);
  v4[1] = v29;
  if (v29 > 0x7F) {
    unint64_t v30 = sub_188A9CC(v29, v4 + 1);
  }
  else {
    unint64_t v30 = v4 + 2;
  }
  char v4 = sub_17BA460(v28, (unint64_t)v30, a3);
  if ((v6 & 0x100) != 0)
  {
LABEL_60:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v31 = *(unsigned char *)(a1 + 76);
    *char v4 = 72;
    v4[1] = v31;
    v4 += 2;
  }
LABEL_63:
  uint64_t v32 = *(void *)(a1 + 8);
  if ((v32 & 1) == 0) {
    return v4;
  }
  unint64_t v34 = v32 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v34 + 31) < 0)
  {
    uint64_t v35 = *(void **)(v34 + 8);
    uint64_t v36 = *(void *)(v34 + 16);
  }
  else
  {
    uint64_t v35 = (void *)(v34 + 8);
    LODWORD(v36) = *(unsigned __int8 *)(v34 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v36)
  {
    uint64_t v37 = (int)v36;
    memcpy(v4, v35, (int)v36);
    v4 += v37;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v35, v36, v4);
}

uint64_t sub_17BB8FC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_24;
  }
  if (v2)
  {
    uint64_t v4 = sub_17BA57C(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_17BA57C(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v6 = sub_17BAAB0(*(void *)(a1 + 40));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_10:
      if ((v2 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_17;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v7 = sub_17BA57C(*(void *)(a1 + 48));
  v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_11:
    if ((v2 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t v8 = sub_17BA57C(*(void *)(a1 + 56));
  v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_12:
    if ((v2 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_19;
  }
LABEL_18:
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 64) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_13:
    if ((v2 & 0x80) == 0) {
      goto LABEL_24;
    }
    goto LABEL_20;
  }
LABEL_19:
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 68) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x80) == 0) {
    goto LABEL_24;
  }
LABEL_20:
  int v9 = *(_DWORD *)(a1 + 72);
  if (v9 < 0) {
    uint64_t v10 = 11;
  }
  else {
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v10;
LABEL_24:
  if ((v2 & 0x100) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    result += v14;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_17BBB08(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        int v9 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          int v9 = (void *)*v9;
        }
        data = (std::string *)sub_1831ED0((uint64_t)v9);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v10 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v10 = &off_254A5B8;
      }
      uint64_t result = sub_123BFCC(data, (uint64_t)v10);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_34;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    unsigned int v11 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v11)
    {
      std::string::size_type v12 = v3->__r_.__value_.__l.__size_;
      unint64_t v13 = (void *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        unint64_t v13 = (void *)*v13;
      }
      unsigned int v11 = (std::string *)sub_1831ED0((uint64_t)v13);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v11;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v14 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v14 = &off_254A5B8;
    }
    uint64_t result = sub_123BFCC(v11, (uint64_t)v14);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_42;
    }
LABEL_34:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    unsigned int v15 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
    if (!v15)
    {
      std::string::size_type v16 = v3->__r_.__value_.__l.__size_;
      unsigned int v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        unsigned int v17 = (void *)*v17;
      }
      unsigned int v15 = (std::string *)sub_1831F4C((uint64_t)v17);
      v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v15;
    }
    if (*(void *)(a2 + 40)) {
      int v18 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      int v18 = &off_254A5E0;
    }
    uint64_t result = sub_17BAB74(v15, (uint64_t)v18);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_50;
    }
LABEL_42:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    uint64_t v19 = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!v19)
    {
      std::string::size_type v20 = v3->__r_.__value_.__l.__size_;
      uint64_t v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        uint64_t v21 = (void *)*v21;
      }
      uint64_t v19 = (std::string *)sub_1831ED0((uint64_t)v21);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)v19;
    }
    if (*(void *)(a2 + 48)) {
      unint64_t v22 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      unint64_t v22 = &off_254A5B8;
    }
    uint64_t result = sub_123BFCC(v19, (uint64_t)v22);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_58;
    }
LABEL_50:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
    unint64_t v23 = (std::string *)v3[2].__r_.__value_.__l.__size_;
    if (!v23)
    {
      std::string::size_type v24 = v3->__r_.__value_.__l.__size_;
      uint64_t v25 = (void *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
      if (v24) {
        uint64_t v25 = (void *)*v25;
      }
      unint64_t v23 = (std::string *)sub_1831ED0((uint64_t)v25);
      v3[2].__r_.__value_.__l.__size_ = (std::string::size_type)v23;
    }
    if (*(void *)(a2 + 56)) {
      unsigned int v26 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      unsigned int v26 = &off_254A5B8;
    }
    uint64_t result = sub_123BFCC(v23, (uint64_t)v26);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_59;
    }
LABEL_58:
    LODWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      LODWORD(v3[3].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 72);
      goto LABEL_11;
    }
LABEL_59:
    HIDWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 68);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v4 & 0x100) != 0)
  {
    std::string::value_type v5 = *(unsigned char *)(a2 + 76);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x100u;
    v3[3].__r_.__value_.__s.__data_[4] = v5;
  }
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_17BBD40()
{
  return 1;
}

void *sub_17BBD48@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.QueryUnderstandingResult.VectorPoiDisplayDV");
}

void *sub_17BBD58(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17BBDCC(void *a1)
{
  sub_17BBD58(a1);

  operator delete();
}

uint64_t sub_17BBE04(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x3F) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0xFFFFFFF700000000;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_17BBE34(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v28 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v28, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v28 + 1;
    unsigned int v9 = *v28;
    if (*v28 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v28, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v28 + 2;
      }
    }
    uint64_t v28 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 13) {
          goto LABEL_15;
        }
        int v13 = *(_DWORD *)v8;
        std::string::size_type v12 = v8 + 4;
        v5 |= 1u;
        *(_DWORD *)(a1 + 24) = v13;
        goto LABEL_31;
      case 2u:
        if (v9 != 21) {
          goto LABEL_15;
        }
        int v17 = *(_DWORD *)v8;
        std::string::size_type v12 = v8 + 4;
        v5 |= 2u;
        *(_DWORD *)(a1 + 28) = v17;
        goto LABEL_31;
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
      case 8u:
      case 9u:
        goto LABEL_15;
      case 0xAu:
        if (v9 != 85) {
          goto LABEL_15;
        }
        int v18 = *(_DWORD *)v8;
        std::string::size_type v12 = v8 + 4;
        v5 |= 8u;
        *(_DWORD *)(a1 + 36) = v18;
        goto LABEL_31;
      case 0xBu:
        if (v9 != 93) {
          goto LABEL_15;
        }
        int v19 = *(_DWORD *)v8;
        std::string::size_type v12 = v8 + 4;
        v5 |= 0x10u;
        *(_DWORD *)(a1 + 40) = v19;
        goto LABEL_31;
      case 0xCu:
        if (v9 != 101) {
          goto LABEL_15;
        }
        int v20 = *(_DWORD *)v8;
        std::string::size_type v12 = v8 + 4;
        v5 |= 4u;
        *(_DWORD *)(a1 + 32) = v20;
LABEL_31:
        uint64_t v28 = v12;
        goto LABEL_32;
      default:
        if (v9 >> 3 == 99 && v9 == 24)
        {
          uint64_t v21 = v8 + 1;
          unint64_t v22 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_37;
          }
          int v23 = *v21;
          int v24 = v22 + (v23 << 7);
          unint64_t v22 = (v24 - 128);
          if (v23 < 0)
          {
            uint64_t v28 = (char *)sub_188C138((uint64_t)v8, (v24 - 128));
            if (!v28) {
              goto LABEL_53;
            }
            unint64_t v22 = v26;
          }
          else
          {
            uint64_t v21 = v8 + 2;
LABEL_37:
            uint64_t v28 = v21;
          }
          if ((v22 + 3) < 7 || v22 == -9)
          {
            *(_DWORD *)(a1 + 16) |= 0x20u;
            *(_DWORD *)(a1 + 44) = v22;
          }
          else
          {
            if (*v7) {
              int v27 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              int v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            }
            sub_188C020(99, v22, v27);
          }
          goto LABEL_32;
        }
LABEL_15:
        if (v9) {
          BOOL v15 = (v9 & 7) == 4;
        }
        else {
          BOOL v15 = 1;
        }
        if (!v15)
        {
          if (*v7)
          {
            std::string::size_type v16 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            std::string::size_type v16 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v28;
          }
          uint64_t v28 = (char *)sub_1885AC0(v9, v16, v8, a3);
          if (!v28) {
            goto LABEL_53;
          }
LABEL_32:
          if (sub_11947B8((uint64_t)a3, &v28, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_53:
        }
          uint64_t v28 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v28;
    }
  }
}

_OWORD *sub_17BC0F8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    int v7 = *(_DWORD *)(a1 + 24);
    *(unsigned char *)int v4 = 13;
    *(_DWORD *)((char *)v4 + 1) = v7;
    int v4 = (_OWORD *)((char *)v4 + 5);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v8 = *(_DWORD *)(a1 + 28);
  *(unsigned char *)int v4 = 21;
  *(_DWORD *)((char *)v4 + 1) = v8;
  int v4 = (_OWORD *)((char *)v4 + 5);
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_14:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v9 = *(_DWORD *)(a1 + 36);
  *(unsigned char *)int v4 = 85;
  *(_DWORD *)((char *)v4 + 1) = v9;
  int v4 = (_OWORD *)((char *)v4 + 5);
  if ((v6 & 0x10) == 0)
  {
LABEL_5:
    if ((v6 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_17:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  *(unsigned char *)int v4 = 93;
  *(_DWORD *)((char *)v4 + 1) = v10;
  int v4 = (_OWORD *)((char *)v4 + 5);
  if ((v6 & 4) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_29;
    }
    goto LABEL_23;
  }
LABEL_20:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v11 = *(_DWORD *)(a1 + 32);
  *(unsigned char *)int v4 = 101;
  *(_DWORD *)((char *)v4 + 1) = v11;
  int v4 = (_OWORD *)((char *)v4 + 5);
  if ((v6 & 0x20) != 0)
  {
LABEL_23:
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v12 = *(int *)(a1 + 44);
    *(_WORD *)int v4 = 1688;
    *((unsigned char *)v4 + 2) = v12;
    if (v12 > 0x7F)
    {
      *((unsigned char *)v4 + 2) = v12 | 0x80;
      unint64_t v13 = v12 >> 7;
      *((unsigned char *)v4 + 3) = v12 >> 7;
      int v4 = (_OWORD *)((char *)v4 + 4);
      if (v12 >= 0x4000)
      {
        do
        {
          *((unsigned char *)v4 - 1) |= 0x80u;
          unint64_t v14 = v13 >> 14;
          v13 >>= 7;
          *(unsigned char *)int v4 = v13;
          int v4 = (_OWORD *)((char *)v4 + 1);
        }
        while (v14);
      }
    }
    else
    {
      int v4 = (_OWORD *)((char *)v4 + 3);
    }
  }
LABEL_29:
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    int v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    int v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    return (_OWORD *)((char *)v4 + v20);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_17BC350(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x3F) != 0)
  {
    uint64_t v2 = 5;
    if ((v1 & 1) == 0) {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += 5;
    }
    if ((v1 & 4) != 0) {
      v2 += 5;
    }
    if ((v1 & 8) != 0) {
      v2 += 5;
    }
    if ((v1 & 0x10) != 0) {
      v2 += 5;
    }
    if ((v1 & 0x20) != 0)
    {
      int v3 = *(_DWORD *)(a1 + 44);
      uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v3 >= 0) {
        uint64_t v5 = v4;
      }
      else {
        uint64_t v5 = 12;
      }
      v2 += v5;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_17BC40C()
{
  return 1;
}

void *sub_17BC414@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.QueryUnderstandingResult.CartoIconZoom");
}

uint64_t sub_17BC424(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(uint64_t **)(a1 + 88) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 88));
  }
  if ((uint64_t (***)())a1 != &off_254A658)
  {
    uint64_t v6 = *(void *)(a1 + 96);
    if (v6)
    {
      sub_17BAC5C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  sub_1877638((void *)(a1 + 48));
  sub_1877638((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17BC538(uint64_t a1)
{
  sub_17BC424(a1);

  operator delete();
}

uint64_t sub_17BC570(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_17BBE04(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_17BBE04(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  int v8 = *(_DWORD *)(v1 + 16);
  if ((v8 & 0xF) == 0) {
    goto LABEL_15;
  }
  if (v8)
  {
    unint64_t v11 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v11 + 23) < 0)
    {
      **(unsigned char **)unint64_t v11 = 0;
      *(void *)(v11 + 8) = 0;
      if ((v8 & 2) != 0) {
        goto LABEL_25;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v11 = 0;
      *(unsigned char *)(v11 + 23) = 0;
      if ((v8 & 2) != 0) {
        goto LABEL_25;
      }
    }
LABEL_12:
    if ((v8 & 4) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
  if ((v8 & 2) == 0) {
    goto LABEL_12;
  }
LABEL_25:
  unint64_t v12 = *(void *)(v1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v12 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v12 = 0;
    *(unsigned char *)(v12 + 23) = 0;
    if ((v8 & 4) != 0) {
      goto LABEL_29;
    }
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  **(unsigned char **)unint64_t v12 = 0;
  *(void *)(v12 + 8) = 0;
  if ((v8 & 4) == 0) {
    goto LABEL_13;
  }
LABEL_29:
  unint64_t v13 = *(void *)(v1 + 88) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v13 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v13 = 0;
    *(unsigned char *)(v13 + 23) = 0;
    if ((v8 & 8) == 0) {
      goto LABEL_15;
    }
LABEL_14:
    uint64_t result = sub_17BAE04(*(void *)(v1 + 96));
    goto LABEL_15;
  }
  **(unsigned char **)unint64_t v13 = 0;
  *(void *)(v13 + 8) = 0;
  if ((v8 & 8) != 0) {
    goto LABEL_14;
  }
LABEL_15:
  if ((v8 & 0xF0) != 0)
  {
    *(_WORD *)(v1 + 108) = 0;
    *(_DWORD *)(v1 + 104) = 0;
    *(_DWORD *)(v1 + 112) = -9;
  }
  char v10 = *(unsigned char *)(v1 + 8);
  uint64_t v9 = v1 + 8;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

uint64_t sub_17BC6E8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v58 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v58, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = (unsigned __int8 *)(*(void *)v58 + 1);
    unsigned int v9 = **(unsigned char **)v58;
    if ((char)**(unsigned char **)v58 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        int v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v58, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (unsigned __int8 *)(*(void *)v58 + 2);
      }
    }
    *(void *)uint64_t v58 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 72);
        goto LABEL_62;
      case 2u:
        if (v9 != 16) {
          goto LABEL_74;
        }
        v5 |= 0x10u;
        uint64_t v15 = (char *)(v8 + 1);
        int v16 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v50 = sub_188C0D0((uint64_t)v8, v16);
          *(void *)uint64_t v58 = v50;
          *(_DWORD *)(a1 + 104) = v51;
          if (!v50) {
            goto LABEL_99;
          }
        }
        else
        {
          uint64_t v15 = (char *)(v8 + 2);
LABEL_17:
          *(void *)uint64_t v58 = v15;
          *(_DWORD *)(a1 + 104) = v16;
        }
        goto LABEL_82;
      case 3u:
        if (v9 != 24) {
          goto LABEL_74;
        }
        v5 |= 0x20u;
        int v18 = (char *)(v8 + 1);
        uint64_t v19 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v52 = sub_188C138((uint64_t)v8, v19);
          *(void *)uint64_t v58 = v52;
          *(unsigned char *)(a1 + 108) = v53 != 0;
          if (!v52) {
            goto LABEL_99;
          }
        }
        else
        {
          int v18 = (char *)(v8 + 2);
LABEL_22:
          *(void *)uint64_t v58 = v18;
          *(unsigned char *)(a1 + 108) = v19 != 0;
        }
        goto LABEL_82;
      case 4u:
        if (v9 != 34) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v21 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 80);
        goto LABEL_62;
      case 5u:
        if (v9 != 40) {
          goto LABEL_74;
        }
        unint64_t v22 = (char *)(v8 + 1);
        unint64_t v23 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_31;
        }
        int v24 = *v22;
        int v25 = v23 + (v24 << 7);
        unint64_t v23 = (v25 - 128);
        if (v24 < 0)
        {
          *(void *)uint64_t v58 = sub_188C138((uint64_t)v8, (v25 - 128));
          if (!*(void *)v58) {
            goto LABEL_99;
          }
          unint64_t v23 = v54;
        }
        else
        {
          unint64_t v22 = (char *)(v8 + 2);
LABEL_31:
          *(void *)uint64_t v58 = v22;
        }
        if ((v23 + 3) < 7 || v23 == -9)
        {
          *(_DWORD *)(a1 + 16) |= 0x80u;
          *(_DWORD *)(a1 + 112) = v23;
        }
        else
        {
          if (*v7) {
            uint64_t v57 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v57 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(5, v23, v57);
        }
        goto LABEL_82;
      case 6u:
        if (v9 != 50) {
          goto LABEL_74;
        }
        int v27 = (char *)(v8 - 1);
        while (1)
        {
          uint64_t v28 = (unsigned __int8 *)(v27 + 1);
          *(void *)uint64_t v58 = v27 + 1;
          unsigned int v29 = *(_DWORD **)(a1 + 40);
          if (v29 && (uint64_t v30 = *(int *)(a1 + 32), (int)v30 < *v29))
          {
            *(_DWORD *)(a1 + 32) = v30 + 1;
            uint64_t v31 = *(void *)&v29[2 * v30 + 2];
          }
          else
          {
            uint64_t v32 = sub_183204C(*(void *)(a1 + 24));
            uint64_t v31 = sub_188CDC8(a1 + 24, (uint64_t)v32);
            uint64_t v28 = *(unsigned __int8 **)v58;
          }
          int v27 = sub_17BCC7C(a3, v31, v28);
          *(void *)uint64_t v58 = v27;
          if (!v27) {
            goto LABEL_99;
          }
          if (*(void *)a3 <= (unint64_t)v27 || *v27 != 50) {
            goto LABEL_82;
          }
        }
      case 7u:
        if (v9 != 58) {
          goto LABEL_74;
        }
        BOOL v33 = (char *)(v8 - 1);
        while (1)
        {
          unint64_t v34 = (unsigned __int8 *)(v33 + 1);
          *(void *)uint64_t v58 = v33 + 1;
          uint64_t v35 = *(_DWORD **)(a1 + 64);
          if (v35 && (uint64_t v36 = *(int *)(a1 + 56), (int)v36 < *v35))
          {
            *(_DWORD *)(a1 + 56) = v36 + 1;
            uint64_t v37 = *(void *)&v35[2 * v36 + 2];
          }
          else
          {
            int v38 = sub_183204C(*(void *)(a1 + 48));
            uint64_t v37 = sub_188CDC8(a1 + 48, (uint64_t)v38);
            unint64_t v34 = *(unsigned __int8 **)v58;
          }
          BOOL v33 = sub_17BCC7C(a3, v37, v34);
          *(void *)uint64_t v58 = v33;
          if (!v33) {
            goto LABEL_99;
          }
          if (*(void *)a3 <= (unint64_t)v33 || *v33 != 58) {
            goto LABEL_82;
          }
        }
      case 8u:
        if (v9 != 66) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v39 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v39 & 0xFFFFFFFFFFFFFFFCLL);
        if (v39) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 88);
LABEL_62:
        BOOL v40 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v41 = (void *)sub_188C244(v40, *(char **)v58, (uint64_t)a3);
        goto LABEL_81;
      case 9u:
        if (v9 != 74) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v42 = *(void *)(a1 + 96);
        if (!v42)
        {
          unint64_t v43 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v43 = (void *)*v43;
          }
          sub_1831FC8((uint64_t)v43);
          uint64_t v42 = v44;
          *(void *)(a1 + 96) = v44;
          int v8 = *(unsigned __int8 **)v58;
        }
        uint64_t v41 = sub_17BCD0C(a3, v42, v8);
        goto LABEL_81;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_74;
        }
        v5 |= 0x40u;
        int v45 = (char *)(v8 + 1);
        uint64_t v46 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_73;
        }
        int v47 = *v45;
        uint64_t v46 = v46 + (v47 << 7) - 128;
        if (v47 < 0)
        {
          uint64_t v55 = sub_188C138((uint64_t)v8, v46);
          *(void *)uint64_t v58 = v55;
          *(unsigned char *)(a1 + 109) = v56 != 0;
          if (!v55) {
            goto LABEL_99;
          }
        }
        else
        {
          int v45 = (char *)(v8 + 2);
LABEL_73:
          *(void *)uint64_t v58 = v45;
          *(unsigned char *)(a1 + 109) = v46 != 0;
        }
        goto LABEL_82;
      default:
LABEL_74:
        if (v9) {
          BOOL v48 = (v9 & 7) == 4;
        }
        else {
          BOOL v48 = 1;
        }
        if (!v48)
        {
          if (*v7)
          {
            uint64_t v49 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v49 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = *(unsigned __int8 **)v58;
          }
          uint64_t v41 = sub_1885AC0(v9, v49, (char *)v8, a3);
LABEL_81:
          *(void *)uint64_t v58 = v41;
          if (!v41) {
            goto LABEL_99;
          }
LABEL_82:
          if (sub_11947B8((uint64_t)a3, (char **)v58, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_99:
        }
          *(void *)uint64_t v58 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v58;
    }
  }
}

char *sub_17BCC7C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17BBE34(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17BCD0C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17BAEC0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_17BCD9C(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 104);
    *uint64_t v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 108);
    *uint64_t v4 = 24;
    v4[1] = v10;
    v4 += 2;
    if ((v6 & 2) == 0)
    {
LABEL_12:
      if ((v6 & 0x80) == 0) {
        goto LABEL_24;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x80) == 0) {
    goto LABEL_24;
  }
LABEL_18:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v11 = *(int *)(a1 + 112);
  *uint64_t v4 = 40;
  v4[1] = v11;
  if (v11 > 0x7F)
  {
    v4[1] = v11 | 0x80;
    unint64_t v12 = v11 >> 7;
    v4[2] = v11 >> 7;
    v4 += 3;
    if (v11 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v13 = v12 >> 14;
        v12 >>= 7;
        *v4++ = v12;
      }
      while (v13);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_24:
  int v14 = *(_DWORD *)(a1 + 32);
  if (v14)
  {
    for (int i = 0; i != v14; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v16 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 50;
      unsigned int v17 = *(_DWORD *)(v16 + 20);
      v4[1] = v17;
      if (v17 > 0x7F) {
        int v18 = sub_188A9CC(v17, v4 + 1);
      }
      else {
        int v18 = v4 + 2;
      }
      uint64_t v4 = sub_17BC0F8(v16, (unint64_t)v18, a3);
    }
  }
  int v19 = *(_DWORD *)(a1 + 56);
  if (v19)
  {
    for (int j = 0; j != v19; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v21 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *uint64_t v4 = 58;
      unsigned int v22 = *(_DWORD *)(v21 + 20);
      v4[1] = v22;
      if (v22 > 0x7F) {
        unint64_t v23 = sub_188A9CC(v22, v4 + 1);
      }
      else {
        unint64_t v23 = v4 + 2;
      }
      uint64_t v4 = sub_17BC0F8(v21, (unint64_t)v23, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    uint64_t v4 = sub_117A0AC(a3, 8, (const void **)(*(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 8) == 0)
    {
LABEL_42:
      if ((v6 & 0x40) == 0) {
        goto LABEL_54;
      }
      goto LABEL_51;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_42;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v24 = *(void *)(a1 + 96);
  *uint64_t v4 = 74;
  unsigned int v25 = *(_DWORD *)(v24 + 20);
  v4[1] = v25;
  if (v25 > 0x7F) {
    unint64_t v26 = sub_188A9CC(v25, v4 + 1);
  }
  else {
    unint64_t v26 = v4 + 2;
  }
  uint64_t v4 = sub_17BB48C(v24, (unint64_t)v26, a3);
  if ((v6 & 0x40) != 0)
  {
LABEL_51:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v27 = *(unsigned char *)(a1 + 109);
    *uint64_t v4 = 80;
    v4[1] = v27;
    v4 += 2;
  }
LABEL_54:
  uint64_t v28 = *(void *)(a1 + 8);
  if ((v28 & 1) == 0) {
    return v4;
  }
  unint64_t v30 = v28 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v30 + 31) < 0)
  {
    uint64_t v31 = *(void **)(v30 + 8);
    uint64_t v32 = *(void *)(v30 + 16);
  }
  else
  {
    uint64_t v31 = (void *)(v30 + 8);
    LODWORD(v32) = *(unsigned __int8 *)(v30 + 31);
  }
  if (*a3 - (void)v4 >= (int)v32)
  {
    uint64_t v33 = (int)v32;
    memcpy(v4, v31, (int)v32);
    v4 += v33;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v31, v32, v4);
}

uint64_t sub_17BD1AC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x10) != 0) {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 104) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else {
    uint64_t v2 = 0;
  }
  uint64_t v3 = *(int *)(a1 + 32);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 40);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_17BC350(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 56);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 64);
  if (v12) {
    unint64_t v13 = (uint64_t *)(v12 + 8);
  }
  else {
    unint64_t v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_17BC350(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  int v17 = *(_DWORD *)(a1 + 16);
  if ((v17 & 0xF) == 0) {
    goto LABEL_22;
  }
  if ((v17 & 1) == 0)
  {
    if ((v17 & 2) == 0) {
      goto LABEL_19;
    }
LABEL_38:
    unint64_t v28 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v29 = *(unsigned __int8 *)(v28 + 23);
    uint64_t v30 = *(void *)(v28 + 8);
    if ((v29 & 0x80u) == 0) {
      uint64_t v30 = v29;
    }
    v11 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v17 & 4) == 0)
    {
LABEL_20:
      if ((v17 & 8) == 0) {
        goto LABEL_22;
      }
      goto LABEL_21;
    }
    goto LABEL_41;
  }
  unint64_t v25 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v26 = *(unsigned __int8 *)(v25 + 23);
  uint64_t v27 = *(void *)(v25 + 8);
  if ((v26 & 0x80u) == 0) {
    uint64_t v27 = v26;
  }
  v11 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v17 & 2) != 0) {
    goto LABEL_38;
  }
LABEL_19:
  if ((v17 & 4) == 0) {
    goto LABEL_20;
  }
LABEL_41:
  unint64_t v31 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v32 = *(unsigned __int8 *)(v31 + 23);
  uint64_t v33 = *(void *)(v31 + 8);
  if ((v32 & 0x80u) == 0) {
    uint64_t v33 = v32;
  }
  v11 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v17 & 8) != 0)
  {
LABEL_21:
    uint64_t v18 = sub_17BB8FC(*(void *)(a1 + 96));
    v11 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_22:
  if ((v17 & 0xE0) != 0)
  {
    uint64_t v19 = v11 + 2;
    if ((v17 & 0x20) == 0) {
      uint64_t v19 = v11;
    }
    if ((v17 & 0x40) != 0) {
      uint64_t v11 = v19 + 2;
    }
    else {
      uint64_t v11 = v19;
    }
    if ((v17 & 0x80) != 0)
    {
      int v20 = *(_DWORD *)(a1 + 112);
      uint64_t v21 = ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v20 >= 0) {
        uint64_t v22 = v21;
      }
      else {
        uint64_t v22 = 11;
      }
      v11 += v22;
    }
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if (v23)
  {
    unint64_t v34 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v34 + 31) < 0) {
      uint64_t v35 = *(void *)(v34 + 16);
    }
    else {
      uint64_t v35 = *(unsigned __int8 *)(v34 + 31);
    }
    v11 += v35;
  }
  *(_DWORD *)(a1 + 20) = v11;
  return v11;
}

std::string *sub_17BD444(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    int v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_1878D40(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = sub_1878D40(v3 + 2, v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2] - LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    unint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *unint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v14)
  {
    if (v14)
    {
      uint64_t v16 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v18 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v18 = (uint64_t *)*v18;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[3], v16, v18);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_28;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    uint64_t v19 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v20 = v3->__r_.__value_.__l.__size_;
    uint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      uint64_t v21 = (uint64_t *)*v21;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__l.__size_, v19, v21);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_31;
    }
LABEL_28:
    uint64_t v22 = (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v23 = v3->__r_.__value_.__l.__size_;
    uint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      uint64_t v24 = (uint64_t *)*v24;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__r.__words[2], v22, v24);
    if ((v14 & 8) == 0)
    {
LABEL_12:
      if ((v14 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_39;
    }
LABEL_31:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    data = (std::string *)v3[4].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type v26 = v3->__r_.__value_.__l.__size_;
      uint64_t v27 = (void *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
      if (v26) {
        uint64_t v27 = (void *)*v27;
      }
      sub_1831FC8((uint64_t)v27);
      v3[4].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 96)) {
      unint64_t v28 = *(uint64_t (****)())(a2 + 96);
    }
    else {
      unint64_t v28 = &off_254A608;
    }
    uint64_t result = sub_17BBB08(data, (uint64_t)v28);
    if ((v14 & 0x10) == 0)
    {
LABEL_13:
      if ((v14 & 0x20) == 0) {
        goto LABEL_14;
      }
      goto LABEL_40;
    }
LABEL_39:
    LODWORD(v3[4].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 104);
    if ((v14 & 0x20) == 0)
    {
LABEL_14:
      if ((v14 & 0x40) == 0) {
        goto LABEL_15;
      }
      goto LABEL_41;
    }
LABEL_40:
    v3[4].__r_.__value_.__s.__data_[12] = *(unsigned char *)(a2 + 108);
    if ((v14 & 0x40) == 0)
    {
LABEL_15:
      if ((v14 & 0x80) == 0)
      {
LABEL_17:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v14;
        goto LABEL_18;
      }
LABEL_16:
      LODWORD(v3[4].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 112);
      goto LABEL_17;
    }
LABEL_41:
    v3[4].__r_.__value_.__s.__data_[13] = *(unsigned char *)(a2 + 109);
    if ((v14 & 0x80) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_18:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_17BD6C8(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 16) >> 4) & 1;
}

void *sub_17BD6D4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.QueryUnderstandingResult.IconMapping");
}

uint64_t sub_17BD6E4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17BD79C(uint64_t a1)
{
  sub_17BD6E4(a1);

  operator delete();
}

uint64_t sub_17BD7D4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_17BD850(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)std::string::size_type v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)std::string::size_type v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        int v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v16 = (uint64_t *)*v16;
      }
      int v17 = (void *)(a1 + 24);
LABEL_27:
      uint64_t v19 = (std::string *)sub_1880F84(v17, v16);
      int v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v20;
    }
    int v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)std::string::size_type v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)std::string::size_type v20 = 0;
  return *(void *)v20;
}

char *sub_17BD9F8(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_17BDAE4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_17BDBC0()
{
  return 1;
}

void *sub_17BDBC8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.QueryUnderstandingResult.LocalizedQueryUnderstandingTaxonomyResultItemBrand.BusinessConnectAttributes");
}

void *sub_17BDBD8(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_17BDC8C((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DE8(a1 + 15);
  sub_18776B8(a1 + 12);
  sub_1889DE8(a1 + 9);
  sub_18776B8(a1 + 6);
  sub_1889DE8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_17BDC8C(uint64_t a1)
{
  unint64_t v3 = *(uint64_t **)(a1 + 144);
  uint64_t v2 = (void ***)(a1 + 144);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 152) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 152));
  }
  if (*(uint64_t **)(a1 + 160) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 160));
  }
  if (*(uint64_t **)(a1 + 168) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 168));
  }
  uint64_t result = (void ***)(a1 + 176);
  if (*(uint64_t **)(a1 + 176) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_254A6F8)
  {
    if (*(void *)(a1 + 184))
    {
      sub_15B2C44();
      operator delete();
    }
    uint64_t v5 = *(void **)(a1 + 192);
    if (v5)
    {
      sub_17928A0(v5);
      operator delete();
    }
    unint64_t v6 = *(void **)(a1 + 200);
    if (v6)
    {
      sub_17928A0(v6);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 208);
    if (result)
    {
      sub_17BD6E4((uint64_t)result);
      operator delete();
    }
  }
  return result;
}

void sub_17BDDC0(void *a1)
{
  sub_17BDBD8(a1);

  operator delete();
}

uint64_t sub_17BDDF8(uint64_t a1)
{
  sub_188CC00(a1 + 24);
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_17BC570(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 56) = 0;
  }
  sub_188CC00(a1 + 72);
  uint64_t v5 = *(unsigned int *)(a1 + 104);
  if ((int)v5 >= 1)
  {
    unint64_t v6 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_17BC570(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 104) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 120);
  int v9 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v9) {
    goto LABEL_19;
  }
  if ((v9 & 1) == 0)
  {
    if ((v9 & 2) == 0) {
      goto LABEL_12;
    }
LABEL_31:
    unint64_t v13 = *(void *)(a1 + 152) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v13 + 23) < 0)
    {
      **(unsigned char **)unint64_t v13 = 0;
      *(void *)(v13 + 8) = 0;
      if ((v9 & 4) != 0) {
        goto LABEL_35;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v13 = 0;
      *(unsigned char *)(v13 + 23) = 0;
      if ((v9 & 4) != 0) {
        goto LABEL_35;
      }
    }
LABEL_13:
    if ((v9 & 8) == 0) {
      goto LABEL_14;
    }
LABEL_39:
    unint64_t v15 = *(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v15 + 23) < 0)
    {
      **(unsigned char **)unint64_t v15 = 0;
      *(void *)(v15 + 8) = 0;
      if ((v9 & 0x10) != 0) {
        goto LABEL_43;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v15 = 0;
      *(unsigned char *)(v15 + 23) = 0;
      if ((v9 & 0x10) != 0) {
        goto LABEL_43;
      }
    }
LABEL_15:
    if ((v9 & 0x20) == 0) {
      goto LABEL_16;
    }
LABEL_47:
    uint64_t result = sub_15B2C80(*(void *)(a1 + 184));
    if ((v9 & 0x40) == 0)
    {
LABEL_17:
      if ((v9 & 0x80) == 0) {
        goto LABEL_19;
      }
      goto LABEL_18;
    }
    goto LABEL_48;
  }
  unint64_t v12 = *(void *)(a1 + 144) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v12 + 23) < 0)
  {
    **(unsigned char **)unint64_t v12 = 0;
    *(void *)(v12 + 8) = 0;
    if ((v9 & 2) != 0) {
      goto LABEL_31;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v12 = 0;
    *(unsigned char *)(v12 + 23) = 0;
    if ((v9 & 2) != 0) {
      goto LABEL_31;
    }
  }
LABEL_12:
  if ((v9 & 4) == 0) {
    goto LABEL_13;
  }
LABEL_35:
  unint64_t v14 = *(void *)(a1 + 160) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v14 + 23) < 0)
  {
    **(unsigned char **)unint64_t v14 = 0;
    *(void *)(v14 + 8) = 0;
    if ((v9 & 8) != 0) {
      goto LABEL_39;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v14 = 0;
    *(unsigned char *)(v14 + 23) = 0;
    if ((v9 & 8) != 0) {
      goto LABEL_39;
    }
  }
LABEL_14:
  if ((v9 & 0x10) == 0) {
    goto LABEL_15;
  }
LABEL_43:
  unint64_t v16 = *(void *)(a1 + 176) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v16 + 23) < 0)
  {
    **(unsigned char **)unint64_t v16 = 0;
    *(void *)(v16 + 8) = 0;
    if ((v9 & 0x20) != 0) {
      goto LABEL_47;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v16 = 0;
    *(unsigned char *)(v16 + 23) = 0;
    if ((v9 & 0x20) != 0) {
      goto LABEL_47;
    }
  }
LABEL_16:
  if ((v9 & 0x40) == 0) {
    goto LABEL_17;
  }
LABEL_48:
  uint64_t result = sub_1792958(*(void *)(a1 + 192));
  if ((v9 & 0x80) != 0) {
LABEL_18:
  }
    uint64_t result = sub_1792958(*(void *)(a1 + 200));
LABEL_19:
  if ((v9 & 0x100) != 0) {
    uint64_t result = sub_17BD7D4(*(void *)(a1 + 208));
  }
  if ((v9 & 0xE00) != 0)
  {
    *(void *)(a1 + 216) = 0;
    *(void *)(a1 + 224) = 0;
    *(unsigned char *)(a1 + 232) = 0;
  }
  char v11 = *(unsigned char *)(a1 + 8);
  uint64_t v10 = a1 + 8;
  *(_DWORD *)(v10 + 8) = 0;
  if (v11)
  {
    return sub_188B4AC((uint64_t *)v10);
  }
  return result;
}

uint64_t sub_17BE014(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v81 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v81, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (uint64_t **)(a1 + 120);
  int v80 = (uint64_t *)(a1 + 8);
  uint64_t v8 = (uint64_t **)(a1 + 72);
  int v9 = (uint64_t **)(a1 + 24);
  while (2)
  {
    uint64_t v10 = (unsigned __int8 *)(*(void *)v81 + 1);
    unsigned int v11 = **(unsigned char **)v81;
    if ((char)**(unsigned char **)v81 < 0)
    {
      unsigned int v12 = v11 + (*v10 << 7);
      unsigned int v11 = v12 - 128;
      if ((char)*v10 < 0)
      {
        uint64_t v10 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v81, v12 - 128);
        unsigned int v11 = v13;
      }
      else
      {
        uint64_t v10 = (unsigned __int8 *)(*(void *)v81 + 2);
      }
    }
    *(void *)uint64_t v81 = v10;
    switch(v11 >> 3)
    {
      case 1u:
        if (v11 != 8) {
          goto LABEL_125;
        }
        v5 |= 0x200u;
        unint64_t v14 = (char *)(v10 + 1);
        uint64_t v15 = *v10;
        if (((char)*v10 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v16 = *v14;
        uint64_t v15 = v15 + (v16 << 7) - 128;
        if ((v16 & 0x80000000) == 0)
        {
          unint64_t v14 = (char *)(v10 + 2);
LABEL_13:
          *(void *)uint64_t v81 = v14;
          *(void *)(a1 + 216) = v15;
          goto LABEL_133;
        }
        uint64_t v74 = sub_188C138((uint64_t)v10, v15);
        *(void *)uint64_t v81 = v74;
        *(void *)(a1 + 216) = v75;
        if (v74) {
          goto LABEL_133;
        }
        goto LABEL_144;
      case 2u:
        if (v11 != 18) {
          goto LABEL_125;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          uint64_t v18 = (uint64_t *)*v18;
        }
        uint64_t v19 = (void *)(a1 + 144);
        goto LABEL_89;
      case 3u:
        if (v11 != 26) {
          goto LABEL_125;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v20 = *(void *)(a1 + 8);
        uint64_t v18 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
        if (v20) {
          uint64_t v18 = (uint64_t *)*v18;
        }
        uint64_t v19 = (void *)(a1 + 152);
        goto LABEL_89;
      case 4u:
        if (v11 != 34) {
          goto LABEL_125;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v21 = *(void **)(a1 + 184);
        if (!v21)
        {
          uint64_t v22 = (void *)(*v80 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v80) {
            uint64_t v22 = (void *)*v22;
          }
          uint64_t v21 = sub_15C1B30((uint64_t)v22);
          *(void *)(a1 + 184) = v21;
          uint64_t v10 = *(unsigned __int8 **)v81;
        }
        uint64_t v23 = sub_125CF74(a3, (uint64_t)v21, v10);
        goto LABEL_132;
      case 5u:
        if (v11 != 42) {
          goto LABEL_125;
        }
        uint64_t v24 = (const std::string::value_type *)(v10 - 1);
        while (1)
        {
          unint64_t v25 = (char *)(v24 + 1);
          *(void *)uint64_t v81 = v24 + 1;
          std::string::size_type v26 = *(_DWORD **)(a1 + 40);
          if (v26 && (uint64_t v27 = *(int *)(a1 + 32), (int)v27 < *v26))
          {
            *(_DWORD *)(a1 + 32) = v27 + 1;
            unint64_t v28 = *(std::string **)&v26[2 * v27 + 2];
          }
          else
          {
            if (!*v9) {
              operator new();
            }
            void *v30 = v29;
            v30[1] = sub_3A6EDC;
            *uint64_t v29 = 0;
            v29[1] = 0;
            v29[2] = 0;
            unint64_t v28 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v29);
            unint64_t v25 = *(char **)v81;
          }
          uint64_t v24 = sub_188C244(v28, v25, (uint64_t)a3);
          *(void *)uint64_t v81 = v24;
          if (!v24) {
            goto LABEL_144;
          }
          if (*(void *)a3 <= (unint64_t)v24 || *v24 != 42) {
            goto LABEL_133;
          }
        }
      case 6u:
        if (v11 != 50) {
          goto LABEL_125;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v31 = *(void *)(a1 + 8);
        uint64_t v18 = (uint64_t *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
        if (v31) {
          uint64_t v18 = (uint64_t *)*v18;
        }
        uint64_t v19 = (void *)(a1 + 160);
        goto LABEL_89;
      case 7u:
        if (v11 != 56) {
          goto LABEL_125;
        }
        v5 |= 0x800u;
        uint64_t v32 = (char *)(v10 + 1);
        uint64_t v33 = *v10;
        if (((char)*v10 & 0x80000000) == 0) {
          goto LABEL_48;
        }
        int v34 = *v32;
        uint64_t v33 = v33 + (v34 << 7) - 128;
        if (v34 < 0)
        {
          uint64_t v76 = sub_188C138((uint64_t)v10, v33);
          *(void *)uint64_t v81 = v76;
          *(unsigned char *)(a1 + 232) = v77 != 0;
          if (!v76) {
            goto LABEL_144;
          }
        }
        else
        {
          uint64_t v32 = (char *)(v10 + 2);
LABEL_48:
          *(void *)uint64_t v81 = v32;
          *(unsigned char *)(a1 + 232) = v33 != 0;
        }
        goto LABEL_133;
      case 8u:
        if (v11 != 64) {
          goto LABEL_125;
        }
        v5 |= 0x400u;
        uint64_t v35 = (char *)(v10 + 1);
        uint64_t v36 = *v10;
        if (((char)*v10 & 0x80000000) == 0) {
          goto LABEL_53;
        }
        int v37 = *v35;
        uint64_t v36 = v36 + (v37 << 7) - 128;
        if (v37 < 0)
        {
          uint64_t v78 = sub_188C138((uint64_t)v10, v36);
          *(void *)uint64_t v81 = v78;
          *(void *)(a1 + 224) = v79;
          if (!v78) {
            goto LABEL_144;
          }
        }
        else
        {
          uint64_t v35 = (char *)(v10 + 2);
LABEL_53:
          *(void *)uint64_t v81 = v35;
          *(void *)(a1 + 224) = v36;
        }
        goto LABEL_133;
      case 9u:
        if (v11 != 74) {
          goto LABEL_125;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v38 = *(void *)(a1 + 8);
        uint64_t v18 = (uint64_t *)(v38 & 0xFFFFFFFFFFFFFFFCLL);
        if (v38) {
          uint64_t v18 = (uint64_t *)*v18;
        }
        uint64_t v19 = (void *)(a1 + 168);
        goto LABEL_89;
      case 0xAu:
        if (v11 != 82) {
          goto LABEL_125;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v39 = *(void *)(a1 + 192);
        if (v39) {
          goto LABEL_106;
        }
        BOOL v40 = (void *)(*v80 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v80) {
          BOOL v40 = (void *)*v40;
        }
        uint64_t v39 = sub_1830344((uint64_t)v40);
        *(void *)(a1 + 192) = v39;
        goto LABEL_105;
      case 0xBu:
        if (v11 != 90) {
          goto LABEL_125;
        }
        uint64_t v41 = v10 - 1;
        while (1)
        {
          uint64_t v42 = v41 + 1;
          *(void *)uint64_t v81 = v41 + 1;
          unint64_t v43 = *(_DWORD **)(a1 + 64);
          if (v43 && (uint64_t v44 = *(int *)(a1 + 56), (int)v44 < *v43))
          {
            *(_DWORD *)(a1 + 56) = v44 + 1;
            uint64_t v45 = *(void *)&v43[2 * v44 + 2];
          }
          else
          {
            uint64_t v46 = sub_18320D0(*(void *)(a1 + 48));
            uint64_t v45 = sub_188CDC8(a1 + 48, v46);
            uint64_t v42 = *(unsigned __int8 **)v81;
          }
          uint64_t v41 = (unsigned __int8 *)sub_17BE904(a3, v45, v42);
          *(void *)uint64_t v81 = v41;
          if (!v41) {
            goto LABEL_144;
          }
          if (*(void *)a3 <= (unint64_t)v41 || *v41 != 90) {
            goto LABEL_133;
          }
        }
      case 0xCu:
        if (v11 != 98) {
          goto LABEL_125;
        }
        int v47 = (const std::string::value_type *)(v10 - 1);
        while (1)
        {
          BOOL v48 = (char *)(v47 + 1);
          *(void *)uint64_t v81 = v47 + 1;
          uint64_t v49 = *(_DWORD **)(a1 + 88);
          if (v49 && (uint64_t v50 = *(int *)(a1 + 80), (int)v50 < *v49))
          {
            *(_DWORD *)(a1 + 80) = v50 + 1;
            int v51 = *(std::string **)&v49[2 * v50 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            *uint64_t v53 = v52;
            v53[1] = sub_3A6EDC;
            *uint64_t v52 = 0;
            v52[1] = 0;
            v52[2] = 0;
            int v51 = (std::string *)sub_188CDC8(a1 + 72, (uint64_t)v52);
            BOOL v48 = *(char **)v81;
          }
          int v47 = sub_188C244(v51, v48, (uint64_t)a3);
          *(void *)uint64_t v81 = v47;
          if (!v47) {
            goto LABEL_144;
          }
          if (*(void *)a3 <= (unint64_t)v47 || *v47 != 98) {
            goto LABEL_133;
          }
        }
      case 0xDu:
        if (v11 != 106) {
          goto LABEL_125;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v54 = *(void *)(a1 + 8);
        uint64_t v18 = (uint64_t *)(v54 & 0xFFFFFFFFFFFFFFFCLL);
        if (v54) {
          uint64_t v18 = (uint64_t *)*v18;
        }
        uint64_t v19 = (void *)(a1 + 176);
LABEL_89:
        uint64_t v55 = (std::string *)sub_1880F84(v19, v18);
        uint64_t v23 = (uint64_t)sub_188C244(v55, *(char **)v81, (uint64_t)a3);
        goto LABEL_132;
      case 0xEu:
        if (v11 != 114) {
          goto LABEL_125;
        }
        uint64_t v56 = v10 - 1;
        while (1)
        {
          uint64_t v57 = v56 + 1;
          *(void *)uint64_t v81 = v56 + 1;
          uint64_t v58 = *(_DWORD **)(a1 + 112);
          if (v58 && (uint64_t v59 = *(int *)(a1 + 104), (int)v59 < *v58))
          {
            *(_DWORD *)(a1 + 104) = v59 + 1;
            uint64_t v60 = *(void *)&v58[2 * v59 + 2];
          }
          else
          {
            uint64_t v61 = sub_18320D0(*(void *)(a1 + 96));
            uint64_t v60 = sub_188CDC8(a1 + 96, v61);
            uint64_t v57 = *(unsigned __int8 **)v81;
          }
          uint64_t v56 = (unsigned __int8 *)sub_17BE904(a3, v60, v57);
          *(void *)uint64_t v81 = v56;
          if (!v56) {
            goto LABEL_144;
          }
          if (*(void *)a3 <= (unint64_t)v56 || *v56 != 114) {
            goto LABEL_133;
          }
        }
      case 0xFu:
        if (v11 != 122) {
          goto LABEL_125;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v39 = *(void *)(a1 + 200);
        if (v39) {
          goto LABEL_106;
        }
        int v62 = (void *)(*v80 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v80) {
          int v62 = (void *)*v62;
        }
        uint64_t v39 = sub_1830344((uint64_t)v62);
        *(void *)(a1 + 200) = v39;
LABEL_105:
        uint64_t v10 = *(unsigned __int8 **)v81;
LABEL_106:
        uint64_t v23 = (uint64_t)sub_179CFFC(a3, v39, v10);
        goto LABEL_132;
      case 0x10u:
        if (v11 != 130) {
          goto LABEL_125;
        }
        uint64_t v63 = (const std::string::value_type *)(v10 - 2);
        while (1)
        {
          uint64_t v64 = (char *)(v63 + 2);
          *(void *)uint64_t v81 = v63 + 2;
          unint64_t v65 = *(_DWORD **)(a1 + 136);
          if (v65 && (uint64_t v66 = *(int *)(a1 + 128), (int)v66 < *v65))
          {
            *(_DWORD *)(a1 + 128) = v66 + 1;
            uint64_t v67 = *(std::string **)&v65[2 * v66 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *uint64_t v69 = v68;
            v69[1] = sub_3A6EDC;
            *uint64_t v68 = 0;
            v68[1] = 0;
            v68[2] = 0;
            uint64_t v67 = (std::string *)sub_188CDC8(a1 + 120, (uint64_t)v68);
            uint64_t v64 = *(char **)v81;
          }
          uint64_t v63 = sub_188C244(v67, v64, (uint64_t)a3);
          *(void *)uint64_t v81 = v63;
          if (!v63) {
            goto LABEL_144;
          }
          if (*(void *)a3 <= (unint64_t)v63 || *(_WORD *)v63 != 386) {
            goto LABEL_133;
          }
        }
      case 0x11u:
        if (v11 != 138) {
          goto LABEL_125;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        unint64_t v70 = *(void **)(a1 + 208);
        if (!v70)
        {
          uint64_t v71 = (void *)(*v80 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v80) {
            uint64_t v71 = (void *)*v71;
          }
          unint64_t v70 = sub_1832190((uint64_t)v71);
          *(void *)(a1 + 208) = v70;
          uint64_t v10 = *(unsigned __int8 **)v81;
        }
        uint64_t v23 = sub_17BE994(a3, (uint64_t)v70, v10);
        goto LABEL_132;
      default:
LABEL_125:
        if (v11) {
          BOOL v72 = (v11 & 7) == 4;
        }
        else {
          BOOL v72 = 1;
        }
        if (!v72)
        {
          if (*v80)
          {
            BOOL v73 = (std::string *)((*v80 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            BOOL v73 = (std::string *)sub_188DBD8(v80);
            uint64_t v10 = *(unsigned __int8 **)v81;
          }
          uint64_t v23 = (uint64_t)sub_1885AC0(v11, v73, (char *)v10, a3);
LABEL_132:
          *(void *)uint64_t v81 = v23;
          if (!v23) {
            goto LABEL_144;
          }
LABEL_133:
          if (sub_11947B8((uint64_t)a3, (char **)v81, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v10) {
          a3[10].i32[0] = v11 - 1;
        }
        else {
LABEL_144:
        }
          *(void *)uint64_t v81 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v81;
    }
  }
}

uint64_t sub_17BE904(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17BC6E8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_17BE994(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17BD850(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17BEA24(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 216);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 144) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 0x20) == 0) {
        goto LABEL_20;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 152) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0) {
    goto LABEL_20;
  }
LABEL_14:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 184);
  *uint64_t v4 = 34;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    unsigned int v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    unsigned int v12 = v4 + 2;
  }
  uint64_t v4 = sub_15B2EA4(v10, v12, a3);
LABEL_20:
  uint64_t v13 = *(unsigned int *)(a1 + 32);
  if ((int)v13 >= 1)
  {
    uint64_t v14 = 0;
    uint64_t v15 = 8 * v13;
    do
    {
      int v16 = *(void **)(*(void *)(a1 + 40) + v14 + 8);
      if (*((char *)v16 + 23) < 0)
      {
        int64_t v17 = v16[1];
        if (v17 > 127) {
          goto LABEL_31;
        }
      }
      else
      {
        int64_t v17 = *((unsigned __int8 *)v16 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v17)
      {
        *uint64_t v4 = 42;
        v4[1] = v17;
        if (*((char *)v16 + 23) < 0) {
          int v16 = (void *)*v16;
        }
        uint64_t v18 = v4 + 2;
        memcpy(v18, v16, v17);
        uint64_t v4 = &v18[v17];
        goto LABEL_29;
      }
LABEL_31:
      uint64_t v4 = (char *)sub_188A868(a3, 5, (uint64_t)v16, v4);
LABEL_29:
      v14 += 8;
    }
    while (v15 != v14);
  }
  if ((v6 & 4) != 0)
  {
    uint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 160) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 0x800) == 0)
    {
LABEL_34:
      if ((v6 & 0x400) == 0) {
        goto LABEL_46;
      }
      goto LABEL_40;
    }
  }
  else if ((v6 & 0x800) == 0)
  {
    goto LABEL_34;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v19 = *(unsigned char *)(a1 + 232);
  *uint64_t v4 = 56;
  v4[1] = v19;
  v4 += 2;
  if ((v6 & 0x400) != 0)
  {
LABEL_40:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v20 = *(void *)(a1 + 224);
    *uint64_t v4 = 64;
    v4[1] = v20;
    if (v20 > 0x7F)
    {
      v4[1] = v20 | 0x80;
      unint64_t v21 = v20 >> 7;
      v4[2] = v20 >> 7;
      v4 += 3;
      if (v20 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v22 = v21 >> 14;
          v21 >>= 7;
          *v4++ = v21;
        }
        while (v22);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_46:
  if ((v6 & 8) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 9, (const void **)(*(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v23 = *(void *)(a1 + 192);
    *uint64_t v4 = 82;
    unsigned int v24 = *(_DWORD *)(v23 + 40);
    v4[1] = v24;
    if (v24 > 0x7F) {
      unint64_t v25 = sub_188A9CC(v24, v4 + 1);
    }
    else {
      unint64_t v25 = v4 + 2;
    }
    uint64_t v4 = sub_1792B74(v23, v25, a3);
  }
  int v26 = *(_DWORD *)(a1 + 56);
  if (v26)
  {
    for (int i = 0; i != v26; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v28 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *uint64_t v4 = 90;
      unsigned int v29 = *(_DWORD *)(v28 + 20);
      v4[1] = v29;
      if (v29 > 0x7F) {
        uint64_t v30 = sub_188A9CC(v29, v4 + 1);
      }
      else {
        uint64_t v30 = v4 + 2;
      }
      uint64_t v4 = sub_17BCD9C(v28, v30, a3);
    }
  }
  uint64_t v31 = *(unsigned int *)(a1 + 80);
  if ((int)v31 >= 1)
  {
    uint64_t v32 = 0;
    uint64_t v33 = 8 * v31;
    do
    {
      int v34 = *(void **)(*(void *)(a1 + 88) + v32 + 8);
      if (*((char *)v34 + 23) < 0)
      {
        int64_t v35 = v34[1];
        if (v35 > 127) {
          goto LABEL_74;
        }
      }
      else
      {
        int64_t v35 = *((unsigned __int8 *)v34 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v35)
      {
        *uint64_t v4 = 98;
        v4[1] = v35;
        if (*((char *)v34 + 23) < 0) {
          int v34 = (void *)*v34;
        }
        uint64_t v36 = v4 + 2;
        memcpy(v36, v34, v35);
        uint64_t v4 = &v36[v35];
        goto LABEL_72;
      }
LABEL_74:
      uint64_t v4 = (char *)sub_188A868(a3, 12, (uint64_t)v34, v4);
LABEL_72:
      v32 += 8;
    }
    while (v33 != v32);
  }
  if ((v6 & 0x10) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 13, (const void **)(*(void *)(a1 + 176) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v37 = *(_DWORD *)(a1 + 104);
  if (v37)
  {
    for (int j = 0; j != v37; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v39 = *(void *)(*(void *)(a1 + 112) + 8 * j + 8);
      *uint64_t v4 = 114;
      unsigned int v40 = *(_DWORD *)(v39 + 20);
      v4[1] = v40;
      if (v40 > 0x7F) {
        uint64_t v41 = sub_188A9CC(v40, v4 + 1);
      }
      else {
        uint64_t v41 = v4 + 2;
      }
      uint64_t v4 = sub_17BCD9C(v39, v41, a3);
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v42 = *(void *)(a1 + 200);
    *uint64_t v4 = 122;
    unsigned int v43 = *(_DWORD *)(v42 + 40);
    v4[1] = v43;
    if (v43 > 0x7F) {
      uint64_t v44 = sub_188A9CC(v43, v4 + 1);
    }
    else {
      uint64_t v44 = v4 + 2;
    }
    uint64_t v4 = sub_1792B74(v42, v44, a3);
  }
  uint64_t v45 = *(unsigned int *)(a1 + 128);
  if ((int)v45 >= 1)
  {
    uint64_t v46 = 0;
    uint64_t v47 = 8 * v45;
    do
    {
      BOOL v48 = *(void **)(*(void *)(a1 + 136) + v46 + 8);
      if (*((char *)v48 + 23) < 0)
      {
        int64_t v49 = v48[1];
        if (v49 > 127) {
          goto LABEL_103;
        }
      }
      else
      {
        int64_t v49 = *((unsigned __int8 *)v48 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v49)
      {
        *(_WORD *)uint64_t v4 = 386;
        v4[2] = v49;
        if (*((char *)v48 + 23) < 0) {
          BOOL v48 = (void *)*v48;
        }
        uint64_t v50 = v4 + 3;
        memcpy(v50, v48, v49);
        uint64_t v4 = &v50[v49];
        goto LABEL_101;
      }
LABEL_103:
      uint64_t v4 = (char *)sub_188A868(a3, 16, (uint64_t)v48, v4);
LABEL_101:
      v46 += 8;
    }
    while (v47 != v46);
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v51 = *(void *)(a1 + 208);
    *(_WORD *)uint64_t v4 = 394;
    unsigned int v52 = *(_DWORD *)(v51 + 20);
    v4[2] = v52;
    if (v52 > 0x7F) {
      uint64_t v53 = sub_188A9CC(v52, v4 + 2);
    }
    else {
      uint64_t v53 = v4 + 3;
    }
    uint64_t v4 = sub_17BD9F8(v51, v53, a3);
  }
  uint64_t v54 = *(void *)(a1 + 8);
  if ((v54 & 1) == 0) {
    return v4;
  }
  unint64_t v56 = v54 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v56 + 31) < 0)
  {
    uint64_t v57 = *(void **)(v56 + 8);
    uint64_t v58 = *(void *)(v56 + 16);
  }
  else
  {
    uint64_t v57 = (void *)(v56 + 8);
    LODWORD(v58) = *(unsigned __int8 *)(v56 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v58)
  {
    uint64_t v59 = (int)v58;
    memcpy(v4, v57, (int)v58);
    v4 += v59;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v57, v58, v4);
}

uint64_t sub_17BF160(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    unint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_17BD1AC(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(unsigned int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  if ((int)v15 >= 1)
  {
    int64_t v17 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v18 = *v17++;
      uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
      uint64_t v20 = *(void *)(v18 + 8);
      if ((v19 & 0x80u) == 0) {
        uint64_t v20 = v19;
      }
      v16 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6);
      --v15;
    }
    while (v15);
  }
  uint64_t v21 = *(int *)(a1 + 104);
  uint64_t v22 = v16 + v21;
  uint64_t v23 = *(void *)(a1 + 112);
  if (v23) {
    unsigned int v24 = (uint64_t *)(v23 + 8);
  }
  else {
    unsigned int v24 = 0;
  }
  if (v21)
  {
    uint64_t v25 = 8 * v21;
    do
    {
      uint64_t v26 = *v24++;
      uint64_t v27 = sub_17BD1AC(v26);
      v22 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6);
      v25 -= 8;
    }
    while (v25);
  }
  uint64_t v28 = *(unsigned int *)(a1 + 128);
  uint64_t v29 = v22 + 2 * v28;
  if ((int)v28 >= 1)
  {
    uint64_t v30 = (uint64_t *)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v31 = *v30++;
      uint64_t v32 = *(unsigned __int8 *)(v31 + 23);
      uint64_t v33 = *(void *)(v31 + 8);
      if ((v32 & 0x80u) == 0) {
        uint64_t v33 = v32;
      }
      v29 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6);
      --v28;
    }
    while (v28);
  }
  int v34 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v34) {
    goto LABEL_40;
  }
  if (v34)
  {
    unint64_t v38 = *(void *)(a1 + 144) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v39 = *(unsigned __int8 *)(v38 + 23);
    uint64_t v40 = *(void *)(v38 + 8);
    if ((v39 & 0x80u) == 0) {
      uint64_t v40 = v39;
    }
    v29 += v40 + ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v34 & 2) == 0)
    {
LABEL_33:
      if ((v34 & 4) == 0) {
        goto LABEL_34;
      }
      goto LABEL_55;
    }
  }
  else if ((v34 & 2) == 0)
  {
    goto LABEL_33;
  }
  unint64_t v41 = *(void *)(a1 + 152) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v42 = *(unsigned __int8 *)(v41 + 23);
  uint64_t v43 = *(void *)(v41 + 8);
  if ((v42 & 0x80u) == 0) {
    uint64_t v43 = v42;
  }
  v29 += v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v34 & 4) == 0)
  {
LABEL_34:
    if ((v34 & 8) == 0) {
      goto LABEL_35;
    }
    goto LABEL_58;
  }
LABEL_55:
  unint64_t v44 = *(void *)(a1 + 160) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v45 = *(unsigned __int8 *)(v44 + 23);
  uint64_t v46 = *(void *)(v44 + 8);
  if ((v45 & 0x80u) == 0) {
    uint64_t v46 = v45;
  }
  v29 += v46 + ((9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v34 & 8) == 0)
  {
LABEL_35:
    if ((v34 & 0x10) == 0) {
      goto LABEL_36;
    }
    goto LABEL_61;
  }
LABEL_58:
  unint64_t v47 = *(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v48 = *(unsigned __int8 *)(v47 + 23);
  uint64_t v49 = *(void *)(v47 + 8);
  if ((v48 & 0x80u) == 0) {
    uint64_t v49 = v48;
  }
  v29 += v49 + ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v34 & 0x10) == 0)
  {
LABEL_36:
    if ((v34 & 0x20) == 0) {
      goto LABEL_37;
    }
LABEL_64:
    uint64_t v53 = sub_15B2F90(*(void *)(a1 + 184));
    v29 += v53 + ((9 * (__clz(v53 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v34 & 0x40) == 0)
    {
LABEL_38:
      if ((v34 & 0x80) == 0) {
        goto LABEL_40;
      }
      goto LABEL_39;
    }
    goto LABEL_65;
  }
LABEL_61:
  unint64_t v50 = *(void *)(a1 + 176) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v51 = *(unsigned __int8 *)(v50 + 23);
  uint64_t v52 = *(void *)(v50 + 8);
  if ((v51 & 0x80u) == 0) {
    uint64_t v52 = v51;
  }
  v29 += v52 + ((9 * (__clz(v52 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v34 & 0x20) != 0) {
    goto LABEL_64;
  }
LABEL_37:
  if ((v34 & 0x40) == 0) {
    goto LABEL_38;
  }
LABEL_65:
  uint64_t v54 = sub_1792CB8(*(void *)(a1 + 192));
  v29 += v54 + ((9 * (__clz(v54 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v34 & 0x80) != 0)
  {
LABEL_39:
    uint64_t v35 = sub_1792CB8(*(void *)(a1 + 200));
    v29 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_40:
  if ((v34 & 0xF00) == 0) {
    goto LABEL_47;
  }
  if ((v34 & 0x100) != 0)
  {
    uint64_t v55 = sub_17BDAE4(*(void *)(a1 + 208));
    v29 += v55 + ((9 * (__clz(v55 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v34 & 0x200) == 0)
    {
LABEL_43:
      if ((v34 & 0x400) == 0) {
        goto LABEL_45;
      }
      goto LABEL_44;
    }
  }
  else if ((v34 & 0x200) == 0)
  {
    goto LABEL_43;
  }
  v29 += ((9 * (__clz(*(void *)(a1 + 216) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v34 & 0x400) != 0) {
LABEL_44:
  }
    v29 += ((9 * (__clz(*(void *)(a1 + 224) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_45:
  if ((v34 & 0x800) != 0) {
    v29 += 2;
  }
LABEL_47:
  uint64_t v36 = *(void *)(a1 + 8);
  if (v36)
  {
    unint64_t v56 = v36 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v56 + 31) < 0) {
      uint64_t v57 = *(void *)(v56 + 16);
    }
    else {
      uint64_t v57 = *(unsigned __int8 *)(v56 + 31);
    }
    v29 += v57;
  }
  *(_DWORD *)(a1 + 20) = v29;
  return v29;
}

std::string *sub_17BF614(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unsigned int v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = (std::string *)sub_1878DBC((uint64_t *)&v3[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2]- LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (const std::string **)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4((uint64_t)&v3[3], *(_DWORD *)(a2 + 80));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[3], v16, v15, v14, *(_DWORD *)v3[3].__r_.__value_.__r.__words[2]- LODWORD(v3[3].__r_.__value_.__r.__words[1]));
    int v17 = LODWORD(v3[3].__r_.__value_.__r.__words[1]) + v14;
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) = v17;
    uint64_t v18 = (int *)v3[3].__r_.__value_.__r.__words[2];
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 104);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4((uint64_t)&v3[4], *(_DWORD *)(a2 + 104));
    uint64_t result = (std::string *)sub_1878DBC((uint64_t *)&v3[4], v21, v20, v19, *(_DWORD *)v3[4].__r_.__value_.__r.__words[2]- LODWORD(v3[4].__r_.__value_.__r.__words[1]));
    int v22 = LODWORD(v3[4].__r_.__value_.__r.__words[1]) + v19;
    LODWORD(v3[4].__r_.__value_.__r.__words[1]) = v22;
    uint64_t v23 = (int *)v3[4].__r_.__value_.__r.__words[2];
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 128);
  if (v24)
  {
    uint64_t v25 = (const std::string **)(*(void *)(a2 + 136) + 8);
    uint64_t v26 = (std::string **)sub_188CCE4((uint64_t)&v3[5], *(_DWORD *)(a2 + 128));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[5], v26, v25, v24, *(_DWORD *)v3[5].__r_.__value_.__r.__words[2]- LODWORD(v3[5].__r_.__value_.__r.__words[1]));
    int v27 = LODWORD(v3[5].__r_.__value_.__r.__words[1]) + v24;
    LODWORD(v3[5].__r_.__value_.__r.__words[1]) = v27;
    uint64_t v28 = (int *)v3[5].__r_.__value_.__r.__words[2];
    if (*v28 < v27) {
      *uint64_t v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v29)
  {
    if (v29)
    {
      uint64_t v30 = (long long *)(*(void *)(a2 + 144) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v32 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v32 = (uint64_t *)*v32;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[6], v30, v32);
      if ((v29 & 2) == 0)
      {
LABEL_19:
        if ((v29 & 4) == 0) {
          goto LABEL_20;
        }
        goto LABEL_30;
      }
    }
    else if ((v29 & 2) == 0)
    {
      goto LABEL_19;
    }
    uint64_t v33 = (long long *)(*(void *)(a2 + 152) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v34 = v3->__r_.__value_.__l.__size_;
    uint64_t v35 = (uint64_t *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
    if (v34) {
      uint64_t v35 = (uint64_t *)*v35;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[6].__r_.__value_.__l.__size_, v33, v35);
    if ((v29 & 4) == 0)
    {
LABEL_20:
      if ((v29 & 8) == 0) {
        goto LABEL_21;
      }
      goto LABEL_33;
    }
LABEL_30:
    uint64_t v36 = (long long *)(*(void *)(a2 + 160) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v37 = v3->__r_.__value_.__l.__size_;
    unint64_t v38 = (uint64_t *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
    if (v37) {
      unint64_t v38 = (uint64_t *)*v38;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[6].__r_.__value_.__r.__words[2], v36, v38);
    if ((v29 & 8) == 0)
    {
LABEL_21:
      if ((v29 & 0x10) == 0) {
        goto LABEL_22;
      }
      goto LABEL_36;
    }
LABEL_33:
    uint64_t v39 = (long long *)(*(void *)(a2 + 168) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::size_type v40 = v3->__r_.__value_.__l.__size_;
    unint64_t v41 = (uint64_t *)(v40 & 0xFFFFFFFFFFFFFFFCLL);
    if (v40) {
      unint64_t v41 = (uint64_t *)*v41;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[7], v39, v41);
    if ((v29 & 0x10) == 0)
    {
LABEL_22:
      if ((v29 & 0x20) == 0)
      {
LABEL_47:
        if ((v29 & 0x40) != 0)
        {
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x40u;
          data = (std::string *)v3[8].__r_.__value_.__l.__data_;
          if (!data)
          {
            std::string::size_type v50 = v3->__r_.__value_.__l.__size_;
            uint64_t v51 = (void *)(v50 & 0xFFFFFFFFFFFFFFFCLL);
            if (v50) {
              uint64_t v51 = (void *)*v51;
            }
            data = (std::string *)sub_1830344((uint64_t)v51);
            v3[8].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
          }
          if (*(void *)(a2 + 192)) {
            uint64_t v52 = *(uint64_t (****)())(a2 + 192);
          }
          else {
            uint64_t v52 = &off_2549828;
          }
          uint64_t result = sub_15374C8(data, (uint64_t)v52);
        }
        if ((v29 & 0x80) != 0)
        {
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x80u;
          uint64_t v53 = (std::string *)v3[8].__r_.__value_.__l.__size_;
          if (!v53)
          {
            std::string::size_type v54 = v3->__r_.__value_.__l.__size_;
            uint64_t v55 = (void *)(v54 & 0xFFFFFFFFFFFFFFFCLL);
            if (v54) {
              uint64_t v55 = (void *)*v55;
            }
            uint64_t v53 = (std::string *)sub_1830344((uint64_t)v55);
            v3[8].__r_.__value_.__l.__size_ = (std::string::size_type)v53;
          }
          if (*(void *)(a2 + 200)) {
            unint64_t v56 = *(uint64_t (****)())(a2 + 200);
          }
          else {
            unint64_t v56 = &off_2549828;
          }
          uint64_t result = sub_15374C8(v53, (uint64_t)v56);
        }
        goto LABEL_65;
      }
LABEL_39:
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x20u;
      uint64_t v45 = (std::string *)v3[7].__r_.__value_.__r.__words[2];
      if (!v45)
      {
        std::string::size_type v46 = v3->__r_.__value_.__l.__size_;
        unint64_t v47 = (void *)(v46 & 0xFFFFFFFFFFFFFFFCLL);
        if (v46) {
          unint64_t v47 = (void *)*v47;
        }
        uint64_t v45 = (std::string *)sub_15C1B30((uint64_t)v47);
        v3[7].__r_.__value_.__r.__words[2] = (std::string::size_type)v45;
      }
      if (*(void *)(a2 + 184)) {
        uint64_t v48 = *(uint64_t (****)())(a2 + 184);
      }
      else {
        uint64_t v48 = &off_253F2A0;
      }
      uint64_t result = sub_11EC100(v45, (uint64_t)v48);
      goto LABEL_47;
    }
LABEL_36:
    uint64_t v42 = (long long *)(*(void *)(a2 + 176) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
    std::string::size_type v43 = v3->__r_.__value_.__l.__size_;
    unint64_t v44 = (uint64_t *)(v43 & 0xFFFFFFFFFFFFFFFCLL);
    if (v43) {
      unint64_t v44 = (uint64_t *)*v44;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[7].__r_.__value_.__l.__size_, v42, v44);
    if ((v29 & 0x20) == 0) {
      goto LABEL_47;
    }
    goto LABEL_39;
  }
LABEL_65:
  if ((v29 & 0xF00) == 0) {
    goto LABEL_72;
  }
  if ((v29 & 0x100) != 0)
  {
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x100u;
    uint64_t v58 = (std::string *)v3[8].__r_.__value_.__r.__words[2];
    if (!v58)
    {
      std::string::size_type v59 = v3->__r_.__value_.__l.__size_;
      uint64_t v60 = (void *)(v59 & 0xFFFFFFFFFFFFFFFCLL);
      if (v59) {
        uint64_t v60 = (void *)*v60;
      }
      uint64_t v58 = (std::string *)sub_1832190((uint64_t)v60);
      v3[8].__r_.__value_.__r.__words[2] = (std::string::size_type)v58;
    }
    if (*(void *)(a2 + 208)) {
      uint64_t v61 = *(uint64_t (****)())(a2 + 208);
    }
    else {
      uint64_t v61 = &off_254A6D0;
    }
    uint64_t result = sub_11EC100(v58, (uint64_t)v61);
    if ((v29 & 0x200) == 0)
    {
LABEL_68:
      if ((v29 & 0x400) == 0) {
        goto LABEL_69;
      }
LABEL_85:
      v3[9].__r_.__value_.__l.__size_ = *(void *)(a2 + 224);
      if ((v29 & 0x800) == 0) {
        goto LABEL_71;
      }
      goto LABEL_70;
    }
  }
  else if ((v29 & 0x200) == 0)
  {
    goto LABEL_68;
  }
  v3[9].__r_.__value_.__r.__words[0] = *(void *)(a2 + 216);
  if ((v29 & 0x400) != 0) {
    goto LABEL_85;
  }
LABEL_69:
  if ((v29 & 0x800) != 0) {
LABEL_70:
  }
    v3[9].__r_.__value_.__s.__data_[16] = *(unsigned char *)(a2 + 232);
LABEL_71:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= v29;
LABEL_72:
  uint64_t v57 = *(void *)(a2 + 8);
  if (v57)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v57 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_17BFB0C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 56);
  while ((int)v1 >= 1)
  {
    uint64_t v2 = *(void *)(*(void *)(a1 + 64) + 8 * v1--);
    if ((*(unsigned char *)(v2 + 16) & 0x10) == 0) {
      return 0;
    }
  }
  uint64_t v4 = *(unsigned int *)(a1 + 104);
  uint64_t v5 = *(void *)(a1 + 112);
  do
  {
    BOOL result = (int)v4 < 1;
    if ((int)v4 < 1) {
      break;
    }
    uint64_t v6 = *(void *)(v5 + 8 * v4--);
  }
  while ((*(unsigned char *)(v6 + 16) & 0x10) != 0);
  return result;
}

void *sub_17BFB5C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.QueryUnderstandingResult.LocalizedQueryUnderstandingTaxonomyResultItemBrand");
}

void *sub_17BFB6C(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1877738(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17BFBEC(void *a1)
{
  sub_17BFB6C(a1);

  operator delete();
}

uint64_t sub_17BFC24(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      BOOL result = sub_17BDDF8(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_17BFCA0(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      int v19 = v6;
      if (v7 == 10)
      {
        int v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          int v19 = v12 + 1;
          int v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            sub_1832214(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          int v12 = (char *)sub_17BFE40(a3, v16, v13);
          int v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        unsigned int v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unsigned int v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

uint64_t sub_17BFE40(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17BE014(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17BFED0(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_17BEA24(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_17C0014(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_17BF160(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void sub_17C00C4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_1878E48((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_17C0194(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 24);
  uint64_t v2 = *(void *)(a1 + 32);
  do
  {
    int v3 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v4 = v1 - 1;
    BOOL v5 = sub_17BFB0C(*(void *)(v2 + 8 * v1));
    uint64_t v1 = v4;
  }
  while (v5);
  return v3 < 1;
}

void *sub_17C01E8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.QueryUnderstandingResult.QueryUnderstandingTaxonomyResultItemBrand");
}

uint64_t sub_17C01F8(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_254A818)
  {
    BOOL v5 = *(void **)(a1 + 24);
    if (v5)
    {
      sub_17B9E98(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_17BFB6C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17C02C8(uint64_t a1)
{
  sub_17C01F8(a1);

  operator delete();
}

uint64_t sub_17C0300(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = (uint64_t)sub_17B9F4C(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_17BFC24(*(void *)(v1 + 32));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 32) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_17C0374(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v26 + 2;
      }
    }
    uint64_t v26 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v16 = *(void *)(a1 + 32);
      if (!v16)
      {
        uint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v17 = (void *)*v17;
        }
        uint64_t v16 = sub_18322F8((uint64_t)v17);
        *(void *)(a1 + 32) = v16;
        int v7 = v26;
      }
      uint64_t v15 = sub_17C066C(a3, v16, (unsigned __int8 *)v7);
      goto LABEL_33;
    }
    if (v11 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v18 = *(void *)(a1 + 24);
    if (!v18)
    {
      int v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        int v19 = (void *)*v19;
      }
      uint64_t v18 = sub_1831E74((uint64_t)v19);
      *(void *)(a1 + 24) = v18;
      int v7 = v26;
    }
    uint64_t v15 = sub_17C05DC(a3, v18, (unsigned __int8 *)v7);
LABEL_33:
    uint64_t v26 = v15;
    if (!v15) {
      return 0;
    }
LABEL_41:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      return v26;
    }
  }
  if (v11 == 1 && v8 == 8)
  {
    uint64_t v20 = v7 + 1;
    unint64_t v21 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_38;
    }
    int v22 = *v20;
    int v23 = v21 + (v22 << 7);
    unint64_t v21 = (v23 - 128);
    if (v22 < 0)
    {
      uint64_t v26 = (char *)sub_188C138((uint64_t)v7, (v23 - 128));
      if (!v26) {
        return 0;
      }
      unint64_t v21 = v24;
    }
    else
    {
      uint64_t v20 = v7 + 2;
LABEL_38:
      uint64_t v26 = v20;
    }
    if (v21 > 2)
    {
      if (*v6) {
        uint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v21, v25);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 4u;
      *(_DWORD *)(a1 + 40) = v21;
    }
    goto LABEL_41;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      int v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v26;
    }
    uint64_t v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_33;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v26;
  }
  return 0;
}

char *sub_17C05DC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17B9F9C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17C066C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17BFCA0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17C06FC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    *char v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 40);
    v4[1] = v11;
    if (v11 > 0x7F) {
      int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      int v12 = v4 + 2;
    }
    char v4 = sub_17BA0E4(v10, v12, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 32);
    *char v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 40);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    char v4 = sub_17BFED0(v13, v15, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_17C08F8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_13;
  }
  if (v2)
  {
    uint64_t v4 = sub_17BA1B0(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_17C0014(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    int v6 = *(_DWORD *)(a1 + 40);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v7;
  }
LABEL_13:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_17C0A04(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(void *)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = sub_1831E74((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v9 = &off_254A588;
      }
      sub_129AF38(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          *(_DWORD *)(a1 + 16) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void *)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        int v12 = (void *)*v12;
      }
      uint64_t v10 = sub_18322F8((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_254A7E8;
    }
    sub_17C00C4(v10, (uint64_t)v13);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17C0B2C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    if (!sub_18856CC(*(void *)(a1 + 24) + 16)) {
      return 0;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) == 0) {
    return 1;
  }
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(unsigned int *)(v4 + 24);
  uint64_t v6 = *(void *)(v4 + 32);
  do
  {
    BOOL v3 = (int)v5 < 1;
    if ((int)v5 < 1) {
      break;
    }
    uint64_t v7 = v5 - 1;
    BOOL v8 = sub_17BFB0C(*(void *)(v6 + 8 * v5));
    uint64_t v5 = v7;
  }
  while (v8);
  return v3;
}

void *sub_17C0BB4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.QueryUnderstandingResult.QueryUnderstandingTaxonomyResultItem");
}

uint64_t sub_17C0BC4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = (uint64_t *)(a1 + 16);
  *(void *)a1 = off_24DC698;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    BOOL v8 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_1878ED4(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    uint64_t v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_17C0CA4(_Unwind_Exception *a1)
{
  sub_18777B8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17C0CE8(void *a1)
{
  BOOL v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_18777B8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17C0D68(void *a1)
{
  sub_17C0CE8(a1);

  operator delete();
}

uint64_t sub_17C0DA0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    BOOL v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_17C0300(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_17C0E1C(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      int v19 = v6;
      if (v7 == 10)
      {
        int v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          int v19 = v12 + 1;
          unsigned int v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_1832398(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          int v12 = sub_17C0FBC(a3, v16, v13);
          int v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_17C0FBC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17C0374(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17C104C(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_17C06FC(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unsigned int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unsigned int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_17C1190(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_17C08F8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void sub_17C1240(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_1878ED4((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_17C1310(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_17C0B2C(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_17C1368@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.QueryUnderstandingResult.QueryUnderstandingTaxonomyResult");
}

uint64_t sub_17C1378(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24DC718;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  char v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1515EA0(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    unint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *unint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  return a1;
}

void sub_17C149C()
{
}

uint64_t sub_17C1500(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254A878)
  {
    int v6 = *(void **)(a1 + 48);
    if (v6)
    {
      sub_17C0CE8(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1515D20((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17C15C4(uint64_t a1)
{
  sub_17C1500(a1);

  operator delete();
}

uint64_t sub_17C15FC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_14D401C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = sub_17C0DA0(*(void *)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_17C168C(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v23 + 2;
      }
    }
    int v23 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 48);
    if (!v15)
    {
      uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v15 = sub_1832418((uint64_t)v16);
      *(void *)(a1 + 48) = v15;
      uint64_t v7 = v23;
    }
    unsigned int v14 = sub_150F058(a3, v15, (unsigned __int8 *)v7);
LABEL_26:
    int v23 = v14;
    if (!v14) {
      return 0;
    }
LABEL_27:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    uint64_t v17 = v7 - 1;
    while (1)
    {
      unint64_t v18 = (unsigned __int8 *)(v17 + 1);
      int v23 = v17 + 1;
      int v19 = *(_DWORD **)(a1 + 40);
      if (v19 && (uint64_t v20 = *(int *)(a1 + 32), (int)v20 < *v19))
      {
        *(_DWORD *)(a1 + 32) = v20 + 1;
        uint64_t v21 = *(void *)&v19[2 * v20 + 2];
      }
      else
      {
        sub_14D75B8(*(void *)(a1 + 24));
        uint64_t v21 = sub_188CDC8(a1 + 24, v22);
        unint64_t v18 = (unsigned __int8 *)v23;
      }
      uint64_t v17 = sub_14F9540(a3, v21, v18);
      int v23 = v17;
      if (!v17) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v17 || *v17 != 10) {
        goto LABEL_27;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v23;
    }
    unsigned int v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_26;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

char *sub_17C1894(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_14D4730(v8, v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v11 = *(void *)(a1 + 48);
    *__dst = 18;
    unsigned int v12 = *(_DWORD *)(v11 + 40);
    __dst[1] = v12;
    if (v12 > 0x7F) {
      unint64_t v13 = sub_188A9CC(v12, __dst + 1);
    }
    else {
      unint64_t v13 = __dst + 2;
    }
    __dst = sub_17C104C(v11, v13, a3);
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return __dst;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(__dst, v17, (int)v18);
    __dst += v19;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, __dst);
}

uint64_t sub_17C1A40(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_14D4ACC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v8 = sub_17C1190(*(void *)(a1 + 48));
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_17C1B24(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1515EA0((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v10 = *(void *)(a1 + 48);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_1832418((uint64_t)v12);
      *(void *)(a1 + 48) = v10;
      uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    }
    if (v9) {
      unint64_t v13 = v9;
    }
    else {
      unint64_t v13 = &off_254A848;
    }
    sub_17C1240(v10, (uint64_t)v13);
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17C1C48(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_14D4F78(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(unsigned int *)(v6 + 24);
  do
  {
    BOOL v5 = (int)v7 < 1;
    if ((int)v7 < 1) {
      break;
    }
    uint64_t v8 = v7 - 1;
    char v9 = sub_17C0B2C(*(void *)(*(void *)(v6 + 32) + 8 * v7));
    uint64_t v7 = v8;
  }
  while ((v9 & 1) != 0);
  return v5;
}

void *sub_17C1CDC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.QueryUnderstandingResult");
}

uint64_t sub_17C1CEC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DC798;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v5 = *(_DWORD *)(a2 + 16);
  if (v5) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  if ((v5 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v6;
  return a1;
}

void sub_17C1DE0()
{
}

uint64_t sub_17C1E44(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_254A8B0)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_179203C(v5);
      operator delete();
    }
    if (*(void *)(a1 + 32))
    {
      sub_15B0994();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17C1F14(uint64_t a1)
{
  sub_17C1E44(a1);

  operator delete();
}

unsigned char *sub_17C1F4C(unsigned char *result)
{
  uint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_179212C(*((unsigned char **)result + 3));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_15B09D0(*((void *)v1 + 4));
    }
  }
  if ((v2 & 0x3C) != 0)
  {
    *(void *)(v1 + 45) = 0;
    *((void *)v1 + 5) = 0;
    *((_DWORD *)v1 + 14) = 10;
  }
  char v4 = v1[8];
  uint64_t v3 = v1 + 8;
  *((_DWORD *)v3 + 2) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_17C1FD4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v35 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v35, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v35 + 1;
    unsigned int v9 = *v35;
    if (*v35 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v35, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v35 + 2;
      }
    }
    uint64_t v35 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void **)(a1 + 24);
        if (!v12)
        {
          unint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v13 = (void *)*v13;
          }
          uint64_t v12 = sub_18302C8((uint64_t)v13);
          *(void *)(a1 + 24) = v12;
          uint64_t v8 = v35;
        }
        uint64_t v14 = sub_120FE50(a3, (uint64_t)v12, (unsigned __int8 *)v8);
        goto LABEL_47;
      case 2u:
        if (v9 != 17) {
          goto LABEL_40;
        }
        v5 |= 4u;
        *(void *)(a1 + 40) = *(void *)v8;
        uint64_t v35 = v8 + 8;
        goto LABEL_48;
      case 3u:
        if (v9 != 26) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 32);
        if (!v15)
        {
          unint64_t v16 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v16 = (void *)*v16;
          }
          uint64_t v15 = sub_15C1918((uint64_t)v16);
          *(void *)(a1 + 32) = v15;
          uint64_t v8 = v35;
        }
        uint64_t v14 = sub_1198F14(a3, v15, (unsigned __int8 *)v8);
        goto LABEL_47;
      case 4u:
        if (v9 != 32) {
          goto LABEL_40;
        }
        v5 |= 0x20u;
        uint64_t v17 = v8 + 1;
        int v18 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        int v19 = *v17;
        int v18 = v18 + (v19 << 7) - 128;
        if (v19 < 0)
        {
          int v29 = (char *)sub_188C0D0((uint64_t)v8, v18);
          uint64_t v35 = v29;
          *(_DWORD *)(a1 + 56) = v30;
          if (!v29) {
            goto LABEL_63;
          }
        }
        else
        {
          uint64_t v17 = v8 + 2;
LABEL_27:
          uint64_t v35 = v17;
          *(_DWORD *)(a1 + 56) = v18;
        }
        goto LABEL_48;
      case 5u:
        if (v9 != 40) {
          goto LABEL_40;
        }
        uint64_t v20 = v8 + 1;
        unint64_t v21 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_32;
        }
        int v22 = *v20;
        int v23 = v21 + (v22 << 7);
        unint64_t v21 = (v23 - 128);
        if (v22 < 0)
        {
          uint64_t v35 = (char *)sub_188C138((uint64_t)v8, (v23 - 128));
          if (!v35) {
            goto LABEL_63;
          }
          unint64_t v21 = v31;
        }
        else
        {
          uint64_t v20 = v8 + 2;
LABEL_32:
          uint64_t v35 = v20;
        }
        if (sub_129EB9C(v21))
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 48) = v21;
        }
        else
        {
          if (*v7) {
            std::string::size_type v34 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            std::string::size_type v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(5, v21, v34);
        }
        goto LABEL_48;
      case 6u:
        if (v9 != 48) {
          goto LABEL_40;
        }
        v5 |= 0x10u;
        unint64_t v24 = v8 + 1;
        uint64_t v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_39;
        }
        int v26 = *v24;
        uint64_t v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v32 = (char *)sub_188C138((uint64_t)v8, v25);
          uint64_t v35 = v32;
          *(unsigned char *)(a1 + 52) = v33 != 0;
          if (!v32) {
            goto LABEL_63;
          }
        }
        else
        {
          unint64_t v24 = v8 + 2;
LABEL_39:
          uint64_t v35 = v24;
          *(unsigned char *)(a1 + 52) = v25 != 0;
        }
        goto LABEL_48;
      default:
LABEL_40:
        if (v9) {
          BOOL v27 = (v9 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (*v7)
          {
            uint64_t v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v35;
          }
          uint64_t v14 = (char *)sub_1885AC0(v9, v28, v8, a3);
LABEL_47:
          uint64_t v35 = v14;
          if (!v14) {
            goto LABEL_63;
          }
LABEL_48:
          if (sub_11947B8((uint64_t)a3, &v35, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_63:
        }
          uint64_t v35 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v35;
    }
  }
}

unsigned char *sub_17C2370(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_1792424(v7, (unint64_t)v9, a3);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 40);
  *char v4 = 17;
  *(void *)(v4 + 1) = v10;
  v4 += 9;
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 0x20) == 0) {
      goto LABEL_27;
    }
    goto LABEL_21;
  }
LABEL_15:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v11 = *(void *)(a1 + 32);
  *char v4 = 26;
  unsigned int v12 = *(_DWORD *)(v11 + 44);
  v4[1] = v12;
  if (v12 > 0x7F) {
    unint64_t v13 = sub_188A9CC(v12, v4 + 1);
  }
  else {
    unint64_t v13 = v4 + 2;
  }
  char v4 = sub_15B0C0C(v11, v13, a3);
  if ((v6 & 0x20) != 0)
  {
LABEL_21:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v14 = *(_DWORD *)(a1 + 56);
    *char v4 = 32;
    v4[1] = v14;
    if (v14 > 0x7F)
    {
      v4[1] = v14 | 0x80;
      unsigned int v15 = v14 >> 7;
      v4[2] = v14 >> 7;
      v4 += 3;
      if (v14 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v16 = v15 >> 14;
          v15 >>= 7;
          *v4++ = v15;
        }
        while (v16);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_27:
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v17 = *(int *)(a1 + 48);
    *char v4 = 40;
    v4[1] = v17;
    if (v17 > 0x7F)
    {
      v4[1] = v17 | 0x80;
      unint64_t v18 = v17 >> 7;
      v4[2] = v17 >> 7;
      v4 += 3;
      if (v17 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v19 = v18 >> 14;
          v18 >>= 7;
          *v4++ = v18;
        }
        while (v19);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v20 = *(unsigned char *)(a1 + 52);
    *char v4 = 48;
    v4[1] = v20;
    v4 += 2;
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return v4;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    unint64_t v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    unint64_t v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(v4, v24, (int)v25);
    v4 += v26;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v24, v25, v4);
}

uint64_t sub_17C2668(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x3F) == 0)
  {
    uint64_t result = 0;
    goto LABEL_20;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v5 = sub_1792638(*(void *)(a1 + 24));
  uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v6 = sub_15B0D90(*(void *)(a1 + 32));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v7 = v3 + 9;
  if ((v2 & 4) == 0) {
    uint64_t v7 = v3;
  }
  if ((v2 & 8) != 0)
  {
    int v8 = *(_DWORD *)(a1 + 48);
    uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v8 >= 0) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = 11;
    }
    v7 += v10;
  }
  if ((v2 & 0x10) != 0) {
    uint64_t result = v7 + 2;
  }
  else {
    uint64_t result = v7;
  }
  if ((v2 & 0x20) != 0) {
    result += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_20:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    result += v13;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_17C27B0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(void **)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        int v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          int v8 = (void *)*v8;
        }
        uint64_t v6 = sub_18302C8((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v9 = &off_2549800;
      }
      sub_1792730((uint64_t)v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_30;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void *)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_15C1918((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_253F1A0;
    }
    sub_15B0E24(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_31;
    }
LABEL_30:
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_32;
    }
LABEL_31:
    *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0)
      {
LABEL_9:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_10;
      }
LABEL_8:
      *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
      goto LABEL_9;
    }
LABEL_32:
    *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17C2908(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 24);
    if (*(unsigned char *)(v3 + 16))
    {
      uint64_t result = sub_15B1FC0(*(void *)(v3 + 24));
      if (!result) {
        return result;
      }
      int v2 = *(_DWORD *)(a1 + 16);
    }
  }
  if ((v2 & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 32));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17C2960@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchZeroKeywordCategorySuggestionParameters");
}

uint64_t sub_17C2970(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = (uint64_t *)(a1 + 16);
  *(void *)a1 = off_24DC818;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    int v8 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_12C4AE8(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    uint64_t v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  int v11 = *(_DWORD *)(a2 + 48);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 56);
    uint64_t v13 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_1878F60((std::string *)(a1 + 40), v13, (uint64_t *)(v12 + 8), v11, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v14 = *(_DWORD *)(a1 + 48) + v11;
    *(_DWORD *)(a1 + 48) = v14;
    unsigned int v15 = *(int **)(a1 + 56);
    if (*v15 < v14) {
      *unsigned int v15 = v14;
    }
  }
  *(_DWORD *)(a1 + 64) = 0;
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16) {
    sub_188B4F8(v4, (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_17C2AC0(_Unwind_Exception *a1)
{
  sub_1877838(v4);
  sub_12C4568(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17C2B18(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1877838(a1 + 5);
  sub_12C4568(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17C2BA4(void *a1)
{
  sub_17C2B18(a1);

  operator delete();
}

uint64_t sub_17C2BDC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_129FB6C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 48);
  if ((int)v5 >= 1)
  {
    int v6 = (uint64_t *)(*(void *)(v1 + 56) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_17C3470(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 48) = 0;
  }
  char v9 = *(unsigned char *)(v1 + 8);
  int v8 = (uint64_t *)(v1 + 8);
  if (v9)
  {
    return sub_188B4AC(v8);
  }
  return result;
}

char *sub_17C2C80(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  if ((sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1]) & 1) == 0)
  {
    int v6 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v7 = v26 + 1;
      unsigned int v8 = *v26;
      if (*v26 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v26 + 2;
        }
      }
      uint64_t v26 = v7;
      if (v8 >> 3 == 2)
      {
        if (v8 == 18)
        {
          int v14 = v7 - 1;
          while (1)
          {
            unsigned int v15 = (unsigned __int8 *)(v14 + 1);
            uint64_t v26 = v14 + 1;
            uint64_t v16 = *(_DWORD **)(a1 + 56);
            if (v16 && (uint64_t v17 = *(int *)(a1 + 48), (int)v17 < *v16))
            {
              *(_DWORD *)(a1 + 48) = v17 + 1;
              uint64_t v18 = *(void *)&v16[2 * v17 + 2];
            }
            else
            {
              unint64_t v19 = sub_1832680(*(void *)(a1 + 40));
              uint64_t v18 = sub_188CDC8(a1 + 40, (uint64_t)v19);
              unsigned int v15 = (unsigned __int8 *)v26;
            }
            int v14 = sub_17C2EC8(a3, v18, v15);
            uint64_t v26 = v14;
            if (!v14) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
              goto LABEL_39;
            }
          }
        }
      }
      else if (v8 >> 3 == 1 && v8 == 10)
      {
        char v20 = v7 - 1;
        while (1)
        {
          uint64_t v21 = (unsigned __int8 *)(v20 + 1);
          uint64_t v26 = v20 + 1;
          int v22 = *(_DWORD **)(a1 + 32);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 24), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 24) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            uint64_t v25 = sub_12BBAE4(*(void *)(a1 + 16));
            uint64_t v24 = sub_188CDC8(a1 + 16, (uint64_t)v25);
            uint64_t v21 = (unsigned __int8 *)v26;
          }
          char v20 = (char *)sub_129EFC8(a3, v24, v21);
          uint64_t v26 = v20;
          if (!v20) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 10) {
            goto LABEL_39;
          }
        }
      }
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (*v6)
      {
        uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = v26;
      }
      uint64_t v26 = (char *)sub_1885AC0(v8, v13, v7, a3);
      if (!v26) {
        return 0;
      }
LABEL_39:
      if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
        return v26;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v26;
    }
    return 0;
  }
  return v26;
}

char *sub_17C2EC8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17C3498(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17C2F58(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = (char *)sub_12A03B8(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 48);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        unsigned int v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        unsigned int v15 = __dst + 2;
      }
      __dst = sub_17C3774(v13, (unint64_t)v15, a3);
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return __dst;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    unint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    unint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)__dst >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(__dst, v19, (int)v20);
    __dst += v21;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, __dst);
}

uint64_t sub_17C3120(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12A0848(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 48);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_17C39C0(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v9 += v18;
  }
  *(_DWORD *)(a1 + 64) = v9;
  return v9;
}

void sub_17C3220(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_12C4AE8((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v11 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_1878F60((std::string *)(a1 + 40), v11, v10, v9, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v12 = *(_DWORD *)(a1 + 48) + v9;
    *(_DWORD *)(a1 + 48) = v12;
    uint64_t v13 = *(int **)(a1 + 56);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_17C3354(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_12A0DC4(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_17C33AC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchZeroKeywordCategorySuggestionResult");
}

void *sub_17C33BC(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17C3438(void *a1)
{
  sub_17C33BC(a1);

  operator delete();
}

uint64_t sub_17C3470(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 40) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_17C3498(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v33 + 1;
    unsigned int v9 = *v33;
    if (*v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v33 + 2;
      }
    }
    uint64_t v33 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3) {
      break;
    }
    if (v12 == 2)
    {
      if (v9 != 16) {
        goto LABEL_14;
      }
      v5 |= 2u;
      uint64_t v23 = v8 + 1;
      int v24 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_41;
      }
      int v25 = *v23;
      int v24 = v24 + (v25 << 7) - 128;
      if ((v25 & 0x80000000) == 0)
      {
        uint64_t v23 = v8 + 2;
LABEL_41:
        uint64_t v33 = v23;
        *(_DWORD *)(a1 + 44) = v24;
        goto LABEL_46;
      }
      int v29 = (char *)sub_188C0D0((uint64_t)v8, v24);
      uint64_t v33 = v29;
      *(_DWORD *)(a1 + 44) = v30;
      if (!v29) {
        goto LABEL_57;
      }
    }
    else
    {
      if (v12 != 1 || v9 != 8) {
        goto LABEL_14;
      }
      v5 |= 1u;
      uint64_t v26 = v8 + 1;
      int v27 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_45;
      }
      int v28 = *v26;
      int v27 = v27 + (v28 << 7) - 128;
      if ((v28 & 0x80000000) == 0)
      {
        uint64_t v26 = v8 + 2;
LABEL_45:
        uint64_t v33 = v26;
        *(_DWORD *)(a1 + 40) = v27;
        goto LABEL_46;
      }
      unint64_t v31 = (char *)sub_188C0D0((uint64_t)v8, v27);
      uint64_t v33 = v31;
      *(_DWORD *)(a1 + 40) = v32;
      if (!v31) {
        goto LABEL_57;
      }
    }
LABEL_46:
    if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 24)
  {
    unint64_t v17 = v8 - 1;
    while (1)
    {
      uint64_t v33 = v17 + 1;
      int v18 = v17[1];
      if (v17[1] < 0)
      {
        int v19 = v18 + (v17[2] << 7);
        int v18 = v19 - 128;
        if (v17[2] < 0)
        {
          unint64_t v17 = (char *)sub_188C0D0((uint64_t)(v17 + 1), v19 - 128);
          int v18 = v20;
        }
        else
        {
          v17 += 3;
        }
      }
      else
      {
        v17 += 2;
      }
      uint64_t v33 = v17;
      uint64_t v21 = *(unsigned int *)(a1 + 24);
      if (v21 == *(_DWORD *)(a1 + 28))
      {
        int v22 = v21 + 1;
        sub_188C80C((unsigned int *)(a1 + 24), v21 + 1);
        *(_DWORD *)(*(void *)(a1 + 32) + 4 * v21) = v18;
        unint64_t v17 = v33;
      }
      else
      {
        *(_DWORD *)(*(void *)(a1 + 32) + 4 * v21) = v18;
        int v22 = v21 + 1;
      }
      *(_DWORD *)(a1 + 24) = v22;
      if (!v17) {
        goto LABEL_57;
      }
      if (*(void *)a3 <= (unint64_t)v17 || *v17 != 24) {
        goto LABEL_46;
      }
    }
  }
  if (v9 == 26)
  {
    uint64_t v16 = sub_188C2CC((unsigned int *)(a1 + 24), (unsigned __int8 *)v8, (uint64_t)a3);
    goto LABEL_21;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v33;
    }
    uint64_t v16 = sub_1885AC0(v9, v15, v8, a3);
LABEL_21:
    uint64_t v33 = (char *)v16;
    if (!v16) {
      goto LABEL_57;
    }
    goto LABEL_46;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_57:
  uint64_t v33 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v33;
}

unsigned char *sub_17C3774(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 40);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 44);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(unsigned int *)(a1 + 24);
  if ((int)v13 >= 1)
  {
    for (uint64_t i = 0; i != v13; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v15 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * i);
      *uint64_t v4 = 24;
      v4[1] = v15;
      if (v15 > 0x7F)
      {
        v4[1] = v15 | 0x80;
        unsigned int v16 = v15 >> 7;
        v4[2] = v15 >> 7;
        v4 += 3;
        if (v15 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v17 = v16 >> 14;
            v16 >>= 7;
            *v4++ = v16;
          }
          while (v17);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_17C39C0(uint64_t a1)
{
  uint64_t result = sub_188D4F0((unsigned int *)(a1 + 24)) + *(unsigned int *)(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 3) != 0)
  {
    if (v3) {
      result += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v3 & 2) != 0) {
      result += ((9 * (__clz(*(_DWORD *)(a1 + 44) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

uint64_t sub_17C3A7C()
{
  return 1;
}

void *sub_17C3A84@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchZeroKeywordEntry");
}

uint64_t sub_17C3A94(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DC918;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

void sub_17C3B10(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17C3B40(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17C3BB4(void *a1)
{
  sub_17C3B40(a1);

  operator delete();
}

uint64_t sub_17C3BEC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0xF) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_17C3C10(uint64_t a1, char *a2, int32x2_t *a3)
{
  std::string::size_type v34 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = v34 + 1;
    unsigned int v9 = *v34;
    if (*v34 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v34, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v34 + 2;
      }
    }
    std::string::size_type v34 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_29;
        }
        v5 |= 1u;
        unsigned int v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unsigned int v12 = v8 + 2;
LABEL_13:
          std::string::size_type v34 = v12;
          *(_DWORD *)(a1 + 24) = v13;
          goto LABEL_36;
        }
        uint64_t v26 = (char *)sub_188C0D0((uint64_t)v8, v13);
        std::string::size_type v34 = v26;
        *(_DWORD *)(a1 + 24) = v27;
        if (v26) {
          goto LABEL_36;
        }
        goto LABEL_49;
      case 2u:
        if (v9 != 16) {
          goto LABEL_29;
        }
        v5 |= 2u;
        unsigned int v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          int v28 = (char *)sub_188C0D0((uint64_t)v8, v16);
          std::string::size_type v34 = v28;
          *(_DWORD *)(a1 + 28) = v29;
          if (!v28) {
            goto LABEL_49;
          }
        }
        else
        {
          unsigned int v15 = v8 + 2;
LABEL_18:
          std::string::size_type v34 = v15;
          *(_DWORD *)(a1 + 28) = v16;
        }
        goto LABEL_36;
      case 3u:
        if (v9 != 24) {
          goto LABEL_29;
        }
        v5 |= 4u;
        uint64_t v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          int v30 = (char *)sub_188C0D0((uint64_t)v8, v19);
          std::string::size_type v34 = v30;
          *(_DWORD *)(a1 + 32) = v31;
          if (!v30) {
            goto LABEL_49;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          std::string::size_type v34 = v18;
          *(_DWORD *)(a1 + 32) = v19;
        }
        goto LABEL_36;
      case 4u:
        if (v9 != 32) {
          goto LABEL_29;
        }
        v5 |= 8u;
        uint64_t v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          int v32 = (char *)sub_188C0D0((uint64_t)v8, v22);
          std::string::size_type v34 = v32;
          *(_DWORD *)(a1 + 36) = v33;
          if (!v32) {
            goto LABEL_49;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_28:
          std::string::size_type v34 = v21;
          *(_DWORD *)(a1 + 36) = v22;
        }
        goto LABEL_36;
      default:
LABEL_29:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            int v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = v34;
          }
          std::string::size_type v34 = (char *)sub_1885AC0(v9, v25, v8, a3);
          if (!v34) {
            goto LABEL_49;
          }
LABEL_36:
          if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_49:
        }
          std::string::size_type v34 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v34;
    }
  }
}

unsigned char *sub_17C3EE8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 32);
    *uint64_t v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 36);
    *uint64_t v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_17C4184(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_11;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) == 0)
  {
    if ((v1 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 8) != 0) {
LABEL_10:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_11:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_17C4280()
{
  return 1;
}

void *sub_17C4288@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchZeroKeywordWithSearchResultsSuggestionParameters");
}

uint64_t sub_17C4298(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  unint64_t v5 = (uint64_t *)(a1 + 16);
  *(void *)a1 = off_24DC998;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    unsigned int v8 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_1878FDC(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    unsigned int v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *unsigned int v10 = v9;
    }
  }
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_17C4378(_Unwind_Exception *a1)
{
  sub_18778B8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17C43BC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_18778B8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17C443C(void *a1)
{
  sub_17C43BC(a1);

  operator delete();
}

uint64_t sub_17C4474(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_17C4B64(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  unint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_17C44F0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    unint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        unsigned int v12 = v6 - 1;
        while (1)
        {
          unsigned int v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          unsigned int v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            unsigned int v17 = sub_1832834(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            unsigned int v13 = (unsigned __int8 *)v19;
          }
          unsigned int v12 = sub_17C4690(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_17C4690(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17C4BC4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17C4720(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_17C4E20(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unsigned int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unsigned int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_17C4864(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_17C4FD8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void sub_17C4914(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_1878FDC((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17C49E4(uint64_t a1)
{
  return sub_17C49EC(a1 + 16);
}

uint64_t sub_17C49EC(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if (*(unsigned char *)(v5 + 16))
    {
      uint64_t result = sub_12A0DC4(*(void *)(v5 + 40));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

void *sub_17C4A5C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchZeroKeywordWithSearchResultsSuggestionResult");
}

uint64_t sub_17C4A6C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254A990)
  {
    uint64_t v6 = *(void *)(a1 + 40);
    if (v6)
    {
      sub_129FB30(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17C4B2C(uint64_t a1)
{
  sub_17C4A6C(a1);

  operator delete();
}

uint64_t sub_17C4B64(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_129FB6C(*(void *)(result + 40));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_17C4BC4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v23 + 2;
      }
    }
    uint64_t v23 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    unint64_t v21 = *(void **)(a1 + 40);
    if (!v21)
    {
      int v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        int v22 = (void *)*v22;
      }
      unint64_t v21 = sub_12BBAE4((uint64_t)v22);
      *(void *)(a1 + 40) = v21;
      int v7 = v23;
    }
    unsigned int v14 = (char *)sub_129EFC8(a3, (uint64_t)v21, (unsigned __int8 *)v7);
LABEL_39:
    uint64_t v23 = v14;
    if (!v14) {
      return 0;
    }
LABEL_40:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 == 16)
  {
    uint64_t v15 = v7 - 1;
    while (1)
    {
      uint64_t v23 = v15 + 1;
      int v16 = v15[1];
      if (v15[1] < 0)
      {
        int v17 = v16 + (v15[2] << 7);
        int v16 = v17 - 128;
        if (v15[2] < 0)
        {
          uint64_t v15 = (char *)sub_188C0D0((uint64_t)(v15 + 1), v17 - 128);
          int v16 = v18;
        }
        else
        {
          v15 += 3;
        }
      }
      else
      {
        v15 += 2;
      }
      uint64_t v23 = v15;
      uint64_t v19 = *(unsigned int *)(a1 + 24);
      if (v19 == *(_DWORD *)(a1 + 28))
      {
        int v20 = v19 + 1;
        sub_188C80C((unsigned int *)(a1 + 24), v19 + 1);
        *(_DWORD *)(*(void *)(a1 + 32) + 4 * v19) = v16;
        uint64_t v15 = v23;
      }
      else
      {
        *(_DWORD *)(*(void *)(a1 + 32) + 4 * v19) = v16;
        int v20 = v19 + 1;
      }
      *(_DWORD *)(a1 + 24) = v20;
      if (!v15) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 16) {
        goto LABEL_40;
      }
    }
  }
  if (v8 == 18)
  {
    unsigned int v14 = (char *)sub_188C2CC((unsigned int *)(a1 + 24), (unsigned __int8 *)v7, (uint64_t)a3);
    goto LABEL_39;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v23;
    }
    unsigned int v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_39;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

char *sub_17C4E20(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 40);
    *int v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 44);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    int v4 = (char *)sub_12A03B8(v6, v8, a3);
  }
  uint64_t v9 = *(unsigned int *)(a1 + 24);
  if ((int)v9 >= 1)
  {
    for (uint64_t i = 0; i != v9; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v11 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * i);
      *int v4 = 16;
      v4[1] = v11;
      if (v11 > 0x7F)
      {
        v4[1] = v11 | 0x80;
        unsigned int v12 = v11 >> 7;
        v4[2] = v11 >> 7;
        v4 += 3;
        if (v11 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v13 = v12 >> 14;
            v12 >>= 7;
            *v4++ = v12;
          }
          while (v13);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_17C4FD8(uint64_t a1)
{
  uint64_t v2 = sub_188D4F0((unsigned int *)(a1 + 24)) + *(unsigned int *)(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_12A0848(*(void *)(a1 + 40));
    v2 += v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v2 += v7;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_17C5070(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188C80C((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  if (*(unsigned char *)(a2 + 16))
  {
    unsigned int v8 = *(uint64_t (****)())(a2 + 40);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v9 = *(void **)(a1 + 40);
    if (!v9)
    {
      uint64_t v10 = *(void *)(a1 + 8);
      unsigned int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
      if (v10) {
        unsigned int v11 = (void *)*v11;
      }
      uint64_t v9 = sub_12BBAE4((uint64_t)v11);
      *(void *)(a1 + 40) = v9;
      unsigned int v8 = *(uint64_t (****)())(a2 + 40);
    }
    if (v8) {
      unsigned int v12 = v8;
    }
    else {
      unsigned int v12 = &off_2530808;
    }
    sub_12A0B2C((uint64_t)v9, (uint64_t)v12);
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17C5168(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_12A0DC4(*(void *)(a1 + 40));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17C5194@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchResultsForCategoryEntry");
}

double sub_17C51A4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)a1 = off_24DCA98;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = a2;
  double result = 0.0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = a2;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = a2;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = a2;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = &qword_2550250;
  *(void *)(a1 + 136) = &qword_2550250;
  *(void *)(a1 + 144) = &qword_2550250;
  *(_OWORD *)(a1 + 244) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  return result;
}

uint64_t sub_17C522C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24DCA98;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  *(void *)(a1 + 28) = 0;
  int v5 = *(_DWORD *)(a2 + 24);
  if (v5)
  {
    sub_188C80C((unsigned int *)(a1 + 24), v5);
    uint64_t v6 = *(void **)(a1 + 32);
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
    memcpy(v6, *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  int v7 = *(_DWORD *)(a2 + 40);
  if (v7)
  {
    sub_188C80C((unsigned int *)(a1 + 40), v7);
    unsigned int v8 = *(void **)(a1 + 48);
    *(_DWORD *)(a1 + 40) += *(_DWORD *)(a2 + 40);
    memcpy(v8, *(const void **)(a2 + 48), 4 * *(int *)(a2 + 40));
  }
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    sub_188C80C((unsigned int *)(a1 + 56), v9);
    uint64_t v10 = *(void **)(a1 + 64);
    *(_DWORD *)(a1 + 56) += *(_DWORD *)(a2 + 56);
    memcpy(v10, *(const void **)(a2 + 64), 4 * *(int *)(a2 + 56));
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  int v11 = *(_DWORD *)(a2 + 72);
  if (v11)
  {
    sub_188C80C((unsigned int *)(a1 + 72), v11);
    unsigned int v12 = *(void **)(a1 + 80);
    *(_DWORD *)(a1 + 72) += *(_DWORD *)(a2 + 72);
    memcpy(v12, *(const void **)(a2 + 80), 4 * *(int *)(a2 + 72));
  }
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  int v13 = *(_DWORD *)(a2 + 88);
  if (v13)
  {
    sub_188C80C((unsigned int *)(a1 + 88), v13);
    uint64_t v14 = *(void **)(a1 + 96);
    *(_DWORD *)(a1 + 88) += *(_DWORD *)(a2 + 88);
    memcpy(v14, *(const void **)(a2 + 96), 4 * *(int *)(a2 + 88));
  }
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  int v15 = *(_DWORD *)(a2 + 112);
  if (v15)
  {
    uint64_t v16 = *(void *)(a2 + 120);
    int v17 = (std::string **)sub_188CCE4(a1 + 104, *(_DWORD *)(a2 + 112));
    sub_18785B8((uint64_t *)(a1 + 104), v17, (uint64_t *)(v16 + 8), v15, **(_DWORD **)(a1 + 120) - *(_DWORD *)(a1 + 112));
    int v18 = *(_DWORD *)(a1 + 112) + v15;
    *(_DWORD *)(a1 + 112) = v18;
    uint64_t v19 = *(int **)(a1 + 120);
    if (*v19 < v18) {
      int *v19 = v18;
    }
  }
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20) {
    sub_188B4F8(v4, (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 128) = &qword_2550250;
  int v21 = *(_DWORD *)(a2 + 16);
  if (v21)
  {
    int v22 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v22 = (uint64_t *)*v22;
    }
    sub_1881DF4((std::string **)(a1 + 128), (long long *)(*(void *)(a2 + 128) & 0xFFFFFFFFFFFFFFFELL), v22);
    int v21 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 136) = &qword_2550250;
  if ((v21 & 2) != 0)
  {
    uint64_t v23 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v23 = (uint64_t *)*v23;
    }
    sub_1881DF4((std::string **)(a1 + 136), (long long *)(*(void *)(a2 + 136) & 0xFFFFFFFFFFFFFFFELL), v23);
    int v21 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 144) = &qword_2550250;
  if ((v21 & 4) != 0)
  {
    uint64_t v24 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v24 = (uint64_t *)*v24;
    }
    sub_1881DF4((std::string **)(a1 + 144), (long long *)(*(void *)(a2 + 144) & 0xFFFFFFFFFFFFFFFELL), v24);
    int v21 = *(_DWORD *)(a2 + 16);
  }
  if ((v21 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 152) = 0;
  if ((v21 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 160) = 0;
  if ((v21 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 168) = 0;
  if ((v21 & 0x40) != 0) {
    operator new();
  }
  *(void *)(a1 + 176) = 0;
  if ((v21 & 0x80) != 0) {
    operator new();
  }
  *(void *)(a1 + 184) = 0;
  if ((v21 & 0x100) != 0) {
    operator new();
  }
  *(void *)(a1 + 192) = 0;
  if ((v21 & 0x200) != 0) {
    operator new();
  }
  *(void *)(a1 + 200) = 0;
  if ((v21 & 0x400) != 0) {
    operator new();
  }
  *(void *)(a1 + 208) = 0;
  if ((v21 & 0x800) != 0) {
    operator new();
  }
  *(void *)(a1 + 216) = 0;
  if ((v21 & 0x1000) != 0) {
    operator new();
  }
  *(void *)(a1 + 224) = 0;
  long long v25 = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 244) = *(_OWORD *)(a2 + 244);
  *(_OWORD *)(a1 + 232) = v25;
  return a1;
}

void sub_17C5738()
{
}

void *sub_17C5898(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_17C5950((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1876F38(a1 + 13);
  sub_1889DA8((uint64_t)(a1 + 11));
  sub_1889DA8((uint64_t)(a1 + 9));
  sub_1889DA8((uint64_t)(a1 + 7));
  sub_1889DA8((uint64_t)(a1 + 5));
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_17C5950(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 128);
  uint64_t v2 = (void ***)(a1 + 128);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 136) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 136));
  }
  double result = (void ***)(a1 + 144);
  if (*(uint64_t **)(a1 + 144) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_254A9C0)
  {
    uint64_t v5 = *(void *)(a1 + 152);
    if (v5)
    {
      sub_179203C(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 160);
    if (v6)
    {
      sub_1793030(v6);
      operator delete();
    }
    int v7 = *(void **)(a1 + 168);
    if (v7)
    {
      sub_1298CF0(v7);
      operator delete();
    }
    uint64_t v8 = *(void *)(a1 + 176);
    if (v8)
    {
      sub_16EE610(v8);
      operator delete();
    }
    if (*(void *)(a1 + 184))
    {
      sub_12B75F4();
      operator delete();
    }
    uint64_t v9 = *(void *)(a1 + 192);
    if (v9)
    {
      sub_179203C(v9);
      operator delete();
    }
    if (*(void *)(a1 + 200))
    {
      sub_12A46C8();
      operator delete();
    }
    uint64_t v10 = *(void **)(a1 + 208);
    if (v10)
    {
      sub_129AC40(v10);
      operator delete();
    }
    int v11 = *(void **)(a1 + 216);
    if (v11)
    {
      sub_129D77C(v11);
      operator delete();
    }
    double result = *(void ****)(a1 + 224);
    if (result)
    {
      sub_1799B38((uint64_t)result);
      operator delete();
    }
  }
  return result;
}

void sub_17C5B1C(void *a1)
{
  sub_17C5898(a1);

  operator delete();
}

uint64_t sub_17C5B54(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  *(_DWORD *)(result + 56) = 0;
  *(_DWORD *)(result + 72) = 0;
  *(_DWORD *)(result + 88) = 0;
  uint64_t v2 = *(unsigned int *)(result + 112);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 120) + 8);
    do
    {
      uint64_t v4 = *v3++;
      double result = sub_12B851C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 112) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if (!(_BYTE)v5) {
    goto LABEL_15;
  }
  if (v5)
  {
    unint64_t v8 = *(void *)(v1 + 128) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_39;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_39;
      }
    }
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_43:
    unint64_t v10 = *(void *)(v1 + 144) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v10 + 23) < 0)
    {
      **(unsigned char **)unint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
      if ((v5 & 8) != 0) {
        goto LABEL_47;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v10 = 0;
      *(unsigned char *)(v10 + 23) = 0;
      if ((v5 & 8) != 0) {
        goto LABEL_47;
      }
    }
LABEL_10:
    if ((v5 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_48;
  }
  if ((v5 & 2) == 0) {
    goto LABEL_8;
  }
LABEL_39:
  unint64_t v9 = *(void *)(v1 + 136) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v9 + 23) < 0)
  {
    **(unsigned char **)unint64_t v9 = 0;
    *(void *)(v9 + 8) = 0;
    if ((v5 & 4) != 0) {
      goto LABEL_43;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v9 = 0;
    *(unsigned char *)(v9 + 23) = 0;
    if ((v5 & 4) != 0) {
      goto LABEL_43;
    }
  }
LABEL_9:
  if ((v5 & 8) == 0) {
    goto LABEL_10;
  }
LABEL_47:
  double result = (uint64_t)sub_179212C(*(unsigned char **)(v1 + 152));
  if ((v5 & 0x10) == 0)
  {
LABEL_11:
    if ((v5 & 0x20) == 0) {
      goto LABEL_12;
    }
LABEL_49:
    double result = sub_1298D2C(*(void *)(v1 + 168));
    if ((v5 & 0x40) == 0)
    {
LABEL_13:
      if ((v5 & 0x80) == 0) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
    goto LABEL_50;
  }
LABEL_48:
  double result = sub_1793178(*(void *)(v1 + 160));
  if ((v5 & 0x20) != 0) {
    goto LABEL_49;
  }
LABEL_12:
  if ((v5 & 0x40) == 0) {
    goto LABEL_13;
  }
LABEL_50:
  double result = sub_16EE7C0(*(void *)(v1 + 176));
  if ((v5 & 0x80) != 0) {
LABEL_14:
  }
    double result = sub_12B7630(*(void *)(v1 + 184));
LABEL_15:
  if ((v5 & 0x1F00) == 0) {
    goto LABEL_22;
  }
  if ((v5 & 0x100) != 0)
  {
    double result = (uint64_t)sub_179212C(*(unsigned char **)(v1 + 192));
    if ((v5 & 0x200) == 0)
    {
LABEL_18:
      if ((v5 & 0x400) == 0) {
        goto LABEL_19;
      }
      goto LABEL_35;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_18;
  }
  double result = (uint64_t)sub_12A4704(*(unsigned char **)(v1 + 200));
  if ((v5 & 0x400) == 0)
  {
LABEL_19:
    if ((v5 & 0x800) == 0) {
      goto LABEL_20;
    }
    goto LABEL_36;
  }
LABEL_35:
  double result = (uint64_t)sub_129AC7C(*(void *)(v1 + 208));
  if ((v5 & 0x800) == 0)
  {
LABEL_20:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
LABEL_36:
  double result = sub_129D7B8(*(void *)(v1 + 216));
  if ((v5 & 0x1000) != 0) {
LABEL_21:
  }
    double result = sub_17958E8(*(void *)(v1 + 224));
LABEL_22:
  if ((v5 & 0xE000) != 0)
  {
    *(_DWORD *)(v1 + 240) = 0;
    *(void *)(v1 + 232) = 0;
  }
  if ((v5 & 0x3F0000) != 0)
  {
    *(void *)(v1 + 252) = 0;
    *(void *)(v1 + 244) = 0;
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_17C5D58(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v141 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v141, a3[11].i32[1]))
  {
    int v140 = 0;
    goto LABEL_3;
  }
  int v140 = 0;
  int v138 = (uint64_t *)(a1 + 8);
  uint64_t v139 = (uint64_t *)(a1 + 104);
  while (2)
  {
    uint64_t v6 = (unsigned __int8 *)(*(void *)v141 + 1);
    unsigned int v7 = **(unsigned char **)v141;
    if ((char)**(unsigned char **)v141 < 0)
    {
      int v8 = (char)*v6;
      unsigned int v9 = v7 + (v8 << 7);
      unsigned int v7 = v9 - 128;
      if (v8 < 0)
      {
        uint64_t v6 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v141, v9 - 128);
        unsigned int v7 = v10;
      }
      else
      {
        uint64_t v6 = (unsigned __int8 *)(*(void *)v141 + 2);
      }
    }
    *(void *)unint64_t v141 = v6;
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 8) {
          goto LABEL_271;
        }
        v140 |= 0x2000u;
        int v11 = (char *)(v6 + 1);
        int v12 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_14;
        }
        int v13 = *v11;
        int v12 = v12 + (v13 << 7) - 128;
        if ((v13 & 0x80000000) == 0)
        {
          int v11 = (char *)(v6 + 2);
LABEL_14:
          *(void *)unint64_t v141 = v11;
          *(_DWORD *)(a1 + 232) = v12;
          goto LABEL_279;
        }
        uint64_t v117 = sub_188C0D0((uint64_t)v6, v12);
        *(void *)unint64_t v141 = v117;
        *(_DWORD *)(a1 + 232) = v118;
        if (!v117) {
          goto LABEL_293;
        }
        goto LABEL_279;
      case 2u:
        if (v7 != 18) {
          goto LABEL_271;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v14 = *(void *)(a1 + 8);
        int v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          int v15 = (uint64_t *)*v15;
        }
        uint64_t v16 = (void *)(a1 + 128);
        goto LABEL_213;
      case 3u:
        if (v7 != 26) {
          goto LABEL_271;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        int v17 = *(void **)(a1 + 152);
        if (v17) {
          goto LABEL_152;
        }
        int v18 = (void *)(*v138 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v138) {
          int v18 = (void *)*v18;
        }
        int v17 = sub_18302C8((uint64_t)v18);
        *(void *)(a1 + 152) = v17;
        goto LABEL_151;
      case 4u:
        if (v7 != 34) {
          goto LABEL_271;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 8);
        int v15 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          int v15 = (uint64_t *)*v15;
        }
        uint64_t v16 = (void *)(a1 + 136);
        goto LABEL_213;
      case 5u:
        if (v7 != 40) {
          goto LABEL_271;
        }
        v140 |= 0x4000u;
        uint64_t v20 = (char *)(v6 + 1);
        int v21 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_32;
        }
        int v22 = *v20;
        int v21 = v21 + (v22 << 7) - 128;
        if (v22 < 0)
        {
          uint64_t v119 = sub_188C0D0((uint64_t)v6, v21);
          *(void *)unint64_t v141 = v119;
          *(_DWORD *)(a1 + 236) = v120;
          if (!v119) {
            goto LABEL_293;
          }
        }
        else
        {
          uint64_t v20 = (char *)(v6 + 2);
LABEL_32:
          *(void *)unint64_t v141 = v20;
          *(_DWORD *)(a1 + 236) = v21;
        }
        goto LABEL_279;
      case 6u:
        if (v7 != 48) {
          goto LABEL_271;
        }
        v140 |= 0x8000u;
        uint64_t v23 = (char *)(v6 + 1);
        int v24 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_37;
        }
        int v25 = *v23;
        int v24 = v24 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          uint64_t v121 = sub_188C0D0((uint64_t)v6, v24);
          *(void *)unint64_t v141 = v121;
          *(_DWORD *)(a1 + 240) = v122;
          if (!v121) {
            goto LABEL_293;
          }
        }
        else
        {
          uint64_t v23 = (char *)(v6 + 2);
LABEL_37:
          *(void *)unint64_t v141 = v23;
          *(_DWORD *)(a1 + 240) = v24;
        }
        goto LABEL_279;
      case 7u:
        if (v7 != 56) {
          goto LABEL_271;
        }
        uint64_t v26 = (char *)(v6 + 1);
        unint64_t v27 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_42;
        }
        int v28 = *v26;
        int v29 = v27 + (v28 << 7);
        unint64_t v27 = (v29 - 128);
        if (v28 < 0)
        {
          *(void *)unint64_t v141 = sub_188C138((uint64_t)v6, (v29 - 128));
          if (!*(void *)v141) {
            goto LABEL_293;
          }
          unint64_t v27 = v123;
        }
        else
        {
          uint64_t v26 = (char *)(v6 + 2);
LABEL_42:
          *(void *)unint64_t v141 = v26;
        }
        if (v27 <= 5)
        {
          *(_DWORD *)(a1 + 16) |= 0x10000u;
          *(_DWORD *)(a1 + 244) = v27;
          goto LABEL_279;
        }
        if (*v138) {
          uint64_t v136 = (std::string *)((*v138 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v136 = (std::string *)sub_188DBD8(v138);
        }
        int v137 = 7;
        goto LABEL_287;
      case 8u:
        if (v7 != 66) {
          goto LABEL_271;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v30 = *(void *)(a1 + 160);
        if (!v30)
        {
          int v31 = (void *)(*v138 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v138) {
            int v31 = (void *)*v31;
          }
          uint64_t v30 = sub_18303E4((uint64_t)v31);
          *(void *)(a1 + 160) = v30;
          uint64_t v6 = *(unsigned __int8 **)v141;
        }
        uint64_t v32 = sub_1797064(a3, v30, v6);
        goto LABEL_278;
      case 9u:
        if (v7 != 72) {
          goto LABEL_271;
        }
        v140 |= 0x40000u;
        int v33 = (char *)(v6 + 1);
        uint64_t v34 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_55;
        }
        int v35 = *v33;
        uint64_t v34 = v34 + (v35 << 7) - 128;
        if (v35 < 0)
        {
          uint64_t v124 = sub_188C138((uint64_t)v6, v34);
          *(void *)unint64_t v141 = v124;
          *(unsigned char *)(a1 + 252) = v125 != 0;
          if (!v124) {
            goto LABEL_293;
          }
        }
        else
        {
          int v33 = (char *)(v6 + 2);
LABEL_55:
          *(void *)unint64_t v141 = v33;
          *(unsigned char *)(a1 + 252) = v34 != 0;
        }
        goto LABEL_279;
      case 0xAu:
        if (v7 != 82) {
          goto LABEL_271;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v36 = *(void *)(a1 + 168);
        if (!v36)
        {
          std::string::size_type v37 = (void *)(*v138 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v138) {
            std::string::size_type v37 = (void *)*v37;
          }
          uint64_t v36 = sub_129E61C((uint64_t)v37);
          *(void *)(a1 + 168) = v36;
          uint64_t v6 = *(unsigned __int8 **)v141;
        }
        uint64_t v32 = sub_1797184(a3, v36, v6);
        goto LABEL_278;
      case 0x15u:
        if (v7 == 168)
        {
          uint64_t v38 = (uint64_t)(v6 - 2);
          while (1)
          {
            *(void *)unint64_t v141 = v38 + 2;
            unint64_t v39 = *(unsigned __int8 *)(v38 + 2);
            std::string::size_type v40 = (char *)(v38 + 3);
            if (*(char *)(v38 + 2) < 0)
            {
              int v41 = *v40;
              int v42 = v39 + (v41 << 7);
              unint64_t v39 = (v42 - 128);
              if (v41 < 0)
              {
                *(void *)unint64_t v141 = sub_188C138(v38 + 2, (v42 - 128));
                if (!*(void *)v141) {
                  goto LABEL_293;
                }
                unint64_t v39 = v45;
                goto LABEL_68;
              }
              std::string::size_type v40 = (char *)(v38 + 4);
            }
            *(void *)unint64_t v141 = v40;
LABEL_68:
            if (sub_129EB90(v39))
            {
              uint64_t v43 = *(unsigned int *)(a1 + 24);
              if (v43 == *(_DWORD *)(a1 + 28))
              {
                int v44 = v43 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v43 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v43) = v39;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v43) = v39;
                int v44 = v43 + 1;
              }
              *(_DWORD *)(a1 + 24) = v44;
            }
            else
            {
              if (*v138) {
                std::string::size_type v46 = (std::string *)((*v138 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                std::string::size_type v46 = (std::string *)sub_188DBD8(v138);
              }
              sub_188C020(21, v39, v46);
            }
            uint64_t v38 = *(void *)v141;
            if (*(void *)a3 <= *(void *)v141 || **(_WORD **)v141 != 424) {
              goto LABEL_279;
            }
          }
        }
        if (v7 != 170) {
          goto LABEL_271;
        }
        *(void *)&long long v142 = a1 + 24;
        *((void *)&v142 + 1) = sub_129EB90;
        uint64_t v143 = a1 + 8;
        int v133 = 21;
        goto LABEL_270;
      case 0x16u:
        if (v7 != 178) {
          goto LABEL_271;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v47 = *(void *)(a1 + 176);
        if (!v47)
        {
          uint64_t v48 = (void *)(*v138 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v138) {
            uint64_t v48 = (void *)*v48;
          }
          sub_17888DC((uint64_t)v48);
          uint64_t v47 = v49;
          *(void *)(a1 + 176) = v49;
          uint64_t v6 = *(unsigned __int8 **)v141;
        }
        uint64_t v32 = (uint64_t)sub_1735748(a3, v47, v6);
        goto LABEL_278;
      case 0x17u:
        if (v7 == 184)
        {
          uint64_t v50 = (uint64_t)(v6 - 2);
          while (1)
          {
            *(void *)unint64_t v141 = v50 + 2;
            unint64_t v51 = *(unsigned __int8 *)(v50 + 2);
            uint64_t v52 = (char *)(v50 + 3);
            if (*(char *)(v50 + 2) < 0)
            {
              int v53 = *v52;
              int v54 = v51 + (v53 << 7);
              unint64_t v51 = (v54 - 128);
              if (v53 < 0)
              {
                *(void *)unint64_t v141 = sub_188C138(v50 + 2, (v54 - 128));
                if (!*(void *)v141) {
                  goto LABEL_293;
                }
                unint64_t v51 = v57;
                goto LABEL_94;
              }
              uint64_t v52 = (char *)(v50 + 4);
            }
            *(void *)unint64_t v141 = v52;
LABEL_94:
            if (sub_128EA10(v51))
            {
              uint64_t v55 = *(unsigned int *)(a1 + 40);
              if (v55 == *(_DWORD *)(a1 + 44))
              {
                int v56 = v55 + 1;
                sub_188C80C((unsigned int *)(a1 + 40), v55 + 1);
                *(_DWORD *)(*(void *)(a1 + 48) + 4 * v55) = v51;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 48) + 4 * v55) = v51;
                int v56 = v55 + 1;
              }
              *(_DWORD *)(a1 + 40) = v56;
            }
            else
            {
              if (*v138) {
                uint64_t v58 = (std::string *)((*v138 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v58 = (std::string *)sub_188DBD8(v138);
              }
              sub_188C020(23, v51, v58);
            }
            uint64_t v50 = *(void *)v141;
            if (*(void *)a3 <= *(void *)v141 || **(_WORD **)v141 != 440) {
              goto LABEL_279;
            }
          }
        }
        if (v7 != 186) {
          goto LABEL_271;
        }
        *(void *)&long long v142 = a1 + 40;
        *((void *)&v142 + 1) = sub_128EA10;
        uint64_t v143 = a1 + 8;
        int v133 = 23;
        goto LABEL_270;
      case 0x18u:
        if (v7 != 192) {
          goto LABEL_271;
        }
        v140 |= 0x20000u;
        std::string::size_type v59 = (char *)(v6 + 1);
        int v60 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_112;
        }
        int v61 = *v59;
        int v60 = v60 + (v61 << 7) - 128;
        if (v61 < 0)
        {
          uint64_t v126 = sub_188C0D0((uint64_t)v6, v60);
          *(void *)unint64_t v141 = v126;
          *(_DWORD *)(a1 + 248) = v127;
          if (!v126) {
            goto LABEL_293;
          }
        }
        else
        {
          std::string::size_type v59 = (char *)(v6 + 2);
LABEL_112:
          *(void *)unint64_t v141 = v59;
          *(_DWORD *)(a1 + 248) = v60;
        }
        goto LABEL_279;
      case 0x19u:
        if (v7 != 202) {
          goto LABEL_271;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v62 = *(void *)(a1 + 184);
        if (!v62)
        {
          uint64_t v63 = (void *)(*v138 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v138) {
            uint64_t v63 = (void *)*v63;
          }
          uint64_t v62 = sub_12BCE18((uint64_t)v63);
          *(void *)(a1 + 184) = v62;
          uint64_t v6 = *(unsigned __int8 **)v141;
        }
        uint64_t v32 = (uint64_t)sub_12099E8(a3, v62, v6);
        goto LABEL_278;
      case 0x1Au:
        if (v7 == 208)
        {
          uint64_t v64 = (uint64_t)(v6 - 2);
          while (1)
          {
            *(void *)unint64_t v141 = v64 + 2;
            unint64_t v65 = *(unsigned __int8 *)(v64 + 2);
            uint64_t v66 = (char *)(v64 + 3);
            if (*(char *)(v64 + 2) < 0)
            {
              int v67 = *v66;
              int v68 = v65 + (v67 << 7);
              unint64_t v65 = (v68 - 128);
              if (v67 < 0)
              {
                *(void *)unint64_t v141 = sub_188C138(v64 + 2, (v68 - 128));
                if (!*(void *)v141) {
                  goto LABEL_293;
                }
                unint64_t v65 = v71;
                goto LABEL_125;
              }
              uint64_t v66 = (char *)(v64 + 4);
            }
            *(void *)unint64_t v141 = v66;
LABEL_125:
            if (sub_129EBC0(v65))
            {
              uint64_t v69 = *(unsigned int *)(a1 + 56);
              if (v69 == *(_DWORD *)(a1 + 60))
              {
                int v70 = v69 + 1;
                sub_188C80C((unsigned int *)(a1 + 56), v69 + 1);
                *(_DWORD *)(*(void *)(a1 + 64) + 4 * v69) = v65;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 64) + 4 * v69) = v65;
                int v70 = v69 + 1;
              }
              *(_DWORD *)(a1 + 56) = v70;
            }
            else
            {
              if (*v138) {
                BOOL v72 = (std::string *)((*v138 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                BOOL v72 = (std::string *)sub_188DBD8(v138);
              }
              sub_188C020(26, v65, v72);
            }
            uint64_t v64 = *(void *)v141;
            if (*(void *)a3 <= *(void *)v141 || **(_WORD **)v141 != 464) {
              goto LABEL_279;
            }
          }
        }
        if (v7 != 210) {
          goto LABEL_271;
        }
        *(void *)&long long v142 = a1 + 56;
        *((void *)&v142 + 1) = sub_129EBC0;
        uint64_t v143 = a1 + 8;
        int v133 = 26;
        goto LABEL_270;
      case 0x1Bu:
        if (v7 != 216) {
          goto LABEL_271;
        }
        BOOL v73 = (char *)(v6 + 1);
        unint64_t v27 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_143;
        }
        int v74 = *v73;
        int v75 = v27 + (v74 << 7);
        unint64_t v27 = (v75 - 128);
        if (v74 < 0)
        {
          *(void *)unint64_t v141 = sub_188C138((uint64_t)v6, (v75 - 128));
          if (!*(void *)v141) {
            goto LABEL_293;
          }
          unint64_t v27 = v128;
        }
        else
        {
          BOOL v73 = (char *)(v6 + 2);
LABEL_143:
          *(void *)unint64_t v141 = v73;
        }
        if (v27 > 0x23)
        {
          if (*v138) {
            uint64_t v136 = (std::string *)((*v138 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v136 = (std::string *)sub_188DBD8(v138);
          }
          int v137 = 27;
LABEL_287:
          sub_188C020(v137, v27, v136);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x200000u;
          *(_DWORD *)(a1 + 256) = v27;
        }
        goto LABEL_279;
      case 0x1Cu:
        if (v7 != 226) {
          goto LABEL_271;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        int v17 = *(void **)(a1 + 192);
        if (v17) {
          goto LABEL_152;
        }
        uint64_t v76 = (void *)(*v138 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v138) {
          uint64_t v76 = (void *)*v76;
        }
        int v17 = sub_18302C8((uint64_t)v76);
        *(void *)(a1 + 192) = v17;
LABEL_151:
        uint64_t v6 = *(unsigned __int8 **)v141;
LABEL_152:
        uint64_t v32 = (uint64_t)sub_120FE50(a3, (uint64_t)v17, v6);
        goto LABEL_278;
      case 0x1Du:
        if (v7 == 232)
        {
          uint64_t v77 = (uint64_t)(v6 - 2);
          while (1)
          {
            *(void *)unint64_t v141 = v77 + 2;
            unint64_t v78 = *(unsigned __int8 *)(v77 + 2);
            uint64_t v79 = (char *)(v77 + 3);
            if (*(char *)(v77 + 2) < 0)
            {
              int v80 = *v79;
              int v81 = v78 + (v80 << 7);
              unint64_t v78 = (v81 - 128);
              if (v80 < 0)
              {
                *(void *)unint64_t v141 = sub_188C138(v77 + 2, (v81 - 128));
                if (!*(void *)v141) {
                  goto LABEL_293;
                }
                unint64_t v78 = v84;
                goto LABEL_159;
              }
              uint64_t v79 = (char *)(v77 + 4);
            }
            *(void *)unint64_t v141 = v79;
LABEL_159:
            if (v78 > 4)
            {
              if (*v138) {
                uint64_t v85 = (std::string *)((*v138 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v85 = (std::string *)sub_188DBD8(v138);
              }
              sub_188C020(29, v78, v85);
            }
            else
            {
              uint64_t v82 = *(unsigned int *)(a1 + 72);
              if (v82 == *(_DWORD *)(a1 + 76))
              {
                int v83 = v82 + 1;
                sub_188C80C((unsigned int *)(a1 + 72), v82 + 1);
                *(_DWORD *)(*(void *)(a1 + 80) + 4 * v82) = v78;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 80) + 4 * v82) = v78;
                int v83 = v82 + 1;
              }
              *(_DWORD *)(a1 + 72) = v83;
            }
            uint64_t v77 = *(void *)v141;
            if (*(void *)a3 <= *(void *)v141 || **(_WORD **)v141 != 488) {
              goto LABEL_279;
            }
          }
        }
        if (v7 != 234) {
          goto LABEL_271;
        }
        *(void *)&long long v142 = a1 + 72;
        *((void *)&v142 + 1) = sub_1797214;
        uint64_t v143 = a1 + 8;
        int v133 = 29;
        goto LABEL_270;
      case 0x1Eu:
        if (v7 == 240)
        {
          uint64_t v86 = (uint64_t)(v6 - 2);
          while (1)
          {
            *(void *)unint64_t v141 = v86 + 2;
            unint64_t v87 = *(unsigned __int8 *)(v86 + 2);
            uint64_t v88 = (char *)(v86 + 3);
            if (*(char *)(v86 + 2) < 0)
            {
              int v89 = *v88;
              int v90 = v87 + (v89 << 7);
              unint64_t v87 = (v90 - 128);
              if (v89 < 0)
              {
                *(void *)unint64_t v141 = sub_188C138(v86 + 2, (v90 - 128));
                if (!*(void *)v141) {
                  goto LABEL_293;
                }
                unint64_t v87 = v93;
                goto LABEL_179;
              }
              uint64_t v88 = (char *)(v86 + 4);
            }
            *(void *)unint64_t v141 = v88;
LABEL_179:
            if (sub_129EBB4(v87))
            {
              uint64_t v91 = *(unsigned int *)(a1 + 88);
              if (v91 == *(_DWORD *)(a1 + 92))
              {
                int v92 = v91 + 1;
                sub_188C80C((unsigned int *)(a1 + 88), v91 + 1);
                *(_DWORD *)(*(void *)(a1 + 96) + 4 * v91) = v87;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 96) + 4 * v91) = v87;
                int v92 = v91 + 1;
              }
              *(_DWORD *)(a1 + 88) = v92;
            }
            else
            {
              if (*v138) {
                uint64_t v94 = (std::string *)((*v138 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v94 = (std::string *)sub_188DBD8(v138);
              }
              sub_188C020(30, v87, v94);
            }
            uint64_t v86 = *(void *)v141;
            if (*(void *)a3 <= *(void *)v141 || **(_WORD **)v141 != 496) {
              goto LABEL_279;
            }
          }
        }
        if (v7 == 242)
        {
          *(void *)&long long v142 = a1 + 88;
          *((void *)&v142 + 1) = sub_129EBB4;
          uint64_t v143 = a1 + 8;
          int v133 = 30;
LABEL_270:
          int v144 = v133;
          uint64_t v32 = (uint64_t)sub_1112E88((uint64_t)a3, (char *)v6, &v142);
LABEL_278:
          *(void *)unint64_t v141 = v32;
          if (!v32) {
            goto LABEL_293;
          }
LABEL_279:
          if (sub_11947B8((uint64_t)a3, (char **)v141, a3[11].i32[1])) {
            goto LABEL_3;
          }
          continue;
        }
LABEL_271:
        if (v7) {
          BOOL v134 = (v7 & 7) == 4;
        }
        else {
          BOOL v134 = 1;
        }
        if (!v134)
        {
          if (*v138)
          {
            uint64_t v135 = (std::string *)((*v138 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v135 = (std::string *)sub_188DBD8(v138);
            uint64_t v6 = *(unsigned __int8 **)v141;
          }
          uint64_t v32 = (uint64_t)sub_1885AC0(v7, v135, (char *)v6, a3);
          goto LABEL_278;
        }
        if (v6) {
          a3[10].i32[0] = v7 - 1;
        }
        else {
LABEL_293:
        }
          *(void *)unint64_t v141 = 0;
LABEL_3:
        *(_DWORD *)(a1 + 16) |= v140;
        return *(void *)v141;
      case 0x1Fu:
        if (v7 != 248) {
          goto LABEL_271;
        }
        v140 |= 0x80000u;
        unsigned int v95 = (char *)(v6 + 1);
        uint64_t v96 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_197;
        }
        int v97 = *v95;
        uint64_t v96 = v96 + (v97 << 7) - 128;
        if (v97 < 0)
        {
          uint64_t v129 = sub_188C138((uint64_t)v6, v96);
          *(void *)unint64_t v141 = v129;
          *(unsigned char *)(a1 + 253) = v130 != 0;
          if (!v129) {
            goto LABEL_293;
          }
        }
        else
        {
          unsigned int v95 = (char *)(v6 + 2);
LABEL_197:
          *(void *)unint64_t v141 = v95;
          *(unsigned char *)(a1 + 253) = v96 != 0;
        }
        goto LABEL_279;
      case 0x20u:
        if ((_BYTE)v7) {
          goto LABEL_271;
        }
        v140 |= 0x100000u;
        unsigned int v98 = (char *)(v6 + 1);
        uint64_t v99 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_202;
        }
        int v100 = *v98;
        uint64_t v99 = v99 + (v100 << 7) - 128;
        if (v100 < 0)
        {
          uint64_t v131 = sub_188C138((uint64_t)v6, v99);
          *(void *)unint64_t v141 = v131;
          *(unsigned char *)(a1 + 254) = v132 != 0;
          if (!v131) {
            goto LABEL_293;
          }
        }
        else
        {
          unsigned int v98 = (char *)(v6 + 2);
LABEL_202:
          *(void *)unint64_t v141 = v98;
          *(unsigned char *)(a1 + 254) = v99 != 0;
        }
        goto LABEL_279;
      case 0x21u:
        if (v7 != 10) {
          goto LABEL_271;
        }
        *(_DWORD *)(a1 + 16) |= 0x200u;
        uint64_t v101 = *(void **)(a1 + 200);
        if (!v101)
        {
          unint64_t v102 = (void *)(*v138 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v138) {
            unint64_t v102 = (void *)*v102;
          }
          uint64_t v101 = sub_12BBF44((uint64_t)v102);
          *(void *)(a1 + 200) = v101;
          uint64_t v6 = *(unsigned __int8 **)v141;
        }
        uint64_t v32 = (uint64_t)sub_1209958(a3, (uint64_t)v101, v6);
        goto LABEL_278;
      case 0x22u:
        if (v7 != 18) {
          goto LABEL_271;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v103 = *(void *)(a1 + 8);
        int v15 = (uint64_t *)(v103 & 0xFFFFFFFFFFFFFFFCLL);
        if (v103) {
          int v15 = (uint64_t *)*v15;
        }
        uint64_t v16 = (void *)(a1 + 144);
LABEL_213:
        unsigned int v104 = (std::string *)sub_1880F84(v16, v15);
        uint64_t v32 = (uint64_t)sub_188C244(v104, *(char **)v141, (uint64_t)a3);
        goto LABEL_278;
      case 0x23u:
        if (v7 != 26) {
          goto LABEL_271;
        }
        uint64_t v105 = (char *)(v6 - 2);
        while (1)
        {
          uint64_t v106 = (unsigned __int8 *)(v105 + 2);
          *(void *)unint64_t v141 = v105 + 2;
          unsigned int v107 = *(_DWORD **)(a1 + 120);
          if (v107 && (uint64_t v108 = *(int *)(a1 + 112), (int)v108 < *v107))
          {
            *(_DWORD *)(a1 + 112) = v108 + 1;
            uint64_t v109 = *(void *)&v107[2 * v108 + 2];
          }
          else
          {
            uint64_t v110 = sub_12BCF44(*v139);
            uint64_t v109 = sub_188CDC8((uint64_t)v139, v110);
            uint64_t v106 = *(unsigned __int8 **)v141;
          }
          uint64_t v105 = sub_1797220(a3, v109, v106);
          *(void *)unint64_t v141 = v105;
          if (!v105) {
            goto LABEL_293;
          }
          if (*(void *)a3 <= (unint64_t)v105 || *(_WORD *)v105 != 666) {
            goto LABEL_279;
          }
        }
      case 0x24u:
        if (v7 != 34) {
          goto LABEL_271;
        }
        *(_DWORD *)(a1 + 16) |= 0x400u;
        uint64_t v111 = *(void *)(a1 + 208);
        if (!v111)
        {
          uint64_t v112 = (void *)(*v138 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v138) {
            uint64_t v112 = (void *)*v112;
          }
          uint64_t v111 = sub_129E840((uint64_t)v112);
          *(void *)(a1 + 208) = v111;
          uint64_t v6 = *(unsigned __int8 **)v141;
        }
        uint64_t v32 = (uint64_t)sub_17972B0(a3, v111, v6);
        goto LABEL_278;
      case 0x25u:
        if (v7 != 42) {
          goto LABEL_271;
        }
        *(_DWORD *)(a1 + 16) |= 0x800u;
        uint64_t v113 = *(void *)(a1 + 216);
        if (!v113)
        {
          unint64_t v114 = (void *)(*v138 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v138) {
            unint64_t v114 = (void *)*v114;
          }
          uint64_t v113 = sub_129EACC((uint64_t)v114);
          *(void *)(a1 + 216) = v113;
          uint64_t v6 = *(unsigned __int8 **)v141;
        }
        uint64_t v32 = (uint64_t)sub_1797460(a3, v113, v6);
        goto LABEL_278;
      case 0x26u:
        if (v7 != 50) {
          goto LABEL_271;
        }
        *(_DWORD *)(a1 + 16) |= 0x1000u;
        uint64_t v115 = *(void *)(a1 + 224);
        if (!v115)
        {
          uint64_t v116 = (void *)(*v138 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v138) {
            uint64_t v116 = (void *)*v116;
          }
          uint64_t v115 = sub_183054C((uint64_t)v116);
          *(void *)(a1 + 224) = v115;
          uint64_t v6 = *(unsigned __int8 **)v141;
        }
        uint64_t v32 = sub_17974F0(a3, v115, v6);
        goto LABEL_278;
      default:
        goto LABEL_271;
    }
  }
}

unsigned char *sub_17C6DF8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x2000) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 232);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 8) == 0)
    {
LABEL_10:
      if ((v6 & 2) == 0) {
        goto LABEL_11;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 152);
  *uint64_t v4 = 26;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    int v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    int v12 = v4 + 2;
  }
  uint64_t v4 = sub_1792424(v10, (unint64_t)v12, a3);
  if ((v6 & 2) == 0)
  {
LABEL_11:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x4000) == 0) {
    goto LABEL_27;
  }
LABEL_21:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unsigned int v13 = *(_DWORD *)(a1 + 236);
  *uint64_t v4 = 40;
  v4[1] = v13;
  if (v13 > 0x7F)
  {
    v4[1] = v13 | 0x80;
    unsigned int v14 = v13 >> 7;
    v4[2] = v13 >> 7;
    v4 += 3;
    if (v13 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unsigned int v15 = v14 >> 14;
        v14 >>= 7;
        *v4++ = v14;
      }
      while (v15);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_27:
  if ((v6 & 0x8000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 240);
    *uint64_t v4 = 48;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(int *)(a1 + 244);
    *uint64_t v4 = 56;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v22 = *(void *)(a1 + 160);
    *uint64_t v4 = 66;
    unsigned int v23 = *(_DWORD *)(v22 + 20);
    v4[1] = v23;
    if (v23 > 0x7F) {
      int v24 = sub_188A9CC(v23, v4 + 1);
    }
    else {
      int v24 = v4 + 2;
    }
    uint64_t v4 = sub_1793774(v22, v24, a3);
    if ((v6 & 0x40000) == 0)
    {
LABEL_43:
      if ((v6 & 0x20) == 0) {
        goto LABEL_60;
      }
      goto LABEL_54;
    }
  }
  else if ((v6 & 0x40000) == 0)
  {
    goto LABEL_43;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v25 = *(unsigned char *)(a1 + 252);
  *uint64_t v4 = 72;
  v4[1] = v25;
  v4 += 2;
  if ((v6 & 0x20) != 0)
  {
LABEL_54:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v26 = *(void *)(a1 + 168);
    *uint64_t v4 = 82;
    unsigned int v27 = *(_DWORD *)(v26 + 80);
    v4[1] = v27;
    if (v27 > 0x7F) {
      int v28 = sub_188A9CC(v27, v4 + 1);
    }
    else {
      int v28 = v4 + 2;
    }
    uint64_t v4 = sub_12991CC(v26, v28, a3);
  }
LABEL_60:
  uint64_t v29 = *(unsigned int *)(a1 + 24);
  if ((int)v29 >= 1)
  {
    for (uint64_t i = 0; i != v29; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v31 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *(_WORD *)uint64_t v4 = 424;
      v4[2] = v31;
      if (v31 > 0x7F)
      {
        v4[2] = v31 | 0x80;
        unint64_t v32 = v31 >> 7;
        v4[3] = v31 >> 7;
        v4 += 4;
        if (v31 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v33 = v32 >> 14;
            v32 >>= 7;
            *v4++ = v32;
          }
          while (v33);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v34 = *(void *)(a1 + 176);
    *(_WORD *)uint64_t v4 = 434;
    unsigned int v35 = *(_DWORD *)(v34 + 20);
    v4[2] = v35;
    if (v35 > 0x7F) {
      uint64_t v36 = sub_188A9CC(v35, v4 + 2);
    }
    else {
      uint64_t v36 = v4 + 3;
    }
    uint64_t v4 = sub_16EEE18(v34, v36, a3);
  }
  uint64_t v37 = *(unsigned int *)(a1 + 40);
  if ((int)v37 >= 1)
  {
    for (uint64_t j = 0; j != v37; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v39 = *(int *)(*(void *)(a1 + 48) + 4 * j);
      *(_WORD *)uint64_t v4 = 440;
      v4[2] = v39;
      if (v39 > 0x7F)
      {
        v4[2] = v39 | 0x80;
        unint64_t v40 = v39 >> 7;
        v4[3] = v39 >> 7;
        v4 += 4;
        if (v39 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v41 = v40 >> 14;
            v40 >>= 7;
            *v4++ = v40;
          }
          while (v41);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v6 & 0x20000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v42 = *(_DWORD *)(a1 + 248);
    *(_WORD *)uint64_t v4 = 448;
    v4[2] = v42;
    if (v42 > 0x7F)
    {
      v4[2] = v42 | 0x80;
      unsigned int v43 = v42 >> 7;
      v4[3] = v42 >> 7;
      v4 += 4;
      if (v42 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v44 = v43 >> 14;
          v43 >>= 7;
          *v4++ = v43;
        }
        while (v44);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v45 = *(void *)(a1 + 184);
    *(_WORD *)uint64_t v4 = 458;
    unsigned int v46 = *(_DWORD *)(v45 + 20);
    v4[2] = v46;
    if (v46 > 0x7F) {
      uint64_t v47 = sub_188A9CC(v46, v4 + 2);
    }
    else {
      uint64_t v47 = v4 + 3;
    }
    uint64_t v4 = sub_12B7A54(v45, v47, a3);
  }
  uint64_t v48 = *(unsigned int *)(a1 + 56);
  if ((int)v48 >= 1)
  {
    for (uint64_t k = 0; k != v48; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v50 = *(int *)(*(void *)(a1 + 64) + 4 * k);
      *(_WORD *)uint64_t v4 = 464;
      v4[2] = v50;
      if (v50 > 0x7F)
      {
        v4[2] = v50 | 0x80;
        unint64_t v51 = v50 >> 7;
        v4[3] = v50 >> 7;
        v4 += 4;
        if (v50 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v52 = v51 >> 14;
            v51 >>= 7;
            *v4++ = v51;
          }
          while (v52);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v6 & 0x200000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v53 = *(int *)(a1 + 256);
    *(_WORD *)uint64_t v4 = 472;
    v4[2] = v53;
    if (v53 > 0x7F)
    {
      v4[2] = v53 | 0x80;
      unint64_t v54 = v53 >> 7;
      v4[3] = v53 >> 7;
      v4 += 4;
      if (v53 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v55 = v54 >> 14;
          v54 >>= 7;
          *v4++ = v54;
        }
        while (v55);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v56 = *(void *)(a1 + 192);
    *(_WORD *)uint64_t v4 = 482;
    unsigned int v57 = *(_DWORD *)(v56 + 20);
    v4[2] = v57;
    if (v57 > 0x7F) {
      uint64_t v58 = sub_188A9CC(v57, v4 + 2);
    }
    else {
      uint64_t v58 = v4 + 3;
    }
    uint64_t v4 = sub_1792424(v56, (unint64_t)v58, a3);
  }
  uint64_t v59 = *(unsigned int *)(a1 + 72);
  if ((int)v59 >= 1)
  {
    for (uint64_t m = 0; m != v59; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v61 = *(int *)(*(void *)(a1 + 80) + 4 * m);
      *(_WORD *)uint64_t v4 = 488;
      v4[2] = v61;
      if (v61 > 0x7F)
      {
        v4[2] = v61 | 0x80;
        unint64_t v62 = v61 >> 7;
        v4[3] = v61 >> 7;
        v4 += 4;
        if (v61 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v63 = v62 >> 14;
            v62 >>= 7;
            *v4++ = v62;
          }
          while (v63);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  uint64_t v64 = *(unsigned int *)(a1 + 88);
  if ((int)v64 >= 1)
  {
    for (uint64_t n = 0; n != v64; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v66 = *(int *)(*(void *)(a1 + 96) + 4 * n);
      *(_WORD *)uint64_t v4 = 496;
      v4[2] = v66;
      if (v66 > 0x7F)
      {
        v4[2] = v66 | 0x80;
        unint64_t v67 = v66 >> 7;
        v4[3] = v66 >> 7;
        v4 += 4;
        if (v66 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v68 = v67 >> 14;
            v67 >>= 7;
            *v4++ = v67;
          }
          while (v68);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v6 & 0x80000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v74 = *(unsigned char *)(a1 + 253);
    *(_WORD *)uint64_t v4 = 504;
    v4[2] = v74;
    v4 += 3;
    if ((v6 & 0x100000) == 0)
    {
LABEL_142:
      if ((v6 & 0x200) == 0) {
        goto LABEL_143;
      }
      goto LABEL_163;
    }
  }
  else if ((v6 & 0x100000) == 0)
  {
    goto LABEL_142;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v75 = *(unsigned char *)(a1 + 254);
  *(_WORD *)uint64_t v4 = 640;
  v4[2] = v75;
  v4 += 3;
  if ((v6 & 0x200) == 0)
  {
LABEL_143:
    if ((v6 & 4) == 0) {
      goto LABEL_145;
    }
    goto LABEL_144;
  }
LABEL_163:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v76 = *(void *)(a1 + 200);
  *(_WORD *)uint64_t v4 = 650;
  unsigned int v77 = *(_DWORD *)(v76 + 20);
  v4[2] = v77;
  if (v77 > 0x7F) {
    unint64_t v78 = sub_188A9CC(v77, v4 + 2);
  }
  else {
    unint64_t v78 = v4 + 3;
  }
  uint64_t v4 = sub_12A4C18(v76, (unint64_t)v78, a3);
  if ((v6 & 4) != 0) {
LABEL_144:
  }
    uint64_t v4 = sub_117A0AC(a3, 34, (const void **)(*(void *)(a1 + 144) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_145:
  int v69 = *(_DWORD *)(a1 + 112);
  if (v69)
  {
    for (iuint64_t i = 0; ii != v69; ++ii)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v71 = *(void *)(*(void *)(a1 + 120) + 8 * ii + 8);
      *(_WORD *)uint64_t v4 = 666;
      unsigned int v72 = *(_DWORD *)(v71 + 20);
      v4[2] = v72;
      if (v72 > 0x7F) {
        BOOL v73 = sub_188A9CC(v72, v4 + 2);
      }
      else {
        BOOL v73 = v4 + 3;
      }
      uint64_t v4 = sub_12B86DC(v71, (unint64_t)v73, a3);
    }
  }
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v79 = *(void *)(a1 + 208);
    *(_WORD *)uint64_t v4 = 674;
    unsigned int v80 = *(_DWORD *)(v79 + 40);
    v4[2] = v80;
    if (v80 > 0x7F) {
      int v81 = sub_188A9CC(v80, v4 + 2);
    }
    else {
      int v81 = v4 + 3;
    }
    uint64_t v4 = sub_129AE14(v79, v81, a3);
    if ((v6 & 0x800) == 0)
    {
LABEL_155:
      if ((v6 & 0x1000) == 0) {
        goto LABEL_188;
      }
      goto LABEL_182;
    }
  }
  else if ((v6 & 0x800) == 0)
  {
    goto LABEL_155;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v82 = *(void *)(a1 + 216);
  *(_WORD *)uint64_t v4 = 682;
  unsigned int v83 = *(_DWORD *)(v82 + 40);
  v4[2] = v83;
  if (v83 > 0x7F) {
    unint64_t v84 = sub_188A9CC(v83, v4 + 2);
  }
  else {
    unint64_t v84 = v4 + 3;
  }
  uint64_t v4 = sub_129DA64(v82, v84, a3);
  if ((v6 & 0x1000) != 0)
  {
LABEL_182:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v85 = *(void *)(a1 + 224);
    *(_WORD *)uint64_t v4 = 690;
    unsigned int v86 = *(_DWORD *)(v85 + 20);
    v4[2] = v86;
    if (v86 > 0x7F) {
      unint64_t v87 = sub_188A9CC(v86, v4 + 2);
    }
    else {
      unint64_t v87 = v4 + 3;
    }
    uint64_t v4 = sub_1799DFC(v85, (unint64_t)v87, a3);
  }
LABEL_188:
  uint64_t v88 = *(void *)(a1 + 8);
  if ((v88 & 1) == 0) {
    return v4;
  }
  unint64_t v90 = v88 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v90 + 31) < 0)
  {
    uint64_t v91 = *(void **)(v90 + 8);
    uint64_t v92 = *(void *)(v90 + 16);
  }
  else
  {
    uint64_t v91 = (void *)(v90 + 8);
    LODWORD(v92) = *(unsigned __int8 *)(v90 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v92)
  {
    uint64_t v93 = (int)v92;
    memcpy(v4, v91, (int)v92);
    v4 += v93;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v91, v92, v4);
}

uint64_t sub_17C7A5C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    uint64_t v3 = 0;
    int v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v4);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v3 += v6;
      ++v4;
    }
    while (v2 != v4);
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v7 = *(unsigned int *)(a1 + 40);
  if (v7)
  {
    int v8 = 0;
    uint64_t v9 = 0;
    do
    {
      int v10 = *(_DWORD *)(*(void *)(a1 + 48) + 4 * v8);
      if (v10 < 0) {
        uint64_t v11 = 10;
      }
      else {
        uint64_t v11 = (9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6;
      }
      v9 += v11;
      ++v8;
    }
    while (v7 != v8);
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v12 = *(unsigned int *)(a1 + 56);
  if (v12)
  {
    int v13 = 0;
    uint64_t v14 = 0;
    do
    {
      int v15 = *(_DWORD *)(*(void *)(a1 + 64) + 4 * v13);
      if (v15 < 0) {
        uint64_t v16 = 10;
      }
      else {
        uint64_t v16 = (9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6;
      }
      v14 += v16;
      ++v13;
    }
    while (v12 != v13);
  }
  else
  {
    uint64_t v14 = 0;
  }
  uint64_t v17 = *(unsigned int *)(a1 + 72);
  if (v17)
  {
    int v18 = 0;
    uint64_t v19 = 0;
    do
    {
      int v20 = *(_DWORD *)(*(void *)(a1 + 80) + 4 * v18);
      if (v20 < 0) {
        uint64_t v21 = 10;
      }
      else {
        uint64_t v21 = (9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6;
      }
      v19 += v21;
      ++v18;
    }
    while (v17 != v18);
  }
  else
  {
    uint64_t v19 = 0;
  }
  uint64_t v22 = *(unsigned int *)(a1 + 88);
  if (v22)
  {
    int v23 = 0;
    uint64_t v24 = 0;
    do
    {
      int v25 = *(_DWORD *)(*(void *)(a1 + 96) + 4 * v23);
      if (v25 < 0) {
        uint64_t v26 = 10;
      }
      else {
        uint64_t v26 = (9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6;
      }
      v24 += v26;
      ++v23;
    }
    while (v22 != v23);
  }
  else
  {
    uint64_t v24 = 0;
  }
  uint64_t v27 = *(int *)(a1 + 112);
  uint64_t v28 = v9 + v3 + v14 + v19 + v24 + 2 * (v7 + v2 + v12 + v17 + v22 + v27);
  uint64_t v29 = *(void *)(a1 + 120);
  if (v29) {
    uint64_t v30 = (uint64_t *)(v29 + 8);
  }
  else {
    uint64_t v30 = 0;
  }
  if (v27)
  {
    uint64_t v31 = 8 * v27;
    do
    {
      uint64_t v32 = *v30++;
      uint64_t v33 = sub_12B8804(v32);
      v28 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6);
      v31 -= 8;
    }
    while (v31);
  }
  int v34 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v34) {
    goto LABEL_57;
  }
  if (v34)
  {
    unint64_t v45 = *(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v46 = *(unsigned __int8 *)(v45 + 23);
    uint64_t v47 = *(void *)(v45 + 8);
    if ((v46 & 0x80u) == 0) {
      uint64_t v47 = v46;
    }
    v28 += v47 + ((9 * (__clz(v47 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v34 & 2) == 0)
    {
LABEL_50:
      if ((v34 & 4) == 0) {
        goto LABEL_51;
      }
      goto LABEL_95;
    }
  }
  else if ((v34 & 2) == 0)
  {
    goto LABEL_50;
  }
  unint64_t v48 = *(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v49 = *(unsigned __int8 *)(v48 + 23);
  uint64_t v50 = *(void *)(v48 + 8);
  if ((v49 & 0x80u) == 0) {
    uint64_t v50 = v49;
  }
  v28 += v50 + ((9 * (__clz(v50 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v34 & 4) == 0)
  {
LABEL_51:
    if ((v34 & 8) == 0) {
      goto LABEL_52;
    }
    goto LABEL_98;
  }
LABEL_95:
  unint64_t v51 = *(void *)(a1 + 144) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v52 = *(unsigned __int8 *)(v51 + 23);
  uint64_t v53 = *(void *)(v51 + 8);
  if ((v52 & 0x80u) == 0) {
    uint64_t v53 = v52;
  }
  v28 += v53 + ((9 * (__clz(v53 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v34 & 8) == 0)
  {
LABEL_52:
    if ((v34 & 0x10) == 0) {
      goto LABEL_53;
    }
    goto LABEL_99;
  }
LABEL_98:
  uint64_t v54 = sub_1792638(*(void *)(a1 + 152));
  v28 += v54 + ((9 * (__clz(v54 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v34 & 0x10) == 0)
  {
LABEL_53:
    if ((v34 & 0x20) == 0) {
      goto LABEL_54;
    }
LABEL_100:
    uint64_t v56 = sub_1299454(*(void *)(a1 + 168));
    v28 += v56 + ((9 * (__clz(v56 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v34 & 0x40) == 0)
    {
LABEL_55:
      if ((v34 & 0x80) == 0) {
        goto LABEL_57;
      }
      goto LABEL_56;
    }
    goto LABEL_101;
  }
LABEL_99:
  uint64_t v55 = sub_17939B8(*(void *)(a1 + 160));
  v28 += v55 + ((9 * (__clz(v55 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v34 & 0x20) != 0) {
    goto LABEL_100;
  }
LABEL_54:
  if ((v34 & 0x40) == 0) {
    goto LABEL_55;
  }
LABEL_101:
  uint64_t v57 = sub_16EF228(*(void *)(a1 + 176));
  v28 += v57 + ((9 * (__clz(v57 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v34 & 0x80) != 0)
  {
LABEL_56:
    uint64_t v35 = sub_12B7D00(*(void *)(a1 + 184));
    v28 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_57:
  if ((v34 & 0xFF00) == 0) {
    goto LABEL_67;
  }
  if ((v34 & 0x100) != 0)
  {
    uint64_t v58 = sub_1792638(*(void *)(a1 + 192));
    v28 += v58 + ((9 * (__clz(v58 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v34 & 0x200) == 0)
    {
LABEL_60:
      if ((v34 & 0x400) == 0) {
        goto LABEL_61;
      }
      goto LABEL_105;
    }
  }
  else if ((v34 & 0x200) == 0)
  {
    goto LABEL_60;
  }
  uint64_t v59 = sub_12A4ED4(*(void *)(a1 + 200));
  v28 += v59 + ((9 * (__clz(v59 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v34 & 0x400) == 0)
  {
LABEL_61:
    if ((v34 & 0x800) == 0) {
      goto LABEL_62;
    }
    goto LABEL_106;
  }
LABEL_105:
  uint64_t v60 = sub_129AEE0(*(void *)(a1 + 208));
  v28 += v60 + ((9 * (__clz(v60 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v34 & 0x800) == 0)
  {
LABEL_62:
    if ((v34 & 0x1000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_107;
  }
LABEL_106:
  uint64_t v61 = sub_129DBA8(*(void *)(a1 + 216));
  v28 += v61 + ((9 * (__clz(v61 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v34 & 0x1000) == 0)
  {
LABEL_63:
    if ((v34 & 0x2000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_108;
  }
LABEL_107:
  uint64_t v62 = sub_1799F00(*(void *)(a1 + 224));
  v28 += v62 + ((9 * (__clz(v62 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v34 & 0x2000) == 0)
  {
LABEL_64:
    if ((v34 & 0x4000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_109;
  }
LABEL_108:
  v28 += ((9 * (__clz(*(_DWORD *)(a1 + 232) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v34 & 0x4000) == 0)
  {
LABEL_65:
    if ((v34 & 0x8000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_66;
  }
LABEL_109:
  v28 += ((9 * (__clz(*(_DWORD *)(a1 + 236) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v34 & 0x8000) != 0) {
LABEL_66:
  }
    v28 += ((9 * (__clz(*(_DWORD *)(a1 + 240) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_67:
  if ((v34 & 0x3F0000) != 0)
  {
    if ((v34 & 0x10000) != 0)
    {
      int v36 = *(_DWORD *)(a1 + 244);
      uint64_t v37 = ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v36 >= 0) {
        uint64_t v38 = v37;
      }
      else {
        uint64_t v38 = 11;
      }
      v28 += v38;
    }
    if ((v34 & 0x20000) != 0) {
      v28 += ((9 * (__clz(*(_DWORD *)(a1 + 248) | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v39 = v28 + 2;
    if ((v34 & 0x40000) == 0) {
      uint64_t v39 = v28;
    }
    if ((v34 & 0x80000) != 0) {
      v39 += 3;
    }
    if ((v34 & 0x100000) != 0) {
      uint64_t v28 = v39 + 3;
    }
    else {
      uint64_t v28 = v39;
    }
    if ((v34 & 0x200000) != 0)
    {
      int v40 = *(_DWORD *)(a1 + 256);
      uint64_t v41 = ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v40 >= 0) {
        uint64_t v42 = v41;
      }
      else {
        uint64_t v42 = 12;
      }
      v28 += v42;
    }
  }
  uint64_t v43 = *(void *)(a1 + 8);
  if (v43)
  {
    unint64_t v63 = v43 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v63 + 31) < 0) {
      uint64_t v64 = *(void *)(v63 + 16);
    }
    else {
      uint64_t v64 = *(unsigned __int8 *)(v63 + 31);
    }
    v28 += v64;
  }
  *(_DWORD *)(a1 + 20) = v28;
  return v28;
}

void sub_17C8104(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188C80C((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if (v8)
  {
    uint64_t v9 = *(int *)(a1 + 40);
    sub_188C80C((unsigned int *)(a1 + 40), v9 + v8);
    uint64_t v10 = *(void *)(a1 + 48);
    *(_DWORD *)(a1 + 40) += *(_DWORD *)(a2 + 40);
    memcpy((void *)(v10 + 4 * v9), *(const void **)(a2 + 48), 4 * *(int *)(a2 + 40));
  }
  int v11 = *(_DWORD *)(a2 + 56);
  if (v11)
  {
    uint64_t v12 = *(int *)(a1 + 56);
    sub_188C80C((unsigned int *)(a1 + 56), v12 + v11);
    uint64_t v13 = *(void *)(a1 + 64);
    *(_DWORD *)(a1 + 56) += *(_DWORD *)(a2 + 56);
    memcpy((void *)(v13 + 4 * v12), *(const void **)(a2 + 64), 4 * *(int *)(a2 + 56));
  }
  int v14 = *(_DWORD *)(a2 + 72);
  if (v14)
  {
    uint64_t v15 = *(int *)(a1 + 72);
    sub_188C80C((unsigned int *)(a1 + 72), v15 + v14);
    uint64_t v16 = *(void *)(a1 + 80);
    *(_DWORD *)(a1 + 72) += *(_DWORD *)(a2 + 72);
    memcpy((void *)(v16 + 4 * v15), *(const void **)(a2 + 80), 4 * *(int *)(a2 + 72));
  }
  int v17 = *(_DWORD *)(a2 + 88);
  if (v17)
  {
    uint64_t v18 = *(int *)(a1 + 88);
    sub_188C80C((unsigned int *)(a1 + 88), v18 + v17);
    uint64_t v19 = *(void *)(a1 + 96);
    *(_DWORD *)(a1 + 88) += *(_DWORD *)(a2 + 88);
    memcpy((void *)(v19 + 4 * v18), *(const void **)(a2 + 96), 4 * *(int *)(a2 + 88));
  }
  int v20 = *(_DWORD *)(a2 + 112);
  if (v20)
  {
    uint64_t v21 = (uint64_t *)(*(void *)(a2 + 120) + 8);
    uint64_t v22 = (std::string **)sub_188CCE4(a1 + 104, *(_DWORD *)(a2 + 112));
    sub_18785B8((uint64_t *)(a1 + 104), v22, v21, v20, **(_DWORD **)(a1 + 120) - *(_DWORD *)(a1 + 112));
    int v23 = *(_DWORD *)(a1 + 112) + v20;
    *(_DWORD *)(a1 + 112) = v23;
    uint64_t v24 = *(int **)(a1 + 120);
    if (*v24 < v23) {
      int *v24 = v23;
    }
  }
  int v25 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v25) {
    goto LABEL_73;
  }
  if (v25)
  {
    uint64_t v26 = (long long *)(*(void *)(a2 + 128) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v27 = *(void *)(a1 + 8);
    uint64_t v28 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
    if (v27) {
      uint64_t v28 = (uint64_t *)*v28;
    }
    sub_1881DF4((std::string **)(a1 + 128), v26, v28);
    if ((v25 & 2) == 0)
    {
LABEL_17:
      if ((v25 & 4) == 0) {
        goto LABEL_18;
      }
      goto LABEL_30;
    }
  }
  else if ((v25 & 2) == 0)
  {
    goto LABEL_17;
  }
  uint64_t v29 = (long long *)(*(void *)(a2 + 136) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v30 = *(void *)(a1 + 8);
  uint64_t v31 = (uint64_t *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
  if (v30) {
    uint64_t v31 = (uint64_t *)*v31;
  }
  sub_1881DF4((std::string **)(a1 + 136), v29, v31);
  if ((v25 & 4) == 0)
  {
LABEL_18:
    if ((v25 & 8) == 0) {
      goto LABEL_19;
    }
    goto LABEL_33;
  }
LABEL_30:
  uint64_t v32 = (long long *)(*(void *)(a2 + 144) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v33 = *(void *)(a1 + 8);
  int v34 = (uint64_t *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
  if (v33) {
    int v34 = (uint64_t *)*v34;
  }
  sub_1881DF4((std::string **)(a1 + 144), v32, v34);
  if ((v25 & 8) == 0)
  {
LABEL_19:
    if ((v25 & 0x10) == 0) {
      goto LABEL_20;
    }
    goto LABEL_41;
  }
LABEL_33:
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v35 = *(void **)(a1 + 152);
  if (!v35)
  {
    uint64_t v36 = *(void *)(a1 + 8);
    uint64_t v37 = (void *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
    if (v36) {
      uint64_t v37 = (void *)*v37;
    }
    uint64_t v35 = sub_18302C8((uint64_t)v37);
    *(void *)(a1 + 152) = v35;
  }
  if (*(void *)(a2 + 152)) {
    uint64_t v38 = *(uint64_t (****)())(a2 + 152);
  }
  else {
    uint64_t v38 = &off_2549800;
  }
  sub_1792730((uint64_t)v35, (uint64_t)v38);
  if ((v25 & 0x10) == 0)
  {
LABEL_20:
    if ((v25 & 0x20) == 0) {
      goto LABEL_21;
    }
LABEL_49:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v43 = *(std::string **)(a1 + 168);
    if (!v43)
    {
      uint64_t v44 = *(void *)(a1 + 8);
      unint64_t v45 = (void *)(v44 & 0xFFFFFFFFFFFFFFFCLL);
      if (v44) {
        unint64_t v45 = (void *)*v45;
      }
      uint64_t v43 = (std::string *)sub_129E61C((uint64_t)v45);
      *(void *)(a1 + 168) = v43;
    }
    if (*(void *)(a2 + 168)) {
      uint64_t v46 = *(uint64_t (****)())(a2 + 168);
    }
    else {
      uint64_t v46 = &off_25305C8;
    }
    sub_129956C(v43, (uint64_t)v46);
    if ((v25 & 0x40) == 0)
    {
LABEL_22:
      if ((v25 & 0x80) == 0) {
        goto LABEL_73;
      }
      goto LABEL_65;
    }
    goto LABEL_57;
  }
LABEL_41:
  *(_DWORD *)(a1 + 16) |= 0x10u;
  uint64_t v39 = *(std::string **)(a1 + 160);
  if (!v39)
  {
    uint64_t v40 = *(void *)(a1 + 8);
    uint64_t v41 = (void *)(v40 & 0xFFFFFFFFFFFFFFFCLL);
    if (v40) {
      uint64_t v41 = (void *)*v41;
    }
    uint64_t v39 = (std::string *)sub_18303E4((uint64_t)v41);
    *(void *)(a1 + 160) = v39;
  }
  if (*(void *)(a2 + 160)) {
    uint64_t v42 = *(uint64_t (****)())(a2 + 160);
  }
  else {
    uint64_t v42 = &off_2549858;
  }
  sub_1793C44(v39, (uint64_t)v42);
  if ((v25 & 0x20) != 0) {
    goto LABEL_49;
  }
LABEL_21:
  if ((v25 & 0x40) == 0) {
    goto LABEL_22;
  }
LABEL_57:
  *(_DWORD *)(a1 + 16) |= 0x40u;
  uint64_t v47 = *(void *)(a1 + 176);
  if (!v47)
  {
    uint64_t v48 = *(void *)(a1 + 8);
    uint64_t v49 = (void *)(v48 & 0xFFFFFFFFFFFFFFFCLL);
    if (v48) {
      uint64_t v49 = (void *)*v49;
    }
    sub_17888DC((uint64_t)v49);
    *(void *)(a1 + 176) = v47;
  }
  if (*(void *)(a2 + 176)) {
    uint64_t v50 = *(uint64_t (****)())(a2 + 176);
  }
  else {
    uint64_t v50 = &off_2545B88;
  }
  sub_16EF40C(v47, (uint64_t)v50);
  if ((v25 & 0x80) != 0)
  {
LABEL_65:
    *(_DWORD *)(a1 + 16) |= 0x80u;
    uint64_t v51 = *(void *)(a1 + 184);
    if (!v51)
    {
      uint64_t v52 = *(void *)(a1 + 8);
      uint64_t v53 = (void *)(v52 & 0xFFFFFFFFFFFFFFFCLL);
      if (v52) {
        uint64_t v53 = (void *)*v53;
      }
      uint64_t v51 = sub_12BCE18((uint64_t)v53);
      *(void *)(a1 + 184) = v51;
    }
    if (*(void *)(a2 + 184)) {
      uint64_t v54 = *(uint64_t (****)())(a2 + 184);
    }
    else {
      uint64_t v54 = &off_2530F90;
    }
    sub_12B7E70(v51, (uint64_t)v54);
  }
LABEL_73:
  if ((v25 & 0xFF00) == 0) {
    goto LABEL_84;
  }
  if ((v25 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x100u;
    uint64_t v56 = *(void **)(a1 + 192);
    if (!v56)
    {
      uint64_t v57 = *(void *)(a1 + 8);
      uint64_t v58 = (void *)(v57 & 0xFFFFFFFFFFFFFFFCLL);
      if (v57) {
        uint64_t v58 = (void *)*v58;
      }
      uint64_t v56 = sub_18302C8((uint64_t)v58);
      *(void *)(a1 + 192) = v56;
    }
    if (*(void *)(a2 + 192)) {
      uint64_t v59 = *(uint64_t (****)())(a2 + 192);
    }
    else {
      uint64_t v59 = &off_2549800;
    }
    sub_1792730((uint64_t)v56, (uint64_t)v59);
    if ((v25 & 0x200) == 0)
    {
LABEL_76:
      if ((v25 & 0x400) == 0) {
        goto LABEL_77;
      }
      goto LABEL_113;
    }
  }
  else if ((v25 & 0x200) == 0)
  {
    goto LABEL_76;
  }
  *(_DWORD *)(a1 + 16) |= 0x200u;
  uint64_t v60 = *(void **)(a1 + 200);
  if (!v60)
  {
    uint64_t v61 = *(void *)(a1 + 8);
    uint64_t v62 = (void *)(v61 & 0xFFFFFFFFFFFFFFFCLL);
    if (v61) {
      uint64_t v62 = (void *)*v62;
    }
    uint64_t v60 = sub_12BBF44((uint64_t)v62);
    *(void *)(a1 + 200) = v60;
  }
  if (*(void *)(a2 + 200)) {
    unint64_t v63 = *(uint64_t (****)())(a2 + 200);
  }
  else {
    unint64_t v63 = &off_25309E0;
  }
  sub_12A5038((uint64_t)v60, (uint64_t)v63);
  if ((v25 & 0x400) == 0)
  {
LABEL_77:
    if ((v25 & 0x800) == 0) {
      goto LABEL_78;
    }
    goto LABEL_121;
  }
LABEL_113:
  *(_DWORD *)(a1 + 16) |= 0x400u;
  uint64_t v64 = *(void *)(a1 + 208);
  if (!v64)
  {
    uint64_t v65 = *(void *)(a1 + 8);
    unint64_t v66 = (void *)(v65 & 0xFFFFFFFFFFFFFFFCLL);
    if (v65) {
      unint64_t v66 = (void *)*v66;
    }
    uint64_t v64 = sub_129E840((uint64_t)v66);
    *(void *)(a1 + 208) = v64;
  }
  if (*(void *)(a2 + 208)) {
    unint64_t v67 = *(uint64_t (****)())(a2 + 208);
  }
  else {
    unint64_t v67 = &off_2530690;
  }
  sub_129AF38(v64, (uint64_t)v67);
  if ((v25 & 0x800) == 0)
  {
LABEL_78:
    if ((v25 & 0x1000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_129;
  }
LABEL_121:
  *(_DWORD *)(a1 + 16) |= 0x800u;
  unint64_t v68 = *(std::string **)(a1 + 216);
  if (!v68)
  {
    uint64_t v69 = *(void *)(a1 + 8);
    int v70 = (void *)(v69 & 0xFFFFFFFFFFFFFFFCLL);
    if (v69) {
      int v70 = (void *)*v70;
    }
    unint64_t v68 = (std::string *)sub_129EACC((uint64_t)v70);
    *(void *)(a1 + 216) = v68;
  }
  if (*(void *)(a2 + 216)) {
    uint64_t v71 = *(uint64_t (****)())(a2 + 216);
  }
  else {
    uint64_t v71 = &off_2530770;
  }
  sub_129DC58(v68, (uint64_t)v71);
  if ((v25 & 0x1000) == 0)
  {
LABEL_79:
    if ((v25 & 0x2000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_137;
  }
LABEL_129:
  *(_DWORD *)(a1 + 16) |= 0x1000u;
  unsigned int v72 = *(std::string **)(a1 + 224);
  if (!v72)
  {
    uint64_t v73 = *(void *)(a1 + 8);
    char v74 = (void *)(v73 & 0xFFFFFFFFFFFFFFFCLL);
    if (v73) {
      char v74 = (void *)*v74;
    }
    unsigned int v72 = (std::string *)sub_183054C((uint64_t)v74);
    *(void *)(a1 + 224) = v72;
  }
  if (*(void *)(a2 + 224)) {
    char v75 = *(uint64_t (****)())(a2 + 224);
  }
  else {
    char v75 = &off_2549A70;
  }
  sub_142E300(v72, (uint64_t)v75);
  if ((v25 & 0x2000) == 0)
  {
LABEL_80:
    if ((v25 & 0x4000) == 0) {
      goto LABEL_81;
    }
LABEL_138:
    *(_DWORD *)(a1 + 236) = *(_DWORD *)(a2 + 236);
    if ((v25 & 0x8000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_82;
  }
LABEL_137:
  *(_DWORD *)(a1 + 232) = *(_DWORD *)(a2 + 232);
  if ((v25 & 0x4000) != 0) {
    goto LABEL_138;
  }
LABEL_81:
  if ((v25 & 0x8000) != 0) {
LABEL_82:
  }
    *(_DWORD *)(a1 + 240) = *(_DWORD *)(a2 + 240);
LABEL_83:
  *(_DWORD *)(a1 + 16) |= v25;
LABEL_84:
  if ((v25 & 0x3F0000) == 0) {
    goto LABEL_93;
  }
  if ((v25 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 244) = *(_DWORD *)(a2 + 244);
    if ((v25 & 0x20000) == 0)
    {
LABEL_87:
      if ((v25 & 0x40000) == 0) {
        goto LABEL_88;
      }
      goto LABEL_142;
    }
  }
  else if ((v25 & 0x20000) == 0)
  {
    goto LABEL_87;
  }
  *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
  if ((v25 & 0x40000) == 0)
  {
LABEL_88:
    if ((v25 & 0x80000) == 0) {
      goto LABEL_89;
    }
    goto LABEL_143;
  }
LABEL_142:
  *(unsigned char *)(a1 + 252) = *(unsigned char *)(a2 + 252);
  if ((v25 & 0x80000) == 0)
  {
LABEL_89:
    if ((v25 & 0x100000) == 0) {
      goto LABEL_90;
    }
LABEL_144:
    *(unsigned char *)(a1 + 254) = *(unsigned char *)(a2 + 254);
    if ((v25 & 0x200000) == 0) {
      goto LABEL_92;
    }
    goto LABEL_91;
  }
LABEL_143:
  *(unsigned char *)(a1 + 253) = *(unsigned char *)(a2 + 253);
  if ((v25 & 0x100000) != 0) {
    goto LABEL_144;
  }
LABEL_90:
  if ((v25 & 0x200000) != 0) {
LABEL_91:
  }
    *(_DWORD *)(a1 + 256) = *(_DWORD *)(a2 + 256);
LABEL_92:
  *(_DWORD *)(a1 + 16) |= v25;
LABEL_93:
  uint64_t v55 = *(void *)(a2 + 8);
  if (v55)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v55 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17C87B4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 8) != 0)
  {
    uint64_t v3 = *(void *)(a1 + 152);
    if (*(unsigned char *)(v3 + 16))
    {
      uint64_t result = sub_15B1FC0(*(void *)(v3 + 24));
      if (!result) {
        return result;
      }
      int v2 = *(_DWORD *)(a1 + 16);
    }
  }
  if ((v2 & 0x40) != 0)
  {
    uint64_t result = sub_16EF688(*(void *)(a1 + 176));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x80) != 0)
  {
    uint64_t result = sub_12B8014(*(void *)(a1 + 184));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x100) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 192);
    if (*(unsigned char *)(v5 + 16))
    {
      uint64_t result = sub_15B1FC0(*(void *)(v5 + 24));
      if (!result) {
        return result;
      }
      int v2 = *(_DWORD *)(a1 + 16);
    }
  }
  if ((v2 & 0x200) != 0)
  {
    uint64_t result = sub_12A51B0(*(void *)(a1 + 200));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x400) == 0) {
    return 1;
  }
  uint64_t result = sub_129AF98(*(void *)(a1 + 208));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17C8868@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.CategorySearchParameters");
}

uint64_t sub_17C8878(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24DCB18;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = a2;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 144) = a2;
  *(void *)(a1 + 136) = 0;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_DWORD *)(a1 + 280) = 0;
  *(_OWORD *)(a1 + 264) = 0u;
  return a1;
}

void sub_17C8928(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17C8958(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24DCB18;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = (std::string *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    uint64_t v9 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_18786C0(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    int v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *int v11 = v10;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v12 = *(_DWORD *)(a2 + 80);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 88);
    int v14 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_187873C((uint64_t *)(a1 + 72), v14, (uint64_t *)(v13 + 8), v12, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v15 = *(_DWORD *)(a1 + 80) + v12;
    *(_DWORD *)(a1 + 80) = v15;
    uint64_t v16 = *(int **)(a1 + 88);
    if (*v16 < v15) {
      *uint64_t v16 = v15;
    }
  }
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  int v17 = *(_DWORD *)(a2 + 104);
  if (v17)
  {
    uint64_t v18 = *(void *)(a2 + 112);
    uint64_t v19 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_12C4AE8((uint64_t *)(a1 + 96), v19, (uint64_t *)(v18 + 8), v17, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v20 = *(_DWORD *)(a1 + 104) + v17;
    *(_DWORD *)(a1 + 104) = v20;
    uint64_t v21 = *(int **)(a1 + 112);
    if (*v21 < v20) {
      int *v21 = v20;
    }
  }
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  int v22 = *(_DWORD *)(a2 + 128);
  if (v22)
  {
    uint64_t v23 = *(void *)(a2 + 136);
    uint64_t v24 = (uint64_t *)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_12C4EBC((uint64_t *)(a1 + 120), v24, (uint64_t *)(v23 + 8), v22, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v25 = *(_DWORD *)(a1 + 128) + v22;
    *(_DWORD *)(a1 + 128) = v25;
    uint64_t v26 = *(int **)(a1 + 136);
    if (*v26 < v25) {
      *uint64_t v26 = v25;
    }
  }
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  int v27 = *(_DWORD *)(a2 + 152);
  if (v27)
  {
    uint64_t v28 = *(void *)(a2 + 160);
    uint64_t v29 = (std::string **)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_154B4D4((uint64_t *)(a1 + 144), v29, (uint64_t *)(v28 + 8), v27, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v30 = *(_DWORD *)(a1 + 152) + v27;
    *(_DWORD *)(a1 + 152) = v30;
    uint64_t v31 = *(int **)(a1 + 160);
    if (*v31 < v30) {
      *uint64_t v31 = v30;
    }
  }
  uint64_t v32 = *(void *)(a2 + 8);
  if (v32) {
    sub_188B4F8(v4, (v32 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  int v33 = *(_DWORD *)(a2 + 40);
  if (v33) {
    operator new();
  }
  *(void *)(a1 + 168) = 0;
  if ((v33 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 176) = 0;
  if ((v33 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 184) = 0;
  if ((v33 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 192) = 0;
  if ((v33 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 200) = 0;
  if ((v33 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 208) = 0;
  if ((v33 & 0x40) != 0) {
    operator new();
  }
  *(void *)(a1 + 216) = 0;
  if ((v33 & 0x80) != 0) {
    operator new();
  }
  *(void *)(a1 + 224) = 0;
  if ((v33 & 0x100) != 0) {
    operator new();
  }
  *(void *)(a1 + 232) = 0;
  if ((v33 & 0x200) != 0) {
    operator new();
  }
  *(void *)(a1 + 240) = 0;
  if ((v33 & 0x400) != 0) {
    operator new();
  }
  *(void *)(a1 + 248) = 0;
  if ((v33 & 0x800) != 0) {
    operator new();
  }
  *(void *)(a1 + 256) = 0;
  if ((v33 & 0x1000) != 0) {
    operator new();
  }
  *(void *)(a1 + 264) = 0;
  uint64_t v34 = *(void *)(a2 + 272);
  *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
  *(void *)(a1 + 272) = v34;
  return a1;
}

void sub_17C8F04()
{
}

uint64_t sub_17C90AC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_17C9174((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_154AFA8((void *)(a1 + 144));
  sub_12C48E8((void *)(a1 + 120));
  sub_12C4568((void *)(a1 + 96));
  sub_18770B8((void *)(a1 + 72));
  sub_1877038((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_17C9174(uint64_t (***result)()))()
{
  if (result != &off_254AAC8)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[21];
    if (v2)
    {
      sub_15B1678(v2);
      operator delete();
    }
    uint64_t v3 = (uint64_t)v1[22];
    if (v3)
    {
      sub_12A17E0(v3);
      operator delete();
    }
    int v4 = v1[23];
    if (v4)
    {
      sub_179A064(v4);
      operator delete();
    }
    uint64_t v5 = (uint64_t)v1[24];
    if (v5)
    {
      sub_12980AC(v5);
      operator delete();
    }
    if (v1[25])
    {
      sub_12B5EB4();
      operator delete();
    }
    uint64_t v6 = v1[26];
    if (v6)
    {
      sub_1299EA4(v6);
      operator delete();
    }
    int v7 = v1[27];
    if (v7)
    {
      sub_1848204(v7);
      operator delete();
    }
    uint64_t v8 = v1[28];
    if (v8)
    {
      sub_12A7118(v8);
      operator delete();
    }
    uint64_t v9 = (uint64_t)v1[29];
    if (v9)
    {
      sub_12BA86C(v9);
      operator delete();
    }
    int v10 = v1[30];
    if (v10)
    {
      sub_129AC40(v10);
      operator delete();
    }
    int v11 = v1[31];
    if (v11)
    {
      sub_14823C4(v11);
      operator delete();
    }
    uint64_t v12 = (uint64_t)v1[32];
    if (v12)
    {
      sub_179F8E0(v12);
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[33];
    if (result)
    {
      sub_129A550(result);
      operator delete();
    }
  }
  return result;
}

void sub_17C9360(uint64_t a1)
{
  sub_17C90AC(a1);

  operator delete();
}

uint64_t sub_17C9398(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_12A181C(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    int v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = (uint64_t)sub_1793FF0(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 104);
  if ((int)v9 >= 1)
  {
    int v10 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_129FB6C(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 104) = 0;
  }
  uint64_t v12 = *(unsigned int *)(a1 + 128);
  if ((int)v12 >= 1)
  {
    uint64_t v13 = (unsigned char **)(*(void *)(a1 + 136) + 8);
    do
    {
      int v14 = *v13++;
      uint64_t result = (uint64_t)sub_12A2DEC(v14);
      --v12;
    }
    while (v12);
    *(_DWORD *)(a1 + 128) = 0;
  }
  uint64_t v15 = *(unsigned int *)(a1 + 152);
  if ((int)v15 >= 1)
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 160) + 8);
    do
    {
      uint64_t v17 = *v16++;
      uint64_t result = sub_12997A8(v17);
      --v15;
    }
    while (v15);
    *(_DWORD *)(a1 + 152) = 0;
  }
  int v18 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v18) {
    goto LABEL_36;
  }
  if (v18)
  {
    uint64_t result = (uint64_t)sub_15B16B4(*(unsigned char **)(a1 + 168));
    if ((v18 & 2) == 0)
    {
LABEL_24:
      if ((v18 & 4) == 0) {
        goto LABEL_30;
      }
      goto LABEL_28;
    }
  }
  else if ((v18 & 2) == 0)
  {
    goto LABEL_24;
  }
  uint64_t result = sub_12A181C(*(void *)(a1 + 176));
  if ((v18 & 4) == 0) {
    goto LABEL_30;
  }
LABEL_28:
  uint64_t v19 = *(void *)(a1 + 184);
  char v20 = *(unsigned char *)(v19 + 8);
  uint64_t result = v19 + 8;
  *(_WORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v20) {
    uint64_t result = sub_188B4AC((uint64_t *)result);
  }
LABEL_30:
  if ((v18 & 8) != 0)
  {
    uint64_t result = sub_12980E8(*(void *)(a1 + 192));
    if ((v18 & 0x10) == 0)
    {
LABEL_32:
      if ((v18 & 0x20) == 0) {
        goto LABEL_33;
      }
LABEL_53:
      uint64_t result = sub_1299EE0(*(void *)(a1 + 208));
      if ((v18 & 0x40) == 0)
      {
LABEL_34:
        if ((v18 & 0x80) == 0) {
          goto LABEL_36;
        }
        goto LABEL_35;
      }
      goto LABEL_54;
    }
  }
  else if ((v18 & 0x10) == 0)
  {
    goto LABEL_32;
  }
  uint64_t result = sub_12B5EF0(*(void *)(a1 + 200));
  if ((v18 & 0x20) != 0) {
    goto LABEL_53;
  }
LABEL_33:
  if ((v18 & 0x40) == 0) {
    goto LABEL_34;
  }
LABEL_54:
  uint64_t result = sub_179ACBC(*(void *)(a1 + 216));
  if ((v18 & 0x80) != 0) {
LABEL_35:
  }
    uint64_t result = (uint64_t)sub_12A7154(*(unsigned char **)(a1 + 224));
LABEL_36:
  if ((v18 & 0x1F00) == 0) {
    goto LABEL_43;
  }
  if ((v18 & 0x100) != 0)
  {
    uint64_t result = sub_12BA8A8(*(void *)(a1 + 232));
    if ((v18 & 0x200) == 0)
    {
LABEL_39:
      if ((v18 & 0x400) == 0) {
        goto LABEL_40;
      }
      goto LABEL_58;
    }
  }
  else if ((v18 & 0x200) == 0)
  {
    goto LABEL_39;
  }
  uint64_t result = (uint64_t)sub_129AC7C(*(void *)(a1 + 240));
  if ((v18 & 0x400) == 0)
  {
LABEL_40:
    if ((v18 & 0x800) == 0) {
      goto LABEL_41;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t result = sub_1482400(*(void *)(a1 + 248));
  if ((v18 & 0x800) == 0)
  {
LABEL_41:
    if ((v18 & 0x1000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_42;
  }
LABEL_59:
  uint64_t result = sub_179BE98(*(void *)(a1 + 256));
  if ((v18 & 0x1000) != 0) {
LABEL_42:
  }
    uint64_t result = sub_129A58C(*(void *)(a1 + 264));
LABEL_43:
  if ((v18 & 0xE000) != 0)
  {
    *(unsigned char *)(a1 + 274) = 0;
    *(_WORD *)(a1 + 272) = 0;
  }
  if ((v18 & 0x70000) != 0)
  {
    *(unsigned char *)(a1 + 283) = 0;
    *(void *)(a1 + 275) = 0;
  }
  char v22 = *(unsigned char *)(a1 + 8);
  uint64_t v21 = a1 + 8;
  *(_DWORD *)(v21 + 32) = 0;
  if (v22)
  {
    return sub_188B4AC((uint64_t *)v21);
  }
  return result;
}

char *sub_17C95D8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v105 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v105, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v105 + 1;
    unsigned int v9 = *v105;
    if (*v105 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v105, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v105 + 2;
      }
    }
    uint64_t v105 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_171;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v12 = *(void *)(a1 + 168);
        if (!v12)
        {
          uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v13 = (void *)*v13;
          }
          uint64_t v12 = sub_15C19EC((uint64_t)v13);
          *(void *)(a1 + 168) = v12;
          uint64_t v8 = v105;
        }
        int v14 = sub_11E1C60(a3, v12, (unsigned __int8 *)v8);
        goto LABEL_180;
      case 2u:
        if (v9 != 16) {
          goto LABEL_171;
        }
        v5 |= 0x2000u;
        uint64_t v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v93 = (char *)sub_188C138((uint64_t)v8, v16);
          uint64_t v105 = v93;
          *(unsigned char *)(a1 + 272) = v94 != 0;
          if (!v93) {
            goto LABEL_207;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_19:
          uint64_t v105 = v15;
          *(unsigned char *)(a1 + 272) = v16 != 0;
        }
        goto LABEL_181;
      case 3u:
        if (v9 != 26) {
          goto LABEL_171;
        }
        int v18 = v8 - 1;
        while (1)
        {
          uint64_t v19 = (unsigned __int8 *)(v18 + 1);
          uint64_t v105 = v18 + 1;
          char v20 = *(_DWORD **)(a1 + 64);
          if (v20 && (uint64_t v21 = *(int *)(a1 + 56), (int)v21 < *v20))
          {
            *(_DWORD *)(a1 + 56) = v21 + 1;
            uint64_t v22 = *(void *)&v20[2 * v21 + 2];
          }
          else
          {
            uint64_t v23 = sub_12BBBC8(*(void *)(a1 + 48));
            uint64_t v22 = sub_188CDC8(a1 + 48, (uint64_t)v23);
            uint64_t v19 = (unsigned __int8 *)v105;
          }
          int v18 = (char *)sub_12B117C(a3, v22, v19);
          uint64_t v105 = v18;
          if (!v18) {
            goto LABEL_207;
          }
          if (*(void *)a3 <= (unint64_t)v18 || *v18 != 26) {
            goto LABEL_181;
          }
        }
      case 4u:
        if (v9 != 34) {
          goto LABEL_171;
        }
        uint64_t v24 = v8 - 1;
        while (1)
        {
          int v25 = (unsigned __int8 *)(v24 + 1);
          uint64_t v105 = v24 + 1;
          uint64_t v26 = *(_DWORD **)(a1 + 88);
          if (v26 && (uint64_t v27 = *(int *)(a1 + 80), (int)v27 < *v26))
          {
            *(_DWORD *)(a1 + 80) = v27 + 1;
            uint64_t v28 = *(void *)&v26[2 * v27 + 2];
          }
          else
          {
            uint64_t v29 = sub_1830494(*(void *)(a1 + 72));
            uint64_t v28 = sub_188CDC8(a1 + 72, (uint64_t)v29);
            int v25 = (unsigned __int8 *)v105;
          }
          uint64_t v24 = sub_14F0B44(a3, v28, v25);
          uint64_t v105 = v24;
          if (!v24) {
            goto LABEL_207;
          }
          if (*(void *)a3 <= (unint64_t)v24 || *v24 != 34) {
            goto LABEL_181;
          }
        }
      case 5u:
        if (v9 != 42) {
          goto LABEL_171;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        int v30 = *(void **)(a1 + 176);
        if (!v30)
        {
          uint64_t v31 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v31 = (void *)*v31;
          }
          int v30 = sub_12BBBC8((uint64_t)v31);
          *(void *)(a1 + 176) = v30;
          uint64_t v8 = v105;
        }
        int v14 = (char *)sub_12B117C(a3, (uint64_t)v30, (unsigned __int8 *)v8);
        goto LABEL_180;
      case 6u:
        if (v9 != 50) {
          goto LABEL_171;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v32 = *(void *)(a1 + 184);
        if (!v32)
        {
          int v33 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v33 = (void *)*v33;
          }
          uint64_t v32 = sub_18305D4((uint64_t)v33);
          *(void *)(a1 + 184) = v32;
          uint64_t v8 = v105;
        }
        int v14 = sub_179D08C(a3, v32, (unsigned __int8 *)v8);
        goto LABEL_180;
      case 7u:
        if (v9 != 56) {
          goto LABEL_171;
        }
        v5 |= 0x4000u;
        uint64_t v34 = v8 + 1;
        uint64_t v35 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_56;
        }
        int v36 = *v34;
        uint64_t v35 = v35 + (v36 << 7) - 128;
        if (v36 < 0)
        {
          unsigned int v95 = (char *)sub_188C138((uint64_t)v8, v35);
          uint64_t v105 = v95;
          *(unsigned char *)(a1 + 273) = v96 != 0;
          if (!v95) {
            goto LABEL_207;
          }
        }
        else
        {
          uint64_t v34 = v8 + 2;
LABEL_56:
          uint64_t v105 = v34;
          *(unsigned char *)(a1 + 273) = v35 != 0;
        }
        goto LABEL_181;
      case 8u:
        if (v9 != 66) {
          goto LABEL_171;
        }
        uint64_t v37 = v8 - 1;
        while (1)
        {
          uint64_t v38 = (unsigned __int8 *)(v37 + 1);
          uint64_t v105 = v37 + 1;
          uint64_t v39 = *(_DWORD **)(a1 + 112);
          if (v39 && (uint64_t v40 = *(int *)(a1 + 104), (int)v40 < *v39))
          {
            *(_DWORD *)(a1 + 104) = v40 + 1;
            uint64_t v41 = *(void *)&v39[2 * v40 + 2];
          }
          else
          {
            uint64_t v42 = sub_12BBAE4(*(void *)(a1 + 96));
            uint64_t v41 = sub_188CDC8(a1 + 96, (uint64_t)v42);
            uint64_t v38 = (unsigned __int8 *)v105;
          }
          uint64_t v37 = (char *)sub_129EFC8(a3, v41, v38);
          uint64_t v105 = v37;
          if (!v37) {
            goto LABEL_207;
          }
          if (*(void *)a3 <= (unint64_t)v37 || *v37 != 66) {
            goto LABEL_181;
          }
        }
      case 9u:
        if (v9 != 74) {
          goto LABEL_171;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v43 = *(void *)(a1 + 192);
        if (!v43)
        {
          uint64_t v44 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v44 = (void *)*v44;
          }
          uint64_t v43 = sub_129E590((uint64_t)v44);
          *(void *)(a1 + 192) = v43;
          uint64_t v8 = v105;
        }
        int v14 = (char *)sub_17CA1A4(a3, v43, (unsigned __int8 *)v8);
        goto LABEL_180;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_171;
        }
        unint64_t v45 = v8 - 1;
        while (1)
        {
          uint64_t v46 = (unsigned __int8 *)(v45 + 1);
          uint64_t v105 = v45 + 1;
          uint64_t v47 = *(_DWORD **)(a1 + 136);
          if (v47 && (uint64_t v48 = *(int *)(a1 + 128), (int)v48 < *v47))
          {
            *(_DWORD *)(a1 + 128) = v48 + 1;
            uint64_t v49 = *(void *)&v47[2 * v48 + 2];
          }
          else
          {
            uint64_t v50 = sub_12BBDA0(*(void *)(a1 + 120));
            uint64_t v49 = sub_188CDC8(a1 + 120, (uint64_t)v50);
            uint64_t v46 = (unsigned __int8 *)v105;
          }
          unint64_t v45 = (char *)sub_12B6EC4(a3, v49, v46);
          uint64_t v105 = v45;
          if (!v45) {
            goto LABEL_207;
          }
          if (*(void *)a3 <= (unint64_t)v45 || *v45 != 82) {
            goto LABEL_181;
          }
        }
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_171;
        }
        uint64_t v51 = v8 - 1;
        while (1)
        {
          uint64_t v52 = (unsigned __int8 *)(v51 + 1);
          uint64_t v105 = v51 + 1;
          uint64_t v53 = *(_DWORD **)(a1 + 160);
          if (v53 && (uint64_t v54 = *(int *)(a1 + 152), (int)v54 < *v53))
          {
            *(_DWORD *)(a1 + 152) = v54 + 1;
            uint64_t v55 = *(void *)&v53[2 * v54 + 2];
          }
          else
          {
            uint64_t v56 = sub_129E6C4(*(void *)(a1 + 144));
            uint64_t v55 = sub_188CDC8(a1 + 144, v56);
            uint64_t v52 = (unsigned __int8 *)v105;
          }
          uint64_t v51 = sub_1541068(a3, v55, v52);
          uint64_t v105 = v51;
          if (!v51) {
            goto LABEL_207;
          }
          if (*(void *)a3 <= (unint64_t)v51 || *v51 != 90) {
            goto LABEL_181;
          }
        }
      case 0xCu:
        if (v9 != 98) {
          goto LABEL_171;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v57 = *(void *)(a1 + 200);
        if (!v57)
        {
          uint64_t v58 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v58 = (void *)*v58;
          }
          sub_12BCD00((uint64_t)v58);
          uint64_t v57 = v59;
          *(void *)(a1 + 200) = v59;
          uint64_t v8 = v105;
        }
        int v14 = sub_1208B38(a3, v57, (unsigned __int8 *)v8);
        goto LABEL_180;
      case 0xDu:
        if (v9 != 106) {
          goto LABEL_171;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        uint64_t v60 = *(void *)(a1 + 208);
        if (!v60)
        {
          uint64_t v61 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v61 = (void *)*v61;
          }
          sub_129E740((uint64_t)v61);
          uint64_t v60 = v62;
          *(void *)(a1 + 208) = v62;
          uint64_t v8 = v105;
        }
        int v14 = sub_179D23C(a3, v60, (unsigned __int8 *)v8);
        goto LABEL_180;
      case 0xEu:
        if (v9 != 114) {
          goto LABEL_171;
        }
        *(_DWORD *)(a1 + 40) |= 0x40u;
        uint64_t v63 = *(void *)(a1 + 216);
        if (!v63)
        {
          uint64_t v64 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v64 = (void *)*v64;
          }
          uint64_t v63 = sub_1849FB4((uint64_t)v64);
          *(void *)(a1 + 216) = v63;
          uint64_t v8 = v105;
        }
        int v14 = sub_12BAFE4(a3, v63, (unsigned __int8 *)v8);
        goto LABEL_180;
      case 0xFu:
        if (v9 != 122) {
          goto LABEL_171;
        }
        *(_DWORD *)(a1 + 40) |= 0x80u;
        uint64_t v65 = *(void *)(a1 + 224);
        if (!v65)
        {
          unint64_t v66 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v66 = (void *)*v66;
          }
          uint64_t v65 = sub_12BC1AC((uint64_t)v66);
          *(void *)(a1 + 224) = v65;
          uint64_t v8 = v105;
        }
        int v14 = sub_12B6F54(a3, v65, (unsigned __int8 *)v8);
        goto LABEL_180;
      case 0x10u:
        if (v9 != 128) {
          goto LABEL_171;
        }
        v5 |= 0x8000u;
        unint64_t v67 = v8 + 1;
        uint64_t v68 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_121;
        }
        int v69 = *v67;
        uint64_t v68 = v68 + (v69 << 7) - 128;
        if (v69 < 0)
        {
          int v97 = (char *)sub_188C138((uint64_t)v8, v68);
          uint64_t v105 = v97;
          *(unsigned char *)(a1 + 274) = v98 != 0;
          if (!v97) {
            goto LABEL_207;
          }
        }
        else
        {
          unint64_t v67 = v8 + 2;
LABEL_121:
          uint64_t v105 = v67;
          *(unsigned char *)(a1 + 274) = v68 != 0;
        }
        goto LABEL_181;
      case 0x11u:
        if (v9 != 136) {
          goto LABEL_171;
        }
        int v70 = v8 + 1;
        unint64_t v71 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_126;
        }
        int v72 = *v70;
        int v73 = v71 + (v72 << 7);
        unint64_t v71 = (v73 - 128);
        if (v72 < 0)
        {
          uint64_t v105 = (char *)sub_188C138((uint64_t)v8, (v73 - 128));
          if (!v105) {
            goto LABEL_207;
          }
          unint64_t v71 = v99;
        }
        else
        {
          int v70 = v8 + 2;
LABEL_126:
          uint64_t v105 = v70;
        }
        if (sub_119BBA8(v71))
        {
          *(_DWORD *)(a1 + 40) |= 0x20000u;
          *(_DWORD *)(a1 + 276) = v71;
          goto LABEL_181;
        }
        if (*v7) {
          uint64_t v103 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v103 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v104 = 17;
        goto LABEL_201;
      case 0x12u:
        if (v9 != 146) {
          goto LABEL_171;
        }
        *(_DWORD *)(a1 + 40) |= 0x100u;
        char v74 = *(void **)(a1 + 232);
        if (!v74)
        {
          char v75 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            char v75 = (void *)*v75;
          }
          char v74 = sub_12BD16C((uint64_t)v75);
          *(void *)(a1 + 232) = v74;
          uint64_t v8 = v105;
        }
        int v14 = (char *)sub_179D2CC(a3, (uint64_t)v74, (unsigned __int8 *)v8);
        goto LABEL_180;
      case 0x13u:
        if (v9 != 152) {
          goto LABEL_171;
        }
        v5 |= 0x10000u;
        uint64_t v76 = v8 + 1;
        uint64_t v77 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_139;
        }
        int v78 = *v76;
        uint64_t v77 = v77 + (v78 << 7) - 128;
        if (v78 < 0)
        {
          int v100 = (char *)sub_188C138((uint64_t)v8, v77);
          uint64_t v105 = v100;
          *(unsigned char *)(a1 + 275) = v101 != 0;
          if (!v100) {
            goto LABEL_207;
          }
        }
        else
        {
          uint64_t v76 = v8 + 2;
LABEL_139:
          uint64_t v105 = v76;
          *(unsigned char *)(a1 + 275) = v77 != 0;
        }
        goto LABEL_181;
      case 0x14u:
        if (v9 != 162) {
          goto LABEL_171;
        }
        *(_DWORD *)(a1 + 40) |= 0x200u;
        uint64_t v79 = *(void *)(a1 + 240);
        if (!v79)
        {
          unsigned int v80 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unsigned int v80 = (void *)*v80;
          }
          uint64_t v79 = sub_129E840((uint64_t)v80);
          *(void *)(a1 + 240) = v79;
          uint64_t v8 = v105;
        }
        int v14 = sub_17972B0(a3, v79, (unsigned __int8 *)v8);
        goto LABEL_180;
      case 0x15u:
        if (v9 != 168) {
          goto LABEL_171;
        }
        int v81 = v8 + 1;
        unint64_t v71 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_150;
        }
        int v82 = *v81;
        int v83 = v71 + (v82 << 7);
        unint64_t v71 = (v83 - 128);
        if (v82 < 0)
        {
          uint64_t v105 = (char *)sub_188C138((uint64_t)v8, (v83 - 128));
          if (!v105) {
            goto LABEL_207;
          }
          unint64_t v71 = v102;
        }
        else
        {
          int v81 = v8 + 2;
LABEL_150:
          uint64_t v105 = v81;
        }
        if (sub_15B077C(v71))
        {
          *(_DWORD *)(a1 + 40) |= 0x40000u;
          *(_DWORD *)(a1 + 280) = v71;
        }
        else
        {
          if (*v7) {
            uint64_t v103 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v103 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v104 = 21;
LABEL_201:
          sub_188C020(v104, v71, v103);
        }
        goto LABEL_181;
      case 0x16u:
        if (v9 != 178) {
          goto LABEL_171;
        }
        *(_DWORD *)(a1 + 40) |= 0x400u;
        uint64_t v84 = *(void *)(a1 + 248);
        if (!v84)
        {
          uint64_t v85 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v85 = (void *)*v85;
          }
          uint64_t v84 = sub_1482774((uint64_t)v85);
          *(void *)(a1 + 248) = v84;
          uint64_t v8 = v105;
        }
        int v14 = sub_179D35C(a3, v84, (unsigned __int8 *)v8);
        goto LABEL_180;
      case 0x17u:
        if (v9 != 186) {
          goto LABEL_171;
        }
        *(_DWORD *)(a1 + 40) |= 0x800u;
        unsigned int v86 = *(void **)(a1 + 256);
        if (!v86)
        {
          unint64_t v87 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v87 = (void *)*v87;
          }
          unsigned int v86 = sub_1830734((uint64_t)v87);
          *(void *)(a1 + 256) = v86;
          uint64_t v8 = v105;
        }
        int v14 = (char *)sub_179D3EC(a3, (uint64_t)v86, (unsigned __int8 *)v8);
        goto LABEL_180;
      case 0x18u:
        if (v9 != 194) {
          goto LABEL_171;
        }
        *(_DWORD *)(a1 + 40) |= 0x1000u;
        uint64_t v88 = *(void *)(a1 + 264);
        if (!v88)
        {
          int v89 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v89 = (void *)*v89;
          }
          sub_129E7C0((uint64_t)v89);
          uint64_t v88 = v90;
          *(void *)(a1 + 264) = v90;
          uint64_t v8 = v105;
        }
        int v14 = sub_179D47C(a3, v88, (unsigned __int8 *)v8);
        goto LABEL_180;
      default:
LABEL_171:
        if (v9) {
          BOOL v91 = (v9 & 7) == 4;
        }
        else {
          BOOL v91 = 1;
        }
        if (!v91)
        {
          if (v9 - 800 > 0x31F)
          {
            if (*v7)
            {
              uint64_t v92 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v92 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = v105;
            }
            int v14 = (char *)sub_1885AC0(v9, v92, v8, a3);
          }
          else
          {
            int v14 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_254AAC8, (uint64_t *)(a1 + 8), a3);
          }
LABEL_180:
          uint64_t v105 = v14;
          if (!v14) {
            goto LABEL_207;
          }
LABEL_181:
          if (sub_11947B8((uint64_t)a3, &v105, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_207:
        }
          uint64_t v105 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return v105;
    }
  }
}

uint64_t sub_17CA1A4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12981F0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17CA234(uint64_t a1, char *a2, unint64_t *a3)
{
  int v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*a3 <= (unint64_t)a2) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 168);
    *int v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    int v4 = sub_15B1A68(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 272);
    *int v4 = 16;
    v4[1] = v10;
    v4 += 2;
  }
  int v11 = *(_DWORD *)(a1 + 56);
  if (v11)
  {
    for (int i = 0; i != v11; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *int v4 = 26;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      v4[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, v4 + 1);
      }
      else {
        uint64_t v15 = v4 + 2;
      }
      int v4 = sub_12A1AC4(v13, v15, a3);
    }
  }
  int v16 = *(_DWORD *)(a1 + 80);
  if (v16)
  {
    for (int j = 0; j != v16; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *int v4 = 34;
      unsigned int v19 = *(_DWORD *)(v18 + 44);
      v4[1] = v19;
      if (v19 > 0x7F) {
        char v20 = sub_188A9CC(v19, v4 + 1);
      }
      else {
        char v20 = v4 + 2;
      }
      int v4 = sub_1794360(v18, v20, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v21 = *(void *)(a1 + 176);
    *int v4 = 42;
    unsigned int v22 = *(_DWORD *)(v21 + 20);
    v4[1] = v22;
    if (v22 > 0x7F) {
      uint64_t v23 = sub_188A9CC(v22, v4 + 1);
    }
    else {
      uint64_t v23 = v4 + 2;
    }
    int v4 = sub_12A1AC4(v21, v23, a3);
    if ((v6 & 4) == 0)
    {
LABEL_30:
      if ((v6 & 0x4000) == 0) {
        goto LABEL_47;
      }
      goto LABEL_44;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_30;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v24 = *(void *)(a1 + 184);
  *int v4 = 50;
  unsigned int v25 = *(_DWORD *)(v24 + 20);
  v4[1] = v25;
  if (v25 > 0x7F) {
    uint64_t v26 = sub_188A9CC(v25, v4 + 1);
  }
  else {
    uint64_t v26 = v4 + 2;
  }
  int v4 = sub_179A338(v24, (unint64_t)v26, a3);
  if ((v6 & 0x4000) != 0)
  {
LABEL_44:
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v27 = *(unsigned char *)(a1 + 273);
    *int v4 = 56;
    v4[1] = v27;
    v4 += 2;
  }
LABEL_47:
  int v28 = *(_DWORD *)(a1 + 104);
  if (v28)
  {
    for (int k = 0; k != v28; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v30 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      *int v4 = 66;
      unsigned int v31 = *(_DWORD *)(v30 + 44);
      v4[1] = v31;
      if (v31 > 0x7F) {
        uint64_t v32 = sub_188A9CC(v31, v4 + 1);
      }
      else {
        uint64_t v32 = v4 + 2;
      }
      int v4 = (char *)sub_12A03B8(v30, v32, a3);
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v33 = *(void *)(a1 + 192);
    *int v4 = 74;
    unsigned int v34 = *(_DWORD *)(v33 + 20);
    v4[1] = v34;
    if (v34 > 0x7F) {
      uint64_t v35 = sub_188A9CC(v34, v4 + 1);
    }
    else {
      uint64_t v35 = v4 + 2;
    }
    int v4 = sub_12984FC(v33, v35, a3);
  }
  int v36 = *(_DWORD *)(a1 + 128);
  if (v36)
  {
    for (int m = 0; m != v36; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v38 = *(void *)(*(void *)(a1 + 136) + 8 * m + 8);
      *int v4 = 82;
      unsigned int v39 = *(_DWORD *)(v38 + 20);
      v4[1] = v39;
      if (v39 > 0x7F) {
        uint64_t v40 = sub_188A9CC(v39, v4 + 1);
      }
      else {
        uint64_t v40 = v4 + 2;
      }
      int v4 = sub_12A3294(v38, v40, a3);
    }
  }
  int v41 = *(_DWORD *)(a1 + 152);
  if (v41)
  {
    for (int n = 0; n != v41; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v43 = *(void *)(*(void *)(a1 + 160) + 8 * n + 8);
      *int v4 = 90;
      unsigned int v44 = *(_DWORD *)(v43 + 20);
      v4[1] = v44;
      if (v44 > 0x7F) {
        unint64_t v45 = sub_188A9CC(v44, v4 + 1);
      }
      else {
        unint64_t v45 = v4 + 2;
      }
      int v4 = sub_1299A68(v43, (unint64_t)v45, a3);
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v46 = *(void *)(a1 + 200);
    *int v4 = 98;
    unsigned int v47 = *(_DWORD *)(v46 + 20);
    v4[1] = v47;
    if (v47 > 0x7F) {
      uint64_t v48 = sub_188A9CC(v47, v4 + 1);
    }
    else {
      uint64_t v48 = v4 + 2;
    }
    int v4 = sub_12B6340(v46, (unint64_t)v48, a3);
    if ((v6 & 0x20) == 0)
    {
LABEL_80:
      if ((v6 & 0x40) == 0) {
        goto LABEL_81;
      }
      goto LABEL_97;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_80;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v49 = *(void *)(a1 + 208);
  *int v4 = 106;
  unsigned int v50 = *(_DWORD *)(v49 + 20);
  v4[1] = v50;
  if (v50 > 0x7F) {
    uint64_t v51 = sub_188A9CC(v50, v4 + 1);
  }
  else {
    uint64_t v51 = v4 + 2;
  }
  int v4 = sub_129A128(v49, (unint64_t)v51, a3);
  if ((v6 & 0x40) == 0)
  {
LABEL_81:
    if ((v6 & 0x80) == 0) {
      goto LABEL_82;
    }
    goto LABEL_103;
  }
LABEL_97:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v52 = *(void *)(a1 + 216);
  *int v4 = 114;
  unsigned int v53 = *(_DWORD *)(v52 + 20);
  v4[1] = v53;
  if (v53 > 0x7F) {
    uint64_t v54 = sub_188A9CC(v53, v4 + 1);
  }
  else {
    uint64_t v54 = v4 + 2;
  }
  int v4 = sub_18486D8(v52, (unint64_t)v54, a3);
  if ((v6 & 0x80) == 0)
  {
LABEL_82:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_109;
  }
LABEL_103:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v55 = *(void *)(a1 + 224);
  *int v4 = 122;
  unsigned int v56 = *(_DWORD *)(v55 + 40);
  v4[1] = v56;
  if (v56 > 0x7F) {
    uint64_t v57 = sub_188A9CC(v56, v4 + 1);
  }
  else {
    uint64_t v57 = v4 + 2;
  }
  int v4 = sub_12A7400(v55, v57, a3);
  if ((v6 & 0x8000) == 0)
  {
LABEL_83:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_118;
    }
    goto LABEL_112;
  }
LABEL_109:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v58 = *(unsigned char *)(a1 + 274);
  *(_WORD *)int v4 = 384;
  v4[2] = v58;
  v4 += 3;
  if ((v6 & 0x20000) != 0)
  {
LABEL_112:
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v59 = *(int *)(a1 + 276);
    *(_WORD *)int v4 = 392;
    v4[2] = v59;
    if (v59 > 0x7F)
    {
      v4[2] = v59 | 0x80;
      unint64_t v60 = v59 >> 7;
      v4[3] = v59 >> 7;
      v4 += 4;
      if (v59 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v61 = v60 >> 14;
          v60 >>= 7;
          *v4++ = v60;
        }
        while (v61);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_118:
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v62 = *(void *)(a1 + 232);
    *(_WORD *)int v4 = 402;
    unsigned int v63 = *(_DWORD *)(v62 + 20);
    v4[2] = v63;
    if (v63 > 0x7F) {
      uint64_t v64 = sub_188A9CC(v63, v4 + 2);
    }
    else {
      uint64_t v64 = v4 + 3;
    }
    int v4 = sub_12BB104(v62, v64, a3);
    if ((v6 & 0x10000) == 0)
    {
LABEL_120:
      if ((v6 & 0x200) == 0) {
        goto LABEL_121;
      }
      goto LABEL_132;
    }
  }
  else if ((v6 & 0x10000) == 0)
  {
    goto LABEL_120;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v65 = *(unsigned char *)(a1 + 275);
  *(_WORD *)int v4 = 408;
  v4[2] = v65;
  v4 += 3;
  if ((v6 & 0x200) == 0)
  {
LABEL_121:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_144;
    }
    goto LABEL_138;
  }
LABEL_132:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v66 = *(void *)(a1 + 240);
  *(_WORD *)int v4 = 418;
  unsigned int v67 = *(_DWORD *)(v66 + 40);
  v4[2] = v67;
  if (v67 > 0x7F) {
    uint64_t v68 = sub_188A9CC(v67, v4 + 2);
  }
  else {
    uint64_t v68 = v4 + 3;
  }
  int v4 = sub_129AE14(v66, v68, a3);
  if ((v6 & 0x40000) != 0)
  {
LABEL_138:
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v69 = *(int *)(a1 + 280);
    *(_WORD *)int v4 = 424;
    v4[2] = v69;
    if (v69 > 0x7F)
    {
      v4[2] = v69 | 0x80;
      unint64_t v70 = v69 >> 7;
      v4[3] = v69 >> 7;
      v4 += 4;
      if (v69 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v71 = v70 >> 14;
          v70 >>= 7;
          *v4++ = v70;
        }
        while (v71);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_144:
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v72 = *(void *)(a1 + 248);
    *(_WORD *)int v4 = 434;
    unsigned int v73 = *(_DWORD *)(v72 + 20);
    v4[2] = v73;
    if (v73 > 0x7F) {
      char v74 = sub_188A9CC(v73, v4 + 2);
    }
    else {
      char v74 = v4 + 3;
    }
    int v4 = sub_14825C0(v72, (unint64_t)v74, a3);
    if ((v6 & 0x800) == 0)
    {
LABEL_146:
      if ((v6 & 0x1000) == 0) {
        goto LABEL_166;
      }
      goto LABEL_160;
    }
  }
  else if ((v6 & 0x800) == 0)
  {
    goto LABEL_146;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v75 = *(void *)(a1 + 256);
  *(_WORD *)int v4 = 442;
  unsigned int v76 = *(_DWORD *)(v75 + 20);
  v4[2] = v76;
  if (v76 > 0x7F) {
    uint64_t v77 = sub_188A9CC(v76, v4 + 2);
  }
  else {
    uint64_t v77 = v4 + 3;
  }
  int v4 = sub_179FC7C(v75, v77, a3);
  if ((v6 & 0x1000) != 0)
  {
LABEL_160:
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v78 = *(void *)(a1 + 264);
    *(_WORD *)int v4 = 450;
    unsigned int v79 = *(_DWORD *)(v78 + 20);
    v4[2] = v79;
    if (v79 > 0x7F) {
      unsigned int v80 = sub_188A9CC(v79, v4 + 2);
    }
    else {
      unsigned int v80 = v4 + 3;
    }
    int v4 = sub_129A7D4(v78, (unint64_t)v80, a3);
  }
LABEL_166:
  if (*(_WORD *)(a1 + 26)) {
    int v4 = sub_1886844(a1 + 16, 100, 200, v4, a3);
  }
  uint64_t v81 = *(void *)(a1 + 8);
  if ((v81 & 1) == 0) {
    return v4;
  }
  unint64_t v83 = v81 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v83 + 31) < 0)
  {
    uint64_t v84 = *(void **)(v83 + 8);
    uint64_t v85 = *(void *)(v83 + 16);
  }
  else
  {
    uint64_t v84 = (void *)(v83 + 8);
    LODWORD(v85) = *(unsigned __int8 *)(v83 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v85)
  {
    uint64_t v86 = (int)v85;
    memcpy(v4, v84, (int)v85);
    v4 += v86;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v84, v85, v4);
}

uint64_t sub_17CACDC(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_12A1BDC(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    uint64_t v13 = (uint64_t *)(v12 + 8);
  }
  else {
    uint64_t v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_1794620(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(int *)(a1 + 104);
  uint64_t v18 = v11 + v17;
  uint64_t v19 = *(void *)(a1 + 112);
  if (v19) {
    char v20 = (uint64_t *)(v19 + 8);
  }
  else {
    char v20 = 0;
  }
  if (v17)
  {
    uint64_t v21 = 8 * v17;
    do
    {
      uint64_t v22 = *v20++;
      uint64_t v23 = sub_12A0848(v22);
      v18 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6);
      v21 -= 8;
    }
    while (v21);
  }
  uint64_t v24 = *(int *)(a1 + 128);
  uint64_t v25 = v18 + v24;
  uint64_t v26 = *(void *)(a1 + 136);
  if (v26) {
    char v27 = (uint64_t *)(v26 + 8);
  }
  else {
    char v27 = 0;
  }
  if (v24)
  {
    uint64_t v28 = 8 * v24;
    do
    {
      uint64_t v29 = *v27++;
      uint64_t v30 = sub_12A34BC(v29);
      v25 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6);
      v28 -= 8;
    }
    while (v28);
  }
  uint64_t v31 = *(int *)(a1 + 152);
  uint64_t v32 = v25 + v31;
  uint64_t v33 = *(void *)(a1 + 160);
  if (v33) {
    unsigned int v34 = (uint64_t *)(v33 + 8);
  }
  else {
    unsigned int v34 = 0;
  }
  if (v31)
  {
    uint64_t v35 = 8 * v31;
    do
    {
      uint64_t v36 = *v34++;
      uint64_t v37 = sub_1299C88(v36);
      v32 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6);
      v35 -= 8;
    }
    while (v35);
  }
  int v38 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v38) {
    goto LABEL_41;
  }
  if (v38)
  {
    uint64_t v50 = sub_15B1D1C(*(void *)(a1 + 168));
    v32 += v50 + ((9 * (__clz(v50 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v38 & 2) == 0)
    {
LABEL_34:
      if ((v38 & 4) == 0) {
        goto LABEL_35;
      }
      goto LABEL_72;
    }
  }
  else if ((v38 & 2) == 0)
  {
    goto LABEL_34;
  }
  uint64_t v51 = sub_12A1BDC(*(void *)(a1 + 176));
  v32 += v51 + ((9 * (__clz(v51 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v38 & 4) == 0)
  {
LABEL_35:
    if ((v38 & 8) == 0) {
      goto LABEL_36;
    }
    goto LABEL_73;
  }
LABEL_72:
  uint64_t v52 = sub_179A454(*(void *)(a1 + 184));
  v32 += v52 + ((9 * (__clz(v52 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v38 & 8) == 0)
  {
LABEL_36:
    if ((v38 & 0x10) == 0) {
      goto LABEL_37;
    }
    goto LABEL_74;
  }
LABEL_73:
  uint64_t v53 = sub_1298700(*(void *)(a1 + 192));
  v32 += v53 + ((9 * (__clz(v53 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v38 & 0x10) == 0)
  {
LABEL_37:
    if ((v38 & 0x20) == 0) {
      goto LABEL_38;
    }
LABEL_75:
    uint64_t v55 = sub_129A304(*(void *)(a1 + 208));
    v32 += v55 + ((9 * (__clz(v55 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v38 & 0x40) == 0)
    {
LABEL_39:
      if ((v38 & 0x80) == 0) {
        goto LABEL_41;
      }
      goto LABEL_40;
    }
    goto LABEL_76;
  }
LABEL_74:
  uint64_t v54 = sub_12B6530(*(void *)(a1 + 200));
  v32 += v54 + ((9 * (__clz(v54 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v38 & 0x20) != 0) {
    goto LABEL_75;
  }
LABEL_38:
  if ((v38 & 0x40) == 0) {
    goto LABEL_39;
  }
LABEL_76:
  uint64_t v56 = sub_1848920(*(void *)(a1 + 216));
  v32 += v56 + ((9 * (__clz(v56 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v38 & 0x80) != 0)
  {
LABEL_40:
    uint64_t v39 = sub_12A7544(*(void *)(a1 + 224));
    v32 += v39 + ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_41:
  if ((v38 & 0xFF00) == 0) {
    goto LABEL_55;
  }
  if ((v38 & 0x100) != 0)
  {
    uint64_t v57 = sub_12BB4E8(*(void *)(a1 + 232));
    v32 += v57 + ((9 * (__clz(v57 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v38 & 0x200) == 0)
    {
LABEL_44:
      if ((v38 & 0x400) == 0) {
        goto LABEL_45;
      }
      goto LABEL_80;
    }
  }
  else if ((v38 & 0x200) == 0)
  {
    goto LABEL_44;
  }
  uint64_t v58 = sub_129AEE0(*(void *)(a1 + 240));
  v32 += v58 + ((9 * (__clz(v58 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v38 & 0x400) == 0)
  {
LABEL_45:
    if ((v38 & 0x800) == 0) {
      goto LABEL_46;
    }
LABEL_81:
    uint64_t v60 = sub_179FE6C(*(void *)(a1 + 256));
    v32 += v60 + ((9 * (__clz(v60 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v38 & 0x1000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_47;
  }
LABEL_80:
  uint64_t v59 = sub_14826E8(*(void *)(a1 + 248));
  v32 += v59 + ((9 * (__clz(v59 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v38 & 0x800) != 0) {
    goto LABEL_81;
  }
LABEL_46:
  if ((v38 & 0x1000) != 0)
  {
LABEL_47:
    uint64_t v40 = sub_129A9B0(*(void *)(a1 + 264));
    v32 += v40 + ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_48:
  uint64_t v41 = v32 + 2;
  if ((v38 & 0x2000) == 0) {
    uint64_t v41 = v32;
  }
  if ((v38 & 0x4000) != 0) {
    v41 += 2;
  }
  if ((v38 & 0x8000) != 0) {
    uint64_t v32 = v41 + 3;
  }
  else {
    uint64_t v32 = v41;
  }
LABEL_55:
  if ((v38 & 0x70000) != 0)
  {
    if ((v38 & 0x10000) != 0) {
      v32 += 3;
    }
    if ((v38 & 0x20000) != 0)
    {
      int v42 = *(_DWORD *)(a1 + 276);
      uint64_t v43 = ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v42 >= 0) {
        uint64_t v44 = v43;
      }
      else {
        uint64_t v44 = 12;
      }
      v32 += v44;
    }
    if ((v38 & 0x40000) != 0)
    {
      int v45 = *(_DWORD *)(a1 + 280);
      uint64_t v46 = ((9 * (__clz(v45 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v45 >= 0) {
        uint64_t v47 = v46;
      }
      else {
        uint64_t v47 = 12;
      }
      v32 += v47;
    }
  }
  uint64_t v48 = *(void *)(a1 + 8);
  if (v48)
  {
    unint64_t v61 = v48 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v61 + 31) < 0) {
      uint64_t v62 = *(void *)(v61 + 16);
    }
    else {
      uint64_t v62 = *(unsigned __int8 *)(v61 + 31);
    }
    v32 += v62;
  }
  *(_DWORD *)(a1 + 44) = v32;
  return v32;
}

void sub_17CB228(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_18786C0((std::string *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_187873C((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    uint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_12C4AE8((uint64_t *)(a1 + 96), v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 128);
  if (v19)
  {
    char v20 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    uint64_t v21 = (uint64_t *)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_12C4EBC((uint64_t *)(a1 + 120), v21, v20, v19, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v22 = *(_DWORD *)(a1 + 128) + v19;
    *(_DWORD *)(a1 + 128) = v22;
    uint64_t v23 = *(int **)(a1 + 136);
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 152);
  if (v24)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(a2 + 160) + 8);
    uint64_t v26 = (std::string **)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_154B4D4((uint64_t *)(a1 + 144), v26, v25, v24, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v27 = *(_DWORD *)(a1 + 152) + v24;
    *(_DWORD *)(a1 + 152) = v27;
    uint64_t v28 = *(int **)(a1 + 160);
    if (*v28 < v27) {
      *uint64_t v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 40);
  if (!(_BYTE)v29) {
    goto LABEL_90;
  }
  if (v29)
  {
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v30 = *(void *)(a1 + 168);
    if (!v30)
    {
      uint64_t v31 = *(void *)(a1 + 8);
      uint64_t v32 = (void *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
      if (v31) {
        uint64_t v32 = (void *)*v32;
      }
      uint64_t v30 = sub_15C19EC((uint64_t)v32);
      *(void *)(a1 + 168) = v30;
    }
    if (*(void *)(a2 + 168)) {
      uint64_t v33 = *(uint64_t (****)())(a2 + 168);
    }
    else {
      uint64_t v33 = &off_253F208;
    }
    sub_15B1E3C(v30, (uint64_t)v33);
    if ((v29 & 2) == 0)
    {
LABEL_19:
      if ((v29 & 4) == 0) {
        goto LABEL_20;
      }
      goto LABEL_42;
    }
  }
  else if ((v29 & 2) == 0)
  {
    goto LABEL_19;
  }
  *(_DWORD *)(a1 + 40) |= 2u;
  unsigned int v34 = *(std::string **)(a1 + 176);
  if (!v34)
  {
    uint64_t v35 = *(void *)(a1 + 8);
    uint64_t v36 = (void *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
    if (v35) {
      uint64_t v36 = (void *)*v36;
    }
    unsigned int v34 = (std::string *)sub_12BBBC8((uint64_t)v36);
    *(void *)(a1 + 176) = v34;
  }
  if (*(void *)(a2 + 176)) {
    uint64_t v37 = *(uint64_t (****)())(a2 + 176);
  }
  else {
    uint64_t v37 = &off_25308B8;
  }
  sub_11D2930(v34, (uint64_t)v37);
  if ((v29 & 4) == 0)
  {
LABEL_20:
    if ((v29 & 8) == 0) {
      goto LABEL_21;
    }
    goto LABEL_50;
  }
LABEL_42:
  *(_DWORD *)(a1 + 40) |= 4u;
  int v38 = *(std::string **)(a1 + 184);
  if (!v38)
  {
    uint64_t v39 = *(void *)(a1 + 8);
    uint64_t v40 = (void *)(v39 & 0xFFFFFFFFFFFFFFFCLL);
    if (v39) {
      uint64_t v40 = (void *)*v40;
    }
    int v38 = (std::string *)sub_18305D4((uint64_t)v40);
    *(void *)(a1 + 184) = v38;
  }
  if (*(void *)(a2 + 184)) {
    uint64_t v41 = *(uint64_t (****)())(a2 + 184);
  }
  else {
    uint64_t v41 = &off_2549A98;
  }
  sub_11B0678(v38, (uint64_t)v41);
  if ((v29 & 8) == 0)
  {
LABEL_21:
    if ((v29 & 0x10) == 0) {
      goto LABEL_22;
    }
    goto LABEL_58;
  }
LABEL_50:
  *(_DWORD *)(a1 + 40) |= 8u;
  uint64_t v42 = *(void *)(a1 + 192);
  if (!v42)
  {
    uint64_t v43 = *(void *)(a1 + 8);
    uint64_t v44 = (void *)(v43 & 0xFFFFFFFFFFFFFFFCLL);
    if (v43) {
      uint64_t v44 = (void *)*v44;
    }
    uint64_t v42 = sub_129E590((uint64_t)v44);
    *(void *)(a1 + 192) = v42;
  }
  if (*(void *)(a2 + 192)) {
    int v45 = *(uint64_t (****)())(a2 + 192);
  }
  else {
    int v45 = &off_2530588;
  }
  sub_12988B4(v42, (uint64_t)v45);
  if ((v29 & 0x10) == 0)
  {
LABEL_22:
    if ((v29 & 0x20) == 0) {
      goto LABEL_23;
    }
LABEL_66:
    *(_DWORD *)(a1 + 40) |= 0x20u;
    uint64_t v50 = *(std::string **)(a1 + 208);
    if (!v50)
    {
      uint64_t v51 = *(void *)(a1 + 8);
      uint64_t v52 = (void *)(v51 & 0xFFFFFFFFFFFFFFFCLL);
      if (v51) {
        uint64_t v52 = (void *)*v52;
      }
      sub_129E740((uint64_t)v52);
      *(void *)(a1 + 208) = v50;
    }
    if (*(void *)(a2 + 208)) {
      uint64_t v53 = *(uint64_t (****)())(a2 + 208);
    }
    else {
      uint64_t v53 = &off_2530620;
    }
    sub_129A39C(v50, (uint64_t)v53);
    if ((v29 & 0x40) == 0)
    {
LABEL_24:
      if ((v29 & 0x80) == 0) {
        goto LABEL_90;
      }
      goto LABEL_82;
    }
    goto LABEL_74;
  }
LABEL_58:
  *(_DWORD *)(a1 + 40) |= 0x10u;
  uint64_t v46 = *(void *)(a1 + 200);
  if (!v46)
  {
    uint64_t v47 = *(void *)(a1 + 8);
    uint64_t v48 = (void *)(v47 & 0xFFFFFFFFFFFFFFFCLL);
    if (v47) {
      uint64_t v48 = (void *)*v48;
    }
    sub_12BCD00((uint64_t)v48);
    *(void *)(a1 + 200) = v46;
  }
  if (*(void *)(a2 + 200)) {
    uint64_t v49 = *(uint64_t (****)())(a2 + 200);
  }
  else {
    uint64_t v49 = &off_2530F28;
  }
  sub_12B6638(v46, (uint64_t)v49);
  if ((v29 & 0x20) != 0) {
    goto LABEL_66;
  }
LABEL_23:
  if ((v29 & 0x40) == 0) {
    goto LABEL_24;
  }
LABEL_74:
  *(_DWORD *)(a1 + 40) |= 0x40u;
  uint64_t v54 = *(void *)(a1 + 216);
  if (!v54)
  {
    uint64_t v55 = *(void *)(a1 + 8);
    uint64_t v56 = (void *)(v55 & 0xFFFFFFFFFFFFFFFCLL);
    if (v55) {
      uint64_t v56 = (void *)*v56;
    }
    uint64_t v54 = sub_1849FB4((uint64_t)v56);
    *(void *)(a1 + 216) = v54;
  }
  if (*(void *)(a2 + 216)) {
    uint64_t v57 = *(uint64_t (****)())(a2 + 216);
  }
  else {
    uint64_t v57 = &off_254D220;
  }
  sub_179F4B0(v54, (uint64_t)v57);
  if ((v29 & 0x80) != 0)
  {
LABEL_82:
    *(_DWORD *)(a1 + 40) |= 0x80u;
    uint64_t v58 = *(void *)(a1 + 224);
    if (!v58)
    {
      uint64_t v59 = *(void *)(a1 + 8);
      uint64_t v60 = (void *)(v59 & 0xFFFFFFFFFFFFFFFCLL);
      if (v59) {
        uint64_t v60 = (void *)*v60;
      }
      uint64_t v58 = sub_12BC1AC((uint64_t)v60);
      *(void *)(a1 + 224) = v58;
    }
    if (*(void *)(a2 + 224)) {
      unint64_t v61 = *(uint64_t (****)())(a2 + 224);
    }
    else {
      unint64_t v61 = &off_2530AB8;
    }
    sub_12A75F4(v58, (uint64_t)v61);
  }
LABEL_90:
  if ((v29 & 0xFF00) == 0) {
    goto LABEL_101;
  }
  if ((v29 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x100u;
    unsigned int v63 = *(void **)(a1 + 232);
    if (!v63)
    {
      uint64_t v64 = *(void *)(a1 + 8);
      char v65 = (void *)(v64 & 0xFFFFFFFFFFFFFFFCLL);
      if (v64) {
        char v65 = (void *)*v65;
      }
      unsigned int v63 = sub_12BD16C((uint64_t)v65);
      *(void *)(a1 + 232) = v63;
    }
    if (*(void *)(a2 + 232)) {
      uint64_t v66 = *(uint64_t (****)())(a2 + 232);
    }
    else {
      uint64_t v66 = &off_2531088;
    }
    sub_12BB73C((uint64_t)v63, (uint64_t)v66);
    if ((v29 & 0x200) == 0)
    {
LABEL_93:
      if ((v29 & 0x400) == 0) {
        goto LABEL_94;
      }
      goto LABEL_127;
    }
  }
  else if ((v29 & 0x200) == 0)
  {
    goto LABEL_93;
  }
  *(_DWORD *)(a1 + 40) |= 0x200u;
  uint64_t v67 = *(void *)(a1 + 240);
  if (!v67)
  {
    uint64_t v68 = *(void *)(a1 + 8);
    unint64_t v69 = (void *)(v68 & 0xFFFFFFFFFFFFFFFCLL);
    if (v68) {
      unint64_t v69 = (void *)*v69;
    }
    uint64_t v67 = sub_129E840((uint64_t)v69);
    *(void *)(a1 + 240) = v67;
  }
  if (*(void *)(a2 + 240)) {
    unint64_t v70 = *(uint64_t (****)())(a2 + 240);
  }
  else {
    unint64_t v70 = &off_2530690;
  }
  sub_129AF38(v67, (uint64_t)v70);
  if ((v29 & 0x400) == 0)
  {
LABEL_94:
    if ((v29 & 0x800) == 0) {
      goto LABEL_95;
    }
    goto LABEL_135;
  }
LABEL_127:
  *(_DWORD *)(a1 + 40) |= 0x400u;
  unint64_t v71 = *(std::string **)(a1 + 248);
  if (!v71)
  {
    uint64_t v72 = *(void *)(a1 + 8);
    unsigned int v73 = (void *)(v72 & 0xFFFFFFFFFFFFFFFCLL);
    if (v72) {
      unsigned int v73 = (void *)*v73;
    }
    unint64_t v71 = (std::string *)sub_1482774((uint64_t)v73);
    *(void *)(a1 + 248) = v71;
  }
  if (*(void *)(a2 + 248)) {
    char v74 = *(uint64_t (****)())(a2 + 248);
  }
  else {
    char v74 = &off_2539FF8;
  }
  sub_11A7934(v71, (uint64_t)v74);
  if ((v29 & 0x800) == 0)
  {
LABEL_95:
    if ((v29 & 0x1000) == 0) {
      goto LABEL_96;
    }
    goto LABEL_143;
  }
LABEL_135:
  *(_DWORD *)(a1 + 40) |= 0x800u;
  uint64_t v75 = *(std::string **)(a1 + 256);
  if (!v75)
  {
    uint64_t v76 = *(void *)(a1 + 8);
    uint64_t v77 = (void *)(v76 & 0xFFFFFFFFFFFFFFFCLL);
    if (v76) {
      uint64_t v77 = (void *)*v77;
    }
    uint64_t v75 = (std::string *)sub_1830734((uint64_t)v77);
    *(void *)(a1 + 256) = v75;
  }
  if (*(void *)(a2 + 256)) {
    uint64_t v78 = *(uint64_t (****)())(a2 + 256);
  }
  else {
    uint64_t v78 = &off_2549C78;
  }
  sub_11B9C54(v75, (uint64_t)v78);
  if ((v29 & 0x1000) == 0)
  {
LABEL_96:
    if ((v29 & 0x2000) == 0) {
      goto LABEL_97;
    }
    goto LABEL_151;
  }
LABEL_143:
  *(_DWORD *)(a1 + 40) |= 0x1000u;
  unsigned int v79 = *(std::string **)(a1 + 264);
  if (!v79)
  {
    uint64_t v80 = *(void *)(a1 + 8);
    uint64_t v81 = (void *)(v80 & 0xFFFFFFFFFFFFFFFCLL);
    if (v80) {
      uint64_t v81 = (void *)*v81;
    }
    sub_129E7C0((uint64_t)v81);
    *(void *)(a1 + 264) = v79;
  }
  if (*(void *)(a2 + 264)) {
    int v82 = *(uint64_t (****)())(a2 + 264);
  }
  else {
    int v82 = &off_2530658;
  }
  sub_129A39C(v79, (uint64_t)v82);
  if ((v29 & 0x2000) == 0)
  {
LABEL_97:
    if ((v29 & 0x4000) == 0) {
      goto LABEL_98;
    }
LABEL_152:
    *(unsigned char *)(a1 + 273) = *(unsigned char *)(a2 + 273);
    if ((v29 & 0x8000) == 0) {
      goto LABEL_100;
    }
    goto LABEL_99;
  }
LABEL_151:
  *(unsigned char *)(a1 + 272) = *(unsigned char *)(a2 + 272);
  if ((v29 & 0x4000) != 0) {
    goto LABEL_152;
  }
LABEL_98:
  if ((v29 & 0x8000) != 0) {
LABEL_99:
  }
    *(unsigned char *)(a1 + 274) = *(unsigned char *)(a2 + 274);
LABEL_100:
  *(_DWORD *)(a1 + 40) |= v29;
LABEL_101:
  if ((v29 & 0x70000) == 0) {
    goto LABEL_107;
  }
  if ((v29 & 0x10000) == 0)
  {
    if ((v29 & 0x20000) == 0) {
      goto LABEL_104;
    }
LABEL_155:
    *(_DWORD *)(a1 + 276) = *(_DWORD *)(a2 + 276);
    if ((v29 & 0x40000) == 0) {
      goto LABEL_106;
    }
    goto LABEL_105;
  }
  *(unsigned char *)(a1 + 275) = *(unsigned char *)(a2 + 275);
  if ((v29 & 0x20000) != 0) {
    goto LABEL_155;
  }
LABEL_104:
  if ((v29 & 0x40000) != 0) {
LABEL_105:
  }
    *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
LABEL_106:
  *(_DWORD *)(a1 + 40) |= v29;
LABEL_107:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v62 = *(void *)(a2 + 8);
  if (v62)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v62 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17CB938(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 80);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_18856CC(*(void *)(*(void *)(a1 + 88) + 8 * v3) + 16);
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v6 = *(unsigned int *)(a1 + 104);
    while ((int)v6 >= 1)
    {
      uint64_t v7 = v6 - 1;
      char v8 = sub_12A0DC4(*(void *)(*(void *)(a1 + 112) + 8 * v6));
      uint64_t v6 = v7;
      if ((v8 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v9 = *(unsigned int *)(a1 + 128);
    while ((int)v9 >= 1)
    {
      uint64_t v10 = v9 - 1;
      char v11 = sub_12A37FC(*(void *)(*(void *)(a1 + 136) + 8 * v9));
      uint64_t v9 = v10;
      if ((v11 & 1) == 0) {
        return 0;
      }
    }
    int v12 = *(_DWORD *)(a1 + 40);
    if (v12)
    {
      uint64_t result = sub_15B1FC0(*(void *)(a1 + 168));
      if (!result) {
        return result;
      }
      int v12 = *(_DWORD *)(a1 + 40);
    }
    if ((v12 & 8) != 0)
    {
      uint64_t result = sub_1298A34(*(void *)(a1 + 192));
      if (!result) {
        return result;
      }
      int v12 = *(_DWORD *)(a1 + 40);
    }
    if ((v12 & 0x10) != 0)
    {
      uint64_t result = sub_12B6904(*(void *)(a1 + 200));
      if (!result) {
        return result;
      }
      int v12 = *(_DWORD *)(a1 + 40);
    }
    if ((v12 & 0x40) != 0)
    {
      uint64_t result = sub_179F73C(*(void *)(a1 + 216));
      if (!result) {
        return result;
      }
      int v12 = *(_DWORD *)(a1 + 40);
    }
    if ((v12 & 0x80) != 0)
    {
      uint64_t result = sub_12A76C4(*(void *)(a1 + 224));
      if (!result) {
        return result;
      }
      int v12 = *(_DWORD *)(a1 + 40);
    }
    if ((v12 & 0x100) != 0)
    {
      uint64_t result = sub_12BB974(*(void *)(a1 + 232));
      if (!result) {
        return result;
      }
      int v12 = *(_DWORD *)(a1 + 40);
    }
    if ((v12 & 0x200) == 0) {
      return 1;
    }
    uint64_t result = sub_129AF98(*(void *)(a1 + 240));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_17CBA74@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.CategorySearchResult");
}

uint64_t sub_17CBA84(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24DCB98;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

void sub_17CBB70()
{
}

uint64_t sub_17CBBC0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_254ABE8)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_179203C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17CBC8C(uint64_t a1)
{
  sub_17CBBC0(a1);

  operator delete();
}

unsigned char *sub_17CBCC4(unsigned char *result)
{
  uint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *((void *)result + 3) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_179212C(*((unsigned char **)result + 4));
  }
LABEL_7:
  if ((v2 & 0xC) != 0) {
    *((void *)v1 + 5) = 0;
  }
  char v5 = v1[8];
  uint64_t v4 = v1 + 8;
  *((_DWORD *)v4 + 2) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_17CBD64(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    char v8 = (unsigned __int8 *)(*(void *)v31 + 1);
    unsigned int v9 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        char v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = (unsigned __int8 *)(*(void *)v31 + 2);
      }
    }
    *(void *)uint64_t v31 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_31;
        }
        v5 |= 4u;
        int v12 = (char *)(v8 + 1);
        int v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          int v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)uint64_t v31 = v12;
          *(_DWORD *)(a1 + 40) = v13;
          goto LABEL_39;
        }
        uint64_t v27 = sub_188C0D0((uint64_t)v8, v13);
        *(void *)uint64_t v31 = v27;
        *(_DWORD *)(a1 + 40) = v28;
        if (v27) {
          goto LABEL_39;
        }
        goto LABEL_52;
      case 2u:
        if (v9 != 18) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void **)(a1 + 32);
        if (!v15)
        {
          uint64_t v16 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v16 = (void *)*v16;
          }
          uint64_t v15 = sub_18302C8((uint64_t)v16);
          *(void *)(a1 + 32) = v15;
          char v8 = *(unsigned __int8 **)v31;
        }
        int v17 = sub_120FE50(a3, (uint64_t)v15, v8);
        goto LABEL_38;
      case 3u:
        if (v9 != 26) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v18 = *(void *)(a1 + 8);
        int v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          int v19 = (uint64_t *)*v19;
        }
        char v20 = (std::string *)sub_1880F84((void *)(a1 + 24), v19);
        int v17 = (void *)sub_188C244(v20, *(char **)v31, (uint64_t)a3);
        goto LABEL_38;
      case 4u:
        if (v9 != 32) {
          goto LABEL_31;
        }
        uint64_t v21 = (char *)(v8 + 1);
        unint64_t v22 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v24 = v22 + (v23 << 7);
        unint64_t v22 = (v24 - 128);
        if (v23 < 0)
        {
          *(void *)uint64_t v31 = sub_188C138((uint64_t)v8, (v24 - 128));
          if (!*(void *)v31) {
            goto LABEL_52;
          }
          unint64_t v22 = v29;
        }
        else
        {
          uint64_t v21 = (char *)(v8 + 2);
LABEL_28:
          *(void *)uint64_t v31 = v21;
        }
        if (v22 > 2)
        {
          if (*v7) {
            uint64_t v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(4, v22, v30);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 44) = v22;
        }
        goto LABEL_39;
      default:
LABEL_31:
        if (v9) {
          BOOL v25 = (v9 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          if (*v7)
          {
            uint64_t v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v8 = *(unsigned __int8 **)v31;
          }
          int v17 = sub_1885AC0(v9, v26, (char *)v8, a3);
LABEL_38:
          *(void *)uint64_t v31 = v17;
          if (!v17) {
            goto LABEL_52;
          }
LABEL_39:
          if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_52:
        }
          *(void *)uint64_t v31 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v31;
    }
  }
}

unsigned char *sub_17CC060(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 40);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    *uint64_t v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      int v12 = v4 + 2;
    }
    uint64_t v4 = sub_1792424(v10, (unint64_t)v12, a3);
    if ((v6 & 1) == 0)
    {
LABEL_10:
      if ((v6 & 8) == 0) {
        goto LABEL_25;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0) {
    goto LABEL_25;
  }
LABEL_19:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v13 = *(int *)(a1 + 44);
  *uint64_t v4 = 32;
  v4[1] = v13;
  if (v13 > 0x7F)
  {
    v4[1] = v13 | 0x80;
    unint64_t v14 = v13 >> 7;
    v4[2] = v13 >> 7;
    v4 += 3;
    if (v13 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v15 = v14 >> 14;
        v14 >>= 7;
        *v4++ = v14;
      }
      while (v15);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_25:
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_17CC2A0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_18;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_1792638(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0) {
      goto LABEL_18;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  int v8 = *(_DWORD *)(a1 + 44);
  if (v8 < 0) {
    uint64_t v9 = 11;
  }
  else {
    uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v9;
LABEL_18:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_17CC3F0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_23;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void **)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_18302C8((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_2549800;
    }
    sub_1792730((uint64_t)v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
      goto LABEL_7;
    }
LABEL_23:
    *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_17CC510(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t v1 = *(void *)(a1 + 32);
  if ((*(unsigned char *)(v1 + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = sub_15B1FC0(*(void *)(v1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17CC548@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PopularNearbySearchParameters");
}

uint64_t sub_17CC558(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24DCC18;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

void sub_17CC644()
{
}

uint64_t sub_17CC694(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_254AC18)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_15B1678(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17CC760(uint64_t a1)
{
  sub_17CC694(a1);

  operator delete();
}

unsigned char *sub_17CC798(unsigned char *result)
{
  uint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *((void *)result + 3) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      BOOL result = sub_15B16B4(*((unsigned char **)result + 4));
  }
LABEL_7:
  char v5 = v1[8];
  int v4 = v1 + 8;
  v4[32] = 0;
  *((_DWORD *)v4 + 2) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_17CC830(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v27 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v27 + 1);
    unsigned int v9 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v27, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v27 + 2);
      }
    }
    *(void *)uint64_t v27 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 != 3) {
      break;
    }
    if (v9 != 24) {
      goto LABEL_14;
    }
    v5 |= 4u;
    int v17 = (char *)(v8 + 1);
    uint64_t v18 = *v8;
    if (((char)*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v19 = *v17;
    uint64_t v18 = v18 + (v19 << 7) - 128;
    if ((v19 & 0x80000000) == 0)
    {
      int v17 = (char *)(v8 + 2);
LABEL_25:
      *(void *)uint64_t v27 = v17;
      *(unsigned char *)(a1 + 40) = v18 != 0;
      goto LABEL_36;
    }
    uint64_t v25 = sub_188C138((uint64_t)v8, v18);
    *(void *)uint64_t v27 = v25;
    *(unsigned char *)(a1 + 40) = v26 != 0;
    if (!v25) {
      goto LABEL_43;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 2)
  {
    if (v9 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v20 = *(void *)(a1 + 8);
    uint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      uint64_t v21 = (uint64_t *)*v21;
    }
    unint64_t v22 = (std::string *)sub_1880F84((void *)(a1 + 24), v21);
    uint64_t v16 = (void *)sub_188C244(v22, *(char **)v27, (uint64_t)a3);
LABEL_35:
    *(void *)uint64_t v27 = v16;
    if (!v16) {
      goto LABEL_43;
    }
    goto LABEL_36;
  }
  if (v12 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v23 = *(void *)(a1 + 32);
    if (!v23)
    {
      int v24 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        int v24 = (void *)*v24;
      }
      uint64_t v23 = sub_15C19EC((uint64_t)v24);
      *(void *)(a1 + 32) = v23;
      uint64_t v8 = *(unsigned __int8 **)v27;
    }
    uint64_t v16 = sub_11E1C60(a3, v23, v8);
    goto LABEL_35;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      unint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(unsigned __int8 **)v27;
    }
    uint64_t v16 = sub_1885AC0(v9, v15, (char *)v8, a3);
    goto LABEL_35;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_43:
  *(void *)uint64_t v27 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v27;
}

unsigned char *sub_17CCA74(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    *int v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    int v4 = sub_15B1A68(v7, (unint64_t)v9, a3);
    if ((v6 & 1) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_3;
  }
  int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0) {
    goto LABEL_15;
  }
LABEL_12:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v10 = *(unsigned char *)(a1 + 40);
  *int v4 = 24;
  v4[1] = v10;
  v4 += 2;
LABEL_15:
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    BOOL v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    BOOL v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_17CCBF4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t result = 0;
    goto LABEL_13;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v7 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      uint64_t v7 = v6;
    }
    uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    uint64_t v8 = sub_15B1D1C(*(void *)(a1 + 32));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  if ((v2 & 4) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
LABEL_13:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    result += v11;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_17CCCE8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          *(_DWORD *)(a1 + 16) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void *)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      unsigned int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unsigned int v12 = (void *)*v12;
      }
      uint64_t v10 = sub_15C19EC((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      unint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      unint64_t v13 = &off_253F208;
    }
    sub_15B1E3C(v10, (uint64_t)v13);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_17CCDF8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  BOOL result = sub_15B1FC0(*(void *)(a1 + 32));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17CCE24@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PopularNearbySearchResult");
}

uint64_t sub_17CCE34(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24DCC98;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = a1 + 24;
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(v5, v8, (const std::string **)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  uint64_t v12 = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(void *)(a1 + 56) = v12;
  return a1;
}

void sub_17CCF68()
{
}

uint64_t sub_17CCFC8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254AC48)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_179203C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17CD088(uint64_t a1)
{
  sub_17CCFC8(a1);

  operator delete();
}

uint64_t sub_17CD0C0(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if (v3) {
    uint64_t result = (uint64_t)sub_179212C(*(unsigned char **)(a1 + 48));
  }
  if ((v3 & 6) != 0)
  {
    *(_DWORD *)(a1 + 64) = 0;
    *(void *)(a1 + 56) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_17CD134(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (uint64_t **)(a1 + 24);
  uint64_t v8 = (void *)(a1 + 8);
  while (2)
  {
    int v9 = (unsigned __int8 *)(*(void *)v30 + 1);
    unsigned int v10 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        int v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v30, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        int v9 = (unsigned __int8 *)(*(void *)v30 + 2);
      }
    }
    *(void *)uint64_t v30 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 8) {
          goto LABEL_34;
        }
        v5 |= 4u;
        unint64_t v13 = (char *)(v9 + 1);
        int v14 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        int v14 = v14 + (v15 << 7) - 128;
        if ((v15 & 0x80000000) == 0)
        {
          unint64_t v13 = (char *)(v9 + 2);
LABEL_13:
          *(void *)uint64_t v30 = v13;
          *(_DWORD *)(a1 + 64) = v14;
          goto LABEL_42;
        }
        uint64_t v28 = sub_188C0D0((uint64_t)v9, v14);
        *(void *)uint64_t v30 = v28;
        *(_DWORD *)(a1 + 64) = v29;
        if (v28) {
          goto LABEL_42;
        }
        goto LABEL_49;
      case 2u:
        if (v10 != 18) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v16 = *(void **)(a1 + 48);
        if (!v16)
        {
          int v17 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v8) {
            int v17 = (void *)*v17;
          }
          uint64_t v16 = sub_18302C8((uint64_t)v17);
          *(void *)(a1 + 48) = v16;
          int v9 = *(unsigned __int8 **)v30;
        }
        uint64_t v18 = sub_120FE50(a3, (uint64_t)v16, v9);
        goto LABEL_41;
      case 3u:
        if (v10 != 25) {
          goto LABEL_34;
        }
        v5 |= 2u;
        *(void *)(a1 + 56) = *(void *)v9;
        *(void *)uint64_t v30 = v9 + 8;
        goto LABEL_42;
      case 4u:
        if (v10 != 34) {
          goto LABEL_34;
        }
        int v19 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          uint64_t v20 = (char *)(v19 + 1);
          *(void *)uint64_t v30 = v19 + 1;
          uint64_t v21 = *(_DWORD **)(a1 + 40);
          if (v21 && (uint64_t v22 = *(int *)(a1 + 32), (int)v22 < *v21))
          {
            *(_DWORD *)(a1 + 32) = v22 + 1;
            uint64_t v23 = *(std::string **)&v21[2 * v22 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *uint64_t v25 = v24;
            v25[1] = sub_3A6EDC;
            void *v24 = 0;
            v24[1] = 0;
            int v24[2] = 0;
            uint64_t v23 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v24);
            uint64_t v20 = *(char **)v30;
          }
          int v19 = sub_188C244(v23, v20, (uint64_t)a3);
          *(void *)uint64_t v30 = v19;
          if (!v19) {
            goto LABEL_49;
          }
          if (*(void *)a3 <= (unint64_t)v19 || *v19 != 34) {
            goto LABEL_42;
          }
        }
      default:
LABEL_34:
        if (v10) {
          BOOL v26 = (v10 & 7) == 4;
        }
        else {
          BOOL v26 = 1;
        }
        if (!v26)
        {
          if (*v8)
          {
            uint64_t v27 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v9 = *(unsigned __int8 **)v30;
          }
          uint64_t v18 = sub_1885AC0(v10, v27, (char *)v9, a3);
LABEL_41:
          *(void *)uint64_t v30 = v18;
          if (!v18) {
            goto LABEL_49;
          }
LABEL_42:
          if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_49:
        }
          *(void *)uint64_t v30 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v30;
    }
  }
}

unsigned char *sub_17CD44C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 64);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 48);
    *uint64_t v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unsigned int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unsigned int v12 = v4 + 2;
    }
    uint64_t v4 = sub_1792424(v10, (unint64_t)v12, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 56);
    *uint64_t v4 = 25;
    *(void *)(v4 + 1) = v13;
    v4 += 9;
  }
  uint64_t v14 = *(unsigned int *)(a1 + 32);
  if ((int)v14 >= 1)
  {
    uint64_t v15 = 0;
    uint64_t v16 = 8 * v14;
    do
    {
      uint64_t v4 = (unsigned char *)sub_125CE58(a3, 4, *(void *)(*(void *)(a1 + 40) + v15 + 8), v4);
      v15 += 8;
    }
    while (v16 != v15);
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if ((v17 & 1) == 0) {
    return v4;
  }
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v19 + 31) < 0)
  {
    uint64_t v20 = *(void **)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
  }
  else
  {
    uint64_t v20 = (void *)(v19 + 8);
    LODWORD(v21) = *(unsigned __int8 *)(v19 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v21)
  {
    uint64_t v22 = (int)v21;
    memcpy(v4, v20, (int)v21);
    v4 += v22;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v20, v21, v4);
}

uint64_t sub_17CD65C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    int v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      uint64_t v9 = sub_1792638(*(void *)(a1 + 48));
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0) {
      v4 += 9;
    }
    if ((v8 & 4) != 0) {
      v4 += ((9 * (__clz(*(_DWORD *)(a1 + 64) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v4 += v13;
  }
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_17CD788(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(a1 + 24, v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      unsigned int v11 = *(void **)(a1 + 48);
      if (!v11)
      {
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (void *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (void *)*v13;
        }
        unsigned int v11 = sub_18302C8((uint64_t)v13);
        *(void *)(a1 + 48) = v11;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v14 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v14 = &off_2549800;
      }
      sub_1792730((uint64_t)v11, (uint64_t)v14);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          *(_DWORD *)(a1 + 16) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_17CD8E0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t v1 = *(void *)(a1 + 48);
  if ((*(unsigned char *)(v1 + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = sub_15B1FC0(*(void *)(v1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17CD918@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.BatchPopularNearbySearchParameters");
}

void *sub_17CD928(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17CD99C(void *a1)
{
  sub_17CD928(a1);

  operator delete();
}

uint64_t sub_17CD9D4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_17CD9FC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v16 = v8 + 1;
    LODWORD(v15) = *v8;
    if ((v15 & 0x80) == 0) {
      goto LABEL_25;
    }
    int v17 = *v16;
    uint64_t v15 = v15 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v16 = v8 + 2;
LABEL_25:
      uint64_t v25 = v16;
      *(_DWORD *)(a1 + 32) = v15;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C138((uint64_t)v8, v15);
    uint64_t v25 = v21;
    *(_DWORD *)(a1 + 32) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v18 = v8 + 1;
    uint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    uint64_t v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      uint64_t v25 = v18;
      *(void *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    uint64_t v23 = (char *)sub_188C138((uint64_t)v8, v19);
    uint64_t v25 = v23;
    *(void *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_17CDBE8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 24);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 32);
    *int v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

unint64_t sub_17CDD8C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    unint64_t v2 = 0;
    goto LABEL_11;
  }
  if (v1)
  {
    unint64_t v2 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    unint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v3 = *(_DWORD *)(a1 + 32);
  if (v3 < 0) {
    uint64_t v4 = 11;
  }
  else {
    uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v4;
LABEL_11:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v2 += v8;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_17CDE3C()
{
  return 1;
}

void *sub_17CDE44@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.LitePlaceResult");
}

uint64_t sub_17CDE54(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1877938((void *)(a1 + 48));
  sub_12C28B4((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17CDF0C(uint64_t a1)
{
  sub_17CDE54(a1);

  operator delete();
}

uint64_t sub_17CDF44(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_175FE78(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    int v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_17CD9D4(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    unint64_t v8 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
    }
  }
  char v10 = *(unsigned char *)(v1 + 8);
  uint64_t v9 = v1 + 8;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

uint64_t sub_17CE01C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v31 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    return *(void *)v31;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v31 + 1);
    unsigned int v8 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v31, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v31 + 2);
      }
    }
    *(void *)uint64_t v31 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3) {
      break;
    }
    if (v11 == 2)
    {
      if (v8 == 18)
      {
        int v22 = v7 - 1;
        while (1)
        {
          uint64_t v23 = (unsigned __int8 *)(v22 + 1);
          *(void *)uint64_t v31 = v22 + 1;
          uint64_t v24 = *(_DWORD **)(a1 + 40);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 32), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 32) = v25 + 1;
            uint64_t v26 = *(void *)&v24[2 * v25 + 2];
          }
          else
          {
            uint64_t v27 = sub_178CDA8(*(void *)(a1 + 24));
            uint64_t v26 = sub_188CDC8(a1 + 24, v27);
            uint64_t v23 = *(unsigned __int8 **)v31;
          }
          int v22 = (char *)sub_1265F8C(a3, v26, v23);
          *(void *)uint64_t v31 = v22;
          if (!v22) {
            goto LABEL_50;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 18) {
            goto LABEL_45;
          }
        }
      }
      goto LABEL_14;
    }
    if (v11 != 1 || v8 != 10) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v28 = *(void *)(a1 + 8);
    int v29 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
    if (v28) {
      int v29 = (uint64_t *)*v29;
    }
    uint64_t v30 = (std::string *)sub_1880F84((void *)(a1 + 72), v29);
    unint64_t v15 = (void *)sub_188C244(v30, *(char **)v31, (uint64_t)a3);
LABEL_44:
    *(void *)uint64_t v31 = v15;
    if (!v15) {
      goto LABEL_50;
    }
LABEL_45:
    if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
      return *(void *)v31;
    }
  }
  if (v8 == 26)
  {
    uint64_t v16 = v7 - 1;
    while (1)
    {
      uint64_t v17 = (unsigned __int8 *)(v16 + 1);
      *(void *)uint64_t v31 = v16 + 1;
      uint64_t v18 = *(_DWORD **)(a1 + 64);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 56), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 56) = v19 + 1;
        uint64_t v20 = *(void *)&v18[2 * v19 + 2];
      }
      else
      {
        uint64_t v21 = sub_1832B38(*(void *)(a1 + 48));
        uint64_t v20 = sub_188CDC8(a1 + 48, v21);
        uint64_t v17 = *(unsigned __int8 **)v31;
      }
      uint64_t v16 = sub_17CE2BC(a3, v20, v17);
      *(void *)uint64_t v31 = v16;
      if (!v16) {
        goto LABEL_50;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
        goto LABEL_45;
      }
    }
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v31;
    }
    unint64_t v15 = sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_44;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v31;
  }
LABEL_50:
  *(void *)uint64_t v31 = 0;
  return *(void *)v31;
}

char *sub_17CE2BC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17CD9FC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17CE34C(uint64_t a1, char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      v4[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, v4 + 1);
      }
      else {
        unsigned int v10 = v4 + 2;
      }
      uint64_t v4 = sub_1763540(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 56);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *uint64_t v4 = 26;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      v4[1] = v14;
      if (v14 > 0x7F) {
        unint64_t v15 = sub_188A9CC(v14, v4 + 1);
      }
      else {
        unint64_t v15 = v4 + 2;
      }
      uint64_t v4 = sub_17CDBE8(v13, (unint64_t)v15, a3);
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_17CE538(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1763C40(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      unint64_t v14 = sub_17CDD8C(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v15 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
    uint64_t v17 = *(void *)(v15 + 8);
    if ((v16 & 0x80u) == 0) {
      uint64_t v17 = v16;
    }
    v9 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18)
  {
    unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v9 += v21;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

void sub_17CE680(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C3474((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1879068((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    unint64_t v14 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    sub_1881DF4((std::string **)(a1 + 72), v14, v16);
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_17CE7EC(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_17612D4(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_17CE844@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PopularNearbyResult");
}

uint64_t sub_17CE854(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  char v5 = (uint64_t *)(a1 + 16);
  *(void *)a1 = off_24DCE18;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_18790E4(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    uint64_t v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_17CE934(_Unwind_Exception *a1)
{
  sub_18779B8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17CE978(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_18779B8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17CE9F8(void *a1)
{
  sub_17CE978(a1);

  operator delete();
}

uint64_t sub_17CEA30(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_17CDF44(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  char v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_17CEAAC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    char v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        int v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          unint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_1832BB4(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          int v12 = (char *)sub_17CEC4C(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

uint64_t sub_17CEC4C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17CE01C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17CECDC(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_17CE34C(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_17CEE20(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_17CE538(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void sub_17CEED0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_18790E4((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17CEFA0(uint64_t a1)
{
  return sub_17CEFA8(a1 + 16);
}

uint64_t sub_17CEFA8(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 >= 1)
  {
    do
    {
      uint64_t v3 = v1--;
      uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * v1 + 8);
      uint64_t v5 = *(unsigned int *)(v4 + 32);
      while ((int)v5 >= 1)
      {
        uint64_t v6 = v5 - 1;
        char v7 = sub_17612D4(*(void *)(*(void *)(v4 + 40) + 8 * v5));
        uint64_t v5 = v6;
        if ((v7 & 1) == 0) {
          return 0;
        }
      }
    }
    while (v3 >= 2);
  }
  return 1;
}

void *sub_17CF034@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.BatchPopularNearbySearchResult");
}

uint64_t sub_17CF044(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DCE98;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v5 = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  *(_DWORD *)(a1 + 24) = v5;
  return a1;
}

void sub_17CF0C8(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17CF0F8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17CF16C(void *a1)
{
  sub_17CF0F8(a1);

  operator delete();
}

uint64_t sub_17CF1A4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(unsigned char *)(a1 + 28) = 0;
    *(_DWORD *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_17CF1CC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v26 + 2;
      }
    }
    uint64_t v26 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      uint64_t v26 = v15;
      *(unsigned char *)(a1 + 28) = v16 != 0;
      goto LABEL_32;
    }
    int v22 = (char *)sub_188C138((uint64_t)v8, v16);
    uint64_t v26 = v22;
    *(unsigned char *)(a1 + 28) = v23 != 0;
    if (!v22) {
      goto LABEL_45;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    uint64_t v18 = v8 + 1;
    unint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v21 = v19 + (v20 << 7);
    unint64_t v19 = (v21 - 128);
    if (v20 < 0)
    {
      uint64_t v26 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
      if (!v26) {
        goto LABEL_45;
      }
      unint64_t v19 = v24;
    }
    else
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      uint64_t v26 = v18;
    }
    if (v19 > 1)
    {
      if (*v7) {
        uint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v19, v25);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_DWORD *)(a1 + 24) = v19;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      unint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v26;
    }
    uint64_t v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_45;
    }
    goto LABEL_32;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_45:
  uint64_t v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

unsigned char *sub_17CF410(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 28);
    *uint64_t v4 = 16;
    v4[1] = v10;
    v4 += 2;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_17CF570(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      int v4 = *(_DWORD *)(a1 + 24);
      if (v4 < 0) {
        uint64_t v2 = 11;
      }
      else {
        uint64_t v2 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      uint64_t v3 = v2 + 2;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v3 += v8;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_17CF600()
{
  return 1;
}

void *sub_17CF608@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchFieldPlaceholderParameters");
}

uint64_t sub_17CF618(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24DCF18;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    int v6 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v6 = (uint64_t *)*v6;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v6);
  }
  return a1;
}

void sub_17CF6C4(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17CF6F4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17CF794(uint64_t a1)
{
  sub_17CF6F4(a1);

  operator delete();
}

uint64_t sub_17CF7CC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_17CF810(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v17 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
    return *(void *)v17;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    int v6 = (char *)(*(void *)v17 + 1);
    unsigned int v7 = **(unsigned char **)v17;
    if ((char)**(unsigned char **)v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        int v6 = (char *)sub_188C180(*(uint64_t *)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        int v6 = (char *)(*(void *)v17 + 2);
      }
    }
    *(void *)int v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 8);
    unint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
    if (v13) {
      unint64_t v14 = (uint64_t *)*v14;
    }
    uint64_t v15 = (std::string *)sub_1880F84((void *)(a1 + 24), v14);
    int v12 = (void *)sub_188C244(v15, *(char **)v17, (uint64_t)a3);
LABEL_18:
    *(void *)int v17 = v12;
    if (!v12) {
      goto LABEL_25;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
      return *(void *)v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v6 = *(char **)v17;
    }
    int v12 = sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_18;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return *(void *)v17;
  }
LABEL_25:
  *(void *)int v17 = 0;
  return *(void *)v17;
}

char *sub_17CF968(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_17CFA34(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v1 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v1 += v8;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_17CFAB8()
{
  return 1;
}

void *sub_17CFAC0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchFieldPlaceholderResult");
}

uint64_t sub_17CFAD0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24DCF98;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v6 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v6 = (uint64_t *)*v6;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v6);
  }
  return a1;
}

void sub_17CFB7C(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17CFBAC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17CFC4C(uint64_t a1)
{
  sub_17CFBAC(a1);

  operator delete();
}

uint64_t sub_17CFC84(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_17CFCC8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v17 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
    return *(void *)v17;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = (char *)(*(void *)v17 + 1);
    unsigned int v7 = **(unsigned char **)v17;
    if ((char)**(unsigned char **)v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180(*(uint64_t *)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = (char *)(*(void *)v17 + 2);
      }
    }
    *(void *)int v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 8);
    unint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
    if (v13) {
      unint64_t v14 = (uint64_t *)*v14;
    }
    uint64_t v15 = (std::string *)sub_1880F84((void *)(a1 + 24), v14);
    int v12 = (void *)sub_188C244(v15, *(char **)v17, (uint64_t)a3);
LABEL_18:
    *(void *)int v17 = v12;
    if (!v12) {
      goto LABEL_25;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
      return *(void *)v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = *(char **)v17;
    }
    int v12 = sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_18;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return *(void *)v17;
  }
LABEL_25:
  *(void *)int v17 = 0;
  return *(void *)v17;
}

char *sub_17CFE20(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_17CFEEC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v1 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v1 += v8;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_17CFF70()
{
  return 1;
}

void *sub_17CFF78@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.CanonicalLocationSearchParameters");
}

uint64_t sub_17CFF88(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DD018;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_17CFFF4(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17D0024(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17D0098(void *a1)
{
  sub_17D0024(a1);

  operator delete();
}

uint64_t *sub_17D00D0(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_17D00E0(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v12 = a2;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_17D01E0(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_17D0278(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_17D02AC(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_17D02C8()
{
  return 1;
}

void *sub_17D02D0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.CanonicalLocationSearchResult");
}

uint64_t sub_17D02E0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24DD098;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = &qword_2550250;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(unsigned char *)(a1 + 88) = 0;
  *(_DWORD *)(a1 + 92) = 10;
  return a1;
}

void sub_17D0368(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17D0398(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24DD098;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 48) = &qword_2550250;
  int v7 = *(_DWORD *)(a2 + 40);
  if (v7)
  {
    uint64_t v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v7 = *(_DWORD *)(a2 + 40);
  }
  if ((v7 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  if ((v7 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  if ((v7 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  if ((v7 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

void sub_17D0550()
{
}

void *sub_17D05F0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_17D067C((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_17D067C(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 48);
  uint64_t result = (void ***)(a1 + 48);
  if (v3 != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_254AD38)
  {
    uint64_t v4 = *(void *)(a1 + 56);
    if (v4)
    {
      sub_179203C(v4);
      operator delete();
    }
    if (*(void *)(a1 + 64))
    {
      sub_15B6D48();
      operator delete();
    }
    uint64_t v5 = *(void *)(a1 + 72);
    if (v5)
    {
      sub_129B2BC(v5);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 80);
    if (result)
    {
      sub_12A263C(result);
      operator delete();
    }
  }
  return result;
}

void sub_17D0760(void *a1)
{
  sub_17D05F0(a1);

  operator delete();
}

uint64_t sub_17D0798(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if (v3)
  {
    unint64_t v6 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_18;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_18;
      }
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_19:
    uint64_t result = sub_15B6D84(*(void *)(a1 + 64));
    if ((v3 & 8) == 0)
    {
LABEL_6:
      if ((v3 & 0x10) == 0) {
        goto LABEL_8;
      }
      goto LABEL_7;
    }
    goto LABEL_20;
  }
  if ((v3 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_18:
  uint64_t result = (uint64_t)sub_179212C(*(unsigned char **)(a1 + 56));
  if ((v3 & 4) != 0) {
    goto LABEL_19;
  }
LABEL_5:
  if ((v3 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_20:
  uint64_t result = sub_129B2F8(*(void *)(a1 + 72));
  if ((v3 & 0x10) != 0) {
LABEL_7:
  }
    uint64_t result = sub_1292158(*(void *)(a1 + 80));
LABEL_8:
  if ((v3 & 0x60) != 0)
  {
    *(unsigned char *)(a1 + 88) = 0;
    *(_DWORD *)(a1 + 92) = 10;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_17D0880(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v36 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v36, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v36 + 1);
    unsigned int v9 = **(unsigned char **)v36;
    if ((char)**(unsigned char **)v36 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v36, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v36 + 2);
      }
    }
    *(void *)uint64_t v36 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (std::string *)sub_1880F84((void *)(a1 + 48), v13);
        uint64_t v15 = (uint64_t)sub_188C244(v14, *(char **)v36, (uint64_t)a3);
        goto LABEL_56;
      case 2u:
        if (v9 != 16) {
          goto LABEL_47;
        }
        v5 |= 0x40u;
        uint64_t v16 = (char *)(v8 + 1);
        int v17 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v18 = *v16;
        int v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v32 = sub_188C0D0((uint64_t)v8, v17);
          *(void *)uint64_t v36 = v32;
          *(_DWORD *)(a1 + 92) = v33;
          if (!v32) {
            goto LABEL_66;
          }
        }
        else
        {
          uint64_t v16 = (char *)(v8 + 2);
LABEL_17:
          *(void *)uint64_t v36 = v16;
          *(_DWORD *)(a1 + 92) = v17;
        }
        goto LABEL_57;
      case 3u:
        if (v9 != 26) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        unint64_t v19 = *(void **)(a1 + 56);
        if (!v19)
        {
          int v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v20 = (void *)*v20;
          }
          unint64_t v19 = sub_18302C8((uint64_t)v20);
          *(void *)(a1 + 56) = v19;
          uint64_t v8 = *(unsigned __int8 **)v36;
        }
        uint64_t v15 = (uint64_t)sub_120FE50(a3, (uint64_t)v19, v8);
        goto LABEL_56;
      case 4u:
        if (v9 != 34) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        int v21 = *(void **)(a1 + 64);
        if (!v21)
        {
          int v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v22 = (void *)*v22;
          }
          int v21 = sub_15C1E94((uint64_t)v22);
          *(void *)(a1 + 64) = v21;
          uint64_t v8 = *(unsigned __int8 **)v36;
        }
        uint64_t v15 = (uint64_t)sub_11EA9CC(a3, (uint64_t)v21, v8);
        goto LABEL_56;
      case 5u:
        if (v9 != 42) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v23 = *(void **)(a1 + 72);
        if (!v23)
        {
          unint64_t v24 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v24 = (void *)*v24;
          }
          uint64_t v23 = sub_129E89C((uint64_t)v24);
          *(void *)(a1 + 72) = v23;
          uint64_t v8 = *(unsigned __int8 **)v36;
        }
        uint64_t v15 = sub_17973D0(a3, (uint64_t)v23, v8);
        goto LABEL_56;
      case 6u:
        if (v9 != 48) {
          goto LABEL_47;
        }
        v5 |= 0x20u;
        uint64_t v25 = (char *)(v8 + 1);
        uint64_t v26 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_40;
        }
        int v27 = *v25;
        uint64_t v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          uint64_t v34 = sub_188C138((uint64_t)v8, v26);
          *(void *)uint64_t v36 = v34;
          *(unsigned char *)(a1 + 88) = v35 != 0;
          if (!v34) {
            goto LABEL_66;
          }
        }
        else
        {
          uint64_t v25 = (char *)(v8 + 2);
LABEL_40:
          *(void *)uint64_t v36 = v25;
          *(unsigned char *)(a1 + 88) = v26 != 0;
        }
        goto LABEL_57;
      case 7u:
        if (v9 != 58) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v28 = *(void *)(a1 + 80);
        if (!v28)
        {
          int v29 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v29 = (void *)*v29;
          }
          uint64_t v28 = sub_12BBCF8((uint64_t)v29);
          *(void *)(a1 + 80) = v28;
          uint64_t v8 = *(unsigned __int8 **)v36;
        }
        uint64_t v15 = (uint64_t)sub_12930FC(a3, v28, v8);
        goto LABEL_56;
      default:
LABEL_47:
        if (v9) {
          BOOL v30 = (v9 & 7) == 4;
        }
        else {
          BOOL v30 = 1;
        }
        if (!v30)
        {
          if (v9 - 800 > 0x31F)
          {
            if (*v7)
            {
              uint64_t v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = *(unsigned __int8 **)v36;
            }
            uint64_t v15 = (uint64_t)sub_1885AC0(v9, v31, (char *)v8, a3);
          }
          else
          {
            uint64_t v15 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_254AD38, (uint64_t *)(a1 + 8), a3);
          }
LABEL_56:
          *(void *)uint64_t v36 = v15;
          if (!v15) {
            goto LABEL_66;
          }
LABEL_57:
          if (sub_11947B8((uint64_t)a3, (char **)v36, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_66:
        }
          *(void *)uint64_t v36 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v36;
    }
  }
}

char *sub_17D0C80(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 92);
    *uint64_t v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 56);
    *uint64_t v4 = 26;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    uint64_t v4 = sub_1792424(v10, (unint64_t)v12, a3);
    if ((v6 & 4) == 0)
    {
LABEL_12:
      if ((v6 & 8) == 0) {
        goto LABEL_13;
      }
      goto LABEL_28;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_12;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 64);
  *uint64_t v4 = 34;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  uint64_t v4 = sub_15B7AE4(v13, v15, a3);
  if ((v6 & 8) == 0)
  {
LABEL_13:
    if ((v6 & 0x20) == 0) {
      goto LABEL_14;
    }
    goto LABEL_34;
  }
LABEL_28:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 72);
  *uint64_t v4 = 42;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    int v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    int v18 = v4 + 2;
  }
  uint64_t v4 = sub_129B924(v16, v18, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_14:
    if ((v6 & 0x10) == 0) {
      goto LABEL_43;
    }
    goto LABEL_37;
  }
LABEL_34:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v19 = *(unsigned char *)(a1 + 88);
  *uint64_t v4 = 48;
  v4[1] = v19;
  v4 += 2;
  if ((v6 & 0x10) != 0)
  {
LABEL_37:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v20 = *(void *)(a1 + 80);
    *uint64_t v4 = 58;
    unsigned int v21 = *(_DWORD *)(v20 + 48);
    v4[1] = v21;
    if (v21 > 0x7F) {
      int v22 = sub_188A9CC(v21, v4 + 1);
    }
    else {
      int v22 = v4 + 2;
    }
    uint64_t v4 = sub_12A29F8(v20, v22, a3);
  }
LABEL_43:
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 100, 200, v4, a3);
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if ((v23 & 1) == 0) {
    return v4;
  }
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v25 + 31) < 0)
  {
    uint64_t v26 = *(void **)(v25 + 8);
    uint64_t v27 = *(void *)(v25 + 16);
  }
  else
  {
    uint64_t v26 = (void *)(v25 + 8);
    LODWORD(v27) = *(unsigned __int8 *)(v25 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v27)
  {
    uint64_t v28 = (int)v27;
    memcpy(v4, v26, (int)v27);
    v4 += v28;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v26, v27, v4);
}

uint64_t sub_17D0FD4(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = v2;
  int v4 = *(_DWORD *)(a1 + 40);
  if ((v4 & 0x7F) == 0) {
    goto LABEL_12;
  }
  if (v4)
  {
    unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    uint64_t v3 = v2 + v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_18;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v11 = sub_1792638(*(void *)(a1 + 56));
  v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_19:
    uint64_t v13 = sub_129BB54(*(void *)(a1 + 72));
    v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_18:
  uint64_t v12 = sub_15B806C(*(void *)(a1 + 64));
  v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 8) != 0) {
    goto LABEL_19;
  }
LABEL_6:
  if ((v4 & 0x10) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_12A2BE4(*(void *)(a1 + 80));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v4 & 0x20) != 0) {
    v3 += 2;
  }
  if ((v4 & 0x40) != 0) {
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 92) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v14 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v3 += v15;
  }
  *(_DWORD *)(a1 + 44) = v3;
  return v3;
}

void sub_17D1194(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0x7F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      unsigned int v7 = (std::string **)(a1 + 48);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_26;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v10 = *(void **)(a1 + 56);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_18302C8((uint64_t)v12);
      *(void *)(a1 + 56) = v10;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v13 = &off_2549800;
    }
    sub_1792730((uint64_t)v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_34;
    }
LABEL_26:
    *(_DWORD *)(a1 + 40) |= 4u;
    unint64_t v14 = *(std::string **)(a1 + 64);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      unint64_t v14 = (std::string *)sub_15C1E94((uint64_t)v16);
      *(void *)(a1 + 64) = v14;
    }
    if (*(void *)(a2 + 64)) {
      unsigned int v17 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      unsigned int v17 = &off_253F3D0;
    }
    sub_15B86B8(v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_42;
    }
LABEL_34:
    *(_DWORD *)(a1 + 40) |= 8u;
    int v18 = *(void **)(a1 + 72);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        uint64_t v20 = (void *)*v20;
      }
      int v18 = sub_129E89C((uint64_t)v20);
      *(void *)(a1 + 72) = v18;
    }
    if (*(void *)(a2 + 72)) {
      unsigned int v21 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      unsigned int v21 = &off_25306C0;
    }
    sub_129BCC0((uint64_t)v18, (uint64_t)v21);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_50;
    }
LABEL_42:
    *(_DWORD *)(a1 + 40) |= 0x10u;
    int v22 = *(std::string **)(a1 + 80);
    if (!v22)
    {
      uint64_t v23 = *(void *)(a1 + 8);
      unint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        unint64_t v24 = (void *)*v24;
      }
      int v22 = (std::string *)sub_12BBCF8((uint64_t)v24);
      *(void *)(a1 + 80) = v22;
    }
    if (*(void *)(a2 + 80)) {
      unint64_t v25 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      unint64_t v25 = &off_2530920;
    }
    sub_11D640C(v22, (uint64_t)v25);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0)
      {
LABEL_10:
        *(_DWORD *)(a1 + 40) |= v4;
        goto LABEL_11;
      }
LABEL_9:
      *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
      goto LABEL_10;
    }
LABEL_50:
    *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
    if ((v4 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17D13B0(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if ((v3 & 2) != 0)
    {
      uint64_t v4 = *(void *)(a1 + 56);
      if (*(unsigned char *)(v4 + 16))
      {
        uint64_t result = sub_15B1FC0(*(void *)(v4 + 24));
        if (!result) {
          return result;
        }
        int v3 = *(_DWORD *)(a1 + 40);
      }
    }
    if ((v3 & 4) != 0)
    {
      uint64_t result = sub_15B8CAC(*(void *)(a1 + 64));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 8) == 0) {
      return 1;
    }
    uint64_t result = sub_129BFCC(*(void *)(a1 + 72));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_17D1428@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.GeocodingParameters");
}

uint64_t sub_17D1438(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24DD118;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 40) = a2;
  *(_DWORD *)(a1 + 64) = 0;
  return a1;
}

void sub_17D14A8(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17D14D8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24DD118;
  *(_DWORD *)(a1 + 24) = 0;
  uint64_t v6 = (uint64_t *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  int v7 = *(_DWORD *)(a2 + 48);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 56);
    uint64_t v9 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_1878644(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v10 = *(_DWORD *)(a1 + 48) + v7;
    *(_DWORD *)(a1 + 48) = v10;
    uint64_t v11 = *(int **)(a1 + 56);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  *(_DWORD *)(a1 + 64) = 0;
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  return a1;
}

void sub_17D15D8(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17D1628(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1876FB8(a1 + 5);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17D16B0(void *a1)
{
  sub_17D1628(a1);

  operator delete();
}

uint64_t sub_17D16E8(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_1792958(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 48) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = (uint64_t *)(a1 + 8);
  if (v7)
  {
    return sub_188B4AC(v6);
  }
  return result;
}

char *sub_17D176C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v20 = a2;
  if ((sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v6 = v20 + 1;
      unsigned int v7 = *v20;
      if (*v20 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          uint64_t v6 = (char *)sub_188C180((uint64_t)v20, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          uint64_t v6 = v20 + 2;
        }
      }
      uint64_t v20 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v20 = v12 + 1;
          unint64_t v14 = *(_DWORD **)(a1 + 56);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 48), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 48) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_1830344(*(void *)(a1 + 40));
            uint64_t v16 = sub_188CDC8(a1 + 40, v17);
            uint64_t v13 = (unsigned __int8 *)v20;
          }
          uint64_t v12 = sub_179CFFC(a3, v16, v13);
          uint64_t v20 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_27;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (v7 - 800 > 0x31F)
      {
        if (*v5)
        {
          int v18 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          int v18 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          uint64_t v6 = v20;
        }
        uint64_t v11 = sub_1885AC0(v7, v18, v6, a3);
      }
      else
      {
        uint64_t v11 = sub_18859DC((uint64_t **)(a1 + 16), v7, v6, (uint64_t)&off_254AD98, (uint64_t *)(a1 + 8), a3);
      }
      uint64_t v20 = (char *)v11;
      if (!v11) {
        return 0;
      }
LABEL_27:
      if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
        return v20;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v20;
    }
    return 0;
  }
  return v20;
}

char *sub_17D1948(uint64_t a1, char *a2, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 48);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 40);
      a2[1] = v9;
      if (v9 > 0x7F) {
        int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        int v10 = a2 + 2;
      }
      a2 = sub_1792B74(v8, v10, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 100, 200, a2, a3);
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return a2;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)a2 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(a2, v14, (int)v15);
    a2 += v16;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, a2);
}

uint64_t sub_17D1AB0(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 48);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_1792CB8(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v4 += v13;
  }
  *(_DWORD *)(a1 + 64) = v4;
  return v4;
}

void sub_17D1B64(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_1878644((uint64_t *)(a1 + 40), v6, v5, v4, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v7 = *(_DWORD *)(a1 + 48) + v4;
    *(_DWORD *)(a1 + 48) = v7;
    uint64_t v8 = *(int **)(a1 + 56);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17D1C40(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_17D1C48@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.GeocodingResult");
}

uint64_t sub_17D1C58(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24DD198;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = &qword_2550250;
  *(void *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 64) = 10;
  return a1;
}

void sub_17D1CD0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17D1D00(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24DD198;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 48) = &qword_2550250;
  int v7 = *(_DWORD *)(a2 + 40);
  if (v7)
  {
    uint64_t v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v7 = *(_DWORD *)(a2 + 40);
  }
  if ((v7 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  return a1;
}

void sub_17D1E10()
{
}

uint64_t sub_17D1E6C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_254ADE0)
  {
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_179203C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17D1F40(uint64_t a1)
{
  sub_17D1E6C(a1);

  operator delete();
}

unsigned char *sub_17D1F78(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 7) != 0)
  {
    if (v3)
    {
      unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v4 + 23) < 0)
      {
        **(unsigned char **)unint64_t v4 = 0;
        *(void *)(v4 + 8) = 0;
        if ((v3 & 2) == 0) {
          goto LABEL_7;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    if ((v3 & 2) == 0)
    {
LABEL_7:
      *(_DWORD *)(a1 + 64) = 10;
      goto LABEL_8;
    }
LABEL_6:
    uint64_t result = sub_179212C(*(unsigned char **)(a1 + 56));
    goto LABEL_7;
  }
LABEL_8:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t v5 = a1 + 8;
  *(_DWORD *)(v5 + 32) = 0;
  if (v6)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_17D201C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v27 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v27 + 1);
    unsigned int v9 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v27, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v27 + 2);
      }
    }
    *(void *)uint64_t v27 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 40) |= 2u;
      uint64_t v16 = *(void **)(a1 + 56);
      if (!v16)
      {
        uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v17 = (void *)*v17;
        }
        uint64_t v16 = sub_18302C8((uint64_t)v17);
        *(void *)(a1 + 56) = v16;
        uint64_t v8 = *(unsigned __int8 **)v27;
      }
      uint64_t v15 = sub_120FE50(a3, (uint64_t)v16, v8);
LABEL_37:
      *(void *)uint64_t v27 = v15;
      if (!v15) {
        goto LABEL_45;
      }
      goto LABEL_38;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 4u;
    int v18 = (char *)(v8 + 1);
    int v19 = *v8;
    if (((char)*v8 & 0x80000000) == 0) {
      goto LABEL_30;
    }
    int v20 = *v18;
    int v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      int v18 = (char *)(v8 + 2);
LABEL_30:
      *(void *)uint64_t v27 = v18;
      *(_DWORD *)(a1 + 64) = v19;
      goto LABEL_38;
    }
    uint64_t v25 = sub_188C0D0((uint64_t)v8, v19);
    *(void *)uint64_t v27 = v25;
    *(_DWORD *)(a1 + 64) = v26;
    if (!v25) {
      goto LABEL_45;
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v21 = *(void *)(a1 + 8);
    int v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      int v22 = (uint64_t *)*v22;
    }
    uint64_t v23 = (std::string *)sub_1880F84((void *)(a1 + 48), v22);
    uint64_t v15 = (void *)sub_188C244(v23, *(char **)v27, (uint64_t)a3);
    goto LABEL_37;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (v9 - 800 > 0x31F)
    {
      if (*v7)
      {
        unint64_t v24 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v8 = *(unsigned __int8 **)v27;
      }
      uint64_t v15 = sub_1885AC0(v9, v24, (char *)v8, a3);
    }
    else
    {
      uint64_t v15 = sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_254ADE0, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_37;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_45:
  *(void *)uint64_t v27 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return *(void *)v27;
}

char *sub_17D228C(uint64_t a1, char *a2, void *a3)
{
  unint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 64);
    *unint64_t v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 56);
    *unint64_t v4 = 26;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unsigned int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unsigned int v12 = v4 + 2;
    }
    unint64_t v4 = sub_1792424(v10, (unint64_t)v12, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    unint64_t v4 = sub_1886844(a1 + 16, 100, 200, v4, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_17D245C(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = v2;
  int v4 = *(_DWORD *)(a1 + 40);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      unint64_t v7 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
      uint64_t v9 = *(void *)(v7 + 8);
      if ((v8 & 0x80u) == 0) {
        uint64_t v9 = v8;
      }
      uint64_t v3 = v2 + v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_6;
        }
        goto LABEL_5;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = sub_1792638(*(void *)(a1 + 56));
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v4 & 4) != 0) {
LABEL_5:
    }
      v3 += ((9 * (__clz(*(_DWORD *)(a1 + 64) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_6:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v3 += v12;
  }
  *(_DWORD *)(a1 + 44) = v3;
  return v3;
}

void sub_17D2578(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      int v6 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      unint64_t v7 = (std::string **)(a1 + 48);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          *(_DWORD *)(a1 + 40) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v10 = *(void **)(a1 + 56);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_18302C8((uint64_t)v12);
      *(void *)(a1 + 56) = v10;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v13 = &off_2549800;
    }
    sub_1792730((uint64_t)v10, (uint64_t)v13);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17D2694(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 40) & 2) == 0) {
      return 1;
    }
    uint64_t v3 = *(void *)(a1 + 56);
    if ((*(unsigned char *)(v3 + 16) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_15B1FC0(*(void *)(v3 + 24));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_17D26E4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AddressObjectGeocodingParameters");
}

uint64_t sub_17D26F4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24DD218;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 40) = a2;
  *(_DWORD *)(a1 + 64) = 0;
  return a1;
}

void sub_17D2764(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17D2794(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24DD218;
  *(_DWORD *)(a1 + 24) = 0;
  int v6 = (uint64_t *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  int v7 = *(_DWORD *)(a2 + 48);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 56);
    uint64_t v9 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_1878644(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v10 = *(_DWORD *)(a1 + 48) + v7;
    *(_DWORD *)(a1 + 48) = v10;
    uint64_t v11 = *(int **)(a1 + 56);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  *(_DWORD *)(a1 + 64) = 0;
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  return a1;
}

void sub_17D2894(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17D28E4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1876FB8(a1 + 5);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17D296C(void *a1)
{
  sub_17D28E4(a1);

  operator delete();
}

uint64_t sub_17D29A4(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_1792958(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 48) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  int v6 = (uint64_t *)(a1 + 8);
  if (v7)
  {
    return sub_188B4AC(v6);
  }
  return result;
}

char *sub_17D2A28(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v20 = a2;
  if ((sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      int v6 = v20 + 1;
      unsigned int v7 = *v20;
      if (*v20 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          int v6 = (char *)sub_188C180((uint64_t)v20, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          int v6 = v20 + 2;
        }
      }
      int v20 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          int v20 = v12 + 1;
          BOOL v14 = *(_DWORD **)(a1 + 56);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 48), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 48) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_1830344(*(void *)(a1 + 40));
            uint64_t v16 = sub_188CDC8(a1 + 40, v17);
            uint64_t v13 = (unsigned __int8 *)v20;
          }
          uint64_t v12 = sub_179CFFC(a3, v16, v13);
          int v20 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_27;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (v7 - 800 > 0x31F)
      {
        if (*v5)
        {
          uint64_t v18 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          uint64_t v18 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          int v6 = v20;
        }
        uint64_t v11 = sub_1885AC0(v7, v18, v6, a3);
      }
      else
      {
        uint64_t v11 = sub_18859DC((uint64_t **)(a1 + 16), v7, v6, (uint64_t)&off_254AE28, (uint64_t *)(a1 + 8), a3);
      }
      int v20 = (char *)v11;
      if (!v11) {
        return 0;
      }
LABEL_27:
      if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
        return v20;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v20;
    }
    return 0;
  }
  return v20;
}

char *sub_17D2C04(uint64_t a1, char *a2, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 48);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 40);
      a2[1] = v9;
      if (v9 > 0x7F) {
        int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        int v10 = a2 + 2;
      }
      a2 = sub_1792B74(v8, v10, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 100, 200, a2, a3);
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return a2;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    BOOL v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    BOOL v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)a2 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(a2, v14, (int)v15);
    a2 += v16;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, a2);
}

uint64_t sub_17D2D6C(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 48);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_1792CB8(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v4 += v13;
  }
  *(_DWORD *)(a1 + 64) = v4;
  return v4;
}

uint64_t sub_17D2E20(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_17D2E28@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AddressObjectGeocodingResult");
}

void *sub_17D2E38(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = off_24DD298;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = a2;
  a1[7] = 0;
  a1[8] = 0;
  a1[9] = a2;
  a1[10] = 0;
  a1[11] = 0;
  *(void *)((char *)a1 + 93) = 0;
  return a1;
}

void sub_17D2EB0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17D2EE0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24DD298;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  int v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    uint64_t v9 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_10E4FFC(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v12 = *(_DWORD *)(a2 + 80);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 88);
    BOOL v14 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_12C5340((uint64_t *)(a1 + 72), v14, (uint64_t *)(v13 + 8), v12, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v15 = *(_DWORD *)(a1 + 80) + v12;
    *(_DWORD *)(a1 + 80) = v15;
    uint64_t v16 = *(int **)(a1 + 88);
    if (*v16 < v15) {
      *uint64_t v16 = v15;
    }
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17) {
    sub_188B4F8(v4, (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  int v18 = *(_DWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
  *(_DWORD *)(a1 + 96) = v18;
  return a1;
}

void sub_17D3068(_Unwind_Exception *a1)
{
  sub_11DB7D4(v4);
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17D30CC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C5234(a1 + 9);
  sub_11DB7D4(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17D3160(void *a1)
{
  sub_17D30CC(a1);

  operator delete();
}

uint64_t sub_17D3198(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = (uint64_t)sub_15B09D0(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    int v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_15B043C(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  if ((*(unsigned char *)(a1 + 40) & 3) != 0)
  {
    *(unsigned char *)(a1 + 100) = 0;
    *(_DWORD *)(a1 + 96) = 0;
  }
  char v10 = *(unsigned char *)(a1 + 8);
  uint64_t v9 = a1 + 8;
  *(_DWORD *)(v9 + 32) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

char *sub_17D325C(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v38 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v38, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v38 + 1;
    unsigned int v9 = *v38;
    if (*v38 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v38, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v38 + 2;
      }
    }
    int v38 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_41;
        }
        int v12 = v8 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          int v38 = v12 + 1;
          BOOL v14 = *(_DWORD **)(a1 + 64);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 56), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 56) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_15C1918(*(void *)(a1 + 48));
            uint64_t v16 = sub_188CDC8(a1 + 48, v17);
            uint64_t v13 = (unsigned __int8 *)v38;
          }
          int v12 = sub_1198F14(a3, v16, v13);
          int v38 = v12;
          if (!v12) {
            goto LABEL_64;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_51;
          }
        }
      case 2u:
        if (v9 != 16) {
          goto LABEL_41;
        }
        int v18 = v8 + 1;
        unint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v21 = v19 + (v20 << 7);
        unint64_t v19 = (v21 - 128);
        if (v20 < 0)
        {
          int v38 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
          if (!v38) {
            goto LABEL_64;
          }
          unint64_t v19 = v34;
        }
        else
        {
          int v18 = v8 + 2;
LABEL_23:
          int v38 = v18;
        }
        if (sub_16BAF04(v19))
        {
          *(_DWORD *)(a1 + 40) |= 1u;
          *(_DWORD *)(a1 + 96) = v19;
        }
        else
        {
          if (*v7) {
            uint64_t v37 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(2, v19, v37);
        }
        goto LABEL_51;
      case 3u:
        if (v9 != 24) {
          goto LABEL_41;
        }
        v5 |= 2u;
        int v22 = v8 + 1;
        uint64_t v23 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v24 = *v22;
        uint64_t v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v35 = (char *)sub_188C138((uint64_t)v8, v23);
          int v38 = v35;
          *(unsigned char *)(a1 + 100) = v36 != 0;
          if (!v35) {
            goto LABEL_64;
          }
        }
        else
        {
          int v22 = v8 + 2;
LABEL_30:
          int v38 = v22;
          *(unsigned char *)(a1 + 100) = v23 != 0;
        }
        goto LABEL_51;
      case 4u:
        if (v9 != 34) {
          goto LABEL_41;
        }
        uint64_t v25 = v8 - 1;
        while (1)
        {
          int v26 = (unsigned __int8 *)(v25 + 1);
          int v38 = v25 + 1;
          uint64_t v27 = *(_DWORD **)(a1 + 88);
          if (v27 && (uint64_t v28 = *(int *)(a1 + 80), (int)v28 < *v27))
          {
            *(_DWORD *)(a1 + 80) = v28 + 1;
            uint64_t v29 = *(void *)&v27[2 * v28 + 2];
          }
          else
          {
            uint64_t v30 = sub_15C1CB4(*(void *)(a1 + 72));
            uint64_t v29 = sub_188CDC8(a1 + 72, v30);
            int v26 = (unsigned __int8 *)v38;
          }
          uint64_t v25 = sub_11B3E48(a3, v29, v26);
          int v38 = v25;
          if (!v25) {
            goto LABEL_64;
          }
          if (*(void *)a3 <= (unint64_t)v25 || *v25 != 34) {
            goto LABEL_51;
          }
        }
      default:
LABEL_41:
        if (v9) {
          BOOL v31 = (v9 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if (v9 - 800 > 0x31F)
          {
            if (*v7)
            {
              int v33 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              int v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = v38;
            }
            uint64_t v32 = sub_1885AC0(v9, v33, v8, a3);
          }
          else
          {
            uint64_t v32 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_254AE70, (uint64_t *)(a1 + 8), a3);
          }
          int v38 = (char *)v32;
          if (!v32) {
            goto LABEL_64;
          }
LABEL_51:
          if (sub_11947B8((uint64_t)a3, &v38, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_64:
        }
          int v38 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return v38;
    }
  }
}

char *sub_17D3638(uint64_t a1, char *a2, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_15B0C0C(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 40);
  if (v11)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v12 = *(int *)(a1 + 96);
    *a2 = 16;
    a2[1] = v12;
    if (v12 > 0x7F)
    {
      a2[1] = v12 | 0x80;
      unint64_t v13 = v12 >> 7;
      a2[2] = v12 >> 7;
      a2 += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v14 = v13 >> 14;
          v13 >>= 7;
          *a2++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  if ((v11 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    char v15 = *(unsigned char *)(a1 + 100);
    *a2 = 24;
    a2[1] = v15;
    a2 += 2;
  }
  int v16 = *(_DWORD *)(a1 + 80);
  if (v16)
  {
    for (int j = 0; j != v16; ++j)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *a2 = 34;
      unsigned int v19 = *(_DWORD *)(v18 + 44);
      a2[1] = v19;
      if (v19 > 0x7F) {
        int v20 = sub_188A9CC(v19, a2 + 1);
      }
      else {
        int v20 = a2 + 2;
      }
      a2 = sub_15B43E4(v18, v20, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 100, 200, a2, a3);
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return a2;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    int v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    int v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if (*(void *)a3 - (void)a2 >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(a2, v24, (int)v25);
    a2 += v26;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v24, v25, a2);
}

uint64_t sub_17D38DC(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_15B0D90(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    unint64_t v13 = (uint64_t *)(v12 + 8);
  }
  else {
    unint64_t v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_15B4924(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  int v17 = *(_DWORD *)(a1 + 40);
  if ((v17 & 3) != 0)
  {
    if (v17)
    {
      int v18 = *(_DWORD *)(a1 + 96);
      uint64_t v19 = ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v18 >= 0) {
        uint64_t v20 = v19;
      }
      else {
        uint64_t v20 = 11;
      }
      v11 += v20;
    }
    if ((v17 & 2) != 0) {
      v11 += 2;
    }
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if (v21)
  {
    unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v23 + 31) < 0) {
      uint64_t v24 = *(void *)(v23 + 16);
    }
    else {
      uint64_t v24 = *(unsigned __int8 *)(v23 + 31);
    }
    v11 += v24;
  }
  *(_DWORD *)(a1 + 44) = v11;
  return v11;
}

void sub_17D3A2C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_10E4FFC((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_12C5340((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    unint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      *unint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 40);
  if ((v14 & 3) != 0)
  {
    if (v14) {
      *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
    }
    if ((v14 & 2) != 0) {
      *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
    }
    *(_DWORD *)(a1 + 40) |= v14;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_17D3B9C(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_15B0F18(*(void *)(*(void *)(a1 + 64) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v7 = *(unsigned int *)(a1 + 80);
  do
  {
    BOOL v5 = (int)v7 < 1;
    if ((int)v7 < 1) {
      break;
    }
    uint64_t v8 = v7 - 1;
    char v9 = sub_15B06D8(*(void *)(*(void *)(a1 + 88) + 8 * v7));
    uint64_t v7 = v8;
  }
  while ((v9 & 1) != 0);
  return v5;
}

void *sub_17D3C28@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ReverseGeocodingParameters");
}

uint64_t sub_17D3C38(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24DD318;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_17D3C9C(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17D3CCC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(void *)a1 = off_24DD318;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v4, a2 + 16);
  return a1;
}

void sub_17D3D60(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17D3D9C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17D3E18(void *a1)
{
  sub_17D3D9C(a1);

  operator delete();
}

unsigned char *sub_17D3E50(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

char *sub_17D3EA0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    int v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      uint64_t v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v15 + 2;
        }
      }
      uint64_t v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (v8 - 800 > 0x31F)
      {
        if (*v5)
        {
          unint64_t v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          unint64_t v13 = (std::string *)sub_188DBD8(v5);
          uint64_t v7 = v15;
        }
        int v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        int v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_254AED8, v5, a3);
      }
      uint64_t v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_17D3FE8(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 100, 200, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_17D40B4(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

uint64_t sub_17D410C(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_17D4114@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ReverseGeocodingResult");
}

void *sub_17D4124(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = off_24DD398;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = 0;
  a1[7] = a2;
  a1[8] = 0;
  *(void *)((char *)a1 + 69) = 0;
  return a1;
}

void sub_17D4194(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17D41C4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24DD398;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  *(void *)(a1 + 52) = 0;
  int v6 = *(_DWORD *)(a2 + 48);
  if (v6)
  {
    sub_188CA54((unsigned int *)(a1 + 48), v6);
    uint64_t v7 = *(void **)(a1 + 56);
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
    memcpy(v7, *(const void **)(a2 + 56), 8 * *(int *)(a2 + 48));
  }
  uint64_t v8 = *(void *)(a2 + 8);
  if (v8) {
    sub_188B4F8(v4, (v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  if (*(unsigned char *)(a2 + 40)) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  int v9 = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(_DWORD *)(a1 + 72) = v9;
  return a1;
}

void sub_17D42E8()
{
}

uint64_t sub_17D4354(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_254AF08 && *(void *)(a1 + 64))
  {
    sub_15B0994();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1889DA8(a1 + 48);
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17D441C(uint64_t a1)
{
  sub_17D4354(a1);

  operator delete();
}

unsigned char *sub_17D4454(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  *(_DWORD *)(a1 + 48) = 0;
  int v3 = *(_DWORD *)(a1 + 40);
  if (v3) {
    uint64_t result = sub_15B09D0(*(void *)(a1 + 64));
  }
  if ((v3 & 6) != 0)
  {
    *(unsigned char *)(a1 + 76) = 0;
    *(_DWORD *)(a1 + 72) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

char *sub_17D44CC(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v33 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v8 = v33 + 1;
      unsigned int v9 = *v33;
      if (*v33 < 0)
      {
        unsigned int v10 = v9 + (*v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*v8 < 0)
        {
          uint64_t v8 = (char *)sub_188C180((uint64_t)v33, v10 - 128);
          unsigned int v9 = v11;
        }
        else
        {
          uint64_t v8 = v33 + 2;
        }
      }
      int v33 = v8;
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 8) {
            goto LABEL_45;
          }
          v5 |= 2u;
          unint64_t v13 = v8 + 1;
          LODWORD(v12) = *v8;
          if ((v12 & 0x80) == 0) {
            goto LABEL_13;
          }
          int v14 = *v13;
          uint64_t v12 = v12 + (v14 << 7) - 128;
          if ((v14 & 0x80000000) == 0)
          {
            unint64_t v13 = v8 + 2;
LABEL_13:
            int v33 = v13;
            *(_DWORD *)(a1 + 72) = v12;
            goto LABEL_55;
          }
          uint64_t v27 = (char *)sub_188C138((uint64_t)v8, v12);
          int v33 = v27;
          *(_DWORD *)(a1 + 72) = v28;
          if (!v27) {
            goto LABEL_60;
          }
          goto LABEL_55;
        case 2u:
          if (v9 == 16)
          {
            uint64_t v15 = v8 - 1;
            while (1)
            {
              int v33 = v15 + 1;
              uint64_t v16 = v15[1];
              if (v15[1] < 0)
              {
                int v17 = v16 + (v15[2] << 7);
                uint64_t v16 = (v17 - 128);
                if (v15[2] < 0)
                {
                  uint64_t v15 = (char *)sub_188C138((uint64_t)(v15 + 1), (v17 - 128));
                  uint64_t v16 = v18;
                }
                else
                {
                  v15 += 3;
                }
              }
              else
              {
                v15 += 2;
              }
              int v33 = v15;
              uint64_t v19 = *(unsigned int *)(a1 + 48);
              if (v19 == *(_DWORD *)(a1 + 52))
              {
                int v20 = v19 + 1;
                sub_188CA54((unsigned int *)(a1 + 48), v19 + 1);
                *(void *)(*(void *)(a1 + 56) + 8 * v19) = v16;
                uint64_t v15 = v33;
              }
              else
              {
                *(void *)(*(void *)(a1 + 56) + 8 * v19) = v16;
                int v20 = v19 + 1;
              }
              *(_DWORD *)(a1 + 48) = v20;
              if (!v15) {
                goto LABEL_60;
              }
              if (*(void *)a3 <= (unint64_t)v15 || *v15 != 16) {
                goto LABEL_55;
              }
            }
          }
          if (v9 == 18)
          {
            unint64_t v23 = (char *)sub_188C2EC((unsigned int *)(a1 + 48), (unsigned __int8 *)v8, (uint64_t)a3);
          }
          else
          {
LABEL_45:
            if (v9) {
              BOOL v31 = (v9 & 7) == 4;
            }
            else {
              BOOL v31 = 1;
            }
            if (v31)
            {
              if (v8)
              {
                a3[10].i32[0] = v9 - 1;
                goto LABEL_2;
              }
LABEL_60:
              int v33 = 0;
              goto LABEL_2;
            }
            if ((v9 - 800) >> 6 > 0x4A)
            {
              if (*v7)
              {
                uint64_t v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else
              {
                uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
                uint64_t v8 = v33;
              }
              unint64_t v23 = (char *)sub_1885AC0(v9, v32, v8, a3);
            }
            else
            {
              unint64_t v23 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_254AF08, (uint64_t *)(a1 + 8), a3);
            }
          }
LABEL_54:
          int v33 = v23;
          if (!v23) {
            goto LABEL_60;
          }
LABEL_55:
          if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        case 3u:
          if (v9 != 26) {
            goto LABEL_45;
          }
          *(_DWORD *)(a1 + 40) |= 1u;
          uint64_t v21 = *(void *)(a1 + 64);
          if (!v21)
          {
            int v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              int v22 = (void *)*v22;
            }
            uint64_t v21 = sub_15C1918((uint64_t)v22);
            *(void *)(a1 + 64) = v21;
            uint64_t v8 = v33;
          }
          unint64_t v23 = sub_1198F14(a3, v21, (unsigned __int8 *)v8);
          goto LABEL_54;
        case 4u:
          if (v9 != 32) {
            goto LABEL_45;
          }
          v5 |= 4u;
          uint64_t v24 = v8 + 1;
          uint64_t v25 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_38;
          }
          int v26 = *v24;
          uint64_t v25 = v25 + (v26 << 7) - 128;
          if (v26 < 0)
          {
            uint64_t v29 = (char *)sub_188C138((uint64_t)v8, v25);
            int v33 = v29;
            *(unsigned char *)(a1 + 76) = v30 != 0;
            if (!v29) {
              goto LABEL_60;
            }
          }
          else
          {
            uint64_t v24 = v8 + 2;
LABEL_38:
            int v33 = v24;
            *(unsigned char *)(a1 + 76) = v25 != 0;
          }
          goto LABEL_55;
        default:
          goto LABEL_45;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v33;
}

char *sub_17D486C(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(int *)(a1 + 72);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v10 = *(unsigned int *)(a1 + 48);
  if ((int)v10 >= 1)
  {
    for (uint64_t i = 0; i != v10; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8 * i);
      *uint64_t v4 = 16;
      v4[1] = v12;
      if (v12 > 0x7F)
      {
        v4[1] = v12 | 0x80;
        unint64_t v13 = v12 >> 7;
        v4[2] = v12 >> 7;
        v4 += 3;
        if (v12 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v14 = v13 >> 14;
            v13 >>= 7;
            *v4++ = v13;
          }
          while (v14);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v15 = *(void *)(a1 + 64);
    *uint64_t v4 = 26;
    unsigned int v16 = *(_DWORD *)(v15 + 44);
    v4[1] = v16;
    if (v16 > 0x7F) {
      int v17 = sub_188A9CC(v16, v4 + 1);
    }
    else {
      int v17 = v4 + 2;
    }
    uint64_t v4 = sub_15B0C0C(v15, v17, a3);
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v18 = *(unsigned char *)(a1 + 76);
    *uint64_t v4 = 32;
    v4[1] = v18;
    v4 += 2;
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 100, 700, v4, a3);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_17D4B08(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = sub_188D5A8((unsigned int *)(a1 + 48)) + v2 + *(unsigned int *)(a1 + 48);
  int v4 = *(_DWORD *)(a1 + 40);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      uint64_t v5 = sub_15B0D90(*(void *)(a1 + 64));
      v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a1 + 72);
      if (v6 < 0) {
        uint64_t v7 = 11;
      }
      else {
        uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v3 += v7;
    }
    if ((v4 & 4) != 0) {
      v3 += 2;
    }
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 44) = v3;
  return v3;
}

void sub_17D4C00(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    uint64_t v5 = (_DWORD *)(a1 + 48);
    uint64_t v6 = *(int *)(a1 + 48);
    sub_188CA54((unsigned int *)(a1 + 48), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 56);
    *v5 += *(_DWORD *)(a2 + 48);
    memcpy((void *)(v7 + 8 * v6), *(const void **)(a2 + 56), 8 * *(int *)(a2 + 48));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v10 = *(void *)(a1 + 64);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          unint64_t v12 = (void *)*v12;
        }
        uint64_t v10 = sub_15C1918((uint64_t)v12);
        *(void *)(a1 + 64) = v10;
      }
      if (*(void *)(a2 + 64)) {
        unint64_t v13 = *(uint64_t (****)())(a2 + 64);
      }
      else {
        unint64_t v13 = &off_253F1A0;
      }
      sub_15B0E24(v10, (uint64_t)v13);
      if ((v8 & 2) == 0)
      {
LABEL_6:
        if ((v8 & 4) == 0)
        {
LABEL_8:
          *(_DWORD *)(a1 + 40) |= v8;
          goto LABEL_9;
        }
LABEL_7:
        *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
        goto LABEL_8;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_6;
    }
    *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
    if ((v8 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17D4D38(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 40) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_15B0F18(*(void *)(a1 + 64));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_17D4D7C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceLookupParameters");
}

uint64_t sub_17D4D8C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24DD418;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 40) = a2;
  *(_DWORD *)(a1 + 64) = 0;
  return a1;
}

void sub_17D4DFC(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17D4E2C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24DD418;
  *(_DWORD *)(a1 + 24) = 0;
  uint64_t v6 = (uint64_t *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  int v7 = *(_DWORD *)(a2 + 48);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 56);
    uint64_t v9 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_12C4B74(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v10 = *(_DWORD *)(a1 + 48) + v7;
    *(_DWORD *)(a1 + 48) = v10;
    uint64_t v11 = *(int **)(a1 + 56);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  *(_DWORD *)(a1 + 64) = 0;
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  return a1;
}

void sub_17D4F2C(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17D4F7C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C45E8(a1 + 5);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17D5004(void *a1)
{
  sub_17D4F7C(a1);

  operator delete();
}

unsigned char *sub_17D503C(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_16CD894(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 48) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = (uint64_t *)(a1 + 8);
  if (v7)
  {
    return (unsigned char *)sub_188B4AC(v6);
  }
  return result;
}

char *sub_17D50C0(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v20 = a2;
  if ((sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v6 = v20 + 1;
      unsigned int v7 = *v20;
      if (*v20 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          uint64_t v6 = (char *)sub_188C180((uint64_t)v20, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          uint64_t v6 = v20 + 2;
        }
      }
      int v20 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          unint64_t v13 = (unsigned __int8 *)(v12 + 1);
          int v20 = v12 + 1;
          unint64_t v14 = *(_DWORD **)(a1 + 56);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 48), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 48) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_185089C(*(void *)(a1 + 40));
            uint64_t v16 = sub_188CDC8(a1 + 40, v17);
            unint64_t v13 = (unsigned __int8 *)v20;
          }
          uint64_t v12 = sub_12688D0(a3, v16, v13);
          int v20 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_27;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if ((v7 - 800) >> 6 > 0x4A)
      {
        if (*v5)
        {
          char v18 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          char v18 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          uint64_t v6 = v20;
        }
        uint64_t v11 = sub_1885AC0(v7, v18, v6, a3);
      }
      else
      {
        uint64_t v11 = sub_18859DC((uint64_t **)(a1 + 16), v7, v6, (uint64_t)&off_254AF58, (uint64_t *)(a1 + 8), a3);
      }
      int v20 = (char *)v11;
      if (!v11) {
        return 0;
      }
LABEL_27:
      if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
        return v20;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v20;
    }
    return 0;
  }
  return v20;
}

char *sub_17D52A0(uint64_t a1, char *a2, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 48);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      a2[1] = v9;
      if (v9 > 0x7F) {
        int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        int v10 = a2 + 2;
      }
      a2 = sub_184B3AC(v8, v10, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 100, 700, a2, a3);
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return a2;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)a2 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(a2, v14, (int)v15);
    a2 += v16;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, a2);
}

uint64_t sub_17D5408(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 48);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_184B568(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v4 += v13;
  }
  *(_DWORD *)(a1 + 64) = v4;
  return v4;
}

BOOL sub_17D54BC(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 48);
  do
  {
    BOOL v3 = (int)v2 < 1;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_16CE508(*(void *)(*(void *)(a1 + 56) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3;
}

void *sub_17D5524@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.RefreshIdLookUpParameters");
}

uint64_t sub_17D5534(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DD498;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_17D55A0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17D55D0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17D5644(void *a1)
{
  sub_17D55D0(a1);

  operator delete();
}

uint64_t *sub_17D567C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_17D568C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v12 = a2;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    char v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        char v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        char v5 = v12 + 2;
      }
    }
    unint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      char v5 = v12;
    }
    unint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_17D578C(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_17D5824(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_17D5858(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_17D5874()
{
  return 1;
}

void *sub_17D587C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceLookupResult");
}

uint64_t sub_17D588C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24DD518;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 40) = a2;
  *(_DWORD *)(a1 + 64) = 0;
  return a1;
}

void sub_17D58FC(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17D592C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24DD518;
  *(_DWORD *)(a1 + 24) = 0;
  unint64_t v6 = (uint64_t *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  int v7 = *(_DWORD *)(a2 + 48);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 56);
    uint64_t v9 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_124EA70(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v10 = *(_DWORD *)(a1 + 48) + v7;
    *(_DWORD *)(a1 + 48) = v10;
    uint64_t v11 = *(int **)(a1 + 56);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  *(_DWORD *)(a1 + 64) = 0;
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  return a1;
}

void sub_17D5A2C(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17D5A7C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_124DECC(a1 + 5);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17D5B04(void *a1)
{
  sub_17D5A7C(a1);

  operator delete();
}

uint64_t sub_17D5B3C(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  if ((int)v3 >= 1)
  {
    unint64_t v4 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_173FA7C(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 48) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  unint64_t v6 = (uint64_t *)(a1 + 8);
  if (v7)
  {
    return sub_188B4AC(v6);
  }
  return result;
}

char *sub_17D5BC0(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v20 = a2;
  if ((sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      unint64_t v6 = v20 + 1;
      unsigned int v7 = *v20;
      if (*v20 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          unint64_t v6 = (char *)sub_188C180((uint64_t)v20, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          unint64_t v6 = v20 + 2;
        }
      }
      int v20 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          int v20 = v12 + 1;
          unint64_t v14 = *(_DWORD **)(a1 + 56);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 48), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 48) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_178B458(*(void *)(a1 + 40));
            uint64_t v16 = sub_188CDC8(a1 + 40, v17);
            uint64_t v13 = (unsigned __int8 *)v20;
          }
          uint64_t v12 = (char *)sub_123B124(a3, v16, v13);
          int v20 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_27;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if ((v7 - 800) >> 6 > 0x4A)
      {
        if (*v5)
        {
          char v18 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          char v18 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          unint64_t v6 = v20;
        }
        uint64_t v11 = sub_1885AC0(v7, v18, v6, a3);
      }
      else
      {
        uint64_t v11 = sub_18859DC((uint64_t **)(a1 + 16), v7, v6, (uint64_t)&off_254AFB8, (uint64_t *)(a1 + 8), a3);
      }
      int v20 = (char *)v11;
      if (!v11) {
        return 0;
      }
LABEL_27:
      if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
        return v20;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v20;
    }
    return 0;
  }
  return v20;
}

char *sub_17D5DA0(uint64_t a1, char *a2, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 48);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      a2[1] = v9;
      if (v9 > 0x7F) {
        int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        int v10 = a2 + 2;
      }
      a2 = sub_1740568(v8, v10, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 100, 700, a2, a3);
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return a2;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)a2) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(a2, v14, (int)v15);
    a2 += v16;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, a2);
}

uint64_t sub_17D5F08(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 48);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_1740D5C(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v4 += v13;
  }
  *(_DWORD *)(a1 + 64) = v4;
  return v4;
}

void sub_17D5FBC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_124EA70((uint64_t *)(a1 + 40), v6, v5, v4, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v7 = *(_DWORD *)(a1 + 48) + v4;
    *(_DWORD *)(a1 + 48) = v7;
    uint64_t v8 = *(int **)(a1 + 56);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_17D6098(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 48);
  do
  {
    BOOL v3 = (int)v2 < 1;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_174147C(*(void *)(*(void *)(a1 + 56) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3;
}

void *sub_17D6100@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PoiAtAddressLookupParameters");
}

uint64_t sub_17D6110(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DD598;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_17D617C(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17D61AC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17D6220(void *a1)
{
  sub_17D61AC(a1);

  operator delete();
}

uint64_t *sub_17D6258(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_17D6268(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v12 = a2;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    char v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        char v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        char v5 = v12 + 2;
      }
    }
    unint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      char v5 = v12;
    }
    unint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_17D6368(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_17D6400(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_17D6434(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_17D6450()
{
  return 1;
}

void *sub_17D6458@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PoiAtAddressLookupResult");
}

void *sub_17D6468(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = off_24DD618;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = a2;
  a1[7] = 0;
  a1[8] = 0;
  *(void *)((char *)a1 + 69) = 0;
  return a1;
}

void sub_17D64D8(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17D6508(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24DD618;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  unint64_t v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    uint64_t v9 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C4B74(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  int v13 = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(_DWORD *)(a1 + 72) = v13;
  return a1;
}

void sub_17D6628(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17D6678(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C45E8(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17D6700(void *a1)
{
  sub_17D6678(a1);

  operator delete();
}

unsigned char *sub_17D6738(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    unint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_16CD894(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  if ((*(unsigned char *)(a1 + 40) & 3) != 0)
  {
    *(unsigned char *)(a1 + 76) = 0;
    *(_DWORD *)(a1 + 72) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(_DWORD *)(v6 + 32) = 0;
  if (v7)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_17D67D4(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v33 + 1;
    unsigned int v9 = *v33;
    if (*v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v33 + 2;
      }
    }
    int v33 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 4)
    {
      if (v9 != 32) {
        goto LABEL_14;
      }
      v5 |= 2u;
      uint64_t v16 = v8 + 1;
      uint64_t v17 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_24;
      }
      int v18 = *v16;
      uint64_t v17 = v17 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        uint64_t v16 = v8 + 2;
LABEL_24:
        int v33 = v16;
        *(unsigned char *)(a1 + 76) = v17 != 0;
        goto LABEL_43;
      }
      uint64_t v29 = (char *)sub_188C138((uint64_t)v8, v17);
      int v33 = v29;
      *(unsigned char *)(a1 + 76) = v30 != 0;
      if (!v29) {
        goto LABEL_52;
      }
      goto LABEL_43;
    }
    if (v12 == 2) {
      break;
    }
    if (v12 != 1 || v9 != 8) {
      goto LABEL_14;
    }
    v5 |= 1u;
    int v26 = v8 + 1;
    LODWORD(v25) = *v8;
    if ((v25 & 0x80) == 0) {
      goto LABEL_38;
    }
    int v27 = *v26;
    uint64_t v25 = v25 + (v27 << 7) - 128;
    if ((v27 & 0x80000000) == 0)
    {
      int v26 = v8 + 2;
LABEL_38:
      int v33 = v26;
      *(_DWORD *)(a1 + 72) = v25;
      goto LABEL_43;
    }
    BOOL v31 = (char *)sub_188C138((uint64_t)v8, v25);
    int v33 = v31;
    *(_DWORD *)(a1 + 72) = v32;
    if (!v31) {
      goto LABEL_52;
    }
LABEL_43:
    if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    uint64_t v19 = v8 - 1;
    while (1)
    {
      int v20 = (unsigned __int8 *)(v19 + 1);
      int v33 = v19 + 1;
      unint64_t v21 = *(_DWORD **)(a1 + 64);
      if (v21 && (uint64_t v22 = *(int *)(a1 + 56), (int)v22 < *v21))
      {
        *(_DWORD *)(a1 + 56) = v22 + 1;
        uint64_t v23 = *(void *)&v21[2 * v22 + 2];
      }
      else
      {
        uint64_t v24 = sub_185089C(*(void *)(a1 + 48));
        uint64_t v23 = sub_188CDC8(a1 + 48, v24);
        int v20 = (unsigned __int8 *)v33;
      }
      uint64_t v19 = sub_12688D0(a3, v23, v20);
      int v33 = v19;
      if (!v19) {
        goto LABEL_52;
      }
      if (*(void *)a3 <= (unint64_t)v19 || *v19 != 18) {
        goto LABEL_43;
      }
    }
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if ((v9 - 800) >> 6 > 0x4A)
    {
      if (*v7)
      {
        int v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        int v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v8 = v33;
      }
      uint64_t v15 = sub_1885AC0(v9, v28, v8, a3);
    }
    else
    {
      uint64_t v15 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_254B018, (uint64_t *)(a1 + 8), a3);
    }
    int v33 = (char *)v15;
    if (!v15) {
      goto LABEL_52;
    }
    goto LABEL_43;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_52:
  int v33 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v33;
}

char *sub_17D6AA8(uint64_t a1, char *a2, _DWORD *a3)
{
  unint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(int *)(a1 + 72);
    *unint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 56);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *unint64_t v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 44);
      v4[1] = v13;
      if (v13 > 0x7F) {
        BOOL v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        BOOL v14 = v4 + 2;
      }
      unint64_t v4 = sub_184B3AC(v12, v14, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v15 = *(unsigned char *)(a1 + 76);
    *unint64_t v4 = 32;
    v4[1] = v15;
    v4 += 2;
  }
  if (*(_WORD *)(a1 + 26)) {
    unint64_t v4 = sub_1886844(a1 + 16, 100, 700, v4, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_17D6CC8(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_184B568(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  if ((v10 & 3) != 0)
  {
    if (v10)
    {
      int v11 = *(_DWORD *)(a1 + 72);
      if (v11 < 0) {
        uint64_t v12 = 11;
      }
      else {
        uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v4 += v12;
    }
    if ((v10 & 2) != 0) {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v4 += v16;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_17D6DC8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C4B74((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((v9 & 3) != 0)
  {
    if (v9) {
      *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
    }
    if ((v9 & 2) != 0) {
      *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
    }
    *(_DWORD *)(a1 + 40) |= v9;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_17D6ED4(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  do
  {
    BOOL v3 = (int)v2 < 1;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_16CE508(*(void *)(*(void *)(a1 + 64) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3;
}

void *sub_17D6F3C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.MapsIdentifierPlaceLookupParameters");
}

uint64_t sub_17D6F4C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DD698;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_17D6FB8(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17D6FE8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17D705C(void *a1)
{
  sub_17D6FE8(a1);

  operator delete();
}

uint64_t *sub_17D7094(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_17D70A4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v12 = a2;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    char v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        char v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        char v5 = v12 + 2;
      }
    }
    uint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      char v5 = v12;
    }
    uint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_17D71A4(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_17D723C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_17D7270(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_17D728C()
{
  return 1;
}

void *sub_17D7294@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.MapsIdentifierPlaceLookupResult");
}

uint64_t sub_17D72A4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24DD718;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = a1 + 24;
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(v5, v8, (const std::string **)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  int v12 = *(_DWORD *)(a2 + 16);
  if (v12)
  {
    uint64_t v13 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v13 = (uint64_t *)*v13;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v13);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 56) = &qword_2550250;
  if ((v12 & 2) != 0)
  {
    BOOL v14 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      BOOL v14 = (uint64_t *)*v14;
    }
    sub_1881DF4((std::string **)(a1 + 56), (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL), v14);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  if ((v12 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  if ((v12 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  if ((v12 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 80) = 0;
  long long v15 = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 101) = *(void *)(a2 + 101);
  *(_OWORD *)(a1 + 88) = v15;
  return a1;
}

void sub_17D74B0()
{
}

void *sub_17D7538(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_17D75C4((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DE8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_17D75C4(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 48);
  uint64_t v2 = (void ***)(a1 + 48);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  uint64_t result = (void ***)(a1 + 56);
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_254B080)
  {
    if (*(void *)(a1 + 64))
    {
      sub_15B0994();
      operator delete();
    }
    if (*(void *)(a1 + 72))
    {
      sub_15B6D48();
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 80);
    if (result)
    {
      sub_184AFBC((uint64_t)result);
      operator delete();
    }
  }
  return result;
}

void sub_17D769C(void *a1)
{
  sub_17D7538(a1);

  operator delete();
}

uint64_t sub_17D76D4(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if (v3)
  {
    unint64_t v6 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_20;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_20;
      }
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_24:
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 64));
    if ((v3 & 8) == 0)
    {
LABEL_6:
      if ((v3 & 0x10) == 0) {
        goto LABEL_8;
      }
      goto LABEL_7;
    }
    goto LABEL_25;
  }
  if ((v3 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_20:
  unint64_t v7 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v7 + 23) < 0)
  {
    **(unsigned char **)unint64_t v7 = 0;
    *(void *)(v7 + 8) = 0;
    if ((v3 & 4) != 0) {
      goto LABEL_24;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    if ((v3 & 4) != 0) {
      goto LABEL_24;
    }
  }
LABEL_5:
  if ((v3 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_25:
  uint64_t result = sub_15B6D84(*(void *)(a1 + 72));
  if ((v3 & 0x10) != 0) {
LABEL_7:
  }
    uint64_t result = (uint64_t)sub_16CD894(*(void *)(a1 + 80));
LABEL_8:
  if ((v3 & 0xE0) != 0)
  {
    *(void *)(a1 + 88) = 0;
    *(void *)(a1 + 96) = 0;
  }
  if ((v3 & 0x300) != 0)
  {
    *(unsigned char *)(a1 + 108) = 0;
    *(_DWORD *)(a1 + 104) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_17D77E8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v60 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v60, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  uint64_t v8 = (uint64_t **)(a1 + 24);
  while (2)
  {
    int v9 = (unsigned __int8 *)(*(void *)v60 + 1);
    unsigned int v10 = **(unsigned char **)v60;
    if ((char)**(unsigned char **)v60 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        int v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v60, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        int v9 = (unsigned __int8 *)(*(void *)v60 + 2);
      }
    }
    *(void *)uint64_t v60 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 8) {
          goto LABEL_77;
        }
        v5 |= 0x40u;
        BOOL v14 = (char *)(v9 + 1);
        LODWORD(v13) = *v9;
        if ((v13 & 0x80) == 0) {
          goto LABEL_13;
        }
        int v15 = *v14;
        uint64_t v13 = v13 + (v15 << 7) - 128;
        if ((v15 & 0x80000000) == 0)
        {
          BOOL v14 = (char *)(v9 + 2);
LABEL_13:
          *(void *)uint64_t v60 = v14;
          *(_DWORD *)(a1 + 96) = v13;
          goto LABEL_85;
        }
        uint64_t v50 = sub_188C138((uint64_t)v9, v13);
        *(void *)uint64_t v60 = v50;
        *(_DWORD *)(a1 + 96) = v51;
        if (v50) {
          goto LABEL_85;
        }
        goto LABEL_109;
      case 2u:
        if (v10 != 16) {
          goto LABEL_77;
        }
        v5 |= 0x20u;
        uint64_t v16 = (char *)(v9 + 1);
        uint64_t v17 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v18 = *v16;
        uint64_t v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v52 = sub_188C138((uint64_t)v9, v17);
          *(void *)uint64_t v60 = v52;
          *(void *)(a1 + 88) = v53;
          if (!v52) {
            goto LABEL_109;
          }
        }
        else
        {
          uint64_t v16 = (char *)(v9 + 2);
LABEL_18:
          *(void *)uint64_t v60 = v16;
          *(void *)(a1 + 88) = v17;
        }
        goto LABEL_85;
      case 3u:
        if (v10 != 26) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v19 = *(void *)(a1 + 64);
        if (!v19)
        {
          uint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v20 = (void *)*v20;
          }
          uint64_t v19 = sub_15C1918((uint64_t)v20);
          *(void *)(a1 + 64) = v19;
          int v9 = *(unsigned __int8 **)v60;
        }
        uint64_t v21 = sub_1198F14(a3, v19, v9);
        goto LABEL_84;
      case 4u:
        if (v10 != 34) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v22 = *(void **)(a1 + 72);
        if (!v22)
        {
          uint64_t v23 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v23 = (void *)*v23;
          }
          uint64_t v22 = sub_15C1E94((uint64_t)v23);
          *(void *)(a1 + 72) = v22;
          int v9 = *(unsigned __int8 **)v60;
        }
        uint64_t v21 = sub_11EA9CC(a3, (uint64_t)v22, v9);
        goto LABEL_84;
      case 5u:
        if (v10 != 42) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v24 = *(void *)(a1 + 8);
        uint64_t v25 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
        if (v24) {
          uint64_t v25 = (uint64_t *)*v25;
        }
        int v26 = (void *)(a1 + 48);
        goto LABEL_65;
      case 6u:
        if (v10 != 50) {
          goto LABEL_77;
        }
        int v27 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          int v28 = (char *)(v27 + 1);
          *(void *)uint64_t v60 = v27 + 1;
          uint64_t v29 = *(_DWORD **)(a1 + 40);
          if (v29 && (uint64_t v30 = *(int *)(a1 + 32), (int)v30 < *v29))
          {
            *(_DWORD *)(a1 + 32) = v30 + 1;
            BOOL v31 = *(std::string **)&v29[2 * v30 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            *int v33 = v32;
            v33[1] = sub_3A6EDC;
            *int v32 = 0;
            v32[1] = 0;
            int v32[2] = 0;
            BOOL v31 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v32);
            int v28 = *(char **)v60;
          }
          int v27 = sub_188C244(v31, v28, (uint64_t)a3);
          *(void *)uint64_t v60 = v27;
          if (!v27) {
            goto LABEL_109;
          }
          if (*(void *)a3 <= (unint64_t)v27 || *v27 != 50) {
            goto LABEL_85;
          }
        }
      case 7u:
        if (v10 != 56) {
          goto LABEL_77;
        }
        unint64_t v34 = (char *)(v9 + 1);
        unint64_t v35 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_51;
        }
        int v36 = *v34;
        int v37 = v35 + (v36 << 7);
        unint64_t v35 = (v37 - 128);
        if (v36 < 0)
        {
          *(void *)uint64_t v60 = sub_188C138((uint64_t)v9, (v37 - 128));
          if (!*(void *)v60) {
            goto LABEL_109;
          }
          unint64_t v35 = v54;
        }
        else
        {
          unint64_t v34 = (char *)(v9 + 2);
LABEL_51:
          *(void *)uint64_t v60 = v34;
        }
        if (sub_16BAF04(v35))
        {
          *(_DWORD *)(a1 + 16) |= 0x80u;
          *(_DWORD *)(a1 + 100) = v35;
          goto LABEL_85;
        }
        if (*v7) {
          uint64_t v58 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v58 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v59 = 7;
        goto LABEL_103;
      case 8u:
        if (v10 != 64) {
          goto LABEL_77;
        }
        int v38 = (char *)(v9 + 1);
        unint64_t v35 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_58;
        }
        int v39 = *v38;
        int v40 = v35 + (v39 << 7);
        unint64_t v35 = (v40 - 128);
        if (v39 < 0)
        {
          *(void *)uint64_t v60 = sub_188C138((uint64_t)v9, (v40 - 128));
          if (!*(void *)v60) {
            goto LABEL_109;
          }
          unint64_t v35 = v55;
        }
        else
        {
          int v38 = (char *)(v9 + 2);
LABEL_58:
          *(void *)uint64_t v60 = v38;
        }
        if (v35 > 5)
        {
          if (*v7) {
            uint64_t v58 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v58 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v59 = 8;
LABEL_103:
          sub_188C020(v59, v35, v58);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x100u;
          *(_DWORD *)(a1 + 104) = v35;
        }
        goto LABEL_85;
      case 9u:
        if (v10 != 74) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v41 = *(void *)(a1 + 8);
        uint64_t v25 = (uint64_t *)(v41 & 0xFFFFFFFFFFFFFFFCLL);
        if (v41) {
          uint64_t v25 = (uint64_t *)*v25;
        }
        int v26 = (void *)(a1 + 56);
LABEL_65:
        uint64_t v42 = (std::string *)sub_1880F84(v26, v25);
        uint64_t v21 = (void *)sub_188C244(v42, *(char **)v60, (uint64_t)a3);
        goto LABEL_84;
      case 0xAu:
        if (v10 != 80) {
          goto LABEL_77;
        }
        v5 |= 0x200u;
        uint64_t v43 = (char *)(v9 + 1);
        uint64_t v44 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_70;
        }
        int v45 = *v43;
        uint64_t v44 = v44 + (v45 << 7) - 128;
        if (v45 < 0)
        {
          uint64_t v56 = sub_188C138((uint64_t)v9, v44);
          *(void *)uint64_t v60 = v56;
          *(unsigned char *)(a1 + 108) = v57 != 0;
          if (!v56) {
            goto LABEL_109;
          }
        }
        else
        {
          uint64_t v43 = (char *)(v9 + 2);
LABEL_70:
          *(void *)uint64_t v60 = v43;
          *(unsigned char *)(a1 + 108) = v44 != 0;
        }
        goto LABEL_85;
      case 0xBu:
        if (v10 != 90) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v46 = *(void *)(a1 + 80);
        if (!v46)
        {
          uint64_t v47 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v47 = (void *)*v47;
          }
          uint64_t v46 = sub_185089C((uint64_t)v47);
          *(void *)(a1 + 80) = v46;
          int v9 = *(unsigned __int8 **)v60;
        }
        uint64_t v21 = sub_12688D0(a3, v46, v9);
        goto LABEL_84;
      default:
LABEL_77:
        if (v10) {
          BOOL v48 = (v10 & 7) == 4;
        }
        else {
          BOOL v48 = 1;
        }
        if (!v48)
        {
          if (*v7)
          {
            uint64_t v49 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v49 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v9 = *(unsigned __int8 **)v60;
          }
          uint64_t v21 = sub_1885AC0(v10, v49, (char *)v9, a3);
LABEL_84:
          *(void *)uint64_t v60 = v21;
          if (!v21) {
            goto LABEL_109;
          }
LABEL_85:
          if (sub_11947B8((uint64_t)a3, (char **)v60, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_109:
        }
          *(void *)uint64_t v60 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v60;
    }
  }
}

char *sub_17D7E24(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 96);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 88);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v20 = *(void *)(a1 + 64);
    *uint64_t v4 = 26;
    unsigned int v21 = *(_DWORD *)(v20 + 44);
    v4[1] = v21;
    if (v21 > 0x7F) {
      uint64_t v22 = sub_188A9CC(v21, v4 + 1);
    }
    else {
      uint64_t v22 = v4 + 2;
    }
    uint64_t v4 = sub_15B0C0C(v20, v22, a3);
    if ((v6 & 8) == 0)
    {
LABEL_17:
      if ((v6 & 1) == 0) {
        goto LABEL_19;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_17;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v26 = *(void *)(a1 + 72);
  *uint64_t v4 = 34;
  unsigned int v27 = *(_DWORD *)(v26 + 20);
  v4[1] = v27;
  if (v27 > 0x7F) {
    int v28 = sub_188A9CC(v27, v4 + 1);
  }
  else {
    int v28 = v4 + 2;
  }
  uint64_t v4 = sub_15B7AE4(v26, v28, a3);
  if (v6) {
LABEL_18:
  }
    uint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_19:
  uint64_t v13 = *(unsigned int *)(a1 + 32);
  if ((int)v13 >= 1)
  {
    uint64_t v14 = 0;
    uint64_t v15 = 8 * v13;
    do
    {
      uint64_t v16 = *(void **)(*(void *)(a1 + 40) + v14 + 8);
      if (*((char *)v16 + 23) < 0)
      {
        int64_t v17 = v16[1];
        if (v17 > 127) {
          goto LABEL_30;
        }
      }
      else
      {
        int64_t v17 = *((unsigned __int8 *)v16 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v17)
      {
        *uint64_t v4 = 50;
        v4[1] = v17;
        if (*((char *)v16 + 23) < 0) {
          uint64_t v16 = (void *)*v16;
        }
        int v18 = v4 + 2;
        memcpy(v18, v16, v17);
        uint64_t v4 = &v18[v17];
        goto LABEL_28;
      }
LABEL_30:
      uint64_t v4 = (char *)sub_188A868(a3, 6, (uint64_t)v16, v4);
LABEL_28:
      v14 += 8;
    }
    while (v15 != v14);
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(int *)(a1 + 100);
    *uint64_t v4 = 56;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v23 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v25 = *(int *)(a1 + 104);
    *uint64_t v4 = 64;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unint64_t v29 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v30 = v29 >> 14;
          v29 >>= 7;
          *v4++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v4 = sub_117A0AC(a3, 9, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 0x200) == 0)
    {
LABEL_57:
      if ((v6 & 0x10) == 0) {
        goto LABEL_72;
      }
      goto LABEL_63;
    }
  }
  else if ((v6 & 0x200) == 0)
  {
    goto LABEL_57;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v31 = *(unsigned char *)(a1 + 108);
  *uint64_t v4 = 80;
  v4[1] = v31;
  v4 += 2;
  if ((v6 & 0x10) != 0)
  {
LABEL_63:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v32 = *(void *)(a1 + 80);
    *uint64_t v4 = 90;
    unsigned int v33 = *(_DWORD *)(v32 + 44);
    v4[1] = v33;
    if (v33 > 0x7F) {
      unint64_t v34 = sub_188A9CC(v33, v4 + 1);
    }
    else {
      unint64_t v34 = v4 + 2;
    }
    uint64_t v4 = sub_184B3AC(v32, v34, a3);
  }
LABEL_72:
  uint64_t v35 = *(void *)(a1 + 8);
  if ((v35 & 1) == 0) {
    return v4;
  }
  unint64_t v37 = v35 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v37 + 31) < 0)
  {
    int v38 = *(void **)(v37 + 8);
    uint64_t v39 = *(void *)(v37 + 16);
  }
  else
  {
    int v38 = (void *)(v37 + 8);
    LODWORD(v39) = *(unsigned __int8 *)(v37 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v39)
  {
    uint64_t v40 = (int)v39;
    memcpy(v4, v38, (int)v39);
    v4 += v40;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v38, v39, v4);
}

uint64_t sub_17D833C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    int v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v8) {
    goto LABEL_36;
  }
  if (v8)
  {
    unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_11:
      if ((v8 & 4) == 0) {
        goto LABEL_12;
      }
      goto LABEL_24;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_11;
  }
  unint64_t v12 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  uint64_t v14 = *(void *)(v12 + 8);
  if ((v13 & 0x80u) == 0) {
    uint64_t v14 = v13;
  }
  v4 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_12:
    if ((v8 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t v15 = sub_15B0D90(*(void *)(a1 + 64));
  v4 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) == 0)
  {
LABEL_13:
    if ((v8 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t v16 = sub_15B806C(*(void *)(a1 + 72));
  v4 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x10) == 0)
  {
LABEL_14:
    if ((v8 & 0x20) == 0) {
      goto LABEL_15;
    }
LABEL_27:
    v4 += ((9 * (__clz(*(void *)(a1 + 88) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v8 & 0x40) == 0)
    {
LABEL_16:
      if ((v8 & 0x80) == 0) {
        goto LABEL_36;
      }
      goto LABEL_32;
    }
    goto LABEL_28;
  }
LABEL_26:
  uint64_t v17 = sub_184B568(*(void *)(a1 + 80));
  v4 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x20) != 0) {
    goto LABEL_27;
  }
LABEL_15:
  if ((v8 & 0x40) == 0) {
    goto LABEL_16;
  }
LABEL_28:
  int v18 = *(_DWORD *)(a1 + 96);
  if (v18 < 0) {
    uint64_t v19 = 11;
  }
  else {
    uint64_t v19 = ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v4 += v19;
  if ((v8 & 0x80) != 0)
  {
LABEL_32:
    int v20 = *(_DWORD *)(a1 + 100);
    if (v20 < 0) {
      uint64_t v21 = 11;
    }
    else {
      uint64_t v21 = ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v21;
  }
LABEL_36:
  if ((v8 & 0x300) != 0)
  {
    if ((v8 & 0x100) != 0)
    {
      int v22 = *(_DWORD *)(a1 + 104);
      if (v22 < 0) {
        uint64_t v23 = 11;
      }
      else {
        uint64_t v23 = ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v4 += v23;
    }
    if ((v8 & 0x200) != 0) {
      v4 += 2;
    }
  }
  uint64_t v24 = *(void *)(a1 + 8);
  if (v24)
  {
    unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v26 + 31) < 0) {
      uint64_t v27 = *(void *)(v26 + 16);
    }
    else {
      uint64_t v27 = *(unsigned __int8 *)(v26 + 31);
    }
    v4 += v27;
  }
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_17D8610(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(a1 + 24, v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v9)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 48), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_31;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    uint64_t v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    sub_1881DF4((std::string **)(a1 + 56), v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_39;
    }
LABEL_31:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v17 = *(void *)(a1 + 64);
    if (!v17)
    {
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v19 = (void *)*v19;
      }
      uint64_t v17 = sub_15C1918((uint64_t)v19);
      *(void *)(a1 + 64) = v17;
    }
    if (*(void *)(a2 + 64)) {
      int v20 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      int v20 = &off_253F1A0;
    }
    sub_15B0E24(v17, (uint64_t)v20);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_47;
    }
LABEL_39:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v21 = *(std::string **)(a1 + 72);
    if (!v21)
    {
      uint64_t v22 = *(void *)(a1 + 8);
      uint64_t v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        uint64_t v23 = (void *)*v23;
      }
      uint64_t v21 = (std::string *)sub_15C1E94((uint64_t)v23);
      *(void *)(a1 + 72) = v21;
    }
    if (*(void *)(a2 + 72)) {
      uint64_t v24 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      uint64_t v24 = &off_253F3D0;
    }
    sub_15B86B8(v21, (uint64_t)v24);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0) {
        goto LABEL_11;
      }
      goto LABEL_55;
    }
LABEL_47:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v25 = *(void *)(a1 + 80);
    if (!v25)
    {
      uint64_t v26 = *(void *)(a1 + 8);
      uint64_t v27 = (void *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
      if (v26) {
        uint64_t v27 = (void *)*v27;
      }
      uint64_t v25 = sub_185089C((uint64_t)v27);
      *(void *)(a1 + 80) = v25;
    }
    if (*(void *)(a2 + 80)) {
      int v28 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      int v28 = &off_254D2B0;
    }
    sub_16CE3CC(v25, (uint64_t)v28);
    if ((v9 & 0x20) == 0)
    {
LABEL_11:
      if ((v9 & 0x40) == 0) {
        goto LABEL_12;
      }
      goto LABEL_56;
    }
LABEL_55:
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    if ((v9 & 0x40) == 0)
    {
LABEL_12:
      if ((v9 & 0x80) == 0)
      {
LABEL_14:
        *(_DWORD *)(a1 + 16) |= v9;
        goto LABEL_15;
      }
LABEL_13:
      *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
      goto LABEL_14;
    }
LABEL_56:
    *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
    if ((v9 & 0x80) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_15:
  if ((v9 & 0x300) != 0)
  {
    if ((v9 & 0x100) != 0) {
      *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
    }
    if ((v9 & 0x200) != 0) {
      *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
    }
    *(_DWORD *)(a1 + 16) |= v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17D88B4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_15B0F18(*(void *)(a1 + 64));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) != 0)
  {
    uint64_t result = sub_15B8CAC(*(void *)(a1 + 72));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x10) == 0) {
    return 1;
  }
  uint64_t result = sub_16CE508(*(void *)(a1 + 80));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17D8914@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceRefinementParameters");
}

uint64_t sub_17D8924(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DD798;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_17D8990(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17D89C0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17D8A34(void *a1)
{
  sub_17D89C0(a1);

  operator delete();
}

uint64_t *sub_17D8A6C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_17D8A7C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v12 = a2;
  int v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    uint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    uint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_17D8B7C(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_17D8C14(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_17D8C48(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_17D8C64()
{
  return 1;
}

void *sub_17D8C6C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceRefinementResult");
}

uint64_t sub_17D8C7C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24DD818;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    unsigned int v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unsigned int v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 32) = &qword_2550250;
  if ((v6 & 2) != 0)
  {
    uint64_t v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 32), (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 40) = &qword_2550250;
  if ((v6 & 4) != 0)
  {
    int v9 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v9 = (uint64_t *)*v9;
    }
    sub_1881DF4((std::string **)(a1 + 40), (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL), v9);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  if ((v6 & 8) != 0)
  {
    uint64_t v10 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v10 = (uint64_t *)*v10;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v10);
  }
  uint64_t v11 = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(void *)(a1 + 56) = v11;
  return a1;
}

void sub_17D8DC8(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17D8DF8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_13;
    }
  }
  else if (v4)
  {
    goto LABEL_13;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_13:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17D8ED8(uint64_t a1)
{
  sub_17D8DF8(a1);

  operator delete();
}

uint64_t sub_17D8F10(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) != 0)
  {
    if ((v1 & 1) == 0)
    {
      if ((v1 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_11:
      unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v3 + 23) < 0)
      {
        **(unsigned char **)unint64_t v3 = 0;
        *(void *)(v3 + 8) = 0;
        if ((v1 & 4) != 0) {
          goto LABEL_15;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v3 = 0;
        *(unsigned char *)(v3 + 23) = 0;
        if ((v1 & 4) != 0) {
          goto LABEL_15;
        }
      }
LABEL_5:
      if ((v1 & 8) == 0) {
        goto LABEL_22;
      }
LABEL_19:
      unint64_t v5 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v5 + 23) < 0)
      {
        **(unsigned char **)unint64_t v5 = 0;
        *(void *)(v5 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v5 = 0;
        *(unsigned char *)(v5 + 23) = 0;
      }
      goto LABEL_22;
    }
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_11;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_11;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_15:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      if ((v1 & 8) == 0) {
        goto LABEL_22;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v1 & 8) == 0) {
        goto LABEL_22;
      }
    }
    goto LABEL_19;
  }
LABEL_22:
  if ((v1 & 0x30) != 0)
  {
    *(_DWORD *)(a1 + 64) = 0;
    *(void *)(a1 + 56) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v7) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_17D900C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v33 + 1);
    unsigned int v9 = **(unsigned char **)v33;
    if ((char)**(unsigned char **)v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v33 + 2);
      }
    }
    *(void *)unsigned int v33 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 24);
        goto LABEL_37;
      case 2u:
        if (v9 != 16) {
          goto LABEL_41;
        }
        v5 |= 0x10u;
        uint64_t v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v29 = sub_188C138((uint64_t)v8, v16);
          *(void *)unsigned int v33 = v29;
          *(void *)(a1 + 56) = v30;
          if (!v29) {
            goto LABEL_59;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_17:
          *(void *)unsigned int v33 = v15;
          *(void *)(a1 + 56) = v16;
        }
        goto LABEL_39;
      case 3u:
        if (v9 != 24) {
          goto LABEL_41;
        }
        uint64_t v18 = v8 + 1;
        unint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        int v20 = *v18;
        int v21 = v19 + (v20 << 7);
        unint64_t v19 = (v21 - 128);
        if (v20 < 0)
        {
          *(void *)unsigned int v33 = sub_188C138((uint64_t)v8, (v21 - 128));
          if (!*(void *)v33) {
            goto LABEL_59;
          }
          unint64_t v19 = v31;
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_22:
          *(void *)unsigned int v33 = v18;
        }
        if (v19 > 2)
        {
          if (*v7) {
            uint64_t v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(3, v19, v32);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 64) = v19;
        }
        goto LABEL_39;
      case 4u:
        if (v9 != 34) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v22 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 32);
        goto LABEL_37;
      case 5u:
        if (v9 != 42) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v23 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
        if (v23) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 40);
        goto LABEL_37;
      case 6u:
        if (v9 != 50) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v24 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
        if (v24) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 48);
LABEL_37:
        uint64_t v25 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v26 = (void *)sub_188C244(v25, *(char **)v33, (uint64_t)a3);
        goto LABEL_38;
      default:
LABEL_41:
        if (v9) {
          BOOL v27 = (v9 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (*v7)
          {
            int v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v33;
          }
          uint64_t v26 = sub_1885AC0(v9, v28, v8, a3);
LABEL_38:
          *(void *)unsigned int v33 = v26;
          if (!v26) {
            goto LABEL_59;
          }
LABEL_39:
          if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_59:
        }
          *(void *)unsigned int v33 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v33;
    }
  }
}

unsigned char *sub_17D9378(uint64_t a1, unsigned char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(void *)(a1 + 56);
    *unint64_t v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 64);
    *unint64_t v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 4) == 0)
    {
LABEL_19:
      if ((v6 & 8) == 0) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_19;
  }
  unint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) != 0) {
LABEL_20:
  }
    unint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_21:
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_17D95A8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x3F) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_28;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v9 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0)
    {
LABEL_14:
      if ((v1 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_23;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_14;
  }
  unint64_t v12 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  uint64_t v14 = *(void *)(v12 + 8);
  if ((v13 & 0x80u) == 0) {
    uint64_t v14 = v13;
  }
  v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x10) == 0)
  {
LABEL_15:
    if ((v1 & 0x20) == 0) {
      goto LABEL_28;
    }
    goto LABEL_24;
  }
LABEL_23:
  v2 += ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v1 & 0x20) == 0) {
    goto LABEL_28;
  }
LABEL_24:
  int v15 = *(_DWORD *)(a1 + 64);
  if (v15 < 0) {
    uint64_t v16 = 11;
  }
  else {
    uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v16;
LABEL_28:
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v2 += v20;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_17D9774()
{
  return 1;
}

void *sub_17D977C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AirportEntityPlaceLookupParameters");
}

uint64_t sub_17D978C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DD898;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_17D97F8(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17D9828(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17D989C(void *a1)
{
  sub_17D9828(a1);

  operator delete();
}

uint64_t *sub_17D98D4(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_17D98E4(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v12 = a2;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    unint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    unint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_17D99E4(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_17D9A7C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_17D9AB0(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_17D9ACC()
{
  return 1;
}

void *sub_17D9AD4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AirportEntityPlaceLookupResult");
}

uint64_t sub_17D9AE4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = (std::string *)(a1 + 16);
  *(void *)a1 = off_24DD918;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_148E5A4(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    uint64_t v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_17D9BC4(_Unwind_Exception *a1)
{
  sub_148CAC8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17D9C08(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_148CAC8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17D9C88(void *a1)
{
  sub_17D9C08(a1);

  operator delete();
}

uint64_t sub_17D9CC0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B10F0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_17D9D3C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      unint64_t v19 = v6;
      if (v7 == 10)
      {
        unint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          unint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_15C1974(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          unint64_t v12 = sub_11FF4E8(a3, v16, v13);
          unint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      unint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_17D9EDC(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = (char *)sub_15B1284(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_17DA020(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B13A0(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

std::string *sub_17DA0D0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_148E5A4((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_17DA1A0(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    BOOL v5 = sub_15B1450(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v4;
  }
  while (v5);
  return v3 < 1;
}

void *sub_17DA1F8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TerritoryLookupParameters");
}

uint64_t sub_17DA208(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DD998;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_17DA274(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17DA2A4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17DA318(void *a1)
{
  sub_17DA2A4(a1);

  operator delete();
}

uint64_t *sub_17DA350(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_17DA360(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v12 = a2;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    BOOL v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        BOOL v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        BOOL v5 = v12 + 2;
      }
    }
    unint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v10 = (std::string *)sub_188DBD8(v4);
      BOOL v5 = v12;
    }
    unint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_17DA460(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_17DA4F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_17DA52C(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_17DA548()
{
  return 1;
}

void *sub_17DA550@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TerritoryLookupResult");
}

uint64_t sub_17DA560(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24DDA18;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  *(void *)(a1 + 28) = 0;
  int v5 = *(_DWORD *)(a2 + 24);
  if (v5)
  {
    sub_188CA54((unsigned int *)(a1 + 24), v5);
    unint64_t v6 = *(void **)(a1 + 32);
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
    memcpy(v6, *(const void **)(a2 + 32), 8 * *(int *)(a2 + 24));
  }
  uint64_t v7 = *(void *)(a2 + 8);
  if (v7) {
    sub_188B4F8(v4, (v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 40) = &qword_2550250;
  int v8 = *(_DWORD *)(a2 + 16);
  if (v8)
  {
    uint64_t v9 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v9 = (uint64_t *)*v9;
    }
    sub_1881DF4((std::string **)(a1 + 40), (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL), v9);
    int v8 = *(_DWORD *)(a2 + 16);
  }
  if ((v8 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  if ((v8 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  if ((v8 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  long long v10 = *(_OWORD *)(a2 + 72);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = v10;
  return a1;
}

void sub_17DA710()
{
}

uint64_t sub_17DA7A0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  int v5 = (void ***)(a1 + 40);
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_254B1B0)
  {
    if (*(void *)(a1 + 48))
    {
      sub_15B8F7C();
      operator delete();
    }
    if (*(void *)(a1 + 56))
    {
      sub_15B0994();
      operator delete();
    }
    unint64_t v6 = *(void **)(a1 + 64);
    if (v6)
    {
      sub_15B9A04(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17DA8B4(uint64_t a1)
{
  sub_17DA7A0(a1);

  operator delete();
}

uint64_t sub_17DA8EC(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_7;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_17:
    uint64_t result = sub_15B8FB8(*(void *)(result + 48));
    if ((v2 & 4) == 0)
    {
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    goto LABEL_18;
  }
  unint64_t v5 = *(void *)(result + 40) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_17;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_17;
    }
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_18:
  uint64_t result = (uint64_t)sub_15B09D0(*(void *)(v1 + 56));
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    uint64_t result = sub_15B9A40(*(void *)(v1 + 64));
LABEL_7:
  if ((v2 & 0xF0) != 0)
  {
    *(void *)(v1 + 72) = 0;
    *(void *)(v1 + 80) = 0;
    *(_WORD *)(v1 + 88) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_17DA9BC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v50 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, (char **)v50, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      int v8 = (unsigned __int8 *)(*(void *)v50 + 1);
      unsigned int v9 = **(unsigned char **)v50;
      if ((char)**(unsigned char **)v50 < 0)
      {
        unsigned int v10 = v9 + (*v8 << 7);
        unsigned int v9 = v10 - 128;
        if ((char)*v8 < 0)
        {
          int v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v50, v10 - 128);
          unsigned int v9 = v11;
        }
        else
        {
          int v8 = (unsigned __int8 *)(*(void *)v50 + 2);
        }
      }
      *(void *)uint64_t v50 = v8;
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10) {
            goto LABEL_75;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v12 = *(void *)(a1 + 48);
          if (!v12)
          {
            unint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              unint64_t v13 = (void *)*v13;
            }
            uint64_t v12 = sub_15C1EF4((uint64_t)v13);
            *(void *)(a1 + 48) = v12;
            int v8 = *(unsigned __int8 **)v50;
          }
          uint64_t v14 = sub_1198E84(a3, v12, v8);
          goto LABEL_82;
        case 2u:
          if (v9 != 16) {
            goto LABEL_75;
          }
          v5 |= 0x10u;
          uint64_t v15 = (char *)(v8 + 1);
          uint64_t v16 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_19;
          }
          int v17 = *v15;
          uint64_t v16 = v16 + (v17 << 7) - 128;
          if (v17 < 0)
          {
            uint64_t v40 = sub_188C138((uint64_t)v8, v16);
            *(void *)uint64_t v50 = v40;
            *(void *)(a1 + 72) = v41;
            if (!v40) {
              goto LABEL_88;
            }
          }
          else
          {
            uint64_t v15 = (char *)(v8 + 2);
LABEL_19:
            *(void *)uint64_t v50 = v15;
            *(void *)(a1 + 72) = v16;
          }
          goto LABEL_83;
        case 3u:
          if (v9 != 26) {
            goto LABEL_75;
          }
          *(_DWORD *)(a1 + 16) |= 4u;
          uint64_t v18 = *(void *)(a1 + 56);
          if (!v18)
          {
            unint64_t v19 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              unint64_t v19 = (void *)*v19;
            }
            uint64_t v18 = sub_15C1918((uint64_t)v19);
            *(void *)(a1 + 56) = v18;
            int v8 = *(unsigned __int8 **)v50;
          }
          uint64_t v14 = (uint64_t)sub_1198F14(a3, v18, v8);
          goto LABEL_82;
        case 4u:
          if (v9 == 32)
          {
            uint64_t v20 = v8 - 1;
            while (1)
            {
              *(void *)uint64_t v50 = v20 + 1;
              uint64_t v21 = v20[1];
              if ((char)v20[1] < 0)
              {
                int v22 = v21 + (v20[2] << 7);
                uint64_t v21 = (v22 - 128);
                if ((char)v20[2] < 0)
                {
                  uint64_t v20 = (unsigned __int8 *)sub_188C138((uint64_t)(v20 + 1), (v22 - 128));
                  uint64_t v21 = v23;
                }
                else
                {
                  v20 += 3;
                }
              }
              else
              {
                v20 += 2;
              }
              *(void *)uint64_t v50 = v20;
              uint64_t v24 = *(unsigned int *)(a1 + 24);
              if (v24 == *(_DWORD *)(a1 + 28))
              {
                int v25 = v24 + 1;
                sub_188CA54((unsigned int *)(a1 + 24), v24 + 1);
                *(void *)(*(void *)(a1 + 32) + 8 * v24) = v21;
                uint64_t v20 = *(unsigned __int8 **)v50;
              }
              else
              {
                *(void *)(*(void *)(a1 + 32) + 8 * v24) = v21;
                int v25 = v24 + 1;
              }
              *(_DWORD *)(a1 + 24) = v25;
              if (!v20) {
                goto LABEL_88;
              }
              if (*(void *)a3 <= (unint64_t)v20 || *v20 != 32) {
                goto LABEL_83;
              }
            }
          }
          if (v9 == 34)
          {
            uint64_t v14 = (uint64_t)sub_188C2EC((unsigned int *)(a1 + 24), v8, (uint64_t)a3);
          }
          else
          {
LABEL_75:
            if (v9) {
              BOOL v48 = (v9 & 7) == 4;
            }
            else {
              BOOL v48 = 1;
            }
            if (v48)
            {
              if (v8)
              {
                a3[10].i32[0] = v9 - 1;
                goto LABEL_2;
              }
LABEL_88:
              *(void *)uint64_t v50 = 0;
              goto LABEL_2;
            }
            if (*v7)
            {
              uint64_t v49 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v49 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              int v8 = *(unsigned __int8 **)v50;
            }
            uint64_t v14 = (uint64_t)sub_1885AC0(v9, v49, (char *)v8, a3);
          }
LABEL_82:
          *(void *)uint64_t v50 = v14;
          if (!v14) {
            goto LABEL_88;
          }
LABEL_83:
          if (sub_11947B8((uint64_t)a3, (char **)v50, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        case 5u:
          if (v9 != 40) {
            goto LABEL_75;
          }
          v5 |= 0x40u;
          uint64_t v26 = (char *)(v8 + 1);
          uint64_t v27 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_44;
          }
          int v28 = *v26;
          uint64_t v27 = v27 + (v28 << 7) - 128;
          if (v28 < 0)
          {
            uint64_t v42 = sub_188C138((uint64_t)v8, v27);
            *(void *)uint64_t v50 = v42;
            *(unsigned char *)(a1 + 88) = v43 != 0;
            if (!v42) {
              goto LABEL_88;
            }
          }
          else
          {
            uint64_t v26 = (char *)(v8 + 2);
LABEL_44:
            *(void *)uint64_t v50 = v26;
            *(unsigned char *)(a1 + 88) = v27 != 0;
          }
          goto LABEL_83;
        case 6u:
          if (v9 != 48) {
            goto LABEL_75;
          }
          v5 |= 0x20u;
          uint64_t v29 = (char *)(v8 + 1);
          uint64_t v30 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_49;
          }
          int v31 = *v29;
          uint64_t v30 = v30 + (v31 << 7) - 128;
          if (v31 < 0)
          {
            uint64_t v44 = sub_188C138((uint64_t)v8, v30);
            *(void *)uint64_t v50 = v44;
            *(void *)(a1 + 80) = v45;
            if (!v44) {
              goto LABEL_88;
            }
          }
          else
          {
            uint64_t v29 = (char *)(v8 + 2);
LABEL_49:
            *(void *)uint64_t v50 = v29;
            *(void *)(a1 + 80) = v30;
          }
          goto LABEL_83;
        case 7u:
          if (v9 != 58) {
            goto LABEL_75;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v32 = *(void *)(a1 + 8);
          unsigned int v33 = (uint64_t *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
          if (v32) {
            unsigned int v33 = (uint64_t *)*v33;
          }
          unint64_t v34 = (std::string *)sub_1880F84((void *)(a1 + 40), v33);
          uint64_t v14 = (uint64_t)sub_188C244(v34, *(char **)v50, (uint64_t)a3);
          goto LABEL_82;
        case 8u:
          if (v9 != 64) {
            goto LABEL_75;
          }
          v5 |= 0x80u;
          uint64_t v35 = (char *)(v8 + 1);
          uint64_t v36 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_58;
          }
          int v37 = *v35;
          uint64_t v36 = v36 + (v37 << 7) - 128;
          if (v37 < 0)
          {
            uint64_t v46 = sub_188C138((uint64_t)v8, v36);
            *(void *)uint64_t v50 = v46;
            *(unsigned char *)(a1 + 89) = v47 != 0;
            if (!v46) {
              goto LABEL_88;
            }
          }
          else
          {
            uint64_t v35 = (char *)(v8 + 2);
LABEL_58:
            *(void *)uint64_t v50 = v35;
            *(unsigned char *)(a1 + 89) = v36 != 0;
          }
          goto LABEL_83;
        case 9u:
          if (v9 != 74) {
            goto LABEL_75;
          }
          *(_DWORD *)(a1 + 16) |= 8u;
          uint64_t v38 = *(void *)(a1 + 64);
          if (!v38)
          {
            uint64_t v39 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              uint64_t v39 = (void *)*v39;
            }
            uint64_t v38 = sub_15C1F98((uint64_t)v39);
            *(void *)(a1 + 64) = v38;
            int v8 = *(unsigned __int8 **)v50;
          }
          uint64_t v14 = (uint64_t)sub_17DAEEC(a3, v38, v8);
          goto LABEL_82;
        default:
          goto LABEL_75;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v50;
}

char *sub_17DAEEC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15B9A68(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17DAF7C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_15B9320(v7, v9, a3);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 72);
    *char v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 56);
    *char v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 44);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    char v4 = sub_15B0C0C(v13, v15, a3);
  }
  uint64_t v16 = *(unsigned int *)(a1 + 24);
  if ((int)v16 >= 1)
  {
    for (uint64_t i = 0; i != v16; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v18 = *(void *)(*(void *)(a1 + 32) + 8 * i);
      *char v4 = 32;
      v4[1] = v18;
      if (v18 > 0x7F)
      {
        v4[1] = v18 | 0x80;
        unint64_t v19 = v18 >> 7;
        v4[2] = v18 >> 7;
        v4 += 3;
        if (v18 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v20 = v19 >> 14;
            v19 >>= 7;
            *v4++ = v19;
          }
          while (v20);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v21 = *(unsigned char *)(a1 + 88);
    *char v4 = 40;
    v4[1] = v21;
    v4 += 2;
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v22 = *(void *)(a1 + 80);
    *char v4 = 48;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unint64_t v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 0x80) == 0)
    {
LABEL_44:
      if ((v6 & 8) == 0) {
        goto LABEL_56;
      }
      goto LABEL_50;
    }
  }
  else if ((v6 & 0x80) == 0)
  {
    goto LABEL_44;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v25 = *(unsigned char *)(a1 + 89);
  *char v4 = 64;
  v4[1] = v25;
  v4 += 2;
  if ((v6 & 8) != 0)
  {
LABEL_50:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v26 = *(void *)(a1 + 64);
    *char v4 = 74;
    unsigned int v27 = *(_DWORD *)(v26 + 20);
    v4[1] = v27;
    if (v27 > 0x7F) {
      int v28 = sub_188A9CC(v27, v4 + 1);
    }
    else {
      int v28 = v4 + 2;
    }
    char v4 = (char *)sub_15B9C18(v26, (unint64_t)v28, a3);
  }
LABEL_56:
  uint64_t v29 = *(void *)(a1 + 8);
  if ((v29 & 1) == 0) {
    return v4;
  }
  unint64_t v31 = v29 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v31 + 31) < 0)
  {
    uint64_t v32 = *(void **)(v31 + 8);
    uint64_t v33 = *(void *)(v31 + 16);
  }
  else
  {
    uint64_t v32 = (void *)(v31 + 8);
    LODWORD(v33) = *(unsigned __int8 *)(v31 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v33)
  {
    uint64_t v34 = (int)v33;
    memcpy(v4, v32, (int)v33);
    v4 += v34;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v32, v33, v4);
}

uint64_t sub_17DB39C(uint64_t a1)
{
  uint64_t v2 = sub_188D5A8((unsigned int *)(a1 + 24)) + *(unsigned int *)(a1 + 24);
  char v3 = *(unsigned char *)(a1 + 16);
  if (!v3) {
    goto LABEL_14;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v7 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((*(unsigned char *)(a1 + 16) & 2) == 0)
    {
LABEL_4:
      if ((*(unsigned char *)(a1 + 16) & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_20;
    }
  }
  else if ((*(unsigned char *)(a1 + 16) & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v10 = sub_15B956C(*(void *)(a1 + 48));
  v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 4) == 0)
  {
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t v11 = sub_15B0D90(*(void *)(a1 + 56));
  v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 8) == 0)
  {
LABEL_6:
    if ((v3 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_22:
    v2 += ((9 * (__clz(*(void *)(a1 + 72) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v3 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_21:
  uint64_t v12 = sub_15B9D78(*(void *)(a1 + 64));
  v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x10) != 0) {
    goto LABEL_22;
  }
LABEL_7:
  if ((v3 & 0x20) != 0) {
LABEL_8:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 80) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_9:
  uint64_t v4 = v2 + 2;
  if ((v3 & 0x40) == 0) {
    uint64_t v4 = v2;
  }
  if (v3 < 0) {
    uint64_t v2 = v4 + 2;
  }
  else {
    uint64_t v2 = v4;
  }
LABEL_14:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v13 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_17DB55C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188CA54((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 8 * v6), *(const void **)(a2 + 32), 8 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v8)
  {
    if (v8)
    {
      uint64_t v10 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (uint64_t *)*v12;
      }
      sub_1881DF4((std::string **)(a1 + 40), v10, v12);
      if ((v8 & 2) == 0)
      {
LABEL_6:
        if ((v8 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_29;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_6;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    unint64_t v13 = *(std::string **)(a1 + 48);
    if (!v13)
    {
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (void *)*v15;
      }
      unint64_t v13 = (std::string *)sub_15C1EF4((uint64_t)v15);
      *(void *)(a1 + 48) = v13;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v16 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v16 = &off_253F4C8;
    }
    sub_15B9698(v13, (uint64_t)v16);
    if ((v8 & 4) == 0)
    {
LABEL_7:
      if ((v8 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_37;
    }
LABEL_29:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v17 = *(void *)(a1 + 56);
    if (!v17)
    {
      uint64_t v18 = *(void *)(a1 + 8);
      unint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        unint64_t v19 = (void *)*v19;
      }
      uint64_t v17 = sub_15C1918((uint64_t)v19);
      *(void *)(a1 + 56) = v17;
    }
    if (*(void *)(a2 + 56)) {
      unint64_t v20 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      unint64_t v20 = &off_253F1A0;
    }
    sub_15B0E24(v17, (uint64_t)v20);
    if ((v8 & 8) == 0)
    {
LABEL_8:
      if ((v8 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_45;
    }
LABEL_37:
    *(_DWORD *)(a1 + 16) |= 8u;
    char v21 = *(std::string **)(a1 + 64);
    if (!v21)
    {
      uint64_t v22 = *(void *)(a1 + 8);
      unint64_t v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        unint64_t v23 = (void *)*v23;
      }
      char v21 = (std::string *)sub_15C1F98((uint64_t)v23);
      *(void *)(a1 + 64) = v21;
    }
    if (*(void *)(a2 + 64)) {
      unint64_t v24 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      unint64_t v24 = &off_253F508;
    }
    sub_1197FD8(v21, (uint64_t)v24);
    if ((v8 & 0x10) == 0)
    {
LABEL_9:
      if ((v8 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_46;
    }
LABEL_45:
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    if ((v8 & 0x20) == 0)
    {
LABEL_10:
      if ((v8 & 0x40) == 0) {
        goto LABEL_11;
      }
      goto LABEL_47;
    }
LABEL_46:
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    if ((v8 & 0x40) == 0)
    {
LABEL_11:
      if ((v8 & 0x80) == 0)
      {
LABEL_13:
        *(_DWORD *)(a1 + 16) |= v8;
        goto LABEL_14;
      }
LABEL_12:
      *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
      goto LABEL_13;
    }
LABEL_47:
    *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
    if ((v8 & 0x80) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_14:
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17DB780(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_15B9824(*(void *)(a1 + 48));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 56));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17DB7CC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ExtendedGeoLookupParameters");
}

uint64_t sub_17DB7DC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24DDA98;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v6 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v6 = (uint64_t *)*v6;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v6);
  }
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

void sub_17DB890(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17DB8C0(uint64_t a1)
{
  char v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17DB960(uint64_t a1)
{
  sub_17DB8C0(a1);

  operator delete();
}

uint64_t sub_17DB998(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 6) != 0) {
    *(void *)(a1 + 32) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v4) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_17DB9E8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = (char *)(*(void *)v31 + 1);
    unsigned int v9 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180(*(uint64_t *)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (char *)(*(void *)v31 + 2);
      }
    }
    *(void *)unint64_t v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      uint64_t v17 = v8 + 1;
      unint64_t v18 = *v8;
      if (*v8 < 0)
      {
        int v19 = *v17;
        int v20 = v18 + (v19 << 7);
        unint64_t v18 = (v20 - 128);
        if (v19 < 0)
        {
          *(void *)unint64_t v31 = sub_188C138((uint64_t)v8, (v20 - 128));
          if (!*(void *)v31) {
            goto LABEL_51;
          }
          unint64_t v18 = v27;
          goto LABEL_26;
        }
        uint64_t v17 = v8 + 2;
      }
      *(void *)unint64_t v31 = v17;
LABEL_26:
      if (v18 > 2)
      {
        if (*v7) {
          uint64_t v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(3, v18, v30);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        *(_DWORD *)(a1 + 36) = v18;
      }
      goto LABEL_38;
    }
    if (v12 == 2) {
      break;
    }
    if (v12 != 1 || v9 != 8) {
      goto LABEL_14;
    }
    v5 |= 2u;
    unint64_t v24 = v8 + 1;
    uint64_t v25 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_37;
    }
    int v26 = *v24;
    uint64_t v25 = v25 + (v26 << 7) - 128;
    if ((v26 & 0x80000000) == 0)
    {
      unint64_t v24 = v8 + 2;
LABEL_37:
      *(void *)unint64_t v31 = v24;
      *(unsigned char *)(a1 + 32) = v25 != 0;
      goto LABEL_38;
    }
    uint64_t v28 = sub_188C138((uint64_t)v8, v25);
    *(void *)unint64_t v31 = v28;
    *(unsigned char *)(a1 + 32) = v29 != 0;
    if (!v28) {
      goto LABEL_51;
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 8);
    uint64_t v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      uint64_t v22 = (uint64_t *)*v22;
    }
    unint64_t v23 = (std::string *)sub_1880F84((void *)(a1 + 24), v22);
    uint64_t v16 = (void *)sub_188C244(v23, *(char **)v31, (uint64_t)a3);
LABEL_32:
    *(void *)unint64_t v31 = v16;
    if (!v16) {
      goto LABEL_51;
    }
    goto LABEL_38;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = *(char **)v31;
    }
    uint64_t v16 = sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_32;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_51:
  *(void *)unint64_t v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v31;
}

unsigned char *sub_17DBC7C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 32);
    *char v4 = 8;
    v4[1] = v7;
    v4 += 2;
    if ((v6 & 1) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_3;
  }
  char v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0) {
    goto LABEL_15;
  }
LABEL_9:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v8 = *(int *)(a1 + 36);
  *char v4 = 24;
  v4[1] = v8;
  if (v8 > 0x7F)
  {
    v4[1] = v8 | 0x80;
    unint64_t v9 = v8 >> 7;
    v4[2] = v8 >> 7;
    v4 += 3;
    if (v8 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v10 = v9 >> 14;
        v9 >>= 7;
        *v4++ = v9;
      }
      while (v10);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_15:
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    BOOL v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    BOOL v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_17DBE08(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) != 0)
  {
    if (v1)
    {
      unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
      uint64_t v5 = *(void *)(v3 + 8);
      if ((v4 & 0x80u) == 0) {
        uint64_t v5 = v4;
      }
      uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += 2;
    }
    if ((v1 & 4) != 0)
    {
      int v6 = *(_DWORD *)(a1 + 36);
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v6 >= 0) {
        uint64_t v8 = v7;
      }
      else {
        uint64_t v8 = 11;
      }
      v2 += v8;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_17DBEDC()
{
  return 1;
}

void *sub_17DBEE4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ExtendedGeoLookupResult");
}

uint64_t sub_17DBEF4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24DDB18;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = a1 + 24;
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(v5, v8, (const std::string **)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    unint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *unint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  int v12 = *(_DWORD *)(a2 + 16);
  if (v12)
  {
    unint64_t v13 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v13 = (uint64_t *)*v13;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v13);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 56) = &qword_2550250;
  if ((v12 & 2) != 0)
  {
    BOOL v14 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      BOOL v14 = (uint64_t *)*v14;
    }
    sub_1881DF4((std::string **)(a1 + 56), (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL), v14);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 64) = &qword_2550250;
  if ((v12 & 4) != 0)
  {
    uint64_t v15 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    sub_1881DF4((std::string **)(a1 + 64), (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL), v15);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 72) = &qword_2550250;
  if ((v12 & 8) != 0)
  {
    uint64_t v16 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    sub_1881DF4((std::string **)(a1 + 72), (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL), v16);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  if ((v12 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 80) = 0;
  if ((v12 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 88) = 0;
  long long v17 = *(_OWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = v17;
  return a1;
}

void sub_17DC128()
{
}

void *sub_17DC19C(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_17DC228((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DE8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_17DC228(uint64_t a1)
{
  unint64_t v3 = *(uint64_t **)(a1 + 48);
  uint64_t v2 = (void ***)(a1 + 48);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  uint64_t result = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_254B238)
  {
    if (*(void *)(a1 + 80))
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 88);
    if (result)
    {
      sub_15B6D48();
      operator delete();
    }
  }
  return result;
}

void sub_17DC308(void *a1)
{
  sub_17DC19C(a1);

  operator delete();
}

uint64_t sub_17DC340(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 0x3F) == 0) {
    goto LABEL_9;
  }
  if (v3)
  {
    unint64_t v6 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_21;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_21;
      }
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_25:
    unint64_t v8 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
      if ((v3 & 8) != 0) {
        goto LABEL_29;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
      if ((v3 & 8) != 0) {
        goto LABEL_29;
      }
    }
LABEL_6:
    if ((v3 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_33;
  }
  if ((v3 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_21:
  unint64_t v7 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v7 + 23) < 0)
  {
    **(unsigned char **)unint64_t v7 = 0;
    *(void *)(v7 + 8) = 0;
    if ((v3 & 4) != 0) {
      goto LABEL_25;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    if ((v3 & 4) != 0) {
      goto LABEL_25;
    }
  }
LABEL_5:
  if ((v3 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_29:
  unint64_t v9 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v9 + 23) < 0)
  {
    **(unsigned char **)unint64_t v9 = 0;
    *(void *)(v9 + 8) = 0;
    if ((v3 & 0x10) != 0) {
      goto LABEL_33;
    }
LABEL_7:
    if ((v3 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  *(unsigned char *)unint64_t v9 = 0;
  *(unsigned char *)(v9 + 23) = 0;
  if ((v3 & 0x10) == 0) {
    goto LABEL_7;
  }
LABEL_33:
  uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 80));
  if ((v3 & 0x20) != 0) {
LABEL_8:
  }
    uint64_t result = sub_15B6D84(*(void *)(a1 + 88));
LABEL_9:
  if ((v3 & 0xC0) != 0)
  {
    *(_DWORD *)(a1 + 104) = 0;
    *(void *)(a1 + 96) = 0;
  }
  if ((v3 & 0x300) != 0) {
    *(void *)(a1 + 108) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_17DC4AC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v55 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v55, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  unint64_t v8 = (uint64_t **)(a1 + 24);
  while (2)
  {
    unint64_t v9 = (unsigned __int8 *)(*(void *)v55 + 1);
    unsigned int v10 = **(unsigned char **)v55;
    if ((char)**(unsigned char **)v55 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        unint64_t v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v55, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        unint64_t v9 = (unsigned __int8 *)(*(void *)v55 + 2);
      }
    }
    *(void *)unint64_t v55 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 8) {
          goto LABEL_77;
        }
        v5 |= 0x80u;
        BOOL v14 = (char *)(v9 + 1);
        LODWORD(v13) = *v9;
        if ((v13 & 0x80) == 0) {
          goto LABEL_13;
        }
        int v15 = *v14;
        uint64_t v13 = v13 + (v15 << 7) - 128;
        if ((v15 & 0x80000000) == 0)
        {
          BOOL v14 = (char *)(v9 + 2);
LABEL_13:
          *(void *)unint64_t v55 = v14;
          *(_DWORD *)(a1 + 104) = v13;
          goto LABEL_75;
        }
        uint64_t v47 = sub_188C138((uint64_t)v9, v13);
        *(void *)unint64_t v55 = v47;
        *(_DWORD *)(a1 + 104) = v48;
        if (v47) {
          goto LABEL_75;
        }
        goto LABEL_104;
      case 2u:
        if (v10 != 16) {
          goto LABEL_77;
        }
        v5 |= 0x40u;
        uint64_t v16 = (char *)(v9 + 1);
        uint64_t v17 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v18 = *v16;
        uint64_t v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v49 = sub_188C138((uint64_t)v9, v17);
          *(void *)unint64_t v55 = v49;
          *(void *)(a1 + 96) = v50;
          if (!v49) {
            goto LABEL_104;
          }
        }
        else
        {
          uint64_t v16 = (char *)(v9 + 2);
LABEL_18:
          *(void *)unint64_t v55 = v16;
          *(void *)(a1 + 96) = v17;
        }
        goto LABEL_75;
      case 3u:
        if (v10 != 26) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v19 = *(void *)(a1 + 8);
        int v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          int v20 = (uint64_t *)*v20;
        }
        uint64_t v21 = (void *)(a1 + 48);
        goto LABEL_73;
      case 4u:
        if (v10 != 34) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v22 = *(void *)(a1 + 8);
        int v20 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          int v20 = (uint64_t *)*v20;
        }
        uint64_t v21 = (void *)(a1 + 56);
        goto LABEL_73;
      case 5u:
        if (v10 != 42) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v23 = *(void *)(a1 + 80);
        if (!v23)
        {
          unint64_t v24 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v24 = (void *)*v24;
          }
          uint64_t v23 = sub_15C1918((uint64_t)v24);
          *(void *)(a1 + 80) = v23;
          unint64_t v9 = *(unsigned __int8 **)v55;
        }
        uint64_t v25 = sub_1198F14(a3, v23, v9);
        goto LABEL_74;
      case 6u:
        if (v10 != 50) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        int v26 = *(void **)(a1 + 88);
        if (!v26)
        {
          unint64_t v27 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v27 = (void *)*v27;
          }
          int v26 = sub_15C1E94((uint64_t)v27);
          *(void *)(a1 + 88) = v26;
          unint64_t v9 = *(unsigned __int8 **)v55;
        }
        uint64_t v25 = sub_11EA9CC(a3, (uint64_t)v26, v9);
        goto LABEL_74;
      case 7u:
        if (v10 != 58) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v28 = *(void *)(a1 + 8);
        int v20 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
        if (v28) {
          int v20 = (uint64_t *)*v20;
        }
        uint64_t v21 = (void *)(a1 + 64);
        goto LABEL_73;
      case 8u:
        if (v10 != 66) {
          goto LABEL_77;
        }
        uint64_t v29 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          uint64_t v30 = (char *)(v29 + 1);
          *(void *)unint64_t v55 = v29 + 1;
          unint64_t v31 = *(_DWORD **)(a1 + 40);
          if (v31 && (uint64_t v32 = *(int *)(a1 + 32), (int)v32 < *v31))
          {
            *(_DWORD *)(a1 + 32) = v32 + 1;
            uint64_t v33 = *(std::string **)&v31[2 * v32 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            void *v35 = v34;
            v35[1] = sub_3A6EDC;
            void *v34 = 0;
            v34[1] = 0;
            int v34[2] = 0;
            uint64_t v33 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v34);
            uint64_t v30 = *(char **)v55;
          }
          uint64_t v29 = sub_188C244(v33, v30, (uint64_t)a3);
          *(void *)unint64_t v55 = v29;
          if (!v29) {
            goto LABEL_104;
          }
          if (*(void *)a3 <= (unint64_t)v29 || *v29 != 66) {
            goto LABEL_75;
          }
        }
      case 9u:
        if (v10 != 72) {
          goto LABEL_77;
        }
        uint64_t v36 = (char *)(v9 + 1);
        unint64_t v37 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_59;
        }
        int v38 = *v36;
        int v39 = v37 + (v38 << 7);
        unint64_t v37 = (v39 - 128);
        if (v38 < 0)
        {
          *(void *)unint64_t v55 = sub_188C138((uint64_t)v9, (v39 - 128));
          if (!*(void *)v55) {
            goto LABEL_104;
          }
          unint64_t v37 = v51;
        }
        else
        {
          uint64_t v36 = (char *)(v9 + 2);
LABEL_59:
          *(void *)unint64_t v55 = v36;
        }
        if (sub_16BAF04(v37))
        {
          *(_DWORD *)(a1 + 16) |= 0x100u;
          *(_DWORD *)(a1 + 108) = v37;
          goto LABEL_75;
        }
        if (*v7) {
          uint64_t v53 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v53 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v54 = 9;
        goto LABEL_98;
      case 0xAu:
        if (v10 != 80) {
          goto LABEL_77;
        }
        uint64_t v40 = (char *)(v9 + 1);
        unint64_t v37 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_66;
        }
        int v41 = *v40;
        int v42 = v37 + (v41 << 7);
        unint64_t v37 = (v42 - 128);
        if (v41 < 0)
        {
          *(void *)unint64_t v55 = sub_188C138((uint64_t)v9, (v42 - 128));
          if (!*(void *)v55) {
            goto LABEL_104;
          }
          unint64_t v37 = v52;
        }
        else
        {
          uint64_t v40 = (char *)(v9 + 2);
LABEL_66:
          *(void *)unint64_t v55 = v40;
        }
        if (v37 > 5)
        {
          if (*v7) {
            uint64_t v53 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v53 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v54 = 10;
LABEL_98:
          sub_188C020(v54, v37, v53);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x200u;
          *(_DWORD *)(a1 + 112) = v37;
        }
        goto LABEL_75;
      case 0xBu:
        if (v10 != 90) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v43 = *(void *)(a1 + 8);
        int v20 = (uint64_t *)(v43 & 0xFFFFFFFFFFFFFFFCLL);
        if (v43) {
          int v20 = (uint64_t *)*v20;
        }
        uint64_t v21 = (void *)(a1 + 72);
LABEL_73:
        uint64_t v44 = (std::string *)sub_1880F84(v21, v20);
        uint64_t v25 = (void *)sub_188C244(v44, *(char **)v55, (uint64_t)a3);
        goto LABEL_74;
      default:
LABEL_77:
        if (v10) {
          BOOL v45 = (v10 & 7) == 4;
        }
        else {
          BOOL v45 = 1;
        }
        if (!v45)
        {
          if (*v7)
          {
            uint64_t v46 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v46 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v9 = *(unsigned __int8 **)v55;
          }
          uint64_t v25 = sub_1885AC0(v10, v46, (char *)v9, a3);
LABEL_74:
          *(void *)unint64_t v55 = v25;
          if (!v25) {
            goto LABEL_104;
          }
LABEL_75:
          if (sub_11947B8((uint64_t)a3, (char **)v55, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_104:
        }
          *(void *)unint64_t v55 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v55;
    }
  }
}

char *sub_17DCAA0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 104);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 96);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_17:
      if ((v6 & 0x10) == 0) {
        goto LABEL_18;
      }
      goto LABEL_40;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_17;
  }
  uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_18:
    if ((v6 & 0x20) == 0) {
      goto LABEL_19;
    }
    goto LABEL_53;
  }
LABEL_40:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v20 = *(void *)(a1 + 80);
  *uint64_t v4 = 42;
  unsigned int v21 = *(_DWORD *)(v20 + 44);
  v4[1] = v21;
  if (v21 > 0x7F) {
    uint64_t v22 = sub_188A9CC(v21, v4 + 1);
  }
  else {
    uint64_t v22 = v4 + 2;
  }
  uint64_t v4 = sub_15B0C0C(v20, v22, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_19:
    if ((v6 & 4) == 0) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }
LABEL_53:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v26 = *(void *)(a1 + 88);
  *uint64_t v4 = 50;
  unsigned int v27 = *(_DWORD *)(v26 + 20);
  v4[1] = v27;
  if (v27 > 0x7F) {
    uint64_t v28 = sub_188A9CC(v27, v4 + 1);
  }
  else {
    uint64_t v28 = v4 + 2;
  }
  uint64_t v4 = sub_15B7AE4(v26, v28, a3);
  if ((v6 & 4) != 0) {
LABEL_20:
  }
    uint64_t v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_21:
  uint64_t v13 = *(unsigned int *)(a1 + 32);
  if ((int)v13 >= 1)
  {
    uint64_t v14 = 0;
    uint64_t v15 = 8 * v13;
    do
    {
      uint64_t v16 = *(void **)(*(void *)(a1 + 40) + v14 + 8);
      if (*((char *)v16 + 23) < 0)
      {
        int64_t v17 = v16[1];
        if (v17 > 127) {
          goto LABEL_32;
        }
      }
      else
      {
        int64_t v17 = *((unsigned __int8 *)v16 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v17)
      {
        *uint64_t v4 = 66;
        v4[1] = v17;
        if (*((char *)v16 + 23) < 0) {
          uint64_t v16 = (void *)*v16;
        }
        int v18 = v4 + 2;
        memcpy(v18, v16, v17);
        uint64_t v4 = &v18[v17];
        goto LABEL_30;
      }
LABEL_32:
      uint64_t v4 = (char *)sub_188A868(a3, 8, (uint64_t)v16, v4);
LABEL_30:
      v14 += 8;
    }
    while (v15 != v14);
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(int *)(a1 + 108);
    *uint64_t v4 = 72;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v23 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v25 = *(int *)(a1 + 112);
    *uint64_t v4 = 80;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unint64_t v29 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v30 = v29 >> 14;
          v29 >>= 7;
          *v4++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 11, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v31 = *(void *)(a1 + 8);
  if ((v31 & 1) == 0) {
    return v4;
  }
  unint64_t v33 = v31 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v33 + 31) < 0)
  {
    uint64_t v34 = *(void **)(v33 + 8);
    uint64_t v35 = *(void *)(v33 + 16);
  }
  else
  {
    uint64_t v34 = (void *)(v33 + 8);
    LODWORD(v35) = *(unsigned __int8 *)(v33 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v35)
  {
    uint64_t v36 = (int)v35;
    memcpy(v4, v34, (int)v35);
    v4 += v36;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v34, v35, v4);
}

uint64_t sub_17DCF58(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    int v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v8)
  {
    if (v8)
    {
      unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v8 & 2) == 0)
      {
LABEL_11:
        if ((v8 & 4) == 0) {
          goto LABEL_12;
        }
        goto LABEL_24;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_11;
    }
    unint64_t v12 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
    uint64_t v14 = *(void *)(v12 + 8);
    if ((v13 & 0x80u) == 0) {
      uint64_t v14 = v13;
    }
    v4 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 4) == 0)
    {
LABEL_12:
      if ((v8 & 8) == 0) {
        goto LABEL_13;
      }
      goto LABEL_27;
    }
LABEL_24:
    unint64_t v15 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
    uint64_t v17 = *(void *)(v15 + 8);
    if ((v16 & 0x80u) == 0) {
      uint64_t v17 = v16;
    }
    v4 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 8) == 0)
    {
LABEL_13:
      if ((v8 & 0x10) == 0) {
        goto LABEL_14;
      }
      goto LABEL_30;
    }
LABEL_27:
    unint64_t v18 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
    uint64_t v20 = *(void *)(v18 + 8);
    if ((v19 & 0x80u) == 0) {
      uint64_t v20 = v19;
    }
    v4 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 0x10) == 0)
    {
LABEL_14:
      if ((v8 & 0x20) == 0) {
        goto LABEL_15;
      }
      goto LABEL_31;
    }
LABEL_30:
    uint64_t v21 = sub_15B0D90(*(void *)(a1 + 80));
    v4 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 0x20) == 0)
    {
LABEL_15:
      if ((v8 & 0x40) == 0) {
        goto LABEL_16;
      }
      goto LABEL_32;
    }
LABEL_31:
    uint64_t v22 = sub_15B806C(*(void *)(a1 + 88));
    v4 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 0x40) == 0)
    {
LABEL_16:
      if ((v8 & 0x80) == 0) {
        goto LABEL_37;
      }
      goto LABEL_33;
    }
LABEL_32:
    v4 += ((9 * (__clz(*(void *)(a1 + 96) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v8 & 0x80) == 0) {
      goto LABEL_37;
    }
LABEL_33:
    int v23 = *(_DWORD *)(a1 + 104);
    if (v23 < 0) {
      uint64_t v24 = 11;
    }
    else {
      uint64_t v24 = ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v24;
  }
LABEL_37:
  if ((v8 & 0x300) != 0)
  {
    if ((v8 & 0x100) != 0)
    {
      int v25 = *(_DWORD *)(a1 + 108);
      if (v25 < 0) {
        uint64_t v26 = 11;
      }
      else {
        uint64_t v26 = ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v4 += v26;
    }
    if ((v8 & 0x200) != 0)
    {
      int v27 = *(_DWORD *)(a1 + 112);
      if (v27 < 0) {
        uint64_t v28 = 11;
      }
      else {
        uint64_t v28 = ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v4 += v28;
    }
  }
  uint64_t v29 = *(void *)(a1 + 8);
  if (v29)
  {
    unint64_t v31 = v29 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v31 + 31) < 0) {
      uint64_t v32 = *(void *)(v31 + 16);
    }
    else {
      uint64_t v32 = *(unsigned __int8 *)(v31 + 31);
    }
    v4 += v32;
  }
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_17DD278(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(a1 + 24, v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v9)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 48), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_31;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    uint64_t v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    sub_1881DF4((std::string **)(a1 + 56), v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_34;
    }
LABEL_31:
    uint64_t v17 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v18 = *(void *)(a1 + 8);
    uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (uint64_t *)*v19;
    }
    sub_1881DF4((std::string **)(a1 + 64), v17, v19);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_37;
    }
LABEL_34:
    uint64_t v20 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v21 = *(void *)(a1 + 8);
    uint64_t v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      uint64_t v22 = (uint64_t *)*v22;
    }
    sub_1881DF4((std::string **)(a1 + 72), v20, v22);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0) {
        goto LABEL_11;
      }
      goto LABEL_45;
    }
LABEL_37:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v23 = *(void *)(a1 + 80);
    if (!v23)
    {
      uint64_t v24 = *(void *)(a1 + 8);
      int v25 = (void *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
      if (v24) {
        int v25 = (void *)*v25;
      }
      uint64_t v23 = sub_15C1918((uint64_t)v25);
      *(void *)(a1 + 80) = v23;
    }
    if (*(void *)(a2 + 80)) {
      uint64_t v26 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      uint64_t v26 = &off_253F1A0;
    }
    sub_15B0E24(v23, (uint64_t)v26);
    if ((v9 & 0x20) == 0)
    {
LABEL_11:
      if ((v9 & 0x40) == 0) {
        goto LABEL_12;
      }
      goto LABEL_53;
    }
LABEL_45:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    int v27 = *(std::string **)(a1 + 88);
    if (!v27)
    {
      uint64_t v28 = *(void *)(a1 + 8);
      uint64_t v29 = (void *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
      if (v28) {
        uint64_t v29 = (void *)*v29;
      }
      int v27 = (std::string *)sub_15C1E94((uint64_t)v29);
      *(void *)(a1 + 88) = v27;
    }
    if (*(void *)(a2 + 88)) {
      unint64_t v30 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      unint64_t v30 = &off_253F3D0;
    }
    sub_15B86B8(v27, (uint64_t)v30);
    if ((v9 & 0x40) == 0)
    {
LABEL_12:
      if ((v9 & 0x80) == 0)
      {
LABEL_14:
        *(_DWORD *)(a1 + 16) |= v9;
        goto LABEL_15;
      }
LABEL_13:
      *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
      goto LABEL_14;
    }
LABEL_53:
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    if ((v9 & 0x80) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_15:
  if ((v9 & 0x300) != 0)
  {
    if ((v9 & 0x100) != 0) {
      *(_DWORD *)(a1 + 108) = *(_DWORD *)(a2 + 108);
    }
    if ((v9 & 0x200) != 0) {
      *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
    }
    *(_DWORD *)(a1 + 16) |= v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17DD52C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x10) != 0)
  {
    uint64_t result = sub_15B0F18(*(void *)(a1 + 80));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x20) == 0) {
    return 1;
  }
  uint64_t result = sub_15B8CAC(*(void *)(a1 + 88));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17DD578@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.VendorSpecificPlaceRefinementParameters");
}

uint64_t sub_17DD588(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24DDB98;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_17DD5F4(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17DD624(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17DD698(void *a1)
{
  sub_17DD624(a1);

  operator delete();
}

uint64_t *sub_17DD6D0(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_17DD6E0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v12 = a2;
  int v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    uint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    uint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_17DD7E0(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_17DD878(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_17DD8AC(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_17DD8C8()
{
  return 1;
}

void *sub_17DD8D0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.VendorSpecificPlaceRefinementResult");
}

uint64_t sub_17DD8E0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24DDC18;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    unsigned int v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unsigned int v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 32) = &qword_2550250;
  if ((v6 & 2) != 0)
  {
    uint64_t v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 32), (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 40) = &qword_2550250;
  if ((v6 & 4) != 0)
  {
    int v9 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v9 = (uint64_t *)*v9;
    }
    sub_1881DF4((std::string **)(a1 + 40), (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL), v9);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  if ((v6 & 8) != 0)
  {
    uint64_t v10 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v10 = (uint64_t *)*v10;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v10);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 56) = &qword_2550250;
  if ((v6 & 0x10) != 0)
  {
    uint64_t v11 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v11 = (uint64_t *)*v11;
    }
    sub_1881DF4((std::string **)(a1 + 56), (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL), v11);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 64) = &qword_2550250;
  if ((v6 & 0x20) != 0)
  {
    uint64_t v12 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 64), (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL), v12);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 72) = &qword_2550250;
  if ((v6 & 0x40) != 0)
  {
    uint64_t v13 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v13 = (uint64_t *)*v13;
    }
    sub_1881DF4((std::string **)(a1 + 72), (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL), v13);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 0x80) != 0) {
    operator new();
  }
  *(void *)(a1 + 80) = 0;
  if ((v6 & 0x100) != 0) {
    operator new();
  }
  *(void *)(a1 + 88) = 0;
  if ((v6 & 0x200) != 0) {
    operator new();
  }
  *(void *)(a1 + 96) = 0;
  if ((v6 & 0x400) != 0) {
    operator new();
  }
  *(void *)(a1 + 104) = 0;
  if ((v6 & 0x800) != 0) {
    operator new();
  }
  *(void *)(a1 + 112) = 0;
  long long v14 = *(_OWORD *)(a2 + 120);
  long long v15 = *(_OWORD *)(a2 + 136);
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = v15;
  *(_OWORD *)(a1 + 120) = v14;
  return a1;
}

void sub_17DDBDC()
{
}

void *sub_17DDC74(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_17DDCF8((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_17DDCF8(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 24);
  uint64_t v2 = (void ***)(a1 + 24);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  uint64_t result = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_254B2C8)
  {
    uint64_t v5 = *(void *)(a1 + 80);
    if (v5)
    {
      sub_15B3DFC(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 88);
    if (v6)
    {
      sub_17E0360(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 96);
    if (v7)
    {
      sub_17E0980(v7);
      operator delete();
    }
    uint64_t v8 = *(void **)(a1 + 104);
    if (v8)
    {
      sub_17E14E0(v8);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 112);
    if (result)
    {
      sub_17E0DF4((uint64_t)result);
      operator delete();
    }
  }
  return result;
}

void sub_17DDE74(void *a1)
{
  sub_17DDC74(a1);

  operator delete();
}

uint64_t sub_17DDEAC(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (!(_BYTE)v2) {
    goto LABEL_11;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_33;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_33;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_37:
    unint64_t v7 = *(void *)(result + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_41;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_41;
      }
    }
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_45:
    unint64_t v9 = *(void *)(result + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)unint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
      if ((v2 & 0x20) != 0) {
        goto LABEL_49;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
      if ((v2 & 0x20) != 0) {
        goto LABEL_49;
      }
    }
LABEL_8:
    if ((v2 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_53;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_33:
  unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_37;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_37;
    }
  }
LABEL_5:
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_41:
  unint64_t v8 = *(void *)(result + 48) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v8 + 23) < 0)
  {
    **(unsigned char **)unint64_t v8 = 0;
    *(void *)(v8 + 8) = 0;
    if ((v2 & 0x10) != 0) {
      goto LABEL_45;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v8 = 0;
    *(unsigned char *)(v8 + 23) = 0;
    if ((v2 & 0x10) != 0) {
      goto LABEL_45;
    }
  }
LABEL_7:
  if ((v2 & 0x20) == 0) {
    goto LABEL_8;
  }
LABEL_49:
  unint64_t v10 = *(void *)(result + 64) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v10 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v10 = 0;
    *(unsigned char *)(v10 + 23) = 0;
    if ((v2 & 0x40) != 0) {
      goto LABEL_53;
    }
LABEL_9:
    if ((v2 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  **(unsigned char **)unint64_t v10 = 0;
  *(void *)(v10 + 8) = 0;
  if ((v2 & 0x40) == 0) {
    goto LABEL_9;
  }
LABEL_53:
  unint64_t v11 = *(void *)(result + 72) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v11 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v11 = 0;
    *(unsigned char *)(v11 + 23) = 0;
    if ((v2 & 0x80) == 0) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t result = sub_15B043C(*(void *)(result + 80));
    goto LABEL_11;
  }
  **(unsigned char **)unint64_t v11 = 0;
  *(void *)(v11 + 8) = 0;
  if ((v2 & 0x80) != 0) {
    goto LABEL_10;
  }
LABEL_11:
  if ((v2 & 0xF00) == 0) {
    goto LABEL_17;
  }
  if ((v2 & 0x100) != 0)
  {
    uint64_t result = sub_17DE0E8(*(void *)(v1 + 88));
    if ((v2 & 0x200) == 0)
    {
LABEL_14:
      if ((v2 & 0x400) == 0) {
        goto LABEL_15;
      }
      goto LABEL_30;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_14;
  }
  uint64_t result = sub_17DE1A0(*(void *)(v1 + 96));
  if ((v2 & 0x400) == 0)
  {
LABEL_15:
    if ((v2 & 0x800) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_30:
  uint64_t result = sub_17DE1E4(*(void *)(v1 + 104));
  if ((v2 & 0x800) != 0) {
LABEL_16:
  }
    uint64_t result = sub_17DE4E0(*(void *)(v1 + 112));
LABEL_17:
  if ((v2 & 0xF000) != 0)
  {
    *(void *)(v1 + 120) = 0;
    *(void *)(v1 + 128) = 0;
    *(_DWORD *)(v1 + 144) = 0;
    *(void *)(v1 + 136) = 0;
  }
  if ((v2 & 0xF0000) != 0) {
    *(void *)(v1 + 148) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_17DE0E8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0) {
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    goto LABEL_17;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  *(unsigned char *)unint64_t v3 = 0;
  *(unsigned char *)(v3 + 23) = 0;
  if ((v1 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_17:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_17DE1A0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_17DE1E4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v1)
  {
    if ((v1 & 1) == 0)
    {
      if ((v1 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_15:
      unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v3 + 23) < 0)
      {
        **(unsigned char **)unint64_t v3 = 0;
        *(void *)(v3 + 8) = 0;
        if ((v1 & 4) != 0) {
          goto LABEL_19;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v3 = 0;
        *(unsigned char *)(v3 + 23) = 0;
        if ((v1 & 4) != 0) {
          goto LABEL_19;
        }
      }
LABEL_5:
      if ((v1 & 8) == 0) {
        goto LABEL_6;
      }
LABEL_23:
      unint64_t v5 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v5 + 23) < 0)
      {
        **(unsigned char **)unint64_t v5 = 0;
        *(void *)(v5 + 8) = 0;
        if ((v1 & 0x10) != 0) {
          goto LABEL_27;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v5 = 0;
        *(unsigned char *)(v5 + 23) = 0;
        if ((v1 & 0x10) != 0) {
          goto LABEL_27;
        }
      }
LABEL_7:
      if ((v1 & 0x20) == 0) {
        goto LABEL_8;
      }
LABEL_31:
      unint64_t v7 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v7 + 23) < 0)
      {
        **(unsigned char **)unint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
        if ((v1 & 0x40) != 0) {
          goto LABEL_35;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v7 = 0;
        *(unsigned char *)(v7 + 23) = 0;
        if ((v1 & 0x40) != 0) {
          goto LABEL_35;
        }
      }
LABEL_9:
      if ((v1 & 0x80) == 0) {
        goto LABEL_42;
      }
LABEL_39:
      unint64_t v9 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v9 + 23) < 0)
      {
        **(unsigned char **)unint64_t v9 = 0;
        *(void *)(v9 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v9 = 0;
        *(unsigned char *)(v9 + 23) = 0;
      }
      goto LABEL_42;
    }
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_15;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_19:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      if ((v1 & 8) != 0) {
        goto LABEL_23;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v1 & 8) != 0) {
        goto LABEL_23;
      }
    }
LABEL_6:
    if ((v1 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_27:
    unint64_t v6 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v1 & 0x20) != 0) {
        goto LABEL_31;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v1 & 0x20) != 0) {
        goto LABEL_31;
      }
    }
LABEL_8:
    if ((v1 & 0x40) == 0) {
      goto LABEL_9;
    }
LABEL_35:
    unint64_t v8 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
      if ((v1 & 0x80) == 0) {
        goto LABEL_42;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
      if ((v1 & 0x80) == 0) {
        goto LABEL_42;
      }
    }
    goto LABEL_39;
  }
LABEL_42:
  if ((v1 & 0x3F00) == 0) {
    goto LABEL_73;
  }
  if ((v1 & 0x100) == 0)
  {
    if ((v1 & 0x200) == 0) {
      goto LABEL_45;
    }
LABEL_54:
    unint64_t v11 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v11 + 23) < 0)
    {
      **(unsigned char **)unint64_t v11 = 0;
      *(void *)(v11 + 8) = 0;
      if ((v1 & 0x400) != 0) {
        goto LABEL_58;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v11 = 0;
      *(unsigned char *)(v11 + 23) = 0;
      if ((v1 & 0x400) != 0) {
        goto LABEL_58;
      }
    }
LABEL_46:
    if ((v1 & 0x800) == 0) {
      goto LABEL_47;
    }
LABEL_62:
    unint64_t v13 = *(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v13 + 23) < 0)
    {
      **(unsigned char **)unint64_t v13 = 0;
      *(void *)(v13 + 8) = 0;
      if ((v1 & 0x1000) != 0) {
        goto LABEL_66;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v13 = 0;
      *(unsigned char *)(v13 + 23) = 0;
      if ((v1 & 0x1000) != 0) {
        goto LABEL_66;
      }
    }
LABEL_48:
    if ((v1 & 0x2000) == 0) {
      goto LABEL_73;
    }
LABEL_70:
    unint64_t v15 = *(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v15 + 23) < 0)
    {
      **(unsigned char **)unint64_t v15 = 0;
      *(void *)(v15 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v15 = 0;
      *(unsigned char *)(v15 + 23) = 0;
    }
    goto LABEL_73;
  }
  unint64_t v10 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v10 + 23) < 0)
  {
    **(unsigned char **)unint64_t v10 = 0;
    *(void *)(v10 + 8) = 0;
    if ((v1 & 0x200) != 0) {
      goto LABEL_54;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v10 = 0;
    *(unsigned char *)(v10 + 23) = 0;
    if ((v1 & 0x200) != 0) {
      goto LABEL_54;
    }
  }
LABEL_45:
  if ((v1 & 0x400) == 0) {
    goto LABEL_46;
  }
LABEL_58:
  unint64_t v12 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v12 + 23) < 0)
  {
    **(unsigned char **)unint64_t v12 = 0;
    *(void *)(v12 + 8) = 0;
    if ((v1 & 0x800) != 0) {
      goto LABEL_62;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v12 = 0;
    *(unsigned char *)(v12 + 23) = 0;
    if ((v1 & 0x800) != 0) {
      goto LABEL_62;
    }
  }
LABEL_47:
  if ((v1 & 0x1000) == 0) {
    goto LABEL_48;
  }
LABEL_66:
  unint64_t v14 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v14 + 23) < 0)
  {
    **(unsigned char **)unint64_t v14 = 0;
    *(void *)(v14 + 8) = 0;
    if ((v1 & 0x2000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_70;
  }
  *(unsigned char *)unint64_t v14 = 0;
  *(unsigned char *)(v14 + 23) = 0;
  if ((v1 & 0x2000) != 0) {
    goto LABEL_70;
  }
LABEL_73:
  char v17 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 128) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v17) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_17DE4E0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_17DE524(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v66 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v66, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (unsigned __int8 *)(*(void *)v66 + 1);
    unsigned int v9 = **(unsigned char **)v66;
    if ((char)**(unsigned char **)v66 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v66, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (unsigned __int8 *)(*(void *)v66 + 2);
      }
    }
    *(void *)uint64_t v66 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_109;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 24);
        goto LABEL_89;
      case 2u:
        if (v9 != 18) {
          goto LABEL_109;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 32);
        goto LABEL_89;
      case 3u:
        if (v9 != 25) {
          goto LABEL_109;
        }
        uint64_t v17 = *(void *)v8;
        uint64_t v16 = v8 + 8;
        v5 |= 0x1000u;
        *(void *)(a1 + 120) = v17;
        goto LABEL_27;
      case 4u:
        if (v9 != 34) {
          goto LABEL_109;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v18 = *(void *)(a1 + 80);
        if (!v18)
        {
          uint64_t v19 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v19 = (void *)*v19;
          }
          uint64_t v18 = sub_15C1CB4((uint64_t)v19);
          *(void *)(a1 + 80) = v18;
          unint64_t v8 = *(unsigned __int8 **)v66;
        }
        uint64_t v20 = (uint64_t)sub_11B3E48(a3, v18, v8);
        goto LABEL_90;
      case 5u:
        if (v9 != 41) {
          goto LABEL_109;
        }
        uint64_t v21 = *(void *)v8;
        uint64_t v16 = v8 + 8;
        v5 |= 0x2000u;
        *(void *)(a1 + 128) = v21;
LABEL_27:
        *(void *)uint64_t v66 = v16;
        goto LABEL_91;
      case 6u:
        if (v9 != 50) {
          goto LABEL_109;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v22 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 40);
        goto LABEL_89;
      case 7u:
        if (v9 != 58) {
          goto LABEL_109;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v23 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
        if (v23) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 48);
        goto LABEL_89;
      case 8u:
        if (v9 != 64) {
          goto LABEL_109;
        }
        uint64_t v24 = (char *)(v8 + 1);
        unint64_t v25 = *v8;
        if ((char)*v8 < 0)
        {
          unint64_t v25 = v25 + (*v24 << 7) - 128;
          if (*v24 < 0) {
            uint64_t v24 = (char *)sub_188C138((uint64_t)v8, v25);
          }
          else {
            uint64_t v24 = (char *)(v8 + 2);
          }
        }
        v5 |= 0x4000u;
        *(void *)uint64_t v66 = v24;
        *(void *)(a1 + 136) = -(uint64_t)(v25 & 1) ^ (v25 >> 1);
        if (!v24) {
          goto LABEL_141;
        }
        goto LABEL_91;
      case 9u:
        if (v9 != 72) {
          goto LABEL_109;
        }
        v5 |= 0x10000u;
        uint64_t v26 = (char *)(v8 + 1);
        uint64_t v27 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_44;
        }
        int v28 = *v26;
        uint64_t v27 = v27 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          uint64_t v56 = sub_188C138((uint64_t)v8, v27);
          *(void *)uint64_t v66 = v56;
          *(unsigned char *)(a1 + 148) = v57 != 0;
          if (!v56) {
            goto LABEL_141;
          }
        }
        else
        {
          uint64_t v26 = (char *)(v8 + 2);
LABEL_44:
          *(void *)uint64_t v66 = v26;
          *(unsigned char *)(a1 + 148) = v27 != 0;
        }
        goto LABEL_91;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_109;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v29 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
        if (v29) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 56);
        goto LABEL_89;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_109;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v30 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
        if (v30) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 64);
        goto LABEL_89;
      case 0xCu:
        if (v9 != 96) {
          goto LABEL_109;
        }
        unint64_t v31 = (char *)(v8 + 1);
        unint64_t v32 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_57;
        }
        int v33 = *v31;
        int v34 = v32 + (v33 << 7);
        unint64_t v32 = (v34 - 128);
        if (v33 < 0)
        {
          *(void *)uint64_t v66 = sub_188C138((uint64_t)v8, (v34 - 128));
          if (!*(void *)v66) {
            goto LABEL_141;
          }
          unint64_t v32 = v58;
        }
        else
        {
          unint64_t v31 = (char *)(v8 + 2);
LABEL_57:
          *(void *)uint64_t v66 = v31;
        }
        if (v32 <= 6)
        {
          *(_DWORD *)(a1 + 16) |= 0x8000u;
          *(_DWORD *)(a1 + 144) = v32;
          goto LABEL_91;
        }
        if (*v7) {
          uint64_t v64 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v64 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v65 = 12;
        goto LABEL_135;
      case 0xDu:
        if (v9 != 106) {
          goto LABEL_109;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        uint64_t v35 = *(void **)(a1 + 88);
        if (!v35)
        {
          uint64_t v36 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v36 = (void *)*v36;
          }
          uint64_t v35 = sub_1833A34((uint64_t)v36);
          *(void *)(a1 + 88) = v35;
          unint64_t v8 = *(unsigned __int8 **)v66;
        }
        uint64_t v20 = sub_17DED20(a3, (uint64_t)v35, v8);
        goto LABEL_90;
      case 0xEu:
        if (v9 != 114) {
          goto LABEL_109;
        }
        *(_DWORD *)(a1 + 16) |= 0x200u;
        unint64_t v37 = *(void **)(a1 + 96);
        if (!v37)
        {
          int v38 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v38 = (void *)*v38;
          }
          unint64_t v37 = sub_1833ABC((uint64_t)v38);
          *(void *)(a1 + 96) = v37;
          unint64_t v8 = *(unsigned __int8 **)v66;
        }
        uint64_t v20 = sub_17DEDB0(a3, (uint64_t)v37, v8);
        goto LABEL_90;
      case 0xFu:
        if (v9 != 122) {
          goto LABEL_109;
        }
        *(_DWORD *)(a1 + 16) |= 0x400u;
        uint64_t v39 = *(void *)(a1 + 104);
        if (!v39)
        {
          uint64_t v40 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v40 = (void *)*v40;
          }
          uint64_t v39 = sub_1833BC4((uint64_t)v40);
          *(void *)(a1 + 104) = v39;
          unint64_t v8 = *(unsigned __int8 **)v66;
        }
        uint64_t v20 = sub_17DEE40(a3, v39, v8);
        goto LABEL_90;
      case 0x10u:
        if (v9 != 128) {
          goto LABEL_109;
        }
        int v41 = (char *)(v8 + 1);
        unint64_t v32 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_82;
        }
        int v42 = *v41;
        int v43 = v32 + (v42 << 7);
        unint64_t v32 = (v43 - 128);
        if (v42 < 0)
        {
          *(void *)uint64_t v66 = sub_188C138((uint64_t)v8, (v43 - 128));
          if (!*(void *)v66) {
            goto LABEL_141;
          }
          unint64_t v32 = v59;
        }
        else
        {
          int v41 = (char *)(v8 + 2);
LABEL_82:
          *(void *)uint64_t v66 = v41;
        }
        if (v32 > 3)
        {
          if (*v7) {
            uint64_t v64 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v64 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v65 = 16;
LABEL_135:
          sub_188C020(v65, v32, v64);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x80000u;
          *(_DWORD *)(a1 + 152) = v32;
        }
        goto LABEL_91;
      case 0x11u:
        if (v9 != 138) {
          goto LABEL_109;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v44 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v44 & 0xFFFFFFFFFFFFFFFCLL);
        if (v44) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 72);
LABEL_89:
        BOOL v45 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v20 = (uint64_t)sub_188C244(v45, *(char **)v66, (uint64_t)a3);
        goto LABEL_90;
      case 0x12u:
        if (v9 != 144) {
          goto LABEL_109;
        }
        v5 |= 0x20000u;
        uint64_t v46 = (char *)(v8 + 1);
        uint64_t v47 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_97;
        }
        int v48 = *v46;
        uint64_t v47 = v47 + (v48 << 7) - 128;
        if (v48 < 0)
        {
          uint64_t v60 = sub_188C138((uint64_t)v8, v47);
          *(void *)uint64_t v66 = v60;
          *(unsigned char *)(a1 + 149) = v61 != 0;
          if (!v60) {
            goto LABEL_141;
          }
        }
        else
        {
          uint64_t v46 = (char *)(v8 + 2);
LABEL_97:
          *(void *)uint64_t v66 = v46;
          *(unsigned char *)(a1 + 149) = v47 != 0;
        }
        goto LABEL_91;
      case 0x13u:
        if (v9 != 152) {
          goto LABEL_109;
        }
        v5 |= 0x40000u;
        uint64_t v49 = (char *)(v8 + 1);
        uint64_t v50 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_102;
        }
        int v51 = *v49;
        uint64_t v50 = v50 + (v51 << 7) - 128;
        if (v51 < 0)
        {
          uint64_t v62 = sub_188C138((uint64_t)v8, v50);
          *(void *)uint64_t v66 = v62;
          *(unsigned char *)(a1 + 150) = v63 != 0;
          if (!v62) {
            goto LABEL_141;
          }
        }
        else
        {
          uint64_t v49 = (char *)(v8 + 2);
LABEL_102:
          *(void *)uint64_t v66 = v49;
          *(unsigned char *)(a1 + 150) = v50 != 0;
        }
        goto LABEL_91;
      case 0x14u:
        if (v9 != 162) {
          goto LABEL_109;
        }
        *(_DWORD *)(a1 + 16) |= 0x800u;
        unint64_t v52 = *(void **)(a1 + 112);
        if (!v52)
        {
          uint64_t v53 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v53 = (void *)*v53;
          }
          unint64_t v52 = sub_1833B40((uint64_t)v53);
          *(void *)(a1 + 112) = v52;
          unint64_t v8 = *(unsigned __int8 **)v66;
        }
        uint64_t v20 = sub_17DEED0(a3, (uint64_t)v52, v8);
        goto LABEL_90;
      default:
LABEL_109:
        if (v9) {
          BOOL v54 = (v9 & 7) == 4;
        }
        else {
          BOOL v54 = 1;
        }
        if (!v54)
        {
          if (*v7)
          {
            unint64_t v55 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v55 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(unsigned __int8 **)v66;
          }
          uint64_t v20 = (uint64_t)sub_1885AC0(v9, v55, (char *)v8, a3);
LABEL_90:
          *(void *)uint64_t v66 = v20;
          if (!v20) {
            goto LABEL_141;
          }
LABEL_91:
          if (sub_11947B8((uint64_t)a3, (char **)v66, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_141:
        }
          *(void *)uint64_t v66 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v66;
    }
  }
}

uint64_t sub_17DED20(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17E0464(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_17DEDB0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17E0A58(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_17DEE40(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17E16F4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_17DEED0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17E0ECC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_17DEF60(uint64_t a1, unsigned char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 0x1000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x1000) == 0)
  {
LABEL_4:
    if ((v6 & 0x80) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_12:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 120);
  *unint64_t v4 = 25;
  *(void *)(v4 + 1) = v7;
  v4 += 9;
  if ((v6 & 0x80) == 0)
  {
LABEL_5:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_15:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v8 = *(void *)(a1 + 80);
  *unint64_t v4 = 34;
  unsigned int v9 = *(_DWORD *)(v8 + 44);
  v4[1] = v9;
  if (v9 > 0x7F) {
    unsigned int v10 = sub_188A9CC(v9, v4 + 1);
  }
  else {
    unsigned int v10 = v4 + 2;
  }
  unint64_t v4 = sub_15B43E4(v8, v10, a3);
  if ((v6 & 0x2000) == 0)
  {
LABEL_6:
    if ((v6 & 4) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }
LABEL_21:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v11 = *(void *)(a1 + 128);
  *unint64_t v4 = 41;
  *(void *)(v4 + 1) = v11;
  v4 += 9;
  if ((v6 & 4) == 0)
  {
LABEL_7:
    if ((v6 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_24:
  unint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_8:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_26;
  }
LABEL_25:
  unint64_t v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x4000) == 0) {
    goto LABEL_32;
  }
LABEL_26:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v12 = *(void *)(a1 + 136);
  *unint64_t v4 = 64;
  unint64_t v13 = (2 * v12) ^ (v12 >> 63);
  v4[1] = v13;
  if (v13 > 0x7F)
  {
    v4[1] = v13 | 0x80;
    unint64_t v14 = v13 >> 7;
    v4[2] = v13 >> 7;
    v4 += 3;
    if (v13 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v15 = v14 >> 14;
        v14 >>= 7;
        *v4++ = v14;
      }
      while (v15);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_32:
  if ((v6 & 0x10000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v16 = *(unsigned char *)(a1 + 148);
    *unint64_t v4 = 72;
    v4[1] = v16;
    v4 += 2;
    if ((v6 & 0x10) == 0)
    {
LABEL_34:
      if ((v6 & 0x20) == 0) {
        goto LABEL_35;
      }
      goto LABEL_41;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_34;
  }
  unint64_t v4 = sub_117A0AC(a3, 10, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0)
  {
LABEL_35:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_42;
  }
LABEL_41:
  unint64_t v4 = sub_117A0AC(a3, 11, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x8000) == 0) {
    goto LABEL_48;
  }
LABEL_42:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v17 = *(int *)(a1 + 144);
  *unint64_t v4 = 96;
  v4[1] = v17;
  if (v17 > 0x7F)
  {
    v4[1] = v17 | 0x80;
    unint64_t v18 = v17 >> 7;
    v4[2] = v17 >> 7;
    v4 += 3;
    if (v17 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v19 = v18 >> 14;
        v18 >>= 7;
        *v4++ = v18;
      }
      while (v19);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_48:
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v20 = *(void *)(a1 + 88);
    *unint64_t v4 = 106;
    unsigned int v21 = *(_DWORD *)(v20 + 20);
    v4[1] = v21;
    if (v21 > 0x7F) {
      uint64_t v22 = sub_188A9CC(v21, v4 + 1);
    }
    else {
      uint64_t v22 = v4 + 2;
    }
    unint64_t v4 = sub_17E0654(v20, v22, a3);
    if ((v6 & 0x200) == 0)
    {
LABEL_50:
      if ((v6 & 0x400) == 0) {
        goto LABEL_51;
      }
      goto LABEL_65;
    }
  }
  else if ((v6 & 0x200) == 0)
  {
    goto LABEL_50;
  }
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v23 = *(void *)(a1 + 96);
  *unint64_t v4 = 114;
  unsigned int v24 = *(_DWORD *)(v23 + 20);
  v4[1] = v24;
  if (v24 > 0x7F) {
    unint64_t v25 = sub_188A9CC(v24, v4 + 1);
  }
  else {
    unint64_t v25 = v4 + 2;
  }
  unint64_t v4 = sub_17E0BB0(v23, v25, a3);
  if ((v6 & 0x400) == 0)
  {
LABEL_51:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_71;
  }
LABEL_65:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v26 = *(void *)(a1 + 104);
  *unint64_t v4 = 122;
  unsigned int v27 = *(_DWORD *)(v26 + 20);
  v4[1] = v27;
  if (v27 > 0x7F) {
    int v28 = sub_188A9CC(v27, v4 + 1);
  }
  else {
    int v28 = v4 + 2;
  }
  unint64_t v4 = sub_17E1C28(v26, v28, a3);
  if ((v6 & 0x80000) != 0)
  {
LABEL_71:
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v29 = *(int *)(a1 + 152);
    *(_WORD *)unint64_t v4 = 384;
    v4[2] = v29;
    if (v29 > 0x7F)
    {
      v4[2] = v29 | 0x80;
      unint64_t v30 = v29 >> 7;
      v4[3] = v29 >> 7;
      v4 += 4;
      if (v29 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v31 = v30 >> 14;
          v30 >>= 7;
          *v4++ = v30;
        }
        while (v31);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_77:
  if ((v6 & 0x40) != 0)
  {
    unint64_t v4 = sub_117A0AC(a3, 17, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 0x20000) == 0)
    {
LABEL_79:
      if ((v6 & 0x40000) == 0) {
        goto LABEL_80;
      }
      goto LABEL_86;
    }
  }
  else if ((v6 & 0x20000) == 0)
  {
    goto LABEL_79;
  }
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v32 = *(unsigned char *)(a1 + 149);
  *(_WORD *)unint64_t v4 = 400;
  v4[2] = v32;
  v4 += 3;
  if ((v6 & 0x40000) == 0)
  {
LABEL_80:
    if ((v6 & 0x800) == 0) {
      goto LABEL_95;
    }
    goto LABEL_89;
  }
LABEL_86:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v33 = *(unsigned char *)(a1 + 150);
  *(_WORD *)unint64_t v4 = 408;
  v4[2] = v33;
  v4 += 3;
  if ((v6 & 0x800) != 0)
  {
LABEL_89:
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v34 = *(void *)(a1 + 112);
    *(_WORD *)unint64_t v4 = 418;
    unsigned int v35 = *(_DWORD *)(v34 + 20);
    v4[2] = v35;
    if (v35 > 0x7F) {
      uint64_t v36 = sub_188A9CC(v35, v4 + 2);
    }
    else {
      uint64_t v36 = v4 + 3;
    }
    unint64_t v4 = sub_17E1024(v34, v36, a3);
  }
LABEL_95:
  uint64_t v37 = *(void *)(a1 + 8);
  if ((v37 & 1) == 0) {
    return v4;
  }
  unint64_t v39 = v37 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v39 + 31) < 0)
  {
    uint64_t v40 = *(void **)(v39 + 8);
    uint64_t v41 = *(void *)(v39 + 16);
  }
  else
  {
    uint64_t v40 = (void *)(v39 + 8);
    LODWORD(v41) = *(unsigned __int8 *)(v39 + 31);
  }
  if (*a3 - (void)v4 >= (int)v41)
  {
    uint64_t v42 = (int)v41;
    memcpy(v4, v40, (int)v41);
    v4 += v42;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v40, v41, v4);
}