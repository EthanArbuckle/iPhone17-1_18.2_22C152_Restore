uint64_t sub_165F7A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unsigned int v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  int v179;
  uint64_t v180;
  uint64_t v181;
  int v182;
  uint64_t v183;
  uint64_t v184;
  int v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  uint64_t v197;

  v2 = sub_1889280(a1 + 16);
  v3 = sub_188D5A8((unsigned int *)(a1 + 56));
  v4 = *(int *)(a1 + 80);
  v5 = v3 + v2 + *(unsigned int *)(a1 + 56) + 2 * v4;
  v6 = *(void *)(a1 + 88);
  if (v6) {
    v7 = (uint64_t *)(v6 + 8);
  }
  else {
    v7 = 0;
  }
  if (v4)
  {
    v8 = 8 * v4;
    do
    {
      v9 = *v7++;
      v10 = sub_15BAE94(v9);
      v5 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6);
      v8 -= 8;
    }
    while (v8);
  }
  v11 = *(int *)(a1 + 104);
  v12 = v5 + 2 * v11;
  v13 = *(void *)(a1 + 112);
  if (v13) {
    v14 = (uint64_t *)(v13 + 8);
  }
  else {
    v14 = 0;
  }
  if (v11)
  {
    v15 = 8 * v11;
    do
    {
      v16 = *v14++;
      v17 = sub_14770A8(v16);
      v12 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6);
      v15 -= 8;
    }
    while (v15);
  }
  v18 = *(int *)(a1 + 128);
  v19 = v12 + 2 * v18;
  v20 = *(void *)(a1 + 136);
  if (v20) {
    v21 = (uint64_t *)(v20 + 8);
  }
  else {
    v21 = 0;
  }
  if (v18)
  {
    v22 = 8 * v18;
    do
    {
      v23 = *v21++;
      v24 = sub_1655908(v23);
      v19 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6);
      v22 -= 8;
    }
    while (v22);
  }
  v25 = sub_188D5A8((unsigned int *)(a1 + 144));
  v26 = *(int *)(a1 + 168);
  v27 = v25 + v19 + 2 * (v26 + *(unsigned int *)(a1 + 144));
  v28 = *(void *)(a1 + 176);
  if (v28) {
    v29 = (uint64_t *)(v28 + 8);
  }
  else {
    v29 = 0;
  }
  if (v26)
  {
    v30 = 8 * v26;
    do
    {
      v31 = *v29++;
      v32 = sub_1654570(v31);
      v27 += v32 + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6);
      v30 -= 8;
    }
    while (v30);
  }
  v33 = *(int *)(a1 + 192);
  v34 = v27 + 2 * v33;
  v35 = *(void *)(a1 + 200);
  if (v35) {
    v36 = (uint64_t *)(v35 + 8);
  }
  else {
    v36 = 0;
  }
  if (v33)
  {
    v37 = 8 * v33;
    do
    {
      v38 = *v36++;
      v39 = sub_1652ABC(v38);
      v34 += v39 + ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6);
      v37 -= 8;
    }
    while (v37);
  }
  v40 = *(int *)(a1 + 216);
  v41 = v34 + 2 * v40;
  v42 = *(void *)(a1 + 224);
  if (v42) {
    v43 = (uint64_t *)(v42 + 8);
  }
  else {
    v43 = 0;
  }
  if (v40)
  {
    v44 = 8 * v40;
    do
    {
      v45 = *v43++;
      v46 = sub_1498324(v45);
      v41 += v46 + ((9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6);
      v44 -= 8;
    }
    while (v44);
  }
  v47 = *(int *)(a1 + 240);
  v48 = v41 + 2 * v47;
  v49 = *(void *)(a1 + 248);
  if (v49) {
    v50 = (uint64_t *)(v49 + 8);
  }
  else {
    v50 = 0;
  }
  if (v47)
  {
    v51 = 8 * v47;
    do
    {
      v52 = *v50++;
      v53 = sub_1654570(v52);
      v48 += v53 + ((9 * (__clz(v53 | 1) ^ 0x1F) + 73) >> 6);
      v51 -= 8;
    }
    while (v51);
  }
  v54 = *(int *)(a1 + 264);
  v55 = v48 + 2 * v54;
  v56 = *(void *)(a1 + 272);
  if (v56) {
    v57 = (uint64_t *)(v56 + 8);
  }
  else {
    v57 = 0;
  }
  if (v54)
  {
    v58 = 8 * v54;
    do
    {
      v59 = *v57++;
      v60 = sub_1663A18(v59);
      v55 += v60 + ((9 * (__clz(v60 | 1) ^ 0x1F) + 73) >> 6);
      v58 -= 8;
    }
    while (v58);
  }
  v61 = *(int *)(a1 + 288);
  v62 = v55 + 2 * v61;
  v63 = *(void *)(a1 + 296);
  if (v63) {
    v64 = (uint64_t *)(v63 + 8);
  }
  else {
    v64 = 0;
  }
  if (v61)
  {
    v65 = 8 * v61;
    do
    {
      v66 = *v64++;
      v67 = sub_166202C(v66);
      v62 += v67 + ((9 * (__clz(v67 | 1) ^ 0x1F) + 73) >> 6);
      v65 -= 8;
    }
    while (v65);
  }
  v68 = *(unsigned int *)(a1 + 312);
  v69 = v62 + 2 * v68;
  if ((int)v68 >= 1)
  {
    v70 = (uint64_t *)(*(void *)(a1 + 320) + 8);
    do
    {
      v71 = *v70++;
      v72 = *(unsigned __int8 *)(v71 + 23);
      v73 = *(void *)(v71 + 8);
      if ((v72 & 0x80u) == 0) {
        v73 = v72;
      }
      v69 += v73 + ((9 * (__clz(v73 | 1) ^ 0x1F) + 73) >> 6);
      --v68;
    }
    while (v68);
  }
  v74 = *(int *)(a1 + 336);
  v75 = v69 + 2 * v74;
  v76 = *(void *)(a1 + 344);
  if (v76) {
    v77 = (uint64_t *)(v76 + 8);
  }
  else {
    v77 = 0;
  }
  if (v74)
  {
    v78 = 8 * v74;
    do
    {
      v79 = *v77++;
      v80 = sub_16627E8(v79);
      v75 += v80 + ((9 * (__clz(v80 | 1) ^ 0x1F) + 73) >> 6);
      v78 -= 8;
    }
    while (v78);
  }
  v81 = *(int *)(a1 + 360);
  v82 = v75 + 2 * v81;
  v83 = *(void *)(a1 + 368);
  if (v83) {
    v84 = (uint64_t *)(v83 + 8);
  }
  else {
    v84 = 0;
  }
  if (v81)
  {
    v85 = 8 * v81;
    do
    {
      v86 = *v84++;
      v87 = sub_12A1464(v86);
      v82 += v87 + ((9 * (__clz(v87 | 1) ^ 0x1F) + 73) >> 6);
      v85 -= 8;
    }
    while (v85);
  }
  v88 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v88) {
    goto LABEL_84;
  }
  if (v88)
  {
    v117 = *(void *)(a1 + 376) & 0xFFFFFFFFFFFFFFFELL;
    v118 = *(unsigned __int8 *)(v117 + 23);
    v119 = *(void *)(v117 + 8);
    if ((v118 & 0x80u) == 0) {
      v119 = v118;
    }
    v82 += v119 + ((9 * (__clz(v119 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v88 & 2) == 0)
    {
LABEL_75:
      if ((v88 & 4) == 0) {
        goto LABEL_76;
      }
      goto LABEL_177;
    }
  }
  else if ((v88 & 2) == 0)
  {
    goto LABEL_75;
  }
  v120 = *(void *)(a1 + 384) & 0xFFFFFFFFFFFFFFFELL;
  v121 = *(unsigned __int8 *)(v120 + 23);
  v122 = *(void *)(v120 + 8);
  if ((v121 & 0x80u) == 0) {
    v122 = v121;
  }
  v82 += v122 + ((9 * (__clz(v122 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v88 & 4) == 0)
  {
LABEL_76:
    if ((v88 & 8) == 0) {
      goto LABEL_77;
    }
    goto LABEL_180;
  }
LABEL_177:
  v123 = *(void *)(a1 + 392) & 0xFFFFFFFFFFFFFFFELL;
  v124 = *(unsigned __int8 *)(v123 + 23);
  v125 = *(void *)(v123 + 8);
  if ((v124 & 0x80u) == 0) {
    v125 = v124;
  }
  v82 += v125 + ((9 * (__clz(v125 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v88 & 8) == 0)
  {
LABEL_77:
    if ((v88 & 0x10) == 0) {
      goto LABEL_78;
    }
    goto LABEL_183;
  }
LABEL_180:
  v126 = *(void *)(a1 + 400) & 0xFFFFFFFFFFFFFFFELL;
  v127 = *(unsigned __int8 *)(v126 + 23);
  v128 = *(void *)(v126 + 8);
  if ((v127 & 0x80u) == 0) {
    v128 = v127;
  }
  v82 += v128 + ((9 * (__clz(v128 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v88 & 0x10) == 0)
  {
LABEL_78:
    if ((v88 & 0x20) == 0) {
      goto LABEL_79;
    }
LABEL_186:
    v132 = *(void *)(a1 + 416) & 0xFFFFFFFFFFFFFFFELL;
    v133 = *(unsigned __int8 *)(v132 + 23);
    v134 = *(void *)(v132 + 8);
    if ((v133 & 0x80u) == 0) {
      v134 = v133;
    }
    v82 += v134 + ((9 * (__clz(v134 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v88 & 0x40) == 0)
    {
LABEL_80:
      if ((v88 & 0x80) == 0) {
        goto LABEL_84;
      }
      goto LABEL_81;
    }
    goto LABEL_189;
  }
LABEL_183:
  v129 = *(void *)(a1 + 408) & 0xFFFFFFFFFFFFFFFELL;
  v130 = *(unsigned __int8 *)(v129 + 23);
  v131 = *(void *)(v129 + 8);
  if ((v130 & 0x80u) == 0) {
    v131 = v130;
  }
  v82 += v131 + ((9 * (__clz(v131 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v88 & 0x20) != 0) {
    goto LABEL_186;
  }
LABEL_79:
  if ((v88 & 0x40) == 0) {
    goto LABEL_80;
  }
LABEL_189:
  v135 = *(void *)(a1 + 424) & 0xFFFFFFFFFFFFFFFELL;
  v136 = *(unsigned __int8 *)(v135 + 23);
  v137 = *(void *)(v135 + 8);
  if ((v136 & 0x80u) == 0) {
    v137 = v136;
  }
  v82 += v137 + ((9 * (__clz(v137 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v88 & 0x80) != 0)
  {
LABEL_81:
    v89 = *(void *)(a1 + 432) & 0xFFFFFFFFFFFFFFFELL;
    v90 = *(unsigned __int8 *)(v89 + 23);
    v91 = *(void *)(v89 + 8);
    if ((v90 & 0x80u) == 0) {
      v91 = v90;
    }
    v82 += v91 + ((9 * (__clz(v91 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_84:
  if ((v88 & 0xFF00) == 0) {
    goto LABEL_96;
  }
  if ((v88 & 0x100) != 0)
  {
    v138 = *(void *)(a1 + 440) & 0xFFFFFFFFFFFFFFFELL;
    v139 = *(unsigned __int8 *)(v138 + 23);
    v140 = *(void *)(v138 + 8);
    if ((v139 & 0x80u) == 0) {
      v140 = v139;
    }
    v82 += v140 + ((9 * (__clz(v140 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v88 & 0x200) == 0)
    {
LABEL_87:
      if ((v88 & 0x400) == 0) {
        goto LABEL_88;
      }
      goto LABEL_199;
    }
  }
  else if ((v88 & 0x200) == 0)
  {
    goto LABEL_87;
  }
  v141 = *(void *)(a1 + 448) & 0xFFFFFFFFFFFFFFFELL;
  v142 = *(unsigned __int8 *)(v141 + 23);
  v143 = *(void *)(v141 + 8);
  if ((v142 & 0x80u) == 0) {
    v143 = v142;
  }
  v82 += v143 + ((9 * (__clz(v143 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v88 & 0x400) == 0)
  {
LABEL_88:
    if ((v88 & 0x800) == 0) {
      goto LABEL_89;
    }
    goto LABEL_202;
  }
LABEL_199:
  v144 = *(void *)(a1 + 456) & 0xFFFFFFFFFFFFFFFELL;
  v145 = *(unsigned __int8 *)(v144 + 23);
  v146 = *(void *)(v144 + 8);
  if ((v145 & 0x80u) == 0) {
    v146 = v145;
  }
  v82 += v146 + ((9 * (__clz(v146 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v88 & 0x800) == 0)
  {
LABEL_89:
    if ((v88 & 0x1000) == 0) {
      goto LABEL_90;
    }
    goto LABEL_205;
  }
LABEL_202:
  v147 = *(void *)(a1 + 464) & 0xFFFFFFFFFFFFFFFELL;
  v148 = *(unsigned __int8 *)(v147 + 23);
  v149 = *(void *)(v147 + 8);
  if ((v148 & 0x80u) == 0) {
    v149 = v148;
  }
  v82 += v149 + ((9 * (__clz(v149 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v88 & 0x1000) == 0)
  {
LABEL_90:
    if ((v88 & 0x2000) == 0) {
      goto LABEL_91;
    }
    goto LABEL_208;
  }
LABEL_205:
  v150 = *(void *)(a1 + 472) & 0xFFFFFFFFFFFFFFFELL;
  v151 = *(unsigned __int8 *)(v150 + 23);
  v152 = *(void *)(v150 + 8);
  if ((v151 & 0x80u) == 0) {
    v152 = v151;
  }
  v82 += v152 + ((9 * (__clz(v152 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v88 & 0x2000) == 0)
  {
LABEL_91:
    if ((v88 & 0x4000) == 0) {
      goto LABEL_92;
    }
    goto LABEL_211;
  }
LABEL_208:
  v153 = *(void *)(a1 + 480) & 0xFFFFFFFFFFFFFFFELL;
  v154 = *(unsigned __int8 *)(v153 + 23);
  v155 = *(void *)(v153 + 8);
  if ((v154 & 0x80u) == 0) {
    v155 = v154;
  }
  v82 += v155 + ((9 * (__clz(v155 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v88 & 0x4000) == 0)
  {
LABEL_92:
    if ((v88 & 0x8000) == 0) {
      goto LABEL_96;
    }
    goto LABEL_93;
  }
LABEL_211:
  v156 = *(void *)(a1 + 488) & 0xFFFFFFFFFFFFFFFELL;
  v157 = *(unsigned __int8 *)(v156 + 23);
  v158 = *(void *)(v156 + 8);
  if ((v157 & 0x80u) == 0) {
    v158 = v157;
  }
  v82 += v158 + ((9 * (__clz(v158 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v88 & 0x8000) != 0)
  {
LABEL_93:
    v92 = *(void *)(a1 + 496) & 0xFFFFFFFFFFFFFFFELL;
    v93 = *(unsigned __int8 *)(v92 + 23);
    v94 = *(void *)(v92 + 8);
    if ((v93 & 0x80u) == 0) {
      v94 = v93;
    }
    v82 += v94 + ((9 * (__clz(v94 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_96:
  if ((v88 & 0xFF0000) == 0) {
    goto LABEL_106;
  }
  if ((v88 & 0x10000) != 0)
  {
    v159 = *(void *)(a1 + 504) & 0xFFFFFFFFFFFFFFFELL;
    v160 = *(unsigned __int8 *)(v159 + 23);
    v161 = *(void *)(v159 + 8);
    if ((v160 & 0x80u) == 0) {
      v161 = v160;
    }
    v82 += v161 + ((9 * (__clz(v161 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v88 & 0x20000) == 0)
    {
LABEL_99:
      if ((v88 & 0x40000) == 0) {
        goto LABEL_100;
      }
      goto LABEL_221;
    }
  }
  else if ((v88 & 0x20000) == 0)
  {
    goto LABEL_99;
  }
  v162 = *(void *)(a1 + 512) & 0xFFFFFFFFFFFFFFFELL;
  v163 = *(unsigned __int8 *)(v162 + 23);
  v164 = *(void *)(v162 + 8);
  if ((v163 & 0x80u) == 0) {
    v164 = v163;
  }
  v82 += v164 + ((9 * (__clz(v164 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v88 & 0x40000) == 0)
  {
LABEL_100:
    if ((v88 & 0x80000) == 0) {
      goto LABEL_101;
    }
    goto LABEL_224;
  }
LABEL_221:
  v165 = *(void *)(a1 + 520) & 0xFFFFFFFFFFFFFFFELL;
  v166 = *(unsigned __int8 *)(v165 + 23);
  v167 = *(void *)(v165 + 8);
  if ((v166 & 0x80u) == 0) {
    v167 = v166;
  }
  v82 += v167 + ((9 * (__clz(v167 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v88 & 0x80000) == 0)
  {
LABEL_101:
    if ((v88 & 0x100000) == 0) {
      goto LABEL_102;
    }
    goto LABEL_227;
  }
LABEL_224:
  v168 = *(void *)(a1 + 528) & 0xFFFFFFFFFFFFFFFELL;
  v169 = *(unsigned __int8 *)(v168 + 23);
  v170 = *(void *)(v168 + 8);
  if ((v169 & 0x80u) == 0) {
    v170 = v169;
  }
  v82 += v170 + ((9 * (__clz(v170 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v88 & 0x100000) == 0)
  {
LABEL_102:
    if ((v88 & 0x200000) == 0) {
      goto LABEL_103;
    }
    goto LABEL_230;
  }
LABEL_227:
  v171 = *(void *)(a1 + 536) & 0xFFFFFFFFFFFFFFFELL;
  v172 = *(unsigned __int8 *)(v171 + 23);
  v173 = *(void *)(v171 + 8);
  if ((v172 & 0x80u) == 0) {
    v173 = v172;
  }
  v82 += v173 + ((9 * (__clz(v173 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v88 & 0x200000) == 0)
  {
LABEL_103:
    if ((v88 & 0x400000) == 0) {
      goto LABEL_104;
    }
    goto LABEL_231;
  }
LABEL_230:
  v174 = sub_15BA324(*(void *)(a1 + 544));
  v82 += v174 + ((9 * (__clz(v174 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v88 & 0x400000) == 0)
  {
LABEL_104:
    if ((v88 & 0x800000) == 0) {
      goto LABEL_106;
    }
    goto LABEL_105;
  }
LABEL_231:
  v175 = sub_15B0D90(*(void *)(a1 + 552));
  v82 += v175 + ((9 * (__clz(v175 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v88 & 0x800000) != 0)
  {
LABEL_105:
    v95 = sub_15B1D1C(*(void *)(a1 + 560));
    v82 += v95 + ((9 * (__clz(v95 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_106:
  if (!HIBYTE(v88)) {
    goto LABEL_115;
  }
  if ((v88 & 0x1000000) != 0)
  {
    v188 = sub_1654FA4(*(void *)(a1 + 568));
    v82 += v188 + ((9 * (__clz(v188 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v88 & 0x2000000) == 0)
    {
LABEL_109:
      if ((v88 & 0x4000000) == 0) {
        goto LABEL_110;
      }
      goto LABEL_259;
    }
  }
  else if ((v88 & 0x2000000) == 0)
  {
    goto LABEL_109;
  }
  v189 = sub_1656DFC(*(void *)(a1 + 576));
  v82 += v189 + ((9 * (__clz(v189 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v88 & 0x4000000) == 0)
  {
LABEL_110:
    if ((v88 & 0x8000000) == 0) {
      goto LABEL_111;
    }
    goto LABEL_260;
  }
LABEL_259:
  v190 = sub_16634E0(*(void *)(a1 + 584));
  v82 += v190 + ((9 * (__clz(v190 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v88 & 0x8000000) == 0)
  {
LABEL_111:
    if ((v88 & 0x10000000) == 0) {
      goto LABEL_112;
    }
    goto LABEL_261;
  }
LABEL_260:
  v191 = sub_1496860(*(void *)(a1 + 592));
  v82 += v191 + ((9 * (__clz(v191 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v88 & 0x10000000) == 0)
  {
LABEL_112:
    if ((v88 & 0x20000000) == 0) {
      goto LABEL_113;
    }
    goto LABEL_262;
  }
LABEL_261:
  v192 = sub_15B1D1C(*(void *)(a1 + 600));
  v82 += v192 + ((9 * (__clz(v192 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v88 & 0x20000000) == 0)
  {
LABEL_113:
    if ((v88 & 0x40000000) == 0) {
      goto LABEL_114;
    }
LABEL_263:
    v194 = sub_1496860(*(void *)(a1 + 616));
    v82 += v194 + ((9 * (__clz(v194 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v88 & 0x80000000) == 0) {
      goto LABEL_115;
    }
    goto LABEL_264;
  }
LABEL_262:
  v193 = sub_1656DFC(*(void *)(a1 + 608));
  v82 += v193 + ((9 * (__clz(v193 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v88 & 0x40000000) != 0) {
    goto LABEL_263;
  }
LABEL_114:
  if ((v88 & 0x80000000) == 0) {
    goto LABEL_115;
  }
LABEL_264:
  v195 = sub_15BF564(*(void *)(a1 + 624));
  v82 += v195 + ((9 * (__clz(v195 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_115:
  v96 = *(_DWORD *)(a1 + 44);
  if (!(_BYTE)v96) {
    goto LABEL_136;
  }
  if (v96)
  {
    v176 = sub_1663F44(*(void *)(a1 + 632));
    v82 += v176 + ((9 * (__clz(v176 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v96 & 2) == 0)
    {
LABEL_118:
      if ((v96 & 4) == 0) {
        goto LABEL_119;
      }
LABEL_235:
      v178 = sub_1764968(*(void *)(a1 + 648));
      v82 += v178 + ((9 * (__clz(v178 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if ((v96 & 8) == 0) {
        goto LABEL_121;
      }
      goto LABEL_120;
    }
  }
  else if ((v96 & 2) == 0)
  {
    goto LABEL_118;
  }
  v177 = sub_12A1464(*(void *)(a1 + 640));
  v82 += v177 + ((9 * (__clz(v177 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v96 & 4) != 0) {
    goto LABEL_235;
  }
LABEL_119:
  if ((v96 & 8) != 0)
  {
LABEL_120:
    v97 = sub_165AD5C(*(void *)(a1 + 656));
    v82 += v97 + ((9 * (__clz(v97 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_121:
  v98 = v82 + 9;
  if ((v96 & 0x10) == 0) {
    v98 = v82;
  }
  if ((v96 & 0x20) != 0)
  {
    v99 = *(_DWORD *)(a1 + 672);
    v100 = (9 * (__clz(v99 | 1) ^ 0x1F) + 73) >> 6;
    if (v99 >= 0) {
      v101 = v100;
    }
    else {
      v101 = 10;
    }
    v98 += v101 + 1;
  }
  if ((v96 & 0x40) != 0)
  {
    v102 = *(_DWORD *)(a1 + 676);
    v103 = (9 * (__clz(v102 | 1) ^ 0x1F) + 73) >> 6;
    if (v102 >= 0) {
      v104 = v103;
    }
    else {
      v104 = 10;
    }
    v98 += v104 + 2;
  }
  if ((v96 & 0x80) != 0) {
    v82 = v98 + 10;
  }
  else {
    v82 = v98;
  }
LABEL_136:
  if ((v96 & 0xFF00) == 0) {
    goto LABEL_150;
  }
  if ((v96 & 0x100) != 0) {
    v82 += 10;
  }
  if ((v96 & 0x200) != 0)
  {
    v82 += ((9 * (__clz(*(_DWORD *)(a1 + 696) | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v96 & 0x400) == 0)
    {
LABEL_141:
      if ((v96 & 0x800) == 0) {
        goto LABEL_142;
      }
      goto LABEL_239;
    }
  }
  else if ((v96 & 0x400) == 0)
  {
    goto LABEL_141;
  }
  v82 += ((9 * (__clz(*(_DWORD *)(a1 + 700) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v96 & 0x800) == 0)
  {
LABEL_142:
    if ((v96 & 0x1000) == 0) {
      goto LABEL_143;
    }
    goto LABEL_240;
  }
LABEL_239:
  v82 += ((9 * (__clz(*(_DWORD *)(a1 + 704) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v96 & 0x1000) == 0)
  {
LABEL_143:
    if ((v96 & 0x2000) == 0) {
      goto LABEL_144;
    }
    goto LABEL_244;
  }
LABEL_240:
  v179 = *(_DWORD *)(a1 + 708);
  v180 = (9 * (__clz(v179 | 1) ^ 0x1F) + 73) >> 6;
  if (v179 >= 0) {
    v181 = v180;
  }
  else {
    v181 = 10;
  }
  v82 += v181 + 2;
  if ((v96 & 0x2000) == 0)
  {
LABEL_144:
    if ((v96 & 0x4000) == 0) {
      goto LABEL_145;
    }
    goto LABEL_245;
  }
LABEL_244:
  v82 += ((9 * (__clz(*(void *)(a1 + 712) | 1) ^ 0x3F) + 73) >> 6) + 2;
  if ((v96 & 0x4000) == 0)
  {
LABEL_145:
    if ((v96 & 0x8000) == 0) {
      goto LABEL_150;
    }
    goto LABEL_146;
  }
LABEL_245:
  v182 = *(_DWORD *)(a1 + 720);
  v183 = ((9 * (__clz(v182 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if (v182 >= 0) {
    v184 = v183;
  }
  else {
    v184 = 12;
  }
  v82 += v184;
  if ((v96 & 0x8000) != 0)
  {
LABEL_146:
    v105 = *(_DWORD *)(a1 + 724);
    v106 = ((9 * (__clz(v105 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v105 >= 0) {
      v107 = v106;
    }
    else {
      v107 = 12;
    }
    v82 += v107;
  }
LABEL_150:
  if ((v96 & 0x7F0000) == 0) {
    goto LABEL_169;
  }
  if ((v96 & 0x10000) != 0)
  {
    v108 = *(_DWORD *)(a1 + 728);
    v109 = ((9 * (__clz(v108 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v108 >= 0) {
      v110 = v109;
    }
    else {
      v110 = 12;
    }
    v82 += v110;
  }
  v111 = v82 + 3;
  if ((v96 & 0x20000) == 0) {
    v111 = v82;
  }
  if ((v96 & 0x40000) != 0) {
    v82 = v111 + 3;
  }
  else {
    v82 = v111;
  }
  if ((v96 & 0x80000) != 0)
  {
    v82 += ((9 * (__clz(*(_DWORD *)(a1 + 736) | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v96 & 0x100000) == 0)
    {
LABEL_163:
      if ((v96 & 0x200000) == 0) {
        goto LABEL_164;
      }
LABEL_255:
      v82 += ((9 * (__clz(*(void *)(a1 + 744) | 1) ^ 0x3F) + 73) >> 6) + 2;
      if ((v96 & 0x400000) == 0) {
        goto LABEL_169;
      }
      goto LABEL_165;
    }
  }
  else if ((v96 & 0x100000) == 0)
  {
    goto LABEL_163;
  }
  v185 = *(_DWORD *)(a1 + 740);
  v186 = ((9 * (__clz(v185 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if (v185 >= 0) {
    v187 = v186;
  }
  else {
    v187 = 12;
  }
  v82 += v187;
  if ((v96 & 0x200000) != 0) {
    goto LABEL_255;
  }
LABEL_164:
  if ((v96 & 0x400000) == 0) {
    goto LABEL_169;
  }
LABEL_165:
  v112 = *(_DWORD *)(a1 + 752);
  v113 = ((9 * (__clz(v112 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if (v112 >= 0) {
    v114 = v113;
  }
  else {
    v114 = 12;
  }
  v82 += v114;
LABEL_169:
  v115 = *(void *)(a1 + 8);
  if (v115)
  {
    v196 = v115 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v196 + 31) < 0) {
      v197 = *(void *)(v196 + 16);
    }
    else {
      v197 = *(unsigned __int8 *)(v196 + 31);
    }
    v82 += v197;
  }
  *(_DWORD *)(a1 + 48) = v82;
  return v82;
}

void sub_1660820(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    v5 = (_DWORD *)(a1 + 56);
    uint64_t v6 = *(int *)(a1 + 56);
    sub_188CA54((unsigned int *)(a1 + 56), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 64);
    *v5 += *(_DWORD *)(a2 + 56);
    memcpy((void *)(v7 + 8 * v6), *(const void **)(a2 + 64), 8 * *(int *)(a2 + 56));
  }
  int v8 = *(_DWORD *)(a2 + 80);
  if (v8)
  {
    v9 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    v10 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_11DB348((uint64_t *)(a1 + 72), v10, v9, v8, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v11 = *(_DWORD *)(a1 + 80) + v8;
    *(_DWORD *)(a1 + 80) = v11;
    v12 = *(int **)(a1 + 88);
    if (*v12 < v11) {
      int *v12 = v11;
    }
  }
  int v13 = *(_DWORD *)(a2 + 104);
  if (v13)
  {
    v14 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    v15 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_149453C((uint64_t *)(a1 + 96), v15, v14, v13, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v16 = *(_DWORD *)(a1 + 104) + v13;
    *(_DWORD *)(a1 + 104) = v16;
    v17 = *(int **)(a1 + 112);
    if (*v17 < v16) {
      int *v17 = v16;
    }
  }
  int v18 = *(_DWORD *)(a2 + 128);
  if (v18)
  {
    v19 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    v20 = (uint64_t *)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_124F7EC((uint64_t *)(a1 + 120), v20, v19, v18, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v21 = *(_DWORD *)(a1 + 128) + v18;
    *(_DWORD *)(a1 + 128) = v21;
    v22 = *(int **)(a1 + 136);
    if (*v22 < v21) {
      int *v22 = v21;
    }
  }
  int v23 = *(_DWORD *)(a2 + 144);
  if (v23)
  {
    uint64_t v24 = *(int *)(a1 + 144);
    sub_188CA54((unsigned int *)(a1 + 144), v24 + v23);
    uint64_t v25 = *(void *)(a1 + 152);
    *(_DWORD *)(a1 + 144) += *(_DWORD *)(a2 + 144);
    memcpy((void *)(v25 + 8 * v24), *(const void **)(a2 + 152), 8 * *(int *)(a2 + 144));
  }
  int v26 = *(_DWORD *)(a2 + 168);
  if (v26)
  {
    v27 = (uint64_t *)(*(void *)(a2 + 176) + 8);
    v28 = (std::string **)sub_188CCE4(a1 + 160, *(_DWORD *)(a2 + 168));
    sub_124F878((uint64_t *)(a1 + 160), v28, v27, v26, **(_DWORD **)(a1 + 176) - *(_DWORD *)(a1 + 168));
    int v29 = *(_DWORD *)(a1 + 168) + v26;
    *(_DWORD *)(a1 + 168) = v29;
    v30 = *(int **)(a1 + 176);
    if (*v30 < v29) {
      int *v30 = v29;
    }
  }
  int v31 = *(_DWORD *)(a2 + 192);
  if (v31)
  {
    v32 = (uint64_t *)(*(void *)(a2 + 200) + 8);
    v33 = (uint64_t *)sub_188CCE4(a1 + 184, *(_DWORD *)(a2 + 192));
    sub_124FB98((uint64_t *)(a1 + 184), v33, v32, v31, **(_DWORD **)(a1 + 200) - *(_DWORD *)(a1 + 192));
    int v34 = *(_DWORD *)(a1 + 192) + v31;
    *(_DWORD *)(a1 + 192) = v34;
    v35 = *(int **)(a1 + 200);
    if (*v35 < v34) {
      int *v35 = v34;
    }
  }
  int v36 = *(_DWORD *)(a2 + 216);
  if (v36)
  {
    v37 = (uint64_t *)(*(void *)(a2 + 224) + 8);
    v38 = (std::string **)sub_188CCE4(a1 + 208, *(_DWORD *)(a2 + 216));
    sub_149ECFC((uint64_t *)(a1 + 208), v38, v37, v36, **(_DWORD **)(a1 + 224) - *(_DWORD *)(a1 + 216));
    int v39 = *(_DWORD *)(a1 + 216) + v36;
    *(_DWORD *)(a1 + 216) = v39;
    v40 = *(int **)(a1 + 224);
    if (*v40 < v39) {
      int *v40 = v39;
    }
  }
  int v41 = *(_DWORD *)(a2 + 240);
  if (v41)
  {
    v42 = (uint64_t *)(*(void *)(a2 + 248) + 8);
    v43 = (std::string **)sub_188CCE4(a1 + 232, *(_DWORD *)(a2 + 240));
    sub_124F878((uint64_t *)(a1 + 232), v43, v42, v41, **(_DWORD **)(a1 + 248) - *(_DWORD *)(a1 + 240));
    int v44 = *(_DWORD *)(a1 + 240) + v41;
    *(_DWORD *)(a1 + 240) = v44;
    v45 = *(int **)(a1 + 248);
    if (*v45 < v44) {
      int *v45 = v44;
    }
  }
  int v46 = *(_DWORD *)(a2 + 264);
  if (v46)
  {
    v47 = (uint64_t *)(*(void *)(a2 + 272) + 8);
    v48 = (std::string **)sub_188CCE4(a1 + 256, *(_DWORD *)(a2 + 264));
    sub_124F990((std::string *)(a1 + 256), v48, v47, v46, **(_DWORD **)(a1 + 272) - *(_DWORD *)(a1 + 264));
    int v49 = *(_DWORD *)(a1 + 264) + v46;
    *(_DWORD *)(a1 + 264) = v49;
    v50 = *(int **)(a1 + 272);
    if (*v50 < v49) {
      int *v50 = v49;
    }
  }
  int v51 = *(_DWORD *)(a2 + 288);
  if (v51)
  {
    v52 = (uint64_t *)(*(void *)(a2 + 296) + 8);
    v53 = (std::string **)sub_188CCE4(a1 + 280, *(_DWORD *)(a2 + 288));
    sub_1665000((std::string *)(a1 + 280), v53, v52, v51, **(_DWORD **)(a1 + 296) - *(_DWORD *)(a1 + 288));
    int v54 = *(_DWORD *)(a1 + 288) + v51;
    *(_DWORD *)(a1 + 288) = v54;
    v55 = *(int **)(a1 + 296);
    if (*v55 < v54) {
      int *v55 = v54;
    }
  }
  int v56 = *(_DWORD *)(a2 + 312);
  if (v56)
  {
    v57 = (const std::string **)(*(void *)(a2 + 320) + 8);
    v58 = (std::string **)sub_188CCE4(a1 + 304, *(_DWORD *)(a2 + 312));
    sub_188FB98(a1 + 304, v58, v57, v56, **(_DWORD **)(a1 + 320) - *(_DWORD *)(a1 + 312));
    int v59 = *(_DWORD *)(a1 + 312) + v56;
    *(_DWORD *)(a1 + 312) = v59;
    v60 = *(int **)(a1 + 320);
    if (*v60 < v59) {
      int *v60 = v59;
    }
  }
  int v61 = *(_DWORD *)(a2 + 336);
  if (v61)
  {
    v62 = (uint64_t *)(*(void *)(a2 + 344) + 8);
    v63 = (std::string **)sub_188CCE4(a1 + 328, *(_DWORD *)(a2 + 336));
    sub_124F904((uint64_t *)(a1 + 328), v63, v62, v61, **(_DWORD **)(a1 + 344) - *(_DWORD *)(a1 + 336));
    int v64 = *(_DWORD *)(a1 + 336) + v61;
    *(_DWORD *)(a1 + 336) = v64;
    v65 = *(int **)(a1 + 344);
    if (*v65 < v64) {
      int *v65 = v64;
    }
  }
  int v66 = *(_DWORD *)(a2 + 360);
  if (v66)
  {
    v67 = (uint64_t *)(*(void *)(a2 + 368) + 8);
    v68 = (std::string **)sub_188CCE4(a1 + 352, *(_DWORD *)(a2 + 360));
    sub_166507C((uint64_t *)(a1 + 352), v68, v67, v66, **(_DWORD **)(a1 + 368) - *(_DWORD *)(a1 + 360));
    int v69 = *(_DWORD *)(a1 + 360) + v66;
    *(_DWORD *)(a1 + 360) = v69;
    v70 = *(int **)(a1 + 368);
    if (*v70 < v69) {
      int *v70 = v69;
    }
  }
  unsigned int v71 = *(_DWORD *)(a2 + 40);
  if (!(_BYTE)v71) {
    goto LABEL_75;
  }
  if (v71)
  {
    v72 = (long long *)(*(void *)(a2 + 376) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v73 = *(void *)(a1 + 8);
    v74 = (uint64_t *)(v73 & 0xFFFFFFFFFFFFFFFCLL);
    if (v73) {
      v74 = (uint64_t *)*v74;
    }
    sub_1881DF4((std::string **)(a1 + 376), v72, v74);
    if ((v71 & 2) == 0)
    {
LABEL_44:
      if ((v71 & 4) == 0) {
        goto LABEL_45;
      }
      goto LABEL_57;
    }
  }
  else if ((v71 & 2) == 0)
  {
    goto LABEL_44;
  }
  v75 = (long long *)(*(void *)(a2 + 384) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 2u;
  uint64_t v76 = *(void *)(a1 + 8);
  v77 = (uint64_t *)(v76 & 0xFFFFFFFFFFFFFFFCLL);
  if (v76) {
    v77 = (uint64_t *)*v77;
  }
  sub_1881DF4((std::string **)(a1 + 384), v75, v77);
  if ((v71 & 4) == 0)
  {
LABEL_45:
    if ((v71 & 8) == 0) {
      goto LABEL_46;
    }
    goto LABEL_60;
  }
LABEL_57:
  v78 = (long long *)(*(void *)(a2 + 392) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v79 = *(void *)(a1 + 8);
  v80 = (uint64_t *)(v79 & 0xFFFFFFFFFFFFFFFCLL);
  if (v79) {
    v80 = (uint64_t *)*v80;
  }
  sub_1881DF4((std::string **)(a1 + 392), v78, v80);
  if ((v71 & 8) == 0)
  {
LABEL_46:
    if ((v71 & 0x10) == 0) {
      goto LABEL_47;
    }
    goto LABEL_63;
  }
LABEL_60:
  v81 = (long long *)(*(void *)(a2 + 400) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 8u;
  uint64_t v82 = *(void *)(a1 + 8);
  v83 = (uint64_t *)(v82 & 0xFFFFFFFFFFFFFFFCLL);
  if (v82) {
    v83 = (uint64_t *)*v83;
  }
  sub_1881DF4((std::string **)(a1 + 400), v81, v83);
  if ((v71 & 0x10) == 0)
  {
LABEL_47:
    if ((v71 & 0x20) == 0) {
      goto LABEL_48;
    }
LABEL_66:
    v87 = (long long *)(*(void *)(a2 + 416) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 0x20u;
    uint64_t v88 = *(void *)(a1 + 8);
    v89 = (uint64_t *)(v88 & 0xFFFFFFFFFFFFFFFCLL);
    if (v88) {
      v89 = (uint64_t *)*v89;
    }
    sub_1881DF4((std::string **)(a1 + 416), v87, v89);
    if ((v71 & 0x40) == 0)
    {
LABEL_49:
      if ((v71 & 0x80) == 0) {
        goto LABEL_75;
      }
      goto LABEL_72;
    }
    goto LABEL_69;
  }
LABEL_63:
  v84 = (long long *)(*(void *)(a2 + 408) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 0x10u;
  uint64_t v85 = *(void *)(a1 + 8);
  v86 = (uint64_t *)(v85 & 0xFFFFFFFFFFFFFFFCLL);
  if (v85) {
    v86 = (uint64_t *)*v86;
  }
  sub_1881DF4((std::string **)(a1 + 408), v84, v86);
  if ((v71 & 0x20) != 0) {
    goto LABEL_66;
  }
LABEL_48:
  if ((v71 & 0x40) == 0) {
    goto LABEL_49;
  }
LABEL_69:
  v90 = (long long *)(*(void *)(a2 + 424) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 0x40u;
  uint64_t v91 = *(void *)(a1 + 8);
  v92 = (uint64_t *)(v91 & 0xFFFFFFFFFFFFFFFCLL);
  if (v91) {
    v92 = (uint64_t *)*v92;
  }
  sub_1881DF4((std::string **)(a1 + 424), v90, v92);
  if ((v71 & 0x80) != 0)
  {
LABEL_72:
    v93 = (long long *)(*(void *)(a2 + 432) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 0x80u;
    uint64_t v94 = *(void *)(a1 + 8);
    v95 = (uint64_t *)(v94 & 0xFFFFFFFFFFFFFFFCLL);
    if (v94) {
      v95 = (uint64_t *)*v95;
    }
    sub_1881DF4((std::string **)(a1 + 432), v93, v95);
  }
LABEL_75:
  if ((v71 & 0xFF00) == 0) {
    goto LABEL_109;
  }
  if ((v71 & 0x100) != 0)
  {
    v96 = (long long *)(*(void *)(a2 + 440) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 0x100u;
    uint64_t v97 = *(void *)(a1 + 8);
    v98 = (uint64_t *)(v97 & 0xFFFFFFFFFFFFFFFCLL);
    if (v97) {
      v98 = (uint64_t *)*v98;
    }
    sub_1881DF4((std::string **)(a1 + 440), v96, v98);
    if ((v71 & 0x200) == 0)
    {
LABEL_78:
      if ((v71 & 0x400) == 0) {
        goto LABEL_79;
      }
      goto LABEL_91;
    }
  }
  else if ((v71 & 0x200) == 0)
  {
    goto LABEL_78;
  }
  v99 = (long long *)(*(void *)(a2 + 448) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 0x200u;
  uint64_t v100 = *(void *)(a1 + 8);
  v101 = (uint64_t *)(v100 & 0xFFFFFFFFFFFFFFFCLL);
  if (v100) {
    v101 = (uint64_t *)*v101;
  }
  sub_1881DF4((std::string **)(a1 + 448), v99, v101);
  if ((v71 & 0x400) == 0)
  {
LABEL_79:
    if ((v71 & 0x800) == 0) {
      goto LABEL_80;
    }
    goto LABEL_94;
  }
LABEL_91:
  v102 = (long long *)(*(void *)(a2 + 456) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 0x400u;
  uint64_t v103 = *(void *)(a1 + 8);
  v104 = (uint64_t *)(v103 & 0xFFFFFFFFFFFFFFFCLL);
  if (v103) {
    v104 = (uint64_t *)*v104;
  }
  sub_1881DF4((std::string **)(a1 + 456), v102, v104);
  if ((v71 & 0x800) == 0)
  {
LABEL_80:
    if ((v71 & 0x1000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_97;
  }
LABEL_94:
  v105 = (long long *)(*(void *)(a2 + 464) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 0x800u;
  uint64_t v106 = *(void *)(a1 + 8);
  v107 = (uint64_t *)(v106 & 0xFFFFFFFFFFFFFFFCLL);
  if (v106) {
    v107 = (uint64_t *)*v107;
  }
  sub_1881DF4((std::string **)(a1 + 464), v105, v107);
  if ((v71 & 0x1000) == 0)
  {
LABEL_81:
    if ((v71 & 0x2000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_100;
  }
LABEL_97:
  v108 = (long long *)(*(void *)(a2 + 472) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 0x1000u;
  uint64_t v109 = *(void *)(a1 + 8);
  v110 = (uint64_t *)(v109 & 0xFFFFFFFFFFFFFFFCLL);
  if (v109) {
    v110 = (uint64_t *)*v110;
  }
  sub_1881DF4((std::string **)(a1 + 472), v108, v110);
  if ((v71 & 0x2000) == 0)
  {
LABEL_82:
    if ((v71 & 0x4000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_103;
  }
LABEL_100:
  v111 = (long long *)(*(void *)(a2 + 480) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 0x2000u;
  uint64_t v112 = *(void *)(a1 + 8);
  v113 = (uint64_t *)(v112 & 0xFFFFFFFFFFFFFFFCLL);
  if (v112) {
    v113 = (uint64_t *)*v113;
  }
  sub_1881DF4((std::string **)(a1 + 480), v111, v113);
  if ((v71 & 0x4000) == 0)
  {
LABEL_83:
    if ((v71 & 0x8000) == 0) {
      goto LABEL_109;
    }
    goto LABEL_106;
  }
LABEL_103:
  v114 = (long long *)(*(void *)(a2 + 488) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 0x4000u;
  uint64_t v115 = *(void *)(a1 + 8);
  v116 = (uint64_t *)(v115 & 0xFFFFFFFFFFFFFFFCLL);
  if (v115) {
    v116 = (uint64_t *)*v116;
  }
  sub_1881DF4((std::string **)(a1 + 488), v114, v116);
  if ((v71 & 0x8000) != 0)
  {
LABEL_106:
    v117 = (long long *)(*(void *)(a2 + 496) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 0x8000u;
    uint64_t v118 = *(void *)(a1 + 8);
    v119 = (uint64_t *)(v118 & 0xFFFFFFFFFFFFFFFCLL);
    if (v118) {
      v119 = (uint64_t *)*v119;
    }
    sub_1881DF4((std::string **)(a1 + 496), v117, v119);
  }
LABEL_109:
  if ((v71 & 0xFF0000) == 0) {
    goto LABEL_158;
  }
  if ((v71 & 0x10000) != 0)
  {
    v120 = (long long *)(*(void *)(a2 + 504) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 0x10000u;
    uint64_t v121 = *(void *)(a1 + 8);
    v122 = (uint64_t *)(v121 & 0xFFFFFFFFFFFFFFFCLL);
    if (v121) {
      v122 = (uint64_t *)*v122;
    }
    sub_1881DF4((std::string **)(a1 + 504), v120, v122);
    if ((v71 & 0x20000) == 0)
    {
LABEL_112:
      if ((v71 & 0x40000) == 0) {
        goto LABEL_113;
      }
      goto LABEL_125;
    }
  }
  else if ((v71 & 0x20000) == 0)
  {
    goto LABEL_112;
  }
  v123 = (long long *)(*(void *)(a2 + 512) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 0x20000u;
  uint64_t v124 = *(void *)(a1 + 8);
  v125 = (uint64_t *)(v124 & 0xFFFFFFFFFFFFFFFCLL);
  if (v124) {
    v125 = (uint64_t *)*v125;
  }
  sub_1881DF4((std::string **)(a1 + 512), v123, v125);
  if ((v71 & 0x40000) == 0)
  {
LABEL_113:
    if ((v71 & 0x80000) == 0) {
      goto LABEL_114;
    }
    goto LABEL_128;
  }
LABEL_125:
  v126 = (long long *)(*(void *)(a2 + 520) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 0x40000u;
  uint64_t v127 = *(void *)(a1 + 8);
  v128 = (uint64_t *)(v127 & 0xFFFFFFFFFFFFFFFCLL);
  if (v127) {
    v128 = (uint64_t *)*v128;
  }
  sub_1881DF4((std::string **)(a1 + 520), v126, v128);
  if ((v71 & 0x80000) == 0)
  {
LABEL_114:
    if ((v71 & 0x100000) == 0) {
      goto LABEL_115;
    }
    goto LABEL_131;
  }
LABEL_128:
  v129 = (long long *)(*(void *)(a2 + 528) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 0x80000u;
  uint64_t v130 = *(void *)(a1 + 8);
  v131 = (uint64_t *)(v130 & 0xFFFFFFFFFFFFFFFCLL);
  if (v130) {
    v131 = (uint64_t *)*v131;
  }
  sub_1881DF4((std::string **)(a1 + 528), v129, v131);
  if ((v71 & 0x100000) == 0)
  {
LABEL_115:
    if ((v71 & 0x200000) == 0) {
      goto LABEL_116;
    }
    goto LABEL_134;
  }
LABEL_131:
  v132 = (long long *)(*(void *)(a2 + 536) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 0x100000u;
  uint64_t v133 = *(void *)(a1 + 8);
  v134 = (uint64_t *)(v133 & 0xFFFFFFFFFFFFFFFCLL);
  if (v133) {
    v134 = (uint64_t *)*v134;
  }
  sub_1881DF4((std::string **)(a1 + 536), v132, v134);
  if ((v71 & 0x200000) == 0)
  {
LABEL_116:
    if ((v71 & 0x400000) == 0) {
      goto LABEL_117;
    }
    goto LABEL_142;
  }
LABEL_134:
  *(_DWORD *)(a1 + 40) |= 0x200000u;
  v135 = *(std::string **)(a1 + 544);
  if (!v135)
  {
    uint64_t v136 = *(void *)(a1 + 8);
    v137 = (void *)(v136 & 0xFFFFFFFFFFFFFFFCLL);
    if (v136) {
      v137 = (void *)*v137;
    }
    v135 = (std::string *)sub_15C2014((uint64_t)v137);
    *(void *)(a1 + 544) = v135;
  }
  if (*(void *)(a2 + 544)) {
    v138 = *(uint64_t (****)())(a2 + 544);
  }
  else {
    v138 = &off_253F530;
  }
  sub_1113E40(v135, (uint64_t)v138);
  if ((v71 & 0x400000) == 0)
  {
LABEL_117:
    if ((v71 & 0x800000) == 0) {
      goto LABEL_158;
    }
    goto LABEL_150;
  }
LABEL_142:
  *(_DWORD *)(a1 + 40) |= 0x400000u;
  uint64_t v139 = *(void *)(a1 + 552);
  if (!v139)
  {
    uint64_t v140 = *(void *)(a1 + 8);
    v141 = (void *)(v140 & 0xFFFFFFFFFFFFFFFCLL);
    if (v140) {
      v141 = (void *)*v141;
    }
    uint64_t v139 = sub_15C1918((uint64_t)v141);
    *(void *)(a1 + 552) = v139;
  }
  if (*(void *)(a2 + 552)) {
    v142 = *(uint64_t (****)())(a2 + 552);
  }
  else {
    v142 = &off_253F1A0;
  }
  sub_15B0E24(v139, (uint64_t)v142);
  if ((v71 & 0x800000) != 0)
  {
LABEL_150:
    *(_DWORD *)(a1 + 40) |= 0x800000u;
    uint64_t v143 = *(void *)(a1 + 560);
    if (!v143)
    {
      uint64_t v144 = *(void *)(a1 + 8);
      v145 = (void *)(v144 & 0xFFFFFFFFFFFFFFFCLL);
      if (v144) {
        v145 = (void *)*v145;
      }
      uint64_t v143 = sub_15C19EC((uint64_t)v145);
      *(void *)(a1 + 560) = v143;
    }
    if (*(void *)(a2 + 560)) {
      v146 = *(uint64_t (****)())(a2 + 560);
    }
    else {
      v146 = &off_253F208;
    }
    sub_15B1E3C(v143, (uint64_t)v146);
  }
LABEL_158:
  if (!HIBYTE(v71)) {
    goto LABEL_232;
  }
  if ((v71 & 0x1000000) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x1000000u;
    v147 = *(void **)(a1 + 568);
    if (!v147)
    {
      uint64_t v148 = *(void *)(a1 + 8);
      v149 = (void *)(v148 & 0xFFFFFFFFFFFFFFFCLL);
      if (v148) {
        v149 = (void *)*v149;
      }
      v147 = sub_1662A30((uint64_t)v149);
      *(void *)(a1 + 568) = v147;
    }
    if (*(void *)(a2 + 568)) {
      v150 = *(uint64_t (****)())(a2 + 568);
    }
    else {
      v150 = &off_25425E8;
    }
    sub_13BD108((uint64_t)v147, (uint64_t)v150);
  }
  if ((v71 & 0x2000000) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x2000000u;
    uint64_t v151 = *(void *)(a1 + 576);
    if (!v151)
    {
      uint64_t v152 = *(void *)(a1 + 8);
      v153 = (void *)(v152 & 0xFFFFFFFFFFFFFFFCLL);
      if (v152) {
        v153 = (void *)*v153;
      }
      sub_1662B44((uint64_t)v153);
      *(void *)(a1 + 576) = v151;
    }
    if (*(void *)(a2 + 576)) {
      v154 = *(uint64_t (****)())(a2 + 576);
    }
    else {
      v154 = &off_2542660;
    }
    sub_1657114(v151, (uint64_t)v154);
  }
  if ((v71 & 0x4000000) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x4000000u;
    v155 = *(std::string **)(a1 + 584);
    if (!v155)
    {
      uint64_t v156 = *(void *)(a1 + 8);
      v157 = (void *)(v156 & 0xFFFFFFFFFFFFFFFCLL);
      if (v156) {
        v157 = (void *)*v157;
      }
      v155 = (std::string *)sub_166401C((uint64_t)v157);
      *(void *)(a1 + 584) = v155;
    }
    if (*(void *)(a2 + 584)) {
      v158 = *(uint64_t (****)(uint64_t))(a2 + 584);
    }
    else {
      v158 = &off_2542AA0;
    }
    sub_11D2930(v155, (uint64_t)v158);
  }
  if ((v71 & 0x8000000) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x8000000u;
    v159 = *(std::string **)(a1 + 592);
    if (!v159)
    {
      uint64_t v160 = *(void *)(a1 + 8);
      v161 = (void *)(v160 & 0xFFFFFFFFFFFFFFFCLL);
      if (v160) {
        v161 = (void *)*v161;
      }
      v159 = (std::string *)sub_1497018((uint64_t)v161);
      *(void *)(a1 + 592) = v159;
    }
    if (*(void *)(a2 + 592)) {
      v162 = *(uint64_t (****)())(a2 + 592);
    }
    else {
      v162 = &off_253A070;
    }
    sub_1495A3C(v159, (uint64_t)v162);
    if ((v71 & 0x10000000) == 0)
    {
LABEL_188:
      if ((v71 & 0x20000000) == 0) {
        goto LABEL_189;
      }
      goto LABEL_208;
    }
  }
  else if ((v71 & 0x10000000) == 0)
  {
    goto LABEL_188;
  }
  *(_DWORD *)(a1 + 40) |= 0x10000000u;
  uint64_t v163 = *(void *)(a1 + 600);
  if (!v163)
  {
    uint64_t v164 = *(void *)(a1 + 8);
    v165 = (void *)(v164 & 0xFFFFFFFFFFFFFFFCLL);
    if (v164) {
      v165 = (void *)*v165;
    }
    uint64_t v163 = sub_15C19EC((uint64_t)v165);
    *(void *)(a1 + 600) = v163;
  }
  if (*(void *)(a2 + 600)) {
    v166 = *(uint64_t (****)())(a2 + 600);
  }
  else {
    v166 = &off_253F208;
  }
  sub_15B1E3C(v163, (uint64_t)v166);
  if ((v71 & 0x20000000) == 0)
  {
LABEL_189:
    if ((v71 & 0x40000000) == 0) {
      goto LABEL_190;
    }
    goto LABEL_216;
  }
LABEL_208:
  *(_DWORD *)(a1 + 40) |= 0x20000000u;
  uint64_t v167 = *(void *)(a1 + 608);
  if (!v167)
  {
    uint64_t v168 = *(void *)(a1 + 8);
    v169 = (void *)(v168 & 0xFFFFFFFFFFFFFFFCLL);
    if (v168) {
      v169 = (void *)*v169;
    }
    sub_1662B44((uint64_t)v169);
    *(void *)(a1 + 608) = v167;
  }
  if (*(void *)(a2 + 608)) {
    v170 = *(uint64_t (****)())(a2 + 608);
  }
  else {
    v170 = &off_2542660;
  }
  sub_1657114(v167, (uint64_t)v170);
  if ((v71 & 0x40000000) == 0)
  {
LABEL_190:
    if ((v71 & 0x80000000) == 0) {
      goto LABEL_232;
    }
    goto LABEL_224;
  }
LABEL_216:
  *(_DWORD *)(a1 + 40) |= 0x40000000u;
  v171 = *(std::string **)(a1 + 616);
  if (!v171)
  {
    uint64_t v172 = *(void *)(a1 + 8);
    v173 = (void *)(v172 & 0xFFFFFFFFFFFFFFFCLL);
    if (v172) {
      v173 = (void *)*v173;
    }
    v171 = (std::string *)sub_1497018((uint64_t)v173);
    *(void *)(a1 + 616) = v171;
  }
  if (*(void *)(a2 + 616)) {
    v174 = *(uint64_t (****)())(a2 + 616);
  }
  else {
    v174 = &off_253A070;
  }
  sub_1495A3C(v171, (uint64_t)v174);
  if ((v71 & 0x80000000) != 0)
  {
LABEL_224:
    *(_DWORD *)(a1 + 40) |= 0x80000000;
    v175 = *(void **)(a1 + 624);
    if (!v175)
    {
      uint64_t v176 = *(void *)(a1 + 8);
      v177 = (void *)(v176 & 0xFFFFFFFFFFFFFFFCLL);
      if (v176) {
        v177 = (void *)*v177;
      }
      v175 = sub_15C24B4((uint64_t)v177);
      *(void *)(a1 + 624) = v175;
    }
    if (*(void *)(a2 + 624)) {
      v178 = *(uint64_t (****)())(a2 + 624);
    }
    else {
      v178 = &off_253F6E8;
    }
    sub_15BF630((uint64_t)v175, (uint64_t)v178);
  }
LABEL_232:
  int v179 = *(_DWORD *)(a2 + 44);
  if (!(_BYTE)v179) {
    goto LABEL_243;
  }
  if (v179)
  {
    *(_DWORD *)(a1 + 44) |= 1u;
    v181 = *(std::string **)(a1 + 632);
    if (!v181)
    {
      uint64_t v182 = *(void *)(a1 + 8);
      v183 = (void *)(v182 & 0xFFFFFFFFFFFFFFFCLL);
      if (v182) {
        v183 = (void *)*v183;
      }
      v181 = (std::string *)sub_1664128((uint64_t)v183);
      *(void *)(a1 + 632) = v181;
    }
    if (*(void *)(a2 + 632)) {
      v184 = *(void *(****)(void *))(a2 + 632);
    }
    else {
      v184 = &off_2542AD0;
    }
    sub_117EF04(v181, (uint64_t)v184);
    if ((v179 & 2) == 0)
    {
LABEL_235:
      if ((v179 & 4) == 0) {
        goto LABEL_236;
      }
      goto LABEL_284;
    }
  }
  else if ((v179 & 2) == 0)
  {
    goto LABEL_235;
  }
  *(_DWORD *)(a1 + 44) |= 2u;
  v185 = *(std::string **)(a1 + 640);
  if (!v185)
  {
    uint64_t v186 = *(void *)(a1 + 8);
    v187 = (void *)(v186 & 0xFFFFFFFFFFFFFFFCLL);
    if (v186) {
      v187 = (void *)*v187;
    }
    v185 = (std::string *)sub_12BBB40((uint64_t)v187);
    *(void *)(a1 + 640) = v185;
  }
  if (*(void *)(a2 + 640)) {
    v188 = *(uint64_t (****)())(a2 + 640);
  }
  else {
    v188 = &off_2530888;
  }
  sub_117DA78(v185, (uint64_t)v188);
  if ((v179 & 4) == 0)
  {
LABEL_236:
    if ((v179 & 8) == 0) {
      goto LABEL_237;
    }
    goto LABEL_292;
  }
LABEL_284:
  *(_DWORD *)(a1 + 44) |= 4u;
  v189 = *(std::string **)(a1 + 648);
  if (!v189)
  {
    uint64_t v190 = *(void *)(a1 + 8);
    v191 = (void *)(v190 & 0xFFFFFFFFFFFFFFFCLL);
    if (v190) {
      v191 = (void *)*v191;
    }
    v189 = (std::string *)sub_178CE04((uint64_t)v191);
    *(void *)(a1 + 648) = v189;
  }
  if (*(void *)(a2 + 648)) {
    v192 = *(uint64_t (****)())(a2 + 648);
  }
  else {
    v192 = &off_2548768;
  }
  sub_1764A74(v189, (uint64_t)v192);
  if ((v179 & 8) == 0)
  {
LABEL_237:
    if ((v179 & 0x10) == 0) {
      goto LABEL_238;
    }
    goto LABEL_300;
  }
LABEL_292:
  *(_DWORD *)(a1 + 44) |= 8u;
  v193 = *(std::string **)(a1 + 656);
  if (!v193)
  {
    uint64_t v194 = *(void *)(a1 + 8);
    v195 = (void *)(v194 & 0xFFFFFFFFFFFFFFFCLL);
    if (v194) {
      v195 = (void *)*v195;
    }
    v193 = (std::string *)sub_1662ECC((uint64_t)v195);
    *(void *)(a1 + 656) = v193;
  }
  if (*(void *)(a2 + 656)) {
    v196 = *(uint64_t (****)())(a2 + 656);
  }
  else {
    v196 = &off_2542758;
  }
  sub_165AE5C(v193, (uint64_t)v196);
  if ((v179 & 0x10) == 0)
  {
LABEL_238:
    if ((v179 & 0x20) == 0) {
      goto LABEL_239;
    }
    goto LABEL_301;
  }
LABEL_300:
  *(void *)(a1 + 664) = *(void *)(a2 + 664);
  if ((v179 & 0x20) == 0)
  {
LABEL_239:
    if ((v179 & 0x40) == 0) {
      goto LABEL_240;
    }
LABEL_302:
    *(_DWORD *)(a1 + 676) = *(_DWORD *)(a2 + 676);
    if ((v179 & 0x80) == 0) {
      goto LABEL_242;
    }
    goto LABEL_241;
  }
LABEL_301:
  *(_DWORD *)(a1 + 672) = *(_DWORD *)(a2 + 672);
  if ((v179 & 0x40) != 0) {
    goto LABEL_302;
  }
LABEL_240:
  if ((v179 & 0x80) != 0) {
LABEL_241:
  }
    *(void *)(a1 + 680) = *(void *)(a2 + 680);
LABEL_242:
  *(_DWORD *)(a1 + 44) |= v179;
LABEL_243:
  if ((v179 & 0xFF00) == 0) {
    goto LABEL_254;
  }
  if ((v179 & 0x100) != 0)
  {
    *(void *)(a1 + 688) = *(void *)(a2 + 688);
    if ((v179 & 0x200) == 0)
    {
LABEL_246:
      if ((v179 & 0x400) == 0) {
        goto LABEL_247;
      }
      goto LABEL_306;
    }
  }
  else if ((v179 & 0x200) == 0)
  {
    goto LABEL_246;
  }
  *(_DWORD *)(a1 + 696) = *(_DWORD *)(a2 + 696);
  if ((v179 & 0x400) == 0)
  {
LABEL_247:
    if ((v179 & 0x800) == 0) {
      goto LABEL_248;
    }
    goto LABEL_307;
  }
LABEL_306:
  *(_DWORD *)(a1 + 700) = *(_DWORD *)(a2 + 700);
  if ((v179 & 0x800) == 0)
  {
LABEL_248:
    if ((v179 & 0x1000) == 0) {
      goto LABEL_249;
    }
    goto LABEL_308;
  }
LABEL_307:
  *(_DWORD *)(a1 + 704) = *(_DWORD *)(a2 + 704);
  if ((v179 & 0x1000) == 0)
  {
LABEL_249:
    if ((v179 & 0x2000) == 0) {
      goto LABEL_250;
    }
    goto LABEL_309;
  }
LABEL_308:
  *(_DWORD *)(a1 + 708) = *(_DWORD *)(a2 + 708);
  if ((v179 & 0x2000) == 0)
  {
LABEL_250:
    if ((v179 & 0x4000) == 0) {
      goto LABEL_251;
    }
LABEL_310:
    *(_DWORD *)(a1 + 720) = *(_DWORD *)(a2 + 720);
    if ((v179 & 0x8000) == 0) {
      goto LABEL_253;
    }
    goto LABEL_252;
  }
LABEL_309:
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  if ((v179 & 0x4000) != 0) {
    goto LABEL_310;
  }
LABEL_251:
  if ((v179 & 0x8000) != 0) {
LABEL_252:
  }
    *(_DWORD *)(a1 + 724) = *(_DWORD *)(a2 + 724);
LABEL_253:
  *(_DWORD *)(a1 + 44) |= v179;
LABEL_254:
  if ((v179 & 0x7F0000) == 0) {
    goto LABEL_264;
  }
  if ((v179 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 728) = *(_DWORD *)(a2 + 728);
    if ((v179 & 0x20000) == 0)
    {
LABEL_257:
      if ((v179 & 0x40000) == 0) {
        goto LABEL_258;
      }
      goto LABEL_314;
    }
  }
  else if ((v179 & 0x20000) == 0)
  {
    goto LABEL_257;
  }
  *(unsigned char *)(a1 + 732) = *(unsigned char *)(a2 + 732);
  if ((v179 & 0x40000) == 0)
  {
LABEL_258:
    if ((v179 & 0x80000) == 0) {
      goto LABEL_259;
    }
    goto LABEL_315;
  }
LABEL_314:
  *(unsigned char *)(a1 + 733) = *(unsigned char *)(a2 + 733);
  if ((v179 & 0x80000) == 0)
  {
LABEL_259:
    if ((v179 & 0x100000) == 0) {
      goto LABEL_260;
    }
    goto LABEL_316;
  }
LABEL_315:
  *(_DWORD *)(a1 + 736) = *(_DWORD *)(a2 + 736);
  if ((v179 & 0x100000) == 0)
  {
LABEL_260:
    if ((v179 & 0x200000) == 0) {
      goto LABEL_261;
    }
LABEL_317:
    *(void *)(a1 + 744) = *(void *)(a2 + 744);
    if ((v179 & 0x400000) == 0) {
      goto LABEL_263;
    }
    goto LABEL_262;
  }
LABEL_316:
  *(_DWORD *)(a1 + 740) = *(_DWORD *)(a2 + 740);
  if ((v179 & 0x200000) != 0) {
    goto LABEL_317;
  }
LABEL_261:
  if ((v179 & 0x400000) != 0) {
LABEL_262:
  }
    *(_DWORD *)(a1 + 752) = *(_DWORD *)(a2 + 752);
LABEL_263:
  *(_DWORD *)(a1 + 44) |= v179;
LABEL_264:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v180 = *(void *)(a2 + 8);
  if (v180)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v180 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1661890(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 80);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_15BAF9C(*(void *)(*(void *)(a1 + 88) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v6 = *(unsigned int *)(a1 + 104);
    while ((int)v6 >= 1)
    {
      uint64_t v7 = v6 - 1;
      BOOL v8 = sub_1477328(*(void *)(*(void *)(a1 + 112) + 8 * v6));
      uint64_t v6 = v7;
      if (!v8) {
        return 0;
      }
    }
    uint64_t result = sub_1276150(a1 + 120);
    if (result)
    {
      uint64_t result = sub_1651170(a1 + 184);
      if (result)
      {
        int v9 = *(_DWORD *)(a1 + 40);
        if ((v9 & 0x200000) != 0)
        {
          uint64_t result = sub_15BA3C8(*(void *)(a1 + 544));
          if (!result) {
            return result;
          }
          int v9 = *(_DWORD *)(a1 + 40);
        }
        if ((v9 & 0x400000) != 0)
        {
          uint64_t result = sub_15B0F18(*(void *)(a1 + 552));
          if (!result) {
            return result;
          }
          int v9 = *(_DWORD *)(a1 + 40);
        }
        if ((v9 & 0x800000) != 0)
        {
          uint64_t result = sub_15B1FC0(*(void *)(a1 + 560));
          if (!result) {
            return result;
          }
          int v9 = *(_DWORD *)(a1 + 40);
        }
        if ((v9 & 0x1000000) != 0)
        {
          uint64_t v10 = *(void *)(a1 + 568);
          if ((*(unsigned char *)(v10 + 16) & 2) != 0)
          {
            uint64_t result = sub_15B0F18(*(void *)(v10 + 32));
            if (!result) {
              return result;
            }
            int v9 = *(_DWORD *)(a1 + 40);
          }
        }
        if ((v9 & 0x2000000) != 0)
        {
          uint64_t result = sub_1276150(*(void *)(a1 + 576) + 24);
          if (!result) {
            return result;
          }
          int v9 = *(_DWORD *)(a1 + 40);
        }
        if ((v9 & 0x10000000) != 0)
        {
          uint64_t result = sub_15B1FC0(*(void *)(a1 + 600));
          if (!result) {
            return result;
          }
          int v9 = *(_DWORD *)(a1 + 40);
        }
        if ((v9 & 0x20000000) != 0)
        {
          uint64_t result = sub_1276150(*(void *)(a1 + 608) + 24);
          if (!result) {
            return result;
          }
          int v9 = *(_DWORD *)(a1 + 40);
        }
        if ((v9 & 0x80000000) == 0) {
          return 1;
        }
        uint64_t result = sub_15BF6F4(*(void *)(a1 + 624));
        if (result) {
          return 1;
        }
      }
    }
  }
  return result;
}

void *sub_16619E0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.SearchSessionSummary");
}

void *sub_16619F0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1661A64(void *a1)
{
  sub_16619F0(a1);

  operator delete();
}

uint64_t sub_1661A9C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0xF) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1661AC0(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v34 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    BOOL v8 = v34 + 1;
    unsigned int v9 = *v34;
    if (*v34 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        BOOL v8 = (char *)sub_188C180((uint64_t)v34, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        BOOL v8 = v34 + 2;
      }
    }
    int v34 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_29;
        }
        v5 |= 1u;
        int v13 = v8 + 1;
        LODWORD(v12) = *v8;
        if ((v12 & 0x80) == 0) {
          goto LABEL_13;
        }
        int v14 = *v13;
        uint64_t v12 = v12 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          int v13 = v8 + 2;
LABEL_13:
          int v34 = v13;
          *(_DWORD *)(a1 + 24) = v12;
          goto LABEL_36;
        }
        int v26 = (char *)sub_188C138((uint64_t)v8, v12);
        int v34 = v26;
        *(_DWORD *)(a1 + 24) = v27;
        if (v26) {
          goto LABEL_36;
        }
        goto LABEL_49;
      case 2u:
        if (v9 != 16) {
          goto LABEL_29;
        }
        v5 |= 2u;
        v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          v28 = (char *)sub_188C0D0((uint64_t)v8, v16);
          int v34 = v28;
          *(_DWORD *)(a1 + 28) = v29;
          if (!v28) {
            goto LABEL_49;
          }
        }
        else
        {
          v15 = v8 + 2;
LABEL_18:
          int v34 = v15;
          *(_DWORD *)(a1 + 28) = v16;
        }
        goto LABEL_36;
      case 3u:
        if (v9 != 24) {
          goto LABEL_29;
        }
        v5 |= 4u;
        v19 = v8 + 1;
        LODWORD(v18) = *v8;
        if ((v18 & 0x80) == 0) {
          goto LABEL_23;
        }
        int v20 = *v19;
        uint64_t v18 = v18 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          v30 = (char *)sub_188C138((uint64_t)v8, v18);
          int v34 = v30;
          *(_DWORD *)(a1 + 32) = v31;
          if (!v30) {
            goto LABEL_49;
          }
        }
        else
        {
          v19 = v8 + 2;
LABEL_23:
          int v34 = v19;
          *(_DWORD *)(a1 + 32) = v18;
        }
        goto LABEL_36;
      case 4u:
        if (v9 != 32) {
          goto LABEL_29;
        }
        v5 |= 8u;
        int v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          v32 = (char *)sub_188C0D0((uint64_t)v8, v22);
          int v34 = v32;
          *(_DWORD *)(a1 + 36) = v33;
          if (!v32) {
            goto LABEL_49;
          }
        }
        else
        {
          int v21 = v8 + 2;
LABEL_28:
          int v34 = v21;
          *(_DWORD *)(a1 + 36) = v22;
        }
        goto LABEL_36;
      default:
LABEL_29:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            uint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            BOOL v8 = v34;
          }
          int v34 = (char *)sub_1885AC0(v9, v25, v8, a3);
          if (!v34) {
            goto LABEL_49;
          }
LABEL_36:
          if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_49:
        }
          int v34 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v34;
    }
  }
}

unsigned char *sub_1661D90(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 32);
    *uint64_t v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 36);
    *uint64_t v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_166202C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  int v3 = *(_DWORD *)(a1 + 24);
  if ((v3 & 0x80000000) == 0)
  {
    uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  uint64_t v2 = 11;
  if ((v1 & 2) != 0) {
LABEL_8:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_9:
  if ((v1 & 4) == 0)
  {
    if ((v1 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6 < 0) {
    uint64_t v7 = 11;
  }
  else {
    uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v7;
  if ((v1 & 8) != 0) {
LABEL_11:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_12:
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1662144()
{
  return 1;
}

void *sub_166214C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.ResultDetourInfo");
}

void *sub_166215C(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16621D0(void *a1)
{
  sub_166215C(a1);

  operator delete();
}

uint64_t sub_1662208(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0xF) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(_DWORD *)(a1 + 40) = 1;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1662234(uint64_t a1, char *a2, int32x2_t *a3)
{
  v35 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v35, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = v35 + 1;
    unsigned int v9 = *v35;
    if (*v35 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v35, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v35 + 2;
      }
    }
    v35 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_31;
        }
        v5 |= 1u;
        unsigned int v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unsigned int v12 = v8 + 2;
LABEL_13:
          v35 = v12;
          *(void *)(a1 + 24) = v13;
          goto LABEL_38;
        }
        int v27 = (char *)sub_188C138((uint64_t)v8, v13);
        v35 = v27;
        *(void *)(a1 + 24) = v28;
        if (v27) {
          goto LABEL_38;
        }
        goto LABEL_55;
      case 2u:
        if (v9 != 16) {
          goto LABEL_31;
        }
        v5 |= 2u;
        unsigned int v16 = v8 + 1;
        LODWORD(v15) = *v8;
        if ((v15 & 0x80) == 0) {
          goto LABEL_18;
        }
        int v17 = *v16;
        uint64_t v15 = v15 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          int v29 = (char *)sub_188C138((uint64_t)v8, v15);
          v35 = v29;
          *(_DWORD *)(a1 + 32) = v30;
          if (!v29) {
            goto LABEL_55;
          }
        }
        else
        {
          unsigned int v16 = v8 + 2;
LABEL_18:
          v35 = v16;
          *(_DWORD *)(a1 + 32) = v15;
        }
        goto LABEL_38;
      case 3u:
        if (v9 != 24) {
          goto LABEL_31;
        }
        unsigned int v18 = v8 + 1;
        unint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v21 = v19 + (v20 << 7);
        unint64_t v19 = (v21 - 128);
        if (v20 < 0)
        {
          v35 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
          if (!v35) {
            goto LABEL_55;
          }
          unint64_t v19 = v31;
        }
        else
        {
          unsigned int v18 = v8 + 2;
LABEL_23:
          v35 = v18;
        }
        if ((v19 - 1) > 9)
        {
          if (*v7) {
            int v34 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(3, v19, v34);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 40) = v19;
        }
        goto LABEL_38;
      case 4u:
        if (v9 != 32) {
          goto LABEL_31;
        }
        v5 |= 4u;
        uint64_t v23 = v8 + 1;
        LODWORD(v22) = *v8;
        if ((v22 & 0x80) == 0) {
          goto LABEL_30;
        }
        int v24 = *v23;
        uint64_t v22 = v22 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          v32 = (char *)sub_188C138((uint64_t)v8, v22);
          v35 = v32;
          *(_DWORD *)(a1 + 36) = v33;
          if (!v32) {
            goto LABEL_55;
          }
        }
        else
        {
          uint64_t v23 = v8 + 2;
LABEL_30:
          v35 = v23;
          *(_DWORD *)(a1 + 36) = v22;
        }
        goto LABEL_38;
      default:
LABEL_31:
        if (v9) {
          BOOL v25 = (v9 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          if (*v7)
          {
            int v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = v35;
          }
          v35 = (char *)sub_1885AC0(v9, v26, v8, a3);
          if (!v35) {
            goto LABEL_55;
          }
LABEL_38:
          if (sub_11947B8((uint64_t)a3, &v35, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_55:
        }
          v35 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v35;
    }
  }
}

unsigned char *sub_166254C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 32);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 40);
    *uint64_t v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 36);
    *uint64_t v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

unint64_t sub_16627E8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    unint64_t v2 = 0;
    goto LABEL_22;
  }
  if (v1)
  {
    unint64_t v2 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    unint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v3 = *(_DWORD *)(a1 + 32);
  if (v3 < 0) {
    uint64_t v4 = 11;
  }
  else {
    uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v4;
LABEL_11:
  if ((v1 & 4) == 0)
  {
    if ((v1 & 8) == 0) {
      goto LABEL_22;
    }
    goto LABEL_18;
  }
  int v5 = *(_DWORD *)(a1 + 36);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v6;
  if ((v1 & 8) != 0)
  {
LABEL_18:
    int v7 = *(_DWORD *)(a1 + 40);
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v8;
  }
LABEL_22:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1662908(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_8;
  }
  if (v2)
  {
    result[1].__r_.__value_.__r.__words[0] = *(void *)(a2 + 24);
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
LABEL_12:
      HIDWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
      if ((v2 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  LODWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
  if ((v2 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_5:
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    LODWORD(result[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
LABEL_7:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_8:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_166297C()
{
  return 1;
}

void *sub_1662984@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.ResultMetrics");
}

double sub_1662994(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24CC210;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  *(void *)(v2 + 32) = &qword_2550250;
  *(void *)(v2 + 40) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(void *)(v2 + 80) = 0;
  *(_DWORD *)(v2 + 88) = -1;
  return result;
}

void *sub_1662A30(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_24CC290;
  result[2] = 0;
  result[4] = 0;
  result[5] = 0;
  result[3] = &qword_2550250;
  return result;
}

void *sub_1662AB8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_24CC310;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  result[6] = &qword_2550250;
  result[7] = 0;
  result[8] = 0;
  return result;
}

double sub_1662B44(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = &off_24CC390;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = 0;
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = 0;
  *(void *)(v2 + 80) = 0;
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = 0;
  *(void *)(v2 + 104) = 0;
  *(void *)(v2 + 112) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_OWORD *)(v2 + 136) = 0u;
  *(_OWORD *)(v2 + 148) = 0u;
  return result;
}

void *sub_1662C10(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = &off_24CC410;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  result[8] = 0;
  result[9] = 0;
  return result;
}

void *sub_1662CB8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = &off_24CC490;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  result[8] = 0;
  result[9] = 0;
  return result;
}

void *sub_1662D60(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = &off_24CC510;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = &qword_2550250;
  result[10] = 0;
  result[11] = 0;
  result[12] = 0;
  return result;
}

void *sub_1662E14(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = &off_24CC590;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = &qword_2550250;
  result[10] = &qword_2550250;
  result[11] = &qword_2550250;
  result[12] = 0;
  result[13] = 0;
  result[14] = 0;
  return result;
}

uint64_t sub_1662ECC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24CC610;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = a1;
  *(void *)(result + 64) = 0;
  *(unsigned char *)(result + 72) = 0;
  return result;
}

uint64_t sub_1662F78(uint64_t a1)
{
  if (!a1)
  {
    sub_16650F8();
  }

  return sub_165AFF4(v3, a1, 0);
}

void *sub_1662FD4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24CC710;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_1663050(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24CC790;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = 1;
  return result;
}

uint64_t sub_16630D4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  int v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16631A0(uint64_t a1)
{
  sub_16630D4(a1);

  operator delete();
}

uint64_t sub_16631D8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v22 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
    return *(void *)v22;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v22 + 1);
    unsigned int v8 = **(unsigned char **)v22;
    if ((char)**(unsigned char **)v22 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v22, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v22 + 2);
      }
    }
    *(void *)uint64_t v22 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 == 26)
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 8);
        unint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          unint64_t v17 = (uint64_t *)*v17;
        }
        unint64_t v18 = (void *)(a1 + 40);
        goto LABEL_32;
      }
    }
    else if (v11 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 8);
        unint64_t v17 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          unint64_t v17 = (uint64_t *)*v17;
        }
        unint64_t v18 = (void *)(a1 + 32);
        goto LABEL_32;
      }
    }
    else if (v11 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v20 = *(void *)(a1 + 8);
      unint64_t v17 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        unint64_t v17 = (uint64_t *)*v17;
      }
      unint64_t v18 = (void *)(a1 + 24);
LABEL_32:
      unint64_t v21 = (std::string *)sub_1880F84(v18, v17);
      unint64_t v15 = (void *)sub_188C244(v21, *(char **)v22, (uint64_t)a3);
      goto LABEL_33;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      unint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v22;
    }
    unint64_t v15 = sub_1885AC0(v8, v14, v7, a3);
LABEL_33:
    *(void *)uint64_t v22 = v15;
    if (!v15) {
      goto LABEL_39;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
      return *(void *)v22;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v22;
  }
LABEL_39:
  *(void *)uint64_t v22 = 0;
  return *(void *)v22;
}

char *sub_16633C8(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_5:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_16634E0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_16;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v9 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_16:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1663600()
{
  return 1;
}

void *sub_1663608@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.ServiceConfig");
}

uint64_t sub_1663618(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16636D0(uint64_t a1)
{
  sub_1663618(a1);

  operator delete();
}

uint64_t sub_1663708(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1663784(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)uint64_t v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        unint64_t v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v16 = (uint64_t *)*v16;
      }
      unint64_t v17 = (void *)(a1 + 24);
LABEL_27:
      uint64_t v19 = (std::string *)sub_1880F84(v17, v16);
      unint64_t v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v20;
    }
    unint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)uint64_t v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)uint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_166392C(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_1663A18(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1663AF4()
{
  return 1;
}

void *sub_1663AFC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.StringKeyValuePair");
}

void *sub_1663B0C(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1663B80(void *a1)
{
  sub_1663B0C(a1);

  operator delete();
}

char *sub_1663BB8(uint64_t a1, char *a2, int32x2_t *a3)
{
  BOOL v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v25 + 2;
      }
    }
    BOOL v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v16 = v8 + 1;
    LODWORD(v15) = *v8;
    if ((v15 & 0x80) == 0) {
      goto LABEL_25;
    }
    int v17 = *v16;
    uint64_t v15 = v15 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v16 = v8 + 2;
LABEL_25:
      BOOL v25 = v16;
      *(_DWORD *)(a1 + 28) = v15;
      goto LABEL_30;
    }
    unint64_t v21 = (char *)sub_188C138((uint64_t)v8, v15);
    BOOL v25 = v21;
    *(_DWORD *)(a1 + 28) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v19 = v8 + 1;
    LODWORD(v18) = *v8;
    if ((v18 & 0x80) == 0) {
      goto LABEL_29;
    }
    int v20 = *v19;
    uint64_t v18 = v18 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_29:
      BOOL v25 = v19;
      *(_DWORD *)(a1 + 24) = v18;
      goto LABEL_30;
    }
    uint64_t v23 = (char *)sub_188C138((uint64_t)v8, v18);
    BOOL v25 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      unint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v25;
    }
    BOOL v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  BOOL v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_1663DA0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 28);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1663F44(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_14;
  }
  if (v1)
  {
    int v3 = *(_DWORD *)(a1 + 24);
    if (v3 < 0)
    {
      uint64_t v2 = 11;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v4 = *(_DWORD *)(a1 + 28);
  if (v4 < 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v5;
LABEL_14:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1664004()
{
  return 1;
}

void *sub_166400C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.QueryStringStat");
}

void *sub_166401C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24CC810;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  return result;
}

void *sub_16640A4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24CC890;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

void *sub_1664128(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24CC910;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void sub_16641A0()
{
}

void *sub_16641FC(uint64_t a1, uint64_t a2)
{
  return sub_166401C(a2);
}

uint64_t sub_1664204(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_166420C()
{
}

void *sub_1664264(uint64_t a1, uint64_t a2)
{
  return sub_16640A4(a2);
}

uint64_t sub_166426C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1664274()
{
}

void *sub_16642C0(uint64_t a1, uint64_t a2)
{
  return sub_1664128(a2);
}

uint64_t sub_16642C8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16642D0()
{
}

void sub_1664318()
{
}

uint64_t sub_166433C(uint64_t a1, uint64_t a2)
{
  return sub_1653964(a2);
}

uint64_t sub_1664344(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

void sub_166434C()
{
}

uint64_t sub_166439C(uint64_t a1, uint64_t a2)
{
  return sub_16539C0(a2);
}

uint64_t sub_16643A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16643AC()
{
}

double sub_1664424(uint64_t a1, uint64_t a2)
{
  return sub_1653A3C(a2);
}

uint64_t sub_166442C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1664434()
{
}

uint64_t sub_1664490(uint64_t a1, uint64_t a2)
{
  return sub_1653ACC(a2);
}

uint64_t sub_1664498(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16644A0()
{
}

double sub_1664510(uint64_t a1, uint64_t a2)
{
  return sub_1662994(a2);
}

uint64_t sub_1664518(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1664520()
{
}

void *sub_166457C(uint64_t a1, uint64_t a2)
{
  return sub_1662A30(a2);
}

uint64_t sub_1664584(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_166458C()
{
}

void *sub_16645EC(uint64_t a1, uint64_t a2)
{
  return sub_1662AB8(a2);
}

uint64_t sub_16645F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16645FC()
{
}

double sub_166466C(uint64_t a1, uint64_t a2)
{
  return sub_1662B44(a2);
}

uint64_t sub_1664674(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_166467C()
{
}

void *sub_16646DC(uint64_t a1, uint64_t a2)
{
  return sub_1662C10(a2);
}

uint64_t sub_16646E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16646EC()
{
}

void *sub_166474C(uint64_t a1, uint64_t a2)
{
  return sub_1662CB8(a2);
}

uint64_t sub_1664754(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_166475C()
{
}

void *sub_16647C4(uint64_t a1, uint64_t a2)
{
  return sub_1662D60(a2);
}

uint64_t sub_16647CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16647D4()
{
}

void *sub_1664840(uint64_t a1, uint64_t a2)
{
  return sub_1662E14(a2);
}

uint64_t sub_1664848(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1664850()
{
}

uint64_t sub_16648A8(uint64_t a1, uint64_t a2)
{
  return sub_1662ECC(a2);
}

uint64_t sub_16648B0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16648B8()
{
}

void sub_1664900()
{
}

uint64_t sub_1664924(uint64_t a1, uint64_t a2)
{
  return sub_1662F78(a2);
}

uint64_t sub_166492C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

void sub_1664934()
{
}

void *sub_1664984(uint64_t a1, uint64_t a2)
{
  return sub_1662FD4(a2);
}

uint64_t sub_166498C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1664994()
{
}

uint64_t sub_16649EC(uint64_t a1, uint64_t a2)
{
  return sub_1663050(a2);
}

uint64_t sub_16649F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16649FC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_17EFB84();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_1664A7C(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  unint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    unint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_183492C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_122C7C8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_1664AF8()
{
}

void sub_1664B40()
{
}

void sub_1664B64()
{
}

void sub_1664BDC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1657E48(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1664C5C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16588C0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1664CDC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16595D8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1664D5C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16619F0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1664DDC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12A0FF0();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_1664E5C(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  unint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    unint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1662CB8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_1664ED8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1664ED8(uint64_t a1, std::string *a2)
{
  return sub_1658730(a2, a1);
}

std::string *sub_1664EE8(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  unint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    unint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1662D60(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_1664F64(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1664F64(uint64_t a1, std::string *a2)
{
  return sub_165940C(a2, a1);
}

std::string *sub_1664F74(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  unint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    unint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1662E14(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_1664FF0(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1664FF0(uint64_t a1, std::string *a2)
{
  return sub_165A288(a2, a1);
}

std::string *sub_1665000(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  unint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    unint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1662FD4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_122D098(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_166507C(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  unint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    unint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_12BBB40(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1194DD8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_16650F8()
{
}

void sub_1665140()
{
}

void sub_1665164()
{
  dword_2550128 = 10000;
  qword_2550130 = (uint64_t)&unk_2160770;
  sub_1882224((unint64_t)&off_25422C8, 10000, 12, 0, 0);
  dword_2550138 = 10000;
  qword_2550140 = (uint64_t)&unk_2160788;
  sub_1882224((unint64_t)&off_25427A8, 10000, 12, 0, 0);
  dword_2550148 = 10001;
  qword_2550150 = (uint64_t)&unk_21607A0;
  sub_1882224((unint64_t)&off_25427A8, 10001, 12, 0, 0);
  dword_2550158 = 10002;
  qword_2550160 = (uint64_t)&unk_21607B8;
  sub_1882224((unint64_t)&off_25427A8, 10002, 12, 0, 0);
  dword_2550168 = 10003;
  qword_2550170 = (uint64_t)&unk_21607D0;

  sub_1882224((unint64_t)&off_25427A8, 10003, 12, 0, 0);
}

char *sub_1665298()
{
  qword_261EB68 = (uint64_t)"CLICK_SEARCHNO_ACTIONTAP_CLIENT_RESULTTAP_RESULT";
  unk_261EB70 = 12;
  dword_261EB78 = 1;
  qword_261EB80 = (uint64_t)"NO_ACTIONTAP_CLIENT_RESULTTAP_RESULT";
  unk_261EB88 = 9;
  dword_261EB90 = 0;
  qword_261EB98 = (uint64_t)"TAP_CLIENT_RESULTTAP_RESULT";
  unk_261EBA0 = 17;
  dword_261EBA8 = 3;
  qword_261EBB0 = (uint64_t)"TAP_RESULT";
  unk_261EBB8 = 10;
  dword_261EBC0 = 2;
  qword_261EBC8 = (uint64_t)"ACTION_CONVERSION_FAVORABLE_ACTIONACTION_CONVERSION_GUIDE_CAROUSEL_RELEVANT_GUIDEACTION_CONVE"
                           "RSION_GUIDE_CAROUSEL_SCROLLACTION_CONVERSION_GUIDE_CAROUSEL_TAP_GUIDEACTION_CONVERSION_GUIDE_"
                           "DWELLACTION_CONVERSION_GUIDE_FAVORABLE_ACTIONACTION_CONVERSION_GUIDE_TAP_GUIDE_ITEMACTION_CON"
                           "VERSION_LOG_LOSSACTION_CONVERSION_NAVIGATIONACTION_CONVERSION_NOT_APPLICABLEACTION_CONVERSION"
                           "_NO_ACTIONSACTION_CONVERSION_NO_RESULTSACTION_CONVERSION_OTHER_INTERACTIONACTION_CONVERSION_P"
                           "LACECARD_DWELLACTION_CONVERSION_ROUTINGACTION_CONVERSION_SCROLL_RESULTSACTION_CONVERSION_SIRI_PUNCH_OUT_NAV";
  unk_261EBD0 = 34;
  dword_261EBD8 = 2;
  qword_261EBE0 = (uint64_t)"ACTION_CONVERSION_GUIDE_CAROUSEL_RELEVANT_GUIDEACTION_CONVERSION_GUIDE_CAROUSEL_SCROLLACTION_CONVERSION_GUIDE_CAROUSEL_TAP_GUIDEACTION_CONVERSION_GUIDE_DWELLACTION_CONVERSION_GUIDE_FAVORABLE_ACTIONACTION_CONVERSION_GUIDE_TAP_GUIDE_ITEMACTION_CONVERSION_LOG_LOSSACTION_CONVERSION_NAVIGATIONACTION_CONVERSION_NOT_APPLICABLEACTION_CONVERSION_NO_ACTIONSACTION_CONVERSION_NO_RESULTSACTION_CONVERSION_OTHER_INTERACTIONACTION_CONVERSION_PLACECARD_DWELLACTION_CONVERSION_ROUTINGACTION_CONVERSION_SCROLL_RESULTSACTION_CONVERSION_SIRI_PUNCH_OUT_NAV";
  unk_261EBE8 = 47;
  dword_261EBF0 = 11;
  qword_261EBF8 = (uint64_t)"ACTION_CONVERSION_GUIDE_CAROUSEL_SCROLLACTION_CONVERSION_GUIDE_CAROUSEL_TAP_GUIDEACTION_CONVERSION_GUIDE_DWELLACTION_CONVERSION_GUIDE_FAVORABLE_ACTIONACTION_CONVERSION_GUIDE_TAP_GUIDE_ITEMACTION_CONVERSION_LOG_LOSSACTION_CONVERSION_NAVIGATIONACTION_CONVERSION_NOT_APPLICABLEACTION_CONVERSION_NO_ACTIONSACTION_CONVERSION_NO_RESULTSACTION_CONVERSION_OTHER_INTERACTIONACTION_CONVERSION_PLACECARD_DWELLACTION_CONVERSION_ROUTINGACTION_CONVERSION_SCROLL_RESULTSACTION_CONVERSION_SIRI_PUNCH_OUT_NAV";
  unk_261EC00 = 39;
  dword_261EC08 = 13;
  qword_261EC10 = (uint64_t)"ACTION_CONVERSION_GUIDE_CAROUSEL_TAP_GUIDEACTION_CONVERSION_GUIDE_DWELLACTION_CONVERSION_GUIDE_FAVORABLE_ACTIONACTION_CONVERSION_GUIDE_TAP_GUIDE_ITEMACTION_CONVERSION_LOG_LOSSACTION_CONVERSION_NAVIGATIONACTION_CONVERSION_NOT_APPLICABLEACTION_CONVERSION_NO_ACTIONSACTION_CONVERSION_NO_RESULTSACTION_CONVERSION_OTHER_INTERACTIONACTION_CONVERSION_PLACECARD_DWELLACTION_CONVERSION_ROUTINGACTION_CONVERSION_SCROLL_RESULTSACTION_CONVERSION_SIRI_PUNCH_OUT_NAV";
  unk_261EC18 = 42;
  dword_261EC20 = 12;
  qword_261EC28 = (uint64_t)"ACTION_CONVERSION_GUIDE_DWELLACTION_CONVERSION_GUIDE_FAVORABLE_ACTIONACTION_CONVERSION_GUIDE_TAP_GUIDE_ITEMACTION_CONVERSION_LOG_LOSSACTION_CONVERSION_NAVIGATIONACTION_CONVERSION_NOT_APPLICABLEACTION_CONVERSION_NO_ACTIONSACTION_CONVERSION_NO_RESULTSACTION_CONVERSION_OTHER_INTERACTIONACTION_CONVERSION_PLACECARD_DWELLACTION_CONVERSION_ROUTINGACTION_CONVERSION_SCROLL_RESULTSACTION_CONVERSION_SIRI_PUNCH_OUT_NAV";
  unk_261EC30 = 29;
  dword_261EC38 = 16;
  qword_261EC40 = (uint64_t)"ACTION_CONVERSION_GUIDE_FAVORABLE_ACTIONACTION_CONVERSION_GUIDE_TAP_GUIDE_ITEMACTION_CONVERSION_LOG_LOSSACTION_CONVERSION_NAVIGATIONACTION_CONVERSION_NOT_APPLICABLEACTION_CONVERSION_NO_ACTIONSACTION_CONVERSION_NO_RESULTSACTION_CONVERSION_OTHER_INTERACTIONACTION_CONVERSION_PLACECARD_DWELLACTION_CONVERSION_ROUTINGACTION_CONVERSION_SCROLL_RESULTSACTION_CONVERSION_SIRI_PUNCH_OUT_NAV";
  unk_261EC48 = 40;
  dword_261EC50 = 14;
  qword_261EC58 = (uint64_t)"ACTION_CONVERSION_GUIDE_TAP_GUIDE_ITEMACTION_CONVERSION_LOG_LOSSACTION_CONVERSION_NAVIGATIONACTION_CONVERSION_NOT_APPLICABLEACTION_CONVERSION_NO_ACTIONSACTION_CONVERSION_NO_RESULTSACTION_CONVERSION_OTHER_INTERACTIONACTION_CONVERSION_PLACECARD_DWELLACTION_CONVERSION_ROUTINGACTION_CONVERSION_SCROLL_RESULTSACTION_CONVERSION_SIRI_PUNCH_OUT_NAV";
  unk_261EC60 = 38;
  dword_261EC68 = 15;
  qword_261EC70 = (uint64_t)"ACTION_CONVERSION_LOG_LOSSACTION_CONVERSION_NAVIGATIONACTION_CONVERSION_NOT_APPLICABLEACTION_CONVERSION_NO_ACTIONSACTION_CONVERSION_NO_RESULTSACTION_CONVERSION_OTHER_INTERACTIONACTION_CONVERSION_PLACECARD_DWELLACTION_CONVERSION_ROUTINGACTION_CONVERSION_SCROLL_RESULTSACTION_CONVERSION_SIRI_PUNCH_OUT_NAV";
  unk_261EC78 = 26;
  dword_261EC80 = 9;
  qword_261EC88 = (uint64_t)"ACTION_CONVERSION_NAVIGATIONACTION_CONVERSION_NOT_APPLICABLEACTION_CONVERSION_NO_ACTIONSACTION_CONVERSION_NO_RESULTSACTION_CONVERSION_OTHER_INTERACTIONACTION_CONVERSION_PLACECARD_DWELLACTION_CONVERSION_ROUTINGACTION_CONVERSION_SCROLL_RESULTSACTION_CONVERSION_SIRI_PUNCH_OUT_NAV";
  unk_261EC90 = 28;
  dword_261EC98 = 1;
  qword_261ECA0 = (uint64_t)"ACTION_CONVERSION_NOT_APPLICABLEACTION_CONVERSION_NO_ACTIONSACTION_CONVERSION_NO_RESULTSACTION_CONVERSION_OTHER_INTERACTIONACTION_CONVERSION_PLACECARD_DWELLACTION_CONVERSION_ROUTINGACTION_CONVERSION_SCROLL_RESULTSACTION_CONVERSION_SIRI_PUNCH_OUT_NAV";
  unk_261ECA8 = 32;
  dword_261ECB0 = 0;
  qword_261ECB8 = (uint64_t)"ACTION_CONVERSION_NO_ACTIONSACTION_CONVERSION_NO_RESULTSACTION_CONVERSION_OTHER_INTERACTIONACTION_CONVERSION_PLACECARD_DWELLACTION_CONVERSION_ROUTINGACTION_CONVERSION_SCROLL_RESULTSACTION_CONVERSION_SIRI_PUNCH_OUT_NAV";
  unk_261ECC0 = 28;
  dword_261ECC8 = 7;
  qword_261ECD0 = (uint64_t)"ACTION_CONVERSION_NO_RESULTSACTION_CONVERSION_OTHER_INTERACTIONACTION_CONVERSION_PLACECARD_DWELLACTION_CONVERSION_ROUTINGACTION_CONVERSION_SCROLL_RESULTSACTION_CONVERSION_SIRI_PUNCH_OUT_NAV";
  unk_261ECD8 = 28;
  dword_261ECE0 = 8;
  qword_261ECE8 = (uint64_t)"ACTION_CONVERSION_OTHER_INTERACTIONACTION_CONVERSION_PLACECARD_DWELLACTION_CONVERSION_ROUTINGACTION_CONVERSION_SCROLL_RESULTSACTION_CONVERSION_SIRI_PUNCH_OUT_NAV";
  unk_261ECF0 = 35;
  dword_261ECF8 = 6;
  qword_261ED00 = (uint64_t)"ACTION_CONVERSION_PLACECARD_DWELLACTION_CONVERSION_ROUTINGACTION_CONVERSION_SCROLL_RESULTSACTION_CONVERSION_SIRI_PUNCH_OUT_NAV";
  unk_261ED08 = 33;
  dword_261ED10 = 4;
  qword_261ED18 = (uint64_t)"ACTION_CONVERSION_ROUTINGACTION_CONVERSION_SCROLL_RESULTSACTION_CONVERSION_SIRI_PUNCH_OUT_NAV";
  unk_261ED20 = 25;
  dword_261ED28 = 3;
  qword_261ED30 = (uint64_t)"ACTION_CONVERSION_SCROLL_RESULTSACTION_CONVERSION_SIRI_PUNCH_OUT_NAV";
  unk_261ED38 = 32;
  dword_261ED40 = 5;
  qword_261ED48 = (uint64_t)"ACTION_CONVERSION_SIRI_PUNCH_OUT_NAV";
  unk_261ED50 = 36;
  dword_261ED58 = 10;
  qword_261ED60 = (uint64_t)"INTERACTED_WITH_RESULTSINTERESTNO_ACTIONNO_RESULTSOTHER_MAP_INTERACTIONREFINEMENTRESULT_INTER"
                           "ACTIONSTRONG_INTERESTUNKNOWNWIN";
  *(void *)algn_261ED68 = 23;
  dword_261ED70 = 3;
  qword_261ED78 = (uint64_t)"INTERESTNO_ACTIONNO_RESULTSOTHER_MAP_INTERACTIONREFINEMENTRESULT_INTERACTIONSTRONG_INTERESTUNKNOWNWIN";
  unk_261ED80 = 8;
  dword_261ED88 = 7;
  qword_261ED90 = (uint64_t)"NO_ACTIONNO_RESULTSOTHER_MAP_INTERACTIONREFINEMENTRESULT_INTERACTIONSTRONG_INTERESTUNKNOWNWIN";
  unk_261ED98 = 9;
  dword_261EDA0 = 4;
  qword_261EDA8 = (uint64_t)"NO_RESULTSOTHER_MAP_INTERACTIONREFINEMENTRESULT_INTERACTIONSTRONG_INTERESTUNKNOWNWIN";
  unk_261EDB0 = 10;
  dword_261EDB8 = 5;
  qword_261EDC0 = (uint64_t)"OTHER_MAP_INTERACTIONREFINEMENTRESULT_INTERACTIONSTRONG_INTERESTUNKNOWNWIN";
  unk_261EDC8 = 21;
  dword_261EDD0 = 9;
  qword_261EDD8 = (uint64_t)"REFINEMENTRESULT_INTERACTIONSTRONG_INTERESTUNKNOWNWIN";
  unk_261EDE0 = 10;
  dword_261EDE8 = 10;
  qword_261EDF0 = (uint64_t)"RESULT_INTERACTIONSTRONG_INTERESTUNKNOWNWIN";
  unk_261EDF8 = 18;
  dword_261EE00 = 8;
  qword_261EE08 = (uint64_t)"STRONG_INTERESTUNKNOWNWIN";
  unk_261EE10 = 15;
  dword_261EE18 = 6;
  qword_261EE20 = (uint64_t)"UNKNOWNWIN";
  unk_261EE28 = 7;
  dword_261EE30 = 1;
  qword_261EE38 = (uint64_t)"WIN";
  unk_261EE40 = 3;
  dword_261EE48 = 2;
  qword_261EE50 = (uint64_t)"AC_CATEGORY_TAPBROWSE_CATEGORY_TAPBROWSE_ZKW_CATEGORY_TAPCATEGORY_FILTERED_ACCATEGORY_FILTERE"
                           "D_SEARCHCLIENT_ACCLIENT_NO_TYPINGNORMAL_ACNORMAL_SEARCHNORMAL_SEARCH_NO_TYPINGPOPULAR_NEARBYR"
                           "OUTING_QUERY_SOURCESEARCH_ALONG_ROUTE_IN_NAVSERVER_ACUNDETERMINISTICUNKNOWN_MAPS_SOURCEUNKNOW"
                           "N_QUERY_SOURCEURLZKW_CATEGORY_TAP";
  *(void *)algn_261EE58 = 15;
  dword_261EE60 = 1;
  qword_261EE68 = (uint64_t)"BROWSE_CATEGORY_TAPBROWSE_ZKW_CATEGORY_TAPCATEGORY_FILTERED_ACCATEGORY_FILTERED_SEARCHCLIENT_ACCLIENT_NO_TYPINGNORMAL_ACNORMAL_SEARCHNORMAL_SEARCH_NO_TYPINGPOPULAR_NEARBYROUTING_QUERY_SOURCESEARCH_ALONG_ROUTE_IN_NAVSERVER_ACUNDETERMINISTICUNKNOWN_MAPS_SOURCEUNKNOWN_QUERY_SOURCEURLZKW_CATEGORY_TAP";
  unk_261EE70 = 19;
  dword_261EE78 = 9;
  qword_261EE80 = (uint64_t)"BROWSE_ZKW_CATEGORY_TAPCATEGORY_FILTERED_ACCATEGORY_FILTERED_SEARCHCLIENT_ACCLIENT_NO_TYPINGNORMAL_ACNORMAL_SEARCHNORMAL_SEARCH_NO_TYPINGPOPULAR_NEARBYROUTING_QUERY_SOURCESEARCH_ALONG_ROUTE_IN_NAVSERVER_ACUNDETERMINISTICUNKNOWN_MAPS_SOURCEUNKNOWN_QUERY_SOURCEURLZKW_CATEGORY_TAP";
  unk_261EE88 = 23;
  dword_261EE90 = 2;
  qword_261EE98 = (uint64_t)"CATEGORY_FILTERED_ACCATEGORY_FILTERED_SEARCHCLIENT_ACCLIENT_NO_TYPINGNORMAL_ACNORMAL_SEARCHNORMAL_SEARCH_NO_TYPINGPOPULAR_NEARBYROUTING_QUERY_SOURCESEARCH_ALONG_ROUTE_IN_NAVSERVER_ACUNDETERMINISTICUNKNOWN_MAPS_SOURCEUNKNOWN_QUERY_SOURCEURLZKW_CATEGORY_TAP";
  unk_261EEA0 = 20;
  dword_261EEA8 = 14;
  qword_261EEB0 = (uint64_t)"CATEGORY_FILTERED_SEARCHCLIENT_ACCLIENT_NO_TYPINGNORMAL_ACNORMAL_SEARCHNORMAL_SEARCH_NO_TYPINGPOPULAR_NEARBYROUTING_QUERY_SOURCESEARCH_ALONG_ROUTE_IN_NAVSERVER_ACUNDETERMINISTICUNKNOWN_MAPS_SOURCEUNKNOWN_QUERY_SOURCEURLZKW_CATEGORY_TAP";
  unk_261EEB8 = 24;
  dword_261EEC0 = 3;
  qword_261EEC8 = (uint64_t)"CLIENT_ACCLIENT_NO_TYPINGNORMAL_ACNORMAL_SEARCHNORMAL_SEARCH_NO_TYPINGPOPULAR_NEARBYROUTING_QUERY_SOURCESEARCH_ALONG_ROUTE_IN_NAVSERVER_ACUNDETERMINISTICUNKNOWN_MAPS_SOURCEUNKNOWN_QUERY_SOURCEURLZKW_CATEGORY_TAP";
  unk_261EED0 = 9;
  dword_261EED8 = 11;
  qword_261EEE0 = (uint64_t)"CLIENT_NO_TYPINGNORMAL_ACNORMAL_SEARCHNORMAL_SEARCH_NO_TYPINGPOPULAR_NEARBYROUTING_QUERY_SOURCESEARCH_ALONG_ROUTE_IN_NAVSERVER_ACUNDETERMINISTICUNKNOWN_MAPS_SOURCEUNKNOWN_QUERY_SOURCEURLZKW_CATEGORY_TAP";
  unk_261EEE8 = 16;
  dword_261EEF0 = 10;
  qword_261EEF8 = (uint64_t)"NORMAL_ACNORMAL_SEARCHNORMAL_SEARCH_NO_TYPINGPOPULAR_NEARBYROUTING_QUERY_SOURCESEARCH_ALONG_ROUTE_IN_NAVSERVER_ACUNDETERMINISTICUNKNOWN_MAPS_SOURCEUNKNOWN_QUERY_SOURCEURLZKW_CATEGORY_TAP";
  unk_261EF00 = 9;
  dword_261EF08 = 5;
  qword_261EF10 = (uint64_t)"NORMAL_SEARCHNORMAL_SEARCH_NO_TYPINGPOPULAR_NEARBYROUTING_QUERY_SOURCESEARCH_ALONG_ROUTE_IN_NAVSERVER_ACUNDETERMINISTICUNKNOWN_MAPS_SOURCEUNKNOWN_QUERY_SOURCEURLZKW_CATEGORY_TAP";
  unk_261EF18 = 13;
  dword_261EF20 = 4;
  qword_261EF28 = (uint64_t)"NORMAL_SEARCH_NO_TYPINGPOPULAR_NEARBYROUTING_QUERY_SOURCESEARCH_ALONG_ROUTE_IN_NAVSERVER_ACUNDETERMINISTICUNKNOWN_MAPS_SOURCEUNKNOWN_QUERY_SOURCEURLZKW_CATEGORY_TAP";
  unk_261EF30 = 23;
  dword_261EF38 = 12;
  qword_261EF40 = (uint64_t)"POPULAR_NEARBYROUTING_QUERY_SOURCESEARCH_ALONG_ROUTE_IN_NAVSERVER_ACUNDETERMINISTICUNKNOWN_MAPS_SOURCEUNKNOWN_QUERY_SOURCEURLZKW_CATEGORY_TAP";
  unk_261EF48 = 14;
  dword_261EF50 = 7;
  qword_261EF58 = (uint64_t)"ROUTING_QUERY_SOURCESEARCH_ALONG_ROUTE_IN_NAVSERVER_ACUNDETERMINISTICUNKNOWN_MAPS_SOURCEUNKNOWN_QUERY_SOURCEURLZKW_CATEGORY_TAP";
  unk_261EF60 = 20;
  dword_261EF68 = 16;
  qword_261EF70 = (uint64_t)"SEARCH_ALONG_ROUTE_IN_NAVSERVER_ACUNDETERMINISTICUNKNOWN_MAPS_SOURCEUNKNOWN_QUERY_SOURCEURLZKW_CATEGORY_TAP";
  unk_261EF78 = 25;
  dword_261EF80 = 18;
  qword_261EF88 = (uint64_t)"SERVER_ACUNDETERMINISTICUNKNOWN_MAPS_SOURCEUNKNOWN_QUERY_SOURCEURLZKW_CATEGORY_TAP";
  unk_261EF90 = 9;
  dword_261EF98 = 13;
  qword_261EFA0 = (uint64_t)"UNDETERMINISTICUNKNOWN_MAPS_SOURCEUNKNOWN_QUERY_SOURCEURLZKW_CATEGORY_TAP";
  unk_261EFA8 = 15;
  dword_261EFB0 = 6;
  qword_261EFB8 = (uint64_t)"UNKNOWN_MAPS_SOURCEUNKNOWN_QUERY_SOURCEURLZKW_CATEGORY_TAP";
  unk_261EFC0 = 19;
  dword_261EFC8 = 17;
  qword_261EFD0 = (uint64_t)"UNKNOWN_QUERY_SOURCEURLZKW_CATEGORY_TAP";
  unk_261EFD8 = 20;
  dword_261EFE0 = 0;
  qword_261EFE8 = (uint64_t)"URLZKW_CATEGORY_TAP";
  unk_261EFF0 = 3;
  dword_261EFF8 = 15;
  qword_261F000 = (uint64_t)"ZKW_CATEGORY_TAP";
  unk_261F008 = 16;
  dword_261F010 = 8;
  qword_261F018 = (uint64_t)"SEARCH_PURPOSE_ORIGINALSEARCH_PURPOSE_REDOSEARCH_PURPOSE_REFINESEARCH_PURPOSE_UNKNOWN";
  unk_261F020 = 23;
  dword_261F028 = 1;
  qword_261F030 = (uint64_t)"SEARCH_PURPOSE_REDOSEARCH_PURPOSE_REFINESEARCH_PURPOSE_UNKNOWN";
  unk_261F038 = 19;
  dword_261F040 = 3;
  qword_261F048 = (uint64_t)"SEARCH_PURPOSE_REFINESEARCH_PURPOSE_UNKNOWN";
  unk_261F050 = 21;
  dword_261F058 = 2;
  qword_261F060 = (uint64_t)"SEARCH_PURPOSE_UNKNOWN";
  unk_261F068 = 22;
  dword_261F070 = 0;
  qword_261F078 = (uint64_t)"IOSMAC_OSOTHER_OSTV_OSUNKNOWN_OSWATCH_OS";
  unk_261F080 = 3;
  dword_261F088 = 1;
  qword_261F090 = (uint64_t)"MAC_OSOTHER_OSTV_OSUNKNOWN_OSWATCH_OS";
  unk_261F098 = 6;
  dword_261F0A0 = 2;
  qword_261F0A8 = (uint64_t)"OTHER_OSTV_OSUNKNOWN_OSWATCH_OS";
  unk_261F0B0 = 8;
  dword_261F0B8 = 10;
  qword_261F0C0 = (uint64_t)"TV_OSUNKNOWN_OSWATCH_OS";
  unk_261F0C8 = 5;
  dword_261F0D0 = 4;
  qword_261F0D8 = (uint64_t)"UNKNOWN_OSWATCH_OS";
  unk_261F0E0 = 10;
  dword_261F0E8 = 0;
  qword_261F0F0 = (uint64_t)"WATCH_OS";
  unk_261F0F8 = 8;
  dword_261F100 = 3;
  qword_261F108 = (uint64_t)"NAV_MODE_TYPE_FULL_GUIDANCENAV_MODE_TYPE_LIGHT_GUIDANCENAV_MODE_TYPE_UNKNOWN";
  unk_261F110 = 27;
  dword_261F118 = 2;
  qword_261F120 = (uint64_t)"NAV_MODE_TYPE_LIGHT_GUIDANCENAV_MODE_TYPE_UNKNOWN";
  unk_261F128 = 28;
  dword_261F130 = 1;
  qword_261F138 = (uint64_t)"NAV_MODE_TYPE_UNKNOWN";
  unk_261F140 = 21;
  dword_261F148 = 0;
  qword_261F150 = (uint64_t)"FEEDBACKROUTINGSEARCHUNKNOWN_EVENT_TYPE";
  *(void *)algn_261F158 = 8;
  dword_261F160 = 2;
  qword_261F168 = (uint64_t)"ROUTINGSEARCHUNKNOWN_EVENT_TYPE";
  unk_261F170 = 7;
  dword_261F178 = 3;
  qword_261F180 = (uint64_t)"SEARCHUNKNOWN_EVENT_TYPE";
  unk_261F188 = 6;
  dword_261F190 = 4;
  qword_261F198 = (uint64_t)"UNKNOWN_EVENT_TYPE";
  unk_261F1A0 = 18;
  dword_261F1A8 = 1;
  qword_261F1B0 = (uint64_t)"DEVICE_CONNECTIVITY_CELLULARDEVICE_CONNECTIVITY_UNKNOWNDEVICE_CONNECTIVITY_WIFI";
  *(void *)algn_261F1B8 = 28;
  dword_261F1C0 = 1;
  qword_261F1C8 = (uint64_t)"DEVICE_CONNECTIVITY_UNKNOWNDEVICE_CONNECTIVITY_WIFI";
  unk_261F1D0 = 27;
  dword_261F1D8 = 0;
  qword_261F1E0 = (uint64_t)"DEVICE_CONNECTIVITY_WIFI";
  unk_261F1E8 = 24;
  dword_261F1F0 = 2;
  qword_261F1F8 = (uint64_t)"CONNECTIONSHIGH_FREQUENCYLOW_FREQUENCYMIXED_FREQUENCYSUMMARYUNKNOWN_CATEGORY";
  unk_261F200 = 11;
  dword_261F208 = 5;
  qword_261F210 = (uint64_t)"HIGH_FREQUENCYLOW_FREQUENCYMIXED_FREQUENCYSUMMARYUNKNOWN_CATEGORY";
  unk_261F218 = 14;
  dword_261F220 = 3;
  qword_261F228 = (uint64_t)"LOW_FREQUENCYMIXED_FREQUENCYSUMMARYUNKNOWN_CATEGORY";
  unk_261F230 = 13;
  dword_261F238 = 2;
  qword_261F240 = (uint64_t)"MIXED_FREQUENCYSUMMARYUNKNOWN_CATEGORY";
  unk_261F248 = 15;
  dword_261F250 = 4;
  qword_261F258 = (uint64_t)"SUMMARYUNKNOWN_CATEGORY";
  unk_261F260 = 7;
  dword_261F268 = 1;
  qword_261F270 = (uint64_t)"UNKNOWN_CATEGORY";
  unk_261F278 = 16;
  dword_261F280 = 0;
  qword_261F288 = (uint64_t)"UI_TARGET_CALLOUTUI_TARGET_DROPPED_PINUI_TARGET_POIUI_TARGET_POPULAR_NEARBY_LISTUI_TARGET_SEA"
                           "RCH_PINUI_TARGET_SEARCH_RESULT_LISTUI_TARGET_TRANSIT_LINEUI_TARGET_UNKNOWN";
  unk_261F290 = 17;
  dword_261F298 = 4;
  qword_261F2A0 = (uint64_t)"UI_TARGET_DROPPED_PINUI_TARGET_POIUI_TARGET_POPULAR_NEARBY_LISTUI_TARGET_SEARCH_PINUI_TARGET_SEARCH_RESULT_LISTUI_TARGET_TRANSIT_LINEUI_TARGET_UNKNOWN";
  unk_261F2A8 = 21;
  dword_261F2B0 = 6;
  uint64_t result = "UI_TARGET_POIUI_TARGET_POPULAR_NEARBY_LISTUI_TARGET_SEARCH_PINUI_TARGET_SEARCH_RESULT_LISTUI_TARGET_TRANSIT_LINEUI_TARGET_UNKNOWN";
  qword_261F2B8 = (uint64_t)"UI_TARGET_POIUI_TARGET_POPULAR_NEARBY_LISTUI_TARGET_SEARCH_PINUI_TARGET_SEARCH_RESULT_LISTUI_TARGET_TRANSIT_LINEUI_TARGET_UNKNOWN";
  unk_261F2C0 = 13;
  dword_261F2C8 = 1;
  qword_261F2D0 = (uint64_t)"UI_TARGET_POPULAR_NEARBY_LISTUI_TARGET_SEARCH_PINUI_TARGET_SEARCH_RESULT_LISTUI_TARGET_TRANSIT_LINEUI_TARGET_UNKNOWN";
  unk_261F2D8 = 29;
  dword_261F2E0 = 3;
  qword_261F2E8 = (uint64_t)"UI_TARGET_SEARCH_PINUI_TARGET_SEARCH_RESULT_LISTUI_TARGET_TRANSIT_LINEUI_TARGET_UNKNOWN";
  unk_261F2F0 = 20;
  dword_261F2F8 = 5;
  qword_261F300 = (uint64_t)"UI_TARGET_SEARCH_RESULT_LISTUI_TARGET_TRANSIT_LINEUI_TARGET_UNKNOWN";
  unk_261F308 = 28;
  dword_261F310 = 2;
  qword_261F318 = (uint64_t)"UI_TARGET_TRANSIT_LINEUI_TARGET_UNKNOWN";
  unk_261F320 = 22;
  dword_261F328 = 7;
  qword_261F330 = (uint64_t)"UI_TARGET_UNKNOWN";
  unk_261F338 = 17;
  dword_261F340 = 0;
  return result;
}

uint64_t sub_16657E0(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_2542AF0 && *(void *)(a1 + 24))
  {
    sub_13D2884();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1665898(uint64_t a1)
{
  sub_16657E0(a1);

  operator delete();
}

uint64_t sub_16658D0(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_1369F48(*(void *)(result + 24));
    }
    *(_DWORD *)(v1 + 32) = 1;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_166593C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = v23 + 2;
      }
    }
    uint64_t v23 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 24);
    if (!v15)
    {
      uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v15 = sub_13DAB08((uint64_t)v16);
      *(void *)(a1 + 24) = v15;
      unint64_t v7 = v23;
    }
    unint64_t v14 = (char *)sub_1323390(a3, v15, (unsigned __int8 *)v7);
LABEL_26:
    uint64_t v23 = v14;
    if (!v14) {
      return 0;
    }
LABEL_34:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 >> 3 == 1 && v8 == 8)
  {
    uint64_t v17 = v7 + 1;
    unint64_t v18 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v19 = *v17;
    int v20 = v18 + (v19 << 7);
    unint64_t v18 = (v20 - 128);
    if (v19 < 0)
    {
      uint64_t v23 = (char *)sub_188C138((uint64_t)v7, (v20 - 128));
      if (!v23) {
        return 0;
      }
      unint64_t v18 = v21;
    }
    else
    {
      uint64_t v17 = v7 + 2;
LABEL_31:
      uint64_t v23 = v17;
    }
    if (sub_145C85C(v18))
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v18;
    }
    else
    {
      if (*v6) {
        int v22 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        int v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v18, v22);
    }
    goto LABEL_34;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = v23;
    }
    unint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_26;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

char *sub_1665B50(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    *char v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      BOOL v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      BOOL v12 = v4 + 2;
    }
    char v4 = sub_13D2F58(v10, v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1665CDC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_13D3304(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_11:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_1665DAC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v5 = *(void *)(a1 + 24);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          uint64_t v7 = (void *)*v7;
        }
        uint64_t v5 = sub_13DAB08((uint64_t)v7);
        *(void *)(a1 + 24) = v5;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v8 = &off_2536850;
      }
      sub_136AA7C(v5, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
    }
    *(_DWORD *)(a1 + 16) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1665E7C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_136AE2C(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1665EA8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.LineExt.TransitArtworkVersion");
}

uint64_t sub_1665EB8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24CCB58;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 1;
  return result;
}

uint64_t sub_1665F38(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_11DEC08(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 3) != 0)
  {
    if (v6) {
      uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 72));
    }
    if ((v6 & 2) != 0) {
      uint64_t result = sub_15B8FB8(*(void *)(a1 + 80));
    }
  }
  if ((v6 & 0xFC) != 0)
  {
    *(void *)(a1 + 88) = 0;
    *(void *)(a1 + 96) = 0;
  }
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(unsigned char *)(v7 + 96) = 0;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_1665FF4(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_11DF490(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 32) = 0;
  }
  sub_122ABC4(a1 + 48);
  uint64_t v5 = *(unsigned int *)(a1 + 80);
  if ((int)v5 >= 1)
  {
    int v6 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_11E3588(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 80) = 0;
  }
  *(_DWORD *)(a1 + 96) = 0;
  uint64_t v8 = *(unsigned int *)(a1 + 120);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a1 + 128) + 8);
    do
    {
      uint64_t v10 = *v9++;
      sub_11E397C(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(a1 + 120) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 136);
  uint64_t v12 = *(unsigned int *)(a1 + 168);
  if ((int)v12 >= 1)
  {
    uint64_t v13 = (uint64_t *)(*(void *)(a1 + 176) + 8);
    do
    {
      uint64_t v14 = *v13++;
      uint64_t result = sub_11E3FFC(v14);
      --v12;
    }
    while (v12);
    *(_DWORD *)(a1 + 168) = 0;
  }
  uint64_t v15 = *(unsigned int *)(a1 + 192);
  if ((int)v15 >= 1)
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 200) + 8);
    do
    {
      uint64_t v17 = *v16++;
      uint64_t result = sub_11E085C(v17);
      --v15;
    }
    while (v15);
    *(_DWORD *)(a1 + 192) = 0;
  }
  int v18 = *(_DWORD *)(a1 + 16);
  if ((v18 & 3) != 0)
  {
    if ((v18 & 1) == 0) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(a1 + 208) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v19 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v19 = 0;
      *(unsigned char *)(v19 + 23) = 0;
LABEL_25:
      if ((v18 & 2) == 0) {
        goto LABEL_27;
      }
      goto LABEL_26;
    }
    **(unsigned char **)unint64_t v19 = 0;
    *(void *)(v19 + 8) = 0;
    if ((v18 & 2) != 0) {
LABEL_26:
    }
      uint64_t result = sub_16BE138(*(void *)(a1 + 216));
  }
LABEL_27:
  if ((v18 & 0x3C) != 0)
  {
    *(void *)(a1 + 224) = 0;
    *(void *)(a1 + 232) = 0;
    *(void *)(a1 + 240) = 0;
  }
  char v21 = *(unsigned char *)(a1 + 8);
  uint64_t v20 = a1 + 8;
  *(_DWORD *)(v20 + 8) = 0;
  if (v21)
  {
    return sub_188B4AC((uint64_t *)v20);
  }
  return result;
}

void sub_1666180(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(a1 + 24, v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unsigned int v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_122B240((std::string *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v14)
  {
    if (v14)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v17 = *(void *)(a1 + 72);
      if (!v17)
      {
        uint64_t v18 = *(void *)(a1 + 8);
        unint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          unint64_t v19 = (void *)*v19;
        }
        uint64_t v17 = sub_15C1918((uint64_t)v19);
        *(void *)(a1 + 72) = v17;
      }
      if (*(void *)(a2 + 72)) {
        uint64_t v20 = *(uint64_t (****)())(a2 + 72);
      }
      else {
        uint64_t v20 = &off_253F1A0;
      }
      sub_15B0E24(v17, (uint64_t)v20);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_40;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    char v21 = *(std::string **)(a1 + 80);
    if (!v21)
    {
      uint64_t v22 = *(void *)(a1 + 8);
      uint64_t v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        uint64_t v23 = (void *)*v23;
      }
      char v21 = (std::string *)sub_15C1EF4((uint64_t)v23);
      *(void *)(a1 + 80) = v21;
    }
    if (*(void *)(a2 + 80)) {
      int v24 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      int v24 = &off_253F4C8;
    }
    sub_15B9698(v21, (uint64_t)v24);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_41;
    }
LABEL_40:
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    if ((v14 & 8) == 0)
    {
LABEL_12:
      if ((v14 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_42;
    }
LABEL_41:
    *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
    if ((v14 & 0x10) == 0)
    {
LABEL_13:
      if ((v14 & 0x20) == 0) {
        goto LABEL_14;
      }
      goto LABEL_43;
    }
LABEL_42:
    *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
    if ((v14 & 0x20) == 0)
    {
LABEL_14:
      if ((v14 & 0x40) == 0) {
        goto LABEL_15;
      }
      goto LABEL_44;
    }
LABEL_43:
    *(unsigned char *)(a1 + 101) = *(unsigned char *)(a2 + 101);
    if ((v14 & 0x40) == 0)
    {
LABEL_15:
      if ((v14 & 0x80) == 0)
      {
LABEL_17:
        *(_DWORD *)(a1 + 16) |= v14;
        goto LABEL_18;
      }
LABEL_16:
      *(unsigned char *)(a1 + 103) = *(unsigned char *)(a2 + 103);
      goto LABEL_17;
    }
LABEL_44:
    *(unsigned char *)(a1 + 102) = *(unsigned char *)(a2 + 102);
    if ((v14 & 0x80) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_18:
  if ((v14 & 0x100) != 0)
  {
    char v15 = *(unsigned char *)(a2 + 104);
    *(_DWORD *)(a1 + 16) |= 0x100u;
    *(unsigned char *)(a1 + 104) = v15;
  }
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_16663E4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_122B358((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unsigned int v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_16696FC((std::string *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    char v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_122B3E4((std::string *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    uint64_t v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 96);
  if (v19)
  {
    uint64_t v20 = *(int *)(a1 + 96);
    sub_188C80C((unsigned int *)(a1 + 96), v20 + v19);
    uint64_t v21 = *(void *)(a1 + 104);
    *(_DWORD *)(a1 + 96) += *(_DWORD *)(a2 + 96);
    memcpy((void *)(v21 + 4 * v20), *(const void **)(a2 + 104), 4 * *(int *)(a2 + 96));
  }
  int v22 = *(_DWORD *)(a2 + 120);
  if (v22)
  {
    uint64_t v23 = (uint64_t *)(*(void *)(a2 + 128) + 8);
    int v24 = (std::string **)sub_188CCE4(a1 + 112, *(_DWORD *)(a2 + 120));
    sub_122B470((uint64_t *)(a1 + 112), v24, v23, v22, **(_DWORD **)(a1 + 128) - *(_DWORD *)(a1 + 120));
    int v25 = *(_DWORD *)(a1 + 120) + v22;
    *(_DWORD *)(a1 + 120) = v25;
    int v26 = *(int **)(a1 + 128);
    if (*v26 < v25) {
      *int v26 = v25;
    }
  }
  int v27 = *(_DWORD *)(a2 + 144);
  if (v27)
  {
    uint64_t v28 = (const std::string **)(*(void *)(a2 + 152) + 8);
    int v29 = (std::string **)sub_188CCE4(a1 + 136, *(_DWORD *)(a2 + 144));
    sub_188FB98(a1 + 136, v29, v28, v27, **(_DWORD **)(a1 + 152) - *(_DWORD *)(a1 + 144));
    int v30 = *(_DWORD *)(a1 + 144) + v27;
    *(_DWORD *)(a1 + 144) = v30;
    unint64_t v31 = *(int **)(a1 + 152);
    if (*v31 < v30) {
      *unint64_t v31 = v30;
    }
  }
  int v32 = *(_DWORD *)(a2 + 168);
  if (v32)
  {
    int v33 = (uint64_t *)(*(void *)(a2 + 176) + 8);
    int v34 = (std::string **)sub_188CCE4(a1 + 160, *(_DWORD *)(a2 + 168));
    sub_122B4FC((uint64_t *)(a1 + 160), v34, v33, v32, **(_DWORD **)(a1 + 176) - *(_DWORD *)(a1 + 168));
    int v35 = *(_DWORD *)(a1 + 168) + v32;
    *(_DWORD *)(a1 + 168) = v35;
    int v36 = *(int **)(a1 + 176);
    if (*v36 < v35) {
      *int v36 = v35;
    }
  }
  int v37 = *(_DWORD *)(a2 + 192);
  if (v37)
  {
    v38 = (uint64_t *)(*(void *)(a2 + 200) + 8);
    int v39 = (std::string **)sub_188CCE4(a1 + 184, *(_DWORD *)(a2 + 192));
    sub_122B588((std::string *)(a1 + 184), v39, v38, v37, **(_DWORD **)(a1 + 200) - *(_DWORD *)(a1 + 192));
    int v40 = *(_DWORD *)(a1 + 192) + v37;
    *(_DWORD *)(a1 + 192) = v40;
    int v41 = *(int **)(a1 + 200);
    if (*v41 < v40) {
      *int v41 = v40;
    }
  }
  int v42 = *(_DWORD *)(a2 + 16);
  if ((v42 & 0x3F) != 0)
  {
    if (v42)
    {
      int v44 = (long long *)(*(void *)(a2 + 208) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v45 = *(void *)(a1 + 8);
      int v46 = (uint64_t *)(v45 & 0xFFFFFFFFFFFFFFFCLL);
      if (v45) {
        int v46 = (uint64_t *)*v46;
      }
      sub_1881DF4((std::string **)(a1 + 208), v44, v46);
      if ((v42 & 2) == 0)
      {
LABEL_27:
        if ((v42 & 4) == 0) {
          goto LABEL_28;
        }
        goto LABEL_48;
      }
    }
    else if ((v42 & 2) == 0)
    {
      goto LABEL_27;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    v47 = *(std::string **)(a1 + 216);
    if (!v47)
    {
      uint64_t v48 = *(void *)(a1 + 8);
      int v49 = (void *)(v48 & 0xFFFFFFFFFFFFFFFCLL);
      if (v48) {
        int v49 = (void *)*v49;
      }
      v47 = (std::string *)sub_1786400((uint64_t)v49);
      *(void *)(a1 + 216) = v47;
    }
    if (*(void *)(a2 + 216)) {
      v50 = *(uint64_t (****)())(a2 + 216);
    }
    else {
      v50 = &off_25446E8;
    }
    sub_12329D0(v47, (uint64_t)v50);
    if ((v42 & 4) == 0)
    {
LABEL_28:
      if ((v42 & 8) == 0) {
        goto LABEL_29;
      }
      goto LABEL_49;
    }
LABEL_48:
    *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
    if ((v42 & 8) == 0)
    {
LABEL_29:
      if ((v42 & 0x10) == 0) {
        goto LABEL_30;
      }
      goto LABEL_50;
    }
LABEL_49:
    *(_DWORD *)(a1 + 228) = *(_DWORD *)(a2 + 228);
    if ((v42 & 0x10) == 0)
    {
LABEL_30:
      if ((v42 & 0x20) == 0)
      {
LABEL_32:
        *(_DWORD *)(a1 + 16) |= v42;
        goto LABEL_33;
      }
LABEL_31:
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      goto LABEL_32;
    }
LABEL_50:
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    if ((v42 & 0x20) == 0) {
      goto LABEL_32;
    }
    goto LABEL_31;
  }
LABEL_33:
  uint64_t v43 = *(void *)(a2 + 8);
  if (v43)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v43 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1666830(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_15B0F18(*(void *)(a1 + 72));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_15B9824(*(void *)(a1 + 80));
  if (result) {
    return 1;
  }
  return result;
}

BOOL sub_166687C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_11E06FC(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

uint64_t sub_16668D4(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2542B18)
  {
    if (*(void *)(a1 + 72))
    {
      sub_15B0994();
      operator delete();
    }
    if (*(void *)(a1 + 80))
    {
      sub_15B8F7C();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_122AD28((void *)(a1 + 48));
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16669B8(uint64_t a1)
{
  sub_16668D4(a1);

  operator delete();
}

uint64_t sub_16669F0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v69 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v69, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (uint64_t **)(a1 + 24);
  uint64_t v8 = (void *)(a1 + 8);
  while (2)
  {
    int v9 = (unsigned __int8 *)(*(void *)v69 + 1);
    unsigned int v10 = **(unsigned char **)v69;
    if ((char)**(unsigned char **)v69 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        int v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v69, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        int v9 = (unsigned __int8 *)(*(void *)v69 + 2);
      }
    }
    *(void *)int v69 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_80;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v13 = *(void *)(a1 + 72);
        if (!v13)
        {
          int v14 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v8) {
            int v14 = (void *)*v14;
          }
          uint64_t v13 = sub_15C1918((uint64_t)v14);
          *(void *)(a1 + 72) = v13;
          int v9 = *(unsigned __int8 **)v69;
        }
        uint64_t v15 = (uint64_t)sub_1198F14(a3, v13, v9);
        goto LABEL_87;
      case 2u:
        if (v10 != 16) {
          goto LABEL_80;
        }
        uint64_t v16 = (char *)(v9 + 1);
        unint64_t v17 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v18 = *v16;
        int v19 = v17 + (v18 << 7);
        unint64_t v17 = (v19 - 128);
        if (v18 < 0)
        {
          *(void *)int v69 = sub_188C138((uint64_t)v9, (v19 - 128));
          if (!*(void *)v69) {
            goto LABEL_111;
          }
          unint64_t v17 = v55;
        }
        else
        {
          uint64_t v16 = (char *)(v9 + 2);
LABEL_19:
          *(void *)int v69 = v16;
        }
        if (sub_140B640(v17))
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 96) = v17;
        }
        else
        {
          if (*v8) {
            v68 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v68 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(2, v17, v68);
        }
        goto LABEL_88;
      case 3u:
        if (v10 != 24) {
          goto LABEL_80;
        }
        v5 |= 4u;
        uint64_t v20 = (char *)(v9 + 1);
        uint64_t v21 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_26;
        }
        int v22 = *v20;
        uint64_t v21 = v21 + (v22 << 7) - 128;
        if (v22 < 0)
        {
          uint64_t v56 = sub_188C138((uint64_t)v9, v21);
          *(void *)int v69 = v56;
          *(void *)(a1 + 88) = v57;
          if (!v56) {
            goto LABEL_111;
          }
        }
        else
        {
          uint64_t v20 = (char *)(v9 + 2);
LABEL_26:
          *(void *)int v69 = v20;
          *(void *)(a1 + 88) = v21;
        }
        goto LABEL_88;
      case 4u:
        if (v10 != 34) {
          goto LABEL_80;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v23 = *(void *)(a1 + 80);
        if (!v23)
        {
          int v24 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v8) {
            int v24 = (void *)*v24;
          }
          uint64_t v23 = sub_15C1EF4((uint64_t)v24);
          *(void *)(a1 + 80) = v23;
          int v9 = *(unsigned __int8 **)v69;
        }
        uint64_t v15 = sub_1198E84(a3, v23, v9);
        goto LABEL_87;
      case 0xAu:
        if (v10 != 80) {
          goto LABEL_80;
        }
        v5 |= 0x10u;
        int v25 = (char *)(v9 + 1);
        uint64_t v26 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_37;
        }
        int v27 = *v25;
        uint64_t v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          uint64_t v58 = sub_188C138((uint64_t)v9, v26);
          *(void *)int v69 = v58;
          *(unsigned char *)(a1 + 100) = v59 != 0;
          if (!v58) {
            goto LABEL_111;
          }
        }
        else
        {
          int v25 = (char *)(v9 + 2);
LABEL_37:
          *(void *)int v69 = v25;
          *(unsigned char *)(a1 + 100) = v26 != 0;
        }
        goto LABEL_88;
      case 0xBu:
        if (v10 != 88) {
          goto LABEL_80;
        }
        v5 |= 0x20u;
        uint64_t v28 = (char *)(v9 + 1);
        uint64_t v29 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_42;
        }
        int v30 = *v28;
        uint64_t v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          uint64_t v60 = sub_188C138((uint64_t)v9, v29);
          *(void *)int v69 = v60;
          *(unsigned char *)(a1 + 101) = v61 != 0;
          if (!v60) {
            goto LABEL_111;
          }
        }
        else
        {
          uint64_t v28 = (char *)(v9 + 2);
LABEL_42:
          *(void *)int v69 = v28;
          *(unsigned char *)(a1 + 101) = v29 != 0;
        }
        goto LABEL_88;
      case 0xCu:
        if (v10 != 96) {
          goto LABEL_80;
        }
        v5 |= 0x40u;
        unint64_t v31 = (char *)(v9 + 1);
        uint64_t v32 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_47;
        }
        int v33 = *v31;
        uint64_t v32 = v32 + (v33 << 7) - 128;
        if (v33 < 0)
        {
          uint64_t v62 = sub_188C138((uint64_t)v9, v32);
          *(void *)int v69 = v62;
          *(unsigned char *)(a1 + 102) = v63 != 0;
          if (!v62) {
            goto LABEL_111;
          }
        }
        else
        {
          unint64_t v31 = (char *)(v9 + 2);
LABEL_47:
          *(void *)int v69 = v31;
          *(unsigned char *)(a1 + 102) = v32 != 0;
        }
        goto LABEL_88;
      case 0xDu:
        if (v10 != 104) {
          goto LABEL_80;
        }
        v5 |= 0x80u;
        int v34 = (char *)(v9 + 1);
        uint64_t v35 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_52;
        }
        int v36 = *v34;
        uint64_t v35 = v35 + (v36 << 7) - 128;
        if (v36 < 0)
        {
          uint64_t v64 = sub_188C138((uint64_t)v9, v35);
          *(void *)int v69 = v64;
          *(unsigned char *)(a1 + 103) = v65 != 0;
          if (!v64) {
            goto LABEL_111;
          }
        }
        else
        {
          int v34 = (char *)(v9 + 2);
LABEL_52:
          *(void *)int v69 = v34;
          *(unsigned char *)(a1 + 103) = v35 != 0;
        }
        goto LABEL_88;
      case 0xEu:
        if (v10 != 114) {
          goto LABEL_80;
        }
        int v37 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          v38 = (char *)(v37 + 1);
          *(void *)int v69 = v37 + 1;
          int v39 = *(_DWORD **)(a1 + 40);
          if (v39 && (uint64_t v40 = *(int *)(a1 + 32), (int)v40 < *v39))
          {
            *(_DWORD *)(a1 + 32) = v40 + 1;
            int v41 = *(std::string **)&v39[2 * v40 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *uint64_t v43 = v42;
            v43[1] = sub_3A6EDC;
            void *v42 = 0;
            v42[1] = 0;
            v42[2] = 0;
            int v41 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v42);
            v38 = *(char **)v69;
          }
          int v37 = sub_188C244(v41, v38, (uint64_t)a3);
          *(void *)int v69 = v37;
          if (!v37) {
            goto LABEL_111;
          }
          if (*(void *)a3 <= (unint64_t)v37 || *v37 != 114) {
            goto LABEL_88;
          }
        }
      case 0xFu:
        if (v10 != 120) {
          goto LABEL_80;
        }
        v5 |= 0x100u;
        int v44 = (char *)(v9 + 1);
        uint64_t v45 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_69;
        }
        int v46 = *v44;
        uint64_t v45 = v45 + (v46 << 7) - 128;
        if (v46 < 0)
        {
          uint64_t v66 = sub_188C138((uint64_t)v9, v45);
          *(void *)int v69 = v66;
          *(unsigned char *)(a1 + 104) = v67 != 0;
          if (!v66) {
            goto LABEL_111;
          }
        }
        else
        {
          int v44 = (char *)(v9 + 2);
LABEL_69:
          *(void *)int v69 = v44;
          *(unsigned char *)(a1 + 104) = v45 != 0;
        }
        goto LABEL_88;
      case 0x14u:
        if (v10 != 162) {
          goto LABEL_80;
        }
        v47 = v9 - 2;
        while (1)
        {
          uint64_t v48 = v47 + 2;
          *(void *)int v69 = v47 + 2;
          int v49 = *(_DWORD **)(a1 + 64);
          if (v49 && (uint64_t v50 = *(int *)(a1 + 56), (int)v50 < *v49))
          {
            *(_DWORD *)(a1 + 56) = v50 + 1;
            uint64_t v51 = *(void *)&v49[2 * v50 + 2];
          }
          else
          {
            v52 = sub_11E7B10(*(void *)(a1 + 48));
            uint64_t v51 = sub_188CDC8(a1 + 48, (uint64_t)v52);
            uint64_t v48 = *(unsigned __int8 **)v69;
          }
          v47 = (unsigned __int8 *)sub_11DFBC0(a3, v51, v48);
          *(void *)int v69 = v47;
          if (!v47) {
            goto LABEL_111;
          }
          if (*(void *)a3 <= (unint64_t)v47 || *(_WORD *)v47 != 418) {
            goto LABEL_88;
          }
        }
      default:
LABEL_80:
        if (v10) {
          BOOL v53 = (v10 & 7) == 4;
        }
        else {
          BOOL v53 = 1;
        }
        if (!v53)
        {
          if (*v8)
          {
            int v54 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v54 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v9 = *(unsigned __int8 **)v69;
          }
          uint64_t v15 = (uint64_t)sub_1885AC0(v10, v54, (char *)v9, a3);
LABEL_87:
          *(void *)int v69 = v15;
          if (!v15) {
            goto LABEL_111;
          }
LABEL_88:
          if (sub_11947B8((uint64_t)a3, (char **)v69, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_111:
        }
          *(void *)int v69 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v69;
    }
  }
}

char *sub_16670C8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 72);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      int v9 = v4 + 2;
    }
    uint64_t v4 = sub_15B0C0C(v7, v9, a3);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 96);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(void *)(a1 + 88);
    *uint64_t v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 80);
    *uint64_t v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      int v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      int v18 = v4 + 2;
    }
    uint64_t v4 = sub_15B9320(v16, v18, a3);
    if ((v6 & 0x10) == 0)
    {
LABEL_24:
      if ((v6 & 0x20) == 0) {
        goto LABEL_25;
      }
      goto LABEL_37;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_24;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v19 = *(unsigned char *)(a1 + 100);
  *uint64_t v4 = 80;
  v4[1] = v19;
  v4 += 2;
  if ((v6 & 0x20) == 0)
  {
LABEL_25:
    if ((v6 & 0x40) == 0) {
      goto LABEL_26;
    }
    goto LABEL_40;
  }
LABEL_37:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v20 = *(unsigned char *)(a1 + 101);
  *uint64_t v4 = 88;
  v4[1] = v20;
  v4 += 2;
  if ((v6 & 0x40) == 0)
  {
LABEL_26:
    if ((v6 & 0x80) == 0) {
      goto LABEL_46;
    }
    goto LABEL_43;
  }
LABEL_40:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v21 = *(unsigned char *)(a1 + 102);
  *uint64_t v4 = 96;
  v4[1] = v21;
  v4 += 2;
  if ((v6 & 0x80) != 0)
  {
LABEL_43:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v22 = *(unsigned char *)(a1 + 103);
    *uint64_t v4 = 104;
    v4[1] = v22;
    v4 += 2;
  }
LABEL_46:
  uint64_t v23 = *(unsigned int *)(a1 + 32);
  if ((int)v23 >= 1)
  {
    uint64_t v24 = 0;
    uint64_t v25 = 8 * v23;
    do
    {
      uint64_t v26 = *(void **)(*(void *)(a1 + 40) + v24 + 8);
      if (*((char *)v26 + 23) < 0)
      {
        int64_t v27 = v26[1];
        if (v27 > 127) {
          goto LABEL_57;
        }
      }
      else
      {
        int64_t v27 = *((unsigned __int8 *)v26 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v27)
      {
        *uint64_t v4 = 114;
        v4[1] = v27;
        if (*((char *)v26 + 23) < 0) {
          uint64_t v26 = (void *)*v26;
        }
        uint64_t v28 = v4 + 2;
        memcpy(v28, v26, v27);
        uint64_t v4 = &v28[v27];
        goto LABEL_55;
      }
LABEL_57:
      uint64_t v4 = (char *)sub_188A868(a3, 14, (uint64_t)v26, v4);
LABEL_55:
      v24 += 8;
    }
    while (v25 != v24);
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v29 = *(unsigned char *)(a1 + 104);
    *uint64_t v4 = 120;
    v4[1] = v29;
    v4 += 2;
  }
  int v30 = *(_DWORD *)(a1 + 56);
  if (v30)
  {
    for (int i = 0; i != v30; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v32 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *(_WORD *)uint64_t v4 = 418;
      unsigned int v33 = *(_DWORD *)(v32 + 20);
      v4[2] = v33;
      if (v33 > 0x7F) {
        int v34 = sub_188A9CC(v33, v4 + 2);
      }
      else {
        int v34 = v4 + 3;
      }
      uint64_t v4 = sub_11DEF68(v32, v34, a3);
    }
  }
  uint64_t v35 = *(void *)(a1 + 8);
  if ((v35 & 1) == 0) {
    return v4;
  }
  unint64_t v37 = v35 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v37 + 31) < 0)
  {
    v38 = *(void **)(v37 + 8);
    uint64_t v39 = *(void *)(v37 + 16);
  }
  else
  {
    v38 = (void *)(v37 + 8);
    LODWORD(v39) = *(unsigned __int8 *)(v37 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v39)
  {
    uint64_t v40 = (int)v39;
    memcpy(v4, v38, (int)v39);
    v4 += v40;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v38, v39, v4);
}

uint64_t sub_16675A4(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    int v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v4 + 2 * v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_11DF0C4(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v15)
  {
    if (v15)
    {
      uint64_t v22 = sub_15B0D90(*(void *)(a1 + 72));
      v9 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v15 & 2) == 0)
      {
LABEL_17:
        if ((v15 & 4) == 0) {
          goto LABEL_18;
        }
        goto LABEL_39;
      }
    }
    else if ((v15 & 2) == 0)
    {
      goto LABEL_17;
    }
    uint64_t v23 = sub_15B956C(*(void *)(a1 + 80));
    v9 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 4) == 0)
    {
LABEL_18:
      if ((v15 & 8) != 0)
      {
LABEL_19:
        int v16 = *(_DWORD *)(a1 + 96);
        uint64_t v17 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
        if (v16 >= 0) {
          uint64_t v18 = v17;
        }
        else {
          uint64_t v18 = 11;
        }
        v9 += v18;
      }
LABEL_23:
      uint64_t v19 = v9 + 2;
      if ((v15 & 0x10) == 0) {
        uint64_t v19 = v9;
      }
      if ((v15 & 0x20) != 0) {
        v19 += 2;
      }
      if ((v15 & 0x40) != 0) {
        v19 += 2;
      }
      if ((v15 & 0x80) != 0) {
        uint64_t v9 = v19 + 2;
      }
      else {
        uint64_t v9 = v19;
      }
      goto LABEL_32;
    }
LABEL_39:
    v9 += ((9 * (__clz(*(void *)(a1 + 88) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v15 & 8) != 0) {
      goto LABEL_19;
    }
    goto LABEL_23;
  }
LABEL_32:
  if ((v15 & 0x100) != 0) {
    uint64_t result = v9 + 2;
  }
  else {
    uint64_t result = v9;
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if (v21)
  {
    unint64_t v24 = v21 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v24 + 31) < 0) {
      uint64_t v25 = *(void *)(v24 + 16);
    }
    else {
      uint64_t v25 = *(unsigned __int8 *)(v24 + 31);
    }
    result += v25;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void *sub_16677BC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geocoding.GeminiReverseGeocodingRequest");
}

void *sub_16677CC(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1667840(void *a1)
{
  sub_16677CC(a1);

  operator delete();
}

uint64_t sub_1667878(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1667890(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v13 = v7 + 1;
    uint64_t v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    uint64_t v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v7 + 2;
LABEL_19:
      uint64_t v19 = v13;
      *(void *)(a1 + 24) = v14;
      int v5 = 1;
      goto LABEL_20;
    }
    int v16 = (char *)sub_188C138((uint64_t)v7, v14);
    uint64_t v19 = v16;
    *(void *)(a1 + 24) = v17;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      uint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_1667A10(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(void *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

unint64_t sub_1667B38(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    unint64_t v1 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  else {
    unint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_1667BA0()
{
  return 1;
}

void *sub_1667BA8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geocoding.GeminiReverseGeocodingResponse.CutoutMask");
}

double sub_1667BB8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)a1 = off_24CCCD8;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = a2;
  *(void *)(a1 + 112) = a2;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = a2;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = a2;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = a2;
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  return result;
}

uint64_t sub_1667C2C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 208);
  if (*(uint64_t **)(a1 + 208) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2542B88 && *(void *)(a1 + 216))
  {
    sub_16BE0FC();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_122B028((void *)(a1 + 184));
  sub_122AFA8((void *)(a1 + 160));
  sub_1889DE8((void *)(a1 + 136));
  sub_122AF28((void *)(a1 + 112));
  sub_1889DA8(a1 + 96);
  sub_122AEA8((void *)(a1 + 72));
  sub_166967C((void *)(a1 + 48));
  sub_122AE28((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1667D50(uint64_t a1)
{
  sub_1667C2C(a1);

  operator delete();
}

uint64_t sub_1667D88(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v93 = a2;
  if ((sub_11947B8((uint64_t)a3, (char **)v93, a3[11].i32[1]) & 1) == 0)
  {
    int v89 = 0;
    uint64_t v88 = (uint64_t *)(a1 + 8);
    v90 = (uint64_t *)(a1 + 160);
    uint64_t v91 = (uint64_t *)(a1 + 184);
    v92 = (uint64_t **)(a1 + 136);
    while (1)
    {
      unint64_t v6 = (unsigned __int8 *)(*(void *)v93 + 1);
      unsigned int v7 = **(unsigned char **)v93;
      if ((char)**(unsigned char **)v93 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if ((char)*v6 < 0)
        {
          unint64_t v6 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v93, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          unint64_t v6 = (unsigned __int8 *)(*(void *)v93 + 2);
        }
      }
      *(void *)v93 = v6;
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 10) {
            goto LABEL_138;
          }
          unsigned int v10 = v6 - 1;
          while (1)
          {
            unint64_t v11 = v10 + 1;
            *(void *)v93 = v10 + 1;
            uint64_t v12 = *(_DWORD **)(a1 + 40);
            if (v12 && (uint64_t v13 = *(int *)(a1 + 32), (int)v13 < *v12))
            {
              *(_DWORD *)(a1 + 32) = v13 + 1;
              uint64_t v14 = *(void *)&v12[2 * v13 + 2];
            }
            else
            {
              sub_11E7B98(*(void *)(a1 + 24));
              uint64_t v14 = sub_188CDC8(a1 + 24, v15);
              unint64_t v11 = *(unsigned __int8 **)v93;
            }
            unsigned int v10 = (unsigned __int8 *)sub_11E5434(a3, v14, v11);
            *(void *)v93 = v10;
            if (!v10) {
              goto LABEL_155;
            }
            if (*(void *)a3 <= (unint64_t)v10 || *v10 != 10) {
              goto LABEL_146;
            }
          }
        case 2u:
          if (v7 != 16) {
            goto LABEL_138;
          }
          int v16 = (char *)(v6 + 1);
          unint64_t v17 = *v6;
          if (((char)*v6 & 0x80000000) == 0) {
            goto LABEL_24;
          }
          int v18 = *v16;
          int v19 = v17 + (v18 << 7);
          unint64_t v17 = (v19 - 128);
          if (v18 < 0)
          {
            *(void *)v93 = sub_188C138((uint64_t)v6, (v19 - 128));
            if (!*(void *)v93) {
              goto LABEL_155;
            }
            unint64_t v17 = v78;
          }
          else
          {
            int v16 = (char *)(v6 + 2);
LABEL_24:
            *(void *)v93 = v16;
          }
          if (sub_13E78E4(v17))
          {
            *(_DWORD *)(a1 + 16) |= 4u;
            *(_DWORD *)(a1 + 224) = v17;
          }
          else
          {
            if (*v88) {
              v87 = (std::string *)((*v88 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              v87 = (std::string *)sub_188DBD8(v88);
            }
            sub_188C020(2, v17, v87);
          }
          goto LABEL_146;
        case 3u:
          if (v7 != 26) {
            goto LABEL_138;
          }
          char v20 = (char *)(v6 - 1);
          while (1)
          {
            uint64_t v21 = (unsigned __int8 *)(v20 + 1);
            *(void *)v93 = v20 + 1;
            uint64_t v22 = *(_DWORD **)(a1 + 64);
            if (v22 && (uint64_t v23 = *(int *)(a1 + 56), (int)v23 < *v22))
            {
              *(_DWORD *)(a1 + 56) = v23 + 1;
              uint64_t v24 = *(void *)&v22[2 * v23 + 2];
            }
            else
            {
              uint64_t v25 = sub_16693A8(*(void *)(a1 + 48));
              uint64_t v24 = sub_188CDC8(a1 + 48, (uint64_t)v25);
              uint64_t v21 = *(unsigned __int8 **)v93;
            }
            char v20 = sub_16686D0(a3, v24, v21);
            *(void *)v93 = v20;
            if (!v20) {
              goto LABEL_155;
            }
            if (*(void *)a3 <= (unint64_t)v20 || *v20 != 26) {
              goto LABEL_146;
            }
          }
        case 4u:
          if (v7 != 34) {
            goto LABEL_138;
          }
          uint64_t v26 = (char *)(v6 - 1);
          while (1)
          {
            int64_t v27 = (unsigned __int8 *)(v26 + 1);
            *(void *)v93 = v26 + 1;
            uint64_t v28 = *(_DWORD **)(a1 + 88);
            if (v28 && (uint64_t v29 = *(int *)(a1 + 80), (int)v29 < *v28))
            {
              *(_DWORD *)(a1 + 80) = v29 + 1;
              uint64_t v30 = *(void *)&v28[2 * v29 + 2];
            }
            else
            {
              unint64_t v31 = sub_11E7DC8(*(void *)(a1 + 72));
              uint64_t v30 = sub_188CDC8(a1 + 72, (uint64_t)v31);
              int64_t v27 = *(unsigned __int8 **)v93;
            }
            uint64_t v26 = sub_11E54C4(a3, v30, v27);
            *(void *)v93 = v26;
            if (!v26) {
              goto LABEL_155;
            }
            if (*(void *)a3 <= (unint64_t)v26 || *v26 != 34) {
              goto LABEL_146;
            }
          }
        case 5u:
          if (v7 != 42) {
            goto LABEL_138;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v32 = *(void **)(a1 + 216);
          if (!v32)
          {
            unsigned int v33 = (void *)(*v88 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v88) {
              unsigned int v33 = (void *)*v33;
            }
            uint64_t v32 = sub_1786400((uint64_t)v33);
            *(void *)(a1 + 216) = v32;
            unint64_t v6 = *(unsigned __int8 **)v93;
          }
          uint64_t v34 = sub_119BC44(a3, (uint64_t)v32, v6);
          goto LABEL_145;
        case 6u:
          if (v7 != 48) {
            goto LABEL_138;
          }
          v89 |= 0x10u;
          uint64_t v35 = (char *)(v6 + 1);
          uint64_t v36 = *v6;
          if (((char)*v6 & 0x80000000) == 0) {
            goto LABEL_57;
          }
          int v37 = *v35;
          uint64_t v36 = v36 + (v37 << 7) - 128;
          if (v37 < 0)
          {
            uint64_t v79 = sub_188C138((uint64_t)v6, v36);
            *(void *)v93 = v79;
            *(void *)(a1 + 232) = v80;
            if (!v79) {
              goto LABEL_155;
            }
          }
          else
          {
            uint64_t v35 = (char *)(v6 + 2);
LABEL_57:
            *(void *)v93 = v35;
            *(void *)(a1 + 232) = v36;
          }
          goto LABEL_146;
        case 7u:
          if (v7 != 56) {
            goto LABEL_138;
          }
          v89 |= 0x20u;
          v38 = (char *)(v6 + 1);
          uint64_t v39 = *v6;
          if (((char)*v6 & 0x80000000) == 0) {
            goto LABEL_62;
          }
          int v40 = *v38;
          uint64_t v39 = v39 + (v40 << 7) - 128;
          if (v40 < 0)
          {
            uint64_t v81 = sub_188C138((uint64_t)v6, v39);
            *(void *)v93 = v81;
            *(void *)(a1 + 240) = v82;
            if (!v81) {
              goto LABEL_155;
            }
          }
          else
          {
            v38 = (char *)(v6 + 2);
LABEL_62:
            *(void *)v93 = v38;
            *(void *)(a1 + 240) = v39;
          }
          goto LABEL_146;
        case 8u:
          if (v7 != 64) {
            goto LABEL_138;
          }
          v89 |= 8u;
          int v41 = (char *)(v6 + 1);
          int v42 = *v6;
          if (((char)*v6 & 0x80000000) == 0) {
            goto LABEL_67;
          }
          int v43 = *v41;
          int v42 = v42 + (v43 << 7) - 128;
          if (v43 < 0)
          {
            uint64_t v83 = sub_188C0D0((uint64_t)v6, v42);
            *(void *)v93 = v83;
            *(_DWORD *)(a1 + 228) = v84;
            if (!v83) {
              goto LABEL_155;
            }
          }
          else
          {
            int v41 = (char *)(v6 + 2);
LABEL_67:
            *(void *)v93 = v41;
            *(_DWORD *)(a1 + 228) = v42;
          }
          goto LABEL_146;
        case 9u:
          if (v7 == 72)
          {
            int v44 = v6 - 1;
            while (1)
            {
              *(void *)v93 = v44 + 1;
              int v45 = v44[1];
              if ((char)v44[1] < 0)
              {
                int v46 = v45 + (v44[2] << 7);
                int v45 = v46 - 128;
                if ((char)v44[2] < 0)
                {
                  int v44 = (unsigned __int8 *)sub_188C0D0((uint64_t)(v44 + 1), v46 - 128);
                  int v45 = v47;
                }
                else
                {
                  v44 += 3;
                }
              }
              else
              {
                v44 += 2;
              }
              *(void *)v93 = v44;
              uint64_t v48 = *(unsigned int *)(a1 + 96);
              if (v48 == *(_DWORD *)(a1 + 100))
              {
                int v49 = v48 + 1;
                sub_188C80C((unsigned int *)(a1 + 96), v48 + 1);
                *(_DWORD *)(*(void *)(a1 + 104) + 4 * v48) = v45;
                int v44 = *(unsigned __int8 **)v93;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 104) + 4 * v48) = v45;
                int v49 = v48 + 1;
              }
              *(_DWORD *)(a1 + 96) = v49;
              if (!v44) {
                goto LABEL_155;
              }
              if (*(void *)a3 <= (unint64_t)v44 || *v44 != 72) {
                goto LABEL_146;
              }
            }
          }
          if (v7 == 74)
          {
            uint64_t v34 = (uint64_t)sub_188C2CC((unsigned int *)(a1 + 96), v6, (uint64_t)a3);
          }
          else
          {
LABEL_138:
            if (v7) {
              BOOL v85 = (v7 & 7) == 4;
            }
            else {
              BOOL v85 = 1;
            }
            if (v85)
            {
              if (v6)
              {
                a3[10].i32[0] = v7 - 1;
                goto LABEL_3;
              }
LABEL_155:
              *(void *)v93 = 0;
              goto LABEL_3;
            }
            if (*v88)
            {
              v86 = (std::string *)((*v88 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              v86 = (std::string *)sub_188DBD8(v88);
              unint64_t v6 = *(unsigned __int8 **)v93;
            }
            uint64_t v34 = (uint64_t)sub_1885AC0(v7, v86, (char *)v6, a3);
          }
LABEL_145:
          *(void *)v93 = v34;
          if (!v34) {
            goto LABEL_155;
          }
LABEL_146:
          if (sub_11947B8((uint64_t)a3, (char **)v93, a3[11].i32[1])) {
            goto LABEL_3;
          }
          break;
        case 0xAu:
          if (v7 != 82) {
            goto LABEL_138;
          }
          uint64_t v50 = (char *)(v6 - 1);
          while (1)
          {
            uint64_t v51 = (unsigned __int8 *)(v50 + 1);
            *(void *)v93 = v50 + 1;
            v52 = *(_DWORD **)(a1 + 128);
            if (v52 && (uint64_t v53 = *(int *)(a1 + 120), (int)v53 < *v52))
            {
              *(_DWORD *)(a1 + 120) = v53 + 1;
              uint64_t v54 = *(void *)&v52[2 * v53 + 2];
            }
            else
            {
              uint64_t v55 = sub_11E7E40(*(void *)(a1 + 112));
              uint64_t v54 = sub_188CDC8(a1 + 112, v55);
              uint64_t v51 = *(unsigned __int8 **)v93;
            }
            uint64_t v50 = sub_11E5554(a3, v54, v51);
            *(void *)v93 = v50;
            if (!v50) {
              goto LABEL_155;
            }
            if (*(void *)a3 <= (unint64_t)v50 || *v50 != 82) {
              goto LABEL_146;
            }
          }
        case 0xBu:
          if (v7 != 90) {
            goto LABEL_138;
          }
          uint64_t v56 = (const std::string::value_type *)(v6 - 1);
          while (1)
          {
            uint64_t v57 = (char *)(v56 + 1);
            *(void *)v93 = v56 + 1;
            uint64_t v58 = *(_DWORD **)(a1 + 152);
            if (v58 && (uint64_t v59 = *(int *)(a1 + 144), (int)v59 < *v58))
            {
              *(_DWORD *)(a1 + 144) = v59 + 1;
              uint64_t v60 = *(std::string **)&v58[2 * v59 + 2];
            }
            else
            {
              if (!*v92) {
                operator new();
              }
              void *v62 = v61;
              v62[1] = sub_3A6EDC;
              *uint64_t v61 = 0;
              v61[1] = 0;
              v61[2] = 0;
              uint64_t v60 = (std::string *)sub_188CDC8((uint64_t)v92, (uint64_t)v61);
              uint64_t v57 = *(char **)v93;
            }
            uint64_t v56 = sub_188C244(v60, v57, (uint64_t)a3);
            *(void *)v93 = v56;
            if (!v56) {
              goto LABEL_155;
            }
            if (*(void *)a3 <= (unint64_t)v56 || *v56 != 90) {
              goto LABEL_146;
            }
          }
        case 0xCu:
          if (v7 != 98) {
            goto LABEL_138;
          }
          uint64_t v63 = (char *)(v6 - 1);
          while (1)
          {
            uint64_t v64 = (unsigned __int8 *)(v63 + 1);
            *(void *)v93 = v63 + 1;
            uint64_t v65 = *(_DWORD **)(a1 + 176);
            if (v65 && (uint64_t v66 = *(int *)(a1 + 168), (int)v66 < *v65))
            {
              *(_DWORD *)(a1 + 168) = v66 + 1;
              uint64_t v67 = *(void *)&v65[2 * v66 + 2];
            }
            else
            {
              uint64_t v68 = sub_11E7EDC(*v90);
              uint64_t v67 = sub_188CDC8((uint64_t)v90, v68);
              uint64_t v64 = *(unsigned __int8 **)v93;
            }
            uint64_t v63 = sub_11E55E4(a3, v67, v64);
            *(void *)v93 = v63;
            if (!v63) {
              goto LABEL_155;
            }
            if (*(void *)a3 <= (unint64_t)v63 || *v63 != 98) {
              goto LABEL_146;
            }
          }
        case 0xDu:
          if (v7 != 106) {
            goto LABEL_138;
          }
          int v69 = v6 - 1;
          while (1)
          {
            v70 = v69 + 1;
            *(void *)v93 = v69 + 1;
            unsigned int v71 = *(_DWORD **)(a1 + 200);
            if (v71 && (uint64_t v72 = *(int *)(a1 + 192), (int)v72 < *v71))
            {
              *(_DWORD *)(a1 + 192) = v72 + 1;
              uint64_t v73 = *(void *)&v71[2 * v72 + 2];
            }
            else
            {
              v74 = sub_11E7C5C(*v91);
              uint64_t v73 = sub_188CDC8((uint64_t)v91, (uint64_t)v74);
              v70 = *(unsigned __int8 **)v93;
            }
            int v69 = (unsigned __int8 *)sub_11E5674(a3, v73, v70);
            *(void *)v93 = v69;
            if (!v69) {
              goto LABEL_155;
            }
            if (*(void *)a3 <= (unint64_t)v69 || *v69 != 106) {
              goto LABEL_146;
            }
          }
        case 0xEu:
          if (v7 != 114) {
            goto LABEL_138;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v75 = *(void *)(a1 + 8);
          uint64_t v76 = (uint64_t *)(v75 & 0xFFFFFFFFFFFFFFFCLL);
          if (v75) {
            uint64_t v76 = (uint64_t *)*v76;
          }
          v77 = (std::string *)sub_1880F84((void *)(a1 + 208), v76);
          uint64_t v34 = (uint64_t)sub_188C244(v77, *(char **)v93, (uint64_t)a3);
          goto LABEL_145;
        default:
          goto LABEL_138;
      }
    }
  }
  int v89 = 0;
LABEL_3:
  *(_DWORD *)(a1 + 16) |= v89;
  return *(void *)v93;
}

char *sub_16686D0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  double result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    double result = sub_1667890(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1668760(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_11DFCE0(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if ((v11 & 4) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v12 = *(int *)(a1 + 224);
    *__dst = 16;
    __dst[1] = v12;
    if (v12 > 0x7F)
    {
      __dst[1] = v12 | 0x80;
      unint64_t v13 = v12 >> 7;
      __dst[2] = v12 >> 7;
      __dst += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v14 = v13 >> 14;
          v13 >>= 7;
          *__dst++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  int v15 = *(_DWORD *)(a1 + 56);
  if (v15)
  {
    for (int j = 0; j != v15; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v17 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *__dst = 26;
      unsigned int v18 = *(_DWORD *)(v17 + 20);
      __dst[1] = v18;
      if (v18 > 0x7F) {
        int v19 = sub_188A9CC(v18, __dst + 1);
      }
      else {
        int v19 = __dst + 2;
      }
      __dst = sub_1667A10(v17, (unint64_t)v19, a3);
    }
  }
  int v20 = *(_DWORD *)(a1 + 80);
  if (v20)
  {
    for (int k = 0; k != v20; ++k)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v22 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      *__dst = 34;
      unsigned int v23 = *(_DWORD *)(v22 + 20);
      __dst[1] = v23;
      if (v23 > 0x7F) {
        uint64_t v24 = sub_188A9CC(v23, __dst + 1);
      }
      else {
        uint64_t v24 = __dst + 2;
      }
      __dst = sub_11E3720(v22, (unint64_t)v24, a3);
    }
  }
  if ((v11 & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v25 = *(void *)(a1 + 216);
    *__dst = 42;
    unsigned int v26 = *(_DWORD *)(v25 + 20);
    __dst[1] = v26;
    if (v26 > 0x7F) {
      int64_t v27 = sub_188A9CC(v26, __dst + 1);
    }
    else {
      int64_t v27 = __dst + 2;
    }
    __dst = sub_16BE2D4(v25, v27, a3);
  }
  if ((v11 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v28 = *(void *)(a1 + 232);
    *__dst = 48;
    __dst[1] = v28;
    if (v28 > 0x7F)
    {
      __dst[1] = v28 | 0x80;
      unint64_t v29 = v28 >> 7;
      __dst[2] = v28 >> 7;
      __dst += 3;
      if (v28 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v30 = v29 >> 14;
          v29 >>= 7;
          *__dst++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v11 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v31 = *(void *)(a1 + 240);
    *__dst = 56;
    __dst[1] = v31;
    if (v31 > 0x7F)
    {
      __dst[1] = v31 | 0x80;
      unint64_t v32 = v31 >> 7;
      __dst[2] = v31 >> 7;
      __dst += 3;
      if (v31 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v33 = v32 >> 14;
          v32 >>= 7;
          *__dst++ = v32;
        }
        while (v33);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v11 & 8) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v34 = *(_DWORD *)(a1 + 228);
    *__dst = 64;
    __dst[1] = v34;
    if (v34 > 0x7F)
    {
      __dst[1] = v34 | 0x80;
      unsigned int v35 = v34 >> 7;
      __dst[2] = v34 >> 7;
      __dst += 3;
      if (v34 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v36 = v35 >> 14;
          v35 >>= 7;
          *__dst++ = v35;
        }
        while (v36);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  uint64_t v37 = *(unsigned int *)(a1 + 96);
  if ((int)v37 >= 1)
  {
    for (uint64_t m = 0; m != v37; ++m)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unsigned int v39 = *(_DWORD *)(*(void *)(a1 + 104) + 4 * m);
      *__dst = 72;
      __dst[1] = v39;
      if (v39 > 0x7F)
      {
        __dst[1] = v39 | 0x80;
        unsigned int v40 = v39 >> 7;
        __dst[2] = v39 >> 7;
        __dst += 3;
        if (v39 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unsigned int v41 = v40 >> 14;
            v40 >>= 7;
            *__dst++ = v40;
          }
          while (v41);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  int v42 = *(_DWORD *)(a1 + 120);
  if (v42)
  {
    for (int n = 0; n != v42; ++n)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v44 = *(void *)(*(void *)(a1 + 128) + 8 * n + 8);
      *__dst = 82;
      unsigned int v45 = *(_DWORD *)(v44 + 20);
      __dst[1] = v45;
      if (v45 > 0x7F) {
        int v46 = sub_188A9CC(v45, __dst + 1);
      }
      else {
        int v46 = __dst + 2;
      }
      __dst = sub_11E3C14(v44, (unint64_t)v46, a3);
    }
  }
  uint64_t v47 = *(unsigned int *)(a1 + 144);
  if ((int)v47 >= 1)
  {
    uint64_t v48 = 0;
    uint64_t v49 = 8 * v47;
    do
    {
      uint64_t v50 = *(void **)(*(void *)(a1 + 152) + v48 + 8);
      if (*((char *)v50 + 23) < 0)
      {
        int64_t v51 = v50[1];
        if (v51 > 127) {
          goto LABEL_88;
        }
      }
      else
      {
        int64_t v51 = *((unsigned __int8 *)v50 + 23);
      }
      if ((uint64_t)(*a3 - (void)__dst + 14) >= v51)
      {
        *__dst = 90;
        __dst[1] = v51;
        if (*((char *)v50 + 23) < 0) {
          uint64_t v50 = (void *)*v50;
        }
        v52 = __dst + 2;
        memcpy(v52, v50, v51);
        __dst = &v52[v51];
        goto LABEL_86;
      }
LABEL_88:
      __dst = (char *)sub_188A868(a3, 11, (uint64_t)v50, __dst);
LABEL_86:
      v48 += 8;
    }
    while (v49 != v48);
  }
  int v53 = *(_DWORD *)(a1 + 168);
  if (v53)
  {
    for (iint i = 0; ii != v53; ++ii)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v55 = *(void *)(*(void *)(a1 + 176) + 8 * ii + 8);
      *__dst = 98;
      unsigned int v56 = *(_DWORD *)(v55 + 32);
      __dst[1] = v56;
      if (v56 > 0x7F) {
        uint64_t v57 = sub_188A9CC(v56, __dst + 1);
      }
      else {
        uint64_t v57 = __dst + 2;
      }
      __dst = sub_11E4210(v55, v57, a3);
    }
  }
  int v58 = *(_DWORD *)(a1 + 192);
  if (v58)
  {
    for (jint j = 0; jj != v58; ++jj)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v60 = *(void *)(*(void *)(a1 + 200) + 8 * jj + 8);
      *__dst = 106;
      unsigned int v61 = *(_DWORD *)(v60 + 20);
      __dst[1] = v61;
      if (v61 > 0x7F) {
        uint64_t v62 = sub_188A9CC(v61, __dst + 1);
      }
      else {
        uint64_t v62 = __dst + 2;
      }
      __dst = sub_11E0B04(v60, v62, a3);
    }
  }
  if (v11) {
    __dst = sub_117A0AC(a3, 14, (const void **)(*(void *)(a1 + 208) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v63 = *(void *)(a1 + 8);
  if ((v63 & 1) == 0) {
    return __dst;
  }
  unint64_t v65 = v63 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v65 + 31) < 0)
  {
    uint64_t v66 = *(void **)(v65 + 8);
    uint64_t v67 = *(void *)(v65 + 16);
  }
  else
  {
    uint64_t v66 = (void *)(v65 + 8);
    LODWORD(v67) = *(unsigned __int8 *)(v65 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v67)
  {
    uint64_t v68 = (int)v67;
    memcpy(__dst, v66, (int)v67);
    __dst += v68;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v66, v67, __dst);
}

uint64_t sub_1668EF4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    unint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    unint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11E01C0(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      unint64_t v14 = sub_1667B38(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    unsigned int v18 = (uint64_t *)(v17 + 8);
  }
  else {
    unsigned int v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      unint64_t v21 = sub_11E3848(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = sub_188D4F0((unsigned int *)(a1 + 96));
  uint64_t v23 = *(int *)(a1 + 120);
  uint64_t v24 = v22 + v23 + v16 + *(unsigned int *)(a1 + 96);
  uint64_t v25 = *(void *)(a1 + 128);
  if (v25) {
    unsigned int v26 = (uint64_t *)(v25 + 8);
  }
  else {
    unsigned int v26 = 0;
  }
  if (v23)
  {
    uint64_t v27 = 8 * v23;
    do
    {
      uint64_t v28 = *v26++;
      uint64_t v29 = sub_11E3DE4(v28);
      v24 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6);
      v27 -= 8;
    }
    while (v27);
  }
  uint64_t v30 = *(unsigned int *)(a1 + 144);
  uint64_t v31 = v24 + v30;
  if ((int)v30 >= 1)
  {
    unint64_t v32 = (uint64_t *)(*(void *)(a1 + 152) + 8);
    do
    {
      uint64_t v33 = *v32++;
      uint64_t v34 = *(unsigned __int8 *)(v33 + 23);
      uint64_t v35 = *(void *)(v33 + 8);
      if ((v34 & 0x80u) == 0) {
        uint64_t v35 = v34;
      }
      v31 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6);
      --v30;
    }
    while (v30);
  }
  uint64_t v36 = *(int *)(a1 + 168);
  uint64_t v37 = v31 + v36;
  uint64_t v38 = *(void *)(a1 + 176);
  if (v38) {
    unsigned int v39 = (uint64_t *)(v38 + 8);
  }
  else {
    unsigned int v39 = 0;
  }
  if (v36)
  {
    uint64_t v40 = 8 * v36;
    do
    {
      uint64_t v41 = *v39++;
      uint64_t v42 = sub_11E4360(v41);
      v37 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6);
      v40 -= 8;
    }
    while (v40);
  }
  uint64_t v43 = *(int *)(a1 + 192);
  uint64_t v44 = v37 + v43;
  uint64_t v45 = *(void *)(a1 + 200);
  if (v45) {
    int v46 = (uint64_t *)(v45 + 8);
  }
  else {
    int v46 = 0;
  }
  if (v43)
  {
    uint64_t v47 = 8 * v43;
    do
    {
      uint64_t v48 = *v46++;
      uint64_t v49 = sub_11E0C1C(v48);
      v44 += v49 + ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6);
      v47 -= 8;
    }
    while (v47);
  }
  int v50 = *(_DWORD *)(a1 + 16);
  if ((v50 & 0x3F) == 0) {
    goto LABEL_52;
  }
  if (v50)
  {
    unint64_t v53 = *(void *)(a1 + 208) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v54 = *(unsigned __int8 *)(v53 + 23);
    uint64_t v55 = *(void *)(v53 + 8);
    if ((v54 & 0x80u) == 0) {
      uint64_t v55 = v54;
    }
    v44 += v55 + ((9 * (__clz(v55 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v50 & 2) == 0)
    {
LABEL_47:
      if ((v50 & 4) == 0) {
        goto LABEL_48;
      }
      goto LABEL_58;
    }
  }
  else if ((v50 & 2) == 0)
  {
    goto LABEL_47;
  }
  uint64_t v56 = sub_16BE3A0(*(void *)(a1 + 216));
  v44 += v56 + ((9 * (__clz(v56 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v50 & 4) == 0)
  {
LABEL_48:
    if ((v50 & 8) == 0) {
      goto LABEL_49;
    }
LABEL_62:
    v44 += ((9 * (__clz(*(_DWORD *)(a1 + 228) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v50 & 0x10) == 0)
    {
LABEL_50:
      if ((v50 & 0x20) == 0) {
        goto LABEL_52;
      }
      goto LABEL_51;
    }
    goto LABEL_63;
  }
LABEL_58:
  int v57 = *(_DWORD *)(a1 + 224);
  uint64_t v58 = ((9 * (__clz(v57 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v57 >= 0) {
    uint64_t v59 = v58;
  }
  else {
    uint64_t v59 = 11;
  }
  v44 += v59;
  if ((v50 & 8) != 0) {
    goto LABEL_62;
  }
LABEL_49:
  if ((v50 & 0x10) == 0) {
    goto LABEL_50;
  }
LABEL_63:
  v44 += ((9 * (__clz(*(void *)(a1 + 232) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v50 & 0x20) != 0) {
LABEL_51:
  }
    v44 += ((9 * (__clz(*(void *)(a1 + 240) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_52:
  uint64_t v51 = *(void *)(a1 + 8);
  if (v51)
  {
    unint64_t v60 = v51 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v60 + 31) < 0) {
      uint64_t v61 = *(void *)(v60 + 16);
    }
    else {
      uint64_t v61 = *(unsigned __int8 *)(v60 + 31);
    }
    v44 += v61;
  }
  *(_DWORD *)(a1 + 20) = v44;
  return v44;
}

void *sub_16692DC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geocoding.GeminiReverseGeocodingResponse");
}

double sub_16692EC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24CCBD8;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  double result = 0.0;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 88) = 0u;
  *(unsigned char *)(v2 + 104) = 0;
  return result;
}

void *sub_16693A8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24CCC58;
  result[2] = 0;
  result[3] = 0;
  return result;
}

double sub_1669420(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  return sub_1667BB8(v2, a1, 0);
}

void sub_16694C8()
{
}

uint64_t sub_166951C(uint64_t a1, uint64_t a2)
{
  return sub_1665EB8(a2);
}

uint64_t sub_1669524(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_166952C()
{
}

double sub_1669588(uint64_t a1, uint64_t a2)
{
  return sub_16692EC(a2);
}

uint64_t sub_1669590(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1669598()
{
}

void *sub_16695E4(uint64_t a1, uint64_t a2)
{
  return sub_16693A8(a2);
}

uint64_t sub_16695EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16695F4()
{
}

double sub_166966C(uint64_t a1, uint64_t a2)
{
  return sub_1669420(a2);
}

uint64_t sub_1669674(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_166967C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16677CC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_16696FC(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      double result = (std::string *)sub_16693A8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = sub_122B460(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_1669778()
{
  dword_2550178 = 1001;
  byte_255017C = 0;
  sub_1882224((unint64_t)&off_2532DF8, 1001, 8, 0, 0);
  dword_2550180 = 1002;
  qword_2550188 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_2532DF8, 1002, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_2550190 = 1003;
  qword_2550198 = (uint64_t)&off_2542AF0;
  sub_1882AC4((unint64_t)&off_2532DF8, 1003, 11, 1, 0, (uint64_t)&off_2542AF0);
  dword_25501A0 = 1004;
  byte_25501A4 = 0;
  sub_1882224((unint64_t)&off_2532DF8, 1004, 8, 0, 0);
  dword_25501A8 = 1005;
  byte_25501AC = 0;
  sub_1882224((unint64_t)&off_2532DF8, 1005, 8, 0, 0);
  dword_25501B0 = 1006;
  byte_25501B4 = 0;
  sub_1882224((unint64_t)&off_2532DF8, 1006, 8, 0, 0);
  dword_25501B8 = 1001;
  qword_25501C0 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_2532F58, 1001, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_25501C8 = 1002;
  qword_25501D0 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_2532F58, 1002, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_25501D8 = 1003;
  byte_25501DC = 0;

  sub_1882224((unint64_t)&off_2532F58, 1003, 8, 0, 0);
}

uint64_t sub_166995C()
{
  qword_261F348 = (uint64_t)"ACTION_COMPONENT_TYPE_DEALACTION_COMPONENT_TYPE_PHOTOACTION_COMPONENT_TYPE_REVIEWACTION_COMPO"
                           "NENT_TYPE_TIPACTION_COMPONENT_TYPE_UNKNOWN";
  unk_261F350 = 26;
  dword_261F358 = 3;
  qword_261F360 = (uint64_t)"ACTION_COMPONENT_TYPE_PHOTOACTION_COMPONENT_TYPE_REVIEWACTION_COMPONENT_TYPE_TIPACTION_COMPONENT_TYPE_UNKNOWN";
  unk_261F368 = 27;
  dword_261F370 = 2;
  qword_261F378 = (uint64_t)"ACTION_COMPONENT_TYPE_REVIEWACTION_COMPONENT_TYPE_TIPACTION_COMPONENT_TYPE_UNKNOWN";
  unk_261F380 = 28;
  dword_261F388 = 1;
  qword_261F390 = (uint64_t)"ACTION_COMPONENT_TYPE_TIPACTION_COMPONENT_TYPE_UNKNOWN";
  unk_261F398 = 25;
  dword_261F3A0 = 4;
  qword_261F3A8 = (uint64_t)"ACTION_COMPONENT_TYPE_UNKNOWN";
  unk_261F3B0 = 29;
  dword_261F3B8 = 0;
  qword_261F3C0 = (uint64_t)"RESULT_TYPE_ADDRESSRESULT_TYPE_BUSINESSRESULT_TYPE_CATEGORYRESULT_TYPE_NARESULT_TYPE_QUERYRES"
                           "ULT_TYPE_UNKNOWN";
  *(void *)algn_261F3C8 = 19;
  dword_261F3D0 = 2;
  uint64_t result = 20;
  qword_261F3D8 = (uint64_t)"RESULT_TYPE_BUSINESSRESULT_TYPE_CATEGORYRESULT_TYPE_NARESULT_TYPE_QUERYRESULT_TYPE_UNKNOWN";
  unk_261F3E0 = 20;
  dword_261F3E8 = 3;
  qword_261F3F0 = (uint64_t)"RESULT_TYPE_CATEGORYRESULT_TYPE_NARESULT_TYPE_QUERYRESULT_TYPE_UNKNOWN";
  unk_261F3F8 = 20;
  dword_261F400 = 4;
  qword_261F408 = (uint64_t)"RESULT_TYPE_NARESULT_TYPE_QUERYRESULT_TYPE_UNKNOWN";
  unk_261F410 = 14;
  dword_261F418 = 0;
  qword_261F420 = (uint64_t)"RESULT_TYPE_QUERYRESULT_TYPE_UNKNOWN";
  unk_261F428 = 17;
  dword_261F430 = 5;
  qword_261F438 = (uint64_t)"RESULT_TYPE_UNKNOWN";
  unk_261F440 = 19;
  dword_261F448 = 1;
  qword_261F450 = (uint64_t)"QUERY_INTENT_TYPE_CATEGORYQUERY_INTENT_TYPE_CHAINQUERY_INTENT_TYPE_GEO_TYPEQUERY_INTENT_TYPE_"
                           "NAQUERY_INTENT_TYPE_UNKNOWN";
  *(void *)algn_261F458 = 26;
  dword_261F460 = 2;
  qword_261F468 = (uint64_t)"QUERY_INTENT_TYPE_CHAINQUERY_INTENT_TYPE_GEO_TYPEQUERY_INTENT_TYPE_NAQUERY_INTENT_TYPE_UNKNOWN";
  unk_261F470 = 23;
  dword_261F478 = 3;
  qword_261F480 = (uint64_t)"QUERY_INTENT_TYPE_GEO_TYPEQUERY_INTENT_TYPE_NAQUERY_INTENT_TYPE_UNKNOWN";
  unk_261F488 = 26;
  dword_261F490 = 4;
  qword_261F498 = (uint64_t)"QUERY_INTENT_TYPE_NAQUERY_INTENT_TYPE_UNKNOWN";
  unk_261F4A0 = 20;
  dword_261F4A8 = 0;
  qword_261F4B0 = (uint64_t)"QUERY_INTENT_TYPE_UNKNOWN";
  unk_261F4B8 = 25;
  dword_261F4C0 = 1;
  return result;
}

uint64_t sub_1669A80(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_2542C80)
  {
    uint64_t v5 = *(void **)(a1 + 72);
    if (v5)
    {
      sub_166B3FC(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 80);
    if (v6)
    {
      sub_166B3FC(v6);
      operator delete();
    }
    uint64_t v7 = *(void **)(a1 + 88);
    if (v7)
    {
      sub_166C2E0(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_16B2ED4((void *)(a1 + 48));
  sub_16B2E54((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1669B88(uint64_t a1)
{
  sub_1669A80(a1);

  operator delete();
}

uint64_t sub_1669BC0(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_166BAC8(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 32) = 0;
  }
  uint64_t result = sub_16B2DE4(a1 + 48);
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 7) != 0)
  {
    if (v6)
    {
      uint64_t result = sub_1669C88(*(void *)(a1 + 72));
      if ((v6 & 2) == 0)
      {
LABEL_8:
        if ((v6 & 4) == 0) {
          goto LABEL_10;
        }
        goto LABEL_9;
      }
    }
    else if ((v6 & 2) == 0)
    {
      goto LABEL_8;
    }
    uint64_t result = sub_1669C88(*(void *)(a1 + 80));
    if ((v6 & 4) != 0) {
LABEL_9:
    }
      uint64_t result = sub_1669D1C(*(void *)(a1 + 88));
  }
LABEL_10:
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(void *)(v7 + 88) = 0;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_1669C88(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1669C88(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if ((*(unsigned char *)(v1 + 16) & 3) != 0)
  {
    *(_DWORD *)(v1 + 56) = 0;
    *(void *)(v1 + 48) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_1669D1C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x7F) != 0)
  {
    *(_DWORD *)(a1 + 56) = 0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1669D4C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    char v8 = v33 + 1;
    unsigned int v9 = *v33;
    if (*v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        char v8 = (char *)sub_188C180((uint64_t)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = v33 + 2;
      }
    }
    uint64_t v33 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_49;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 72);
        if (v12) {
          goto LABEL_20;
        }
        uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v13 = (void *)*v13;
        }
        uint64_t v12 = sub_166DA9C((uint64_t)v13);
        *(void *)(a1 + 72) = v12;
        goto LABEL_19;
      case 2u:
        if (v9 != 18) {
          goto LABEL_49;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v12 = *(void *)(a1 + 80);
        if (!v12)
        {
          unint64_t v14 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v14 = (void *)*v14;
          }
          uint64_t v12 = sub_166DA9C((uint64_t)v14);
          *(void *)(a1 + 80) = v12;
LABEL_19:
          char v8 = v33;
        }
LABEL_20:
        uint64_t v15 = sub_166A0E8(a3, v12, (unsigned __int8 *)v8);
        goto LABEL_56;
      case 3u:
        if (v9 != 26) {
          goto LABEL_49;
        }
        uint64_t v16 = v8 - 1;
        while (1)
        {
          uint64_t v17 = (unsigned __int8 *)(v16 + 1);
          uint64_t v33 = v16 + 1;
          unsigned int v18 = *(_DWORD **)(a1 + 40);
          if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
          {
            *(_DWORD *)(a1 + 32) = v19 + 1;
            uint64_t v20 = *(void *)&v18[2 * v19 + 2];
          }
          else
          {
            uint64_t v21 = sub_166DB40(*(void *)(a1 + 24));
            uint64_t v20 = sub_188CDC8(a1 + 24, v21);
            uint64_t v17 = (unsigned __int8 *)v33;
          }
          uint64_t v16 = sub_166A178(a3, v20, v17);
          uint64_t v33 = v16;
          if (!v16) {
            goto LABEL_62;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
            goto LABEL_57;
          }
        }
      case 4u:
        if (v9 != 34) {
          goto LABEL_49;
        }
        uint64_t v22 = v8 - 1;
        while (1)
        {
          uint64_t v23 = (unsigned __int8 *)(v22 + 1);
          uint64_t v33 = v22 + 1;
          uint64_t v24 = *(_DWORD **)(a1 + 64);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 56), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 56) = v25 + 1;
            uint64_t v26 = *(void *)&v24[2 * v25 + 2];
          }
          else
          {
            uint64_t v27 = sub_166DC78(*(void *)(a1 + 48));
            uint64_t v26 = sub_188CDC8(a1 + 48, v27);
            uint64_t v23 = (unsigned __int8 *)v33;
          }
          uint64_t v22 = sub_166A208(a3, v26, v23);
          uint64_t v33 = v22;
          if (!v22) {
            goto LABEL_62;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 34) {
            goto LABEL_57;
          }
        }
      case 5u:
        if (v9 != 41) {
          goto LABEL_49;
        }
        v5 |= 8u;
        *(void *)(a1 + 96) = *(void *)v8;
        uint64_t v33 = v8 + 8;
        goto LABEL_57;
      case 6u:
        if (v9 != 50) {
          goto LABEL_49;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v28 = *(void *)(a1 + 88);
        if (!v28)
        {
          uint64_t v29 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v29 = (void *)*v29;
          }
          sub_166DBF8((uint64_t)v29);
          uint64_t v28 = v30;
          *(void *)(a1 + 88) = v30;
          char v8 = v33;
        }
        uint64_t v15 = sub_166A298(a3, v28, (unsigned __int8 *)v8);
        goto LABEL_56;
      default:
LABEL_49:
        if (v9) {
          BOOL v31 = (v9 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if (*v7)
          {
            unint64_t v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v8 = v33;
          }
          uint64_t v15 = (char *)sub_1885AC0(v9, v32, v8, a3);
LABEL_56:
          uint64_t v33 = v15;
          if (!v15) {
            goto LABEL_62;
          }
LABEL_57:
          if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_62:
        }
          uint64_t v33 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v33;
    }
  }
}

char *sub_166A0E8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_166B4B4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_166A178(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_166BAF4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_166A208(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_166CE4C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_166A298(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_166C38C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_166A328(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 72);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = (unsigned char *)sub_166B6FC(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 80);
    *uint64_t v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    uint64_t v4 = (unsigned char *)sub_166B6FC(v10, v12, a3);
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        uint64_t v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        uint64_t v17 = v4 + 2;
      }
      uint64_t v4 = sub_166BD94(v15, (unint64_t)v17, a3);
    }
  }
  int v18 = *(_DWORD *)(a1 + 56);
  if (v18)
  {
    for (int j = 0; j != v18; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v20 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *uint64_t v4 = 34;
      unsigned int v21 = *(_DWORD *)(v20 + 96);
      v4[1] = v21;
      if (v21 > 0x7F) {
        uint64_t v22 = sub_188A9CC(v21, v4 + 1);
      }
      else {
        uint64_t v22 = v4 + 2;
      }
      uint64_t v4 = sub_166D210(v20, (unint64_t)v22, a3);
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v23 = *(void *)(a1 + 96);
    *uint64_t v4 = 41;
    *(void *)(v4 + 1) = v23;
    v4 += 9;
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v24 = *(void *)(a1 + 88);
    *uint64_t v4 = 50;
    unsigned int v25 = *(_DWORD *)(v24 + 20);
    v4[1] = v25;
    if (v25 > 0x7F) {
      uint64_t v26 = sub_188A9CC(v25, v4 + 1);
    }
    else {
      uint64_t v26 = v4 + 2;
    }
    uint64_t v4 = sub_166C774(v24, (unint64_t)v26, a3);
  }
  uint64_t v27 = *(void *)(a1 + 8);
  if ((v27 & 1) == 0) {
    return v4;
  }
  unint64_t v29 = v27 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v29 + 31) < 0)
  {
    uint64_t v30 = *(void **)(v29 + 8);
    uint64_t v31 = *(void *)(v29 + 16);
  }
  else
  {
    uint64_t v30 = (void *)(v29 + 8);
    LODWORD(v31) = *(unsigned __int8 *)(v29 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v31)
  {
    uint64_t v32 = (int)v31;
    memcpy(v4, v30, (int)v31);
    v4 += v32;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v30, v31, v4);
}

uint64_t sub_166A658(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_166C0A4(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_166D614(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 0xF) != 0)
  {
    if (v15)
    {
      uint64_t v19 = sub_166B8F8(*(void *)(a1 + 72));
      v9 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v15 & 2) == 0)
      {
LABEL_18:
        if ((v15 & 4) == 0) {
          goto LABEL_20;
        }
        goto LABEL_19;
      }
    }
    else if ((v15 & 2) == 0)
    {
      goto LABEL_18;
    }
    uint64_t v20 = sub_166B8F8(*(void *)(a1 + 80));
    v9 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 4) == 0)
    {
LABEL_20:
      if ((v15 & 8) != 0) {
        v9 += 9;
      }
      goto LABEL_22;
    }
LABEL_19:
    unint64_t v16 = sub_166CB84(*(void *)(a1 + 88));
    v9 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_20;
  }
LABEL_22:
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v21 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v21 + 31) < 0) {
      uint64_t v22 = *(void *)(v21 + 16);
    }
    else {
      uint64_t v22 = *(unsigned __int8 *)(v21 + 31);
    }
    v9 += v22;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

std::string *sub_166A80C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_16B3054((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unsigned int v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = (std::string *)sub_16B30E0((uint64_t *)&v3[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2]- LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 0xF) != 0)
  {
    if (v14)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)v3[3].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        int v18 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          int v18 = (void *)*v18;
        }
        data = (std::string *)sub_166DA9C((uint64_t)v18);
        v3[3].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 72)) {
        uint64_t v19 = *(uint64_t (****)())(a2 + 72);
      }
      else {
        uint64_t v19 = &off_2542D20;
      }
      uint64_t result = sub_166AA50(data, (uint64_t)v19);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_34;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v20 = (std::string *)v3[3].__r_.__value_.__l.__size_;
    if (!v20)
    {
      std::string::size_type v21 = v3->__r_.__value_.__l.__size_;
      uint64_t v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
      if (v21) {
        uint64_t v22 = (void *)*v22;
      }
      uint64_t v20 = (std::string *)sub_166DA9C((uint64_t)v22);
      v3[3].__r_.__value_.__l.__size_ = (std::string::size_type)v20;
    }
    if (*(void *)(a2 + 80)) {
      uint64_t v23 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      uint64_t v23 = &off_2542D20;
    }
    uint64_t result = sub_166AA50(v20, (uint64_t)v23);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0)
      {
LABEL_13:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v14;
        goto LABEL_14;
      }
LABEL_12:
      v3[4].__r_.__value_.__r.__words[0] = *(void *)(a2 + 96);
      goto LABEL_13;
    }
LABEL_34:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    uint64_t v24 = (std::string *)v3[3].__r_.__value_.__r.__words[2];
    if (!v24)
    {
      std::string::size_type v25 = v3->__r_.__value_.__l.__size_;
      uint64_t v26 = (void *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
      if (v25) {
        uint64_t v26 = (void *)*v26;
      }
      sub_166DBF8((uint64_t)v26);
      v3[3].__r_.__value_.__r.__words[2] = (std::string::size_type)v24;
    }
    if (*(void *)(a2 + 88)) {
      uint64_t v27 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      uint64_t v27 = &off_2542D60;
    }
    uint64_t result = sub_166AB50(v24, (uint64_t)v27);
    if ((v14 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_14:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_166AA50(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_16B31F8((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9) {
      v3[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
    }
    if ((v9 & 2) != 0) {
      LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_166AB50(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 0x7F) == 0) {
    goto LABEL_11;
  }
  if (v2)
  {
    result[1].__r_.__value_.__r.__words[0] = *(void *)(a2 + 24);
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_15;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  result[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  LODWORD(result[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
  if ((v2 & 8) == 0)
  {
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  HIDWORD(result[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
  if ((v2 & 0x10) == 0)
  {
LABEL_7:
    if ((v2 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_18:
    HIDWORD(result[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
    if ((v2 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_17:
  LODWORD(result[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
  if ((v2 & 0x20) != 0) {
    goto LABEL_18;
  }
LABEL_8:
  if ((v2 & 0x40) != 0) {
LABEL_9:
  }
    LODWORD(result[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
LABEL_10:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_11:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_166ABF4()
{
  return 1;
}

void *sub_166ABFC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.patches.Gap");
}

uint64_t sub_166AC0C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2542CE8)
  {
    uint64_t v6 = *(void **)(a1 + 48);
    if (v6)
    {
      sub_166C2E0(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_16B2F54((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_166ACD0(uint64_t a1)
{
  sub_166AC0C(a1);

  operator delete();
}

uint64_t sub_166AD08(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1669BC0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = sub_1669D1C(*(void *)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_166AD98(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    return v24;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v24 + 1;
    unsigned int v8 = *v24;
    if (*v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v24 + 2;
      }
    }
    uint64_t v24 = v7;
    if (v8 >> 3 == 3) {
      break;
    }
    if (v8 >> 3 != 2 || v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 48);
    if (!v21)
    {
      uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v22 = (void *)*v22;
      }
      sub_166DBF8((uint64_t)v22);
      uint64_t v21 = v23;
      *(void *)(a1 + 48) = v23;
      int v7 = v24;
    }
    int v14 = sub_166A298(a3, v21, (unsigned __int8 *)v7);
LABEL_35:
    uint64_t v24 = v14;
    if (!v14) {
      return 0;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
      return v24;
    }
  }
  if (v8 == 26)
  {
    uint64_t v15 = v7 - 1;
    while (1)
    {
      unint64_t v16 = (unsigned __int8 *)(v15 + 1);
      uint64_t v24 = v15 + 1;
      uint64_t v17 = *(_DWORD **)(a1 + 40);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 32) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        sub_166D948(*(void *)(a1 + 24));
        uint64_t v19 = sub_188CDC8(a1 + 24, v20);
        unint64_t v16 = (unsigned __int8 *)v24;
      }
      uint64_t v15 = sub_166AFA0(a3, v19, v16);
      uint64_t v24 = v15;
      if (!v15) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 26) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v24;
    }
    int v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_35;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v24;
  }
  return 0;
}

char *sub_166AFA0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1669D4C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_166B030(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 48);
    *uint64_t v4 = 18;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_166C774(v6, (unint64_t)v8, a3);
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 26;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        uint64_t v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        uint64_t v13 = v4 + 2;
      }
      uint64_t v4 = sub_166A328(v11, (unint64_t)v13, a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_166B1DC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_166A658(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v8 = sub_166CB84(*(void *)(a1 + 48));
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_166B2C0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_16B316C((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    unint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *unint64_t v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    *(_DWORD *)(a1 + 16) |= 1u;
    unsigned int v10 = *(std::string **)(a1 + 48);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      sub_166DBF8((uint64_t)v12);
      *(void *)(a1 + 48) = v10;
      uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    }
    if (v9) {
      uint64_t v13 = v9;
    }
    else {
      uint64_t v13 = &off_2542D60;
    }
    sub_166AB50(v10, (uint64_t)v13);
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_166B3E4()
{
  return 1;
}

void *sub_166B3EC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.patches.Patch");
}

void *sub_166B3FC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_16B2FD4(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_166B47C(void *a1)
{
  sub_166B3FC(a1);

  operator delete();
}

char *sub_166B4B4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v26 + 2;
      }
    }
    uint64_t v26 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 4)
    {
      if (v9 == 34)
      {
        unint64_t v16 = v8 - 1;
        while (1)
        {
          uint64_t v26 = v16 + 1;
          uint64_t v17 = *(_DWORD **)(a1 + 40);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 32) = v18 + 1;
            uint64_t v19 = *(void *)&v17[2 * v18 + 2];
          }
          else
          {
            uint64_t v20 = sub_166DA9C(*(void *)(a1 + 24));
            uint64_t v19 = sub_188CDC8(a1 + 24, v20);
          }
          unint64_t v16 = (char *)sub_166A0E8(a3, v19);
          uint64_t v26 = v16;
          if (!v16) {
            goto LABEL_45;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 34) {
            goto LABEL_38;
          }
        }
      }
      goto LABEL_14;
    }
    if (v12 != 3) {
      break;
    }
    if (v9 != 24) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v22 = v8 + 1;
    LODWORD(v21) = *v8;
    if ((v21 & 0x80) == 0) {
      goto LABEL_36;
    }
    int v23 = *v22;
    uint64_t v21 = v21 + (v23 << 7) - 128;
    if ((v23 & 0x80000000) == 0)
    {
      uint64_t v22 = v8 + 2;
LABEL_36:
      uint64_t v26 = v22;
      *(_DWORD *)(a1 + 56) = v21;
      goto LABEL_38;
    }
    uint64_t v24 = (char *)sub_188C138((uint64_t)v8, v21);
    uint64_t v26 = v24;
    *(_DWORD *)(a1 + 56) = v25;
    if (!v24) {
      goto LABEL_45;
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 9)
  {
    v5 |= 1u;
    *(void *)(a1 + 48) = *(void *)v8;
    uint64_t v26 = v8 + 8;
    goto LABEL_38;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v8 = v26;
    }
    uint64_t v26 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v26) {
      goto LABEL_45;
    }
    goto LABEL_38;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_45:
  uint64_t v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

uint64_t sub_166B6FC(uint64_t a1, unsigned char *a2, _DWORD *a3)
{
  int v4 = a2;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    *int v4 = 9;
    *(void *)(v4 + 1) = v7;
    v4 += 9;
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v8 = *(int *)(a1 + 56);
    *int v4 = 24;
    v4[1] = v8;
    if (v8 > 0x7F)
    {
      v4[1] = v8 | 0x80;
      unint64_t v9 = v8 >> 7;
      v4[2] = v8 >> 7;
      v4 += 3;
      if (v8 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v10 = v9 >> 14;
          v9 >>= 7;
          *v4++ = v9;
        }
        while (v10);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v11 = *(_DWORD *)(a1 + 32);
  if (v11)
  {
    for (int i = 0; i != v11; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *int v4 = 34;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      v4[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, v4 + 1);
      }
      else {
        uint64_t v15 = v4 + 2;
      }
      int v4 = (unsigned char *)sub_166B6FC(v13, v15, a3);
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return (uint64_t)v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return (uint64_t)v4;
  }

  return sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_166B8F8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    int v4 = (uint64_t *)(v3 + 8);
  }
  else {
    int v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_166B8F8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8) {
      v2 += 9;
    }
    if ((v8 & 2) != 0)
    {
      int v9 = *(_DWORD *)(a1 + 56);
      if (v9 < 0) {
        uint64_t v10 = 11;
      }
      else {
        uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v10;
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_166B9F4()
{
  return 1;
}

void *sub_166B9FC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.patches.PathTree");
}

void *sub_166BA0C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 6));
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_166BA90(void *a1)
{
  sub_166BA0C(a1);

  operator delete();
}

uint64_t sub_166BAC8(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 48) = 0;
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(void *)(a1 + 72) = 0;
    *(void *)(a1 + 80) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_166BAF4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v21 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v21, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v21 + 1;
    unsigned int v9 = *v21;
    if (*v21 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v21, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v21 + 2;
      }
    }
    uint64_t v21 = v8;
    switch(v9 >> 3)
    {
      case 3u:
        if (v9 == 26)
        {
          unsigned int v12 = (unsigned int *)(a1 + 24);
          goto LABEL_13;
        }
        if (v9 != 24) {
          goto LABEL_25;
        }
        unint64_t v17 = sub_110F7A8((uint64_t *)&v21);
        sub_11794F8(a1, v17);
        goto LABEL_23;
      case 4u:
        if (v9 == 34)
        {
          unsigned int v12 = (unsigned int *)(a1 + 48);
LABEL_13:
          unint64_t v13 = sub_188C30C(v12, (unsigned __int8 *)v8, (uint64_t)a3);
LABEL_32:
          uint64_t v21 = (char *)v13;
          if (!v13) {
            goto LABEL_38;
          }
          goto LABEL_33;
        }
        if (v9 == 32)
        {
          unint64_t v18 = sub_110F7A8((uint64_t *)&v21);
          sub_166BD24(a1, v18);
LABEL_23:
          if (!v21) {
            goto LABEL_38;
          }
LABEL_33:
          if (sub_11947B8((uint64_t)a3, &v21, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_25:
        if (v9) {
          BOOL v19 = (v9 & 7) == 4;
        }
        else {
          BOOL v19 = 1;
        }
        if (!v19)
        {
          if (*v7)
          {
            uint64_t v20 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v20 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v21;
          }
          unint64_t v13 = sub_1885AC0(v9, v20, v8, a3);
          goto LABEL_32;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_38:
        }
          uint64_t v21 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v21;
      case 5u:
        if (v9 != 41) {
          goto LABEL_25;
        }
        uint64_t v15 = *(void *)v8;
        uint64_t v14 = v8 + 8;
        v5 |= 1u;
        *(void *)(a1 + 72) = v15;
        goto LABEL_18;
      case 6u:
        if (v9 != 49) {
          goto LABEL_25;
        }
        uint64_t v16 = *(void *)v8;
        uint64_t v14 = v8 + 8;
        v5 |= 2u;
        *(void *)(a1 + 80) = v16;
LABEL_18:
        uint64_t v21 = v14;
        goto LABEL_33;
      default:
        goto LABEL_25;
    }
  }
}

void sub_166BD24(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 48);
  int v4 = (_DWORD *)(a1 + 48);
  if (v5 == *(_DWORD *)(a1 + 52))
  {
    int v6 = v5 + 1;
    sub_188CA54((unsigned int *)(a1 + 48), v5 + 1);
    *(void *)(*(void *)(a1 + 56) + 8 * v5) = a2;
  }
  else
  {
    *(void *)(*(void *)(a1 + 56) + 8 * v5) = a2;
    int v6 = v5 + 1;
  }
  *int v4 = v6;
}

unsigned char *sub_166BD94(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  unsigned int v6 = *(_DWORD *)(a1 + 40);
  if ((int)v6 >= 1)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    *int v4 = 26;
    uint64_t v7 = v4 + 1;
    if (v6 >= 0x80)
    {
      do
      {
        *v7++ = v6 | 0x80;
        unsigned int v30 = v6 >> 14;
        v6 >>= 7;
      }
      while (v30);
      int v4 = v7 - 1;
    }
    v4 += 2;
    *uint64_t v7 = v6;
    int v8 = *(uint64_t **)(a1 + 32);
    unsigned int v9 = &v8[*(int *)(a1 + 24)];
    do
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v10 = *v8++;
      unint64_t v11 = (2 * v10) ^ (v10 >> 63);
      *int v4 = v11;
      if (v11 > 0x7F)
      {
        *int v4 = v11 | 0x80;
        unint64_t v12 = v11 >> 7;
        v4[1] = v11 >> 7;
        v4 += 2;
        if (v11 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v13 = v12 >> 14;
            v12 >>= 7;
            *v4++ = v12;
          }
          while (v13);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v8 < v9);
  }
  unsigned int v14 = *(_DWORD *)(a1 + 64);
  if ((int)v14 >= 1)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    *int v4 = 34;
    uint64_t v15 = v4 + 1;
    if (v14 >= 0x80)
    {
      do
      {
        *v15++ = v14 | 0x80;
        unsigned int v31 = v14 >> 14;
        v14 >>= 7;
      }
      while (v31);
      int v4 = v15 - 1;
    }
    v4 += 2;
    unsigned char *v15 = v14;
    uint64_t v16 = *(uint64_t **)(a1 + 56);
    unint64_t v17 = &v16[*(int *)(a1 + 48)];
    do
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v18 = *v16++;
      unint64_t v19 = (2 * v18) ^ (v18 >> 63);
      *int v4 = v19;
      if (v19 > 0x7F)
      {
        *int v4 = v19 | 0x80;
        unint64_t v20 = v19 >> 7;
        v4[1] = v19 >> 7;
        v4 += 2;
        if (v19 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v21 = v20 >> 14;
            v20 >>= 7;
            *v4++ = v20;
          }
          while (v21);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v16 < v17);
  }
  int v22 = *(_DWORD *)(a1 + 16);
  if (v22)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v23 = *(void *)(a1 + 72);
    *int v4 = 41;
    *(void *)(v4 + 1) = v23;
    v4 += 9;
  }
  if ((v22 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v24 = *(void *)(a1 + 80);
    *int v4 = 49;
    *(void *)(v4 + 1) = v24;
    v4 += 9;
  }
  uint64_t v25 = *(void *)(a1 + 8);
  if ((v25 & 1) == 0) {
    return v4;
  }
  unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v27 + 31) < 0)
  {
    uint64_t v28 = *(void **)(v27 + 8);
    uint64_t v29 = *(void *)(v27 + 16);
  }
  else
  {
    uint64_t v28 = (void *)(v27 + 8);
    LODWORD(v29) = *(unsigned __int8 *)(v27 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v29)
  {
    uint64_t v32 = (int)v29;
    memcpy(v4, v28, (int)v29);
    v4 += v32;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v28, v29, v4);
}

uint64_t sub_166C0A4(uint64_t a1)
{
  uint64_t v2 = sub_188D5F8((unsigned int *)(a1 + 24));
  if (v2)
  {
    int v3 = v2;
    if ((v2 & 0x80000000) != 0) {
      uint64_t v4 = 11;
    }
    else {
      uint64_t v4 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    int v3 = 0;
    uint64_t v4 = 0;
  }
  *(_DWORD *)(a1 + 40) = v3;
  uint64_t v5 = v4 + v2;
  uint64_t v6 = sub_188D5F8((unsigned int *)(a1 + 48));
  if (v6)
  {
    int v7 = v6;
    if ((v6 & 0x80000000) != 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v5 += v8;
  }
  else
  {
    int v7 = 0;
  }
  *(_DWORD *)(a1 + 64) = v7;
  int v9 = *(_DWORD *)(a1 + 16);
  uint64_t v10 = v5 + v6 + 9;
  if ((v9 & 1) == 0) {
    uint64_t v10 = v5 + v6;
  }
  if ((v9 & 2) != 0) {
    v10 += 9;
  }
  if ((v9 & 3) != 0) {
    uint64_t result = v10;
  }
  else {
    uint64_t result = v5 + v6;
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    result += v14;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_166C1B0(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188CA54((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 8 * data_low), *(const void **)(a2 + 32), 8 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 48);
  if (v8)
  {
    uint64_t v9 = SLODWORD(v3[2].__r_.__value_.__l.__data_);
    sub_188CA54((unsigned int *)&v3[2], v9 + v8);
    std::string::size_type v10 = v3[2].__r_.__value_.__l.__size_;
    LODWORD(v3[2].__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 48);
    uint64_t result = (std::string *)memcpy((void *)(v10 + 8 * v9), *(const void **)(a2 + 56), 8 * *(int *)(a2 + 48));
  }
  int v11 = *(_DWORD *)(a2 + 16);
  if ((v11 & 3) != 0)
  {
    if (v11) {
      v3[3].__r_.__value_.__r.__words[0] = *(void *)(a2 + 72);
    }
    if ((v11 & 2) != 0) {
      v3[3].__r_.__value_.__l.__size_ = *(void *)(a2 + 80);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v11;
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_166C2C8()
{
  return 1;
}

void *sub_166C2D0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.patches.Geometry");
}

void *sub_166C2E0(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_166C354(void *a1)
{
  sub_166C2E0(a1);

  operator delete();
}

char *sub_166C38C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v49 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v49, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v49 + 1;
    unsigned int v9 = *v49;
    if (*v49 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v49, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v49 + 2;
      }
    }
    uint64_t v49 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_44;
        }
        v5 |= 4u;
        unint64_t v13 = v8 + 1;
        LODWORD(v12) = *v8;
        if ((v12 & 0x80) == 0) {
          goto LABEL_13;
        }
        int v14 = *v13;
        uint64_t v12 = v12 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v13 = v8 + 2;
LABEL_13:
          uint64_t v49 = v13;
          *(_DWORD *)(a1 + 40) = v12;
          goto LABEL_51;
        }
        uint64_t v35 = (char *)sub_188C138((uint64_t)v8, v12);
        uint64_t v49 = v35;
        *(_DWORD *)(a1 + 40) = v36;
        if (v35) {
          goto LABEL_51;
        }
        goto LABEL_70;
      case 2u:
        if (v9 != 16) {
          goto LABEL_44;
        }
        v5 |= 1u;
        uint64_t v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v37 = (char *)sub_188C138((uint64_t)v8, v16);
          uint64_t v49 = v37;
          *(void *)(a1 + 24) = v38;
          if (!v37) {
            goto LABEL_70;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_18:
          uint64_t v49 = v15;
          *(void *)(a1 + 24) = v16;
        }
        goto LABEL_51;
      case 3u:
        if (v9 != 24) {
          goto LABEL_44;
        }
        v5 |= 2u;
        uint64_t v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          unsigned int v39 = (char *)sub_188C138((uint64_t)v8, v19);
          uint64_t v49 = v39;
          *(void *)(a1 + 32) = v40;
          if (!v39) {
            goto LABEL_70;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          uint64_t v49 = v18;
          *(void *)(a1 + 32) = v19;
        }
        goto LABEL_51;
      case 5u:
        if (v9 != 40) {
          goto LABEL_44;
        }
        v5 |= 8u;
        int v22 = v8 + 1;
        LODWORD(v21) = *v8;
        if ((v21 & 0x80) == 0) {
          goto LABEL_28;
        }
        int v23 = *v22;
        uint64_t v21 = v21 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v41 = (char *)sub_188C138((uint64_t)v8, v21);
          uint64_t v49 = v41;
          *(_DWORD *)(a1 + 44) = v42;
          if (!v41) {
            goto LABEL_70;
          }
        }
        else
        {
          int v22 = v8 + 2;
LABEL_28:
          uint64_t v49 = v22;
          *(_DWORD *)(a1 + 44) = v21;
        }
        goto LABEL_51;
      case 6u:
        if (v9 != 48) {
          goto LABEL_44;
        }
        v5 |= 0x10u;
        uint64_t v25 = v8 + 1;
        LODWORD(v24) = *v8;
        if ((v24 & 0x80) == 0) {
          goto LABEL_33;
        }
        int v26 = *v25;
        uint64_t v24 = v24 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v43 = (char *)sub_188C138((uint64_t)v8, v24);
          uint64_t v49 = v43;
          *(_DWORD *)(a1 + 48) = v44;
          if (!v43) {
            goto LABEL_70;
          }
        }
        else
        {
          uint64_t v25 = v8 + 2;
LABEL_33:
          uint64_t v49 = v25;
          *(_DWORD *)(a1 + 48) = v24;
        }
        goto LABEL_51;
      case 7u:
        if (v9 != 56) {
          goto LABEL_44;
        }
        v5 |= 0x20u;
        uint64_t v28 = v8 + 1;
        LODWORD(v27) = *v8;
        if ((v27 & 0x80) == 0) {
          goto LABEL_38;
        }
        int v29 = *v28;
        uint64_t v27 = v27 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          uint64_t v45 = (char *)sub_188C138((uint64_t)v8, v27);
          uint64_t v49 = v45;
          *(_DWORD *)(a1 + 52) = v46;
          if (!v45) {
            goto LABEL_70;
          }
        }
        else
        {
          uint64_t v28 = v8 + 2;
LABEL_38:
          uint64_t v49 = v28;
          *(_DWORD *)(a1 + 52) = v27;
        }
        goto LABEL_51;
      case 8u:
        if (v9 != 64) {
          goto LABEL_44;
        }
        v5 |= 0x40u;
        unsigned int v31 = v8 + 1;
        LODWORD(v30) = *v8;
        if ((v30 & 0x80) == 0) {
          goto LABEL_43;
        }
        int v32 = *v31;
        uint64_t v30 = v30 + (v32 << 7) - 128;
        if (v32 < 0)
        {
          uint64_t v47 = (char *)sub_188C138((uint64_t)v8, v30);
          uint64_t v49 = v47;
          *(_DWORD *)(a1 + 56) = v48;
          if (!v47) {
            goto LABEL_70;
          }
        }
        else
        {
          unsigned int v31 = v8 + 2;
LABEL_43:
          uint64_t v49 = v31;
          *(_DWORD *)(a1 + 56) = v30;
        }
        goto LABEL_51;
      default:
LABEL_44:
        if (v9) {
          BOOL v33 = (v9 & 7) == 4;
        }
        else {
          BOOL v33 = 1;
        }
        if (!v33)
        {
          if (*v7)
          {
            uint64_t v34 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v49;
          }
          uint64_t v49 = (char *)sub_1885AC0(v9, v34, v8, a3);
          if (!v49) {
            goto LABEL_70;
          }
LABEL_51:
          if (sub_11947B8((uint64_t)a3, &v49, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_70:
        }
          uint64_t v49 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v49;
    }
  }
}

unsigned char *sub_166C774(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 24);
    *int v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(void *)(a1 + 32);
    *int v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 44);
    *int v4 = 40;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(int *)(a1 + 48);
    *int v4 = 48;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v22 = *(int *)(a1 + 52);
    *int v4 = 56;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unint64_t v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v25 = *(int *)(a1 + 56);
    *int v4 = 64;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unint64_t v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v28 = *(void *)(a1 + 8);
  if ((v28 & 1) == 0) {
    return v4;
  }
  unint64_t v30 = v28 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v30 + 31) < 0)
  {
    unsigned int v31 = *(void **)(v30 + 8);
    uint64_t v32 = *(void *)(v30 + 16);
  }
  else
  {
    unsigned int v31 = (void *)(v30 + 8);
    LODWORD(v32) = *(unsigned __int8 *)(v30 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v32)
  {
    uint64_t v33 = (int)v32;
    memcpy(v4, v31, (int)v32);
    v4 += v33;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v31, v32, v4);
}

unint64_t sub_166CB84(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x7F) == 0)
  {
    unint64_t v2 = 0;
    goto LABEL_34;
  }
  if (v1)
  {
    unint64_t v2 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  unint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) != 0)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if (v3 < 0) {
      uint64_t v4 = 11;
    }
    else {
      uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v4;
    if ((v1 & 8) == 0)
    {
LABEL_10:
      if ((v1 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_22;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_10;
  }
  int v5 = *(_DWORD *)(a1 + 44);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v6;
  if ((v1 & 0x10) == 0)
  {
LABEL_11:
    if ((v1 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_22:
  int v7 = *(_DWORD *)(a1 + 48);
  if (v7 < 0) {
    uint64_t v8 = 11;
  }
  else {
    uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v8;
  if ((v1 & 0x20) == 0)
  {
LABEL_12:
    if ((v1 & 0x40) == 0) {
      goto LABEL_34;
    }
    goto LABEL_30;
  }
LABEL_26:
  int v9 = *(_DWORD *)(a1 + 52);
  if (v9 < 0) {
    uint64_t v10 = 11;
  }
  else {
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v10;
  if ((v1 & 0x40) != 0)
  {
LABEL_30:
    int v11 = *(_DWORD *)(a1 + 56);
    if (v11 < 0) {
      uint64_t v12 = 11;
    }
    else {
      uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v12;
  }
LABEL_34:
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v2 += v16;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_166CD3C()
{
  return 1;
}

void *sub_166CD44@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.patches.Stats");
}

void *sub_166CD54(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 10));
  sub_1889DA8((uint64_t)(a1 + 8));
  sub_1889DA8((uint64_t)(a1 + 6));
  sub_1889DA8((uint64_t)(a1 + 4));
  sub_1889DA8((uint64_t)(a1 + 2));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_166CDF0(void *a1)
{
  sub_166CD54(a1);

  operator delete();
}

uint64_t sub_166CE28(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  *(_DWORD *)(result + 56) = 0;
  *(_DWORD *)(result + 72) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_166CE4C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v15 = a2;
  if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
    return v15;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    int v7 = v15 + 1;
    unsigned int v8 = *v15;
    if (*v15 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v15 + 2;
      }
    }
    unint64_t v15 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 == 10)
        {
          uint64_t v11 = a1 + 16;
          goto LABEL_19;
        }
        if (v8 != 9) {
          goto LABEL_34;
        }
        sub_166D0C0(a1, *(void *)v7);
        goto LABEL_33;
      case 2u:
        if (v8 == 18)
        {
          uint64_t v11 = a1 + 32;
LABEL_19:
          uint64_t v12 = (unsigned __int8 *)sub_188C3D4(v11, v7, a3);
          goto LABEL_20;
        }
        if (v8 != 17) {
          goto LABEL_34;
        }
        sub_166D130(a1, *(void *)v7);
        goto LABEL_33;
      case 3u:
        if (v8 == 26)
        {
          uint64_t v11 = a1 + 48;
          goto LABEL_19;
        }
        if (v8 != 25) {
          goto LABEL_34;
        }
        sub_166BD24(a1, *(void *)v7);
        goto LABEL_33;
      case 4u:
        if (v8 == 34)
        {
          uint64_t v11 = a1 + 64;
          goto LABEL_19;
        }
        if (v8 != 33) {
          goto LABEL_34;
        }
        sub_11CDF9C(a1, *(void *)v7);
        goto LABEL_33;
      case 5u:
        if (v8 == 42)
        {
          uint64_t v11 = a1 + 80;
          goto LABEL_19;
        }
        if (v8 == 41)
        {
          sub_166D1A0(a1, *(void *)v7);
LABEL_33:
          v15 += 8;
LABEL_21:
          if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
            return v15;
          }
          continue;
        }
LABEL_34:
        if (v8) {
          BOOL v13 = (v8 & 7) == 4;
        }
        else {
          BOOL v13 = 1;
        }
        if (!v13)
        {
          if (*v6)
          {
            unint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v7 = v15;
          }
          uint64_t v12 = sub_1885AC0(v8, v14, v7, a3);
LABEL_20:
          unint64_t v15 = (char *)v12;
          if (!v12) {
            return 0;
          }
          goto LABEL_21;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v15;
      default:
        goto LABEL_34;
    }
  }
}

void sub_166D0C0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 16);
  uint64_t v4 = (_DWORD *)(a1 + 16);
  if (v5 == *(_DWORD *)(a1 + 20))
  {
    int v6 = v5 + 1;
    sub_188CA54((unsigned int *)(a1 + 16), v5 + 1);
    *(void *)(*(void *)(a1 + 24) + 8 * v5) = a2;
  }
  else
  {
    *(void *)(*(void *)(a1 + 24) + 8 * v5) = a2;
    int v6 = v5 + 1;
  }
  *uint64_t v4 = v6;
}

void sub_166D130(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 32);
  uint64_t v4 = (_DWORD *)(a1 + 32);
  if (v5 == *(_DWORD *)(a1 + 36))
  {
    int v6 = v5 + 1;
    sub_188CA54((unsigned int *)(a1 + 32), v5 + 1);
    *(void *)(*(void *)(a1 + 40) + 8 * v5) = a2;
  }
  else
  {
    *(void *)(*(void *)(a1 + 40) + 8 * v5) = a2;
    int v6 = v5 + 1;
  }
  *uint64_t v4 = v6;
}

void sub_166D1A0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 80);
  uint64_t v4 = (_DWORD *)(a1 + 80);
  if (v5 == *(_DWORD *)(a1 + 84))
  {
    int v6 = v5 + 1;
    sub_188CA54((unsigned int *)(a1 + 80), v5 + 1);
    *(void *)(*(void *)(a1 + 88) + 8 * v5) = a2;
  }
  else
  {
    *(void *)(*(void *)(a1 + 88) + 8 * v5) = a2;
    int v6 = v5 + 1;
  }
  *uint64_t v4 = v6;
}

unsigned char *sub_166D210(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6 >= 1)
  {
    if (*(void *)a3 <= __dst)
    {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
      int v6 = *(_DWORD *)(a1 + 16);
    }
    int v7 = 8 * v6;
    *uint64_t v4 = 10;
    unsigned int v8 = v4 + 1;
    unsigned int v9 = v7;
    if (v7 >= 0x80)
    {
      do
      {
        *v8++ = v9 | 0x80;
        unsigned int v46 = v9 >> 14;
        v9 >>= 7;
      }
      while (v46);
      uint64_t v4 = v8 - 1;
    }
    unsigned int v10 = v4 + 2;
    *unsigned int v8 = v9;
    uint64_t v11 = *(char **)(a1 + 24);
    if (*(void *)a3 - (void)v10 < v7)
    {
      uint64_t v4 = (unsigned char *)sub_188A528(a3, v11, v7, v10);
    }
    else
    {
      uint64_t v12 = v7;
      memcpy(v10, v11, v7);
      uint64_t v4 = (char *)v10 + v12;
    }
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13 >= 1)
  {
    if (*(void *)a3 <= (unint64_t)v4)
    {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      int v13 = *(_DWORD *)(a1 + 32);
    }
    int v14 = 8 * v13;
    *uint64_t v4 = 18;
    unint64_t v15 = v4 + 1;
    unsigned int v16 = v14;
    if (v14 >= 0x80)
    {
      do
      {
        *v15++ = v16 | 0x80;
        unsigned int v47 = v16 >> 14;
        v16 >>= 7;
      }
      while (v47);
      uint64_t v4 = v15 - 1;
    }
    unint64_t v17 = v4 + 2;
    unsigned char *v15 = v16;
    unint64_t v18 = *(char **)(a1 + 40);
    if (*(void *)a3 - (void)v17 < v14)
    {
      uint64_t v4 = (unsigned char *)sub_188A528(a3, v18, v14, v17);
    }
    else
    {
      uint64_t v19 = v14;
      memcpy(v17, v18, v14);
      uint64_t v4 = (char *)v17 + v19;
    }
  }
  int v20 = *(_DWORD *)(a1 + 48);
  if (v20 >= 1)
  {
    if (*(void *)a3 <= (unint64_t)v4)
    {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      int v20 = *(_DWORD *)(a1 + 48);
    }
    int v21 = 8 * v20;
    *uint64_t v4 = 26;
    unint64_t v22 = v4 + 1;
    unsigned int v23 = v21;
    if (v21 >= 0x80)
    {
      do
      {
        *v22++ = v23 | 0x80;
        unsigned int v48 = v23 >> 14;
        v23 >>= 7;
      }
      while (v48);
      uint64_t v4 = v22 - 1;
    }
    unint64_t v24 = v4 + 2;
    unsigned char *v22 = v23;
    unint64_t v25 = *(char **)(a1 + 56);
    if (*(void *)a3 - (void)v24 < v21)
    {
      uint64_t v4 = (unsigned char *)sub_188A528(a3, v25, v21, v24);
    }
    else
    {
      uint64_t v26 = v21;
      memcpy(v24, v25, v21);
      uint64_t v4 = (char *)v24 + v26;
    }
  }
  int v27 = *(_DWORD *)(a1 + 64);
  if (v27 >= 1)
  {
    if (*(void *)a3 <= (unint64_t)v4)
    {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      int v27 = *(_DWORD *)(a1 + 64);
    }
    int v28 = 8 * v27;
    *uint64_t v4 = 34;
    int v29 = v4 + 1;
    unsigned int v30 = v28;
    if (v28 >= 0x80)
    {
      do
      {
        *v29++ = v30 | 0x80;
        unsigned int v49 = v30 >> 14;
        v30 >>= 7;
      }
      while (v49);
      uint64_t v4 = v29 - 1;
    }
    unsigned int v31 = v4 + 2;
    *int v29 = v30;
    uint64_t v32 = *(char **)(a1 + 72);
    if (*(void *)a3 - (void)v31 < v28)
    {
      uint64_t v4 = (unsigned char *)sub_188A528(a3, v32, v28, v31);
    }
    else
    {
      uint64_t v33 = v28;
      memcpy(v31, v32, v28);
      uint64_t v4 = (char *)v31 + v33;
    }
  }
  int v34 = *(_DWORD *)(a1 + 80);
  if (v34 >= 1)
  {
    if (*(void *)a3 <= (unint64_t)v4)
    {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      int v34 = *(_DWORD *)(a1 + 80);
    }
    int v35 = 8 * v34;
    *uint64_t v4 = 42;
    int v36 = v4 + 1;
    unsigned int v37 = v35;
    if (v35 >= 0x80)
    {
      do
      {
        *v36++ = v37 | 0x80;
        unsigned int v50 = v37 >> 14;
        v37 >>= 7;
      }
      while (v50);
      uint64_t v4 = v36 - 1;
    }
    uint64_t v38 = v4 + 2;
    *int v36 = v37;
    unsigned int v39 = *(char **)(a1 + 88);
    if (*(void *)a3 - (void)v38 < v35)
    {
      uint64_t v4 = (unsigned char *)sub_188A528(a3, v39, v35, v38);
    }
    else
    {
      uint64_t v40 = v35;
      memcpy(v38, v39, v35);
      uint64_t v4 = (char *)v38 + v40;
    }
  }
  uint64_t v41 = *(void *)(a1 + 8);
  if ((v41 & 1) == 0) {
    return v4;
  }
  unint64_t v43 = v41 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v43 + 31) < 0)
  {
    int v44 = *(void **)(v43 + 8);
    uint64_t v45 = *(void *)(v43 + 16);
  }
  else
  {
    int v44 = (void *)(v43 + 8);
    LODWORD(v45) = *(unsigned __int8 *)(v43 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v45)
  {
    uint64_t v51 = (int)v45;
    memcpy(v4, v44, (int)v45);
    v4 += v51;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v44, v45, v4);
}

uint64_t sub_166D614(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 16);
  uint64_t v2 = 8 * v1;
  if (v1)
  {
    if ((v2 & 0x80000000) != 0) {
      uint64_t v3 = 11;
    }
    else {
      uint64_t v3 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v4 = v3 + v2;
  uint64_t v5 = *(unsigned int *)(a1 + 32);
  uint64_t v6 = 8 * v5;
  if (v5)
  {
    if ((v6 & 0x80000000) != 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v7;
  }
  uint64_t v8 = v4 + v6;
  uint64_t v9 = *(unsigned int *)(a1 + 48);
  uint64_t v10 = 8 * v9;
  if (v9)
  {
    if ((v10 & 0x80000000) != 0) {
      uint64_t v11 = 11;
    }
    else {
      uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v8 += v11;
  }
  uint64_t v12 = v8 + v10;
  uint64_t v13 = *(unsigned int *)(a1 + 64);
  uint64_t v14 = 8 * v13;
  if (v13)
  {
    uint64_t v15 = 11;
    uint64_t v16 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((int)v14 >= 0) {
      uint64_t v15 = v16;
    }
    v12 += v15;
  }
  uint64_t v17 = v12 + v14;
  uint64_t v18 = *(unsigned int *)(a1 + 80);
  uint64_t v19 = 8 * v18;
  if (v18)
  {
    uint64_t v20 = 11;
    uint64_t v21 = ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((int)v19 >= 0) {
      uint64_t v20 = v21;
    }
    v17 += v20;
  }
  uint64_t v22 = v17 + v19;
  uint64_t v23 = *(void *)(a1 + 8);
  if (v23)
  {
    unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v25 + 31) < 0) {
      uint64_t v26 = *(void *)(v25 + 16);
    }
    else {
      uint64_t v26 = *(unsigned __int8 *)(v25 + 31);
    }
    v22 += v26;
  }
  *(_DWORD *)(a1 + 96) = v22;
  return v22;
}

std::string *sub_166D77C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if (v4)
  {
    uint64_t v5 = &result->__r_.__value_.__r.__words[2];
    uint64_t v6 = SLODWORD(result->__r_.__value_.__r.__words[2]);
    sub_188CA54((unsigned int *)&result->__r_.__value_.__r.__words[2], v6 + v4);
    std::string::pointer data = v3[1].__r_.__value_.__l.__data_;
    *(_DWORD *)v5 += *(_DWORD *)(a2 + 16);
    uint64_t result = (std::string *)memcpy(&data[8 * v6], *(const void **)(a2 + 24), 8 * *(int *)(a2 + 16));
  }
  int v8 = *(_DWORD *)(a2 + 32);
  if (v8)
  {
    uint64_t v9 = SLODWORD(v3[1].__r_.__value_.__r.__words[1]);
    sub_188CA54((unsigned int *)&v3[1].__r_.__value_.__r.__words[1], v9 + v8);
    std::string::size_type v10 = v3[1].__r_.__value_.__r.__words[2];
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) += *(_DWORD *)(a2 + 32);
    uint64_t result = (std::string *)memcpy((void *)(v10 + 8 * v9), *(const void **)(a2 + 40), 8 * *(int *)(a2 + 32));
  }
  int v11 = *(_DWORD *)(a2 + 48);
  if (v11)
  {
    uint64_t data_low = SLODWORD(v3[2].__r_.__value_.__l.__data_);
    sub_188CA54((unsigned int *)&v3[2], data_low + v11);
    std::string::size_type size = v3[2].__r_.__value_.__l.__size_;
    LODWORD(v3[2].__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 48);
    uint64_t result = (std::string *)memcpy((void *)(size + 8 * data_low), *(const void **)(a2 + 56), 8 * *(int *)(a2 + 48));
  }
  int v14 = *(_DWORD *)(a2 + 64);
  if (v14)
  {
    uint64_t v15 = SLODWORD(v3[2].__r_.__value_.__r.__words[2]);
    sub_188CA54((unsigned int *)&v3[2].__r_.__value_.__r.__words[2], v15 + v14);
    std::string::pointer v16 = v3[3].__r_.__value_.__l.__data_;
    LODWORD(v3[2].__r_.__value_.__r.__words[2]) += *(_DWORD *)(a2 + 64);
    uint64_t result = (std::string *)memcpy(&v16[8 * v15], *(const void **)(a2 + 72), 8 * *(int *)(a2 + 64));
  }
  int v17 = *(_DWORD *)(a2 + 80);
  if (v17)
  {
    uint64_t v18 = SLODWORD(v3[3].__r_.__value_.__r.__words[1]);
    sub_188CA54((unsigned int *)&v3[3].__r_.__value_.__r.__words[1], v18 + v17);
    std::string::size_type v19 = v3[3].__r_.__value_.__r.__words[2];
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) += *(_DWORD *)(a2 + 80);
    uint64_t result = (std::string *)memcpy((void *)(v19 + 8 * v18), *(const void **)(a2 + 88), 8 * *(int *)(a2 + 80));
  }
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_166D930()
{
  return 1;
}

void *sub_166D938@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.patches.Bypass");
}

double sub_166D948(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24CCDB8;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  double result = 0.0;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 88) = 0u;
  return result;
}

void *sub_166DA00(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = off_24CCE38;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_166DA9C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24CCEB8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_166DB40(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24CCF38;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(_DWORD *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = a1;
  *(_DWORD *)(result + 64) = 0;
  *(void *)(result + 72) = 0;
  *(void *)(result + 80) = 0;
  return result;
}

double sub_166DBF8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24CCFB8;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 44) = 0u;
  return result;
}

uint64_t sub_166DC78(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24CD038;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = a1;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = a1;
  *(_DWORD *)(result + 96) = 0;
  return result;
}

uint64_t sub_166DD40(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0xF) != 0)
  {
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_166DD6C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_168CF6C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

void *sub_166DDFC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 6));
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_166DE80(void *a1)
{
  sub_166DDFC(a1);

  operator delete();
}

uint64_t sub_166DEB8(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 48) = 0;
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(_DWORD *)(a1 + 80) = 0;
    *(void *)(a1 + 72) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_166DEE8(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v28 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v28, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v28 + 1;
    unsigned int v9 = *v28;
    if (*v28 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v28, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v28 + 2;
      }
    }
    int v28 = v8;
    switch(v9 >> 3)
    {
      case 2u:
        if (v9 != 16) {
          goto LABEL_34;
        }
        v5 |= 2u;
        uint64_t v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          int v28 = v12;
          *(_DWORD *)(a1 + 80) = v13;
          goto LABEL_42;
        }
        uint64_t v20 = (char *)sub_188C0D0((uint64_t)v8, v13);
        int v28 = v20;
        *(_DWORD *)(a1 + 80) = v21;
        if (!v20) {
          goto LABEL_47;
        }
        goto LABEL_42;
      case 4u:
        if (v9 == 34)
        {
          uint64_t v15 = (unsigned int *)(a1 + 24);
LABEL_23:
          std::string::size_type v19 = sub_188C2CC(v15, (unsigned __int8 *)v8, (uint64_t)a3);
          goto LABEL_41;
        }
        if (v9 != 32) {
          goto LABEL_34;
        }
        int v24 = sub_110DAD8((uint64_t *)&v28);
        sub_1632D50(a1, v24);
        goto LABEL_32;
      case 5u:
        if (v9 != 40) {
          goto LABEL_34;
        }
        v5 |= 1u;
        std::string::pointer v16 = v8 + 1;
        uint64_t v17 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v18 = *v16;
        uint64_t v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v22 = (char *)sub_188C138((uint64_t)v8, v17);
          int v28 = v22;
          *(void *)(a1 + 72) = v23;
          if (!v22) {
            goto LABEL_47;
          }
        }
        else
        {
          std::string::pointer v16 = v8 + 2;
LABEL_20:
          int v28 = v16;
          *(void *)(a1 + 72) = v17;
        }
        goto LABEL_42;
      case 6u:
        if (v9 == 50)
        {
          uint64_t v15 = (unsigned int *)(a1 + 48);
          goto LABEL_23;
        }
        if (v9 == 48)
        {
          int v25 = sub_110DAD8((uint64_t *)&v28);
          sub_1182598(a1, v25);
LABEL_32:
          if (!v28) {
            goto LABEL_47;
          }
LABEL_42:
          if (sub_11947B8((uint64_t)a3, &v28, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_34:
        if (v9) {
          BOOL v26 = (v9 & 7) == 4;
        }
        else {
          BOOL v26 = 1;
        }
        if (!v26)
        {
          if (*v7)
          {
            int v27 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v28;
          }
          std::string::size_type v19 = sub_1885AC0(v9, v27, v8, a3);
LABEL_41:
          int v28 = (char *)v19;
          if (!v19) {
            goto LABEL_47;
          }
          goto LABEL_42;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_47:
        }
          int v28 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v28;
      default:
        goto LABEL_34;
    }
  }
}

unsigned char *sub_166E198(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 80);
    *int v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  unsigned int v10 = *(_DWORD *)(a1 + 40);
  if ((int)v10 >= 1)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    *int v4 = 34;
    unsigned int v11 = v4 + 1;
    if (v10 >= 0x80)
    {
      do
      {
        *v11++ = v10 | 0x80;
        unsigned int v34 = v10 >> 14;
        v10 >>= 7;
      }
      while (v34);
      int v4 = v11 - 1;
    }
    v4 += 2;
    *unsigned int v11 = v10;
    uint64_t v12 = *(unsigned int **)(a1 + 32);
    int v13 = &v12[*(int *)(a1 + 24)];
    do
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v15 = *v12++;
      unsigned int v14 = v15;
      *int v4 = v15;
      if (v15 > 0x7F)
      {
        *int v4 = v14 | 0x80;
        unsigned int v16 = v14 >> 7;
        v4[1] = v14 >> 7;
        v4 += 2;
        if (v14 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v17 = v16 >> 14;
            v16 >>= 7;
            *v4++ = v16;
          }
          while (v17);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v12 < v13);
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v18 = *(void *)(a1 + 72);
    *int v4 = 40;
    v4[1] = v18;
    if (v18 > 0x7F)
    {
      v4[1] = v18 | 0x80;
      unint64_t v19 = v18 >> 7;
      v4[2] = v18 >> 7;
      v4 += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v20 = v19 >> 14;
          v19 >>= 7;
          *v4++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  unsigned int v21 = *(_DWORD *)(a1 + 64);
  if ((int)v21 >= 1)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    *int v4 = 50;
    uint64_t v22 = v4 + 1;
    if (v21 >= 0x80)
    {
      do
      {
        *v22++ = v21 | 0x80;
        unsigned int v35 = v21 >> 14;
        v21 >>= 7;
      }
      while (v35);
      int v4 = v22 - 1;
    }
    v4 += 2;
    unsigned char *v22 = v21;
    uint64_t v23 = *(unsigned int **)(a1 + 56);
    int v24 = &v23[*(int *)(a1 + 48)];
    do
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v26 = *v23++;
      unsigned int v25 = v26;
      *int v4 = v26;
      if (v26 > 0x7F)
      {
        *int v4 = v25 | 0x80;
        unsigned int v27 = v25 >> 7;
        v4[1] = v25 >> 7;
        v4 += 2;
        if (v25 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v28 = v27 >> 14;
            v27 >>= 7;
            *v4++ = v27;
          }
          while (v28);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v23 < v24);
  }
  uint64_t v29 = *(void *)(a1 + 8);
  if ((v29 & 1) == 0) {
    return v4;
  }
  unint64_t v31 = v29 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v31 + 31) < 0)
  {
    uint64_t v32 = *(void **)(v31 + 8);
    uint64_t v33 = *(void *)(v31 + 16);
  }
  else
  {
    uint64_t v32 = (void *)(v31 + 8);
    LODWORD(v33) = *(unsigned __int8 *)(v31 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v33)
  {
    uint64_t v36 = (int)v33;
    memcpy(v4, v32, (int)v33);
    v4 += v36;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v32, v33, v4);
}

uint64_t sub_166E520(uint64_t a1)
{
  uint64_t v2 = sub_188D4F0((unsigned int *)(a1 + 24));
  if (v2)
  {
    int v3 = v2;
    if ((v2 & 0x80000000) != 0) {
      uint64_t v4 = 11;
    }
    else {
      uint64_t v4 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    int v3 = 0;
    uint64_t v4 = 0;
  }
  *(_DWORD *)(a1 + 40) = v3;
  uint64_t v5 = v4 + v2;
  uint64_t v6 = sub_188D4F0((unsigned int *)(a1 + 48));
  if (v6)
  {
    int v7 = v6;
    if ((v6 & 0x80000000) != 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v5 += v8;
  }
  else
  {
    int v7 = 0;
  }
  *(_DWORD *)(a1 + 64) = v7;
  uint64_t result = v5 + v6;
  int v10 = *(_DWORD *)(a1 + 16);
  if ((v10 & 3) != 0)
  {
    if (v10) {
      result += ((9 * (__clz(*(void *)(a1 + 72) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    if ((v10 & 2) != 0) {
      result += ((9 * (__clz(*(_DWORD *)(a1 + 80) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    result += v13;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_166E660(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 48);
  if (v8)
  {
    uint64_t v9 = SLODWORD(v3[2].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&v3[2], v9 + v8);
    std::string::size_type v10 = v3[2].__r_.__value_.__l.__size_;
    LODWORD(v3[2].__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 48);
    uint64_t result = (std::string *)memcpy((void *)(v10 + 4 * v9), *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  int v11 = *(_DWORD *)(a2 + 16);
  if ((v11 & 3) != 0)
  {
    if (v11) {
      v3[3].__r_.__value_.__r.__words[0] = *(void *)(a2 + 72);
    }
    if ((v11 & 2) != 0) {
      LODWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 80);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v11;
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_166E778()
{
  return 1;
}

void *sub_166E780@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.TimeSpaceTrajectory");
}

uint64_t sub_166E790(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_166E7A8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_166DEE8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_166E838(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_166E974(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

void *sub_166E8C8(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_166E93C(void *a1)
{
  sub_166E8C8(a1);

  operator delete();
}

char *sub_166E974(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v14 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v14, a3[11].i32[1])) {
    goto LABEL_22;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v14 + 1;
    unsigned int v8 = *v14;
    if (*v14 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v14, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v14 + 2;
      }
    }
    unsigned int v14 = v7;
    if (v8 == 13)
    {
      *(_DWORD *)(a1 + 24) = *(_DWORD *)v7;
      unsigned int v14 = v7 + 4;
      int v5 = 1;
      goto LABEL_17;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v14;
    }
    unsigned int v14 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v14) {
      goto LABEL_23;
    }
LABEL_17:
    if (sub_11947B8((uint64_t)a3, &v14, a3[11].i32[1])) {
      goto LABEL_22;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_22;
  }
LABEL_23:
  unsigned int v14 = 0;
LABEL_22:
  *(_DWORD *)(a1 + 16) |= v5;
  return v14;
}

_OWORD *sub_166EAB4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (_OWORD *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    int v6 = *(_DWORD *)(a1 + 24);
    *(unsigned char *)int v4 = 13;
    *(_DWORD *)((char *)v4 + 1) = v6;
    int v4 = (_OWORD *)((char *)v4 + 5);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    return (_OWORD *)((char *)v4 + v12);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_166EB98(uint64_t a1)
{
  uint64_t v1 = 5;
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    uint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_166EBE0()
{
  return 1;
}

void *sub_166EBE8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.MatchedTrajectoryMetadata");
}

uint64_t sub_166EBF8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24CD0B8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(_DWORD *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = a1;
  *(_DWORD *)(result + 64) = 0;
  *(void *)(result + 72) = 0;
  *(_DWORD *)(result + 80) = 0;
  return result;
}

uint64_t sub_166ECB8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24CD138;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

BOOL sub_166ED34(unsigned int a1)
{
  return a1 < 0x50;
}

double sub_166ED40(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)a1 = off_24CD1B8;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = a2;
  double result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  return result;
}

uint64_t sub_166ED78(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2542E18)
  {
    if (*(void *)(a1 + 48))
    {
      sub_15B9F30();
      operator delete();
    }
    uint64_t v5 = *(void *)(a1 + 56);
    if (v5)
    {
      sub_166FAF0(v5);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_16B3284((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_166EE54(uint64_t a1)
{
  sub_166ED78(a1);

  operator delete();
}

uint64_t sub_166EE8C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      double result = sub_167375C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if (v5) {
      double result = sub_15B9F6C(*(void *)(v1 + 48));
    }
    if ((v5 & 2) != 0) {
      double result = sub_166EF30(*(void *)(v1 + 56));
    }
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_166EF30(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 0xF) == 0) {
    goto LABEL_7;
  }
  if (v3)
  {
    unint64_t v6 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_15;
      }
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
  if ((v3 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_15:
  unint64_t v7 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v7 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    if ((v3 & 4) != 0) {
      goto LABEL_19;
    }
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  **(unsigned char **)unint64_t v7 = 0;
  *(void *)(v7 + 8) = 0;
  if ((v3 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_19:
  unint64_t v8 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v8 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v8 = 0;
    *(unsigned char *)(v8 + 23) = 0;
    if ((v3 & 8) == 0) {
      goto LABEL_7;
    }
LABEL_6:
    uint64_t result = sub_166FC2C(*(void *)(a1 + 72));
    goto LABEL_7;
  }
  **(unsigned char **)unint64_t v8 = 0;
  *(void *)(v8 + 8) = 0;
  if ((v3 & 8) != 0) {
    goto LABEL_6;
  }
LABEL_7:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

char *sub_166F03C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = v26 + 2;
      }
    }
    unsigned int v26 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 5) {
      break;
    }
    if (v11 == 4)
    {
      if (v8 != 34) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v22 = *(void **)(a1 + 56);
      if (!v22)
      {
        uint64_t v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v23 = (void *)*v23;
        }
        uint64_t v22 = sub_16944F0((uint64_t)v23);
        *(void *)(a1 + 56) = v22;
        unint64_t v7 = v26;
      }
      unsigned int v15 = (char *)sub_166F29C(a3, (uint64_t)v22, (unsigned __int8 *)v7);
    }
    else
    {
      if (v11 != 3 || v8 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 1u;
      int v24 = *(void **)(a1 + 48);
      if (!v24)
      {
        unsigned int v25 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          unsigned int v25 = (void *)*v25;
        }
        int v24 = sub_15C2014((uint64_t)v25);
        *(void *)(a1 + 48) = v24;
        unint64_t v7 = v26;
      }
      unsigned int v15 = sub_11EAA5C(a3, (uint64_t)v24, (unsigned __int8 *)v7);
    }
LABEL_42:
    unsigned int v26 = v15;
    if (!v15) {
      return 0;
    }
LABEL_43:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      return v26;
    }
  }
  if (v8 == 42)
  {
    unsigned int v16 = v7 - 1;
    while (1)
    {
      unsigned int v17 = (unsigned __int8 *)(v16 + 1);
      unsigned int v26 = v16 + 1;
      unint64_t v18 = *(_DWORD **)(a1 + 40);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 32) = v19 + 1;
        uint64_t v20 = *(void *)&v18[2 * v19 + 2];
      }
      else
      {
        sub_1694880(*(void *)(a1 + 24));
        uint64_t v20 = sub_188CDC8(a1 + 24, v21);
        unsigned int v17 = (unsigned __int8 *)v26;
      }
      unsigned int v16 = sub_166F32C(a3, v20, v17);
      unsigned int v26 = v16;
      if (!v16) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 42) {
        goto LABEL_43;
      }
    }
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      unsigned int v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = v26;
    }
    unsigned int v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_42;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v26;
  }
  return 0;
}

uint64_t sub_166F29C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_166FC74(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_166F32C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16738F4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_166F3BC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    *uint64_t v4 = 26;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_15BA180(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 56);
    *uint64_t v4 = 34;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    uint64_t v4 = sub_1670054(v10, v12, a3);
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 42;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        unsigned int v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        unsigned int v17 = v4 + 2;
      }
      uint64_t v4 = sub_1674410(v15, (unint64_t)v17, a3);
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_166F5CC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_16749B4(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      unint64_t v9 = sub_15BA324(*(void *)(a1 + 48));
      v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      uint64_t v10 = sub_1670294(*(void *)(a1 + 56));
      v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_166F6E8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_16B3E84((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v10 = *(std::string **)(a1 + 48);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (void *)*v12;
        }
        uint64_t v10 = (std::string *)sub_15C2014((uint64_t)v12);
        *(void *)(a1 + 48) = v10;
      }
      if (*(void *)(a2 + 48)) {
        unint64_t v13 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        unint64_t v13 = &off_253F530;
      }
      sub_1113E40(v10, (uint64_t)v13);
    }
    if ((v9 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v14 = *(std::string **)(a1 + 56);
      if (!v14)
      {
        uint64_t v15 = *(void *)(a1 + 8);
        unsigned int v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unsigned int v16 = (void *)*v16;
        }
        uint64_t v14 = (std::string *)sub_16944F0((uint64_t)v16);
        *(void *)(a1 + 56) = v14;
      }
      if (*(void *)(a2 + 56)) {
        unsigned int v17 = *(uint64_t (****)())(a2 + 56);
      }
      else {
        unsigned int v17 = &off_2542E58;
      }
      sub_166F85C(v14, (uint64_t)v17);
    }
  }
  uint64_t v18 = *(void *)(a2 + 8);
  if (v18)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v18 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_166F85C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0xF) == 0) {
    goto LABEL_27;
  }
  if ((v9 & 1) == 0)
  {
    if ((v9 & 2) == 0) {
      goto LABEL_7;
    }
LABEL_13:
    unint64_t v13 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    uint64_t v15 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v13, v15);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_27;
      }
      goto LABEL_19;
    }
    goto LABEL_16;
  }
  uint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
  std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
  uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
  if (v11) {
    uint64_t v12 = (uint64_t *)*v12;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[2], v10, v12);
  if ((v9 & 2) != 0) {
    goto LABEL_13;
  }
LABEL_7:
  if ((v9 & 4) == 0) {
    goto LABEL_8;
  }
LABEL_16:
  unsigned int v16 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
  std::string::size_type v17 = v3->__r_.__value_.__l.__size_;
  uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
  if (v17) {
    uint64_t v18 = (uint64_t *)*v18;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__r.__words[2], v16, v18);
  if ((v9 & 8) != 0)
  {
LABEL_19:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::pointer data = (std::string *)v3[3].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type v20 = v3->__r_.__value_.__l.__size_;
      uint64_t v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        uint64_t v21 = (void *)*v21;
      }
      std::string::pointer data = (std::string *)sub_1694598((uint64_t)v21);
      v3[3].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 72)) {
      uint64_t v22 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      uint64_t v22 = &off_2542EA8;
    }
    uint64_t result = sub_11B0BDC(data, (uint64_t)v22);
  }
LABEL_27:
  uint64_t v23 = *(void *)(a2 + 8);
  if (v23)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v23 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

void sub_166FA30(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_166EE8C(a1);
    sub_166F6E8(a1, a2);
  }
}

BOOL sub_166FA7C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_16750D0(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = sub_15BA3C8(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_166FAE0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.TrafficApiResponse");
}

uint64_t sub_166FAF0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if ((uint64_t (***)())a1 != &off_2542E58)
  {
    uint64_t v6 = *(void *)(a1 + 72);
    if (v6)
    {
      sub_1670478(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_166FBF4(uint64_t a1)
{
  sub_166FAF0(a1);

  operator delete();
}

uint64_t sub_166FC2C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_166FC74(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v30 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    return *(void *)v30;
  }
  uint64_t v6 = (uint64_t **)(a1 + 24);
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = (unsigned __int8 *)(*(void *)v30 + 1);
    unsigned int v9 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        int v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (unsigned __int8 *)(*(void *)v30 + 2);
      }
    }
    *(void *)unsigned int v30 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 48);
        goto LABEL_21;
      case 2u:
        if (v9 != 18) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 56);
        goto LABEL_21;
      case 3u:
        if (v9 != 26) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 64);
LABEL_21:
        std::string::size_type v17 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v18 = (uint64_t)sub_188C244(v17, *(char **)v30, (uint64_t)a3);
        goto LABEL_47;
      case 4u:
        if (v9 != 34) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v19 = *(void **)(a1 + 72);
        if (!v19)
        {
          std::string::size_type v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            std::string::size_type v20 = (void *)*v20;
          }
          uint64_t v19 = sub_1694598((uint64_t)v20);
          *(void *)(a1 + 72) = v19;
          int v8 = *(unsigned __int8 **)v30;
        }
        uint64_t v18 = sub_166FFC4(a3, (uint64_t)v19, v8);
        goto LABEL_47;
      case 5u:
        if (v9 != 42) {
          goto LABEL_40;
        }
        uint64_t v21 = (const std::string::value_type *)(v8 - 1);
        while (1)
        {
          uint64_t v22 = (char *)(v21 + 1);
          *(void *)unsigned int v30 = v21 + 1;
          uint64_t v23 = *(_DWORD **)(a1 + 40);
          if (v23 && (uint64_t v24 = *(int *)(a1 + 32), (int)v24 < *v23))
          {
            *(_DWORD *)(a1 + 32) = v24 + 1;
            unsigned int v25 = *(std::string **)&v23[2 * v24 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            void *v27 = v26;
            v27[1] = sub_3A6EDC;
            *unsigned int v26 = 0;
            v26[1] = 0;
            v26[2] = 0;
            unsigned int v25 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v26);
            uint64_t v22 = *(char **)v30;
          }
          uint64_t v21 = sub_188C244(v25, v22, (uint64_t)a3);
          *(void *)unsigned int v30 = v21;
          if (!v21) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *v21 != 42) {
            goto LABEL_48;
          }
        }
      default:
LABEL_40:
        if (v9) {
          BOOL v28 = (v9 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if (*v7)
          {
            uint64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = *(unsigned __int8 **)v30;
          }
          uint64_t v18 = (uint64_t)sub_1885AC0(v9, v29, (char *)v8, a3);
LABEL_47:
          *(void *)unsigned int v30 = v18;
          if (!v18) {
            return 0;
          }
LABEL_48:
          if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
            return *(void *)v30;
          }
          continue;
        }
        if (!v8) {
          return 0;
        }
        a3[10].i32[0] = v9 - 1;
        return *(void *)v30;
    }
  }
}

uint64_t sub_166FFC4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1670550(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1670054(uint64_t a1, char *__dst, void *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  char v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
LABEL_8:
  char v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0) {
    goto LABEL_15;
  }
LABEL_9:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 72);
  *char v4 = 34;
  unsigned int v8 = *(_DWORD *)(v7 + 20);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  char v4 = sub_167072C(v7, v9, a3);
LABEL_15:
  uint64_t v10 = *(unsigned int *)(a1 + 32);
  if ((int)v10 >= 1)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 8 * v10;
    do
    {
      unint64_t v13 = *(void **)(*(void *)(a1 + 40) + v11 + 8);
      if (*((char *)v13 + 23) < 0)
      {
        int64_t v14 = v13[1];
        if (v14 > 127) {
          goto LABEL_26;
        }
      }
      else
      {
        int64_t v14 = *((unsigned __int8 *)v13 + 23);
      }
      if (*a3 - (void)v4 + 14 >= v14)
      {
        *char v4 = 42;
        v4[1] = v14;
        if (*((char *)v13 + 23) < 0) {
          unint64_t v13 = (void *)*v13;
        }
        uint64_t v15 = v4 + 2;
        memcpy(v15, v13, v14);
        char v4 = &v15[v14];
        goto LABEL_24;
      }
LABEL_26:
      char v4 = (char *)sub_188A868(a3, 5, (uint64_t)v13, v4);
LABEL_24:
      v11 += 8;
    }
    while (v12 != v11);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_1670294(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    char v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0xF) == 0) {
    goto LABEL_14;
  }
  if ((v8 & 1) == 0)
  {
    if ((v8 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_19:
    unint64_t v15 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
    uint64_t v17 = *(void *)(v15 + 8);
    if ((v16 & 0x80u) == 0) {
      uint64_t v17 = v16;
    }
    v4 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 4) == 0)
    {
LABEL_12:
      if ((v8 & 8) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    goto LABEL_22;
  }
  unint64_t v12 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  uint64_t v14 = *(void *)(v12 + 8);
  if ((v13 & 0x80u) == 0) {
    uint64_t v14 = v13;
  }
  v4 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 2) != 0) {
    goto LABEL_19;
  }
LABEL_11:
  if ((v8 & 4) == 0) {
    goto LABEL_12;
  }
LABEL_22:
  unint64_t v18 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
  uint64_t v20 = *(void *)(v18 + 8);
  if ((v19 & 0x80u) == 0) {
    uint64_t v20 = v19;
  }
  v4 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) != 0)
  {
LABEL_13:
    uint64_t v9 = sub_1670874(*(void *)(a1 + 72));
    v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_14:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v21 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v21 + 31) < 0) {
      uint64_t v22 = *(void *)(v21 + 16);
    }
    else {
      uint64_t v22 = *(unsigned __int8 *)(v21 + 31);
    }
    v4 += v22;
  }
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

uint64_t sub_1670460()
{
  return 1;
}

void *sub_1670468@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.ResponseMetaData");
}

uint64_t sub_1670478(uint64_t a1)
{
  char v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1670518(uint64_t a1)
{
  sub_1670478(a1);

  operator delete();
}

uint64_t sub_1670550(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v24 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = (char *)(*(void *)v24 + 1);
    unsigned int v9 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180(*(uint64_t *)v24, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)uint64_t v24 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v16 = v8 + 1;
    uint64_t v17 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_24;
    }
    int v18 = *v16;
    uint64_t v17 = v17 + (v18 << 7) - 128;
    if ((v18 & 0x80000000) == 0)
    {
      uint64_t v16 = v8 + 2;
LABEL_24:
      *(void *)uint64_t v24 = v16;
      *(void *)(a1 + 32) = v17;
      goto LABEL_29;
    }
    uint64_t v22 = sub_188C138((uint64_t)v8, v17);
    *(void *)uint64_t v24 = v22;
    *(void *)(a1 + 32) = v23;
    if (!v22) {
      goto LABEL_36;
    }
LABEL_29:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v19 = *(void *)(a1 + 8);
    uint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
    if (v19) {
      uint64_t v20 = (uint64_t *)*v20;
    }
    unint64_t v21 = (std::string *)sub_1880F84((void *)(a1 + 24), v20);
    unint64_t v15 = (void *)sub_188C244(v21, *(char **)v24, (uint64_t)a3);
LABEL_28:
    *(void *)uint64_t v24 = v15;
    if (!v15) {
      goto LABEL_36;
    }
    goto LABEL_29;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = *(char **)v24;
    }
    unint64_t v15 = sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_28;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_36:
  *(void *)uint64_t v24 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v24;
}

unsigned char *sub_167072C(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(void *)(a1 + 32);
    *uint64_t v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    BOOL v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    BOOL v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_1670874(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_10;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    v2 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1670930()
{
  return 1;
}

void *sub_1670938@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.TrafficIncidentsMetaData");
}

void *sub_1670948(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_16B3304(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16709C8(void *a1)
{
  sub_1670948(a1);

  operator delete();
}

uint64_t sub_1670A00(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_16716BC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 40) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_1670A84(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v25 = a2;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    return v25;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = v25 + 1;
    unsigned int v8 = *v25;
    if (*v25 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180((uint64_t)v25, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = v25 + 2;
      }
    }
    unsigned int v25 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        uint64_t v14 = v7 - 1;
        while (1)
        {
          unsigned int v25 = v14 + 1;
          uint64_t v15 = *(_DWORD **)(a1 + 40);
          if (v15 && (uint64_t v16 = *(int *)(a1 + 32), (int)v16 < *v15))
          {
            *(_DWORD *)(a1 + 32) = v16 + 1;
            uint64_t v17 = *(void *)&v15[2 * v16 + 2];
          }
          else
          {
            uint64_t v18 = sub_169473C(*(void *)(a1 + 24));
            uint64_t v17 = sub_188CDC8(a1 + 24, v18);
          }
          uint64_t v14 = (char *)sub_1670CDC(a3, v17);
          unsigned int v25 = v14;
          if (!v14) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
            goto LABEL_37;
          }
        }
      }
    }
    else if (v8 >> 3 == 1 && v8 == 8)
    {
      uint64_t v19 = v7 + 1;
      unint64_t v20 = *v7;
      if ((*v7 & 0x80000000) == 0) {
        goto LABEL_34;
      }
      int v21 = *v19;
      int v22 = v20 + (v21 << 7);
      unint64_t v20 = (v22 - 128);
      if (v21 < 0)
      {
        unsigned int v25 = (char *)sub_188C138((uint64_t)v7, (v22 - 128));
        if (!v25) {
          return 0;
        }
        unint64_t v20 = v23;
      }
      else
      {
        uint64_t v19 = v7 + 2;
LABEL_34:
        unsigned int v25 = v19;
      }
      if (v20 > 9)
      {
        if (*v6) {
          uint64_t v24 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v20, v24);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 48) = v20;
      }
      goto LABEL_37;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      BOOL v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      BOOL v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = v25;
    }
    unsigned int v25 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v25) {
      return 0;
    }
LABEL_37:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      return v25;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v25;
  }
  return 0;
}

uint64_t sub_1670CDC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16718D4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1670D6C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 48);
    *uint64_t v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        BOOL v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        BOOL v13 = v4 + 2;
      }
      uint64_t v4 = (unsigned char *)sub_1672190(v11, v13, (int)a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_1670F30(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1672730(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    int v8 = *(_DWORD *)(a1 + 48);
    if (v8 < 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v9;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v2 += v13;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1671018(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_16B3F10((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v9 = *(_DWORD *)(a2 + 48);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1671104()
{
  return 1;
}

void *sub_167110C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.SnapshotMetaData.Dependencies");
}

uint64_t sub_167111C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16711BC(uint64_t a1)
{
  sub_167111C(a1);

  operator delete();
}

uint64_t sub_16711F4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1671238(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v17 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
    return *(void *)v17;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = (char *)(*(void *)v17 + 1);
    unsigned int v7 = **(unsigned char **)v17;
    if ((char)**(unsigned char **)v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180(*(uint64_t *)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = (char *)(*(void *)v17 + 2);
      }
    }
    *(void *)uint64_t v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 8);
    uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
    if (v13) {
      uint64_t v14 = (uint64_t *)*v14;
    }
    uint64_t v15 = (std::string *)sub_1880F84((void *)(a1 + 24), v14);
    unint64_t v12 = (void *)sub_188C244(v15, *(char **)v17, (uint64_t)a3);
LABEL_18:
    *(void *)uint64_t v17 = v12;
    if (!v12) {
      goto LABEL_25;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
      return *(void *)v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = *(char **)v17;
    }
    unint64_t v12 = sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_18;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return *(void *)v17;
  }
LABEL_25:
  *(void *)uint64_t v17 = 0;
  return *(void *)v17;
}

char *sub_1671390(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_167145C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v1 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v1 += v8;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_16714E0()
{
  return 1;
}

void *sub_16714E8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.SnapshotMetaData.Internal");
}

void *sub_16714F8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_167159C((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_16B3404(a1 + 9);
  sub_16B3384(a1 + 6);
  sub_1889DE8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_167159C(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 96);
  uint64_t v2 = (void ***)(a1 + 96);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 104) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 104));
  }
  if (*(uint64_t **)(a1 + 112) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 112));
  }
  if (*(uint64_t **)(a1 + 120) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 120));
  }
  if (*(uint64_t **)(a1 + 128) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 128));
  }
  uint64_t result = (void ***)(a1 + 136);
  if (*(uint64_t **)(a1 + 136) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2542EF0)
  {
    uint64_t result = *(void ****)(a1 + 144);
    if (result)
    {
      sub_167111C((uint64_t)result);
      operator delete();
    }
  }
  return result;
}

void sub_1671684(void *a1)
{
  sub_16714F8(a1);

  operator delete();
}

uint64_t sub_16716BC(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_168C4EC(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    unint64_t v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_1670A00(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  int v9 = *(_DWORD *)(a1 + 16);
  if ((v9 & 0x7F) == 0) {
    goto LABEL_18;
  }
  if ((v9 & 1) == 0)
  {
    if ((v9 & 2) == 0) {
      goto LABEL_12;
    }
LABEL_28:
    unint64_t v13 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v13 + 23) < 0)
    {
      **(unsigned char **)unint64_t v13 = 0;
      *(void *)(v13 + 8) = 0;
      if ((v9 & 4) != 0) {
        goto LABEL_32;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v13 = 0;
      *(unsigned char *)(v13 + 23) = 0;
      if ((v9 & 4) != 0) {
        goto LABEL_32;
      }
    }
LABEL_13:
    if ((v9 & 8) == 0) {
      goto LABEL_14;
    }
LABEL_36:
    unint64_t v15 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v15 + 23) < 0)
    {
      **(unsigned char **)unint64_t v15 = 0;
      *(void *)(v15 + 8) = 0;
      if ((v9 & 0x10) != 0) {
        goto LABEL_40;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v15 = 0;
      *(unsigned char *)(v15 + 23) = 0;
      if ((v9 & 0x10) != 0) {
        goto LABEL_40;
      }
    }
LABEL_15:
    if ((v9 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_44;
  }
  unint64_t v12 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v12 + 23) < 0)
  {
    **(unsigned char **)unint64_t v12 = 0;
    *(void *)(v12 + 8) = 0;
    if ((v9 & 2) != 0) {
      goto LABEL_28;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v12 = 0;
    *(unsigned char *)(v12 + 23) = 0;
    if ((v9 & 2) != 0) {
      goto LABEL_28;
    }
  }
LABEL_12:
  if ((v9 & 4) == 0) {
    goto LABEL_13;
  }
LABEL_32:
  unint64_t v14 = *(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v14 + 23) < 0)
  {
    **(unsigned char **)unint64_t v14 = 0;
    *(void *)(v14 + 8) = 0;
    if ((v9 & 8) != 0) {
      goto LABEL_36;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v14 = 0;
    *(unsigned char *)(v14 + 23) = 0;
    if ((v9 & 8) != 0) {
      goto LABEL_36;
    }
  }
LABEL_14:
  if ((v9 & 0x10) == 0) {
    goto LABEL_15;
  }
LABEL_40:
  unint64_t v16 = *(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v16 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v16 = 0;
    *(unsigned char *)(v16 + 23) = 0;
    if ((v9 & 0x20) != 0) {
      goto LABEL_44;
    }
LABEL_16:
    if ((v9 & 0x40) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  **(unsigned char **)unint64_t v16 = 0;
  *(void *)(v16 + 8) = 0;
  if ((v9 & 0x20) == 0) {
    goto LABEL_16;
  }
LABEL_44:
  unint64_t v17 = *(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v17 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v17 = 0;
    *(unsigned char *)(v17 + 23) = 0;
    if ((v9 & 0x40) == 0) {
      goto LABEL_18;
    }
LABEL_17:
    uint64_t result = sub_16711F4(*(void *)(a1 + 144));
    goto LABEL_18;
  }
  **(unsigned char **)unint64_t v17 = 0;
  *(void *)(v17 + 8) = 0;
  if ((v9 & 0x40) != 0) {
    goto LABEL_17;
  }
LABEL_18:
  *(void *)(a1 + 152) = 0;
  if ((v9 & 0x700) != 0)
  {
    *(_DWORD *)(a1 + 168) = 0;
    *(void *)(a1 + 160) = 0;
  }
  char v11 = *(unsigned char *)(a1 + 8);
  uint64_t v10 = a1 + 8;
  *(_DWORD *)(v10 + 8) = 0;
  if (v11)
  {
    return sub_188B4AC((uint64_t *)v10);
  }
  return result;
}

uint64_t sub_16718D4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v67 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v67, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  uint64_t v8 = (uint64_t **)(a1 + 24);
  while (2)
  {
    int v9 = (unsigned __int8 *)(*(void *)v67 + 1);
    unsigned int v10 = **(unsigned char **)v67;
    if ((char)**(unsigned char **)v67 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        int v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v67, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        int v9 = (unsigned __int8 *)(*(void *)v67 + 2);
      }
    }
    *(void *)uint64_t v67 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 8) {
          goto LABEL_97;
        }
        v5 |= 0x80u;
        unint64_t v13 = (char *)(v9 + 1);
        uint64_t v14 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        uint64_t v14 = v14 + (v15 << 7) - 128;
        if ((v15 & 0x80000000) == 0)
        {
          unint64_t v13 = (char *)(v9 + 2);
LABEL_13:
          *(void *)uint64_t v67 = v13;
          *(void *)(a1 + 152) = v14;
          goto LABEL_69;
        }
        uint64_t v59 = sub_188C138((uint64_t)v9, v14);
        *(void *)uint64_t v67 = v59;
        *(void *)(a1 + 152) = v60;
        if (v59) {
          goto LABEL_69;
        }
        goto LABEL_119;
      case 2u:
        if (v10 != 18) {
          goto LABEL_97;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v16 = *(void *)(a1 + 8);
        unint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          unint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 96);
        goto LABEL_67;
      case 3u:
        if (v10 != 26) {
          goto LABEL_97;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 8);
        unint64_t v17 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          unint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 104);
        goto LABEL_67;
      case 4u:
        if (v10 != 34) {
          goto LABEL_97;
        }
        unint64_t v20 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          int v21 = (char *)(v20 + 1);
          *(void *)uint64_t v67 = v20 + 1;
          int v22 = *(_DWORD **)(a1 + 40);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 32), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 32) = v23 + 1;
            uint64_t v24 = *(std::string **)&v22[2 * v23 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            *unsigned int v26 = v25;
            v26[1] = sub_3A6EDC;
            *unsigned int v25 = 0;
            v25[1] = 0;
            v25[2] = 0;
            uint64_t v24 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v25);
            int v21 = *(char **)v67;
          }
          unint64_t v20 = sub_188C244(v24, v21, (uint64_t)a3);
          *(void *)uint64_t v67 = v20;
          if (!v20) {
            goto LABEL_119;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 34) {
            goto LABEL_69;
          }
        }
      case 5u:
        if (v10 != 42) {
          goto LABEL_97;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v27 = *(void *)(a1 + 8);
        unint64_t v17 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
        if (v27) {
          unint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 112);
        goto LABEL_67;
      case 6u:
        if (v10 != 50) {
          goto LABEL_97;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v28 = *(void *)(a1 + 8);
        unint64_t v17 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
        if (v28) {
          unint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 120);
        goto LABEL_67;
      case 7u:
        if (v10 != 56) {
          goto LABEL_97;
        }
        uint64_t v29 = (char *)(v9 + 1);
        unint64_t v30 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_46;
        }
        int v31 = *v29;
        int v32 = v30 + (v31 << 7);
        unint64_t v30 = (v32 - 128);
        if (v31 < 0)
        {
          *(void *)uint64_t v67 = sub_188C138((uint64_t)v9, (v32 - 128));
          if (!*(void *)v67) {
            goto LABEL_119;
          }
          unint64_t v30 = v61;
        }
        else
        {
          uint64_t v29 = (char *)(v9 + 2);
LABEL_46:
          *(void *)uint64_t v67 = v29;
        }
        if (v30 > 0x4F)
        {
          if (*v7) {
            uint64_t v66 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v66 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(7, v30, v66);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x100u;
          *(_DWORD *)(a1 + 160) = v30;
        }
        goto LABEL_69;
      case 8u:
        if (v10 != 66) {
          goto LABEL_97;
        }
        uint64_t v33 = v9 - 1;
        while (1)
        {
          unsigned int v34 = v33 + 1;
          *(void *)uint64_t v67 = v33 + 1;
          unsigned int v35 = *(_DWORD **)(a1 + 64);
          if (v35 && (uint64_t v36 = *(int *)(a1 + 56), (int)v36 < *v35))
          {
            *(_DWORD *)(a1 + 56) = v36 + 1;
            uint64_t v37 = *(void *)&v35[2 * v36 + 2];
          }
          else
          {
            uint64_t v38 = sub_16959A0(*(void *)(a1 + 48));
            uint64_t v37 = sub_188CDC8(a1 + 48, (uint64_t)v38);
            unsigned int v34 = *(unsigned __int8 **)v67;
          }
          uint64_t v33 = (unsigned __int8 *)sub_1671FE0(a3, v37, v34);
          *(void *)uint64_t v67 = v33;
          if (!v33) {
            goto LABEL_119;
          }
          if (*(void *)a3 <= (unint64_t)v33 || *v33 != 66) {
            goto LABEL_69;
          }
        }
      case 9u:
        if (v10 != 74) {
          goto LABEL_97;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v39 = *(void *)(a1 + 8);
        unint64_t v17 = (uint64_t *)(v39 & 0xFFFFFFFFFFFFFFFCLL);
        if (v39) {
          unint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 128);
        goto LABEL_67;
      case 0xAu:
        if (v10 != 82) {
          goto LABEL_97;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v40 = *(void *)(a1 + 8);
        unint64_t v17 = (uint64_t *)(v40 & 0xFFFFFFFFFFFFFFFCLL);
        if (v40) {
          unint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 136);
LABEL_67:
        uint64_t v41 = (std::string *)sub_1880F84(v18, v17);
        uint64_t v42 = (uint64_t)sub_188C244(v41, *(char **)v67, (uint64_t)a3);
        goto LABEL_68;
      case 0xBu:
        if (v10 != 88) {
          goto LABEL_97;
        }
        v5 |= 0x200u;
        unint64_t v43 = (char *)(v9 + 1);
        int v44 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_75;
        }
        int v45 = *v43;
        int v44 = v44 + (v45 << 7) - 128;
        if (v45 < 0)
        {
          uint64_t v62 = sub_188C0D0((uint64_t)v9, v44);
          *(void *)uint64_t v67 = v62;
          *(_DWORD *)(a1 + 164) = v63;
          if (!v62) {
            goto LABEL_119;
          }
        }
        else
        {
          unint64_t v43 = (char *)(v9 + 2);
LABEL_75:
          *(void *)uint64_t v67 = v43;
          *(_DWORD *)(a1 + 164) = v44;
        }
        goto LABEL_69;
      case 0xCu:
        if (v10 != 98) {
          goto LABEL_97;
        }
        unsigned int v46 = (char *)(v9 - 1);
        while (1)
        {
          unsigned int v47 = (unsigned __int8 *)(v46 + 1);
          *(void *)uint64_t v67 = v46 + 1;
          unsigned int v48 = *(_DWORD **)(a1 + 88);
          if (v48 && (uint64_t v49 = *(int *)(a1 + 80), (int)v49 < *v48))
          {
            *(_DWORD *)(a1 + 80) = v49 + 1;
            uint64_t v50 = *(void *)&v48[2 * v49 + 2];
          }
          else
          {
            uint64_t v51 = sub_169461C(*(void *)(a1 + 72));
            uint64_t v50 = sub_188CDC8(a1 + 72, v51);
            unsigned int v47 = *(unsigned __int8 **)v67;
          }
          unsigned int v46 = sub_1672070(a3, v50, v47);
          *(void *)uint64_t v67 = v46;
          if (!v46) {
            goto LABEL_119;
          }
          if (*(void *)a3 <= (unint64_t)v46 || *v46 != 98) {
            goto LABEL_69;
          }
        }
      case 0xDu:
        if (v10 != 106) {
          goto LABEL_97;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        v52 = *(void **)(a1 + 144);
        if (!v52)
        {
          unint64_t v53 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v53 = (void *)*v53;
          }
          v52 = sub_16946B8((uint64_t)v53);
          *(void *)(a1 + 144) = v52;
          int v9 = *(unsigned __int8 **)v67;
        }
        uint64_t v42 = sub_1672100(a3, (uint64_t)v52, v9);
        goto LABEL_68;
      case 0xEu:
        if (v10 != 112) {
          goto LABEL_97;
        }
        v5 |= 0x400u;
        uint64_t v54 = (char *)(v9 + 1);
        int v55 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_96;
        }
        int v56 = *v54;
        int v55 = v55 + (v56 << 7) - 128;
        if (v56 < 0)
        {
          uint64_t v64 = sub_188C0D0((uint64_t)v9, v55);
          *(void *)uint64_t v67 = v64;
          *(_DWORD *)(a1 + 168) = v65;
          if (!v64) {
            goto LABEL_119;
          }
        }
        else
        {
          uint64_t v54 = (char *)(v9 + 2);
LABEL_96:
          *(void *)uint64_t v67 = v54;
          *(_DWORD *)(a1 + 168) = v55;
        }
        goto LABEL_69;
      default:
LABEL_97:
        if (v10) {
          BOOL v57 = (v10 & 7) == 4;
        }
        else {
          BOOL v57 = 1;
        }
        if (!v57)
        {
          if (*v7)
          {
            uint64_t v58 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v58 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v9 = *(unsigned __int8 **)v67;
          }
          uint64_t v42 = (uint64_t)sub_1885AC0(v10, v58, (char *)v9, a3);
LABEL_68:
          *(void *)uint64_t v67 = v42;
          if (!v42) {
            goto LABEL_119;
          }
LABEL_69:
          if (sub_11947B8((uint64_t)a3, (char **)v67, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_119:
        }
          *(void *)uint64_t v67 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v67;
    }
  }
}

uint64_t sub_1671FE0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_168C5DC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1672070(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1670A84(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1672100(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1671238(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1672190(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 152);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(unsigned int *)(a1 + 32);
  if ((int)v10 >= 1)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 8 * v10;
    do
    {
      unint64_t v13 = *(void **)(*(void *)(a1 + 40) + v11 + 8);
      if (*((char *)v13 + 23) < 0)
      {
        int64_t v14 = v13[1];
        if (v14 > 127) {
          goto LABEL_23;
        }
      }
      else
      {
        int64_t v14 = *((unsigned __int8 *)v13 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v14)
      {
        *uint64_t v4 = 34;
        v4[1] = v14;
        if (*((char *)v13 + 23) < 0) {
          unint64_t v13 = (void *)*v13;
        }
        int v15 = v4 + 2;
        memcpy(v15, v13, v14);
        uint64_t v4 = &v15[v14];
        goto LABEL_21;
      }
LABEL_23:
      uint64_t v4 = (char *)sub_188A868(a3, 4, (uint64_t)v13, v4);
LABEL_21:
      v11 += 8;
    }
    while (v12 != v11);
  }
  if ((v6 & 4) != 0)
  {
    uint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 8) == 0)
    {
LABEL_26:
      if ((v6 & 0x100) == 0) {
        goto LABEL_36;
      }
      goto LABEL_30;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_26;
  }
  uint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x100) == 0) {
    goto LABEL_36;
  }
LABEL_30:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v16 = *(int *)(a1 + 160);
  *uint64_t v4 = 56;
  v4[1] = v16;
  if (v16 > 0x7F)
  {
    v4[1] = v16 | 0x80;
    unint64_t v17 = v16 >> 7;
    v4[2] = v16 >> 7;
    v4 += 3;
    if (v16 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v18 = v17 >> 14;
        v17 >>= 7;
        *v4++ = v17;
      }
      while (v18);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_36:
  int v19 = *(_DWORD *)(a1 + 56);
  if (v19)
  {
    for (int i = 0; i != v19; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v21 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *uint64_t v4 = 66;
      unsigned int v22 = *(_DWORD *)(v21 + 20);
      v4[1] = v22;
      if (v22 > 0x7F) {
        uint64_t v23 = sub_188A9CC(v22, v4 + 1);
      }
      else {
        uint64_t v23 = v4 + 2;
      }
      uint64_t v4 = sub_168C930(v21, v23, a3);
    }
  }
  if ((v6 & 0x10) != 0)
  {
    uint64_t v4 = sub_117A0AC(a3, 9, (const void **)(*(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 0x20) == 0)
    {
LABEL_46:
      if ((v6 & 0x200) == 0) {
        goto LABEL_56;
      }
      goto LABEL_50;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_46;
  }
  uint64_t v4 = sub_117A0AC(a3, 10, (const void **)(*(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x200) == 0) {
    goto LABEL_56;
  }
LABEL_50:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unsigned int v24 = *(_DWORD *)(a1 + 164);
  *uint64_t v4 = 88;
  v4[1] = v24;
  if (v24 > 0x7F)
  {
    v4[1] = v24 | 0x80;
    unsigned int v25 = v24 >> 7;
    v4[2] = v24 >> 7;
    v4 += 3;
    if (v24 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unsigned int v26 = v25 >> 14;
        v25 >>= 7;
        *v4++ = v25;
      }
      while (v26);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_56:
  int v27 = *(_DWORD *)(a1 + 80);
  if (v27)
  {
    for (int j = 0; j != v27; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v29 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *uint64_t v4 = 98;
      unsigned int v30 = *(_DWORD *)(v29 + 20);
      v4[1] = v30;
      if (v30 > 0x7F) {
        int v31 = sub_188A9CC(v30, v4 + 1);
      }
      else {
        int v31 = v4 + 2;
      }
      uint64_t v4 = sub_1670D6C(v29, (unint64_t)v31, a3);
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v32 = *(void *)(a1 + 144);
    *uint64_t v4 = 106;
    unsigned int v33 = *(_DWORD *)(v32 + 20);
    v4[1] = v33;
    if (v33 > 0x7F) {
      unsigned int v34 = sub_188A9CC(v33, v4 + 1);
    }
    else {
      unsigned int v34 = v4 + 2;
    }
    uint64_t v4 = sub_1671390(v32, v34, a3);
  }
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v35 = *(_DWORD *)(a1 + 168);
    *uint64_t v4 = 112;
    v4[1] = v35;
    if (v35 > 0x7F)
    {
      v4[1] = v35 | 0x80;
      unsigned int v36 = v35 >> 7;
      v4[2] = v35 >> 7;
      v4 += 3;
      if (v35 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v37 = v36 >> 14;
          v36 >>= 7;
          *v4++ = v36;
        }
        while (v37);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v38 = *(void *)(a1 + 8);
  if ((v38 & 1) == 0) {
    return v4;
  }
  unint64_t v40 = v38 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v40 + 31) < 0)
  {
    uint64_t v41 = *(void **)(v40 + 8);
    uint64_t v42 = *(void *)(v40 + 16);
  }
  else
  {
    uint64_t v41 = (void *)(v40 + 8);
    LODWORD(v42) = *(unsigned __int8 *)(v40 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v42)
  {
    uint64_t v43 = (int)v42;
    memcpy(v4, v41, (int)v42);
    v4 += v43;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v41, v42, v4);
}

uint64_t sub_1672730(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    uint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    uint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_168CB60(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    unint64_t v18 = (uint64_t *)(v17 + 8);
  }
  else {
    unint64_t v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_1670F30(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  int v22 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v22) {
    goto LABEL_30;
  }
  if (v22)
  {
    unint64_t v25 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v26 = *(unsigned __int8 *)(v25 + 23);
    uint64_t v27 = *(void *)(v25 + 8);
    if ((v26 & 0x80u) == 0) {
      uint64_t v27 = v26;
    }
    v16 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v22 & 2) == 0)
    {
LABEL_23:
      if ((v22 & 4) == 0) {
        goto LABEL_24;
      }
      goto LABEL_43;
    }
  }
  else if ((v22 & 2) == 0)
  {
    goto LABEL_23;
  }
  unint64_t v28 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v29 = *(unsigned __int8 *)(v28 + 23);
  uint64_t v30 = *(void *)(v28 + 8);
  if ((v29 & 0x80u) == 0) {
    uint64_t v30 = v29;
  }
  v16 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v22 & 4) == 0)
  {
LABEL_24:
    if ((v22 & 8) == 0) {
      goto LABEL_25;
    }
    goto LABEL_46;
  }
LABEL_43:
  unint64_t v31 = *(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v32 = *(unsigned __int8 *)(v31 + 23);
  uint64_t v33 = *(void *)(v31 + 8);
  if ((v32 & 0x80u) == 0) {
    uint64_t v33 = v32;
  }
  v16 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v22 & 8) == 0)
  {
LABEL_25:
    if ((v22 & 0x10) == 0) {
      goto LABEL_26;
    }
    goto LABEL_49;
  }
LABEL_46:
  unint64_t v34 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v35 = *(unsigned __int8 *)(v34 + 23);
  uint64_t v36 = *(void *)(v34 + 8);
  if ((v35 & 0x80u) == 0) {
    uint64_t v36 = v35;
  }
  v16 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v22 & 0x10) == 0)
  {
LABEL_26:
    if ((v22 & 0x20) == 0) {
      goto LABEL_27;
    }
LABEL_52:
    unint64_t v40 = *(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v41 = *(unsigned __int8 *)(v40 + 23);
    uint64_t v42 = *(void *)(v40 + 8);
    if ((v41 & 0x80u) == 0) {
      uint64_t v42 = v41;
    }
    v16 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v22 & 0x40) == 0)
    {
LABEL_28:
      if ((v22 & 0x80) == 0) {
        goto LABEL_30;
      }
      goto LABEL_29;
    }
    goto LABEL_55;
  }
LABEL_49:
  unint64_t v37 = *(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v38 = *(unsigned __int8 *)(v37 + 23);
  uint64_t v39 = *(void *)(v37 + 8);
  if ((v38 & 0x80u) == 0) {
    uint64_t v39 = v38;
  }
  v16 += v39 + ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v22 & 0x20) != 0) {
    goto LABEL_52;
  }
LABEL_27:
  if ((v22 & 0x40) == 0) {
    goto LABEL_28;
  }
LABEL_55:
  uint64_t v43 = sub_167145C(*(void *)(a1 + 144));
  v16 += v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v22 & 0x80) != 0) {
LABEL_29:
  }
    v16 += ((9 * (__clz(*(void *)(a1 + 152) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_30:
  if ((v22 & 0x700) == 0) {
    goto LABEL_35;
  }
  if ((v22 & 0x100) != 0)
  {
    int v44 = *(_DWORD *)(a1 + 160);
    uint64_t v45 = ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v44 >= 0) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 11;
    }
    v16 += v46;
    if ((v22 & 0x200) == 0)
    {
LABEL_33:
      if ((v22 & 0x400) == 0) {
        goto LABEL_35;
      }
      goto LABEL_34;
    }
  }
  else if ((v22 & 0x200) == 0)
  {
    goto LABEL_33;
  }
  v16 += ((9 * (__clz(*(_DWORD *)(a1 + 164) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v22 & 0x400) != 0) {
LABEL_34:
  }
    v16 += ((9 * (__clz(*(_DWORD *)(a1 + 168) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_35:
  uint64_t v23 = *(void *)(a1 + 8);
  if (v23)
  {
    unint64_t v47 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v47 + 31) < 0) {
      uint64_t v48 = *(void *)(v47 + 16);
    }
    else {
      uint64_t v48 = *(unsigned __int8 *)(v47 + 31);
    }
    v16 += v48;
  }
  *(_DWORD *)(a1 + 20) = v16;
  return v16;
}

void sub_1672B3C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(a1 + 24, v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_16B3F9C((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_16B4028((uint64_t *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    unint64_t v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      *unint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v19)
  {
    if (v19)
    {
      uint64_t v21 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v22 = *(void *)(a1 + 8);
      uint64_t v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        uint64_t v23 = (uint64_t *)*v23;
      }
      sub_1881DF4((std::string **)(a1 + 96), v21, v23);
      if ((v19 & 2) == 0)
      {
LABEL_13:
        if ((v19 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_37;
      }
    }
    else if ((v19 & 2) == 0)
    {
      goto LABEL_13;
    }
    unsigned int v24 = (long long *)(*(void *)(a2 + 104) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v25 = *(void *)(a1 + 8);
    uint64_t v26 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
    if (v25) {
      uint64_t v26 = (uint64_t *)*v26;
    }
    sub_1881DF4((std::string **)(a1 + 104), v24, v26);
    if ((v19 & 4) == 0)
    {
LABEL_14:
      if ((v19 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_40;
    }
LABEL_37:
    uint64_t v27 = (long long *)(*(void *)(a2 + 112) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v28 = *(void *)(a1 + 8);
    uint64_t v29 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
    if (v28) {
      uint64_t v29 = (uint64_t *)*v29;
    }
    sub_1881DF4((std::string **)(a1 + 112), v27, v29);
    if ((v19 & 8) == 0)
    {
LABEL_15:
      if ((v19 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_43;
    }
LABEL_40:
    uint64_t v30 = (long long *)(*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v31 = *(void *)(a1 + 8);
    uint64_t v32 = (uint64_t *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
    if (v31) {
      uint64_t v32 = (uint64_t *)*v32;
    }
    sub_1881DF4((std::string **)(a1 + 120), v30, v32);
    if ((v19 & 0x10) == 0)
    {
LABEL_16:
      if ((v19 & 0x20) == 0) {
        goto LABEL_17;
      }
      goto LABEL_46;
    }
LABEL_43:
    uint64_t v33 = (long long *)(*(void *)(a2 + 128) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v34 = *(void *)(a1 + 8);
    uint64_t v35 = (uint64_t *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
    if (v34) {
      uint64_t v35 = (uint64_t *)*v35;
    }
    sub_1881DF4((std::string **)(a1 + 128), v33, v35);
    if ((v19 & 0x20) == 0)
    {
LABEL_17:
      if ((v19 & 0x40) == 0) {
        goto LABEL_18;
      }
      goto LABEL_49;
    }
LABEL_46:
    uint64_t v36 = (long long *)(*(void *)(a2 + 136) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v37 = *(void *)(a1 + 8);
    uint64_t v38 = (uint64_t *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
    if (v37) {
      uint64_t v38 = (uint64_t *)*v38;
    }
    sub_1881DF4((std::string **)(a1 + 136), v36, v38);
    if ((v19 & 0x40) == 0)
    {
LABEL_18:
      if ((v19 & 0x80) == 0)
      {
LABEL_20:
        *(_DWORD *)(a1 + 16) |= v19;
        goto LABEL_21;
      }
LABEL_19:
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      goto LABEL_20;
    }
LABEL_49:
    *(_DWORD *)(a1 + 16) |= 0x40u;
    uint64_t v39 = *(std::string **)(a1 + 144);
    if (!v39)
    {
      uint64_t v40 = *(void *)(a1 + 8);
      uint64_t v41 = (void *)(v40 & 0xFFFFFFFFFFFFFFFCLL);
      if (v40) {
        uint64_t v41 = (void *)*v41;
      }
      uint64_t v39 = (std::string *)sub_16946B8((uint64_t)v41);
      *(void *)(a1 + 144) = v39;
    }
    if (*(void *)(a2 + 144)) {
      uint64_t v42 = *(uint64_t (****)())(a2 + 144);
    }
    else {
      uint64_t v42 = &off_2542ED0;
    }
    sub_12329D0(v39, (uint64_t)v42);
    if ((v19 & 0x80) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_21:
  if ((v19 & 0x700) == 0) {
    goto LABEL_27;
  }
  if ((v19 & 0x100) == 0)
  {
    if ((v19 & 0x200) == 0) {
      goto LABEL_24;
    }
LABEL_59:
    *(_DWORD *)(a1 + 164) = *(_DWORD *)(a2 + 164);
    if ((v19 & 0x400) == 0) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
  if ((v19 & 0x200) != 0) {
    goto LABEL_59;
  }
LABEL_24:
  if ((v19 & 0x400) != 0) {
LABEL_25:
  }
    *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
LABEL_26:
  *(_DWORD *)(a1 + 16) |= v19;
LABEL_27:
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1672EE0()
{
  return 1;
}

void *sub_1672EE8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.SnapshotMetaData");
}

uint64_t sub_1672EF8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_16AAE04(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

uint64_t sub_1672F74(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2542FA0)
  {
    char v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_16AC078(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_167302C(uint64_t a1)
{
  sub_1672F74(a1);

  operator delete();
}

uint64_t sub_1673064(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_1672EF8(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_16730C0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    char v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        char v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        char v6 = v16 + 2;
      }
    }
    uint64_t v16 = v6;
    if (v7 != 18) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13)
    {
      int v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        int v14 = (void *)*v14;
      }
      uint64_t v13 = sub_16B0288((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      char v6 = v16;
    }
    int v12 = sub_1673218(a3, v13, (unsigned __int8 *)v6);
LABEL_20:
    uint64_t v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v6 = v16;
    }
    int v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

char *sub_1673218(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16AC130(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16732A8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *uint64_t v4 = 18;
    unsigned int v7 = *(_DWORD *)(v6 + 40);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_16AC360(v6, v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_16733B8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_16AC4A4(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_1673440(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v5 = *(void *)(a1 + 24);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      unsigned int v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        unsigned int v7 = (void *)*v7;
      }
      uint64_t v5 = sub_16B0288((uint64_t)v7);
      *(void *)(a1 + 24) = v5;
      uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_25442A0;
    }
    sub_16734E8(v5, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_16734E8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_16B58E0((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    unsigned int v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      *unsigned int v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16735B8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_16AC554(*(void *)(a1 + 24) + 16);
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_16735E8(uint64_t a1)
{
  return sub_16AC554(a1 + 16);
}

void *sub_16735F0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.TrafficSnapshot.Internal");
}

uint64_t sub_1673600(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2542FC0)
  {
    uint64_t v5 = *(void **)(a1 + 192);
    if (v5)
    {
      sub_16714F8(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 200);
    if (v6)
    {
      sub_1672F74(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_16B3784((void *)(a1 + 168));
  sub_16B3704((void *)(a1 + 144));
  sub_16B3684((void *)(a1 + 120));
  sub_16B3604((void *)(a1 + 96));
  sub_16B3584((void *)(a1 + 72));
  sub_16B3504((void *)(a1 + 48));
  sub_16B3484((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1673724(uint64_t a1)
{
  sub_1673600(a1);

  operator delete();
}

uint64_t sub_167375C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1678790(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_16873C8(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 80);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (unsigned char **)(*(void *)(v1 + 88) + 8);
    do
    {
      BOOL v10 = *v9++;
      uint64_t result = (uint64_t)sub_167531C(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 80) = 0;
  }
  uint64_t v11 = *(unsigned int *)(v1 + 104);
  if ((int)v11 >= 1)
  {
    int v12 = (unsigned char **)(*(void *)(v1 + 112) + 8);
    do
    {
      uint64_t v13 = *v12++;
      uint64_t result = (uint64_t)sub_1678840(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(v1 + 104) = 0;
  }
  uint64_t v14 = *(unsigned int *)(v1 + 128);
  if ((int)v14 >= 1)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(v1 + 136) + 8);
    do
    {
      uint64_t v16 = *v15++;
      uint64_t result = sub_167A2FC(v16);
      --v14;
    }
    while (v14);
    *(_DWORD *)(v1 + 128) = 0;
  }
  uint64_t v17 = *(unsigned int *)(v1 + 152);
  if ((int)v17 >= 1)
  {
    unint64_t v18 = (uint64_t *)(*(void *)(v1 + 160) + 8);
    do
    {
      uint64_t v19 = *v18++;
      uint64_t result = sub_1693A38(v19);
      --v17;
    }
    while (v17);
    *(_DWORD *)(v1 + 152) = 0;
  }
  uint64_t v20 = *(unsigned int *)(v1 + 176);
  if ((int)v20 >= 1)
  {
    uint64_t v21 = (uint64_t *)(*(void *)(v1 + 184) + 8);
    do
    {
      uint64_t v22 = *v21++;
      uint64_t result = sub_1675E1C(v22);
      --v20;
    }
    while (v20);
    *(_DWORD *)(v1 + 176) = 0;
  }
  int v23 = *(_DWORD *)(v1 + 16);
  if ((v23 & 3) != 0)
  {
    if (v23) {
      uint64_t result = sub_16716BC(*(void *)(v1 + 192));
    }
    if ((v23 & 2) != 0) {
      uint64_t result = sub_1673064(*(void *)(v1 + 200));
    }
  }
  char v25 = *(unsigned char *)(v1 + 8);
  uint64_t v24 = v1 + 8;
  *(void *)(v24 + 200) = 0;
  *(_DWORD *)(v24 + 8) = 0;
  if (v25)
  {
    return sub_188B4AC((uint64_t *)v24);
  }
  return result;
}

char *sub_16738F4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v66 = a2;
  if (sub_11947B8((uint64_t)a3, &v66, a3[11].i32[1]))
  {
    int v65 = 0;
    goto LABEL_3;
  }
  int v65 = 0;
  uint64_t v64 = (uint64_t *)(a1 + 8);
  while (2)
  {
    uint64_t v6 = v66 + 1;
    unsigned int v7 = *v66;
    if (*v66 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v66, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v66 + 2;
      }
    }
    uint64_t v66 = v6;
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 10) {
          goto LABEL_97;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v10 = *(void *)(a1 + 192);
        if (!v10)
        {
          uint64_t v11 = (void *)(*v64 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v64) {
            uint64_t v11 = (void *)*v11;
          }
          uint64_t v10 = sub_169473C((uint64_t)v11);
          *(void *)(a1 + 192) = v10;
          uint64_t v6 = v66;
        }
        int v12 = (char *)sub_1670CDC(a3, v10, (unsigned __int8 *)v6);
        goto LABEL_104;
      case 2u:
        if (v7 != 18) {
          goto LABEL_97;
        }
        uint64_t v13 = v6 - 1;
        while (1)
        {
          uint64_t v14 = (unsigned __int8 *)(v13 + 1);
          uint64_t v66 = v13 + 1;
          uint64_t v15 = *(_DWORD **)(a1 + 40);
          if (v15 && (uint64_t v16 = *(int *)(a1 + 32), (int)v16 < *v15))
          {
            *(_DWORD *)(a1 + 32) = v16 + 1;
            uint64_t v17 = *(void *)&v15[2 * v16 + 2];
          }
          else
          {
            sub_1694C74(*(void *)(a1 + 24));
            uint64_t v17 = sub_188CDC8(a1 + 24, v18);
            uint64_t v14 = (unsigned __int8 *)v66;
          }
          uint64_t v13 = sub_1673F90(a3, v17, v14);
          uint64_t v66 = v13;
          if (!v13) {
            goto LABEL_112;
          }
          if (*(void *)a3 <= (unint64_t)v13 || *v13 != 18) {
            goto LABEL_105;
          }
        }
      case 3u:
        if (v7 != 26) {
          goto LABEL_97;
        }
        uint64_t v19 = v6 - 1;
        while (1)
        {
          uint64_t v20 = (unsigned __int8 *)(v19 + 1);
          uint64_t v66 = v19 + 1;
          uint64_t v21 = *(_DWORD **)(a1 + 64);
          if (v21 && (uint64_t v22 = *(int *)(a1 + 56), (int)v22 < *v21))
          {
            *(_DWORD *)(a1 + 56) = v22 + 1;
            uint64_t v23 = *(void *)&v21[2 * v22 + 2];
          }
          else
          {
            sub_1695874(*(void *)(a1 + 48));
            uint64_t v23 = sub_188CDC8(a1 + 48, v24);
            uint64_t v20 = (unsigned __int8 *)v66;
          }
          uint64_t v19 = (char *)sub_1674020(a3, v23, v20);
          uint64_t v66 = v19;
          if (!v19) {
            goto LABEL_112;
          }
          if (*(void *)a3 <= (unint64_t)v19 || *v19 != 26) {
            goto LABEL_105;
          }
        }
      case 4u:
        if (v7 != 34) {
          goto LABEL_97;
        }
        char v25 = v6 - 1;
        while (1)
        {
          uint64_t v26 = (unsigned __int8 *)(v25 + 1);
          uint64_t v66 = v25 + 1;
          uint64_t v27 = *(_DWORD **)(a1 + 88);
          if (v27 && (uint64_t v28 = *(int *)(a1 + 80), (int)v28 < *v27))
          {
            *(_DWORD *)(a1 + 80) = v28 + 1;
            uint64_t v29 = *(void *)&v27[2 * v28 + 2];
          }
          else
          {
            uint64_t v30 = sub_169495C(*(void *)(a1 + 72));
            uint64_t v29 = sub_188CDC8(a1 + 72, v30);
            uint64_t v26 = (unsigned __int8 *)v66;
          }
          char v25 = sub_16740B0(a3, v29, v26);
          uint64_t v66 = v25;
          if (!v25) {
            goto LABEL_112;
          }
          if (*(void *)a3 <= (unint64_t)v25 || *v25 != 34) {
            goto LABEL_105;
          }
        }
      case 5u:
        if (v7 != 40) {
          goto LABEL_97;
        }
        v65 |= 4u;
        uint64_t v31 = v6 + 1;
        uint64_t v32 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_50;
        }
        int v33 = *v31;
        uint64_t v32 = v32 + (v33 << 7) - 128;
        if (v33 < 0)
        {
          uint64_t v62 = (char *)sub_188C138((uint64_t)v6, v32);
          uint64_t v66 = v62;
          *(void *)(a1 + 208) = v63;
          if (!v62) {
            goto LABEL_112;
          }
        }
        else
        {
          uint64_t v31 = v6 + 2;
LABEL_50:
          uint64_t v66 = v31;
          *(void *)(a1 + 208) = v32;
        }
        goto LABEL_105;
      case 6u:
        if (v7 != 50) {
          goto LABEL_97;
        }
        uint64_t v34 = v6 - 1;
        while (1)
        {
          uint64_t v35 = (unsigned __int8 *)(v34 + 1);
          uint64_t v66 = v34 + 1;
          uint64_t v36 = *(_DWORD **)(a1 + 112);
          if (v36 && (uint64_t v37 = *(int *)(a1 + 104), (int)v37 < *v36))
          {
            *(_DWORD *)(a1 + 104) = v37 + 1;
            uint64_t v38 = *(void *)&v36[2 * v37 + 2];
          }
          else
          {
            uint64_t v39 = sub_1694CF8(*(void *)(a1 + 96));
            uint64_t v38 = sub_188CDC8(a1 + 96, v39);
            uint64_t v35 = (unsigned __int8 *)v66;
          }
          uint64_t v34 = sub_1674140(a3, v38, v35);
          uint64_t v66 = v34;
          if (!v34) {
            goto LABEL_112;
          }
          if (*(void *)a3 <= (unint64_t)v34 || *v34 != 50) {
            goto LABEL_105;
          }
        }
      case 7u:
        if (v7 != 58) {
          goto LABEL_97;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v40 = *(void **)(a1 + 200);
        if (!v40)
        {
          uint64_t v41 = (void *)(*v64 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v64) {
            uint64_t v41 = (void *)*v41;
          }
          uint64_t v40 = sub_1694808((uint64_t)v41);
          *(void *)(a1 + 200) = v40;
          uint64_t v6 = v66;
        }
        int v12 = sub_16741D0(a3, (uint64_t)v40, (unsigned __int8 *)v6);
        goto LABEL_104;
      case 8u:
        if (v7 != 66) {
          goto LABEL_97;
        }
        uint64_t v42 = v6 - 1;
        while (1)
        {
          uint64_t v43 = (unsigned __int8 *)(v42 + 1);
          uint64_t v66 = v42 + 1;
          int v44 = *(_DWORD **)(a1 + 136);
          if (v44 && (uint64_t v45 = *(int *)(a1 + 128), (int)v45 < *v44))
          {
            *(_DWORD *)(a1 + 128) = v45 + 1;
            uint64_t v46 = *(void *)&v44[2 * v45 + 2];
          }
          else
          {
            sub_1694DB0(*(void *)(a1 + 120));
            uint64_t v46 = sub_188CDC8(a1 + 120, v47);
            uint64_t v43 = (unsigned __int8 *)v66;
          }
          uint64_t v42 = sub_1674260(a3, v46, v43);
          uint64_t v66 = v42;
          if (!v42) {
            goto LABEL_112;
          }
          if (*(void *)a3 <= (unint64_t)v42 || *v42 != 66) {
            goto LABEL_105;
          }
        }
      case 9u:
        if (v7 != 74) {
          goto LABEL_97;
        }
        uint64_t v48 = v6 - 1;
        while (1)
        {
          uint64_t v49 = (unsigned __int8 *)(v48 + 1);
          uint64_t v66 = v48 + 1;
          uint64_t v50 = *(_DWORD **)(a1 + 160);
          if (v50 && (uint64_t v51 = *(int *)(a1 + 152), (int)v51 < *v50))
          {
            *(_DWORD *)(a1 + 152) = v51 + 1;
            uint64_t v52 = *(void *)&v50[2 * v51 + 2];
          }
          else
          {
            uint64_t v53 = sub_16960E0(*(void *)(a1 + 144));
            uint64_t v52 = sub_188CDC8(a1 + 144, v53);
            uint64_t v49 = (unsigned __int8 *)v66;
          }
          uint64_t v48 = sub_16742F0(a3, v52, v49);
          uint64_t v66 = v48;
          if (!v48) {
            goto LABEL_112;
          }
          if (*(void *)a3 <= (unint64_t)v48 || *v48 != 74) {
            goto LABEL_105;
          }
        }
      case 0xAu:
        if (v7 != 82) {
          goto LABEL_97;
        }
        uint64_t v54 = v6 - 1;
        while (1)
        {
          int v55 = (unsigned __int8 *)(v54 + 1);
          uint64_t v66 = v54 + 1;
          int v56 = *(_DWORD **)(a1 + 184);
          if (v56 && (uint64_t v57 = *(int *)(a1 + 176), (int)v57 < *v56))
          {
            *(_DWORD *)(a1 + 176) = v57 + 1;
            uint64_t v58 = *(void *)&v56[2 * v57 + 2];
          }
          else
          {
            uint64_t v59 = sub_16949D8(*(void *)(a1 + 168));
            uint64_t v58 = sub_188CDC8(a1 + 168, v59);
            int v55 = (unsigned __int8 *)v66;
          }
          uint64_t v54 = sub_1674380(a3, v58, v55);
          uint64_t v66 = v54;
          if (!v54) {
            goto LABEL_112;
          }
          if (*(void *)a3 <= (unint64_t)v54 || *v54 != 82) {
            goto LABEL_105;
          }
        }
      default:
LABEL_97:
        if (v7) {
          BOOL v60 = (v7 & 7) == 4;
        }
        else {
          BOOL v60 = 1;
        }
        if (!v60)
        {
          if (*v64)
          {
            unint64_t v61 = (std::string *)((*v64 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v61 = (std::string *)sub_188DBD8(v64);
            uint64_t v6 = v66;
          }
          int v12 = (char *)sub_1885AC0(v7, v61, v6, a3);
LABEL_104:
          uint64_t v66 = v12;
          if (!v12) {
            goto LABEL_112;
          }
LABEL_105:
          if (sub_11947B8((uint64_t)a3, &v66, a3[11].i32[1])) {
            goto LABEL_3;
          }
          continue;
        }
        if (v6) {
          a3[10].i32[0] = v7 - 1;
        }
        else {
LABEL_112:
        }
          uint64_t v66 = 0;
LABEL_3:
        *(_DWORD *)(a1 + 16) |= v65;
        return v66;
    }
  }
}

char *sub_1673F90(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16788A4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1674020(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = (uint64_t)sub_16876C8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16740B0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_167544C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1674140(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1679BC8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16741D0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16730C0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1674260(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_167A3C8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16742F0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1693AD0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1674380(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1675E7C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1674410(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 192);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_1672190(v7, (unint64_t)v9, a3);
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        uint64_t v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        uint64_t v14 = v4 + 2;
      }
      uint64_t v4 = sub_1678EB4(v12, (unint64_t)v14, a3);
    }
  }
  int v15 = *(_DWORD *)(a1 + 56);
  if (v15)
  {
    for (int j = 0; j != v15; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v17 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *uint64_t v4 = 26;
      unsigned int v18 = *(_DWORD *)(v17 + 24);
      v4[1] = v18;
      if (v18 > 0x7F) {
        uint64_t v19 = sub_188A9CC(v18, v4 + 1);
      }
      else {
        uint64_t v19 = v4 + 2;
      }
      uint64_t v4 = sub_1689090(v17, v19, a3);
    }
  }
  int v20 = *(_DWORD *)(a1 + 80);
  if (v20)
  {
    for (int k = 0; k != v20; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v22 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      *uint64_t v4 = 34;
      unsigned int v23 = *(_DWORD *)(v22 + 20);
      v4[1] = v23;
      if (v23 > 0x7F) {
        uint64_t v24 = sub_188A9CC(v23, v4 + 1);
      }
      else {
        uint64_t v24 = v4 + 2;
      }
      uint64_t v4 = sub_16756EC(v22, (unint64_t)v24, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v25 = *(void *)(a1 + 208);
    *uint64_t v4 = 40;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unint64_t v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v28 = *(_DWORD *)(a1 + 104);
  if (v28)
  {
    for (int m = 0; m != v28; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v30 = *(void *)(*(void *)(a1 + 112) + 8 * m + 8);
      *uint64_t v4 = 50;
      unsigned int v31 = *(_DWORD *)(v30 + 20);
      v4[1] = v31;
      if (v31 > 0x7F) {
        uint64_t v32 = sub_188A9CC(v31, v4 + 1);
      }
      else {
        uint64_t v32 = v4 + 2;
      }
      uint64_t v4 = sub_1679DD0(v30, (unint64_t)v32, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v33 = *(void *)(a1 + 200);
    *uint64_t v4 = 58;
    unsigned int v34 = *(_DWORD *)(v33 + 20);
    v4[1] = v34;
    if (v34 > 0x7F) {
      uint64_t v35 = sub_188A9CC(v34, v4 + 1);
    }
    else {
      uint64_t v35 = v4 + 2;
    }
    uint64_t v4 = sub_16732A8(v33, (unint64_t)v35, a3);
  }
  int v36 = *(_DWORD *)(a1 + 128);
  if (v36)
  {
    for (int n = 0; n != v36; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v38 = *(void *)(*(void *)(a1 + 136) + 8 * n + 8);
      *uint64_t v4 = 66;
      unsigned int v39 = *(_DWORD *)(v38 + 20);
      v4[1] = v39;
      if (v39 > 0x7F) {
        uint64_t v40 = sub_188A9CC(v39, v4 + 1);
      }
      else {
        uint64_t v40 = v4 + 2;
      }
      uint64_t v4 = sub_167A70C(v38, (unint64_t)v40, a3);
    }
  }
  int v41 = *(_DWORD *)(a1 + 152);
  if (v41)
  {
    for (iint i = 0; ii != v41; ++ii)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v43 = *(void *)(*(void *)(a1 + 160) + 8 * ii + 8);
      *uint64_t v4 = 74;
      unsigned int v44 = *(_DWORD *)(v43 + 20);
      v4[1] = v44;
      if (v44 > 0x7F) {
        uint64_t v45 = sub_188A9CC(v44, v4 + 1);
      }
      else {
        uint64_t v45 = v4 + 2;
      }
      uint64_t v4 = sub_1693EB4(v43, (unint64_t)v45, a3);
    }
  }
  int v46 = *(_DWORD *)(a1 + 176);
  if (v46)
  {
    for (jint j = 0; jj != v46; ++jj)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v48 = *(void *)(*(void *)(a1 + 184) + 8 * jj + 8);
      *uint64_t v4 = 82;
      unsigned int v49 = *(_DWORD *)(v48 + 20);
      v4[1] = v49;
      if (v49 > 0x7F) {
        uint64_t v50 = sub_188A9CC(v49, v4 + 1);
      }
      else {
        uint64_t v50 = v4 + 2;
      }
      uint64_t v4 = sub_167608C(v48, (unint64_t)v50, a3);
    }
  }
  uint64_t v51 = *(void *)(a1 + 8);
  if ((v51 & 1) == 0) {
    return v4;
  }
  unint64_t v53 = v51 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v53 + 31) < 0)
  {
    uint64_t v54 = *(void **)(v53 + 8);
    uint64_t v55 = *(void *)(v53 + 16);
  }
  else
  {
    uint64_t v54 = (void *)(v53 + 8);
    LODWORD(v55) = *(unsigned __int8 *)(v53 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v55)
  {
    uint64_t v56 = (int)v55;
    memcpy(v4, v54, (int)v55);
    v4 += v56;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v54, v55, v4);
}

uint64_t sub_16749B4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_16793F0(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    uint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    uint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_168A334(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    unsigned int v18 = (uint64_t *)(v17 + 8);
  }
  else {
    unsigned int v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_1675884(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *(int *)(a1 + 104);
  uint64_t v23 = v16 + v22;
  uint64_t v24 = *(void *)(a1 + 112);
  if (v24) {
    unint64_t v25 = (uint64_t *)(v24 + 8);
  }
  else {
    unint64_t v25 = 0;
  }
  if (v22)
  {
    uint64_t v26 = 8 * v22;
    do
    {
      uint64_t v27 = *v25++;
      uint64_t v28 = sub_167A0C4(v27);
      v23 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6);
      v26 -= 8;
    }
    while (v26);
  }
  uint64_t v29 = *(int *)(a1 + 128);
  uint64_t v30 = v23 + v29;
  uint64_t v31 = *(void *)(a1 + 136);
  if (v31) {
    uint64_t v32 = (uint64_t *)(v31 + 8);
  }
  else {
    uint64_t v32 = 0;
  }
  if (v29)
  {
    uint64_t v33 = 8 * v29;
    do
    {
      uint64_t v34 = *v32++;
      uint64_t v35 = sub_167A984(v34);
      v30 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6);
      v33 -= 8;
    }
    while (v33);
  }
  uint64_t v36 = *(int *)(a1 + 152);
  uint64_t v37 = v30 + v36;
  uint64_t v38 = *(void *)(a1 + 160);
  if (v38) {
    unsigned int v39 = (uint64_t *)(v38 + 8);
  }
  else {
    unsigned int v39 = 0;
  }
  if (v36)
  {
    uint64_t v40 = 8 * v36;
    do
    {
      uint64_t v41 = *v39++;
      uint64_t v42 = sub_1694170(v41);
      v37 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6);
      v40 -= 8;
    }
    while (v40);
  }
  uint64_t v43 = *(int *)(a1 + 176);
  uint64_t v44 = v37 + v43;
  uint64_t v45 = *(void *)(a1 + 184);
  if (v45) {
    int v46 = (uint64_t *)(v45 + 8);
  }
  else {
    int v46 = 0;
  }
  if (v43)
  {
    uint64_t v47 = 8 * v43;
    do
    {
      uint64_t v48 = *v46++;
      uint64_t v49 = sub_1676224(v48);
      v44 += v49 + ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6);
      v47 -= 8;
    }
    while (v47);
  }
  int v50 = *(_DWORD *)(a1 + 16);
  if ((v50 & 7) != 0)
  {
    if (v50)
    {
      uint64_t v53 = sub_1672730(*(void *)(a1 + 192));
      v44 += v53 + ((9 * (__clz(v53 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v50 & 2) == 0)
      {
LABEL_48:
        if ((v50 & 4) == 0) {
          goto LABEL_50;
        }
        goto LABEL_49;
      }
    }
    else if ((v50 & 2) == 0)
    {
      goto LABEL_48;
    }
    uint64_t v54 = sub_16733B8(*(void *)(a1 + 200));
    v44 += v54 + ((9 * (__clz(v54 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v50 & 4) != 0) {
LABEL_49:
    }
      v44 += ((9 * (__clz(*(void *)(a1 + 208) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
LABEL_50:
  uint64_t v51 = *(void *)(a1 + 8);
  if (v51)
  {
    unint64_t v55 = v51 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v55 + 31) < 0) {
      uint64_t v56 = *(void *)(v55 + 16);
    }
    else {
      uint64_t v56 = *(unsigned __int8 *)(v55 + 31);
    }
    v44 += v56;
  }
  *(_DWORD *)(a1 + 20) = v44;
  return v44;
}

void sub_1674CE0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_16B40B4((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_16B4140((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_16B41CC((uint64_t *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    unsigned int v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      *unsigned int v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 104);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v21 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_16B4258((uint64_t *)(a1 + 96), v21, v20, v19, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v22 = *(_DWORD *)(a1 + 104) + v19;
    *(_DWORD *)(a1 + 104) = v22;
    uint64_t v23 = *(int **)(a1 + 112);
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 128);
  if (v24)
  {
    unint64_t v25 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    uint64_t v26 = (std::string **)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_16B42E4((uint64_t *)(a1 + 120), v26, v25, v24, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v27 = *(_DWORD *)(a1 + 128) + v24;
    *(_DWORD *)(a1 + 128) = v27;
    uint64_t v28 = *(int **)(a1 + 136);
    if (*v28 < v27) {
      int *v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 152);
  if (v29)
  {
    uint64_t v30 = (uint64_t *)(*(void *)(a2 + 160) + 8);
    uint64_t v31 = (uint64_t *)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_16B4370((uint64_t *)(a1 + 144), v31, v30, v29, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v32 = *(_DWORD *)(a1 + 152) + v29;
    *(_DWORD *)(a1 + 152) = v32;
    uint64_t v33 = *(int **)(a1 + 160);
    if (*v33 < v32) {
      int *v33 = v32;
    }
  }
  int v34 = *(_DWORD *)(a2 + 176);
  if (v34)
  {
    uint64_t v35 = (uint64_t *)(*(void *)(a2 + 184) + 8);
    uint64_t v36 = (std::string **)sub_188CCE4(a1 + 168, *(_DWORD *)(a2 + 176));
    sub_16B43FC((uint64_t *)(a1 + 168), v36, v35, v34, **(_DWORD **)(a1 + 184) - *(_DWORD *)(a1 + 176));
    int v37 = *(_DWORD *)(a1 + 176) + v34;
    *(_DWORD *)(a1 + 176) = v37;
    uint64_t v38 = *(int **)(a1 + 184);
    if (*v38 < v37) {
      int *v38 = v37;
    }
  }
  int v39 = *(_DWORD *)(a2 + 16);
  if ((v39 & 7) != 0)
  {
    if (v39)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v41 = *(void *)(a1 + 192);
      if (!v41)
      {
        uint64_t v42 = *(void *)(a1 + 8);
        uint64_t v43 = (void *)(v42 & 0xFFFFFFFFFFFFFFFCLL);
        if (v42) {
          uint64_t v43 = (void *)*v43;
        }
        uint64_t v41 = sub_169473C((uint64_t)v43);
        *(void *)(a1 + 192) = v41;
      }
      if (*(void *)(a2 + 192)) {
        uint64_t v44 = *(uint64_t (****)())(a2 + 192);
      }
      else {
        uint64_t v44 = &off_2542EF0;
      }
      sub_1672B3C(v41, (uint64_t)v44);
      if ((v39 & 2) == 0)
      {
LABEL_25:
        if ((v39 & 4) == 0)
        {
LABEL_27:
          *(_DWORD *)(a1 + 16) |= v39;
          goto LABEL_28;
        }
LABEL_26:
        *(void *)(a1 + 208) = *(void *)(a2 + 208);
        goto LABEL_27;
      }
    }
    else if ((v39 & 2) == 0)
    {
      goto LABEL_25;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v45 = *(void **)(a1 + 200);
    if (!v45)
    {
      uint64_t v46 = *(void *)(a1 + 8);
      uint64_t v47 = (void *)(v46 & 0xFFFFFFFFFFFFFFFCLL);
      if (v46) {
        uint64_t v47 = (void *)*v47;
      }
      uint64_t v45 = sub_1694808((uint64_t)v47);
      *(void *)(a1 + 200) = v45;
    }
    if (*(void *)(a2 + 200)) {
      uint64_t v48 = *(uint64_t (****)())(a2 + 200);
    }
    else {
      uint64_t v48 = &off_2542FA0;
    }
    sub_1673440((uint64_t)v45, (uint64_t)v48);
    if ((v39 & 4) == 0) {
      goto LABEL_27;
    }
    goto LABEL_26;
  }
LABEL_28:
  uint64_t v40 = *(void *)(a2 + 8);
  if (v40)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v40 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16750D0(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_1679998(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v5 = *(unsigned int *)(a1 + 56);
  while ((int)v5 >= 1)
  {
    uint64_t v6 = v5 - 1;
    char v7 = sub_168B4FC(*(void *)(*(void *)(a1 + 64) + 8 * v5));
    uint64_t v5 = v6;
    if ((v7 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v8 = *(unsigned int *)(a1 + 80);
  while ((int)v8 >= 1)
  {
    uint64_t v9 = v8 - 1;
    char v10 = sub_1675C60(*(void *)(*(void *)(a1 + 88) + 8 * v8));
    uint64_t v8 = v9;
    if ((v10 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v11 = *(unsigned int *)(a1 + 104);
  while ((int)v11 >= 1)
  {
    uint64_t v12 = v11 - 1;
    char v13 = sub_1679A10(*(void *)(*(void *)(a1 + 112) + 8 * v11));
    uint64_t v11 = v12;
    if ((v13 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v14 = *(unsigned int *)(a1 + 152);
  while ((int)v14 >= 1)
  {
    uint64_t v15 = v14 - 1;
    char v16 = sub_16943D4(*(void *)(*(void *)(a1 + 160) + 8 * v14) + 24);
    uint64_t v14 = v15;
    if ((v16 & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t v18 = *(void *)(a1 + 200);
  if ((*(unsigned char *)(v18 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_16AC554(*(void *)(v18 + 24) + 16);
  if (result) {
    return 1;
  }
  return result;
}

void *sub_16751E8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.TrafficSnapshot");
}

uint64_t sub_16751F8(uint64_t result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)uint64_t result = off_24CD5B8;
  *(void *)(result + 8) = v3;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_167522C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2543098)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_168B5DC(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16752E4(uint64_t a1)
{
  sub_167522C(a1);

  operator delete();
}

unsigned char *sub_167531C(unsigned char *result)
{
  uint64_t v1 = result;
  if (result[16]) {
    uint64_t result = sub_167537C(*((unsigned char **)result + 3));
  }
  char v3 = v1[8];
  uint64_t v2 = v1 + 8;
  *((_DWORD *)v2 + 6) = 0;
  *((_DWORD *)v2 + 2) = 0;
  if (v3)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

unsigned char *sub_167537C(unsigned char *result)
{
  uint64_t v1 = result;
  *((_DWORD *)result + 6) = 0;
  *((_DWORD *)result + 10) = 0;
  *((_DWORD *)result + 14) = 0;
  uint64_t v2 = *((unsigned int *)result + 20);
  if ((int)v2 >= 1)
  {
    char v3 = (uint64_t *)(*((void *)result + 11) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B09D0(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 20) = 0;
  }
  int v5 = *((_DWORD *)v1 + 4);
  if (v5)
  {
    unint64_t v6 = *((void *)v1 + 12) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
  }
  if ((v5 & 0x3E) != 0)
  {
    *((void *)v1 + 13) = 0;
    *((void *)v1 + 14) = 0;
    v1[128] = 0;
    *((void *)v1 + 15) = 0;
  }
  char v8 = v1[8];
  char v7 = v1 + 8;
  *((_DWORD *)v7 + 2) = 0;
  if (v8)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

char *sub_167544C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = v23 + 2;
      }
    }
    uint64_t v23 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v19 = *(void *)(a1 + 24);
    if (!v19)
    {
      uint64_t v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v20 = (void *)*v20;
      }
      uint64_t v19 = sub_16958D4((uint64_t)v20);
      *(void *)(a1 + 24) = v19;
      char v7 = v23;
    }
    uint64_t v14 = (char *)sub_167565C(a3, v19, (unsigned __int8 *)v7);
LABEL_32:
    uint64_t v23 = v14;
    if (!v14) {
      return 0;
    }
LABEL_33:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 == 16)
  {
    uint64_t v15 = v7 + 1;
    unint64_t v16 = *v7;
    if (*v7 < 0)
    {
      int v17 = *v15;
      int v18 = v16 + (v17 << 7);
      unint64_t v16 = (v18 - 128);
      if (v17 < 0)
      {
        uint64_t v23 = (char *)sub_188C138((uint64_t)v7, (v18 - 128));
        if (!v23) {
          return 0;
        }
        unint64_t v16 = v21;
        goto LABEL_25;
      }
      uint64_t v15 = v7 + 2;
    }
    uint64_t v23 = v15;
LABEL_25:
    if (v16 > 4)
    {
      if (*v6) {
        int v22 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        int v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v16, v22);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v16;
    }
    goto LABEL_33;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      char v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      char v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v7 = v23;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_32;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

uint64_t sub_167565C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_168B6D8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_16756EC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_168BD4C(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 32);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1675884(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_168C228(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_11:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_1675954(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v5 = *(void *)(a1 + 24);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          uint64_t v7 = (void *)*v7;
        }
        uint64_t v5 = sub_16958D4((uint64_t)v7);
        *(void *)(a1 + 24) = v5;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v8 = &off_25437E8;
      }
      sub_1675A24(v5, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
    }
    *(_DWORD *)(a1 + 16) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_1675A24(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188CA54((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 8 * v6), *(const void **)(a2 + 32), 8 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if (v8)
  {
    uint64_t v9 = *(int *)(a1 + 40);
    sub_188CA54((unsigned int *)(a1 + 40), v9 + v8);
    uint64_t v10 = *(void *)(a1 + 48);
    *(_DWORD *)(a1 + 40) += *(_DWORD *)(a2 + 40);
    memcpy((void *)(v10 + 8 * v9), *(const void **)(a2 + 48), 8 * *(int *)(a2 + 40));
  }
  int v11 = *(_DWORD *)(a2 + 56);
  if (v11)
  {
    uint64_t v12 = *(int *)(a1 + 56);
    sub_188CA54((unsigned int *)(a1 + 56), v12 + v11);
    uint64_t v13 = *(void *)(a1 + 64);
    *(_DWORD *)(a1 + 56) += *(_DWORD *)(a2 + 56);
    memcpy((void *)(v13 + 8 * v12), *(const void **)(a2 + 64), 8 * *(int *)(a2 + 56));
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    unint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    unint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_10E4FFC((uint64_t *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    uint64_t v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 16);
  if ((v19 & 0x3F) != 0)
  {
    if (v19)
    {
      unint64_t v21 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v22 = *(void *)(a1 + 8);
      uint64_t v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        uint64_t v23 = (uint64_t *)*v23;
      }
      sub_1881DF4((std::string **)(a1 + 96), v21, v23);
      if ((v19 & 2) == 0)
      {
LABEL_13:
        if ((v19 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_27;
      }
    }
    else if ((v19 & 2) == 0)
    {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
    if ((v19 & 4) == 0)
    {
LABEL_14:
      if ((v19 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_28;
    }
LABEL_27:
    *(_DWORD *)(a1 + 108) = *(_DWORD *)(a2 + 108);
    if ((v19 & 8) == 0)
    {
LABEL_15:
      if ((v19 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_29;
    }
LABEL_28:
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    if ((v19 & 0x10) == 0)
    {
LABEL_16:
      if ((v19 & 0x20) == 0)
      {
LABEL_18:
        *(_DWORD *)(a1 + 16) |= v19;
        goto LABEL_19;
      }
LABEL_17:
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
      goto LABEL_18;
    }
LABEL_29:
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    if ((v19 & 0x20) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
LABEL_19:
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1675C60(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(unsigned int *)(v2 + 80);
  do
  {
    BOOL v1 = (int)v3 < 1;
    if ((int)v3 < 1) {
      break;
    }
    uint64_t v4 = v3 - 1;
    char v5 = sub_15B0F18(*(void *)(*(void *)(v2 + 88) + 8 * v3));
    uint64_t v3 = v4;
  }
  while ((v5 & 1) != 0);
  return v1;
}

BOOL sub_1675CC4(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 80);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_15B0F18(*(void *)(*(void *)(a1 + 88) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_1675D1C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.TrafficColor");
}

uint64_t sub_1675D2C(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_25430C0)
  {
    uint64_t v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_168CEC0(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1675DE4(uint64_t a1)
{
  sub_1675D2C(a1);

  operator delete();
}

uint64_t sub_1675E1C(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_166DD40(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 24) = 0;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_1675E7C(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v24 = a2;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    return v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v24 + 1;
    unsigned int v8 = *v24;
    if (*v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v24 + 2;
      }
    }
    int v24 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v19 = *(void *)(a1 + 24);
    if (!v19)
    {
      uint64_t v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v20 = (void *)*v20;
      }
      sub_1695A50((uint64_t)v20);
      uint64_t v19 = v21;
      *(void *)(a1 + 24) = v21;
      uint64_t v7 = v24;
    }
    int v14 = sub_166DD6C(a3, v19, (unsigned __int8 *)v7);
LABEL_32:
    int v24 = v14;
    if (!v14) {
      return 0;
    }
LABEL_33:
    if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
      return v24;
    }
  }
  if (v8 == 16)
  {
    unint64_t v15 = v7 + 1;
    unint64_t v16 = *v7;
    if (*v7 < 0)
    {
      int v17 = *v15;
      int v18 = v16 + (v17 << 7);
      unint64_t v16 = (v18 - 128);
      if (v17 < 0)
      {
        int v24 = (char *)sub_188C138((uint64_t)v7, (v18 - 128));
        if (!v24) {
          return 0;
        }
        unint64_t v16 = v22;
        goto LABEL_25;
      }
      unint64_t v15 = v7 + 2;
    }
    int v24 = v15;
LABEL_25:
    if (v16 > 6)
    {
      if (*v6) {
        uint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v16, v23);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v16;
    }
    goto LABEL_33;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v24;
    }
    int v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_32;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v24;
  }
  return 0;
}

unsigned char *sub_167608C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_168D148(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 32);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1676224(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_168D2E4(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_11:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_16762F4(std::string *result, uint64_t a2)
{
  char v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v7 = (void *)*v7;
        }
        sub_1695A50((uint64_t)v7);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v8 = &off_2543870;
      }
      uint64_t result = sub_1561340(data, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16763C4()
{
  return 1;
}

void *sub_16763CC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.HolidayTraffic");
}

void *sub_16763DC(void *a1)
{
  char v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1676450(void *a1)
{
  sub_16763DC(a1);

  operator delete();
}

uint64_t sub_1676488(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_16764B0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v8 = v31 + 1;
    unsigned int v9 = *v31;
    if (*v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v31 + 2;
      }
    }
    uint64_t v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      unint64_t v16 = v8 + 1;
      int v17 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_26;
      }
      int v18 = *v16;
      int v17 = v17 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        unint64_t v16 = v8 + 2;
LABEL_26:
        uint64_t v31 = v16;
        *(_DWORD *)(a1 + 32) = v17;
        goto LABEL_36;
      }
      unint64_t v25 = (char *)sub_188C0D0((uint64_t)v8, v17);
      uint64_t v31 = v25;
      *(_DWORD *)(a1 + 32) = v26;
      if (!v25) {
        goto LABEL_47;
      }
      goto LABEL_36;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v19 = v8 + 1;
    int v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    int v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_31:
      uint64_t v31 = v19;
      *(_DWORD *)(a1 + 28) = v20;
      goto LABEL_36;
    }
    int v27 = (char *)sub_188C0D0((uint64_t)v8, v20);
    uint64_t v31 = v27;
    *(_DWORD *)(a1 + 28) = v28;
    if (!v27) {
      goto LABEL_47;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 8)
  {
    v5 |= 1u;
    unint64_t v22 = v8 + 1;
    int v23 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v24 = *v22;
    int v23 = v23 + (v24 << 7) - 128;
    if ((v24 & 0x80000000) == 0)
    {
      unint64_t v22 = v8 + 2;
LABEL_35:
      uint64_t v31 = v22;
      *(_DWORD *)(a1 + 24) = v23;
      goto LABEL_36;
    }
    int v29 = (char *)sub_188C0D0((uint64_t)v8, v23);
    uint64_t v31 = v29;
    *(_DWORD *)(a1 + 24) = v30;
    if (!v29) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      unint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v8 = v31;
    }
    uint64_t v31 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v31) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  uint64_t v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v31;
}

unsigned char *sub_1676704(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    *int v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 32);
    *int v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_1676924(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_10;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) != 0) {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_16769F0()
{
  return 1;
}

void *sub_16769F8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.ProbeFlow");
}

uint64_t sub_1676A08(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  unint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2543110)
  {
    uint64_t v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_166DDFC(v6);
      operator delete();
    }
    unsigned int v7 = *(void **)(a1 + 40);
    if (v7)
    {
      sub_166E8C8(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1676AF4(uint64_t a1)
{
  sub_1676A08(a1);

  operator delete();
}

uint64_t sub_1676B2C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_13;
  }
  if (v2)
  {
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  uint64_t result = sub_166DEB8(*(void *)(result + 32));
  if ((v2 & 4) == 0) {
    goto LABEL_13;
  }
LABEL_11:
  uint64_t v4 = *(void *)(v1 + 40);
  char v5 = *(unsigned char *)(v4 + 8);
  uint64_t result = v4 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    uint64_t result = sub_188B4AC((uint64_t *)result);
  }
LABEL_13:
  if ((v2 & 0x18) != 0)
  {
    *(_DWORD *)(v1 + 56) = 0;
    *(void *)(v1 + 48) = 0;
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_1676BF8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v27 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = (unsigned __int8 *)(*(void *)v27 + 1);
    unsigned int v9 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unsigned int v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v27, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = (unsigned __int8 *)(*(void *)v27 + 2);
      }
    }
    *(void *)int v27 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        unsigned int v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          unsigned int v13 = (uint64_t *)*v13;
        }
        unsigned int v14 = (std::string *)sub_1880F84((void *)(a1 + 24), v13);
        unsigned int v15 = (void *)sub_188C244(v14, *(char **)v27, (uint64_t)a3);
        goto LABEL_39;
      case 2u:
        if (v9 != 16) {
          goto LABEL_32;
        }
        v5 |= 8u;
        uint64_t v16 = (char *)(v8 + 1);
        uint64_t v17 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v18 = *v16;
        uint64_t v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v25 = sub_188C138((uint64_t)v8, v17);
          *(void *)int v27 = v25;
          *(void *)(a1 + 48) = v26;
          if (!v25) {
            goto LABEL_47;
          }
        }
        else
        {
          uint64_t v16 = (char *)(v8 + 2);
LABEL_17:
          *(void *)int v27 = v16;
          *(void *)(a1 + 48) = v17;
        }
        goto LABEL_40;
      case 3u:
        if (v9 != 26) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 32);
        if (!v19)
        {
          uint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v20 = (void *)*v20;
          }
          uint64_t v19 = sub_166EBF8((uint64_t)v20);
          *(void *)(a1 + 32) = v19;
          unsigned int v8 = *(unsigned __int8 **)v27;
        }
        unsigned int v15 = sub_166E7A8(a3, v19, v8);
        goto LABEL_39;
      case 4u:
        if (v9 != 34) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v21 = *(void *)(a1 + 40);
        if (!v21)
        {
          unint64_t v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v22 = (void *)*v22;
          }
          uint64_t v21 = sub_166ECB8((uint64_t)v22);
          *(void *)(a1 + 40) = v21;
          unsigned int v8 = *(unsigned __int8 **)v27;
        }
        unsigned int v15 = sub_166E838(a3, v21, v8);
        goto LABEL_39;
      case 5u:
        if (v9 != 45) {
          goto LABEL_32;
        }
        v5 |= 0x10u;
        *(_DWORD *)(a1 + 56) = *(_DWORD *)v8;
        *(void *)int v27 = v8 + 4;
        goto LABEL_40;
      default:
LABEL_32:
        if (v9) {
          BOOL v23 = (v9 & 7) == 4;
        }
        else {
          BOOL v23 = 1;
        }
        if (!v23)
        {
          if (*v7)
          {
            int v24 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = *(unsigned __int8 **)v27;
          }
          unsigned int v15 = sub_1885AC0(v9, v24, (char *)v8, a3);
LABEL_39:
          *(void *)int v27 = v15;
          if (!v15) {
            goto LABEL_47;
          }
LABEL_40:
          if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_47:
        }
          *(void *)int v27 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v27;
    }
  }
}

unsigned char *sub_1676EC8(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(void *)(a1 + 48);
    *uint64_t v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    *uint64_t v4 = 26;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    uint64_t v4 = sub_166E198(v10, (unint64_t)v12, a3);
    if ((v6 & 4) == 0)
    {
LABEL_12:
      if ((v6 & 0x10) == 0) {
        goto LABEL_29;
      }
      goto LABEL_26;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_12;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 40);
  *uint64_t v4 = 34;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    unsigned int v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    unsigned int v15 = v4 + 2;
  }
  uint64_t v4 = sub_166EAB4(v13, (unint64_t)v15, a3);
  if ((v6 & 0x10) != 0)
  {
LABEL_26:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v16 = *(_DWORD *)(a1 + 56);
    *uint64_t v4 = 45;
    *(_DWORD *)(v4 + 1) = v16;
    v4 += 5;
  }
LABEL_29:
  uint64_t v17 = *(void *)(a1 + 8);
  if ((v17 & 1) == 0) {
    return v4;
  }
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v19 + 31) < 0)
  {
    uint64_t v20 = *(void **)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
  }
  else
  {
    uint64_t v20 = (void *)(v19 + 8);
    LODWORD(v21) = *(unsigned __int8 *)(v19 + 31);
  }
  if (*a3 - (void)v4 >= (int)v21)
  {
    uint64_t v22 = (int)v21;
    memcpy(v4, v20, (int)v21);
    v4 += v22;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v20, v21, v4);
}

uint64_t sub_1677128(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x1F) == 0)
  {
    uint64_t result = 0;
    goto LABEL_16;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v8 = sub_166E520(*(void *)(a1 + 32));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  uint64_t v7 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    uint64_t v7 = v6;
  }
  uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    uint64_t v10 = *(void *)(a1 + 40);
    uint64_t v11 = 5;
    if ((*(unsigned char *)(v10 + 16) & 1) == 0) {
      uint64_t v11 = 0;
    }
    uint64_t v12 = *(void *)(v10 + 8);
    if (v12)
    {
      unint64_t v15 = v12 & 0xFFFFFFFFFFFFFFFCLL;
      if (*(char *)(v15 + 31) < 0) {
        uint64_t v16 = *(void *)(v15 + 16);
      }
      else {
        uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
      }
      v11 += v16;
    }
    *(_DWORD *)(v10 + 20) = v11;
    v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0) {
      goto LABEL_13;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_13;
  }
  v3 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_13:
  if ((v2 & 0x10) != 0) {
    uint64_t result = v3 + 5;
  }
  else {
    uint64_t result = v3;
  }
LABEL_16:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v13 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    result += v14;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_16772B0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_24;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_166EBF8((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      unint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      unint64_t v13 = &off_2542DA0;
    }
    uint64_t result = sub_166E660(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_32;
    }
LABEL_24:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    uint64_t v14 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
    if (!v14)
    {
      std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = (std::string *)sub_166ECB8((uint64_t)v16);
      v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v14;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v17 = &off_2542DF8;
    }
    uint64_t result = sub_11C4738(v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
      goto LABEL_8;
    }
LABEL_32:
    v3[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1677420()
{
  return 1;
}

void *sub_1677428@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.Speed.Debug.PathletRawObservationsView.Observation");
}

void *sub_1677438(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_16B3804(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16774B8(void *a1)
{
  sub_1677438(a1);

  operator delete();
}

uint64_t sub_16774F0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1676B2C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if ((*(unsigned char *)(v1 + 16) & 0x1F) != 0)
  {
    *(void *)(v1 + 48) = 0;
    *(void *)(v1 + 56) = 0;
    *(_DWORD *)(v1 + 64) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_1677584(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v45 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v45, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v45 + 1;
    unsigned int v9 = *v45;
    if (*v45 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v45, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v45 + 2;
      }
    }
    uint64_t v45 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_44;
        }
        uint64_t v12 = v8 - 1;
        while (1)
        {
          unint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v45 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 40);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 32), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 32) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_1694AD0(*(void *)(a1 + 24));
            uint64_t v16 = sub_188CDC8(a1 + 24, v17);
            unint64_t v13 = (unsigned __int8 *)v45;
          }
          uint64_t v12 = (char *)sub_1677950(a3, v16, v13);
          uint64_t v45 = v12;
          if (!v12) {
            goto LABEL_66;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_51;
          }
        }
      case 2u:
        if (v9 != 16) {
          goto LABEL_44;
        }
        v5 |= 1u;
        int v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v35 = (char *)sub_188C0D0((uint64_t)v8, v19);
          uint64_t v45 = v35;
          *(_DWORD *)(a1 + 48) = v36;
          if (!v35) {
            goto LABEL_66;
          }
        }
        else
        {
          int v18 = v8 + 2;
LABEL_23:
          uint64_t v45 = v18;
          *(_DWORD *)(a1 + 48) = v19;
        }
        goto LABEL_51;
      case 3u:
        if (v9 != 24) {
          goto LABEL_44;
        }
        v5 |= 2u;
        uint64_t v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          int v37 = (char *)sub_188C0D0((uint64_t)v8, v22);
          uint64_t v45 = v37;
          *(_DWORD *)(a1 + 52) = v38;
          if (!v37) {
            goto LABEL_66;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_28:
          uint64_t v45 = v21;
          *(_DWORD *)(a1 + 52) = v22;
        }
        goto LABEL_51;
      case 4u:
        if (v9 != 32) {
          goto LABEL_44;
        }
        v5 |= 4u;
        int v24 = v8 + 1;
        int v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        int v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          int v39 = (char *)sub_188C0D0((uint64_t)v8, v25);
          uint64_t v45 = v39;
          *(_DWORD *)(a1 + 56) = v40;
          if (!v39) {
            goto LABEL_66;
          }
        }
        else
        {
          int v24 = v8 + 2;
LABEL_33:
          uint64_t v45 = v24;
          *(_DWORD *)(a1 + 56) = v25;
        }
        goto LABEL_51;
      case 5u:
        if (v9 != 40) {
          goto LABEL_44;
        }
        v5 |= 8u;
        int v27 = v8 + 1;
        int v28 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v29 = *v27;
        int v28 = v28 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          uint64_t v41 = (char *)sub_188C0D0((uint64_t)v8, v28);
          uint64_t v45 = v41;
          *(_DWORD *)(a1 + 60) = v42;
          if (!v41) {
            goto LABEL_66;
          }
        }
        else
        {
          int v27 = v8 + 2;
LABEL_38:
          uint64_t v45 = v27;
          *(_DWORD *)(a1 + 60) = v28;
        }
        goto LABEL_51;
      case 6u:
        if (v9 != 48) {
          goto LABEL_44;
        }
        v5 |= 0x10u;
        int v30 = v8 + 1;
        int v31 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v32 = *v30;
        int v31 = v31 + (v32 << 7) - 128;
        if (v32 < 0)
        {
          uint64_t v43 = (char *)sub_188C0D0((uint64_t)v8, v31);
          uint64_t v45 = v43;
          *(_DWORD *)(a1 + 64) = v44;
          if (!v43) {
            goto LABEL_66;
          }
        }
        else
        {
          int v30 = v8 + 2;
LABEL_43:
          uint64_t v45 = v30;
          *(_DWORD *)(a1 + 64) = v31;
        }
        goto LABEL_51;
      default:
LABEL_44:
        if (v9) {
          BOOL v33 = (v9 & 7) == 4;
        }
        else {
          BOOL v33 = 1;
        }
        if (!v33)
        {
          if (*v7)
          {
            int v34 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v45;
          }
          uint64_t v45 = (char *)sub_1885AC0(v9, v34, v8, a3);
          if (!v45) {
            goto LABEL_66;
          }
LABEL_51:
          if (sub_11947B8((uint64_t)a3, &v45, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_66:
        }
          uint64_t v45 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v45;
    }
  }
}

uint64_t sub_1677950(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1676BF8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16779E0(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_1676EC8(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if (v11)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v12 = *(_DWORD *)(a1 + 48);
    *__dst = 16;
    __dst[1] = v12;
    if (v12 > 0x7F)
    {
      __dst[1] = v12 | 0x80;
      unsigned int v13 = v12 >> 7;
      __dst[2] = v12 >> 7;
      __dst += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v14 = v13 >> 14;
          v13 >>= 7;
          *__dst++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v11 & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v15 = *(_DWORD *)(a1 + 52);
    *__dst = 24;
    __dst[1] = v15;
    if (v15 > 0x7F)
    {
      __dst[1] = v15 | 0x80;
      unsigned int v16 = v15 >> 7;
      __dst[2] = v15 >> 7;
      __dst += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v17 = v16 >> 14;
          v16 >>= 7;
          *__dst++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v11 & 4) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v18 = *(_DWORD *)(a1 + 56);
    *__dst = 32;
    __dst[1] = v18;
    if (v18 > 0x7F)
    {
      __dst[1] = v18 | 0x80;
      unsigned int v19 = v18 >> 7;
      __dst[2] = v18 >> 7;
      __dst += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v20 = v19 >> 14;
          v19 >>= 7;
          *__dst++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v11 & 8) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v21 = *(_DWORD *)(a1 + 60);
    *__dst = 40;
    __dst[1] = v21;
    if (v21 > 0x7F)
    {
      __dst[1] = v21 | 0x80;
      unsigned int v22 = v21 >> 7;
      __dst[2] = v21 >> 7;
      __dst += 3;
      if (v21 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v23 = v22 >> 14;
          v22 >>= 7;
          *__dst++ = v22;
        }
        while (v23);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v11 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v24 = *(_DWORD *)(a1 + 64);
    *__dst = 48;
    __dst[1] = v24;
    if (v24 > 0x7F)
    {
      __dst[1] = v24 | 0x80;
      unsigned int v25 = v24 >> 7;
      __dst[2] = v24 >> 7;
      __dst += 3;
      if (v24 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v26 = v25 >> 14;
          v25 >>= 7;
          *__dst++ = v25;
        }
        while (v26);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  uint64_t v27 = *(void *)(a1 + 8);
  if ((v27 & 1) == 0) {
    return __dst;
  }
  unint64_t v29 = v27 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v29 + 31) < 0)
  {
    int v30 = *(void **)(v29 + 8);
    uint64_t v31 = *(void *)(v29 + 16);
  }
  else
  {
    int v30 = (void *)(v29 + 8);
    LODWORD(v31) = *(unsigned __int8 *)(v29 + 31);
  }
  if (*a3 - (void)__dst >= (int)v31)
  {
    uint64_t v32 = (int)v31;
    memcpy(__dst, v30, (int)v31);
    __dst += v32;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v30, v31, __dst);
}

uint64_t sub_1677D94(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1677128(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0x1F) == 0) {
    goto LABEL_16;
  }
  if (v8)
  {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
LABEL_20:
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v8 & 8) == 0)
      {
LABEL_14:
        if ((v8 & 0x10) == 0) {
          goto LABEL_16;
        }
        goto LABEL_15;
      }
      goto LABEL_21;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 52) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) != 0) {
    goto LABEL_20;
  }
LABEL_13:
  if ((v8 & 8) == 0) {
    goto LABEL_14;
  }
LABEL_21:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 60) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x10) != 0) {
LABEL_15:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 64) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_16:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1677F2C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_16B4488((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0x1F) != 0)
  {
    if (v9)
    {
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_18;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_19;
    }
LABEL_18:
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
        goto LABEL_12;
      }
LABEL_10:
      LODWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
      goto LABEL_11;
    }
LABEL_19:
    HIDWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 60);
    if ((v9 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1678064()
{
  return 1;
}

void *sub_167806C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.Speed.Debug.PathletRawObservationsView");
}

uint64_t sub_167807C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2543198)
  {
    uint64_t v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_1677438(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1678134(uint64_t a1)
{
  sub_167807C(a1);

  operator delete();
}

uint64_t sub_167816C(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_16774F0(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_16781C8(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    unsigned int v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13)
    {
      unsigned int v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        unsigned int v14 = (void *)*v14;
      }
      uint64_t v13 = sub_1694B5C((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      uint64_t v6 = v16;
    }
    uint64_t v12 = sub_1678320(a3, v13, (unsigned __int8 *)v6);
LABEL_20:
    unsigned int v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v16;
    }
    uint64_t v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

char *sub_1678320(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1677584(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16783B0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *int v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    int v4 = sub_16779E0(v6, v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_16784C0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_1677D94(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_1678548(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unsigned int v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unsigned int v7 = (void *)*v7;
      }
      std::string::pointer data = (std::string *)sub_1694B5C((uint64_t)v7);
      v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_2543150;
    }
    uint64_t result = sub_1677F2C(data, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16785F0()
{
  return 1;
}

void *sub_16785F8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.Speed.Debug");
}

void *sub_1678608(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_167868C((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_167868C(uint64_t result)
{
  if ((uint64_t (***)())result != &off_25431B8)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = *(void *)(result + 24);
    if (v2)
    {
      sub_168B5DC(v2);
      operator delete();
    }
    uint64_t v3 = v1[4];
    if (v3)
    {
      sub_1679AC8(v3);
      operator delete();
    }
    uint64_t v4 = (void *)v1[5];
    if (v4)
    {
      sub_16763DC(v4);
      operator delete();
    }
    uint64_t result = v1[6];
    if (result)
    {
      sub_167807C(result);
      operator delete();
    }
  }
  return result;
}

void sub_1678758(void *a1)
{
  sub_1678608(a1);

  operator delete();
}

uint64_t sub_1678790(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_7;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_16:
    uint64_t result = (uint64_t)sub_1678840(*(unsigned char **)(v1 + 32));
    if ((v2 & 4) == 0)
    {
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    goto LABEL_17;
  }
  uint64_t result = (uint64_t)sub_167537C(*(unsigned char **)(result + 24));
  if ((v2 & 2) != 0) {
    goto LABEL_16;
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_17:
  uint64_t result = sub_1676488(*(void *)(v1 + 40));
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    uint64_t result = sub_167816C(*(void *)(v1 + 48));
LABEL_7:
  if ((v2 & 0xF0) != 0)
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  if ((v2 & 0xF00) != 0)
  {
    *(void *)(v1 + 72) = 0;
    *(void *)(v1 + 80) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

unsigned char *sub_1678840(unsigned char *result)
{
  uint64_t v1 = result;
  *((_DWORD *)result + 6) = 0;
  *((_DWORD *)result + 12) = 0;
  if (result[16]) {
    uint64_t result = sub_167537C(*((unsigned char **)result + 9));
  }
  char v3 = v1[8];
  int v2 = v1 + 8;
  *((_DWORD *)v2 + 2) = 0;
  if (v3)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_16788A4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v49 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v49, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = v49 + 1;
    unsigned int v9 = *v49;
    if (*v49 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v49, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v49 + 2;
      }
    }
    uint64_t v49 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_64;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (!v12)
        {
          uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v13 = (void *)*v13;
          }
          uint64_t v12 = sub_16958D4((uint64_t)v13);
          *(void *)(a1 + 24) = v12;
          unsigned int v8 = v49;
        }
        uint64_t v14 = (char *)sub_167565C(a3, v12, (unsigned __int8 *)v8);
        goto LABEL_71;
      case 2u:
        if (v9 != 21) {
          goto LABEL_64;
        }
        int v16 = *(_DWORD *)v8;
        unsigned int v15 = v8 + 4;
        v5 |= 0x10u;
        *(_DWORD *)(a1 + 56) = v16;
        goto LABEL_57;
      case 3u:
        if (v9 != 24) {
          goto LABEL_64;
        }
        unsigned int v17 = v8 + 1;
        unint64_t v18 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_21;
        }
        int v19 = *v17;
        int v20 = v18 + (v19 << 7);
        unint64_t v18 = (v20 - 128);
        if (v19 < 0)
        {
          uint64_t v49 = (char *)sub_188C138((uint64_t)v8, (v20 - 128));
          if (!v49) {
            goto LABEL_89;
          }
          unint64_t v18 = v41;
        }
        else
        {
          unsigned int v17 = v8 + 2;
LABEL_21:
          uint64_t v49 = v17;
        }
        if (v18 > 4)
        {
          if (*v7) {
            uint64_t v48 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v48 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(3, v18, v48);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 60) = v18;
        }
        goto LABEL_72;
      case 4u:
        if (v9 != 32) {
          goto LABEL_64;
        }
        v5 |= 0x40u;
        unsigned int v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          int v42 = (char *)sub_188C0D0((uint64_t)v8, v22);
          uint64_t v49 = v42;
          *(_DWORD *)(a1 + 64) = v43;
          if (!v42) {
            goto LABEL_89;
          }
        }
        else
        {
          unsigned int v21 = v8 + 2;
LABEL_28:
          uint64_t v49 = v21;
          *(_DWORD *)(a1 + 64) = v22;
        }
        goto LABEL_72;
      case 5u:
        if (v9 != 45) {
          goto LABEL_64;
        }
        int v24 = *(_DWORD *)v8;
        unsigned int v15 = v8 + 4;
        v5 |= 0x80u;
        *(_DWORD *)(a1 + 68) = v24;
        goto LABEL_57;
      case 6u:
        if (v9 != 48) {
          goto LABEL_64;
        }
        v5 |= 0x100u;
        unsigned int v25 = v8 + 1;
        int v26 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_35;
        }
        int v27 = *v25;
        int v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          int v44 = (char *)sub_188C0D0((uint64_t)v8, v26);
          uint64_t v49 = v44;
          *(_DWORD *)(a1 + 72) = v45;
          if (!v44) {
            goto LABEL_89;
          }
        }
        else
        {
          unsigned int v25 = v8 + 2;
LABEL_35:
          uint64_t v49 = v25;
          *(_DWORD *)(a1 + 72) = v26;
        }
        goto LABEL_72;
      case 7u:
        if (v9 != 58) {
          goto LABEL_64;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v28 = *(void *)(a1 + 32);
        if (!v28)
        {
          unint64_t v29 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v29 = (void *)*v29;
          }
          uint64_t v28 = sub_1694CF8((uint64_t)v29);
          *(void *)(a1 + 32) = v28;
          unsigned int v8 = v49;
        }
        uint64_t v14 = sub_1674140(a3, v28, (unsigned __int8 *)v8);
        goto LABEL_71;
      case 8u:
        if (v9 != 69) {
          goto LABEL_64;
        }
        int v30 = *(_DWORD *)v8;
        unsigned int v15 = v8 + 4;
        v5 |= 0x200u;
        *(_DWORD *)(a1 + 76) = v30;
        goto LABEL_57;
      case 9u:
        if (v9 != 72) {
          goto LABEL_64;
        }
        v5 |= 0x400u;
        uint64_t v31 = v8 + 1;
        int v32 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_48;
        }
        int v33 = *v31;
        int v32 = v32 + (v33 << 7) - 128;
        if (v33 < 0)
        {
          uint64_t v46 = (char *)sub_188C0D0((uint64_t)v8, v32);
          uint64_t v49 = v46;
          *(_DWORD *)(a1 + 80) = v47;
          if (!v46) {
            goto LABEL_89;
          }
        }
        else
        {
          uint64_t v31 = v8 + 2;
LABEL_48:
          uint64_t v49 = v31;
          *(_DWORD *)(a1 + 80) = v32;
        }
        goto LABEL_72;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_64;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v34 = *(void *)(a1 + 40);
        if (!v34)
        {
          uint64_t v35 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v35 = (void *)*v35;
          }
          uint64_t v34 = sub_1694A54((uint64_t)v35);
          *(void *)(a1 + 40) = v34;
          unsigned int v8 = v49;
        }
        uint64_t v14 = sub_1678D94(a3, v34, (unsigned __int8 *)v8);
        goto LABEL_71;
      case 0xBu:
        if (v9 != 93) {
          goto LABEL_64;
        }
        int v36 = *(_DWORD *)v8;
        unsigned int v15 = v8 + 4;
        v5 |= 0x800u;
        *(_DWORD *)(a1 + 84) = v36;
LABEL_57:
        uint64_t v49 = v15;
        goto LABEL_72;
      case 0xCu:
        if (v9 != 98) {
          goto LABEL_64;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        int v37 = *(void **)(a1 + 48);
        if (!v37)
        {
          int v38 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v38 = (void *)*v38;
          }
          int v37 = sub_1694BFC((uint64_t)v38);
          *(void *)(a1 + 48) = v37;
          unsigned int v8 = v49;
        }
        uint64_t v14 = sub_1678E24(a3, (uint64_t)v37, (unsigned __int8 *)v8);
        goto LABEL_71;
      default:
LABEL_64:
        if (v9) {
          BOOL v39 = (v9 & 7) == 4;
        }
        else {
          BOOL v39 = 1;
        }
        if (!v39)
        {
          if (*v7)
          {
            int v40 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v40 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = v49;
          }
          uint64_t v14 = (char *)sub_1885AC0(v9, v40, v8, a3);
LABEL_71:
          uint64_t v49 = v14;
          if (!v14) {
            goto LABEL_89;
          }
LABEL_72:
          if (sub_11947B8((uint64_t)a3, &v49, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_89:
        }
          uint64_t v49 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v49;
    }
  }
}

char *sub_1678D94(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16764B0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1678E24(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16781C8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1678EB4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_168BD4C(v7, v9, a3);
    if ((v6 & 0x10) == 0)
    {
LABEL_3:
      if ((v6 & 0x20) == 0) {
        goto LABEL_20;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v10 = *(_DWORD *)(a1 + 56);
  *char v4 = 21;
  *(_DWORD *)(v4 + 1) = v10;
  v4 += 5;
  if ((v6 & 0x20) != 0)
  {
LABEL_14:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v11 = *(int *)(a1 + 60);
    *char v4 = 24;
    v4[1] = v11;
    if (v11 > 0x7F)
    {
      v4[1] = v11 | 0x80;
      unint64_t v12 = v11 >> 7;
      v4[2] = v11 >> 7;
      v4 += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v13 = v12 >> 14;
          v12 >>= 7;
          *v4++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_20:
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v14 = *(_DWORD *)(a1 + 64);
    *char v4 = 32;
    v4[1] = v14;
    if (v14 > 0x7F)
    {
      v4[1] = v14 | 0x80;
      unsigned int v15 = v14 >> 7;
      v4[2] = v14 >> 7;
      v4 += 3;
      if (v14 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v16 = v15 >> 14;
          v15 >>= 7;
          *v4++ = v15;
        }
        while (v16);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v17 = *(_DWORD *)(a1 + 68);
    *char v4 = 45;
    *(_DWORD *)(v4 + 1) = v17;
    v4 += 5;
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v18 = *(_DWORD *)(a1 + 72);
    *char v4 = 48;
    v4[1] = v18;
    if (v18 > 0x7F)
    {
      v4[1] = v18 | 0x80;
      unsigned int v19 = v18 >> 7;
      v4[2] = v18 >> 7;
      v4 += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v20 = v19 >> 14;
          v19 >>= 7;
          *v4++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v21 = *(void *)(a1 + 32);
    *char v4 = 58;
    unsigned int v22 = *(_DWORD *)(v21 + 20);
    v4[1] = v22;
    if (v22 > 0x7F) {
      int v23 = sub_188A9CC(v22, v4 + 1);
    }
    else {
      int v23 = v4 + 2;
    }
    char v4 = sub_1679DD0(v21, (unint64_t)v23, a3);
    if ((v6 & 0x200) == 0)
    {
LABEL_40:
      if ((v6 & 0x400) == 0) {
        goto LABEL_57;
      }
      goto LABEL_51;
    }
  }
  else if ((v6 & 0x200) == 0)
  {
    goto LABEL_40;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v24 = *(_DWORD *)(a1 + 76);
  *char v4 = 69;
  *(_DWORD *)(v4 + 1) = v24;
  v4 += 5;
  if ((v6 & 0x400) != 0)
  {
LABEL_51:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v25 = *(_DWORD *)(a1 + 80);
    *char v4 = 72;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unsigned int v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_57:
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v28 = *(void *)(a1 + 40);
    *char v4 = 82;
    unsigned int v29 = *(_DWORD *)(v28 + 20);
    v4[1] = v29;
    if (v29 > 0x7F) {
      int v30 = sub_188A9CC(v29, v4 + 1);
    }
    else {
      int v30 = v4 + 2;
    }
    char v4 = sub_1676704(v28, (unint64_t)v30, a3);
    if ((v6 & 0x800) == 0)
    {
LABEL_59:
      if ((v6 & 8) == 0) {
        goto LABEL_76;
      }
      goto LABEL_70;
    }
  }
  else if ((v6 & 0x800) == 0)
  {
    goto LABEL_59;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v31 = *(_DWORD *)(a1 + 84);
  *char v4 = 93;
  *(_DWORD *)(v4 + 1) = v31;
  v4 += 5;
  if ((v6 & 8) != 0)
  {
LABEL_70:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v32 = *(void *)(a1 + 48);
    *char v4 = 98;
    unsigned int v33 = *(_DWORD *)(v32 + 20);
    v4[1] = v33;
    if (v33 > 0x7F) {
      uint64_t v34 = sub_188A9CC(v33, v4 + 1);
    }
    else {
      uint64_t v34 = v4 + 2;
    }
    char v4 = sub_16783B0(v32, (unint64_t)v34, a3);
  }
LABEL_76:
  uint64_t v35 = *(void *)(a1 + 8);
  if ((v35 & 1) == 0) {
    return v4;
  }
  unint64_t v37 = v35 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v37 + 31) < 0)
  {
    int v38 = *(void **)(v37 + 8);
    uint64_t v39 = *(void *)(v37 + 16);
  }
  else
  {
    int v38 = (void *)(v37 + 8);
    LODWORD(v39) = *(unsigned __int8 *)(v37 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v39)
  {
    uint64_t v40 = (int)v39;
    memcpy(v4, v38, (int)v39);
    v4 += v40;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v38, v39, v4);
}

uint64_t sub_16793F0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t result = 0;
    goto LABEL_23;
  }
  if (v2)
  {
    uint64_t v5 = sub_168C228(*(void *)(a1 + 24));
    uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v6 = sub_167A0C4(*(void *)(a1 + 32));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v14 = sub_1676924(*(void *)(a1 + 40));
    v3 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  if ((v2 & 8) != 0)
  {
LABEL_10:
    uint64_t v7 = sub_16784C0(*(void *)(a1 + 48));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_11:
  uint64_t v8 = v3 + 5;
  if ((v2 & 0x10) == 0) {
    uint64_t v8 = v3;
  }
  if ((v2 & 0x20) != 0)
  {
    int v9 = *(_DWORD *)(a1 + 60);
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v9 >= 0) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 11;
    }
    v8 += v11;
  }
  if ((v2 & 0x40) != 0) {
    v8 += ((9 * (__clz(*(_DWORD *)(a1 + 64) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  if ((v2 & 0x80) != 0) {
    uint64_t result = v8 + 5;
  }
  else {
    uint64_t result = v8;
  }
LABEL_23:
  if ((v2 & 0xF00) != 0)
  {
    if ((v2 & 0x100) != 0) {
      result += ((9 * (__clz(*(_DWORD *)(a1 + 72) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v12 = result + 5;
    if ((v2 & 0x200) == 0) {
      uint64_t v12 = result;
    }
    if ((v2 & 0x400) != 0) {
      v12 += ((9 * (__clz(*(_DWORD *)(a1 + 80) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v2 & 0x800) != 0) {
      uint64_t result = v12 + 5;
    }
    else {
      uint64_t result = v12;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    result += v16;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_1679610(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(void *)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = sub_16958D4((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        int v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        int v9 = &off_25437E8;
      }
      sub_1675A24(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_39;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void *)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_1694CF8((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_2543210;
    }
    sub_167985C(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_47;
    }
LABEL_39:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v14 = *(std::string **)(a1 + 40);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = (std::string *)sub_1694A54((uint64_t)v16);
      *(void *)(a1 + 40) = v14;
    }
    if (*(void *)(a2 + 40)) {
      int v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      int v17 = &off_25430E8;
    }
    sub_117EF50(v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_55;
    }
LABEL_47:
    *(_DWORD *)(a1 + 16) |= 8u;
    unsigned int v18 = *(std::string **)(a1 + 48);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      unsigned int v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        unsigned int v20 = (void *)*v20;
      }
      unsigned int v18 = (std::string *)sub_1694BFC((uint64_t)v20);
      *(void *)(a1 + 48) = v18;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v21 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v21 = &off_2543198;
    }
    sub_1678548(v18, (uint64_t)v21);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_56;
    }
LABEL_55:
    *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_57;
    }
LABEL_56:
    *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
      goto LABEL_11;
    }
LABEL_57:
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v4 & 0xF00) == 0) {
    goto LABEL_19;
  }
  if ((v4 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
    if ((v4 & 0x200) == 0)
    {
LABEL_15:
      if ((v4 & 0x400) == 0) {
        goto LABEL_16;
      }
LABEL_61:
      *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
      if ((v4 & 0x800) == 0) {
        goto LABEL_18;
      }
      goto LABEL_17;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_15;
  }
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  if ((v4 & 0x400) != 0) {
    goto LABEL_61;
  }
LABEL_16:
  if ((v4 & 0x800) != 0) {
LABEL_17:
  }
    *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
LABEL_18:
  *(_DWORD *)(a1 + 16) |= v4;
LABEL_19:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_167985C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188C80C((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 48);
  if (v8)
  {
    uint64_t v9 = *(int *)(a1 + 48);
    sub_188C80C((unsigned int *)(a1 + 48), v9 + v8);
    uint64_t v10 = *(void *)(a1 + 56);
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
    memcpy((void *)(v10 + 4 * v9), *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v11 = *(uint64_t (****)())(a2 + 72);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v12 = *(void *)(a1 + 72);
    if (!v12)
    {
      uint64_t v13 = *(void *)(a1 + 8);
      uint64_t v14 = (void *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
      if (v13) {
        uint64_t v14 = (void *)*v14;
      }
      uint64_t v12 = sub_16958D4((uint64_t)v14);
      *(void *)(a1 + 72) = v12;
      uint64_t v11 = *(uint64_t (****)())(a2 + 72);
    }
    if (v11) {
      uint64_t v15 = v11;
    }
    else {
      uint64_t v15 = &off_25437E8;
    }
    sub_1675A24(v12, (uint64_t)v15);
  }
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1679998(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 24);
    uint64_t v4 = *(unsigned int *)(v3 + 80);
    while ((int)v4 >= 1)
    {
      uint64_t v5 = v4 - 1;
      char v6 = sub_15B0F18(*(void *)(*(void *)(v3 + 88) + 8 * v4));
      uint64_t v4 = v5;
      if ((v6 & 1) == 0) {
        return 0;
      }
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_1679A10(*(void *)(a1 + 32));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_1679A10(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t v2 = *(void *)(a1 + 72);
  uint64_t v3 = *(unsigned int *)(v2 + 80);
  do
  {
    BOOL v1 = (int)v3 < 1;
    if ((int)v3 < 1) {
      break;
    }
    uint64_t v4 = v3 - 1;
    char v5 = sub_15B0F18(*(void *)(*(void *)(v2 + 88) + 8 * v3));
    uint64_t v3 = v4;
  }
  while ((v5 & 1) != 0);
  return v1;
}

void *sub_1679A74@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.Speed");
}

uint64_t sub_1679A84(uint64_t result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)uint64_t result = off_24CD938;
  *(void *)(result + 8) = v3;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a2;
  *(_DWORD *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = a2;
  *(_DWORD *)(result + 64) = 0;
  *(void *)(result + 72) = 0;
  return result;
}

uint64_t sub_1679AC8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2543210)
  {
    uint64_t v6 = *(void *)(a1 + 72);
    if (v6)
    {
      sub_168B5DC(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1889DA8(a1 + 48);
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1679B90(uint64_t a1)
{
  sub_1679AC8(a1);

  operator delete();
}

char *sub_1679BC8(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v20 = a2;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    return v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v20 + 1;
    unsigned int v8 = *v20;
    if (*v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v20 + 2;
      }
    }
    unsigned int v20 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 != 3) {
      break;
    }
    if (v8 != 26) {
      goto LABEL_28;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 72);
    if (!v13)
    {
      uint64_t v14 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v14 = (void *)*v14;
      }
      uint64_t v13 = sub_16958D4((uint64_t)v14);
      *(void *)(a1 + 72) = v13;
      uint64_t v7 = v20;
    }
    uint64_t v15 = (char *)sub_167565C(a3, v13, (unsigned __int8 *)v7);
LABEL_35:
    unsigned int v20 = v15;
    if (!v15) {
      return 0;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      return v20;
    }
  }
  if (v11 == 2)
  {
    if (v8 == 18)
    {
      uint64_t v12 = (unsigned int *)(a1 + 48);
      goto LABEL_21;
    }
    if (v8 == 16)
    {
      int v17 = sub_110DAD8((uint64_t *)&v20);
      sub_1182598(a1, v17);
LABEL_26:
      if (!v20) {
        return 0;
      }
      goto LABEL_36;
    }
  }
  else if (v11 == 1)
  {
    if (v8 == 10)
    {
      uint64_t v12 = (unsigned int *)(a1 + 24);
LABEL_21:
      uint64_t v15 = (char *)sub_188C2CC(v12, (unsigned __int8 *)v7, (uint64_t)a3);
      goto LABEL_35;
    }
    if (v8 == 8)
    {
      int v16 = sub_110DAD8((uint64_t *)&v20);
      sub_1632D50(a1, v16);
      goto LABEL_26;
    }
  }
LABEL_28:
  if (v8) {
    BOOL v18 = (v8 & 7) == 4;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18)
  {
    if (*v6)
    {
      uint64_t v19 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v19 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v20;
    }
    uint64_t v15 = (char *)sub_1885AC0(v8, v19, v7, a3);
    goto LABEL_35;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v20;
  }
  return 0;
}

unsigned char *sub_1679DD0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  unsigned int v6 = *(_DWORD *)(a1 + 40);
  if ((int)v6 >= 1)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    *uint64_t v4 = 10;
    uint64_t v7 = v4 + 1;
    if (v6 >= 0x80)
    {
      do
      {
        *v7++ = v6 | 0x80;
        unsigned int v30 = v6 >> 14;
        v6 >>= 7;
      }
      while (v30);
      uint64_t v4 = v7 - 1;
    }
    v4 += 2;
    *uint64_t v7 = v6;
    unsigned int v8 = *(unsigned int **)(a1 + 32);
    unsigned int v9 = &v8[*(int *)(a1 + 24)];
    do
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v11 = *v8++;
      unsigned int v10 = v11;
      *uint64_t v4 = v11;
      if (v11 > 0x7F)
      {
        *uint64_t v4 = v10 | 0x80;
        unsigned int v12 = v10 >> 7;
        v4[1] = v10 >> 7;
        v4 += 2;
        if (v10 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v13 = v12 >> 14;
            v12 >>= 7;
            *v4++ = v12;
          }
          while (v13);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v8 < v9);
  }
  unsigned int v14 = *(_DWORD *)(a1 + 64);
  if ((int)v14 >= 1)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    *uint64_t v4 = 18;
    uint64_t v15 = v4 + 1;
    if (v14 >= 0x80)
    {
      do
      {
        *v15++ = v14 | 0x80;
        unsigned int v31 = v14 >> 14;
        v14 >>= 7;
      }
      while (v31);
      uint64_t v4 = v15 - 1;
    }
    v4 += 2;
    unsigned char *v15 = v14;
    int v16 = *(unsigned int **)(a1 + 56);
    int v17 = &v16[*(int *)(a1 + 48)];
    do
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v19 = *v16++;
      unsigned int v18 = v19;
      *uint64_t v4 = v19;
      if (v19 > 0x7F)
      {
        *uint64_t v4 = v18 | 0x80;
        unsigned int v20 = v18 >> 7;
        v4[1] = v18 >> 7;
        v4 += 2;
        if (v18 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v21 = v20 >> 14;
            v20 >>= 7;
            *v4++ = v20;
          }
          while (v21);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v16 < v17);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v22 = *(void *)(a1 + 72);
    *uint64_t v4 = 26;
    unsigned int v23 = *(_DWORD *)(v22 + 20);
    v4[1] = v23;
    if (v23 > 0x7F) {
      int v24 = sub_188A9CC(v23, v4 + 1);
    }
    else {
      int v24 = v4 + 2;
    }
    uint64_t v4 = sub_168BD4C(v22, v24, a3);
  }
  uint64_t v25 = *(void *)(a1 + 8);
  if ((v25 & 1) == 0) {
    return v4;
  }
  unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v27 + 31) < 0)
  {
    uint64_t v28 = *(void **)(v27 + 8);
    uint64_t v29 = *(void *)(v27 + 16);
  }
  else
  {
    uint64_t v28 = (void *)(v27 + 8);
    LODWORD(v29) = *(unsigned __int8 *)(v27 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v29)
  {
    uint64_t v32 = (int)v29;
    memcpy(v4, v28, (int)v29);
    v4 += v32;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v28, v29, v4);
}

uint64_t sub_167A0C4(uint64_t a1)
{
  uint64_t v2 = sub_188D4F0((unsigned int *)(a1 + 24));
  if (v2)
  {
    int v3 = v2;
    if ((v2 & 0x80000000) != 0) {
      uint64_t v4 = 11;
    }
    else {
      uint64_t v4 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    int v3 = 0;
    uint64_t v4 = 0;
  }
  *(_DWORD *)(a1 + 40) = v3;
  uint64_t v5 = v4 + v2;
  uint64_t v6 = sub_188D4F0((unsigned int *)(a1 + 48));
  if (v6)
  {
    int v7 = v6;
    if ((v6 & 0x80000000) != 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v5 += v8;
  }
  else
  {
    int v7 = 0;
  }
  *(_DWORD *)(a1 + 64) = v7;
  uint64_t v9 = v5 + v6;
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v10 = sub_168C228(*(void *)(a1 + 72));
    v9 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v9 += v14;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

void *sub_167A1E4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.PredictedPaces");
}

uint64_t sub_167A1F4(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2543260)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_167ABF4(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_167ABF4(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_167A2C4(uint64_t a1)
{
  sub_167A1F4(a1);

  operator delete();
}

uint64_t sub_167A2FC(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_167A378(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_167A378(*(void *)(v1 + 32));
    }
  }
  if ((v2 & 0xC) != 0)
  {
    *(void *)(v1 + 40) = 0;
    *(void *)(v1 + 48) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_167A378(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 6) != 0) {
    *(void *)(a1 + 32) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v4) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_167A3C8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v28 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v28, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v28 + 1;
    unsigned int v9 = *v28;
    if (*v28 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v28, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v28 + 2;
      }
    }
    uint64_t v28 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_31;
        }
        v5 |= 4u;
        unsigned int v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unsigned int v12 = v8 + 2;
LABEL_13:
          uint64_t v28 = v12;
          *(void *)(a1 + 40) = v13;
          goto LABEL_39;
        }
        int v24 = (char *)sub_188C138((uint64_t)v8, v13);
        uint64_t v28 = v24;
        *(void *)(a1 + 40) = v25;
        if (v24) {
          goto LABEL_39;
        }
        goto LABEL_48;
      case 2u:
        if (v9 != 16) {
          goto LABEL_31;
        }
        v5 |= 8u;
        uint64_t v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          unsigned int v26 = (char *)sub_188C138((uint64_t)v8, v16);
          uint64_t v28 = v26;
          *(void *)(a1 + 48) = v27;
          if (!v26) {
            goto LABEL_48;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_18:
          uint64_t v28 = v15;
          *(void *)(a1 + 48) = v16;
        }
        goto LABEL_39;
      case 3u:
        if (v9 != 26) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        unsigned int v18 = *(void **)(a1 + 24);
        if (v18) {
          goto LABEL_30;
        }
        unsigned int v19 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unsigned int v19 = (void *)*v19;
        }
        unsigned int v18 = sub_1694E30((uint64_t)v19);
        *(void *)(a1 + 24) = v18;
        goto LABEL_29;
      case 4u:
        if (v9 != 34) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        unsigned int v18 = *(void **)(a1 + 32);
        if (v18) {
          goto LABEL_30;
        }
        unsigned int v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unsigned int v20 = (void *)*v20;
        }
        unsigned int v18 = sub_1694E30((uint64_t)v20);
        *(void *)(a1 + 32) = v18;
LABEL_29:
        uint64_t v8 = v28;
LABEL_30:
        unsigned int v21 = (char *)sub_167A67C(a3, (uint64_t)v18, (unsigned __int8 *)v8);
        goto LABEL_38;
      default:
LABEL_31:
        if (v9) {
          BOOL v22 = (v9 & 7) == 4;
        }
        else {
          BOOL v22 = 1;
        }
        if (!v22)
        {
          if (*v7)
          {
            unsigned int v23 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v28;
          }
          unsigned int v21 = (char *)sub_1885AC0(v9, v23, v8, a3);
LABEL_38:
          uint64_t v28 = v21;
          if (!v21) {
            goto LABEL_48;
          }
LABEL_39:
          if (sub_11947B8((uint64_t)a3, &v28, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_48:
        }
          uint64_t v28 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v28;
    }
  }
}

uint64_t sub_167A67C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_167ACCC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_167A70C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 40);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 48);
    *char v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 24);
    *char v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    char v4 = sub_167AF0C(v13, (unint64_t)v15, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 32);
    *char v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      unsigned int v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      unsigned int v18 = v4 + 2;
    }
    char v4 = sub_167AF0C(v16, (unint64_t)v18, a3);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    BOOL v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    BOOL v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_167A984(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_167B0D0(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_167B0D0(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  v3 += ((9 * (__clz(*(void *)(a1 + 40) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0) {
LABEL_10:
  }
    v3 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_11:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v3 += v9;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_167AAAC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        unint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          unint64_t v8 = (void *)*v8;
        }
        std::string::pointer data = (std::string *)sub_1694E30((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v9 = &off_2543298;
      }
      uint64_t result = sub_11EB228(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_28;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    unint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (void *)*v12;
      }
      unint64_t v10 = (std::string *)sub_1694E30((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_2543298;
    }
    uint64_t result = sub_11EB228(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      v3[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
      goto LABEL_7;
    }
LABEL_28:
    v3[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_167ABDC()
{
  return 1;
}

void *sub_167ABE4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.Forecast");
}

uint64_t sub_167ABF4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_167AC94(uint64_t a1)
{
  sub_167ABF4(a1);

  operator delete();
}

uint64_t sub_167ACCC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v8 = (char *)(*(void *)v30 + 1);
    unsigned int v9 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180(*(uint64_t *)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (char *)(*(void *)v30 + 2);
      }
    }
    *(void *)unsigned int v30 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3) {
      break;
    }
    if (v12 == 2)
    {
      if (v9 != 16) {
        goto LABEL_14;
      }
      v5 |= 4u;
      unsigned int v20 = v8 + 1;
      int v21 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_31;
      }
      int v22 = *v20;
      int v21 = v21 + (v22 << 7) - 128;
      if ((v22 & 0x80000000) == 0)
      {
        unsigned int v20 = v8 + 2;
LABEL_31:
        *(void *)unsigned int v30 = v20;
        *(_DWORD *)(a1 + 36) = v21;
        goto LABEL_36;
      }
      uint64_t v26 = sub_188C0D0((uint64_t)v8, v21);
      *(void *)unsigned int v30 = v26;
      *(_DWORD *)(a1 + 36) = v27;
      if (!v26) {
        goto LABEL_45;
      }
    }
    else
    {
      if (v12 != 1 || v9 != 8) {
        goto LABEL_14;
      }
      v5 |= 2u;
      uint64_t v23 = v8 + 1;
      int v24 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_35;
      }
      int v25 = *v23;
      int v24 = v24 + (v25 << 7) - 128;
      if ((v25 & 0x80000000) == 0)
      {
        uint64_t v23 = v8 + 2;
LABEL_35:
        *(void *)unsigned int v30 = v23;
        *(_DWORD *)(a1 + 32) = v24;
        goto LABEL_36;
      }
      uint64_t v28 = sub_188C0D0((uint64_t)v8, v24);
      *(void *)unsigned int v30 = v28;
      *(_DWORD *)(a1 + 32) = v29;
      if (!v28) {
        goto LABEL_45;
      }
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 26)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void *)(a1 + 8);
    unsigned int v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      unsigned int v18 = (uint64_t *)*v18;
    }
    uint64_t v19 = (std::string *)sub_1880F84((void *)(a1 + 24), v18);
    uint64_t v16 = (void *)sub_188C244(v19, *(char **)v30, (uint64_t)a3);
LABEL_25:
    *(void *)unsigned int v30 = v16;
    if (!v16) {
      goto LABEL_45;
    }
    goto LABEL_36;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v8 = *(char **)v30;
    }
    uint64_t v16 = sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_25;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_45:
  *(void *)unsigned int v30 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v30;
}

unsigned char *sub_167AF0C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 32);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 36);
    *int v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    int v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_167B0D0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_9:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  if ((v1 & 4) != 0) {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_167B1B8()
{
  return 1;
}

void *sub_167B1C0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.Grid");
}

uint64_t sub_167B1D0(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_167B288(uint64_t a1)
{
  sub_167B1D0(a1);

  operator delete();
}

uint64_t sub_167B2C0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_167B33C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unsigned int v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unsigned int v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)unsigned int v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v16 = (uint64_t *)*v16;
      }
      uint64_t v17 = (void *)(a1 + 24);
LABEL_27:
      uint64_t v19 = (std::string *)sub_1880F84(v17, v16);
      BOOL v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v7 = *(char **)v20;
    }
    BOOL v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)unsigned int v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)unsigned int v20 = 0;
  return *(void *)v20;
}

char *sub_167B4E4(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_167B5D0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_167B6AC()
{
  return 1;
}

void *sub_167B6B4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.Incident.IncidentDescription");
}

uint64_t sub_167B6C4(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if ((uint64_t (***)())a1 != &off_25432C0)
  {
    unint64_t v6 = *(void **)(a1 + 88);
    if (v6)
    {
      sub_167C820(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_16B3884((void *)(a1 + 48));
  sub_12C1DB8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_167B7C4(uint64_t a1)
{
  sub_167B6C4(a1);

  operator delete();
}

uint64_t sub_167B7FC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B2C80(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    unint64_t v6 = (unsigned char **)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = (uint64_t)sub_167537C(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  int v8 = *(_DWORD *)(v1 + 16);
  if ((v8 & 7) == 0) {
    goto LABEL_14;
  }
  if ((v8 & 1) == 0)
  {
    if ((v8 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_24;
  }
  unint64_t v11 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v11 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v11 = 0;
    *(unsigned char *)(v11 + 23) = 0;
    if ((v8 & 2) != 0) {
      goto LABEL_24;
    }
LABEL_12:
    if ((v8 & 4) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  **(unsigned char **)unint64_t v11 = 0;
  *(void *)(v11 + 8) = 0;
  if ((v8 & 2) == 0) {
    goto LABEL_12;
  }
LABEL_24:
  unint64_t v12 = *(void *)(v1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v12 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v12 = 0;
    *(unsigned char *)(v12 + 23) = 0;
    if ((v8 & 4) == 0) {
      goto LABEL_14;
    }
LABEL_13:
    uint64_t result = sub_167B934(*(void *)(v1 + 88));
    goto LABEL_14;
  }
  **(unsigned char **)unint64_t v12 = 0;
  *(void *)(v12 + 8) = 0;
  if ((v8 & 4) != 0) {
    goto LABEL_13;
  }
LABEL_14:
  if ((v8 & 0x18) != 0)
  {
    *(void *)(v1 + 96) = 0;
    *(void *)(v1 + 104) = 0;
  }
  char v10 = *(unsigned char *)(v1 + 8);
  uint64_t v9 = v1 + 8;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

uint64_t sub_167B934(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B2C80(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 48);
  if ((int)v5 >= 1)
  {
    unint64_t v6 = (uint64_t *)(*(void *)(v1 + 56) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_15B2C80(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 48) = 0;
  }
  char v9 = *(unsigned char *)(v1 + 8);
  int v8 = (uint64_t *)(v1 + 8);
  if (v9)
  {
    return sub_188B4AC(v8);
  }
  return result;
}

uint64_t sub_167B9D8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v44 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v44, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = (unsigned __int8 *)(*(void *)v44 + 1);
    unsigned int v9 = **(unsigned char **)v44;
    if ((char)**(unsigned char **)v44 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        int v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v44, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (unsigned __int8 *)(*(void *)v44 + 2);
      }
    }
    *(void *)int v44 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_54;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        BOOL v14 = (void *)(a1 + 72);
        goto LABEL_17;
      case 2u:
        if (v9 != 18) {
          goto LABEL_54;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        BOOL v14 = (void *)(a1 + 80);
LABEL_17:
        uint64_t v16 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v17 = (void *)sub_188C244(v16, *(char **)v44, (uint64_t)a3);
        goto LABEL_61;
      case 3u:
        if (v9 != 26) {
          goto LABEL_54;
        }
        uint64_t v18 = v8 - 1;
        while (1)
        {
          uint64_t v19 = v18 + 1;
          *(void *)int v44 = v18 + 1;
          unsigned int v20 = *(_DWORD **)(a1 + 40);
          if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
          {
            *(_DWORD *)(a1 + 32) = v21 + 1;
            uint64_t v22 = *(void *)&v20[2 * v21 + 2];
          }
          else
          {
            uint64_t v23 = sub_15C1B30(*(void *)(a1 + 24));
            uint64_t v22 = sub_188CDC8(a1 + 24, (uint64_t)v23);
            uint64_t v19 = *(unsigned __int8 **)v44;
          }
          uint64_t v18 = (unsigned __int8 *)sub_125CF74(a3, v22, v19);
          *(void *)int v44 = v18;
          if (!v18) {
            goto LABEL_71;
          }
          if (*(void *)a3 <= (unint64_t)v18 || *v18 != 26) {
            goto LABEL_62;
          }
        }
      case 4u:
        if (v9 != 34) {
          goto LABEL_54;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v24 = *(void *)(a1 + 88);
        if (!v24)
        {
          int v25 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v25 = (void *)*v25;
          }
          uint64_t v24 = sub_1694FF0((uint64_t)v25);
          *(void *)(a1 + 88) = v24;
          int v8 = *(unsigned __int8 **)v44;
        }
        uint64_t v17 = sub_167BE04(a3, v24, v8);
        goto LABEL_61;
      case 5u:
        if (v9 != 40) {
          goto LABEL_54;
        }
        v5 |= 8u;
        uint64_t v26 = (char *)(v8 + 1);
        uint64_t v27 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v28 = *v26;
        uint64_t v27 = v27 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          uint64_t v40 = sub_188C138((uint64_t)v8, v27);
          *(void *)int v44 = v40;
          *(void *)(a1 + 96) = v41;
          if (!v40) {
            goto LABEL_71;
          }
        }
        else
        {
          uint64_t v26 = (char *)(v8 + 2);
LABEL_38:
          *(void *)int v44 = v26;
          *(void *)(a1 + 96) = v27;
        }
        goto LABEL_62;
      case 6u:
        if (v9 != 48) {
          goto LABEL_54;
        }
        v5 |= 0x10u;
        int v29 = (char *)(v8 + 1);
        uint64_t v30 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v31 = *v29;
        uint64_t v30 = v30 + (v31 << 7) - 128;
        if (v31 < 0)
        {
          uint64_t v42 = sub_188C138((uint64_t)v8, v30);
          *(void *)int v44 = v42;
          *(void *)(a1 + 104) = v43;
          if (!v42) {
            goto LABEL_71;
          }
        }
        else
        {
          int v29 = (char *)(v8 + 2);
LABEL_43:
          *(void *)int v44 = v29;
          *(void *)(a1 + 104) = v30;
        }
        goto LABEL_62;
      case 7u:
        if (v9 != 58) {
          goto LABEL_54;
        }
        uint64_t v32 = v8 - 1;
        while (1)
        {
          unsigned int v33 = v32 + 1;
          *(void *)int v44 = v32 + 1;
          uint64_t v34 = *(_DWORD **)(a1 + 64);
          if (v34 && (uint64_t v35 = *(int *)(a1 + 56), (int)v35 < *v34))
          {
            *(_DWORD *)(a1 + 56) = v35 + 1;
            uint64_t v36 = *(void *)&v34[2 * v35 + 2];
          }
          else
          {
            uint64_t v37 = sub_16958D4(*(void *)(a1 + 48));
            uint64_t v36 = sub_188CDC8(a1 + 48, v37);
            unsigned int v33 = *(unsigned __int8 **)v44;
          }
          uint64_t v32 = (unsigned __int8 *)sub_167565C(a3, v36, v33);
          *(void *)int v44 = v32;
          if (!v32) {
            goto LABEL_71;
          }
          if (*(void *)a3 <= (unint64_t)v32 || *v32 != 58) {
            goto LABEL_62;
          }
        }
      default:
LABEL_54:
        if (v9) {
          BOOL v38 = (v9 & 7) == 4;
        }
        else {
          BOOL v38 = 1;
        }
        if (!v38)
        {
          if (*v7)
          {
            uint64_t v39 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v39 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = *(unsigned __int8 **)v44;
          }
          uint64_t v17 = sub_1885AC0(v9, v39, (char *)v8, a3);
LABEL_61:
          *(void *)int v44 = v17;
          if (!v17) {
            goto LABEL_71;
          }
LABEL_62:
          if (sub_11947B8((uint64_t)a3, (char **)v44, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_71:
        }
          *(void *)int v44 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v44;
    }
  }
}

char *sub_167BE04(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_167C8E4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_167BE94(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v7 = *(_DWORD *)(a1 + 32);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 26;
      unsigned int v10 = *(_DWORD *)(v9 + 20);
      v4[1] = v10;
      if (v10 > 0x7F) {
        unsigned int v11 = sub_188A9CC(v10, v4 + 1);
      }
      else {
        unsigned int v11 = v4 + 2;
      }
      uint64_t v4 = sub_15B2EA4(v9, v11, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v12 = *(void *)(a1 + 88);
    *uint64_t v4 = 34;
    unsigned int v13 = *(_DWORD *)(v12 + 64);
    v4[1] = v13;
    if (v13 > 0x7F) {
      BOOL v14 = sub_188A9CC(v13, v4 + 1);
    }
    else {
      BOOL v14 = v4 + 2;
    }
    uint64_t v4 = sub_167CB2C(v12, v14, a3);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v15 = *(void *)(a1 + 96);
    *uint64_t v4 = 40;
    v4[1] = v15;
    if (v15 > 0x7F)
    {
      v4[1] = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      v4[2] = v15 >> 7;
      v4 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *v4++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v18 = *(void *)(a1 + 104);
    *uint64_t v4 = 48;
    v4[1] = v18;
    if (v18 > 0x7F)
    {
      v4[1] = v18 | 0x80;
      unint64_t v19 = v18 >> 7;
      v4[2] = v18 >> 7;
      v4 += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v20 = v19 >> 14;
          v19 >>= 7;
          *v4++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v21 = *(_DWORD *)(a1 + 56);
  if (v21)
  {
    for (int j = 0; j != v21; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v23 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *uint64_t v4 = 58;
      unsigned int v24 = *(_DWORD *)(v23 + 20);
      v4[1] = v24;
      if (v24 > 0x7F) {
        int v25 = sub_188A9CC(v24, v4 + 1);
      }
      else {
        int v25 = v4 + 2;
      }
      uint64_t v4 = sub_168BD4C(v23, v25, a3);
    }
  }
  uint64_t v26 = *(void *)(a1 + 8);
  if ((v26 & 1) == 0) {
    return v4;
  }
  unint64_t v28 = v26 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v28 + 31) < 0)
  {
    int v29 = *(void **)(v28 + 8);
    uint64_t v30 = *(void *)(v28 + 16);
  }
  else
  {
    int v29 = (void *)(v28 + 8);
    LODWORD(v30) = *(unsigned __int8 *)(v28 + 31);
  }
  if (*a3 - (void)v4 >= (int)v30)
  {
    uint64_t v31 = (int)v30;
    memcpy(v4, v29, (int)v30);
    v4 += v31;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v29, v30, v4);
}

uint64_t sub_167C1FC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B2F90(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_168C228(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 0x1F) == 0) {
    goto LABEL_22;
  }
  if (v15)
  {
    unint64_t v18 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
    uint64_t v20 = *(void *)(v18 + 8);
    if ((v19 & 0x80u) == 0) {
      uint64_t v20 = v19;
    }
    v9 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 2) == 0)
    {
LABEL_18:
      if ((v15 & 4) == 0) {
        goto LABEL_19;
      }
LABEL_30:
      uint64_t v24 = sub_167CCF4(*(void *)(a1 + 88));
      v9 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v15 & 8) == 0)
      {
LABEL_20:
        if ((v15 & 0x10) == 0) {
          goto LABEL_22;
        }
        goto LABEL_21;
      }
      goto LABEL_31;
    }
  }
  else if ((v15 & 2) == 0)
  {
    goto LABEL_18;
  }
  unint64_t v21 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v22 = *(unsigned __int8 *)(v21 + 23);
  uint64_t v23 = *(void *)(v21 + 8);
  if ((v22 & 0x80u) == 0) {
    uint64_t v23 = v22;
  }
  v9 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v15 & 4) != 0) {
    goto LABEL_30;
  }
LABEL_19:
  if ((v15 & 8) == 0) {
    goto LABEL_20;
  }
LABEL_31:
  v9 += ((9 * (__clz(*(void *)(a1 + 96) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v15 & 0x10) != 0) {
LABEL_21:
  }
    v9 += ((9 * (__clz(*(void *)(a1 + 104) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_22:
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v25 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v25 + 31) < 0) {
      uint64_t v26 = *(void *)(v25 + 16);
    }
    else {
      uint64_t v26 = *(unsigned __int8 *)(v25 + 31);
    }
    v9 += v26;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

void sub_167C41C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C1E38((std::string *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unsigned int v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_16B4514((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 0x1F) != 0)
  {
    if (v14)
    {
      uint64_t v16 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v17 = *(void *)(a1 + 8);
      unint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        unint64_t v18 = (uint64_t *)*v18;
      }
      sub_1881DF4((std::string **)(a1 + 72), v16, v18);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_25;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    uint64_t v19 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v20 = *(void *)(a1 + 8);
    unint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      unint64_t v21 = (uint64_t *)*v21;
    }
    sub_1881DF4((std::string **)(a1 + 80), v19, v21);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_33;
    }
LABEL_25:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v22 = *(std::string **)(a1 + 88);
    if (!v22)
    {
      uint64_t v23 = *(void *)(a1 + 8);
      uint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        uint64_t v24 = (void *)*v24;
      }
      uint64_t v22 = (std::string *)sub_1694FF0((uint64_t)v24);
      *(void *)(a1 + 88) = v22;
    }
    if (*(void *)(a2 + 88)) {
      unint64_t v25 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      unint64_t v25 = &off_2543330;
    }
    sub_167C648(v22, (uint64_t)v25);
    if ((v14 & 8) == 0)
    {
LABEL_12:
      if ((v14 & 0x10) == 0)
      {
LABEL_14:
        *(_DWORD *)(a1 + 16) |= v14;
        goto LABEL_15;
      }
LABEL_13:
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      goto LABEL_14;
    }
LABEL_33:
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    if ((v14 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_15:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_167C648(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_12C1E38((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    unsigned int v11 = (std::string **)sub_188CCE4((uint64_t)&v3[1].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 48));
    uint64_t result = sub_12C1E38((std::string *)((char *)v3 + 40), v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    int v12 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v9;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__l.__size_;
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_167C77C(uint64_t a1)
{
  return sub_167C784(a1 + 48);
}

uint64_t sub_167C784(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 >= 1)
  {
    do
    {
      uint64_t v3 = v1--;
      uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * v1 + 8);
      uint64_t v5 = *(unsigned int *)(v4 + 80);
      while ((int)v5 >= 1)
      {
        uint64_t v6 = v5 - 1;
        char v7 = sub_15B0F18(*(void *)(*(void *)(v4 + 88) + 8 * v5));
        uint64_t v5 = v6;
        if ((v7 & 1) == 0) {
          return 0;
        }
      }
    }
    while (v3 >= 2);
  }
  return 1;
}

void *sub_167C810@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.Incident.IncidentArea");
}

void *sub_167C820(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C1DB8(a1 + 5);
  sub_12C1DB8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_167C8AC(void *a1)
{
  sub_167C820(a1);

  operator delete();
}

char *sub_167C8E4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  if ((sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v6 = (void *)(a1 + 8);
    while (1)
    {
      char v7 = v26 + 1;
      unsigned int v8 = *v26;
      if (*v26 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          char v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          char v7 = v26 + 2;
        }
      }
      uint64_t v26 = v7;
      if (v8 >> 3 == 2)
      {
        if (v8 == 18)
        {
          uint64_t v14 = v7 - 1;
          while (1)
          {
            uint64_t v15 = (unsigned __int8 *)(v14 + 1);
            uint64_t v26 = v14 + 1;
            uint64_t v16 = *(_DWORD **)(a1 + 56);
            if (v16 && (uint64_t v17 = *(int *)(a1 + 48), (int)v17 < *v16))
            {
              *(_DWORD *)(a1 + 48) = v17 + 1;
              uint64_t v18 = *(void *)&v16[2 * v17 + 2];
            }
            else
            {
              uint64_t v19 = sub_15C1B30(*(void *)(a1 + 40));
              uint64_t v18 = sub_188CDC8(a1 + 40, (uint64_t)v19);
              uint64_t v15 = (unsigned __int8 *)v26;
            }
            uint64_t v14 = (char *)sub_125CF74(a3, v18, v15);
            uint64_t v26 = v14;
            if (!v14) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
              goto LABEL_39;
            }
          }
        }
      }
      else if (v8 >> 3 == 1 && v8 == 10)
      {
        uint64_t v20 = v7 - 1;
        while (1)
        {
          unint64_t v21 = (unsigned __int8 *)(v20 + 1);
          uint64_t v26 = v20 + 1;
          uint64_t v22 = *(_DWORD **)(a1 + 32);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 24), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 24) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            unint64_t v25 = sub_15C1B30(*(void *)(a1 + 16));
            uint64_t v24 = sub_188CDC8(a1 + 16, (uint64_t)v25);
            unint64_t v21 = (unsigned __int8 *)v26;
          }
          uint64_t v20 = (char *)sub_125CF74(a3, v24, v21);
          uint64_t v26 = v20;
          if (!v20) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 10) {
            goto LABEL_39;
          }
        }
      }
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (*v6)
      {
        uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v7 = v26;
      }
      uint64_t v26 = (char *)sub_1885AC0(v8, v13, v7, a3);
      if (!v26) {
        return 0;
      }
LABEL_39:
      if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
        return v26;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v26;
    }
    return 0;
  }
  return v26;
}

char *sub_167CB2C(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_15B2EA4(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 48);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = sub_15B2EA4(v13, v15, a3);
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return __dst;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)__dst >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(__dst, v19, (int)v20);
    __dst += v21;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, __dst);
}

uint64_t sub_167CCF4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B2F90(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 48);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_15B2F90(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v9 += v18;
  }
  *(_DWORD *)(a1 + 64) = v9;
  return v9;
}

uint64_t sub_167CDF4()
{
  return 1;
}

void *sub_167CDFC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.Incident.WebLink");
}

void *sub_167CE0C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_167CE80(void *a1)
{
  sub_167CE0C(a1);

  operator delete();
}

uint64_t sub_167CEB8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_167CEE0(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v33 + 1;
    unsigned int v9 = *v33;
    if (*v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v33 + 2;
      }
    }
    unsigned int v33 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 != 3) {
      break;
    }
    if (v9 != 24) {
      goto LABEL_14;
    }
    v5 |= 4u;
    uint64_t v16 = v8 + 1;
    int v17 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_26;
    }
    int v18 = *v16;
    int v17 = v17 + (v18 << 7) - 128;
    if ((v18 & 0x80000000) == 0)
    {
      uint64_t v16 = v8 + 2;
LABEL_26:
      unsigned int v33 = v16;
      *(_DWORD *)(a1 + 32) = v17;
      goto LABEL_44;
    }
    uint64_t v27 = (char *)sub_188C0D0((uint64_t)v8, v17);
    unsigned int v33 = v27;
    *(_DWORD *)(a1 + 32) = v28;
    if (!v27) {
      goto LABEL_64;
    }
LABEL_44:
    if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 2)
  {
    if (v9 != 16) {
      goto LABEL_14;
    }
    uint64_t v19 = v8 + 1;
    unint64_t v20 = *v8;
    if (*v8 < 0)
    {
      int v21 = *v19;
      int v22 = v20 + (v21 << 7);
      unint64_t v20 = (v22 - 128);
      if (v21 < 0)
      {
        unsigned int v33 = (char *)sub_188C138((uint64_t)v8, (v22 - 128));
        if (!v33) {
          goto LABEL_64;
        }
        unint64_t v20 = v29;
        goto LABEL_32;
      }
      uint64_t v19 = v8 + 2;
    }
    unsigned int v33 = v19;
LABEL_32:
    if (v20 > 3)
    {
      if (*v7) {
        uint64_t v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      int v32 = 2;
      goto LABEL_55;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    *(_DWORD *)(a1 + 28) = v20;
    goto LABEL_44;
  }
  if (v12 == 1 && v9 == 8)
  {
    uint64_t v23 = v8 + 1;
    unint64_t v20 = *v8;
    if (*v8 < 0)
    {
      int v24 = *v23;
      int v25 = v20 + (v24 << 7);
      unint64_t v20 = (v25 - 128);
      if (v24 < 0)
      {
        unsigned int v33 = (char *)sub_188C138((uint64_t)v8, (v25 - 128));
        if (!v33) {
          goto LABEL_64;
        }
        unint64_t v20 = v30;
        goto LABEL_38;
      }
      uint64_t v23 = v8 + 2;
    }
    unsigned int v33 = v23;
LABEL_38:
    if (v20 >= 6 && v20 != 7)
    {
      if (*v7) {
        uint64_t v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      int v32 = 1;
LABEL_55:
      sub_188C020(v32, v20, v31);
      goto LABEL_44;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    *(_DWORD *)(a1 + 24) = v20;
    goto LABEL_44;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v33;
    }
    unsigned int v33 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v33) {
      goto LABEL_64;
    }
    goto LABEL_44;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_64:
  unsigned int v33 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v33;
}

unsigned char *sub_167D1B8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 28);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 32);
    *uint64_t v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_167D3D8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_16;
  }
  if (v1)
  {
    int v3 = *(_DWORD *)(a1 + 24);
    if (v3 < 0)
    {
      uint64_t v2 = 11;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v4 = *(_DWORD *)(a1 + 28);
  if (v4 < 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v5;
LABEL_14:
  if ((v1 & 4) != 0) {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_16:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_167D4C0()
{
  return 1;
}

void *sub_167D4C8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.Incident.RouteRestriction");
}

void *sub_167D4D8(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C1DB8(a1 + 9);
  sub_12C1DB8(a1 + 6);
  sub_12C1DB8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_167D570(void *a1)
{
  sub_167D4D8(a1);

  operator delete();
}

uint64_t sub_167D5A8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B2C80(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_15B2C80(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 80);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(v1 + 88) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_15B2C80(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 80) = 0;
  }
  if ((*(unsigned char *)(v1 + 16) & 7) != 0)
  {
    *(_WORD *)(v1 + 100) = 0;
    *(_DWORD *)(v1 + 96) = 0;
  }
  char v12 = *(unsigned char *)(v1 + 8);
  uint64_t v11 = v1 + 8;
  *(_DWORD *)(v11 + 8) = 0;
  if (v12)
  {
    return sub_188B4AC((uint64_t *)v11);
  }
  return result;
}

char *sub_167D68C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v48 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v48, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v48 + 1;
    unsigned int v9 = *v48;
    if (*v48 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v48, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v48 + 2;
      }
    }
    uint64_t v48 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_56;
        }
        char v12 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          uint64_t v48 = (char *)sub_188C138((uint64_t)v8, (v15 - 128));
          if (!v48) {
            goto LABEL_78;
          }
          unint64_t v13 = v42;
        }
        else
        {
          char v12 = v8 + 2;
LABEL_13:
          uint64_t v48 = v12;
        }
        if (v13 > 5)
        {
          if (*v7) {
            int v47 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v47 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v13, v47);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 1u;
          *(_DWORD *)(a1 + 96) = v13;
        }
        goto LABEL_63;
      case 2u:
        if (v9 != 18) {
          goto LABEL_56;
        }
        uint64_t v16 = v8 - 1;
        while (1)
        {
          int v17 = (unsigned __int8 *)(v16 + 1);
          uint64_t v48 = v16 + 1;
          unint64_t v18 = *(_DWORD **)(a1 + 40);
          if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
          {
            *(_DWORD *)(a1 + 32) = v19 + 1;
            uint64_t v20 = *(void *)&v18[2 * v19 + 2];
          }
          else
          {
            uint64_t v21 = sub_15C1B30(*(void *)(a1 + 24));
            uint64_t v20 = sub_188CDC8(a1 + 24, (uint64_t)v21);
            int v17 = (unsigned __int8 *)v48;
          }
          uint64_t v16 = (char *)sub_125CF74(a3, v20, v17);
          uint64_t v48 = v16;
          if (!v16) {
            goto LABEL_78;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
            goto LABEL_63;
          }
        }
      case 3u:
        if (v9 != 24) {
          goto LABEL_56;
        }
        v5 |= 2u;
        int v22 = v8 + 1;
        uint64_t v23 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v24 = *v22;
        uint64_t v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v43 = (char *)sub_188C138((uint64_t)v8, v23);
          uint64_t v48 = v43;
          *(unsigned char *)(a1 + 100) = v44 != 0;
          if (!v43) {
            goto LABEL_78;
          }
        }
        else
        {
          int v22 = v8 + 2;
LABEL_30:
          uint64_t v48 = v22;
          *(unsigned char *)(a1 + 100) = v23 != 0;
        }
        goto LABEL_63;
      case 4u:
        if (v9 != 32) {
          goto LABEL_56;
        }
        v5 |= 4u;
        int v25 = v8 + 1;
        uint64_t v26 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_35;
        }
        int v27 = *v25;
        uint64_t v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          int v45 = (char *)sub_188C138((uint64_t)v8, v26);
          uint64_t v48 = v45;
          *(unsigned char *)(a1 + 101) = v46 != 0;
          if (!v45) {
            goto LABEL_78;
          }
        }
        else
        {
          int v25 = v8 + 2;
LABEL_35:
          uint64_t v48 = v25;
          *(unsigned char *)(a1 + 101) = v26 != 0;
        }
        goto LABEL_63;
      case 5u:
        if (v9 != 42) {
          goto LABEL_56;
        }
        int v28 = v8 - 1;
        while (1)
        {
          unint64_t v29 = (unsigned __int8 *)(v28 + 1);
          uint64_t v48 = v28 + 1;
          unint64_t v30 = *(_DWORD **)(a1 + 64);
          if (v30 && (uint64_t v31 = *(int *)(a1 + 56), (int)v31 < *v30))
          {
            *(_DWORD *)(a1 + 56) = v31 + 1;
            uint64_t v32 = *(void *)&v30[2 * v31 + 2];
          }
          else
          {
            unsigned int v33 = sub_15C1B30(*(void *)(a1 + 48));
            uint64_t v32 = sub_188CDC8(a1 + 48, (uint64_t)v33);
            unint64_t v29 = (unsigned __int8 *)v48;
          }
          int v28 = (char *)sub_125CF74(a3, v32, v29);
          uint64_t v48 = v28;
          if (!v28) {
            goto LABEL_78;
          }
          if (*(void *)a3 <= (unint64_t)v28 || *v28 != 42) {
            goto LABEL_63;
          }
        }
      case 6u:
        if (v9 != 50) {
          goto LABEL_56;
        }
        uint64_t v34 = v8 - 1;
        while (1)
        {
          uint64_t v35 = (unsigned __int8 *)(v34 + 1);
          uint64_t v48 = v34 + 1;
          uint64_t v36 = *(_DWORD **)(a1 + 88);
          if (v36 && (uint64_t v37 = *(int *)(a1 + 80), (int)v37 < *v36))
          {
            *(_DWORD *)(a1 + 80) = v37 + 1;
            uint64_t v38 = *(void *)&v36[2 * v37 + 2];
          }
          else
          {
            uint64_t v39 = sub_15C1B30(*(void *)(a1 + 72));
            uint64_t v38 = sub_188CDC8(a1 + 72, (uint64_t)v39);
            uint64_t v35 = (unsigned __int8 *)v48;
          }
          uint64_t v34 = (char *)sub_125CF74(a3, v38, v35);
          uint64_t v48 = v34;
          if (!v34) {
            goto LABEL_78;
          }
          if (*(void *)a3 <= (unint64_t)v34 || *v34 != 50) {
            goto LABEL_63;
          }
        }
      default:
LABEL_56:
        if (v9) {
          BOOL v40 = (v9 & 7) == 4;
        }
        else {
          BOOL v40 = 1;
        }
        if (!v40)
        {
          if (*v7)
          {
            uint64_t v41 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v41 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v48;
          }
          uint64_t v48 = (char *)sub_1885AC0(v9, v41, v8, a3);
          if (!v48) {
            goto LABEL_78;
          }
LABEL_63:
          if (sub_11947B8((uint64_t)a3, &v48, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_78:
        }
          uint64_t v48 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v48;
    }
  }
}

char *sub_167DB2C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 96);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        int v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        int v14 = v4 + 2;
      }
      uint64_t v4 = sub_15B2EA4(v12, v14, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v15 = *(unsigned char *)(a1 + 100);
    *uint64_t v4 = 24;
    v4[1] = v15;
    v4 += 2;
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v16 = *(unsigned char *)(a1 + 101);
    *uint64_t v4 = 32;
    v4[1] = v16;
    v4 += 2;
  }
  int v17 = *(_DWORD *)(a1 + 56);
  if (v17)
  {
    for (int j = 0; j != v17; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v19 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *uint64_t v4 = 42;
      unsigned int v20 = *(_DWORD *)(v19 + 20);
      v4[1] = v20;
      if (v20 > 0x7F) {
        uint64_t v21 = sub_188A9CC(v20, v4 + 1);
      }
      else {
        uint64_t v21 = v4 + 2;
      }
      uint64_t v4 = sub_15B2EA4(v19, v21, a3);
    }
  }
  int v22 = *(_DWORD *)(a1 + 80);
  if (v22)
  {
    for (int k = 0; k != v22; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v24 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      *uint64_t v4 = 50;
      unsigned int v25 = *(_DWORD *)(v24 + 20);
      v4[1] = v25;
      if (v25 > 0x7F) {
        uint64_t v26 = sub_188A9CC(v25, v4 + 1);
      }
      else {
        uint64_t v26 = v4 + 2;
      }
      uint64_t v4 = sub_15B2EA4(v24, v26, a3);
    }
  }
  uint64_t v27 = *(void *)(a1 + 8);
  if ((v27 & 1) == 0) {
    return v4;
  }
  unint64_t v29 = v27 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v29 + 31) < 0)
  {
    unint64_t v30 = *(void **)(v29 + 8);
    uint64_t v31 = *(void *)(v29 + 16);
  }
  else
  {
    unint64_t v30 = (void *)(v29 + 8);
    LODWORD(v31) = *(unsigned __int8 *)(v29 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v31)
  {
    uint64_t v32 = (int)v31;
    memcpy(v4, v30, (int)v31);
    v4 += v32;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v30, v31, v4);
}

uint64_t sub_167DE68(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B2F90(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_15B2F90(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    unint64_t v18 = (uint64_t *)(v17 + 8);
  }
  else {
    unint64_t v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_15B2F90(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  int v22 = *(_DWORD *)(a1 + 16);
  if ((v22 & 7) != 0)
  {
    if (v22)
    {
      int v23 = *(_DWORD *)(a1 + 96);
      uint64_t v24 = ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v23 >= 0) {
        uint64_t v25 = v24;
      }
      else {
        uint64_t v25 = 11;
      }
      v16 += v25;
    }
    uint64_t v26 = v16 + 2;
    if ((v22 & 2) == 0) {
      uint64_t v26 = v16;
    }
    if ((v22 & 4) != 0) {
      uint64_t v16 = v26 + 2;
    }
    else {
      uint64_t v16 = v26;
    }
  }
  uint64_t v27 = *(void *)(a1 + 8);
  if (v27)
  {
    unint64_t v29 = v27 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v29 + 31) < 0) {
      uint64_t v30 = *(void *)(v29 + 16);
    }
    else {
      uint64_t v30 = *(unsigned __int8 *)(v29 + 31);
    }
    v16 += v30;
  }
  *(_DWORD *)(a1 + 20) = v16;
  return v16;
}

std::string *sub_167E010(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_12C1E38(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unsigned int v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = sub_12C1E38(v3 + 2, v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2] - LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4((uint64_t)&v3[3], *(_DWORD *)(a2 + 80));
    uint64_t result = sub_12C1E38(v3 + 3, v16, v15, v14, *(_DWORD *)v3[3].__r_.__value_.__r.__words[2] - LODWORD(v3[3].__r_.__value_.__r.__words[1]));
    int v17 = LODWORD(v3[3].__r_.__value_.__r.__words[1]) + v14;
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) = v17;
    unint64_t v18 = (int *)v3[3].__r_.__value_.__r.__words[2];
    if (*v18 < v17) {
      *unint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 16);
  if ((v19 & 7) != 0)
  {
    if (v19)
    {
      LODWORD(v3[4].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 96);
      if ((v19 & 2) == 0)
      {
LABEL_13:
        if ((v19 & 4) == 0)
        {
LABEL_15:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v19;
          goto LABEL_16;
        }
LABEL_14:
        v3[4].__r_.__value_.__s.__data_[5] = *(unsigned char *)(a2 + 101);
        goto LABEL_15;
      }
    }
    else if ((v19 & 2) == 0)
    {
      goto LABEL_13;
    }
    v3[4].__r_.__value_.__s.__data_[4] = *(unsigned char *)(a2 + 100);
    if ((v19 & 4) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_16:
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_167E1F0()
{
  return 1;
}

void *sub_167E1F8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.Incident.RouteAdvisory");
}

void *sub_167E208(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_167E27C(void *a1)
{
  sub_167E208(a1);

  operator delete();
}

uint64_t sub_167E2B4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_167E2D8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v15 = v8 + 1;
    int v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    int v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      uint64_t v25 = v15;
      *(_DWORD *)(a1 + 28) = v16;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C0D0((uint64_t)v8, v16);
    uint64_t v25 = v21;
    *(_DWORD *)(a1 + 28) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    unint64_t v18 = v8 + 1;
    int v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      unint64_t v18 = v8 + 2;
LABEL_29:
      uint64_t v25 = v18;
      *(_DWORD *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    int v23 = (char *)sub_188C0D0((uint64_t)v8, v19);
    uint64_t v25 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_167E4C8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    *int v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_167E66C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_8;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_167E710()
{
  return 1;
}

void *sub_167E718@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.Incident.RouteAlert");
}

void *sub_167E728(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_167E79C(void *a1)
{
  sub_167E728(a1);

  operator delete();
}

uint64_t sub_167E7D4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0xF) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(_DWORD *)(a1 + 40) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_167E7FC(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v29 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = v29 + 1;
    unsigned int v9 = *v29;
    if (*v29 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v29, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v29 + 2;
      }
    }
    unint64_t v29 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_26;
        }
        v5 |= 1u;
        unsigned int v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unsigned int v12 = v8 + 2;
LABEL_13:
          unint64_t v29 = v12;
          *(unsigned char *)(a1 + 24) = v13 != 0;
          goto LABEL_33;
        }
        int v23 = (char *)sub_188C138((uint64_t)v8, v13);
        unint64_t v29 = v23;
        *(unsigned char *)(a1 + 24) = v24 != 0;
        if (v23) {
          goto LABEL_33;
        }
        goto LABEL_44;
      case 2u:
        if (v9 != 16) {
          goto LABEL_26;
        }
        v5 |= 2u;
        unint64_t v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v25 = (char *)sub_188C0D0((uint64_t)v8, v16);
          unint64_t v29 = v25;
          *(_DWORD *)(a1 + 28) = v26;
          if (!v25) {
            goto LABEL_44;
          }
        }
        else
        {
          unint64_t v15 = v8 + 2;
LABEL_18:
          unint64_t v29 = v15;
          *(_DWORD *)(a1 + 28) = v16;
        }
        goto LABEL_33;
      case 3u:
        if (v9 != 29) {
          goto LABEL_26;
        }
        v5 |= 8u;
        *(_DWORD *)(a1 + 40) = *(_DWORD *)v8;
        unint64_t v29 = v8 + 4;
        goto LABEL_33;
      case 4u:
        if (v9 != 32) {
          goto LABEL_26;
        }
        v5 |= 4u;
        uint64_t v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v27 = (char *)sub_188C138((uint64_t)v8, v19);
          unint64_t v29 = v27;
          *(void *)(a1 + 32) = v28;
          if (!v27) {
            goto LABEL_44;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_25:
          unint64_t v29 = v18;
          *(void *)(a1 + 32) = v19;
        }
        goto LABEL_33;
      default:
LABEL_26:
        if (v9) {
          BOOL v21 = (v9 & 7) == 4;
        }
        else {
          BOOL v21 = 1;
        }
        if (!v21)
        {
          if (*v7)
          {
            int v22 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = v29;
          }
          unint64_t v29 = (char *)sub_1885AC0(v9, v22, v8, a3);
          if (!v29) {
            goto LABEL_44;
          }
LABEL_33:
          if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_44:
        }
          unint64_t v29 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v29;
    }
  }
}

unsigned char *sub_167EAA8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 24);
    *int v4 = 8;
    v4[1] = v7;
    v4 += 2;
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v8 = *(_DWORD *)(a1 + 28);
    *int v4 = 16;
    v4[1] = v8;
    if (v8 > 0x7F)
    {
      v4[1] = v8 | 0x80;
      unsigned int v9 = v8 >> 7;
      v4[2] = v8 >> 7;
      v4 += 3;
      if (v8 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v10 = v9 >> 14;
          v9 >>= 7;
          *v4++ = v9;
        }
        while (v10);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v11 = *(_DWORD *)(a1 + 40);
    *int v4 = 29;
    *(_DWORD *)(v4 + 1) = v11;
    v4 += 5;
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v12 = *(void *)(a1 + 32);
    *int v4 = 32;
    v4[1] = v12;
    if (v12 > 0x7F)
    {
      v4[1] = v12 | 0x80;
      unint64_t v13 = v12 >> 7;
      v4[2] = v12 >> 7;
      v4 += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v14 = v13 >> 14;
          v13 >>= 7;
          *v4++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    uint64_t v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    uint64_t v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v18, v19, v4);
}

unint64_t sub_167ECBC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) != 0)
  {
    LODWORD(v2) = 2 * (*(_DWORD *)(a1 + 16) & 1);
    if ((v1 & 2) != 0) {
      LODWORD(v2) = (v2 | 1) + ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6);
    }
    unint64_t v2 = v2;
    if ((v1 & 4) != 0) {
      unint64_t v2 = v2 + ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    if ((v1 & 8) != 0) {
      unint64_t v3 = v2 + 5;
    }
    else {
      unint64_t v3 = v2;
    }
  }
  else
  {
    unint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_167ED64(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_8;
  }
  if (v2)
  {
    result[1].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 24);
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
LABEL_12:
      result[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
      if ((v2 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  HIDWORD(result[1].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 28);
  if ((v2 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_5:
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    LODWORD(result[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
LABEL_7:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_8:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_167EDD8()
{
  return 1;
}

void *sub_167EDE0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.Incident.FireEventMetadata");
}

uint64_t sub_167EDF0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  int v5 = (void ***)(a1 + 96);
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_25433F0)
  {
    unint64_t v6 = *(void **)(a1 + 104);
    if (v6)
    {
      sub_167C820(v6);
      operator delete();
    }
    uint64_t v7 = *(void **)(a1 + 112);
    if (v7)
    {
      sub_167CE0C(v7);
      operator delete();
    }
    unsigned int v8 = *(void **)(a1 + 120);
    if (v8)
    {
      sub_167E728(v8);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  sub_16B3904((void *)(a1 + 72));
  sub_12C1DB8((void *)(a1 + 48));
  sub_154F7C0((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_167EF20(uint64_t a1)
{
  sub_167EDF0(a1);

  operator delete();
}

uint64_t sub_167EF58(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_167B7FC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    unint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_15B2C80(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 80);
  if ((int)v8 >= 1)
  {
    unsigned int v9 = (uint64_t *)(*(void *)(v1 + 88) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_167D5A8(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 80) = 0;
  }
  int v11 = *(_DWORD *)(v1 + 16);
  if ((v11 & 0xF) == 0) {
    goto LABEL_19;
  }
  if ((v11 & 1) == 0)
  {
    if ((v11 & 2) == 0) {
      goto LABEL_16;
    }
LABEL_29:
    uint64_t result = sub_167B934(*(void *)(v1 + 104));
    if ((v11 & 4) == 0)
    {
LABEL_17:
      if ((v11 & 8) == 0) {
        goto LABEL_19;
      }
      goto LABEL_18;
    }
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v1 + 96) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v14 + 23) < 0)
  {
    **(unsigned char **)unint64_t v14 = 0;
    *(void *)(v14 + 8) = 0;
    if ((v11 & 2) != 0) {
      goto LABEL_29;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v14 = 0;
    *(unsigned char *)(v14 + 23) = 0;
    if ((v11 & 2) != 0) {
      goto LABEL_29;
    }
  }
LABEL_16:
  if ((v11 & 4) == 0) {
    goto LABEL_17;
  }
LABEL_30:
  uint64_t result = sub_167CEB8(*(void *)(v1 + 112));
  if ((v11 & 8) != 0) {
LABEL_18:
  }
    uint64_t result = sub_167E7D4(*(void *)(v1 + 120));
LABEL_19:
  if ((v11 & 0x30) != 0) {
    *(void *)(v1 + 128) = 0;
  }
  char v13 = *(unsigned char *)(v1 + 8);
  uint64_t v12 = v1 + 8;
  *(_DWORD *)(v12 + 8) = 0;
  if (v13)
  {
    return sub_188B4AC((uint64_t *)v12);
  }
  return result;
}

uint64_t sub_167F0A4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v52 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v52, a3[11].i32[1])) {
    return *(void *)v52;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v52 + 1);
    unsigned int v8 = **(unsigned char **)v52;
    if ((char)**(unsigned char **)v52 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v52, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v52 + 2);
      }
    }
    *(void *)uint64_t v52 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_75;
        }
        int v11 = v7 - 1;
        while (1)
        {
          uint64_t v12 = v11 + 1;
          *(void *)uint64_t v52 = v11 + 1;
          char v13 = *(_DWORD **)(a1 + 40);
          if (v13 && (uint64_t v14 = *(int *)(a1 + 32), (int)v14 < *v13))
          {
            *(_DWORD *)(a1 + 32) = v14 + 1;
            uint64_t v15 = *(void *)&v13[2 * v14 + 2];
          }
          else
          {
            int v16 = sub_1694F38(*(void *)(a1 + 24));
            uint64_t v15 = sub_188CDC8(a1 + 24, (uint64_t)v16);
            uint64_t v12 = *(unsigned __int8 **)v52;
          }
          int v11 = (unsigned __int8 *)sub_154F378(a3, v15, v12);
          *(void *)uint64_t v52 = v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *v11 != 10) {
            goto LABEL_83;
          }
        }
      case 2u:
        if (v8 != 16) {
          goto LABEL_75;
        }
        unint64_t v17 = (char *)(v7 + 1);
        unint64_t v18 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v19 = *v17;
        int v20 = v18 + (v19 << 7);
        unint64_t v18 = (v20 - 128);
        if (v19 < 0)
        {
          *(void *)uint64_t v52 = sub_188C138((uint64_t)v7, (v20 - 128));
          if (!*(void *)v52) {
            return 0;
          }
          unint64_t v18 = v48;
        }
        else
        {
          unint64_t v17 = (char *)(v7 + 2);
LABEL_23:
          *(void *)uint64_t v52 = v17;
        }
        if (v18 <= 0x13)
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 128) = v18;
          goto LABEL_83;
        }
        if (*v6) {
          int v50 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          int v50 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v51 = 2;
        goto LABEL_95;
      case 3u:
        if (v8 != 26) {
          goto LABEL_75;
        }
        BOOL v21 = v7 - 1;
        while (1)
        {
          int v22 = v21 + 1;
          *(void *)uint64_t v52 = v21 + 1;
          int v23 = *(_DWORD **)(a1 + 64);
          if (v23 && (uint64_t v24 = *(int *)(a1 + 56), (int)v24 < *v23))
          {
            *(_DWORD *)(a1 + 56) = v24 + 1;
            uint64_t v25 = *(void *)&v23[2 * v24 + 2];
          }
          else
          {
            int v26 = sub_15C1B30(*(void *)(a1 + 48));
            uint64_t v25 = sub_188CDC8(a1 + 48, (uint64_t)v26);
            int v22 = *(unsigned __int8 **)v52;
          }
          BOOL v21 = (unsigned __int8 *)sub_125CF74(a3, v25, v22);
          *(void *)uint64_t v52 = v21;
          if (!v21) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *v21 != 26) {
            goto LABEL_83;
          }
        }
      case 4u:
        if (v8 != 34) {
          goto LABEL_75;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v27 = *(void *)(a1 + 104);
        if (!v27)
        {
          uint64_t v28 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v28 = (void *)*v28;
          }
          uint64_t v27 = sub_1694FF0((uint64_t)v28);
          *(void *)(a1 + 104) = v27;
          uint64_t v7 = *(unsigned __int8 **)v52;
        }
        unint64_t v29 = sub_167BE04(a3, v27, v7);
        goto LABEL_82;
      case 5u:
        if (v8 != 42) {
          goto LABEL_75;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v30 = *(void *)(a1 + 112);
        if (!v30)
        {
          uint64_t v31 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v31 = (void *)*v31;
          }
          uint64_t v30 = sub_1695094((uint64_t)v31);
          *(void *)(a1 + 112) = v30;
          uint64_t v7 = *(unsigned __int8 **)v52;
        }
        unint64_t v29 = sub_167F638(a3, v30, v7);
        goto LABEL_82;
      case 6u:
        if (v8 != 50) {
          goto LABEL_75;
        }
        uint64_t v32 = (char *)(v7 - 1);
        while (1)
        {
          unsigned int v33 = (unsigned __int8 *)(v32 + 1);
          *(void *)uint64_t v52 = v32 + 1;
          uint64_t v34 = *(_DWORD **)(a1 + 88);
          if (v34 && (uint64_t v35 = *(int *)(a1 + 80), (int)v35 < *v34))
          {
            *(_DWORD *)(a1 + 80) = v35 + 1;
            uint64_t v36 = *(void *)&v34[2 * v35 + 2];
          }
          else
          {
            uint64_t v37 = sub_1695110(*(void *)(a1 + 72));
            uint64_t v36 = sub_188CDC8(a1 + 72, (uint64_t)v37);
            unsigned int v33 = *(unsigned __int8 **)v52;
          }
          uint64_t v32 = sub_167F6C8(a3, v36, v33);
          *(void *)uint64_t v52 = v32;
          if (!v32) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v32 || *v32 != 50) {
            goto LABEL_83;
          }
        }
      case 7u:
        if (v8 != 58) {
          goto LABEL_75;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v38 = *(void *)(a1 + 8);
        uint64_t v39 = (uint64_t *)(v38 & 0xFFFFFFFFFFFFFFFCLL);
        if (v38) {
          uint64_t v39 = (uint64_t *)*v39;
        }
        BOOL v40 = (std::string *)sub_1880F84((void *)(a1 + 96), v39);
        unint64_t v29 = (void *)sub_188C244(v40, *(char **)v52, (uint64_t)a3);
        goto LABEL_82;
      case 8u:
        if (v8 != 66) {
          goto LABEL_75;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v41 = *(void *)(a1 + 120);
        if (!v41)
        {
          unint64_t v42 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v42 = (void *)*v42;
          }
          uint64_t v41 = sub_1695238((uint64_t)v42);
          *(void *)(a1 + 120) = v41;
          uint64_t v7 = *(unsigned __int8 **)v52;
        }
        unint64_t v29 = sub_167F758(a3, v41, v7);
        goto LABEL_82;
      case 9u:
        if (v8 != 72) {
          goto LABEL_75;
        }
        uint64_t v43 = (char *)(v7 + 1);
        unint64_t v18 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_72;
        }
        int v44 = *v43;
        int v45 = v18 + (v44 << 7);
        unint64_t v18 = (v45 - 128);
        if (v44 < 0)
        {
          *(void *)uint64_t v52 = sub_188C138((uint64_t)v7, (v45 - 128));
          if (!*(void *)v52) {
            return 0;
          }
          unint64_t v18 = v49;
        }
        else
        {
          uint64_t v43 = (char *)(v7 + 2);
LABEL_72:
          *(void *)uint64_t v52 = v43;
        }
        if (v18 > 7)
        {
          if (*v6) {
            int v50 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v50 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v51 = 9;
LABEL_95:
          sub_188C020(v51, v18, v50);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 132) = v18;
        }
        goto LABEL_83;
      default:
LABEL_75:
        if (v8) {
          BOOL v46 = (v8 & 7) == 4;
        }
        else {
          BOOL v46 = 1;
        }
        if (!v46)
        {
          if (*v6)
          {
            int v47 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v47 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = *(unsigned __int8 **)v52;
          }
          unint64_t v29 = sub_1885AC0(v8, v47, (char *)v7, a3);
LABEL_82:
          *(void *)uint64_t v52 = v29;
          if (!v29) {
            return 0;
          }
LABEL_83:
          if (sub_11947B8((uint64_t)a3, (char **)v52, a3[11].i32[1])) {
            return *(void *)v52;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v52;
    }
  }
}

char *sub_167F638(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_167CEE0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_167F6C8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_167D68C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_167F758(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_167E7FC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_167F7E8(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_167BE94(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if ((v11 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v12 = *(int *)(a1 + 128);
    *__dst = 16;
    __dst[1] = v12;
    if (v12 > 0x7F)
    {
      __dst[1] = v12 | 0x80;
      unint64_t v13 = v12 >> 7;
      __dst[2] = v12 >> 7;
      __dst += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v14 = v13 >> 14;
          v13 >>= 7;
          *__dst++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  int v15 = *(_DWORD *)(a1 + 56);
  if (v15)
  {
    for (int j = 0; j != v15; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v17 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *__dst = 26;
      unsigned int v18 = *(_DWORD *)(v17 + 20);
      __dst[1] = v18;
      if (v18 > 0x7F) {
        int v19 = sub_188A9CC(v18, __dst + 1);
      }
      else {
        int v19 = __dst + 2;
      }
      __dst = sub_15B2EA4(v17, v19, a3);
    }
  }
  if ((v11 & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v20 = *(void *)(a1 + 104);
    *__dst = 34;
    unsigned int v21 = *(_DWORD *)(v20 + 64);
    __dst[1] = v21;
    if (v21 > 0x7F) {
      int v22 = sub_188A9CC(v21, __dst + 1);
    }
    else {
      int v22 = __dst + 2;
    }
    __dst = sub_167CB2C(v20, v22, a3);
  }
  if ((v11 & 4) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v23 = *(void *)(a1 + 112);
    *__dst = 42;
    unsigned int v24 = *(_DWORD *)(v23 + 20);
    __dst[1] = v24;
    if (v24 > 0x7F) {
      uint64_t v25 = sub_188A9CC(v24, __dst + 1);
    }
    else {
      uint64_t v25 = __dst + 2;
    }
    __dst = sub_167D1B8(v23, (unint64_t)v25, a3);
  }
  int v26 = *(_DWORD *)(a1 + 80);
  if (v26)
  {
    for (int k = 0; k != v26; ++k)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v28 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      *__dst = 50;
      unsigned int v29 = *(_DWORD *)(v28 + 20);
      __dst[1] = v29;
      if (v29 > 0x7F) {
        uint64_t v30 = sub_188A9CC(v29, __dst + 1);
      }
      else {
        uint64_t v30 = __dst + 2;
      }
      __dst = sub_167DB2C(v28, (unint64_t)v30, a3);
    }
  }
  if (v11)
  {
    __dst = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v11 & 8) == 0)
    {
LABEL_48:
      if ((v11 & 0x20) == 0) {
        goto LABEL_63;
      }
      goto LABEL_57;
    }
  }
  else if ((v11 & 8) == 0)
  {
    goto LABEL_48;
  }
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v31 = *(void *)(a1 + 120);
  *__dst = 66;
  unsigned int v32 = *(_DWORD *)(v31 + 20);
  __dst[1] = v32;
  if (v32 > 0x7F) {
    unsigned int v33 = sub_188A9CC(v32, __dst + 1);
  }
  else {
    unsigned int v33 = __dst + 2;
  }
  __dst = sub_167EAA8(v31, (unint64_t)v33, a3);
  if ((v11 & 0x20) != 0)
  {
LABEL_57:
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v34 = *(int *)(a1 + 132);
    *__dst = 72;
    __dst[1] = v34;
    if (v34 > 0x7F)
    {
      __dst[1] = v34 | 0x80;
      unint64_t v35 = v34 >> 7;
      __dst[2] = v34 >> 7;
      __dst += 3;
      if (v34 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v36 = v35 >> 14;
          v35 >>= 7;
          *__dst++ = v35;
        }
        while (v36);
      }
    }
    else
    {
      __dst += 2;
    }
  }
LABEL_63:
  uint64_t v37 = *(void *)(a1 + 8);
  if ((v37 & 1) == 0) {
    return __dst;
  }
  unint64_t v39 = v37 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v39 + 31) < 0)
  {
    BOOL v40 = *(void **)(v39 + 8);
    uint64_t v41 = *(void *)(v39 + 16);
  }
  else
  {
    BOOL v40 = (void *)(v39 + 8);
    LODWORD(v41) = *(unsigned __int8 *)(v39 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v41)
  {
    uint64_t v42 = (int)v41;
    memcpy(__dst, v40, (int)v41);
    __dst += v42;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v40, v41, __dst);
}

uint64_t sub_167FC88(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_167C1FC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_15B2F90(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    unsigned int v18 = (uint64_t *)(v17 + 8);
  }
  else {
    unsigned int v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_167DE68(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  int v22 = *(_DWORD *)(a1 + 16);
  if ((v22 & 0x3F) == 0) {
    goto LABEL_32;
  }
  if (v22)
  {
    unint64_t v28 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v29 = *(unsigned __int8 *)(v28 + 23);
    uint64_t v30 = *(void *)(v28 + 8);
    if ((v29 & 0x80u) == 0) {
      uint64_t v30 = v29;
    }
    v16 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v22 & 2) == 0)
    {
LABEL_24:
      if ((v22 & 4) == 0) {
        goto LABEL_25;
      }
      goto LABEL_38;
    }
  }
  else if ((v22 & 2) == 0)
  {
    goto LABEL_24;
  }
  uint64_t v31 = sub_167CCF4(*(void *)(a1 + 104));
  v16 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v22 & 4) == 0)
  {
LABEL_25:
    if ((v22 & 8) == 0) {
      goto LABEL_26;
    }
LABEL_39:
    unint64_t v33 = sub_167ECBC(*(void *)(a1 + 120));
    v16 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v22 & 0x10) == 0)
    {
LABEL_27:
      if ((v22 & 0x20) == 0) {
        goto LABEL_32;
      }
      goto LABEL_28;
    }
    goto LABEL_40;
  }
LABEL_38:
  uint64_t v32 = sub_167D3D8(*(void *)(a1 + 112));
  v16 += v32 + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v22 & 8) != 0) {
    goto LABEL_39;
  }
LABEL_26:
  if ((v22 & 0x10) == 0) {
    goto LABEL_27;
  }
LABEL_40:
  int v34 = *(_DWORD *)(a1 + 128);
  uint64_t v35 = ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v34 >= 0) {
    uint64_t v36 = v35;
  }
  else {
    uint64_t v36 = 11;
  }
  v16 += v36;
  if ((v22 & 0x20) != 0)
  {
LABEL_28:
    int v23 = *(_DWORD *)(a1 + 132);
    uint64_t v24 = ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v23 >= 0) {
      uint64_t v25 = v24;
    }
    else {
      uint64_t v25 = 11;
    }
    v16 += v25;
  }
LABEL_32:
  uint64_t v26 = *(void *)(a1 + 8);
  if (v26)
  {
    unint64_t v37 = v26 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v37 + 31) < 0) {
      uint64_t v38 = *(void *)(v37 + 16);
    }
    else {
      uint64_t v38 = *(unsigned __int8 *)(v37 + 31);
    }
    v16 += v38;
  }
  *(_DWORD *)(a1 + 20) = v16;
  return v16;
}

void sub_167FF38(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_154F8BC((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C1E38((std::string *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_16B45A0((std::string *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    unsigned int v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      *unsigned int v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 16);
  if ((v19 & 0x3F) != 0)
  {
    if (v19)
    {
      uint64_t v21 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v22 = *(void *)(a1 + 8);
      int v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        int v23 = (uint64_t *)*v23;
      }
      sub_1881DF4((std::string **)(a1 + 96), v21, v23);
      if ((v19 & 2) == 0)
      {
LABEL_13:
        if ((v19 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_34;
      }
    }
    else if ((v19 & 2) == 0)
    {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v24 = *(std::string **)(a1 + 104);
    if (!v24)
    {
      uint64_t v25 = *(void *)(a1 + 8);
      uint64_t v26 = (void *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
      if (v25) {
        uint64_t v26 = (void *)*v26;
      }
      uint64_t v24 = (std::string *)sub_1694FF0((uint64_t)v26);
      *(void *)(a1 + 104) = v24;
    }
    if (*(void *)(a2 + 104)) {
      uint64_t v27 = *(uint64_t (****)())(a2 + 104);
    }
    else {
      uint64_t v27 = &off_2543330;
    }
    sub_167C648(v24, (uint64_t)v27);
    if ((v19 & 4) == 0)
    {
LABEL_14:
      if ((v19 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_42;
    }
LABEL_34:
    *(_DWORD *)(a1 + 16) |= 4u;
    unint64_t v28 = *(std::string **)(a1 + 112);
    if (!v28)
    {
      uint64_t v29 = *(void *)(a1 + 8);
      uint64_t v30 = (void *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
      if (v29) {
        uint64_t v30 = (void *)*v30;
      }
      unint64_t v28 = (std::string *)sub_1695094((uint64_t)v30);
      *(void *)(a1 + 112) = v28;
    }
    if (*(void *)(a2 + 112)) {
      uint64_t v31 = *(uint64_t (****)())(a2 + 112);
    }
    else {
      uint64_t v31 = &off_2543378;
    }
    sub_117EF50(v28, (uint64_t)v31);
    if ((v19 & 8) == 0)
    {
LABEL_15:
      if ((v19 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_50;
    }
LABEL_42:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v32 = *(std::string **)(a1 + 120);
    if (!v32)
    {
      uint64_t v33 = *(void *)(a1 + 8);
      int v34 = (void *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
      if (v33) {
        int v34 = (void *)*v34;
      }
      uint64_t v32 = (std::string *)sub_1695238((uint64_t)v34);
      *(void *)(a1 + 120) = v32;
    }
    if (*(void *)(a2 + 120)) {
      uint64_t v35 = *(uint64_t (****)())(a2 + 120);
    }
    else {
      uint64_t v35 = &off_25433C0;
    }
    sub_167ED64(v32, (uint64_t)v35);
    if ((v19 & 0x10) == 0)
    {
LABEL_16:
      if ((v19 & 0x20) == 0)
      {
LABEL_18:
        *(_DWORD *)(a1 + 16) |= v19;
        goto LABEL_19;
      }
LABEL_17:
      *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
      goto LABEL_18;
    }
LABEL_50:
    *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
    if ((v19 & 0x20) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
LABEL_19:
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_1680230(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_167C784(*(void *)(*(void *)(a1 + 40) + 8 * v2) + 48);
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_168028C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.Incident.AreaEvent");
}

uint64_t sub_168029C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_16A0CF8(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_16A552C(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  int v8 = *(_DWORD *)(v1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8) {
      uint64_t result = sub_16A2918(*(void *)(v1 + 72));
    }
    if ((v8 & 2) != 0) {
      uint64_t result = sub_16A3BE8(*(void *)(v1 + 80));
    }
  }
  if ((v8 & 0xFC) != 0)
  {
    *(void *)(v1 + 88) = 0;
    *(void *)(v1 + 96) = 0;
    *(void *)(v1 + 104) = 0;
  }
  if ((v8 & 0x700) != 0)
  {
    *(_DWORD *)(v1 + 120) = 0;
    *(void *)(v1 + 112) = 0;
  }
  char v10 = *(unsigned char *)(v1 + 8);
  uint64_t v9 = v1 + 8;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

uint64_t sub_1680388(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1696794(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

uint64_t sub_1680404(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1680494((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_16B3984((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_1680494(uint64_t (***result)()))()
{
  if (result != &off_2543478)
  {
    uint64_t v1 = result;
    uint64_t v2 = (uint64_t)result[6];
    if (v2)
    {
      sub_16A5ECC(v2);
      operator delete();
    }
    int v3 = v1[7];
    if (v3)
    {
      sub_168D370(v3);
      operator delete();
    }
    uint64_t v4 = (uint64_t)v1[8];
    if (v4)
    {
      sub_168684C(v4);
      operator delete();
    }
    uint64_t v5 = (uint64_t)v1[9];
    if (v5)
    {
      sub_1685308(v5);
      operator delete();
    }
    uint64_t v6 = (uint64_t)v1[10];
    if (v6)
    {
      sub_1683A04(v6);
      operator delete();
    }
    uint64_t v7 = (uint64_t)v1[11];
    if (v7)
    {
      sub_1691364(v7);
      operator delete();
    }
    int v8 = v1[12];
    if (v8)
    {
      sub_1691A28(v8);
      operator delete();
    }
    uint64_t v9 = v1[13];
    if (v9)
    {
      sub_15350B8(v9);
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[14];
    if (result)
    {
      sub_1696DA8(result);
      operator delete();
    }
  }
  return result;
}

void sub_1680600(uint64_t a1)
{
  sub_1680404(a1);

  operator delete();
}

uint64_t sub_1680638(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1685AFC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if (!(_BYTE)v5) {
    goto LABEL_15;
  }
  if (v5)
  {
    uint64_t result = sub_168029C(*(void *)(v1 + 48));
    if ((v5 & 2) == 0)
    {
LABEL_8:
      if ((v5 & 4) == 0) {
        goto LABEL_9;
      }
      goto LABEL_23;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_8;
  }
  uint64_t result = sub_1680750(*(void *)(v1 + 56));
  if ((v5 & 4) == 0)
  {
LABEL_9:
    if ((v5 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = sub_16807FC(*(void *)(v1 + 64));
  if ((v5 & 8) == 0)
  {
LABEL_10:
    if ((v5 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = sub_168089C(*(void *)(v1 + 72));
  if ((v5 & 0x10) == 0)
  {
LABEL_11:
    if ((v5 & 0x20) == 0) {
      goto LABEL_12;
    }
LABEL_26:
    uint64_t result = sub_1680A2C(*(void *)(v1 + 88));
    if ((v5 & 0x40) == 0)
    {
LABEL_13:
      if ((v5 & 0x80) == 0) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
    goto LABEL_27;
  }
LABEL_25:
  uint64_t result = sub_1680964(*(void *)(v1 + 80));
  if ((v5 & 0x20) != 0) {
    goto LABEL_26;
  }
LABEL_12:
  if ((v5 & 0x40) == 0) {
    goto LABEL_13;
  }
LABEL_27:
  uint64_t result = sub_1680ABC(*(void *)(v1 + 96));
  if ((v5 & 0x80) != 0) {
LABEL_14:
  }
    uint64_t result = sub_15350F4(*(void *)(v1 + 104));
LABEL_15:
  if ((v5 & 0x100) != 0) {
    uint64_t result = sub_1680388(*(void *)(v1 + 112));
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_1680750(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 16);
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = (uint64_t)sub_15B09D0(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 48) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 72);
  if ((int)v6 >= 1)
  {
    char v7 = (uint64_t *)(*(void *)(a1 + 80) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_12FEB6C(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 72) = 0;
  }
  char v10 = *(unsigned char *)(a1 + 8);
  uint64_t v9 = (uint64_t *)(a1 + 8);
  if (v10)
  {
    return sub_188B4AC(v9);
  }
  return result;
}

uint64_t sub_16807FC(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 3) != 0)
  {
    if ((v3 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v4 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
LABEL_5:
      if ((v3 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v4 = 0;
    *(void *)(v4 + 8) = 0;
    if ((v3 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = (uint64_t)sub_1686354(*(unsigned char **)(a1 + 56));
  }
LABEL_7:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t v5 = a1 + 8;
  *(_DWORD *)(v5 + 56) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_168089C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_12D9C24(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if ((v5 & 1) == 0) {
      goto LABEL_9;
    }
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v6 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
LABEL_9:
      if ((v5 & 2) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v5 & 2) != 0) {
LABEL_10:
    }
      uint64_t result = sub_166AD08(*(void *)(v1 + 56));
  }
LABEL_11:
  char v8 = *(unsigned char *)(v1 + 8);
  uint64_t v7 = v1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_1680964(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (unsigned char **)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = (uint64_t)sub_16834BC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if ((v5 & 1) == 0) {
      goto LABEL_9;
    }
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v6 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
LABEL_9:
      if ((v5 & 2) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v5 & 2) != 0) {
LABEL_10:
    }
      uint64_t result = sub_1683B14(*(void *)(v1 + 56));
  }
LABEL_11:
  char v8 = *(unsigned char *)(v1 + 8);
  uint64_t v7 = v1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_1680A2C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_168DC6C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = sub_1690DDC(*(void *)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_1680ABC(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  unsigned int v3 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v3) {
    goto LABEL_41;
  }
  if (v3)
  {
    unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_15;
      }
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_19:
    unint64_t v6 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v3 & 8) != 0) {
        goto LABEL_23;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v3 & 8) != 0) {
        goto LABEL_23;
      }
    }
LABEL_6:
    if ((v3 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_27:
    unint64_t v8 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
      if ((v3 & 0x20) != 0) {
        goto LABEL_31;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
      if ((v3 & 0x20) != 0) {
        goto LABEL_31;
      }
    }
LABEL_8:
    if ((v3 & 0x40) == 0) {
      goto LABEL_9;
    }
LABEL_35:
    unint64_t v10 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v10 + 23) < 0)
    {
      **(unsigned char **)unint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
      if ((v3 & 0x80) == 0) {
        goto LABEL_41;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v10 = 0;
      *(unsigned char *)(v10 + 23) = 0;
      if ((v3 & 0x80) == 0) {
        goto LABEL_41;
      }
    }
    goto LABEL_39;
  }
  if ((v3 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_15:
  unint64_t v5 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v3 & 4) != 0) {
      goto LABEL_19;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v3 & 4) != 0) {
      goto LABEL_19;
    }
  }
LABEL_5:
  if ((v3 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_23:
  unint64_t v7 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v7 + 23) < 0)
  {
    **(unsigned char **)unint64_t v7 = 0;
    *(void *)(v7 + 8) = 0;
    if ((v3 & 0x10) != 0) {
      goto LABEL_27;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    if ((v3 & 0x10) != 0) {
      goto LABEL_27;
    }
  }
LABEL_7:
  if ((v3 & 0x20) == 0) {
    goto LABEL_8;
  }
LABEL_31:
  unint64_t v9 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v9 + 23) < 0)
  {
    **(unsigned char **)unint64_t v9 = 0;
    *(void *)(v9 + 8) = 0;
    if ((v3 & 0x40) != 0) {
      goto LABEL_35;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v9 = 0;
    *(unsigned char *)(v9 + 23) = 0;
    if ((v3 & 0x40) != 0) {
      goto LABEL_35;
    }
  }
LABEL_9:
  if ((v3 & 0x80) == 0) {
    goto LABEL_41;
  }
LABEL_39:
  unint64_t v11 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v11 + 23) < 0)
  {
    **(unsigned char **)unint64_t v11 = 0;
    *(void *)(v11 + 8) = 0;
    if ((v3 & 0x100) == 0) {
      goto LABEL_46;
    }
    goto LABEL_42;
  }
  *(unsigned char *)unint64_t v11 = 0;
  *(unsigned char *)(v11 + 23) = 0;
LABEL_41:
  if ((v3 & 0x100) == 0) {
    goto LABEL_46;
  }
LABEL_42:
  unint64_t v12 = *(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v12 + 23) < 0)
  {
    **(unsigned char **)unint64_t v12 = 0;
    *(void *)(v12 + 8) = 0;
  }
  else
  {
    *(unsigned char *)unint64_t v12 = 0;
    *(unsigned char *)(v12 + 23) = 0;
  }
LABEL_46:
  if ((v3 & 0xFE00) != 0)
  {
    *(void *)(a1 + 152) = 0;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
  }
  if ((v3 & 0xFF0000) != 0)
  {
    *(_OWORD *)(a1 + 188) = 0u;
    *(_OWORD *)(a1 + 160) = 0u;
    *(_OWORD *)(a1 + 176) = 0u;
  }
  if (HIBYTE(v3))
  {
    *(unsigned char *)(a1 + 236) = 0;
    *(_OWORD *)(a1 + 220) = 0u;
    *(_OWORD *)(a1 + 204) = 0u;
  }
  char v14 = *(unsigned char *)(a1 + 8);
  uint64_t v13 = a1 + 8;
  *(_DWORD *)(v13 + 8) = 0;
  if (v14)
  {
    return sub_188B4AC((uint64_t *)v13);
  }
  return result;
}

char *sub_1680D2C(uint64_t a1, char *a2, int32x2_t *a3)
{
  BOOL v40 = a2;
  if (sub_11947B8((uint64_t)a3, &v40, a3[11].i32[1])) {
    return v40;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v7 = v40 + 1;
    unsigned int v8 = *v40;
    if (*v40 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180((uint64_t)v40, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = v40 + 2;
      }
    }
    BOOL v40 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_73;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 48);
        if (!v11)
        {
          unint64_t v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v12 = (void *)*v12;
          }
          sub_16AFD18((uint64_t)v12);
          uint64_t v11 = v13;
          *(void *)(a1 + 48) = v13;
          unint64_t v7 = v40;
        }
        char v14 = sub_16811FC(a3, v11, (unsigned __int8 *)v7);
        goto LABEL_80;
      case 2u:
        if (v8 != 18) {
          goto LABEL_73;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 56);
        if (!v15)
        {
          uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v16 = (void *)*v16;
          }
          uint64_t v15 = sub_1695AD0((uint64_t)v16);
          *(void *)(a1 + 56) = v15;
          unint64_t v7 = v40;
        }
        char v14 = (char *)sub_168128C(a3, v15, (unsigned __int8 *)v7);
        goto LABEL_80;
      case 3u:
        if (v8 != 26) {
          goto LABEL_73;
        }
        int v17 = v7 - 1;
        while (1)
        {
          unsigned int v18 = (unsigned __int8 *)(v17 + 1);
          BOOL v40 = v17 + 1;
          int v19 = *(_DWORD **)(a1 + 40);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 32), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 32) = v20 + 1;
            uint64_t v21 = *(void *)&v19[2 * v20 + 2];
          }
          else
          {
            uint64_t v22 = sub_16956A4(*(void *)(a1 + 24));
            uint64_t v21 = sub_188CDC8(a1 + 24, v22);
            unsigned int v18 = (unsigned __int8 *)v40;
          }
          int v17 = (char *)sub_168131C(a3, v21, v18);
          BOOL v40 = v17;
          if (!v17) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 26) {
            goto LABEL_81;
          }
        }
      case 4u:
        if (v8 != 34) {
          goto LABEL_73;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v23 = *(void *)(a1 + 64);
        if (!v23)
        {
          uint64_t v24 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v24 = (void *)*v24;
          }
          uint64_t v23 = sub_16957CC((uint64_t)v24);
          *(void *)(a1 + 64) = v23;
          unint64_t v7 = v40;
        }
        char v14 = (char *)sub_16813AC(a3, v23, (unsigned __int8 *)v7);
        goto LABEL_80;
      case 5u:
        if (v8 != 42) {
          goto LABEL_73;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v25 = *(void **)(a1 + 72);
        if (!v25)
        {
          uint64_t v26 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v26 = (void *)*v26;
          }
          uint64_t v25 = sub_1695600((uint64_t)v26);
          *(void *)(a1 + 72) = v25;
          unint64_t v7 = v40;
        }
        char v14 = (char *)sub_168143C(a3, (uint64_t)v25, (unsigned __int8 *)v7);
        goto LABEL_80;
      case 6u:
        if (v8 != 50) {
          goto LABEL_73;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v27 = *(void **)(a1 + 80);
        if (!v27)
        {
          unint64_t v28 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v28 = (void *)*v28;
          }
          uint64_t v27 = sub_16954C4((uint64_t)v28);
          *(void *)(a1 + 80) = v27;
          unint64_t v7 = v40;
        }
        char v14 = (char *)sub_16814CC(a3, (uint64_t)v27, (unsigned __int8 *)v7);
        goto LABEL_80;
      case 7u:
        if (v8 != 58) {
          goto LABEL_73;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v29 = *(void **)(a1 + 88);
        if (!v29)
        {
          uint64_t v30 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v30 = (void *)*v30;
          }
          uint64_t v29 = sub_1695F24((uint64_t)v30);
          *(void *)(a1 + 88) = v29;
          unint64_t v7 = v40;
        }
        char v14 = sub_168155C(a3, (uint64_t)v29, (unsigned __int8 *)v7);
        goto LABEL_80;
      case 8u:
        if (v8 != 66) {
          goto LABEL_73;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v31 = *(void *)(a1 + 96);
        if (!v31)
        {
          uint64_t v32 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v32 = (void *)*v32;
          }
          sub_1695FC0((uint64_t)v32);
          uint64_t v31 = v33;
          *(void *)(a1 + 96) = v33;
          unint64_t v7 = v40;
        }
        char v14 = (char *)sub_16815EC(a3, v31, (unsigned __int8 *)v7);
        goto LABEL_80;
      case 9u:
        if (v8 != 74) {
          goto LABEL_73;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v34 = *(void *)(a1 + 104);
        if (!v34)
        {
          uint64_t v35 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v35 = (void *)*v35;
          }
          uint64_t v34 = sub_1535770((uint64_t)v35);
          *(void *)(a1 + 104) = v34;
          unint64_t v7 = v40;
        }
        char v14 = sub_168167C(a3, v34, (unsigned __int8 *)v7);
        goto LABEL_80;
      case 0xAu:
        if (v8 != 82) {
          goto LABEL_73;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        uint64_t v36 = *(void *)(a1 + 112);
        if (!v36)
        {
          unint64_t v37 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v37 = (void *)*v37;
          }
          uint64_t v36 = sub_1697390((uint64_t)v37);
          *(void *)(a1 + 112) = v36;
          unint64_t v7 = v40;
        }
        char v14 = sub_168170C(a3, v36, (unsigned __int8 *)v7);
        goto LABEL_80;
      default:
LABEL_73:
        if (v8) {
          BOOL v38 = (v8 & 7) == 4;
        }
        else {
          BOOL v38 = 1;
        }
        if (!v38)
        {
          if (*v6)
          {
            unint64_t v39 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v39 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v7 = v40;
          }
          char v14 = (char *)sub_1885AC0(v8, v39, v7, a3);
LABEL_80:
          BOOL v40 = v14;
          if (!v14) {
            return 0;
          }
LABEL_81:
          if (sub_11947B8((uint64_t)a3, &v40, a3[11].i32[1])) {
            return v40;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v40;
    }
  }
}

char *sub_16811FC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16A5FEC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_168128C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_168D43C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_168131C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1685B88(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_16813AC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1686958(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_168143C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1685418(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_16814CC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1683C1C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_168155C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1691460(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_16815EC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1691BE0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_168167C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1535170(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_168170C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1696E60(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_168179C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    *unint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    unint64_t v4 = sub_16A6864(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 56);
    *unint64_t v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 88);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unint64_t v12 = v4 + 2;
    }
    unint64_t v4 = sub_168D770(v10, v12, a3);
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *unint64_t v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        int v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        int v17 = v4 + 2;
      }
      unint64_t v4 = sub_1685E60(v15, v17, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v18 = *(void *)(a1 + 64);
    *unint64_t v4 = 34;
    unsigned int v19 = *(_DWORD *)(v18 + 20);
    v4[1] = v19;
    if (v19 > 0x7F) {
      uint64_t v20 = sub_188A9CC(v19, v4 + 1);
    }
    else {
      uint64_t v20 = v4 + 2;
    }
    unint64_t v4 = sub_1686D24(v18, v20, a3);
    if ((v6 & 8) == 0)
    {
LABEL_25:
      if ((v6 & 0x10) == 0) {
        goto LABEL_26;
      }
      goto LABEL_43;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_25;
  }
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v21 = *(void *)(a1 + 72);
  *unint64_t v4 = 42;
  unsigned int v22 = *(_DWORD *)(v21 + 20);
  v4[1] = v22;
  if (v22 > 0x7F) {
    uint64_t v23 = sub_188A9CC(v22, v4 + 1);
  }
  else {
    uint64_t v23 = v4 + 2;
  }
  unint64_t v4 = sub_1685700(v21, v23, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_26:
    if ((v6 & 0x20) == 0) {
      goto LABEL_27;
    }
    goto LABEL_49;
  }
LABEL_43:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v24 = *(void *)(a1 + 80);
  *unint64_t v4 = 50;
  unsigned int v25 = *(_DWORD *)(v24 + 20);
  v4[1] = v25;
  if (v25 > 0x7F) {
    uint64_t v26 = sub_188A9CC(v25, v4 + 1);
  }
  else {
    uint64_t v26 = v4 + 2;
  }
  unint64_t v4 = sub_1683F94(v24, (unint64_t)v26, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_27:
    if ((v6 & 0x40) == 0) {
      goto LABEL_28;
    }
    goto LABEL_55;
  }
LABEL_49:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v27 = *(void *)(a1 + 88);
  *unint64_t v4 = 58;
  unsigned int v28 = *(_DWORD *)(v27 + 20);
  v4[1] = v28;
  if (v28 > 0x7F) {
    uint64_t v29 = sub_188A9CC(v28, v4 + 1);
  }
  else {
    uint64_t v29 = v4 + 2;
  }
  unint64_t v4 = sub_1691788(v27, v29, a3);
  if ((v6 & 0x40) == 0)
  {
LABEL_28:
    if ((v6 & 0x80) == 0) {
      goto LABEL_29;
    }
    goto LABEL_61;
  }
LABEL_55:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v30 = *(void *)(a1 + 96);
  *unint64_t v4 = 66;
  unsigned int v31 = *(_DWORD *)(v30 + 20);
  v4[1] = v31;
  if (v31 > 0x7F) {
    uint64_t v32 = sub_188A9CC(v31, v4 + 1);
  }
  else {
    uint64_t v32 = v4 + 2;
  }
  unint64_t v4 = sub_1692554(v30, v32, a3);
  if ((v6 & 0x80) == 0)
  {
LABEL_29:
    if ((v6 & 0x100) == 0) {
      goto LABEL_73;
    }
    goto LABEL_67;
  }
LABEL_61:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v33 = *(void *)(a1 + 104);
  *unint64_t v4 = 74;
  unsigned int v34 = *(_DWORD *)(v33 + 40);
  v4[1] = v34;
  if (v34 > 0x7F) {
    uint64_t v35 = sub_188A9CC(v34, v4 + 1);
  }
  else {
    uint64_t v35 = v4 + 2;
  }
  unint64_t v4 = sub_15353A0(v33, v35, a3);
  if ((v6 & 0x100) != 0)
  {
LABEL_67:
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v36 = *(void *)(a1 + 112);
    *unint64_t v4 = 82;
    unsigned int v37 = *(_DWORD *)(v36 + 40);
    v4[1] = v37;
    if (v37 > 0x7F) {
      BOOL v38 = sub_188A9CC(v37, v4 + 1);
    }
    else {
      BOOL v38 = v4 + 2;
    }
    unint64_t v4 = sub_1697090(v36, v38, a3);
  }
LABEL_73:
  uint64_t v39 = *(void *)(a1 + 8);
  if ((v39 & 1) == 0) {
    return v4;
  }
  unint64_t v41 = v39 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v41 + 31) < 0)
  {
    uint64_t v42 = *(void **)(v41 + 8);
    uint64_t v43 = *(void *)(v41 + 16);
  }
  else
  {
    uint64_t v42 = (void *)(v41 + 8);
    LODWORD(v43) = *(unsigned __int8 *)(v41 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v43)
  {
    uint64_t v44 = (int)v43;
    memcpy(v4, v42, (int)v43);
    v4 += v44;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v42, v43, v4);
}

uint64_t sub_1681C84(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    unint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    unint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1686044(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v8) {
    goto LABEL_19;
  }
  if (v8)
  {
    uint64_t v13 = sub_16A6F10(*(void *)(a1 + 48));
    v2 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_25;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v14 = sub_168D9E0(*(void *)(a1 + 56));
  v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t v15 = sub_1686F28(*(void *)(a1 + 64));
  v2 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) == 0)
  {
LABEL_14:
    if ((v8 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v16 = sub_16858CC(*(void *)(a1 + 72));
  v2 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x10) == 0)
  {
LABEL_15:
    if ((v8 & 0x20) == 0) {
      goto LABEL_16;
    }
LABEL_28:
    uint64_t v18 = sub_1691934(*(void *)(a1 + 88));
    v2 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 0x40) == 0)
    {
LABEL_17:
      if ((v8 & 0x80) == 0) {
        goto LABEL_19;
      }
      goto LABEL_18;
    }
    goto LABEL_29;
  }
LABEL_27:
  uint64_t v17 = sub_1684160(*(void *)(a1 + 80));
  v2 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_16:
  if ((v8 & 0x40) == 0) {
    goto LABEL_17;
  }
LABEL_29:
  uint64_t v19 = sub_1692F34(*(void *)(a1 + 96));
  v2 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x80) != 0)
  {
LABEL_18:
    uint64_t v9 = sub_15354E4(*(void *)(a1 + 104));
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_19:
  if ((v8 & 0x100) != 0)
  {
    uint64_t v10 = sub_16971D4(*(void *)(a1 + 112));
    v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v20 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v2 += v21;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_1681F10(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_16B462C((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v9) {
    goto LABEL_13;
  }
  if (v9)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v10 = *(void *)(a1 + 48);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (void *)*v12;
      }
      sub_16AFD18((uint64_t)v12);
      *(void *)(a1 + 48) = v10;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v13 = &off_2544070;
    }
    sub_16822BC(v10, (uint64_t)v13);
    if ((v9 & 2) == 0)
    {
LABEL_7:
      if ((v9 & 4) == 0) {
        goto LABEL_8;
      }
      goto LABEL_31;
    }
  }
  else if ((v9 & 2) == 0)
  {
    goto LABEL_7;
  }
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v14 = *(void *)(a1 + 56);
  if (!v14)
  {
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (void *)*v16;
    }
    uint64_t v14 = sub_1695AD0((uint64_t)v16);
    *(void *)(a1 + 56) = v14;
  }
  if (*(void *)(a2 + 56)) {
    uint64_t v17 = *(uint64_t (****)())(a2 + 56);
  }
  else {
    uint64_t v17 = &off_25438A8;
  }
  sub_168254C(v14, (uint64_t)v17);
  if ((v9 & 4) == 0)
  {
LABEL_8:
    if ((v9 & 8) == 0) {
      goto LABEL_9;
    }
    goto LABEL_39;
  }
LABEL_31:
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v18 = *(void *)(a1 + 64);
  if (!v18)
  {
    uint64_t v19 = *(void *)(a1 + 8);
    unint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
    if (v19) {
      unint64_t v20 = (void *)*v20;
    }
    uint64_t v18 = sub_16957CC((uint64_t)v20);
    *(void *)(a1 + 64) = v18;
  }
  if (*(void *)(a2 + 64)) {
    uint64_t v21 = *(uint64_t (****)())(a2 + 64);
  }
  else {
    uint64_t v21 = &off_2543600;
  }
  sub_16826E4(v18, (uint64_t)v21);
  if ((v9 & 8) == 0)
  {
LABEL_9:
    if ((v9 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_47;
  }
LABEL_39:
  *(_DWORD *)(a1 + 16) |= 8u;
  unsigned int v22 = *(void **)(a1 + 72);
  if (!v22)
  {
    uint64_t v23 = *(void *)(a1 + 8);
    uint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      uint64_t v24 = (void *)*v24;
    }
    unsigned int v22 = sub_1695600((uint64_t)v24);
    *(void *)(a1 + 72) = v22;
  }
  if (*(void *)(a2 + 72)) {
    unsigned int v25 = *(uint64_t (****)())(a2 + 72);
  }
  else {
    unsigned int v25 = &off_2543590;
  }
  sub_1682864((uint64_t)v22, (uint64_t)v25);
  if ((v9 & 0x10) == 0)
  {
LABEL_10:
    if ((v9 & 0x20) == 0) {
      goto LABEL_11;
    }
    goto LABEL_55;
  }
LABEL_47:
  *(_DWORD *)(a1 + 16) |= 0x10u;
  uint64_t v26 = *(void **)(a1 + 80);
  if (!v26)
  {
    uint64_t v27 = *(void *)(a1 + 8);
    unsigned int v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
    if (v27) {
      unsigned int v28 = (void *)*v28;
    }
    uint64_t v26 = sub_16954C4((uint64_t)v28);
    *(void *)(a1 + 80) = v26;
  }
  if (*(void *)(a2 + 80)) {
    uint64_t v29 = *(uint64_t (****)())(a2 + 80);
  }
  else {
    uint64_t v29 = &off_25434F0;
  }
  sub_16829C0((uint64_t)v26, (uint64_t)v29);
  if ((v9 & 0x20) == 0)
  {
LABEL_11:
    if ((v9 & 0x40) == 0) {
      goto LABEL_12;
    }
    goto LABEL_63;
  }
LABEL_55:
  *(_DWORD *)(a1 + 16) |= 0x20u;
  uint64_t v30 = *(void **)(a1 + 88);
  if (!v30)
  {
    uint64_t v31 = *(void *)(a1 + 8);
    uint64_t v32 = (void *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
    if (v31) {
      uint64_t v32 = (void *)*v32;
    }
    uint64_t v30 = sub_1695F24((uint64_t)v32);
    *(void *)(a1 + 88) = v30;
  }
  if (*(void *)(a2 + 88)) {
    uint64_t v33 = *(uint64_t (****)())(a2 + 88);
  }
  else {
    uint64_t v33 = &off_25439D8;
  }
  sub_1682B1C((uint64_t)v30, (uint64_t)v33);
  if ((v9 & 0x40) != 0)
  {
LABEL_63:
    *(_DWORD *)(a1 + 16) |= 0x40u;
    unsigned int v34 = *(std::string **)(a1 + 96);
    if (!v34)
    {
      uint64_t v35 = *(void *)(a1 + 8);
      uint64_t v36 = (void *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
      if (v35) {
        uint64_t v36 = (void *)*v36;
      }
      sub_1695FC0((uint64_t)v36);
      *(void *)(a1 + 96) = v34;
    }
    if (*(void *)(a2 + 96)) {
      unsigned int v37 = *(uint64_t (****)())(a2 + 96);
    }
    else {
      unsigned int v37 = &off_2543A10;
    }
    sub_1682C40(v34, (uint64_t)v37);
    if ((v9 & 0x80) != 0) {
      goto LABEL_71;
    }
LABEL_13:
    if ((v9 & 0x100) == 0) {
      goto LABEL_87;
    }
    goto LABEL_79;
  }
LABEL_12:
  if ((v9 & 0x80) == 0) {
    goto LABEL_13;
  }
LABEL_71:
  *(_DWORD *)(a1 + 16) |= 0x80u;
  BOOL v38 = *(std::string **)(a1 + 104);
  if (!v38)
  {
    uint64_t v39 = *(void *)(a1 + 8);
    BOOL v40 = (void *)(v39 & 0xFFFFFFFFFFFFFFFCLL);
    if (v39) {
      BOOL v40 = (void *)*v40;
    }
    BOOL v38 = (std::string *)sub_1535770((uint64_t)v40);
    *(void *)(a1 + 104) = v38;
  }
  if (*(void *)(a2 + 104)) {
    unint64_t v41 = *(uint64_t (****)())(a2 + 104);
  }
  else {
    unint64_t v41 = &off_253CE50;
  }
  sub_1535594(v38, (uint64_t)v41);
  if ((v9 & 0x100) != 0)
  {
LABEL_79:
    *(_DWORD *)(a1 + 16) |= 0x100u;
    uint64_t v42 = *(std::string **)(a1 + 112);
    if (!v42)
    {
      uint64_t v43 = *(void *)(a1 + 8);
      uint64_t v44 = (void *)(v43 & 0xFFFFFFFFFFFFFFFCLL);
      if (v43) {
        uint64_t v44 = (void *)*v44;
      }
      uint64_t v42 = (std::string *)sub_1697390((uint64_t)v44);
      *(void *)(a1 + 112) = v42;
    }
    if (*(void *)(a2 + 112)) {
      int v45 = *(uint64_t (****)())(a2 + 112);
    }
    else {
      int v45 = &off_2543B68;
    }
    sub_16830C0(v42, (uint64_t)v45);
  }
LABEL_87:
  uint64_t v46 = *(void *)(a2 + 8);
  if (v46)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v46 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_16822BC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_16B55B8((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_16B5644((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v14)
  {
    if (v14)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v16 = *(std::string **)(a1 + 72);
      if (!v16)
      {
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          uint64_t v18 = (void *)*v18;
        }
        uint64_t v16 = (std::string *)sub_16AF91C((uint64_t)v18);
        *(void *)(a1 + 72) = v16;
      }
      if (*(void *)(a2 + 72)) {
        uint64_t v19 = *(uint64_t (****)())(a2 + 72);
      }
      else {
        uint64_t v19 = &off_2543F50;
      }
      sub_16A2EFC(v16, (uint64_t)v19);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_44;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    unint64_t v20 = *(std::string **)(a1 + 80);
    if (!v20)
    {
      uint64_t v21 = *(void *)(a1 + 8);
      unsigned int v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
      if (v21) {
        unsigned int v22 = (void *)*v22;
      }
      unint64_t v20 = (std::string *)sub_16AFAA8((uint64_t)v22);
      *(void *)(a1 + 80) = v20;
    }
    if (*(void *)(a2 + 80)) {
      uint64_t v23 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      uint64_t v23 = &off_2543F78;
    }
    sub_16A4538(v20, (uint64_t)v23);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_45;
    }
LABEL_44:
    *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
    if ((v14 & 8) == 0)
    {
LABEL_12:
      if ((v14 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_46;
    }
LABEL_45:
    *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
    if ((v14 & 0x10) == 0)
    {
LABEL_13:
      if ((v14 & 0x20) == 0) {
        goto LABEL_14;
      }
      goto LABEL_47;
    }
LABEL_46:
    *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
    if ((v14 & 0x20) == 0)
    {
LABEL_14:
      if ((v14 & 0x40) == 0) {
        goto LABEL_15;
      }
      goto LABEL_48;
    }
LABEL_47:
    *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
    if ((v14 & 0x40) == 0)
    {
LABEL_15:
      if ((v14 & 0x80) == 0)
      {
LABEL_17:
        *(_DWORD *)(a1 + 16) |= v14;
        goto LABEL_18;
      }
LABEL_16:
      *(_DWORD *)(a1 + 108) = *(_DWORD *)(a2 + 108);
      goto LABEL_17;
    }
LABEL_48:
    *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
    if ((v14 & 0x80) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_18:
  if ((v14 & 0x700) == 0) {
    goto LABEL_24;
  }
  if ((v14 & 0x100) == 0)
  {
    if ((v14 & 0x200) == 0) {
      goto LABEL_21;
    }
LABEL_51:
    *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
    if ((v14 & 0x400) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  if ((v14 & 0x200) != 0) {
    goto LABEL_51;
  }
LABEL_21:
  if ((v14 & 0x400) != 0) {
LABEL_22:
  }
    *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
LABEL_23:
  *(_DWORD *)(a1 + 16) |= v14;
LABEL_24:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_168254C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_188FB98(a1 + 16, v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    int v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_10E4FFC((uint64_t *)(a1 + 40), v11, v10, v9, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v12 = *(_DWORD *)(a1 + 48) + v9;
    *(_DWORD *)(a1 + 48) = v12;
    uint64_t v13 = *(int **)(a1 + 56);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 72);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 80) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 64, *(_DWORD *)(a2 + 72));
    sub_16B48D8((uint64_t *)(a1 + 64), v16, v15, v14, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v17 = *(_DWORD *)(a1 + 72) + v14;
    *(_DWORD *)(a1 + 72) = v17;
    uint64_t v18 = *(int **)(a1 + 80);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  uint64_t v19 = *(void *)(a2 + 8);
  if (v19)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v19 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_16826E4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(a1 + 24, v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 48), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          *(_DWORD *)(a1 + 16) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v14 = *(void *)(a1 + 56);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = sub_169572C((uint64_t)v16);
      *(void *)(a1 + 56) = v14;
    }
    if (*(void *)(a2 + 56)) {
      int v17 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      int v17 = &off_25435D0;
    }
    sub_1686764(v14, (uint64_t)v17);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_1682864(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_16B4744((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      uint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (uint64_t *)*v12;
      }
      sub_1881DF4((std::string **)(a1 + 48), v10, v12);
    }
    if ((v9 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v13 = *(void **)(a1 + 56);
      if (!v13)
      {
        uint64_t v14 = *(void *)(a1 + 8);
        uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v15 = (void *)*v15;
        }
        uint64_t v13 = sub_166DA00((uint64_t)v15);
        *(void *)(a1 + 56) = v13;
      }
      if (*(void *)(a2 + 56)) {
        uint64_t v16 = *(uint64_t (****)())(a2 + 56);
      }
      else {
        uint64_t v16 = &off_2542CE8;
      }
      sub_166B2C0((uint64_t)v13, (uint64_t)v16);
    }
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_16829C0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_16B46B8((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      uint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (uint64_t *)*v12;
      }
      sub_1881DF4((std::string **)(a1 + 48), v10, v12);
    }
    if ((v9 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v13 = *(std::string **)(a1 + 56);
      if (!v13)
      {
        uint64_t v14 = *(void *)(a1 + 8);
        uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v15 = (void *)*v15;
        }
        sub_1695568((uint64_t)v15);
        *(void *)(a1 + 56) = v13;
      }
      if (*(void *)(a2 + 56)) {
        uint64_t v16 = *(uint64_t (****)())(a2 + 56);
      }
      else {
        uint64_t v16 = &off_2543530;
      }
      sub_1684290(v13, (uint64_t)v16);
    }
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_1682B1C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_16B4A6C((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v9 = *(uint64_t (****)())(a2 + 48);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v10 = *(std::string **)(a1 + 48);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_1695E84((uint64_t)v12);
      *(void *)(a1 + 48) = v10;
      int v9 = *(uint64_t (****)())(a2 + 48);
    }
    if (v9) {
      uint64_t v13 = v9;
    }
    else {
      uint64_t v13 = &off_25439A8;
    }
    sub_169127C(v10, (uint64_t)v13);
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_1682C40(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  unsigned int v9 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v9) {
    goto LABEL_38;
  }
  if (v9)
  {
    uint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2], v10, v12);
    if ((v9 & 2) == 0)
    {
LABEL_7:
      if ((v9 & 4) == 0) {
        goto LABEL_8;
      }
      goto LABEL_20;
    }
  }
  else if ((v9 & 2) == 0)
  {
    goto LABEL_7;
  }
  uint64_t v13 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
  std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
  uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
  if (v14) {
    uint64_t v15 = (uint64_t *)*v15;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v13, v15);
  if ((v9 & 4) == 0)
  {
LABEL_8:
    if ((v9 & 8) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_20:
  uint64_t v16 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
  std::string::size_type v17 = v3->__r_.__value_.__l.__size_;
  uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
  if (v17) {
    uint64_t v18 = (uint64_t *)*v18;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__r.__words[2], v16, v18);
  if ((v9 & 8) == 0)
  {
LABEL_9:
    if ((v9 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_23:
  uint64_t v19 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
  std::string::size_type v20 = v3->__r_.__value_.__l.__size_;
  uint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
  if (v20) {
    uint64_t v21 = (uint64_t *)*v21;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[3], v19, v21);
  if ((v9 & 0x10) == 0)
  {
LABEL_10:
    if ((v9 & 0x20) == 0) {
      goto LABEL_11;
    }
LABEL_29:
    unsigned int v25 = (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x20u;
    std::string::size_type v26 = v3->__r_.__value_.__l.__size_;
    uint64_t v27 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
    if (v26) {
      uint64_t v27 = (uint64_t *)*v27;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__r.__words[2], v25, v27);
    if ((v9 & 0x40) == 0)
    {
LABEL_12:
      if ((v9 & 0x80) == 0) {
        goto LABEL_38;
      }
      goto LABEL_35;
    }
    goto LABEL_32;
  }
LABEL_26:
  unsigned int v22 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
  std::string::size_type v23 = v3->__r_.__value_.__l.__size_;
  uint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
  if (v23) {
    uint64_t v24 = (uint64_t *)*v24;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__l.__size_, v22, v24);
  if ((v9 & 0x20) != 0) {
    goto LABEL_29;
  }
LABEL_11:
  if ((v9 & 0x40) == 0) {
    goto LABEL_12;
  }
LABEL_32:
  unsigned int v28 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x40u;
  std::string::size_type v29 = v3->__r_.__value_.__l.__size_;
  uint64_t v30 = (uint64_t *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
  if (v29) {
    uint64_t v30 = (uint64_t *)*v30;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[4], v28, v30);
  if ((v9 & 0x80) != 0)
  {
LABEL_35:
    uint64_t v31 = (long long *)(*(void *)(a2 + 104) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x80u;
    std::string::size_type v32 = v3->__r_.__value_.__l.__size_;
    uint64_t v33 = (uint64_t *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
    if (v32) {
      uint64_t v33 = (uint64_t *)*v33;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[4].__r_.__value_.__l.__size_, v31, v33);
  }
LABEL_38:
  if ((v9 & 0xFF00) == 0) {
    goto LABEL_49;
  }
  if ((v9 & 0x100) != 0)
  {
    uint64_t v35 = (long long *)(*(void *)(a2 + 112) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x100u;
    std::string::size_type v36 = v3->__r_.__value_.__l.__size_;
    unsigned int v37 = (uint64_t *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
    if (v36) {
      unsigned int v37 = (uint64_t *)*v37;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[4].__r_.__value_.__r.__words[2], v35, v37);
    if ((v9 & 0x200) == 0)
    {
LABEL_41:
      if ((v9 & 0x400) == 0) {
        goto LABEL_42;
      }
      goto LABEL_78;
    }
  }
  else if ((v9 & 0x200) == 0)
  {
    goto LABEL_41;
  }
  LODWORD(v3[5].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 120);
  if ((v9 & 0x400) == 0)
  {
LABEL_42:
    if ((v9 & 0x800) == 0) {
      goto LABEL_43;
    }
    goto LABEL_79;
  }
LABEL_78:
  HIDWORD(v3[5].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 124);
  if ((v9 & 0x800) == 0)
  {
LABEL_43:
    if ((v9 & 0x1000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_80;
  }
LABEL_79:
  v3[5].__r_.__value_.__l.__size_ = *(void *)(a2 + 128);
  if ((v9 & 0x1000) == 0)
  {
LABEL_44:
    if ((v9 & 0x2000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_81;
  }
LABEL_80:
  v3[5].__r_.__value_.__r.__words[2] = *(void *)(a2 + 136);
  if ((v9 & 0x2000) == 0)
  {
LABEL_45:
    if ((v9 & 0x4000) == 0) {
      goto LABEL_46;
    }
LABEL_82:
    LODWORD(v3[6].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 152);
    if ((v9 & 0x8000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_47;
  }
LABEL_81:
  v3[6].__r_.__value_.__r.__words[0] = *(void *)(a2 + 144);
  if ((v9 & 0x4000) != 0) {
    goto LABEL_82;
  }
LABEL_46:
  if ((v9 & 0x8000) != 0) {
LABEL_47:
  }
    HIDWORD(v3[6].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 156);
LABEL_48:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
LABEL_49:
  if ((v9 & 0xFF0000) == 0) {
    goto LABEL_60;
  }
  if ((v9 & 0x10000) != 0)
  {
    LODWORD(v3[6].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 160);
    if ((v9 & 0x20000) == 0)
    {
LABEL_52:
      if ((v9 & 0x40000) == 0) {
        goto LABEL_53;
      }
      goto LABEL_86;
    }
  }
  else if ((v9 & 0x20000) == 0)
  {
    goto LABEL_52;
  }
  HIDWORD(v3[6].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 164);
  if ((v9 & 0x40000) == 0)
  {
LABEL_53:
    if ((v9 & 0x80000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_87;
  }
LABEL_86:
  LODWORD(v3[7].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 168);
  if ((v9 & 0x80000) == 0)
  {
LABEL_54:
    if ((v9 & 0x100000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_88;
  }
LABEL_87:
  HIDWORD(v3[7].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 172);
  if ((v9 & 0x100000) == 0)
  {
LABEL_55:
    if ((v9 & 0x200000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_89;
  }
LABEL_88:
  v3[7].__r_.__value_.__l.__size_ = *(void *)(a2 + 176);
  if ((v9 & 0x200000) == 0)
  {
LABEL_56:
    if ((v9 & 0x400000) == 0) {
      goto LABEL_57;
    }
LABEL_90:
    v3[8].__r_.__value_.__r.__words[0] = *(void *)(a2 + 192);
    if ((v9 & 0x800000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_58;
  }
LABEL_89:
  v3[7].__r_.__value_.__r.__words[2] = *(void *)(a2 + 184);
  if ((v9 & 0x400000) != 0) {
    goto LABEL_90;
  }
LABEL_57:
  if ((v9 & 0x800000) != 0) {
LABEL_58:
  }
    LODWORD(v3[8].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 200);
LABEL_59:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
LABEL_60:
  if (!HIBYTE(v9)) {
    goto LABEL_70;
  }
  if ((v9 & 0x1000000) != 0)
  {
    HIDWORD(v3[8].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 204);
    if ((v9 & 0x2000000) == 0)
    {
LABEL_63:
      if ((v9 & 0x4000000) == 0) {
        goto LABEL_64;
      }
      goto LABEL_94;
    }
  }
  else if ((v9 & 0x2000000) == 0)
  {
    goto LABEL_63;
  }
  LODWORD(v3[8].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 208);
  if ((v9 & 0x4000000) == 0)
  {
LABEL_64:
    if ((v9 & 0x8000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_95;
  }
LABEL_94:
  HIDWORD(v3[8].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 212);
  if ((v9 & 0x8000000) == 0)
  {
LABEL_65:
    if ((v9 & 0x10000000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_96;
  }
LABEL_95:
  v3[9].__r_.__value_.__r.__words[0] = *(void *)(a2 + 216);
  if ((v9 & 0x10000000) == 0)
  {
LABEL_66:
    if ((v9 & 0x20000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_97;
  }
LABEL_96:
  LODWORD(v3[9].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 224);
  if ((v9 & 0x20000000) == 0)
  {
LABEL_67:
    if ((v9 & 0x40000000) == 0) {
      goto LABEL_68;
    }
LABEL_98:
    LODWORD(v3[9].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 232);
    if ((v9 & 0x80000000) == 0) {
      goto LABEL_69;
    }
LABEL_99:
    v3[9].__r_.__value_.__s.__data_[20] = *(unsigned char *)(a2 + 236);
    goto LABEL_69;
  }
LABEL_97:
  HIDWORD(v3[9].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 228);
  if ((v9 & 0x40000000) != 0) {
    goto LABEL_98;
  }
LABEL_68:
  if ((v9 & 0x80000000) != 0) {
    goto LABEL_99;
  }
LABEL_69:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
LABEL_70:
  uint64_t v34 = *(void *)(a2 + 8);
  if (v34)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v34 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_16830C0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = (std::string *)sub_16B4C90((uint64_t *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1683190(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    if (!sub_1683288(*(void *)(a1 + 56))) {
      return 0;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) != 0)
  {
    uint64_t v3 = *(void *)(a1 + 64);
    if ((*(unsigned char *)(v3 + 16) & 2) != 0)
    {
      if (!sub_167C784(*(void *)(v3 + 56) + 16)) {
        return 0;
      }
      int v2 = *(_DWORD *)(a1 + 16);
    }
  }
  if ((v2 & 8) != 0)
  {
    uint64_t v4 = *(void *)(a1 + 72);
    uint64_t v5 = *(unsigned int *)(v4 + 32);
    while ((int)v5 >= 1)
    {
      uint64_t v6 = v5 - 1;
      char v7 = sub_12DA018(*(void *)(*(void *)(v4 + 40) + 8 * v5));
      uint64_t v5 = v6;
      if ((v7 & 1) == 0) {
        return 0;
      }
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x10) == 0) {
    goto LABEL_17;
  }
  if (!sub_168448C(*(void *)(a1 + 80) + 24)) {
    return 0;
  }
  int v2 = *(_DWORD *)(a1 + 16);
LABEL_17:
  if ((v2 & 0x20) == 0) {
    return 1;
  }
  uint64_t v10 = *(void *)(a1 + 88);
  uint64_t v11 = *(unsigned int *)(v10 + 32);
  do
  {
    BOOL v8 = (int)v11 < 1;
    if ((int)v11 < 1) {
      break;
    }
    uint64_t v12 = v11 - 1;
    char v13 = sub_167C784(*(void *)(*(void *)(v10 + 40) + 8 * v11) + 48);
    uint64_t v11 = v12;
  }
  while ((v13 & 1) != 0);
  return v8;
}

BOOL sub_1683288(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 48);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_15B0F18(*(void *)(*(void *)(a1 + 56) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v6 = *(unsigned int *)(a1 + 72);
  do
  {
    BOOL v5 = (int)v6 < 1;
    if ((int)v6 < 1) {
      break;
    }
    uint64_t v7 = v6 - 1;
    char v8 = sub_12FEF20(*(void *)(*(void *)(a1 + 80) + 8 * v6));
    uint64_t v6 = v7;
  }
  while ((v8 & 1) != 0);
  return v5;
}

uint64_t sub_1683308(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_167C784(*(void *)(a1 + 56) + 16);
  if (result) {
    return 1;
  }
  return result;
}

BOOL sub_1683338(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_12DA018(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

uint64_t sub_1683390(uint64_t a1)
{
  return sub_168448C(a1 + 24);
}

BOOL sub_1683398(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_167C784(*(void *)(*(void *)(a1 + 40) + 8 * v2) + 48);
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_16833F4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.Incident.Debug");
}

void *sub_1683404(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_11DB7D4(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1683484(void *a1)
{
  sub_1683404(a1);

  operator delete();
}

unsigned char *sub_16834BC(unsigned char *result)
{
  uint64_t v1 = result;
  uint64_t v2 = *((unsigned int *)result + 6);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*((void *)result + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B09D0(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 6) = 0;
  }
  char v6 = v1[8];
  char v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return (unsigned char *)sub_188B4AC(v5);
  }
  return result;
}

char *sub_1683538(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    char v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          char v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          std::string::size_type v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_15C1918(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            char v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = sub_1198F14(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_16836D8(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_15B0C0C(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    std::string::size_type v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    std::string::size_type v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_168381C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B0D90(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void sub_16838CC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_10E4FFC((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_168399C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_15B0F18(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_16839F4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.Incident.DebugPolyline");
}

uint64_t sub_1683A04(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  char v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_25434F0)
  {
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_1684528(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_16B3A04((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1683ADC(uint64_t a1)
{
  sub_1683A04(a1);

  operator delete();
}

uint64_t sub_1683B14(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) != 0)
  {
    if ((v1 & 1) == 0)
    {
      if ((v1 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_11:
      unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v3 + 23) < 0)
      {
        **(unsigned char **)unint64_t v3 = 0;
        *(void *)(v3 + 8) = 0;
        if ((v1 & 4) != 0) {
          goto LABEL_15;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v3 = 0;
        *(unsigned char *)(v3 + 23) = 0;
        if ((v1 & 4) != 0) {
          goto LABEL_15;
        }
      }
LABEL_5:
      if ((v1 & 8) == 0) {
        goto LABEL_22;
      }
LABEL_19:
      unint64_t v5 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v5 + 23) < 0)
      {
        **(unsigned char **)unint64_t v5 = 0;
        *(void *)(v5 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v5 = 0;
        *(unsigned char *)(v5 + 23) = 0;
      }
      goto LABEL_22;
    }
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_11;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_11;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_15:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      if ((v1 & 8) == 0) {
        goto LABEL_22;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v1 & 8) == 0) {
        goto LABEL_22;
      }
    }
    goto LABEL_19;
  }
LABEL_22:
  if ((v1 & 0xF0) != 0)
  {
    *(void *)(a1 + 56) = 0;
    *(void *)(a1 + 64) = 0;
  }
  if ((v1 & 0x1F00) != 0)
  {
    *(void *)(a1 + 72) = 0;
    *(void *)(a1 + 80) = 0;
    *(_DWORD *)(a1 + 88) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v7) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1683C1C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v28 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
    return *(void *)v28;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = (unsigned __int8 *)(*(void *)v28 + 1);
    unsigned int v8 = **(unsigned char **)v28;
    if ((char)**(unsigned char **)v28 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        char v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v28, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = (unsigned __int8 *)(*(void *)v28 + 2);
      }
    }
    *(void *)unsigned int v28 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 6) {
      break;
    }
    if (v11 == 5)
    {
      if (v8 != 42) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v22 = *(void *)(a1 + 8);
      std::string::size_type v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        std::string::size_type v23 = (uint64_t *)*v23;
      }
      uint64_t v24 = (std::string *)sub_1880F84((void *)(a1 + 48), v23);
      uint64_t v15 = (uint64_t)sub_188C244(v24, *(char **)v28, (uint64_t)a3);
    }
    else
    {
      if (v11 != 1 || v8 != 10) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v25 = *(void *)(a1 + 56);
      if (!v25)
      {
        std::string::size_type v26 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          std::string::size_type v26 = (void *)*v26;
        }
        sub_1695568((uint64_t)v26);
        uint64_t v25 = v27;
        *(void *)(a1 + 56) = v27;
        char v7 = *(unsigned __int8 **)v28;
      }
      uint64_t v15 = sub_1683E74(a3, v25, v7);
    }
LABEL_40:
    *(void *)unsigned int v28 = v15;
    if (!v15) {
      goto LABEL_46;
    }
LABEL_41:
    if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
      return *(void *)v28;
    }
  }
  if (v8 == 50)
  {
    uint64_t v16 = (char *)(v7 - 1);
    while (1)
    {
      uint64_t v17 = (unsigned __int8 *)(v16 + 1);
      *(void *)unsigned int v28 = v16 + 1;
      uint64_t v18 = *(_DWORD **)(a1 + 40);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 32) = v19 + 1;
        uint64_t v20 = *(void *)&v18[2 * v19 + 2];
      }
      else
      {
        uint64_t v21 = sub_1695424(*(void *)(a1 + 24));
        uint64_t v20 = sub_188CDC8(a1 + 24, v21);
        uint64_t v17 = *(unsigned __int8 **)v28;
      }
      uint64_t v16 = sub_1683F04(a3, v20, v17);
      *(void *)unsigned int v28 = v16;
      if (!v16) {
        goto LABEL_46;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 50) {
        goto LABEL_41;
      }
    }
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      std::string::size_type v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      std::string::size_type v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v7 = *(unsigned __int8 **)v28;
    }
    uint64_t v15 = (uint64_t)sub_1885AC0(v8, v14, (char *)v7, a3);
    goto LABEL_40;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v28;
  }
LABEL_46:
  *(void *)unsigned int v28 = 0;
  return *(void *)v28;
}

uint64_t sub_1683E74(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1684640(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1683F04(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1683538(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1683F94(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 56);
    *unint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    unint64_t v4 = sub_1684B34(v7, v9, a3);
  }
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *unint64_t v4 = 50;
      unsigned int v13 = *(_DWORD *)(v12 + 40);
      v4[1] = v13;
      if (v13 > 0x7F) {
        std::string::size_type v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        std::string::size_type v14 = v4 + 2;
      }
      unint64_t v4 = sub_16836D8(v12, v14, a3);
    }
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    uint64_t v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    uint64_t v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_1684160(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    unint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    unint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_168381C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      uint64_t v12 = sub_1685010(*(void *)(a1 + 56));
      v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v2 += v16;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1684290(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_30;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_33;
    }
LABEL_30:
    uint64_t v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    unint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      unint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_36;
    }
LABEL_33:
    uint64_t v16 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::size_type v17 = v3->__r_.__value_.__l.__size_;
    uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2], v16, v18);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_37;
    }
LABEL_36:
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_38;
    }
LABEL_37:
    HIDWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 60);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      HIDWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 68);
      goto LABEL_11;
    }
LABEL_38:
    LODWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v4 & 0x1F00) == 0) {
    goto LABEL_20;
  }
  if ((v4 & 0x100) != 0)
  {
    LODWORD(v3[3].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 72);
    if ((v4 & 0x200) == 0)
    {
LABEL_15:
      if ((v4 & 0x400) == 0) {
        goto LABEL_16;
      }
      goto LABEL_42;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_15;
  }
  HIDWORD(v3[3].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 76);
  if ((v4 & 0x400) == 0)
  {
LABEL_16:
    if ((v4 & 0x800) == 0) {
      goto LABEL_17;
    }
LABEL_43:
    HIDWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 84);
    if ((v4 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
LABEL_42:
  LODWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 80);
  if ((v4 & 0x800) != 0) {
    goto LABEL_43;
  }
LABEL_17:
  if ((v4 & 0x1000) != 0) {
LABEL_18:
  }
    LODWORD(v3[3].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 88);
LABEL_19:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
LABEL_20:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_168448C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 >= 1)
  {
    do
    {
      uint64_t v3 = v1--;
      uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * v1 + 8);
      uint64_t v5 = *(unsigned int *)(v4 + 24);
      while ((int)v5 >= 1)
      {
        uint64_t v6 = v5 - 1;
        char v7 = sub_15B0F18(*(void *)(*(void *)(v4 + 32) + 8 * v5));
        uint64_t v5 = v6;
        if ((v7 & 1) == 0) {
          return 0;
        }
      }
    }
    while (v3 >= 2);
  }
  return 1;
}

void *sub_1684518@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.Incident.DebugLocation");
}

uint64_t sub_1684528(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_13;
    }
  }
  else if (v4)
  {
    goto LABEL_13;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_13:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1684608(uint64_t a1)
{
  sub_1684528(a1);

  operator delete();
}

uint64_t sub_1684640(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v56 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v56, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = (char *)(*(void *)v56 + 1);
    unsigned int v9 = **(unsigned char **)v56;
    if ((char)**(unsigned char **)v56 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180(*(uint64_t *)v56, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (char *)(*(void *)v56 + 2);
      }
    }
    *(void *)uint64_t v56 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_67;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        std::string::size_type v14 = (void *)(a1 + 24);
        goto LABEL_34;
      case 2u:
        if (v9 != 21) {
          goto LABEL_67;
        }
        int v16 = *(_DWORD *)v8;
        unint64_t v15 = v8 + 4;
        v5 |= 0x10u;
        *(_DWORD *)(a1 + 56) = v16;
        goto LABEL_64;
      case 3u:
        if (v9 != 29) {
          goto LABEL_67;
        }
        int v17 = *(_DWORD *)v8;
        unint64_t v15 = v8 + 4;
        v5 |= 0x20u;
        *(_DWORD *)(a1 + 60) = v17;
        goto LABEL_64;
      case 4u:
        if (v9 != 34) {
          goto LABEL_67;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        std::string::size_type v14 = (void *)(a1 + 32);
        goto LABEL_34;
      case 5u:
        if (v9 != 40) {
          goto LABEL_67;
        }
        v5 |= 0x40u;
        uint64_t v20 = v8 + 1;
        LODWORD(v19) = *v8;
        if ((v19 & 0x80) == 0) {
          goto LABEL_25;
        }
        int v21 = *v20;
        uint64_t v19 = v19 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v44 = sub_188C138((uint64_t)v8, v19);
          *(void *)uint64_t v56 = v44;
          *(_DWORD *)(a1 + 64) = v45;
          if (!v44) {
            goto LABEL_89;
          }
        }
        else
        {
          uint64_t v20 = v8 + 2;
LABEL_25:
          *(void *)uint64_t v56 = v20;
          *(_DWORD *)(a1 + 64) = v19;
        }
        goto LABEL_65;
      case 6u:
        if (v9 != 50) {
          goto LABEL_67;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v22 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        std::string::size_type v14 = (void *)(a1 + 40);
        goto LABEL_34;
      case 7u:
        if (v9 != 58) {
          goto LABEL_67;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v23 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
        if (v23) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        std::string::size_type v14 = (void *)(a1 + 48);
LABEL_34:
        uint64_t v24 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v25 = (void *)sub_188C244(v24, *(char **)v56, (uint64_t)a3);
        goto LABEL_35;
      case 8u:
        if (v9 != 64) {
          goto LABEL_67;
        }
        v5 |= 0x80u;
        uint64_t v27 = v8 + 1;
        LODWORD(v26) = *v8;
        if ((v26 & 0x80) == 0) {
          goto LABEL_41;
        }
        int v28 = *v27;
        uint64_t v26 = v26 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          uint64_t v46 = sub_188C138((uint64_t)v8, v26);
          *(void *)uint64_t v56 = v46;
          *(_DWORD *)(a1 + 68) = v47;
          if (!v46) {
            goto LABEL_89;
          }
        }
        else
        {
          uint64_t v27 = v8 + 2;
LABEL_41:
          *(void *)uint64_t v56 = v27;
          *(_DWORD *)(a1 + 68) = v26;
        }
        goto LABEL_65;
      case 9u:
        if (v9 != 72) {
          goto LABEL_67;
        }
        v5 |= 0x100u;
        uint64_t v30 = v8 + 1;
        LODWORD(v29) = *v8;
        if ((v29 & 0x80) == 0) {
          goto LABEL_46;
        }
        int v31 = *v30;
        uint64_t v29 = v29 + (v31 << 7) - 128;
        if (v31 < 0)
        {
          uint64_t v48 = sub_188C138((uint64_t)v8, v29);
          *(void *)uint64_t v56 = v48;
          *(_DWORD *)(a1 + 72) = v49;
          if (!v48) {
            goto LABEL_89;
          }
        }
        else
        {
          uint64_t v30 = v8 + 2;
LABEL_46:
          *(void *)uint64_t v56 = v30;
          *(_DWORD *)(a1 + 72) = v29;
        }
        goto LABEL_65;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_67;
        }
        v5 |= 0x200u;
        uint64_t v33 = v8 + 1;
        LODWORD(v32) = *v8;
        if ((v32 & 0x80) == 0) {
          goto LABEL_51;
        }
        int v34 = *v33;
        uint64_t v32 = v32 + (v34 << 7) - 128;
        if (v34 < 0)
        {
          uint64_t v50 = sub_188C138((uint64_t)v8, v32);
          *(void *)uint64_t v56 = v50;
          *(_DWORD *)(a1 + 76) = v51;
          if (!v50) {
            goto LABEL_89;
          }
        }
        else
        {
          uint64_t v33 = v8 + 2;
LABEL_51:
          *(void *)uint64_t v56 = v33;
          *(_DWORD *)(a1 + 76) = v32;
        }
        goto LABEL_65;
      case 0xBu:
        if (v9 != 88) {
          goto LABEL_67;
        }
        v5 |= 0x400u;
        std::string::size_type v36 = v8 + 1;
        LODWORD(v35) = *v8;
        if ((v35 & 0x80) == 0) {
          goto LABEL_56;
        }
        int v37 = *v36;
        uint64_t v35 = v35 + (v37 << 7) - 128;
        if (v37 < 0)
        {
          uint64_t v52 = sub_188C138((uint64_t)v8, v35);
          *(void *)uint64_t v56 = v52;
          *(_DWORD *)(a1 + 80) = v53;
          if (!v52) {
            goto LABEL_89;
          }
        }
        else
        {
          std::string::size_type v36 = v8 + 2;
LABEL_56:
          *(void *)uint64_t v56 = v36;
          *(_DWORD *)(a1 + 80) = v35;
        }
        goto LABEL_65;
      case 0xCu:
        if (v9 != 96) {
          goto LABEL_67;
        }
        v5 |= 0x800u;
        uint64_t v39 = v8 + 1;
        LODWORD(v38) = *v8;
        if ((v38 & 0x80) == 0) {
          goto LABEL_61;
        }
        int v40 = *v39;
        uint64_t v38 = v38 + (v40 << 7) - 128;
        if (v40 < 0)
        {
          uint64_t v54 = sub_188C138((uint64_t)v8, v38);
          *(void *)uint64_t v56 = v54;
          *(_DWORD *)(a1 + 84) = v55;
          if (!v54) {
            goto LABEL_89;
          }
        }
        else
        {
          uint64_t v39 = v8 + 2;
LABEL_61:
          *(void *)uint64_t v56 = v39;
          *(_DWORD *)(a1 + 84) = v38;
        }
        goto LABEL_65;
      case 0xDu:
        if (v9 != 109) {
          goto LABEL_67;
        }
        int v41 = *(_DWORD *)v8;
        unint64_t v15 = v8 + 4;
        v5 |= 0x1000u;
        *(_DWORD *)(a1 + 88) = v41;
LABEL_64:
        *(void *)uint64_t v56 = v15;
        goto LABEL_65;
      default:
LABEL_67:
        if (v9) {
          BOOL v42 = (v9 & 7) == 4;
        }
        else {
          BOOL v42 = 1;
        }
        if (!v42)
        {
          if (*v7)
          {
            uint64_t v43 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v43 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = *(char **)v56;
          }
          uint64_t v25 = sub_1885AC0(v9, v43, v8, a3);
LABEL_35:
          *(void *)uint64_t v56 = v25;
          if (!v25) {
            goto LABEL_89;
          }
LABEL_65:
          if (sub_11947B8((uint64_t)a3, (char **)v56, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_89:
        }
          *(void *)uint64_t v56 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v56;
    }
  }
}

unsigned char *sub_1684B34(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 0x10) == 0)
    {
LABEL_3:
      if ((v6 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v7 = *(_DWORD *)(a1 + 56);
  *uint64_t v4 = 21;
  *(_DWORD *)(v4 + 1) = v7;
  v4 += 5;
  if ((v6 & 0x20) == 0)
  {
LABEL_4:
    if ((v6 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_11:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v8 = *(_DWORD *)(a1 + 60);
  *uint64_t v4 = 29;
  *(_DWORD *)(v4 + 1) = v8;
  v4 += 5;
  if ((v6 & 2) == 0)
  {
LABEL_5:
    if ((v6 & 0x40) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x40) == 0) {
    goto LABEL_21;
  }
LABEL_15:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v9 = *(int *)(a1 + 64);
  *uint64_t v4 = 40;
  v4[1] = v9;
  if (v9 > 0x7F)
  {
    v4[1] = v9 | 0x80;
    unint64_t v10 = v9 >> 7;
    v4[2] = v9 >> 7;
    v4 += 3;
    if (v9 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v11 = v10 >> 14;
        v10 >>= 7;
        *v4++ = v10;
      }
      while (v11);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_21:
  if ((v6 & 4) != 0)
  {
    uint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 8) == 0)
    {
LABEL_23:
      if ((v6 & 0x80) == 0) {
        goto LABEL_33;
      }
      goto LABEL_27;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_23;
  }
  uint64_t v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x80) == 0) {
    goto LABEL_33;
  }
LABEL_27:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v12 = *(int *)(a1 + 68);
  *uint64_t v4 = 64;
  v4[1] = v12;
  if (v12 > 0x7F)
  {
    v4[1] = v12 | 0x80;
    unint64_t v13 = v12 >> 7;
    v4[2] = v12 >> 7;
    v4 += 3;
    if (v12 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v14 = v13 >> 14;
        v13 >>= 7;
        *v4++ = v13;
      }
      while (v14);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_33:
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v15 = *(int *)(a1 + 72);
    *uint64_t v4 = 72;
    v4[1] = v15;
    if (v15 > 0x7F)
    {
      v4[1] = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      v4[2] = v15 >> 7;
      v4 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *v4++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v18 = *(int *)(a1 + 76);
    *uint64_t v4 = 80;
    v4[1] = v18;
    if (v18 > 0x7F)
    {
      v4[1] = v18 | 0x80;
      unint64_t v19 = v18 >> 7;
      v4[2] = v18 >> 7;
      v4 += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v20 = v19 >> 14;
          v19 >>= 7;
          *v4++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v21 = *(int *)(a1 + 80);
    *uint64_t v4 = 88;
    v4[1] = v21;
    if (v21 > 0x7F)
    {
      v4[1] = v21 | 0x80;
      unint64_t v22 = v21 >> 7;
      v4[2] = v21 >> 7;
      v4 += 3;
      if (v21 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v23 = v22 >> 14;
          v22 >>= 7;
          *v4++ = v22;
        }
        while (v23);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v24 = *(int *)(a1 + 84);
    *uint64_t v4 = 96;
    v4[1] = v24;
    if (v24 > 0x7F)
    {
      v4[1] = v24 | 0x80;
      unint64_t v25 = v24 >> 7;
      v4[2] = v24 >> 7;
      v4 += 3;
      if (v24 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v26 = v25 >> 14;
          v25 >>= 7;
          *v4++ = v25;
        }
        while (v26);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x1000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v27 = *(_DWORD *)(a1 + 88);
    *uint64_t v4 = 109;
    *(_DWORD *)(v4 + 1) = v27;
    v4 += 5;
  }
  uint64_t v28 = *(void *)(a1 + 8);
  if ((v28 & 1) == 0) {
    return v4;
  }
  unint64_t v30 = v28 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v30 + 31) < 0)
  {
    int v31 = *(void **)(v30 + 8);
    uint64_t v32 = *(void *)(v30 + 16);
  }
  else
  {
    int v31 = (void *)(v30 + 8);
    LODWORD(v32) = *(unsigned __int8 *)(v30 + 31);
  }
  if (*a3 - (void)v4 >= (int)v32)
  {
    uint64_t v33 = (int)v32;
    memcpy(v4, v31, (int)v32);
    v4 += v33;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v31, v32, v4);
}

uint64_t sub_1685010(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v1)
  {
    uint64_t v2 = 0;
    goto LABEL_31;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v18 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
    uint64_t v20 = *(void *)(v18 + 8);
    if ((v19 & 0x80u) == 0) {
      uint64_t v20 = v19;
    }
    v2 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  if ((v1 & 8) != 0)
  {
LABEL_14:
    unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_17:
  if ((v1 & 0x10) != 0) {
    v2 += 5;
  }
  if ((v1 & 0x20) != 0) {
    v2 += 5;
  }
  if ((v1 & 0x40) != 0)
  {
    int v12 = *(_DWORD *)(a1 + 64);
    uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v12 >= 0) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = 11;
    }
    v2 += v14;
  }
  if ((v1 & 0x80) != 0)
  {
    int v15 = *(_DWORD *)(a1 + 68);
    uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v15 >= 0) {
      uint64_t v17 = v16;
    }
    else {
      uint64_t v17 = 11;
    }
    v2 += v17;
  }
LABEL_31:
  if ((v1 & 0x1F00) == 0) {
    goto LABEL_59;
  }
  if ((v1 & 0x100) != 0)
  {
    int v21 = *(_DWORD *)(a1 + 72);
    if (v21 < 0) {
      uint64_t v22 = 11;
    }
    else {
      uint64_t v22 = ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v22;
    if ((v1 & 0x200) == 0)
    {
LABEL_34:
      if ((v1 & 0x400) == 0) {
        goto LABEL_35;
      }
      goto LABEL_49;
    }
  }
  else if ((v1 & 0x200) == 0)
  {
    goto LABEL_34;
  }
  int v23 = *(_DWORD *)(a1 + 76);
  if (v23 < 0) {
    uint64_t v24 = 11;
  }
  else {
    uint64_t v24 = ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v24;
  if ((v1 & 0x400) == 0)
  {
LABEL_35:
    if ((v1 & 0x800) == 0) {
      goto LABEL_57;
    }
    goto LABEL_53;
  }
LABEL_49:
  int v25 = *(_DWORD *)(a1 + 80);
  if (v25 < 0) {
    uint64_t v26 = 11;
  }
  else {
    uint64_t v26 = ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v26;
  if ((v1 & 0x800) != 0)
  {
LABEL_53:
    int v27 = *(_DWORD *)(a1 + 84);
    if (v27 < 0) {
      uint64_t v28 = 11;
    }
    else {
      uint64_t v28 = ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v28;
  }
LABEL_57:
  if ((v1 & 0x1000) != 0) {
    v2 += 5;
  }
LABEL_59:
  uint64_t v29 = *(void *)(a1 + 8);
  if (v29)
  {
    unint64_t v31 = v29 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v31 + 31) < 0) {
      uint64_t v32 = *(void *)(v31 + 16);
    }
    else {
      uint64_t v32 = *(unsigned __int8 *)(v31 + 31);
    }
    v2 += v32;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_16852F0()
{
  return 1;
}

void *sub_16852F8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.Incident.DebugPath");
}

uint64_t sub_1685308(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2543590)
  {
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_166AC0C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_16B3A84((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16853E0(uint64_t a1)
{
  sub_1685308(a1);

  operator delete();
}

uint64_t sub_1685418(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v27 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    return *(void *)v27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v27 + 1);
    unsigned int v8 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v27 + 2);
      }
    }
    *(void *)int v27 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3) {
      break;
    }
    if (v11 == 2)
    {
      if (v8 != 18) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v22 = *(void **)(a1 + 56);
      if (!v22)
      {
        int v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          int v23 = (void *)*v23;
        }
        uint64_t v22 = sub_166DA00((uint64_t)v23);
        *(void *)(a1 + 56) = v22;
        uint64_t v7 = *(unsigned __int8 **)v27;
      }
      int v15 = sub_1685670(a3, (uint64_t)v22, v7);
    }
    else
    {
      if (v11 != 1 || v8 != 10) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v24 = *(void *)(a1 + 8);
      int v25 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
      if (v24) {
        int v25 = (uint64_t *)*v25;
      }
      uint64_t v26 = (std::string *)sub_1880F84((void *)(a1 + 48), v25);
      int v15 = (void *)sub_188C244(v26, *(char **)v27, (uint64_t)a3);
    }
LABEL_40:
    *(void *)int v27 = v15;
    if (!v15) {
      goto LABEL_46;
    }
LABEL_41:
    if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
      return *(void *)v27;
    }
  }
  if (v8 == 26)
  {
    uint64_t v16 = (char *)(v7 - 1);
    while (1)
    {
      uint64_t v17 = (unsigned __int8 *)(v16 + 1);
      *(void *)int v27 = v16 + 1;
      unint64_t v18 = *(_DWORD **)(a1 + 40);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 32) = v19 + 1;
        uint64_t v20 = *(void *)&v18[2 * v19 + 2];
      }
      else
      {
        sub_12EC5C0(*(void *)(a1 + 24));
        uint64_t v20 = sub_188CDC8(a1 + 24, v21);
        uint64_t v17 = *(unsigned __int8 **)v27;
      }
      uint64_t v16 = sub_12D9CEC(a3, v20, v17);
      *(void *)int v27 = v16;
      if (!v16) {
        goto LABEL_46;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
        goto LABEL_41;
      }
    }
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v27;
    }
    int v15 = sub_1885AC0(v8, v14, (char *)v7, a3);
    goto LABEL_40;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v27;
  }
LABEL_46:
  *(void *)int v27 = 0;
  return *(void *)v27;
}

char *sub_1685670(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_166AD98(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1685700(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v7 = *(void *)(a1 + 56);
    *uint64_t v4 = 18;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_166B030(v7, (unint64_t)v9, a3);
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 26;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        uint64_t v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        uint64_t v14 = v4 + 2;
      }
      uint64_t v4 = sub_12EB864(v12, (unint64_t)v14, a3);
    }
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    unint64_t v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    unint64_t v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_16858CC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12EBBF4(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      uint64_t v12 = sub_166B1DC(*(void *)(a1 + 56));
      v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v2 += v16;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void *sub_16859FC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.Incident.ParsedVendorData");
}

uint64_t sub_1685A0C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1685AC4(uint64_t a1)
{
  sub_1685A0C(a1);

  operator delete();
}

uint64_t sub_1685AFC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)unint64_t v2 = 0;
        *(void *)(v2 + 8) = 0;
        if ((v1 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  if ((v1 & 0x1C) != 0)
  {
    *(_DWORD *)(a1 + 48) = 0;
    *(void *)(a1 + 40) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1685B88(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = (char *)(*(void *)v30 + 1);
    unsigned int v9 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180(*(uint64_t *)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (char *)(*(void *)v30 + 2);
      }
    }
    *(void *)unint64_t v30 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 24);
        goto LABEL_27;
      case 2u:
        if (v9 != 16) {
          goto LABEL_30;
        }
        v5 |= 4u;
        uint64_t v16 = v8 + 1;
        LODWORD(v15) = *v8;
        if ((v15 & 0x80) == 0) {
          goto LABEL_17;
        }
        int v17 = *v16;
        uint64_t v15 = v15 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v26 = sub_188C138((uint64_t)v8, v15);
          *(void *)unint64_t v30 = v26;
          *(_DWORD *)(a1 + 40) = v27;
          if (!v26) {
            goto LABEL_47;
          }
        }
        else
        {
          uint64_t v16 = v8 + 2;
LABEL_17:
          *(void *)unint64_t v30 = v16;
          *(_DWORD *)(a1 + 40) = v15;
        }
        goto LABEL_38;
      case 3u:
        if (v9 != 24) {
          goto LABEL_30;
        }
        v5 |= 8u;
        unint64_t v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v28 = sub_188C138((uint64_t)v8, v19);
          *(void *)unint64_t v30 = v28;
          *(unsigned char *)(a1 + 44) = v29 != 0;
          if (!v28) {
            goto LABEL_47;
          }
        }
        else
        {
          unint64_t v18 = v8 + 2;
LABEL_22:
          *(void *)unint64_t v30 = v18;
          *(unsigned char *)(a1 + 44) = v19 != 0;
        }
        goto LABEL_38;
      case 4u:
        if (v9 != 34) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v21 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 32);
LABEL_27:
        uint64_t v22 = (std::string *)sub_1880F84(v14, v13);
        int v23 = (void *)sub_188C244(v22, *(char **)v30, (uint64_t)a3);
        goto LABEL_37;
      case 5u:
        if (v9 != 45) {
          goto LABEL_30;
        }
        v5 |= 0x10u;
        *(_DWORD *)(a1 + 48) = *(_DWORD *)v8;
        *(void *)unint64_t v30 = v8 + 4;
        goto LABEL_38;
      default:
LABEL_30:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            int v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = *(char **)v30;
          }
          int v23 = sub_1885AC0(v9, v25, v8, a3);
LABEL_37:
          *(void *)unint64_t v30 = v23;
          if (!v23) {
            goto LABEL_47;
          }
LABEL_38:
          if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_47:
        }
          *(void *)unint64_t v30 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v30;
    }
  }
}

unsigned char *sub_1685E60(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    *uint64_t v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 44);
    *uint64_t v4 = 24;
    v4[1] = v10;
    v4 += 2;
    if ((v6 & 2) == 0)
    {
LABEL_12:
      if ((v6 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0) {
    goto LABEL_21;
  }
LABEL_18:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v11 = *(_DWORD *)(a1 + 48);
  *uint64_t v4 = 45;
  *(_DWORD *)(v4 + 1) = v11;
  v4 += 5;
LABEL_21:
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*a3 - (void)v4 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    v4 += v17;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_1686044(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x1F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_22;
  }
  if (v1)
  {
    unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    int v10 = *(_DWORD *)(a1 + 40);
    if (v10 < 0) {
      uint64_t v11 = 11;
    }
    else {
      uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v11;
  }
  if ((v1 & 8) != 0) {
    v2 += 2;
  }
  if ((v1 & 0x10) != 0) {
    uint64_t v3 = v2 + 5;
  }
  else {
    uint64_t v3 = v2;
  }
LABEL_22:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v3 += v15;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_168616C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      unint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_19;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    int v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_20;
    }
LABEL_19:
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
      goto LABEL_8;
    }
LABEL_20:
    v3[1].__r_.__value_.__s.__data_[20] = *(unsigned char *)(a2 + 44);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1686284()
{
  return 1;
}

void *sub_168628C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.Incident.Issue");
}

void *sub_168629C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_16B3884(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_168631C(void *a1)
{
  sub_168629C(a1);

  operator delete();
}

unsigned char *sub_1686354(unsigned char *result)
{
  int v1 = result;
  uint64_t v2 = *((unsigned int *)result + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (unsigned char **)(*((void *)result + 4) + 8);
    do
    {
      int v4 = *v3++;
      uint64_t result = sub_167537C(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 6) = 0;
  }
  char v6 = v1[8];
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return (unsigned char *)sub_188B4AC(v5);
  }
  return result;
}

char *sub_16863D0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          unint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_16958D4(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = (char *)sub_167565C(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        std::string::size_type v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        std::string::size_type v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_1686570(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        int v10 = __dst + 2;
      }
      __dst = sub_168BD4C(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_16866B4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    int v4 = (uint64_t *)(v3 + 8);
  }
  else {
    int v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_168C228(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void sub_1686764(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_16B4514((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1686834(uint64_t a1)
{
  return sub_167C784(a1 + 16);
}

void *sub_168683C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.Incident.Moderation.OriginalData");
}

uint64_t sub_168684C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2543600)
  {
    uint64_t v6 = *(void **)(a1 + 56);
    if (v6)
    {
      sub_168629C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1686920(uint64_t a1)
{
  sub_168684C(a1);

  operator delete();
}

uint64_t sub_1686958(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (uint64_t **)(a1 + 24);
  uint64_t v8 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v9 = (unsigned __int8 *)(*(void *)v33 + 1);
    unsigned int v10 = **(unsigned char **)v33;
    if ((char)**(unsigned char **)v33 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        uint64_t v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v33, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        uint64_t v9 = (unsigned __int8 *)(*(void *)v33 + 2);
      }
    }
    *(void *)uint64_t v33 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v13 = *(void *)(a1 + 8);
        unint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
        if (v13) {
          unint64_t v14 = (uint64_t *)*v14;
        }
        uint64_t v15 = (std::string *)sub_1880F84((void *)(a1 + 48), v14);
        uint64_t v16 = (void *)sub_188C244(v15, *(char **)v33, (uint64_t)a3);
        goto LABEL_43;
      case 2u:
        if (v10 != 18) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v17 = *(void *)(a1 + 56);
        if (!v17)
        {
          unint64_t v18 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v8) {
            unint64_t v18 = (void *)*v18;
          }
          uint64_t v17 = sub_169572C((uint64_t)v18);
          *(void *)(a1 + 56) = v17;
          uint64_t v9 = *(unsigned __int8 **)v33;
        }
        uint64_t v16 = sub_1686C94(a3, v17, v9);
        goto LABEL_43;
      case 3u:
        if (v10 != 24) {
          goto LABEL_36;
        }
        v5 |= 4u;
        int v20 = (char *)(v9 + 1);
        LODWORD(v19) = *v9;
        if ((v19 & 0x80) == 0) {
          goto LABEL_23;
        }
        int v21 = *v20;
        uint64_t v19 = v19 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v31 = sub_188C138((uint64_t)v9, v19);
          *(void *)uint64_t v33 = v31;
          *(_DWORD *)(a1 + 64) = v32;
          if (!v31) {
            goto LABEL_51;
          }
        }
        else
        {
          int v20 = (char *)(v9 + 2);
LABEL_23:
          *(void *)uint64_t v33 = v20;
          *(_DWORD *)(a1 + 64) = v19;
        }
        goto LABEL_44;
      case 4u:
        if (v10 != 34) {
          goto LABEL_36;
        }
        uint64_t v22 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          int v23 = (char *)(v22 + 1);
          *(void *)uint64_t v33 = v22 + 1;
          BOOL v24 = *(_DWORD **)(a1 + 40);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 32), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 32) = v25 + 1;
            uint64_t v26 = *(std::string **)&v24[2 * v25 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            void *v28 = v27;
            v28[1] = sub_3A6EDC;
            void *v27 = 0;
            v27[1] = 0;
            int v27[2] = 0;
            uint64_t v26 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v27);
            int v23 = *(char **)v33;
          }
          uint64_t v22 = sub_188C244(v26, v23, (uint64_t)a3);
          *(void *)uint64_t v33 = v22;
          if (!v22) {
            goto LABEL_51;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 34) {
            goto LABEL_44;
          }
        }
      default:
LABEL_36:
        if (v10) {
          BOOL v29 = (v10 & 7) == 4;
        }
        else {
          BOOL v29 = 1;
        }
        if (!v29)
        {
          if (*v8)
          {
            unint64_t v30 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v9 = *(unsigned __int8 **)v33;
          }
          uint64_t v16 = sub_1885AC0(v10, v30, (char *)v9, a3);
LABEL_43:
          *(void *)uint64_t v33 = v16;
          if (!v16) {
            goto LABEL_51;
          }
LABEL_44:
          if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_51:
        }
          *(void *)uint64_t v33 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v33;
    }
  }
}

char *sub_1686C94(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16863D0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1686D24(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_18;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 56);
  *int v4 = 18;
  unsigned int v8 = *(_DWORD *)(v7 + 40);
  v4[1] = v8;
  if (v8 > 0x7F) {
    uint64_t v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    uint64_t v9 = v4 + 2;
  }
  int v4 = sub_1686570(v7, v9, a3);
  if ((v6 & 4) != 0)
  {
LABEL_12:
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 64);
    *int v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_18:
  uint64_t v13 = *(unsigned int *)(a1 + 32);
  if ((int)v13 >= 1)
  {
    uint64_t v14 = 0;
    uint64_t v15 = 8 * v13;
    do
    {
      int v4 = (char *)sub_125CE58(a3, 4, *(void *)(*(void *)(a1 + 40) + v14 + 8), v4);
      v14 += 8;
    }
    while (v15 != v14);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_1686F28(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v8 & 2) == 0)
      {
LABEL_11:
        if ((v8 & 4) == 0) {
          goto LABEL_21;
        }
        goto LABEL_17;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_11;
    }
    uint64_t v12 = sub_16866B4(*(void *)(a1 + 56));
    v4 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 4) == 0) {
      goto LABEL_21;
    }
LABEL_17:
    int v13 = *(_DWORD *)(a1 + 64);
    if (v13 < 0) {
      uint64_t v14 = 11;
    }
    else {
      uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v14;
  }
LABEL_21:
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v4 += v18;
  }
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void *sub_16870A4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.Incident.Moderation");
}

double sub_16870B4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)a1 = off_24CE2B8;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = a2;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = a2;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = a2;
  *(void *)(a1 + 112) = a2;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = a2;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = a2;
  *(void *)(a1 + 176) = a2;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = a2;
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 224) = &qword_2550250;
  *(void *)(a1 + 232) = &qword_2550250;
  *(void *)(a1 + 240) = &qword_2550250;
  *(void *)(a1 + 248) = &qword_2550250;
  *(void *)(a1 + 256) = &qword_2550250;
  *(void *)(a1 + 264) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 396) = 0u;
  return result;
}

void *sub_168714C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1687228((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_154F7C0(a1 + 25);
  sub_1889DE8(a1 + 22);
  sub_1889DA8((uint64_t)(a1 + 20));
  sub_16B3B04(a1 + 17);
  sub_1889DE8(a1 + 14);
  sub_1889DA8((uint64_t)(a1 + 12));
  sub_154F740(a1 + 9);
  sub_1889DA8((uint64_t)(a1 + 7));
  sub_16B3884(a1 + 4);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_1687228(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 224);
  uint64_t v2 = (void ***)(a1 + 224);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 232) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 232));
  }
  if (*(uint64_t **)(a1 + 240) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 240));
  }
  double result = (void ***)(a1 + 248);
  if (*(uint64_t **)(a1 + 248) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if (*(uint64_t **)(a1 + 256) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 256));
  }
  if (*(uint64_t **)(a1 + 264) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 264));
  }
  if ((uint64_t (***)())a1 != &off_2543648)
  {
    if (*(void *)(a1 + 272))
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t v5 = *(void *)(a1 + 280);
    if (v5)
    {
      sub_1680404(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 288);
    if (v6)
    {
      sub_167C820(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 296);
    if (v7)
    {
      sub_167EDF0(v7);
      operator delete();
    }
    double result = *(void ****)(a1 + 304);
    if (result)
    {
      sub_167E208(result);
      operator delete();
    }
  }
  return result;
}

void sub_1687390(void *a1)
{
  sub_168714C(a1);

  operator delete();
}

uint64_t sub_16873C8(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 40);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (unsigned char **)(*(void *)(a1 + 48) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_167537C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 40) = 0;
  }
  *(_DWORD *)(a1 + 56) = 0;
  uint64_t v5 = *(unsigned int *)(a1 + 80);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_167B2C0(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 80) = 0;
  }
  *(_DWORD *)(a1 + 96) = 0;
  sub_188CC00(a1 + 112);
  uint64_t v8 = *(unsigned int *)(a1 + 144);
  if ((int)v8 >= 1)
  {
    unint64_t v9 = (uint64_t *)(*(void *)(a1 + 152) + 8);
    do
    {
      uint64_t v10 = *v9++;
      sub_15BFEB8(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(a1 + 144) = 0;
  }
  *(_DWORD *)(a1 + 160) = 0;
  uint64_t result = sub_188CC00(a1 + 176);
  uint64_t v12 = *(unsigned int *)(a1 + 208);
  if ((int)v12 >= 1)
  {
    int v13 = (uint64_t *)(*(void *)(a1 + 216) + 8);
    do
    {
      uint64_t v14 = *v13++;
      uint64_t result = sub_167B7FC(v14);
      --v12;
    }
    while (v12);
    *(_DWORD *)(a1 + 208) = 0;
  }
  unsigned int v15 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v15) {
    goto LABEL_27;
  }
  if (v15)
  {
    unint64_t v18 = *(void *)(a1 + 224) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v18 + 23) < 0)
    {
      **(unsigned char **)unint64_t v18 = 0;
      *(void *)(v18 + 8) = 0;
      if ((v15 & 2) != 0) {
        goto LABEL_51;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v18 = 0;
      *(unsigned char *)(v18 + 23) = 0;
      if ((v15 & 2) != 0) {
        goto LABEL_51;
      }
    }
LABEL_20:
    if ((v15 & 4) == 0) {
      goto LABEL_21;
    }
LABEL_55:
    unint64_t v20 = *(void *)(a1 + 240) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v20 + 23) < 0)
    {
      **(unsigned char **)unint64_t v20 = 0;
      *(void *)(v20 + 8) = 0;
      if ((v15 & 8) != 0) {
        goto LABEL_59;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v20 = 0;
      *(unsigned char *)(v20 + 23) = 0;
      if ((v15 & 8) != 0) {
        goto LABEL_59;
      }
    }
LABEL_22:
    if ((v15 & 0x10) == 0) {
      goto LABEL_23;
    }
LABEL_63:
    unint64_t v22 = *(void *)(a1 + 256) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v22 + 23) < 0)
    {
      **(unsigned char **)unint64_t v22 = 0;
      *(void *)(v22 + 8) = 0;
      if ((v15 & 0x20) != 0) {
        goto LABEL_67;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v22 = 0;
      *(unsigned char *)(v22 + 23) = 0;
      if ((v15 & 0x20) != 0) {
        goto LABEL_67;
      }
    }
LABEL_24:
    if ((v15 & 0x40) == 0) {
      goto LABEL_25;
    }
    goto LABEL_71;
  }
  if ((v15 & 2) == 0) {
    goto LABEL_20;
  }
LABEL_51:
  unint64_t v19 = *(void *)(a1 + 232) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v19 + 23) < 0)
  {
    **(unsigned char **)unint64_t v19 = 0;
    *(void *)(v19 + 8) = 0;
    if ((v15 & 4) != 0) {
      goto LABEL_55;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v19 = 0;
    *(unsigned char *)(v19 + 23) = 0;
    if ((v15 & 4) != 0) {
      goto LABEL_55;
    }
  }
LABEL_21:
  if ((v15 & 8) == 0) {
    goto LABEL_22;
  }
LABEL_59:
  unint64_t v21 = *(void *)(a1 + 248) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v21 + 23) < 0)
  {
    **(unsigned char **)unint64_t v21 = 0;
    *(void *)(v21 + 8) = 0;
    if ((v15 & 0x10) != 0) {
      goto LABEL_63;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v21 = 0;
    *(unsigned char *)(v21 + 23) = 0;
    if ((v15 & 0x10) != 0) {
      goto LABEL_63;
    }
  }
LABEL_23:
  if ((v15 & 0x20) == 0) {
    goto LABEL_24;
  }
LABEL_67:
  unint64_t v23 = *(void *)(a1 + 264) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v23 + 23) < 0)
  {
    **(unsigned char **)unint64_t v23 = 0;
    *(void *)(v23 + 8) = 0;
    if ((v15 & 0x40) != 0) {
      goto LABEL_71;
    }
LABEL_25:
    if ((v15 & 0x80) == 0) {
      goto LABEL_27;
    }
    goto LABEL_26;
  }
  *(unsigned char *)unint64_t v23 = 0;
  *(unsigned char *)(v23 + 23) = 0;
  if ((v15 & 0x40) == 0) {
    goto LABEL_25;
  }
LABEL_71:
  uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 272));
  if ((v15 & 0x80) != 0) {
LABEL_26:
  }
    uint64_t result = sub_1680638(*(void *)(a1 + 280));
LABEL_27:
  if ((v15 & 0x700) == 0) {
    goto LABEL_32;
  }
  if ((v15 & 0x100) != 0)
  {
    uint64_t result = sub_167B934(*(void *)(a1 + 288));
    if ((v15 & 0x200) == 0)
    {
LABEL_30:
      if ((v15 & 0x400) == 0) {
        goto LABEL_32;
      }
      goto LABEL_31;
    }
  }
  else if ((v15 & 0x200) == 0)
  {
    goto LABEL_30;
  }
  uint64_t result = sub_167EF58(*(void *)(a1 + 296));
  if ((v15 & 0x400) != 0) {
LABEL_31:
  }
    uint64_t result = sub_167E2B4(*(void *)(a1 + 304));
LABEL_32:
  if ((v15 & 0xF800) != 0)
  {
    *(_OWORD *)(a1 + 312) = 0u;
    *(_OWORD *)(a1 + 328) = 0u;
  }
  if ((v15 & 0xFF0000) != 0)
  {
    *(void *)(a1 + 344) = 0;
    *(void *)(a1 + 352) = 0;
    *(_DWORD *)(a1 + 360) = 0;
  }
  if (HIBYTE(v15))
  {
    *(_DWORD *)(a1 + 396) = 0;
    *(_OWORD *)(a1 + 364) = 0u;
    *(_OWORD *)(a1 + 380) = 0u;
  }
  if ((*(unsigned char *)(a1 + 20) & 7) != 0)
  {
    *(_DWORD *)(a1 + 408) = 0;
    *(void *)(a1 + 400) = 0;
  }
  char v17 = *(unsigned char *)(a1 + 8);
  uint64_t v16 = (uint64_t *)(a1 + 8);
  v16[1] = 0;
  if (v17)
  {
    return sub_188B4AC(v16);
  }
  return result;
}

char *sub_16876C8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v190 = a2;
  char v5 = sub_11947B8((uint64_t)a3, (char **)v190, a3[11].i32[1]);
  uint64_t result = *(char **)v190;
  if (v5) {
    return result;
  }
  v189 = (uint64_t **)(a1 + 176);
  v185 = (uint64_t *)(a1 + 8);
  uint64_t v186 = (uint64_t *)(a1 + 136);
  v187 = (uint64_t *)(a1 + 200);
  v188 = (uint64_t **)(a1 + 112);
  while (1)
  {
    uint64_t v7 = result + 1;
    unsigned int v8 = *result;
    if (*result < 0)
    {
      int v9 = *v7;
      unsigned int v10 = v8 + (v9 << 7);
      unsigned int v8 = v10 - 128;
      if (v9 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)result, v10 - 128);
        unsigned int v8 = v11;
      }
      else
      {
        uint64_t v7 = result + 2;
      }
    }
    *(void *)uint64_t v190 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_372;
        }
        uint64_t result = v7 - 1;
        while (1)
        {
          uint64_t v12 = (unsigned __int8 *)(result + 1);
          *(void *)uint64_t v190 = result + 1;
          int v13 = *(_DWORD **)(a1 + 48);
          if (v13 && (uint64_t v14 = *(int *)(a1 + 40), (int)v14 < *v13))
          {
            *(_DWORD *)(a1 + 40) = v14 + 1;
            uint64_t v15 = *(void *)&v13[2 * v14 + 2];
          }
          else
          {
            uint64_t v16 = sub_16958D4(*(void *)(a1 + 32));
            uint64_t v15 = sub_188CDC8(a1 + 32, v16);
            uint64_t v12 = *(unsigned __int8 **)v190;
          }
          uint64_t result = (char *)sub_167565C(a3, v15, v12);
          *(void *)uint64_t v190 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *result != 10) {
            goto LABEL_215;
          }
        }
      case 2u:
        if (v8 != 16)
        {
          if (v8 != 18) {
            goto LABEL_372;
          }
          *(void *)&long long v191 = a1 + 56;
          *((void *)&v191 + 1) = sub_1321808;
          uint64_t v192 = a1 + 8;
          int v182 = 2;
          goto LABEL_371;
        }
        char v17 = v7 - 1;
        while (2)
        {
          *(void *)uint64_t v190 = v17 + 1;
          unint64_t v18 = v17[1];
          unint64_t v19 = v17 + 2;
          if ((v17[1] & 0x80000000) == 0) {
            goto LABEL_24;
          }
          int v20 = *v19;
          int v21 = v18 + (v20 << 7);
          unint64_t v18 = (v21 - 128);
          if (v20 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)(v17 + 1), (v21 - 128));
            *(void *)uint64_t v190 = result;
            if (!result) {
              return result;
            }
            unint64_t v18 = v24;
          }
          else
          {
            unint64_t v19 = v17 + 3;
LABEL_24:
            *(void *)uint64_t v190 = v19;
          }
          if (sub_1321808(v18))
          {
            uint64_t v22 = *(unsigned int *)(a1 + 56);
            if (v22 == *(_DWORD *)(a1 + 60))
            {
              int v23 = v22 + 1;
              sub_188C80C((unsigned int *)(a1 + 56), v22 + 1);
              *(_DWORD *)(*(void *)(a1 + 64) + 4 * v22) = v18;
            }
            else
            {
              *(_DWORD *)(*(void *)(a1 + 64) + 4 * v22) = v18;
              int v23 = v22 + 1;
            }
            *(_DWORD *)(a1 + 56) = v23;
          }
          else
          {
            if (*v185) {
              uint64_t v25 = (std::string *)((*v185 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              uint64_t v25 = (std::string *)sub_188DBD8(v185);
            }
            sub_188C020(2, v18, v25);
          }
          char v17 = *(char **)v190;
          if (*(void *)a3 <= *(void *)v190 || **(unsigned char **)v190 != 16) {
            goto LABEL_215;
          }
          continue;
        }
      case 3u:
        if (v8 != 26) {
          goto LABEL_372;
        }
        uint64_t result = v7 - 1;
        while (1)
        {
          uint64_t v26 = (unsigned __int8 *)(result + 1);
          *(void *)uint64_t v190 = result + 1;
          int v27 = *(_DWORD **)(a1 + 88);
          if (v27 && (uint64_t v28 = *(int *)(a1 + 80), (int)v28 < *v27))
          {
            *(_DWORD *)(a1 + 80) = v28 + 1;
            uint64_t v29 = *(void *)&v27[2 * v28 + 2];
          }
          else
          {
            unint64_t v30 = sub_1694EB4(*(void *)(a1 + 72));
            uint64_t v29 = sub_188CDC8(a1 + 72, (uint64_t)v30);
            uint64_t v26 = *(unsigned __int8 **)v190;
          }
          uint64_t result = (char *)sub_154F2E8(a3, v29, v26);
          *(void *)uint64_t v190 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *result != 26) {
            goto LABEL_215;
          }
        }
      case 4u:
        if (v8 != 34) {
          goto LABEL_372;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v31 = *(void *)(a1 + 8);
        int v32 = (uint64_t *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
        if (v31) {
          int v32 = (uint64_t *)*v32;
        }
        uint64_t v33 = (void *)(a1 + 224);
        goto LABEL_213;
      case 5u:
        if (v8 != 42) {
          goto LABEL_372;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v34 = *(void *)(a1 + 272);
        if (!v34)
        {
          uint64_t v35 = (void *)(*v185 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v185) {
            uint64_t v35 = (void *)*v35;
          }
          uint64_t v34 = sub_15C1918((uint64_t)v35);
          *(void *)(a1 + 272) = v34;
          uint64_t v7 = *(char **)v190;
        }
        uint64_t result = sub_1198F14(a3, v34, (unsigned __int8 *)v7);
        goto LABEL_214;
      case 6u:
        if (v8 != 48) {
          goto LABEL_372;
        }
        *(_DWORD *)(a1 + 16) |= 0x800u;
        std::string::size_type v36 = v7 + 1;
        uint64_t v37 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_63;
        }
        int v38 = *v36;
        uint64_t v37 = v37 + (v38 << 7) - 128;
        if (v38 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v7, v37);
          *(void *)uint64_t v190 = result;
          *(void *)(a1 + 312) = v158;
          if (!result) {
            return result;
          }
        }
        else
        {
          std::string::size_type v36 = v7 + 2;
LABEL_63:
          *(void *)uint64_t v190 = v36;
          *(void *)(a1 + 312) = v37;
        }
        goto LABEL_215;
      case 7u:
        if (v8 != 56) {
          goto LABEL_372;
        }
        *(_DWORD *)(a1 + 16) |= 0x1000u;
        uint64_t v39 = v7 + 1;
        uint64_t v40 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_68;
        }
        int v41 = *v39;
        uint64_t v40 = v40 + (v41 << 7) - 128;
        if (v41 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v7, v40);
          *(void *)uint64_t v190 = result;
          *(void *)(a1 + 320) = v159;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v39 = v7 + 2;
LABEL_68:
          *(void *)uint64_t v190 = v39;
          *(void *)(a1 + 320) = v40;
        }
        goto LABEL_215;
      case 8u:
        if (v8 != 64) {
          goto LABEL_372;
        }
        *(_DWORD *)(a1 + 16) |= 0x2000u;
        BOOL v42 = v7 + 1;
        uint64_t v43 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_73;
        }
        int v44 = *v42;
        uint64_t v43 = v43 + (v44 << 7) - 128;
        if (v44 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v7, v43);
          *(void *)uint64_t v190 = result;
          *(void *)(a1 + 328) = v160;
          if (!result) {
            return result;
          }
        }
        else
        {
          BOOL v42 = v7 + 2;
LABEL_73:
          *(void *)uint64_t v190 = v42;
          *(void *)(a1 + 328) = v43;
        }
        goto LABEL_215;
      case 9u:
        if (v8 != 72) {
          goto LABEL_372;
        }
        *(_DWORD *)(a1 + 16) |= 0x100000u;
        int v45 = v7 + 1;
        uint64_t v46 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_78;
        }
        int v47 = *v45;
        uint64_t v46 = v46 + (v47 << 7) - 128;
        if (v47 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v7, v46);
          *(void *)uint64_t v190 = result;
          *(unsigned char *)(a1 + 360) = v161 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          int v45 = v7 + 2;
LABEL_78:
          *(void *)uint64_t v190 = v45;
          *(unsigned char *)(a1 + 360) = v46 != 0;
        }
        goto LABEL_215;
      case 0xAu:
        if (v8 != 80) {
          goto LABEL_372;
        }
        *(_DWORD *)(a1 + 16) |= 0x4000u;
        uint64_t v48 = v7 + 1;
        int v49 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_83;
        }
        int v50 = *v48;
        int v49 = v49 + (v50 << 7) - 128;
        if (v50 < 0)
        {
          uint64_t result = (char *)sub_188C0D0((uint64_t)v7, v49);
          *(void *)uint64_t v190 = result;
          *(_DWORD *)(a1 + 336) = v162;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v48 = v7 + 2;
LABEL_83:
          *(void *)uint64_t v190 = v48;
          *(_DWORD *)(a1 + 336) = v49;
        }
        goto LABEL_215;
      case 0xBu:
        if (v8 != 88) {
          goto LABEL_372;
        }
        int v51 = v7 + 1;
        unint64_t v52 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_88;
        }
        int v53 = *v51;
        int v54 = v52 + (v53 << 7);
        unint64_t v52 = (v54 - 128);
        if (v53 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v7, (v54 - 128));
          *(void *)uint64_t v190 = result;
          if (!result) {
            return result;
          }
          unint64_t v52 = v163;
        }
        else
        {
          int v51 = v7 + 2;
LABEL_88:
          *(void *)uint64_t v190 = v51;
        }
        if (v52 <= 9)
        {
          *(_DWORD *)(a1 + 16) |= 0x8000u;
          *(_DWORD *)(a1 + 340) = v52;
          goto LABEL_215;
        }
        if (*v185) {
          uint64_t v180 = (std::string *)((*v185 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v180 = (std::string *)sub_188DBD8(v185);
        }
        int v181 = 11;
        goto LABEL_364;
      case 0xCu:
        if (v8 != 96) {
          goto LABEL_372;
        }
        *(_DWORD *)(a1 + 16) |= 0x10000u;
        int v55 = v7 + 1;
        int v56 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_95;
        }
        int v57 = *v55;
        int v56 = v56 + (v57 << 7) - 128;
        if (v57 < 0)
        {
          uint64_t result = (char *)sub_188C0D0((uint64_t)v7, v56);
          *(void *)uint64_t v190 = result;
          *(_DWORD *)(a1 + 344) = v164;
          if (!result) {
            return result;
          }
        }
        else
        {
          int v55 = v7 + 2;
LABEL_95:
          *(void *)uint64_t v190 = v55;
          *(_DWORD *)(a1 + 344) = v56;
        }
        goto LABEL_215;
      case 0xDu:
        if (v8 != 104)
        {
          if (v8 == 106)
          {
            uint64_t result = (char *)sub_188C2CC((unsigned int *)(a1 + 96), (unsigned __int8 *)v7, (uint64_t)a3);
            goto LABEL_214;
          }
          goto LABEL_372;
        }
        uint64_t result = v7 - 1;
        while (1)
        {
          *(void *)uint64_t v190 = result + 1;
          int v58 = result[1];
          if (result[1] < 0)
          {
            int v59 = v58 + (result[2] << 7);
            int v58 = v59 - 128;
            if (result[2] < 0)
            {
              uint64_t result = (char *)sub_188C0D0((uint64_t)(result + 1), v59 - 128);
              int v58 = v60;
            }
            else
            {
              result += 3;
            }
          }
          else
          {
            result += 2;
          }
          *(void *)uint64_t v190 = result;
          uint64_t v61 = *(unsigned int *)(a1 + 96);
          if (v61 == *(_DWORD *)(a1 + 100))
          {
            int v62 = v61 + 1;
            sub_188C80C((unsigned int *)(a1 + 96), v61 + 1);
            *(_DWORD *)(*(void *)(a1 + 104) + 4 * v61) = v58;
            uint64_t result = *(char **)v190;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 104) + 4 * v61) = v58;
            int v62 = v61 + 1;
          }
          *(_DWORD *)(a1 + 96) = v62;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *result != 104) {
            goto LABEL_215;
          }
        }
      case 0xEu:
        if (v8 != 112) {
          goto LABEL_372;
        }
        *(_DWORD *)(a1 + 16) |= 0x200000u;
        uint64_t v63 = v7 + 1;
        uint64_t v64 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_114;
        }
        int v65 = *v63;
        uint64_t v64 = v64 + (v65 << 7) - 128;
        if (v65 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v7, v64);
          *(void *)uint64_t v190 = result;
          *(unsigned char *)(a1 + 361) = v165 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v63 = v7 + 2;
LABEL_114:
          *(void *)uint64_t v190 = v63;
          *(unsigned char *)(a1 + 361) = v64 != 0;
        }
        goto LABEL_215;
      case 0xFu:
        if (v8 != 125) {
          goto LABEL_372;
        }
        *(_DWORD *)(a1 + 16) |= 0x20000u;
        int v67 = *(_DWORD *)v7;
        uint64_t v66 = v7 + 4;
        *(_DWORD *)(a1 + 348) = v67;
        goto LABEL_203;
      case 0x10u:
        if (v8 != 128) {
          goto LABEL_372;
        }
        *(_DWORD *)(a1 + 16) |= 0x40000u;
        uint64_t v68 = v7 + 1;
        int v69 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_121;
        }
        int v70 = *v68;
        int v69 = v69 + (v70 << 7) - 128;
        if (v70 < 0)
        {
          uint64_t result = (char *)sub_188C0D0((uint64_t)v7, v69);
          *(void *)uint64_t v190 = result;
          *(_DWORD *)(a1 + 352) = v166;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v68 = v7 + 2;
LABEL_121:
          *(void *)uint64_t v190 = v68;
          *(_DWORD *)(a1 + 352) = v69;
        }
        goto LABEL_215;
      case 0x11u:
        if (v8 != 136) {
          goto LABEL_372;
        }
        *(_DWORD *)(a1 + 16) |= 0x80000u;
        unsigned int v71 = v7 + 1;
        int v72 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_126;
        }
        int v73 = *v71;
        int v72 = v72 + (v73 << 7) - 128;
        if (v73 < 0)
        {
          uint64_t result = (char *)sub_188C0D0((uint64_t)v7, v72);
          *(void *)uint64_t v190 = result;
          *(_DWORD *)(a1 + 356) = v167;
          if (!result) {
            return result;
          }
        }
        else
        {
          unsigned int v71 = v7 + 2;
LABEL_126:
          *(void *)uint64_t v190 = v71;
          *(_DWORD *)(a1 + 356) = v72;
        }
        goto LABEL_215;
      case 0x12u:
        if (v8 != 146) {
          goto LABEL_372;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v74 = *(void *)(a1 + 8);
        int v32 = (uint64_t *)(v74 & 0xFFFFFFFFFFFFFFFCLL);
        if (v74) {
          int v32 = (uint64_t *)*v32;
        }
        uint64_t v33 = (void *)(a1 + 232);
        goto LABEL_213;
      case 0x13u:
        if (v8 != 154) {
          goto LABEL_372;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v75 = *(void *)(a1 + 8);
        int v32 = (uint64_t *)(v75 & 0xFFFFFFFFFFFFFFFCLL);
        if (v75) {
          int v32 = (uint64_t *)*v32;
        }
        uint64_t v33 = (void *)(a1 + 240);
        goto LABEL_213;
      case 0x14u:
        if (v8 != 162) {
          goto LABEL_372;
        }
        uint64_t result = v7 - 2;
        while (1)
        {
          uint64_t v76 = result + 2;
          *(void *)uint64_t v190 = result + 2;
          v77 = *(_DWORD **)(a1 + 128);
          if (v77 && (uint64_t v78 = *(int *)(a1 + 120), (int)v78 < *v77))
          {
            *(_DWORD *)(a1 + 120) = v78 + 1;
            uint64_t v79 = *(std::string **)&v77[2 * v78 + 2];
          }
          else
          {
            if (!*v188) {
              operator new();
            }
            void *v81 = v80;
            v81[1] = sub_3A6EDC;
            void *v80 = 0;
            v80[1] = 0;
            v80[2] = 0;
            uint64_t v79 = (std::string *)sub_188CDC8((uint64_t)v188, (uint64_t)v80);
            uint64_t v76 = *(char **)v190;
          }
          uint64_t result = (char *)sub_188C244(v79, v76, (uint64_t)a3);
          *(void *)uint64_t v190 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 418) {
            goto LABEL_215;
          }
        }
      case 0x15u:
        if (v8 != 168) {
          goto LABEL_372;
        }
        uint64_t v82 = v7 + 1;
        unint64_t v52 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_151;
        }
        int v83 = *v82;
        int v84 = v52 + (v83 << 7);
        unint64_t v52 = (v84 - 128);
        if (v83 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v7, (v84 - 128));
          *(void *)uint64_t v190 = result;
          if (!result) {
            return result;
          }
          unint64_t v52 = v168;
        }
        else
        {
          uint64_t v82 = v7 + 2;
LABEL_151:
          *(void *)uint64_t v190 = v82;
        }
        if (v52 <= 0x4F)
        {
          *(_DWORD *)(a1 + 16) |= 0x1000000u;
          *(_DWORD *)(a1 + 364) = v52;
          goto LABEL_215;
        }
        if (*v185) {
          uint64_t v180 = (std::string *)((*v185 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v180 = (std::string *)sub_188DBD8(v185);
        }
        int v181 = 21;
        goto LABEL_364;
      case 0x16u:
        if (v8 != 176) {
          goto LABEL_372;
        }
        *(_DWORD *)(a1 + 16) |= 0x400000u;
        BOOL v85 = v7 + 1;
        uint64_t v86 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_158;
        }
        int v87 = *v85;
        uint64_t v86 = v86 + (v87 << 7) - 128;
        if (v87 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v7, v86);
          *(void *)uint64_t v190 = result;
          *(unsigned char *)(a1 + 362) = v169 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          BOOL v85 = v7 + 2;
LABEL_158:
          *(void *)uint64_t v190 = v85;
          *(unsigned char *)(a1 + 362) = v86 != 0;
        }
        goto LABEL_215;
      case 0x17u:
        if (v8 != 184) {
          goto LABEL_372;
        }
        uint64_t v88 = v7 + 1;
        unint64_t v52 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_163;
        }
        int v89 = *v88;
        int v90 = v52 + (v89 << 7);
        unint64_t v52 = (v90 - 128);
        if (v89 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v7, (v90 - 128));
          *(void *)uint64_t v190 = result;
          if (!result) {
            return result;
          }
          unint64_t v52 = v170;
        }
        else
        {
          uint64_t v88 = v7 + 2;
LABEL_163:
          *(void *)uint64_t v190 = v88;
        }
        if (v52 <= 4)
        {
          *(_DWORD *)(a1 + 16) |= 0x2000000u;
          *(_DWORD *)(a1 + 368) = v52;
          goto LABEL_215;
        }
        if (*v185) {
          uint64_t v180 = (std::string *)((*v185 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v180 = (std::string *)sub_188DBD8(v185);
        }
        int v181 = 23;
        goto LABEL_364;
      case 0x18u:
        if (v8 != 192) {
          goto LABEL_372;
        }
        *(_DWORD *)(a1 + 16) |= 0x800000u;
        uint64_t v91 = v7 + 1;
        uint64_t v92 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_170;
        }
        int v93 = *v91;
        uint64_t v92 = v92 + (v93 << 7) - 128;
        if (v93 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v7, v92);
          *(void *)uint64_t v190 = result;
          *(unsigned char *)(a1 + 363) = v171 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v91 = v7 + 2;
LABEL_170:
          *(void *)uint64_t v190 = v91;
          *(unsigned char *)(a1 + 363) = v92 != 0;
        }
        goto LABEL_215;
      case 0x19u:
        if (v8 != 202) {
          goto LABEL_372;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v94 = *(void *)(a1 + 8);
        int v32 = (uint64_t *)(v94 & 0xFFFFFFFFFFFFFFFCLL);
        if (v94) {
          int v32 = (uint64_t *)*v32;
        }
        uint64_t v33 = (void *)(a1 + 248);
        goto LABEL_213;
      case 0x1Au:
        if (v8 != 208) {
          goto LABEL_372;
        }
        v95 = v7 + 1;
        unint64_t v52 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_179;
        }
        int v96 = *v95;
        int v97 = v52 + (v96 << 7);
        unint64_t v52 = (v97 - 128);
        if (v96 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v7, (v97 - 128));
          *(void *)uint64_t v190 = result;
          if (!result) {
            return result;
          }
          unint64_t v52 = v172;
        }
        else
        {
          v95 = v7 + 2;
LABEL_179:
          *(void *)uint64_t v190 = v95;
        }
        if (v52 < 0x18 || (v52 - 50) <= 6)
        {
          *(_DWORD *)(a1 + 16) |= 0x4000000u;
          *(_DWORD *)(a1 + 372) = v52;
          goto LABEL_215;
        }
        if (*v185) {
          uint64_t v180 = (std::string *)((*v185 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v180 = (std::string *)sub_188DBD8(v185);
        }
        int v181 = 26;
        goto LABEL_364;
      case 0x1Bu:
        if (v8 != 218) {
          goto LABEL_372;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v98 = *(void *)(a1 + 8);
        int v32 = (uint64_t *)(v98 & 0xFFFFFFFFFFFFFFFCLL);
        if (v98) {
          int v32 = (uint64_t *)*v32;
        }
        uint64_t v33 = (void *)(a1 + 256);
        goto LABEL_213;
      case 0x1Cu:
        if (v8 != 224) {
          goto LABEL_372;
        }
        v99 = v7 + 1;
        unint64_t v52 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_191;
        }
        int v100 = *v99;
        int v101 = v52 + (v100 << 7);
        unint64_t v52 = (v101 - 128);
        if (v100 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v7, (v101 - 128));
          *(void *)uint64_t v190 = result;
          if (!result) {
            return result;
          }
          unint64_t v52 = v173;
        }
        else
        {
          v99 = v7 + 2;
LABEL_191:
          *(void *)uint64_t v190 = v99;
        }
        if (v52 <= 5)
        {
          *(_DWORD *)(a1 + 16) |= 0x8000000u;
          *(_DWORD *)(a1 + 376) = v52;
          goto LABEL_215;
        }
        if (*v185) {
          uint64_t v180 = (std::string *)((*v185 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v180 = (std::string *)sub_188DBD8(v185);
        }
        int v181 = 28;
        goto LABEL_364;
      case 0x1Du:
        if (v8 != 232) {
          goto LABEL_372;
        }
        v102 = v7 + 1;
        unint64_t v52 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_198;
        }
        int v103 = *v102;
        int v104 = v52 + (v103 << 7);
        unint64_t v52 = (v104 - 128);
        if (v103 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v7, (v104 - 128));
          *(void *)uint64_t v190 = result;
          if (!result) {
            return result;
          }
          unint64_t v52 = v174;
        }
        else
        {
          v102 = v7 + 2;
LABEL_198:
          *(void *)uint64_t v190 = v102;
        }
        if (v52 <= 5)
        {
          *(_DWORD *)(a1 + 16) |= 0x10000000u;
          *(_DWORD *)(a1 + 380) = v52;
          goto LABEL_215;
        }
        if (*v185) {
          uint64_t v180 = (std::string *)((*v185 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v180 = (std::string *)sub_188DBD8(v185);
        }
        int v181 = 29;
        goto LABEL_364;
      case 0x1Eu:
        if (v8 != 241) {
          goto LABEL_372;
        }
        *(_DWORD *)(a1 + 16) |= 0x20000000u;
        uint64_t v105 = *(void *)v7;
        uint64_t v66 = v7 + 8;
        *(void *)(a1 + 384) = v105;
LABEL_203:
        *(void *)uint64_t v190 = v66;
        goto LABEL_215;
      case 0x1Fu:
        if (v8 != 248) {
          goto LABEL_372;
        }
        *(_DWORD *)(a1 + 16) |= 0x40000000u;
        uint64_t v106 = v7 + 1;
        int v107 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_208;
        }
        int v108 = *v106;
        int v107 = v107 + (v108 << 7) - 128;
        if (v108 < 0)
        {
          uint64_t result = (char *)sub_188C0D0((uint64_t)v7, v107);
          *(void *)uint64_t v190 = result;
          *(_DWORD *)(a1 + 392) = v175;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v106 = v7 + 2;
LABEL_208:
          *(void *)uint64_t v190 = v106;
          *(_DWORD *)(a1 + 392) = v107;
        }
        goto LABEL_215;
      case 0x20u:
        if (v8 != 2) {
          goto LABEL_372;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v109 = *(void *)(a1 + 8);
        int v32 = (uint64_t *)(v109 & 0xFFFFFFFFFFFFFFFCLL);
        if (v109) {
          int v32 = (uint64_t *)*v32;
        }
        uint64_t v33 = (void *)(a1 + 264);
LABEL_213:
        v110 = (std::string *)sub_1880F84(v33, v32);
        uint64_t result = (char *)sub_188C244(v110, *(char **)v190, (uint64_t)a3);
        goto LABEL_214;
      case 0x21u:
        if (v8 != 10) {
          goto LABEL_372;
        }
        uint64_t result = v7 - 2;
        while (1)
        {
          uint64_t v112 = result + 2;
          *(void *)uint64_t v190 = result + 2;
          v113 = *(_DWORD **)(a1 + 152);
          if (v113 && (uint64_t v114 = *(int *)(a1 + 144), (int)v114 < *v113))
          {
            *(_DWORD *)(a1 + 144) = v114 + 1;
            uint64_t v115 = *(void *)&v113[2 * v114 + 2];
          }
          else
          {
            uint64_t v116 = sub_15C258C(*v186);
            uint64_t v115 = sub_188CDC8((uint64_t)v186, v116);
            uint64_t v112 = *(char **)v190;
          }
          uint64_t result = sub_1688E50(a3, v115, (unsigned __int8 *)v112);
          *(void *)uint64_t v190 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 650) {
            goto LABEL_215;
          }
        }
      case 0x22u:
        if (v8 == 16)
        {
          v117 = v7 - 2;
          while (1)
          {
            *(void *)uint64_t v190 = v117 + 2;
            unint64_t v118 = v117[2];
            v119 = v117 + 3;
            if (v117[2] < 0)
            {
              int v120 = *v119;
              int v121 = v118 + (v120 << 7);
              unint64_t v118 = (v121 - 128);
              if (v120 < 0)
              {
                uint64_t result = (char *)sub_188C138((uint64_t)(v117 + 2), (v121 - 128));
                *(void *)uint64_t v190 = result;
                if (!result) {
                  return result;
                }
                unint64_t v118 = v124;
                goto LABEL_233;
              }
              v119 = v117 + 4;
            }
            *(void *)uint64_t v190 = v119;
LABEL_233:
            if (sub_138DE04(v118))
            {
              uint64_t v122 = *(unsigned int *)(a1 + 160);
              if (v122 == *(_DWORD *)(a1 + 164))
              {
                int v123 = v122 + 1;
                sub_188C80C((unsigned int *)(a1 + 160), v122 + 1);
                *(_DWORD *)(*(void *)(a1 + 168) + 4 * v122) = v118;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 168) + 4 * v122) = v118;
                int v123 = v122 + 1;
              }
              *(_DWORD *)(a1 + 160) = v123;
            }
            else
            {
              if (*v185) {
                v125 = (std::string *)((*v185 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                v125 = (std::string *)sub_188DBD8(v185);
              }
              sub_188C020(34, v118, v125);
            }
            v117 = *(char **)v190;
            if (*(void *)a3 <= *(void *)v190 || **(_WORD **)v190 != 656) {
              goto LABEL_215;
            }
          }
        }
        if (v8 == 18)
        {
          *(void *)&long long v191 = a1 + 160;
          *((void *)&v191 + 1) = sub_138DE04;
          uint64_t v192 = a1 + 8;
          int v182 = 34;
LABEL_371:
          int v193 = v182;
          uint64_t result = sub_1112E88((uint64_t)a3, v7, &v191);
          goto LABEL_214;
        }
LABEL_372:
        if (v8) {
          BOOL v183 = (v8 & 7) == 4;
        }
        else {
          BOOL v183 = 1;
        }
        if (v183)
        {
          if (!v7) {
            return 0;
          }
          a3[10].i32[0] = v8 - 1;
          return v7;
        }
        if (*v185)
        {
          v184 = (std::string *)((*v185 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          v184 = (std::string *)sub_188DBD8(v185);
          uint64_t v7 = *(char **)v190;
        }
        uint64_t result = (char *)sub_1885AC0(v8, v184, v7, a3);
LABEL_214:
        *(void *)uint64_t v190 = result;
        if (!result) {
          return result;
        }
LABEL_215:
        int v111 = sub_11947B8((uint64_t)a3, (char **)v190, a3[11].i32[1]);
        uint64_t result = *(char **)v190;
        if (v111) {
          return result;
        }
        break;
      case 0x23u:
        if (v8 != 26) {
          goto LABEL_372;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v126 = *(void *)(a1 + 280);
        if (!v126)
        {
          uint64_t v127 = (void *)(*v185 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v185) {
            uint64_t v127 = (void *)*v127;
          }
          uint64_t v126 = sub_169537C((uint64_t)v127);
          *(void *)(a1 + 280) = v126;
          uint64_t v7 = *(char **)v190;
        }
        uint64_t result = sub_1688EE0(a3, v126, (unsigned __int8 *)v7);
        goto LABEL_214;
      case 0x24u:
        if (v8 != 32) {
          goto LABEL_372;
        }
        v128 = v7 + 1;
        unint64_t v52 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_257;
        }
        int v129 = *v128;
        int v130 = v52 + (v129 << 7);
        unint64_t v52 = (v130 - 128);
        if (v129 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v7, (v130 - 128));
          *(void *)uint64_t v190 = result;
          if (!result) {
            return result;
          }
          unint64_t v52 = v176;
        }
        else
        {
          v128 = v7 + 2;
LABEL_257:
          *(void *)uint64_t v190 = v128;
        }
        if (sub_1479AB0(v52))
        {
          *(_DWORD *)(a1 + 16) |= 0x80000000;
          *(_DWORD *)(a1 + 396) = v52;
          goto LABEL_215;
        }
        if (*v185) {
          uint64_t v180 = (std::string *)((*v185 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v180 = (std::string *)sub_188DBD8(v185);
        }
        int v181 = 36;
        goto LABEL_364;
      case 0x25u:
        if (v8 != 42) {
          goto LABEL_372;
        }
        uint64_t result = v7 - 2;
        while (1)
        {
          v131 = result + 2;
          *(void *)uint64_t v190 = result + 2;
          v132 = *(_DWORD **)(a1 + 192);
          if (v132 && (uint64_t v133 = *(int *)(a1 + 184), (int)v133 < *v132))
          {
            *(_DWORD *)(a1 + 184) = v133 + 1;
            v134 = *(std::string **)&v132[2 * v133 + 2];
          }
          else
          {
            if (!*v189) {
              operator new();
            }
            *uint64_t v136 = v135;
            v136[1] = sub_3A6EDC;
            void *v135 = 0;
            v135[1] = 0;
            v135[2] = 0;
            v134 = (std::string *)sub_188CDC8((uint64_t)v189, (uint64_t)v135);
            v131 = *(char **)v190;
          }
          uint64_t result = (char *)sub_188C244(v134, v131, (uint64_t)a3);
          *(void *)uint64_t v190 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 682) {
            goto LABEL_215;
          }
        }
      case 0x26u:
        if (v8 != 50) {
          goto LABEL_372;
        }
        uint64_t result = v7 - 2;
        while (1)
        {
          v137 = result + 2;
          *(void *)uint64_t v190 = result + 2;
          v138 = *(_DWORD **)(a1 + 216);
          if (v138 && (uint64_t v139 = *(int *)(a1 + 208), (int)v139 < *v138))
          {
            *(_DWORD *)(a1 + 208) = v139 + 1;
            uint64_t v140 = *(void *)&v138[2 * v139 + 2];
          }
          else
          {
            v141 = sub_1694F38(*v187);
            uint64_t v140 = sub_188CDC8((uint64_t)v187, (uint64_t)v141);
            v137 = *(char **)v190;
          }
          uint64_t result = (char *)sub_154F378(a3, v140, (unsigned __int8 *)v137);
          *(void *)uint64_t v190 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 690) {
            goto LABEL_215;
          }
        }
      case 0x27u:
        if (v8 != 58) {
          goto LABEL_372;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        uint64_t v142 = *(void *)(a1 + 288);
        if (!v142)
        {
          uint64_t v143 = (void *)(*v185 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v185) {
            uint64_t v143 = (void *)*v143;
          }
          uint64_t v142 = sub_1694FF0((uint64_t)v143);
          *(void *)(a1 + 288) = v142;
          uint64_t v7 = *(char **)v190;
        }
        uint64_t result = sub_167BE04(a3, v142, (unsigned __int8 *)v7);
        goto LABEL_214;
      case 0x28u:
        if (v8 != 66) {
          goto LABEL_372;
        }
        *(_DWORD *)(a1 + 16) |= 0x200u;
        uint64_t v144 = *(void *)(a1 + 296);
        if (!v144)
        {
          v145 = (void *)(*v185 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v185) {
            v145 = (void *)*v145;
          }
          sub_16952B8((uint64_t)v145);
          uint64_t v144 = v146;
          *(void *)(a1 + 296) = v146;
          uint64_t v7 = *(char **)v190;
        }
        uint64_t result = (char *)sub_1688F70(a3, v144, (unsigned __int8 *)v7);
        goto LABEL_214;
      case 0x29u:
        if (v8 != 74) {
          goto LABEL_372;
        }
        *(_DWORD *)(a1 + 16) |= 0x400u;
        v147 = *(void **)(a1 + 304);
        if (!v147)
        {
          uint64_t v148 = (void *)(*v185 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v185) {
            uint64_t v148 = (void *)*v148;
          }
          v147 = sub_16951C0((uint64_t)v148);
          *(void *)(a1 + 304) = v147;
          uint64_t v7 = *(char **)v190;
        }
        uint64_t result = sub_1689000(a3, (uint64_t)v147, (unsigned __int8 *)v7);
        goto LABEL_214;
      case 0x2Au:
        if (v8 != 80) {
          goto LABEL_372;
        }
        *(_DWORD *)(a1 + 20) |= 1u;
        v149 = v7 + 1;
        uint64_t v150 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_304;
        }
        int v151 = *v149;
        uint64_t v150 = v150 + (v151 << 7) - 128;
        if (v151 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v7, v150);
          *(void *)uint64_t v190 = result;
          *(unsigned char *)(a1 + 400) = v177 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v149 = v7 + 2;
LABEL_304:
          *(void *)uint64_t v190 = v149;
          *(unsigned char *)(a1 + 400) = v150 != 0;
        }
        goto LABEL_215;
      case 0x2Bu:
        if (v8 != 88) {
          goto LABEL_372;
        }
        uint64_t v152 = v7 + 1;
        unint64_t v52 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_309;
        }
        int v153 = *v152;
        int v154 = v52 + (v153 << 7);
        unint64_t v52 = (v154 - 128);
        if (v153 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v7, (v154 - 128));
          *(void *)uint64_t v190 = result;
          if (!result) {
            return result;
          }
          unint64_t v52 = v178;
        }
        else
        {
          uint64_t v152 = v7 + 2;
LABEL_309:
          *(void *)uint64_t v190 = v152;
        }
        if (v52 > 5)
        {
          if (*v185) {
            uint64_t v180 = (std::string *)((*v185 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v180 = (std::string *)sub_188DBD8(v185);
          }
          int v181 = 43;
LABEL_364:
          sub_188C020(v181, v52, v180);
        }
        else
        {
          *(_DWORD *)(a1 + 20) |= 2u;
          *(_DWORD *)(a1 + 404) = v52;
        }
        goto LABEL_215;
      case 0x2Cu:
        if (v8 != 96) {
          goto LABEL_372;
        }
        *(_DWORD *)(a1 + 20) |= 4u;
        v155 = v7 + 1;
        int v156 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_316;
        }
        int v157 = *v155;
        int v156 = v156 + (v157 << 7) - 128;
        if (v157 < 0)
        {
          uint64_t result = (char *)sub_188C0D0((uint64_t)v7, v156);
          *(void *)uint64_t v190 = result;
          *(_DWORD *)(a1 + 408) = v179;
          if (!result) {
            return result;
          }
        }
        else
        {
          v155 = v7 + 2;
LABEL_316:
          *(void *)uint64_t v190 = v155;
          *(_DWORD *)(a1 + 408) = v156;
        }
        goto LABEL_215;
      default:
        goto LABEL_372;
    }
  }
}

char *sub_1688E50(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15BFEE0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1688EE0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1680D2C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1688F70(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_167F0A4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1689000(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_167E2D8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1689090(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 48) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_168BD4C(v8, v10, a3);
    }
  }
  uint64_t v11 = *(unsigned int *)(a1 + 56);
  if ((int)v11 >= 1)
  {
    for (uint64_t j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v13 = *(int *)(*(void *)(a1 + 64) + 4 * j);
      *__dst = 16;
      __dst[1] = v13;
      if (v13 > 0x7F)
      {
        __dst[1] = v13 | 0x80;
        unint64_t v14 = v13 >> 7;
        __dst[2] = v13 >> 7;
        __dst += 3;
        if (v13 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v15 = v14 >> 14;
            v14 >>= 7;
            *__dst++ = v14;
          }
          while (v15);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  int v16 = *(_DWORD *)(a1 + 80);
  if (v16)
  {
    for (int k = 0; k != v16; ++k)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      *__dst = 26;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      __dst[1] = v19;
      if (v19 > 0x7F) {
        int v20 = sub_188A9CC(v19, __dst + 1);
      }
      else {
        int v20 = __dst + 2;
      }
      __dst = sub_167B4E4(v18, v20, a3);
    }
  }
  int v21 = *(_DWORD *)(a1 + 16);
  if (v21)
  {
    __dst = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 224) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v21 & 0x40) == 0)
    {
LABEL_28:
      if ((v21 & 0x800) == 0) {
        goto LABEL_43;
      }
      goto LABEL_37;
    }
  }
  else if ((v21 & 0x40) == 0)
  {
    goto LABEL_28;
  }
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v22 = *(void *)(a1 + 272);
  *__dst = 42;
  unsigned int v23 = *(_DWORD *)(v22 + 44);
  __dst[1] = v23;
  if (v23 > 0x7F) {
    unint64_t v24 = sub_188A9CC(v23, __dst + 1);
  }
  else {
    unint64_t v24 = __dst + 2;
  }
  __dst = sub_15B0C0C(v22, v24, a3);
  if ((v21 & 0x800) != 0)
  {
LABEL_37:
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v25 = *(void *)(a1 + 312);
    *__dst = 48;
    __dst[1] = v25;
    if (v25 > 0x7F)
    {
      __dst[1] = v25 | 0x80;
      unint64_t v26 = v25 >> 7;
      __dst[2] = v25 >> 7;
      __dst += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v27 = v26 >> 14;
          v26 >>= 7;
          *__dst++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      __dst += 2;
    }
  }
LABEL_43:
  if ((v21 & 0x1000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v28 = *(void *)(a1 + 320);
    *__dst = 56;
    __dst[1] = v28;
    if (v28 > 0x7F)
    {
      __dst[1] = v28 | 0x80;
      unint64_t v29 = v28 >> 7;
      __dst[2] = v28 >> 7;
      __dst += 3;
      if (v28 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v30 = v29 >> 14;
          v29 >>= 7;
          *__dst++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v21 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v31 = *(void *)(a1 + 328);
    *__dst = 64;
    __dst[1] = v31;
    if (v31 > 0x7F)
    {
      __dst[1] = v31 | 0x80;
      unint64_t v32 = v31 >> 7;
      __dst[2] = v31 >> 7;
      __dst += 3;
      if (v31 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v33 = v32 >> 14;
          v32 >>= 7;
          *__dst++ = v32;
        }
        while (v33);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v21 & 0x100000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v34 = *(unsigned char *)(a1 + 360);
    *__dst = 72;
    __dst[1] = v34;
    __dst += 2;
  }
  if ((v21 & 0x4000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v35 = *(_DWORD *)(a1 + 336);
    *__dst = 80;
    __dst[1] = v35;
    if (v35 > 0x7F)
    {
      __dst[1] = v35 | 0x80;
      unsigned int v36 = v35 >> 7;
      __dst[2] = v35 >> 7;
      __dst += 3;
      if (v35 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v37 = v36 >> 14;
          v36 >>= 7;
          *__dst++ = v36;
        }
        while (v37);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v21 & 0x8000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v38 = *(int *)(a1 + 340);
    *__dst = 88;
    __dst[1] = v38;
    if (v38 > 0x7F)
    {
      __dst[1] = v38 | 0x80;
      unint64_t v39 = v38 >> 7;
      __dst[2] = v38 >> 7;
      __dst += 3;
      if (v38 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v40 = v39 >> 14;
          v39 >>= 7;
          *__dst++ = v39;
        }
        while (v40);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v21 & 0x10000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v41 = *(_DWORD *)(a1 + 344);
    *__dst = 96;
    __dst[1] = v41;
    if (v41 > 0x7F)
    {
      __dst[1] = v41 | 0x80;
      unsigned int v42 = v41 >> 7;
      __dst[2] = v41 >> 7;
      __dst += 3;
      if (v41 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v43 = v42 >> 14;
          v42 >>= 7;
          *__dst++ = v42;
        }
        while (v43);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  uint64_t v44 = *(unsigned int *)(a1 + 96);
  if ((int)v44 >= 1)
  {
    for (uint64_t m = 0; m != v44; ++m)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unsigned int v46 = *(_DWORD *)(*(void *)(a1 + 104) + 4 * m);
      *__dst = 104;
      __dst[1] = v46;
      if (v46 > 0x7F)
      {
        __dst[1] = v46 | 0x80;
        unsigned int v47 = v46 >> 7;
        __dst[2] = v46 >> 7;
        __dst += 3;
        if (v46 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unsigned int v48 = v47 >> 14;
            v47 >>= 7;
            *__dst++ = v47;
          }
          while (v48);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  if ((v21 & 0x200000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v49 = *(unsigned char *)(a1 + 361);
    *__dst = 112;
    __dst[1] = v49;
    __dst += 2;
    if ((v21 & 0x20000) == 0)
    {
LABEL_93:
      if ((v21 & 0x40000) == 0) {
        goto LABEL_107;
      }
      goto LABEL_101;
    }
  }
  else if ((v21 & 0x20000) == 0)
  {
    goto LABEL_93;
  }
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  int v50 = *(_DWORD *)(a1 + 348);
  *__dst = 125;
  *(_DWORD *)(__dst + 1) = v50;
  __dst += 5;
  if ((v21 & 0x40000) != 0)
  {
LABEL_101:
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v51 = *(_DWORD *)(a1 + 352);
    *(_WORD *)__dst = 384;
    __dst[2] = v51;
    if (v51 > 0x7F)
    {
      __dst[2] = v51 | 0x80;
      unsigned int v52 = v51 >> 7;
      __dst[3] = v51 >> 7;
      __dst += 4;
      if (v51 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v53 = v52 >> 14;
          v52 >>= 7;
          *__dst++ = v52;
        }
        while (v53);
      }
    }
    else
    {
      __dst += 3;
    }
  }
LABEL_107:
  if ((v21 & 0x80000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v54 = *(_DWORD *)(a1 + 356);
    *(_WORD *)__dst = 392;
    __dst[2] = v54;
    if (v54 > 0x7F)
    {
      __dst[2] = v54 | 0x80;
      unsigned int v55 = v54 >> 7;
      __dst[3] = v54 >> 7;
      __dst += 4;
      if (v54 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v56 = v55 >> 14;
          v55 >>= 7;
          *__dst++ = v55;
        }
        while (v56);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  if ((v21 & 2) != 0) {
    __dst = sub_117A0AC(a3, 18, (const void **)(*(void *)(a1 + 232) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v21 & 4) != 0) {
    __dst = sub_117A0AC(a3, 19, (const void **)(*(void *)(a1 + 240) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v57 = *(unsigned int *)(a1 + 120);
  if ((int)v57 >= 1)
  {
    uint64_t v58 = 0;
    uint64_t v59 = 8 * v57;
    do
    {
      int v60 = *(void **)(*(void *)(a1 + 128) + v58 + 8);
      if (*((char *)v60 + 23) < 0)
      {
        int64_t v61 = v60[1];
        if (v61 > 127) {
          goto LABEL_129;
        }
      }
      else
      {
        int64_t v61 = *((unsigned __int8 *)v60 + 23);
      }
      if ((uint64_t)(*a3 - (void)__dst + 13) >= v61)
      {
        *(_WORD *)__dst = 418;
        __dst[2] = v61;
        if (*((char *)v60 + 23) < 0) {
          int v60 = (void *)*v60;
        }
        int v62 = __dst + 3;
        memcpy(v62, v60, v61);
        __dst = &v62[v61];
        goto LABEL_127;
      }
LABEL_129:
      __dst = (char *)sub_188A868(a3, 20, (uint64_t)v60, __dst);
LABEL_127:
      v58 += 8;
    }
    while (v59 != v58);
  }
  if ((v21 & 0x1000000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v63 = *(int *)(a1 + 364);
    *(_WORD *)__dst = 424;
    __dst[2] = v63;
    if (v63 > 0x7F)
    {
      __dst[2] = v63 | 0x80;
      unint64_t v64 = v63 >> 7;
      __dst[3] = v63 >> 7;
      __dst += 4;
      if (v63 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v65 = v64 >> 14;
          v64 >>= 7;
          *__dst++ = v64;
        }
        while (v65);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  if ((v21 & 0x400000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v66 = *(unsigned char *)(a1 + 362);
    *(_WORD *)__dst = 432;
    __dst[2] = v66;
    __dst += 3;
  }
  if ((v21 & 0x2000000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v67 = *(int *)(a1 + 368);
    *(_WORD *)__dst = 440;
    __dst[2] = v67;
    if (v67 > 0x7F)
    {
      __dst[2] = v67 | 0x80;
      unint64_t v68 = v67 >> 7;
      __dst[3] = v67 >> 7;
      __dst += 4;
      if (v67 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v69 = v68 >> 14;
          v68 >>= 7;
          *__dst++ = v68;
        }
        while (v69);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  if ((v21 & 0x800000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v70 = *(unsigned char *)(a1 + 363);
    *(_WORD *)__dst = 448;
    __dst[2] = v70;
    __dst += 3;
    if ((v21 & 8) == 0)
    {
LABEL_150:
      if ((v21 & 0x4000000) == 0) {
        goto LABEL_162;
      }
      goto LABEL_156;
    }
  }
  else if ((v21 & 8) == 0)
  {
    goto LABEL_150;
  }
  __dst = sub_117A0AC(a3, 25, (const void **)(*(void *)(a1 + 248) & 0xFFFFFFFFFFFFFFFELL), __dst);
  if ((v21 & 0x4000000) == 0) {
    goto LABEL_162;
  }
LABEL_156:
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  unint64_t v71 = *(int *)(a1 + 372);
  *(_WORD *)__dst = 464;
  __dst[2] = v71;
  if (v71 > 0x7F)
  {
    __dst[2] = v71 | 0x80;
    unint64_t v72 = v71 >> 7;
    __dst[3] = v71 >> 7;
    __dst += 4;
    if (v71 >= 0x4000)
    {
      do
      {
        *(__dst - 1) |= 0x80u;
        unint64_t v73 = v72 >> 14;
        v72 >>= 7;
        *__dst++ = v72;
      }
      while (v73);
    }
  }
  else
  {
    __dst += 3;
  }
LABEL_162:
  if ((v21 & 0x10) != 0) {
    __dst = sub_117A0AC(a3, 27, (const void **)(*(void *)(a1 + 256) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v21 & 0x8000000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v74 = *(int *)(a1 + 376);
    *(_WORD *)__dst = 480;
    __dst[2] = v74;
    if (v74 > 0x7F)
    {
      __dst[2] = v74 | 0x80;
      unint64_t v75 = v74 >> 7;
      __dst[3] = v74 >> 7;
      __dst += 4;
      if (v74 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v76 = v75 >> 14;
          v75 >>= 7;
          *__dst++ = v75;
        }
        while (v76);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  if ((v21 & 0x10000000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v77 = *(int *)(a1 + 380);
    *(_WORD *)__dst = 488;
    __dst[2] = v77;
    if (v77 > 0x7F)
    {
      __dst[2] = v77 | 0x80;
      unint64_t v78 = v77 >> 7;
      __dst[3] = v77 >> 7;
      __dst += 4;
      if (v77 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v79 = v78 >> 14;
          v78 >>= 7;
          *__dst++ = v78;
        }
        while (v79);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  if ((v21 & 0x20000000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v80 = *(void *)(a1 + 384);
    *(_WORD *)__dst = 497;
    *(void *)(__dst + 2) = v80;
    __dst += 10;
  }
  if ((v21 & 0x40000000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v81 = *(_DWORD *)(a1 + 392);
    *(_WORD *)__dst = 504;
    __dst[2] = v81;
    if (v81 > 0x7F)
    {
      __dst[2] = v81 | 0x80;
      unsigned int v82 = v81 >> 7;
      __dst[3] = v81 >> 7;
      __dst += 4;
      if (v81 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v83 = v82 >> 14;
          v82 >>= 7;
          *__dst++ = v82;
        }
        while (v83);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  if ((v21 & 0x20) != 0) {
    __dst = sub_117A0AC(a3, 32, (const void **)(*(void *)(a1 + 264) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v84 = *(_DWORD *)(a1 + 144);
  if (v84)
  {
    for (int n = 0; n != v84; ++n)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v86 = *(void *)(*(void *)(a1 + 152) + 8 * n + 8);
      *(_WORD *)__dst = 650;
      unsigned int v87 = *(_DWORD *)(v86 + 20);
      __dst[2] = v87;
      if (v87 > 0x7F) {
        uint64_t v88 = sub_188A9CC(v87, __dst + 2);
      }
      else {
        uint64_t v88 = __dst + 3;
      }
      __dst = sub_15C0134(v86, (unint64_t)v88, a3);
    }
  }
  uint64_t v89 = *(unsigned int *)(a1 + 160);
  if ((int)v89 >= 1)
  {
    for (iint i = 0; ii != v89; ++ii)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v91 = *(int *)(*(void *)(a1 + 168) + 4 * ii);
      *(_WORD *)__dst = 656;
      __dst[2] = v91;
      if (v91 > 0x7F)
      {
        __dst[2] = v91 | 0x80;
        unint64_t v92 = v91 >> 7;
        __dst[3] = v91 >> 7;
        __dst += 4;
        if (v91 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v93 = v92 >> 14;
            v92 >>= 7;
            *__dst++ = v92;
          }
          while (v93);
        }
      }
      else
      {
        __dst += 3;
      }
    }
  }
  if ((v21 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v94 = *(void *)(a1 + 280);
    *(_WORD *)__dst = 666;
    unsigned int v95 = *(_DWORD *)(v94 + 20);
    __dst[2] = v95;
    if (v95 > 0x7F) {
      int v96 = sub_188A9CC(v95, __dst + 2);
    }
    else {
      int v96 = __dst + 3;
    }
    __dst = sub_168179C(v94, (unint64_t)v96, a3);
  }
  if (v21 < 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v97 = *(int *)(a1 + 396);
    *(_WORD *)__dst = 672;
    __dst[2] = v97;
    if (v97 > 0x7F)
    {
      __dst[2] = v97 | 0x80;
      unint64_t v98 = v97 >> 7;
      __dst[3] = v97 >> 7;
      __dst += 4;
      if (v97 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v99 = v98 >> 14;
          v98 >>= 7;
          *__dst++ = v98;
        }
        while (v99);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  uint64_t v100 = *(unsigned int *)(a1 + 184);
  if ((int)v100 >= 1)
  {
    uint64_t v101 = 0;
    uint64_t v102 = 8 * v100;
    do
    {
      int v103 = *(void **)(*(void *)(a1 + 192) + v101 + 8);
      if (*((char *)v103 + 23) < 0)
      {
        int64_t v104 = v103[1];
        if (v104 > 127) {
          goto LABEL_233;
        }
      }
      else
      {
        int64_t v104 = *((unsigned __int8 *)v103 + 23);
      }
      if ((uint64_t)(*a3 - (void)__dst + 13) >= v104)
      {
        *(_WORD *)__dst = 682;
        __dst[2] = v104;
        if (*((char *)v103 + 23) < 0) {
          int v103 = (void *)*v103;
        }
        uint64_t v105 = __dst + 3;
        memcpy(v105, v103, v104);
        __dst = &v105[v104];
        goto LABEL_231;
      }
LABEL_233:
      __dst = (char *)sub_188A868(a3, 37, (uint64_t)v103, __dst);
LABEL_231:
      v101 += 8;
    }
    while (v102 != v101);
  }
  int v106 = *(_DWORD *)(a1 + 208);
  if (v106)
  {
    for (juint64_t j = 0; jj != v106; ++jj)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v108 = *(void *)(*(void *)(a1 + 216) + 8 * jj + 8);
      *(_WORD *)__dst = 690;
      unsigned int v109 = *(_DWORD *)(v108 + 20);
      __dst[2] = v109;
      if (v109 > 0x7F) {
        v110 = sub_188A9CC(v109, __dst + 2);
      }
      else {
        v110 = __dst + 3;
      }
      __dst = sub_167BE94(v108, v110, a3);
    }
  }
  if ((v21 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v111 = *(void *)(a1 + 288);
    *(_WORD *)__dst = 698;
    unsigned int v112 = *(_DWORD *)(v111 + 64);
    __dst[2] = v112;
    if (v112 > 0x7F) {
      v113 = sub_188A9CC(v112, __dst + 2);
    }
    else {
      v113 = __dst + 3;
    }
    __dst = sub_167CB2C(v111, v113, a3);
    if ((v21 & 0x200) == 0)
    {
LABEL_244:
      if ((v21 & 0x400) == 0) {
        goto LABEL_264;
      }
      goto LABEL_258;
    }
  }
  else if ((v21 & 0x200) == 0)
  {
    goto LABEL_244;
  }
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v114 = *(void *)(a1 + 296);
  *(_WORD *)__dst = 706;
  unsigned int v115 = *(_DWORD *)(v114 + 20);
  __dst[2] = v115;
  if (v115 > 0x7F) {
    uint64_t v116 = sub_188A9CC(v115, __dst + 2);
  }
  else {
    uint64_t v116 = __dst + 3;
  }
  __dst = sub_167F7E8(v114, v116, a3);
  if ((v21 & 0x400) != 0)
  {
LABEL_258:
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v117 = *(void *)(a1 + 304);
    *(_WORD *)__dst = 714;
    unsigned int v118 = *(_DWORD *)(v117 + 20);
    __dst[2] = v118;
    if (v118 > 0x7F) {
      v119 = sub_188A9CC(v118, __dst + 2);
    }
    else {
      v119 = __dst + 3;
    }
    __dst = sub_167E4C8(v117, (unint64_t)v119, a3);
  }
LABEL_264:
  int v120 = *(_DWORD *)(a1 + 20);
  if (v120)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v121 = *(unsigned char *)(a1 + 400);
    *(_WORD *)__dst = 720;
    __dst[2] = v121;
    __dst += 3;
  }
  if ((v120 & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v122 = *(int *)(a1 + 404);
    *(_WORD *)__dst = 728;
    __dst[2] = v122;
    if (v122 > 0x7F)
    {
      __dst[2] = v122 | 0x80;
      unint64_t v123 = v122 >> 7;
      __dst[3] = v122 >> 7;
      __dst += 4;
      if (v122 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v124 = v123 >> 14;
          v123 >>= 7;
          *__dst++ = v123;
        }
        while (v124);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  if ((v120 & 4) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v125 = *(_DWORD *)(a1 + 408);
    *(_WORD *)__dst = 736;
    __dst[2] = v125;
    if (v125 > 0x7F)
    {
      __dst[2] = v125 | 0x80;
      unsigned int v126 = v125 >> 7;
      __dst[3] = v125 >> 7;
      __dst += 4;
      if (v125 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v127 = v126 >> 14;
          v126 >>= 7;
          *__dst++ = v126;
        }
        while (v127);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  uint64_t v128 = *(void *)(a1 + 8);
  if ((v128 & 1) == 0) {
    return __dst;
  }
  unint64_t v130 = v128 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v130 + 31) < 0)
  {
    v131 = *(void **)(v130 + 8);
    uint64_t v132 = *(void *)(v130 + 16);
  }
  else
  {
    v131 = (void *)(v130 + 8);
    LODWORD(v132) = *(unsigned __int8 *)(v130 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v132)
  {
    uint64_t v133 = (int)v132;
    memcpy(__dst, v131, (int)v132);
    __dst += v133;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v131, v132, __dst);
}

uint64_t sub_168A334(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_168C228(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 56);
  if (v8)
  {
    uint64_t v9 = 0;
    int v10 = 0;
    do
    {
      int v11 = *(_DWORD *)(*(void *)(a1 + 64) + 4 * v10);
      if (v11 < 0) {
        uint64_t v12 = 10;
      }
      else {
        uint64_t v12 = (9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6;
      }
      v9 += v12;
      ++v10;
    }
    while (v8 != v10);
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v13 = *(int *)(a1 + 80);
  uint64_t v14 = v2 + v8 + v9 + v13;
  uint64_t v15 = *(void *)(a1 + 88);
  if (v15) {
    int v16 = (uint64_t *)(v15 + 8);
  }
  else {
    int v16 = 0;
  }
  if (v13)
  {
    uint64_t v17 = 8 * v13;
    do
    {
      uint64_t v18 = *v16++;
      uint64_t v19 = sub_167B5D0(v18);
      v14 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6);
      v17 -= 8;
    }
    while (v17);
  }
  uint64_t v20 = sub_188D4F0((unsigned int *)(a1 + 96));
  uint64_t v21 = *(unsigned int *)(a1 + 120);
  uint64_t v22 = v20 + v14 + *(unsigned int *)(a1 + 96) + 2 * v21;
  if ((int)v21 >= 1)
  {
    unsigned int v23 = (uint64_t *)(*(void *)(a1 + 128) + 8);
    do
    {
      uint64_t v24 = *v23++;
      uint64_t v25 = *(unsigned __int8 *)(v24 + 23);
      uint64_t v26 = *(void *)(v24 + 8);
      if ((v25 & 0x80u) == 0) {
        uint64_t v26 = v25;
      }
      v22 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6);
      --v21;
    }
    while (v21);
  }
  uint64_t v27 = *(int *)(a1 + 144);
  uint64_t v28 = v22 + 2 * v27;
  uint64_t v29 = *(void *)(a1 + 152);
  if (v29) {
    unint64_t v30 = (uint64_t *)(v29 + 8);
  }
  else {
    unint64_t v30 = 0;
  }
  if (v27)
  {
    uint64_t v31 = 8 * v27;
    do
    {
      uint64_t v32 = *v30++;
      uint64_t v33 = sub_15C0354(v32);
      v28 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6);
      v31 -= 8;
    }
    while (v31);
  }
  uint64_t v34 = *(unsigned int *)(a1 + 160);
  if (v34)
  {
    int v35 = 0;
    uint64_t v36 = 0;
    do
    {
      int v37 = *(_DWORD *)(*(void *)(a1 + 168) + 4 * v35);
      if (v37 < 0) {
        uint64_t v38 = 10;
      }
      else {
        uint64_t v38 = (9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6;
      }
      v36 += v38;
      ++v35;
    }
    while (v34 != v35);
  }
  else
  {
    uint64_t v36 = 0;
  }
  uint64_t v39 = *(unsigned int *)(a1 + 184);
  uint64_t v40 = v36 + v28 + 2 * (v39 + v34);
  if ((int)v39 >= 1)
  {
    unsigned int v41 = (uint64_t *)(*(void *)(a1 + 192) + 8);
    do
    {
      uint64_t v42 = *v41++;
      uint64_t v43 = *(unsigned __int8 *)(v42 + 23);
      uint64_t v44 = *(void *)(v42 + 8);
      if ((v43 & 0x80u) == 0) {
        uint64_t v44 = v43;
      }
      v40 += v44 + ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6);
      --v39;
    }
    while (v39);
  }
  uint64_t v45 = *(int *)(a1 + 208);
  uint64_t v46 = v40 + 2 * v45;
  uint64_t v47 = *(void *)(a1 + 216);
  if (v47) {
    unsigned int v48 = (uint64_t *)(v47 + 8);
  }
  else {
    unsigned int v48 = 0;
  }
  if (v45)
  {
    uint64_t v49 = 8 * v45;
    do
    {
      uint64_t v50 = *v48++;
      uint64_t v51 = sub_167C1FC(v50);
      v46 += v51 + ((9 * (__clz(v51 | 1) ^ 0x1F) + 73) >> 6);
      v49 -= 8;
    }
    while (v49);
  }
  unsigned int v52 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v52) {
    goto LABEL_63;
  }
  if (v52)
  {
    unint64_t v70 = *(void *)(a1 + 224) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v71 = *(unsigned __int8 *)(v70 + 23);
    uint64_t v72 = *(void *)(v70 + 8);
    if ((v71 & 0x80u) == 0) {
      uint64_t v72 = v71;
    }
    v46 += v72 + ((9 * (__clz(v72 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v52 & 2) == 0)
    {
LABEL_56:
      if ((v52 & 4) == 0) {
        goto LABEL_57;
      }
      goto LABEL_131;
    }
  }
  else if ((v52 & 2) == 0)
  {
    goto LABEL_56;
  }
  unint64_t v73 = *(void *)(a1 + 232) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v74 = *(unsigned __int8 *)(v73 + 23);
  uint64_t v75 = *(void *)(v73 + 8);
  if ((v74 & 0x80u) == 0) {
    uint64_t v75 = v74;
  }
  v46 += v75 + ((9 * (__clz(v75 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v52 & 4) == 0)
  {
LABEL_57:
    if ((v52 & 8) == 0) {
      goto LABEL_58;
    }
    goto LABEL_134;
  }
LABEL_131:
  unint64_t v76 = *(void *)(a1 + 240) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v77 = *(unsigned __int8 *)(v76 + 23);
  uint64_t v78 = *(void *)(v76 + 8);
  if ((v77 & 0x80u) == 0) {
    uint64_t v78 = v77;
  }
  v46 += v78 + ((9 * (__clz(v78 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v52 & 8) == 0)
  {
LABEL_58:
    if ((v52 & 0x10) == 0) {
      goto LABEL_59;
    }
    goto LABEL_137;
  }
LABEL_134:
  unint64_t v79 = *(void *)(a1 + 248) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v80 = *(unsigned __int8 *)(v79 + 23);
  uint64_t v81 = *(void *)(v79 + 8);
  if ((v80 & 0x80u) == 0) {
    uint64_t v81 = v80;
  }
  v46 += v81 + ((9 * (__clz(v81 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v52 & 0x10) == 0)
  {
LABEL_59:
    if ((v52 & 0x20) == 0) {
      goto LABEL_60;
    }
LABEL_140:
    unint64_t v85 = *(void *)(a1 + 264) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v86 = *(unsigned __int8 *)(v85 + 23);
    uint64_t v87 = *(void *)(v85 + 8);
    if ((v86 & 0x80u) == 0) {
      uint64_t v87 = v86;
    }
    v46 += v87 + ((9 * (__clz(v87 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v52 & 0x40) == 0)
    {
LABEL_61:
      if ((v52 & 0x80) == 0) {
        goto LABEL_63;
      }
      goto LABEL_62;
    }
    goto LABEL_143;
  }
LABEL_137:
  unint64_t v82 = *(void *)(a1 + 256) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v83 = *(unsigned __int8 *)(v82 + 23);
  uint64_t v84 = *(void *)(v82 + 8);
  if ((v83 & 0x80u) == 0) {
    uint64_t v84 = v83;
  }
  v46 += v84 + ((9 * (__clz(v84 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v52 & 0x20) != 0) {
    goto LABEL_140;
  }
LABEL_60:
  if ((v52 & 0x40) == 0) {
    goto LABEL_61;
  }
LABEL_143:
  uint64_t v88 = sub_15B0D90(*(void *)(a1 + 272));
  v46 += v88 + ((9 * (__clz(v88 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v52 & 0x80) != 0)
  {
LABEL_62:
    uint64_t v53 = sub_1681C84(*(void *)(a1 + 280));
    v46 += v53 + ((9 * (__clz(v53 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_63:
  if ((v52 & 0xFF00) == 0) {
    goto LABEL_76;
  }
  if ((v52 & 0x100) != 0)
  {
    uint64_t v89 = sub_167CCF4(*(void *)(a1 + 288));
    v46 += v89 + ((9 * (__clz(v89 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v52 & 0x200) == 0)
    {
LABEL_66:
      if ((v52 & 0x400) == 0) {
        goto LABEL_67;
      }
      goto LABEL_147;
    }
  }
  else if ((v52 & 0x200) == 0)
  {
    goto LABEL_66;
  }
  uint64_t v90 = sub_167FC88(*(void *)(a1 + 296));
  v46 += v90 + ((9 * (__clz(v90 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v52 & 0x400) == 0)
  {
LABEL_67:
    if ((v52 & 0x800) == 0) {
      goto LABEL_68;
    }
    goto LABEL_148;
  }
LABEL_147:
  uint64_t v91 = sub_167E66C(*(void *)(a1 + 304));
  v46 += v91 + ((9 * (__clz(v91 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v52 & 0x800) == 0)
  {
LABEL_68:
    if ((v52 & 0x1000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_149;
  }
LABEL_148:
  v46 += ((9 * (__clz(*(void *)(a1 + 312) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v52 & 0x1000) == 0)
  {
LABEL_69:
    if ((v52 & 0x2000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_150;
  }
LABEL_149:
  v46 += ((9 * (__clz(*(void *)(a1 + 320) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v52 & 0x2000) == 0)
  {
LABEL_70:
    if ((v52 & 0x4000) == 0) {
      goto LABEL_71;
    }
LABEL_151:
    v46 += ((9 * (__clz(*(_DWORD *)(a1 + 336) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v52 & 0x8000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_72;
  }
LABEL_150:
  v46 += ((9 * (__clz(*(void *)(a1 + 328) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v52 & 0x4000) != 0) {
    goto LABEL_151;
  }
LABEL_71:
  if ((v52 & 0x8000) == 0) {
    goto LABEL_76;
  }
LABEL_72:
  int v54 = *(_DWORD *)(a1 + 340);
  uint64_t v55 = (9 * (__clz(v54 | 1) ^ 0x1F) + 73) >> 6;
  if (v54 >= 0) {
    uint64_t v56 = v55;
  }
  else {
    uint64_t v56 = 10;
  }
  v46 += v56 + 1;
LABEL_76:
  if ((v52 & 0xFF0000) != 0)
  {
    if ((v52 & 0x10000) != 0) {
      v46 += ((9 * (__clz(*(_DWORD *)(a1 + 344) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v57 = v46 + 5;
    if ((v52 & 0x20000) == 0) {
      uint64_t v57 = v46;
    }
    if ((v52 & 0x40000) != 0) {
      v57 += ((9 * (__clz(*(_DWORD *)(a1 + 352) | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    if ((v52 & 0x80000) != 0) {
      v57 += ((9 * (__clz(*(_DWORD *)(a1 + 356) | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    if ((v52 & 0x100000) != 0) {
      v57 += 2;
    }
    if ((v52 & 0x200000) != 0) {
      v57 += 2;
    }
    if ((v52 & 0x400000) != 0) {
      v57 += 3;
    }
    if ((v52 & 0x800000) != 0) {
      uint64_t v46 = v57 + 3;
    }
    else {
      uint64_t v46 = v57;
    }
  }
  if (HIBYTE(v52))
  {
    if ((v52 & 0x1000000) != 0)
    {
      int v92 = *(_DWORD *)(a1 + 364);
      uint64_t v93 = (9 * (__clz(v92 | 1) ^ 0x1F) + 73) >> 6;
      if (v92 >= 0) {
        uint64_t v94 = v93;
      }
      else {
        uint64_t v94 = 10;
      }
      v46 += v94 + 2;
      if ((v52 & 0x2000000) == 0)
      {
LABEL_97:
        if ((v52 & 0x4000000) == 0) {
          goto LABEL_98;
        }
        goto LABEL_161;
      }
    }
    else if ((v52 & 0x2000000) == 0)
    {
      goto LABEL_97;
    }
    int v95 = *(_DWORD *)(a1 + 368);
    uint64_t v96 = (9 * (__clz(v95 | 1) ^ 0x1F) + 73) >> 6;
    if (v95 >= 0) {
      uint64_t v97 = v96;
    }
    else {
      uint64_t v97 = 10;
    }
    v46 += v97 + 2;
    if ((v52 & 0x4000000) == 0)
    {
LABEL_98:
      if ((v52 & 0x8000000) == 0) {
        goto LABEL_99;
      }
      goto LABEL_165;
    }
LABEL_161:
    int v98 = *(_DWORD *)(a1 + 372);
    uint64_t v99 = ((9 * (__clz(v98 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v98 >= 0) {
      uint64_t v100 = v99;
    }
    else {
      uint64_t v100 = 12;
    }
    v46 += v100;
    if ((v52 & 0x8000000) == 0)
    {
LABEL_99:
      if ((v52 & 0x10000000) == 0)
      {
LABEL_104:
        if ((v52 & 0x20000000) != 0) {
          v46 += 10;
        }
        if ((v52 & 0x40000000) != 0) {
          v46 += ((9 * (__clz(*(_DWORD *)(a1 + 392) | 1) ^ 0x1F) + 73) >> 6) + 2;
        }
        if ((v52 & 0x80000000) != 0)
        {
          int v61 = *(_DWORD *)(a1 + 396);
          uint64_t v62 = ((9 * (__clz(v61 | 1) ^ 0x1F) + 73) >> 6) + 2;
          if (v61 >= 0) {
            uint64_t v63 = v62;
          }
          else {
            uint64_t v63 = 12;
          }
          v46 += v63;
        }
        goto LABEL_113;
      }
LABEL_100:
      int v58 = *(_DWORD *)(a1 + 380);
      uint64_t v59 = ((9 * (__clz(v58 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v58 >= 0) {
        uint64_t v60 = v59;
      }
      else {
        uint64_t v60 = 12;
      }
      v46 += v60;
      goto LABEL_104;
    }
LABEL_165:
    int v101 = *(_DWORD *)(a1 + 376);
    uint64_t v102 = ((9 * (__clz(v101 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v101 >= 0) {
      uint64_t v103 = v102;
    }
    else {
      uint64_t v103 = 12;
    }
    v46 += v103;
    if ((v52 & 0x10000000) == 0) {
      goto LABEL_104;
    }
    goto LABEL_100;
  }
LABEL_113:
  int v64 = *(_DWORD *)(a1 + 20);
  if ((v64 & 7) != 0)
  {
    if (v64) {
      v46 += 3;
    }
    if ((v64 & 2) != 0)
    {
      int v65 = *(_DWORD *)(a1 + 404);
      uint64_t v66 = ((9 * (__clz(v65 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v65 >= 0) {
        uint64_t v67 = v66;
      }
      else {
        uint64_t v67 = 12;
      }
      v46 += v67;
    }
    if ((v64 & 4) != 0) {
      v46 += ((9 * (__clz(*(_DWORD *)(a1 + 408) | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  uint64_t v68 = *(void *)(a1 + 8);
  if (v68)
  {
    unint64_t v104 = v68 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v104 + 31) < 0) {
      uint64_t v105 = *(void *)(v104 + 16);
    }
    else {
      uint64_t v105 = *(unsigned __int8 *)(v104 + 31);
    }
    v46 += v105;
  }
  *(_DWORD *)(a1 + 24) = v46;
  return v46;
}

void sub_168ACAC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 48) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 32, *(_DWORD *)(a2 + 40));
    sub_16B4514((uint64_t *)(a1 + 32), v6, v5, v4, **(_DWORD **)(a1 + 48) - *(_DWORD *)(a1 + 40));
    int v7 = *(_DWORD *)(a1 + 40) + v4;
    *(_DWORD *)(a1 + 40) = v7;
    uint64_t v8 = *(int **)(a1 + 48);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = *(int *)(a1 + 56);
    sub_188C80C((unsigned int *)(a1 + 56), v10 + v9);
    uint64_t v11 = *(void *)(a1 + 64);
    *(_DWORD *)(a1 + 56) += *(_DWORD *)(a2 + 56);
    memcpy((void *)(v11 + 4 * v10), *(const void **)(a2 + 64), 4 * *(int *)(a2 + 56));
  }
  int v12 = *(_DWORD *)(a2 + 80);
  if (v12)
  {
    uint64_t v13 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v14 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_154F840((std::string *)(a1 + 72), v14, v13, v12, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v15 = *(_DWORD *)(a1 + 80) + v12;
    *(_DWORD *)(a1 + 80) = v15;
    int v16 = *(int **)(a1 + 88);
    if (*v16 < v15) {
      *int v16 = v15;
    }
  }
  int v17 = *(_DWORD *)(a2 + 96);
  if (v17)
  {
    uint64_t v18 = *(int *)(a1 + 96);
    sub_188C80C((unsigned int *)(a1 + 96), v18 + v17);
    uint64_t v19 = *(void *)(a1 + 104);
    *(_DWORD *)(a1 + 96) += *(_DWORD *)(a2 + 96);
    memcpy((void *)(v19 + 4 * v18), *(const void **)(a2 + 104), 4 * *(int *)(a2 + 96));
  }
  int v20 = *(_DWORD *)(a2 + 120);
  if (v20)
  {
    uint64_t v21 = (const std::string **)(*(void *)(a2 + 128) + 8);
    uint64_t v22 = (std::string **)sub_188CCE4(a1 + 112, *(_DWORD *)(a2 + 120));
    sub_188FB98(a1 + 112, v22, v21, v20, **(_DWORD **)(a1 + 128) - *(_DWORD *)(a1 + 120));
    int v23 = *(_DWORD *)(a1 + 120) + v20;
    *(_DWORD *)(a1 + 120) = v23;
    uint64_t v24 = *(int **)(a1 + 128);
    if (*v24 < v23) {
      *uint64_t v24 = v23;
    }
  }
  int v25 = *(_DWORD *)(a2 + 144);
  if (v25)
  {
    uint64_t v26 = (uint64_t *)(*(void *)(a2 + 152) + 8);
    uint64_t v27 = (std::string **)sub_188CCE4(a1 + 136, *(_DWORD *)(a2 + 144));
    sub_16B47D0((uint64_t *)(a1 + 136), v27, v26, v25, **(_DWORD **)(a1 + 152) - *(_DWORD *)(a1 + 144));
    int v28 = *(_DWORD *)(a1 + 144) + v25;
    *(_DWORD *)(a1 + 144) = v28;
    uint64_t v29 = *(int **)(a1 + 152);
    if (*v29 < v28) {
      *uint64_t v29 = v28;
    }
  }
  int v30 = *(_DWORD *)(a2 + 160);
  if (v30)
  {
    uint64_t v31 = *(int *)(a1 + 160);
    sub_188C80C((unsigned int *)(a1 + 160), v31 + v30);
    uint64_t v32 = *(void *)(a1 + 168);
    *(_DWORD *)(a1 + 160) += *(_DWORD *)(a2 + 160);
    memcpy((void *)(v32 + 4 * v31), *(const void **)(a2 + 168), 4 * *(int *)(a2 + 160));
  }
  int v33 = *(_DWORD *)(a2 + 184);
  if (v33)
  {
    uint64_t v34 = (const std::string **)(*(void *)(a2 + 192) + 8);
    int v35 = (std::string **)sub_188CCE4(a1 + 176, *(_DWORD *)(a2 + 184));
    sub_188FB98(a1 + 176, v35, v34, v33, **(_DWORD **)(a1 + 192) - *(_DWORD *)(a1 + 184));
    int v36 = *(_DWORD *)(a1 + 184) + v33;
    *(_DWORD *)(a1 + 184) = v36;
    int v37 = *(int **)(a1 + 192);
    if (*v37 < v36) {
      int *v37 = v36;
    }
  }
  int v38 = *(_DWORD *)(a2 + 208);
  if (v38)
  {
    uint64_t v39 = (uint64_t *)(*(void *)(a2 + 216) + 8);
    uint64_t v40 = (uint64_t *)sub_188CCE4(a1 + 200, *(_DWORD *)(a2 + 208));
    sub_154F8BC((uint64_t *)(a1 + 200), v40, v39, v38, **(_DWORD **)(a1 + 216) - *(_DWORD *)(a1 + 208));
    int v41 = *(_DWORD *)(a1 + 208) + v38;
    *(_DWORD *)(a1 + 208) = v41;
    uint64_t v42 = *(int **)(a1 + 216);
    if (*v42 < v41) {
      int *v42 = v41;
    }
  }
  unsigned int v43 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v43) {
    goto LABEL_69;
  }
  if (v43)
  {
    uint64_t v44 = (long long *)(*(void *)(a2 + 224) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v45 = *(void *)(a1 + 8);
    uint64_t v46 = (uint64_t *)(v45 & 0xFFFFFFFFFFFFFFFCLL);
    if (v45) {
      uint64_t v46 = (uint64_t *)*v46;
    }
    sub_1881DF4((std::string **)(a1 + 224), v44, v46);
    if ((v43 & 2) == 0)
    {
LABEL_28:
      if ((v43 & 4) == 0) {
        goto LABEL_29;
      }
      goto LABEL_41;
    }
  }
  else if ((v43 & 2) == 0)
  {
    goto LABEL_28;
  }
  uint64_t v47 = (long long *)(*(void *)(a2 + 232) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v48 = *(void *)(a1 + 8);
  uint64_t v49 = (uint64_t *)(v48 & 0xFFFFFFFFFFFFFFFCLL);
  if (v48) {
    uint64_t v49 = (uint64_t *)*v49;
  }
  sub_1881DF4((std::string **)(a1 + 232), v47, v49);
  if ((v43 & 4) == 0)
  {
LABEL_29:
    if ((v43 & 8) == 0) {
      goto LABEL_30;
    }
    goto LABEL_44;
  }
LABEL_41:
  uint64_t v50 = (long long *)(*(void *)(a2 + 240) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v51 = *(void *)(a1 + 8);
  unsigned int v52 = (uint64_t *)(v51 & 0xFFFFFFFFFFFFFFFCLL);
  if (v51) {
    unsigned int v52 = (uint64_t *)*v52;
  }
  sub_1881DF4((std::string **)(a1 + 240), v50, v52);
  if ((v43 & 8) == 0)
  {
LABEL_30:
    if ((v43 & 0x10) == 0) {
      goto LABEL_31;
    }
    goto LABEL_47;
  }
LABEL_44:
  uint64_t v53 = (long long *)(*(void *)(a2 + 248) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v54 = *(void *)(a1 + 8);
  uint64_t v55 = (uint64_t *)(v54 & 0xFFFFFFFFFFFFFFFCLL);
  if (v54) {
    uint64_t v55 = (uint64_t *)*v55;
  }
  sub_1881DF4((std::string **)(a1 + 248), v53, v55);
  if ((v43 & 0x10) == 0)
  {
LABEL_31:
    if ((v43 & 0x20) == 0) {
      goto LABEL_32;
    }
LABEL_50:
    uint64_t v59 = (long long *)(*(void *)(a2 + 264) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v60 = *(void *)(a1 + 8);
    int v61 = (uint64_t *)(v60 & 0xFFFFFFFFFFFFFFFCLL);
    if (v60) {
      int v61 = (uint64_t *)*v61;
    }
    sub_1881DF4((std::string **)(a1 + 264), v59, v61);
    if ((v43 & 0x40) == 0)
    {
LABEL_33:
      if ((v43 & 0x80) == 0) {
        goto LABEL_69;
      }
      goto LABEL_61;
    }
    goto LABEL_53;
  }
LABEL_47:
  uint64_t v56 = (long long *)(*(void *)(a2 + 256) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x10u;
  uint64_t v57 = *(void *)(a1 + 8);
  int v58 = (uint64_t *)(v57 & 0xFFFFFFFFFFFFFFFCLL);
  if (v57) {
    int v58 = (uint64_t *)*v58;
  }
  sub_1881DF4((std::string **)(a1 + 256), v56, v58);
  if ((v43 & 0x20) != 0) {
    goto LABEL_50;
  }
LABEL_32:
  if ((v43 & 0x40) == 0) {
    goto LABEL_33;
  }
LABEL_53:
  *(_DWORD *)(a1 + 16) |= 0x40u;
  uint64_t v62 = *(void *)(a1 + 272);
  if (!v62)
  {
    uint64_t v63 = *(void *)(a1 + 8);
    int v64 = (void *)(v63 & 0xFFFFFFFFFFFFFFFCLL);
    if (v63) {
      int v64 = (void *)*v64;
    }
    uint64_t v62 = sub_15C1918((uint64_t)v64);
    *(void *)(a1 + 272) = v62;
  }
  if (*(void *)(a2 + 272)) {
    int v65 = *(uint64_t (****)())(a2 + 272);
  }
  else {
    int v65 = &off_253F1A0;
  }
  sub_15B0E24(v62, (uint64_t)v65);
  if ((v43 & 0x80) != 0)
  {
LABEL_61:
    *(_DWORD *)(a1 + 16) |= 0x80u;
    uint64_t v66 = *(void *)(a1 + 280);
    if (!v66)
    {
      uint64_t v67 = *(void *)(a1 + 8);
      uint64_t v68 = (void *)(v67 & 0xFFFFFFFFFFFFFFFCLL);
      if (v67) {
        uint64_t v68 = (void *)*v68;
      }
      uint64_t v66 = sub_169537C((uint64_t)v68);
      *(void *)(a1 + 280) = v66;
    }
    if (*(void *)(a2 + 280)) {
      unint64_t v69 = *(uint64_t (****)())(a2 + 280);
    }
    else {
      unint64_t v69 = &off_2543478;
    }
    sub_1681F10(v66, (uint64_t)v69);
  }
LABEL_69:
  if ((v43 & 0xFF00) == 0) {
    goto LABEL_80;
  }
  if ((v43 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x100u;
    uint64_t v72 = *(std::string **)(a1 + 288);
    if (!v72)
    {
      uint64_t v73 = *(void *)(a1 + 8);
      uint64_t v74 = (void *)(v73 & 0xFFFFFFFFFFFFFFFCLL);
      if (v73) {
        uint64_t v74 = (void *)*v74;
      }
      uint64_t v72 = (std::string *)sub_1694FF0((uint64_t)v74);
      *(void *)(a1 + 288) = v72;
    }
    if (*(void *)(a2 + 288)) {
      uint64_t v75 = *(uint64_t (****)())(a2 + 288);
    }
    else {
      uint64_t v75 = &off_2543330;
    }
    sub_167C648(v72, (uint64_t)v75);
    if ((v43 & 0x200) == 0)
    {
LABEL_72:
      if ((v43 & 0x400) == 0) {
        goto LABEL_73;
      }
      goto LABEL_127;
    }
  }
  else if ((v43 & 0x200) == 0)
  {
    goto LABEL_72;
  }
  *(_DWORD *)(a1 + 16) |= 0x200u;
  uint64_t v76 = *(void *)(a1 + 296);
  if (!v76)
  {
    uint64_t v77 = *(void *)(a1 + 8);
    uint64_t v78 = (void *)(v77 & 0xFFFFFFFFFFFFFFFCLL);
    if (v77) {
      uint64_t v78 = (void *)*v78;
    }
    sub_16952B8((uint64_t)v78);
    *(void *)(a1 + 296) = v76;
  }
  if (*(void *)(a2 + 296)) {
    unint64_t v79 = *(uint64_t (****)())(a2 + 296);
  }
  else {
    unint64_t v79 = &off_25433F0;
  }
  sub_167FF38(v76, (uint64_t)v79);
  if ((v43 & 0x400) == 0)
  {
LABEL_73:
    if ((v43 & 0x800) == 0) {
      goto LABEL_74;
    }
    goto LABEL_135;
  }
LABEL_127:
  *(_DWORD *)(a1 + 16) |= 0x400u;
  uint64_t v80 = *(std::string **)(a1 + 304);
  if (!v80)
  {
    uint64_t v81 = *(void *)(a1 + 8);
    unint64_t v82 = (void *)(v81 & 0xFFFFFFFFFFFFFFFCLL);
    if (v81) {
      unint64_t v82 = (void *)*v82;
    }
    uint64_t v80 = (std::string *)sub_16951C0((uint64_t)v82);
    *(void *)(a1 + 304) = v80;
  }
  if (*(void *)(a2 + 304)) {
    uint64_t v83 = *(uint64_t (****)())(a2 + 304);
  }
  else {
    uint64_t v83 = &off_25433A0;
  }
  sub_117EF04(v80, (uint64_t)v83);
  if ((v43 & 0x800) == 0)
  {
LABEL_74:
    if ((v43 & 0x1000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_136;
  }
LABEL_135:
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  if ((v43 & 0x1000) == 0)
  {
LABEL_75:
    if ((v43 & 0x2000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_137;
  }
LABEL_136:
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  if ((v43 & 0x2000) == 0)
  {
LABEL_76:
    if ((v43 & 0x4000) == 0) {
      goto LABEL_77;
    }
LABEL_138:
    *(_DWORD *)(a1 + 336) = *(_DWORD *)(a2 + 336);
    if ((v43 & 0x8000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_78;
  }
LABEL_137:
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  if ((v43 & 0x4000) != 0) {
    goto LABEL_138;
  }
LABEL_77:
  if ((v43 & 0x8000) != 0) {
LABEL_78:
  }
    *(_DWORD *)(a1 + 340) = *(_DWORD *)(a2 + 340);
LABEL_79:
  *(_DWORD *)(a1 + 16) |= v43;
LABEL_80:
  if ((v43 & 0xFF0000) == 0) {
    goto LABEL_91;
  }
  if ((v43 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 344) = *(_DWORD *)(a2 + 344);
    if ((v43 & 0x20000) == 0)
    {
LABEL_83:
      if ((v43 & 0x40000) == 0) {
        goto LABEL_84;
      }
      goto LABEL_142;
    }
  }
  else if ((v43 & 0x20000) == 0)
  {
    goto LABEL_83;
  }
  *(_DWORD *)(a1 + 348) = *(_DWORD *)(a2 + 348);
  if ((v43 & 0x40000) == 0)
  {
LABEL_84:
    if ((v43 & 0x80000) == 0) {
      goto LABEL_85;
    }
    goto LABEL_143;
  }
LABEL_142:
  *(_DWORD *)(a1 + 352) = *(_DWORD *)(a2 + 352);
  if ((v43 & 0x80000) == 0)
  {
LABEL_85:
    if ((v43 & 0x100000) == 0) {
      goto LABEL_86;
    }
    goto LABEL_144;
  }
LABEL_143:
  *(_DWORD *)(a1 + 356) = *(_DWORD *)(a2 + 356);
  if ((v43 & 0x100000) == 0)
  {
LABEL_86:
    if ((v43 & 0x200000) == 0) {
      goto LABEL_87;
    }
    goto LABEL_145;
  }
LABEL_144:
  *(unsigned char *)(a1 + 360) = *(unsigned char *)(a2 + 360);
  if ((v43 & 0x200000) == 0)
  {
LABEL_87:
    if ((v43 & 0x400000) == 0) {
      goto LABEL_88;
    }
LABEL_146:
    *(unsigned char *)(a1 + 362) = *(unsigned char *)(a2 + 362);
    if ((v43 & 0x800000) == 0) {
      goto LABEL_90;
    }
    goto LABEL_89;
  }
LABEL_145:
  *(unsigned char *)(a1 + 361) = *(unsigned char *)(a2 + 361);
  if ((v43 & 0x400000) != 0) {
    goto LABEL_146;
  }
LABEL_88:
  if ((v43 & 0x800000) != 0) {
LABEL_89:
  }
    *(unsigned char *)(a1 + 363) = *(unsigned char *)(a2 + 363);
LABEL_90:
  *(_DWORD *)(a1 + 16) |= v43;
LABEL_91:
  if (!HIBYTE(v43)) {
    goto LABEL_101;
  }
  if ((v43 & 0x1000000) != 0)
  {
    *(_DWORD *)(a1 + 364) = *(_DWORD *)(a2 + 364);
    if ((v43 & 0x2000000) == 0)
    {
LABEL_94:
      if ((v43 & 0x4000000) == 0) {
        goto LABEL_95;
      }
      goto LABEL_153;
    }
  }
  else if ((v43 & 0x2000000) == 0)
  {
    goto LABEL_94;
  }
  *(_DWORD *)(a1 + 368) = *(_DWORD *)(a2 + 368);
  if ((v43 & 0x4000000) == 0)
  {
LABEL_95:
    if ((v43 & 0x8000000) == 0) {
      goto LABEL_96;
    }
    goto LABEL_154;
  }
LABEL_153:
  *(_DWORD *)(a1 + 372) = *(_DWORD *)(a2 + 372);
  if ((v43 & 0x8000000) == 0)
  {
LABEL_96:
    if ((v43 & 0x10000000) == 0) {
      goto LABEL_97;
    }
    goto LABEL_155;
  }
LABEL_154:
  *(_DWORD *)(a1 + 376) = *(_DWORD *)(a2 + 376);
  if ((v43 & 0x10000000) == 0)
  {
LABEL_97:
    if ((v43 & 0x20000000) == 0) {
      goto LABEL_98;
    }
    goto LABEL_156;
  }
LABEL_155:
  *(_DWORD *)(a1 + 380) = *(_DWORD *)(a2 + 380);
  if ((v43 & 0x20000000) == 0)
  {
LABEL_98:
    if ((v43 & 0x40000000) == 0) {
      goto LABEL_99;
    }
LABEL_157:
    *(_DWORD *)(a1 + 392) = *(_DWORD *)(a2 + 392);
    if ((v43 & 0x80000000) == 0) {
      goto LABEL_100;
    }
LABEL_158:
    *(_DWORD *)(a1 + 396) = *(_DWORD *)(a2 + 396);
    goto LABEL_100;
  }
LABEL_156:
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  if ((v43 & 0x40000000) != 0) {
    goto LABEL_157;
  }
LABEL_99:
  if ((v43 & 0x80000000) != 0) {
    goto LABEL_158;
  }
LABEL_100:
  *(_DWORD *)(a1 + 16) |= v43;
LABEL_101:
  int v70 = *(_DWORD *)(a2 + 20);
  if ((v70 & 7) == 0) {
    goto LABEL_107;
  }
  if ((v70 & 1) == 0)
  {
    if ((v70 & 2) == 0) {
      goto LABEL_104;
    }
LABEL_149:
    *(_DWORD *)(a1 + 404) = *(_DWORD *)(a2 + 404);
    if ((v70 & 4) == 0) {
      goto LABEL_106;
    }
    goto LABEL_105;
  }
  *(unsigned char *)(a1 + 400) = *(unsigned char *)(a2 + 400);
  if ((v70 & 2) != 0) {
    goto LABEL_149;
  }
LABEL_104:
  if ((v70 & 4) != 0) {
LABEL_105:
  }
    *(_DWORD *)(a1 + 408) = *(_DWORD *)(a2 + 408);
LABEL_106:
  *(_DWORD *)(a1 + 20) |= v70;
LABEL_107:
  uint64_t v71 = *(void *)(a2 + 8);
  if (v71)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v71 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_168B4FC(uint64_t a1)
{
  if (!sub_167C784(a1 + 32)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 208);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_167C784(*(void *)(*(void *)(a1 + 216) + 8 * v2) + 48);
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  int v7 = *(_DWORD *)(a1 + 16);
  if ((v7 & 0x40) != 0)
  {
    if (!sub_15B0F18(*(void *)(a1 + 272))) {
      return 0;
    }
    int v7 = *(_DWORD *)(a1 + 16);
  }
  if ((v7 & 0x80) == 0) {
    goto LABEL_13;
  }
  if (!sub_1683190(*(void *)(a1 + 280))) {
    return 0;
  }
  int v7 = *(_DWORD *)(a1 + 16);
LABEL_13:
  if ((v7 & 0x200) == 0) {
    return 1;
  }
  uint64_t v8 = *(void *)(a1 + 296);
  uint64_t v9 = *(unsigned int *)(v8 + 32);
  do
  {
    BOOL v5 = (int)v9 < 1;
    if ((int)v9 < 1) {
      break;
    }
    uint64_t v10 = v9 - 1;
    char v11 = sub_167C784(*(void *)(*(void *)(v8 + 40) + 8 * v9) + 48);
    uint64_t v9 = v10;
  }
  while ((v11 & 1) != 0);
  return v5;
}

void *sub_168B5CC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.Incident");
}

uint64_t sub_168B5DC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  BOOL v5 = (void ***)(a1 + 96);
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_11DB7D4((void *)(a1 + 72));
  sub_1889DA8(a1 + 56);
  sub_1889DA8(a1 + 40);
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_168B6A0(uint64_t a1)
{
  sub_168B5DC(a1);

  operator delete();
}

uint64_t sub_168B6D8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v61 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, (char **)v61, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v60 = (uint64_t *)(a1 + 8);
    while (1)
    {
      int v7 = (unsigned __int8 *)(*(void *)v61 + 1);
      unsigned int v8 = **(unsigned char **)v61;
      if ((char)**(unsigned char **)v61 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if ((char)*v7 < 0)
        {
          int v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v61, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          int v7 = (unsigned __int8 *)(*(void *)v61 + 2);
        }
      }
      *(void *)int v61 = v7;
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 10) {
            goto LABEL_98;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v11 = *(void *)(a1 + 8);
          int v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
          if (v11) {
            int v12 = (uint64_t *)*v12;
          }
          uint64_t v13 = (std::string *)sub_1880F84((void *)(a1 + 96), v12);
          uint64_t v14 = (void *)sub_188C244(v13, *(char **)v61, (uint64_t)a3);
          goto LABEL_105;
        case 2u:
          if (v8 == 16)
          {
            int v15 = v7 - 1;
            while (1)
            {
              *(void *)int v61 = v15 + 1;
              uint64_t v16 = v15[1];
              if ((char)v15[1] < 0)
              {
                int v17 = v16 + (v15[2] << 7);
                uint64_t v16 = (v17 - 128);
                if ((char)v15[2] < 0)
                {
                  int v15 = (unsigned __int8 *)sub_188C138((uint64_t)(v15 + 1), (v17 - 128));
                  uint64_t v16 = v18;
                }
                else
                {
                  v15 += 3;
                }
              }
              else
              {
                v15 += 2;
              }
              *(void *)int v61 = v15;
              uint64_t v19 = *(unsigned int *)(a1 + 24);
              if (v19 == *(_DWORD *)(a1 + 28))
              {
                int v20 = v19 + 1;
                sub_188CA54((unsigned int *)(a1 + 24), v19 + 1);
                *(void *)(*(void *)(a1 + 32) + 8 * v19) = v16;
                int v15 = *(unsigned __int8 **)v61;
              }
              else
              {
                *(void *)(*(void *)(a1 + 32) + 8 * v19) = v16;
                int v20 = v19 + 1;
              }
              *(_DWORD *)(a1 + 24) = v20;
              if (!v15) {
                goto LABEL_111;
              }
              if (*(void *)a3 <= (unint64_t)v15 || *v15 != 16) {
                goto LABEL_106;
              }
            }
          }
          if (v8 == 18)
          {
            uint64_t v57 = (unsigned int *)(a1 + 24);
LABEL_97:
            uint64_t v14 = sub_188C2DC(v57, v7, (uint64_t)a3);
          }
          else
          {
LABEL_98:
            if (v8) {
              BOOL v58 = (v8 & 7) == 4;
            }
            else {
              BOOL v58 = 1;
            }
            if (v58)
            {
              if (v7)
              {
                a3[10].i32[0] = v8 - 1;
                goto LABEL_2;
              }
LABEL_111:
              *(void *)int v61 = 0;
              goto LABEL_2;
            }
            if (*v60)
            {
              uint64_t v59 = (std::string *)((*v60 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v59 = (std::string *)sub_188DBD8(v60);
              int v7 = *(unsigned __int8 **)v61;
            }
            uint64_t v14 = sub_1885AC0(v8, v59, (char *)v7, a3);
          }
LABEL_105:
          *(void *)int v61 = v14;
          if (!v14) {
            goto LABEL_111;
          }
LABEL_106:
          if (sub_11947B8((uint64_t)a3, (char **)v61, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        case 3u:
          if (v8 != 29) {
            goto LABEL_98;
          }
          int v22 = *(_DWORD *)v7;
          uint64_t v21 = v7 + 4;
          v5 |= 2u;
          *(_DWORD *)(a1 + 104) = v22;
          goto LABEL_31;
        case 4u:
          if (v8 != 37) {
            goto LABEL_98;
          }
          int v23 = *(_DWORD *)v7;
          uint64_t v21 = v7 + 4;
          v5 |= 4u;
          *(_DWORD *)(a1 + 108) = v23;
LABEL_31:
          *(void *)int v61 = v21;
          goto LABEL_106;
        case 5u:
          if (v8 == 40)
          {
            uint64_t v24 = v7 - 1;
            while (1)
            {
              *(void *)int v61 = v24 + 1;
              uint64_t v25 = v24[1];
              if ((char)v24[1] < 0)
              {
                int v26 = v25 + (v24[2] << 7);
                uint64_t v25 = (v26 - 128);
                if ((char)v24[2] < 0)
                {
                  uint64_t v24 = (unsigned __int8 *)sub_188C138((uint64_t)(v24 + 1), (v26 - 128));
                  uint64_t v25 = v27;
                }
                else
                {
                  v24 += 3;
                }
              }
              else
              {
                v24 += 2;
              }
              *(void *)int v61 = v24;
              uint64_t v28 = *(unsigned int *)(a1 + 40);
              if (v28 == *(_DWORD *)(a1 + 44))
              {
                int v29 = v28 + 1;
                sub_188CA54((unsigned int *)(a1 + 40), v28 + 1);
                *(void *)(*(void *)(a1 + 48) + 8 * v28) = v25;
                uint64_t v24 = *(unsigned __int8 **)v61;
              }
              else
              {
                *(void *)(*(void *)(a1 + 48) + 8 * v28) = v25;
                int v29 = v28 + 1;
              }
              *(_DWORD *)(a1 + 40) = v29;
              if (!v24) {
                goto LABEL_111;
              }
              if (*(void *)a3 <= (unint64_t)v24 || *v24 != 40) {
                goto LABEL_106;
              }
            }
          }
          if (v8 != 42) {
            goto LABEL_98;
          }
          uint64_t v57 = (unsigned int *)(a1 + 40);
          goto LABEL_97;
        case 6u:
          if (v8 != 48) {
            goto LABEL_98;
          }
          v5 |= 8u;
          int v30 = (char *)(v7 + 1);
          uint64_t v31 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_50;
          }
          int v32 = *v30;
          uint64_t v31 = v31 + (v32 << 7) - 128;
          if (v32 < 0)
          {
            uint64_t v51 = sub_188C138((uint64_t)v7, v31);
            *(void *)int v61 = v51;
            *(void *)(a1 + 112) = v52;
            if (!v51) {
              goto LABEL_111;
            }
          }
          else
          {
            int v30 = (char *)(v7 + 2);
LABEL_50:
            *(void *)int v61 = v30;
            *(void *)(a1 + 112) = v31;
          }
          goto LABEL_106;
        case 7u:
          if (v8 != 56) {
            goto LABEL_98;
          }
          v5 |= 0x20u;
          int v33 = (char *)(v7 + 1);
          uint64_t v34 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_55;
          }
          int v35 = *v33;
          uint64_t v34 = v34 + (v35 << 7) - 128;
          if (v35 < 0)
          {
            uint64_t v53 = sub_188C138((uint64_t)v7, v34);
            *(void *)int v61 = v53;
            *(unsigned char *)(a1 + 128) = v54 != 0;
            if (!v53) {
              goto LABEL_111;
            }
          }
          else
          {
            int v33 = (char *)(v7 + 2);
LABEL_55:
            *(void *)int v61 = v33;
            *(unsigned char *)(a1 + 128) = v34 != 0;
          }
          goto LABEL_106;
        case 8u:
          if (v8 == 64)
          {
            int v36 = v7 - 1;
            while (1)
            {
              *(void *)int v61 = v36 + 1;
              uint64_t v37 = v36[1];
              if ((char)v36[1] < 0)
              {
                int v38 = v37 + (v36[2] << 7);
                uint64_t v37 = (v38 - 128);
                if ((char)v36[2] < 0)
                {
                  int v36 = (unsigned __int8 *)sub_188C138((uint64_t)(v36 + 1), (v38 - 128));
                  uint64_t v37 = v39;
                }
                else
                {
                  v36 += 3;
                }
              }
              else
              {
                v36 += 2;
              }
              *(void *)int v61 = v36;
              uint64_t v40 = *(unsigned int *)(a1 + 56);
              if (v40 == *(_DWORD *)(a1 + 60))
              {
                int v41 = v40 + 1;
                sub_188CA54((unsigned int *)(a1 + 56), v40 + 1);
                *(void *)(*(void *)(a1 + 64) + 8 * v40) = v37;
                int v36 = *(unsigned __int8 **)v61;
              }
              else
              {
                *(void *)(*(void *)(a1 + 64) + 8 * v40) = v37;
                int v41 = v40 + 1;
              }
              *(_DWORD *)(a1 + 56) = v41;
              if (!v36) {
                goto LABEL_111;
              }
              if (*(void *)a3 <= (unint64_t)v36 || *v36 != 64) {
                goto LABEL_106;
              }
            }
          }
          if (v8 != 66) {
            goto LABEL_98;
          }
          uint64_t v57 = (unsigned int *)(a1 + 56);
          goto LABEL_97;
        case 9u:
          if (v8 != 72) {
            goto LABEL_98;
          }
          v5 |= 0x10u;
          uint64_t v42 = (char *)(v7 + 1);
          uint64_t v43 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_74;
          }
          int v44 = *v42;
          uint64_t v43 = v43 + (v44 << 7) - 128;
          if (v44 < 0)
          {
            uint64_t v55 = sub_188C138((uint64_t)v7, v43);
            *(void *)int v61 = v55;
            *(void *)(a1 + 120) = v56;
            if (!v55) {
              goto LABEL_111;
            }
          }
          else
          {
            uint64_t v42 = (char *)(v7 + 2);
LABEL_74:
            *(void *)int v61 = v42;
            *(void *)(a1 + 120) = v43;
          }
          goto LABEL_106;
        case 0x14u:
          if (v8 != 162) {
            goto LABEL_98;
          }
          uint64_t v45 = (char *)(v7 - 2);
          while (1)
          {
            uint64_t v46 = (unsigned __int8 *)(v45 + 2);
            *(void *)int v61 = v45 + 2;
            uint64_t v47 = *(_DWORD **)(a1 + 88);
            if (v47 && (uint64_t v48 = *(int *)(a1 + 80), (int)v48 < *v47))
            {
              *(_DWORD *)(a1 + 80) = v48 + 1;
              uint64_t v49 = *(void *)&v47[2 * v48 + 2];
            }
            else
            {
              uint64_t v50 = sub_15C1918(*(void *)(a1 + 72));
              uint64_t v49 = sub_188CDC8(a1 + 72, v50);
              uint64_t v46 = *(unsigned __int8 **)v61;
            }
            uint64_t v45 = sub_1198F14(a3, v49, v46);
            *(void *)int v61 = v45;
            if (!v45) {
              goto LABEL_111;
            }
            if (*(void *)a3 <= (unint64_t)v45 || *(_WORD *)v45 != 418) {
              goto LABEL_106;
            }
          }
        default:
          goto LABEL_98;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v61;
}

unsigned char *sub_168BD4C(uint64_t a1, unsigned char *__dst, void *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v7 = *(unsigned int *)(a1 + 24);
  if ((int)v7 >= 1)
  {
    for (uint64_t i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v9 = *(void *)(*(void *)(a1 + 32) + 8 * i);
      *char v4 = 16;
      v4[1] = v9;
      if (v9 > 0x7F)
      {
        v4[1] = v9 | 0x80;
        unint64_t v10 = v9 >> 7;
        v4[2] = v9 >> 7;
        v4 += 3;
        if (v9 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v11 = v10 >> 14;
            v10 >>= 7;
            *v4++ = v10;
          }
          while (v11);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v12 = *(_DWORD *)(a1 + 104);
    *char v4 = 29;
    *(_DWORD *)(v4 + 1) = v12;
    v4 += 5;
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v13 = *(_DWORD *)(a1 + 108);
    *char v4 = 37;
    *(_DWORD *)(v4 + 1) = v13;
    v4 += 5;
  }
  uint64_t v14 = *(unsigned int *)(a1 + 40);
  if ((int)v14 >= 1)
  {
    for (uint64_t j = 0; j != v14; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v16 = *(void *)(*(void *)(a1 + 48) + 8 * j);
      *char v4 = 40;
      v4[1] = v16;
      if (v16 > 0x7F)
      {
        v4[1] = v16 | 0x80;
        unint64_t v17 = v16 >> 7;
        v4[2] = v16 >> 7;
        v4 += 3;
        if (v16 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v18 = v17 >> 14;
            v17 >>= 7;
            *v4++ = v17;
          }
          while (v18);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(void *)(a1 + 112);
    *char v4 = 48;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v22 = *(unsigned char *)(a1 + 128);
    *char v4 = 56;
    v4[1] = v22;
    v4 += 2;
  }
  uint64_t v23 = *(unsigned int *)(a1 + 56);
  if ((int)v23 >= 1)
  {
    for (uint64_t k = 0; k != v23; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v25 = *(void *)(*(void *)(a1 + 64) + 8 * k);
      *char v4 = 64;
      v4[1] = v25;
      if (v25 > 0x7F)
      {
        v4[1] = v25 | 0x80;
        unint64_t v26 = v25 >> 7;
        v4[2] = v25 >> 7;
        v4 += 3;
        if (v25 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v27 = v26 >> 14;
            v26 >>= 7;
            *v4++ = v26;
          }
          while (v27);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v28 = *(void *)(a1 + 120);
    *char v4 = 72;
    v4[1] = v28;
    if (v28 > 0x7F)
    {
      v4[1] = v28 | 0x80;
      unint64_t v29 = v28 >> 7;
      v4[2] = v28 >> 7;
      v4 += 3;
      if (v28 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v30 = v29 >> 14;
          v29 >>= 7;
          *v4++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v31 = *(_DWORD *)(a1 + 80);
  if (v31)
  {
    for (int m = 0; m != v31; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v33 = *(void *)(*(void *)(a1 + 88) + 8 * m + 8);
      *(_WORD *)char v4 = 418;
      unsigned int v34 = *(_DWORD *)(v33 + 44);
      v4[2] = v34;
      if (v34 > 0x7F) {
        int v35 = sub_188A9CC(v34, v4 + 2);
      }
      else {
        int v35 = v4 + 3;
      }
      char v4 = sub_15B0C0C(v33, v35, a3);
    }
  }
  uint64_t v36 = *(void *)(a1 + 8);
  if ((v36 & 1) == 0) {
    return v4;
  }
  unint64_t v38 = v36 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v38 + 31) < 0)
  {
    uint64_t v39 = *(void **)(v38 + 8);
    uint64_t v40 = *(void *)(v38 + 16);
  }
  else
  {
    uint64_t v39 = (void *)(v38 + 8);
    LODWORD(v40) = *(unsigned __int8 *)(v38 + 31);
  }
  if (*a3 - (void)v4 >= (int)v40)
  {
    uint64_t v41 = (int)v40;
    memcpy(v4, v39, (int)v40);
    v4 += v41;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v39, v40, v4);
}

uint64_t sub_168C228(uint64_t a1)
{
  uint64_t v2 = sub_188D5A8((unsigned int *)(a1 + 24));
  uint64_t v3 = *(unsigned int *)(a1 + 24);
  uint64_t v4 = sub_188D5A8((unsigned int *)(a1 + 40));
  uint64_t v5 = *(unsigned int *)(a1 + 40);
  uint64_t v6 = sub_188D5A8((unsigned int *)(a1 + 56));
  uint64_t v7 = *(int *)(a1 + 80);
  uint64_t v8 = v2 + v4 + v3 + v5 + v6 + *(unsigned int *)(a1 + 56) + 2 * v7;
  uint64_t v9 = *(void *)(a1 + 88);
  if (v9) {
    unint64_t v10 = (uint64_t *)(v9 + 8);
  }
  else {
    unint64_t v10 = 0;
  }
  if (v7)
  {
    uint64_t v11 = 8 * v7;
    do
    {
      uint64_t v12 = *v10++;
      uint64_t v13 = sub_15B0D90(v12);
      v8 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      v11 -= 8;
    }
    while (v11);
  }
  int v14 = *(_DWORD *)(a1 + 16);
  if ((v14 & 0x3F) != 0)
  {
    if (v14)
    {
      unint64_t v15 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
      uint64_t v17 = *(void *)(v15 + 8);
      if ((v16 & 0x80u) == 0) {
        uint64_t v17 = v16;
      }
      v8 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v18 = v8 + 5;
    if ((v14 & 2) == 0) {
      uint64_t v18 = v8;
    }
    if ((v14 & 4) != 0) {
      v18 += 5;
    }
    if ((v14 & 8) != 0) {
      v18 += ((9 * (__clz(*(void *)(a1 + 112) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    if ((v14 & 0x10) != 0) {
      v18 += ((9 * (__clz(*(void *)(a1 + 120) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    if ((v14 & 0x20) != 0) {
      uint64_t v8 = v18 + 2;
    }
    else {
      uint64_t v8 = v18;
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if (v19)
  {
    unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v21 + 31) < 0) {
      uint64_t v22 = *(void *)(v21 + 16);
    }
    else {
      uint64_t v22 = *(unsigned __int8 *)(v21 + 31);
    }
    v8 += v22;
  }
  *(_DWORD *)(a1 + 20) = v8;
  return v8;
}

void *sub_168C3D8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.Path");
}

uint64_t sub_168C3E8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_16B3B84((void *)(a1 + 48));
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_168C4B4(uint64_t a1)
{
  sub_168C3E8(a1);

  operator delete();
}

uint64_t sub_168C4EC(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_166DD40(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 3) != 0)
  {
    if (v6)
    {
      unint64_t v7 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v7 + 23) < 0)
      {
        **(unsigned char **)unint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
        if ((v6 & 2) == 0) {
          goto LABEL_15;
        }
        goto LABEL_10;
      }
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
    }
    if ((v6 & 2) == 0) {
      goto LABEL_15;
    }
LABEL_10:
    unint64_t v8 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
    }
  }
LABEL_15:
  char v10 = *(unsigned char *)(a1 + 8);
  uint64_t v9 = a1 + 8;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

uint64_t sub_168C5DC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v33 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
    return *(void *)v33;
  }
  int v6 = (void *)(a1 + 8);
  unint64_t v7 = (uint64_t **)(a1 + 24);
  while (2)
  {
    unint64_t v8 = (char *)(*(void *)v33 + 1);
    unsigned int v9 = **(unsigned char **)v33;
    if ((char)**(unsigned char **)v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180(*(uint64_t *)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (char *)(*(void *)v33 + 2);
      }
    }
    *(void *)uint64_t v33 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 72);
        goto LABEL_29;
      case 2u:
        if (v9 != 18) {
          goto LABEL_40;
        }
        unint64_t v15 = v8 - 1;
        while (1)
        {
          uint64_t v16 = (char *)(v15 + 1);
          *(void *)uint64_t v33 = v15 + 1;
          uint64_t v17 = *(_DWORD **)(a1 + 40);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 32) = v18 + 1;
            uint64_t v19 = *(std::string **)&v17[2 * v18 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *unint64_t v21 = v20;
            v21[1] = sub_3A6EDC;
            void *v20 = 0;
            v20[1] = 0;
            int v20[2] = 0;
            uint64_t v19 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v20);
            uint64_t v16 = *(char **)v33;
          }
          unint64_t v15 = sub_188C244(v19, v16, (uint64_t)a3);
          *(void *)uint64_t v33 = v15;
          if (!v15) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
            goto LABEL_48;
          }
        }
      case 3u:
        if (v9 != 26) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v22 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 80);
LABEL_29:
        uint64_t v23 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v24 = (void *)sub_188C244(v23, *(char **)v33, (uint64_t)a3);
        goto LABEL_47;
      case 4u:
        if (v9 != 34) {
          goto LABEL_40;
        }
        unint64_t v25 = v8 - 1;
        while (1)
        {
          unint64_t v26 = (unsigned __int8 *)(v25 + 1);
          *(void *)uint64_t v33 = v25 + 1;
          unint64_t v27 = *(_DWORD **)(a1 + 64);
          if (v27 && (uint64_t v28 = *(int *)(a1 + 56), (int)v28 < *v27))
          {
            *(_DWORD *)(a1 + 56) = v28 + 1;
            uint64_t v29 = *(void *)&v27[2 * v28 + 2];
          }
          else
          {
            sub_1695A50(*(void *)(a1 + 48));
            uint64_t v29 = sub_188CDC8(a1 + 48, v30);
            unint64_t v26 = *(unsigned __int8 **)v33;
          }
          unint64_t v25 = sub_166DD6C(a3, v29, v26);
          *(void *)uint64_t v33 = v25;
          if (!v25) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v25 || *v25 != 34) {
            goto LABEL_48;
          }
        }
      default:
LABEL_40:
        if (v9) {
          BOOL v31 = (v9 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if (*v6)
          {
            int v32 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(char **)v33;
          }
          uint64_t v24 = sub_1885AC0(v9, v32, v8, a3);
LABEL_47:
          *(void *)uint64_t v33 = v24;
          if (!v24) {
            return 0;
          }
LABEL_48:
          if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
            return *(void *)v33;
          }
          continue;
        }
        if (!v8) {
          return 0;
        }
        a3[10].i32[0] = v9 - 1;
        return *(void *)v33;
    }
  }
}

char *sub_168C930(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v7 = *(unsigned int *)(a1 + 32);
  if ((int)v7 >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 8 * v7;
    do
    {
      unsigned int v10 = *(void **)(*(void *)(a1 + 40) + v8 + 8);
      if (*((char *)v10 + 23) < 0)
      {
        int64_t v11 = v10[1];
        if (v11 > 127) {
          goto LABEL_14;
        }
      }
      else
      {
        int64_t v11 = *((unsigned __int8 *)v10 + 23);
      }
      if (*a3 - (void)v4 + 14 >= v11)
      {
        *uint64_t v4 = 18;
        v4[1] = v11;
        if (*((char *)v10 + 23) < 0) {
          unsigned int v10 = (void *)*v10;
        }
        uint64_t v12 = v4 + 2;
        memcpy(v12, v10, v11);
        uint64_t v4 = &v12[v11];
        goto LABEL_12;
      }
LABEL_14:
      uint64_t v4 = (char *)sub_188A868(a3, 2, (uint64_t)v10, v4);
LABEL_12:
      v8 += 8;
    }
    while (v9 != v8);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v13 = *(_DWORD *)(a1 + 56);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *uint64_t v4 = 34;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        uint64_t v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        uint64_t v17 = v4 + 2;
      }
      uint64_t v4 = (char *)sub_168D148(v15, (unint64_t)v17, a3);
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    unint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    unint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_168CB60(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_168D2E4(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 3) != 0)
  {
    if (v15)
    {
      unint64_t v16 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
      uint64_t v18 = *(void *)(v16 + 8);
      if ((v17 & 0x80u) == 0) {
        uint64_t v18 = v17;
      }
      v9 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v15 & 2) != 0)
    {
      unint64_t v19 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
      uint64_t v21 = *(void *)(v19 + 8);
      if ((v20 & 0x80u) == 0) {
        uint64_t v21 = v20;
      }
      v9 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if (v22)
  {
    unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v24 + 31) < 0) {
      uint64_t v25 = *(void *)(v24 + 16);
    }
    else {
      uint64_t v25 = *(unsigned __int8 *)(v24 + 31);
    }
    v9 += v25;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

void sub_168CD00(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(a1 + 24, v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int64_t v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_16B484C((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 3) != 0)
  {
    if (v14)
    {
      int v15 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v16 = *(void *)(a1 + 8);
      uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        uint64_t v17 = (uint64_t *)*v17;
      }
      sub_1881DF4((std::string **)(a1 + 72), v15, v17);
    }
    if ((v14 & 2) != 0)
    {
      uint64_t v18 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v19 = *(void *)(a1 + 8);
      uint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        uint64_t v20 = (uint64_t *)*v20;
      }
      sub_1881DF4((std::string **)(a1 + 80), v18, v20);
    }
  }
  uint64_t v21 = *(void *)(a2 + 8);
  if (v21)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v21 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_168CEA8()
{
  return 1;
}

void *sub_168CEB0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.Region");
}

void *sub_168CEC0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_168CF34(void *a1)
{
  sub_168CEC0(a1);

  operator delete();
}

char *sub_168CF6C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v19 + 1;
    unsigned int v9 = *v19;
    if (*v19 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v19, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v19 + 2;
      }
    }
    uint64_t v19 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 9) {
          goto LABEL_20;
        }
        uint64_t v13 = *(void *)v8;
        int v12 = v8 + 8;
        v5 |= 1u;
        *(void *)(a1 + 24) = v13;
        goto LABEL_17;
      case 2u:
        if (v9 != 17) {
          goto LABEL_20;
        }
        uint64_t v14 = *(void *)v8;
        int v12 = v8 + 8;
        v5 |= 2u;
        *(void *)(a1 + 32) = v14;
        goto LABEL_17;
      case 3u:
        if (v9 != 25) {
          goto LABEL_20;
        }
        uint64_t v15 = *(void *)v8;
        int v12 = v8 + 8;
        v5 |= 4u;
        *(void *)(a1 + 40) = v15;
        goto LABEL_17;
      case 4u:
        if (v9 != 33) {
          goto LABEL_20;
        }
        uint64_t v16 = *(void *)v8;
        int v12 = v8 + 8;
        v5 |= 8u;
        *(void *)(a1 + 48) = v16;
LABEL_17:
        uint64_t v19 = v12;
        goto LABEL_18;
      default:
LABEL_20:
        if (v9) {
          BOOL v17 = (v9 & 7) == 4;
        }
        else {
          BOOL v17 = 1;
        }
        if (!v17)
        {
          if (*v7)
          {
            uint64_t v18 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v18 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v19;
          }
          uint64_t v19 = (char *)sub_1885AC0(v9, v18, v8, a3);
          if (!v19) {
            goto LABEL_31;
          }
LABEL_18:
          if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_31:
        }
          uint64_t v19 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v19;
    }
  }
}

_OWORD *sub_168D148(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *(unsigned char *)int v4 = 9;
    *(void *)((char *)v4 + 1) = v7;
    int v4 = (_OWORD *)((char *)v4 + 9);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v8 = *(void *)(a1 + 32);
  *(unsigned char *)int v4 = 17;
  *(void *)((char *)v4 + 1) = v8;
  int v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }
LABEL_12:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v9 = *(void *)(a1 + 40);
  *(unsigned char *)int v4 = 25;
  *(void *)((char *)v4 + 1) = v9;
  int v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 8) != 0)
  {
LABEL_15:
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 48);
    *(unsigned char *)int v4 = 33;
    *(void *)((char *)v4 + 1) = v10;
    int v4 = (_OWORD *)((char *)v4 + 9);
  }
LABEL_18:
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    return (_OWORD *)((char *)v4 + v16);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_168D2E4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  uint64_t v2 = 9;
  if ((v1 & 1) == 0) {
    uint64_t v2 = 0;
  }
  if ((v1 & 2) != 0) {
    v2 += 9;
  }
  if ((v1 & 4) != 0) {
    v2 += 9;
  }
  if ((v1 & 8) != 0) {
    v2 += 9;
  }
  if ((v1 & 0xF) != 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_168D358()
{
  return 1;
}

void *sub_168D360@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.BoundingBox");
}

void *sub_168D370(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_16B3C04(a1 + 8);
  sub_11DB7D4(a1 + 5);
  sub_1889DE8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_168D404(void *a1)
{
  sub_168D370(a1);

  operator delete();
}

uint64_t sub_168D43C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v35 = a2;
  if ((sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1]) & 1) == 0)
  {
    unint64_t v6 = (uint64_t **)(a1 + 16);
    uint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v8 = (char *)(*(void *)v35 + 1);
      unsigned int v9 = **(unsigned char **)v35;
      if ((char)**(unsigned char **)v35 < 0)
      {
        unsigned int v10 = v9 + (*v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*v8 < 0)
        {
          uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v35, v10 - 128);
          unsigned int v9 = v11;
        }
        else
        {
          uint64_t v8 = (char *)(*(void *)v35 + 2);
        }
      }
      *(void *)int v35 = v8;
      unsigned int v12 = v9 >> 3;
      if (v9 >> 3 == 3)
      {
        if (v9 == 26)
        {
          uint64_t v16 = v8 - 1;
          while (1)
          {
            BOOL v17 = (unsigned __int8 *)(v16 + 1);
            *(void *)int v35 = v16 + 1;
            uint64_t v18 = *(_DWORD **)(a1 + 80);
            if (v18 && (uint64_t v19 = *(int *)(a1 + 72), (int)v19 < *v18))
            {
              *(_DWORD *)(a1 + 72) = v19 + 1;
              uint64_t v20 = *(void *)&v18[2 * v19 + 2];
            }
            else
            {
              uint64_t v21 = sub_12FF8E8(*(void *)(a1 + 64));
              uint64_t v20 = sub_188CDC8(a1 + 64, v21);
              BOOL v17 = *(unsigned __int8 **)v35;
            }
            uint64_t v16 = (char *)sub_12FEC48(a3, v20, v17);
            *(void *)int v35 = v16;
            if (!v16) {
              goto LABEL_57;
            }
            if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
              goto LABEL_52;
            }
          }
        }
      }
      else if (v12 == 2)
      {
        if (v9 == 18)
        {
          uint64_t v22 = v8 - 1;
          while (1)
          {
            uint64_t v23 = (unsigned __int8 *)(v22 + 1);
            *(void *)int v35 = v22 + 1;
            unint64_t v24 = *(_DWORD **)(a1 + 56);
            if (v24 && (uint64_t v25 = *(int *)(a1 + 48), (int)v25 < *v24))
            {
              *(_DWORD *)(a1 + 48) = v25 + 1;
              uint64_t v26 = *(void *)&v24[2 * v25 + 2];
            }
            else
            {
              uint64_t v27 = sub_15C1918(*(void *)(a1 + 40));
              uint64_t v26 = sub_188CDC8(a1 + 40, v27);
              uint64_t v23 = *(unsigned __int8 **)v35;
            }
            uint64_t v22 = sub_1198F14(a3, v26, v23);
            *(void *)int v35 = v22;
            if (!v22) {
              goto LABEL_57;
            }
            if (*(void *)a3 <= (unint64_t)v22 || *v22 != 18) {
              goto LABEL_52;
            }
          }
        }
      }
      else if (v12 == 1 && v9 == 10)
      {
        uint64_t v28 = v8 - 1;
        while (1)
        {
          uint64_t v29 = (char *)(v28 + 1);
          *(void *)int v35 = v28 + 1;
          uint64_t v30 = *(_DWORD **)(a1 + 32);
          if (v30 && (uint64_t v31 = *(int *)(a1 + 24), (int)v31 < *v30))
          {
            *(_DWORD *)(a1 + 24) = v31 + 1;
            int v32 = *(std::string **)&v30[2 * v31 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            *unsigned int v34 = v33;
            v34[1] = sub_3A6EDC;
            void *v33 = 0;
            v33[1] = 0;
            int v33[2] = 0;
            int v32 = (std::string *)sub_188CDC8(a1 + 16, (uint64_t)v33);
            uint64_t v29 = *(char **)v35;
          }
          uint64_t v28 = sub_188C244(v32, v29, (uint64_t)a3);
          *(void *)int v35 = v28;
          if (!v28) {
            goto LABEL_57;
          }
          if (*(void *)a3 <= (unint64_t)v28 || *v28 != 10) {
            goto LABEL_52;
          }
        }
      }
      if (!v9 || (v9 & 7) == 4) {
        break;
      }
      if (*v7)
      {
        uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v8 = *(char **)v35;
      }
      *(void *)int v35 = sub_1885AC0(v9, v15, v8, a3);
      if (!*(void *)v35) {
        goto LABEL_57;
      }
LABEL_52:
      if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
        return *(void *)v35;
      }
    }
    if (v8)
    {
      a3[10].i32[0] = v9 - 1;
      return *(void *)v35;
    }
LABEL_57:
    *(void *)int v35 = 0;
  }
  return *(void *)v35;
}

char *sub_168D770(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 32) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v10)
      {
        *__dst = 10;
        __dst[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        unsigned int v11 = __dst + 2;
        memcpy(v11, v9, v10);
        __dst = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      __dst = (char *)sub_188A868(a3, 1, (uint64_t)v9, __dst);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  int v12 = *(_DWORD *)(a1 + 48);
  if (v12)
  {
    for (int i = 0; i != v12; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v14 = *(void *)(*(void *)(a1 + 56) + 8 * i + 8);
      *__dst = 18;
      unsigned int v15 = *(_DWORD *)(v14 + 44);
      __dst[1] = v15;
      if (v15 > 0x7F) {
        uint64_t v16 = sub_188A9CC(v15, __dst + 1);
      }
      else {
        uint64_t v16 = __dst + 2;
      }
      __dst = sub_15B0C0C(v14, v16, a3);
    }
  }
  int v17 = *(_DWORD *)(a1 + 72);
  if (v17)
  {
    for (int j = 0; j != v17; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v19 = *(void *)(*(void *)(a1 + 80) + 8 * j + 8);
      *__dst = 26;
      unsigned int v20 = *(_DWORD *)(v19 + 20);
      __dst[1] = v20;
      if (v20 > 0x7F) {
        uint64_t v21 = sub_188A9CC(v20, __dst + 1);
      }
      else {
        uint64_t v21 = __dst + 2;
      }
      __dst = sub_12FF488(v19, v21, a3);
    }
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return __dst;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    uint64_t v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    uint64_t v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(__dst, v25, (int)v26);
    __dst += v27;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v25, v26, __dst);
}

uint64_t sub_168D9E0(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 24);
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 32) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 24);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(int *)(a1 + 48);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_15B0D90(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 72);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 80);
  if (v17) {
    uint64_t v18 = (uint64_t *)(v17 + 8);
  }
  else {
    uint64_t v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_12FF714(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if (v22)
  {
    unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v24 + 31) < 0) {
      uint64_t v25 = *(void *)(v24 + 16);
    }
    else {
      uint64_t v25 = *(unsigned __int8 *)(v24 + 31);
    }
    v16 += v25;
  }
  *(_DWORD *)(a1 + 88) = v16;
  return v16;
}

void *sub_168DB3C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.UGCIncidentDebug");
}

uint64_t sub_168DB4C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 96);
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 104) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 104));
  }
  if (*(uint64_t **)(a1 + 112) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 112));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  sub_1889DE8((void *)(a1 + 72));
  sub_16B3884((void *)(a1 + 48));
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_168DC34(uint64_t a1)
{
  sub_168DB4C(a1);

  operator delete();
}

uint64_t sub_168DC6C(uint64_t a1)
{
  sub_188CC00(a1 + 24);
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (unsigned char **)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_167537C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 72);
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 7) != 0)
  {
    if ((v6 & 1) == 0)
    {
      if ((v6 & 2) == 0) {
        goto LABEL_8;
      }
LABEL_14:
      unint64_t v8 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v8 + 23) < 0)
      {
        **(unsigned char **)unint64_t v8 = 0;
        *(void *)(v8 + 8) = 0;
        if ((v6 & 4) == 0) {
          goto LABEL_21;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v8 = 0;
        *(unsigned char *)(v8 + 23) = 0;
        if ((v6 & 4) == 0) {
          goto LABEL_21;
        }
      }
      goto LABEL_18;
    }
    unint64_t v7 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_14;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_14;
      }
    }
LABEL_8:
    if ((v6 & 4) == 0) {
      goto LABEL_21;
    }
LABEL_18:
    unint64_t v9 = *(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)unint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
    }
  }
LABEL_21:
  if ((v6 & 0xF8) != 0)
  {
    *(void *)(a1 + 120) = 0;
    *(void *)(a1 + 128) = 0;
    *(_DWORD *)(a1 + 136) = 0;
  }
  if ((v6 & 0xF00) != 0)
  {
    *(void *)(a1 + 148) = 0;
    *(void *)(a1 + 140) = 0;
  }
  char v11 = *(unsigned char *)(a1 + 8);
  uint64_t v10 = a1 + 8;
  *(_DWORD *)(v10 + 8) = 0;
  if (v11)
  {
    return sub_188B4AC((uint64_t *)v10);
  }
  return result;
}

uint64_t sub_168DDC0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v74 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v74, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (uint64_t **)(a1 + 72);
  unint64_t v8 = (uint64_t **)(a1 + 24);
  uint64_t v73 = (uint64_t *)(a1 + 8);
  while (2)
  {
    unint64_t v9 = (char *)(*(void *)v74 + 1);
    unsigned int v10 = **(unsigned char **)v74;
    if ((char)**(unsigned char **)v74 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if (*v9 < 0)
      {
        unint64_t v9 = (char *)sub_188C180(*(uint64_t *)v74, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        unint64_t v9 = (char *)(*(void *)v74 + 2);
      }
    }
    *(void *)uint64_t v74 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_92;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v13 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
        if (v13) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        uint64_t v15 = (void *)(a1 + 96);
        goto LABEL_28;
      case 2u:
        if (v10 != 16) {
          goto LABEL_92;
        }
        uint64_t v16 = v9 + 1;
        unint64_t v17 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v18 = *v16;
        int v19 = v17 + (v18 << 7);
        unint64_t v17 = (v19 - 128);
        if (v18 < 0)
        {
          *(void *)uint64_t v74 = sub_188C138((uint64_t)v9, (v19 - 128));
          if (!*(void *)v74) {
            goto LABEL_119;
          }
          unint64_t v17 = v63;
        }
        else
        {
          uint64_t v16 = v9 + 2;
LABEL_17:
          *(void *)uint64_t v74 = v16;
        }
        if (v17 > 0x4F)
        {
          if (*v73) {
            uint64_t v72 = (std::string *)((*v73 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v72 = (std::string *)sub_188DBD8(v73);
          }
          sub_188C020(2, v17, v72);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 120) = v17;
        }
        goto LABEL_100;
      case 3u:
        if (v10 != 26) {
          goto LABEL_92;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v20 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
        if (v20) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        uint64_t v15 = (void *)(a1 + 104);
        goto LABEL_28;
      case 4u:
        if (v10 != 34) {
          goto LABEL_92;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v21 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        uint64_t v15 = (void *)(a1 + 112);
LABEL_28:
        uint64_t v22 = (std::string *)sub_1880F84(v15, v14);
        uint64_t v23 = (void *)sub_188C244(v22, *(char **)v74, (uint64_t)a3);
        goto LABEL_99;
      case 5u:
        if (v10 != 45) {
          goto LABEL_92;
        }
        int v25 = *(_DWORD *)v9;
        unint64_t v24 = v9 + 4;
        v5 |= 0x10u;
        *(_DWORD *)(a1 + 124) = v25;
        goto LABEL_37;
      case 6u:
        if (v10 != 53) {
          goto LABEL_92;
        }
        int v26 = *(_DWORD *)v9;
        unint64_t v24 = v9 + 4;
        v5 |= 0x20u;
        *(_DWORD *)(a1 + 128) = v26;
        goto LABEL_37;
      case 7u:
        if (v10 != 61) {
          goto LABEL_92;
        }
        int v27 = *(_DWORD *)v9;
        unint64_t v24 = v9 + 4;
        v5 |= 0x40u;
        *(_DWORD *)(a1 + 132) = v27;
        goto LABEL_37;
      case 8u:
        if (v10 != 69) {
          goto LABEL_92;
        }
        int v28 = *(_DWORD *)v9;
        unint64_t v24 = v9 + 4;
        v5 |= 0x80u;
        *(_DWORD *)(a1 + 136) = v28;
LABEL_37:
        *(void *)uint64_t v74 = v24;
        goto LABEL_100;
      case 9u:
        if (v10 != 72) {
          goto LABEL_92;
        }
        v5 |= 0x100u;
        uint64_t v29 = v9 + 1;
        uint64_t v30 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_42;
        }
        int v31 = *v29;
        uint64_t v30 = v30 + (v31 << 7) - 128;
        if (v31 < 0)
        {
          uint64_t v64 = sub_188C138((uint64_t)v9, v30);
          *(void *)uint64_t v74 = v64;
          *(unsigned char *)(a1 + 140) = v65 != 0;
          if (!v64) {
            goto LABEL_119;
          }
        }
        else
        {
          uint64_t v29 = v9 + 2;
LABEL_42:
          *(void *)uint64_t v74 = v29;
          *(unsigned char *)(a1 + 140) = v30 != 0;
        }
        goto LABEL_100;
      case 0xAu:
        if (v10 != 80) {
          goto LABEL_92;
        }
        v5 |= 0x200u;
        int v32 = v9 + 1;
        uint64_t v33 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_47;
        }
        int v34 = *v32;
        uint64_t v33 = v33 + (v34 << 7) - 128;
        if (v34 < 0)
        {
          uint64_t v66 = sub_188C138((uint64_t)v9, v33);
          *(void *)uint64_t v74 = v66;
          *(unsigned char *)(a1 + 141) = v67 != 0;
          if (!v66) {
            goto LABEL_119;
          }
        }
        else
        {
          int v32 = v9 + 2;
LABEL_47:
          *(void *)uint64_t v74 = v32;
          *(unsigned char *)(a1 + 141) = v33 != 0;
        }
        goto LABEL_100;
      case 0xBu:
        if (v10 != 90) {
          goto LABEL_92;
        }
        int v35 = v9 - 1;
        while (1)
        {
          uint64_t v36 = (char *)(v35 + 1);
          *(void *)uint64_t v74 = v35 + 1;
          uint64_t v37 = *(_DWORD **)(a1 + 40);
          if (v37 && (uint64_t v38 = *(int *)(a1 + 32), (int)v38 < *v37))
          {
            *(_DWORD *)(a1 + 32) = v38 + 1;
            uint64_t v39 = *(std::string **)&v37[2 * v38 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            *uint64_t v41 = v40;
            v41[1] = sub_3A6EDC;
            void *v40 = 0;
            v40[1] = 0;
            v40[2] = 0;
            uint64_t v39 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v40);
            uint64_t v36 = *(char **)v74;
          }
          int v35 = sub_188C244(v39, v36, (uint64_t)a3);
          *(void *)uint64_t v74 = v35;
          if (!v35) {
            goto LABEL_119;
          }
          if (*(void *)a3 <= (unint64_t)v35 || *v35 != 90) {
            goto LABEL_100;
          }
        }
      case 0xCu:
        if (v10 != 98) {
          goto LABEL_92;
        }
        uint64_t v42 = v9 - 1;
        while (1)
        {
          uint64_t v43 = (unsigned __int8 *)(v42 + 1);
          *(void *)uint64_t v74 = v42 + 1;
          int v44 = *(_DWORD **)(a1 + 64);
          if (v44 && (uint64_t v45 = *(int *)(a1 + 56), (int)v45 < *v44))
          {
            *(_DWORD *)(a1 + 56) = v45 + 1;
            uint64_t v46 = *(void *)&v44[2 * v45 + 2];
          }
          else
          {
            uint64_t v47 = sub_16958D4(*(void *)(a1 + 48));
            uint64_t v46 = sub_188CDC8(a1 + 48, v47);
            uint64_t v43 = *(unsigned __int8 **)v74;
          }
          uint64_t v42 = (char *)sub_167565C(a3, v46, v43);
          *(void *)uint64_t v74 = v42;
          if (!v42) {
            goto LABEL_119;
          }
          if (*(void *)a3 <= (unint64_t)v42 || *v42 != 98) {
            goto LABEL_100;
          }
        }
      case 0xDu:
        if (v10 != 104) {
          goto LABEL_92;
        }
        v5 |= 0x800u;
        uint64_t v48 = v9 + 1;
        int v49 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_74;
        }
        int v50 = *v48;
        int v49 = v49 + (v50 << 7) - 128;
        if (v50 < 0)
        {
          uint64_t v68 = sub_188C0D0((uint64_t)v9, v49);
          *(void *)uint64_t v74 = v68;
          *(_DWORD *)(a1 + 152) = v69;
          if (!v68) {
            goto LABEL_119;
          }
        }
        else
        {
          uint64_t v48 = v9 + 2;
LABEL_74:
          *(void *)uint64_t v74 = v48;
          *(_DWORD *)(a1 + 152) = v49;
        }
        goto LABEL_100;
      case 0xEu:
        if (v10 != 114) {
          goto LABEL_92;
        }
        uint64_t v51 = v9 - 1;
        while (1)
        {
          uint64_t v52 = (char *)(v51 + 1);
          *(void *)uint64_t v74 = v51 + 1;
          uint64_t v53 = *(_DWORD **)(a1 + 88);
          if (v53 && (uint64_t v54 = *(int *)(a1 + 80), (int)v54 < *v53))
          {
            *(_DWORD *)(a1 + 80) = v54 + 1;
            uint64_t v55 = *(std::string **)&v53[2 * v54 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *uint64_t v57 = v56;
            v57[1] = sub_3A6EDC;
            *uint64_t v56 = 0;
            v56[1] = 0;
            int v56[2] = 0;
            uint64_t v55 = (std::string *)sub_188CDC8(a1 + 72, (uint64_t)v56);
            uint64_t v52 = *(char **)v74;
          }
          uint64_t v51 = sub_188C244(v55, v52, (uint64_t)a3);
          *(void *)uint64_t v74 = v51;
          if (!v51) {
            goto LABEL_119;
          }
          if (*(void *)a3 <= (unint64_t)v51 || *v51 != 114) {
            goto LABEL_100;
          }
        }
      case 0xFu:
        if (v10 != 120) {
          goto LABEL_92;
        }
        v5 |= 0x400u;
        BOOL v58 = v9 + 1;
        uint64_t v59 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_91;
        }
        int v60 = *v58;
        uint64_t v59 = v59 + (v60 << 7) - 128;
        if (v60 < 0)
        {
          uint64_t v70 = sub_188C138((uint64_t)v9, v59);
          *(void *)uint64_t v74 = v70;
          *(void *)(a1 + 144) = v71;
          if (!v70) {
            goto LABEL_119;
          }
        }
        else
        {
          BOOL v58 = v9 + 2;
LABEL_91:
          *(void *)uint64_t v74 = v58;
          *(void *)(a1 + 144) = v59;
        }
        goto LABEL_100;
      default:
LABEL_92:
        if (v10) {
          BOOL v61 = (v10 & 7) == 4;
        }
        else {
          BOOL v61 = 1;
        }
        if (!v61)
        {
          if (*v73)
          {
            uint64_t v62 = (std::string *)((*v73 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v62 = (std::string *)sub_188DBD8(v73);
            unint64_t v9 = *(char **)v74;
          }
          uint64_t v23 = sub_1885AC0(v10, v62, v9, a3);
LABEL_99:
          *(void *)uint64_t v74 = v23;
          if (!v23) {
            goto LABEL_119;
          }
LABEL_100:
          if (sub_11947B8((uint64_t)a3, (char **)v74, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_119:
        }
          *(void *)uint64_t v74 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v74;
    }
  }
}

char *sub_168E50C(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 120);
    *uint64_t v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 4) == 0)
    {
LABEL_12:
      if ((v6 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_21;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_13:
    if ((v6 & 0x20) == 0) {
      goto LABEL_14;
    }
    goto LABEL_24;
  }
LABEL_21:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v10 = *(_DWORD *)(a1 + 124);
  *uint64_t v4 = 45;
  *(_DWORD *)(v4 + 1) = v10;
  v4 += 5;
  if ((v6 & 0x20) == 0)
  {
LABEL_14:
    if ((v6 & 0x40) == 0) {
      goto LABEL_15;
    }
    goto LABEL_27;
  }
LABEL_24:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v11 = *(_DWORD *)(a1 + 128);
  *uint64_t v4 = 53;
  *(_DWORD *)(v4 + 1) = v11;
  v4 += 5;
  if ((v6 & 0x40) == 0)
  {
LABEL_15:
    if ((v6 & 0x80) == 0) {
      goto LABEL_16;
    }
    goto LABEL_30;
  }
LABEL_27:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v12 = *(_DWORD *)(a1 + 132);
  *uint64_t v4 = 61;
  *(_DWORD *)(v4 + 1) = v12;
  v4 += 5;
  if ((v6 & 0x80) == 0)
  {
LABEL_16:
    if ((v6 & 0x100) == 0) {
      goto LABEL_17;
    }
    goto LABEL_33;
  }
LABEL_30:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v13 = *(_DWORD *)(a1 + 136);
  *uint64_t v4 = 69;
  *(_DWORD *)(v4 + 1) = v13;
  v4 += 5;
  if ((v6 & 0x100) == 0)
  {
LABEL_17:
    if ((v6 & 0x200) == 0) {
      goto LABEL_39;
    }
    goto LABEL_36;
  }
LABEL_33:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v14 = *(unsigned char *)(a1 + 140);
  *uint64_t v4 = 72;
  v4[1] = v14;
  v4 += 2;
  if ((v6 & 0x200) != 0)
  {
LABEL_36:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v15 = *(unsigned char *)(a1 + 141);
    *uint64_t v4 = 80;
    v4[1] = v15;
    v4 += 2;
  }
LABEL_39:
  uint64_t v16 = *(unsigned int *)(a1 + 32);
  if ((int)v16 >= 1)
  {
    uint64_t v17 = 0;
    uint64_t v18 = 8 * v16;
    do
    {
      int v19 = *(void **)(*(void *)(a1 + 40) + v17 + 8);
      if (*((char *)v19 + 23) < 0)
      {
        int64_t v20 = v19[1];
        if (v20 > 127) {
          goto LABEL_50;
        }
      }
      else
      {
        int64_t v20 = *((unsigned __int8 *)v19 + 23);
      }
      if (*a3 - (void)v4 + 14 >= v20)
      {
        *uint64_t v4 = 90;
        v4[1] = v20;
        if (*((char *)v19 + 23) < 0) {
          int v19 = (void *)*v19;
        }
        uint64_t v21 = v4 + 2;
        memcpy(v21, v19, v20);
        uint64_t v4 = &v21[v20];
        goto LABEL_48;
      }
LABEL_50:
      uint64_t v4 = (char *)sub_188A868(a3, 11, (uint64_t)v19, v4);
LABEL_48:
      v17 += 8;
    }
    while (v18 != v17);
  }
  int v22 = *(_DWORD *)(a1 + 56);
  if (v22)
  {
    for (int i = 0; i != v22; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v24 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *uint64_t v4 = 98;
      unsigned int v25 = *(_DWORD *)(v24 + 20);
      v4[1] = v25;
      if (v25 > 0x7F) {
        int v26 = sub_188A9CC(v25, v4 + 1);
      }
      else {
        int v26 = v4 + 2;
      }
      uint64_t v4 = sub_168BD4C(v24, v26, a3);
    }
  }
  if ((v6 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v27 = *(_DWORD *)(a1 + 152);
    *uint64_t v4 = 104;
    v4[1] = v27;
    if (v27 > 0x7F)
    {
      v4[1] = v27 | 0x80;
      unsigned int v28 = v27 >> 7;
      v4[2] = v27 >> 7;
      v4 += 3;
      if (v27 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v29 = v28 >> 14;
          v28 >>= 7;
          *v4++ = v28;
        }
        while (v29);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v30 = *(unsigned int *)(a1 + 80);
  if ((int)v30 >= 1)
  {
    uint64_t v31 = 0;
    uint64_t v32 = 8 * v30;
    do
    {
      uint64_t v33 = *(void **)(*(void *)(a1 + 88) + v31 + 8);
      if (*((char *)v33 + 23) < 0)
      {
        int64_t v34 = v33[1];
        if (v34 > 127) {
          goto LABEL_77;
        }
      }
      else
      {
        int64_t v34 = *((unsigned __int8 *)v33 + 23);
      }
      if (*a3 - (void)v4 + 14 >= v34)
      {
        *uint64_t v4 = 114;
        v4[1] = v34;
        if (*((char *)v33 + 23) < 0) {
          uint64_t v33 = (void *)*v33;
        }
        int v35 = v4 + 2;
        memcpy(v35, v33, v34);
        uint64_t v4 = &v35[v34];
        goto LABEL_75;
      }
LABEL_77:
      uint64_t v4 = (char *)sub_188A868(a3, 14, (uint64_t)v33, v4);
LABEL_75:
      v31 += 8;
    }
    while (v32 != v31);
  }
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v36 = *(void *)(a1 + 144);
    *uint64_t v4 = 120;
    v4[1] = v36;
    if (v36 > 0x7F)
    {
      v4[1] = v36 | 0x80;
      unint64_t v37 = v36 >> 7;
      v4[2] = v36 >> 7;
      v4 += 3;
      if (v36 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v38 = v37 >> 14;
          v37 >>= 7;
          *v4++ = v37;
        }
        while (v38);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v39 = *(void *)(a1 + 8);
  if ((v39 & 1) == 0) {
    return v4;
  }
  unint64_t v41 = v39 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v41 + 31) < 0)
  {
    uint64_t v42 = *(void **)(v41 + 8);
    uint64_t v43 = *(void *)(v41 + 16);
  }
  else
  {
    uint64_t v42 = (void *)(v41 + 8);
    LODWORD(v43) = *(unsigned __int8 *)(v41 + 31);
  }
  if (*a3 - (void)v4 >= (int)v43)
  {
    uint64_t v44 = (int)v43;
    memcpy(v4, v42, (int)v43);
    v4 += v44;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v42, v43, v4);
}

uint64_t sub_168EAE8(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_168C228(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(unsigned int *)(a1 + 80);
  uint64_t result = v9 + v15;
  if ((int)v15 >= 1)
  {
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v18 = *v17++;
      uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
      uint64_t v20 = *(void *)(v18 + 8);
      if ((v19 & 0x80u) == 0) {
        uint64_t v20 = v19;
      }
      result += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6);
      --v15;
    }
    while (v15);
  }
  int v21 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v21)
  {
    if (v21)
    {
      unint64_t v28 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v29 = *(unsigned __int8 *)(v28 + 23);
      uint64_t v30 = *(void *)(v28 + 8);
      if ((v29 & 0x80u) == 0) {
        uint64_t v30 = v29;
      }
      result += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v21 & 2) == 0)
      {
LABEL_22:
        if ((v21 & 4) == 0) {
          goto LABEL_23;
        }
        goto LABEL_55;
      }
    }
    else if ((v21 & 2) == 0)
    {
      goto LABEL_22;
    }
    unint64_t v31 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v32 = *(unsigned __int8 *)(v31 + 23);
    uint64_t v33 = *(void *)(v31 + 8);
    if ((v32 & 0x80u) == 0) {
      uint64_t v33 = v32;
    }
    result += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v21 & 4) == 0)
    {
LABEL_23:
      if ((v21 & 8) == 0)
      {
LABEL_28:
        uint64_t v25 = result + 5;
        if ((v21 & 0x10) == 0) {
          uint64_t v25 = result;
        }
        if ((v21 & 0x20) != 0) {
          v25 += 5;
        }
        if ((v21 & 0x40) != 0) {
          v25 += 5;
        }
        if ((v21 & 0x80) != 0) {
          uint64_t result = v25 + 5;
        }
        else {
          uint64_t result = v25;
        }
        goto LABEL_37;
      }
LABEL_24:
      int v22 = *(_DWORD *)(a1 + 120);
      uint64_t v23 = ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v22 >= 0) {
        uint64_t v24 = v23;
      }
      else {
        uint64_t v24 = 11;
      }
      result += v24;
      goto LABEL_28;
    }
LABEL_55:
    unint64_t v34 = *(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v35 = *(unsigned __int8 *)(v34 + 23);
    uint64_t v36 = *(void *)(v34 + 8);
    if ((v35 & 0x80u) == 0) {
      uint64_t v36 = v35;
    }
    result += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v21 & 8) == 0) {
      goto LABEL_28;
    }
    goto LABEL_24;
  }
LABEL_37:
  if ((v21 & 0xF00) != 0)
  {
    uint64_t v26 = result + 2;
    if ((v21 & 0x100) == 0) {
      uint64_t v26 = result;
    }
    if ((v21 & 0x200) != 0) {
      uint64_t result = v26 + 2;
    }
    else {
      uint64_t result = v26;
    }
    if ((v21 & 0x400) != 0) {
      result += ((9 * (__clz(*(void *)(a1 + 144) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    if ((v21 & 0x800) != 0) {
      result += ((9 * (__clz(*(_DWORD *)(a1 + 152) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v27 = *(void *)(a1 + 8);
  if (v27)
  {
    unint64_t v37 = v27 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v37 + 31) < 0) {
      uint64_t v38 = *(void *)(v37 + 16);
    }
    else {
      uint64_t v38 = *(unsigned __int8 *)(v37 + 31);
    }
    result += v38;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_168EE00(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(a1 + 24, v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_16B4514((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (const std::string **)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_188FB98(a1 + 72, v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    uint64_t v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v19)
  {
    if (v19)
    {
      int v21 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v22 = *(void *)(a1 + 8);
      uint64_t v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        uint64_t v23 = (uint64_t *)*v23;
      }
      sub_1881DF4((std::string **)(a1 + 96), v21, v23);
      if ((v19 & 2) == 0)
      {
LABEL_13:
        if ((v19 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_38;
      }
    }
    else if ((v19 & 2) == 0)
    {
      goto LABEL_13;
    }
    uint64_t v24 = (long long *)(*(void *)(a2 + 104) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v25 = *(void *)(a1 + 8);
    uint64_t v26 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
    if (v25) {
      uint64_t v26 = (uint64_t *)*v26;
    }
    sub_1881DF4((std::string **)(a1 + 104), v24, v26);
    if ((v19 & 4) == 0)
    {
LABEL_14:
      if ((v19 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_41;
    }
LABEL_38:
    uint64_t v27 = (long long *)(*(void *)(a2 + 112) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v28 = *(void *)(a1 + 8);
    uint64_t v29 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
    if (v28) {
      uint64_t v29 = (uint64_t *)*v29;
    }
    sub_1881DF4((std::string **)(a1 + 112), v27, v29);
    if ((v19 & 8) == 0)
    {
LABEL_15:
      if ((v19 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_42;
    }
LABEL_41:
    *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
    if ((v19 & 0x10) == 0)
    {
LABEL_16:
      if ((v19 & 0x20) == 0) {
        goto LABEL_17;
      }
      goto LABEL_43;
    }
LABEL_42:
    *(_DWORD *)(a1 + 124) = *(_DWORD *)(a2 + 124);
    if ((v19 & 0x20) == 0)
    {
LABEL_17:
      if ((v19 & 0x40) == 0) {
        goto LABEL_18;
      }
      goto LABEL_44;
    }
LABEL_43:
    *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
    if ((v19 & 0x40) == 0)
    {
LABEL_18:
      if ((v19 & 0x80) == 0)
      {
LABEL_20:
        *(_DWORD *)(a1 + 16) |= v19;
        goto LABEL_21;
      }
LABEL_19:
      *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
      goto LABEL_20;
    }
LABEL_44:
    *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
    if ((v19 & 0x80) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_21:
  if ((v19 & 0xF00) == 0) {
    goto LABEL_28;
  }
  if ((v19 & 0x100) != 0)
  {
    *(unsigned char *)(a1 + 140) = *(unsigned char *)(a2 + 140);
    if ((v19 & 0x200) == 0)
    {
LABEL_24:
      if ((v19 & 0x400) == 0) {
        goto LABEL_25;
      }
LABEL_48:
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      if ((v19 & 0x800) == 0) {
        goto LABEL_27;
      }
      goto LABEL_26;
    }
  }
  else if ((v19 & 0x200) == 0)
  {
    goto LABEL_24;
  }
  *(unsigned char *)(a1 + 141) = *(unsigned char *)(a2 + 141);
  if ((v19 & 0x400) != 0) {
    goto LABEL_48;
  }
LABEL_25:
  if ((v19 & 0x800) != 0) {
LABEL_26:
  }
    *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v19;
LABEL_28:
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_168F0FC(uint64_t a1)
{
  return sub_167C784(a1 + 48);
}

void *sub_168F104@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentConflation.ConflatedIncident");
}

void *sub_168F114(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_168F188(void *a1)
{
  sub_168F114(a1);

  operator delete();
}

uint64_t sub_168F1C0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_168F1E4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      uint64_t v25 = v15;
      *(void *)(a1 + 32) = v16;
      goto LABEL_30;
    }
    int v21 = (char *)sub_188C138((uint64_t)v8, v16);
    uint64_t v25 = v21;
    *(void *)(a1 + 32) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v18 = v8 + 1;
    uint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    uint64_t v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      uint64_t v25 = v18;
      *(void *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    uint64_t v23 = (char *)sub_188C138((uint64_t)v8, v19);
    uint64_t v25 = v23;
    *(void *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_168F3D4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 24);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 32);
    *int v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

unint64_t sub_168F578(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    unint64_t v2 = 0;
    goto LABEL_8;
  }
  if (v1)
  {
    unint64_t v2 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  unint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_168F618()
{
  return 1;
}

void *sub_168F620@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentConflation.Presence.PresenceInterval.TimeInterval");
}

void *sub_168F630(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 4));
  sub_1889DA8((uint64_t)(a1 + 2));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_168F6B4(void *a1)
{
  sub_168F630(a1);

  operator delete();
}

uint64_t sub_168F6EC(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 24) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_168F704(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v30 = a2;
  if ((sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v6 = (void *)(a1 + 8);
    do
    {
      unint64_t v7 = v30 + 1;
      unsigned int v8 = *v30;
      if (*v30 < 0)
      {
        int v9 = *v7;
        unsigned int v10 = v8 + (v9 << 7);
        unsigned int v8 = v10 - 128;
        if (v9 < 0)
        {
          unint64_t v7 = (char *)sub_188C180((uint64_t)v30, v10 - 128);
          unsigned int v8 = v11;
        }
        else
        {
          unint64_t v7 = v30 + 2;
        }
      }
      uint64_t v30 = v7;
      if (v8 >> 3 == 2)
      {
        if (v8 == 16)
        {
          int v21 = v7 - 1;
          while (1)
          {
            uint64_t v30 = v21 + 1;
            int v22 = v21[1];
            if (v21[1] < 0)
            {
              int v23 = v22 + (v21[2] << 7);
              int v22 = v23 - 128;
              if (v21[2] < 0)
              {
                int v21 = (char *)sub_188C0D0((uint64_t)(v21 + 1), v23 - 128);
                int v22 = v24;
              }
              else
              {
                v21 += 3;
              }
            }
            else
            {
              v21 += 2;
            }
            uint64_t v30 = v21;
            uint64_t v25 = *(unsigned int *)(a1 + 32);
            if (v25 == *(_DWORD *)(a1 + 36))
            {
              int v26 = v25 + 1;
              sub_188C80C((unsigned int *)(a1 + 32), v25 + 1);
              *(_DWORD *)(*(void *)(a1 + 40) + 4 * v25) = v22;
              int v21 = v30;
            }
            else
            {
              *(_DWORD *)(*(void *)(a1 + 40) + 4 * v25) = v22;
              int v26 = v25 + 1;
            }
            *(_DWORD *)(a1 + 32) = v26;
            if (!v21) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v21 || *v21 != 16) {
              goto LABEL_56;
            }
          }
        }
        if (v8 == 18)
        {
          uint64_t v27 = (char *)sub_188C2CC((unsigned int *)(a1 + 32), (unsigned __int8 *)v7, (uint64_t)a3);
          goto LABEL_55;
        }
      }
      else if (v8 >> 3 == 1)
      {
        if (v8 == 8)
        {
          unint64_t v12 = v7 - 1;
          while (1)
          {
            uint64_t v30 = v12 + 1;
            unint64_t v13 = v12[1];
            int v14 = v12 + 2;
            if (v12[1] < 0)
            {
              int v15 = *v14;
              int v16 = v13 + (v15 << 7);
              unint64_t v13 = (v16 - 128);
              if (v15 < 0)
              {
                uint64_t v30 = (char *)sub_188C138((uint64_t)(v12 + 1), (v16 - 128));
                if (!v30) {
                  return 0;
                }
                unint64_t v13 = v19;
                goto LABEL_16;
              }
              int v14 = v12 + 3;
            }
            uint64_t v30 = v14;
LABEL_16:
            if (v13 > 0x4F)
            {
              if (*v6) {
                int v20 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                int v20 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(1, v13, v20);
            }
            else
            {
              uint64_t v17 = *(unsigned int *)(a1 + 16);
              if (v17 == *(_DWORD *)(a1 + 20))
              {
                int v18 = v17 + 1;
                sub_188C80C((unsigned int *)(a1 + 16), v17 + 1);
                *(_DWORD *)(*(void *)(a1 + 24) + 4 * v17) = v13;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 24) + 4 * v17) = v13;
                int v18 = v17 + 1;
              }
              *(_DWORD *)(a1 + 16) = v18;
            }
            unint64_t v12 = v30;
            if (*(void *)a3 <= (unint64_t)v30 || *v30 != 8) {
              goto LABEL_56;
            }
          }
        }
        if (v8 == 10)
        {
          *(void *)&long long v31 = a1 + 16;
          *((void *)&v31 + 1) = sub_166ED34;
          uint64_t v32 = a1 + 8;
          int v33 = 1;
          uint64_t v27 = sub_1112E88((uint64_t)a3, v7, &v31);
          goto LABEL_55;
        }
      }
      if (v8) {
        BOOL v28 = (v8 & 7) == 4;
      }
      else {
        BOOL v28 = 1;
      }
      if (v28)
      {
        if (v7)
        {
          a3[10].i32[0] = v8 - 1;
          return v30;
        }
        return 0;
      }
      if (*v6)
      {
        uint64_t v29 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        unint64_t v7 = v30;
      }
      uint64_t v27 = (char *)sub_1885AC0(v8, v29, v7, a3);
LABEL_55:
      uint64_t v30 = v27;
      if (!v27) {
        return 0;
      }
LABEL_56:
      ;
    }
    while (!sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1]));
  }
  return v30;
}

char *sub_168FA48(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 16);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v8 = *(int *)(*(void *)(a1 + 24) + 4 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  uint64_t v11 = *(unsigned int *)(a1 + 32);
  if ((int)v11 >= 1)
  {
    for (uint64_t j = 0; j != v11; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unsigned int v13 = *(_DWORD *)(*(void *)(a1 + 40) + 4 * j);
      *__dst = 16;
      __dst[1] = v13;
      if (v13 > 0x7F)
      {
        __dst[1] = v13 | 0x80;
        unsigned int v14 = v13 >> 7;
        __dst[2] = v13 >> 7;
        __dst += 3;
        if (v13 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unsigned int v15 = v14 >> 14;
            v14 >>= 7;
            *__dst++ = v14;
          }
          while (v15);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return __dst;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    unint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    unint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(__dst, v19, (int)v20);
    __dst += v21;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, __dst);
}

uint64_t sub_168FC34(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = 0;
    int v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 24) + 4 * v4);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v3 += v6;
      ++v4;
    }
    while (v2 != v4);
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t result = v3 + sub_188D4F0((unsigned int *)(a1 + 32)) + v2 + *(unsigned int *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    result += v10;
  }
  *(_DWORD *)(a1 + 48) = result;
  return result;
}

uint64_t sub_168FCF8()
{
  return 1;
}

void *sub_168FD00@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentConflation.Presence.PresenceInterval.Context");
}

void *sub_168FD10(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_168FD84(void *a1)
{
  sub_168FD10(a1);

  operator delete();
}

uint64_t sub_168FDBC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_168FDE0(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v26 + 2;
      }
    }
    int v26 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    uint64_t v20 = v8 + 1;
    LODWORD(v19) = *v8;
    if ((v19 & 0x80) == 0) {
      goto LABEL_31;
    }
    int v21 = *v20;
    uint64_t v19 = v19 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      uint64_t v20 = v8 + 2;
LABEL_31:
      int v26 = v20;
      *(_DWORD *)(a1 + 24) = v19;
      int v5 = 1;
      goto LABEL_32;
    }
    int v23 = (char *)sub_188C138((uint64_t)v8, v19);
    int v26 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    int v5 = 1;
    if (!v23) {
      goto LABEL_45;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 16)
  {
    unsigned int v15 = v8 + 1;
    unint64_t v16 = *v8;
    if (*v8 < 0)
    {
      int v17 = *v15;
      int v18 = v16 + (v17 << 7);
      unint64_t v16 = (v18 - 128);
      if (v17 < 0)
      {
        int v26 = (char *)sub_188C138((uint64_t)v8, (v18 - 128));
        if (!v26) {
          goto LABEL_45;
        }
        unint64_t v16 = v22;
        goto LABEL_26;
      }
      unsigned int v15 = v8 + 2;
    }
    int v26 = v15;
LABEL_26:
    if (sub_1321808(v16))
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 28) = v16;
    }
    else
    {
      if (*v7) {
        uint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v16, v25);
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      unsigned int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v26;
    }
    int v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_45;
    }
    goto LABEL_32;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_45:
  int v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

unsigned char *sub_1690018(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 28);
    *int v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_16901BC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_14;
  }
  if (v1)
  {
    int v3 = *(_DWORD *)(a1 + 24);
    if (v3 < 0)
    {
      uint64_t v2 = 11;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v4 = *(_DWORD *)(a1 + 28);
  if (v4 < 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v5;
LABEL_14:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_169027C()
{
  return 1;
}

void *sub_1690284@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentConflation.Presence.PresenceInterval.UserReports");
}

uint64_t sub_1690294(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2543968)
  {
    uint64_t v5 = *(void **)(a1 + 48);
    if (v5)
    {
      sub_168F114(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 56);
    if (v6)
    {
      sub_168F630(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_16B3C84((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1690370(uint64_t a1)
{
  sub_1690294(a1);

  operator delete();
}

uint64_t sub_16903A8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_168FDBC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if (v5) {
      uint64_t result = sub_168F1C0(*(void *)(v1 + 48));
    }
    if ((v5 & 2) != 0)
    {
      uint64_t v6 = *(void *)(v1 + 56);
      char v7 = *(unsigned char *)(v6 + 8);
      uint64_t result = v6 + 8;
      *(_DWORD *)(result + 8) = 0;
      *(_DWORD *)(result + 24) = 0;
      if (v7) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
  }
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = v1 + 8;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

char *sub_169045C(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = v26 + 2;
      }
    }
    int v26 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3) {
      break;
    }
    if (v11 == 2)
    {
      if (v8 != 18) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v22 = *(void *)(a1 + 56);
      if (!v22)
      {
        int v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          int v23 = (void *)*v23;
        }
        uint64_t v22 = sub_1695CC8((uint64_t)v23);
        *(void *)(a1 + 56) = v22;
        char v7 = v26;
      }
      unint64_t v15 = sub_169074C(a3, v22, (unsigned __int8 *)v7);
    }
    else
    {
      if (v11 != 1 || v8 != 10) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 1u;
      int v24 = *(void **)(a1 + 48);
      if (!v24)
      {
        uint64_t v25 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v25 = (void *)*v25;
        }
        int v24 = sub_1695C4C((uint64_t)v25);
        *(void *)(a1 + 48) = v24;
        char v7 = v26;
      }
      unint64_t v15 = sub_16906BC(a3, (uint64_t)v24, (unsigned __int8 *)v7);
    }
LABEL_42:
    int v26 = v15;
    if (!v15) {
      return 0;
    }
LABEL_43:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      return v26;
    }
  }
  if (v8 == 26)
  {
    unint64_t v16 = v7 - 1;
    while (1)
    {
      uint64_t v17 = (unsigned __int8 *)(v16 + 1);
      int v26 = v16 + 1;
      uint64_t v18 = *(_DWORD **)(a1 + 40);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 32) = v19 + 1;
        uint64_t v20 = *(void *)&v18[2 * v19 + 2];
      }
      else
      {
        int v21 = sub_1695D70(*(void *)(a1 + 24));
        uint64_t v20 = sub_188CDC8(a1 + 24, (uint64_t)v21);
        uint64_t v17 = (unsigned __int8 *)v26;
      }
      unint64_t v16 = sub_16907DC(a3, v20, v17);
      int v26 = v16;
      if (!v16) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
        goto LABEL_43;
      }
    }
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      unsigned int v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v7 = v26;
    }
    unint64_t v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_42;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v26;
  }
  return 0;
}

char *sub_16906BC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_168F1E4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_169074C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_168F704(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16907DC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_168FDE0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_169086C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_168F3D4(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 56);
    *uint64_t v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 48);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unint64_t v12 = v4 + 2;
    }
    uint64_t v4 = sub_168FA48(v10, v12, a3);
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        uint64_t v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        uint64_t v17 = v4 + 2;
      }
      uint64_t v4 = sub_1690018(v15, (unint64_t)v17, a3);
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    int v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    int v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_1690A7C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_16901BC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      unint64_t v9 = sub_168F578(*(void *)(a1 + 48));
      v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      uint64_t v10 = sub_168FC34(*(void *)(a1 + 56));
      v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1690B98(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_16B4964(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)v3[2].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        unint64_t v12 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          unint64_t v12 = (void *)*v12;
        }
        std::string::pointer data = (std::string *)sub_1695C4C((uint64_t)v12);
        v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 48)) {
        unint64_t v13 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        unint64_t v13 = &off_2543908;
      }
      uint64_t result = sub_1113E40(data, (uint64_t)v13);
    }
    if ((v9 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      uint64_t v14 = (std::string *)v3[2].__r_.__value_.__l.__size_;
      if (!v14)
      {
        std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
        unsigned int v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unsigned int v16 = (void *)*v16;
        }
        uint64_t v14 = (std::string *)sub_1695CC8((uint64_t)v16);
        v3[2].__r_.__value_.__l.__size_ = (std::string::size_type)v14;
      }
      if (*(void *)(a2 + 56)) {
        uint64_t v17 = *(uint64_t (****)())(a2 + 56);
      }
      else {
        uint64_t v17 = &off_2543930;
      }
      uint64_t result = sub_11D640C(v14, (uint64_t)v17);
    }
  }
  uint64_t v18 = *(void *)(a2 + 8);
  if (v18)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v18 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1690D0C()
{
  return 1;
}

void *sub_1690D14@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentConflation.Presence.PresenceInterval");
}

void *sub_1690D24(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_16B3D04(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1690DA4(void *a1)
{
  sub_1690D24(a1);

  operator delete();
}

uint64_t sub_1690DDC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_16903A8(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_1690E58(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        unint64_t v12 = v6 - 1;
        while (1)
        {
          unint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_1695DE8(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            unint64_t v13 = (unsigned __int8 *)v19;
          }
          unint64_t v12 = sub_1690FF8(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_1690FF8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_169045C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1691088(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_169086C(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_16911CC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1690A7C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

std::string *sub_169127C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = (std::string *)sub_16B49E0((uint64_t *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_169134C()
{
  return 1;
}

void *sub_1691354@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentConflation.Presence");
}

uint64_t sub_1691364(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_25439D8)
  {
    uint64_t v6 = *(void **)(a1 + 48);
    if (v6)
    {
      sub_1690D24(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_16B3D84((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1691428(uint64_t a1)
{
  sub_1691364(a1);

  operator delete();
}

char *sub_1691460(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v23 + 2;
      }
    }
    uint64_t v23 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 48);
    if (!v15)
    {
      uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v15 = sub_1695E84((uint64_t)v16);
      *(void *)(a1 + 48) = v15;
      int v7 = v23;
    }
    uint64_t v14 = sub_16916F8(a3, v15, (unsigned __int8 *)v7);
LABEL_26:
    uint64_t v23 = v14;
    if (!v14) {
      return 0;
    }
LABEL_27:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    uint64_t v17 = v7 - 1;
    while (1)
    {
      uint64_t v18 = (unsigned __int8 *)(v17 + 1);
      uint64_t v23 = v17 + 1;
      uint64_t v19 = *(_DWORD **)(a1 + 40);
      if (v19 && (uint64_t v20 = *(int *)(a1 + 32), (int)v20 < *v19))
      {
        *(_DWORD *)(a1 + 32) = v20 + 1;
        uint64_t v21 = *(void *)&v19[2 * v20 + 2];
      }
      else
      {
        sub_1695B80(*(void *)(a1 + 24));
        uint64_t v21 = sub_188CDC8(a1 + 24, v22);
        uint64_t v18 = (unsigned __int8 *)v23;
      }
      uint64_t v17 = (char *)sub_1691668(a3, v21, v18);
      uint64_t v23 = v17;
      if (!v17) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v17 || *v17 != 10) {
        goto LABEL_27;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v23;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_26;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

uint64_t sub_1691668(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_168DDC0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16916F8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1690E58(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1691788(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_168E50C(v8, v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v11 = *(void *)(a1 + 48);
    *__dst = 18;
    unsigned int v12 = *(_DWORD *)(v11 + 40);
    __dst[1] = v12;
    if (v12 > 0x7F) {
      unint64_t v13 = sub_188A9CC(v12, __dst + 1);
    }
    else {
      unint64_t v13 = __dst + 2;
    }
    __dst = sub_1691088(v11, v13, a3);
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return __dst;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*a3 - (void)__dst >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(__dst, v17, (int)v18);
    __dst += v19;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, __dst);
}

uint64_t sub_1691934(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    int v4 = (uint64_t *)(v3 + 8);
  }
  else {
    int v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_168EAE8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v8 = sub_16911CC(*(void *)(a1 + 48));
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void *sub_1691A18@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentConflation");
}

void *sub_1691A28(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1691AB4((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DE8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_1691AB4(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 48);
  uint64_t v2 = (void ***)(a1 + 48);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 72));
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(uint64_t **)(a1 + 88) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 88));
  }
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 96));
  }
  uint64_t result = (void ***)(a1 + 104);
  if (*(uint64_t **)(a1 + 104) != &qword_2550250) {
    sub_1881C6C(result);
  }
  uint64_t v6 = *(uint64_t **)(a1 + 112);
  uint64_t v5 = (void ***)(a1 + 112);
  if (v6 != &qword_2550250)
  {
    sub_1881C6C(v5);
  }
  return result;
}

void sub_1691BA8(void *a1)
{
  sub_1691A28(a1);

  operator delete();
}

uint64_t sub_1691BE0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v91 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v91, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v90 = (uint64_t *)(a1 + 8);
  uint64_t v7 = (uint64_t **)(a1 + 24);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v91 + 1);
    unsigned int v9 = **(unsigned char **)v91;
    if ((char)**(unsigned char **)v91 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v91, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v91 + 2);
      }
    }
    *(void *)uint64_t v91 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_132;
        }
        uint64_t v12 = v8 - 1;
        while (1)
        {
          unint64_t v13 = (char *)(v12 + 1);
          *(void *)uint64_t v91 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 40);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 32), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 32) = v15 + 1;
            unint64_t v16 = *(std::string **)&v14[2 * v15 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *uint64_t v18 = v17;
            v18[1] = sub_3A6EDC;
            void *v17 = 0;
            v17[1] = 0;
            int v17[2] = 0;
            unint64_t v16 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v17);
            unint64_t v13 = *(char **)v91;
          }
          uint64_t v12 = sub_188C244(v16, v13, (uint64_t)a3);
          *(void *)uint64_t v91 = v12;
          if (!v12) {
            goto LABEL_158;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_125;
          }
        }
      case 2u:
        if (v9 != 18) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v20 = (uint64_t *)*v20;
        }
        uint64_t v21 = (void *)(a1 + 48);
        goto LABEL_123;
      case 3u:
        if (v9 != 29) {
          goto LABEL_132;
        }
        int v23 = *(_DWORD *)v8;
        uint64_t v22 = v8 + 4;
        v5 |= 0x200u;
        *(_DWORD *)(a1 + 120) = v23;
        goto LABEL_118;
      case 4u:
        if (v9 != 37) {
          goto LABEL_132;
        }
        int v24 = *(_DWORD *)v8;
        uint64_t v22 = v8 + 4;
        v5 |= 0x400u;
        *(_DWORD *)(a1 + 124) = v24;
        goto LABEL_118;
      case 5u:
        if (v9 != 40) {
          goto LABEL_132;
        }
        v5 |= 0x800u;
        uint64_t v25 = v8 + 1;
        uint64_t v26 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v27 = *v25;
        uint64_t v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          uint64_t v74 = sub_188C138((uint64_t)v8, v26);
          *(void *)uint64_t v91 = v74;
          *(void *)(a1 + 128) = v75;
          if (!v74) {
            goto LABEL_158;
          }
        }
        else
        {
          uint64_t v25 = v8 + 2;
LABEL_33:
          *(void *)uint64_t v91 = v25;
          *(void *)(a1 + 128) = v26;
        }
        goto LABEL_125;
      case 6u:
        if (v9 != 48) {
          goto LABEL_132;
        }
        v5 |= 0x1000u;
        BOOL v28 = v8 + 1;
        uint64_t v29 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v30 = *v28;
        uint64_t v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          uint64_t v76 = sub_188C138((uint64_t)v8, v29);
          *(void *)uint64_t v91 = v76;
          *(void *)(a1 + 136) = v77;
          if (!v76) {
            goto LABEL_158;
          }
        }
        else
        {
          BOOL v28 = v8 + 2;
LABEL_38:
          *(void *)uint64_t v91 = v28;
          *(void *)(a1 + 136) = v29;
        }
        goto LABEL_125;
      case 7u:
        if (v9 != 56) {
          goto LABEL_132;
        }
        v5 |= 0x2000u;
        long long v31 = v8 + 1;
        uint64_t v32 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v33 = *v31;
        uint64_t v32 = v32 + (v33 << 7) - 128;
        if (v33 < 0)
        {
          uint64_t v78 = sub_188C138((uint64_t)v8, v32);
          *(void *)uint64_t v91 = v78;
          *(void *)(a1 + 144) = v79;
          if (!v78) {
            goto LABEL_158;
          }
        }
        else
        {
          long long v31 = v8 + 2;
LABEL_43:
          *(void *)uint64_t v91 = v31;
          *(void *)(a1 + 144) = v32;
        }
        goto LABEL_125;
      case 8u:
        if (v9 != 69) {
          goto LABEL_132;
        }
        int v34 = *(_DWORD *)v8;
        uint64_t v22 = v8 + 4;
        v5 |= 0x4000u;
        *(_DWORD *)(a1 + 152) = v34;
        goto LABEL_118;
      case 9u:
        if (v9 != 77) {
          goto LABEL_132;
        }
        int v35 = *(_DWORD *)v8;
        uint64_t v22 = v8 + 4;
        v5 |= 0x8000u;
        *(_DWORD *)(a1 + 156) = v35;
        goto LABEL_118;
      case 0xAu:
        if (v9 != 85) {
          goto LABEL_132;
        }
        int v36 = *(_DWORD *)v8;
        uint64_t v22 = v8 + 4;
        v5 |= 0x10000u;
        *(_DWORD *)(a1 + 160) = v36;
        goto LABEL_118;
      case 0xBu:
        if (v9 != 93) {
          goto LABEL_132;
        }
        int v37 = *(_DWORD *)v8;
        uint64_t v22 = v8 + 4;
        v5 |= 0x20000u;
        *(_DWORD *)(a1 + 164) = v37;
        goto LABEL_118;
      case 0xCu:
        if (v9 != 101) {
          goto LABEL_132;
        }
        int v38 = *(_DWORD *)v8;
        uint64_t v22 = v8 + 4;
        v5 |= 0x40000u;
        *(_DWORD *)(a1 + 168) = v38;
        goto LABEL_118;
      case 0xDu:
        if (v9 != 109) {
          goto LABEL_132;
        }
        int v39 = *(_DWORD *)v8;
        uint64_t v22 = v8 + 4;
        v5 |= 0x80000u;
        *(_DWORD *)(a1 + 172) = v39;
        goto LABEL_118;
      case 0xEu:
        if (v9 != 114) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v40 = *(void *)(a1 + 8);
        uint64_t v20 = (uint64_t *)(v40 & 0xFFFFFFFFFFFFFFFCLL);
        if (v40) {
          uint64_t v20 = (uint64_t *)*v20;
        }
        uint64_t v21 = (void *)(a1 + 56);
        goto LABEL_123;
      case 0xFu:
        if (v9 != 122) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v41 = *(void *)(a1 + 8);
        uint64_t v20 = (uint64_t *)(v41 & 0xFFFFFFFFFFFFFFFCLL);
        if (v41) {
          uint64_t v20 = (uint64_t *)*v20;
        }
        uint64_t v21 = (void *)(a1 + 64);
        goto LABEL_123;
      case 0x10u:
        if (v9 != 130) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v42 = *(void *)(a1 + 8);
        uint64_t v20 = (uint64_t *)(v42 & 0xFFFFFFFFFFFFFFFCLL);
        if (v42) {
          uint64_t v20 = (uint64_t *)*v20;
        }
        uint64_t v21 = (void *)(a1 + 72);
        goto LABEL_123;
      case 0x11u:
        if (v9 != 138) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v43 = *(void *)(a1 + 8);
        uint64_t v20 = (uint64_t *)(v43 & 0xFFFFFFFFFFFFFFFCLL);
        if (v43) {
          uint64_t v20 = (uint64_t *)*v20;
        }
        uint64_t v21 = (void *)(a1 + 80);
        goto LABEL_123;
      case 0x12u:
        if (v9 != 146) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v44 = *(void *)(a1 + 8);
        uint64_t v20 = (uint64_t *)(v44 & 0xFFFFFFFFFFFFFFFCLL);
        if (v44) {
          uint64_t v20 = (uint64_t *)*v20;
        }
        uint64_t v21 = (void *)(a1 + 88);
        goto LABEL_123;
      case 0x13u:
        if (v9 != 154) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v45 = *(void *)(a1 + 8);
        uint64_t v20 = (uint64_t *)(v45 & 0xFFFFFFFFFFFFFFFCLL);
        if (v45) {
          uint64_t v20 = (uint64_t *)*v20;
        }
        uint64_t v21 = (void *)(a1 + 96);
        goto LABEL_123;
      case 0x14u:
        if (v9 != 162) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v46 = *(void *)(a1 + 8);
        uint64_t v20 = (uint64_t *)(v46 & 0xFFFFFFFFFFFFFFFCLL);
        if (v46) {
          uint64_t v20 = (uint64_t *)*v20;
        }
        uint64_t v21 = (void *)(a1 + 104);
        goto LABEL_123;
      case 0x15u:
        if (v9 != 168) {
          goto LABEL_132;
        }
        v5 |= 0x100000u;
        uint64_t v47 = v8 + 1;
        uint64_t v48 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_88;
        }
        int v49 = *v47;
        uint64_t v48 = v48 + (v49 << 7) - 128;
        if (v49 < 0)
        {
          uint64_t v80 = sub_188C138((uint64_t)v8, v48);
          *(void *)uint64_t v91 = v80;
          *(void *)(a1 + 176) = v81;
          if (!v80) {
            goto LABEL_158;
          }
        }
        else
        {
          uint64_t v47 = v8 + 2;
LABEL_88:
          *(void *)uint64_t v91 = v47;
          *(void *)(a1 + 176) = v48;
        }
        goto LABEL_125;
      case 0x16u:
        if (v9 != 176) {
          goto LABEL_132;
        }
        v5 |= 0x200000u;
        int v50 = v8 + 1;
        uint64_t v51 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_93;
        }
        int v52 = *v50;
        uint64_t v51 = v51 + (v52 << 7) - 128;
        if (v52 < 0)
        {
          uint64_t v82 = sub_188C138((uint64_t)v8, v51);
          *(void *)uint64_t v91 = v82;
          *(void *)(a1 + 184) = v83;
          if (!v82) {
            goto LABEL_158;
          }
        }
        else
        {
          int v50 = v8 + 2;
LABEL_93:
          *(void *)uint64_t v91 = v50;
          *(void *)(a1 + 184) = v51;
        }
        goto LABEL_125;
      case 0x17u:
        if (v9 != 184) {
          goto LABEL_132;
        }
        v5 |= 0x400000u;
        uint64_t v53 = v8 + 1;
        uint64_t v54 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_98;
        }
        int v55 = *v53;
        uint64_t v54 = v54 + (v55 << 7) - 128;
        if (v55 < 0)
        {
          uint64_t v84 = sub_188C138((uint64_t)v8, v54);
          *(void *)uint64_t v91 = v84;
          *(void *)(a1 + 192) = v85;
          if (!v84) {
            goto LABEL_158;
          }
        }
        else
        {
          uint64_t v53 = v8 + 2;
LABEL_98:
          *(void *)uint64_t v91 = v53;
          *(void *)(a1 + 192) = v54;
        }
        goto LABEL_125;
      case 0x18u:
        if (v9 != 197) {
          goto LABEL_132;
        }
        int v56 = *(_DWORD *)v8;
        uint64_t v22 = v8 + 4;
        v5 |= 0x800000u;
        *(_DWORD *)(a1 + 200) = v56;
        goto LABEL_118;
      case 0x19u:
        if (v9 != 205) {
          goto LABEL_132;
        }
        int v57 = *(_DWORD *)v8;
        uint64_t v22 = v8 + 4;
        v5 |= 0x1000000u;
        *(_DWORD *)(a1 + 204) = v57;
        goto LABEL_118;
      case 0x1Au:
        if (v9 != 213) {
          goto LABEL_132;
        }
        int v58 = *(_DWORD *)v8;
        uint64_t v22 = v8 + 4;
        v5 |= 0x2000000u;
        *(_DWORD *)(a1 + 208) = v58;
        goto LABEL_118;
      case 0x1Bu:
        if (v9 != 221) {
          goto LABEL_132;
        }
        int v59 = *(_DWORD *)v8;
        uint64_t v22 = v8 + 4;
        v5 |= 0x4000000u;
        *(_DWORD *)(a1 + 212) = v59;
        goto LABEL_118;
      case 0x1Cu:
        if (v9 != 224) {
          goto LABEL_132;
        }
        v5 |= 0x8000000u;
        int v60 = v8 + 1;
        uint64_t v61 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_111;
        }
        int v62 = *v60;
        uint64_t v61 = v61 + (v62 << 7) - 128;
        if (v62 < 0)
        {
          uint64_t v86 = sub_188C138((uint64_t)v8, v61);
          *(void *)uint64_t v91 = v86;
          *(void *)(a1 + 216) = v87;
          if (!v86) {
            goto LABEL_158;
          }
        }
        else
        {
          int v60 = v8 + 2;
LABEL_111:
          *(void *)uint64_t v91 = v60;
          *(void *)(a1 + 216) = v61;
        }
        goto LABEL_125;
      case 0x1Du:
        if (v9 != 237) {
          goto LABEL_132;
        }
        int v63 = *(_DWORD *)v8;
        uint64_t v22 = v8 + 4;
        v5 |= 0x10000000u;
        *(_DWORD *)(a1 + 224) = v63;
        goto LABEL_118;
      case 0x1Eu:
        if (v9 != 245) {
          goto LABEL_132;
        }
        int v64 = *(_DWORD *)v8;
        uint64_t v22 = v8 + 4;
        v5 |= 0x20000000u;
        *(_DWORD *)(a1 + 228) = v64;
        goto LABEL_118;
      case 0x1Fu:
        if (v9 != 253) {
          goto LABEL_132;
        }
        int v65 = *(_DWORD *)v8;
        uint64_t v22 = v8 + 4;
        v5 |= 0x40000000u;
        *(_DWORD *)(a1 + 232) = v65;
LABEL_118:
        *(void *)uint64_t v91 = v22;
        goto LABEL_125;
      case 0x20u:
        if (v9 != 2) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        uint64_t v66 = *(void *)(a1 + 8);
        uint64_t v20 = (uint64_t *)(v66 & 0xFFFFFFFFFFFFFFFCLL);
        if (v66) {
          uint64_t v20 = (uint64_t *)*v20;
        }
        uint64_t v21 = (void *)(a1 + 112);
LABEL_123:
        uint64_t v67 = (std::string *)sub_1880F84(v21, v20);
        uint64_t v68 = (void *)sub_188C244(v67, *(char **)v91, (uint64_t)a3);
        goto LABEL_124;
      case 0x21u:
        if (v9 != 8) {
          goto LABEL_132;
        }
        v5 |= 0x80000000;
        int v69 = v8 + 1;
        uint64_t v70 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_131;
        }
        int v71 = *v69;
        uint64_t v70 = v70 + (v71 << 7) - 128;
        if (v71 < 0)
        {
          uint64_t v88 = sub_188C138((uint64_t)v8, v70);
          *(void *)uint64_t v91 = v88;
          *(unsigned char *)(a1 + 236) = v89 != 0;
          if (!v88) {
            goto LABEL_158;
          }
        }
        else
        {
          int v69 = v8 + 2;
LABEL_131:
          *(void *)uint64_t v91 = v69;
          *(unsigned char *)(a1 + 236) = v70 != 0;
        }
        goto LABEL_125;
      default:
LABEL_132:
        if (v9) {
          BOOL v72 = (v9 & 7) == 4;
        }
        else {
          BOOL v72 = 1;
        }
        if (!v72)
        {
          if (*v90)
          {
            uint64_t v73 = (std::string *)((*v90 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v73 = (std::string *)sub_188DBD8(v90);
            uint64_t v8 = *(char **)v91;
          }
          uint64_t v68 = sub_1885AC0(v9, v73, v8, a3);
LABEL_124:
          *(void *)uint64_t v91 = v68;
          if (!v68) {
            goto LABEL_158;
          }
LABEL_125:
          if (sub_11947B8((uint64_t)a3, (char **)v91, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_158:
        }
          *(void *)uint64_t v91 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v91;
    }
  }
}

char *sub_1692554(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 40) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v10)
      {
        *__dst = 10;
        __dst[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        unsigned int v11 = __dst + 2;
        memcpy(v11, v9, v10);
        __dst = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      __dst = (char *)sub_188A868(a3, 1, (uint64_t)v9, __dst);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  int v12 = *(_DWORD *)(a1 + 16);
  if (v12)
  {
    __dst = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v12 & 0x200) == 0)
    {
LABEL_15:
      if ((v12 & 0x400) == 0) {
        goto LABEL_16;
      }
      goto LABEL_22;
    }
  }
  else if ((v12 & 0x200) == 0)
  {
    goto LABEL_15;
  }
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  int v13 = *(_DWORD *)(a1 + 120);
  *__dst = 29;
  *(_DWORD *)(__dst + 1) = v13;
  __dst += 5;
  if ((v12 & 0x400) == 0)
  {
LABEL_16:
    if ((v12 & 0x800) == 0) {
      goto LABEL_31;
    }
    goto LABEL_25;
  }
LABEL_22:
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  int v14 = *(_DWORD *)(a1 + 124);
  *__dst = 37;
  *(_DWORD *)(__dst + 1) = v14;
  __dst += 5;
  if ((v12 & 0x800) != 0)
  {
LABEL_25:
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v15 = *(void *)(a1 + 128);
    *__dst = 40;
    __dst[1] = v15;
    if (v15 > 0x7F)
    {
      __dst[1] = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      __dst[2] = v15 >> 7;
      __dst += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *__dst++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      __dst += 2;
    }
  }
LABEL_31:
  if ((v12 & 0x1000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v18 = *(void *)(a1 + 136);
    *__dst = 48;
    __dst[1] = v18;
    if (v18 > 0x7F)
    {
      __dst[1] = v18 | 0x80;
      unint64_t v19 = v18 >> 7;
      __dst[2] = v18 >> 7;
      __dst += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v20 = v19 >> 14;
          v19 >>= 7;
          *__dst++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v12 & 0x2000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v21 = *(void *)(a1 + 144);
    *__dst = 56;
    __dst[1] = v21;
    if (v21 > 0x7F)
    {
      __dst[1] = v21 | 0x80;
      unint64_t v22 = v21 >> 7;
      __dst[2] = v21 >> 7;
      __dst += 3;
      if (v21 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v23 = v22 >> 14;
          v22 >>= 7;
          *__dst++ = v22;
        }
        while (v23);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v12 & 0x4000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    int v24 = *(_DWORD *)(a1 + 152);
    *__dst = 69;
    *(_DWORD *)(__dst + 1) = v24;
    __dst += 5;
    if ((v12 & 0x8000) == 0)
    {
LABEL_47:
      if ((v12 & 0x10000) == 0) {
        goto LABEL_48;
      }
      goto LABEL_66;
    }
  }
  else if ((v12 & 0x8000) == 0)
  {
    goto LABEL_47;
  }
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  int v25 = *(_DWORD *)(a1 + 156);
  *__dst = 77;
  *(_DWORD *)(__dst + 1) = v25;
  __dst += 5;
  if ((v12 & 0x10000) == 0)
  {
LABEL_48:
    if ((v12 & 0x20000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_69;
  }
LABEL_66:
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  int v26 = *(_DWORD *)(a1 + 160);
  *__dst = 85;
  *(_DWORD *)(__dst + 1) = v26;
  __dst += 5;
  if ((v12 & 0x20000) == 0)
  {
LABEL_49:
    if ((v12 & 0x40000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_72;
  }
LABEL_69:
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  int v27 = *(_DWORD *)(a1 + 164);
  *__dst = 93;
  *(_DWORD *)(__dst + 1) = v27;
  __dst += 5;
  if ((v12 & 0x40000) == 0)
  {
LABEL_50:
    if ((v12 & 0x80000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_75;
  }
LABEL_72:
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  int v28 = *(_DWORD *)(a1 + 168);
  *__dst = 101;
  *(_DWORD *)(__dst + 1) = v28;
  __dst += 5;
  if ((v12 & 0x80000) == 0)
  {
LABEL_51:
    if ((v12 & 2) == 0) {
      goto LABEL_52;
    }
    goto LABEL_78;
  }
LABEL_75:
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  int v29 = *(_DWORD *)(a1 + 172);
  *__dst = 109;
  *(_DWORD *)(__dst + 1) = v29;
  __dst += 5;
  if ((v12 & 2) == 0)
  {
LABEL_52:
    if ((v12 & 4) == 0) {
      goto LABEL_53;
    }
    goto LABEL_79;
  }
LABEL_78:
  __dst = sub_117A0AC(a3, 14, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), __dst);
  if ((v12 & 4) == 0)
  {
LABEL_53:
    if ((v12 & 8) == 0) {
      goto LABEL_54;
    }
    goto LABEL_80;
  }
LABEL_79:
  __dst = sub_117A0AC(a3, 15, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), __dst);
  if ((v12 & 8) == 0)
  {
LABEL_54:
    if ((v12 & 0x10) == 0) {
      goto LABEL_55;
    }
    goto LABEL_81;
  }
LABEL_80:
  __dst = sub_117A0AC(a3, 16, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), __dst);
  if ((v12 & 0x10) == 0)
  {
LABEL_55:
    if ((v12 & 0x20) == 0) {
      goto LABEL_56;
    }
    goto LABEL_82;
  }
LABEL_81:
  __dst = sub_117A0AC(a3, 17, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), __dst);
  if ((v12 & 0x20) == 0)
  {
LABEL_56:
    if ((v12 & 0x40) == 0) {
      goto LABEL_57;
    }
    goto LABEL_83;
  }
LABEL_82:
  __dst = sub_117A0AC(a3, 18, (const void **)(*(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL), __dst);
  if ((v12 & 0x40) == 0)
  {
LABEL_57:
    if ((v12 & 0x80) == 0) {
      goto LABEL_58;
    }
    goto LABEL_84;
  }
LABEL_83:
  __dst = sub_117A0AC(a3, 19, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), __dst);
  if ((v12 & 0x80) == 0)
  {
LABEL_58:
    if ((v12 & 0x100000) == 0) {
      goto LABEL_91;
    }
    goto LABEL_85;
  }
LABEL_84:
  __dst = sub_117A0AC(a3, 20, (const void **)(*(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL), __dst);
  if ((v12 & 0x100000) == 0) {
    goto LABEL_91;
  }
LABEL_85:
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  unint64_t v30 = *(void *)(a1 + 176);
  *(_WORD *)__dst = 424;
  __dst[2] = v30;
  if (v30 > 0x7F)
  {
    __dst[2] = v30 | 0x80;
    unint64_t v31 = v30 >> 7;
    __dst[3] = v30 >> 7;
    __dst += 4;
    if (v30 >= 0x4000)
    {
      do
      {
        *(__dst - 1) |= 0x80u;
        unint64_t v32 = v31 >> 14;
        v31 >>= 7;
        *__dst++ = v31;
      }
      while (v32);
    }
  }
  else
  {
    __dst += 3;
  }
LABEL_91:
  if ((v12 & 0x200000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v33 = *(void *)(a1 + 184);
    *(_WORD *)__dst = 432;
    __dst[2] = v33;
    if (v33 > 0x7F)
    {
      __dst[2] = v33 | 0x80;
      unint64_t v34 = v33 >> 7;
      __dst[3] = v33 >> 7;
      __dst += 4;
      if (v33 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v35 = v34 >> 14;
          v34 >>= 7;
          *__dst++ = v34;
        }
        while (v35);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  if ((v12 & 0x400000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v36 = *(void *)(a1 + 192);
    *(_WORD *)__dst = 440;
    __dst[2] = v36;
    if (v36 > 0x7F)
    {
      __dst[2] = v36 | 0x80;
      unint64_t v37 = v36 >> 7;
      __dst[3] = v36 >> 7;
      __dst += 4;
      if (v36 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v38 = v37 >> 14;
          v37 >>= 7;
          *__dst++ = v37;
        }
        while (v38);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  if ((v12 & 0x800000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    int v39 = *(_DWORD *)(a1 + 200);
    *(_WORD *)__dst = 453;
    *(_DWORD *)(__dst + 2) = v39;
    __dst += 6;
    if ((v12 & 0x1000000) == 0)
    {
LABEL_107:
      if ((v12 & 0x2000000) == 0) {
        goto LABEL_108;
      }
      goto LABEL_117;
    }
  }
  else if ((v12 & 0x1000000) == 0)
  {
    goto LABEL_107;
  }
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  int v40 = *(_DWORD *)(a1 + 204);
  *(_WORD *)__dst = 461;
  *(_DWORD *)(__dst + 2) = v40;
  __dst += 6;
  if ((v12 & 0x2000000) == 0)
  {
LABEL_108:
    if ((v12 & 0x4000000) == 0) {
      goto LABEL_109;
    }
    goto LABEL_120;
  }
LABEL_117:
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  int v41 = *(_DWORD *)(a1 + 208);
  *(_WORD *)__dst = 469;
  *(_DWORD *)(__dst + 2) = v41;
  __dst += 6;
  if ((v12 & 0x4000000) == 0)
  {
LABEL_109:
    if ((v12 & 0x8000000) == 0) {
      goto LABEL_129;
    }
    goto LABEL_123;
  }
LABEL_120:
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  int v42 = *(_DWORD *)(a1 + 212);
  *(_WORD *)__dst = 477;
  *(_DWORD *)(__dst + 2) = v42;
  __dst += 6;
  if ((v12 & 0x8000000) != 0)
  {
LABEL_123:
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v43 = *(void *)(a1 + 216);
    *(_WORD *)__dst = 480;
    __dst[2] = v43;
    if (v43 > 0x7F)
    {
      __dst[2] = v43 | 0x80;
      unint64_t v44 = v43 >> 7;
      __dst[3] = v43 >> 7;
      __dst += 4;
      if (v43 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v45 = v44 >> 14;
          v44 >>= 7;
          *__dst++ = v44;
        }
        while (v45);
      }
    }
    else
    {
      __dst += 3;
    }
  }
LABEL_129:
  if ((v12 & 0x10000000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    int v46 = *(_DWORD *)(a1 + 224);
    *(_WORD *)__dst = 493;
    *(_DWORD *)(__dst + 2) = v46;
    __dst += 6;
    if ((v12 & 0x20000000) == 0)
    {
LABEL_131:
      if ((v12 & 0x40000000) == 0) {
        goto LABEL_132;
      }
      goto LABEL_141;
    }
  }
  else if ((v12 & 0x20000000) == 0)
  {
    goto LABEL_131;
  }
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  int v47 = *(_DWORD *)(a1 + 228);
  *(_WORD *)__dst = 501;
  *(_DWORD *)(__dst + 2) = v47;
  __dst += 6;
  if ((v12 & 0x40000000) == 0)
  {
LABEL_132:
    if ((v12 & 0x100) == 0) {
      goto LABEL_133;
    }
LABEL_144:
    __dst = sub_117A0AC(a3, 32, (const void **)(*(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v12 & 0x80000000) == 0) {
      goto LABEL_148;
    }
    goto LABEL_145;
  }
LABEL_141:
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  int v48 = *(_DWORD *)(a1 + 232);
  *(_WORD *)__dst = 509;
  *(_DWORD *)(__dst + 2) = v48;
  __dst += 6;
  if ((v12 & 0x100) != 0) {
    goto LABEL_144;
  }
LABEL_133:
  if ((v12 & 0x80000000) == 0) {
    goto LABEL_148;
  }
LABEL_145:
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v49 = *(unsigned char *)(a1 + 236);
  *(_WORD *)__dst = 648;
  __dst[2] = v49;
  __dst += 3;
LABEL_148:
  uint64_t v50 = *(void *)(a1 + 8);
  if ((v50 & 1) == 0) {
    return __dst;
  }
  unint64_t v52 = v50 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v52 + 31) < 0)
  {
    uint64_t v53 = *(void **)(v52 + 8);
    uint64_t v54 = *(void *)(v52 + 16);
  }
  else
  {
    uint64_t v53 = (void *)(v52 + 8);
    LODWORD(v54) = *(unsigned __int8 *)(v52 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v54)
  {
    uint64_t v55 = (int)v54;
    memcpy(__dst, v53, (int)v54);
    __dst += v55;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v53, v54, __dst);
}

uint64_t sub_1692F34(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  int v7 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v7) {
    goto LABEL_20;
  }
  if (v7)
  {
    unint64_t v16 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
    uint64_t v18 = *(void *)(v16 + 8);
    if ((v17 & 0x80u) == 0) {
      uint64_t v18 = v17;
    }
    v3 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v7 & 2) == 0)
    {
LABEL_11:
      if ((v7 & 4) == 0) {
        goto LABEL_12;
      }
      goto LABEL_77;
    }
  }
  else if ((v7 & 2) == 0)
  {
    goto LABEL_11;
  }
  unint64_t v19 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
  uint64_t v21 = *(void *)(v19 + 8);
  if ((v20 & 0x80u) == 0) {
    uint64_t v21 = v20;
  }
  v3 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v7 & 4) == 0)
  {
LABEL_12:
    if ((v7 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_80;
  }
LABEL_77:
  unint64_t v22 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
  uint64_t v24 = *(void *)(v22 + 8);
  if ((v23 & 0x80u) == 0) {
    uint64_t v24 = v23;
  }
  v3 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v7 & 8) == 0)
  {
LABEL_13:
    if ((v7 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_83;
  }
LABEL_80:
  unint64_t v25 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v26 = *(unsigned __int8 *)(v25 + 23);
  uint64_t v27 = *(void *)(v25 + 8);
  if ((v26 & 0x80u) == 0) {
    uint64_t v27 = v26;
  }
  v3 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x10) == 0)
  {
LABEL_14:
    if ((v7 & 0x20) == 0) {
      goto LABEL_15;
    }
LABEL_86:
    unint64_t v31 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v32 = *(unsigned __int8 *)(v31 + 23);
    uint64_t v33 = *(void *)(v31 + 8);
    if ((v32 & 0x80u) == 0) {
      uint64_t v33 = v32;
    }
    v3 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v7 & 0x40) == 0)
    {
LABEL_16:
      if ((v7 & 0x80) == 0) {
        goto LABEL_20;
      }
      goto LABEL_17;
    }
    goto LABEL_89;
  }
LABEL_83:
  unint64_t v28 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v29 = *(unsigned __int8 *)(v28 + 23);
  uint64_t v30 = *(void *)(v28 + 8);
  if ((v29 & 0x80u) == 0) {
    uint64_t v30 = v29;
  }
  v3 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x20) != 0) {
    goto LABEL_86;
  }
LABEL_15:
  if ((v7 & 0x40) == 0) {
    goto LABEL_16;
  }
LABEL_89:
  unint64_t v34 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v35 = *(unsigned __int8 *)(v34 + 23);
  uint64_t v36 = *(void *)(v34 + 8);
  if ((v35 & 0x80u) == 0) {
    uint64_t v36 = v35;
  }
  v3 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v7 & 0x80) != 0)
  {
LABEL_17:
    unint64_t v8 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_20:
  if ((v7 & 0xFF00) == 0) {
    goto LABEL_37;
  }
  if ((v7 & 0x100) != 0)
  {
    unint64_t v11 = *(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
    uint64_t v13 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      uint64_t v13 = v12;
    }
    v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  if ((v7 & 0x200) != 0) {
    v3 += 5;
  }
  if ((v7 & 0x400) != 0) {
    v3 += 5;
  }
  if ((v7 & 0x800) == 0)
  {
    if ((v7 & 0x1000) == 0) {
      goto LABEL_31;
    }
LABEL_94:
    v3 += ((9 * (__clz(*(void *)(a1 + 136) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v7 & 0x2000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_32;
  }
  v3 += ((9 * (__clz(*(void *)(a1 + 128) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v7 & 0x1000) != 0) {
    goto LABEL_94;
  }
LABEL_31:
  if ((v7 & 0x2000) != 0) {
LABEL_32:
  }
    v3 += ((9 * (__clz(*(void *)(a1 + 144) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_33:
  if ((v7 & 0x4000) != 0) {
    v3 += 5;
  }
  if ((v7 & 0x8000) != 0) {
    v3 += 5;
  }
LABEL_37:
  if ((v7 & 0xFF0000) == 0) {
    goto LABEL_52;
  }
  if ((v7 & 0x10000) != 0) {
    v3 += 5;
  }
  if ((v7 & 0x20000) != 0) {
    v3 += 5;
  }
  if ((v7 & 0x40000) != 0) {
    v3 += 5;
  }
  if ((v7 & 0x80000) != 0) {
    v3 += 5;
  }
  if ((v7 & 0x100000) != 0)
  {
    v3 += ((9 * (__clz(*(void *)(a1 + 176) | 1) ^ 0x3F) + 73) >> 6) + 2;
    if ((v7 & 0x200000) == 0)
    {
LABEL_48:
      if ((v7 & 0x400000) == 0) {
        goto LABEL_50;
      }
      goto LABEL_49;
    }
  }
  else if ((v7 & 0x200000) == 0)
  {
    goto LABEL_48;
  }
  v3 += ((9 * (__clz(*(void *)(a1 + 184) | 1) ^ 0x3F) + 73) >> 6) + 2;
  if ((v7 & 0x400000) != 0) {
LABEL_49:
  }
    v3 += ((9 * (__clz(*(void *)(a1 + 192) | 1) ^ 0x3F) + 73) >> 6) + 2;
LABEL_50:
  if ((v7 & 0x800000) != 0) {
    v3 += 6;
  }
LABEL_52:
  if (HIBYTE(v7))
  {
    if ((v7 & 0x1000000) != 0) {
      v3 += 6;
    }
    if ((v7 & 0x2000000) != 0) {
      v3 += 6;
    }
    if ((v7 & 0x4000000) != 0) {
      v3 += 6;
    }
    if ((v7 & 0x8000000) != 0) {
      v3 += ((9 * (__clz(*(void *)(a1 + 216) | 1) ^ 0x3F) + 73) >> 6) + 2;
    }
    if ((v7 & 0x10000000) != 0) {
      v3 += 6;
    }
    if ((v7 & 0x20000000) != 0) {
      v3 += 6;
    }
    if ((v7 & 0x40000000) != 0) {
      v3 += 6;
    }
    if (v7 < 0) {
      v3 += 3;
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v37 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v37 + 31) < 0) {
      uint64_t v38 = *(void *)(v37 + 16);
    }
    else {
      uint64_t v38 = *(unsigned __int8 *)(v37 + 31);
    }
    v3 += v38;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_1693448()
{
  return 1;
}

void *sub_1693450@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.FireEvent");
}

uint64_t sub_1693460(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2543B00)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_11FD260(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1693518(uint64_t a1)
{
  sub_1693460(a1);

  operator delete();
}

uint64_t sub_1693550(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_11FD29C(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_16935AC(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    unint64_t v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void **)(a1 + 24);
    if (!v13)
    {
      uint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v14 = (void *)*v14;
      }
      uint64_t v13 = sub_11FEFE4((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      uint64_t v6 = v16;
    }
    uint64_t v12 = (char *)sub_11FE0DC(a3, (uint64_t)v13, (unsigned __int8 *)v6);
LABEL_20:
    unint64_t v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v16;
    }
    uint64_t v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

unsigned char *sub_1693704(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *uint64_t v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_11FD94C(v6, (unint64_t)v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1693814(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_11FDC58(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_169389C(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    *(_DWORD *)(a1 + 16) |= 1u;
    unint64_t v5 = *(void **)(a1 + 24);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      unsigned int v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        unsigned int v7 = (void *)*v7;
      }
      unint64_t v5 = sub_11FEFE4((uint64_t)v7);
      *(void *)(a1 + 24) = v5;
      uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_252DF80;
    }
    sub_11FDE80((uint64_t)v5, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1693944(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_11FE094(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1693970@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.LiveData.Entity");
}

void *sub_1693980(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_16B3E04(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1693A00(void *a1)
{
  sub_1693980(a1);

  operator delete();
}

uint64_t sub_1693A38(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1693550(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if ((*(unsigned char *)(v1 + 16) & 7) != 0)
  {
    *(void *)(v1 + 48) = 0;
    *(void *)(v1 + 56) = 0;
    *(_DWORD *)(v1 + 64) = 1;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_1693AD0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v36 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v36, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = v36 + 1;
    unsigned int v9 = *v36;
    if (*v36 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v36, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v36 + 2;
      }
    }
    uint64_t v36 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_36;
        }
        uint64_t v12 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          uint64_t v36 = (char *)sub_188C138((uint64_t)v8, (v15 - 128));
          if (!v36) {
            goto LABEL_58;
          }
          unint64_t v13 = v30;
        }
        else
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          uint64_t v36 = v12;
        }
        if (sub_11EBC04(v13))
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 64) = v13;
        }
        else
        {
          if (*v7) {
            uint64_t v35 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v13, v35);
        }
        goto LABEL_43;
      case 2u:
        if (v9 != 16) {
          goto LABEL_36;
        }
        v5 |= 1u;
        unint64_t v16 = v8 + 1;
        uint64_t v17 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v18 = *v16;
        uint64_t v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          unint64_t v31 = (char *)sub_188C138((uint64_t)v8, v17);
          uint64_t v36 = v31;
          *(void *)(a1 + 48) = v32;
          if (!v31) {
            goto LABEL_58;
          }
        }
        else
        {
          unint64_t v16 = v8 + 2;
LABEL_20:
          uint64_t v36 = v16;
          *(void *)(a1 + 48) = v17;
        }
        goto LABEL_43;
      case 3u:
        if (v9 != 24) {
          goto LABEL_36;
        }
        v5 |= 2u;
        unint64_t v19 = v8 + 1;
        uint64_t v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v21 = *v19;
        uint64_t v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v33 = (char *)sub_188C138((uint64_t)v8, v20);
          uint64_t v36 = v33;
          *(void *)(a1 + 56) = v34;
          if (!v33) {
            goto LABEL_58;
          }
        }
        else
        {
          unint64_t v19 = v8 + 2;
LABEL_25:
          uint64_t v36 = v19;
          *(void *)(a1 + 56) = v20;
        }
        goto LABEL_43;
      case 4u:
        if (v9 != 34) {
          goto LABEL_36;
        }
        unint64_t v22 = v8 - 1;
        while (1)
        {
          uint64_t v23 = (unsigned __int8 *)(v22 + 1);
          uint64_t v36 = v22 + 1;
          uint64_t v24 = *(_DWORD **)(a1 + 40);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 32), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 32) = v25 + 1;
            uint64_t v26 = *(void *)&v24[2 * v25 + 2];
          }
          else
          {
            uint64_t v27 = sub_1696068(*(void *)(a1 + 24));
            uint64_t v26 = sub_188CDC8(a1 + 24, (uint64_t)v27);
            uint64_t v23 = (unsigned __int8 *)v36;
          }
          unint64_t v22 = sub_1693E24(a3, v26, v23);
          uint64_t v36 = v22;
          if (!v22) {
            goto LABEL_58;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 34) {
            goto LABEL_43;
          }
        }
      default:
LABEL_36:
        if (v9) {
          BOOL v28 = (v9 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if (*v7)
          {
            uint64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = v36;
          }
          uint64_t v36 = (char *)sub_1885AC0(v9, v29, v8, a3);
          if (!v36) {
            goto LABEL_58;
          }
LABEL_43:
          if (sub_11947B8((uint64_t)a3, &v36, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_58:
        }
          uint64_t v36 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v36;
    }
  }
}

char *sub_1693E24(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16935AC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1693EB4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 64);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 48);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(void *)(a1 + 56);
    *uint64_t v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v16 = *(_DWORD *)(a1 + 32);
  if (v16)
  {
    for (int i = 0; i != v16; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 34;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      v4[1] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, v4 + 1);
      }
      else {
        uint64_t v20 = v4 + 2;
      }
      uint64_t v4 = sub_1693704(v18, (unint64_t)v20, a3);
    }
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return v4;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    uint64_t v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    uint64_t v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(v4, v24, (int)v25);
    v4 += v26;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v24, v25, v4);
}

uint64_t sub_1694170(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1693814(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) == 0) {
    goto LABEL_20;
  }
  if (v8)
  {
    v2 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_20;
      }
      goto LABEL_16;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  v2 += ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0) {
    goto LABEL_20;
  }
LABEL_16:
  int v9 = *(_DWORD *)(a1 + 64);
  if (v9 < 0) {
    uint64_t v10 = 11;
  }
  else {
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v10;
LABEL_20:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_16942B4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_16B4AF8((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          *(_DWORD *)(a1 + 16) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16943CC(uint64_t a1)
{
  return sub_16943D4(a1 + 24);
}

uint64_t sub_16943D4(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if (*(unsigned char *)(v5 + 16))
    {
      uint64_t result = sub_11FE094(*(void *)(v5 + 24));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

void *sub_1694444@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.LiveData");
}

uint64_t sub_1694454(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24CD1B8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  return result;
}

void *sub_16944F0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24CD238;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  result[8] = &qword_2550250;
  result[9] = 0;
  return result;
}

void *sub_1694598(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24CD2B8;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

uint64_t sub_169461C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24CD338;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

void *sub_16946B8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24CD3B8;
  result[2] = 0;
  result[3] = &qword_2550250;
  return result;
}

uint64_t sub_169473C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24CD438;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = 0;
  *(void *)(result + 96) = &qword_2550250;
  *(void *)(result + 104) = &qword_2550250;
  *(void *)(result + 112) = &qword_2550250;
  *(void *)(result + 120) = &qword_2550250;
  *(void *)(result + 128) = &qword_2550250;
  *(void *)(result + 136) = &qword_2550250;
  *(void *)(result + 152) = 0;
  *(void *)(result + 160) = 0;
  *(void *)(result + 144) = 0;
  *(_DWORD *)(result + 168) = 0;
  return result;
}

void *sub_1694808(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24CD4B8;
  result[2] = 0;
  result[3] = 0;
  return result;
}

double sub_1694880(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24CD538;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = 0;
  *(void *)(v2 + 88) = 0;
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = 0;
  *(void *)(v2 + 112) = 0;
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = 0;
  *(void *)(v2 + 136) = 0;
  *(void *)(v2 + 144) = a1;
  *(void *)(v2 + 152) = 0;
  *(void *)(v2 + 160) = 0;
  *(void *)(v2 + 168) = a1;
  *(void *)(v2 + 208) = 0;
  double result = 0.0;
  *(_OWORD *)(v2 + 176) = 0u;
  *(_OWORD *)(v2 + 192) = 0u;
  return result;
}

uint64_t sub_169495C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24CD5B8;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_16949D8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24CD638;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1694A54(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24CD6B8;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1694AD0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24CD738;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_1694B5C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24CD7B8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

void *sub_1694BFC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24CD838;
  result[2] = 0;
  result[3] = 0;
  return result;
}

double sub_1694C74(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24CD8B8;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(void *)(v2 + 80) = 0;
  return result;
}

uint64_t sub_1694CF8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24CD938;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(_DWORD *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = a1;
  *(_DWORD *)(result + 64) = 0;
  *(void *)(result + 72) = 0;
  return result;
}

double sub_1694DB0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24CD9B8;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 48) = 0;
  return result;
}

void *sub_1694E30(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24CDA38;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

void *sub_1694EB4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24CDAB8;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

void *sub_1694F38(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = off_24CDB38;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = &qword_2550250;
  result[10] = &qword_2550250;
  result[12] = 0;
  result[13] = 0;
  result[11] = 0;
  return result;
}

uint64_t sub_1694FF0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24CDBB8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

uint64_t sub_1695094(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24CDC38;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_1695110(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24CDCB8;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = a1;
  result[10] = 0;
  result[11] = 0;
  *(void *)((char *)result + 94) = 0;
  return result;
}

void *sub_16951C0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24CDD38;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_1695238(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24CDDB8;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

double sub_16952B8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24CDE38;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = 0;
  *(void *)(v2 + 88) = 0;
  *(void *)(v2 + 96) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 104) = 0u;
  *(_OWORD *)(v2 + 120) = 0u;
  return result;
}

uint64_t sub_169537C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24CDEB8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(_OWORD *)(result + 64) = 0u;
  *(_OWORD *)(result + 80) = 0u;
  *(_OWORD *)(result + 96) = 0u;
  *(void *)(result + 112) = 0;
  return result;
}

uint64_t sub_1695424(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24CDF38;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_16954C4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24CDFB8;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = 0;
  return result;
}

double sub_1695568(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24CE038;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  *(void *)(v2 + 32) = &qword_2550250;
  *(void *)(v2 + 40) = &qword_2550250;
  *(void *)(v2 + 48) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_DWORD *)(v2 + 88) = 0;
  return result;
}

void *sub_1695600(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = off_24CE0B8;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = 0;
  return result;
}

uint64_t sub_16956A4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24CE138;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_169572C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24CE1B8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_16957CC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24CE238;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(void *)(result + 56) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

double sub_1695874(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  return sub_16870B4(v2, a1, 0);
}

uint64_t sub_16958D4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24CE338;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = a1;
  *(void *)(result + 72) = a1;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = 0;
  *(void *)(result + 96) = &qword_2550250;
  *(void *)(result + 104) = 0;
  *(void *)(result + 112) = 0;
  *(void *)(result + 120) = 0;
  *(unsigned char *)(result + 128) = 0;
  return result;
}

void *sub_16959A0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24CE3B8;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = &qword_2550250;
  result[10] = &qword_2550250;
  return result;
}

double sub_1695A50(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24CE438;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 48) = 0;
  return result;
}

uint64_t sub_1695AD0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24CE4B8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 72) = 0;
  *(void *)(result + 80) = 0;
  *(void *)(result + 64) = a1;
  *(_DWORD *)(result + 88) = 0;
  return result;
}

double sub_1695B80(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24CE538;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = 0;
  *(void *)(v2 + 88) = 0;
  *(void *)(v2 + 96) = &qword_2550250;
  *(void *)(v2 + 104) = &qword_2550250;
  *(void *)(v2 + 112) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_OWORD *)(v2 + 136) = 0u;
  *(_DWORD *)(v2 + 152) = 0;
  return result;
}

void *sub_1695C4C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24CE5B8;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_1695CC8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24CE638;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

void *sub_1695D70(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24CE6B8;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_1695DE8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24CE738;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  return result;
}

uint64_t sub_1695E84(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24CE7B8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_1695F24(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24CE838;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

double sub_1695FC0(uint64_t a1)
{
  if (!a1)
  {
    sub_16B4B84();
  }
  *(void *)uint64_t v3 = off_24CE8B8;
  *(void *)(v3 + 8) = a1;
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = a1;
  *(void *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = &qword_2550250;
  *(void *)(v3 + 56) = &qword_2550250;
  *(void *)(v3 + 64) = &qword_2550250;
  *(void *)(v3 + 72) = &qword_2550250;
  *(void *)(v3 + 80) = &qword_2550250;
  *(void *)(v3 + 88) = &qword_2550250;
  *(void *)(v3 + 96) = &qword_2550250;
  *(void *)(v3 + 104) = &qword_2550250;
  *(void *)(v3 + 112) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v3 + 120) = 0u;
  *(_OWORD *)(v3 + 136) = 0u;
  *(_OWORD *)(v3 + 152) = 0u;
  *(_OWORD *)(v3 + 168) = 0u;
  *(_OWORD *)(v3 + 184) = 0u;
  *(_OWORD *)(v3 + 200) = 0u;
  *(_OWORD *)(v3 + 216) = 0u;
  *(void *)(v3 + 229) = 0;
  return result;
}

void *sub_1696068(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24CE938;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_16960E0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24CE9B8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(_DWORD *)(result + 64) = 1;
  return result;
}

void *sub_1696184(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16961F8(void *a1)
{
  sub_1696184(a1);

  operator delete();
}

uint64_t sub_1696230(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1696254(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    unint64_t v15 = v8 + 1;
    int v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    int v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      unint64_t v15 = v8 + 2;
LABEL_25:
      uint64_t v25 = v15;
      *(_DWORD *)(a1 + 28) = v16;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C0D0((uint64_t)v8, v16);
    uint64_t v25 = v21;
    *(_DWORD *)(a1 + 28) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v18 = v8 + 1;
    int v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      uint64_t v25 = v18;
      *(_DWORD *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    unint64_t v23 = (char *)sub_188C0D0((uint64_t)v8, v19);
    uint64_t v25 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_1696444(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    *int v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_16965E8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_8;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_169668C()
{
  return 1;
}

void *sub_1696694@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.ProbeCountRate");
}

uint64_t sub_16966A4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2543B40)
  {
    uint64_t v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_1696184(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_169675C(uint64_t a1)
{
  sub_16966A4(a1);

  operator delete();
}

uint64_t sub_1696794(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_1696230(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 24) = 0;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_16967F4(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v23 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = v23 + 1;
    unsigned int v9 = *v23;
    if (*v23 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v23, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v23 + 2;
      }
    }
    unint64_t v23 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    v5 |= 2u;
    int v19 = v8 + 1;
    LODWORD(v18) = *v8;
    if ((v18 & 0x80) == 0) {
      goto LABEL_31;
    }
    int v20 = *v19;
    uint64_t v18 = v18 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      int v19 = v8 + 2;
LABEL_31:
      unint64_t v23 = v19;
      *(_DWORD *)(a1 + 32) = v18;
      goto LABEL_32;
    }
    uint64_t v21 = (char *)sub_188C138((uint64_t)v8, v18);
    unint64_t v23 = v21;
    *(_DWORD *)(a1 + 32) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    int v16 = *(void **)(a1 + 24);
    if (!v16)
    {
      uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v17 = (void *)*v17;
      }
      int v16 = sub_169729C((uint64_t)v17);
      *(void *)(a1 + 24) = v16;
      unsigned int v8 = v23;
    }
    unint64_t v15 = sub_16969D4(a3, (uint64_t)v16, (unsigned __int8 *)v8);
LABEL_26:
    unint64_t v23 = v15;
    if (!v15) {
      goto LABEL_39;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v8 = v23;
    }
    unint64_t v15 = (char *)sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_26;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  unint64_t v23 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v23;
}

char *sub_16969D4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1696254(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1696A64(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    *int v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unsigned int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unsigned int v12 = v4 + 2;
    }
    int v4 = sub_1696444(v10, (unint64_t)v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1696BF0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_16965E8(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_11:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_1696CC0(std::string *result, uint64_t a2)
{
  char v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v7 = (void *)*v7;
        }
        std::string::pointer data = (std::string *)sub_169729C((uint64_t)v7);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v8 = &off_2543B20;
      }
      uint64_t result = sub_117EF04(data, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1696D90()
{
  return 1;
}

void *sub_1696D98@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.ClosureProbeCountsStats.FowRate");
}

void *sub_1696DA8(void *a1)
{
  char v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_16B4C10(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1696E28(void *a1)
{
  sub_1696DA8(a1);

  operator delete();
}

char *sub_1696E60(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    int v5 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          uint64_t v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          uint64_t v6 = v19 + 2;
        }
      }
      int v19 = v6;
      if (v7 == 10)
      {
        unsigned int v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          int v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_1697314(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          unsigned int v12 = sub_1697000(a3, v16, v13);
          int v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        unsigned int v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unsigned int v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v6 = v19;
      }
      int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_1697000(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16967F4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1697090(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_1696A64(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_16971D4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    int v4 = (uint64_t *)(v3 + 8);
  }
  else {
    int v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1696BF0(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

uint64_t sub_1697284()
{
  return 1;
}

void *sub_169728C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.ClosureProbeCountsStats");
}

void *sub_169729C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24CEA38;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_1697314(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24CEAB8;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1697390(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24CEB38;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1697430(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16974D0(uint64_t a1)
{
  sub_1697430(a1);

  operator delete();
}

uint64_t sub_1697508(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 0xE) != 0)
  {
    *(_DWORD *)(a1 + 40) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v4) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_169755C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v26 + 1);
    unsigned int v9 = **(unsigned char **)v26;
    if ((char)**(unsigned char **)v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v26 + 2);
      }
    }
    *(void *)uint64_t v26 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_23;
        }
        v5 |= 2u;
        unint64_t v13 = v8 + 1;
        LODWORD(v12) = *v8;
        if ((v12 & 0x80) == 0) {
          goto LABEL_13;
        }
        int v14 = *v13;
        uint64_t v12 = v12 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v13 = v8 + 2;
LABEL_13:
          *(void *)uint64_t v26 = v13;
          *(_DWORD *)(a1 + 32) = v12;
          goto LABEL_31;
        }
        uint64_t v24 = sub_188C138((uint64_t)v8, v12);
        *(void *)uint64_t v26 = v24;
        *(_DWORD *)(a1 + 32) = v25;
        if (v24) {
          goto LABEL_31;
        }
        goto LABEL_38;
      case 2u:
        if (v9 != 21) {
          goto LABEL_23;
        }
        int v16 = *(_DWORD *)v8;
        uint64_t v15 = v8 + 4;
        v5 |= 4u;
        *(_DWORD *)(a1 + 36) = v16;
        goto LABEL_18;
      case 3u:
        if (v9 != 29) {
          goto LABEL_23;
        }
        int v17 = *(_DWORD *)v8;
        uint64_t v15 = v8 + 4;
        v5 |= 8u;
        *(_DWORD *)(a1 + 40) = v17;
LABEL_18:
        *(void *)uint64_t v26 = v15;
        goto LABEL_31;
      case 4u:
        if (v9 != 34) {
          goto LABEL_23;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v18 = *(void *)(a1 + 8);
        int v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          int v19 = (uint64_t *)*v19;
        }
        int v20 = (std::string *)sub_1880F84((void *)(a1 + 24), v19);
        uint64_t v21 = (void *)sub_188C244(v20, *(char **)v26, (uint64_t)a3);
        goto LABEL_30;
      default:
LABEL_23:
        if (v9) {
          BOOL v22 = (v9 & 7) == 4;
        }
        else {
          BOOL v22 = 1;
        }
        if (!v22)
        {
          if (*v7)
          {
            unint64_t v23 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v26;
          }
          uint64_t v21 = sub_1885AC0(v9, v23, v8, a3);
LABEL_30:
          *(void *)uint64_t v26 = v21;
          if (!v21) {
            goto LABEL_38;
          }
LABEL_31:
          if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_38:
        }
          *(void *)uint64_t v26 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v26;
    }
  }
}

unsigned char *sub_16977A0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v12 = *(_DWORD *)(a1 + 36);
    *char v4 = 21;
    *(_DWORD *)(v4 + 1) = v12;
    v4 += 5;
    if ((v6 & 8) == 0)
    {
LABEL_10:
      if ((v6 & 1) == 0) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v13 = *(_DWORD *)(a1 + 40);
  *char v4 = 29;
  *(_DWORD *)(v4 + 1) = v13;
  v4 += 5;
  if (v6) {
LABEL_11:
  }
    char v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_12:
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    v4 += v17;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_1697964(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_18;
  }
  if (v1)
  {
    unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    int v7 = *(_DWORD *)(a1 + 32);
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v8;
  }
LABEL_13:
  if ((v1 & 4) != 0) {
    v2 += 5;
  }
  if ((v1 & 8) != 0) {
    uint64_t v3 = v2 + 5;
  }
  else {
    uint64_t v3 = v2;
  }
LABEL_18:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v3 += v12;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_1697A48(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      int v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_16;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
      goto LABEL_7;
    }
LABEL_16:
    HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1697B28()
{
  return 1;
}

void *sub_1697B30@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetection.Segment.ModelTrigger.CountArtifactInfo");
}

void *sub_1697B40(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1697BB4(void *a1)
{
  sub_1697B40(a1);

  operator delete();
}

uint64_t sub_1697BEC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0xF) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1697C10(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v34 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v34 + 1;
    unsigned int v9 = *v34;
    if (*v34 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v34, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v34 + 2;
      }
    }
    uint64_t v34 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_29;
        }
        v5 |= 1u;
        int v13 = v8 + 1;
        LODWORD(v12) = *v8;
        if ((v12 & 0x80) == 0) {
          goto LABEL_13;
        }
        int v14 = *v13;
        uint64_t v12 = v12 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          int v13 = v8 + 2;
LABEL_13:
          uint64_t v34 = v13;
          *(_DWORD *)(a1 + 24) = v12;
          goto LABEL_36;
        }
        uint64_t v26 = (char *)sub_188C138((uint64_t)v8, v12);
        uint64_t v34 = v26;
        *(_DWORD *)(a1 + 24) = v27;
        if (v26) {
          goto LABEL_36;
        }
        goto LABEL_49;
      case 2u:
        if (v9 != 16) {
          goto LABEL_29;
        }
        v5 |= 2u;
        uint64_t v16 = v8 + 1;
        LODWORD(v15) = *v8;
        if ((v15 & 0x80) == 0) {
          goto LABEL_18;
        }
        int v17 = *v16;
        uint64_t v15 = v15 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          BOOL v28 = (char *)sub_188C138((uint64_t)v8, v15);
          uint64_t v34 = v28;
          *(_DWORD *)(a1 + 28) = v29;
          if (!v28) {
            goto LABEL_49;
          }
        }
        else
        {
          uint64_t v16 = v8 + 2;
LABEL_18:
          uint64_t v34 = v16;
          *(_DWORD *)(a1 + 28) = v15;
        }
        goto LABEL_36;
      case 3u:
        if (v9 != 24) {
          goto LABEL_29;
        }
        v5 |= 4u;
        int v19 = v8 + 1;
        LODWORD(v18) = *v8;
        if ((v18 & 0x80) == 0) {
          goto LABEL_23;
        }
        int v20 = *v19;
        uint64_t v18 = v18 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          unint64_t v30 = (char *)sub_188C138((uint64_t)v8, v18);
          uint64_t v34 = v30;
          *(_DWORD *)(a1 + 32) = v31;
          if (!v30) {
            goto LABEL_49;
          }
        }
        else
        {
          int v19 = v8 + 2;
LABEL_23:
          uint64_t v34 = v19;
          *(_DWORD *)(a1 + 32) = v18;
        }
        goto LABEL_36;
      case 4u:
        if (v9 != 32) {
          goto LABEL_29;
        }
        v5 |= 8u;
        BOOL v22 = v8 + 1;
        LODWORD(v21) = *v8;
        if ((v21 & 0x80) == 0) {
          goto LABEL_28;
        }
        int v23 = *v22;
        uint64_t v21 = v21 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v32 = (char *)sub_188C138((uint64_t)v8, v21);
          uint64_t v34 = v32;
          *(_DWORD *)(a1 + 36) = v33;
          if (!v32) {
            goto LABEL_49;
          }
        }
        else
        {
          BOOL v22 = v8 + 2;
LABEL_28:
          uint64_t v34 = v22;
          *(_DWORD *)(a1 + 36) = v21;
        }
        goto LABEL_36;
      default:
LABEL_29:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            int v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v34;
          }
          uint64_t v34 = (char *)sub_1885AC0(v9, v25, v8, a3);
          if (!v34) {
            goto LABEL_49;
          }
LABEL_36:
          if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_49:
        }
          uint64_t v34 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v34;
    }
  }
}

unsigned char *sub_1697ED8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 28);
    *int v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 32);
    *int v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 36);
    *int v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    BOOL v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    BOOL v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_1698174(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_25;
  }
  if (v1)
  {
    int v3 = *(_DWORD *)(a1 + 24);
    if (v3 < 0)
    {
      uint64_t v2 = 11;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v4 = *(_DWORD *)(a1 + 28);
  if (v4 < 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v5;
LABEL_14:
  if ((v1 & 4) == 0)
  {
    if ((v1 & 8) == 0) {
      goto LABEL_25;
    }
    goto LABEL_21;
  }
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6 < 0) {
    uint64_t v7 = 11;
  }
  else {
    uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v7;
  if ((v1 & 8) != 0)
  {
LABEL_21:
    int v8 = *(_DWORD *)(a1 + 36);
    if (v8 < 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v9;
  }
LABEL_25:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v2 += v13;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_16982A4()
{
  return 1;
}

void *sub_16982AC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetection.Segment.ModelTrigger.PoissonTrigger");
}

uint64_t sub_16982BC(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2543BF0)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_16AE3CC(v5);
      operator delete();
    }
    if (*(void *)(a1 + 32))
    {
      sub_1698FD0();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_169838C(uint64_t a1)
{
  sub_16982BC(a1);

  operator delete();
}

uint64_t sub_16983C4(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_1698434(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_169852C(*(void *)(v1 + 32));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_1698434(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 7) == 0) {
    goto LABEL_16;
  }
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_10:
    unint64_t v5 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v3 & 4) == 0) {
        goto LABEL_16;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v3 & 4) == 0) {
        goto LABEL_16;
      }
    }
    goto LABEL_14;
  }
  unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v4 + 23) < 0)
  {
    **(unsigned char **)unint64_t v4 = 0;
    *(void *)(v4 + 8) = 0;
    if ((v3 & 2) != 0) {
      goto LABEL_10;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v4 = 0;
    *(unsigned char *)(v4 + 23) = 0;
    if ((v3 & 2) != 0) {
      goto LABEL_10;
    }
  }
LABEL_4:
  if ((v3 & 4) == 0) {
    goto LABEL_16;
  }
LABEL_14:
  uint64_t v6 = *(void *)(a1 + 64);
  char v7 = *(unsigned char *)(v6 + 8);
  uint64_t result = v6 + 8;
  *(unsigned char *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v7) {
    uint64_t result = sub_188B4AC((uint64_t *)result);
  }
LABEL_16:
  if ((v3 & 0x78) != 0)
  {
    *(void *)(a1 + 72) = 0;
    *(void *)(a1 + 80) = 0;
    *(void *)(a1 + 88) = 0;
  }
  char v9 = *(unsigned char *)(a1 + 8);
  uint64_t v8 = a1 + 8;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

uint64_t sub_169852C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_16;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v5 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_16;
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v5 = 0;
  *(void *)(v5 + 8) = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_16:
  unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v6 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
LABEL_5:
    uint64_t result = sub_16983C4(*(void *)(result + 40));
    goto LABEL_6;
  }
  **(unsigned char **)unint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  if ((v2 & 4) != 0) {
    goto LABEL_5;
  }
LABEL_6:
  if ((v2 & 0xF8) != 0)
  {
    *(void *)(v1 + 48) = 0;
    *(void *)(v1 + 56) = 0;
    *(_DWORD *)(v1 + 64) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_169860C(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v20 = a2;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    return v20;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = v20 + 1;
    unsigned int v8 = *v20;
    if (*v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180((uint64_t)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = v20 + 2;
      }
    }
    int v20 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 32);
    if (!v15)
    {
      unint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unint64_t v16 = (void *)*v16;
      }
      uint64_t v15 = sub_16AF0DC((uint64_t)v16);
      *(void *)(a1 + 32) = v15;
    }
    unint64_t v14 = (char *)sub_169885C(a3, v15);
LABEL_31:
    int v20 = v14;
    if (!v14) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      return v20;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void *)(a1 + 24);
    if (!v17)
    {
      unint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unint64_t v18 = (void *)*v18;
      }
      sub_16B048C((uint64_t)v18);
      uint64_t v17 = v19;
      *(void *)(a1 + 24) = v19;
      char v7 = v20;
    }
    unint64_t v14 = (char *)sub_16987CC(a3, v17, (unsigned __int8 *)v7);
    goto LABEL_31;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v7 = v20;
    }
    unint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_31;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v20;
  }
  return 0;
}

uint64_t sub_16987CC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16AE4F4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_169885C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16990F0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16988EC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_16AE9A4(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    *char v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      BOOL v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      BOOL v12 = v4 + 2;
    }
    char v4 = (char *)sub_1699588(v10, v12, (int)a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1698A6C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_16AED2C(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_1699950(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v3 += v9;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_1698B44(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v7 = (void *)*v7;
        }
        sub_16B048C((uint64_t)v7);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v8 = &off_25443E8;
      }
      uint64_t result = sub_1698C48(data, (uint64_t)v8);
    }
    if ((v4 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      if (!v3[1].__r_.__value_.__l.__size_)
      {
        std::string::size_type v9 = v3->__r_.__value_.__l.__size_;
        uint64_t v10 = (void *)(v9 & 0xFFFFFFFFFFFFFFFCLL);
        if (v9) {
          uint64_t v10 = (void *)*v10;
        }
        v3[1].__r_.__value_.__l.__size_ = sub_16AF0DC((uint64_t)v10);
      }
      uint64_t result = (std::string *)sub_1698E30();
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_1698C48(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    unint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *unint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0x7F) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_24;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    unint64_t v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
    unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      unint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_32;
    }
LABEL_24:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    uint64_t v17 = (std::string *)v3[2].__r_.__value_.__r.__words[2];
    if (!v17)
    {
      std::string::size_type v18 = v3->__r_.__value_.__l.__size_;
      uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v19 = (void *)*v19;
      }
      uint64_t v17 = (std::string *)sub_16B0410((uint64_t)v19);
      v3[2].__r_.__value_.__r.__words[2] = (std::string::size_type)v17;
    }
    if (*(void *)(a2 + 64)) {
      int v20 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      int v20 = &off_25443C8;
    }
    uint64_t result = sub_13221BC(v17, (uint64_t)v20);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_33;
    }
LABEL_32:
    v3[3].__r_.__value_.__r.__words[0] = *(void *)(a2 + 72);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0) {
        goto LABEL_11;
      }
      goto LABEL_34;
    }
LABEL_33:
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 80);
    if ((v9 & 0x20) == 0)
    {
LABEL_11:
      if ((v9 & 0x40) == 0)
      {
LABEL_13:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
        goto LABEL_14;
      }
LABEL_12:
      v3[3].__r_.__value_.__r.__words[2] = *(void *)(a2 + 88);
      goto LABEL_13;
    }
LABEL_34:
    HIDWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 84);
    if ((v9 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_14:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_1698E30(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      int v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      int v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        int v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_22;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    BOOL v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      BOOL v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_30;
    }
LABEL_22:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    uint64_t v13 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
    if (!v13)
    {
      std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
      std::string::size_type v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        std::string::size_type v15 = (void *)*v15;
      }
      uint64_t v13 = (std::string *)sub_16AF060((uint64_t)v15);
      v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v13;
    }
    if (*(void *)(a2 + 40)) {
      unint64_t v16 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      unint64_t v16 = &off_2543BF0;
    }
    uint64_t result = sub_1698B44(v13, (uint64_t)v16);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_31;
    }
LABEL_30:
    LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_32;
    }
LABEL_31:
    HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_33;
    }
LABEL_32:
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      LODWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
      goto LABEL_11;
    }
LABEL_33:
    HIDWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 60);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1698FB8()
{
  return 1;
}

void *sub_1698FC0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetection.Segment.ModelTrigger.HistoricalTrigger.RegionalAdaptation");
}

uint64_t sub_1698FD0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if ((uint64_t (***)(void))a1 != &off_2543C18)
  {
    uint64_t v6 = *(void *)(a1 + 40);
    if (v6)
    {
      sub_16982BC(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16990B8(uint64_t a1)
{
  sub_1698FD0(a1);

  operator delete();
}

uint64_t sub_16990F0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v47 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v47, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (unsigned __int8 *)(*(void *)v47 + 1);
    unsigned int v9 = **(unsigned char **)v47;
    if ((char)**(unsigned char **)v47 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v47, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (unsigned __int8 *)(*(void *)v47 + 2);
      }
    }
    *(void *)int v47 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_49;
        }
        v5 |= 8u;
        uint64_t v13 = (char *)(v8 + 1);
        LODWORD(v12) = *v8;
        if ((v12 & 0x80) == 0) {
          goto LABEL_13;
        }
        int v14 = *v13;
        uint64_t v12 = v12 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v13 = (char *)(v8 + 2);
LABEL_13:
          *(void *)int v47 = v13;
          *(_DWORD *)(a1 + 48) = v12;
          goto LABEL_57;
        }
        uint64_t v37 = sub_188C138((uint64_t)v8, v12);
        *(void *)int v47 = v37;
        *(_DWORD *)(a1 + 48) = v38;
        if (v37) {
          goto LABEL_57;
        }
        goto LABEL_72;
      case 2u:
        if (v9 != 16) {
          goto LABEL_49;
        }
        v5 |= 0x10u;
        unint64_t v16 = (char *)(v8 + 1);
        LODWORD(v15) = *v8;
        if ((v15 & 0x80) == 0) {
          goto LABEL_18;
        }
        int v17 = *v16;
        uint64_t v15 = v15 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v39 = sub_188C138((uint64_t)v8, v15);
          *(void *)int v47 = v39;
          *(_DWORD *)(a1 + 52) = v40;
          if (!v39) {
            goto LABEL_72;
          }
        }
        else
        {
          unint64_t v16 = (char *)(v8 + 2);
LABEL_18:
          *(void *)int v47 = v16;
          *(_DWORD *)(a1 + 52) = v15;
        }
        goto LABEL_57;
      case 3u:
        if (v9 != 24) {
          goto LABEL_49;
        }
        v5 |= 0x20u;
        uint64_t v19 = (char *)(v8 + 1);
        LODWORD(v18) = *v8;
        if ((v18 & 0x80) == 0) {
          goto LABEL_23;
        }
        int v20 = *v19;
        uint64_t v18 = v18 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v41 = sub_188C138((uint64_t)v8, v18);
          *(void *)int v47 = v41;
          *(_DWORD *)(a1 + 56) = v42;
          if (!v41) {
            goto LABEL_72;
          }
        }
        else
        {
          uint64_t v19 = (char *)(v8 + 2);
LABEL_23:
          *(void *)int v47 = v19;
          *(_DWORD *)(a1 + 56) = v18;
        }
        goto LABEL_57;
      case 4u:
        if (v9 != 32) {
          goto LABEL_49;
        }
        v5 |= 0x40u;
        BOOL v22 = (char *)(v8 + 1);
        LODWORD(v21) = *v8;
        if ((v21 & 0x80) == 0) {
          goto LABEL_28;
        }
        int v23 = *v22;
        uint64_t v21 = v21 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v43 = sub_188C138((uint64_t)v8, v21);
          *(void *)int v47 = v43;
          *(_DWORD *)(a1 + 60) = v44;
          if (!v43) {
            goto LABEL_72;
          }
        }
        else
        {
          BOOL v22 = (char *)(v8 + 2);
LABEL_28:
          *(void *)int v47 = v22;
          *(_DWORD *)(a1 + 60) = v21;
        }
        goto LABEL_57;
      case 5u:
        if (v9 != 42) {
          goto LABEL_49;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v24 = *(void *)(a1 + 8);
        int v25 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
        if (v24) {
          int v25 = (uint64_t *)*v25;
        }
        uint64_t v26 = (void *)(a1 + 24);
        goto LABEL_48;
      case 6u:
        if (v9 != 48) {
          goto LABEL_49;
        }
        v5 |= 0x80u;
        BOOL v28 = (char *)(v8 + 1);
        LODWORD(v27) = *v8;
        if ((v27 & 0x80) == 0) {
          goto LABEL_37;
        }
        int v29 = *v28;
        uint64_t v27 = v27 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          uint64_t v45 = sub_188C138((uint64_t)v8, v27);
          *(void *)int v47 = v45;
          *(_DWORD *)(a1 + 64) = v46;
          if (!v45) {
            goto LABEL_72;
          }
        }
        else
        {
          BOOL v28 = (char *)(v8 + 2);
LABEL_37:
          *(void *)int v47 = v28;
          *(_DWORD *)(a1 + 64) = v27;
        }
        goto LABEL_57;
      case 7u:
        if (v9 != 58) {
          goto LABEL_49;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        unint64_t v30 = *(void **)(a1 + 40);
        if (!v30)
        {
          int v31 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v31 = (void *)*v31;
          }
          unint64_t v30 = sub_16AF060((uint64_t)v31);
          *(void *)(a1 + 40) = v30;
          unint64_t v8 = *(unsigned __int8 **)v47;
        }
        uint64_t v32 = sub_16994F8(a3, (uint64_t)v30, v8);
        goto LABEL_56;
      case 8u:
        if (v9 != 66) {
          goto LABEL_49;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v33 = *(void *)(a1 + 8);
        int v25 = (uint64_t *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
        if (v33) {
          int v25 = (uint64_t *)*v25;
        }
        uint64_t v26 = (void *)(a1 + 32);
LABEL_48:
        uint64_t v34 = (std::string *)sub_1880F84(v26, v25);
        uint64_t v32 = (void *)sub_188C244(v34, *(char **)v47, (uint64_t)a3);
        goto LABEL_56;
      default:
LABEL_49:
        if (v9) {
          BOOL v35 = (v9 & 7) == 4;
        }
        else {
          BOOL v35 = 1;
        }
        if (!v35)
        {
          if (*v7)
          {
            uint64_t v36 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(unsigned __int8 **)v47;
          }
          uint64_t v32 = sub_1885AC0(v9, v36, (char *)v8, a3);
LABEL_56:
          *(void *)int v47 = v32;
          if (!v32) {
            goto LABEL_72;
          }
LABEL_57:
          if (sub_11947B8((uint64_t)a3, (char **)v47, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_72:
        }
          *(void *)int v47 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v47;
    }
  }
}

char *sub_16994F8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_169860C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1699588(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 48);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 52);
    *int v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 56);
    *int v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 60);
    *int v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    int v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(int *)(a1 + 64);
    *int v4 = 48;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v22 = *(void *)(a1 + 40);
    *int v4 = 58;
    unsigned int v23 = *(_DWORD *)(v22 + 20);
    v4[1] = v23;
    if (v23 > 0x7F) {
      uint64_t v24 = sub_188A9CC(v23, v4 + 1);
    }
    else {
      uint64_t v24 = v4 + 2;
    }
    int v4 = sub_16988EC(v22, (unint64_t)v24, a3);
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 8, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v25 = *(void *)(a1 + 8);
  if ((v25 & 1) == 0) {
    return v4;
  }
  unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v27 + 31) < 0)
  {
    BOOL v28 = *(void **)(v27 + 8);
    uint64_t v29 = *(void *)(v27 + 16);
  }
  else
  {
    BOOL v28 = (void *)(v27 + 8);
    LODWORD(v29) = *(unsigned __int8 *)(v27 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v29)
  {
    uint64_t v30 = (int)v29;
    memcpy(v4, v28, (int)v29);
    v4 += v30;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v28, v29, v4);
}

uint64_t sub_1699950(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 16);
  if (!v2)
  {
    uint64_t v3 = 0;
    goto LABEL_40;
  }
  if ((*(unsigned char *)(a1 + 16) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((*(unsigned char *)(a1 + 16) & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((*(unsigned char *)(a1 + 16) & 4) != 0)
  {
    uint64_t v10 = sub_1698A6C(*(void *)(a1 + 40));
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_24;
    }
  }
  else if ((*(unsigned char *)(a1 + 16) & 8) == 0)
  {
    goto LABEL_14;
  }
  int v11 = *(_DWORD *)(a1 + 48);
  if (v11 < 0) {
    uint64_t v12 = 11;
  }
  else {
    uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v12;
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_28;
  }
LABEL_24:
  int v13 = *(_DWORD *)(a1 + 52);
  if (v13 < 0) {
    uint64_t v14 = 11;
  }
  else {
    uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v14;
  if ((v2 & 0x20) == 0)
  {
LABEL_16:
    if ((v2 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_32;
  }
LABEL_28:
  int v15 = *(_DWORD *)(a1 + 56);
  if (v15 < 0) {
    uint64_t v16 = 11;
  }
  else {
    uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v16;
  if ((v2 & 0x40) == 0)
  {
LABEL_17:
    if ((v2 & 0x80) == 0) {
      goto LABEL_40;
    }
    goto LABEL_36;
  }
LABEL_32:
  int v17 = *(_DWORD *)(a1 + 60);
  if (v17 < 0) {
    uint64_t v18 = 11;
  }
  else {
    uint64_t v18 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v18;
  if (v2 < 0)
  {
LABEL_36:
    int v19 = *(_DWORD *)(a1 + 64);
    if (v19 < 0) {
      uint64_t v20 = 11;
    }
    else {
      uint64_t v20 = ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v20;
  }
LABEL_40:
  uint64_t v21 = *(void *)(a1 + 8);
  if (v21)
  {
    unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v23 + 31) < 0) {
      uint64_t v24 = *(void *)(v23 + 16);
    }
    else {
      uint64_t v24 = *(unsigned __int8 *)(v23 + 31);
    }
    v3 += v24;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_1699B98()
{
  return 1;
}

void *sub_1699BA0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetection.Segment.ModelTrigger.HistoricalTrigger");
}

uint64_t sub_1699BB0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2543C60)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_1697430(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_1697430(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1699C80(uint64_t a1)
{
  sub_1699BB0(a1);

  operator delete();
}

uint64_t sub_1699CB8(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_1697508(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_1697508(*(void *)(v1 + 32));
    }
  }
  if ((v2 & 0xC) != 0) {
    *(void *)(v1 + 40) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_1699D34(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v21 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v21, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v21 + 1;
    unsigned int v9 = *v21;
    if (*v21 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v21, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v21 + 2;
      }
    }
    uint64_t v21 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_26;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (v12) {
          goto LABEL_20;
        }
        int v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          int v13 = (void *)*v13;
        }
        uint64_t v12 = sub_16AEF5C((uint64_t)v13);
        *(void *)(a1 + 24) = v12;
        goto LABEL_19;
      case 2u:
        if (v9 != 18) {
          goto LABEL_26;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v12 = *(void *)(a1 + 32);
        if (!v12)
        {
          uint64_t v14 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v14 = (void *)*v14;
          }
          uint64_t v12 = sub_16AEF5C((uint64_t)v14);
          *(void *)(a1 + 32) = v12;
LABEL_19:
          uint64_t v8 = v21;
        }
LABEL_20:
        int v15 = (char *)sub_1699F6C(a3, v12, (unsigned __int8 *)v8);
        goto LABEL_33;
      case 3u:
        if (v9 != 29) {
          goto LABEL_26;
        }
        int v17 = *(_DWORD *)v8;
        uint64_t v16 = v8 + 4;
        v5 |= 4u;
        *(_DWORD *)(a1 + 40) = v17;
        goto LABEL_25;
      case 4u:
        if (v9 != 37) {
          goto LABEL_26;
        }
        int v18 = *(_DWORD *)v8;
        uint64_t v16 = v8 + 4;
        v5 |= 8u;
        *(_DWORD *)(a1 + 44) = v18;
LABEL_25:
        uint64_t v21 = v16;
        goto LABEL_34;
      default:
LABEL_26:
        if (v9) {
          BOOL v19 = (v9 & 7) == 4;
        }
        else {
          BOOL v19 = 1;
        }
        if (!v19)
        {
          if (*v7)
          {
            uint64_t v20 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v20 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v21;
          }
          int v15 = (char *)sub_1885AC0(v9, v20, v8, a3);
LABEL_33:
          uint64_t v21 = v15;
          if (!v15) {
            goto LABEL_39;
          }
LABEL_34:
          if (sub_11947B8((uint64_t)a3, &v21, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_39:
        }
          uint64_t v21 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v21;
    }
  }
}

uint64_t sub_1699F6C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_169755C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1699FFC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_16977A0(v7, (unint64_t)v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  *char v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  char v4 = sub_16977A0(v10, (unint64_t)v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_24;
    }
    goto LABEL_21;
  }
LABEL_18:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v13 = *(_DWORD *)(a1 + 40);
  *char v4 = 29;
  *(_DWORD *)(v4 + 1) = v13;
  v4 += 5;
  if ((v6 & 8) != 0)
  {
LABEL_21:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v14 = *(_DWORD *)(a1 + 44);
    *char v4 = 37;
    *(_DWORD *)(v4 + 1) = v14;
    v4 += 5;
  }
LABEL_24:
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    int v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    int v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_169A1FC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t result = 0;
    goto LABEL_13;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v5 = sub_1697964(*(void *)(a1 + 24));
  uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v6 = sub_1697964(*(void *)(a1 + 32));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v7 = v3 + 5;
  if ((v2 & 4) == 0) {
    uint64_t v7 = v3;
  }
  if ((v2 & 8) != 0) {
    uint64_t result = v7 + 5;
  }
  else {
    uint64_t result = v7;
  }
LABEL_13:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    result += v10;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_169A2E8(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v8 = (void *)*v8;
        }
        std::string::pointer data = (std::string *)sub_16AEF5C((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v9 = &off_2543B98;
      }
      uint64_t result = sub_1697A48(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_28;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_16AEF5C((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      int v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      int v13 = &off_2543B98;
    }
    uint64_t result = sub_1697A48(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
      goto LABEL_7;
    }
LABEL_28:
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_169A418()
{
  return 1;
}

void *sub_169A420@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetection.Segment.ModelTrigger.OneyTrigger");
}

void *sub_169A430(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_169A4A4(void *a1)
{
  sub_169A430(a1);

  operator delete();
}

uint64_t sub_169A4DC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_169A500(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v16 = v8 + 1;
    LODWORD(v15) = *v8;
    if ((v15 & 0x80) == 0) {
      goto LABEL_25;
    }
    int v17 = *v16;
    uint64_t v15 = v15 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v16 = v8 + 2;
LABEL_25:
      uint64_t v25 = v16;
      *(_DWORD *)(a1 + 28) = v15;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C138((uint64_t)v8, v15);
    uint64_t v25 = v21;
    *(_DWORD *)(a1 + 28) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v19 = v8 + 1;
    LODWORD(v18) = *v8;
    if ((v18 & 0x80) == 0) {
      goto LABEL_29;
    }
    int v20 = *v19;
    uint64_t v18 = v18 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_29:
      uint64_t v25 = v19;
      *(_DWORD *)(a1 + 24) = v18;
      goto LABEL_30;
    }
    unint64_t v23 = (char *)sub_188C138((uint64_t)v8, v18);
    uint64_t v25 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_169A6E8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 28);
    *int v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_169A88C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_14;
  }
  if (v1)
  {
    int v3 = *(_DWORD *)(a1 + 24);
    if (v3 < 0)
    {
      uint64_t v2 = 11;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v4 = *(_DWORD *)(a1 + 28);
  if (v4 < 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v5;
LABEL_14:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_169A94C()
{
  return 1;
}

void *sub_169A954@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetection.Segment.ModelTrigger.PretaggingTrigger.OneyPretagging");
}

void *sub_169A964(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_169A9D8(void *a1)
{
  sub_169A964(a1);

  operator delete();
}

uint64_t sub_169AA10(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_169AA28(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    int v14 = v7 + 1;
    LODWORD(v13) = *v7;
    if ((v13 & 0x80) == 0) {
      goto LABEL_19;
    }
    int v15 = *v14;
    uint64_t v13 = v13 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      int v14 = v7 + 2;
LABEL_19:
      uint64_t v19 = v14;
      *(_DWORD *)(a1 + 24) = v13;
      int v5 = 1;
      goto LABEL_20;
    }
    uint64_t v16 = (char *)sub_188C138((uint64_t)v7, v13);
    uint64_t v19 = v16;
    *(_DWORD *)(a1 + 24) = v17;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      unint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_169ABA4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 24);
    *int v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_169ACCC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    int v2 = *(_DWORD *)(a1 + 24);
    if (v2 < 0) {
      uint64_t v1 = 11;
    }
    else {
      uint64_t v1 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v1 += v6;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_169AD40()
{
  return 1;
}

void *sub_169AD48@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetection.Segment.ModelTrigger.PretaggingTrigger.CurrentProfilePretagging");
}

uint64_t sub_169AD58(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_2543CD0)
  {
    unint64_t v5 = *(void **)(a1 + 24);
    if (v5)
    {
      sub_169A430(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_169A964(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 40);
    if (v7)
    {
      sub_1697430(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_169AE48(uint64_t a1)
{
  sub_169AD58(a1);

  operator delete();
}

uint64_t sub_169AE80(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) != 0)
  {
    if (v2) {
      uint64_t result = sub_169A4DC(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 32);
      char v4 = *(unsigned char *)(v3 + 8);
      uint64_t result = v3 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v4) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 4) != 0) {
      uint64_t result = sub_1697508(*(void *)(v1 + 40));
    }
  }
  if ((v2 & 0x38) != 0)
  {
    *(_DWORD *)(v1 + 56) = 0;
    *(void *)(v1 + 48) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_169AF1C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        unint64_t v12 = *(void **)(a1 + 24);
        if (!v12)
        {
          uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v13 = (void *)*v13;
          }
          unint64_t v12 = sub_16AF1E8((uint64_t)v13);
          *(void *)(a1 + 24) = v12;
          unint64_t v8 = v25;
        }
        uint64_t v14 = sub_169B1D4(a3, (uint64_t)v12, (unsigned __int8 *)v8);
        goto LABEL_41;
      case 2u:
        if (v9 != 18) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 32);
        if (!v15)
        {
          uint64_t v16 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v16 = (void *)*v16;
          }
          uint64_t v15 = sub_16AF260((uint64_t)v16);
          *(void *)(a1 + 32) = v15;
          unint64_t v8 = v25;
        }
        uint64_t v14 = sub_169B264(a3, v15, (unsigned __int8 *)v8);
        goto LABEL_41;
      case 3u:
        if (v9 != 29) {
          goto LABEL_34;
        }
        int v18 = *(_DWORD *)v8;
        int v17 = v8 + 4;
        v5 |= 8u;
        *(_DWORD *)(a1 + 48) = v18;
        goto LABEL_27;
      case 4u:
        if (v9 != 37) {
          goto LABEL_34;
        }
        int v19 = *(_DWORD *)v8;
        int v17 = v8 + 4;
        v5 |= 0x10u;
        *(_DWORD *)(a1 + 52) = v19;
        goto LABEL_27;
      case 5u:
        if (v9 != 45) {
          goto LABEL_34;
        }
        int v20 = *(_DWORD *)v8;
        int v17 = v8 + 4;
        v5 |= 0x20u;
        *(_DWORD *)(a1 + 56) = v20;
LABEL_27:
        uint64_t v25 = v17;
        goto LABEL_42;
      case 6u:
        if (v9 != 50) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v21 = *(void *)(a1 + 40);
        if (!v21)
        {
          int v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v22 = (void *)*v22;
          }
          uint64_t v21 = sub_16AEF5C((uint64_t)v22);
          *(void *)(a1 + 40) = v21;
          unint64_t v8 = v25;
        }
        uint64_t v14 = (char *)sub_1699F6C(a3, v21, (unsigned __int8 *)v8);
        goto LABEL_41;
      default:
LABEL_34:
        if (v9) {
          BOOL v23 = (v9 & 7) == 4;
        }
        else {
          BOOL v23 = 1;
        }
        if (!v23)
        {
          if (*v7)
          {
            int v24 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = v25;
          }
          uint64_t v14 = (char *)sub_1885AC0(v9, v24, v8, a3);
LABEL_41:
          uint64_t v25 = v14;
          if (!v14) {
            goto LABEL_47;
          }
LABEL_42:
          if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_47:
        }
          uint64_t v25 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v25;
    }
  }
}

char *sub_169B1D4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_169A500(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_169B264(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_169AA28(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_169B2F4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_169A6E8(v7, (unint64_t)v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  *char v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    unint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    unint64_t v12 = v4 + 2;
  }
  char v4 = sub_169ABA4(v10, (unint64_t)v12, a3);
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_23;
  }
LABEL_20:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v13 = *(_DWORD *)(a1 + 48);
  *char v4 = 29;
  *(_DWORD *)(v4 + 1) = v13;
  v4 += 5;
  if ((v6 & 0x10) == 0)
  {
LABEL_5:
    if ((v6 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_26;
  }
LABEL_23:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v14 = *(_DWORD *)(a1 + 52);
  *char v4 = 37;
  *(_DWORD *)(v4 + 1) = v14;
  v4 += 5;
  if ((v6 & 0x20) == 0)
  {
LABEL_6:
    if ((v6 & 4) == 0) {
      goto LABEL_35;
    }
    goto LABEL_29;
  }
LABEL_26:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v15 = *(_DWORD *)(a1 + 56);
  *char v4 = 45;
  *(_DWORD *)(v4 + 1) = v15;
  v4 += 5;
  if ((v6 & 4) != 0)
  {
LABEL_29:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 40);
    *char v4 = 50;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      int v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      int v18 = v4 + 2;
    }
    char v4 = sub_16977A0(v16, (unint64_t)v18, a3);
  }
LABEL_35:
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_169B598(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x3F) == 0)
  {
    uint64_t result = 0;
    goto LABEL_17;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v5 = sub_169A88C(*(void *)(a1 + 24));
  uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v6 = sub_169ACCC(*(void *)(a1 + 32));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v7 = sub_1697964(*(void *)(a1 + 40));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v8 = v3 + 5;
  if ((v2 & 8) == 0) {
    uint64_t v8 = v3;
  }
  if ((v2 & 0x10) != 0) {
    v8 += 5;
  }
  if ((v2 & 0x20) != 0) {
    uint64_t result = v8 + 5;
  }
  else {
    uint64_t result = v8;
  }
LABEL_17:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    result += v11;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_169B6C0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v8 = (void *)*v8;
        }
        std::string::pointer data = (std::string *)sub_16AF1E8((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v9 = &off_2543C90;
      }
      uint64_t result = sub_117EF04(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_30;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    unint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (void *)*v12;
      }
      unint64_t v10 = (std::string *)sub_16AF260((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      int v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      int v13 = &off_2543CB0;
    }
    uint64_t result = sub_11A7934(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_38;
    }
LABEL_30:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    int v14 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
    if (!v14)
    {
      std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      int v14 = (std::string *)sub_16AEF5C((uint64_t)v16);
      v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v14;
    }
    if (*(void *)(a2 + 40)) {
      unsigned int v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      unsigned int v17 = &off_2543B98;
    }
    uint64_t result = sub_1697A48(v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_39;
    }
LABEL_38:
    LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0)
      {
LABEL_9:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_10;
      }
LABEL_8:
      LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
      goto LABEL_9;
    }
LABEL_39:
    HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_169B858()
{
  return 1;
}

void *sub_169B860@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetection.Segment.ModelTrigger.PretaggingTrigger");
}

uint64_t sub_169B870(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_169B928(uint64_t a1)
{
  sub_169B870(a1);

  operator delete();
}

uint64_t sub_169B960(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)unint64_t v2 = 0;
        *(void *)(v2 + 8) = 0;
        if ((v1 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  if ((v1 & 0x3C) != 0)
  {
    *(void *)(a1 + 40) = 0;
    *(void *)(a1 + 48) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_169B9E8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v40 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v40, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v40 + 1);
    unsigned int v9 = **(unsigned char **)v40;
    if ((char)**(unsigned char **)v40 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v40, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v40 + 2);
      }
    }
    *(void *)int v40 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_38;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        int v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          int v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 24);
        goto LABEL_27;
      case 2u:
        if (v9 != 16) {
          goto LABEL_38;
        }
        v5 |= 4u;
        uint64_t v16 = v8 + 1;
        LODWORD(v15) = *v8;
        if ((v15 & 0x80) == 0) {
          goto LABEL_17;
        }
        int v17 = *v16;
        uint64_t v15 = v15 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v32 = sub_188C138((uint64_t)v8, v15);
          *(void *)int v40 = v32;
          *(_DWORD *)(a1 + 40) = v33;
          if (!v32) {
            goto LABEL_59;
          }
        }
        else
        {
          uint64_t v16 = v8 + 2;
LABEL_17:
          *(void *)int v40 = v16;
          *(_DWORD *)(a1 + 40) = v15;
        }
        goto LABEL_46;
      case 3u:
        if (v9 != 24) {
          goto LABEL_38;
        }
        v5 |= 8u;
        uint64_t v19 = v8 + 1;
        LODWORD(v18) = *v8;
        if ((v18 & 0x80) == 0) {
          goto LABEL_22;
        }
        int v20 = *v19;
        uint64_t v18 = v18 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v34 = sub_188C138((uint64_t)v8, v18);
          *(void *)int v40 = v34;
          *(_DWORD *)(a1 + 44) = v35;
          if (!v34) {
            goto LABEL_59;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_22:
          *(void *)int v40 = v19;
          *(_DWORD *)(a1 + 44) = v18;
        }
        goto LABEL_46;
      case 4u:
        if (v9 != 34) {
          goto LABEL_38;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v21 = *(void *)(a1 + 8);
        int v13 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          int v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 32);
LABEL_27:
        int v22 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v23 = (void *)sub_188C244(v22, *(char **)v40, (uint64_t)a3);
        goto LABEL_45;
      case 5u:
        if (v9 != 40) {
          goto LABEL_38;
        }
        v5 |= 0x10u;
        uint64_t v25 = v8 + 1;
        LODWORD(v24) = *v8;
        if ((v24 & 0x80) == 0) {
          goto LABEL_32;
        }
        int v26 = *v25;
        uint64_t v24 = v24 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v36 = sub_188C138((uint64_t)v8, v24);
          *(void *)int v40 = v36;
          *(_DWORD *)(a1 + 48) = v37;
          if (!v36) {
            goto LABEL_59;
          }
        }
        else
        {
          uint64_t v25 = v8 + 2;
LABEL_32:
          *(void *)int v40 = v25;
          *(_DWORD *)(a1 + 48) = v24;
        }
        goto LABEL_46;
      case 6u:
        if (v9 != 48) {
          goto LABEL_38;
        }
        v5 |= 0x20u;
        BOOL v28 = v8 + 1;
        LODWORD(v27) = *v8;
        if ((v27 & 0x80) == 0) {
          goto LABEL_37;
        }
        int v29 = *v28;
        uint64_t v27 = v27 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          uint64_t v38 = sub_188C138((uint64_t)v8, v27);
          *(void *)int v40 = v38;
          *(_DWORD *)(a1 + 52) = v39;
          if (!v38) {
            goto LABEL_59;
          }
        }
        else
        {
          BOOL v28 = v8 + 2;
LABEL_37:
          *(void *)int v40 = v28;
          *(_DWORD *)(a1 + 52) = v27;
        }
        goto LABEL_46;
      default:
LABEL_38:
        if (v9) {
          BOOL v30 = (v9 & 7) == 4;
        }
        else {
          BOOL v30 = 1;
        }
        if (!v30)
        {
          if (*v7)
          {
            int v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v40;
          }
          uint64_t v23 = sub_1885AC0(v9, v31, v8, a3);
LABEL_45:
          *(void *)int v40 = v23;
          if (!v23) {
            goto LABEL_59;
          }
LABEL_46:
          if (sub_11947B8((uint64_t)a3, (char **)v40, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_59:
        }
          *(void *)int v40 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v40;
    }
  }
}

unsigned char *sub_169BD40(uint64_t a1, unsigned char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    *int v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 44);
    *int v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 48);
    *int v4 = 40;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 52);
    *int v4 = 48;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_169C01C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x3F) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_33;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    int v9 = *(_DWORD *)(a1 + 40);
    if (v9 < 0) {
      uint64_t v10 = 11;
    }
    else {
      uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v10;
    if ((v1 & 8) == 0)
    {
LABEL_14:
      if ((v1 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_25;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_14;
  }
  int v11 = *(_DWORD *)(a1 + 44);
  if (v11 < 0) {
    uint64_t v12 = 11;
  }
  else {
    uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v12;
  if ((v1 & 0x10) == 0)
  {
LABEL_15:
    if ((v1 & 0x20) == 0) {
      goto LABEL_33;
    }
    goto LABEL_29;
  }
LABEL_25:
  int v13 = *(_DWORD *)(a1 + 48);
  if (v13 < 0) {
    uint64_t v14 = 11;
  }
  else {
    uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v14;
  if ((v1 & 0x20) != 0)
  {
LABEL_29:
    int v15 = *(_DWORD *)(a1 + 52);
    if (v15 < 0) {
      uint64_t v16 = 11;
    }
    else {
      uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v16;
  }
LABEL_33:
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v2 += v20;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_169C1D8()
{
  return 1;
}

void *sub_169C1E0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetection.Segment.ModelTrigger.RepeatedTrigger");
}

void *sub_169C1F0(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_169C264(void *a1)
{
  sub_169C1F0(a1);

  operator delete();
}

uint64_t sub_169C29C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_169C2C4(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v31 + 1;
    unsigned int v9 = *v31;
    if (*v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v31 + 2;
      }
    }
    int v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      uint64_t v16 = v8 + 1;
      int v17 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_26;
      }
      int v18 = *v16;
      int v17 = v17 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        uint64_t v16 = v8 + 2;
LABEL_26:
        int v31 = v16;
        *(_DWORD *)(a1 + 32) = v17;
        goto LABEL_36;
      }
      uint64_t v25 = (char *)sub_188C0D0((uint64_t)v8, v17);
      int v31 = v25;
      *(_DWORD *)(a1 + 32) = v26;
      if (!v25) {
        goto LABEL_47;
      }
      goto LABEL_36;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    unint64_t v19 = v8 + 1;
    int v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    int v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      unint64_t v19 = v8 + 2;
LABEL_31:
      int v31 = v19;
      *(_DWORD *)(a1 + 28) = v20;
      goto LABEL_36;
    }
    uint64_t v27 = (char *)sub_188C0D0((uint64_t)v8, v20);
    int v31 = v27;
    *(_DWORD *)(a1 + 28) = v28;
    if (!v27) {
      goto LABEL_47;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 8)
  {
    v5 |= 1u;
    int v22 = v8 + 1;
    int v23 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v24 = *v22;
    int v23 = v23 + (v24 << 7) - 128;
    if ((v24 & 0x80000000) == 0)
    {
      int v22 = v8 + 2;
LABEL_35:
      int v31 = v22;
      *(_DWORD *)(a1 + 24) = v23;
      goto LABEL_36;
    }
    int v29 = (char *)sub_188C0D0((uint64_t)v8, v23);
    int v31 = v29;
    *(_DWORD *)(a1 + 24) = v30;
    if (!v29) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      int v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v31;
    }
    int v31 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v31) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  int v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v31;
}

unsigned char *sub_169C518(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 32);
    *uint64_t v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    unint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    unint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_169C738(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_10;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) != 0) {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_169C804()
{
  return 1;
}

void *sub_169C80C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetection.Segment.ModelTrigger.SeasonalTrigger.ReopeningCheck");
}

uint64_t sub_169C81C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  unint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if ((uint64_t (***)())a1 != &off_2543D38)
  {
    uint64_t v6 = *(void **)(a1 + 40);
    if (v6)
    {
      sub_169C1F0(v6);
      operator delete();
    }
    unsigned int v7 = *(void **)(a1 + 48);
    if (v7)
    {
      sub_169C1F0(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_169C924(uint64_t a1)
{
  sub_169C81C(a1);

  operator delete();
}

uint64_t sub_169C95C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_7;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_17;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_17;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_17:
  unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_21;
    }
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  *(unsigned char *)unint64_t v6 = 0;
  *(unsigned char *)(v6 + 23) = 0;
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_21:
  uint64_t result = sub_169C29C(*(void *)(result + 40));
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    uint64_t result = sub_169C29C(*(void *)(v1 + 48));
LABEL_7:
  if ((v2 & 0x30) != 0) {
    *(void *)(v1 + 56) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_169CA48(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = (unsigned __int8 *)(*(void *)v33 + 1);
    unsigned int v9 = **(unsigned char **)v33;
    if ((char)**(unsigned char **)v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unsigned int v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = (unsigned __int8 *)(*(void *)v33 + 2);
      }
    }
    *(void *)int v33 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        unsigned int v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          unsigned int v13 = (uint64_t *)*v13;
        }
        unsigned int v14 = (void *)(a1 + 24);
        goto LABEL_39;
      case 2u:
        if (v9 != 16) {
          goto LABEL_40;
        }
        v5 |= 0x10u;
        unsigned int v15 = (char *)(v8 + 1);
        int v16 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v29 = sub_188C0D0((uint64_t)v8, v16);
          *(void *)int v33 = v29;
          *(_DWORD *)(a1 + 56) = v30;
          if (!v29) {
            goto LABEL_57;
          }
        }
        else
        {
          unsigned int v15 = (char *)(v8 + 2);
LABEL_17:
          *(void *)int v33 = v15;
          *(_DWORD *)(a1 + 56) = v16;
        }
        goto LABEL_48;
      case 3u:
        if (v9 != 24) {
          goto LABEL_40;
        }
        v5 |= 0x20u;
        unint64_t v18 = (char *)(v8 + 1);
        int v19 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v31 = sub_188C0D0((uint64_t)v8, v19);
          *(void *)int v33 = v31;
          *(_DWORD *)(a1 + 60) = v32;
          if (!v31) {
            goto LABEL_57;
          }
        }
        else
        {
          unint64_t v18 = (char *)(v8 + 2);
LABEL_22:
          *(void *)int v33 = v18;
          *(_DWORD *)(a1 + 60) = v19;
        }
        goto LABEL_48;
      case 4u:
        if (v9 != 34) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v21 = *(void *)(a1 + 40);
        if (v21) {
          goto LABEL_34;
        }
        int v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          int v22 = (void *)*v22;
        }
        uint64_t v21 = sub_16AF3E4((uint64_t)v22);
        *(void *)(a1 + 40) = v21;
        goto LABEL_33;
      case 5u:
        if (v9 != 42) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v21 = *(void *)(a1 + 48);
        if (v21) {
          goto LABEL_34;
        }
        int v23 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          int v23 = (void *)*v23;
        }
        uint64_t v21 = sub_16AF3E4((uint64_t)v23);
        *(void *)(a1 + 48) = v21;
LABEL_33:
        unsigned int v8 = *(unsigned __int8 **)v33;
LABEL_34:
        int v24 = sub_169CD8C(a3, v21, v8);
        goto LABEL_47;
      case 6u:
        if (v9 != 50) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v25 = *(void *)(a1 + 8);
        unsigned int v13 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
        if (v25) {
          unsigned int v13 = (uint64_t *)*v13;
        }
        unsigned int v14 = (void *)(a1 + 32);
LABEL_39:
        int v26 = (std::string *)sub_1880F84(v14, v13);
        int v24 = (void *)sub_188C244(v26, *(char **)v33, (uint64_t)a3);
        goto LABEL_47;
      default:
LABEL_40:
        if (v9) {
          BOOL v27 = (v9 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (*v7)
          {
            int v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = *(unsigned __int8 **)v33;
          }
          int v24 = sub_1885AC0(v9, v28, (char *)v8, a3);
LABEL_47:
          *(void *)int v33 = v24;
          if (!v24) {
            goto LABEL_57;
          }
LABEL_48:
          if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_57:
        }
          *(void *)int v33 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v33;
    }
  }
}

char *sub_169CD8C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_169C2C4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_169CE1C(uint64_t a1, unsigned char *__dst, void *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 56);
    *char v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 60);
    *char v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v15 = *(void *)(a1 + 40);
    *char v4 = 34;
    unsigned int v16 = *(_DWORD *)(v15 + 20);
    v4[1] = v16;
    if (v16 > 0x7F) {
      int v17 = sub_188A9CC(v16, v4 + 1);
    }
    else {
      int v17 = v4 + 2;
    }
    char v4 = sub_169C518(v15, (unint64_t)v17, a3);
    if ((v6 & 8) == 0)
    {
LABEL_19:
      if ((v6 & 2) == 0) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_19;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v18 = *(void *)(a1 + 48);
  *char v4 = 42;
  unsigned int v19 = *(_DWORD *)(v18 + 20);
  v4[1] = v19;
  if (v19 > 0x7F) {
    int v20 = sub_188A9CC(v19, v4 + 1);
  }
  else {
    int v20 = v4 + 2;
  }
  char v4 = sub_169C518(v18, (unint64_t)v20, a3);
  if ((v6 & 2) != 0) {
LABEL_20:
  }
    char v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_21:
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_169D0E0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x3F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_17;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    uint64_t v12 = sub_169C738(*(void *)(a1 + 40));
    v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_21;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  uint64_t v13 = sub_169C738(*(void *)(a1 + 48));
  v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_21:
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) != 0) {
LABEL_16:
  }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 60) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_17:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v14 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v3 += v15;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_169D2A0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v6 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      uint64_t result = sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v9 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
      unsigned int v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
      if (v10) {
        unsigned int v11 = (uint64_t *)*v11;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v9, v11);
    }
    if ((v4 & 4) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
      uint64_t v13 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
      if (!v13)
      {
        std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
        uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v15 = (void *)*v15;
        }
        uint64_t v13 = (std::string *)sub_16AF3E4((uint64_t)v15);
        v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v13;
      }
      if (*(void *)(a2 + 40)) {
        unsigned int v16 = *(uint64_t (****)())(a2 + 40);
      }
      else {
        unsigned int v16 = &off_2543D10;
      }
      uint64_t result = sub_117EF50(v13, (uint64_t)v16);
      if ((v4 & 8) == 0)
      {
LABEL_12:
        if ((v4 & 0x10) == 0) {
          goto LABEL_13;
        }
        goto LABEL_36;
      }
    }
    else if ((v4 & 8) == 0)
    {
      goto LABEL_12;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::pointer data = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type v18 = v3->__r_.__value_.__l.__size_;
      unsigned int v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        unsigned int v19 = (void *)*v19;
      }
      std::string::pointer data = (std::string *)sub_16AF3E4((uint64_t)v19);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 48)) {
      int v20 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      int v20 = &off_2543D10;
    }
    uint64_t result = sub_117EF50(data, (uint64_t)v20);
    if ((v4 & 0x10) == 0)
    {
LABEL_13:
      if ((v4 & 0x20) == 0)
      {
LABEL_15:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_16;
      }
LABEL_14:
      HIDWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 60);
      goto LABEL_15;
    }
LABEL_36:
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v4 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_16:
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_169D438()
{
  return 1;
}

void *sub_169D440@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetection.Segment.ModelTrigger.SeasonalTrigger");
}

void *sub_169D450(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_169D4C4(void *a1)
{
  sub_169D450(a1);

  operator delete();
}

uint64_t sub_169D4FC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x1F) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(_DWORD *)(a1 + 40) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_169D524(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v20 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v20 + 1;
    unsigned int v9 = *v20;
    if (*v20 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v20, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v20 + 2;
      }
    }
    int v20 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 13) {
          goto LABEL_22;
        }
        int v13 = *(_DWORD *)v8;
        uint64_t v12 = v8 + 4;
        v5 |= 1u;
        *(_DWORD *)(a1 + 24) = v13;
        goto LABEL_19;
      case 2u:
        if (v9 != 21) {
          goto LABEL_22;
        }
        int v14 = *(_DWORD *)v8;
        uint64_t v12 = v8 + 4;
        v5 |= 2u;
        *(_DWORD *)(a1 + 28) = v14;
        goto LABEL_19;
      case 3u:
        if (v9 != 29) {
          goto LABEL_22;
        }
        int v15 = *(_DWORD *)v8;
        uint64_t v12 = v8 + 4;
        v5 |= 4u;
        *(_DWORD *)(a1 + 32) = v15;
        goto LABEL_19;
      case 4u:
        if (v9 != 37) {
          goto LABEL_22;
        }
        int v16 = *(_DWORD *)v8;
        uint64_t v12 = v8 + 4;
        v5 |= 8u;
        *(_DWORD *)(a1 + 36) = v16;
        goto LABEL_19;
      case 5u:
        if (v9 != 45) {
          goto LABEL_22;
        }
        int v17 = *(_DWORD *)v8;
        uint64_t v12 = v8 + 4;
        v5 |= 0x10u;
        *(_DWORD *)(a1 + 40) = v17;
LABEL_19:
        int v20 = v12;
        goto LABEL_20;
      default:
LABEL_22:
        if (v9) {
          BOOL v18 = (v9 & 7) == 4;
        }
        else {
          BOOL v18 = 1;
        }
        if (!v18)
        {
          if (*v7)
          {
            unsigned int v19 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v19 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v20;
          }
          int v20 = (char *)sub_1885AC0(v9, v19, v8, a3);
          if (!v20) {
            goto LABEL_33;
          }
LABEL_20:
          if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_33:
        }
          int v20 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v20;
    }
  }
}

_OWORD *sub_169D720(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    int v7 = *(_DWORD *)(a1 + 24);
    *(unsigned char *)int v4 = 13;
    *(_DWORD *)((char *)v4 + 1) = v7;
    int v4 = (_OWORD *)((char *)v4 + 5);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v8 = *(_DWORD *)(a1 + 28);
  *(unsigned char *)int v4 = 21;
  *(_DWORD *)((char *)v4 + 1) = v8;
  int v4 = (_OWORD *)((char *)v4 + 5);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_13:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v9 = *(_DWORD *)(a1 + 32);
  *(unsigned char *)int v4 = 29;
  *(_DWORD *)((char *)v4 + 1) = v9;
  int v4 = (_OWORD *)((char *)v4 + 5);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_22;
    }
    goto LABEL_19;
  }
LABEL_16:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v10 = *(_DWORD *)(a1 + 36);
  *(unsigned char *)int v4 = 37;
  *(_DWORD *)((char *)v4 + 1) = v10;
  int v4 = (_OWORD *)((char *)v4 + 5);
  if ((v6 & 0x10) != 0)
  {
LABEL_19:
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v11 = *(_DWORD *)(a1 + 40);
    *(unsigned char *)int v4 = 45;
    *(_DWORD *)((char *)v4 + 1) = v11;
    int v4 = (_OWORD *)((char *)v4 + 5);
  }
LABEL_22:
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    int v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    int v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    return (_OWORD *)((char *)v4 + v17);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_169D8F8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x1F) != 0)
  {
    uint64_t v2 = 5;
    if ((v1 & 1) == 0) {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += 5;
    }
    if ((v1 & 4) != 0) {
      v2 += 5;
    }
    if ((v1 & 8) != 0) {
      v2 += 5;
    }
    if ((v1 & 0x10) != 0) {
      uint64_t v3 = v2 + 5;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_169D980(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_9;
  }
  if (v2)
  {
    LODWORD(result[1].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 24);
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_13;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  HIDWORD(result[1].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 28);
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_14:
    HIDWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
    if ((v2 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_13:
  LODWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
  if ((v2 & 8) != 0) {
    goto LABEL_14;
  }
LABEL_6:
  if ((v2 & 0x10) != 0) {
LABEL_7:
  }
    LODWORD(result[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
LABEL_8:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_9:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_169DA04()
{
  return 1;
}

void *sub_169DA0C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetection.Segment.ModelTrigger.SignedPerpendicularDistanceStatistics.Percentile");
}

uint64_t sub_169DA1C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_169DAA0((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_169DAA0(uint64_t (***result)()))()
{
  if (result != &off_2543DA8)
  {
    int v1 = result;
    uint64_t v2 = result[3];
    if (v2)
    {
      sub_169D450(v2);
      operator delete();
    }
    uint64_t v3 = v1[4];
    if (v3)
    {
      sub_169D450(v3);
      operator delete();
    }
    uint64_t v4 = v1[5];
    if (v4)
    {
      sub_169D450(v4);
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[6];
    if (result)
    {
      sub_169D450(result);
      operator delete();
    }
  }
  return result;
}

void sub_169DB6C(uint64_t a1)
{
  sub_169DA1C(a1);

  operator delete();
}

uint64_t sub_169DBA4(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_7;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_12:
    uint64_t result = sub_169D4FC(*(void *)(v1 + 32));
    if ((v2 & 4) == 0)
    {
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    goto LABEL_13;
  }
  uint64_t result = sub_169D4FC(*(void *)(result + 24));
  if ((v2 & 2) != 0) {
    goto LABEL_12;
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_13:
  uint64_t result = sub_169D4FC(*(void *)(v1 + 40));
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    uint64_t result = sub_169D4FC(*(void *)(v1 + 48));
LABEL_7:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_169DC3C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v19 = a2;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    return v19;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v19 + 2;
      }
    }
    unsigned int v19 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 24);
        if (v11) {
          goto LABEL_30;
        }
        uint64_t v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v12 = (void *)*v12;
        }
        uint64_t v11 = sub_16AF4EC((uint64_t)v12);
        *(void *)(a1 + 24) = v11;
        goto LABEL_29;
      case 2u:
        if (v8 != 18) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v11 = *(void *)(a1 + 32);
        if (v11) {
          goto LABEL_30;
        }
        int v13 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          int v13 = (void *)*v13;
        }
        uint64_t v11 = sub_16AF4EC((uint64_t)v13);
        *(void *)(a1 + 32) = v11;
        goto LABEL_29;
      case 3u:
        if (v8 != 26) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v11 = *(void *)(a1 + 40);
        if (v11) {
          goto LABEL_30;
        }
        unint64_t v14 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          unint64_t v14 = (void *)*v14;
        }
        uint64_t v11 = sub_16AF4EC((uint64_t)v14);
        *(void *)(a1 + 40) = v11;
        goto LABEL_29;
      case 4u:
        if (v8 != 34) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v11 = *(void *)(a1 + 48);
        if (v11) {
          goto LABEL_30;
        }
        int v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          int v15 = (void *)*v15;
        }
        uint64_t v11 = sub_16AF4EC((uint64_t)v15);
        *(void *)(a1 + 48) = v11;
LABEL_29:
        uint64_t v7 = v19;
LABEL_30:
        uint64_t v16 = sub_169DEA8(a3, v11, (unsigned __int8 *)v7);
        goto LABEL_31;
      default:
LABEL_34:
        if (v8) {
          BOOL v17 = (v8 & 7) == 4;
        }
        else {
          BOOL v17 = 1;
        }
        if (!v17)
        {
          if (*v6)
          {
            BOOL v18 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            BOOL v18 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v19;
          }
          uint64_t v16 = (char *)sub_1885AC0(v8, v18, v7, a3);
LABEL_31:
          unsigned int v19 = v16;
          if (!v16) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
            return v19;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v19;
    }
  }
}

char *sub_169DEA8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_169D524(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_169DF38(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_169D720(v7, (unint64_t)v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  *char v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  char v4 = sub_169D720(v10, (unint64_t)v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_30;
    }
    goto LABEL_24;
  }
LABEL_18:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 40);
  *char v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    int v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    int v15 = v4 + 2;
  }
  char v4 = sub_169D720(v13, (unint64_t)v15, a3);
  if ((v6 & 8) != 0)
  {
LABEL_24:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 48);
    *char v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      BOOL v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      BOOL v18 = v4 + 2;
    }
    char v4 = sub_169D720(v16, (unint64_t)v18, a3);
  }
LABEL_30:
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_169E190(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_169D8F8(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_169D8F8(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  uint64_t v9 = sub_169D8F8(*(void *)(a1 + 40));
  v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0)
  {
LABEL_10:
    uint64_t v6 = sub_169D8F8(*(void *)(a1 + 48));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_11:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v10 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_169E2D0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) == 0) {
    goto LABEL_39;
  }
  if (v4)
  {
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v7 = (void *)*v7;
      }
      std::string::pointer data = (std::string *)sub_16AF4EC((uint64_t)v7);
      v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 24)) {
      unsigned int v8 = *(uint64_t (****)())(a2 + 24);
    }
    else {
      unsigned int v8 = &off_2543D78;
    }
    uint64_t result = sub_169D980(data, (uint64_t)v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_23;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
  uint64_t v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
  if (!v9)
  {
    std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
    uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      uint64_t v11 = (void *)*v11;
    }
    uint64_t v9 = (std::string *)sub_16AF4EC((uint64_t)v11);
    v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
  }
  if (*(void *)(a2 + 32)) {
    uint64_t v12 = *(uint64_t (****)())(a2 + 32);
  }
  else {
    uint64_t v12 = &off_2543D78;
  }
  uint64_t result = sub_169D980(v9, (uint64_t)v12);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_39;
    }
    goto LABEL_31;
  }
LABEL_23:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
  uint64_t v13 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
  if (!v13)
  {
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    int v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      int v15 = (void *)*v15;
    }
    uint64_t v13 = (std::string *)sub_16AF4EC((uint64_t)v15);
    v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v13;
  }
  if (*(void *)(a2 + 40)) {
    uint64_t v16 = *(uint64_t (****)())(a2 + 40);
  }
  else {
    uint64_t v16 = &off_2543D78;
  }
  uint64_t result = sub_169D980(v13, (uint64_t)v16);
  if ((v4 & 8) != 0)
  {
LABEL_31:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    unsigned int v17 = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!v17)
    {
      std::string::size_type v18 = v3->__r_.__value_.__l.__size_;
      uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v19 = (void *)*v19;
      }
      unsigned int v17 = (std::string *)sub_16AF4EC((uint64_t)v19);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)v17;
    }
    if (*(void *)(a2 + 48)) {
      int v20 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      int v20 = &off_2543D78;
    }
    uint64_t result = sub_169D980(v17, (uint64_t)v20);
  }
LABEL_39:
  uint64_t v21 = *(void *)(a2 + 8);
  if (v21)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v21 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_169E464()
{
  return 1;
}

void *sub_169E46C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetection.Segment.ModelTrigger.SignedPerpendicularDistanceStatistics");
}

uint64_t sub_169E47C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2543DE0)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_169DA1C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_169E534(uint64_t a1)
{
  sub_169E47C(a1);

  operator delete();
}

uint64_t sub_169E56C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    uint64_t result = sub_169DBA4(*(void *)(result + 24));
  }
  if ((v2 & 6) != 0) {
    *(void *)(v1 + 32) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_169E5D4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = v31 + 1;
    unsigned int v9 = *v31;
    if (*v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v31 + 2;
      }
    }
    uint64_t v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v17 = *(void *)(a1 + 24);
      if (!v17)
      {
        std::string::size_type v18 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          std::string::size_type v18 = (void *)*v18;
        }
        sub_16AF56C((uint64_t)v18);
        uint64_t v17 = v19;
        *(void *)(a1 + 24) = v19;
        unsigned int v8 = v31;
      }
      uint64_t v16 = sub_169E85C(a3, v17, (unsigned __int8 *)v8);
LABEL_27:
      uint64_t v31 = v16;
      if (!v16) {
        goto LABEL_53;
      }
      goto LABEL_40;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 4u;
    uint64_t v21 = v8 + 1;
    LODWORD(v20) = *v8;
    if ((v20 & 0x80) == 0) {
      goto LABEL_33;
    }
    int v22 = *v21;
    uint64_t v20 = v20 + (v22 << 7) - 128;
    if ((v22 & 0x80000000) == 0)
    {
      uint64_t v21 = v8 + 2;
LABEL_33:
      uint64_t v31 = v21;
      *(_DWORD *)(a1 + 36) = v20;
      goto LABEL_40;
    }
    BOOL v27 = (char *)sub_188C138((uint64_t)v8, v20);
    uint64_t v31 = v27;
    *(_DWORD *)(a1 + 36) = v28;
    if (!v27) {
      goto LABEL_53;
    }
LABEL_40:
    if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 8)
  {
    uint64_t v23 = v8 + 1;
    unint64_t v24 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_37;
    }
    int v25 = *v23;
    int v26 = v24 + (v25 << 7);
    unint64_t v24 = (v26 - 128);
    if (v25 < 0)
    {
      uint64_t v31 = (char *)sub_188C138((uint64_t)v8, (v26 - 128));
      if (!v31) {
        goto LABEL_53;
      }
      unint64_t v24 = v29;
    }
    else
    {
      uint64_t v23 = v8 + 2;
LABEL_37:
      uint64_t v31 = v23;
    }
    if (v24 > 2)
    {
      if (*v7) {
        int v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        int v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v24, v30);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v24;
    }
    goto LABEL_40;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      int v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v8 = v31;
    }
    uint64_t v16 = (char *)sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_27;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_53:
  uint64_t v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v31;
}

char *sub_169E85C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_169DC3C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_169E8EC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 36);
    *char v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 24);
    *char v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      int v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      int v15 = v4 + 2;
    }
    char v4 = sub_169DF38(v13, (unint64_t)v15, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_169EAF4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t result = 0;
    goto LABEL_16;
  }
  if (v2)
  {
    uint64_t v4 = sub_169E190(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_11:
  if ((v2 & 4) != 0)
  {
    int v7 = *(_DWORD *)(a1 + 36);
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v8;
  }
LABEL_16:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    result += v11;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_169EBF8(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v8 = (void *)*v8;
        }
        sub_16AF56C((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v9 = &off_2543DA8;
      }
      uint64_t result = sub_169E2D0(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_169ECE0()
{
  return 1;
}

void *sub_169ECE8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetection.Segment.ModelTrigger.HistoricalLaneClosureTrigger");
}

uint64_t sub_169ECF8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2543E08)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_169DA1C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_169EDB0(uint64_t a1)
{
  sub_169ECF8(a1);

  operator delete();
}

uint64_t sub_169EDE8(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_169DBA4(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 24) = 0;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_169EE48(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v24 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v24 + 1;
    unsigned int v9 = *v24;
    if (*v24 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v24, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v24 + 2;
      }
    }
    unint64_t v24 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v20 = v8 + 1;
    LODWORD(v19) = *v8;
    if ((v19 & 0x80) == 0) {
      goto LABEL_31;
    }
    int v21 = *v20;
    uint64_t v19 = v19 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      uint64_t v20 = v8 + 2;
LABEL_31:
      unint64_t v24 = v20;
      *(_DWORD *)(a1 + 32) = v19;
      goto LABEL_32;
    }
    int v22 = (char *)sub_188C138((uint64_t)v8, v19);
    unint64_t v24 = v22;
    *(_DWORD *)(a1 + 32) = v23;
    if (!v22) {
      goto LABEL_39;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v16 = *(void *)(a1 + 24);
    if (!v16)
    {
      uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v17 = (void *)*v17;
      }
      sub_16AF56C((uint64_t)v17);
      uint64_t v16 = v18;
      *(void *)(a1 + 24) = v18;
      uint64_t v8 = v24;
    }
    int v15 = sub_169E85C(a3, v16, (unsigned __int8 *)v8);
LABEL_26:
    unint64_t v24 = v15;
    if (!v15) {
      goto LABEL_39;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      unsigned int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v24;
    }
    int v15 = (char *)sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_26;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  unint64_t v24 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v24;
}

unsigned char *sub_169F028(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    *int v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unint64_t v12 = v4 + 2;
    }
    int v4 = sub_169DF38(v10, (unint64_t)v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_169F1B4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_169E190(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_11:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_169F284(std::string *result, uint64_t a2)
{
  char v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v7 = (void *)*v7;
        }
        sub_16AF56C((uint64_t)v7);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v8 = &off_2543DA8;
      }
      uint64_t result = sub_169E2D0(data, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_169F354()
{
  return 1;
}

void *sub_169F35C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetection.Segment.ModelTrigger.HistoricalRoadworksTrigger");
}

void *sub_169F36C(void *a1)
{
  char v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_169F414((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_16B4E1C(a1 + 9);
  sub_16B4D9C(a1 + 6);
  sub_16B4D1C(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_169F414(uint64_t result)
{
  if ((uint64_t (***)())result != &off_2543E30)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = *(void **)(result + 96);
    if (v2)
    {
      sub_1697B40(v2);
      operator delete();
    }
    uint64_t v3 = v1[13];
    if (v3)
    {
      sub_169AD58(v3);
      operator delete();
    }
    uint64_t v4 = v1[14];
    if (v4)
    {
      sub_1699BB0(v4);
      operator delete();
    }
    uint64_t v5 = v1[15];
    if (v5)
    {
      sub_1699BB0(v5);
      operator delete();
    }
    uint64_t v6 = v1[16];
    if (v6)
    {
      sub_169E47C(v6);
      operator delete();
    }
    uint64_t v7 = v1[17];
    if (v7)
    {
      sub_169ECF8(v7);
      operator delete();
    }
    uint64_t result = v1[18];
    if (result)
    {
      sub_1699BB0(result);
      operator delete();
    }
  }
  return result;
}

void sub_169F540(void *a1)
{
  sub_169F36C(a1);

  operator delete();
}

uint64_t sub_169F578(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_169852C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_169B960(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 80);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(v1 + 88) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_169C95C(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 80) = 0;
  }
  int v11 = *(_DWORD *)(v1 + 16);
  if ((v11 & 0x7F) == 0) {
    goto LABEL_22;
  }
  if (v11)
  {
    uint64_t result = sub_1697BEC(*(void *)(v1 + 96));
    if ((v11 & 2) == 0)
    {
LABEL_16:
      if ((v11 & 4) == 0) {
        goto LABEL_17;
      }
      goto LABEL_28;
    }
  }
  else if ((v11 & 2) == 0)
  {
    goto LABEL_16;
  }
  uint64_t result = sub_169AE80(*(void *)(v1 + 104));
  if ((v11 & 4) == 0)
  {
LABEL_17:
    if ((v11 & 8) == 0) {
      goto LABEL_18;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = sub_1699CB8(*(void *)(v1 + 112));
  if ((v11 & 8) == 0)
  {
LABEL_18:
    if ((v11 & 0x10) == 0) {
      goto LABEL_19;
    }
LABEL_30:
    uint64_t result = sub_169E56C(*(void *)(v1 + 128));
    if ((v11 & 0x20) == 0)
    {
LABEL_20:
      if ((v11 & 0x40) == 0) {
        goto LABEL_22;
      }
      goto LABEL_21;
    }
    goto LABEL_31;
  }
LABEL_29:
  uint64_t result = sub_1699CB8(*(void *)(v1 + 120));
  if ((v11 & 0x10) != 0) {
    goto LABEL_30;
  }
LABEL_19:
  if ((v11 & 0x20) == 0) {
    goto LABEL_20;
  }
LABEL_31:
  uint64_t result = sub_169EDE8(*(void *)(v1 + 136));
  if ((v11 & 0x40) != 0) {
LABEL_21:
  }
    uint64_t result = sub_1699CB8(*(void *)(v1 + 144));
LABEL_22:
  char v13 = *(unsigned char *)(v1 + 8);
  uint64_t v12 = v1 + 8;
  *(_DWORD *)(v12 + 8) = 0;
  if (v13)
  {
    return sub_188B4AC((uint64_t *)v12);
  }
  return result;
}

char *sub_169F6C4(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v48 = a2;
  if (sub_11947B8((uint64_t)a3, &v48, a3[11].i32[1])) {
    return v48;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v48 + 1;
    unsigned int v8 = *v48;
    if (*v48 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v48, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v48 + 2;
      }
    }
    int v48 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_80;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        int v11 = *(void **)(a1 + 96);
        if (!v11)
        {
          uint64_t v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v12 = (void *)*v12;
          }
          int v11 = sub_16AEFE4((uint64_t)v12);
          *(void *)(a1 + 96) = v11;
          uint64_t v7 = v48;
        }
        char v13 = sub_169FC08(a3, (uint64_t)v11, (unsigned __int8 *)v7);
        goto LABEL_87;
      case 2u:
        if (v8 != 18) {
          goto LABEL_80;
        }
        unsigned int v14 = v7 - 1;
        while (1)
        {
          unint64_t v15 = (unsigned __int8 *)(v14 + 1);
          int v48 = v14 + 1;
          uint64_t v16 = *(_DWORD **)(a1 + 40);
          if (v16 && (uint64_t v17 = *(int *)(a1 + 32), (int)v17 < *v16))
          {
            *(_DWORD *)(a1 + 32) = v17 + 1;
            uint64_t v18 = *(void *)&v16[2 * v17 + 2];
          }
          else
          {
            uint64_t v19 = sub_16AF0DC(*(void *)(a1 + 24));
            uint64_t v18 = sub_188CDC8(a1 + 24, v19);
            unint64_t v15 = (unsigned __int8 *)v48;
          }
          unsigned int v14 = (char *)sub_169885C(a3, v18, v15);
          int v48 = v14;
          if (!v14) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
            goto LABEL_88;
          }
        }
      case 3u:
        if (v8 != 26) {
          goto LABEL_80;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v20 = *(void *)(a1 + 104);
        if (!v20)
        {
          int v21 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v21 = (void *)*v21;
          }
          sub_16AF2DC((uint64_t)v21);
          uint64_t v20 = v22;
          *(void *)(a1 + 104) = v22;
          uint64_t v7 = v48;
        }
        char v13 = sub_169FC98(a3, v20, (unsigned __int8 *)v7);
        goto LABEL_87;
      case 5u:
        if (v8 != 42) {
          goto LABEL_80;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v23 = *(void *)(a1 + 112);
        if (v23) {
          goto LABEL_69;
        }
        unint64_t v24 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          unint64_t v24 = (void *)*v24;
        }
        sub_16AF16C((uint64_t)v24);
        uint64_t v23 = v25;
        *(void *)(a1 + 112) = v25;
        goto LABEL_68;
      case 6u:
        if (v8 != 50) {
          goto LABEL_80;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v23 = *(void *)(a1 + 120);
        if (v23) {
          goto LABEL_69;
        }
        int v26 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          int v26 = (void *)*v26;
        }
        sub_16AF16C((uint64_t)v26);
        uint64_t v23 = v27;
        *(void *)(a1 + 120) = v27;
        goto LABEL_68;
      case 7u:
        if (v8 != 58) {
          goto LABEL_80;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        int v28 = *(void **)(a1 + 128);
        if (!v28)
        {
          unint64_t v29 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v29 = (void *)*v29;
          }
          int v28 = sub_16AF5EC((uint64_t)v29);
          *(void *)(a1 + 128) = v28;
          uint64_t v7 = v48;
        }
        char v13 = sub_169FDB8(a3, (uint64_t)v28, (unsigned __int8 *)v7);
        goto LABEL_87;
      case 8u:
        if (v8 != 66) {
          goto LABEL_80;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v30 = *(void *)(a1 + 136);
        if (!v30)
        {
          uint64_t v31 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v31 = (void *)*v31;
          }
          uint64_t v30 = sub_16AF668((uint64_t)v31);
          *(void *)(a1 + 136) = v30;
          uint64_t v7 = v48;
        }
        char v13 = sub_169FE48(a3, v30, (unsigned __int8 *)v7);
        goto LABEL_87;
      case 9u:
        if (v8 != 74) {
          goto LABEL_80;
        }
        int v32 = v7 - 1;
        while (1)
        {
          int v33 = (unsigned __int8 *)(v32 + 1);
          int v48 = v32 + 1;
          uint64_t v34 = *(_DWORD **)(a1 + 64);
          if (v34 && (uint64_t v35 = *(int *)(a1 + 56), (int)v35 < *v34))
          {
            *(_DWORD *)(a1 + 56) = v35 + 1;
            uint64_t v36 = *(void *)&v34[2 * v35 + 2];
          }
          else
          {
            int v37 = sub_16AF35C(*(void *)(a1 + 48));
            uint64_t v36 = sub_188CDC8(a1 + 48, (uint64_t)v37);
            int v33 = (unsigned __int8 *)v48;
          }
          int v32 = (char *)sub_169FED8(a3, v36, v33);
          int v48 = v32;
          if (!v32) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v32 || *v32 != 74) {
            goto LABEL_88;
          }
        }
      case 0xAu:
        if (v8 != 82) {
          goto LABEL_80;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v23 = *(void *)(a1 + 144);
        if (v23) {
          goto LABEL_69;
        }
        uint64_t v38 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v38 = (void *)*v38;
        }
        sub_16AF16C((uint64_t)v38);
        uint64_t v23 = v39;
        *(void *)(a1 + 144) = v39;
LABEL_68:
        uint64_t v7 = v48;
LABEL_69:
        char v13 = sub_169FD28(a3, v23, (unsigned __int8 *)v7);
        goto LABEL_87;
      case 0xBu:
        if (v8 != 90) {
          goto LABEL_80;
        }
        int v40 = v7 - 1;
        while (1)
        {
          uint64_t v41 = (unsigned __int8 *)(v40 + 1);
          int v48 = v40 + 1;
          int v42 = *(_DWORD **)(a1 + 88);
          if (v42 && (uint64_t v43 = *(int *)(a1 + 80), (int)v43 < *v42))
          {
            *(_DWORD *)(a1 + 80) = v43 + 1;
            uint64_t v44 = *(void *)&v42[2 * v43 + 2];
          }
          else
          {
            uint64_t v45 = sub_16AF460(*(void *)(a1 + 72));
            uint64_t v44 = sub_188CDC8(a1 + 72, (uint64_t)v45);
            uint64_t v41 = (unsigned __int8 *)v48;
          }
          int v40 = (char *)sub_169FF68(a3, v44, v41);
          int v48 = v40;
          if (!v40) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v40 || *v40 != 90) {
            goto LABEL_88;
          }
        }
      default:
LABEL_80:
        if (v8) {
          BOOL v46 = (v8 & 7) == 4;
        }
        else {
          BOOL v46 = 1;
        }
        if (!v46)
        {
          if (*v6)
          {
            int v47 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v47 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v48;
          }
          char v13 = (char *)sub_1885AC0(v8, v47, v7, a3);
LABEL_87:
          int v48 = v13;
          if (!v13) {
            return 0;
          }
LABEL_88:
          if (sub_11947B8((uint64_t)a3, &v48, a3[11].i32[1])) {
            return v48;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v48;
    }
  }
}

char *sub_169FC08(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1697C10(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_169FC98(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_169AF1C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_169FD28(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1699D34(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_169FDB8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_169E5D4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_169FE48(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_169EE48(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_169FED8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_169B9E8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_169FF68(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_169CA48(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_169FFF8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 96);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_1697ED8(v7, (unint64_t)v9, a3);
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        unsigned int v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        unsigned int v14 = v4 + 2;
      }
      uint64_t v4 = sub_1699588(v12, (unint64_t)v14, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v15 = *(void *)(a1 + 104);
    *uint64_t v4 = 26;
    unsigned int v16 = *(_DWORD *)(v15 + 20);
    v4[1] = v16;
    if (v16 > 0x7F) {
      uint64_t v17 = sub_188A9CC(v16, v4 + 1);
    }
    else {
      uint64_t v17 = v4 + 2;
    }
    uint64_t v4 = sub_169B2F4(v15, (unint64_t)v17, a3);
    if ((v6 & 4) == 0)
    {
LABEL_18:
      if ((v6 & 8) == 0) {
        goto LABEL_19;
      }
      goto LABEL_34;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_18;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v18 = *(void *)(a1 + 112);
  *uint64_t v4 = 42;
  unsigned int v19 = *(_DWORD *)(v18 + 20);
  v4[1] = v19;
  if (v19 > 0x7F) {
    uint64_t v20 = sub_188A9CC(v19, v4 + 1);
  }
  else {
    uint64_t v20 = v4 + 2;
  }
  uint64_t v4 = sub_1699FFC(v18, (unint64_t)v20, a3);
  if ((v6 & 8) == 0)
  {
LABEL_19:
    if ((v6 & 0x10) == 0) {
      goto LABEL_20;
    }
    goto LABEL_40;
  }
LABEL_34:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v21 = *(void *)(a1 + 120);
  *uint64_t v4 = 50;
  unsigned int v22 = *(_DWORD *)(v21 + 20);
  v4[1] = v22;
  if (v22 > 0x7F) {
    uint64_t v23 = sub_188A9CC(v22, v4 + 1);
  }
  else {
    uint64_t v23 = v4 + 2;
  }
  uint64_t v4 = sub_1699FFC(v21, (unint64_t)v23, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_20:
    if ((v6 & 0x20) == 0) {
      goto LABEL_52;
    }
    goto LABEL_46;
  }
LABEL_40:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v24 = *(void *)(a1 + 128);
  *uint64_t v4 = 58;
  unsigned int v25 = *(_DWORD *)(v24 + 20);
  v4[1] = v25;
  if (v25 > 0x7F) {
    int v26 = sub_188A9CC(v25, v4 + 1);
  }
  else {
    int v26 = v4 + 2;
  }
  uint64_t v4 = sub_169E8EC(v24, (unint64_t)v26, a3);
  if ((v6 & 0x20) != 0)
  {
LABEL_46:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v27 = *(void *)(a1 + 136);
    *uint64_t v4 = 66;
    unsigned int v28 = *(_DWORD *)(v27 + 20);
    v4[1] = v28;
    if (v28 > 0x7F) {
      unint64_t v29 = sub_188A9CC(v28, v4 + 1);
    }
    else {
      unint64_t v29 = v4 + 2;
    }
    uint64_t v4 = sub_169F028(v27, (unint64_t)v29, a3);
  }
LABEL_52:
  int v30 = *(_DWORD *)(a1 + 56);
  if (v30)
  {
    for (int j = 0; j != v30; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v32 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *uint64_t v4 = 74;
      unsigned int v33 = *(_DWORD *)(v32 + 20);
      v4[1] = v33;
      if (v33 > 0x7F) {
        uint64_t v34 = sub_188A9CC(v33, v4 + 1);
      }
      else {
        uint64_t v34 = v4 + 2;
      }
      uint64_t v4 = sub_169BD40(v32, v34, a3);
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v35 = *(void *)(a1 + 144);
    *uint64_t v4 = 82;
    unsigned int v36 = *(_DWORD *)(v35 + 20);
    v4[1] = v36;
    if (v36 > 0x7F) {
      int v37 = sub_188A9CC(v36, v4 + 1);
    }
    else {
      int v37 = v4 + 2;
    }
    uint64_t v4 = sub_1699FFC(v35, (unint64_t)v37, a3);
  }
  int v38 = *(_DWORD *)(a1 + 80);
  if (v38)
  {
    for (int k = 0; k != v38; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v40 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      *uint64_t v4 = 90;
      unsigned int v41 = *(_DWORD *)(v40 + 20);
      v4[1] = v41;
      if (v41 > 0x7F) {
        int v42 = sub_188A9CC(v41, v4 + 1);
      }
      else {
        int v42 = v4 + 2;
      }
      uint64_t v4 = sub_169CE1C(v40, v42, a3);
    }
  }
  uint64_t v43 = *(void *)(a1 + 8);
  if ((v43 & 1) == 0) {
    return v4;
  }
  unint64_t v45 = v43 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v45 + 31) < 0)
  {
    BOOL v46 = *(void **)(v45 + 8);
    uint64_t v47 = *(void *)(v45 + 16);
  }
  else
  {
    BOOL v46 = (void *)(v45 + 8);
    LODWORD(v47) = *(unsigned __int8 *)(v45 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v47)
  {
    uint64_t v48 = (int)v47;
    memcpy(v4, v46, (int)v47);
    v4 += v48;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v46, v47, v4);
}

uint64_t sub_16A0518(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1699950(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_169C01C(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    uint64_t v18 = (uint64_t *)(v17 + 8);
  }
  else {
    uint64_t v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_169D0E0(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  int v22 = *(_DWORD *)(a1 + 16);
  if ((v22 & 0x7F) == 0) {
    goto LABEL_30;
  }
  if (v22)
  {
    uint64_t v26 = sub_1698174(*(void *)(a1 + 96));
    v16 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v22 & 2) == 0)
    {
LABEL_24:
      if ((v22 & 4) == 0) {
        goto LABEL_25;
      }
      goto LABEL_34;
    }
  }
  else if ((v22 & 2) == 0)
  {
    goto LABEL_24;
  }
  uint64_t v27 = sub_169B598(*(void *)(a1 + 104));
  v16 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v22 & 4) == 0)
  {
LABEL_25:
    if ((v22 & 8) == 0) {
      goto LABEL_26;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t v28 = sub_169A1FC(*(void *)(a1 + 112));
  v16 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v22 & 8) == 0)
  {
LABEL_26:
    if ((v22 & 0x10) == 0) {
      goto LABEL_27;
    }
LABEL_36:
    uint64_t v30 = sub_169EAF4(*(void *)(a1 + 128));
    v16 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v22 & 0x20) == 0)
    {
LABEL_28:
      if ((v22 & 0x40) == 0) {
        goto LABEL_30;
      }
      goto LABEL_29;
    }
    goto LABEL_37;
  }
LABEL_35:
  uint64_t v29 = sub_169A1FC(*(void *)(a1 + 120));
  v16 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v22 & 0x10) != 0) {
    goto LABEL_36;
  }
LABEL_27:
  if ((v22 & 0x20) == 0) {
    goto LABEL_28;
  }
LABEL_37:
  uint64_t v31 = sub_169F1B4(*(void *)(a1 + 136));
  v16 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v22 & 0x40) != 0)
  {
LABEL_29:
    uint64_t v23 = sub_169A1FC(*(void *)(a1 + 144));
    v16 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_30:
  uint64_t v24 = *(void *)(a1 + 8);
  if (v24)
  {
    unint64_t v32 = v24 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v32 + 31) < 0) {
      uint64_t v33 = *(void *)(v32 + 16);
    }
    else {
      uint64_t v33 = *(unsigned __int8 *)(v32 + 31);
    }
    v16 += v33;
  }
  *(_DWORD *)(a1 + 20) = v16;
  return v16;
}

std::string *sub_16A07E0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_16B531C((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = sub_16B53A8(v3 + 2, v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2] - LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4((uint64_t)&v3[3], *(_DWORD *)(a2 + 80));
    uint64_t result = sub_16B5434(v3 + 3, v16, v15, v14, *(_DWORD *)v3[3].__r_.__value_.__r.__words[2] - LODWORD(v3[3].__r_.__value_.__r.__words[1]));
    int v17 = LODWORD(v3[3].__r_.__value_.__r.__words[1]) + v14;
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) = v17;
    uint64_t v18 = (int *)v3[3].__r_.__value_.__r.__words[2];
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 16);
  if ((v19 & 0x7F) == 0) {
    goto LABEL_75;
  }
  if (v19)
  {
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::pointer data = (std::string *)v3[4].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      int v22 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        int v22 = (void *)*v22;
      }
      std::string::pointer data = (std::string *)sub_16AEFE4((uint64_t)v22);
      v3[4].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 96)) {
      uint64_t v23 = *(uint64_t (****)())(a2 + 96);
    }
    else {
      uint64_t v23 = &off_2543BC8;
    }
    uint64_t result = sub_1104DD8(data, (uint64_t)v23);
  }
  if ((v19 & 2) != 0)
  {
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v24 = (std::string *)v3[4].__r_.__value_.__l.__size_;
    if (!v24)
    {
      std::string::size_type v25 = v3->__r_.__value_.__l.__size_;
      uint64_t v26 = (void *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
      if (v25) {
        uint64_t v26 = (void *)*v26;
      }
      sub_16AF2DC((uint64_t)v26);
      v3[4].__r_.__value_.__l.__size_ = (std::string::size_type)v24;
    }
    if (*(void *)(a2 + 104)) {
      uint64_t v27 = *(uint64_t (****)())(a2 + 104);
    }
    else {
      uint64_t v27 = &off_2543CD0;
    }
    uint64_t result = sub_169B6C0(v24, (uint64_t)v27);
  }
  if ((v19 & 4) != 0)
  {
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    uint64_t v28 = (std::string *)v3[4].__r_.__value_.__r.__words[2];
    if (!v28)
    {
      std::string::size_type v29 = v3->__r_.__value_.__l.__size_;
      uint64_t v30 = (void *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
      if (v29) {
        uint64_t v30 = (void *)*v30;
      }
      sub_16AF16C((uint64_t)v30);
      v3[4].__r_.__value_.__r.__words[2] = (std::string::size_type)v28;
    }
    if (*(void *)(a2 + 112)) {
      uint64_t v31 = *(uint64_t (****)())(a2 + 112);
    }
    else {
      uint64_t v31 = &off_2543C60;
    }
    uint64_t result = sub_169A2E8(v28, (uint64_t)v31);
    if ((v19 & 8) == 0)
    {
LABEL_31:
      if ((v19 & 0x10) == 0) {
        goto LABEL_32;
      }
LABEL_51:
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
      unsigned int v36 = (std::string *)v3[5].__r_.__value_.__l.__size_;
      if (!v36)
      {
        std::string::size_type v37 = v3->__r_.__value_.__l.__size_;
        int v38 = (void *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
        if (v37) {
          int v38 = (void *)*v38;
        }
        unsigned int v36 = (std::string *)sub_16AF5EC((uint64_t)v38);
        v3[5].__r_.__value_.__l.__size_ = (std::string::size_type)v36;
      }
      if (*(void *)(a2 + 128)) {
        uint64_t v39 = *(uint64_t (****)())(a2 + 128);
      }
      else {
        uint64_t v39 = &off_2543DE0;
      }
      uint64_t result = sub_169EBF8(v36, (uint64_t)v39);
      if ((v19 & 0x20) == 0)
      {
LABEL_33:
        if ((v19 & 0x40) == 0) {
          goto LABEL_75;
        }
        goto LABEL_67;
      }
      goto LABEL_59;
    }
  }
  else if ((v19 & 8) == 0)
  {
    goto LABEL_31;
  }
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
  unint64_t v32 = (std::string *)v3[5].__r_.__value_.__l.__data_;
  if (!v32)
  {
    std::string::size_type v33 = v3->__r_.__value_.__l.__size_;
    uint64_t v34 = (void *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
    if (v33) {
      uint64_t v34 = (void *)*v34;
    }
    sub_16AF16C((uint64_t)v34);
    v3[5].__r_.__value_.__r.__words[0] = (std::string::size_type)v32;
  }
  if (*(void *)(a2 + 120)) {
    uint64_t v35 = *(uint64_t (****)())(a2 + 120);
  }
  else {
    uint64_t v35 = &off_2543C60;
  }
  uint64_t result = sub_169A2E8(v32, (uint64_t)v35);
  if ((v19 & 0x10) != 0) {
    goto LABEL_51;
  }
LABEL_32:
  if ((v19 & 0x20) == 0) {
    goto LABEL_33;
  }
LABEL_59:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x20u;
  uint64_t v40 = (std::string *)v3[5].__r_.__value_.__r.__words[2];
  if (!v40)
  {
    std::string::size_type v41 = v3->__r_.__value_.__l.__size_;
    int v42 = (void *)(v41 & 0xFFFFFFFFFFFFFFFCLL);
    if (v41) {
      int v42 = (void *)*v42;
    }
    uint64_t v40 = (std::string *)sub_16AF668((uint64_t)v42);
    v3[5].__r_.__value_.__r.__words[2] = (std::string::size_type)v40;
  }
  if (*(void *)(a2 + 136)) {
    uint64_t v43 = *(uint64_t (****)())(a2 + 136);
  }
  else {
    uint64_t v43 = &off_2543E08;
  }
  uint64_t result = sub_169F284(v40, (uint64_t)v43);
  if ((v19 & 0x40) != 0)
  {
LABEL_67:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x40u;
    uint64_t v44 = (std::string *)v3[6].__r_.__value_.__l.__data_;
    if (!v44)
    {
      std::string::size_type v45 = v3->__r_.__value_.__l.__size_;
      BOOL v46 = (void *)(v45 & 0xFFFFFFFFFFFFFFFCLL);
      if (v45) {
        BOOL v46 = (void *)*v46;
      }
      sub_16AF16C((uint64_t)v46);
      v3[6].__r_.__value_.__r.__words[0] = (std::string::size_type)v44;
    }
    if (*(void *)(a2 + 144)) {
      uint64_t v47 = *(uint64_t (****)())(a2 + 144);
    }
    else {
      uint64_t v47 = &off_2543C60;
    }
    uint64_t result = sub_169A2E8(v44, (uint64_t)v47);
  }
LABEL_75:
  uint64_t v48 = *(void *)(a2 + 8);
  if (v48)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v48 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16A0B9C()
{
  return 1;
}

void *sub_16A0BA4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetection.Segment.ModelTrigger");
}

uint64_t sub_16A0BB4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2543EC8)
  {
    uint64_t v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_16A89CC(v6);
      operator delete();
    }
    int v7 = *(void **)(a1 + 40);
    if (v7)
    {
      sub_169F36C(v7);
      operator delete();
    }
    uint64_t v8 = *(void **)(a1 + 48);
    if (v8)
    {
      sub_16A7268(v8);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16A0CC0(uint64_t a1)
{
  sub_16A0BB4(a1);

  operator delete();
}

uint64_t sub_16A0CF8(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_15;
  }
  if (v2)
  {
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_11;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_11;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_11:
  uint64_t result = sub_16A0DE4(*(void *)(result + 32));
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = sub_169F578(*(void *)(v1 + 40));
  if ((v2 & 8) == 0) {
    goto LABEL_15;
  }
LABEL_13:
  uint64_t v4 = *(void *)(v1 + 48);
  char v5 = *(unsigned char *)(v4 + 8);
  uint64_t result = v4 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    uint64_t result = sub_188B4AC((uint64_t *)result);
  }
LABEL_15:
  if ((v2 & 0xF0) != 0)
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
    *(_DWORD *)(v1 + 72) = 0;
  }
  if ((v2 & 0x700) != 0) {
    *(void *)(v1 + 76) = 0;
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_16A0DE4(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(a1 + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_16A78C4(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 24) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 40);
  uint64_t v6 = *(unsigned int *)(a1 + 72);
  if ((int)v6 >= 1)
  {
    char v7 = (uint64_t *)(*(void *)(a1 + 80) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_16ADBF0(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 72) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 96);
  if ((int)v9 >= 1)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a1 + 104) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_16A8070(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 96) = 0;
  }
  char v13 = *(unsigned char *)(a1 + 8);
  int v12 = (uint64_t *)(a1 + 8);
  if (v13)
  {
    return sub_188B4AC(v12);
  }
  return result;
}

uint64_t sub_16A0EB8(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_16A0ED4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v61 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v61, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v61 + 1);
    unsigned int v9 = **(unsigned char **)v61;
    if ((char)**(unsigned char **)v61 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v61, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v61 + 2);
      }
    }
    *(void *)uint64_t v61 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_78;
        }
        v5 |= 0x10u;
        int v12 = (char *)(v8 + 1);
        uint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          int v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)uint64_t v61 = v12;
          *(void *)(a1 + 56) = v13;
          goto LABEL_86;
        }
        uint64_t v50 = sub_188C138((uint64_t)v8, v13);
        *(void *)uint64_t v61 = v50;
        *(void *)(a1 + 56) = v51;
        if (v50) {
          goto LABEL_86;
        }
        goto LABEL_118;
      case 2u:
        if (v9 != 16) {
          goto LABEL_78;
        }
        uint64_t v15 = (char *)(v8 + 1);
        unint64_t v16 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v18 = v16 + (v17 << 7);
        unint64_t v16 = (v18 - 128);
        if (v17 < 0)
        {
          *(void *)uint64_t v61 = sub_188C138((uint64_t)v8, (v18 - 128));
          if (!*(void *)v61) {
            goto LABEL_118;
          }
          unint64_t v16 = v52;
        }
        else
        {
          uint64_t v15 = (char *)(v8 + 2);
LABEL_18:
          *(void *)uint64_t v61 = v15;
        }
        if (v16 <= 0x21 && ((1 << v16) & 0x300030001) != 0)
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 64) = v16;
          goto LABEL_86;
        }
        if (*v7) {
          uint64_t v48 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v48 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v49 = 2;
        goto LABEL_94;
      case 4u:
        if (v9 != 32) {
          goto LABEL_78;
        }
        uint64_t v20 = (char *)(v8 + 1);
        unint64_t v16 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v21 = *v20;
        int v22 = v16 + (v21 << 7);
        unint64_t v16 = (v22 - 128);
        if (v21 < 0)
        {
          *(void *)uint64_t v61 = sub_188C138((uint64_t)v8, (v22 - 128));
          if (!*(void *)v61) {
            goto LABEL_118;
          }
          unint64_t v16 = v53;
        }
        else
        {
          uint64_t v20 = (char *)(v8 + 2);
LABEL_28:
          *(void *)uint64_t v61 = v20;
        }
        if (v16 <= 0x21 && ((1 << v16) & 0x300010001) != 0)
        {
          *(_DWORD *)(a1 + 16) |= 0x40u;
          *(_DWORD *)(a1 + 68) = v16;
          goto LABEL_86;
        }
        if (*v7) {
          uint64_t v48 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v48 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v49 = 4;
        goto LABEL_94;
      case 5u:
        if (v9 != 42) {
          goto LABEL_78;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v24 = *(void *)(a1 + 32);
        if (!v24)
        {
          std::string::size_type v25 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            std::string::size_type v25 = (void *)*v25;
          }
          uint64_t v24 = sub_16AFF7C((uint64_t)v25);
          *(void *)(a1 + 32) = v24;
          uint64_t v8 = *(unsigned __int8 **)v61;
        }
        uint64_t v26 = sub_16A1540(a3, v24, v8);
        goto LABEL_85;
      case 6u:
        if (v9 != 50) {
          goto LABEL_78;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v27 = *(void *)(a1 + 8);
        uint64_t v28 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
        if (v27) {
          uint64_t v28 = (uint64_t *)*v28;
        }
        std::string::size_type v29 = (std::string *)sub_1880F84((void *)(a1 + 24), v28);
        uint64_t v26 = (uint64_t)sub_188C244(v29, *(char **)v61, (uint64_t)a3);
        goto LABEL_85;
      case 7u:
        if (v9 != 56) {
          goto LABEL_78;
        }
        v5 |= 0x100u;
        uint64_t v30 = (char *)(v8 + 1);
        uint64_t v31 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_48;
        }
        int v32 = *v30;
        uint64_t v31 = v31 + (v32 << 7) - 128;
        if (v32 < 0)
        {
          uint64_t v54 = sub_188C138((uint64_t)v8, v31);
          *(void *)uint64_t v61 = v54;
          *(unsigned char *)(a1 + 76) = v55 != 0;
          if (!v54) {
            goto LABEL_118;
          }
        }
        else
        {
          uint64_t v30 = (char *)(v8 + 2);
LABEL_48:
          *(void *)uint64_t v61 = v30;
          *(unsigned char *)(a1 + 76) = v31 != 0;
        }
        goto LABEL_86;
      case 8u:
        if (v9 != 66) {
          goto LABEL_78;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v33 = *(void *)(a1 + 40);
        if (!v33)
        {
          uint64_t v34 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v34 = (void *)*v34;
          }
          uint64_t v33 = sub_16AF6E4((uint64_t)v34);
          *(void *)(a1 + 40) = v33;
          uint64_t v8 = *(unsigned __int8 **)v61;
        }
        uint64_t v26 = (uint64_t)sub_16A15D0(a3, v33, v8);
        goto LABEL_85;
      case 9u:
        if (v9 != 74) {
          goto LABEL_78;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v35 = *(void *)(a1 + 48);
        if (!v35)
        {
          unsigned int v36 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unsigned int v36 = (void *)*v36;
          }
          uint64_t v35 = sub_16AFDD8((uint64_t)v36);
          *(void *)(a1 + 48) = v35;
          uint64_t v8 = *(unsigned __int8 **)v61;
        }
        uint64_t v26 = (uint64_t)sub_16A1660(a3, v35, v8);
        goto LABEL_85;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_78;
        }
        v5 |= 0x80u;
        int v38 = (char *)(v8 + 1);
        LODWORD(v37) = *v8;
        if ((v37 & 0x80) == 0) {
          goto LABEL_65;
        }
        int v39 = *v38;
        uint64_t v37 = v37 + (v39 << 7) - 128;
        if (v39 < 0)
        {
          uint64_t v56 = sub_188C138((uint64_t)v8, v37);
          *(void *)uint64_t v61 = v56;
          *(_DWORD *)(a1 + 72) = v57;
          if (!v56) {
            goto LABEL_118;
          }
        }
        else
        {
          int v38 = (char *)(v8 + 2);
LABEL_65:
          *(void *)uint64_t v61 = v38;
          *(_DWORD *)(a1 + 72) = v37;
        }
        goto LABEL_86;
      case 0xBu:
        if (v9 != 88) {
          goto LABEL_78;
        }
        uint64_t v40 = (char *)(v8 + 1);
        unint64_t v16 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_70;
        }
        int v41 = *v40;
        int v42 = v16 + (v41 << 7);
        unint64_t v16 = (v42 - 128);
        if (v41 < 0)
        {
          *(void *)uint64_t v61 = sub_188C138((uint64_t)v8, (v42 - 128));
          if (!*(void *)v61) {
            goto LABEL_118;
          }
          unint64_t v16 = v58;
        }
        else
        {
          uint64_t v40 = (char *)(v8 + 2);
LABEL_70:
          *(void *)uint64_t v61 = v40;
        }
        if (v16 > 8)
        {
          if (*v7) {
            uint64_t v48 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v48 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v49 = 11;
LABEL_94:
          sub_188C020(v49, v16, v48);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x400u;
          *(_DWORD *)(a1 + 80) = v16;
        }
        goto LABEL_86;
      case 0xDu:
        if (v9 != 104) {
          goto LABEL_78;
        }
        v5 |= 0x200u;
        uint64_t v43 = (char *)(v8 + 1);
        uint64_t v44 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_77;
        }
        int v45 = *v43;
        uint64_t v44 = v44 + (v45 << 7) - 128;
        if (v45 < 0)
        {
          uint64_t v59 = sub_188C138((uint64_t)v8, v44);
          *(void *)uint64_t v61 = v59;
          *(unsigned char *)(a1 + 77) = v60 != 0;
          if (!v59) {
            goto LABEL_118;
          }
        }
        else
        {
          uint64_t v43 = (char *)(v8 + 2);
LABEL_77:
          *(void *)uint64_t v61 = v43;
          *(unsigned char *)(a1 + 77) = v44 != 0;
        }
        goto LABEL_86;
      default:
LABEL_78:
        if (v9) {
          BOOL v46 = (v9 & 7) == 4;
        }
        else {
          BOOL v46 = 1;
        }
        if (!v46)
        {
          if (*v7)
          {
            uint64_t v47 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v47 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v61;
          }
          uint64_t v26 = (uint64_t)sub_1885AC0(v9, v47, (char *)v8, a3);
LABEL_85:
          *(void *)uint64_t v61 = v26;
          if (!v26) {
            goto LABEL_118;
          }
LABEL_86:
          if (sub_11947B8((uint64_t)a3, (char **)v61, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_118:
        }
          *(void *)uint64_t v61 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v61;
    }
  }
}

uint64_t sub_16A1540(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16A8AA4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16A15D0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_169F6C4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16A1660(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16A731C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16A16F0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 56);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 64);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 68);
    *uint64_t v4 = 32;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 32);
    *uint64_t v4 = 42;
    unsigned int v17 = *(_DWORD *)(v16 + 112);
    v4[1] = v17;
    if (v17 > 0x7F) {
      int v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      int v18 = v4 + 2;
    }
    uint64_t v4 = sub_16A9050(v16, v18, a3);
    if ((v6 & 1) == 0)
    {
LABEL_24:
      if ((v6 & 0x100) == 0) {
        goto LABEL_25;
      }
      goto LABEL_36;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_24;
  }
  uint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x100) == 0)
  {
LABEL_25:
    if ((v6 & 4) == 0) {
      goto LABEL_26;
    }
    goto LABEL_39;
  }
LABEL_36:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v19 = *(unsigned char *)(a1 + 76);
  *uint64_t v4 = 56;
  v4[1] = v19;
  v4 += 2;
  if ((v6 & 4) == 0)
  {
LABEL_26:
    if ((v6 & 8) == 0) {
      goto LABEL_27;
    }
    goto LABEL_45;
  }
LABEL_39:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v20 = *(void *)(a1 + 40);
  *uint64_t v4 = 66;
  unsigned int v21 = *(_DWORD *)(v20 + 20);
  v4[1] = v21;
  if (v21 > 0x7F) {
    int v22 = sub_188A9CC(v21, v4 + 1);
  }
  else {
    int v22 = v4 + 2;
  }
  uint64_t v4 = sub_169FFF8(v20, (unint64_t)v22, a3);
  if ((v6 & 8) == 0)
  {
LABEL_27:
    if ((v6 & 0x80) == 0) {
      goto LABEL_57;
    }
    goto LABEL_51;
  }
LABEL_45:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v23 = *(void *)(a1 + 48);
  *uint64_t v4 = 74;
  unsigned int v24 = *(_DWORD *)(v23 + 20);
  v4[1] = v24;
  if (v24 > 0x7F) {
    std::string::size_type v25 = sub_188A9CC(v24, v4 + 1);
  }
  else {
    std::string::size_type v25 = v4 + 2;
  }
  uint64_t v4 = sub_16A7598(v23, v25, a3);
  if ((v6 & 0x80) != 0)
  {
LABEL_51:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v26 = *(int *)(a1 + 72);
    *uint64_t v4 = 80;
    v4[1] = v26;
    if (v26 > 0x7F)
    {
      v4[1] = v26 | 0x80;
      unint64_t v27 = v26 >> 7;
      v4[2] = v26 >> 7;
      v4 += 3;
      if (v26 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v28 = v27 >> 14;
          v27 >>= 7;
          *v4++ = v27;
        }
        while (v28);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_57:
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v29 = *(int *)(a1 + 80);
    *uint64_t v4 = 88;
    v4[1] = v29;
    if (v29 > 0x7F)
    {
      v4[1] = v29 | 0x80;
      unint64_t v30 = v29 >> 7;
      v4[2] = v29 >> 7;
      v4 += 3;
      if (v29 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v31 = v30 >> 14;
          v30 >>= 7;
          *v4++ = v30;
        }
        while (v31);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v32 = *(unsigned char *)(a1 + 77);
    *uint64_t v4 = 104;
    v4[1] = v32;
    v4 += 2;
  }
  uint64_t v33 = *(void *)(a1 + 8);
  if ((v33 & 1) == 0) {
    return v4;
  }
  unint64_t v35 = v33 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v35 + 31) < 0)
  {
    unsigned int v36 = *(void **)(v35 + 8);
    uint64_t v37 = *(void *)(v35 + 16);
  }
  else
  {
    unsigned int v36 = (void *)(v35 + 8);
    LODWORD(v37) = *(unsigned __int8 *)(v35 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v37)
  {
    uint64_t v38 = (int)v37;
    memcpy(v4, v36, (int)v37);
    v4 += v38;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v36, v37, v4);
}

uint64_t sub_16A1BE8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_32;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_16A9344(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    uint64_t v8 = sub_16A0518(*(void *)(a1 + 40));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_12:
      if ((v2 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_19;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v9 = sub_16A7768(*(void *)(a1 + 48));
  v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_13:
    if ((v2 & 0x20) == 0) {
      goto LABEL_14;
    }
    goto LABEL_20;
  }
LABEL_19:
  v3 += ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_14:
    if ((v2 & 0x40) == 0) {
      goto LABEL_15;
    }
    goto LABEL_24;
  }
LABEL_20:
  int v10 = *(_DWORD *)(a1 + 64);
  if (v10 < 0) {
    uint64_t v11 = 11;
  }
  else {
    uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v11;
  if ((v2 & 0x40) == 0)
  {
LABEL_15:
    if ((v2 & 0x80) == 0) {
      goto LABEL_32;
    }
    goto LABEL_28;
  }
LABEL_24:
  int v12 = *(_DWORD *)(a1 + 68);
  if (v12 < 0) {
    uint64_t v13 = 11;
  }
  else {
    uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v13;
  if ((v2 & 0x80) != 0)
  {
LABEL_28:
    int v14 = *(_DWORD *)(a1 + 72);
    if (v14 < 0) {
      uint64_t v15 = 11;
    }
    else {
      uint64_t v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v15;
  }
LABEL_32:
  if ((v2 & 0x700) != 0)
  {
    uint64_t v16 = v3 + 2;
    if ((v2 & 0x100) == 0) {
      uint64_t v16 = v3;
    }
    if ((v2 & 0x200) != 0) {
      uint64_t v3 = v16 + 2;
    }
    else {
      uint64_t v3 = v16;
    }
    if ((v2 & 0x400) != 0)
    {
      int v17 = *(_DWORD *)(a1 + 80);
      uint64_t v18 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v17 >= 0) {
        uint64_t v19 = v18;
      }
      else {
        uint64_t v19 = 11;
      }
      v3 += v19;
    }
  }
  uint64_t v20 = *(void *)(a1 + 8);
  if (v20)
  {
    unint64_t v22 = v20 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v22 + 31) < 0) {
      uint64_t v23 = *(void *)(v22 + 16);
    }
    else {
      uint64_t v23 = *(unsigned __int8 *)(v22 + 31);
    }
    v3 += v23;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_16A1E60(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_33;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    int v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        int v12 = (void *)*v12;
      }
      int v10 = (std::string *)sub_16AFF7C((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_2544120;
    }
    uint64_t result = sub_16A2084(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_41;
    }
LABEL_33:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    int v14 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
    if (!v14)
    {
      std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      int v14 = (std::string *)sub_16AF6E4((uint64_t)v16);
      v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v14;
    }
    if (*(void *)(a2 + 40)) {
      int v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      int v17 = &off_2543E30;
    }
    uint64_t result = sub_16A07E0(v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_49;
    }
LABEL_41:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::pointer data = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type v19 = v3->__r_.__value_.__l.__size_;
      uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        uint64_t v20 = (void *)*v20;
      }
      std::string::pointer data = (std::string *)sub_16AFDD8((uint64_t)v20);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 48)) {
      unsigned int v21 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      unsigned int v21 = &off_25440F0;
    }
    uint64_t result = sub_11E3E70(data, (uint64_t)v21);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_50;
    }
LABEL_49:
    v3[2].__r_.__value_.__l.__size_ = *(void *)(a2 + 56);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_51;
    }
LABEL_50:
    LODWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      LODWORD(v3[3].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 72);
      goto LABEL_11;
    }
LABEL_51:
    HIDWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 68);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v4 & 0x700) == 0) {
    goto LABEL_18;
  }
  if ((v4 & 0x100) == 0)
  {
    if ((v4 & 0x200) == 0) {
      goto LABEL_15;
    }
LABEL_54:
    v3[3].__r_.__value_.__s.__data_[5] = *(unsigned char *)(a2 + 77);
    if ((v4 & 0x400) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  v3[3].__r_.__value_.__s.__data_[4] = *(unsigned char *)(a2 + 76);
  if ((v4 & 0x200) != 0) {
    goto LABEL_54;
  }
LABEL_15:
  if ((v4 & 0x400) != 0) {
LABEL_16:
  }
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 80);
LABEL_17:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
LABEL_18:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_16A2084(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_16B56D0((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    int v10 = (const std::string **)(*(void *)(a2 + 56) + 8);
    std::string::size_type v11 = (std::string **)sub_188CCE4((uint64_t)&v3[1].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 48));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1].__r_.__value_.__r.__words[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    int v12 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v9;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__l.__size_;
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 72);
  if (v14)
  {
    std::string::size_type v15 = (uint64_t *)(*(void *)(a2 + 80) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4((uint64_t)&v3[2].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 72));
    uint64_t result = (std::string *)sub_16B574C((uint64_t *)&v3[2].__r_.__value_.__r.__words[2], v16, v15, v14, *(_DWORD *)v3[3].__r_.__value_.__l.__size_ - LODWORD(v3[3].__r_.__value_.__l.__data_));
    int v17 = LODWORD(v3[3].__r_.__value_.__l.__data_) + v14;
    LODWORD(v3[3].__r_.__value_.__l.__data_) = v17;
    uint64_t v18 = (int *)v3[3].__r_.__value_.__l.__size_;
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 96);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 104) + 8);
    unsigned int v21 = (std::string **)sub_188CCE4((uint64_t)&v3[3].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 96));
    uint64_t result = sub_16B57C8((std::string *)((char *)v3 + 88), v21, v20, v19, *(_DWORD *)v3[4].__r_.__value_.__l.__size_ - LODWORD(v3[4].__r_.__value_.__l.__data_));
    int v22 = LODWORD(v3[4].__r_.__value_.__l.__data_) + v19;
    LODWORD(v3[4].__r_.__value_.__l.__data_) = v22;
    uint64_t v23 = (int *)v3[4].__r_.__value_.__l.__size_;
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  uint64_t v24 = *(void *)(a2 + 8);
  if (v24)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v24 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16A2280()
{
  return 1;
}

void *sub_16A2288@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetection.Segment");
}

void *sub_16A2298(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16A230C(void *a1)
{
  sub_16A2298(a1);

  operator delete();
}

uint64_t *sub_16A2344(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_16A2354(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v12 = a2;
  int v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      int v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_16A2454(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_16A24EC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_16A2520(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16A253C()
{
  return 1;
}

void *sub_16A2544@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetection.ClosureClassification.Soft");
}

void *sub_16A2554(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16A25C8(void *a1)
{
  sub_16A2554(a1);

  operator delete();
}

uint64_t *sub_16A2600(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_16A2610(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v12 = a2;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      int v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_16A2710(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_16A27A8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_16A27DC(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16A27F8()
{
  return 1;
}

void *sub_16A2800@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetection.ClosureClassification.Hard");
}

uint64_t sub_16A2810(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2543F50)
  {
    uint64_t v5 = *(void **)(a1 + 24);
    if (v5)
    {
      sub_16A2298(v5);
      operator delete();
    }
    unint64_t v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_16A2554(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16A28E0(uint64_t a1)
{
  sub_16A2810(a1);

  operator delete();
}

uint64_t sub_16A2918(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2)
    {
      uint64_t v3 = *(void *)(result + 24);
      char v4 = *(unsigned char *)(v3 + 8);
      uint64_t result = v3 + 8;
      if (v4) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v5 = *(void *)(v1 + 32);
      char v6 = *(unsigned char *)(v5 + 8);
      uint64_t result = v5 + 8;
      if (v6) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
  }
  char v8 = *(unsigned char *)(v1 + 8);
  uint64_t v7 = v1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

char *sub_16A2998(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    return v19;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v19 + 2;
      }
    }
    int v19 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 32);
    if (!v15)
    {
      uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v15 = sub_16AF8A4((uint64_t)v16);
      *(void *)(a1 + 32) = v15;
      uint64_t v7 = v19;
    }
    int v14 = sub_16A2BE8(a3, v15, (unsigned __int8 *)v7);
LABEL_31:
    int v19 = v14;
    if (!v14) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      return v19;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void *)(a1 + 24);
    if (!v17)
    {
      uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v18 = (void *)*v18;
      }
      uint64_t v17 = sub_16AF82C((uint64_t)v18);
      *(void *)(a1 + 24) = v17;
      uint64_t v7 = v19;
    }
    int v14 = sub_16A2B58(a3, v17, (unsigned __int8 *)v7);
    goto LABEL_31;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v19;
    }
    int v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_31;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v19;
  }
  return 0;
}

char *sub_16A2B58(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16A2354(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16A2BE8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16A2610(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16A2C78(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 16);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_16A2454(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    *char v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 16);
    v4[1] = v11;
    if (v11 > 0x7F) {
      BOOL v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      BOOL v12 = v4 + 2;
    }
    char v4 = sub_16A2710(v10, v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_16A2DF8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(v3 + 8);
  if (v4)
  {
    unint64_t v13 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v5 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v13 + 31);
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  *(_DWORD *)(v3 + 16) = v5;
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    uint64_t v6 = *(void *)(a1 + 32);
    uint64_t v7 = *(void *)(v6 + 8);
    if (v7)
    {
      unint64_t v14 = v7 & 0xFFFFFFFFFFFFFFFCLL;
      if (*(char *)(v14 + 31) < 0) {
        uint64_t v8 = *(void *)(v14 + 16);
      }
      else {
        uint64_t v8 = *(unsigned __int8 *)(v14 + 31);
      }
    }
    else
    {
      uint64_t v8 = 0;
    }
    *(_DWORD *)(v6 + 16) = v8;
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_16A2EFC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t result = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!result)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v6 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v6 = (void *)*v6;
        }
        uint64_t result = (std::string *)sub_16AF82C((uint64_t)v6);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)result;
      }
      uint64_t v7 = *(uint64_t (****)())(a2 + 24);
      if (!v7) {
        uint64_t v7 = &off_2543F20;
      }
      unint64_t v8 = (unint64_t)v7[1];
      if (v8) {
        uint64_t result = sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v4 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      uint64_t result = (std::string *)v3[1].__r_.__value_.__l.__size_;
      if (!result)
      {
        std::string::size_type v9 = v3->__r_.__value_.__l.__size_;
        uint64_t v10 = (void *)(v9 & 0xFFFFFFFFFFFFFFFCLL);
        if (v9) {
          uint64_t v10 = (void *)*v10;
        }
        uint64_t result = (std::string *)sub_16AF8A4((uint64_t)v10);
        v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)result;
      }
      unint64_t v11 = *(uint64_t (****)())(a2 + 32);
      if (!v11) {
        unint64_t v11 = &off_2543F38;
      }
      unint64_t v12 = (unint64_t)v11[1];
      if (v12) {
        uint64_t result = sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16A3028()
{
  return 1;
}

void *sub_16A3030@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetection.ClosureClassification");
}

uint64_t sub_16A3040(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16A30E0(uint64_t a1)
{
  sub_16A3040(a1);

  operator delete();
}

uint64_t sub_16A3118(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_16A3160(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)uint64_t v24 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
    unint64_t v14 = (void *)sub_188C244(v17, *(char **)v24, (uint64_t)a3);
LABEL_24:
    *(void *)uint64_t v24 = v14;
    if (!v14) {
      goto LABEL_43;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 >> 3 == 1 && v8 == 8)
  {
    uint64_t v18 = v7 + 1;
    unint64_t v19 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v21 = v19 + (v20 << 7);
    unint64_t v19 = (v21 - 128);
    if (v20 < 0)
    {
      *(void *)uint64_t v24 = sub_188C138((uint64_t)v7, (v21 - 128));
      if (!*(void *)v24) {
        goto LABEL_43;
      }
      unint64_t v19 = v22;
    }
    else
    {
      uint64_t v18 = v7 + 2;
LABEL_29:
      *(void *)uint64_t v24 = v18;
    }
    if (v19 > 5)
    {
      if (*v6) {
        uint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v19, v23);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v19;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v24;
    }
    unint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_24;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_43:
  *(void *)uint64_t v24 = 0;
  return *(void *)v24;
}

unsigned char *sub_16A3370(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_16A34B8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_13;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    int v6 = *(_DWORD *)(a1 + 32);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v7;
  }
LABEL_13:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_16A3584()
{
  return 1;
}

void *sub_16A358C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetection.Suppression.SegmentSuppression");
}

uint64_t sub_16A359C(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16A363C(uint64_t a1)
{
  sub_16A359C(a1);

  operator delete();
}

uint64_t sub_16A3674(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_16A36BC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)uint64_t v24 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
    uint64_t v14 = (void *)sub_188C244(v17, *(char **)v24, (uint64_t)a3);
LABEL_24:
    *(void *)uint64_t v24 = v14;
    if (!v14) {
      goto LABEL_43;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 >> 3 == 1 && v8 == 8)
  {
    uint64_t v18 = v7 + 1;
    unint64_t v19 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v21 = v19 + (v20 << 7);
    unint64_t v19 = (v21 - 128);
    if (v20 < 0)
    {
      *(void *)uint64_t v24 = sub_188C138((uint64_t)v7, (v21 - 128));
      if (!*(void *)v24) {
        goto LABEL_43;
      }
      unint64_t v19 = v22;
    }
    else
    {
      uint64_t v18 = v7 + 2;
LABEL_29:
      *(void *)uint64_t v24 = v18;
    }
    if (v19 > 5)
    {
      if (*v6) {
        uint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v19, v23);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v19;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v24;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_24;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_43:
  *(void *)uint64_t v24 = 0;
  return *(void *)v24;
}

unsigned char *sub_16A38CC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_16A3A14(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_13;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    int v6 = *(_DWORD *)(a1 + 32);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v7;
  }
LABEL_13:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_16A3AE0()
{
  return 1;
}

void *sub_16A3AE8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetection.Suppression.ClusterSuppression");
}

uint64_t sub_16A3AF8(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_16B4F1C((void *)(a1 + 48));
  sub_16B4E9C((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16A3BB0(uint64_t a1)
{
  sub_16A3AF8(a1);

  operator delete();
}

uint64_t sub_16A3BE8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_16A3674(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    int v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_16A3118(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    unint64_t v8 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
    }
  }
  char v10 = *(unsigned char *)(v1 + 8);
  uint64_t v9 = v1 + 8;
  *(_DWORD *)(v9 + 72) = 0;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

uint64_t sub_16A3CC4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v35 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
    return *(void *)v35;
  }
  int v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (char *)(*(void *)v35 + 1);
    unsigned int v8 = **(unsigned char **)v35;
    if ((char)**(unsigned char **)v35 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v35, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v35 + 2);
      }
    }
    *(void *)unint64_t v35 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_40;
        }
        uint64_t v11 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          *(void *)unint64_t v35 = sub_188C138((uint64_t)v7, (v14 - 128));
          if (!*(void *)v35) {
            return 0;
          }
          unint64_t v12 = v33;
        }
        else
        {
          uint64_t v11 = v7 + 2;
LABEL_13:
          *(void *)unint64_t v35 = v11;
        }
        if (v12 > 3)
        {
          if (*v6) {
            uint64_t v34 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v12, v34);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          *(_DWORD *)(a1 + 80) = v12;
        }
        goto LABEL_48;
      case 2u:
        if (v8 != 18) {
          goto LABEL_40;
        }
        uint64_t v15 = v7 - 1;
        while (1)
        {
          uint64_t v16 = (unsigned __int8 *)(v15 + 1);
          *(void *)unint64_t v35 = v15 + 1;
          uint64_t v17 = *(_DWORD **)(a1 + 40);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 32) = v18 + 1;
            uint64_t v19 = *(void *)&v17[2 * v18 + 2];
          }
          else
          {
            uint64_t v20 = sub_16AFA20(*(void *)(a1 + 24));
            uint64_t v19 = sub_188CDC8(a1 + 24, v20);
            uint64_t v16 = *(unsigned __int8 **)v35;
          }
          uint64_t v15 = (char *)sub_16A402C(a3, v19, v16);
          *(void *)unint64_t v35 = v15;
          if (!v15) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
            goto LABEL_48;
          }
        }
      case 3u:
        if (v8 != 26) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v21 = *(void *)(a1 + 8);
        unint64_t v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          unint64_t v22 = (uint64_t *)*v22;
        }
        uint64_t v23 = (std::string *)sub_1880F84((void *)(a1 + 72), v22);
        uint64_t v24 = (void *)sub_188C244(v23, *(char **)v35, (uint64_t)a3);
        goto LABEL_47;
      case 4u:
        if (v8 != 34) {
          goto LABEL_40;
        }
        std::string::size_type v25 = v7 - 1;
        while (1)
        {
          unint64_t v26 = (unsigned __int8 *)(v25 + 1);
          *(void *)unint64_t v35 = v25 + 1;
          unint64_t v27 = *(_DWORD **)(a1 + 64);
          if (v27 && (uint64_t v28 = *(int *)(a1 + 56), (int)v28 < *v27))
          {
            *(_DWORD *)(a1 + 56) = v28 + 1;
            uint64_t v29 = *(void *)&v27[2 * v28 + 2];
          }
          else
          {
            uint64_t v30 = sub_16AF998(*(void *)(a1 + 48));
            uint64_t v29 = sub_188CDC8(a1 + 48, v30);
            unint64_t v26 = *(unsigned __int8 **)v35;
          }
          std::string::size_type v25 = (char *)sub_16A40BC(a3, v29, v26);
          *(void *)unint64_t v35 = v25;
          if (!v25) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v25 || *v25 != 34) {
            goto LABEL_48;
          }
        }
      default:
LABEL_40:
        if (v8) {
          BOOL v31 = (v8 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if (*v6)
          {
            char v32 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            char v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = *(char **)v35;
          }
          uint64_t v24 = sub_1885AC0(v8, v32, v7, a3);
LABEL_47:
          *(void *)unint64_t v35 = v24;
          if (!v24) {
            return 0;
          }
LABEL_48:
          if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
            return *(void *)v35;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v35;
    }
  }
}

uint64_t sub_16A402C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16A36BC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_16A40BC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16A3160(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_16A414C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 80);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        int v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        int v14 = v4 + 2;
      }
      uint64_t v4 = sub_16A38CC(v12, (unint64_t)v14, a3);
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v15 = *(_DWORD *)(a1 + 56);
  if (v15)
  {
    for (int j = 0; j != v15; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v17 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *uint64_t v4 = 34;
      unsigned int v18 = *(_DWORD *)(v17 + 20);
      v4[1] = v18;
      if (v18 > 0x7F) {
        uint64_t v19 = sub_188A9CC(v18, v4 + 1);
      }
      else {
        uint64_t v19 = v4 + 2;
      }
      uint64_t v4 = sub_16A3370(v17, (unint64_t)v19, a3);
    }
  }
  uint64_t v20 = *(void *)(a1 + 8);
  if ((v20 & 1) == 0) {
    return v4;
  }
  unint64_t v22 = v20 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v22 + 31) < 0)
  {
    uint64_t v23 = *(void **)(v22 + 8);
    uint64_t v24 = *(void *)(v22 + 16);
  }
  else
  {
    uint64_t v23 = (void *)(v22 + 8);
    LODWORD(v24) = *(unsigned __int8 *)(v22 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v24)
  {
    uint64_t v25 = (int)v24;
    memcpy(v4, v23, (int)v24);
    v4 += v25;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v23, v24, v4);
}

uint64_t sub_16A43B4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_16A3A14(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    uint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    uint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_16A34B8(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 3) != 0)
  {
    if (v15)
    {
      unint64_t v16 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
      uint64_t v18 = *(void *)(v16 + 8);
      if ((v17 & 0x80u) == 0) {
        uint64_t v18 = v17;
      }
      v9 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v15 & 2) != 0)
    {
      int v19 = *(_DWORD *)(a1 + 80);
      uint64_t v20 = ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v19 >= 0) {
        uint64_t v21 = v20;
      }
      else {
        uint64_t v21 = 11;
      }
      v9 += v21;
    }
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if (v22)
  {
    unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v24 + 31) < 0) {
      uint64_t v25 = *(void *)(v24 + 16);
    }
    else {
      uint64_t v25 = *(unsigned __int8 *)(v24 + 31);
    }
    v9 += v25;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

std::string *sub_16A4538(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_16B54C0((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = (std::string *)sub_16B553C((uint64_t *)&v3[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2]- LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 3) != 0)
  {
    if (v14)
    {
      int v15 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v17 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v17 = (uint64_t *)*v17;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[3], v15, v17);
    }
    if ((v14 & 2) != 0) {
      LODWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 80);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v14;
  }
  uint64_t v18 = *(void *)(a2 + 8);
  if (v18)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v18 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16A46C4()
{
  return 1;
}

void *sub_16A46CC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetection.Suppression");
}

void *sub_16A46DC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16A4758(void *a1)
{
  sub_16A46DC(a1);

  operator delete();
}

uint64_t sub_16A4790(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 44) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_16A47B8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v28 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v28, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v28 + 1;
    unsigned int v9 = *v28;
    if (*v28 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v28, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v28 + 2;
      }
    }
    uint64_t v28 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 != 3) {
      break;
    }
    if (v9 == 26)
    {
      unint64_t v16 = sub_188C2BC((unsigned int *)(a1 + 24), (unsigned __int8 *)v8, (uint64_t)a3);
      goto LABEL_23;
    }
    if (v9 != 24) {
      goto LABEL_14;
    }
    int v27 = sub_110DB5C((uint64_t *)&v28);
    sub_1632D50(a1, v27);
    if (!v28) {
      goto LABEL_46;
    }
LABEL_34:
    if (sub_11947B8((uint64_t)a3, &v28, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 2)
  {
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v18 = v8 + 1;
    LODWORD(v17) = *v8;
    if ((v17 & 0x80) == 0) {
      goto LABEL_29;
    }
    int v19 = *v18;
    uint64_t v17 = v17 + (v19 << 7) - 128;
    if ((v19 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      uint64_t v28 = v18;
      *(_DWORD *)(a1 + 48) = v17;
      goto LABEL_34;
    }
    uint64_t v23 = (char *)sub_188C138((uint64_t)v8, v17);
    uint64_t v28 = v23;
    *(_DWORD *)(a1 + 48) = v24;
    if (!v23) {
      goto LABEL_46;
    }
    goto LABEL_34;
  }
  if (v12 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v21 = v8 + 1;
    LODWORD(v20) = *v8;
    if ((v20 & 0x80) == 0) {
      goto LABEL_33;
    }
    int v22 = *v21;
    uint64_t v20 = v20 + (v22 << 7) - 128;
    if ((v22 & 0x80000000) == 0)
    {
      uint64_t v21 = v8 + 2;
LABEL_33:
      uint64_t v28 = v21;
      *(_DWORD *)(a1 + 44) = v20;
      goto LABEL_34;
    }
    uint64_t v25 = (char *)sub_188C138((uint64_t)v8, v20);
    uint64_t v28 = v25;
    *(_DWORD *)(a1 + 44) = v26;
    if (!v25) {
      goto LABEL_46;
    }
    goto LABEL_34;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      int v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v28;
    }
    unint64_t v16 = sub_1885AC0(v9, v15, v8, a3);
LABEL_23:
    uint64_t v28 = (char *)v16;
    if (!v16) {
      goto LABEL_46;
    }
    goto LABEL_34;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_46:
  uint64_t v28 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v28;
}

unsigned char *sub_16A49F4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 44);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 48);
    *int v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  unsigned int v13 = *(_DWORD *)(a1 + 40);
  if ((int)v13 >= 1)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    *int v4 = 26;
    BOOL v14 = v4 + 1;
    if (v13 >= 0x80)
    {
      do
      {
        *v14++ = v13 | 0x80;
        unsigned int v26 = v13 >> 14;
        v13 >>= 7;
      }
      while (v26);
      int v4 = v14 - 1;
    }
    v4 += 2;
    unsigned char *v14 = v13;
    int v15 = *(int **)(a1 + 32);
    unint64_t v16 = &v15[*(int *)(a1 + 24)];
    do
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v18 = *v15++;
      unint64_t v17 = v18;
      *int v4 = v18;
      if (v18 > 0x7F)
      {
        *int v4 = v17 | 0x80;
        unint64_t v19 = v17 >> 7;
        v4[1] = v17 >> 7;
        v4 += 2;
        if (v17 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v20 = v19 >> 14;
            v19 >>= 7;
            *v4++ = v19;
          }
          while (v20);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v15 < v16);
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return v4;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    int v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    int v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v25)
  {
    uint64_t v27 = (int)v25;
    memcpy(v4, v24, (int)v25);
    v4 += v27;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v24, v25, v4);
}

uint64_t sub_16A4C90(uint64_t a1)
{
  uint64_t v2 = sub_188D498((unsigned int *)(a1 + 24));
  if (v2)
  {
    int v3 = v2;
    if ((v2 & 0x80000000) != 0) {
      uint64_t v4 = 11;
    }
    else {
      uint64_t v4 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    int v3 = 0;
    uint64_t v4 = 0;
  }
  *(_DWORD *)(a1 + 40) = v3;
  uint64_t result = v4 + v2;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 3) != 0)
  {
    if (v6)
    {
      int v7 = *(_DWORD *)(a1 + 44);
      if (v7 < 0) {
        uint64_t v8 = 11;
      }
      else {
        uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      result += v8;
    }
    if ((v6 & 2) != 0)
    {
      int v9 = *(_DWORD *)(a1 + 48);
      if (v9 < 0) {
        uint64_t v10 = 11;
      }
      else {
        uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      result += v10;
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    result += v13;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_16A4DA0(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8) {
      HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
    }
    if ((v8 & 2) != 0) {
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v8;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16A4E74()
{
  return 1;
}

void *sub_16A4E7C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetection.Pathlet.CountInfo.CountHistory");
}

uint64_t sub_16A4E8C(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2544008)
  {
    int v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_16A46DC(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16A4F44(uint64_t a1)
{
  sub_16A4E8C(a1);

  operator delete();
}

uint64_t sub_16A4F7C(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_16A4790(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_16A4FD8(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    int v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        int v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        int v6 = v16 + 2;
      }
    }
    unint64_t v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13)
    {
      BOOL v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        BOOL v14 = (void *)*v14;
      }
      uint64_t v13 = sub_16AFB5C((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      int v6 = v16;
    }
    unint64_t v12 = sub_16A5130(a3, v13, (unsigned __int8 *)v6);
LABEL_20:
    unint64_t v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v6 = v16;
    }
    unint64_t v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

char *sub_16A5130(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16A47B8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_16A51C0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *int v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    int v4 = sub_16A49F4(v6, (unint64_t)v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_16A52D0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_16A4C90(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_16A5358(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unsigned int v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unsigned int v7 = (void *)*v7;
      }
      std::string::pointer data = (std::string *)sub_16AFB5C((uint64_t)v7);
      v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_2543FD0;
    }
    uint64_t result = sub_16A4DA0(data, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16A5400()
{
  return 1;
}

void *sub_16A5408@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetection.Pathlet.CountInfo");
}

uint64_t sub_16A5418(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2544028)
  {
    uint64_t v5 = *(void *)(a1 + 48);
    if (v5)
    {
      sub_16A4E8C(v5);
      operator delete();
    }
    if (*(void *)(a1 + 56))
    {
      sub_154ECDC();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_16B4F9C((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16A54F4(uint64_t a1)
{
  sub_16A5418(a1);

  operator delete();
}

uint64_t sub_16A552C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_16A0CF8(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if (v5) {
      uint64_t result = sub_16A4F7C(*(void *)(v1 + 48));
    }
    if ((v5 & 2) != 0) {
      uint64_t result = sub_154EB10(*(void *)(v1 + 56));
    }
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(void *)(v6 + 56) = 0;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_16A55D4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 9) {
          goto LABEL_33;
        }
        v5 |= 4u;
        *(void *)(a1 + 64) = *(void *)v8;
        uint64_t v25 = v8 + 8;
        goto LABEL_41;
      case 2u:
        if (v9 != 18) {
          goto LABEL_33;
        }
        unint64_t v12 = v8 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v25 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 40);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 32), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 32) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            sub_16AF798(*(void *)(a1 + 24));
            uint64_t v16 = sub_188CDC8(a1 + 24, v17);
            uint64_t v13 = (unsigned __int8 *)v25;
          }
          unint64_t v12 = (char *)sub_16A588C(a3, v16, v13);
          uint64_t v25 = v12;
          if (!v12) {
            goto LABEL_46;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 18) {
            goto LABEL_41;
          }
        }
      case 3u:
        if (v9 != 26) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        unint64_t v18 = *(void **)(a1 + 48);
        if (!v18)
        {
          unint64_t v19 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v19 = (void *)*v19;
          }
          unint64_t v18 = sub_16AFC00((uint64_t)v19);
          *(void *)(a1 + 48) = v18;
          unsigned int v8 = v25;
        }
        unint64_t v20 = sub_16A591C(a3, (uint64_t)v18, (unsigned __int8 *)v8);
        goto LABEL_40;
      case 4u:
        if (v9 != 34) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v21 = *(void **)(a1 + 56);
        if (!v21)
        {
          int v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v22 = (void *)*v22;
          }
          uint64_t v21 = sub_154F260((uint64_t)v22);
          *(void *)(a1 + 56) = v21;
          unsigned int v8 = v25;
        }
        unint64_t v20 = (char *)sub_11AA33C(a3, (uint64_t)v21, (unsigned __int8 *)v8);
        goto LABEL_40;
      default:
LABEL_33:
        if (v9) {
          BOOL v23 = (v9 & 7) == 4;
        }
        else {
          BOOL v23 = 1;
        }
        if (!v23)
        {
          if (*v7)
          {
            int v24 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = v25;
          }
          unint64_t v20 = (char *)sub_1885AC0(v9, v24, v8, a3);
LABEL_40:
          uint64_t v25 = v20;
          if (!v20) {
            goto LABEL_46;
          }
LABEL_41:
          if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_46:
        }
          uint64_t v25 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v25;
    }
  }
}

uint64_t sub_16A588C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16A0ED4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16A591C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16A4FD8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_16A59AC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 64);
    *uint64_t v4 = 9;
    *(void *)(v4 + 1) = v7;
    v4 += 9;
  }
  int v8 = *(_DWORD *)(a1 + 32);
  if (v8)
  {
    for (int i = 0; i != v8; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v11 = *(_DWORD *)(v10 + 20);
      v4[1] = v11;
      if (v11 > 0x7F) {
        unint64_t v12 = sub_188A9CC(v11, v4 + 1);
      }
      else {
        unint64_t v12 = v4 + 2;
      }
      uint64_t v4 = sub_16A16F0(v10, (unint64_t)v12, a3);
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 48);
    *uint64_t v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    uint64_t v4 = sub_16A51C0(v13, (unint64_t)v15, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 56);
    *uint64_t v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      unint64_t v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      unint64_t v18 = v4 + 2;
    }
    uint64_t v4 = sub_154EFA4(v16, v18, a3);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_16A5BF4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_16A1BE8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      uint64_t v9 = sub_16A52D0(*(void *)(a1 + 48));
      v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      uint64_t v10 = sub_154F168(*(void *)(a1 + 56));
      v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 4) != 0) {
      v2 += 9;
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_16A5D1C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_16B55B8((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v11 = *(std::string **)(a1 + 48);
      if (!v11)
      {
        uint64_t v12 = *(void *)(a1 + 8);
        unint64_t v13 = (void *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          unint64_t v13 = (void *)*v13;
        }
        uint64_t v11 = (std::string *)sub_16AFC00((uint64_t)v13);
        *(void *)(a1 + 48) = v11;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v14 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v14 = &off_2544008;
      }
      sub_16A5358(v11, (uint64_t)v14);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          *(_DWORD *)(a1 + 16) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(std::string **)(a1 + 56);
    if (!v15)
    {
      uint64_t v16 = *(void *)(a1 + 8);
      unsigned int v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        unsigned int v17 = (void *)*v17;
      }
      uint64_t v15 = (std::string *)sub_154F260((uint64_t)v17);
      *(void *)(a1 + 56) = v15;
    }
    if (*(void *)(a2 + 56)) {
      unint64_t v18 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      unint64_t v18 = &off_253D6F0;
    }
    sub_154EB60(v15, (uint64_t)v18);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16A5EB4()
{
  return 1;
}

void *sub_16A5EBC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetection.Pathlet");
}

uint64_t sub_16A5ECC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2544070)
  {
    uint64_t v5 = *(void *)(a1 + 72);
    if (v5)
    {
      sub_16A2810(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 80);
    if (v6)
    {
      sub_16A3AF8(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_16B501C((void *)(a1 + 48));
  sub_16B4F9C((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16A5FB4(uint64_t a1)
{
  sub_16A5ECC(a1);

  operator delete();
}

char *sub_16A5FEC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v77 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v77, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v77 + 1;
    unsigned int v9 = *v77;
    if (*v77 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v77, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v77 + 2;
      }
    }
    uint64_t v77 = v8;
    switch(v9 >> 3)
    {
      case 2u:
        if (v9 != 16) {
          goto LABEL_88;
        }
        v5 |= 4u;
        unint64_t v13 = v8 + 1;
        LODWORD(v12) = *v8;
        if ((v12 & 0x80) == 0) {
          goto LABEL_13;
        }
        int v14 = *v13;
        uint64_t v12 = v12 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v13 = v8 + 2;
LABEL_13:
          uint64_t v77 = v13;
          *(_DWORD *)(a1 + 88) = v12;
          goto LABEL_96;
        }
        uint64_t v59 = (char *)sub_188C138((uint64_t)v8, v12);
        uint64_t v77 = v59;
        *(_DWORD *)(a1 + 88) = v60;
        if (v59) {
          goto LABEL_96;
        }
        goto LABEL_123;
      case 3u:
        if (v9 != 24) {
          goto LABEL_88;
        }
        v5 |= 8u;
        uint64_t v16 = v8 + 1;
        LODWORD(v15) = *v8;
        if ((v15 & 0x80) == 0) {
          goto LABEL_18;
        }
        int v17 = *v16;
        uint64_t v15 = v15 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v61 = (char *)sub_188C138((uint64_t)v8, v15);
          uint64_t v77 = v61;
          *(_DWORD *)(a1 + 92) = v62;
          if (!v61) {
            goto LABEL_123;
          }
        }
        else
        {
          uint64_t v16 = v8 + 2;
LABEL_18:
          uint64_t v77 = v16;
          *(_DWORD *)(a1 + 92) = v15;
        }
        goto LABEL_96;
      case 4u:
        if (v9 != 32) {
          goto LABEL_88;
        }
        v5 |= 0x10u;
        uint64_t v19 = v8 + 1;
        LODWORD(v18) = *v8;
        if ((v18 & 0x80) == 0) {
          goto LABEL_23;
        }
        int v20 = *v19;
        uint64_t v18 = v18 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          int v63 = (char *)sub_188C138((uint64_t)v8, v18);
          uint64_t v77 = v63;
          *(_DWORD *)(a1 + 96) = v64;
          if (!v63) {
            goto LABEL_123;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_23:
          uint64_t v77 = v19;
          *(_DWORD *)(a1 + 96) = v18;
        }
        goto LABEL_96;
      case 5u:
        if (v9 != 40) {
          goto LABEL_88;
        }
        v5 |= 0x20u;
        int v22 = v8 + 1;
        LODWORD(v21) = *v8;
        if ((v21 & 0x80) == 0) {
          goto LABEL_28;
        }
        int v23 = *v22;
        uint64_t v21 = v21 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          int v65 = (char *)sub_188C138((uint64_t)v8, v21);
          uint64_t v77 = v65;
          *(_DWORD *)(a1 + 100) = v66;
          if (!v65) {
            goto LABEL_123;
          }
        }
        else
        {
          int v22 = v8 + 2;
LABEL_28:
          uint64_t v77 = v22;
          *(_DWORD *)(a1 + 100) = v21;
        }
        goto LABEL_96;
      case 6u:
        if (v9 != 48) {
          goto LABEL_88;
        }
        uint64_t v24 = v8 + 1;
        unint64_t v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        int v27 = v25 + (v26 << 7);
        unint64_t v25 = (v27 - 128);
        if (v26 < 0)
        {
          uint64_t v77 = (char *)sub_188C138((uint64_t)v8, (v27 - 128));
          if (!v77) {
            goto LABEL_123;
          }
          unint64_t v25 = v67;
        }
        else
        {
          uint64_t v24 = v8 + 2;
LABEL_33:
          uint64_t v77 = v24;
        }
        if (v25 > 3)
        {
          if (*v7) {
            uint64_t v76 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v76 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(6, v25, v76);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x40u;
          *(_DWORD *)(a1 + 104) = v25;
        }
        goto LABEL_96;
      case 7u:
        if (v9 != 58) {
          goto LABEL_88;
        }
        uint64_t v28 = v8 - 1;
        while (1)
        {
          uint64_t v29 = (unsigned __int8 *)(v28 + 1);
          uint64_t v77 = v28 + 1;
          uint64_t v30 = *(_DWORD **)(a1 + 40);
          if (v30 && (uint64_t v31 = *(int *)(a1 + 32), (int)v31 < *v30))
          {
            *(_DWORD *)(a1 + 32) = v31 + 1;
            uint64_t v32 = *(void *)&v30[2 * v31 + 2];
          }
          else
          {
            sub_16AF798(*(void *)(a1 + 24));
            uint64_t v32 = sub_188CDC8(a1 + 24, v33);
            uint64_t v29 = (unsigned __int8 *)v77;
          }
          uint64_t v28 = (char *)sub_16A588C(a3, v32, v29);
          uint64_t v77 = v28;
          if (!v28) {
            goto LABEL_123;
          }
          if (*(void *)a3 <= (unint64_t)v28 || *v28 != 58) {
            goto LABEL_96;
          }
        }
      case 8u:
        if (v9 != 64) {
          goto LABEL_88;
        }
        v5 |= 0x80u;
        unint64_t v35 = v8 + 1;
        LODWORD(v34) = *v8;
        if ((v34 & 0x80) == 0) {
          goto LABEL_50;
        }
        int v36 = *v35;
        uint64_t v34 = v34 + (v36 << 7) - 128;
        if (v36 < 0)
        {
          uint64_t v68 = (char *)sub_188C138((uint64_t)v8, v34);
          uint64_t v77 = v68;
          *(_DWORD *)(a1 + 108) = v69;
          if (!v68) {
            goto LABEL_123;
          }
        }
        else
        {
          unint64_t v35 = v8 + 2;
LABEL_50:
          uint64_t v77 = v35;
          *(_DWORD *)(a1 + 108) = v34;
        }
        goto LABEL_96;
      case 9u:
        if (v9 != 72) {
          goto LABEL_88;
        }
        v5 |= 0x100u;
        uint64_t v37 = v8 + 1;
        uint64_t v38 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_55;
        }
        int v39 = *v37;
        uint64_t v38 = v38 + (v39 << 7) - 128;
        if (v39 < 0)
        {
          uint64_t v70 = (char *)sub_188C138((uint64_t)v8, v38);
          uint64_t v77 = v70;
          *(unsigned char *)(a1 + 112) = v71 != 0;
          if (!v70) {
            goto LABEL_123;
          }
        }
        else
        {
          uint64_t v37 = v8 + 2;
LABEL_55:
          uint64_t v77 = v37;
          *(unsigned char *)(a1 + 112) = v38 != 0;
        }
        goto LABEL_96;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_88;
        }
        uint64_t v40 = v8 - 1;
        while (1)
        {
          int v41 = (unsigned __int8 *)(v40 + 1);
          uint64_t v77 = v40 + 1;
          int v42 = *(_DWORD **)(a1 + 64);
          if (v42 && (uint64_t v43 = *(int *)(a1 + 56), (int)v43 < *v42))
          {
            *(_DWORD *)(a1 + 56) = v43 + 1;
            uint64_t v44 = *(void *)&v42[2 * v43 + 2];
          }
          else
          {
            uint64_t v45 = sub_16AFC78(*(void *)(a1 + 48));
            uint64_t v44 = sub_188CDC8(a1 + 48, v45);
            int v41 = (unsigned __int8 *)v77;
          }
          uint64_t v40 = sub_16A66B4(a3, v44, v41);
          uint64_t v77 = v40;
          if (!v40) {
            goto LABEL_123;
          }
          if (*(void *)a3 <= (unint64_t)v40 || *v40 != 82) {
            goto LABEL_96;
          }
        }
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_88;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        BOOL v46 = *(void **)(a1 + 72);
        if (!v46)
        {
          uint64_t v47 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v47 = (void *)*v47;
          }
          BOOL v46 = sub_16AF91C((uint64_t)v47);
          *(void *)(a1 + 72) = v46;
          int v8 = v77;
        }
        uint64_t v48 = sub_16A6744(a3, (uint64_t)v46, (unsigned __int8 *)v8);
        goto LABEL_95;
      case 0xCu:
        if (v9 != 96) {
          goto LABEL_88;
        }
        v5 |= 0x200u;
        uint64_t v50 = v8 + 1;
        LODWORD(v49) = *v8;
        if ((v49 & 0x80) == 0) {
          goto LABEL_76;
        }
        int v51 = *v50;
        uint64_t v49 = v49 + (v51 << 7) - 128;
        if (v51 < 0)
        {
          BOOL v72 = (char *)sub_188C138((uint64_t)v8, v49);
          uint64_t v77 = v72;
          *(_DWORD *)(a1 + 116) = v73;
          if (!v72) {
            goto LABEL_123;
          }
        }
        else
        {
          uint64_t v50 = v8 + 2;
LABEL_76:
          uint64_t v77 = v50;
          *(_DWORD *)(a1 + 116) = v49;
        }
        goto LABEL_96;
      case 0xDu:
        if (v9 != 106) {
          goto LABEL_88;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v52 = *(void *)(a1 + 80);
        if (!v52)
        {
          unint64_t v53 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v53 = (void *)*v53;
          }
          uint64_t v52 = sub_16AFAA8((uint64_t)v53);
          *(void *)(a1 + 80) = v52;
          int v8 = v77;
        }
        uint64_t v48 = (char *)sub_16A67D4(a3, v52, (unsigned __int8 *)v8);
        goto LABEL_95;
      case 0xEu:
        if (v9 != 112) {
          goto LABEL_88;
        }
        v5 |= 0x400u;
        uint64_t v55 = v8 + 1;
        LODWORD(v54) = *v8;
        if ((v54 & 0x80) == 0) {
          goto LABEL_87;
        }
        int v56 = *v55;
        uint64_t v54 = v54 + (v56 << 7) - 128;
        if (v56 < 0)
        {
          uint64_t v74 = (char *)sub_188C138((uint64_t)v8, v54);
          uint64_t v77 = v74;
          *(_DWORD *)(a1 + 120) = v75;
          if (!v74) {
            goto LABEL_123;
          }
        }
        else
        {
          uint64_t v55 = v8 + 2;
LABEL_87:
          uint64_t v77 = v55;
          *(_DWORD *)(a1 + 120) = v54;
        }
        goto LABEL_96;
      default:
LABEL_88:
        if (v9) {
          BOOL v57 = (v9 & 7) == 4;
        }
        else {
          BOOL v57 = 1;
        }
        if (!v57)
        {
          if (*v7)
          {
            unint64_t v58 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v58 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v77;
          }
          uint64_t v48 = (char *)sub_1885AC0(v9, v58, v8, a3);
LABEL_95:
          uint64_t v77 = v48;
          if (!v48) {
            goto LABEL_123;
          }
LABEL_96:
          if (sub_11947B8((uint64_t)a3, &v77, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_123:
        }
          uint64_t v77 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v77;
    }
  }
}

char *sub_16A66B4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16A55D4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16A6744(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16A2998(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_16A67D4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16A3CC4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_16A6864(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 88);
    *int v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 92);
    *int v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 96);
    *int v4 = 32;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 100);
    *int v4 = 40;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(int *)(a1 + 104);
    *int v4 = 48;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v22 = *(_DWORD *)(a1 + 32);
  if (v22)
  {
    for (int i = 0; i != v22; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v24 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *int v4 = 58;
      unsigned int v25 = *(_DWORD *)(v24 + 20);
      v4[1] = v25;
      if (v25 > 0x7F) {
        int v26 = sub_188A9CC(v25, v4 + 1);
      }
      else {
        int v26 = v4 + 2;
      }
      int v4 = sub_16A16F0(v24, (unint64_t)v26, a3);
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v27 = *(int *)(a1 + 108);
    *int v4 = 64;
    v4[1] = v27;
    if (v27 > 0x7F)
    {
      v4[1] = v27 | 0x80;
      unint64_t v28 = v27 >> 7;
      v4[2] = v27 >> 7;
      v4 += 3;
      if (v27 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v29 = v28 >> 14;
          v28 >>= 7;
          *v4++ = v28;
        }
        while (v29);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v30 = *(unsigned char *)(a1 + 112);
    *int v4 = 72;
    v4[1] = v30;
    v4 += 2;
  }
  int v31 = *(_DWORD *)(a1 + 56);
  if (v31)
  {
    for (int j = 0; j != v31; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v33 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *int v4 = 82;
      unsigned int v34 = *(_DWORD *)(v33 + 20);
      v4[1] = v34;
      if (v34 > 0x7F) {
        unint64_t v35 = sub_188A9CC(v34, v4 + 1);
      }
      else {
        unint64_t v35 = v4 + 2;
      }
      int v4 = sub_16A59AC(v33, (unint64_t)v35, a3);
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v36 = *(void *)(a1 + 72);
    *int v4 = 90;
    unsigned int v37 = *(_DWORD *)(v36 + 20);
    v4[1] = v37;
    if (v37 > 0x7F) {
      uint64_t v38 = sub_188A9CC(v37, v4 + 1);
    }
    else {
      uint64_t v38 = v4 + 2;
    }
    int v4 = sub_16A2C78(v36, (unint64_t)v38, a3);
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v39 = *(int *)(a1 + 116);
    *int v4 = 96;
    v4[1] = v39;
    if (v39 > 0x7F)
    {
      v4[1] = v39 | 0x80;
      unint64_t v40 = v39 >> 7;
      v4[2] = v39 >> 7;
      v4 += 3;
      if (v39 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v41 = v40 >> 14;
          v40 >>= 7;
          *v4++ = v40;
        }
        while (v41);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v42 = *(void *)(a1 + 80);
    *int v4 = 106;
    unsigned int v43 = *(_DWORD *)(v42 + 20);
    v4[1] = v43;
    if (v43 > 0x7F) {
      uint64_t v44 = sub_188A9CC(v43, v4 + 1);
    }
    else {
      uint64_t v44 = v4 + 2;
    }
    int v4 = sub_16A414C(v42, (unint64_t)v44, a3);
  }
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v45 = *(int *)(a1 + 120);
    *int v4 = 112;
    v4[1] = v45;
    if (v45 > 0x7F)
    {
      v4[1] = v45 | 0x80;
      unint64_t v46 = v45 >> 7;
      v4[2] = v45 >> 7;
      v4 += 3;
      if (v45 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v47 = v46 >> 14;
          v46 >>= 7;
          *v4++ = v46;
        }
        while (v47);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v48 = *(void *)(a1 + 8);
  if ((v48 & 1) == 0) {
    return v4;
  }
  unint64_t v50 = v48 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v50 + 31) < 0)
  {
    int v51 = *(void **)(v50 + 8);
    uint64_t v52 = *(void *)(v50 + 16);
  }
  else
  {
    int v51 = (void *)(v50 + 8);
    LODWORD(v52) = *(unsigned __int8 *)(v50 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v52)
  {
    uint64_t v53 = (int)v52;
    memcpy(v4, v51, (int)v52);
    v4 += v53;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v51, v52, v4);
}

uint64_t sub_16A6F10(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    int v4 = (uint64_t *)(v3 + 8);
  }
  else {
    int v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_16A1BE8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_16A5BF4(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v15) {
    goto LABEL_28;
  }
  if (v15)
  {
    uint64_t v27 = sub_16A2DF8(*(void *)(a1 + 72));
    v9 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 2) == 0)
    {
LABEL_18:
      if ((v15 & 4) == 0) {
        goto LABEL_19;
      }
      goto LABEL_45;
    }
  }
  else if ((v15 & 2) == 0)
  {
    goto LABEL_18;
  }
  uint64_t v28 = sub_16A43B4(*(void *)(a1 + 80));
  v9 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v15 & 4) == 0)
  {
LABEL_19:
    if ((v15 & 8) == 0) {
      goto LABEL_20;
    }
    goto LABEL_49;
  }
LABEL_45:
  int v29 = *(_DWORD *)(a1 + 88);
  uint64_t v30 = (9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6;
  if (v29 >= 0) {
    uint64_t v31 = v30;
  }
  else {
    uint64_t v31 = 10;
  }
  v9 += v31 + 1;
  if ((v15 & 8) == 0)
  {
LABEL_20:
    if ((v15 & 0x10) == 0) {
      goto LABEL_21;
    }
    goto LABEL_53;
  }
LABEL_49:
  int v32 = *(_DWORD *)(a1 + 92);
  uint64_t v33 = (9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6;
  if (v32 >= 0) {
    uint64_t v34 = v33;
  }
  else {
    uint64_t v34 = 10;
  }
  v9 += v34 + 1;
  if ((v15 & 0x10) == 0)
  {
LABEL_21:
    if ((v15 & 0x20) == 0) {
      goto LABEL_22;
    }
LABEL_57:
    int v38 = *(_DWORD *)(a1 + 100);
    uint64_t v39 = ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v38 >= 0) {
      uint64_t v40 = v39;
    }
    else {
      uint64_t v40 = 11;
    }
    v9 += v40;
    if ((v15 & 0x40) == 0)
    {
LABEL_23:
      if ((v15 & 0x80) == 0) {
        goto LABEL_28;
      }
      goto LABEL_24;
    }
    goto LABEL_61;
  }
LABEL_53:
  int v35 = *(_DWORD *)(a1 + 96);
  uint64_t v36 = ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v35 >= 0) {
    uint64_t v37 = v36;
  }
  else {
    uint64_t v37 = 11;
  }
  v9 += v37;
  if ((v15 & 0x20) != 0) {
    goto LABEL_57;
  }
LABEL_22:
  if ((v15 & 0x40) == 0) {
    goto LABEL_23;
  }
LABEL_61:
  int v41 = *(_DWORD *)(a1 + 104);
  uint64_t v42 = ((9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v41 >= 0) {
    uint64_t v43 = v42;
  }
  else {
    uint64_t v43 = 11;
  }
  v9 += v43;
  if ((v15 & 0x80) != 0)
  {
LABEL_24:
    int v16 = *(_DWORD *)(a1 + 108);
    uint64_t v17 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v16 >= 0) {
      uint64_t v18 = v17;
    }
    else {
      uint64_t v18 = 11;
    }
    v9 += v18;
  }
LABEL_28:
  if ((v15 & 0x700) != 0)
  {
    if ((v15 & 0x100) != 0) {
      v9 += 2;
    }
    if ((v15 & 0x200) != 0)
    {
      int v19 = *(_DWORD *)(a1 + 116);
      uint64_t v20 = ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v19 >= 0) {
        uint64_t v21 = v20;
      }
      else {
        uint64_t v21 = 11;
      }
      v9 += v21;
    }
    if ((v15 & 0x400) != 0)
    {
      int v22 = *(_DWORD *)(a1 + 120);
      uint64_t v23 = ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v22 >= 0) {
        uint64_t v24 = v23;
      }
      else {
        uint64_t v24 = 11;
      }
      v9 += v24;
    }
  }
  uint64_t v25 = *(void *)(a1 + 8);
  if (v25)
  {
    unint64_t v44 = v25 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v44 + 31) < 0) {
      uint64_t v45 = *(void *)(v44 + 16);
    }
    else {
      uint64_t v45 = *(unsigned __int8 *)(v44 + 31);
    }
    v9 += v45;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

uint64_t sub_16A7250()
{
  return 1;
}

void *sub_16A7258@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetection");
}

void *sub_16A7268(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16A72E4(void *a1)
{
  sub_16A7268(a1);

  operator delete();
}

char *sub_16A731C(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v26 + 2;
      }
    }
    int v26 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_33;
    }
    int v19 = v8 + 1;
    LODWORD(v18) = *v8;
    if ((v18 & 0x80) == 0) {
      goto LABEL_28;
    }
    int v20 = *v19;
    uint64_t v18 = v18 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      int v19 = v8 + 2;
LABEL_28:
      int v26 = v19;
      *(_DWORD *)(a1 + 40) = v18;
      int v5 = 1;
      goto LABEL_41;
    }
    uint64_t v21 = (char *)sub_188C138((uint64_t)v8, v18);
    int v26 = v21;
    *(_DWORD *)(a1 + 40) = v22;
    int v5 = 1;
    if (!v21) {
      goto LABEL_46;
    }
LABEL_41:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1)
  {
    if (v9 == 8)
    {
      uint64_t v12 = v8 - 1;
      while (1)
      {
        int v26 = v12 + 1;
        int v13 = v12[1];
        if (v12[1] < 0)
        {
          int v14 = v13 + (v12[2] << 7);
          int v13 = v14 - 128;
          if (v12[2] < 0)
          {
            uint64_t v12 = (char *)sub_188C138((uint64_t)(v12 + 1), (v14 - 128));
            int v13 = v15;
          }
          else
          {
            v12 += 3;
          }
        }
        else
        {
          v12 += 2;
        }
        int v26 = v12;
        uint64_t v16 = *(unsigned int *)(a1 + 24);
        if (v16 == *(_DWORD *)(a1 + 28))
        {
          int v17 = v16 + 1;
          sub_188C80C((unsigned int *)(a1 + 24), v16 + 1);
          *(_DWORD *)(*(void *)(a1 + 32) + 4 * v16) = v13;
          uint64_t v12 = v26;
        }
        else
        {
          *(_DWORD *)(*(void *)(a1 + 32) + 4 * v16) = v13;
          int v17 = v16 + 1;
        }
        *(_DWORD *)(a1 + 24) = v17;
        if (!v12) {
          goto LABEL_46;
        }
        if (*(void *)a3 <= (unint64_t)v12 || *v12 != 8) {
          goto LABEL_41;
        }
      }
    }
    if (v9 == 10)
    {
      uint64_t v23 = sub_188C2BC((unsigned int *)(a1 + 24), (unsigned __int8 *)v8, (uint64_t)a3);
      goto LABEL_40;
    }
  }
LABEL_33:
  if (v9) {
    BOOL v24 = (v9 & 7) == 4;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24)
  {
    if (*v7)
    {
      uint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v26;
    }
    uint64_t v23 = sub_1885AC0(v9, v25, v8, a3);
LABEL_40:
    int v26 = (char *)v23;
    if (!v23) {
      goto LABEL_46;
    }
    goto LABEL_41;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_46:
  int v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

char *sub_16A7598(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v8 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v11 = *(int *)(a1 + 40);
    *__dst = 16;
    __dst[1] = v11;
    if (v11 > 0x7F)
    {
      __dst[1] = v11 | 0x80;
      unint64_t v12 = v11 >> 7;
      __dst[2] = v11 >> 7;
      __dst += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v13 = v12 >> 14;
          v12 >>= 7;
          *__dst++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return __dst;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(__dst, v17, (int)v18);
    __dst += v19;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, __dst);
}

uint64_t sub_16A7768(uint64_t a1)
{
  uint64_t result = sub_188D498((unsigned int *)(a1 + 24)) + *(unsigned int *)(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if (v3 < 0) {
      uint64_t v4 = 11;
    }
    else {
      uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v4;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    result += v7;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

uint64_t sub_16A7800()
{
  return 1;
}

void *sub_16A7808@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetectionInternal.IngestedTripAge");
}

void *sub_16A7818(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16A788C(void *a1)
{
  sub_16A7818(a1);

  operator delete();
}

uint64_t sub_16A78C4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0xF) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0x100000000;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_16A78EC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v34 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = v34 + 1;
    unsigned int v9 = *v34;
    if (*v34 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v34, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v34 + 2;
      }
    }
    uint64_t v34 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_29;
        }
        v5 |= 1u;
        unint64_t v13 = v8 + 1;
        LODWORD(v12) = *v8;
        if ((v12 & 0x80) == 0) {
          goto LABEL_13;
        }
        int v14 = *v13;
        uint64_t v12 = v12 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v13 = v8 + 2;
LABEL_13:
          uint64_t v34 = v13;
          *(_DWORD *)(a1 + 24) = v12;
          goto LABEL_36;
        }
        int v26 = (char *)sub_188C138((uint64_t)v8, v12);
        uint64_t v34 = v26;
        *(_DWORD *)(a1 + 24) = v27;
        if (v26) {
          goto LABEL_36;
        }
        goto LABEL_49;
      case 2u:
        if (v9 != 16) {
          goto LABEL_29;
        }
        v5 |= 8u;
        unint64_t v16 = v8 + 1;
        LODWORD(v15) = *v8;
        if ((v15 & 0x80) == 0) {
          goto LABEL_18;
        }
        int v17 = *v16;
        uint64_t v15 = v15 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v28 = (char *)sub_188C138((uint64_t)v8, v15);
          uint64_t v34 = v28;
          *(_DWORD *)(a1 + 36) = v29;
          if (!v28) {
            goto LABEL_49;
          }
        }
        else
        {
          unint64_t v16 = v8 + 2;
LABEL_18:
          uint64_t v34 = v16;
          *(_DWORD *)(a1 + 36) = v15;
        }
        goto LABEL_36;
      case 3u:
        if (v9 != 24) {
          goto LABEL_29;
        }
        v5 |= 2u;
        uint64_t v19 = v8 + 1;
        LODWORD(v18) = *v8;
        if ((v18 & 0x80) == 0) {
          goto LABEL_23;
        }
        int v20 = *v19;
        uint64_t v18 = v18 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v30 = (char *)sub_188C138((uint64_t)v8, v18);
          uint64_t v34 = v30;
          *(_DWORD *)(a1 + 28) = v31;
          if (!v30) {
            goto LABEL_49;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_23:
          uint64_t v34 = v19;
          *(_DWORD *)(a1 + 28) = v18;
        }
        goto LABEL_36;
      case 4u:
        if (v9 != 32) {
          goto LABEL_29;
        }
        v5 |= 4u;
        int v22 = v8 + 1;
        LODWORD(v21) = *v8;
        if ((v21 & 0x80) == 0) {
          goto LABEL_28;
        }
        int v23 = *v22;
        uint64_t v21 = v21 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          int v32 = (char *)sub_188C138((uint64_t)v8, v21);
          uint64_t v34 = v32;
          *(_DWORD *)(a1 + 32) = v33;
          if (!v32) {
            goto LABEL_49;
          }
        }
        else
        {
          int v22 = v8 + 2;
LABEL_28:
          uint64_t v34 = v22;
          *(_DWORD *)(a1 + 32) = v21;
        }
        goto LABEL_36;
      default:
LABEL_29:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            uint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = v34;
          }
          uint64_t v34 = (char *)sub_1885AC0(v9, v25, v8, a3);
          if (!v34) {
            goto LABEL_49;
          }
LABEL_36:
          if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_49:
        }
          uint64_t v34 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v34;
    }
  }
}

unsigned char *sub_16A7BB4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 36);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 28);
    *uint64_t v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 32);
    *uint64_t v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_16A7E50(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_25;
  }
  if (v1)
  {
    int v3 = *(_DWORD *)(a1 + 24);
    if (v3 < 0)
    {
      uint64_t v2 = 11;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v4 = *(_DWORD *)(a1 + 28);
  if (v4 < 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v5;
LABEL_14:
  if ((v1 & 4) == 0)
  {
    if ((v1 & 8) == 0) {
      goto LABEL_25;
    }
    goto LABEL_21;
  }
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6 < 0) {
    uint64_t v7 = 11;
  }
  else {
    uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v7;
  if ((v1 & 8) != 0)
  {
LABEL_21:
    int v8 = *(_DWORD *)(a1 + 36);
    if (v8 < 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v9;
  }
LABEL_25:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v2 += v13;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_16A7F80()
{
  return 1;
}

void *sub_16A7F88@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetectionInternal.ProbeHistory.ProbeCountBucket");
}

uint64_t sub_16A7F98(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16A8038(uint64_t a1)
{
  sub_16A7F98(a1);

  operator delete();
}

uint64_t sub_16A8070(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 0xFE) != 0)
  {
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
    *(void *)(a1 + 46) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v4) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_16A80C4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v42 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v42, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = (char *)(*(void *)v42 + 1);
    unsigned int v9 = **(unsigned char **)v42;
    if ((char)**(unsigned char **)v42 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180(*(uint64_t *)v42, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (char *)(*(void *)v42 + 2);
      }
    }
    *(void *)uint64_t v42 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (std::string *)sub_1880F84((void *)(a1 + 24), v13);
        unint64_t v15 = (void *)sub_188C244(v14, *(char **)v42, (uint64_t)a3);
        goto LABEL_47;
      case 2u:
        if (v9 != 21) {
          goto LABEL_40;
        }
        int v17 = *(_DWORD *)v8;
        unint64_t v16 = v8 + 4;
        v5 |= 2u;
        *(_DWORD *)(a1 + 32) = v17;
        goto LABEL_19;
      case 3u:
        if (v9 != 29) {
          goto LABEL_40;
        }
        int v18 = *(_DWORD *)v8;
        unint64_t v16 = v8 + 4;
        v5 |= 4u;
        *(_DWORD *)(a1 + 36) = v18;
        goto LABEL_19;
      case 4u:
        if (v9 != 37) {
          goto LABEL_40;
        }
        int v19 = *(_DWORD *)v8;
        unint64_t v16 = v8 + 4;
        v5 |= 8u;
        *(_DWORD *)(a1 + 40) = v19;
LABEL_19:
        *(void *)uint64_t v42 = v16;
        goto LABEL_48;
      case 6u:
        if (v9 != 48) {
          goto LABEL_40;
        }
        v5 |= 0x10u;
        unint64_t v21 = v8 + 1;
        LODWORD(v20) = *v8;
        if ((v20 & 0x80) == 0) {
          goto LABEL_24;
        }
        int v22 = *v21;
        uint64_t v20 = v20 + (v22 << 7) - 128;
        if (v22 < 0)
        {
          uint64_t v34 = sub_188C138((uint64_t)v8, v20);
          *(void *)uint64_t v42 = v34;
          *(_DWORD *)(a1 + 44) = v35;
          if (!v34) {
            goto LABEL_61;
          }
        }
        else
        {
          unint64_t v21 = v8 + 2;
LABEL_24:
          *(void *)uint64_t v42 = v21;
          *(_DWORD *)(a1 + 44) = v20;
        }
        goto LABEL_48;
      case 7u:
        if (v9 != 56) {
          goto LABEL_40;
        }
        v5 |= 0x20u;
        uint64_t v24 = v8 + 1;
        LODWORD(v23) = *v8;
        if ((v23 & 0x80) == 0) {
          goto LABEL_29;
        }
        int v25 = *v24;
        uint64_t v23 = v23 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          uint64_t v36 = sub_188C138((uint64_t)v8, v23);
          *(void *)uint64_t v42 = v36;
          *(_DWORD *)(a1 + 48) = v37;
          if (!v36) {
            goto LABEL_61;
          }
        }
        else
        {
          uint64_t v24 = v8 + 2;
LABEL_29:
          *(void *)uint64_t v42 = v24;
          *(_DWORD *)(a1 + 48) = v23;
        }
        goto LABEL_48;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_40;
        }
        v5 |= 0x40u;
        int v26 = v8 + 1;
        uint64_t v27 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_34;
        }
        int v28 = *v26;
        uint64_t v27 = v27 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          uint64_t v38 = sub_188C138((uint64_t)v8, v27);
          *(void *)uint64_t v42 = v38;
          *(unsigned char *)(a1 + 52) = v39 != 0;
          if (!v38) {
            goto LABEL_61;
          }
        }
        else
        {
          int v26 = v8 + 2;
LABEL_34:
          *(void *)uint64_t v42 = v26;
          *(unsigned char *)(a1 + 52) = v27 != 0;
        }
        goto LABEL_48;
      case 0xBu:
        if (v9 != 88) {
          goto LABEL_40;
        }
        v5 |= 0x80u;
        int v29 = v8 + 1;
        uint64_t v30 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_39;
        }
        int v31 = *v29;
        uint64_t v30 = v30 + (v31 << 7) - 128;
        if (v31 < 0)
        {
          uint64_t v40 = sub_188C138((uint64_t)v8, v30);
          *(void *)uint64_t v42 = v40;
          *(unsigned char *)(a1 + 53) = v41 != 0;
          if (!v40) {
            goto LABEL_61;
          }
        }
        else
        {
          int v29 = v8 + 2;
LABEL_39:
          *(void *)uint64_t v42 = v29;
          *(unsigned char *)(a1 + 53) = v30 != 0;
        }
        goto LABEL_48;
      default:
LABEL_40:
        if (v9) {
          BOOL v32 = (v9 & 7) == 4;
        }
        else {
          BOOL v32 = 1;
        }
        if (!v32)
        {
          if (*v7)
          {
            int v33 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = *(char **)v42;
          }
          unint64_t v15 = sub_1885AC0(v9, v33, v8, a3);
LABEL_47:
          *(void *)uint64_t v42 = v15;
          if (!v15) {
            goto LABEL_61;
          }
LABEL_48:
          if (sub_11947B8((uint64_t)a3, (char **)v42, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_61:
        }
          *(void *)uint64_t v42 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v42;
    }
  }
}

unsigned char *sub_16A8470(uint64_t a1, unsigned char *__dst, void *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v7 = *(_DWORD *)(a1 + 32);
  *char v4 = 21;
  *(_DWORD *)(v4 + 1) = v7;
  v4 += 5;
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_11:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v8 = *(_DWORD *)(a1 + 36);
  *char v4 = 29;
  *(_DWORD *)(v4 + 1) = v8;
  v4 += 5;
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_23;
    }
    goto LABEL_17;
  }
LABEL_14:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v9 = *(_DWORD *)(a1 + 40);
  *char v4 = 37;
  *(_DWORD *)(v4 + 1) = v9;
  v4 += 5;
  if ((v6 & 0x10) != 0)
  {
LABEL_17:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 44);
    *char v4 = 48;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_23:
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 48);
    *char v4 = 56;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v16 = *(unsigned char *)(a1 + 52);
    *char v4 = 80;
    v4[1] = v16;
    v4 += 2;
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v17 = *(unsigned char *)(a1 + 53);
    *char v4 = 88;
    v4[1] = v17;
    v4 += 2;
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    unint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    unint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_16A8760(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(unsigned char *)(a1 + 16))
    {
      unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
      uint64_t v5 = *(void *)(v3 + 8);
      if ((v4 & 0x80u) == 0) {
        uint64_t v5 = v4;
      }
      uint64_t v1 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v1 = 0;
    }
    if ((*(unsigned char *)(a1 + 16) & 2) != 0) {
      v1 += 5;
    }
    if ((*(unsigned char *)(a1 + 16) & 4) != 0) {
      v1 += 5;
    }
    if ((*(unsigned char *)(a1 + 16) & 8) != 0) {
      v1 += 5;
    }
    if ((*(unsigned char *)(a1 + 16) & 0x10) != 0)
    {
      int v6 = *(_DWORD *)(a1 + 44);
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v6 >= 0) {
        uint64_t v8 = v7;
      }
      else {
        uint64_t v8 = 11;
      }
      v1 += v8;
    }
    if ((*(unsigned char *)(a1 + 16) & 0x20) != 0)
    {
      int v9 = *(_DWORD *)(a1 + 48);
      uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v9 >= 0) {
        uint64_t v11 = v10;
      }
      else {
        uint64_t v11 = 11;
      }
      v1 += v11;
    }
    if ((*(unsigned char *)(a1 + 16) & 0x40) != 0) {
      v1 += 2;
    }
    if ((*(unsigned char *)(a1 + 16) & 0x80) != 0) {
      uint64_t v2 = v1 + 2;
    }
    else {
      uint64_t v2 = v1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_16A8894(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      int v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      int v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        int v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_20;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_21;
    }
LABEL_20:
    HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_22;
    }
LABEL_21:
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_23;
    }
LABEL_22:
    HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_24;
    }
LABEL_23:
    LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      v3[2].__r_.__value_.__s.__data_[5] = *(unsigned char *)(a2 + 53);
      goto LABEL_11;
    }
LABEL_24:
    v3[2].__r_.__value_.__s.__data_[4] = *(unsigned char *)(a2 + 52);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16A89B4()
{
  return 1;
}

void *sub_16A89BC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetectionInternal.ProbeHistory.SegmentVisit");
}

void *sub_16A89CC(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_16B519C(a1 + 11);
  sub_16B511C(a1 + 8);
  sub_1889DE8(a1 + 5);
  sub_16B509C(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16A8A6C(void *a1)
{
  sub_16A89CC(a1);

  operator delete();
}

uint64_t sub_16A8AA4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v39 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v39, a3[11].i32[1])) {
    return *(void *)v39;
  }
  int v6 = (uint64_t **)(a1 + 40);
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v39 + 1);
    unsigned int v9 = **(unsigned char **)v39;
    if ((char)**(unsigned char **)v39 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v39, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v39 + 2);
      }
    }
    *(void *)uint64_t v39 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_51;
        }
        uint64_t v12 = v8 - 1;
        while (1)
        {
          unint64_t v13 = (unsigned __int8 *)(v12 + 1);
          *(void *)uint64_t v39 = v12 + 1;
          unint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            char v17 = sub_16AFE74(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            unint64_t v13 = *(unsigned __int8 **)v39;
          }
          uint64_t v12 = sub_16A8EA0(a3, v16, v13);
          *(void *)uint64_t v39 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_58;
          }
        }
      case 3u:
        if (v9 != 26) {
          goto LABEL_51;
        }
        uint64_t v18 = v8 - 1;
        while (1)
        {
          int v19 = (char *)(v18 + 1);
          *(void *)uint64_t v39 = v18 + 1;
          unint64_t v20 = *(_DWORD **)(a1 + 56);
          if (v20 && (uint64_t v21 = *(int *)(a1 + 48), (int)v21 < *v20))
          {
            *(_DWORD *)(a1 + 48) = v21 + 1;
            uint64_t v22 = *(std::string **)&v20[2 * v21 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            *uint64_t v24 = v23;
            v24[1] = sub_3A6EDC;
            *uint64_t v23 = 0;
            v23[1] = 0;
            v23[2] = 0;
            uint64_t v22 = (std::string *)sub_188CDC8(a1 + 40, (uint64_t)v23);
            int v19 = *(char **)v39;
          }
          uint64_t v18 = sub_188C244(v22, v19, (uint64_t)a3);
          *(void *)uint64_t v39 = v18;
          if (!v18) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v18 || *v18 != 26) {
            goto LABEL_58;
          }
        }
      case 5u:
        if (v9 != 42) {
          goto LABEL_51;
        }
        int v25 = v8 - 1;
        while (1)
        {
          int v26 = (unsigned __int8 *)(v25 + 1);
          *(void *)uint64_t v39 = v25 + 1;
          uint64_t v27 = *(_DWORD **)(a1 + 80);
          if (v27 && (uint64_t v28 = *(int *)(a1 + 72), (int)v28 < *v27))
          {
            *(_DWORD *)(a1 + 72) = v28 + 1;
            uint64_t v29 = *(void *)&v27[2 * v28 + 2];
          }
          else
          {
            uint64_t v30 = sub_16B0388(*(void *)(a1 + 64));
            uint64_t v29 = sub_188CDC8(a1 + 64, v30);
            int v26 = *(unsigned __int8 **)v39;
          }
          int v25 = (char *)sub_16A8F30(a3, v29, v26);
          *(void *)uint64_t v39 = v25;
          if (!v25) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v25 || *v25 != 42) {
            goto LABEL_58;
          }
        }
      case 6u:
        if (v9 != 50) {
          goto LABEL_51;
        }
        int v31 = v8 - 1;
        while (1)
        {
          BOOL v32 = (unsigned __int8 *)(v31 + 1);
          *(void *)uint64_t v39 = v31 + 1;
          int v33 = *(_DWORD **)(a1 + 104);
          if (v33 && (uint64_t v34 = *(int *)(a1 + 96), (int)v34 < *v33))
          {
            *(_DWORD *)(a1 + 96) = v34 + 1;
            uint64_t v35 = *(void *)&v33[2 * v34 + 2];
          }
          else
          {
            uint64_t v36 = sub_16AFEF4(*(void *)(a1 + 88));
            uint64_t v35 = sub_188CDC8(a1 + 88, (uint64_t)v36);
            BOOL v32 = *(unsigned __int8 **)v39;
          }
          int v31 = (char *)sub_16A8FC0(a3, v35, v32);
          *(void *)uint64_t v39 = v31;
          if (!v31) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v31 || *v31 != 50) {
            goto LABEL_58;
          }
        }
      default:
LABEL_51:
        if (v9) {
          BOOL v37 = (v9 & 7) == 4;
        }
        else {
          BOOL v37 = 1;
        }
        if (!v37)
        {
          if (*v7)
          {
            uint64_t v38 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v38 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v39;
          }
          *(void *)uint64_t v39 = sub_1885AC0(v9, v38, v8, a3);
          if (!*(void *)v39) {
            return 0;
          }
LABEL_58:
          if (sub_11947B8((uint64_t)a3, (char **)v39, a3[11].i32[1])) {
            return *(void *)v39;
          }
          continue;
        }
        if (!v8) {
          return 0;
        }
        a3[10].i32[0] = v9 - 1;
        return *(void *)v39;
    }
  }
}

char *sub_16A8EA0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16A78EC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_16A8F30(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16ADC38(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_16A8FC0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16A80C4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16A9050(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_16A7BB4(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(unsigned int *)(a1 + 48);
  if ((int)v11 >= 1)
  {
    uint64_t v12 = 0;
    uint64_t v13 = 8 * v11;
    do
    {
      unint64_t v14 = *(void **)(*(void *)(a1 + 56) + v12 + 8);
      if (*((char *)v14 + 23) < 0)
      {
        int64_t v15 = v14[1];
        if (v15 > 127) {
          goto LABEL_20;
        }
      }
      else
      {
        int64_t v15 = *((unsigned __int8 *)v14 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v15)
      {
        *__dst = 26;
        __dst[1] = v15;
        if (*((char *)v14 + 23) < 0) {
          unint64_t v14 = (void *)*v14;
        }
        uint64_t v16 = __dst + 2;
        memcpy(v16, v14, v15);
        __dst = &v16[v15];
        goto LABEL_18;
      }
LABEL_20:
      __dst = (char *)sub_188A868(a3, 3, (uint64_t)v14, __dst);
LABEL_18:
      v12 += 8;
    }
    while (v13 != v12);
  }
  int v17 = *(_DWORD *)(a1 + 72);
  if (v17)
  {
    for (int j = 0; j != v17; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v19 = *(void *)(*(void *)(a1 + 80) + 8 * j + 8);
      *__dst = 42;
      unsigned int v20 = *(_DWORD *)(v19 + 20);
      __dst[1] = v20;
      if (v20 > 0x7F) {
        uint64_t v21 = sub_188A9CC(v20, __dst + 1);
      }
      else {
        uint64_t v21 = __dst + 2;
      }
      __dst = sub_16ADE10(v19, v21, a3);
    }
  }
  int v22 = *(_DWORD *)(a1 + 96);
  if (v22)
  {
    for (int k = 0; k != v22; ++k)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v24 = *(void *)(*(void *)(a1 + 104) + 8 * k + 8);
      *__dst = 50;
      unsigned int v25 = *(_DWORD *)(v24 + 20);
      __dst[1] = v25;
      if (v25 > 0x7F) {
        int v26 = sub_188A9CC(v25, __dst + 1);
      }
      else {
        int v26 = __dst + 2;
      }
      __dst = sub_16A8470(v24, v26, a3);
    }
  }
  uint64_t v27 = *(void *)(a1 + 8);
  if ((v27 & 1) == 0) {
    return __dst;
  }
  unint64_t v29 = v27 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v29 + 31) < 0)
  {
    uint64_t v30 = *(void **)(v29 + 8);
    uint64_t v31 = *(void *)(v29 + 16);
  }
  else
  {
    uint64_t v30 = (void *)(v29 + 8);
    LODWORD(v31) = *(unsigned __int8 *)(v29 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v31)
  {
    uint64_t v32 = (int)v31;
    memcpy(__dst, v30, (int)v31);
    __dst += v32;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v30, v31, __dst);
}

uint64_t sub_16A9344(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    int v4 = (uint64_t *)(v3 + 8);
  }
  else {
    int v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_16A7E50(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 48);
  uint64_t v9 = v2 + v8;
  if ((int)v8 >= 1)
  {
    unsigned int v10 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v9 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      --v8;
    }
    while (v8);
  }
  uint64_t v14 = *(int *)(a1 + 72);
  uint64_t v15 = v9 + v14;
  uint64_t v16 = *(void *)(a1 + 80);
  if (v16) {
    int v17 = (uint64_t *)(v16 + 8);
  }
  else {
    int v17 = 0;
  }
  if (v14)
  {
    uint64_t v18 = 8 * v14;
    do
    {
      uint64_t v19 = *v17++;
      uint64_t v20 = sub_16ADF58(v19);
      v15 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6);
      v18 -= 8;
    }
    while (v18);
  }
  uint64_t v21 = *(int *)(a1 + 96);
  uint64_t v22 = v15 + v21;
  uint64_t v23 = *(void *)(a1 + 104);
  if (v23) {
    uint64_t v24 = (uint64_t *)(v23 + 8);
  }
  else {
    uint64_t v24 = 0;
  }
  if (v21)
  {
    uint64_t v25 = 8 * v21;
    do
    {
      uint64_t v26 = *v24++;
      uint64_t v27 = sub_16A8760(v26);
      v22 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6);
      v25 -= 8;
    }
    while (v25);
  }
  uint64_t v28 = *(void *)(a1 + 8);
  if (v28)
  {
    unint64_t v30 = v28 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v30 + 31) < 0) {
      uint64_t v31 = *(void *)(v30 + 16);
    }
    else {
      uint64_t v31 = *(unsigned __int8 *)(v30 + 31);
    }
    v22 += v31;
  }
  *(_DWORD *)(a1 + 112) = v22;
  return v22;
}

uint64_t sub_16A94EC()
{
  return 1;
}

void *sub_16A94F4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetectionInternal.ProbeHistory");
}

uint64_t sub_16A9504(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2544198)
  {
    uint64_t v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_169F36C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16A95D0(uint64_t a1)
{
  sub_16A9504(a1);

  operator delete();
}

uint64_t sub_16A9608(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_169F578(*(void *)(result + 32));
  }
LABEL_7:
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_16A969C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v20 + 2);
      }
    }
    *(void *)uint64_t v20 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 32);
    if (!v15)
    {
      uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v15 = sub_16AF6E4((uint64_t)v16);
      *(void *)(a1 + 32) = v15;
      uint64_t v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v14 = sub_16A15D0(a3, v15, v7);
LABEL_29:
    *(void *)uint64_t v20 = v14;
    if (!v14) {
      goto LABEL_35;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void *)(a1 + 8);
    uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    uint64_t v19 = (std::string *)sub_1880F84((void *)(a1 + 24), v18);
    uint64_t v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
    goto LABEL_29;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, (char *)v7, a3);
    goto LABEL_29;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_35:
  *(void *)uint64_t v20 = 0;
  return *(void *)v20;
}

unsigned char *sub_16A985C(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    *uint64_t v4 = 18;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_169FFF8(v7, (unint64_t)v9, a3);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_16A998C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_10;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_16A0518(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_16A9A70(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v6 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      uint64_t result = sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      unsigned int v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
      if (!v9)
      {
        std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
        uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          uint64_t v11 = (void *)*v11;
        }
        unsigned int v9 = (std::string *)sub_16AF6E4((uint64_t)v11);
        v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
      }
      if (*(void *)(a2 + 32)) {
        unint64_t v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        unint64_t v12 = &off_2543E30;
      }
      uint64_t result = sub_16A07E0(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16A9B5C()
{
  return 1;
}

void *sub_16A9B64@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetectionInternal.SegmentLabel.Label.RegionNonTrigger");
}

uint64_t sub_16A9B74(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_25441C0)
  {
    uint64_t v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_169F36C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16A9C2C(uint64_t a1)
{
  sub_16A9B74(a1);

  operator delete();
}

uint64_t sub_16A9C64(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_169F578(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_16A9CC0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    uint64_t v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13)
    {
      uint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v14 = (void *)*v14;
      }
      uint64_t v13 = sub_16AF6E4((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      uint64_t v6 = v16;
    }
    unint64_t v12 = sub_16A15D0(a3, v13, (unsigned __int8 *)v6);
LABEL_20:
    uint64_t v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v16;
    }
    unint64_t v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

unsigned char *sub_16A9E18(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *int v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    int v4 = sub_169FFF8(v6, (unint64_t)v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_16A9F28(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_16A0518(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_16A9FB0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unsigned int v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unsigned int v7 = (void *)*v7;
      }
      std::string::pointer data = (std::string *)sub_16AF6E4((uint64_t)v7);
      v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_2543E30;
    }
    uint64_t result = sub_16A07E0(data, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16AA058()
{
  return 1;
}

void *sub_16AA060@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetectionInternal.SegmentLabel.Label.MarkedNonTrigger");
}

uint64_t sub_16AA070(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_25441E0)
  {
    unint64_t v5 = *(void **)(a1 + 48);
    if (v5)
    {
      sub_169F36C(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_16A9504(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 64);
    if (v7)
    {
      sub_16A9B74(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16AA168(uint64_t a1)
{
  sub_16AA070(a1);

  operator delete();
}

uint64_t sub_16AA1A0(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 7) != 0)
  {
    if (v3)
    {
      uint64_t result = sub_169F578(*(void *)(a1 + 48));
      if ((v3 & 2) == 0)
      {
LABEL_4:
        if ((v3 & 4) == 0) {
          goto LABEL_6;
        }
        goto LABEL_5;
      }
    }
    else if ((v3 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t result = sub_16A9608(*(void *)(a1 + 56));
    if ((v3 & 4) != 0) {
LABEL_5:
    }
      uint64_t result = sub_16A9C64(*(void *)(a1 + 64));
  }
LABEL_6:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_16AA230(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v28 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
    return *(void *)v28;
  }
  uint64_t v6 = (void *)(a1 + 8);
  uint64_t v7 = (uint64_t **)(a1 + 24);
  while (2)
  {
    unsigned int v8 = (unsigned __int8 *)(*(void *)v28 + 1);
    unsigned int v9 = **(unsigned char **)v28;
    if ((char)**(unsigned char **)v28 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unsigned int v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v28, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = (unsigned __int8 *)(*(void *)v28 + 2);
      }
    }
    *(void *)uint64_t v28 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_39;
        }
        unint64_t v12 = (const std::string::value_type *)(v8 - 1);
        while (1)
        {
          uint64_t v13 = (char *)(v12 + 1);
          *(void *)uint64_t v28 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 40);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 32), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 32) = v15 + 1;
            uint64_t v16 = *(std::string **)&v14[2 * v15 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *uint64_t v18 = v17;
            v18[1] = sub_3A6EDC;
            void *v17 = 0;
            v17[1] = 0;
            int v17[2] = 0;
            uint64_t v16 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v17);
            uint64_t v13 = *(char **)v28;
          }
          unint64_t v12 = sub_188C244(v16, v13, (uint64_t)a3);
          *(void *)uint64_t v28 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_47;
          }
        }
      case 2u:
        if (v9 != 18) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v19 = *(void *)(a1 + 48);
        if (!v19)
        {
          uint64_t v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v20 = (void *)*v20;
          }
          uint64_t v19 = sub_16AF6E4((uint64_t)v20);
          *(void *)(a1 + 48) = v19;
          unsigned int v8 = *(unsigned __int8 **)v28;
        }
        uint64_t v21 = (uint64_t)sub_16A15D0(a3, v19, v8);
        goto LABEL_46;
      case 3u:
        if (v9 != 26) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v22 = *(void **)(a1 + 56);
        if (!v22)
        {
          uint64_t v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v23 = (void *)*v23;
          }
          uint64_t v22 = sub_16B0030((uint64_t)v23);
          *(void *)(a1 + 56) = v22;
          unsigned int v8 = *(unsigned __int8 **)v28;
        }
        uint64_t v21 = sub_16AA558(a3, (uint64_t)v22, v8);
        goto LABEL_46;
      case 5u:
        if (v9 != 42) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v24 = *(void **)(a1 + 64);
        if (!v24)
        {
          uint64_t v25 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v25 = (void *)*v25;
          }
          uint64_t v24 = sub_16B00B4((uint64_t)v25);
          *(void *)(a1 + 64) = v24;
          unsigned int v8 = *(unsigned __int8 **)v28;
        }
        uint64_t v21 = (uint64_t)sub_16AA5E8(a3, (uint64_t)v24, v8);
        goto LABEL_46;
      default:
LABEL_39:
        if (v9) {
          BOOL v26 = (v9 & 7) == 4;
        }
        else {
          BOOL v26 = 1;
        }
        if (!v26)
        {
          if (*v6)
          {
            uint64_t v27 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = *(unsigned __int8 **)v28;
          }
          uint64_t v21 = (uint64_t)sub_1885AC0(v9, v27, (char *)v8, a3);
LABEL_46:
          *(void *)uint64_t v28 = v21;
          if (!v21) {
            return 0;
          }
LABEL_47:
          if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
            return *(void *)v28;
          }
          continue;
        }
        if (!v8) {
          return 0;
        }
        a3[10].i32[0] = v9 - 1;
        return *(void *)v28;
    }
  }
}

uint64_t sub_16AA558(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16A969C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16AA5E8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16A9CC0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16AA678(uint64_t a1, char *__dst, unint64_t *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 40) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if ((uint64_t)(*a3 - (void)__dst + 14) >= v10)
      {
        *__dst = 10;
        __dst[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        unsigned int v11 = __dst + 2;
        memcpy(v11, v9, v10);
        __dst = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      __dst = (char *)sub_188A868(a3, 1, (uint64_t)v9, __dst);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  int v12 = *(_DWORD *)(a1 + 16);
  if (v12)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v13 = *(void *)(a1 + 48);
    *__dst = 18;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    __dst[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, __dst + 1);
    }
    else {
      uint64_t v15 = __dst + 2;
    }
    __dst = sub_169FFF8(v13, (unint64_t)v15, a3);
    if ((v12 & 2) == 0)
    {
LABEL_15:
      if ((v12 & 4) == 0) {
        goto LABEL_35;
      }
      goto LABEL_29;
    }
  }
  else if ((v12 & 2) == 0)
  {
    goto LABEL_15;
  }
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v16 = *(void *)(a1 + 56);
  *__dst = 26;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  __dst[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, __dst + 1);
  }
  else {
    uint64_t v18 = __dst + 2;
  }
  __dst = sub_16A985C(v16, v18, a3);
  if ((v12 & 4) != 0)
  {
LABEL_29:
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v19 = *(void *)(a1 + 64);
    *__dst = 42;
    unsigned int v20 = *(_DWORD *)(v19 + 20);
    __dst[1] = v20;
    if (v20 > 0x7F) {
      uint64_t v21 = sub_188A9CC(v20, __dst + 1);
    }
    else {
      uint64_t v21 = __dst + 2;
    }
    __dst = sub_16A9E18(v19, (unint64_t)v21, a3);
  }
LABEL_35:
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return __dst;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    uint64_t v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    uint64_t v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(__dst, v25, (int)v26);
    __dst += v27;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v25, v26, __dst);
}

uint64_t sub_16AA91C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    int v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      uint64_t v12 = sub_16A0518(*(void *)(a1 + 48));
      v4 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v8 & 2) == 0)
      {
LABEL_11:
        if ((v8 & 4) == 0) {
          goto LABEL_13;
        }
        goto LABEL_12;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_11;
    }
    uint64_t v13 = sub_16A998C(*(void *)(a1 + 56));
    v4 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 4) != 0)
    {
LABEL_12:
      uint64_t v9 = sub_16A9F28(*(void *)(a1 + 64));
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
LABEL_13:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v14 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v4 += v15;
  }
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

std::string *sub_16AAA80(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)v3[2].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v12 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v12 = (void *)*v12;
        }
        std::string::pointer data = (std::string *)sub_16AF6E4((uint64_t)v12);
        v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v13 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v13 = &off_2543E30;
      }
      uint64_t result = sub_16A07E0(data, (uint64_t)v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_33;
        }
        goto LABEL_25;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    unint64_t v14 = (std::string *)v3[2].__r_.__value_.__l.__size_;
    if (!v14)
    {
      std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      unint64_t v14 = (std::string *)sub_16B0030((uint64_t)v16);
      v3[2].__r_.__value_.__l.__size_ = (std::string::size_type)v14;
    }
    if (*(void *)(a2 + 56)) {
      unsigned int v17 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      unsigned int v17 = &off_2544198;
    }
    uint64_t result = sub_16A9A70(v14, (uint64_t)v17);
    if ((v9 & 4) != 0)
    {
LABEL_25:
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
      uint64_t v18 = (std::string *)v3[2].__r_.__value_.__r.__words[2];
      if (!v18)
      {
        std::string::size_type v19 = v3->__r_.__value_.__l.__size_;
        unsigned int v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          unsigned int v20 = (void *)*v20;
        }
        uint64_t v18 = (std::string *)sub_16B00B4((uint64_t)v20);
        v3[2].__r_.__value_.__r.__words[2] = (std::string::size_type)v18;
      }
      if (*(void *)(a2 + 64)) {
        uint64_t v21 = *(uint64_t (****)())(a2 + 64);
      }
      else {
        uint64_t v21 = &off_25441C0;
      }
      uint64_t result = sub_16A9FB0(v18, (uint64_t)v21);
    }
  }
LABEL_33:
  uint64_t v22 = *(void *)(a2 + 8);
  if (v22)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v22 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16AAC4C()
{
  return 1;
}

void *sub_16AAC54@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetectionInternal.SegmentLabel.Label");
}

uint64_t sub_16AAC64(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_16AAD00((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_11DB7D4((void *)(a1 + 48));
  sub_16B521C((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_16AAD00(uint64_t (***result)()))()
{
  if (result != &off_2544228)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[9];
    if (v2)
    {
      sub_16A7268(v2);
      operator delete();
    }
    int v3 = v1[10];
    if (v3)
    {
      sub_16A89CC(v3);
      operator delete();
    }
    int v4 = v1[11];
    if (v4)
    {
      sub_16AC68C(v4);
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[12];
    if (result)
    {
      sub_16A89CC(result);
      operator delete();
    }
  }
  return result;
}

void sub_16AADCC(uint64_t a1)
{
  sub_16AAC64(a1);

  operator delete();
}

uint64_t sub_16AAE04(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_16AA1A0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = (uint64_t)sub_15B09D0(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  int v8 = *(_DWORD *)(v1 + 16);
  if ((v8 & 0xF) != 0)
  {
    if (v8)
    {
      uint64_t v9 = *(void *)(v1 + 72);
      char v10 = *(unsigned char *)(v9 + 8);
      uint64_t result = v9 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 32) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v10) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v8 & 2) != 0)
    {
      uint64_t result = sub_16A0DE4(*(void *)(v1 + 80));
      if ((v8 & 4) == 0)
      {
LABEL_15:
        if ((v8 & 8) == 0) {
          goto LABEL_17;
        }
        goto LABEL_16;
      }
    }
    else if ((v8 & 4) == 0)
    {
      goto LABEL_15;
    }
    uint64_t result = sub_16AAF14(*(void *)(v1 + 88));
    if ((v8 & 8) != 0) {
LABEL_16:
    }
      uint64_t result = sub_16A0DE4(*(void *)(v1 + 96));
  }
LABEL_17:
  if ((v8 & 0x30) != 0)
  {
    *(void *)(v1 + 104) = 0;
    *(void *)(v1 + 112) = 0;
  }
  char v12 = *(unsigned char *)(v1 + 8);
  uint64_t v11 = v1 + 8;
  *(_DWORD *)(v11 + 8) = 0;
  if (v12)
  {
    return sub_188B4AC((uint64_t *)v11);
  }
  return result;
}

uint64_t sub_16AAF14(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 72) = 0;
  *(_DWORD *)(a1 + 96) = 0;
  *(_DWORD *)(a1 + 120) = 0;
  *(_DWORD *)(a1 + 144) = 0;
  *(_DWORD *)(a1 + 168) = 0;
  *(_DWORD *)(a1 + 192) = 0;
  *(_DWORD *)(a1 + 216) = 0;
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(_DWORD *)(a1 + 244) = 0;
    *(void *)(a1 + 236) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_16AAF60(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v38 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v38, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v38 + 1;
    unsigned int v9 = *v38;
    if (*v38 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v38, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v38 + 2;
      }
    }
    uint64_t v38 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 9) {
          goto LABEL_58;
        }
        uint64_t v13 = *(void *)v8;
        char v12 = v8 + 8;
        v5 |= 0x10u;
        *(void *)(a1 + 104) = v13;
        goto LABEL_44;
      case 2u:
        if (v9 != 18) {
          goto LABEL_58;
        }
        unint64_t v14 = v8 - 1;
        while (1)
        {
          std::string::size_type v15 = (unsigned __int8 *)(v14 + 1);
          uint64_t v38 = v14 + 1;
          uint64_t v16 = *(_DWORD **)(a1 + 40);
          if (v16 && (uint64_t v17 = *(int *)(a1 + 32), (int)v17 < *v16))
          {
            *(_DWORD *)(a1 + 32) = v17 + 1;
            uint64_t v18 = *(void *)&v16[2 * v17 + 2];
          }
          else
          {
            uint64_t v19 = sub_16B012C(*(void *)(a1 + 24));
            uint64_t v18 = sub_188CDC8(a1 + 24, v19);
            std::string::size_type v15 = (unsigned __int8 *)v38;
          }
          unint64_t v14 = (char *)sub_16AB370(a3, v18, v15);
          uint64_t v38 = v14;
          if (!v14) {
            goto LABEL_71;
          }
          if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
            goto LABEL_66;
          }
        }
      case 3u:
        if (v9 != 26) {
          goto LABEL_58;
        }
        unsigned int v20 = v8 - 1;
        while (1)
        {
          uint64_t v21 = (unsigned __int8 *)(v20 + 1);
          uint64_t v38 = v20 + 1;
          uint64_t v22 = *(_DWORD **)(a1 + 64);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 56), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 56) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            uint64_t v25 = sub_15C1918(*(void *)(a1 + 48));
            uint64_t v24 = sub_188CDC8(a1 + 48, v25);
            uint64_t v21 = (unsigned __int8 *)v38;
          }
          unsigned int v20 = sub_1198F14(a3, v24, v21);
          uint64_t v38 = v20;
          if (!v20) {
            goto LABEL_71;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 26) {
            goto LABEL_66;
          }
        }
      case 4u:
        if (v9 != 34) {
          goto LABEL_58;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v26 = *(void *)(a1 + 72);
        if (!v26)
        {
          uint64_t v27 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v27 = (void *)*v27;
          }
          uint64_t v26 = sub_16AFDD8((uint64_t)v27);
          *(void *)(a1 + 72) = v26;
          int v8 = v38;
        }
        uint64_t v28 = sub_16A1660(a3, v26, (unsigned __int8 *)v8);
        goto LABEL_65;
      case 5u:
        if (v9 != 42) {
          goto LABEL_58;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v29 = *(void *)(a1 + 80);
        if (v29) {
          goto LABEL_57;
        }
        unint64_t v30 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unint64_t v30 = (void *)*v30;
        }
        uint64_t v29 = sub_16AFF7C((uint64_t)v30);
        *(void *)(a1 + 80) = v29;
        goto LABEL_56;
      case 6u:
        if (v9 != 49) {
          goto LABEL_58;
        }
        uint64_t v31 = *(void *)v8;
        char v12 = v8 + 8;
        v5 |= 0x20u;
        *(void *)(a1 + 112) = v31;
LABEL_44:
        uint64_t v38 = v12;
        goto LABEL_66;
      case 7u:
        if (v9 != 58) {
          goto LABEL_58;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v32 = *(_DWORD **)(a1 + 88);
        if (!v32)
        {
          int v33 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v33 = (void *)*v33;
          }
          sub_16B0328((uint64_t)v33);
          uint64_t v32 = v34;
          *(void *)(a1 + 88) = v34;
          int v8 = v38;
        }
        uint64_t v28 = sub_16AB400(a3, v32, (unsigned __int8 *)v8);
        goto LABEL_65;
      case 8u:
        if (v9 != 66) {
          goto LABEL_58;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v29 = *(void *)(a1 + 96);
        if (v29) {
          goto LABEL_57;
        }
        uint64_t v35 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v35 = (void *)*v35;
        }
        uint64_t v29 = sub_16AFF7C((uint64_t)v35);
        *(void *)(a1 + 96) = v29;
LABEL_56:
        int v8 = v38;
LABEL_57:
        uint64_t v28 = (char *)sub_16A1540(a3, v29, (unsigned __int8 *)v8);
        goto LABEL_65;
      default:
LABEL_58:
        if (v9) {
          BOOL v36 = (v9 & 7) == 4;
        }
        else {
          BOOL v36 = 1;
        }
        if (!v36)
        {
          if (*v7)
          {
            BOOL v37 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            BOOL v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v38;
          }
          uint64_t v28 = (char *)sub_1885AC0(v9, v37, v8, a3);
LABEL_65:
          uint64_t v38 = v28;
          if (!v28) {
            goto LABEL_71;
          }
LABEL_66:
          if (sub_11947B8((uint64_t)a3, &v38, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_71:
        }
          uint64_t v38 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v38;
    }
  }
}

uint64_t sub_16AB370(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16AA230(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16AB400(int32x2_t *a1, _DWORD *a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16AC780(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_16AB490(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 104);
    *uint64_t v4 = 9;
    *(void *)(v4 + 1) = v7;
    v4 += 9;
  }
  int v8 = *(_DWORD *)(a1 + 32);
  if (v8)
  {
    for (int i = 0; i != v8; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v11 = *(_DWORD *)(v10 + 20);
      v4[1] = v11;
      if (v11 > 0x7F) {
        char v12 = sub_188A9CC(v11, v4 + 1);
      }
      else {
        char v12 = v4 + 2;
      }
      uint64_t v4 = sub_16AA678(v10, v12, a3);
    }
  }
  int v13 = *(_DWORD *)(a1 + 56);
  if (v13)
  {
    for (int j = 0; j != v13; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *uint64_t v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 44);
      v4[1] = v16;
      if (v16 > 0x7F) {
        uint64_t v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        uint64_t v17 = v4 + 2;
      }
      uint64_t v4 = sub_15B0C0C(v15, v17, a3);
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v18 = *(void *)(a1 + 72);
    *uint64_t v4 = 34;
    unsigned int v19 = *(_DWORD *)(v18 + 20);
    v4[1] = v19;
    if (v19 > 0x7F) {
      unsigned int v20 = sub_188A9CC(v19, v4 + 1);
    }
    else {
      unsigned int v20 = v4 + 2;
    }
    uint64_t v4 = sub_16A7598(v18, v20, a3);
    if ((v6 & 2) == 0)
    {
LABEL_23:
      if ((v6 & 0x20) == 0) {
        goto LABEL_24;
      }
      goto LABEL_39;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_23;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v21 = *(void *)(a1 + 80);
  *uint64_t v4 = 42;
  unsigned int v22 = *(_DWORD *)(v21 + 112);
  v4[1] = v22;
  if (v22 > 0x7F) {
    uint64_t v23 = sub_188A9CC(v22, v4 + 1);
  }
  else {
    uint64_t v23 = v4 + 2;
  }
  uint64_t v4 = sub_16A9050(v21, v23, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_24:
    if ((v6 & 4) == 0) {
      goto LABEL_25;
    }
    goto LABEL_42;
  }
LABEL_39:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v24 = *(void *)(a1 + 112);
  *uint64_t v4 = 49;
  *(void *)(v4 + 1) = v24;
  v4 += 9;
  if ((v6 & 4) == 0)
  {
LABEL_25:
    if ((v6 & 8) == 0) {
      goto LABEL_54;
    }
    goto LABEL_48;
  }
LABEL_42:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v25 = *(void *)(a1 + 88);
  *uint64_t v4 = 58;
  unsigned int v26 = *(_DWORD *)(v25 + 20);
  v4[1] = v26;
  if (v26 > 0x7F) {
    uint64_t v27 = sub_188A9CC(v26, v4 + 1);
  }
  else {
    uint64_t v27 = v4 + 2;
  }
  uint64_t v4 = sub_16ACD24(v25, (unint64_t)v27, a3);
  if ((v6 & 8) != 0)
  {
LABEL_48:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v28 = *(void *)(a1 + 96);
    *uint64_t v4 = 66;
    unsigned int v29 = *(_DWORD *)(v28 + 112);
    v4[1] = v29;
    if (v29 > 0x7F) {
      unint64_t v30 = sub_188A9CC(v29, v4 + 1);
    }
    else {
      unint64_t v30 = v4 + 2;
    }
    uint64_t v4 = sub_16A9050(v28, v30, a3);
  }
LABEL_54:
  uint64_t v31 = *(void *)(a1 + 8);
  if ((v31 & 1) == 0) {
    return v4;
  }
  unint64_t v33 = v31 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v33 + 31) < 0)
  {
    uint64_t v34 = *(void **)(v33 + 8);
    uint64_t v35 = *(void *)(v33 + 16);
  }
  else
  {
    uint64_t v34 = (void *)(v33 + 8);
    LODWORD(v35) = *(unsigned __int8 *)(v33 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v35)
  {
    uint64_t v36 = (int)v35;
    memcpy(v4, v34, (int)v35);
    v4 += v36;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v34, v35, v4);
}

uint64_t sub_16AB870(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_16AA91C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_15B0D90(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 0x3F) != 0)
  {
    if (v15)
    {
      uint64_t v20 = sub_16A7768(*(void *)(a1 + 72));
      v9 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v15 & 2) == 0)
      {
LABEL_18:
        if ((v15 & 4) == 0) {
          goto LABEL_19;
        }
        goto LABEL_30;
      }
    }
    else if ((v15 & 2) == 0)
    {
      goto LABEL_18;
    }
    uint64_t v21 = sub_16A9344(*(void *)(a1 + 80));
    v9 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 4) == 0)
    {
LABEL_19:
      if ((v15 & 8) == 0)
      {
LABEL_21:
        uint64_t v17 = v9 + 9;
        if ((v15 & 0x10) == 0) {
          uint64_t v17 = v9;
        }
        if ((v15 & 0x20) != 0) {
          uint64_t v9 = v17 + 9;
        }
        else {
          uint64_t v9 = v17;
        }
        goto LABEL_26;
      }
LABEL_20:
      uint64_t v16 = sub_16A9344(*(void *)(a1 + 96));
      v9 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
      goto LABEL_21;
    }
LABEL_30:
    uint64_t v22 = sub_16AD79C(*(void *)(a1 + 88));
    v9 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 8) == 0) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }
LABEL_26:
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18)
  {
    unint64_t v23 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v23 + 31) < 0) {
      uint64_t v24 = *(void *)(v23 + 16);
    }
    else {
      uint64_t v24 = *(unsigned __int8 *)(v23 + 31);
    }
    v9 += v24;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

void sub_16ABA64(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_16B5854((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unsigned int v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_10E4FFC((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 0x3F) != 0)
  {
    if (v14)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      int v15 = *(std::string **)(a1 + 72);
      if (!v15)
      {
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v17 = (void *)*v17;
        }
        int v15 = (std::string *)sub_16AFDD8((uint64_t)v17);
        *(void *)(a1 + 72) = v15;
      }
      if (*(void *)(a2 + 72)) {
        uint64_t v18 = *(uint64_t (****)())(a2 + 72);
      }
      else {
        uint64_t v18 = &off_25440F0;
      }
      sub_11E3E70(v15, (uint64_t)v18);
    }
    if ((v14 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v20 = *(std::string **)(a1 + 80);
      if (!v20)
      {
        uint64_t v21 = *(void *)(a1 + 8);
        uint64_t v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          uint64_t v22 = (void *)*v22;
        }
        uint64_t v20 = (std::string *)sub_16AFF7C((uint64_t)v22);
        *(void *)(a1 + 80) = v20;
      }
      if (*(void *)(a2 + 80)) {
        unint64_t v23 = *(uint64_t (****)())(a2 + 80);
      }
      else {
        unint64_t v23 = &off_2544120;
      }
      sub_16A2084(v20, (uint64_t)v23);
      if ((v14 & 4) == 0)
      {
LABEL_19:
        if ((v14 & 8) == 0) {
          goto LABEL_20;
        }
        goto LABEL_44;
      }
    }
    else if ((v14 & 4) == 0)
    {
      goto LABEL_19;
    }
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v24 = *(std::string **)(a1 + 88);
    if (!v24)
    {
      uint64_t v25 = *(void *)(a1 + 8);
      unsigned int v26 = (void *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
      if (v25) {
        unsigned int v26 = (void *)*v26;
      }
      sub_16B0328((uint64_t)v26);
      *(void *)(a1 + 88) = v24;
    }
    if (*(void *)(a2 + 88)) {
      uint64_t v27 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      uint64_t v27 = &off_25442D0;
    }
    sub_16ABD04(v24, (uint64_t)v27);
    if ((v14 & 8) == 0)
    {
LABEL_20:
      if ((v14 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_52;
    }
LABEL_44:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v28 = *(std::string **)(a1 + 96);
    if (!v28)
    {
      uint64_t v29 = *(void *)(a1 + 8);
      unint64_t v30 = (void *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
      if (v29) {
        unint64_t v30 = (void *)*v30;
      }
      uint64_t v28 = (std::string *)sub_16AFF7C((uint64_t)v30);
      *(void *)(a1 + 96) = v28;
    }
    if (*(void *)(a2 + 96)) {
      uint64_t v31 = *(uint64_t (****)())(a2 + 96);
    }
    else {
      uint64_t v31 = &off_2544120;
    }
    sub_16A2084(v28, (uint64_t)v31);
    if ((v14 & 0x10) == 0)
    {
LABEL_21:
      if ((v14 & 0x20) == 0)
      {
LABEL_23:
        *(_DWORD *)(a1 + 16) |= v14;
        goto LABEL_24;
      }
LABEL_22:
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      goto LABEL_23;
    }
LABEL_52:
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    if ((v14 & 0x20) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
LABEL_24:
  uint64_t v19 = *(void *)(a2 + 8);
  if (v19)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v19 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_16ABD04(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 48);
  if (v8)
  {
    uint64_t v9 = SLODWORD(v3[2].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&v3[2], v9 + v8);
    std::string::size_type v10 = v3[2].__r_.__value_.__l.__size_;
    LODWORD(v3[2].__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 48);
    uint64_t result = (std::string *)memcpy((void *)(v10 + 4 * v9), *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  int v11 = *(_DWORD *)(a2 + 72);
  if (v11)
  {
    uint64_t v12 = SLODWORD(v3[3].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&v3[3], v12 + v11);
    std::string::size_type v13 = v3[3].__r_.__value_.__l.__size_;
    LODWORD(v3[3].__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 72);
    uint64_t result = (std::string *)memcpy((void *)(v13 + 4 * v12), *(const void **)(a2 + 80), 4 * *(int *)(a2 + 72));
  }
  int v14 = *(_DWORD *)(a2 + 96);
  if (v14)
  {
    uint64_t v15 = SLODWORD(v3[4].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&v3[4], v15 + v14);
    std::string::size_type v16 = v3[4].__r_.__value_.__l.__size_;
    LODWORD(v3[4].__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 96);
    uint64_t result = (std::string *)memcpy((void *)(v16 + 4 * v15), *(const void **)(a2 + 104), 4 * *(int *)(a2 + 96));
  }
  int v17 = *(_DWORD *)(a2 + 120);
  if (v17)
  {
    uint64_t v18 = SLODWORD(v3[5].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&v3[5], v18 + v17);
    std::string::size_type v19 = v3[5].__r_.__value_.__l.__size_;
    LODWORD(v3[5].__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 120);
    uint64_t result = (std::string *)memcpy((void *)(v19 + 4 * v18), *(const void **)(a2 + 128), 4 * *(int *)(a2 + 120));
  }
  int v20 = *(_DWORD *)(a2 + 144);
  if (v20)
  {
    uint64_t v21 = SLODWORD(v3[6].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&v3[6], v21 + v20);
    std::string::size_type v22 = v3[6].__r_.__value_.__l.__size_;
    LODWORD(v3[6].__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 144);
    uint64_t result = (std::string *)memcpy((void *)(v22 + 4 * v21), *(const void **)(a2 + 152), 4 * *(int *)(a2 + 144));
  }
  int v23 = *(_DWORD *)(a2 + 168);
  if (v23)
  {
    uint64_t v24 = SLODWORD(v3[7].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&v3[7], v24 + v23);
    std::string::size_type v25 = v3[7].__r_.__value_.__l.__size_;
    LODWORD(v3[7].__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 168);
    uint64_t result = (std::string *)memcpy((void *)(v25 + 4 * v24), *(const void **)(a2 + 176), 4 * *(int *)(a2 + 168));
  }
  int v26 = *(_DWORD *)(a2 + 192);
  if (v26)
  {
    uint64_t v27 = SLODWORD(v3[8].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&v3[8], v27 + v26);
    std::string::size_type v28 = v3[8].__r_.__value_.__l.__size_;
    LODWORD(v3[8].__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 192);
    uint64_t result = (std::string *)memcpy((void *)(v28 + 4 * v27), *(const void **)(a2 + 200), 4 * *(int *)(a2 + 192));
  }
  int v29 = *(_DWORD *)(a2 + 216);
  if (v29)
  {
    uint64_t v30 = SLODWORD(v3[9].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&v3[9], v30 + v29);
    std::string::size_type v31 = v3[9].__r_.__value_.__l.__size_;
    LODWORD(v3[9].__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 216);
    uint64_t result = (std::string *)memcpy((void *)(v31 + 4 * v30), *(const void **)(a2 + 224), 4 * *(int *)(a2 + 216));
  }
  int v32 = *(_DWORD *)(a2 + 16);
  if ((v32 & 7) != 0)
  {
    if (v32)
    {
      HIDWORD(v3[9].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 236);
      if ((v32 & 2) == 0)
      {
LABEL_22:
        if ((v32 & 4) == 0)
        {
LABEL_24:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v32;
          goto LABEL_25;
        }
LABEL_23:
        HIDWORD(v3[10].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 244);
        goto LABEL_24;
      }
    }
    else if ((v32 & 2) == 0)
    {
      goto LABEL_22;
    }
    LODWORD(v3[10].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 240);
    if ((v32 & 4) == 0) {
      goto LABEL_24;
    }
    goto LABEL_23;
  }
LABEL_25:
  uint64_t v33 = *(void *)(a2 + 8);
  if (v33)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v33 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_16AC010(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_15B0F18(*(void *)(*(void *)(a1 + 64) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_16AC068@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetectionInternal.SegmentLabel");
}

void *sub_16AC078(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_16B529C(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16AC0F8(void *a1)
{
  sub_16AC078(a1);

  operator delete();
}

char *sub_16AC130(uint64_t a1, char *a2, int32x2_t *a3)
{
  std::string::size_type v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    char v5 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          uint64_t v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          uint64_t v6 = v19 + 2;
        }
      }
      std::string::size_type v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          std::string::size_type v13 = (unsigned __int8 *)(v12 + 1);
          std::string::size_type v19 = v12 + 1;
          int v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            sub_16B01CC(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            std::string::size_type v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = sub_16AC2D0(a3, v16, v13);
          std::string::size_type v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        int v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        int v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v6 = v19;
      }
      std::string::size_type v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_16AC2D0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16AAF60(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16AC360(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        std::string::size_type v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        std::string::size_type v10 = __dst + 2;
      }
      __dst = sub_16AB490(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_16AC4A4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_16AB870(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

uint64_t sub_16AC554(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 >= 1)
  {
    do
    {
      uint64_t v3 = v1--;
      uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * v1 + 8);
      uint64_t v5 = *(unsigned int *)(v4 + 56);
      while ((int)v5 >= 1)
      {
        uint64_t v6 = v5 - 1;
        char v7 = sub_15B0F18(*(void *)(*(void *)(v4 + 64) + 8 * v5));
        uint64_t v5 = v6;
        if ((v7 & 1) == 0) {
          return 0;
        }
      }
    }
    while (v3 >= 2);
  }
  return 1;
}

void *sub_16AC5E0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetectionInternal");
}

double sub_16AC5F0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)a1 = off_24CFDB8;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = a2;
  *(_DWORD *)(a1 + 40) = 0;
  double result = 0.0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = a2;
  *(_DWORD *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = a2;
  *(_DWORD *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = a2;
  *(_DWORD *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = a2;
  *(_DWORD *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = a2;
  *(_DWORD *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = a2;
  *(_DWORD *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = a2;
  *(_DWORD *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 240) = 0;
  *(void *)(a1 + 224) = a2;
  return result;
}

void *sub_16AC68C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 27));
  sub_1889DA8((uint64_t)(a1 + 24));
  sub_1889DA8((uint64_t)(a1 + 21));
  sub_1889DA8((uint64_t)(a1 + 18));
  sub_1889DA8((uint64_t)(a1 + 15));
  sub_1889DA8((uint64_t)(a1 + 12));
  sub_1889DA8((uint64_t)(a1 + 9));
  sub_1889DA8((uint64_t)(a1 + 6));
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16AC748(void *a1)
{
  sub_16AC68C(a1);

  operator delete();
}

char *sub_16AC780(_DWORD *a1, char *a2, int32x2_t *a3)
{
  uint64_t v40 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v40, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v39 = (uint64_t *)(a1 + 2);
  while (2)
  {
    char v7 = v40 + 1;
    unsigned int v8 = *v40;
    if (*v40 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180((uint64_t)v40, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = v40 + 2;
      }
    }
    uint64_t v40 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 == 10)
        {
          uint64_t v11 = a1 + 6;
          goto LABEL_42;
        }
        if (v8 != 8) {
          goto LABEL_72;
        }
        int v28 = sub_110DB5C((uint64_t *)&v40);
        sub_1632D50((uint64_t)a1, v28);
        goto LABEL_70;
      case 2u:
        if (v8 == 18)
        {
          uint64_t v11 = a1 + 12;
LABEL_42:
          uint64_t v21 = sub_188C2BC(v11, (unsigned __int8 *)v7, (uint64_t)a3);
          goto LABEL_43;
        }
        if (v8 != 16) {
          goto LABEL_72;
        }
        int v29 = sub_110DB5C((uint64_t *)&v40);
        sub_1182598((uint64_t)a1, v29);
        goto LABEL_70;
      case 3u:
        if (v8 == 26)
        {
          uint64_t v11 = a1 + 18;
          goto LABEL_42;
        }
        if (v8 != 24) {
          goto LABEL_72;
        }
        int v30 = sub_110DB5C((uint64_t *)&v40);
        sub_133704C((uint64_t)a1, v30);
        goto LABEL_70;
      case 4u:
        if (v8 == 34)
        {
          uint64_t v11 = a1 + 24;
          goto LABEL_42;
        }
        if (v8 != 32) {
          goto LABEL_72;
        }
        int v31 = sub_110DB5C((uint64_t *)&v40);
        sub_13370BC((uint64_t)a1, v31);
        goto LABEL_70;
      case 5u:
        if (v8 == 42)
        {
          uint64_t v11 = a1 + 30;
          goto LABEL_42;
        }
        if (v8 != 40) {
          goto LABEL_72;
        }
        int v32 = sub_110DB5C((uint64_t *)&v40);
        sub_1557F08((uint64_t)a1, v32);
        goto LABEL_70;
      case 6u:
        if (v8 == 50)
        {
          uint64_t v11 = a1 + 36;
          goto LABEL_42;
        }
        if (v8 != 48) {
          goto LABEL_72;
        }
        int v33 = sub_110DB5C((uint64_t *)&v40);
        sub_13DD524((uint64_t)a1, v33);
        goto LABEL_70;
      case 7u:
        if (v8 != 56) {
          goto LABEL_72;
        }
        v5 |= 1u;
        uint64_t v12 = v7 + 1;
        int v13 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if (v14 < 0)
        {
          std::string::size_type v22 = (char *)sub_188C0D0((uint64_t)v7, v13);
          uint64_t v40 = v22;
          a1[59] = v23;
          if (!v22) {
            goto LABEL_82;
          }
        }
        else
        {
          uint64_t v12 = v7 + 2;
LABEL_25:
          uint64_t v40 = v12;
          a1[59] = v13;
        }
        goto LABEL_44;
      case 8u:
        if (v8 != 64) {
          goto LABEL_72;
        }
        v5 |= 2u;
        uint64_t v15 = v7 + 1;
        int v16 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v24 = (char *)sub_188C0D0((uint64_t)v7, v16);
          uint64_t v40 = v24;
          a1[60] = v25;
          if (!v24) {
            goto LABEL_82;
          }
        }
        else
        {
          uint64_t v15 = v7 + 2;
LABEL_30:
          uint64_t v40 = v15;
          a1[60] = v16;
        }
        goto LABEL_44;
      case 9u:
        if (v8 != 72) {
          goto LABEL_72;
        }
        v5 |= 4u;
        uint64_t v18 = v7 + 1;
        int v19 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_35;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          int v26 = (char *)sub_188C0D0((uint64_t)v7, v19);
          uint64_t v40 = v26;
          a1[61] = v27;
          if (!v26) {
            goto LABEL_82;
          }
        }
        else
        {
          uint64_t v18 = v7 + 2;
LABEL_35:
          uint64_t v40 = v18;
          a1[61] = v19;
        }
        goto LABEL_44;
      case 0xAu:
        if (v8 == 82)
        {
          uint64_t v11 = a1 + 42;
          goto LABEL_42;
        }
        if (v8 != 80) {
          goto LABEL_72;
        }
        int v34 = sub_110DB5C((uint64_t *)&v40);
        sub_13DD594((uint64_t)a1, v34);
        goto LABEL_70;
      case 0xBu:
        if (v8 == 90)
        {
          uint64_t v11 = a1 + 48;
          goto LABEL_42;
        }
        if (v8 != 88) {
          goto LABEL_72;
        }
        int v35 = sub_110DB5C((uint64_t *)&v40);
        sub_16ACC44((uint64_t)a1, v35);
        goto LABEL_70;
      case 0xCu:
        if (v8 == 98)
        {
          uint64_t v11 = a1 + 54;
          goto LABEL_42;
        }
        if (v8 == 96)
        {
          int v36 = sub_110DB5C((uint64_t *)&v40);
          sub_16ACCB4((uint64_t)a1, v36);
LABEL_70:
          if (!v40) {
            goto LABEL_82;
          }
LABEL_44:
          if (sub_11947B8((uint64_t)a3, &v40, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_72:
        if (v8) {
          BOOL v37 = (v8 & 7) == 4;
        }
        else {
          BOOL v37 = 1;
        }
        if (!v37)
        {
          if (*v39)
          {
            uint64_t v38 = (std::string *)((*v39 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v38 = (std::string *)sub_188DBD8(v39);
            char v7 = v40;
          }
          uint64_t v21 = sub_1885AC0(v8, v38, v7, a3);
LABEL_43:
          uint64_t v40 = (char *)v21;
          if (!v21) {
            goto LABEL_82;
          }
          goto LABEL_44;
        }
        if (v7) {
          a3[10].i32[0] = v8 - 1;
        }
        else {
LABEL_82:
        }
          uint64_t v40 = 0;
LABEL_2:
        a1[4] |= v5;
        return v40;
      default:
        goto LABEL_72;
    }
  }
}

void sub_16ACC44(uint64_t a1, int a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 192);
  uint64_t v4 = (_DWORD *)(a1 + 192);
  if (v5 == *(_DWORD *)(a1 + 196))
  {
    int v6 = v5 + 1;
    sub_188C80C((unsigned int *)(a1 + 192), v5 + 1);
    *(_DWORD *)(*(void *)(a1 + 200) + 4 * v5) = a2;
  }
  else
  {
    *(_DWORD *)(*(void *)(a1 + 200) + 4 * v5) = a2;
    int v6 = v5 + 1;
  }
  *uint64_t v4 = v6;
}

void sub_16ACCB4(uint64_t a1, int a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 216);
  uint64_t v4 = (_DWORD *)(a1 + 216);
  if (v5 == *(_DWORD *)(a1 + 220))
  {
    int v6 = v5 + 1;
    sub_188C80C((unsigned int *)(a1 + 216), v5 + 1);
    *(_DWORD *)(*(void *)(a1 + 224) + 4 * v5) = a2;
  }
  else
  {
    *(_DWORD *)(*(void *)(a1 + 224) + 4 * v5) = a2;
    int v6 = v5 + 1;
  }
  *uint64_t v4 = v6;
}

unsigned char *sub_16ACD24(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  unsigned int v6 = *(_DWORD *)(a1 + 40);
  if ((int)v6 >= 1)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    *uint64_t v4 = 10;
    char v7 = v4 + 1;
    if (v6 >= 0x80)
    {
      do
      {
        *v7++ = v6 | 0x80;
        unsigned int v93 = v6 >> 14;
        v6 >>= 7;
      }
      while (v93);
      uint64_t v4 = v7 - 1;
    }
    v4 += 2;
    *char v7 = v6;
    unsigned int v8 = *(int **)(a1 + 32);
    unsigned int v9 = &v8[*(int *)(a1 + 24)];
    do
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v11 = *v8++;
      unint64_t v10 = v11;
      *uint64_t v4 = v11;
      if (v11 > 0x7F)
      {
        *uint64_t v4 = v10 | 0x80;
        unint64_t v12 = v10 >> 7;
        v4[1] = v10 >> 7;
        v4 += 2;
        if (v10 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v13 = v12 >> 14;
            v12 >>= 7;
            *v4++ = v12;
          }
          while (v13);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v8 < v9);
  }
  unsigned int v14 = *(_DWORD *)(a1 + 64);
  if ((int)v14 >= 1)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    *uint64_t v4 = 18;
    uint64_t v15 = v4 + 1;
    if (v14 >= 0x80)
    {
      do
      {
        *v15++ = v14 | 0x80;
        unsigned int v94 = v14 >> 14;
        v14 >>= 7;
      }
      while (v94);
      uint64_t v4 = v15 - 1;
    }
    v4 += 2;
    unsigned char *v15 = v14;
    int v16 = *(int **)(a1 + 56);
    int v17 = &v16[*(int *)(a1 + 48)];
    do
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v19 = *v16++;
      unint64_t v18 = v19;
      *uint64_t v4 = v19;
      if (v19 > 0x7F)
      {
        *uint64_t v4 = v18 | 0x80;
        unint64_t v20 = v18 >> 7;
        v4[1] = v18 >> 7;
        v4 += 2;
        if (v18 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v21 = v20 >> 14;
            v20 >>= 7;
            *v4++ = v20;
          }
          while (v21);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v16 < v17);
  }
  unsigned int v22 = *(_DWORD *)(a1 + 88);
  if ((int)v22 >= 1)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    *uint64_t v4 = 26;
    int v23 = v4 + 1;
    if (v22 >= 0x80)
    {
      do
      {
        *v23++ = v22 | 0x80;
        unsigned int v95 = v22 >> 14;
        v22 >>= 7;
      }
      while (v95);
      uint64_t v4 = v23 - 1;
    }
    v4 += 2;
    *int v23 = v22;
    uint64_t v24 = *(int **)(a1 + 80);
    int v25 = &v24[*(int *)(a1 + 72)];
    do
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v27 = *v24++;
      unint64_t v26 = v27;
      *uint64_t v4 = v27;
      if (v27 > 0x7F)
      {
        *uint64_t v4 = v26 | 0x80;
        unint64_t v28 = v26 >> 7;
        v4[1] = v26 >> 7;
        v4 += 2;
        if (v26 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v29 = v28 >> 14;
            v28 >>= 7;
            *v4++ = v28;
          }
          while (v29);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v24 < v25);
  }
  unsigned int v30 = *(_DWORD *)(a1 + 112);
  if ((int)v30 >= 1)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    *uint64_t v4 = 34;
    int v31 = v4 + 1;
    if (v30 >= 0x80)
    {
      do
      {
        *v31++ = v30 | 0x80;
        unsigned int v96 = v30 >> 14;
        v30 >>= 7;
      }
      while (v96);
      uint64_t v4 = v31 - 1;
    }
    v4 += 2;
    *int v31 = v30;
    int v32 = *(int **)(a1 + 104);
    int v33 = &v32[*(int *)(a1 + 96)];
    do
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v35 = *v32++;
      unint64_t v34 = v35;
      *uint64_t v4 = v35;
      if (v35 > 0x7F)
      {
        *uint64_t v4 = v34 | 0x80;
        unint64_t v36 = v34 >> 7;
        v4[1] = v34 >> 7;
        v4 += 2;
        if (v34 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v37 = v36 >> 14;
            v36 >>= 7;
            *v4++ = v36;
          }
          while (v37);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v32 < v33);
  }
  unsigned int v38 = *(_DWORD *)(a1 + 136);
  if ((int)v38 >= 1)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    *uint64_t v4 = 42;
    uint64_t v39 = v4 + 1;
    if (v38 >= 0x80)
    {
      do
      {
        *v39++ = v38 | 0x80;
        unsigned int v97 = v38 >> 14;
        v38 >>= 7;
      }
      while (v97);
      uint64_t v4 = v39 - 1;
    }
    v4 += 2;
    *uint64_t v39 = v38;
    uint64_t v40 = *(int **)(a1 + 128);
    uint64_t v41 = &v40[*(int *)(a1 + 120)];
    do
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v43 = *v40++;
      unint64_t v42 = v43;
      *uint64_t v4 = v43;
      if (v43 > 0x7F)
      {
        *uint64_t v4 = v42 | 0x80;
        unint64_t v44 = v42 >> 7;
        v4[1] = v42 >> 7;
        v4 += 2;
        if (v42 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v45 = v44 >> 14;
            v44 >>= 7;
            *v4++ = v44;
          }
          while (v45);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v40 < v41);
  }
  unsigned int v46 = *(_DWORD *)(a1 + 160);
  if ((int)v46 >= 1)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    *uint64_t v4 = 50;
    unint64_t v47 = v4 + 1;
    if (v46 >= 0x80)
    {
      do
      {
        *v47++ = v46 | 0x80;
        unsigned int v98 = v46 >> 14;
        v46 >>= 7;
      }
      while (v98);
      uint64_t v4 = v47 - 1;
    }
    v4 += 2;
    unsigned char *v47 = v46;
    uint64_t v48 = *(int **)(a1 + 152);
    uint64_t v49 = &v48[*(int *)(a1 + 144)];
    do
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v51 = *v48++;
      unint64_t v50 = v51;
      *uint64_t v4 = v51;
      if (v51 > 0x7F)
      {
        *uint64_t v4 = v50 | 0x80;
        unint64_t v52 = v50 >> 7;
        v4[1] = v50 >> 7;
        v4 += 2;
        if (v50 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v53 = v52 >> 14;
            v52 >>= 7;
            *v4++ = v52;
          }
          while (v53);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v48 < v49);
  }
  int v54 = *(_DWORD *)(a1 + 16);
  if (v54)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v55 = *(_DWORD *)(a1 + 236);
    *uint64_t v4 = 56;
    v4[1] = v55;
    if (v55 > 0x7F)
    {
      v4[1] = v55 | 0x80;
      unsigned int v56 = v55 >> 7;
      v4[2] = v55 >> 7;
      v4 += 3;
      if (v55 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v57 = v56 >> 14;
          v56 >>= 7;
          *v4++ = v56;
        }
        while (v57);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v54 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v58 = *(_DWORD *)(a1 + 240);
    *uint64_t v4 = 64;
    v4[1] = v58;
    if (v58 > 0x7F)
    {
      v4[1] = v58 | 0x80;
      unsigned int v59 = v58 >> 7;
      v4[2] = v58 >> 7;
      v4 += 3;
      if (v58 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v60 = v59 >> 14;
          v59 >>= 7;
          *v4++ = v59;
        }
        while (v60);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v54 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v61 = *(_DWORD *)(a1 + 244);
    *uint64_t v4 = 72;
    v4[1] = v61;
    if (v61 > 0x7F)
    {
      v4[1] = v61 | 0x80;
      unsigned int v62 = v61 >> 7;
      v4[2] = v61 >> 7;
      v4 += 3;
      if (v61 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v63 = v62 >> 14;
          v62 >>= 7;
          *v4++ = v62;
        }
        while (v63);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  unsigned int v64 = *(_DWORD *)(a1 + 184);
  if ((int)v64 >= 1)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    *uint64_t v4 = 82;
    int v65 = v4 + 1;
    if (v64 >= 0x80)
    {
      do
      {
        *v65++ = v64 | 0x80;
        unsigned int v99 = v64 >> 14;
        v64 >>= 7;
      }
      while (v99);
      uint64_t v4 = v65 - 1;
    }
    v4 += 2;
    unsigned char *v65 = v64;
    int v66 = *(int **)(a1 + 176);
    unint64_t v67 = &v66[*(int *)(a1 + 168)];
    do
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v69 = *v66++;
      unint64_t v68 = v69;
      *uint64_t v4 = v69;
      if (v69 > 0x7F)
      {
        *uint64_t v4 = v68 | 0x80;
        unint64_t v70 = v68 >> 7;
        v4[1] = v68 >> 7;
        v4 += 2;
        if (v68 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v71 = v70 >> 14;
            v70 >>= 7;
            *v4++ = v70;
          }
          while (v71);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v66 < v67);
  }
  unsigned int v72 = *(_DWORD *)(a1 + 208);
  if ((int)v72 >= 1)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    *uint64_t v4 = 90;
    int v73 = v4 + 1;
    if (v72 >= 0x80)
    {
      do
      {
        *v73++ = v72 | 0x80;
        unsigned int v100 = v72 >> 14;
        v72 >>= 7;
      }
      while (v100);
      uint64_t v4 = v73 - 1;
    }
    v4 += 2;
    *int v73 = v72;
    uint64_t v74 = *(int **)(a1 + 200);
    int v75 = &v74[*(int *)(a1 + 192)];
    do
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v77 = *v74++;
      unint64_t v76 = v77;
      *uint64_t v4 = v77;
      if (v77 > 0x7F)
      {
        *uint64_t v4 = v76 | 0x80;
        unint64_t v78 = v76 >> 7;
        v4[1] = v76 >> 7;
        v4 += 2;
        if (v76 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v79 = v78 >> 14;
            v78 >>= 7;
            *v4++ = v78;
          }
          while (v79);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v74 < v75);
  }
  unsigned int v80 = *(_DWORD *)(a1 + 232);
  if ((int)v80 >= 1)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    *uint64_t v4 = 98;
    uint64_t v81 = v4 + 1;
    if (v80 >= 0x80)
    {
      do
      {
        *v81++ = v80 | 0x80;
        unsigned int v101 = v80 >> 14;
        v80 >>= 7;
      }
      while (v101);
      uint64_t v4 = v81 - 1;
    }
    v4 += 2;
    unsigned char *v81 = v80;
    uint64_t v82 = *(int **)(a1 + 224);
    uint64_t v83 = &v82[*(int *)(a1 + 216)];
    do
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v85 = *v82++;
      unint64_t v84 = v85;
      *uint64_t v4 = v85;
      if (v85 > 0x7F)
      {
        *uint64_t v4 = v84 | 0x80;
        unint64_t v86 = v84 >> 7;
        v4[1] = v84 >> 7;
        v4 += 2;
        if (v84 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v87 = v86 >> 14;
            v86 >>= 7;
            *v4++ = v86;
          }
          while (v87);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v82 < v83);
  }
  uint64_t v88 = *(void *)(a1 + 8);
  if ((v88 & 1) == 0) {
    return v4;
  }
  unint64_t v90 = v88 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v90 + 31) < 0)
  {
    uint64_t v91 = *(void **)(v90 + 8);
    uint64_t v92 = *(void *)(v90 + 16);
  }
  else
  {
    uint64_t v91 = (void *)(v90 + 8);
    LODWORD(v92) = *(unsigned __int8 *)(v90 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v92)
  {
    uint64_t v102 = (int)v92;
    memcpy(v4, v91, (int)v92);
    v4 += v102;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v91, v92, v4);
}

uint64_t sub_16AD79C(uint64_t a1)
{
  uint64_t v2 = sub_188D498((unsigned int *)(a1 + 24));
  if (v2)
  {
    int v3 = v2;
    if ((v2 & 0x80000000) != 0) {
      uint64_t v4 = 10;
    }
    else {
      uint64_t v4 = (9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6;
    }
    uint64_t v5 = v4 + 1;
  }
  else
  {
    int v3 = 0;
    uint64_t v5 = 0;
  }
  *(_DWORD *)(a1 + 40) = v3;
  uint64_t v6 = v5 + v2;
  uint64_t v7 = sub_188D498((unsigned int *)(a1 + 48));
  uint64_t v8 = 10;
  uint64_t v9 = (9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6;
  if ((int)v7 >= 0) {
    uint64_t v8 = v9;
  }
  uint64_t v10 = v6 + v8;
  if (v7) {
    int v11 = v7;
  }
  else {
    int v11 = 0;
  }
  if (v7) {
    uint64_t v12 = v10 + 1;
  }
  else {
    uint64_t v12 = v6;
  }
  *(_DWORD *)(a1 + 64) = v11;
  uint64_t v13 = v12 + v7;
  uint64_t v14 = sub_188D498((unsigned int *)(a1 + 72));
  uint64_t v15 = 10;
  uint64_t v16 = (9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6;
  if ((int)v14 >= 0) {
    uint64_t v15 = v16;
  }
  uint64_t v17 = v13 + v15;
  if (v14) {
    int v18 = v14;
  }
  else {
    int v18 = 0;
  }
  if (v14) {
    uint64_t v19 = v17 + 1;
  }
  else {
    uint64_t v19 = v13;
  }
  *(_DWORD *)(a1 + 88) = v18;
  uint64_t v20 = v19 + v14;
  uint64_t v21 = sub_188D498((unsigned int *)(a1 + 96));
  uint64_t v22 = 10;
  uint64_t v23 = (9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6;
  if ((int)v21 >= 0) {
    uint64_t v22 = v23;
  }
  uint64_t v24 = v20 + v22;
  if (v21) {
    int v25 = v21;
  }
  else {
    int v25 = 0;
  }
  if (v21) {
    uint64_t v26 = v24 + 1;
  }
  else {
    uint64_t v26 = v20;
  }
  *(_DWORD *)(a1 + 112) = v25;
  uint64_t v27 = v26 + v21;
  uint64_t v28 = sub_188D498((unsigned int *)(a1 + 120));
  uint64_t v29 = 11;
  uint64_t v30 = ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((int)v28 >= 0) {
    uint64_t v29 = v30;
  }
  uint64_t v31 = v29 + v27;
  if (v28) {
    int v32 = v28;
  }
  else {
    int v32 = 0;
  }
  if (!v28) {
    uint64_t v31 = v27;
  }
  *(_DWORD *)(a1 + 136) = v32;
  uint64_t v33 = v31 + v28;
  uint64_t v34 = sub_188D498((unsigned int *)(a1 + 144));
  uint64_t v35 = 11;
  uint64_t v36 = ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((int)v34 >= 0) {
    uint64_t v35 = v36;
  }
  uint64_t v37 = v35 + v33;
  if (v34) {
    int v38 = v34;
  }
  else {
    int v38 = 0;
  }
  if (!v34) {
    uint64_t v37 = v33;
  }
  *(_DWORD *)(a1 + 160) = v38;
  uint64_t v39 = v37 + v34;
  uint64_t v40 = sub_188D498((unsigned int *)(a1 + 168));
  if (v40)
  {
    int v41 = v40;
    if ((v40 & 0x80000000) != 0) {
      uint64_t v42 = 11;
    }
    else {
      uint64_t v42 = ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v39 += v42;
  }
  else
  {
    int v41 = 0;
  }
  *(_DWORD *)(a1 + 184) = v41;
  uint64_t v43 = v39 + v40;
  uint64_t v44 = sub_188D498((unsigned int *)(a1 + 192));
  uint64_t v45 = 11;
  uint64_t v46 = ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((int)v44 >= 0) {
    uint64_t v45 = v46;
  }
  uint64_t v47 = v45 + v43;
  if (v44) {
    int v48 = v44;
  }
  else {
    int v48 = 0;
  }
  if (!v44) {
    uint64_t v47 = v43;
  }
  *(_DWORD *)(a1 + 208) = v48;
  uint64_t v49 = v47 + v44;
  uint64_t v50 = sub_188D498((unsigned int *)(a1 + 216));
  uint64_t v51 = 11;
  uint64_t v52 = ((9 * (__clz(v50 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((int)v50 >= 0) {
    uint64_t v51 = v52;
  }
  uint64_t v53 = v51 + v49;
  if (v50) {
    int v54 = v50;
  }
  else {
    int v54 = 0;
  }
  if (!v50) {
    uint64_t v53 = v49;
  }
  *(_DWORD *)(a1 + 232) = v54;
  uint64_t result = v53 + v50;
  int v56 = *(_DWORD *)(a1 + 16);
  if ((v56 & 7) != 0)
  {
    if (v56)
    {
      result += ((9 * (__clz(*(_DWORD *)(a1 + 236) | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v56 & 2) == 0)
      {
LABEL_68:
        if ((v56 & 4) == 0) {
          goto LABEL_70;
        }
        goto LABEL_69;
      }
    }
    else if ((v56 & 2) == 0)
    {
      goto LABEL_68;
    }
    result += ((9 * (__clz(*(_DWORD *)(a1 + 240) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v56 & 4) != 0) {
LABEL_69:
    }
      result += ((9 * (__clz(*(_DWORD *)(a1 + 244) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_70:
  uint64_t v57 = *(void *)(a1 + 8);
  if (v57)
  {
    unint64_t v58 = v57 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v58 + 31) < 0) {
      uint64_t v59 = *(void *)(v58 + 16);
    }
    else {
      uint64_t v59 = *(unsigned __int8 *)(v58 + 31);
    }
    result += v59;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

uint64_t sub_16ADB00()
{
  return 1;
}

void *sub_16ADB08@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.IncidentDetectionCompactSegmentProbeHistory");
}

uint64_t sub_16ADB18(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16ADBB8(uint64_t a1)
{
  sub_16ADB18(a1);

  operator delete();
}

uint64_t sub_16ADBF0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_16ADC38(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v24 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v24 + 1);
    unsigned int v9 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v24, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)uint64_t v24 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v17 = v8 + 1;
    LODWORD(v16) = *v8;
    if ((v16 & 0x80) == 0) {
      goto LABEL_24;
    }
    int v18 = *v17;
    uint64_t v16 = v16 + (v18 << 7) - 128;
    if ((v18 & 0x80000000) == 0)
    {
      uint64_t v17 = v8 + 2;
LABEL_24:
      *(void *)uint64_t v24 = v17;
      *(_DWORD *)(a1 + 32) = v16;
      goto LABEL_29;
    }
    uint64_t v22 = sub_188C138((uint64_t)v8, v16);
    *(void *)uint64_t v24 = v22;
    *(_DWORD *)(a1 + 32) = v23;
    if (!v22) {
      goto LABEL_36;
    }
LABEL_29:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v19 = *(void *)(a1 + 8);
    uint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
    if (v19) {
      uint64_t v20 = (uint64_t *)*v20;
    }
    uint64_t v21 = (std::string *)sub_1880F84((void *)(a1 + 24), v20);
    uint64_t v15 = (void *)sub_188C244(v21, *(char **)v24, (uint64_t)a3);
LABEL_28:
    *(void *)uint64_t v24 = v15;
    if (!v15) {
      goto LABEL_36;
    }
    goto LABEL_29;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(char **)v24;
    }
    uint64_t v15 = sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_28;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_36:
  *(void *)uint64_t v24 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v24;
}

unsigned char *sub_16ADE10(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    *uint64_t v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    BOOL v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    BOOL v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_16ADF58(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_13;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    int v6 = *(_DWORD *)(a1 + 32);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v7;
  }
LABEL_13:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_16AE024()
{
  return 1;
}

void *sub_16AE02C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.SnapshotProbeData.FeaturePresence");
}

void *sub_16AE03C(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16AE0B0(void *a1)
{
  sub_16AE03C(a1);

  operator delete();
}

uint64_t sub_16AE0E8(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(unsigned char *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_16AE100(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    BOOL v13 = v7 + 1;
    uint64_t v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    uint64_t v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      BOOL v13 = v7 + 2;
LABEL_19:
      uint64_t v19 = v13;
      *(unsigned char *)(a1 + 24) = v14 != 0;
      int v5 = 1;
      goto LABEL_20;
    }
    uint64_t v16 = (char *)sub_188C138((uint64_t)v7, v14);
    uint64_t v19 = v16;
    *(unsigned char *)(a1 + 24) = v17 != 0;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      unint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_16AE290(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v6 = *(unsigned char *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v6;
    v4 += 2;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_16AE374(uint64_t a1)
{
  uint64_t v1 = 2 * (*(_DWORD *)(a1 + 16) & 1);
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_16AE3B4()
{
  return 1;
}

void *sub_16AE3BC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.RegionTriggerState.RegionTrigger.Suppression");
}

uint64_t sub_16AE3CC(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if ((uint64_t (***)())a1 != &off_25443E8)
  {
    char v6 = *(void **)(a1 + 64);
    if (v6)
    {
      sub_16AE03C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16AE4BC(uint64_t a1)
{
  sub_16AE3CC(a1);

  operator delete();
}

uint64_t sub_16AE4F4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v43 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v43, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (uint64_t **)(a1 + 24);
  unsigned int v8 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v9 = (unsigned __int8 *)(*(void *)v43 + 1);
    unsigned int v10 = **(unsigned char **)v43;
    if ((char)**(unsigned char **)v43 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        unint64_t v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v43, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        unint64_t v9 = (unsigned __int8 *)(*(void *)v43 + 2);
      }
    }
    *(void *)uint64_t v43 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v13 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
        if (v13) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        int v15 = (void *)(a1 + 48);
        goto LABEL_24;
      case 2u:
        if (v10 != 16) {
          goto LABEL_51;
        }
        v5 |= 0x10u;
        uint64_t v17 = (char *)(v9 + 1);
        LODWORD(v16) = *v9;
        if ((v16 & 0x80) == 0) {
          goto LABEL_17;
        }
        int v18 = *v17;
        uint64_t v16 = v16 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v39 = sub_188C138((uint64_t)v9, v16);
          *(void *)uint64_t v43 = v39;
          *(_DWORD *)(a1 + 80) = v40;
          if (!v39) {
            goto LABEL_68;
          }
        }
        else
        {
          uint64_t v17 = (char *)(v9 + 2);
LABEL_17:
          *(void *)uint64_t v43 = v17;
          *(_DWORD *)(a1 + 80) = v16;
        }
        goto LABEL_59;
      case 3u:
        if (v10 != 25) {
          goto LABEL_51;
        }
        uint64_t v20 = *(void *)v9;
        uint64_t v19 = v9 + 8;
        v5 |= 8u;
        *(void *)(a1 + 72) = v20;
        goto LABEL_38;
      case 4u:
        if (v10 != 34) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v21 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        int v15 = (void *)(a1 + 56);
LABEL_24:
        uint64_t v22 = (std::string *)sub_1880F84(v15, v14);
        int v23 = (void *)sub_188C244(v22, *(char **)v43, (uint64_t)a3);
        goto LABEL_58;
      case 5u:
        if (v10 != 42) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v24 = *(void *)(a1 + 64);
        if (!v24)
        {
          int v25 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v8) {
            int v25 = (void *)*v25;
          }
          uint64_t v24 = sub_16B0410((uint64_t)v25);
          *(void *)(a1 + 64) = v24;
          unint64_t v9 = *(unsigned __int8 **)v43;
        }
        int v23 = sub_16AE914(a3, v24, v9);
        goto LABEL_58;
      case 6u:
        if (v10 != 48) {
          goto LABEL_51;
        }
        v5 |= 0x20u;
        uint64_t v27 = (char *)(v9 + 1);
        LODWORD(v26) = *v9;
        if ((v26 & 0x80) == 0) {
          goto LABEL_35;
        }
        int v28 = *v27;
        uint64_t v26 = v26 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          uint64_t v41 = sub_188C138((uint64_t)v9, v26);
          *(void *)uint64_t v43 = v41;
          *(_DWORD *)(a1 + 84) = v42;
          if (!v41) {
            goto LABEL_68;
          }
        }
        else
        {
          uint64_t v27 = (char *)(v9 + 2);
LABEL_35:
          *(void *)uint64_t v43 = v27;
          *(_DWORD *)(a1 + 84) = v26;
        }
        goto LABEL_59;
      case 7u:
        if (v10 != 57) {
          goto LABEL_51;
        }
        uint64_t v29 = *(void *)v9;
        uint64_t v19 = v9 + 8;
        v5 |= 0x40u;
        *(void *)(a1 + 88) = v29;
LABEL_38:
        *(void *)uint64_t v43 = v19;
        goto LABEL_59;
      case 8u:
        if (v10 != 66) {
          goto LABEL_51;
        }
        uint64_t v30 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          uint64_t v31 = (char *)(v30 + 1);
          *(void *)uint64_t v43 = v30 + 1;
          int v32 = *(_DWORD **)(a1 + 40);
          if (v32 && (uint64_t v33 = *(int *)(a1 + 32), (int)v33 < *v32))
          {
            *(_DWORD *)(a1 + 32) = v33 + 1;
            uint64_t v34 = *(std::string **)&v32[2 * v33 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *uint64_t v36 = v35;
            v36[1] = sub_3A6EDC;
            void *v35 = 0;
            v35[1] = 0;
            int v35[2] = 0;
            uint64_t v34 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v35);
            uint64_t v31 = *(char **)v43;
          }
          uint64_t v30 = sub_188C244(v34, v31, (uint64_t)a3);
          *(void *)uint64_t v43 = v30;
          if (!v30) {
            goto LABEL_68;
          }
          if (*(void *)a3 <= (unint64_t)v30 || *v30 != 66) {
            goto LABEL_59;
          }
        }
      default:
LABEL_51:
        if (v10) {
          BOOL v37 = (v10 & 7) == 4;
        }
        else {
          BOOL v37 = 1;
        }
        if (!v37)
        {
          if (*v8)
          {
            int v38 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v38 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v9 = *(unsigned __int8 **)v43;
          }
          int v23 = sub_1885AC0(v10, v38, (char *)v9, a3);
LABEL_58:
          *(void *)uint64_t v43 = v23;
          if (!v23) {
            goto LABEL_68;
          }
LABEL_59:
          if (sub_11947B8((uint64_t)a3, (char **)v43, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_68:
        }
          *(void *)uint64_t v43 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v43;
    }
  }
}

char *sub_16AE914(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16AE100(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16AE9A4(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 80);
    *unint64_t v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 72);
    *unint64_t v4 = 25;
    *(void *)(v4 + 1) = v10;
    v4 += 9;
    if ((v6 & 2) == 0)
    {
LABEL_12:
      if ((v6 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_12;
  }
  unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_13:
    if ((v6 & 0x20) == 0) {
      goto LABEL_31;
    }
    goto LABEL_25;
  }
LABEL_19:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v11 = *(void *)(a1 + 64);
  *unint64_t v4 = 42;
  unsigned int v12 = *(_DWORD *)(v11 + 20);
  v4[1] = v12;
  if (v12 > 0x7F) {
    uint64_t v13 = sub_188A9CC(v12, v4 + 1);
  }
  else {
    uint64_t v13 = v4 + 2;
  }
  unint64_t v4 = sub_16AE290(v11, (unint64_t)v13, a3);
  if ((v6 & 0x20) != 0)
  {
LABEL_25:
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v14 = *(int *)(a1 + 84);
    *unint64_t v4 = 48;
    v4[1] = v14;
    if (v14 > 0x7F)
    {
      v4[1] = v14 | 0x80;
      unint64_t v15 = v14 >> 7;
      v4[2] = v14 >> 7;
      v4 += 3;
      if (v14 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v16 = v15 >> 14;
          v15 >>= 7;
          *v4++ = v15;
        }
        while (v16);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_31:
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v17 = *(void *)(a1 + 88);
    *unint64_t v4 = 57;
    *(void *)(v4 + 1) = v17;
    v4 += 9;
  }
  uint64_t v18 = *(unsigned int *)(a1 + 32);
  if ((int)v18 >= 1)
  {
    uint64_t v19 = 0;
    uint64_t v20 = 8 * v18;
    do
    {
      uint64_t v21 = *(void **)(*(void *)(a1 + 40) + v19 + 8);
      if (*((char *)v21 + 23) < 0)
      {
        int64_t v22 = v21[1];
        if (v22 > 127) {
          goto LABEL_46;
        }
      }
      else
      {
        int64_t v22 = *((unsigned __int8 *)v21 + 23);
      }
      if (*a3 - (void)v4 + 14 >= v22)
      {
        *unint64_t v4 = 66;
        v4[1] = v22;
        if (*((char *)v21 + 23) < 0) {
          uint64_t v21 = (void *)*v21;
        }
        int v23 = v4 + 2;
        memcpy(v23, v21, v22);
        unint64_t v4 = &v23[v22];
        goto LABEL_44;
      }
LABEL_46:
      unint64_t v4 = (char *)sub_188A868(a3, 8, (uint64_t)v21, v4);
LABEL_44:
      v19 += 8;
    }
    while (v20 != v19);
  }
  uint64_t v24 = *(void *)(a1 + 8);
  if ((v24 & 1) == 0) {
    return v4;
  }
  unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v26 + 31) < 0)
  {
    uint64_t v27 = *(void **)(v26 + 8);
    uint64_t v28 = *(void *)(v26 + 16);
  }
  else
  {
    uint64_t v27 = (void *)(v26 + 8);
    LODWORD(v28) = *(unsigned __int8 *)(v26 + 31);
  }
  if (*a3 - (void)v4 >= (int)v28)
  {
    uint64_t v29 = (int)v28;
    memcpy(v4, v27, (int)v28);
    v4 += v29;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v27, v28, v4);
}

uint64_t sub_16AED2C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  int v7 = *(_DWORD *)(a1 + 16);
  if ((v7 & 0x7F) != 0)
  {
    if (v7)
    {
      unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
      uint64_t v10 = *(void *)(v8 + 8);
      if ((v9 & 0x80u) == 0) {
        uint64_t v10 = v9;
      }
      v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v7 & 2) == 0)
      {
LABEL_11:
        if ((v7 & 4) == 0)
        {
LABEL_21:
          if ((v7 & 8) != 0) {
            v3 += 9;
          }
          if ((v7 & 0x10) != 0)
          {
            int v17 = *(_DWORD *)(a1 + 80);
            if (v17 < 0) {
              uint64_t v18 = 11;
            }
            else {
              uint64_t v18 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
            }
            v3 += v18;
          }
          if ((v7 & 0x20) != 0)
          {
            int v19 = *(_DWORD *)(a1 + 84);
            if (v19 < 0) {
              uint64_t v20 = 11;
            }
            else {
              uint64_t v20 = ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
            }
            v3 += v20;
          }
          if ((v7 & 0x40) != 0) {
            v3 += 9;
          }
          goto LABEL_35;
        }
LABEL_19:
        uint64_t v14 = *(void *)(a1 + 64);
        uint64_t v15 = 2 * (*(_DWORD *)(v14 + 16) & 1);
        uint64_t v16 = *(void *)(v14 + 8);
        if (v16)
        {
          unint64_t v25 = v16 & 0xFFFFFFFFFFFFFFFCLL;
          if (*(char *)(v25 + 31) < 0) {
            uint64_t v26 = *(void *)(v25 + 16);
          }
          else {
            uint64_t v26 = *(unsigned __int8 *)(v25 + 31);
          }
          v15 += v26;
        }
        *(_DWORD *)(v14 + 20) = v15;
        v3 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
        goto LABEL_21;
      }
    }
    else if ((v7 & 2) == 0)
    {
      goto LABEL_11;
    }
    unint64_t v11 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
    uint64_t v13 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      uint64_t v13 = v12;
    }
    v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v7 & 4) == 0) {
      goto LABEL_21;
    }
    goto LABEL_19;
  }
LABEL_35:
  uint64_t v21 = *(void *)(a1 + 8);
  if (v21)
  {
    unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v23 + 31) < 0) {
      uint64_t v24 = *(void *)(v23 + 16);
    }
    else {
      uint64_t v24 = *(unsigned __int8 *)(v23 + 31);
    }
    v3 += v24;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_16AEF44()
{
  return 1;
}

void *sub_16AEF4C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.RegionTriggerState.RegionTrigger");
}

uint64_t sub_16AEF5C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24CEBB8;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_16AEFE4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24CEC38;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

void *sub_16AF060(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24CECB8;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_16AF0DC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24CED38;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

double sub_16AF16C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24CEDB8;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  return result;
}

void *sub_16AF1E8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24CEE38;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_16AF260(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24CEEB8;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

double sub_16AF2DC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24CEF38;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 44) = 0u;
  return result;
}

void *sub_16AF35C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24CEFB8;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_16AF3E4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24CF038;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_16AF460(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24CF0B8;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[6] = 0;
  result[7] = 0;
  result[5] = 0;
  return result;
}

uint64_t sub_16AF4EC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24CF138;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

double sub_16AF56C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24CF1B8;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 48) = 0;
  return result;
}

void *sub_16AF5EC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24CF238;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_16AF668(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24CF2B8;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_16AF6E4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24CF338;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(_OWORD *)(result + 80) = 0u;
  *(_OWORD *)(result + 96) = 0u;
  *(_OWORD *)(result + 112) = 0u;
  *(_OWORD *)(result + 128) = 0u;
  *(void *)(result + 144) = 0;
  return result;
}

double sub_16AF798(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24CF3B8;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_DWORD *)(v2 + 80) = 0;
  return result;
}

uint64_t sub_16AF82C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24CF438;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_16AF8A4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24CF4B8;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void *sub_16AF91C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24CF538;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_16AF998(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24CF5B8;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_16AFA20(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24CF638;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_16AFAA8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24CF6B8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = &qword_2550250;
  *(_DWORD *)(result + 80) = 0;
  return result;
}

uint64_t sub_16AFB5C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24CF738;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(_DWORD *)(result + 40) = 0;
  *(void *)(result + 44) = 0;
  return result;
}

void *sub_16AFC00(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24CF7B8;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_16AFC78(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24CF838;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(void *)(result + 64) = 0;
  return result;
}

double sub_16AFD18(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24CF8B8;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  double result = 0.0;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 88) = 0u;
  *(_OWORD *)(v2 + 104) = 0u;
  *(_DWORD *)(v2 + 120) = 0;
  return result;
}

uint64_t sub_16AFDD8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24CF938;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_16AFE74(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24CF9B8;
  result[2] = 0;
  result[3] = 0;
  result[4] = 0x100000000;
  return result;
}

void *sub_16AFEF4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24CFA38;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  result[5] = 0;
  *(void *)((char *)result + 46) = 0;
  return result;
}

uint64_t sub_16AFF7C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24CFAB8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = a1;
  *(void *)(result + 72) = 0;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = a1;
  *(void *)(result + 96) = 0;
  *(void *)(result + 104) = 0;
  *(_DWORD *)(result + 112) = 0;
  return result;
}

void *sub_16B0030(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24CFB38;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

void *sub_16B00B4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24CFBB8;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_16B012C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24CFC38;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(void *)(result + 64) = 0;
  return result;
}

double sub_16B01CC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24CFCB8;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  double result = 0.0;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 88) = 0u;
  *(_OWORD *)(v2 + 104) = 0u;
  return result;
}

uint64_t sub_16B0288(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24CFD38;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

double sub_16B0328(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  return sub_16AC5F0(v2, a1, 0);
}

uint64_t sub_16B0388(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24CFE38;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_16B0410(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24CFEB8;
  *(void *)(result + 16) = 0;
  *(unsigned char *)(result + 24) = 0;
  return result;
}

double sub_16B048C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24CFF38;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = &qword_2550250;
  *(void *)(v2 + 56) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  return result;
}

void sub_16B0538()
{
}

double sub_16B0594(uint64_t a1, uint64_t a2)
{
  return sub_166D948(a2);
}

uint64_t sub_16B059C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B05A4()
{
}

void *sub_16B05F8(uint64_t a1, uint64_t a2)
{
  return sub_166DA00(a2);
}

uint64_t sub_16B0600(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B0608()
{
}

uint64_t sub_16B065C(uint64_t a1, uint64_t a2)
{
  return sub_166DA9C(a2);
}

uint64_t sub_16B0664(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B066C()
{
}

uint64_t sub_16B06CC(uint64_t a1, uint64_t a2)
{
  return sub_166DB40(a2);
}

uint64_t sub_16B06D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B06DC()
{
}

double sub_16B0730(uint64_t a1, uint64_t a2)
{
  return sub_166DBF8(a2);
}

uint64_t sub_16B0738(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B0740()
{
}

uint64_t sub_16B079C(uint64_t a1, uint64_t a2)
{
  return sub_166DC78(a2);
}

uint64_t sub_16B07A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 96);
}

void sub_16B07AC()
{
}

uint64_t sub_16B0810(uint64_t a1, uint64_t a2)
{
  return sub_166EBF8(a2);
}

uint64_t sub_16B0818(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B0820()
{
}

uint64_t sub_16B0870(uint64_t a1, uint64_t a2)
{
  return sub_166ECB8(a2);
}

uint64_t sub_16B0878(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B0880()
{
}

uint64_t sub_16B08DC(uint64_t a1, uint64_t a2)
{
  return sub_16AEF5C(a2);
}

uint64_t sub_16B08E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B08EC()
{
}

void *sub_16B093C(uint64_t a1, uint64_t a2)
{
  return sub_16AEFE4(a2);
}

uint64_t sub_16B0944(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B094C()
{
}

void *sub_16B099C(uint64_t a1, uint64_t a2)
{
  return sub_16AF060(a2);
}

uint64_t sub_16B09A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B09AC()
{
}

uint64_t sub_16B0A10(uint64_t a1, uint64_t a2)
{
  return sub_16AF0DC(a2);
}

uint64_t sub_16B0A18(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B0A20()
{
}

double sub_16B0A70(uint64_t a1, uint64_t a2)
{
  return sub_16AF16C(a2);
}

uint64_t sub_16B0A78(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B0A80()
{
}

void *sub_16B0ACC(uint64_t a1, uint64_t a2)
{
  return sub_16AF1E8(a2);
}

uint64_t sub_16B0AD4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B0ADC()
{
}

uint64_t sub_16B0B2C(uint64_t a1, uint64_t a2)
{
  return sub_16AF260(a2);
}

uint64_t sub_16B0B34(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B0B3C()
{
}

double sub_16B0B90(uint64_t a1, uint64_t a2)
{
  return sub_16AF2DC(a2);
}

uint64_t sub_16B0B98(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B0BA0()
{
}

void *sub_16B0BFC(uint64_t a1, uint64_t a2)
{
  return sub_16AF35C(a2);
}

uint64_t sub_16B0C04(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B0C0C()
{
}

uint64_t sub_16B0C5C(uint64_t a1, uint64_t a2)
{
  return sub_16AF3E4(a2);
}

uint64_t sub_16B0C64(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B0C6C()
{
}

void *sub_16B0CCC(uint64_t a1, uint64_t a2)
{
  return sub_16AF460(a2);
}

uint64_t sub_16B0CD4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B0CDC()
{
}

uint64_t sub_16B0D30(uint64_t a1, uint64_t a2)
{
  return sub_16AF4EC(a2);
}

uint64_t sub_16B0D38(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B0D40()
{
}

double sub_16B0D94(uint64_t a1, uint64_t a2)
{
  return sub_16AF56C(a2);
}

uint64_t sub_16B0D9C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B0DA4()
{
}

void *sub_16B0DF4(uint64_t a1, uint64_t a2)
{
  return sub_16AF5EC(a2);
}

uint64_t sub_16B0DFC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B0E04()
{
}

uint64_t sub_16B0E54(uint64_t a1, uint64_t a2)
{
  return sub_16AF668(a2);
}

uint64_t sub_16B0E5C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B0E64()
{
}

uint64_t sub_16B0EC4(uint64_t a1, uint64_t a2)
{
  return sub_16AF6E4(a2);
}

uint64_t sub_16B0ECC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B0ED4()
{
}

double sub_16B0F3C(uint64_t a1, uint64_t a2)
{
  return sub_16AF798(a2);
}

uint64_t sub_16B0F44(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B0F4C()
{
}

uint64_t sub_16B0F98(uint64_t a1, uint64_t a2)
{
  return sub_16AF82C(a2);
}

uint64_t sub_16B0FA0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_16B0FA8()
{
}

uint64_t sub_16B0FF4(uint64_t a1, uint64_t a2)
{
  return sub_16AF8A4(a2);
}

uint64_t sub_16B0FFC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_16B1004()
{
}

void *sub_16B1054(uint64_t a1, uint64_t a2)
{
  return sub_16AF91C(a2);
}

uint64_t sub_16B105C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B1064()
{
}

uint64_t sub_16B10C0(uint64_t a1, uint64_t a2)
{
  return sub_16AF998(a2);
}

uint64_t sub_16B10C8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B10D0()
{
}

uint64_t sub_16B112C(uint64_t a1, uint64_t a2)
{
  return sub_16AFA20(a2);
}

uint64_t sub_16B1134(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B113C()
{
}

uint64_t sub_16B11A0(uint64_t a1, uint64_t a2)
{
  return sub_16AFAA8(a2);
}

uint64_t sub_16B11A8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B11B0()
{
}

uint64_t sub_16B1204(uint64_t a1, uint64_t a2)
{
  return sub_16AFB5C(a2);
}

uint64_t sub_16B120C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B1214()
{
}

void *sub_16B1260(uint64_t a1, uint64_t a2)
{
  return sub_16AFC00(a2);
}

uint64_t sub_16B1268(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B1270()
{
}

uint64_t sub_16B12C8(uint64_t a1, uint64_t a2)
{
  return sub_16AFC78(a2);
}

uint64_t sub_16B12D0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B12D8()
{
}

double sub_16B1334(uint64_t a1, uint64_t a2)
{
  return sub_16AFD18(a2);
}

uint64_t sub_16B133C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B1344()
{
}

uint64_t sub_16B1398(uint64_t a1, uint64_t a2)
{
  return sub_16AFDD8(a2);
}

uint64_t sub_16B13A0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B13A8()
{
}

void *sub_16B13FC(uint64_t a1, uint64_t a2)
{
  return sub_16AFE74(a2);
}

uint64_t sub_16B1404(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B140C()
{
}

void *sub_16B1468(uint64_t a1, uint64_t a2)
{
  return sub_16AFEF4(a2);
}

uint64_t sub_16B1470(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B1478()
{
}

uint64_t sub_16B14D4(uint64_t a1, uint64_t a2)
{
  return sub_16AFF7C(a2);
}

uint64_t sub_16B14DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 112);
}

void sub_16B14E4()
{
}

void *sub_16B153C(uint64_t a1, uint64_t a2)
{
  return sub_16B0030(a2);
}

uint64_t sub_16B1544(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B154C()
{
}

void *sub_16B1598(uint64_t a1, uint64_t a2)
{
  return sub_16B00B4(a2);
}

uint64_t sub_16B15A0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B15A8()
{
}

uint64_t sub_16B1600(uint64_t a1, uint64_t a2)
{
  return sub_16B012C(a2);
}

uint64_t sub_16B1608(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B1610()
{
}

double sub_16B166C(uint64_t a1, uint64_t a2)
{
  return sub_16B01CC(a2);
}

uint64_t sub_16B1674(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B167C()
{
}

uint64_t sub_16B16D0(uint64_t a1, uint64_t a2)
{
  return sub_16B0288(a2);
}

uint64_t sub_16B16D8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_16B16E0()
{
}

double sub_16B1724(uint64_t a1, uint64_t a2)
{
  return sub_16B0328(a2);
}

uint64_t sub_16B172C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B1734()
{
}

uint64_t sub_16B1790(uint64_t a1, uint64_t a2)
{
  return sub_16B0388(a2);
}

uint64_t sub_16B1798(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B17A0()
{
}

uint64_t sub_16B17F0(uint64_t a1, uint64_t a2)
{
  return sub_16B0410(a2);
}

uint64_t sub_16B17F8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B1800()
{
}

double sub_16B1860(uint64_t a1, uint64_t a2)
{
  return sub_16B048C(a2);
}

uint64_t sub_16B1868(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B1870()
{
}

void *sub_16B18BC(uint64_t a1, uint64_t a2)
{
  return sub_169729C(a2);
}

uint64_t sub_16B18C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B18CC()
{
}

uint64_t sub_16B191C(uint64_t a1, uint64_t a2)
{
  return sub_1697314(a2);
}

uint64_t sub_16B1924(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B192C()
{
}

uint64_t sub_16B1980(uint64_t a1, uint64_t a2)
{
  return sub_1697390(a2);
}

uint64_t sub_16B1988(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_16B1990()
{
}

uint64_t sub_16B19E4(uint64_t a1, uint64_t a2)
{
  return sub_1694454(a2);
}

uint64_t sub_16B19EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B19F4()
{
}

void *sub_16B1A54(uint64_t a1, uint64_t a2)
{
  return sub_16944F0(a2);
}

uint64_t sub_16B1A5C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B1A64()
{
}

void *sub_16B1ABC(uint64_t a1, uint64_t a2)
{
  return sub_1694598(a2);
}

uint64_t sub_16B1AC4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B1ACC()
{
}

uint64_t sub_16B1B20(uint64_t a1, uint64_t a2)
{
  return sub_169461C(a2);
}

uint64_t sub_16B1B28(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B1B30()
{
}

void *sub_16B1B88(uint64_t a1, uint64_t a2)
{
  return sub_16946B8(a2);
}

uint64_t sub_16B1B90(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B1B98()
{
}

uint64_t sub_16B1C10(uint64_t a1, uint64_t a2)
{
  return sub_169473C(a2);
}

uint64_t sub_16B1C18(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B1C20()
{
}

void *sub_16B1C6C(uint64_t a1, uint64_t a2)
{
  return sub_1694808(a2);
}

uint64_t sub_16B1C74(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B1C7C()
{
}

double sub_16B1CE4(uint64_t a1, uint64_t a2)
{
  return sub_1694880(a2);
}

uint64_t sub_16B1CEC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B1CF4()
{
}

uint64_t sub_16B1D44(uint64_t a1, uint64_t a2)
{
  return sub_169495C(a2);
}

uint64_t sub_16B1D4C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B1D54()
{
}

uint64_t sub_16B1DA4(uint64_t a1, uint64_t a2)
{
  return sub_16949D8(a2);
}

uint64_t sub_16B1DAC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B1DB4()
{
}

uint64_t sub_16B1E04(uint64_t a1, uint64_t a2)
{
  return sub_1694A54(a2);
}

uint64_t sub_16B1E0C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B1E14()
{
}

uint64_t sub_16B1E74(uint64_t a1, uint64_t a2)
{
  return sub_1694AD0(a2);
}

uint64_t sub_16B1E7C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B1E84()
{
}

uint64_t sub_16B1EDC(uint64_t a1, uint64_t a2)
{
  return sub_1694B5C(a2);
}

uint64_t sub_16B1EE4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B1EEC()
{
}

void *sub_16B1F38(uint64_t a1, uint64_t a2)
{
  return sub_1694BFC(a2);
}

uint64_t sub_16B1F40(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B1F48()
{
}

double sub_16B1FA0(uint64_t a1, uint64_t a2)
{
  return sub_1694C74(a2);
}

uint64_t sub_16B1FA8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B1FB0()
{
}

uint64_t sub_16B2010(uint64_t a1, uint64_t a2)
{
  return sub_1694CF8(a2);
}

uint64_t sub_16B2018(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B2020()
{
}

double sub_16B2074(uint64_t a1, uint64_t a2)
{
  return sub_1694DB0(a2);
}

uint64_t sub_16B207C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B2084()
{
}

void *sub_16B20DC(uint64_t a1, uint64_t a2)
{
  return sub_1694E30(a2);
}

uint64_t sub_16B20E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B20EC()
{
}

void *sub_16B2144(uint64_t a1, uint64_t a2)
{
  return sub_1694EB4(a2);
}

uint64_t sub_16B214C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B2154()
{
}

void *sub_16B21BC(uint64_t a1, uint64_t a2)
{
  return sub_1694F38(a2);
}

uint64_t sub_16B21C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B21CC()
{
}

uint64_t sub_16B2224(uint64_t a1, uint64_t a2)
{
  return sub_1694FF0(a2);
}

uint64_t sub_16B222C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_16B2234()
{
}

uint64_t sub_16B2284(uint64_t a1, uint64_t a2)
{
  return sub_1695094(a2);
}

uint64_t sub_16B228C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B2294()
{
}

void *sub_16B22F0(uint64_t a1, uint64_t a2)
{
  return sub_1695110(a2);
}

uint64_t sub_16B22F8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B2300()
{
}

void *sub_16B234C(uint64_t a1, uint64_t a2)
{
  return sub_16951C0(a2);
}

uint64_t sub_16B2354(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B235C()
{
}

uint64_t sub_16B23B0(uint64_t a1, uint64_t a2)
{
  return sub_1695238(a2);
}

uint64_t sub_16B23B8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B23C0()
{
}

double sub_16B242C(uint64_t a1, uint64_t a2)
{
  return sub_16952B8(a2);
}

uint64_t sub_16B2434(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B243C()
{
}

uint64_t sub_16B2498(uint64_t a1, uint64_t a2)
{
  return sub_169537C(a2);
}

uint64_t sub_16B24A0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B24A8()
{
}

uint64_t sub_16B24FC(uint64_t a1, uint64_t a2)
{
  return sub_1695424(a2);
}

uint64_t sub_16B2504(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_16B250C()
{
}

void *sub_16B2568(uint64_t a1, uint64_t a2)
{
  return sub_16954C4(a2);
}

uint64_t sub_16B2570(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B2578()
{
}

double sub_16B25E4(uint64_t a1, uint64_t a2)
{
  return sub_1695568(a2);
}

uint64_t sub_16B25EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B25F4()
{
}

void *sub_16B2650(uint64_t a1, uint64_t a2)
{
  return sub_1695600(a2);
}

uint64_t sub_16B2658(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B2660()
{
}

uint64_t sub_16B26BC(uint64_t a1, uint64_t a2)
{
  return sub_16956A4(a2);
}

uint64_t sub_16B26C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B26CC()
{
}

uint64_t sub_16B2720(uint64_t a1, uint64_t a2)
{
  return sub_169572C(a2);
}

uint64_t sub_16B2728(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_16B2730()
{
}

uint64_t sub_16B2790(uint64_t a1, uint64_t a2)
{
  return sub_16957CC(a2);
}

uint64_t sub_16B2798(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B27A0()
{
}

double sub_16B27E4(uint64_t a1, uint64_t a2)
{
  return sub_1695874(a2);
}

uint64_t sub_16B27EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

void sub_16B27F4()
{
}

uint64_t sub_16B2860(uint64_t a1, uint64_t a2)
{
  return sub_16958D4(a2);
}

uint64_t sub_16B2868(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B2870()
{
}

void *sub_16B28D4(uint64_t a1, uint64_t a2)
{
  return sub_16959A0(a2);
}

uint64_t sub_16B28DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B28E4()
{
}

double sub_16B2938(uint64_t a1, uint64_t a2)
{
  return sub_1695A50(a2);
}

uint64_t sub_16B2940(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B2948()
{
}

uint64_t sub_16B29A0(uint64_t a1, uint64_t a2)
{
  return sub_1695AD0(a2);
}

uint64_t sub_16B29A8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

void sub_16B29B0()
{
}

double sub_16B2A24(uint64_t a1, uint64_t a2)
{
  return sub_1695B80(a2);
}

uint64_t sub_16B2A2C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B2A34()
{
}

void *sub_16B2A84(uint64_t a1, uint64_t a2)
{
  return sub_1695C4C(a2);
}

uint64_t sub_16B2A8C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B2A94()
{
}

uint64_t sub_16B2AE8(uint64_t a1, uint64_t a2)
{
  return sub_1695CC8(a2);
}

uint64_t sub_16B2AF0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

void sub_16B2AF8()
{
}

void *sub_16B2B44(uint64_t a1, uint64_t a2)
{
  return sub_1695D70(a2);
}

uint64_t sub_16B2B4C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B2B54()
{
}

uint64_t sub_16B2BA8(uint64_t a1, uint64_t a2)
{
  return sub_1695DE8(a2);
}

uint64_t sub_16B2BB0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B2BB8()
{
}

uint64_t sub_16B2C0C(uint64_t a1, uint64_t a2)
{
  return sub_1695E84(a2);
}

uint64_t sub_16B2C14(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_16B2C1C()
{
}

void *sub_16B2C70(uint64_t a1, uint64_t a2)
{
  return sub_1695F24(a2);
}

uint64_t sub_16B2C78(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B2C80()
{
}

double sub_16B2D0C(uint64_t a1, uint64_t a2)
{
  return sub_1695FC0(a2);
}

uint64_t sub_16B2D14(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B2D1C()
{
}

void *sub_16B2D68(uint64_t a1, uint64_t a2)
{
  return sub_1696068(a2);
}

uint64_t sub_16B2D70(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16B2D78()
{
}

uint64_t sub_16B2DD4(uint64_t a1, uint64_t a2)
{
  return sub_16960E0(a2);
}

uint64_t sub_16B2DDC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_16B2DE4(uint64_t result)
{
  uint64_t v1 = *(unsigned int *)(result + 8);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = result;
    uint64_t v3 = (void *)(*(void *)(result + 16) + 8);
    do
    {
      double result = *v3 + 8;
      char v4 = *(unsigned char *)result;
      *(_DWORD *)(result + 8) = 0;
      *(_DWORD *)(result + 24) = 0;
      *(_DWORD *)(result + 40) = 0;
      *(_DWORD *)(result + 56) = 0;
      *(_DWORD *)(result + 72) = 0;
      if (v4) {
        double result = sub_188B4AC((uint64_t *)result);
      }
      ++v3;
      --v1;
    }
    while (v1);
    *(_DWORD *)(v2 + 8) = 0;
  }
  return result;
}

void sub_16B2E54(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_166BA0C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B2ED4(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_166CD54(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B2F54(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1669A80(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B2FD4(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_166B3FC();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_16B3054(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      double result = (uint64_t *)sub_166DB40(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = (uint64_t *)sub_16B30D0(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_16B30D0(uint64_t a1, std::string *a2)
{
  return sub_166C1B0(a2, a1);
}

uint64_t *sub_16B30E0(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      double result = (uint64_t *)sub_166DC78(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = (uint64_t *)sub_16B315C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_16B315C(uint64_t a1, std::string *a2)
{
  return sub_166D77C(a2, a1);
}

void sub_16B316C(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_166D948(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_16B31E8(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_16B31E8(uint64_t a1, std::string *a2)
{
  return sub_166A80C(a2, a1);
}

uint64_t *sub_16B31F8(uint64_t *result, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      double result = (uint64_t *)sub_166DA9C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = (uint64_t *)sub_16B3274(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t sub_16B3274(uint64_t a1, uint64_t a2)
{
  return sub_166AA50(a2, a1);
}

void sub_16B3284(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1673600(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B3304(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16714F8();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B3384(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_168C3E8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B3404(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1670948(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B3484(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1678608(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B3504(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_168714C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B3584(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_167522C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B3604(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1679AC8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B3684(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_167A1F4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B3704(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1693980(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B3784(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1675D2C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B3804(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1676A08(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B3884(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_168B5DC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B3904(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_167D4D8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B3984(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1685A0C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B3A04(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1683404(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B3A84(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12EB49C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B3B04(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15BFE7C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B3B84(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_168CEC0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B3C04(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12FF038(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B3C84(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_168FD10(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B3D04(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1690294(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B3D84(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_168DB4C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B3E04(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1693460(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B3E84(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_1694880(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_16B3F00(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_16B3F00(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_16B3F10(uint64_t *result, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      double result = (uint64_t *)sub_169473C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = (uint64_t *)sub_16B3F8C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t sub_16B3F8C(uint64_t a1, uint64_t a2)
{
  return sub_1672B3C(a2, a1);
}

void sub_16B3F9C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_16959A0(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_16B4018(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_16B4018(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_16B4028(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      double result = (uint64_t *)sub_169461C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = (uint64_t *)sub_16B40A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_16B40A4(uint64_t a1, std::string *a2)
{
  return sub_1671018(a2, a1);
}

void sub_16B40B4(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_1694C74(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_16B4130(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_16B4130(uint64_t a1, uint64_t a2)
{
}

void sub_16B4140(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_1695874(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_16B41BC(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_16B41BC(uint64_t a1, uint64_t a2)
{
}

void sub_16B41CC(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_169495C(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_16B4248(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_16B4248(uint64_t a1, uint64_t a2)
{
}

void sub_16B4258(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_1694CF8(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_16B42D4(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_16B42D4(uint64_t a1, uint64_t a2)
{
}

void sub_16B42E4(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_1694DB0(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_16B4360(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_16B4360(uint64_t a1, std::string *a2)
{
  return sub_167AAAC(a2, a1);
}

void sub_16B4370(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_16960E0(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_16B43EC(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_16B43EC(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_16B43FC(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      double result = (uint64_t *)sub_16949D8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = (uint64_t *)sub_16B4478(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_16B4478(uint64_t a1, std::string *a2)
{
  return sub_16762F4(a2, a1);
}

uint64_t *sub_16B4488(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      double result = (uint64_t *)sub_1694AD0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = (uint64_t *)sub_16B4504(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_16B4504(uint64_t a1, std::string *a2)
{
  return sub_16772B0(a2, a1);
}

void sub_16B4514(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_16958D4(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_16B4590(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_16B4590(uint64_t a1, uint64_t a2)
{
}

std::string *sub_16B45A0(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      double result = (std::string *)sub_1695110(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = sub_16B461C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_16B461C(uint64_t a1, std::string *a2)
{
  return sub_167E010(a2, a1);
}

uint64_t *sub_16B462C(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      double result = (uint64_t *)sub_16956A4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = (uint64_t *)sub_16B46A8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_16B46A8(uint64_t a1, std::string *a2)
{
  return sub_168616C(a2, a1);
}

void sub_16B46B8(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_1695424(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_16B4734(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_16B4734(uint64_t a1, uint64_t a2)
{
}

void sub_16B4744(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_12EC5C0(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_16B47C0(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_16B47C0(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_16B47D0(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      double result = (uint64_t *)sub_15C258C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = (uint64_t *)sub_122C7C8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_16B484C(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_1695A50(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_16B48C8(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_16B48C8(uint64_t a1, std::string *a2)
{
  return sub_1561340(a2, a1);
}

void sub_16B48D8(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_12FF8E8(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_16B4954(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_16B4954(uint64_t a1, uint64_t a2)
{
}

std::string *sub_16B4964(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      double result = (std::string *)sub_1695D70(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = sub_11DC498(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_16B49E0(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      double result = (uint64_t *)sub_1695DE8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = (uint64_t *)sub_16B4A5C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_16B4A5C(uint64_t a1, std::string *a2)
{
  return sub_1690B98(a2, a1);
}

void sub_16B4A6C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_1695B80(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_16B4AE8(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_16B4AE8(uint64_t a1, uint64_t a2)
{
}

void sub_16B4AF8(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_1696068(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_16B4B74(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_16B4B74(uint64_t a1, uint64_t a2)
{
}

void sub_16B4B84()
{
}

void sub_16B4C10(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16966A4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_16B4C90(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      double result = (uint64_t *)sub_1697314(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = (uint64_t *)sub_16B4D0C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_16B4D0C(uint64_t a1, std::string *a2)
{
  return sub_1696CC0(a2, a1);
}

void sub_16B4D1C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1698FD0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B4D9C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_169B870(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B4E1C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_169C81C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B4E9C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16A359C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B4F1C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16A3040(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B4F9C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16A0BB4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B501C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16A5418(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B509C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16A7818(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B511C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16ADB18(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B519C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16A7F98(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B521C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16AA070(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16B529C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16AAC64(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_16B531C(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      double result = (uint64_t *)sub_16AF0DC(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = (uint64_t *)sub_16B5398(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_16B5398(uint64_t a1, std::string *a2)
{
  return sub_1698E30(a2, a1);
}

std::string *sub_16B53A8(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      double result = (std::string *)sub_16AF35C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = sub_16B5424(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_16B5424(uint64_t a1, std::string *a2)
{
  return sub_1499760(a2, a1);
}

std::string *sub_16B5434(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      double result = (std::string *)sub_16AF460(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = sub_16B54B0(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_16B54B0(uint64_t a1, std::string *a2)
{
  return sub_169D2A0(a2, a1);
}

uint64_t *sub_16B54C0(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      double result = (uint64_t *)sub_16AFA20(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = (uint64_t *)sub_11DB12C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_16B553C(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      double result = (uint64_t *)sub_16AF998(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = (uint64_t *)sub_11DB12C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_16B55B8(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_16AF798(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_16B5634(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_16B5634(uint64_t a1, std::string *a2)
{
  return sub_16A1E60(a2, a1);
}

void sub_16B5644(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_16AFC78(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_16B56C0(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_16B56C0(uint64_t a1, uint64_t a2)
{
}

std::string *sub_16B56D0(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      double result = (std::string *)sub_16AFE74(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = sub_122D098(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_16B574C(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      double result = (uint64_t *)sub_16B0388(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = (uint64_t *)sub_11DB12C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_16B57C8(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      double result = (std::string *)sub_16AFEF4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = sub_16B5844(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_16B5844(uint64_t a1, std::string *a2)
{
  return sub_16A8894(a2, a1);
}

uint64_t *sub_16B5854(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      double result = (uint64_t *)sub_16B012C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = (uint64_t *)sub_16B58D0(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_16B58D0(uint64_t a1, std::string *a2)
{
  return sub_16AAA80(a2, a1);
}

void sub_16B58E0(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_16B01CC(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_16B595C(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_16B595C(uint64_t a1, uint64_t a2)
{
}

BOOL sub_16B596C(unsigned int a1)
{
  return a1 < 3;
}

BOOL sub_16B5978(unsigned int a1)
{
  return a1 < 8;
}

BOOL sub_16B5984(unsigned int a1)
{
  return a1 < 5;
}

BOOL sub_16B5990(unsigned int a1)
{
  return a1 < 3;
}

BOOL sub_16B599C(unsigned int a1)
{
  return a1 < 5;
}

BOOL sub_16B59A8(unsigned int a1)
{
  return a1 < 0x3F;
}

BOOL sub_16B59B4(unsigned int a1)
{
  return a1 < 9;
}

uint64_t sub_16B59C0()
{
  return 1;
}

BOOL sub_16B5BAC(unsigned int a1)
{
  return a1 < 9;
}

uint64_t sub_16B5BB8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24D0918;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

void sub_16B5C6C()
{
}

uint64_t sub_16B5CC0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2544448)
  {
    uint64_t v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_16B660C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16B5D78(uint64_t a1)
{
  sub_16B5CC0(a1);

  operator delete();
}

uint64_t sub_16B5DB0(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    double result = sub_16B5E18(*(void *)(result + 24));
  }
  if ((v2 & 6) != 0) {
    *(void *)(v1 + 32) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_16B5E18(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_16B5E3C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v29 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v29 + 1;
    unsigned int v9 = *v29;
    if (*v29 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v29, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v29 + 2;
      }
    }
    uint64_t v29 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      int v17 = v8 + 1;
      int v18 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_25;
      }
      int v19 = *v17;
      int v18 = v18 + (v19 << 7) - 128;
      if ((v19 & 0x80000000) == 0)
      {
        int v17 = v8 + 2;
LABEL_25:
        uint64_t v29 = v17;
        *(_DWORD *)(a1 + 36) = v18;
        goto LABEL_37;
      }
      unint64_t v25 = (char *)sub_188C0D0((uint64_t)v8, v18);
      uint64_t v29 = v25;
      *(_DWORD *)(a1 + 36) = v26;
      if (!v25) {
        goto LABEL_46;
      }
      goto LABEL_37;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v20 = v8 + 1;
    int v21 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_30;
    }
    int v22 = *v20;
    int v21 = v21 + (v22 << 7) - 128;
    if ((v22 & 0x80000000) == 0)
    {
      uint64_t v20 = v8 + 2;
LABEL_30:
      uint64_t v29 = v20;
      *(_DWORD *)(a1 + 32) = v21;
      goto LABEL_37;
    }
    uint64_t v27 = (char *)sub_188C0D0((uint64_t)v8, v21);
    uint64_t v29 = v27;
    *(_DWORD *)(a1 + 32) = v28;
    if (!v27) {
      goto LABEL_46;
    }
LABEL_37:
    if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    unint64_t v23 = *(void **)(a1 + 24);
    if (!v23)
    {
      uint64_t v24 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v24 = (void *)*v24;
      }
      unint64_t v23 = sub_17860B0((uint64_t)v24);
      *(void *)(a1 + 24) = v23;
      int v8 = v29;
    }
    uint64_t v16 = sub_16B6084(a3, (uint64_t)v23, (unsigned __int8 *)v8);
LABEL_36:
    uint64_t v29 = v16;
    if (!v16) {
      goto LABEL_46;
    }
    goto LABEL_37;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v29;
    }
    uint64_t v16 = (char *)sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_46:
  uint64_t v29 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v29;
}

char *sub_16B6084(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16B66B8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_16B6114(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_16B68A8(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 32);
    *char v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 36);
    *char v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_16B6328(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t result = 0;
    goto LABEL_10;
  }
  if (v2)
  {
    uint64_t v4 = sub_16B6A4C(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t result = 0;
  if ((v2 & 2) != 0) {
LABEL_7:
  }
    result += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v2 & 4) != 0) {
    result += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    result += v7;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_16B6414(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        unsigned int v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          unsigned int v8 = (void *)*v8;
        }
        std::string::pointer data = (std::string *)sub_17860B0((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unsigned int v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unsigned int v9 = &off_2544470;
      }
      uint64_t result = sub_117EF04(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_16B64FC(std::string *result, uint64_t a2)
{
  if ((std::string *)a2 != result)
  {
    int v4 = result;
    sub_16B5DB0((uint64_t)result);
    return sub_16B6414(v4, a2);
  }
  return result;
}

uint64_t sub_16B6548()
{
  return 1;
}

void *sub_16B6550@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.DeparturePredicate");
}

uint64_t sub_16B6560(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24D0998;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

void sub_16B65DC(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16B660C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16B6680(void *a1)
{
  sub_16B660C(a1);

  operator delete();
}

char *sub_16B66B8(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v25 + 2;
      }
    }
    unint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    unsigned int v15 = v8 + 1;
    int v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    int v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      unsigned int v15 = v8 + 2;
LABEL_25:
      unint64_t v25 = v15;
      *(_DWORD *)(a1 + 28) = v16;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C0D0((uint64_t)v8, v16);
    unint64_t v25 = v21;
    *(_DWORD *)(a1 + 28) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    unint64_t v18 = v8 + 1;
    int v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      unint64_t v18 = v8 + 2;
LABEL_29:
      unint64_t v25 = v18;
      *(_DWORD *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    unint64_t v23 = (char *)sub_188C0D0((uint64_t)v8, v19);
    unint64_t v25 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      unsigned int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v8 = v25;
    }
    unint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  unint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_16B68A8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_16B6A4C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_8;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_16B6AF0()
{
  return 1;
}

void *sub_16B6AF8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TimeRange");
}

void *sub_16B6B08(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16B6B7C(void *a1)
{
  sub_16B6B08(a1);

  operator delete();
}

uint64_t sub_16B6BB4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_16B6BD8(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v25 + 2;
      }
    }
    unint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    unint64_t v15 = v8 + 1;
    int v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    int v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      unint64_t v15 = v8 + 2;
LABEL_25:
      unint64_t v25 = v15;
      *(_DWORD *)(a1 + 28) = v16;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C0D0((uint64_t)v8, v16);
    unint64_t v25 = v21;
    *(_DWORD *)(a1 + 28) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v18 = v8 + 1;
    int v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      unint64_t v25 = v18;
      *(_DWORD *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    unint64_t v23 = (char *)sub_188C0D0((uint64_t)v8, v19);
    unint64_t v25 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      unsigned int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v8 = v25;
    }
    unint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  unint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_16B6DC8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_16B6F6C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_8;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_16B7010()
{
  return 1;
}

void *sub_16B7018@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PhotoSizeFilterValue");
}

uint64_t sub_16B7028(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  unint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_12C1DB8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16B70EC(uint64_t a1)
{
  sub_16B7028(a1);

  operator delete();
}

uint64_t sub_16B7124(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B2C80(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if (v5)
    {
      unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v6 + 23) < 0)
      {
        **(unsigned char **)unint64_t v6 = 0;
        *(void *)(v6 + 8) = 0;
        if ((v5 & 2) == 0) {
          goto LABEL_15;
        }
        goto LABEL_10;
      }
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
    if ((v5 & 2) == 0) {
      goto LABEL_15;
    }
LABEL_10:
    unint64_t v7 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
    }
  }
LABEL_15:
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = v1 + 8;
  *(_DWORD *)(v8 + 56) = 0;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

uint64_t sub_16B7210(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v31 + 1);
    unsigned int v9 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v31 + 2);
      }
    }
    *(void *)uint64_t v31 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_33;
        }
        v5 |= 4u;
        uint64_t v13 = v8 + 1;
        LODWORD(v12) = *v8;
        if ((v12 & 0x80) == 0) {
          goto LABEL_13;
        }
        int v14 = *v13;
        uint64_t v12 = v12 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v13 = v8 + 2;
LABEL_13:
          *(void *)uint64_t v31 = v13;
          *(_DWORD *)(a1 + 64) = v12;
          goto LABEL_41;
        }
        uint64_t v29 = sub_188C138((uint64_t)v8, v12);
        *(void *)uint64_t v31 = v29;
        *(_DWORD *)(a1 + 64) = v30;
        if (v29) {
          goto LABEL_41;
        }
        goto LABEL_48;
      case 3u:
        if (v9 != 26) {
          goto LABEL_33;
        }
        unint64_t v15 = v8 - 1;
        while (1)
        {
          int v16 = (unsigned __int8 *)(v15 + 1);
          *(void *)uint64_t v31 = v15 + 1;
          uint64_t v17 = *(_DWORD **)(a1 + 40);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 32) = v18 + 1;
            uint64_t v19 = *(void *)&v17[2 * v18 + 2];
          }
          else
          {
            int v20 = sub_15C1B30(*(void *)(a1 + 24));
            uint64_t v19 = sub_188CDC8(a1 + 24, (uint64_t)v20);
            int v16 = *(unsigned __int8 **)v31;
          }
          unint64_t v15 = (char *)sub_125CF74(a3, v19, v16);
          *(void *)uint64_t v31 = v15;
          if (!v15) {
            goto LABEL_48;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *v15 != 26) {
            goto LABEL_41;
          }
        }
      case 4u:
        if (v9 != 34) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v21 = *(void *)(a1 + 8);
        int v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          int v22 = (uint64_t *)*v22;
        }
        unint64_t v23 = (void *)(a1 + 48);
        goto LABEL_32;
      case 5u:
        if (v9 != 42) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v24 = *(void *)(a1 + 8);
        int v22 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
        if (v24) {
          int v22 = (uint64_t *)*v22;
        }
        unint64_t v23 = (void *)(a1 + 56);
LABEL_32:
        unint64_t v25 = (std::string *)sub_1880F84(v23, v22);
        int v26 = (void *)sub_188C244(v25, *(char **)v31, (uint64_t)a3);
        goto LABEL_40;
      default:
LABEL_33:
        if (v9) {
          BOOL v27 = (v9 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (*v7)
          {
            int v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v31;
          }
          int v26 = sub_1885AC0(v9, v28, v8, a3);
LABEL_40:
          *(void *)uint64_t v31 = v26;
          if (!v26) {
            goto LABEL_48;
          }
LABEL_41:
          if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_48:
        }
          *(void *)uint64_t v31 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v31;
    }
  }
}

char *sub_16B74EC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 64);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 26;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        int v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        int v14 = v4 + 2;
      }
      uint64_t v4 = sub_15B2EA4(v12, v14, a3);
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    uint64_t v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    uint64_t v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_16B76F0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B2F90(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) == 0) {
    goto LABEL_24;
  }
  if (v8)
  {
    unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_24;
      }
      goto LABEL_20;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  unint64_t v12 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  uint64_t v14 = *(void *)(v12 + 8);
  if ((v13 & 0x80u) == 0) {
    uint64_t v14 = v13;
  }
  v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) != 0)
  {
LABEL_20:
    int v15 = *(_DWORD *)(a1 + 64);
    if (v15 < 0) {
      uint64_t v16 = 11;
    }
    else {
      uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v16;
  }
LABEL_24:
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v2 += v20;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_16B7874(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_12C1E38(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        LODWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    uint64_t v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v14, v16);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16B79DC()
{
  return 1;
}

void *sub_16B79E4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Entity.Category");
}

uint64_t sub_16B79F4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24D0B18;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

void sub_16B7A70(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16B7AA0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16B7B14(void *a1)
{
  sub_16B7AA0(a1);

  operator delete();
}

uint64_t sub_16B7B4C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_16B7B64(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v34 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v34 + 1;
    unsigned int v9 = *v34;
    if (*v34 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v34, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v34 + 2;
      }
    }
    uint64_t v34 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_29;
        }
        v5 |= 1u;
        unint64_t v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v12 = v8 + 2;
LABEL_13:
          uint64_t v34 = v12;
          *(unsigned char *)(a1 + 24) = v13 != 0;
          goto LABEL_36;
        }
        int v26 = (char *)sub_188C138((uint64_t)v8, v13);
        uint64_t v34 = v26;
        *(unsigned char *)(a1 + 24) = v27 != 0;
        if (v26) {
          goto LABEL_36;
        }
        goto LABEL_49;
      case 2u:
        if (v9 != 16) {
          goto LABEL_29;
        }
        v5 |= 2u;
        std::string::size_type v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          int v28 = (char *)sub_188C138((uint64_t)v8, v16);
          uint64_t v34 = v28;
          *(unsigned char *)(a1 + 25) = v29 != 0;
          if (!v28) {
            goto LABEL_49;
          }
        }
        else
        {
          std::string::size_type v15 = v8 + 2;
LABEL_18:
          uint64_t v34 = v15;
          *(unsigned char *)(a1 + 25) = v16 != 0;
        }
        goto LABEL_36;
      case 3u:
        if (v9 != 24) {
          goto LABEL_29;
        }
        v5 |= 4u;
        uint64_t v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          int v30 = (char *)sub_188C138((uint64_t)v8, v19);
          uint64_t v34 = v30;
          *(unsigned char *)(a1 + 26) = v31 != 0;
          if (!v30) {
            goto LABEL_49;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          uint64_t v34 = v18;
          *(unsigned char *)(a1 + 26) = v19 != 0;
        }
        goto LABEL_36;
      case 4u:
        if (v9 != 32) {
          goto LABEL_29;
        }
        v5 |= 8u;
        uint64_t v21 = v8 + 1;
        uint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          int v32 = (char *)sub_188C138((uint64_t)v8, v22);
          uint64_t v34 = v32;
          *(unsigned char *)(a1 + 27) = v33 != 0;
          if (!v32) {
            goto LABEL_49;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_28:
          uint64_t v34 = v21;
          *(unsigned char *)(a1 + 27) = v22 != 0;
        }
        goto LABEL_36;
      default:
LABEL_29:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            unint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v34;
          }
          uint64_t v34 = (char *)sub_1885AC0(v9, v25, v8, a3);
          if (!v34) {
            goto LABEL_49;
          }
LABEL_36:
          if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_49:
        }
          uint64_t v34 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v34;
    }
  }
}

unsigned char *sub_16B7E7C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v7;
    v4 += 2;
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v8 = *(unsigned char *)(a1 + 25);
  *uint64_t v4 = 16;
  v4[1] = v8;
  v4 += 2;
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }
LABEL_12:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v9 = *(unsigned char *)(a1 + 26);
  *uint64_t v4 = 24;
  v4[1] = v9;
  v4 += 2;
  if ((v6 & 8) != 0)
  {
LABEL_15:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 27);
    *uint64_t v4 = 32;
    v4[1] = v10;
    v4 += 2;
  }
LABEL_18:
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_16B8018(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  uint64_t v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 4) != 0) {
    v2 += 2;
  }
  if ((v1 & 8) != 0) {
    v2 += 2;
  }
  if ((v1 & 0xF) != 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_16B8088()
{
  return 1;
}

void *sub_16B8090@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Entity.InlineRapEnablement");
}

uint64_t sub_16B80A0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24D0B98;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  return a1;
}

void sub_16B8184()
{
}

uint64_t sub_16B81D4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_25444B0 && *(void *)(a1 + 32))
  {
    sub_15B2C44();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16B82A0(uint64_t a1)
{
  sub_16B81D4(a1);

  operator delete();
}

uint64_t sub_16B82D8(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_15B2C80(*(void *)(result + 32));
  }
LABEL_7:
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_16B836C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v20 + 2);
      }
    }
    *(void *)int v20 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    int v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
    uint64_t v14 = (uint64_t)sub_188C244(v17, *(char **)v20, (uint64_t)a3);
LABEL_29:
    *(void *)int v20 = v14;
    if (!v14) {
      goto LABEL_35;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v18 = *(void **)(a1 + 32);
    if (!v18)
    {
      uint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v19 = (void *)*v19;
      }
      uint64_t v18 = sub_15C1B30((uint64_t)v19);
      *(void *)(a1 + 32) = v18;
      uint64_t v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v14 = sub_125CF74(a3, (uint64_t)v18, v7);
    goto LABEL_29;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v14 = (uint64_t)sub_1885AC0(v8, v13, (char *)v7, a3);
    goto LABEL_29;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_35:
  *(void *)int v20 = 0;
  return *(void *)v20;
}

char *sub_16B852C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_15B2EA4(v7, v9, a3);
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    unint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    unint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_16B8668(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_10;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_15B2F90(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_16B874C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v6 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      uint64_t result = sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      unsigned int v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
      if (!v9)
      {
        std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
        uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          uint64_t v11 = (void *)*v11;
        }
        unsigned int v9 = (std::string *)sub_15C1B30((uint64_t)v11);
        v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
      }
      if (*(void *)(a2 + 32)) {
        unint64_t v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        unint64_t v12 = &off_253F2A0;
      }
      uint64_t result = sub_11EC100(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16B8838()
{
  return 1;
}

void *sub_16B8840@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Entity.URLData");
}

uint64_t sub_16B8850(uint64_t result)
{
  uint64_t v1 = *(unsigned int *)(result + 128);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = result;
    uint64_t v3 = (uint64_t *)(*(void *)(result + 136) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B2C80(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(v2 + 128) = 0;
  }
  return result;
}

uint64_t sub_16B88A0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 344);
  if (result) {
    uint64_t result = sub_15B2C80(result);
  }
  *(_DWORD *)(a1 + 40) &= ~0x40u;
  return result;
}

uint64_t sub_16B88D8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D0C18;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = a2;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = a2;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = a2;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = a2;
  *(void *)(a1 + 208) = a2;
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = a2;
  *(void *)(a1 + 240) = 0;
  *(void *)(a1 + 248) = 0;
  *(void *)(a1 + 256) = a2;
  *(void *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = 0;
  *(void *)(a1 + 280) = 0;
  *(void *)(a1 + 288) = a2;
  *(void *)(a1 + 296) = &qword_2550250;
  *(void *)(a1 + 304) = &qword_2550250;
  *(void *)(a1 + 312) = &qword_2550250;
  *(void *)(a1 + 320) = &qword_2550250;
  *(void *)(a1 + 328) = &qword_2550250;
  *(void *)(a1 + 336) = &qword_2550250;
  *(void *)(a1 + 456) = 0;
  *(_OWORD *)(a1 + 424) = 0u;
  *(_OWORD *)(a1 + 440) = 0u;
  *(_OWORD *)(a1 + 392) = 0u;
  *(_OWORD *)(a1 + 408) = 0u;
  *(_OWORD *)(a1 + 360) = 0u;
  *(_OWORD *)(a1 + 376) = 0u;
  *(_OWORD *)(a1 + 344) = 0u;
  *(_DWORD *)(a1 + 464) = 1;
  return a1;
}

void sub_16B89B8(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16B89EC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v68 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v67 = a1 + 16;
  *(void *)a1 = off_24D0C18;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v4 = a1 + 48;
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v5 = *(_DWORD *)(a2 + 56);
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 64);
    uint64_t v7 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_188FB98(v4, v7, (const std::string **)(v6 + 8), v5, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v8 = *(_DWORD *)(a1 + 56) + v5;
    *(_DWORD *)(a1 + 56) = v8;
    unsigned int v9 = *(int **)(a1 + 64);
    if (*v9 < v8) {
      int *v9 = v8;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v10 = *(_DWORD *)(a2 + 80);
  if (v10)
  {
    uint64_t v11 = *(void *)(a2 + 88);
    unint64_t v12 = (std::string **)sub_188CCE4(a1 + 72, v10);
    sub_188FB98(a1 + 72, v12, (const std::string **)(v11 + 8), v10, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v13 = *(_DWORD *)(a1 + 80) + v10;
    *(_DWORD *)(a1 + 80) = v13;
    uint64_t v14 = *(int **)(a1 + 88);
    if (*v14 < v13) {
      int *v14 = v13;
    }
  }
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  int v15 = *(_DWORD *)(a2 + 104);
  if (v15)
  {
    uint64_t v16 = *(void *)(a2 + 112);
    int v17 = (std::string **)sub_188CCE4(a1 + 96, v15);
    sub_188FB98(a1 + 96, v17, (const std::string **)(v16 + 8), v15, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v18 = *(_DWORD *)(a1 + 104) + v15;
    *(_DWORD *)(a1 + 104) = v18;
    uint64_t v19 = *(int **)(a1 + 112);
    if (*v19 < v18) {
      int *v19 = v18;
    }
  }
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  int v20 = *(_DWORD *)(a2 + 128);
  if (v20)
  {
    uint64_t v21 = *(void *)(a2 + 136);
    uint64_t v22 = (std::string **)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_12C1E38((std::string *)(a1 + 120), v22, (uint64_t *)(v21 + 8), v20, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v23 = *(_DWORD *)(a1 + 128) + v20;
    *(_DWORD *)(a1 + 128) = v23;
    BOOL v24 = *(int **)(a1 + 136);
    if (*v24 < v23) {
      *BOOL v24 = v23;
    }
  }
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  int v25 = *(_DWORD *)(a2 + 152);
  if (v25)
  {
    uint64_t v26 = *(void *)(a2 + 160);
    uint64_t v27 = (std::string **)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_12C1E38((std::string *)(a1 + 144), v27, (uint64_t *)(v26 + 8), v25, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v28 = *(_DWORD *)(a1 + 152) + v25;
    *(_DWORD *)(a1 + 152) = v28;
    uint64_t v29 = *(int **)(a1 + 160);
    if (*v29 < v28) {
      *uint64_t v29 = v28;
    }
  }
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  int v30 = *(_DWORD *)(a2 + 176);
  if (v30)
  {
    uint64_t v31 = *(void *)(a2 + 184);
    int v32 = (std::string **)sub_188CCE4(a1 + 168, *(_DWORD *)(a2 + 176));
    sub_187103C((uint64_t *)(a1 + 168), v32, (uint64_t *)(v31 + 8), v30, **(_DWORD **)(a1 + 184) - *(_DWORD *)(a1 + 176));
    int v33 = *(_DWORD *)(a1 + 176) + v30;
    *(_DWORD *)(a1 + 176) = v33;
    uint64_t v34 = *(int **)(a1 + 184);
    if (*v34 < v33) {
      *uint64_t v34 = v33;
    }
  }
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = 0;
  int v35 = *(_DWORD *)(a2 + 192);
  if (v35)
  {
    sub_188C80C((unsigned int *)(a1 + 192), v35);
    uint64_t v36 = *(void **)(a1 + 200);
    *(_DWORD *)(a1 + 192) += *(_DWORD *)(a2 + 192);
    memcpy(v36, *(const void **)(a2 + 200), 4 * *(int *)(a2 + 192));
  }
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 224) = 0;
  int v37 = *(_DWORD *)(a2 + 216);
  if (v37)
  {
    uint64_t v38 = *(void *)(a2 + 224);
    uint64_t v39 = (std::string **)sub_188CCE4(a1 + 208, *(_DWORD *)(a2 + 216));
    sub_12C1E38((std::string *)(a1 + 208), v39, (uint64_t *)(v38 + 8), v37, **(_DWORD **)(a1 + 224) - *(_DWORD *)(a1 + 216));
    int v40 = *(_DWORD *)(a1 + 216) + v37;
    *(_DWORD *)(a1 + 216) = v40;
    uint64_t v41 = *(int **)(a1 + 224);
    if (*v41 < v40) {
      *uint64_t v41 = v40;
    }
  }
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 240) = 0;
  *(void *)(a1 + 248) = 0;
  int v42 = *(_DWORD *)(a2 + 240);
  if (v42)
  {
    uint64_t v43 = *(void *)(a2 + 248);
    uint64_t v44 = (std::string **)sub_188CCE4(a1 + 232, *(_DWORD *)(a2 + 240));
    sub_187103C((uint64_t *)(a1 + 232), v44, (uint64_t *)(v43 + 8), v42, **(_DWORD **)(a1 + 248) - *(_DWORD *)(a1 + 240));
    int v45 = *(_DWORD *)(a1 + 240) + v42;
    *(_DWORD *)(a1 + 240) = v45;
    uint64_t v46 = *(int **)(a1 + 248);
    if (*v46 < v45) {
      *uint64_t v46 = v45;
    }
  }
  uint64_t v66 = a1 + 256;
  *(void *)(a1 + 256) = 0;
  *(void *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = 0;
  int v47 = *(_DWORD *)(a2 + 264);
  if (v47)
  {
    uint64_t v48 = *(void *)(a2 + 272);
    uint64_t v49 = (std::string **)sub_188CCE4(v66, *(_DWORD *)(a2 + 264));
    sub_188FB98(v66, v49, (const std::string **)(v48 + 8), v47, **(_DWORD **)(a1 + 272) - *(_DWORD *)(a1 + 264));
    int v50 = *(_DWORD *)(a1 + 264) + v47;
    *(_DWORD *)(a1 + 264) = v50;
    uint64_t v51 = *(int **)(a1 + 272);
    if (*v51 < v50) {
      *uint64_t v51 = v50;
    }
  }
  *(void *)(a1 + 280) = 0;
  *(void *)(a1 + 288) = 0;
  int v52 = *(_DWORD *)(a2 + 280);
  if (v52)
  {
    sub_188CA54((unsigned int *)(a1 + 280), v52);
    uint64_t v53 = *(void **)(a1 + 288);
    *(_DWORD *)(a1 + 280) += *(_DWORD *)(a2 + 280);
    memcpy(v53, *(const void **)(a2 + 288), 8 * *(int *)(a2 + 280));
  }
  uint64_t v54 = *(void *)(a2 + 8);
  if (v54) {
    sub_188B4F8(v68, (v54 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v67, a2 + 16);
  *(void *)(a1 + 296) = &qword_2550250;
  int v55 = *(_DWORD *)(a2 + 40);
  if (v55)
  {
    int v56 = (uint64_t *)(*v68 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v68) {
      int v56 = (uint64_t *)*v56;
    }
    sub_1881DF4((std::string **)(a1 + 296), (long long *)(*(void *)(a2 + 296) & 0xFFFFFFFFFFFFFFFELL), v56);
    int v55 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 304) = &qword_2550250;
  if ((v55 & 2) != 0)
  {
    uint64_t v57 = (uint64_t *)(*v68 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v68) {
      uint64_t v57 = (uint64_t *)*v57;
    }
    sub_1881DF4((std::string **)(a1 + 304), (long long *)(*(void *)(a2 + 304) & 0xFFFFFFFFFFFFFFFELL), v57);
    int v55 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 312) = &qword_2550250;
  if ((v55 & 4) != 0)
  {
    unint64_t v58 = (uint64_t *)(*v68 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v68) {
      unint64_t v58 = (uint64_t *)*v58;
    }
    sub_1881DF4((std::string **)(a1 + 312), (long long *)(*(void *)(a2 + 312) & 0xFFFFFFFFFFFFFFFELL), v58);
    int v55 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 320) = &qword_2550250;
  if ((v55 & 8) != 0)
  {
    uint64_t v59 = (uint64_t *)(*v68 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v68) {
      uint64_t v59 = (uint64_t *)*v59;
    }
    sub_1881DF4((std::string **)(a1 + 320), (long long *)(*(void *)(a2 + 320) & 0xFFFFFFFFFFFFFFFELL), v59);
    int v55 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 328) = &qword_2550250;
  if ((v55 & 0x10) != 0)
  {
    unsigned int v60 = (uint64_t *)(*v68 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v68) {
      unsigned int v60 = (uint64_t *)*v60;
    }
    sub_1881DF4((std::string **)(a1 + 328), (long long *)(*(void *)(a2 + 328) & 0xFFFFFFFFFFFFFFFELL), v60);
    int v55 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 336) = &qword_2550250;
  if ((v55 & 0x20) != 0)
  {
    unsigned int v61 = (uint64_t *)(*v68 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v68) {
      unsigned int v61 = (uint64_t *)*v61;
    }
    sub_1881DF4((std::string **)(a1 + 336), (long long *)(*(void *)(a2 + 336) & 0xFFFFFFFFFFFFFFFELL), v61);
    int v55 = *(_DWORD *)(a2 + 40);
  }
  if ((v55 & 0x40) != 0) {
    operator new();
  }
  *(void *)(a1 + 344) = 0;
  if ((v55 & 0x80) != 0) {
    operator new();
  }
  *(void *)(a1 + 352) = 0;
  if ((v55 & 0x100) != 0) {
    operator new();
  }
  *(void *)(a1 + 360) = 0;
  if ((v55 & 0x200) != 0) {
    operator new();
  }
  *(void *)(a1 + 368) = 0;
  if ((v55 & 0x400) != 0) {
    operator new();
  }
  *(void *)(a1 + 376) = 0;
  if ((v55 & 0x800) != 0) {
    operator new();
  }
  *(void *)(a1 + 384) = 0;
  *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
  long long v62 = *(_OWORD *)(a2 + 408);
  long long v63 = *(_OWORD *)(a2 + 424);
  long long v64 = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 452) = *(_OWORD *)(a2 + 452);
  *(_OWORD *)(a1 + 424) = v63;
  *(_OWORD *)(a1 + 440) = v64;
  *(_OWORD *)(a1 + 408) = v62;
  return a1;
}

void sub_16B9188()
{
}

void *sub_16B92F8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_16B93F0((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DA8((uint64_t)(a1 + 35));
  sub_1889DE8(a1 + 32);
  sub_186F33C(a1 + 29);
  sub_12C1DB8(a1 + 26);
  sub_1889DA8((uint64_t)(a1 + 24));
  sub_186F33C(a1 + 21);
  sub_12C1DB8(a1 + 18);
  sub_12C1DB8(a1 + 15);
  sub_1889DE8(a1 + 12);
  sub_1889DE8(a1 + 9);
  sub_1889DE8(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_16B93F0(uint64_t result)
{
  uint64_t v1 = result;
  if (*(uint64_t **)(result + 296) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 296));
  }
  if (*(uint64_t **)(result + 304) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 304));
  }
  if (*(uint64_t **)(result + 312) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 312));
  }
  if (*(uint64_t **)(result + 320) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 320));
  }
  if (*(uint64_t **)(result + 328) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 328));
  }
  if (*(uint64_t **)(result + 336) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 336));
  }
  if ((uint64_t (***)())result != &off_25444D8)
  {
    if (*(void *)(result + 344))
    {
      sub_15B2C44();
      operator delete();
    }
    if (*(void *)(result + 352))
    {
      sub_15B2C44();
      operator delete();
    }
    if (*(void *)(result + 360))
    {
      sub_145FE08();
      operator delete();
    }
    uint64_t v2 = *(void **)(result + 368);
    if (v2)
    {
      sub_16B7AA0(v2);
      operator delete();
    }
    if (*(void *)(v1 + 376))
    {
      sub_15B2C44();
      operator delete();
    }
    uint64_t result = *(void *)(v1 + 384);
    if (result)
    {
      sub_16B81D4(result);
      operator delete();
    }
  }
  return result;
}

void sub_16B957C(void *a1)
{
  sub_16B92F8(a1);

  operator delete();
}

uint64_t sub_16B95B4(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  sub_188CC00(a1 + 48);
  sub_188CC00(a1 + 72);
  sub_188CC00(a1 + 96);
  uint64_t v2 = *(unsigned int *)(a1 + 128);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_15B2C80(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 128) = 0;
  }
  uint64_t v5 = *(unsigned int *)(a1 + 152);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(a1 + 160) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_15B2C80(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 152) = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 176);
  if ((int)v8 >= 1)
  {
    unsigned int v9 = (uint64_t *)(*(void *)(a1 + 184) + 8);
    do
    {
      uint64_t v10 = *v9++;
      sub_16B7124(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(a1 + 176) = 0;
  }
  *(_DWORD *)(a1 + 192) = 0;
  uint64_t v11 = *(unsigned int *)(a1 + 216);
  if ((int)v11 >= 1)
  {
    unint64_t v12 = (uint64_t *)(*(void *)(a1 + 224) + 8);
    do
    {
      uint64_t v13 = *v12++;
      sub_15B2C80(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(a1 + 216) = 0;
  }
  uint64_t v14 = *(unsigned int *)(a1 + 240);
  if ((int)v14 >= 1)
  {
    int v15 = (uint64_t *)(*(void *)(a1 + 248) + 8);
    do
    {
      uint64_t v16 = *v15++;
      sub_16B7124(v16);
      --v14;
    }
    while (v14);
    *(_DWORD *)(a1 + 240) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 256);
  *(_DWORD *)(a1 + 280) = 0;
  int v18 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v18) {
    goto LABEL_31;
  }
  if (v18)
  {
    unint64_t v23 = *(void *)(a1 + 296) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v23 + 23) < 0)
    {
      **(unsigned char **)unint64_t v23 = 0;
      *(void *)(v23 + 8) = 0;
      if ((v18 & 2) != 0) {
        goto LABEL_55;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v23 = 0;
      *(unsigned char *)(v23 + 23) = 0;
      if ((v18 & 2) != 0) {
        goto LABEL_55;
      }
    }
LABEL_24:
    if ((v18 & 4) == 0) {
      goto LABEL_25;
    }
LABEL_59:
    unint64_t v25 = *(void *)(a1 + 312) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v25 + 23) < 0)
    {
      **(unsigned char **)unint64_t v25 = 0;
      *(void *)(v25 + 8) = 0;
      if ((v18 & 8) != 0) {
        goto LABEL_63;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v25 = 0;
      *(unsigned char *)(v25 + 23) = 0;
      if ((v18 & 8) != 0) {
        goto LABEL_63;
      }
    }
LABEL_26:
    if ((v18 & 0x10) == 0) {
      goto LABEL_27;
    }
LABEL_67:
    unint64_t v27 = *(void *)(a1 + 328) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v27 + 23) < 0)
    {
      **(unsigned char **)unint64_t v27 = 0;
      *(void *)(v27 + 8) = 0;
      if ((v18 & 0x20) != 0) {
        goto LABEL_71;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v27 = 0;
      *(unsigned char *)(v27 + 23) = 0;
      if ((v18 & 0x20) != 0) {
        goto LABEL_71;
      }
    }
LABEL_28:
    if ((v18 & 0x40) == 0) {
      goto LABEL_29;
    }
    goto LABEL_75;
  }
  if ((v18 & 2) == 0) {
    goto LABEL_24;
  }
LABEL_55:
  unint64_t v24 = *(void *)(a1 + 304) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v24 + 23) < 0)
  {
    **(unsigned char **)unint64_t v24 = 0;
    *(void *)(v24 + 8) = 0;
    if ((v18 & 4) != 0) {
      goto LABEL_59;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v24 = 0;
    *(unsigned char *)(v24 + 23) = 0;
    if ((v18 & 4) != 0) {
      goto LABEL_59;
    }
  }
LABEL_25:
  if ((v18 & 8) == 0) {
    goto LABEL_26;
  }
LABEL_63:
  unint64_t v26 = *(void *)(a1 + 320) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v26 + 23) < 0)
  {
    **(unsigned char **)unint64_t v26 = 0;
    *(void *)(v26 + 8) = 0;
    if ((v18 & 0x10) != 0) {
      goto LABEL_67;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v26 = 0;
    *(unsigned char *)(v26 + 23) = 0;
    if ((v18 & 0x10) != 0) {
      goto LABEL_67;
    }
  }
LABEL_27:
  if ((v18 & 0x20) == 0) {
    goto LABEL_28;
  }
LABEL_71:
  unint64_t v28 = *(void *)(a1 + 336) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v28 + 23) < 0)
  {
    **(unsigned char **)unint64_t v28 = 0;
    *(void *)(v28 + 8) = 0;
    if ((v18 & 0x40) != 0) {
      goto LABEL_75;
    }
LABEL_29:
    if ((v18 & 0x80) == 0) {
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  *(unsigned char *)unint64_t v28 = 0;
  *(unsigned char *)(v28 + 23) = 0;
  if ((v18 & 0x40) == 0) {
    goto LABEL_29;
  }
LABEL_75:
  uint64_t result = sub_15B2C80(*(void *)(a1 + 344));
  if ((v18 & 0x80) != 0) {
LABEL_30:
  }
    uint64_t result = sub_15B2C80(*(void *)(a1 + 352));
LABEL_31:
  if ((v18 & 0xF00) != 0)
  {
    if ((v18 & 0x100) != 0) {
      uint64_t result = sub_1369BB4(*(void *)(a1 + 360));
    }
    if ((v18 & 0x200) != 0)
    {
      uint64_t v19 = *(void *)(a1 + 368);
      char v20 = *(unsigned char *)(v19 + 8);
      uint64_t result = v19 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v20) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v18 & 0x400) != 0) {
      uint64_t result = sub_15B2C80(*(void *)(a1 + 376));
    }
    if ((v18 & 0x800) != 0) {
      uint64_t result = sub_16B82D8(*(void *)(a1 + 384));
    }
  }
  if ((v18 & 0xF000) != 0)
  {
    *(_DWORD *)(a1 + 392) = 0;
    *(_DWORD *)(a1 + 395) = 0;
  }
  if ((v18 & 0xFF0000) != 0)
  {
    *(unsigned char *)(a1 + 431) = 0;
    *(_OWORD *)(a1 + 399) = 0u;
    *(_OWORD *)(a1 + 415) = 0u;
  }
  if ((v18 & 0x3F000000) != 0)
  {
    *(_OWORD *)(a1 + 432) = 0u;
    *(_OWORD *)(a1 + 448) = 0u;
    *(_DWORD *)(a1 + 464) = 1;
  }
  char v22 = *(unsigned char *)(a1 + 8);
  uint64_t v21 = a1 + 8;
  *(_DWORD *)(v21 + 32) = 0;
  if (v22)
  {
    return sub_188B4AC((uint64_t *)v21);
  }
  return result;
}

char *sub_16B98F4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v200 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v200, a3[11].i32[1]))
  {
LABEL_2:
    uint64_t v6 = *(char **)v200;
    goto LABEL_3;
  }
  uint64_t v192 = (uint64_t *)(a1 + 8);
  v196 = (uint64_t *)(a1 + 208);
  v197 = (uint64_t *)(a1 + 232);
  uint64_t v194 = (uint64_t *)(a1 + 144);
  v195 = (uint64_t *)(a1 + 168);
  int v193 = (uint64_t *)(a1 + 120);
  v198 = (uint64_t **)(a1 + 96);
  v199 = (uint64_t **)(a1 + 256);
  uint64_t v8 = (uint64_t **)(a1 + 72);
  unsigned int v9 = (uint64_t **)(a1 + 48);
  while (2)
  {
    uint64_t v6 = (char *)(*(void *)v200 + 1);
    unsigned int v10 = **(unsigned char **)v200;
    if ((char)**(unsigned char **)v200 < 0)
    {
      int v11 = *v6;
      unsigned int v12 = v10 + (v11 << 7);
      unsigned int v10 = v12 - 128;
      if (v11 < 0)
      {
        uint64_t v6 = (char *)sub_188C180(*(uint64_t *)v200, v12 - 128);
        unsigned int v10 = v13;
      }
      else
      {
        uint64_t v6 = (char *)(*(void *)v200 + 2);
      }
    }
    *(void *)v200 = v6;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 8) {
          goto LABEL_337;
        }
        uint64_t v14 = v6 + 1;
        unint64_t v15 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_14;
        }
        int v16 = *v14;
        int v17 = v15 + (v16 << 7);
        unint64_t v15 = (v17 - 128);
        if (v16 < 0)
        {
          *(void *)v200 = sub_188C138((uint64_t)v6, (v17 - 128));
          if (!*(void *)v200) {
            goto LABEL_372;
          }
          unint64_t v15 = v159;
        }
        else
        {
          uint64_t v14 = v6 + 2;
LABEL_14:
          *(void *)v200 = v14;
        }
        if (sub_16BAF04(v15))
        {
          *(_DWORD *)(a1 + 40) |= 0x1000u;
          *(_DWORD *)(a1 + 392) = v15;
          goto LABEL_348;
        }
        if (*v192) {
          uint64_t v190 = (std::string *)((*v192 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v190 = (std::string *)sub_188DBD8(v192);
        }
        int v191 = 1;
        goto LABEL_365;
      case 2u:
        if (v10 != 18) {
          goto LABEL_337;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v19 = (uint64_t *)*v19;
        }
        char v20 = (void *)(a1 + 296);
        goto LABEL_229;
      case 3u:
        if (v10 != 26) {
          goto LABEL_337;
        }
        uint64_t v21 = v6 - 1;
        while (1)
        {
          char v22 = (char *)(v21 + 1);
          *(void *)v200 = v21 + 1;
          unint64_t v23 = *(_DWORD **)(a1 + 64);
          if (v23 && (uint64_t v24 = *(int *)(a1 + 56), (int)v24 < *v23))
          {
            *(_DWORD *)(a1 + 56) = v24 + 1;
            unint64_t v25 = *(std::string **)&v23[2 * v24 + 2];
          }
          else
          {
            if (!*v9) {
              operator new();
            }
            void *v27 = v26;
            v27[1] = sub_3A6EDC;
            *unint64_t v26 = 0;
            v26[1] = 0;
            int v26[2] = 0;
            unint64_t v25 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v26);
            char v22 = *(char **)v200;
          }
          uint64_t v21 = sub_188C244(v25, v22, (uint64_t)a3);
          *(void *)v200 = v21;
          if (!v21) {
            goto LABEL_372;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *v21 != 26) {
            goto LABEL_348;
          }
        }
      case 4u:
        if (v10 != 34) {
          goto LABEL_337;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v28 = *(void *)(a1 + 8);
        uint64_t v19 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
        if (v28) {
          uint64_t v19 = (uint64_t *)*v19;
        }
        char v20 = (void *)(a1 + 304);
        goto LABEL_229;
      case 5u:
        if (v10 != 42) {
          goto LABEL_337;
        }
        uint64_t v29 = v6 - 1;
        while (1)
        {
          int v30 = (char *)(v29 + 1);
          *(void *)v200 = v29 + 1;
          uint64_t v31 = *(_DWORD **)(a1 + 88);
          if (v31 && (uint64_t v32 = *(int *)(a1 + 80), (int)v32 < *v31))
          {
            *(_DWORD *)(a1 + 80) = v32 + 1;
            int v33 = *(std::string **)&v31[2 * v32 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            void *v35 = v34;
            v35[1] = sub_3A6EDC;
            *uint64_t v34 = 0;
            v34[1] = 0;
            v34[2] = 0;
            int v33 = (std::string *)sub_188CDC8(a1 + 72, (uint64_t)v34);
            int v30 = *(char **)v200;
          }
          uint64_t v29 = sub_188C244(v33, v30, (uint64_t)a3);
          *(void *)v200 = v29;
          if (!v29) {
            goto LABEL_372;
          }
          if (*(void *)a3 <= (unint64_t)v29 || *v29 != 42) {
            goto LABEL_348;
          }
        }
      case 6u:
        if (v10 != 50) {
          goto LABEL_337;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v36 = *(void *)(a1 + 8);
        uint64_t v19 = (uint64_t *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
        if (v36) {
          uint64_t v19 = (uint64_t *)*v19;
        }
        char v20 = (void *)(a1 + 312);
        goto LABEL_229;
      case 7u:
        if (v10 != 58) {
          goto LABEL_337;
        }
        int v37 = v6 - 1;
        while (1)
        {
          uint64_t v38 = (char *)(v37 + 1);
          *(void *)v200 = v37 + 1;
          uint64_t v39 = *(_DWORD **)(a1 + 112);
          if (v39 && (uint64_t v40 = *(int *)(a1 + 104), (int)v40 < *v39))
          {
            *(_DWORD *)(a1 + 104) = v40 + 1;
            uint64_t v41 = *(std::string **)&v39[2 * v40 + 2];
          }
          else
          {
            if (!*v198) {
              operator new();
            }
            *uint64_t v43 = v42;
            v43[1] = sub_3A6EDC;
            void *v42 = 0;
            v42[1] = 0;
            int v42[2] = 0;
            uint64_t v41 = (std::string *)sub_188CDC8((uint64_t)v198, (uint64_t)v42);
            uint64_t v38 = *(char **)v200;
          }
          int v37 = sub_188C244(v41, v38, (uint64_t)a3);
          *(void *)v200 = v37;
          if (!v37) {
            goto LABEL_372;
          }
          if (*(void *)a3 <= (unint64_t)v37 || *v37 != 58) {
            goto LABEL_348;
          }
        }
      case 8u:
        if (v10 != 64) {
          goto LABEL_337;
        }
        v5 |= 0x2000u;
        uint64_t v44 = v6 + 1;
        uint64_t v45 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_69;
        }
        int v46 = *v44;
        uint64_t v45 = v45 + (v46 << 7) - 128;
        if (v46 < 0)
        {
          uint64_t v160 = sub_188C138((uint64_t)v6, v45);
          *(void *)v200 = v160;
          *(unsigned char *)(a1 + 396) = v161 != 0;
          if (!v160) {
            goto LABEL_372;
          }
        }
        else
        {
          uint64_t v44 = v6 + 2;
LABEL_69:
          *(void *)v200 = v44;
          *(unsigned char *)(a1 + 396) = v45 != 0;
        }
        goto LABEL_348;
      case 9u:
        if (v10 != 72) {
          goto LABEL_337;
        }
        v5 |= 0x4000u;
        int v47 = v6 + 1;
        uint64_t v48 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_74;
        }
        int v49 = *v47;
        uint64_t v48 = v48 + (v49 << 7) - 128;
        if (v49 < 0)
        {
          uint64_t v162 = sub_188C138((uint64_t)v6, v48);
          *(void *)v200 = v162;
          *(unsigned char *)(a1 + 397) = v163 != 0;
          if (!v162) {
            goto LABEL_372;
          }
        }
        else
        {
          int v47 = v6 + 2;
LABEL_74:
          *(void *)v200 = v47;
          *(unsigned char *)(a1 + 397) = v48 != 0;
        }
        goto LABEL_348;
      case 0xAu:
        if (v10 != 82) {
          goto LABEL_337;
        }
        int v50 = v6 - 1;
        while (1)
        {
          uint64_t v51 = (unsigned __int8 *)(v50 + 1);
          *(void *)v200 = v50 + 1;
          int v52 = *(_DWORD **)(a1 + 136);
          if (v52 && (uint64_t v53 = *(int *)(a1 + 128), (int)v53 < *v52))
          {
            *(_DWORD *)(a1 + 128) = v53 + 1;
            uint64_t v54 = *(void *)&v52[2 * v53 + 2];
          }
          else
          {
            int v55 = sub_15C1B30(*v193);
            uint64_t v54 = sub_188CDC8((uint64_t)v193, (uint64_t)v55);
            uint64_t v51 = *(unsigned __int8 **)v200;
          }
          int v50 = (char *)sub_125CF74(a3, v54, v51);
          *(void *)v200 = v50;
          if (!v50) {
            goto LABEL_372;
          }
          if (*(void *)a3 <= (unint64_t)v50 || *v50 != 82) {
            goto LABEL_348;
          }
        }
      case 0xBu:
        if (v10 != 90) {
          goto LABEL_337;
        }
        int v56 = v6 - 1;
        while (1)
        {
          uint64_t v57 = (unsigned __int8 *)(v56 + 1);
          *(void *)v200 = v56 + 1;
          unint64_t v58 = *(_DWORD **)(a1 + 160);
          if (v58 && (uint64_t v59 = *(int *)(a1 + 152), (int)v59 < *v58))
          {
            *(_DWORD *)(a1 + 152) = v59 + 1;
            uint64_t v60 = *(void *)&v58[2 * v59 + 2];
          }
          else
          {
            unsigned int v61 = sub_15C1B30(*v194);
            uint64_t v60 = sub_188CDC8((uint64_t)v194, (uint64_t)v61);
            uint64_t v57 = *(unsigned __int8 **)v200;
          }
          int v56 = (char *)sub_125CF74(a3, v60, v57);
          *(void *)v200 = v56;
          if (!v56) {
            goto LABEL_372;
          }
          if (*(void *)a3 <= (unint64_t)v56 || *v56 != 90) {
            goto LABEL_348;
          }
        }
      case 0xCu:
        if (v10 != 98) {
          goto LABEL_337;
        }
        long long v62 = v6 - 1;
        while (1)
        {
          long long v63 = (unsigned __int8 *)(v62 + 1);
          *(void *)v200 = v62 + 1;
          long long v64 = *(_DWORD **)(a1 + 184);
          if (v64 && (uint64_t v65 = *(int *)(a1 + 176), (int)v65 < *v64))
          {
            *(_DWORD *)(a1 + 176) = v65 + 1;
            uint64_t v66 = *(void *)&v64[2 * v65 + 2];
          }
          else
          {
            uint64_t v67 = sub_17861A0(*v195);
            uint64_t v66 = sub_188CDC8((uint64_t)v195, v67);
            long long v63 = *(unsigned __int8 **)v200;
          }
          long long v62 = (char *)sub_16BAF48(a3, v66, v63);
          *(void *)v200 = v62;
          if (!v62) {
            goto LABEL_372;
          }
          if (*(void *)a3 <= (unint64_t)v62 || *v62 != 98) {
            goto LABEL_348;
          }
        }
      case 0xEu:
        if (v10 != 112) {
          goto LABEL_337;
        }
        v5 |= 0x8000u;
        unint64_t v68 = v6 + 1;
        uint64_t v69 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_109;
        }
        int v70 = *v68;
        uint64_t v69 = v69 + (v70 << 7) - 128;
        if (v70 < 0)
        {
          uint64_t v164 = sub_188C138((uint64_t)v6, v69);
          *(void *)v200 = v164;
          *(unsigned char *)(a1 + 398) = v165 != 0;
          if (!v164) {
            goto LABEL_372;
          }
        }
        else
        {
          unint64_t v68 = v6 + 2;
LABEL_109:
          *(void *)v200 = v68;
          *(unsigned char *)(a1 + 398) = v69 != 0;
        }
        goto LABEL_348;
      case 0xFu:
        if (v10 != 120) {
          goto LABEL_337;
        }
        v5 |= 0x10000u;
        unint64_t v71 = v6 + 1;
        uint64_t v72 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_114;
        }
        int v73 = *v71;
        uint64_t v72 = v72 + (v73 << 7) - 128;
        if (v73 < 0)
        {
          uint64_t v166 = sub_188C138((uint64_t)v6, v72);
          *(void *)v200 = v166;
          *(unsigned char *)(a1 + 399) = v167 != 0;
          if (!v166) {
            goto LABEL_372;
          }
        }
        else
        {
          unint64_t v71 = v6 + 2;
LABEL_114:
          *(void *)v200 = v71;
          *(unsigned char *)(a1 + 399) = v72 != 0;
        }
        goto LABEL_348;
      case 0x10u:
        if (v10 != 128) {
          goto LABEL_337;
        }
        v5 |= 0x200000u;
        uint64_t v74 = v6 + 1;
        uint64_t v75 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_119;
        }
        int v76 = *v74;
        uint64_t v75 = v75 + (v76 << 7) - 128;
        if (v76 < 0)
        {
          uint64_t v168 = sub_188C138((uint64_t)v6, v75);
          *(void *)v200 = v168;
          *(unsigned char *)(a1 + 420) = v169 != 0;
          if (!v168) {
            goto LABEL_372;
          }
        }
        else
        {
          uint64_t v74 = v6 + 2;
LABEL_119:
          *(void *)v200 = v74;
          *(unsigned char *)(a1 + 420) = v75 != 0;
        }
        goto LABEL_348;
      case 0x11u:
        if (v10 != 136) {
          goto LABEL_337;
        }
        unint64_t v77 = v6 + 1;
        unint64_t v15 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_124;
        }
        int v78 = *v77;
        int v79 = v15 + (v78 << 7);
        unint64_t v15 = (v79 - 128);
        if (v78 < 0)
        {
          *(void *)v200 = sub_188C138((uint64_t)v6, (v79 - 128));
          if (!*(void *)v200) {
            goto LABEL_372;
          }
          unint64_t v15 = v170;
        }
        else
        {
          unint64_t v77 = v6 + 2;
LABEL_124:
          *(void *)v200 = v77;
        }
        if (v15 <= 2)
        {
          *(_DWORD *)(a1 + 40) |= 0x20000000u;
          *(_DWORD *)(a1 + 464) = v15;
          goto LABEL_348;
        }
        if (*v192) {
          uint64_t v190 = (std::string *)((*v192 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v190 = (std::string *)sub_188DBD8(v192);
        }
        int v191 = 17;
        goto LABEL_365;
      case 0x12u:
        if (v10 != 144) {
          goto LABEL_337;
        }
        unsigned int v80 = v6 + 1;
        unint64_t v15 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_131;
        }
        int v81 = *v80;
        int v82 = v15 + (v81 << 7);
        unint64_t v15 = (v82 - 128);
        if (v81 < 0)
        {
          *(void *)v200 = sub_188C138((uint64_t)v6, (v82 - 128));
          if (!*(void *)v200) {
            goto LABEL_372;
          }
          unint64_t v15 = v171;
        }
        else
        {
          unsigned int v80 = v6 + 2;
LABEL_131:
          *(void *)v200 = v80;
        }
        if (v15 <= 2)
        {
          *(_DWORD *)(a1 + 40) |= 0x20000u;
          *(_DWORD *)(a1 + 400) = v15;
          goto LABEL_348;
        }
        if (*v192) {
          uint64_t v190 = (std::string *)((*v192 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v190 = (std::string *)sub_188DBD8(v192);
        }
        int v191 = 18;
        goto LABEL_365;
      case 0x13u:
        if (v10 != 152) {
          goto LABEL_337;
        }
        uint64_t v83 = v6 + 1;
        unint64_t v15 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_138;
        }
        int v84 = *v83;
        int v85 = v15 + (v84 << 7);
        unint64_t v15 = (v85 - 128);
        if (v84 < 0)
        {
          *(void *)v200 = sub_188C138((uint64_t)v6, (v85 - 128));
          if (!*(void *)v200) {
            goto LABEL_372;
          }
          unint64_t v15 = v172;
        }
        else
        {
          uint64_t v83 = v6 + 2;
LABEL_138:
          *(void *)v200 = v83;
        }
        if (v15 <= 5)
        {
          *(_DWORD *)(a1 + 40) |= 0x40000u;
          *(_DWORD *)(a1 + 404) = v15;
          goto LABEL_348;
        }
        if (*v192) {
          uint64_t v190 = (std::string *)((*v192 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v190 = (std::string *)sub_188DBD8(v192);
        }
        int v191 = 19;
        goto LABEL_365;
      case 0x14u:
        if (v10 != 160) {
          goto LABEL_337;
        }
        v5 |= 0x80000u;
        unint64_t v86 = v6 + 1;
        uint64_t v87 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_145;
        }
        int v88 = *v86;
        uint64_t v87 = v87 + (v88 << 7) - 128;
        if (v88 < 0)
        {
          uint64_t v173 = sub_188C138((uint64_t)v6, v87);
          *(void *)v200 = v173;
          *(void *)(a1 + 408) = v174;
          if (!v173) {
            goto LABEL_372;
          }
        }
        else
        {
          unint64_t v86 = v6 + 2;
LABEL_145:
          *(void *)v200 = v86;
          *(void *)(a1 + 408) = v87;
        }
        goto LABEL_348;
      case 0x15u:
        if (v10 != 168) {
          goto LABEL_337;
        }
        v5 |= 0x100000u;
        unint64_t v90 = v6 + 1;
        LODWORD(v89) = *v6;
        if ((v89 & 0x80) == 0) {
          goto LABEL_150;
        }
        int v91 = *v90;
        uint64_t v89 = v89 + (v91 << 7) - 128;
        if (v91 < 0)
        {
          uint64_t v175 = sub_188C138((uint64_t)v6, v89);
          *(void *)v200 = v175;
          *(_DWORD *)(a1 + 416) = v176;
          if (!v175) {
            goto LABEL_372;
          }
        }
        else
        {
          unint64_t v90 = v6 + 2;
LABEL_150:
          *(void *)v200 = v90;
          *(_DWORD *)(a1 + 416) = v89;
        }
        goto LABEL_348;
      case 0x16u:
        if (v10 == 176)
        {
          uint64_t v92 = (uint64_t)(v6 - 2);
          while (1)
          {
            *(void *)v200 = v92 + 2;
            unint64_t v93 = *(unsigned __int8 *)(v92 + 2);
            unsigned int v94 = (char *)(v92 + 3);
            if (*(char *)(v92 + 2) < 0)
            {
              int v95 = *v94;
              int v96 = v93 + (v95 << 7);
              unint64_t v93 = (v96 - 128);
              if (v95 < 0)
              {
                *(void *)v200 = sub_188C138(v92 + 2, (v96 - 128));
                if (!*(void *)v200) {
                  goto LABEL_372;
                }
                unint64_t v93 = v99;
                goto LABEL_157;
              }
              unsigned int v94 = (char *)(v92 + 4);
            }
            *(void *)v200 = v94;
LABEL_157:
            if (v93 > 0x17)
            {
              if (*v192) {
                unsigned int v100 = (std::string *)((*v192 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                unsigned int v100 = (std::string *)sub_188DBD8(v192);
              }
              sub_188C020(22, v93, v100);
            }
            else
            {
              uint64_t v97 = *(unsigned int *)(a1 + 192);
              if (v97 == *(_DWORD *)(a1 + 196))
              {
                int v98 = v97 + 1;
                sub_188C80C((unsigned int *)(a1 + 192), v97 + 1);
                *(_DWORD *)(*(void *)(a1 + 200) + 4 * v97) = v93;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 200) + 4 * v97) = v93;
                int v98 = v97 + 1;
              }
              *(_DWORD *)(a1 + 192) = v98;
            }
            uint64_t v92 = *(void *)v200;
            if (*(void *)a3 <= *(void *)v200 || **(_WORD **)v200 != 432) {
              goto LABEL_348;
            }
          }
        }
        if (v10 != 178) {
          goto LABEL_337;
        }
        *(void *)&long long v201 = a1 + 192;
        *((void *)&v201 + 1) = sub_16BAFD8;
        uint64_t v202 = a1 + 8;
        int v203 = 22;
        uint64_t v106 = (uint64_t)sub_1112E88((uint64_t)a3, v6, &v201);
        goto LABEL_347;
      case 0x17u:
        if (v10 != 186) {
          goto LABEL_337;
        }
        *(_DWORD *)(a1 + 40) |= 0x40u;
        unsigned int v101 = *(void **)(a1 + 344);
        if (v101) {
          goto LABEL_292;
        }
        uint64_t v102 = (void *)(*v192 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v192) {
          uint64_t v102 = (void *)*v102;
        }
        unsigned int v101 = sub_15C1B30((uint64_t)v102);
        *(void *)(a1 + 344) = v101;
        goto LABEL_291;
      case 0x18u:
        if (v10 != 194) {
          goto LABEL_337;
        }
        *(_DWORD *)(a1 + 40) |= 0x80u;
        unsigned int v101 = *(void **)(a1 + 352);
        if (v101) {
          goto LABEL_292;
        }
        uint64_t v103 = (void *)(*v192 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v192) {
          uint64_t v103 = (void *)*v103;
        }
        unsigned int v101 = sub_15C1B30((uint64_t)v103);
        *(void *)(a1 + 352) = v101;
        goto LABEL_291;
      case 0x19u:
        if (v10 != 202) {
          goto LABEL_337;
        }
        *(_DWORD *)(a1 + 40) |= 0x100u;
        unint64_t v104 = *(void **)(a1 + 360);
        if (!v104)
        {
          uint64_t v105 = (void *)(*v192 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v192) {
            uint64_t v105 = (void *)*v105;
          }
          unint64_t v104 = sub_1478C60((uint64_t)v105);
          *(void *)(a1 + 360) = v104;
          uint64_t v6 = *(char **)v200;
        }
        uint64_t v106 = (uint64_t)sub_129760C(a3, (uint64_t)v104, (unsigned __int8 *)v6);
        goto LABEL_347;
      case 0x1Au:
        if (v10 != 210) {
          goto LABEL_337;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v107 = *(void *)(a1 + 8);
        uint64_t v19 = (uint64_t *)(v107 & 0xFFFFFFFFFFFFFFFCLL);
        if (v107) {
          uint64_t v19 = (uint64_t *)*v19;
        }
        char v20 = (void *)(a1 + 320);
        goto LABEL_229;
      case 0x1Bu:
        if (v10 != 218) {
          goto LABEL_337;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v108 = *(void *)(a1 + 8);
        uint64_t v19 = (uint64_t *)(v108 & 0xFFFFFFFFFFFFFFFCLL);
        if (v108) {
          uint64_t v19 = (uint64_t *)*v19;
        }
        char v20 = (void *)(a1 + 328);
        goto LABEL_229;
      case 0x1Cu:
        if (v10 != 224) {
          goto LABEL_337;
        }
        v5 |= 0x400000u;
        unsigned int v109 = v6 + 1;
        uint64_t v110 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_199;
        }
        int v111 = *v109;
        uint64_t v110 = v110 + (v111 << 7) - 128;
        if (v111 < 0)
        {
          uint64_t v177 = sub_188C138((uint64_t)v6, v110);
          *(void *)v200 = v177;
          *(unsigned char *)(a1 + 421) = v178 != 0;
          if (!v177) {
            goto LABEL_372;
          }
        }
        else
        {
          unsigned int v109 = v6 + 2;
LABEL_199:
          *(void *)v200 = v109;
          *(unsigned char *)(a1 + 421) = v110 != 0;
        }
        goto LABEL_348;
      case 0x1Du:
        if (v10 != 234) {
          goto LABEL_337;
        }
        unsigned int v112 = v6 - 2;
        while (1)
        {
          v113 = (unsigned __int8 *)(v112 + 2);
          *(void *)v200 = v112 + 2;
          uint64_t v114 = *(_DWORD **)(a1 + 224);
          if (v114 && (uint64_t v115 = *(int *)(a1 + 216), (int)v115 < *v114))
          {
            *(_DWORD *)(a1 + 216) = v115 + 1;
            uint64_t v116 = *(void *)&v114[2 * v115 + 2];
          }
          else
          {
            uint64_t v117 = sub_15C1B30(*v196);
            uint64_t v116 = sub_188CDC8((uint64_t)v196, (uint64_t)v117);
            v113 = *(unsigned __int8 **)v200;
          }
          unsigned int v112 = (char *)sub_125CF74(a3, v116, v113);
          *(void *)v200 = v112;
          if (!v112) {
            goto LABEL_372;
          }
          if (*(void *)a3 <= (unint64_t)v112 || *(_WORD *)v112 != 490) {
            goto LABEL_348;
          }
        }
      case 0x1Eu:
        if (v10 != 240) {
          goto LABEL_337;
        }
        v5 |= 0x800000u;
        unsigned int v118 = v6 + 1;
        uint64_t v119 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_214;
        }
        int v120 = *v118;
        uint64_t v119 = v119 + (v120 << 7) - 128;
        if (v120 < 0)
        {
          uint64_t v179 = sub_188C138((uint64_t)v6, v119);
          *(void *)v200 = v179;
          *(void *)(a1 + 424) = v180;
          if (!v179) {
            goto LABEL_372;
          }
        }
        else
        {
          unsigned int v118 = v6 + 2;
LABEL_214:
          *(void *)v200 = v118;
          *(void *)(a1 + 424) = v119;
        }
        goto LABEL_348;
      case 0x1Fu:
        if (v10 != 248) {
          goto LABEL_337;
        }
        v5 |= 0x1000000u;
        char v121 = v6 + 1;
        uint64_t v122 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_219;
        }
        int v123 = *v121;
        uint64_t v122 = v122 + (v123 << 7) - 128;
        if (v123 < 0)
        {
          uint64_t v181 = sub_188C138((uint64_t)v6, v122);
          *(void *)v200 = v181;
          *(void *)(a1 + 432) = v182;
          if (!v181) {
            goto LABEL_372;
          }
        }
        else
        {
          char v121 = v6 + 2;
LABEL_219:
          *(void *)v200 = v121;
          *(void *)(a1 + 432) = v122;
        }
        goto LABEL_348;
      case 0x20u:
        if ((_BYTE)v10) {
          goto LABEL_337;
        }
        v5 |= 0x2000000u;
        unint64_t v124 = v6 + 1;
        uint64_t v125 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_224;
        }
        int v126 = *v124;
        uint64_t v125 = v125 + (v126 << 7) - 128;
        if (v126 < 0)
        {
          uint64_t v183 = sub_188C138((uint64_t)v6, v125);
          *(void *)v200 = v183;
          *(void *)(a1 + 440) = v184;
          if (!v183) {
            goto LABEL_372;
          }
        }
        else
        {
          unint64_t v124 = v6 + 2;
LABEL_224:
          *(void *)v200 = v124;
          *(void *)(a1 + 440) = v125;
        }
        goto LABEL_348;
      case 0x21u:
        if (v10 != 10) {
          goto LABEL_337;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        uint64_t v127 = *(void *)(a1 + 8);
        uint64_t v19 = (uint64_t *)(v127 & 0xFFFFFFFFFFFFFFFCLL);
        if (v127) {
          uint64_t v19 = (uint64_t *)*v19;
        }
        char v20 = (void *)(a1 + 336);
LABEL_229:
        uint64_t v128 = (std::string *)sub_1880F84(v20, v19);
        uint64_t v106 = (uint64_t)sub_188C244(v128, *(char **)v200, (uint64_t)a3);
        goto LABEL_347;
      case 0x22u:
        if (v10 != 18) {
          goto LABEL_337;
        }
        int v129 = v6 - 2;
        while (1)
        {
          unint64_t v130 = (unsigned __int8 *)(v129 + 2);
          *(void *)v200 = v129 + 2;
          v131 = *(_DWORD **)(a1 + 248);
          if (v131 && (uint64_t v132 = *(int *)(a1 + 240), (int)v132 < *v131))
          {
            *(_DWORD *)(a1 + 240) = v132 + 1;
            uint64_t v133 = *(void *)&v131[2 * v132 + 2];
          }
          else
          {
            uint64_t v134 = sub_17861A0(*v197);
            uint64_t v133 = sub_188CDC8((uint64_t)v197, v134);
            unint64_t v130 = *(unsigned __int8 **)v200;
          }
          int v129 = (char *)sub_16BAF48(a3, v133, v130);
          *(void *)v200 = v129;
          if (!v129) {
            goto LABEL_372;
          }
          if (*(void *)a3 <= (unint64_t)v129 || *(_WORD *)v129 != 658) {
            goto LABEL_348;
          }
        }
      case 0x23u:
        if (v10 != 29) {
          goto LABEL_337;
        }
        v5 |= 0x4000000u;
        *(_DWORD *)(a1 + 448) = *(_DWORD *)v6;
        *(void *)v200 = v6 + 4;
        goto LABEL_348;
      case 0x24u:
        if (v10 != 34) {
          goto LABEL_337;
        }
        v135 = v6 - 2;
        while (1)
        {
          uint64_t v136 = (char *)(v135 + 2);
          *(void *)v200 = v135 + 2;
          v137 = *(_DWORD **)(a1 + 272);
          if (v137 && (uint64_t v138 = *(int *)(a1 + 264), (int)v138 < *v137))
          {
            *(_DWORD *)(a1 + 264) = v138 + 1;
            uint64_t v139 = *(std::string **)&v137[2 * v138 + 2];
          }
          else
          {
            if (!*v199) {
              operator new();
            }
            void *v141 = v140;
            v141[1] = sub_3A6EDC;
            *uint64_t v140 = 0;
            v140[1] = 0;
            v140[2] = 0;
            uint64_t v139 = (std::string *)sub_188CDC8((uint64_t)v199, (uint64_t)v140);
            uint64_t v136 = *(char **)v200;
          }
          v135 = sub_188C244(v139, v136, (uint64_t)a3);
          *(void *)v200 = v135;
          if (!v135) {
            goto LABEL_372;
          }
          if (*(void *)a3 <= (unint64_t)v135 || *(_WORD *)v135 != 674) {
            goto LABEL_348;
          }
        }
      case 0x25u:
        if (v10 != 40) {
          goto LABEL_337;
        }
        uint64_t v142 = v6 + 1;
        unint64_t v15 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_258;
        }
        int v143 = *v142;
        int v144 = v15 + (v143 << 7);
        unint64_t v15 = (v144 - 128);
        if (v143 < 0)
        {
          *(void *)v200 = sub_188C138((uint64_t)v6, (v144 - 128));
          if (!*(void *)v200) {
            goto LABEL_372;
          }
          unint64_t v15 = v185;
        }
        else
        {
          uint64_t v142 = v6 + 2;
LABEL_258:
          *(void *)v200 = v142;
        }
        if (v15 > 4)
        {
          if (*v192) {
            uint64_t v190 = (std::string *)((*v192 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v190 = (std::string *)sub_188DBD8(v192);
          }
          int v191 = 37;
LABEL_365:
          sub_188C020(v191, v15, v190);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x8000000u;
          *(_DWORD *)(a1 + 452) = v15;
        }
        goto LABEL_348;
      case 0x26u:
        if (v10 != 50) {
          goto LABEL_337;
        }
        *(_DWORD *)(a1 + 40) |= 0x200u;
        uint64_t v145 = *(void *)(a1 + 368);
        if (!v145)
        {
          uint64_t v146 = (void *)(*v192 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v192) {
            uint64_t v146 = (void *)*v146;
          }
          uint64_t v145 = sub_1786248((uint64_t)v146);
          *(void *)(a1 + 368) = v145;
          uint64_t v6 = *(char **)v200;
        }
        uint64_t v106 = (uint64_t)sub_16BAFE4(a3, v145, (unsigned __int8 *)v6);
        goto LABEL_347;
      case 0x27u:
        if (v10 != 56) {
          goto LABEL_337;
        }
        v5 |= 0x10000000u;
        v147 = v6 + 1;
        uint64_t v148 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_271;
        }
        int v149 = *v147;
        uint64_t v148 = v148 + (v149 << 7) - 128;
        if (v149 < 0)
        {
          uint64_t v186 = sub_188C138((uint64_t)v6, v148);
          *(void *)v200 = v186;
          *(void *)(a1 + 456) = v187;
          if (!v186) {
            goto LABEL_372;
          }
        }
        else
        {
          v147 = v6 + 2;
LABEL_271:
          *(void *)v200 = v147;
          *(void *)(a1 + 456) = v148;
        }
        goto LABEL_348;
      case 0x28u:
        if (v10 != 64)
        {
          if (v10 == 66)
          {
            uint64_t v106 = (uint64_t)sub_188C2EC((unsigned int *)(a1 + 280), (unsigned __int8 *)v6, (uint64_t)a3);
          }
          else
          {
LABEL_337:
            if (v10) {
              BOOL v188 = (v10 & 7) == 4;
            }
            else {
              BOOL v188 = 1;
            }
            if (v188)
            {
              if (v6) {
                a3[10].i32[0] = v10 - 1;
              }
              goto LABEL_3;
            }
            if (v10 - 1600 < 0xFA0 || (v10 - 8000) >> 6 <= 0x7C)
            {
              uint64_t v106 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v10, v6, (uint64_t)&off_25444D8, v192, a3);
            }
            else
            {
              if (*v192)
              {
                v189 = (std::string *)((*v192 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else
              {
                v189 = (std::string *)sub_188DBD8(v192);
                uint64_t v6 = *(char **)v200;
              }
              uint64_t v106 = (uint64_t)sub_1885AC0(v10, v189, v6, a3);
            }
          }
LABEL_347:
          *(void *)v200 = v106;
          if (!v106) {
            goto LABEL_372;
          }
LABEL_348:
          if (sub_11947B8((uint64_t)a3, (char **)v200, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        unint64_t v150 = (unint64_t)(v6 - 2);
        while (1)
        {
          *(void *)v200 = v150 + 2;
          uint64_t v151 = *(unsigned __int8 *)(v150 + 2);
          if (*(char *)(v150 + 2) < 0)
          {
            int v152 = v151 + (*(unsigned __int8 *)(v150 + 3) << 7);
            uint64_t v151 = (v152 - 128);
            if (*(char *)(v150 + 3) < 0)
            {
              unint64_t v150 = sub_188C138(v150 + 2, (v152 - 128));
              uint64_t v151 = v153;
            }
            else
            {
              v150 += 4;
            }
          }
          else
          {
            v150 += 3;
          }
          *(void *)v200 = v150;
          uint64_t v154 = *(unsigned int *)(a1 + 280);
          if (v154 == *(_DWORD *)(a1 + 284))
          {
            int v155 = v154 + 1;
            sub_188CA54((unsigned int *)(a1 + 280), v154 + 1);
            *(void *)(*(void *)(a1 + 288) + 8 * v154) = v151;
            unint64_t v150 = *(void *)v200;
          }
          else
          {
            *(void *)(*(void *)(a1 + 288) + 8 * v154) = v151;
            int v155 = v154 + 1;
          }
          *(_DWORD *)(a1 + 280) = v155;
          if (!v150) {
            break;
          }
          if (*(void *)a3 <= v150 || *(_WORD *)v150 != 704) {
            goto LABEL_348;
          }
        }
LABEL_372:
        uint64_t v6 = 0;
LABEL_3:
        *(_DWORD *)(a1 + 40) |= v5;
        return v6;
      case 0x29u:
        if (v10 != 74) {
          goto LABEL_337;
        }
        *(_DWORD *)(a1 + 40) |= 0x400u;
        unsigned int v101 = *(void **)(a1 + 376);
        if (v101) {
          goto LABEL_292;
        }
        int v156 = (void *)(*v192 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v192) {
          int v156 = (void *)*v156;
        }
        unsigned int v101 = sub_15C1B30((uint64_t)v156);
        *(void *)(a1 + 376) = v101;
LABEL_291:
        uint64_t v6 = *(char **)v200;
LABEL_292:
        uint64_t v106 = sub_125CF74(a3, (uint64_t)v101, (unsigned __int8 *)v6);
        goto LABEL_347;
      case 0x2Au:
        if (v10 != 82) {
          goto LABEL_337;
        }
        *(_DWORD *)(a1 + 40) |= 0x800u;
        int v157 = *(void **)(a1 + 384);
        if (!v157)
        {
          uint64_t v158 = (void *)(*v192 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v192) {
            uint64_t v158 = (void *)*v158;
          }
          int v157 = sub_17862C4((uint64_t)v158);
          *(void *)(a1 + 384) = v157;
          uint64_t v6 = *(char **)v200;
        }
        uint64_t v106 = sub_16BB074(a3, (uint64_t)v157, (unsigned __int8 *)v6);
        goto LABEL_347;
      default:
        goto LABEL_337;
    }
  }
}

BOOL sub_16BAF04(unsigned int a1)
{
  BOOL result = 1;
  if (a1 - 4 > 0x3D || ((1 << (a1 - 4)) & 0x3A2CFF8080001001) == 0) {
    return a1 < 3;
  }
  return result;
}

uint64_t sub_16BAF48(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16B7210(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

BOOL sub_16BAFD8(unsigned int a1)
{
  return a1 < 0x18;
}

char *sub_16BAFE4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16B7B64(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_16BB074(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16B836C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16BB104(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x1000) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(int *)(a1 + 392);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 296) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(unsigned int *)(a1 + 56);
  if ((int)v10 >= 1)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 8 * v10;
    do
    {
      unsigned int v13 = *(void **)(*(void *)(a1 + 64) + v11 + 8);
      if (*((char *)v13 + 23) < 0)
      {
        int64_t v14 = v13[1];
        if (v14 > 127) {
          goto LABEL_21;
        }
      }
      else
      {
        int64_t v14 = *((unsigned __int8 *)v13 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v14)
      {
        *uint64_t v4 = 26;
        v4[1] = v14;
        if (*((char *)v13 + 23) < 0) {
          unsigned int v13 = (void *)*v13;
        }
        unint64_t v15 = v4 + 2;
        memcpy(v15, v13, v14);
        uint64_t v4 = &v15[v14];
        goto LABEL_19;
      }
LABEL_21:
      uint64_t v4 = (char *)sub_188A868(a3, 3, (uint64_t)v13, v4);
LABEL_19:
      v11 += 8;
    }
    while (v12 != v11);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 304) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v16 = *(unsigned int *)(a1 + 80);
  if ((int)v16 >= 1)
  {
    uint64_t v17 = 0;
    uint64_t v18 = 8 * v16;
    do
    {
      uint64_t v19 = *(void **)(*(void *)(a1 + 88) + v17 + 8);
      if (*((char *)v19 + 23) < 0)
      {
        int64_t v20 = v19[1];
        if (v20 > 127) {
          goto LABEL_35;
        }
      }
      else
      {
        int64_t v20 = *((unsigned __int8 *)v19 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v20)
      {
        *uint64_t v4 = 42;
        v4[1] = v20;
        if (*((char *)v19 + 23) < 0) {
          uint64_t v19 = (void *)*v19;
        }
        uint64_t v21 = v4 + 2;
        memcpy(v21, v19, v20);
        uint64_t v4 = &v21[v20];
        goto LABEL_33;
      }
LABEL_35:
      uint64_t v4 = (char *)sub_188A868(a3, 5, (uint64_t)v19, v4);
LABEL_33:
      v17 += 8;
    }
    while (v18 != v17);
  }
  if ((v6 & 4) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 312) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v22 = *(unsigned int *)(a1 + 104);
  if ((int)v22 >= 1)
  {
    uint64_t v23 = 0;
    uint64_t v24 = 8 * v22;
    do
    {
      unint64_t v25 = *(void **)(*(void *)(a1 + 112) + v23 + 8);
      if (*((char *)v25 + 23) < 0)
      {
        int64_t v26 = v25[1];
        if (v26 > 127) {
          goto LABEL_49;
        }
      }
      else
      {
        int64_t v26 = *((unsigned __int8 *)v25 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v26)
      {
        *uint64_t v4 = 58;
        v4[1] = v26;
        if (*((char *)v25 + 23) < 0) {
          unint64_t v25 = (void *)*v25;
        }
        unint64_t v27 = v4 + 2;
        memcpy(v27, v25, v26);
        uint64_t v4 = &v27[v26];
        goto LABEL_47;
      }
LABEL_49:
      uint64_t v4 = (char *)sub_188A868(a3, 7, (uint64_t)v25, v4);
LABEL_47:
      v23 += 8;
    }
    while (v24 != v23);
  }
  if ((v6 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v28 = *(unsigned char *)(a1 + 396);
    *uint64_t v4 = 64;
    v4[1] = v28;
    v4 += 2;
  }
  if ((v6 & 0x4000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v29 = *(unsigned char *)(a1 + 397);
    *uint64_t v4 = 72;
    v4[1] = v29;
    v4 += 2;
  }
  int v30 = *(_DWORD *)(a1 + 128);
  if (v30)
  {
    for (int i = 0; i != v30; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v32 = *(void *)(*(void *)(a1 + 136) + 8 * i + 8);
      *uint64_t v4 = 82;
      unsigned int v33 = *(_DWORD *)(v32 + 20);
      v4[1] = v33;
      if (v33 > 0x7F) {
        uint64_t v34 = sub_188A9CC(v33, v4 + 1);
      }
      else {
        uint64_t v34 = v4 + 2;
      }
      uint64_t v4 = sub_15B2EA4(v32, v34, a3);
    }
  }
  int v35 = *(_DWORD *)(a1 + 152);
  if (v35)
  {
    for (int j = 0; j != v35; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v37 = *(void *)(*(void *)(a1 + 160) + 8 * j + 8);
      *uint64_t v4 = 90;
      unsigned int v38 = *(_DWORD *)(v37 + 20);
      v4[1] = v38;
      if (v38 > 0x7F) {
        uint64_t v39 = sub_188A9CC(v38, v4 + 1);
      }
      else {
        uint64_t v39 = v4 + 2;
      }
      uint64_t v4 = sub_15B2EA4(v37, v39, a3);
    }
  }
  int v40 = *(_DWORD *)(a1 + 176);
  if (v40)
  {
    for (int k = 0; k != v40; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v42 = *(void *)(*(void *)(a1 + 184) + 8 * k + 8);
      *uint64_t v4 = 98;
      unsigned int v43 = *(_DWORD *)(v42 + 20);
      v4[1] = v43;
      if (v43 > 0x7F) {
        uint64_t v44 = sub_188A9CC(v43, v4 + 1);
      }
      else {
        uint64_t v44 = v4 + 2;
      }
      uint64_t v4 = sub_16B74EC(v42, (unint64_t)v44, a3);
    }
  }
  if ((v6 & 0x8000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v45 = *(unsigned char *)(a1 + 398);
    *uint64_t v4 = 112;
    v4[1] = v45;
    v4 += 2;
    if ((v6 & 0x10000) == 0)
    {
LABEL_84:
      if ((v6 & 0x200000) == 0) {
        goto LABEL_85;
      }
      goto LABEL_93;
    }
  }
  else if ((v6 & 0x10000) == 0)
  {
    goto LABEL_84;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v46 = *(unsigned char *)(a1 + 399);
  *uint64_t v4 = 120;
  v4[1] = v46;
  v4 += 2;
  if ((v6 & 0x200000) == 0)
  {
LABEL_85:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_102;
    }
    goto LABEL_96;
  }
LABEL_93:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v47 = *(unsigned char *)(a1 + 420);
  *(_WORD *)uint64_t v4 = 384;
  v4[2] = v47;
  v4 += 3;
  if ((v6 & 0x20000000) != 0)
  {
LABEL_96:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v48 = *(int *)(a1 + 464);
    *(_WORD *)uint64_t v4 = 392;
    v4[2] = v48;
    if (v48 > 0x7F)
    {
      v4[2] = v48 | 0x80;
      unint64_t v49 = v48 >> 7;
      v4[3] = v48 >> 7;
      v4 += 4;
      if (v48 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v50 = v49 >> 14;
          v49 >>= 7;
          *v4++ = v49;
        }
        while (v50);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_102:
  if ((v6 & 0x20000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v51 = *(int *)(a1 + 400);
    *(_WORD *)uint64_t v4 = 400;
    v4[2] = v51;
    if (v51 > 0x7F)
    {
      v4[2] = v51 | 0x80;
      unint64_t v52 = v51 >> 7;
      v4[3] = v51 >> 7;
      v4 += 4;
      if (v51 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v53 = v52 >> 14;
          v52 >>= 7;
          *v4++ = v52;
        }
        while (v53);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x40000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v54 = *(int *)(a1 + 404);
    *(_WORD *)uint64_t v4 = 408;
    v4[2] = v54;
    if (v54 > 0x7F)
    {
      v4[2] = v54 | 0x80;
      unint64_t v55 = v54 >> 7;
      v4[3] = v54 >> 7;
      v4 += 4;
      if (v54 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v56 = v55 >> 14;
          v55 >>= 7;
          *v4++ = v55;
        }
        while (v56);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x80000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v57 = *(void *)(a1 + 408);
    *(_WORD *)uint64_t v4 = 416;
    v4[2] = v57;
    if (v57 > 0x7F)
    {
      v4[2] = v57 | 0x80;
      unint64_t v58 = v57 >> 7;
      v4[3] = v57 >> 7;
      v4 += 4;
      if (v57 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v59 = v58 >> 14;
          v58 >>= 7;
          *v4++ = v58;
        }
        while (v59);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x100000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v60 = *(int *)(a1 + 416);
    *(_WORD *)uint64_t v4 = 424;
    v4[2] = v60;
    if (v60 > 0x7F)
    {
      v4[2] = v60 | 0x80;
      unint64_t v61 = v60 >> 7;
      v4[3] = v60 >> 7;
      v4 += 4;
      if (v60 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v62 = v61 >> 14;
          v61 >>= 7;
          *v4++ = v61;
        }
        while (v62);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v63 = *(unsigned int *)(a1 + 192);
  if ((int)v63 >= 1)
  {
    for (uint64_t m = 0; m != v63; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v65 = *(int *)(*(void *)(a1 + 200) + 4 * m);
      *(_WORD *)uint64_t v4 = 432;
      v4[2] = v65;
      if (v65 > 0x7F)
      {
        v4[2] = v65 | 0x80;
        unint64_t v66 = v65 >> 7;
        v4[3] = v65 >> 7;
        v4 += 4;
        if (v65 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v67 = v66 >> 14;
            v66 >>= 7;
            *v4++ = v66;
          }
          while (v67);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v68 = *(void *)(a1 + 344);
    *(_WORD *)uint64_t v4 = 442;
    unsigned int v69 = *(_DWORD *)(v68 + 20);
    v4[2] = v69;
    if (v69 > 0x7F) {
      int v70 = sub_188A9CC(v69, v4 + 2);
    }
    else {
      int v70 = v4 + 3;
    }
    uint64_t v4 = sub_15B2EA4(v68, v70, a3);
    if ((v6 & 0x80) == 0)
    {
LABEL_141:
      if ((v6 & 0x100) == 0) {
        goto LABEL_142;
      }
      goto LABEL_158;
    }
  }
  else if ((v6 & 0x80) == 0)
  {
    goto LABEL_141;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v71 = *(void *)(a1 + 352);
  *(_WORD *)uint64_t v4 = 450;
  unsigned int v72 = *(_DWORD *)(v71 + 20);
  v4[2] = v72;
  if (v72 > 0x7F) {
    int v73 = sub_188A9CC(v72, v4 + 2);
  }
  else {
    int v73 = v4 + 3;
  }
  uint64_t v4 = sub_15B2EA4(v71, v73, a3);
  if ((v6 & 0x100) == 0)
  {
LABEL_142:
    if ((v6 & 8) == 0) {
      goto LABEL_143;
    }
    goto LABEL_164;
  }
LABEL_158:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v74 = *(void *)(a1 + 360);
  *(_WORD *)uint64_t v4 = 458;
  unsigned int v75 = *(_DWORD *)(v74 + 44);
  v4[2] = v75;
  if (v75 > 0x7F) {
    int v76 = sub_188A9CC(v75, v4 + 2);
  }
  else {
    int v76 = v4 + 3;
  }
  uint64_t v4 = sub_1460138(v74, v76, a3);
  if ((v6 & 8) == 0)
  {
LABEL_143:
    if ((v6 & 0x10) == 0) {
      goto LABEL_144;
    }
    goto LABEL_165;
  }
LABEL_164:
  uint64_t v4 = sub_117A0AC(a3, 26, (const void **)(*(void *)(a1 + 320) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_144:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_169;
    }
    goto LABEL_166;
  }
LABEL_165:
  uint64_t v4 = sub_117A0AC(a3, 27, (const void **)(*(void *)(a1 + 328) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x400000) == 0) {
    goto LABEL_169;
  }
LABEL_166:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v77 = *(unsigned char *)(a1 + 421);
  *(_WORD *)uint64_t v4 = 480;
  v4[2] = v77;
  v4 += 3;
LABEL_169:
  int v78 = *(_DWORD *)(a1 + 216);
  if (v78)
  {
    for (int n = 0; n != v78; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v80 = *(void *)(*(void *)(a1 + 224) + 8 * n + 8);
      *(_WORD *)uint64_t v4 = 490;
      unsigned int v81 = *(_DWORD *)(v80 + 20);
      v4[2] = v81;
      if (v81 > 0x7F) {
        int v82 = sub_188A9CC(v81, v4 + 2);
      }
      else {
        int v82 = v4 + 3;
      }
      uint64_t v4 = sub_15B2EA4(v80, v82, a3);
    }
  }
  if ((v6 & 0x800000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v83 = *(void *)(a1 + 424);
    *(_WORD *)uint64_t v4 = 496;
    v4[2] = v83;
    if (v83 > 0x7F)
    {
      v4[2] = v83 | 0x80;
      unint64_t v84 = v83 >> 7;
      v4[3] = v83 >> 7;
      v4 += 4;
      if (v83 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v85 = v84 >> 14;
          v84 >>= 7;
          *v4++ = v84;
        }
        while (v85);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x1000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v86 = *(void *)(a1 + 432);
    *(_WORD *)uint64_t v4 = 504;
    v4[2] = v86;
    if (v86 > 0x7F)
    {
      v4[2] = v86 | 0x80;
      unint64_t v87 = v86 >> 7;
      v4[3] = v86 >> 7;
      v4 += 4;
      if (v86 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v88 = v87 >> 14;
          v87 >>= 7;
          *v4++ = v87;
        }
        while (v88);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x2000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v89 = *(void *)(a1 + 440);
    *(_WORD *)uint64_t v4 = 640;
    v4[2] = v89;
    if (v89 > 0x7F)
    {
      v4[2] = v89 | 0x80;
      unint64_t v90 = v89 >> 7;
      v4[3] = v89 >> 7;
      v4 += 4;
      if (v89 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v91 = v90 >> 14;
          v90 >>= 7;
          *v4++ = v90;
        }
        while (v91);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x20) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 33, (const void **)(*(void *)(a1 + 336) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v92 = *(_DWORD *)(a1 + 240);
  if (v92)
  {
    for (iint i = 0; ii != v92; ++ii)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v94 = *(void *)(*(void *)(a1 + 248) + 8 * ii + 8);
      *(_WORD *)uint64_t v4 = 658;
      unsigned int v95 = *(_DWORD *)(v94 + 20);
      v4[2] = v95;
      if (v95 > 0x7F) {
        int v96 = sub_188A9CC(v95, v4 + 2);
      }
      else {
        int v96 = v4 + 3;
      }
      uint64_t v4 = sub_16B74EC(v94, (unint64_t)v96, a3);
    }
  }
  if ((v6 & 0x4000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v97 = *(_DWORD *)(a1 + 448);
    *(_WORD *)uint64_t v4 = 669;
    *(_DWORD *)(v4 + 2) = v97;
    v4 += 6;
  }
  uint64_t v98 = *(unsigned int *)(a1 + 264);
  if ((int)v98 >= 1)
  {
    uint64_t v99 = 0;
    uint64_t v100 = 8 * v98;
    do
    {
      unsigned int v101 = *(void **)(*(void *)(a1 + 272) + v99 + 8);
      if (*((char *)v101 + 23) < 0)
      {
        int64_t v102 = v101[1];
        if (v102 > 127) {
          goto LABEL_223;
        }
      }
      else
      {
        int64_t v102 = *((unsigned __int8 *)v101 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v102)
      {
        *(_WORD *)uint64_t v4 = 674;
        v4[2] = v102;
        if (*((char *)v101 + 23) < 0) {
          unsigned int v101 = (void *)*v101;
        }
        uint64_t v103 = v4 + 3;
        memcpy(v103, v101, v102);
        uint64_t v4 = &v103[v102];
        goto LABEL_221;
      }
LABEL_223:
      uint64_t v4 = (char *)sub_188A868(a3, 36, (uint64_t)v101, v4);
LABEL_221:
      v99 += 8;
    }
    while (v100 != v99);
  }
  if ((v6 & 0x8000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v104 = *(int *)(a1 + 452);
    *(_WORD *)uint64_t v4 = 680;
    v4[2] = v104;
    if (v104 > 0x7F)
    {
      v4[2] = v104 | 0x80;
      unint64_t v105 = v104 >> 7;
      v4[3] = v104 >> 7;
      v4 += 4;
      if (v104 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v106 = v105 >> 14;
          v105 >>= 7;
          *v4++ = v105;
        }
        while (v106);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v107 = *(void *)(a1 + 368);
    *(_WORD *)uint64_t v4 = 690;
    unsigned int v108 = *(_DWORD *)(v107 + 20);
    v4[2] = v108;
    if (v108 > 0x7F) {
      unsigned int v109 = sub_188A9CC(v108, v4 + 2);
    }
    else {
      unsigned int v109 = v4 + 3;
    }
    uint64_t v4 = sub_16B7E7C(v107, (unint64_t)v109, a3);
  }
  if ((v6 & 0x10000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v110 = *(void *)(a1 + 456);
    *(_WORD *)uint64_t v4 = 696;
    v4[2] = v110;
    if (v110 > 0x7F)
    {
      v4[2] = v110 | 0x80;
      unint64_t v111 = v110 >> 7;
      v4[3] = v110 >> 7;
      v4 += 4;
      if (v110 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v112 = v111 >> 14;
          v111 >>= 7;
          *v4++ = v111;
        }
        while (v112);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v113 = *(unsigned int *)(a1 + 280);
  if ((int)v113 >= 1)
  {
    for (jint j = 0; jj != v113; ++jj)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v115 = *(void *)(*(void *)(a1 + 288) + 8 * jj);
      *(_WORD *)uint64_t v4 = 704;
      v4[2] = v115;
      if (v115 > 0x7F)
      {
        v4[2] = v115 | 0x80;
        unint64_t v116 = v115 >> 7;
        v4[3] = v115 >> 7;
        v4 += 4;
        if (v115 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v117 = v116 >> 14;
            v116 >>= 7;
            *v4++ = v116;
          }
          while (v117);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v118 = *(void *)(a1 + 376);
    *(_WORD *)uint64_t v4 = 714;
    unsigned int v119 = *(_DWORD *)(v118 + 20);
    v4[2] = v119;
    if (v119 > 0x7F) {
      int v120 = sub_188A9CC(v119, v4 + 2);
    }
    else {
      int v120 = v4 + 3;
    }
    uint64_t v4 = sub_15B2EA4(v118, v120, a3);
  }
  if ((v6 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v121 = *(void *)(a1 + 384);
    *(_WORD *)uint64_t v4 = 722;
    unsigned int v122 = *(_DWORD *)(v121 + 20);
    v4[2] = v122;
    if (v122 > 0x7F) {
      int v123 = sub_188A9CC(v122, v4 + 2);
    }
    else {
      int v123 = v4 + 3;
    }
    uint64_t v4 = sub_16B852C(v121, (unint64_t)v123, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 200, 2000, v4, a3);
  }
  uint64_t v124 = *(void *)(a1 + 8);
  if ((v124 & 1) == 0) {
    return v4;
  }
  unint64_t v126 = v124 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v126 + 31) < 0)
  {
    uint64_t v127 = *(void **)(v126 + 8);
    uint64_t v128 = *(void *)(v126 + 16);
  }
  else
  {
    uint64_t v127 = (void *)(v126 + 8);
    LODWORD(v128) = *(unsigned __int8 *)(v126 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v128)
  {
    uint64_t v129 = (int)v128;
    memcpy(v4, v127, (int)v128);
    v4 += v129;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v127, v128, v4);
}