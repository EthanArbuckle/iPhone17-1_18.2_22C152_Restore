void sub_6BC0D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, uint64_t a16, char a17)
{
  if (__p) {
    operator delete(__p);
  }
  sub_592058((uint64_t)&a17);
  _Unwind_Resume(a1);
}

char **sub_6BC270(void *a1, unint64_t a2, void *a3, unint64_t a4, char **a5)
{
  v17 = a5;
  if (a1)
  {
    if (a3)
    {
      while (1)
      {
        unint64_t v10 = sub_470ADC(a1);
        unint64_t v11 = sub_470ADC(a3);
        if (a2 >= v10 || a4 >= v11)
        {
          if (a2 < v10 == a4 < v11) {
            return v17;
          }
        }
        else
        {
          uint64_t v12 = sub_470B40(a1, a2);
          if (v12 == sub_470B40(a3, a4)) {
            return v17;
          }
        }
        v9 = (unsigned int *)sub_470B40(a1, a2);
        unint64_t v16 = (((unint64_t)(v9[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v9[1] << 32) | *v9) ^ 0x1000000000000;
        sub_2D66A4(&v17, &v16);
        ++a2;
      }
    }
    while (a2 < sub_470ADC(a1))
    {
      v13 = (unsigned int *)sub_470B40(a1, a2);
      unint64_t v16 = (((unint64_t)(v13[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v13[1] << 32) | *v13) ^ 0x1000000000000;
      sub_2D66A4(&v17, &v16);
      ++a2;
    }
  }
  else if (a3 && a4 < sub_470ADC(a3))
  {
    do
    {
      v14 = (unsigned int *)sub_470B40(0, a2);
      unint64_t v16 = (((unint64_t)(v14[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v14[1] << 32) | *v14) ^ 0x1000000000000;
      sub_2D66A4(&v17, &v16);
      ++a2;
    }
    while (a4 < sub_470ADC(a3));
  }
  return v17;
}

uint64_t sub_6BC418@<X0>(unint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  v6 = *(const void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v7 = v5 - *(void *)a2;
  if (v5 == *(void *)a2)
  {
    uint64_t v9 = 0;
    v8 = 0;
    unint64_t v10 = *a1;
    unint64_t v11 = (char *)a1[1];
    uint64_t v12 = (char *)*a1;
    if ((char *)*a1 == v11) {
      goto LABEL_10;
    }
LABEL_6:
    uint64_t v12 = (char *)v10;
    while (!v12[2])
    {
      v12 += 4;
      if (v12 == v11) {
        goto LABEL_11;
      }
    }
    goto LABEL_10;
  }
  if (v7 < 0) {
    sub_2E00();
  }
  v8 = operator new(v5 - *(void *)a2);
  *a3 = (uint64_t)v8;
  uint64_t v9 = (uint64_t)&v8[2 * (v7 >> 2)];
  a3[2] = v9;
  memcpy(v8, v6, v7 - 1);
  a3[1] = v9;
  unint64_t v10 = *a1;
  unint64_t v11 = (char *)a1[1];
  uint64_t v12 = (char *)v10;
  if ((char *)v10 != v11) {
    goto LABEL_6;
  }
LABEL_10:
  if (v12 == v11)
  {
LABEL_11:
    sub_6CA5AC((uint64_t)a3, v9, v10, v11, (uint64_t)&v11[-v10] >> 2);
  }
  else
  {
    while (v8 != (_WORD *)v9)
    {
      *v8 += *(_WORD *)v12;
      v8 += 2;
    }
    while ((char *)v10 != v11)
    {
      if (!*(unsigned char *)(v10 + 2)) {
        sub_6CA4A8(a3, (_DWORD *)v10);
      }
      v10 += 4;
    }
  }
  return sub_693DCC(a3, (unsigned int (*)(unint64_t, unint64_t))sub_693F28, (uint64_t (*)(unint64_t, unint64_t))sub_693F48);
}

void sub_6BC570(_Unwind_Exception *exception_object)
{
  v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

double sub_6BC598@<D0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (unsigned char *)a1[1];
  if ((unsigned char *)v4 == v5)
  {
LABEL_9:
    *(_OWORD *)(a2 + 112) = 0u;
    *(_OWORD *)(a2 + 128) = 0u;
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 96) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
    *(void *)(a2 + 56) = sub_1133328();
    *(void *)(a2 + 128) = 0;
    *(void *)(a2 + 136) = 0;
    *(void *)(a2 + 120) = 0;
    double result = 0.0;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 96) = 0u;
    *(_DWORD *)(a2 + 111) = 0;
  }
  else
  {
    v6 = (unsigned char *)v4;
    do
    {
      if (!*v6)
      {
        uint64_t v7 = a2;
        uint64_t v4 = (uint64_t)v6;
        goto LABEL_8;
      }
      v6 += 144;
    }
    while (v6 != v5);
    if ((unsigned char *)v4 == v5) {
      goto LABEL_9;
    }
    uint64_t v7 = a2;
LABEL_8:
    sub_6C8AE4(v7, v4);
  }
  return result;
}

void sub_6BC668(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 55) < 0)
  {
    operator delete(*(void **)(v1 + 32));
    if ((*(char *)(v1 + 31) & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((*(char *)(v1 + 31) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(v1 + 8));
  _Unwind_Resume(exception_object);
}

uint64_t sub_6BC6A4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  if (!*(unsigned char *)(a1 + 1155)) {
    return 0;
  }
  sub_46C894(a2, a3);
  if (!v7) {
    return 0;
  }
  uint64_t v8 = sub_46C894(a2, a3);
  if (!*(unsigned char *)(v8 + 48 * v9 - 8) || sub_470ADC(a2) - 1 == a3) {
    return 0;
  }
  unint64_t v11 = (int *)sub_470B40(a2, a3);
  int v13 = *v11;
  unsigned int v12 = v11[1];
  v14 = (unsigned int *)sub_470B40(a2, a3 + 1);
  uint64_t result = 0;
  uint64_t v15 = *v14;
  if (v13 == v15)
  {
    unsigned int v16 = v14[1];
    if ((unsigned __int16)v12 == (unsigned __int16)v16)
    {
      if ((v16 & 0x20000000) == 0) == (((v12 >> 29)))
      {
        *(void *)(a4 + 8) = *(void *)a4;
        *(_DWORD *)(a4 + 24) = 0;
        unint64_t v17 = ((v15 | ((unint64_t)(unsigned __int16)v16 << 32)) & 0xFFFEFFFFFFFFFFFFLL | ((((unint64_t)(v16 & 0x20000000) >> 29) & 1) << 48)) ^ 0x1000000000000;
        *(void *)(a4 + 48) = *(void *)(a4 + 40);
        *(_DWORD *)(a4 + 64) = 0;
        *(void *)&long long v18 = -1;
        *((void *)&v18 + 1) = -1;
        *(_OWORD *)(a4 + 72) = v18;
        *(_OWORD *)(a4 + 88) = v18;
        *(_OWORD *)(a4 + 104) = v18;
        *(void *)(a4 + 120) = -1;
        *(_DWORD *)(a4 + 128) = 0;
        *(void *)(a4 + 136) = -1;
        *(_DWORD *)(a4 + 144) = 0;
        *(_OWORD *)(a4 + 152) = xmmword_20E2060;
        *(_WORD *)(a4 + 168) = 0;
        *(unsigned char *)(a4 + 170) = 0;
        *(void *)(a4 + 176) = 0;
        *(unsigned char *)(a4 + 188) = 0;
        *(unsigned char *)(a4 + 190) = 0;
        int __src = v13;
        __int16 v20 = v12;
        BOOL v21 = ((v12 >> 29) & 1) == 0;
        char v24 = BYTE6(v17);
        __int16 v23 = WORD2(v17);
        int v22 = v17;
        sub_2D8554((void *)a4, (char *)&__src, (char *)&v25, 2uLL);
        *(_DWORD *)(a4 + 24) = 94;
        return 1;
      }
      return 0;
    }
  }
  return result;
}

uint64_t sub_6BC880(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (unsigned int *)sub_470B40(a2, a3);
  unint64_t v9 = *v8 | ((unint64_t)(v8[1] & 0x1FFFFFFF) << 32);
  unint64_t v10 = (int *)sub_2D5D58(*(void *)a1, v9);
  unint64_t v11 = (unsigned __int16 *)((char *)v10 - *v10);
  if (*v11 < 0xBu) {
    return 0;
  }
  uint64_t v12 = v11[5];
  if (!v12 || (*((unsigned char *)v10 + v12 + 3) & 2) == 0 || !*(unsigned char *)(a1 + 681)) {
    return 0;
  }
  sub_68F4F8(*(void *)a1, v9, &v40);
  int v13 = (unint64_t *)v40;
  v14 = v41;
  if (v40 != v41)
  {
    *(void *)v36 = a4;
    v37 = v41;
    while (1)
    {
      uint64_t v15 = (int *)sub_2DBC9C(*(void *)a1, *v13);
      unsigned int v16 = (unsigned __int16 *)((char *)v15 - *v15);
      if (*v16 < 0xDu) {
        goto LABEL_7;
      }
      uint64_t v17 = v16[6];
      if (!v17) {
        goto LABEL_7;
      }
      long long v18 = (int *)((char *)v15 + v17 + *(unsigned int *)((char *)v15 + v17));
      v19 = (unsigned __int16 *)((char *)v18 - *v18);
      if (*v19 >= 5u && (uint64_t v20 = v19[2]) != 0)
      {
        unsigned int v21 = *((unsigned __int8 *)v18 + v20);
        if (v21 >= 0xF || ((0x7EFFu >> v21) & 1) == 0) {
          goto LABEL_7;
        }
        int v22 = dword_20E8B9C[(char)v21];
      }
      else
      {
        int v22 = 0;
      }
      sub_68F5DC(*(void *)a1, *v13, (unint64_t *)&__p);
      unint64_t v23 = sub_470ADC(a2);
      char v24 = (char *)__p;
      uint64_t v25 = v39;
      if (v23 - a3 < (v39 - (unsigned char *)__p) >> 3) {
        break;
      }
      sub_46B058();
      if (v24 == v25)
      {
LABEL_25:
        *(_DWORD *)(*(void *)v36 + 24) = v22;
        if (&__p != *(void ***)v36) {
          sub_2D8554(*(void **)v36, (char *)__p, v39, (v39 - (unsigned char *)__p) >> 3);
        }
        int v26 = 1;
      }
      else
      {
        v30 = v28;
        uint64_t v31 = v29 + a3;
        while (1)
        {
          v32 = (_DWORD *)sub_470B40(v30, v31);
          int v26 = 0;
          if (*(_DWORD *)v24 != *v32) {
            break;
          }
          int v33 = v32[1];
          if (*((unsigned __int16 *)v24 + 2) != (unsigned __int16)v33) {
            break;
          }
          if (((v33 & 0x20000000) == 0) == (v24[6] == 0))
          {
            int v26 = 0;
            v27 = (char *)__p;
            if (__p) {
              goto LABEL_29;
            }
            goto LABEL_30;
          }
          ++v31;
          v24 += 8;
          if (v24 == v25) {
            goto LABEL_25;
          }
        }
      }
      v27 = (char *)__p;
      if (__p) {
        goto LABEL_29;
      }
LABEL_30:
      v14 = v37;
      if (v26 != 3 && v26)
      {
        uint64_t v34 = 1;
        int v13 = (unint64_t *)v40;
        if (v40) {
          goto LABEL_40;
        }
        return v34;
      }
LABEL_7:
      if (++v13 == v14)
      {
        uint64_t v34 = 0;
        int v13 = (unint64_t *)v40;
        if (v40) {
          goto LABEL_40;
        }
        return v34;
      }
    }
    int v26 = 3;
    v27 = (char *)__p;
    if (!__p) {
      goto LABEL_30;
    }
LABEL_29:
    v39 = v27;
    operator delete(v27);
    goto LABEL_30;
  }
  uint64_t v34 = 0;
  if (v40)
  {
LABEL_40:
    v41 = v13;
    operator delete(v13);
  }
  return v34;
}

void sub_6BCB24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, void *a14, uint64_t a15)
{
  if (__p)
  {
    operator delete(__p);
    unsigned int v16 = a14;
    if (!a14) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    unsigned int v16 = a14;
    if (!a14) {
      goto LABEL_3;
    }
  }
  operator delete(v16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_6BCB8C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  if (!*(unsigned char *)(a1 + 746)) {
    return 0;
  }
  uint64_t v7 = (unsigned int *)sub_470B40(a2, a3);
  uint64_t v8 = sub_470B40(a2, a3 + 1);
  unint64_t v9 = (int *)*((void *)v7 + 1);
  unint64_t v10 = (unsigned __int16 *)((char *)v9 - *v9);
  if (*v10 < 0x2Fu) {
    return 0;
  }
  uint64_t v11 = v10[23];
  if (!v11 || *((unsigned char *)v9 + v11) != 8) {
    return 0;
  }
  uint64_t v12 = (unsigned int *)v8;
  *(_DWORD *)(a4 + 24) = 0;
  unint64_t v14 = (((unint64_t)(v7[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v7[1] << 32) | *v7) ^ 0x1000000000000;
  sub_2D5B74((char **)a4, &v14);
  unint64_t v14 = (((unint64_t)(v12[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v12[1] << 32) | *v12) ^ 0x1000000000000;
  sub_2D5B74((char **)a4, &v14);
  return 1;
}

void sub_6BCC90(uint64_t a1@<X0>, void *a2@<X1>, unint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  unint64_t v9 = (int **)(a1 + 64);
  sub_6C597C((uint64_t *)a1, a2, a3, a4, a1 + 64);
  unint64_t v10 = *(void *)(a1 + 168);
  uint64_t v11 = (void *)(a5 + 40);
  uint64_t v12 = (_OWORD *)(a5 + 72);
  if (*(void *)(a1 + 144) == *(void *)(a1 + 152) || v10 == -1)
  {
    *(void *)a5 = 0;
    *(void *)(a5 + 8) = 0;
    *(_DWORD *)(a5 + 24) = 0;
    *(void *)(a5 + 16) = 0;
    *(void *)(a5 + 32) = -1;
    *(void *)(a5 + 48) = 0;
    *(void *)(a5 + 56) = 0;
    *uint64_t v11 = 0;
    *(_DWORD *)(a5 + 64) = 0;
    *(void *)&long long v14 = -1;
    *((void *)&v14 + 1) = -1;
    *uint64_t v12 = v14;
    *(_OWORD *)(a5 + 88) = v14;
    *(_OWORD *)(a5 + 104) = v14;
    *(void *)(a5 + 120) = -1;
    *(_DWORD *)(a5 + 128) = 0;
    *(void *)(a5 + 136) = -1;
    *(_DWORD *)(a5 + 144) = 0;
    *(_OWORD *)(a5 + 152) = xmmword_20E2060;
    *(_WORD *)(a5 + 168) = 0;
    *(unsigned char *)(a5 + 170) = 0;
    *(void *)(a5 + 183) = 0;
    *(void *)(a5 + 176) = 0;
    return;
  }
  uint64_t v32 = sub_5A7C34((void *)(a1 + 144), *(void *)(a1 + 168));
  *(void *)(a5 + 8) = 0;
  *(void *)(a5 + 16) = 0;
  *(void *)a5 = 0;
  *(_DWORD *)(a5 + 24) = 0;
  *(void *)(a5 + 32) = -1;
  *(void *)(a5 + 48) = 0;
  *(void *)(a5 + 56) = 0;
  *uint64_t v11 = 0;
  *(_DWORD *)(a5 + 64) = 0;
  *(void *)&long long v15 = -1;
  *((void *)&v15 + 1) = -1;
  *uint64_t v12 = v15;
  *(_OWORD *)(a5 + 88) = v15;
  *(_OWORD *)(a5 + 104) = v15;
  *(void *)(a5 + 120) = -1;
  *(_DWORD *)(a5 + 128) = 0;
  *(void *)(a5 + 136) = -1;
  *(_DWORD *)(a5 + 144) = 0;
  *(_OWORD *)(a5 + 152) = xmmword_20E2060;
  *(_WORD *)(a5 + 168) = 0;
  *(unsigned char *)(a5 + 170) = 0;
  *(void *)(a5 + 176) = 0;
  unsigned int v16 = (uint64_t *)(a5 + 176);
  *(void *)(a5 + 183) = 0;
  if ((sub_6C360C(a1, a2, a3, a5, (uint64_t)v9) & 1) == 0
    && (sub_6C6EC4(a1, a2, a3, (void *)(a1 + 144), v10, a5) & 1) == 0)
  {
    uint64_t v17 = *(void *)(a1 + 96);
    unint64_t v18 = *(void *)(v32 + 32);
    if ((v17 & 0xFFFFFFFFFFFFLL) == (v18 & 0xFFFFFFFFFFFFLL)
      && ((v17 & 0xFF000000000000) == 0x1000000000000) != (HIWORD(v18) & 1))
    {
      __src[0] = *(void *)(a1 + 96);
      __src[1] = v18;
      sub_2D8554((void *)a5, (char *)__src, (char *)&v35, 2uLL);
      *(_DWORD *)(a5 + 24) = 35;
      return;
    }
    if ((sub_6C0D10(a1, v9, (uint64_t *)(a1 + 144), v10, 1, a5) & 1) == 0
      && !sub_6C1AB0(a1, (uint64_t)v9, (uint64_t *)(a1 + 144), v10, a5))
    {
      goto LABEL_24;
    }
    uint64_t v20 = *(void *)a5;
    uint64_t v19 = *(void *)(a5 + 8);
    unint64_t v21 = sub_470ADC(a2);
    if (v21 - a3 >= (v19 - v20) >> 3) {
      unint64_t v22 = (v19 - v20) >> 3;
    }
    else {
      unint64_t v22 = v21 - a3;
    }
    uint64_t v23 = *(void *)a5;
    sub_46B058();
    unsigned int v16 = (uint64_t *)(a5 + 176);
    if (!sub_6C7410(v23, v23 + 8 * v22, v25, v24 + a3)) {
      goto LABEL_23;
    }
    sub_6A2F9C((uint64_t *)a5, v22);
    unint64_t v26 = *(void *)(a5 + 152);
    uint64_t v27 = (uint64_t)(*(void *)(a5 + 8) - *(void *)a5) >> 3;
    if (v26 != -1 && *(void *)(a5 + 160) != 0x7FFFFFFFFFFFFFFFLL && v26 >= v27 - 1)
    {
      *(void *)(a5 + 152) = v27 - 1;
      *(void *)(a5 + 160) = 0;
    }
    v28 = (unsigned int *)sub_470B40(a2, a3 + v27 - 1);
    if (sub_664888(a1 + 3048, v28))
    {
LABEL_23:
      sub_6C597C((uint64_t *)a1, a2, a3, a4, (uint64_t)v9);
LABEL_24:
      *(_DWORD *)(a1 + 176) = 0;
      sub_6BF228(a1, a2, a3, v9, a5, 0);
      int v29 = *(_DWORD *)(a5 + 24);
      if ((v29 == 3 || !v29) && sub_6C32AC((uint64_t *)a1, a2, a3)) {
        *(_DWORD *)(a5 + 24) = 12;
      }
      uint64_t v30 = sub_6DE7E0(a1 + 1160, v9, (uint64_t *)(a1 + 144), v10);
      if ((*(_DWORD *)(a5 + 24) & 0xFFFFFFFE) == 0x14
        && v30 == v10
        && 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a1 + 152) - *(void *)(a1 + 144)) >> 3) >= 2)
      {
        uint64_t v31 = (int **)sub_5A7C34((void *)(a1 + 144), v10 == 0);
        if (sub_6C1788(a1, a2, a3 + 1, v31)) {
          *(_DWORD *)(a5 + 24) = 0;
        }
      }
      *unsigned int v16 = sub_6C02B4((uint64_t *)a1, a5);
    }
  }
}

void sub_6BD094(_Unwind_Exception *a1)
{
  sub_592058(v1);
  _Unwind_Resume(a1);
}

void sub_6BD0A8(_Unwind_Exception *a1)
{
  sub_592058(v1);
  _Unwind_Resume(a1);
}

void sub_6BD0BC(_Unwind_Exception *a1)
{
  sub_592058(v1);
  _Unwind_Resume(a1);
}

void sub_6BD0D0(_Unwind_Exception *a1)
{
  sub_592058(v1);
  _Unwind_Resume(a1);
}

void sub_6BD0E4(_Unwind_Exception *a1)
{
  sub_592058(v1);
  _Unwind_Resume(a1);
}

void sub_6BD0F8(_Unwind_Exception *a1)
{
  sub_592058(v1);
  _Unwind_Resume(a1);
}

void sub_6BD10C(_Unwind_Exception *a1)
{
  sub_592058(v1);
  _Unwind_Resume(a1);
}

void sub_6BD120(_Unwind_Exception *a1)
{
  sub_592058(v1);
  _Unwind_Resume(a1);
}

void sub_6BD134(_Unwind_Exception *a1)
{
  sub_592058(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_6BD148@<X0>(uint64_t a1@<X0>, int **a2@<X1>, uint64_t *a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result = sub_5A7C34(a3, a4);
  uint64_t v11 = result;
  uint64_t v12 = *a2;
  int v13 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v14 = *v13;
  if (v14 >= 0x2F)
  {
    uint64_t v15 = v13[23];
    if (v13[23])
    {
      unsigned int v16 = *((unsigned __int8 *)v12 + v15);
      BOOL v17 = v16 > 0x36;
      uint64_t v18 = (1 << v16) & 0x44000000000008;
      if (!v17 && v18 != 0) {
        goto LABEL_38;
      }
    }
  }
  uint64_t v20 = (unsigned __int16 *)(*(void *)result - **(int **)result);
  if (*v20 >= 0x2Fu)
  {
    uint64_t v21 = v20[23];
    if (v21)
    {
      unsigned int v22 = *(unsigned __int8 *)(*(void *)result + v21);
      BOOL v17 = v22 > 0x36;
      uint64_t v23 = (1 << v22) & 0x44000000000008;
      if (!v17 && v23 != 0)
      {
        *(_DWORD *)a5 = 6;
        *(unsigned char *)(a5 + 4) = 1;
        return result;
      }
    }
  }
  if (v14 >= 0x2F)
  {
    LODWORD(v15) = v13[23];
    if (v13[23])
    {
LABEL_38:
      unsigned int v25 = *((unsigned __int8 *)v12 + v15);
      if (v25 <= 0x36 && ((1 << v25) & 0x44000000000008) != 0)
      {
        uint64_t v27 = (unsigned __int16 *)(*(void *)result - **(int **)result);
        if (*v27 >= 0x2Fu)
        {
          uint64_t v28 = v27[23];
          if (v28)
          {
            unsigned int v29 = *(unsigned __int8 *)(*(void *)result + v28);
            BOOL v17 = v29 > 0x36;
            uint64_t v30 = (1 << v29) & 0x44000000000008;
            if (!v17 && v30 != 0)
            {
              *(_DWORD *)a5 = 0;
              *(unsigned char *)(a5 + 4) = 1;
              return result;
            }
          }
        }
      }
      unsigned int v32 = *((unsigned __int8 *)v12 + v15);
      if (v32 <= 0x36 && ((1 << v32) & 0x44000000000008) != 0)
      {
        if ((uint64_t v34 = (unsigned __int16 *)(*(void *)result - **(int **)result), *v34 < 0x2Fu)
          || (uint64_t v35 = v34[23]) == 0
          || ((unsigned int v36 = *(unsigned __int8 *)(*(void *)result + v35),
               BOOL v17 = v36 > 0x36,
               uint64_t v37 = (1 << v36) & 0x44000000000008,
               !v17)
            ? (BOOL v38 = v37 == 0)
            : (BOOL v38 = 1),
              v38))
        {
          int v43 = 7;
          goto LABEL_91;
        }
      }
      if (*((unsigned char *)v12 + v15) == 17) {
        goto LABEL_42;
      }
    }
  }
  uint64_t v39 = *(void *)result;
  v40 = (unsigned __int16 *)(*(void *)result - **(int **)result);
  unsigned int v41 = *v40;
  if (v41 >= 0x2F && v40[23] && *(unsigned char *)(v39 + v40[23]) == 17) {
    goto LABEL_42;
  }
  if (v14 < 0xB || (uint64_t v42 = v13[5]) == 0 || (*(int *)((char *)v12 + v42) & 0x208) != 8)
  {
    if (v41 >= 0xB && v40[5] && (*(_DWORD *)(v39 + v40[5]) & 0x208) == 8)
    {
      int v43 = 22;
LABEL_91:
      *(_DWORD *)a5 = v43;
      goto LABEL_92;
    }
    if (v14 < 0xB || (LODWORD(v42) = v13[5]) == 0)
    {
LABEL_68:
      if (v41 >= 0xB && v40[5] && (*(unsigned char *)(v39 + v40[5] + 1) & 2) != 0)
      {
        BOOL v47 = *(unsigned char *)(a1 + 1096) == 0;
        int v43 = 91;
        int v48 = 22;
        goto LABEL_89;
      }
      if (v14 < 0xB) {
        goto LABEL_80;
      }
      LODWORD(v42) = v13[5];
      if (!v13[5]) {
        goto LABEL_80;
      }
LABEL_73:
      if ((*((unsigned char *)v12 + v42 + 1) & 2) != 0
        && (v41 < 0xB || !v40[5] || (*(unsigned char *)(v39 + v40[5] + 1) & 2) == 0))
      {
        BOOL v47 = *(unsigned char *)(a1 + 1096) == 0;
        int v43 = 92;
        int v48 = 23;
        goto LABEL_89;
      }
      int v45 = *(int *)((char *)v12 + v42) & 0x200;
      BOOL v46 = v41 < 0xB || v45 == 0;
      if (v46 || !v40[5] || (*(unsigned char *)(v39 + v40[5] + 1) & 2) == 0)
      {
LABEL_80:
        uint64_t result = sub_6C06B8(a1, a2, a3, a4);
        if (!result)
        {
          *(void *)a5 = 0;
          return result;
        }
        int v43 = 5;
        goto LABEL_91;
      }
      uint64_t result = sub_699DF8((uint64_t)a3);
      if (result) {
        goto LABEL_42;
      }
      uint64_t result = sub_2E79EC(*(void *)a1, (uint64_t)a2[4], *(void *)(v11 + 32));
      if (result) {
        goto LABEL_42;
      }
      BOOL v47 = *(unsigned char *)(a1 + 1096) == 0;
      int v43 = 93;
      int v48 = 24;
LABEL_89:
      if (v47) {
        int v43 = v48;
      }
      goto LABEL_91;
    }
  }
  if ((*(int *)((char *)v12 + v42) & 0x208) == 8)
  {
    if (v41 < 0xB || !v40[5] || (uint64_t result = 520, (*(_DWORD *)(v39 + v40[5]) & 0x208) != 8))
    {
      int v43 = 23;
      goto LABEL_91;
    }
  }
  BOOL v44 = v41 >= 0xB && (*(int *)((char *)v12 + v42) & 0x208) == 8;
  if (!v44 || !v40[5] || (*(_DWORD *)(v39 + v40[5]) & 0x208) != 8)
  {
    if ((*((unsigned char *)v12 + v42 + 1) & 2) != 0) {
      goto LABEL_73;
    }
    goto LABEL_68;
  }
  uint64_t result = sub_699D9C((uint64_t)a3);
  if ((result & 1) == 0)
  {
    uint64_t result = sub_2E79EC(*(void *)a1, (uint64_t)a2[4], *(void *)(v11 + 32));
    if ((result & 1) == 0)
    {
      int v43 = 24;
      goto LABEL_91;
    }
  }
LABEL_42:
  *(_DWORD *)a5 = 0;
LABEL_92:
  *(unsigned char *)(a5 + 4) = 1;
  return result;
}

uint64_t sub_6BD5C4(uint64_t a1, int **a2, long long **a3)
{
  v6 = (unsigned __int16 *)((char *)*a2 - **a2);
  if (*v6 >= 0x2Fu)
  {
    uint64_t v7 = v6[23];
    if (v7)
    {
      int v8 = *((unsigned __int8 *)*a2 + v7);
      if (v8 == 9 || v8 == 20) {
        return 0;
      }
    }
  }
  uint64_t v11 = *a3;
  uint64_t v12 = a3[1];
  if (*a3 == v12) {
    return 1;
  }
  while (1)
  {
    long long v13 = *v11;
    long long v14 = v11[1];
    uint64_t v26 = *((void *)v11 + 4);
    long long v24 = v13;
    long long v25 = v14;
    if (fabs(sub_6D82EC(a1 + 1160, a2, (int **)&v24)) > *(double *)(a1 + 184)) {
      return 0;
    }
    uint64_t v11 = (long long *)((char *)v11 + 40);
    if (v11 == v12)
    {
      unsigned int v16 = *a3;
      uint64_t v15 = a3[1];
      while (1)
      {
        if (v16 == v15) {
          return 1;
        }
        long long v17 = *v16;
        long long v18 = v16[1];
        uint64_t v26 = *((void *)v16 + 4);
        long long v24 = v17;
        long long v25 = v18;
        uint64_t v19 = (unsigned int *)sub_2E4738((int **)&v24);
        uint64_t v20 = (unsigned __int16 *)(v24 - *(int *)v24);
        unsigned int v21 = *v20;
        if (v21 >= 0x2F)
        {
          if (v20[23])
          {
            int v22 = *(unsigned __int8 *)(v24 + v20[23]);
            if (v22 == 9) {
              goto LABEL_16;
            }
            if (!*(unsigned char *)(a1 + 695) || v22 == 20)
            {
              if (v22 == 20) {
                goto LABEL_16;
              }
            }
            else if (v22 == 43)
            {
              goto LABEL_16;
            }
          }
        }
        else if (v21 < 9)
        {
          goto LABEL_14;
        }
        uint64_t v23 = v20[4];
        if (v23)
        {
          if (*(unsigned int *)(v24 + v23) > *(uint64_t *)(a1 + 704)) {
            return 0;
          }
          goto LABEL_15;
        }
LABEL_14:
        if (*(uint64_t *)(a1 + 704) < 0) {
          return 0;
        }
LABEL_15:
        uint64_t result = sub_6C6D30(a1, v19);
        if (!result) {
          return result;
        }
LABEL_16:
        unsigned int v16 = (long long *)((char *)v16 + 40);
      }
    }
  }
}

BOOL sub_6BD77C(uint64_t a1, int **a2, uint64_t *a3, unint64_t a4, unint64_t a5, char a6)
{
  if (a4 > 1) {
    return 0;
  }
  BOOL v6 = 0;
  if (sub_6C0810(a1, a2, (uint64_t)a3, a4, a5))
  {
    unint64_t v133 = a5;
    if ((a6 & 1) == 0)
    {
      uint64_t v14 = sub_5A7C34(a3, a4);
      uint64_t v15 = sub_5A7C34(a3, 1 - a4);
      sub_2954EC(*(void *)a1, (uint64_t)a2[4], (uint64_t)&v140);
      unsigned int v16 = __p;
      if (__p == v142)
      {
        unsigned int v138 = -1;
        unsigned int v18 = -1;
        if (!__p)
        {
LABEL_9:
          sub_2954EC(*(void *)a1, (uint64_t)a2[4], (uint64_t)&v140);
          uint64_t v19 = __p;
          if (__p == v142)
          {
            unsigned int v20 = -1;
            unsigned int v22 = -1;
            if (!__p)
            {
LABEL_12:
              sub_2954EC(*(void *)a1, *(void *)(v14 + 32), (uint64_t)&v140);
              uint64_t v23 = __p;
              v135 = (char **)v14;
              v136 = a2;
              if (__p == v142)
              {
                unint64_t v26 = 0xFFFFFFFF00000000;
                uint64_t v27 = 0xFFFFFFFFLL;
                if (!__p)
                {
LABEL_15:
                  sub_2954EC(*(void *)a1, *(void *)(v15 + 32), (uint64_t)&v140);
                  uint64_t v28 = __p;
                  v134 = (int **)v15;
                  if (__p == v142)
                  {
                    unint64_t v31 = 0xFFFFFFFF00000000;
                    uint64_t v32 = 0xFFFFFFFFLL;
                    if (!__p) {
                      goto LABEL_18;
                    }
                  }
                  else
                  {
                    unint64_t v29 = sub_2E1AA4((uint64_t)&v140);
                    unsigned int v30 = v29;
                    unint64_t v31 = v29 & 0xFFFFFFFF00000000;
                    uint64_t v28 = __p;
                    uint64_t v32 = v30;
                    if (!__p)
                    {
LABEL_18:
                      double v33 = (double)v138 - (double)v20;
                      double v34 = (double)v22 - (double)v18;
                      if (v33 != 0.0 || (double v35 = 0.0, v36 = 0.0, v34 != 0.0))
                      {
                        double v37 = ((double)v18 - (double)v22) * (double)v138 + ((double)v20 - (double)v138) * (double)v18;
                        double v38 = v34 * v34 + v33 * v33;
                        double v39 = -(v37 + v33 * (double)v27 + v34 * (double)HIDWORD(v26)) / v38;
                        LODWORD(v40) = (v34 * v39 + (double)HIDWORD(v26));
                        if (v40 >= 0xFFFFFFFE) {
                          uint64_t v40 = 4294967294;
                        }
                        else {
                          uint64_t v40 = v40;
                        }
                        double v35 = sqrt((double)(((v33 * v39 + (double)v27) - v27)
                                          * ((v33 * v39 + (double)v27) - v27)
                                          + (v40 - HIDWORD(v26)) * (v40 - HIDWORD(v26))))
                            / 100.0;
                        double v41 = -(v37 + v33 * (double)v32 + v34 * (double)HIDWORD(v31)) / v38;
                        double v42 = v33 * v41 + (double)v32;
                        LODWORD(v40) = (v34 * v41 + (double)HIDWORD(v31));
                        if (v40 >= 0xFFFFFFFE) {
                          uint64_t v40 = 4294967294;
                        }
                        else {
                          uint64_t v40 = v40;
                        }
                        double v34 = sqrt((double)((v42 - v32) * (v42 - v32)
                                          + (v40 - HIDWORD(v31)) * (v40 - HIDWORD(v31))));
                        double v36 = v34 / 100.0;
                      }
                      LODWORD(v34) = *(_DWORD *)(a1 + 360);
                      double v43 = (double)*(unint64_t *)&v34;
                      LODWORD(v34) = *(_DWORD *)(a1 + 356);
                      double v44 = (double)*(unint64_t *)&v34;
                      unint64_t v45 = sub_2E68E8(*(void *)a1, (uint64_t)v136[4]);
                      if (v45 <= 0xFFFFFFFEFFFFFFFFLL && v45)
                      {
                        BOOL v46 = v135;
                        BOOL v6 = 0;
                        int v47 = sub_2E79EC(*(void *)a1, (uint64_t)v136[4], (uint64_t)v135[4]) ^ 1;
                        if (v36 <= v43) {
                          int v48 = 1;
                        }
                        else {
                          int v48 = v47;
                        }
                        BOOL v49 = v36 <= v43 || v35 >= v44;
                        if (v35 >= v36) {
                          int v48 = 1;
                        }
                        if (v48 != 1 || !v49) {
                          return v6;
                        }
                      }
                      else
                      {
                        BOOL v46 = v135;
                        if (v35 < v44 && v36 > v43) {
                          return 0;
                        }
                      }
                      unint64_t v50 = (unint64_t)v46[4];
                      uint64_t v51 = v50 & 0xFF000000000000;
                      v52 = (int *)sub_2D5D58(*(void *)a1, v50 & 0xFFFFFFFFFFFFLL);
                      v53 = (unsigned __int16 *)((char *)v52 - *v52);
                      unsigned int v54 = *v53;
                      if (v51)
                      {
                        v55 = (char **)v134;
                        if (v54 < 0x29 || (unsigned int v56 = v53[20]) == 0)
                        {
LABEL_57:
                          unsigned int v57 = sub_69A548(*(void *)a1, (unint64_t)v46[4] ^ 0x1000000000000);
LABEL_58:
                          unint64_t v58 = (unint64_t)v55[4];
                          uint64_t v59 = v58 & 0xFF000000000000;
                          v60 = (int *)sub_2D5D58(*(void *)a1, v58 & 0xFFFFFFFFFFFFLL);
                          v61 = (unsigned __int16 *)((char *)v60 - *v60);
                          unsigned int v62 = *v61;
                          if (v59)
                          {
                            if (v62 < 0x29 || (unsigned int v63 = v61[20]) == 0)
                            {
LABEL_65:
                              unsigned int v64 = sub_69A548(*(void *)a1, (unint64_t)v55[4] ^ 0x1000000000000);
LABEL_66:
                              if (v57) {
                                BOOL v65 = v64 == 0;
                              }
                              else {
                                BOOL v65 = 1;
                              }
                              int v66 = !v65;
                              int v137 = v66;
                              BOOL v131 = v65 && sub_69A5C0(a1, v136, (uint64_t)v46, (uint64_t)v55);
                              if (v64 >= v57) {
                                unsigned int v67 = v57;
                              }
                              else {
                                unsigned int v67 = v64;
                              }
                              int v130 = sub_6D7A80(a1 + 1160, v55);
                              int v68 = sub_6D7A80(a1 + 1160, v46);
                              v69 = *v46;
                              v70 = &(*v46)[-*(int *)*v46];
                              unsigned int v71 = *(unsigned __int16 *)v70;
                              if (*((unsigned char *)v46 + 38))
                              {
                                if (v71 >= 0xB)
                                {
                                  int v72 = *((unsigned __int16 *)v70 + 5);
                                  if (*((_WORD *)v70 + 5))
                                  {
                                    int v73 = 2;
LABEL_85:
                                    BOOL v74 = (*(_DWORD *)&v69[v72] & v73) != 0;
                                    goto LABEL_87;
                                  }
                                }
                              }
                              else if (v71 >= 0xB)
                              {
                                int v72 = *((unsigned __int16 *)v70 + 5);
                                if (*((_WORD *)v70 + 5))
                                {
                                  int v73 = 1;
                                  goto LABEL_85;
                                }
                              }
                              BOOL v74 = 0;
LABEL_87:
                              v75 = *v55;
                              v76 = &(*v55)[-*(int *)*v55];
                              unsigned int v77 = *(unsigned __int16 *)v76;
                              if (*((unsigned char *)v55 + 38))
                              {
                                if (v77 >= 0xB && *((_WORD *)v76 + 5))
                                {
                                  if ((v74 ^ ((*(_DWORD *)&v75[*((unsigned __int16 *)v76 + 5)] & 2) != 0))) {
                                    return 0;
                                  }
LABEL_96:
                                  if (v71 >= 0xB && (uint64_t v78 = *((unsigned __int16 *)v70 + 5)) != 0)
                                  {
                                    int v79 = (v69[v78 + 1] >> 4) & 1;
                                    if (v77 < 0xB) {
                                      goto LABEL_104;
                                    }
                                  }
                                  else
                                  {
                                    int v79 = 0;
                                    if (v77 < 0xB) {
                                      goto LABEL_104;
                                    }
                                  }
                                  if (*((_WORD *)v76 + 5))
                                  {
                                    if (v79 == (v75[*((unsigned __int16 *)v76 + 5) + 1] & 0x10) >> 4)
                                    {
LABEL_105:
                                      int v129 = v68;
                                      uint64_t v140 = 0;
                                      __p = 0;
                                      int v143 = 0;
                                      v142 = 0;
                                      uint64_t v144 = -1;
                                      uint64_t v145 = 0;
                                      uint64_t v146 = 0;
                                      uint64_t v147 = 0;
                                      int v148 = 0;
                                      *(void *)&long long v80 = -1;
                                      *((void *)&v80 + 1) = -1;
                                      long long v149 = v80;
                                      long long v150 = v80;
                                      long long v151 = v80;
                                      uint64_t v152 = -1;
                                      int v153 = 0;
                                      uint64_t v154 = -1;
                                      int v155 = 0;
                                      long long v156 = xmmword_20E2060;
                                      __int16 v157 = 0;
                                      char v158 = 0;
                                      *(void *)((char *)v159 + 7) = 0;
                                      v159[0] = 0;
                                      if (sub_6C0D10(a1, v136, a3, 1 - a4, 0, (uint64_t)&v140))
                                      {
LABEL_106:
                                        BOOL v6 = 0;
LABEL_107:
                                        sub_592058((uint64_t)&v140);
                                        return v6;
                                      }
                                      int v132 = v57 - v64;
                                      v81 = &(*v46)[-*(int *)*v46];
                                      if (*(unsigned __int16 *)v81 >= 0x2Fu)
                                      {
                                        uint64_t v82 = *((unsigned __int16 *)v81 + 23);
                                        if (v82)
                                        {
                                          unsigned int v83 = (*v46)[v82];
                                          if (v83 <= 0x2A && ((1 << v83) & 0x50426810004) != 0)
                                          {
                                            v84 = &(*v55)[-*(int *)*v55];
                                            if (*(unsigned __int16 *)v84 >= 0x2Fu)
                                            {
                                              uint64_t v85 = *((unsigned __int16 *)v84 + 23);
                                              if (v85)
                                              {
                                                unsigned int v86 = (*v55)[v85];
                                                if (v86 <= 0x2A && ((1 << v86) & 0x50426810004) != 0)
                                                {
                                                  BOOL v6 = v132 < *(_DWORD *)(a1 + 420);
                                                  goto LABEL_107;
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      v87 = *v55;
                                      v88 = &(*v55)[-*(int *)*v55];
                                      unsigned int v89 = *(unsigned __int16 *)v88;
                                      if (v89 < 0x2F)
                                      {
                                        if (v89 < 0xB) {
                                          goto LABEL_128;
                                        }
                                      }
                                      else if (*((_WORD *)v88 + 23) && v87[*((unsigned __int16 *)v88 + 23)] == 28)
                                      {
                                        goto LABEL_106;
                                      }
                                      if (*((_WORD *)v88 + 5) && (v87[*((unsigned __int16 *)v88 + 5)] & 4) != 0)
                                      {
                                        if (v89 < 0x2F || (uint64_t v90 = *((unsigned __int16 *)v88 + 23)) == 0)
                                        {
                                          BOOL v91 = 0;
                                          goto LABEL_132;
                                        }
                                        BOOL v91 = 0;
                                        unsigned int v92 = v87[v90];
                                        if (v92 > 0x2A || ((1 << v92) & 0x50426810004) == 0)
                                        {
LABEL_132:
                                          if (sub_6906B4((char **)v136)
                                            && (sub_6906B4(v46) & v91 & 1) != 0
                                            || sub_6D7A80(a1 + 1160, v46) < *(_DWORD *)(a1 + 368)
                                            && sub_6D7A80(a1 + 1160, v55) > *(_DWORD *)(a1 + 368))
                                          {
                                            goto LABEL_106;
                                          }
                                          uint64_t v128 = a1 + 1160;
                                          v94 = &(*v55)[-*(int *)*v55];
                                          if (*(unsigned __int16 *)v94 >= 0x2Fu)
                                          {
                                            uint64_t v95 = *((unsigned __int16 *)v94 + 23);
                                            if (v95)
                                            {
                                              unsigned int v96 = (*v55)[v95];
                                              if (v96 <= 0x2D && ((1 << v96) & 0x208040000000) != 0)
                                              {
                                                v97 = &(*v46)[-*(int *)*v46];
                                                if (*(unsigned __int16 *)v97 < 0x2Fu) {
                                                  goto LABEL_106;
                                                }
                                                uint64_t v98 = *((unsigned __int16 *)v97 + 23);
                                                if (!v98) {
                                                  goto LABEL_106;
                                                }
                                                BOOL v6 = 0;
                                                unsigned int v99 = (*v46)[v98];
                                                if (v99 > 0x2D || ((1 << v99) & 0x208040000000) == 0) {
                                                  goto LABEL_107;
                                                }
                                              }
                                            }
                                          }
                                          if (v133 == a4 && (sub_35E640() & 1) != 0) {
                                            goto LABEL_106;
                                          }
                                          double v100 = sub_69B2B8(a1, v136, v134, (int **)v46, v93);
                                          double v101 = sub_69B314(a1, v136, (int **)v46, v100);
                                          double v102 = sub_69B314(a1, v136, v134, v101);
                                          if (v100 >= sub_69B494(a1, v136, v134, (int **)v46, v102)) {
                                            goto LABEL_106;
                                          }
                                          if (sub_6561B0((int **)v46)
                                            && sub_699454((int **)v46)
                                            && sub_69B568(v46) >= 2)
                                          {
                                            v103 = (unsigned __int16 *)((char *)*v136 - **v136);
                                            if (*v103 >= 0xBu && (uint64_t v104 = v103[5]) != 0)
                                            {
                                              if (v102 >= 0.0 == *((unsigned __int8 *)*v136 + v104 + 1) >> 7) {
                                                goto LABEL_106;
                                              }
                                            }
                                            else if (v102 < 0.0)
                                            {
                                              goto LABEL_106;
                                            }
                                          }
                                          double v105 = fabs(v101);
                                          double v106 = *(double *)(a1 + 184);
                                          if (v105 > v106 == fabs(v102) <= v106) {
                                            goto LABEL_106;
                                          }
                                          v107 = *v46;
                                          v108 = &(*v46)[-*(int *)*v46];
                                          unsigned int v109 = *(unsigned __int16 *)v108;
                                          if (v109 >= 0x2F)
                                          {
                                            uint64_t v110 = *((unsigned __int16 *)v108 + 23);
                                            if (*((_WORD *)v108 + 23))
                                            {
                                              if (v107[v110] == 44) {
                                                goto LABEL_167;
                                              }
                                            }
                                          }
                                          v111 = (unsigned __int16 *)((char *)*v134 - **v134);
                                          if (*v111 < 0x2Fu) {
                                            goto LABEL_176;
                                          }
                                          uint64_t v112 = v111[23];
                                          if (!v112 || *((unsigned char *)*v134 + v112) != 44) {
                                            goto LABEL_176;
                                          }
                                          if (v109 >= 0x2F)
                                          {
                                            LODWORD(v110) = *((unsigned __int16 *)v108 + 23);
                                            if (*((_WORD *)v108 + 23))
                                            {
LABEL_167:
                                              if (v107[v110] == 44)
                                              {
                                                v113 = (unsigned __int16 *)((char *)*v134 - **v134);
                                                if (*v113 >= 0x2Fu)
                                                {
                                                  uint64_t v114 = v113[23];
                                                  if (v114)
                                                  {
                                                    if (*((unsigned char *)*v134 + v114) == 44) {
                                                      goto LABEL_170;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          if ((sub_69B640((uint64_t)&v139, v46) & 1) != 0
                                            || sub_69B640((uint64_t)&v139, v134))
                                          {
LABEL_170:
                                            unint64_t v115 = sub_2E68E8(*(void *)a1, (uint64_t)v46[4]);
                                            if (v115 <= 0xFFFFFFFEFFFFFFFFLL)
                                            {
                                              if (v115)
                                              {
                                                unint64_t v116 = sub_2E68E8(*(void *)a1, (uint64_t)v134[4]);
                                                if (v116 <= 0xFFFFFFFEFFFFFFFFLL
                                                  && v116
                                                  && (sub_2E79EC(*(void *)a1, (uint64_t)v46[4], (uint64_t)v134[4]) & 1) != 0)
                                                {
                                                  goto LABEL_106;
                                                }
                                              }
                                            }
                                            double v106 = vabdd_f64(v102, v101);
                                            if (v106 < *(double *)(a1 + 424)) {
                                              goto LABEL_106;
                                            }
                                          }
LABEL_176:
                                          if (v132 < 0) {
                                            char v117 = v137;
                                          }
                                          else {
                                            char v117 = 0;
                                          }
                                          if (v117) {
                                            goto LABEL_200;
                                          }
                                          unsigned int v118 = *(_DWORD *)(a1 + 364);
                                          if (v67 > v118 || v57 == v64 && v67 == v118) {
                                            goto LABEL_200;
                                          }
                                          if ((v132 & 0x80000000) == 0)
                                          {
                                            LOWORD(v106) = *(_WORD *)(a1 + 416);
                                            if (v100 >= (double)vmovl_s16(*(int16x4_t *)&v106).i32[0]) {
                                              goto LABEL_106;
                                            }
                                          }
                                          int v119 = *(_DWORD *)(a1 + 372);
                                          int v120 = *(_DWORD *)(a1 + 380);
                                          v121 = (unsigned __int16 *)((char *)*v134 - **v134);
                                          if (*v121 >= 0x2Fu)
                                          {
                                            uint64_t v122 = v121[23];
                                            if (v122)
                                            {
                                              unsigned int v123 = *((unsigned __int8 *)*v134 + v122);
                                              if (v123 <= 0x2A && ((1 << v123) & 0x50426810004) != 0)
                                              {
                                                v124 = (unsigned __int16 *)((char *)*v136 - **v136);
                                                if (*v124 >= 0xBu && (uint64_t v125 = v124[5]) != 0)
                                                {
                                                  if (v102 >= 0.0 == *((unsigned __int8 *)*v136 + v125 + 1) >> 7) {
                                                    goto LABEL_196;
                                                  }
                                                }
                                                else if (v102 < 0.0)
                                                {
                                                  goto LABEL_196;
                                                }
                                                if (v105 < *(double *)(a1 + 184))
                                                {
                                                  int v119 = *(_DWORD *)(a1 + 376);
                                                  int v120 = *(_DWORD *)(a1 + 384);
                                                }
                                              }
                                            }
                                          }
LABEL_196:
                                          if (v132 <= v119) {
                                            char v126 = v137;
                                          }
                                          else {
                                            char v126 = 0;
                                          }
                                          if ((v126 & 1) == 0)
                                          {
                                            if (sub_69B688(a1, v46, v134) || v131 && sub_69B6E8(a1, v136, v46, v134)) {
                                              goto LABEL_106;
                                            }
                                            int v127 = v130 - v129 > v120 ? 1 : v137;
                                            if (v127 == 1
                                              && ((v137 & 1) != 0
                                               || sub_6D7A80(v128, v46) < *(_DWORD *)(a1 + 368)
                                               || sub_6D7A80(v128, (char **)v134) < *(_DWORD *)(a1 + 368)
                                               || v130 - v129 > *(_DWORD *)(a1 + 388)))
                                            {
                                              goto LABEL_106;
                                            }
                                          }
LABEL_200:
                                          BOOL v6 = 1;
                                          goto LABEL_107;
                                        }
                                      }
LABEL_128:
                                      BOOL v91 = (sub_66529C(a1 + 3048, (int **)v55) & 1) != 0
                                         || sub_6DEED8((void *)(a1 + 1160), (int **)v55);
                                      goto LABEL_132;
                                    }
                                    return 0;
                                  }
LABEL_104:
                                  if ((v79 & 1) == 0) {
                                    goto LABEL_105;
                                  }
                                  return 0;
                                }
                              }
                              else if (v77 >= 0xB && *((_WORD *)v76 + 5))
                              {
                                LOBYTE(v74) = v74 ^ ((*(_DWORD *)&v75[*((unsigned __int16 *)v76 + 5)] & 1) != 0);
                              }
                              if (v74) {
                                return 0;
                              }
                              goto LABEL_96;
                            }
                          }
                          else
                          {
                            if (v62 < 0x27) {
                              goto LABEL_65;
                            }
                            unsigned int v63 = v61[19];
                            if (!v63) {
                              goto LABEL_65;
                            }
                          }
                          unsigned int v64 = *(int *)((char *)v60 + v63 + *(int *)((char *)v60 + v63));
                          if (v64) {
                            goto LABEL_66;
                          }
                          goto LABEL_65;
                        }
                      }
                      else
                      {
                        v55 = (char **)v134;
                        if (v54 < 0x27) {
                          goto LABEL_57;
                        }
                        unsigned int v56 = v53[19];
                        if (!v56) {
                          goto LABEL_57;
                        }
                      }
                      unsigned int v57 = *(int *)((char *)v52 + v56 + *(int *)((char *)v52 + v56));
                      if (v57) {
                        goto LABEL_58;
                      }
                      goto LABEL_57;
                    }
                  }
                  v142 = v28;
                  operator delete(v28);
                  goto LABEL_18;
                }
              }
              else
              {
                unint64_t v24 = sub_2E1AA4((uint64_t)&v140);
                unsigned int v25 = v24;
                unint64_t v26 = v24 & 0xFFFFFFFF00000000;
                uint64_t v23 = __p;
                uint64_t v27 = v25;
                if (!__p) {
                  goto LABEL_15;
                }
              }
              v142 = v23;
              operator delete(v23);
              goto LABEL_15;
            }
          }
          else
          {
            unint64_t v21 = sub_2E40A4((uint64_t)&v140);
            unsigned int v20 = HIDWORD(v21);
            uint64_t v19 = __p;
            unsigned int v22 = v21;
            if (!__p) {
              goto LABEL_12;
            }
          }
          v142 = v19;
          operator delete(v19);
          goto LABEL_12;
        }
      }
      else
      {
        unint64_t v17 = sub_2E1AA4((uint64_t)&v140);
        unsigned int v138 = HIDWORD(v17);
        unsigned int v16 = __p;
        unsigned int v18 = v17;
        if (!__p) {
          goto LABEL_9;
        }
      }
      v142 = v16;
      operator delete(v16);
      goto LABEL_9;
    }
  }
  return v6;
}

void sub_6BE430(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  sub_592058((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_6BE444(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  sub_592058((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_6BE458(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  sub_592058((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_6BE46C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  sub_592058((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_6BE480(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  sub_592058((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_6BE494(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  sub_592058((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_6BE4A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  sub_592058((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_6BE4BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  sub_592058((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_6BE4D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6BE4F8(uint64_t a1, int **a2, int ***a3, unint64_t a4)
{
  uint64_t v7 = (int **)sub_5A7C34(a3, a4);
  int v8 = *a3;
  unint64_t v9 = a3[1];
  if (*a3 == v9)
  {
    unint64_t v10 = 0;
  }
  else
  {
    unint64_t v10 = 0;
    do
    {
      if ((sub_6DEDE8(a1 + 1160, v8) & 1) != 0 || *(unsigned char *)(a1 + 432) && sub_6DEE5C(a1 + 1160, v8)) {
        ++v10;
      }
      v8 += 5;
    }
    while (v8 != v9);
  }
  uint64_t v11 = *a2;
  uint64_t v12 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v13 = *v12;
  if (v13 < 0x2F
    || (uint64_t v14 = v12[23]) == 0
    || ((v15 = *((unsigned __int8 *)v11 + v14), v23 = v15 > 0x2A, uint64_t v16 = (1 << v15) & 0x50426810004, !v23)
      ? (BOOL v17 = v16 == 0)
      : (BOOL v17 = 1),
        v17))
  {
    unsigned int v18 = (unsigned __int16 *)((char *)*v7 - **v7);
    if (*v18 >= 0x2Fu)
    {
      uint64_t v19 = v18[23];
      if (v19)
      {
        unsigned int v20 = *((unsigned __int8 *)*v7 + v19);
        BOOL v23 = v20 > 0x2A;
        uint64_t v21 = (1 << v20) & 0x50426810004;
        BOOL v22 = v23 || v21 == 0;
        BOOL v23 = !v22 && v10 > 2;
        if (v23) {
          return 1;
        }
      }
    }
    if (v13 < 0x2F || (LODWORD(v14) = v12[23]) == 0)
    {
LABEL_31:
      char v25 = sub_2E79EC(*(void *)a1, (uint64_t)a2[4], (uint64_t)v7[4]);
      __p = 0;
      int v79 = 0;
      uint64_t v80 = 0;
      if (v25)
      {
        if (sub_6BF5D4(a1, (uint64_t)a2) || sub_6BF5D4(a1, (uint64_t)v7))
        {
LABEL_94:
          BOOL v39 = 0;
          unsigned int v67 = (int **)__p;
          if (!__p) {
            return v39;
          }
          goto LABEL_99;
        }
LABEL_78:
        if (!sub_69BFAC(a1, a2, v7, v25))
        {
          long long v50 = *((_OWORD *)a2 + 1);
          long long v72 = *(_OWORD *)a2;
          long long v73 = v50;
          uint64_t v51 = *(void *)(a1 + 24);
          int v52 = *((_DWORD *)a2 + 8);
          int v53 = *((unsigned __int16 *)a2 + 18);
          char v54 = *((unsigned char *)a2 + 38);
          char v55 = *((unsigned char *)a2 + 39);
          int v56 = v54 ? 0x40000000 : 1610612736;
          LODWORD(v71) = *((_DWORD *)a2 + 8);
          HIDWORD(v71) = v56 | v53;
          int v74 = v52;
          __int16 v75 = v53;
          char v76 = v54;
          char v77 = v55;
          int v57 = sub_657224(v51, (unsigned int *)&v71, 0);
          uint64_t v58 = *(void *)(a1 + 24);
          long long v59 = *((_OWORD *)v7 + 1);
          long long v72 = *(_OWORD *)v7;
          long long v73 = v59;
          int v60 = *((_DWORD *)v7 + 8);
          int v61 = *((unsigned __int16 *)v7 + 18);
          char v62 = *((unsigned char *)v7 + 38);
          char v63 = *((unsigned char *)v7 + 39);
          int v64 = v62 ? 0x40000000 : 1610612736;
          LODWORD(v71) = *((_DWORD *)v7 + 8);
          HIDWORD(v71) = v64 | v61;
          int v74 = v60;
          __int16 v75 = v61;
          char v76 = v62;
          char v77 = v63;
          int v65 = sub_657224(v58, (unsigned int *)&v71, 0);
          if (!*(unsigned char *)(a1 + 863) || v57 == v65 || !v57 || !v65)
          {
            double v66 = sub_6D82EC(a1 + 1160, a2, v7);
            if (!*(unsigned char *)(a1 + 1059) || v66 <= *(double *)(a1 + 184) || !sub_69C1F0(a2))
            {
              if (!*(unsigned char *)(a1 + 1058) || sub_699190((char **)a2)) {
                goto LABEL_94;
              }
              BOOL v39 = sub_654F1C(*v7, *((unsigned __int8 *)v7 + 38));
              unsigned int v67 = (int **)__p;
              if (!__p) {
                return v39;
              }
LABEL_99:
              int v79 = v67;
              operator delete(v67);
              return v39;
            }
          }
        }
LABEL_98:
        BOOL v39 = 1;
        unsigned int v67 = (int **)__p;
        if (!__p) {
          return v39;
        }
        goto LABEL_99;
      }
      if (*(unsigned char *)(a1 + 1154))
      {
        unint64_t v26 = (unsigned __int16 *)((char *)*a2 - **a2);
        if (*v26 >= 0x2Fu)
        {
          uint64_t v27 = v26[23];
          if (v27)
          {
            if (!*((unsigned char *)*a2 + v27))
            {
              uint64_t v28 = (unsigned __int16 *)((char *)*v7 - **v7);
              if (*v28 >= 0x2Fu)
              {
                uint64_t v29 = v28[23];
                if (v29)
                {
                  if (!*((unsigned char *)*v7 + v29))
                  {
                    unint64_t v70 = sub_2E68E8(*(void *)a1, (uint64_t)v7[4]);
                    if (v70 <= 0xFFFFFFFEFFFFFFFFLL)
                    {
                      if (v70)
                      {
                        unsigned int v71 = v7;
                        if (a3[1] != sub_69BF14(a3, (uint64_t)&v71)) {
                          goto LABEL_98;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      int v30 = sub_6D7A80(a1 + 1160, (char **)a2);
      int v31 = v30 - sub_6D7A80(a1 + 1160, (char **)v7);
      if (v31 >= 0) {
        unsigned int v32 = v31;
      }
      else {
        unsigned int v32 = -v31;
      }
      unsigned int v33 = *(unsigned __int8 *)(a1 + 1152);
      unint64_t v34 = (unint64_t)a2[4];
      double v35 = (int *)sub_2D5D58(*(void *)a1, v34 & 0xFFFFFFFFFFFFLL);
      double v36 = (unsigned __int16 *)((char *)v35 - *v35);
      unsigned int v37 = *v36;
      if ((v34 & 0xFF000000000000) != 0)
      {
        if (v37 < 0x29 || (unsigned int v38 = v36[20]) == 0)
        {
LABEL_53:
          int v40 = 0;
LABEL_54:
          unint64_t v41 = (unint64_t)v7[4];
          double v42 = (int *)sub_2D5D58(*(void *)a1, v41 & 0xFFFFFFFFFFFFLL);
          double v43 = (unsigned __int16 *)((char *)v42 - *v42);
          unsigned int v44 = *v43;
          if ((v41 & 0xFF000000000000) != 0)
          {
            if (v44 >= 0x29)
            {
              int v45 = v43[20];
              if (v45)
              {
LABEL_57:
                BOOL v46 = 0;
                int v45 = *(int *)((char *)v42 + v45 + *(unsigned int *)((char *)v42 + v45));
                if (v40 >= 1 && v45 >= 1)
                {
                  int v47 = v40 - v45;
                  if (v47 < 0) {
                    int v47 = -v47;
                  }
                  BOOL v46 = v47 >= *(unsigned __int8 *)(a1 + 1153);
                  int v45 = 1;
                  if (v32 < v33) {
                    goto LABEL_73;
                  }
LABEL_69:
                  if (!v40) {
                    BOOL v46 = 1;
                  }
                  if (v46 || !v45)
                  {
                    unint64_t v68 = sub_2E68E8(*(void *)a1, (uint64_t)v7[4]);
                    if (v68 <= 0xFFFFFFFEFFFFFFFFLL)
                    {
                      if (v68) {
                        goto LABEL_98;
                      }
                    }
                  }
LABEL_73:
                  sub_6B7BD0(a1, (long long *)a2, (char **)&__p, 0);
                  int v48 = (int **)__p;
                  BOOL v49 = v79;
                  unsigned int v71 = (int **)a1;
                  *(void *)&long long v72 = a2;
                  *((void *)&v72 + 1) = v7;
                  if (__p != v79)
                  {
                    while ((sub_6D5A74((uint64_t *)&v71, v48) & 1) == 0)
                    {
                      v48 += 5;
                      if (v48 == v49)
                      {
                        int v48 = v49;
                        break;
                      }
                    }
                    if (v48 != v79) {
                      goto LABEL_98;
                    }
                  }
                  goto LABEL_78;
                }
LABEL_68:
                if (v32 < v33) {
                  goto LABEL_73;
                }
                goto LABEL_69;
              }
LABEL_65:
              BOOL v46 = 0;
              if (v32 < v33) {
                goto LABEL_73;
              }
              goto LABEL_69;
            }
          }
          else if (v44 >= 0x27)
          {
            int v45 = v43[19];
            if (v45) {
              goto LABEL_57;
            }
            goto LABEL_65;
          }
          int v45 = 0;
          BOOL v46 = 0;
          goto LABEL_68;
        }
      }
      else
      {
        if (v37 < 0x27) {
          goto LABEL_53;
        }
        unsigned int v38 = v36[19];
        if (!v38) {
          goto LABEL_53;
        }
      }
      int v40 = *(int *)((char *)v35 + v38 + *(int *)((char *)v35 + v38));
      goto LABEL_54;
    }
LABEL_29:
    unsigned int v24 = *((unsigned __int8 *)v11 + v14) - 2;
    if (v24 < 0x29 && ((0x14109A04001uLL >> v24) & 1) != 0) {
      return 0;
    }
    goto LABEL_31;
  }
  if (v10 <= 2) {
    goto LABEL_29;
  }
  return 1;
}

void sub_6BEA70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6BEAB0(uint64_t a1, int **a2, int **a3, int ***a4, char a5, double a6)
{
  if (a5) {
    return 0;
  }
  v27[12] = v6;
  v27[13] = v7;
  double v26 = fabs(sub_69B314(a1, a2, a3, a6));
  if (v26 < *(double *)(a1 + 1128)) {
    return 0;
  }
  unsigned int v13 = *a2;
  uint64_t v14 = (unsigned __int16 *)((char *)*a2 - **a2);
  if (*v14 >= 0x2Fu && v14[23])
  {
    uint64_t result = 0;
    switch(*((unsigned char *)v13 + v14[23]))
    {
      case 6:
      case 0xC:
      case 0x2B:
        uint64_t v15 = v14[5];
        if (v15 && (*((unsigned char *)v13 + v15 + 2) & 0x20) != 0) {
          goto LABEL_11;
        }
        return 0;
      case 0x2C:
        return result;
      default:
        goto LABEL_11;
    }
  }
  else
  {
LABEL_11:
    uint64_t v16 = *a3;
    BOOL v17 = (unsigned __int16 *)((char *)*a3 - **a3);
    if (*v17 >= 0x2Fu && v17[23])
    {
      uint64_t result = 0;
      switch(*((unsigned char *)v16 + v17[23]))
      {
        case 6:
        case 0xC:
        case 0x2B:
          uint64_t v18 = v17[5];
          if (v18 && (*((unsigned char *)v16 + v18 + 2) & 0x20) != 0) {
            goto LABEL_16;
          }
          return 0;
        case 0x2C:
          return result;
        default:
          goto LABEL_16;
      }
    }
    else
    {
LABEL_16:
      int v25 = sub_2E35CC(a2);
      uint64_t v19 = (unsigned __int16 *)((char *)*a2 - **a2);
      if (*v19 >= 0x43u && (uint64_t v20 = v19[33]) != 0) {
        int v21 = *((unsigned __int8 *)*a2 + v20);
      }
      else {
        int v21 = 0;
      }
      int v24 = v21;
      BOOL v23 = *a4;
      BOOL v22 = a4[1];
      v27[0] = &v25;
      v27[1] = a1;
      v27[2] = &v24;
      v27[3] = a3;
      v27[4] = a2;
      v27[5] = &v26;
      if (v23 == v22) {
        return 0;
      }
      do
      {
        uint64_t result = sub_6D56F8((uint64_t)v27, v23);
        if (result) {
          break;
        }
        v23 += 5;
      }
      while (v23 != v22);
    }
  }
  return result;
}

uint64_t sub_6BEDA8(uint64_t a1, char **a2, void *a3, unint64_t a4, unint64_t a5)
{
  if (a5 == -1) {
    return 0;
  }
  unint64_t v9 = (char **)sub_5A7C34(a3, a5);
  unint64_t v10 = (char **)sub_5A7C34(a3, a4);
  uint64_t v11 = &(*a2)[-*(int *)*a2];
  if (*(unsigned __int16 *)v11 >= 0x2Fu)
  {
    uint64_t v12 = *((unsigned __int16 *)v11 + 23);
    if (v12)
    {
      unsigned int v13 = (*a2)[v12];
      BOOL v14 = v13 > 0x2A;
      uint64_t v15 = (1 << v13) & 0x50426810004;
      if (!v14 && v15 != 0)
      {
        BOOL v17 = &(*v9)[-*(int *)*v9];
        if (*(unsigned __int16 *)v17 >= 0x2Fu)
        {
          uint64_t v18 = *((unsigned __int16 *)v17 + 23);
          if (v18)
          {
            unsigned int v19 = (*v9)[v18] - 2;
            if (v19 < 0x29 && ((0x14109A04001uLL >> v19) & 1) != 0) {
              return 0;
            }
          }
        }
      }
    }
  }
  sub_68F4F8(*(void *)a1, *((unsigned int *)v10 + 8) | ((unint64_t)*((unsigned __int16 *)v10 + 18) << 32), &__p);
  uint64_t v20 = (unint64_t *)__p;
  int v21 = v38;
  v36[0] = a1;
  v36[1] = a2;
  int v36[2] = v10;
  if (__p != v38)
  {
    while (!sub_6D5C70((uint64_t)v36, v20))
    {
      if (++v20 == v21)
      {
        uint64_t v20 = v21;
        break;
      }
    }
    if (v20 != v38)
    {
LABEL_17:
      uint64_t v22 = 1;
      BOOL v23 = (unint64_t *)__p;
      if (!__p) {
        return v22;
      }
      goto LABEL_38;
    }
  }
  int v24 = &(*a2)[-*(int *)*a2];
  if (*(unsigned __int16 *)v24 >= 0x2Fu)
  {
    uint64_t v25 = *((unsigned __int16 *)v24 + 23);
    if (v25)
    {
      if (!(*a2)[v25])
      {
        double v26 = &(*v10)[-*(int *)*v10];
        if (*(unsigned __int16 *)v26 >= 0x2Fu)
        {
          uint64_t v27 = *((unsigned __int16 *)v26 + 23);
          if (v27)
          {
            unsigned int v28 = (*v10)[v27];
            BOOL v14 = v28 > 0x2A;
            uint64_t v29 = (1 << v28) & 0x50426810004;
            if (!v14 && v29 != 0)
            {
              int v31 = &(*v9)[-*(int *)*v9];
              if (*(unsigned __int16 *)v31 >= 0x2Fu)
              {
                uint64_t v32 = *((unsigned __int16 *)v31 + 23);
                if (v32)
                {
                  int v33 = (*v9)[v32];
                  if (v33 - 2) < 0x29 && ((0x14109A04001uLL >> (v33 - 2))) {
                    goto LABEL_37;
                  }
                  if (!(*v9)[v32])
                  {
LABEL_35:
                    if (sub_6D7A80(a1 + 1160, v10) >= *(_DWORD *)(a1 + 448)
                      || sub_6D7A80(a1 + 1160, a2) <= *(_DWORD *)(a1 + 448))
                    {
                      goto LABEL_17;
                    }
                    goto LABEL_37;
                  }
                }
              }
              unsigned int v34 = sub_6D7A80(a1 + 1160, v10);
              if (v34 >= sub_6D7A80(a1 + 1160, v9)) {
                goto LABEL_35;
              }
            }
          }
        }
      }
    }
  }
LABEL_37:
  uint64_t v22 = 0;
  BOOL v23 = (unint64_t *)__p;
  if (__p)
  {
LABEL_38:
    unsigned int v38 = v23;
    operator delete(v23);
  }
  return v22;
}

void sub_6BF03C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_6BF05C(uint64_t a1, long long *a2, int a3, uint64_t a4)
{
  if ((a3 - 3) < 0xFFFFFFFE) {
    return 0;
  }
  int v24 = 0;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  sub_6B7BD0(a1, a2, &v24, 0);
  unint64_t v9 = v24;
  unint64_t v10 = 0xCCCCCCCCCCCCCCCDLL * ((v25 - v24) >> 3);
  double v11 = 0.0;
  if (v10 < 2
    || (uint64_t v12 = (unsigned __int16 *)(*(void *)a2 - **(int **)a2), *v12 >= 0x2Fu)
    && (uint64_t v13 = v12[23]) != 0
    && ((v14 = *(unsigned __int8 *)(*(void *)a2 + v13), v15 = v14 > 0x2A, uint64_t v16 = (1 << v14) & 0x50426810004, !v15)
      ? (BOOL v17 = v16 == 0)
      : (BOOL v17 = 1),
        !v17))
  {
    BOOL v4 = 0;
    if (!v24) {
      return v4;
    }
LABEL_11:
    uint64_t v25 = v9;
    operator delete(v9);
    return v4;
  }
  unsigned int v19 = 0;
  for (unint64_t i = 0; i != v10; ++i)
  {
    if (sub_6B91C0(a1, a2, &v24, i, 0, a4, 0) == a3)
    {
      int v21 = (int **)sub_66F838(&v24, i);
      if (sub_6DEDE8(a1 + 1160, v21))
      {
        uint64_t v22 = (int **)sub_66F838(&v24, i);
        double v23 = fabs(sub_6D82EC(a1 + 1160, (int **)a2, v22));
        if (v23 >= v11) {
          double v11 = v23;
        }
        ++v19;
      }
    }
  }
  BOOL v4 = v19 > 1;
  unint64_t v9 = v24;
  if (v24) {
    goto LABEL_11;
  }
  return v4;
}

void sub_6BF204(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6BF228(uint64_t a1, void *a2, unint64_t a3, int **a4, uint64_t a5, int a6)
{
  *(_DWORD *)(a5 + 24) = 0;
  *(void *)(a5 + 8) = *(void *)a5;
  *(void *)(a5 + 48) = *(void *)(a5 + 40);
  *(_DWORD *)(a5 + 64) = 0;
  *(void *)&long long v11 = -1;
  *((void *)&v11 + 1) = -1;
  *(_OWORD *)(a5 + 72) = v11;
  *(_OWORD *)(a5 + 88) = v11;
  *(_OWORD *)(a5 + 104) = v11;
  *(void *)(a5 + 120) = -1;
  *(_DWORD *)(a5 + 128) = 0;
  *(void *)(a5 + 136) = -1;
  *(_DWORD *)(a5 + 144) = 0;
  *(_OWORD *)(a5 + 152) = xmmword_20E2060;
  *(_WORD *)(a5 + 168) = 0;
  *(unsigned char *)(a5 + 170) = 0;
  *(void *)(a5 + 176) = 0;
  *(unsigned char *)(a5 + 188) = 0;
  *(unsigned char *)(a5 + 190) = 0;
  uint64_t v12 = (uint64_t *)(a4 + 10);
  unint64_t v13 = (unint64_t)a4[13];
  uint64_t v14 = sub_5A7C34(a4 + 10, v13);
  unint64_t v15 = sub_470ADC(a2);
  if (a3 <= v15) {
    unint64_t v16 = v15;
  }
  else {
    unint64_t v16 = a3;
  }
  if (v15 > a3)
  {
    uint64_t v17 = a3;
    do
    {
      uint64_t v18 = (unsigned int *)sub_470B40(a2, v17);
      unint64_t v29 = (((unint64_t)(v18[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v18[1] << 32) | *v18) ^ 0x1000000000000;
      sub_2D5B74((char **)a5, &v29);
      uint64_t v19 = *(void *)(v14 + 32);
      if ((v19 & 0xFFFFFFFFFFFFLL) == (v29 & 0xFFFFFFFFFFFFLL)
        && ((v19 & 0xFF000000000000) == 0) != (HIWORD(v29) & 1))
      {
        break;
      }
      ++v17;
    }
    while (v17 != v16);
    int v20 = sub_2E79EC(*(void *)a1, (uint64_t)a4[4], v19);
    if (v20) {
      goto LABEL_10;
    }
LABEL_13:
    int v21 = a6;
    goto LABEL_15;
  }
  int v20 = sub_2E79EC(*(void *)a1, (uint64_t)a4[4], *(void *)(v14 + 32));
  if (!v20) {
    goto LABEL_13;
  }
LABEL_10:
  int v21 = a6;
  LOBYTE(v20) = sub_6BF5D4(a1, (uint64_t)a4) || sub_6BF5D4(a1, v14);
LABEL_15:
  *(unsigned char *)(a5 + 189) = v20;
  uint64_t result = sub_6B91C0(a1, a4, v12, v13, 1, 1, v21);
  *(_DWORD *)(a5 + 24) = result;
  if (result)
  {
    uint64_t result = sub_6BF81C(a1, a2, a3, (int **)v14, a5);
    if (result)
    {
      *(_DWORD *)(a5 + 24) = 0;
    }
    else if (*(unsigned char *)(a1 + 1058) && *(_DWORD *)(a5 + 24) == 3)
    {
      double v23 = *a4;
      int v24 = (unsigned __int16 *)((char *)*a4 - **a4);
      if (*v24 >= 0x2Fu && v24[23])
      {
        switch(*((unsigned char *)v23 + v24[23]))
        {
          case 6:
          case 0xC:
          case 0x2B:
            uint64_t v25 = v24[5];
            if (v25 && (*((unsigned char *)v23 + v25 + 2) & 0x20) != 0) {
              goto LABEL_25;
            }
            break;
          case 0x2C:
            break;
          default:
            goto LABEL_25;
        }
      }
      else
      {
LABEL_25:
        uint64_t v26 = sub_5A7C34(v12, v13);
        uint64_t result = sub_654F1C(*(int **)v26, *(unsigned __int8 *)(v26 + 38));
        if (result) {
          *(unsigned char *)(a5 + 190) = 1;
        }
      }
    }
  }
  if (*(unsigned char *)(a1 + 747))
  {
    uint64_t result = sub_2E4CD4(*(void *)a1, (uint64_t)a4[4]);
    if (result)
    {
      uint64_t result = sub_2E4CD4(*(void *)a1, *(void *)(v14 + 32));
      if (result)
      {
        if (*(_DWORD *)(a5 + 24))
        {
          *(unsigned char *)(a5 + 170) = 1;
          *(_DWORD *)(a5 + 24) = 0;
        }
      }
    }
  }
  if (v21)
  {
    unsigned int v27 = *(_DWORD *)(a5 + 24);
    if (v27 <= 0x15 && ((1 << v27) & 0x300001) != 0) {
      unsigned int v27 = 3;
    }
    *(_DWORD *)(a5 + 24) = v27;
  }
  return result;
}

BOOL sub_6BF5D4(uint64_t a1, uint64_t a2)
{
  if (!*(unsigned char *)(a1 + 1056)) {
    return 0;
  }
  sub_58E730(*(void *)a1, *(void *)(a2 + 32), 1u, &__p);
  if (__p == v11)
  {
    long long v19 = 0u;
    *(_OWORD *)uint64_t v17 = 0u;
    memset(v18, 0, sizeof(v18));
    long long v15 = 0u;
    *(_OWORD *)unint64_t v16 = 0u;
    long long v13 = 0u;
    *(_OWORD *)uint64_t v14 = 0u;
    *(_OWORD *)uint64_t v12 = 0u;
    *((void *)&v15 + 1) = sub_1133328();
    long long v19 = 0uLL;
    v18[3] = 0;
    *(_OWORD *)unint64_t v16 = 0u;
    *(_OWORD *)uint64_t v17 = 0u;
    memset(v18, 0, 19);
    v3 = __p;
    if (!__p) {
      goto LABEL_8;
    }
  }
  else
  {
    v2 = __p;
    while (*v2)
    {
      v2 += 144;
      if (v2 == v11)
      {
        v2 = __p;
        break;
      }
    }
    sub_6C8AE4((uint64_t)v12, (uint64_t)v2);
    v3 = __p;
    if (!__p)
    {
LABEL_8:
      BOOL v4 = LOBYTE(v18[2]) != 0;
      if ((SHIBYTE(v19) & 0x80000000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_20;
    }
  }
  uint64_t v7 = (uint64_t)v11;
  int v8 = v3;
  if (v11 != v3)
  {
    do
      uint64_t v7 = sub_2DF404(v7 - 144);
    while ((unsigned char *)v7 != v3);
    int v8 = __p;
  }
  long long v11 = v3;
  operator delete(v8);
  BOOL v4 = LOBYTE(v18[2]) != 0;
  if ((SHIBYTE(v19) & 0x80000000) == 0)
  {
LABEL_9:
    if ((SHIBYTE(v18[1]) & 0x80000000) == 0) {
      goto LABEL_10;
    }
LABEL_21:
    operator delete(v17[1]);
    uint64_t v5 = (void **)v16[0];
    if (!v16[0])
    {
LABEL_11:
      if (SBYTE7(v15) < 0) {
        goto LABEL_32;
      }
      goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_20:
  operator delete(v18[3]);
  if (SHIBYTE(v18[1]) < 0) {
    goto LABEL_21;
  }
LABEL_10:
  uint64_t v5 = (void **)v16[0];
  if (!v16[0]) {
    goto LABEL_11;
  }
LABEL_22:
  unint64_t v9 = (void **)v16[1];
  if (v16[1] == v5)
  {
    v16[1] = v5;
    operator delete(v5);
    if ((SBYTE7(v15) & 0x80000000) == 0) {
      goto LABEL_12;
    }
LABEL_32:
    operator delete(v14[0]);
    if ((SHIBYTE(v13) & 0x80000000) == 0) {
      return v4;
    }
    goto LABEL_33;
  }
  do
  {
    if (*((char *)v9 - 9) < 0)
    {
      operator delete(*(v9 - 4));
      if ((*((char *)v9 - 33) & 0x80000000) == 0) {
        goto LABEL_25;
      }
    }
    else if ((*((char *)v9 - 33) & 0x80000000) == 0)
    {
      goto LABEL_25;
    }
    operator delete(*(v9 - 7));
LABEL_25:
    v9 -= 7;
  }
  while (v9 != v5);
  v16[1] = v5;
  operator delete(v16[0]);
  if (SBYTE7(v15) < 0) {
    goto LABEL_32;
  }
LABEL_12:
  if ((SHIBYTE(v13) & 0x80000000) == 0) {
    return v4;
  }
LABEL_33:
  operator delete(v12[1]);
  return v4;
}

void sub_6BF7F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_53BD98((void **)va);
  _Unwind_Resume(a1);
}

void sub_6BF808(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_53BD98((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_6BF81C(uint64_t a1, void *a2, unint64_t a3, int **a4, uint64_t a5)
{
  if (!*(unsigned char *)(a1 + 862)) {
    return 0;
  }
  uint64_t v63 = a1 + 1160;
  if (!sub_6DEDE8(a1 + 1160, a4)) {
    return 0;
  }
  uint64_t v64 = (uint64_t)a4;
  unint64_t v9 = (unsigned __int16 *)((char *)*a4 - **a4);
  if (*v9 >= 0x2Fu)
  {
    uint64_t v10 = v9[23];
    if (v10)
    {
      uint64_t v11 = 0;
      int v12 = *((unsigned __int8 *)*a4 + v10);
      if (v12 == 14 || v12 == 44) {
        return v11;
      }
    }
  }
  unsigned int v13 = *(_DWORD *)(a5 + 24) - 3;
  if (v13 < 0x16 && ((0x380001u >> v13) & 1) != 0) {
    return 0;
  }
  uint64_t v14 = (unsigned int *)sub_470B40(a2, a3);
  uint64_t v15 = *(void *)a1;
  uint64_t v16 = *v14;
  unint64_t v17 = ((unint64_t)(v14[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v14[1] << 32) | v16;
  char v18 = BYTE6(v17) ^ 1;
  unint64_t v19 = (v17 ^ 0x1000000000000) >> 32;
  unint64_t v20 = v17 & 0xFFFFFFFFFFFFLL;
  uint64_t v21 = sub_2D5D58(*(void *)a1, v17 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v15 + 7772))
  {
    uint64_t v22 = sub_2DB8E0(v15 + 3896, v16, 0);
    double v23 = &v22[-*(int *)v22];
    if (*(unsigned __int16 *)v23 < 5u)
    {
      uint64_t v24 = 0;
    }
    else
    {
      uint64_t v24 = *((unsigned __int16 *)v23 + 2);
      if (v24) {
        v24 += (uint64_t)&v22[*(unsigned int *)&v22[v24]];
      }
    }
    uint64_t v26 = v24 + 4 * (unsigned __int16)v19 + 4 + *(unsigned int *)(v24 + 4 * (unsigned __int16)v19 + 4);
  }
  else
  {
    uint64_t v26 = 0;
  }
  v76[0] = v21;
  v76[1] = v26;
  v76[2] = sub_2E5C38(v15, v20, 1);
  v76[3] = v27;
  int v77 = v16;
  __int16 v78 = v19;
  char v79 = v18;
  __p = 0;
  int v74 = 0;
  uint64_t v75 = 0;
  unint64_t v28 = sub_470ADC(a2);
  if (a3 <= v28) {
    unint64_t v29 = v28;
  }
  else {
    unint64_t v29 = a3;
  }
  unint64_t v62 = v29;
  if (v28 > a3)
  {
    do
    {
      int v30 = (unsigned int *)sub_470B40(a2, a3);
      uint64_t v31 = *(void *)(v64 + 32);
      uint64_t v33 = *v30;
      unsigned int v32 = v30[1];
      unint64_t v34 = ((unint64_t)(v32 & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v32 << 32) | v33;
      unint64_t v35 = v34 ^ 0x1000000000000;
      unint64_t v36 = (v34 ^ 0x1000000000000) >> 48;
      if (__PAIR64__(WORD2(v31), v31) == __PAIR64__((unsigned __int16)v32, v33)
        && ((v31 & 0xFF000000000000) == 0) != (v36 != 0))
      {
        break;
      }
      uint64_t v37 = *(void *)a1;
      unint64_t v38 = v34 & 0xFFFFFFFFFFFFLL;
      BOOL v39 = (int *)sub_2D5D58(*(void *)a1, v34 & 0xFFFFFFFFFFFFLL);
      unint64_t v40 = HIDWORD(v35);
      if (*(unsigned char *)(v37 + 7772))
      {
        unint64_t v41 = sub_2DB8E0(v37 + 3896, v33, 0);
        double v42 = &v41[-*(int *)v41];
        if (*(unsigned __int16 *)v42 < 5u)
        {
          uint64_t v43 = 0;
        }
        else
        {
          uint64_t v43 = *((unsigned __int16 *)v42 + 2);
          if (v43) {
            v43 += (uint64_t)&v41[*(unsigned int *)&v41[v43]];
          }
        }
        uint64_t v44 = v43 + 4 * (unsigned __int16)v40 + 4 + *(unsigned int *)(v43 + 4 * (unsigned __int16)v40 + 4);
      }
      else
      {
        uint64_t v44 = 0;
      }
      uint64_t v45 = sub_2E5C38(v37, v38, 1);
      double v66 = v39;
      uint64_t v67 = v44;
      uint64_t v68 = v45;
      uint64_t v69 = v46;
      int v70 = v33;
      __int16 v71 = v40;
      char v72 = v36;
      if (!sub_6DEDE8(v63, &v66)) {
        goto LABEL_47;
      }
      int v47 = (unsigned __int16 *)((char *)v66 - *v66);
      if (*v47 >= 0x2Fu)
      {
        uint64_t v48 = v47[23];
        if (v48)
        {
          int v49 = *((unsigned __int8 *)v66 + v48);
          if (v49 == 14 || v49 == 44) {
            goto LABEL_47;
          }
        }
      }
      uint64_t v50 = *(void *)a1;
      int v52 = v30;
      uint64_t v51 = *v30;
      unint64_t v53 = ((unint64_t)(v52[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v52[1] << 32) | v51;
      char v54 = (int *)sub_2D5D58(*(void *)a1, v53 & 0xFFFFFFFFFFFFLL);
      if (*(unsigned char *)(v50 + 7772))
      {
        char v55 = sub_2DB8E0(v50 + 3896, v51, 0);
        int v56 = &v55[-*(int *)v55];
        if (*(unsigned __int16 *)v56 < 5u)
        {
          uint64_t v57 = 0;
        }
        else
        {
          uint64_t v57 = *((unsigned __int16 *)v56 + 2);
          if (v57) {
            v57 += (uint64_t)&v55[*(unsigned int *)&v55[v57]];
          }
        }
        uint64_t v58 = v57
            + 4 * (unsigned __int16)((v53 ^ 0x1000000000000) >> 32)
            + 4
            + *(unsigned int *)(v57 + 4 * (unsigned __int16)((v53 ^ 0x1000000000000) >> 32) + 4);
      }
      else
      {
        uint64_t v58 = 0;
      }
      uint64_t v59 = sub_2E5C38(v50, v53 & 0xFFFFFFFFFFFFLL, 1);
      double v66 = v54;
      uint64_t v67 = v58;
      uint64_t v68 = v59;
      uint64_t v69 = v60;
      int v70 = v51;
      __int16 v71 = (v53 ^ 0x1000000000000) >> 32;
      char v72 = (v53 ^ 0x1000000000000) >> 48;
      sub_2E44A4(v50, (uint64_t)&v66, &__p);
      if (sub_6C6C28(a1, (uint64_t)v76, (int ***)&__p, v64) != 1)
      {
LABEL_47:
        uint64_t v11 = 0;
        int v61 = __p;
        if (!__p) {
          return v11;
        }
        goto LABEL_48;
      }
      ++a3;
    }
    while (v62 != a3);
  }
  uint64_t v11 = 1;
  int v61 = __p;
  if (__p)
  {
LABEL_48:
    int v74 = v61;
    operator delete(v61);
  }
  return v11;
}

void sub_6BFC6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_6BFC98(double *a1, int **a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(a6 + 8) = *(void *)a6;
  *(_DWORD *)(a6 + 24) = 0;
  uint64_t v7 = a3[1] - *a3;
  if (!v7)
  {
LABEL_39:
    sub_693DCC((uint64_t *)a6, (unsigned int (*)(unint64_t, unint64_t))sub_693F28, (uint64_t (*)(unint64_t, unint64_t))sub_693F48);
    return;
  }
  unint64_t v13 = 0;
  uint64_t v14 = v7 / 40;
  while (1)
  {
    uint64_t v15 = (int **)sub_5A7C34(a3, v13);
    uint64_t v16 = *a2;
    unint64_t v17 = (unsigned __int16 *)((char *)*a2 - **a2);
    unsigned int v18 = *v17;
    if (*((unsigned char *)a2 + 38))
    {
      if (v18 < 0xB) {
        goto LABEL_32;
      }
      unsigned int v19 = v17[5];
      if (!v19 || (*(int *)((char *)v16 + v19) & 2) == 0) {
        goto LABEL_32;
      }
    }
    else
    {
      if (v18 < 0xB) {
        goto LABEL_32;
      }
      unsigned int v20 = v17[5];
      if (!v20 || (*(int *)((char *)v16 + v20) & 1) == 0) {
        goto LABEL_32;
      }
    }
    uint64_t v21 = (char *)*v15;
    uint64_t v22 = (unsigned __int16 *)((char *)*v15 - **v15);
    unsigned int v23 = *v22;
    if (*((unsigned char *)v15 + 38)) {
      break;
    }
    if (v23 >= 0xB)
    {
      uint64_t v26 = v22[5];
      if (v26)
      {
        if ((v21[v26] & 1) == 0 && (*(_DWORD *)&v21[v26] & 2) == 0 && a4 != v13) {
          goto LABEL_3;
        }
        goto LABEL_32;
      }
    }
LABEL_31:
    if (a4 == v13) {
      goto LABEL_32;
    }
LABEL_3:
    if (v14 == ++v13) {
      goto LABEL_39;
    }
  }
  if (v23 < 0xB) {
    goto LABEL_31;
  }
  uint64_t v24 = v22[5];
  if (!v24) {
    goto LABEL_31;
  }
  if ((v21[v24] & 2) == 0 && (*(_DWORD *)&v21[v24] & 1) == 0 && a4 != v13) {
    goto LABEL_3;
  }
LABEL_32:
  int v28 = sub_6B91C0((uint64_t)a1, a2, a3, v13, 1, 1, 0);
  if (v28 == 4) {
    goto LABEL_3;
  }
  int v29 = v28;
  if (*(_DWORD *)(a5 + 32) && *(void *)a5)
  {
    if (*(void *)(a5 + 8)) {
      int v29 = sub_6B91C0((uint64_t)a1, (int **)a5, a3, v13, 1, 1, 0);
    }
  }
  sub_6BFEE8(a1, v29, (uint64_t)&v31);
  if (v32)
  {
    BOOL v30 = a4 == v13;
    sub_699730(a6, &v31, (char *)&v30);
    goto LABEL_3;
  }
  *(void *)(a6 + 8) = *(void *)a6;
  *(_DWORD *)(a6 + 24) = 0;
}

double sub_6BFEE8@<D0>(double *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  switch(a2)
  {
    case 0:
    case 3:
    case 5:
    case 12:
    case 89:
    case 90:
      double result = a1[97];
      *(_WORD *)a3 = (int)result;
      *(unsigned char *)(a3 + 2) = 1;
      break;
    case 1:
      double result = a1[100];
      *(_WORD *)a3 = (int)result;
      *(unsigned char *)(a3 + 2) = 1;
      break;
    case 2:
      double result = a1[104];
      *(_WORD *)a3 = (int)result;
      *(unsigned char *)(a3 + 2) = 1;
      break;
    case 20:
      double result = a1[98];
      *(_WORD *)a3 = (int)result;
      *(unsigned char *)(a3 + 2) = 1;
      break;
    case 21:
      double result = a1[102];
      *(_WORD *)a3 = (int)result;
      *(unsigned char *)(a3 + 2) = 1;
      break;
    case 60:
      double result = a1[101];
      *(_WORD *)a3 = (int)result;
      *(unsigned char *)(a3 + 2) = 1;
      break;
    case 61:
      double result = a1[105];
      *(_WORD *)a3 = (int)result;
      *(unsigned char *)(a3 + 2) = 1;
      break;
    case 62:
      double result = a1[99];
      *(_WORD *)a3 = (int)result;
      *(unsigned char *)(a3 + 2) = 1;
      break;
    case 63:
      double result = a1[103];
      *(_WORD *)a3 = (int)result;
      *(unsigned char *)(a3 + 2) = 1;
      break;
    default:
      *(_DWORD *)a3 = 0;
      break;
  }
  return result;
}

uint64_t sub_6C0160(uint64_t a1, int a2, char a3)
{
  if (a3) {
    return 0;
  }
  uint64_t result = 0;
  switch(a2)
  {
    case 0:
    case 4:
    case 6:
    case 7:
    case 11:
    case 20:
    case 21:
    case 35:
    case 65:
    case 66:
      return result;
    default:
      uint64_t result = 1;
      break;
  }
  return result;
}

uint64_t sub_6C02B4(uint64_t *a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 24);
  if (!v2) {
    return -1;
  }
  v3 = *(uint64_t **)a2;
  BOOL v39 = *(uint64_t **)(a2 + 8);
  uint64_t v4 = (uint64_t)v39 - *(void *)a2;
  if ((unint64_t)v4 < 0x18) {
    return 0;
  }
  uint64_t v6 = v4 >> 3;
  switch(v2)
  {
    case 12:
      return v6 - 2;
    case 4:
      return -1;
    case 3:
      return v6 - 2;
  }
  __p = 0;
  int v47 = 0;
  uint64_t v48 = 0;
  if ((unint64_t)v4 >= 0x3333333333333331) {
    sub_2E00();
  }
  int v8 = (int **)operator new(40 * v6);
  unint64_t v9 = v8;
  __p = v8;
  int v47 = (char *)v8;
  uint64_t v48 = (char *)&v8[5 * v6];
  if (v3 != v39)
  {
    do
    {
      uint64_t v10 = *a1;
      uint64_t v11 = *v3;
      unint64_t v12 = *v3 & 0xFFFFFFFFFFFFLL;
      uint64_t v13 = sub_2D5D58(*a1, v12);
      if (*(unsigned char *)(v10 + 7772))
      {
        uint64_t v14 = sub_2DB8E0(v10 + 3896, v11, 0);
        uint64_t v15 = &v14[-*(int *)v14];
        if (*(unsigned __int16 *)v15 < 5u)
        {
          uint64_t v16 = 0;
        }
        else
        {
          uint64_t v16 = *((unsigned __int16 *)v15 + 2);
          if (v16) {
            v16 += (uint64_t)&v14[*(unsigned int *)&v14[v16]];
          }
        }
        uint64_t v41 = v16 + 4 * WORD2(v11) + 4 + *(unsigned int *)(v16 + 4 * WORD2(v11) + 4);
      }
      else
      {
        uint64_t v41 = 0;
      }
      uint64_t v17 = sub_2E5C38(v10, v12, 1);
      uint64_t v19 = v17;
      uint64_t v20 = v18;
      BOOL v21 = (v11 & 0xFF000000000000) != 0;
      uint64_t v22 = v47;
      if (v47 < v48)
      {
        *(void *)int v47 = v13;
        *((void *)v22 + 1) = v41;
        *((void *)v22 + 2) = v17;
        *((void *)v22 + 3) = v18;
        *((_DWORD *)v22 + 8) = v11;
        *((_WORD *)v22 + 18) = WORD2(v11);
        unint64_t v9 = (int **)(v22 + 40);
        v22[38] = v21;
      }
      else
      {
        unsigned int v23 = (char *)__p;
        unint64_t v24 = 0xCCCCCCCCCCCCCCCDLL * ((v47 - (unsigned char *)__p) >> 3);
        unint64_t v25 = v24 + 1;
        if (v24 + 1 > 0x666666666666666) {
          sub_2E00();
        }
        if (0x999999999999999ALL * ((v48 - (unsigned char *)__p) >> 3) > v25) {
          unint64_t v25 = 0x999999999999999ALL * ((v48 - (unsigned char *)__p) >> 3);
        }
        if (0xCCCCCCCCCCCCCCCDLL * ((v48 - (unsigned char *)__p) >> 3) >= 0x333333333333333) {
          unint64_t v26 = 0x666666666666666;
        }
        else {
          unint64_t v26 = v25;
        }
        if (v26)
        {
          if (v26 > 0x666666666666666) {
            sub_188D718();
          }
          uint64_t v27 = (char *)operator new(40 * v26);
        }
        else
        {
          uint64_t v27 = 0;
        }
        int v28 = &v27[8 * ((v47 - (unsigned char *)__p) >> 3)];
        *(void *)int v28 = v13;
        *((void *)v28 + 1) = v41;
        *((void *)v28 + 2) = v19;
        *((void *)v28 + 3) = v20;
        *((_DWORD *)v28 + 8) = v11;
        *((_WORD *)v28 + 18) = WORD2(v11);
        v28[38] = v21;
        int v29 = &v27[40 * v24];
        if (v22 != v23)
        {
          do
          {
            long long v30 = *(_OWORD *)(v22 - 40);
            long long v31 = *(_OWORD *)(v22 - 24);
            *((void *)v29 - 1) = *((void *)v22 - 1);
            *(_OWORD *)(v29 - 24) = v31;
            *(_OWORD *)(v29 - 40) = v30;
            v29 -= 40;
            v22 -= 40;
          }
          while (v22 != v23);
          uint64_t v22 = v23;
        }
        unint64_t v9 = (int **)(v28 + 40);
        __p = v29;
        uint64_t v48 = &v27[40 * v26];
        if (v22) {
          operator delete(v22);
        }
      }
      int v47 = (char *)v9;
      ++v3;
    }
    while (v3 != v39);
    int v8 = (int **)__p;
  }
  uint64_t v43 = 0;
  uint64_t v44 = 0;
  uint64_t v45 = 0;
  v42[0] = (uint64_t)&v43;
  v42[1] = (uint64_t)a1;
  sub_6CC3CC(v8, v9, v42);
  if (v43 != v44)
  {
    char v32 = v43 + 1;
    uint64_t v33 = v43;
    if (v43 + 1 != v44)
    {
      double v34 = *v43;
      uint64_t v33 = v43;
      unint64_t v35 = v43 + 1;
      do
      {
        double v36 = *v35++;
        double v37 = v36;
        if (v34 < v36)
        {
          double v34 = v37;
          uint64_t v33 = v32;
        }
        char v32 = v35;
      }
      while (v35 != v44);
    }
    uint64_t v38 = (char *)v33 - (char *)v43;
    if (!v43) {
      goto LABEL_47;
    }
    goto LABEL_46;
  }
  uint64_t v38 = 0;
  if (v43)
  {
LABEL_46:
    uint64_t v44 = v43;
    operator delete(v43);
  }
LABEL_47:
  uint64_t v5 = v38 >> 3;
  if (__p)
  {
    int v47 = (char *)__p;
    operator delete(__p);
  }
  return v5;
}

void sub_6C064C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, uint64_t a17, void *a18, uint64_t a19)
{
  if (__p)
  {
    operator delete(__p);
    uint64_t v20 = a18;
    if (!a18) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    uint64_t v20 = a18;
    if (!a18) {
      goto LABEL_3;
    }
  }
  operator delete(v20);
  _Unwind_Resume(exception_object);
}

uint64_t sub_6C06B8(uint64_t a1, int **a2, uint64_t *a3, uint64_t a4)
{
  if (!*(unsigned char *)(a1 + 694)) {
    return 0;
  }
  uint64_t v8 = sub_6DE7E0(a1 + 1160, a2, a3, -1);
  if (v8 != -1 && v8 == a4) {
    return 0;
  }
  uint64_t result = sub_2E79EC(*(void *)a1, (uint64_t)a2[4], *(void *)(*a3 + 40 * a4 + 32));
  if (!result) {
    return result;
  }
  uint64_t v10 = (unsigned __int16 *)((char *)*a2 - **a2);
  if (*v10 < 0x2Fu) {
    return 0;
  }
  uint64_t v11 = v10[23];
  if (!v11) {
    return 0;
  }
  unsigned int v12 = *((unsigned __int8 *)*a2 + v11);
  BOOL v13 = v12 > 0x2B;
  uint64_t v14 = (1 << v12) & 0x80000001040;
  if (v13 || v14 == 0) {
    return 0;
  }
  uint64_t v16 = (void *)*a3;
  uint64_t v17 = (void *)a3[1];
  if ((void *)*a3 != v17)
  {
    uint64_t result = 1;
    while (1)
    {
      uint64_t v18 = (unsigned __int16 *)(*v16 - *(int *)*v16);
      if (*v18 < 0x2Fu) {
        break;
      }
      uint64_t v19 = v18[23];
      if (!v19) {
        break;
      }
      unsigned int v20 = *(unsigned __int8 *)(*v16 + v19);
      BOOL v13 = v20 > 0x2B;
      uint64_t v21 = (1 << v20) & 0x80000001040;
      if (v13 || v21 == 0) {
        break;
      }
      v16 += 5;
      if (v16 == v17) {
        return result;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_6C0810(uint64_t a1, int **a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if ((unint64_t)sub_69B8C0(a1, a2, (int ***)a3) > 1) {
    return 1;
  }
  if (!*(unsigned char *)(a1 + 1097) || a4 != -1 && a4 != a5) {
    return 0;
  }
  uint64_t v12 = sub_5A7C34((void *)a3, a5);
  long long v13 = *(_OWORD *)v12;
  long long v14 = *(_OWORD *)(v12 + 16);
  unint64_t v48 = *(void *)(v12 + 32);
  v47[0] = v13;
  v47[1] = v14;
  uint64_t v15 = *a2;
  uint64_t v16 = (unsigned __int16 *)((char *)*a2 - **a2);
  if (*v16 < 0x2Fu || !v16[23])
  {
LABEL_13:
    uint64_t v44 = 0;
    uint64_t v45 = 0;
    uint64_t v46 = 0;
    uint64_t v18 = *(int ***)a3;
    int64_t v19 = *(void *)(a3 + 8) - *(void *)a3;
    if (v19)
    {
      if (0xCCCCCCCCCCCCCCCDLL * (v19 >> 3) >= 0x666666666666667) {
        sub_2E00();
      }
      unsigned int v20 = (int **)operator new(v19);
      uint64_t v21 = &v20[v19 >> 3];
      uint64_t v44 = v20;
      uint64_t v46 = v21;
      memcpy(v20, v18, v19);
      uint64_t v45 = v21;
    }
    else
    {
      uint64_t v21 = 0;
      unsigned int v20 = 0;
    }
    uint64_t v22 = sub_6D58EC(v20, v21, a1);
    unsigned int v23 = v44;
    if (v45 != v22) {
      uint64_t v45 = v22;
    }
    if (0xCCCCCCCCCCCCCCCDLL * (v22 - v44) < 2 || v44 == v22) {
      goto LABEL_37;
    }
    unint64_t v24 = v44;
    unint64_t v25 = v44;
    while (__PAIR64__(*((unsigned __int16 *)v25 + 18), *((_DWORD *)v25 + 8)) != __PAIR64__(WORD2(v48), v48)
         || (HIWORD(v48) & 1) == (*((unsigned char *)v25 + 38) == 0))
    {
      v25 += 5;
      v24 += 5;
      if (v25 == v22)
      {
        unint64_t v24 = v22;
        break;
      }
    }
    if (v24 == v22)
    {
LABEL_37:
      uint64_t v10 = 0;
      if (!v44) {
        return v10;
      }
      goto LABEL_60;
    }
    unint64_t v26 = (unint64_t)v44[4];
    if (v48 == v26 && WORD2(v48) == WORD2(v26) && (HIWORD(v26) & 1) != (BYTE6(v48) == 0)) {
      unsigned int v23 = (_OWORD *)sub_66F838(&v44, 1uLL);
    }
    long long v27 = *v23;
    long long v28 = v23[1];
    uint64_t v43 = *((void *)v23 + 4);
    v42[0] = v27;
    v42[1] = v28;
    int v29 = *a2;
    long long v30 = (unsigned __int16 *)((char *)*a2 - **a2);
    unsigned int v31 = *v30;
    if (*((unsigned char *)a2 + 38))
    {
      if (v31 < 0x47) {
        goto LABEL_46;
      }
      uint64_t v32 = v30[35];
      if (!v32) {
        goto LABEL_46;
      }
      int v33 = *(int *)((char *)v29 + v32);
      if ((v33 & 0x141510) != 0) {
        goto LABEL_44;
      }
      int v34 = 64;
    }
    else
    {
      if (v31 < 0x47) {
        goto LABEL_46;
      }
      uint64_t v35 = v30[35];
      if (!v35) {
        goto LABEL_46;
      }
      int v33 = *(int *)((char *)v29 + v35);
      if ((v33 & 0xA0A88) != 0)
      {
LABEL_44:
        if (sub_69BA5C((int **)v47) && !sub_69BA5C((int **)v42)) {
          goto LABEL_59;
        }
LABEL_46:
        double v36 = (unsigned __int16 *)(*(void *)&v42[0] - (int)**(_DWORD **)&v42[0]);
        unsigned int v37 = *v36;
        if (v37 >= 0xB)
        {
          if (v36[5] && (*(unsigned char *)(*(void *)&v42[0] + v36[5] + 2) & 6) != 0) {
            goto LABEL_59;
          }
          if (v37 >= 0x47)
          {
            if (v36[35] && (*(unsigned char *)(*(void *)&v42[0] + v36[35]) & 4) != 0) {
              goto LABEL_59;
            }
            goto LABEL_54;
          }
          if (v37 >= 0x2F)
          {
LABEL_54:
            uint64_t v38 = v36[23];
            if (v38)
            {
              unsigned int v39 = *(unsigned __int8 *)(*(void *)&v42[0] + v38) - 15;
              if (v39 < 0x21 && ((0x1C5C08009uLL >> v39) & 1) != 0) {
                goto LABEL_59;
              }
            }
          }
        }
        double v40 = sub_69B314(a1, a2, (int **)v47, *(double *)&v27);
        double v41 = sub_69B2B8(a1, a2, (int **)v47, (int **)v42, v40);
        if (fabs(v40) >= *(double *)(a1 + 184) && fabs(v41) <= *(double *)(a1 + 400))
        {
          uint64_t v10 = 1;
          unsigned int v23 = v44;
          if (!v44) {
            return v10;
          }
          goto LABEL_60;
        }
LABEL_59:
        uint64_t v10 = 0;
        unsigned int v23 = v44;
        if (!v44) {
          return v10;
        }
LABEL_60:
        uint64_t v45 = (int **)v23;
        operator delete(v23);
        return v10;
      }
      int v34 = 32;
    }
    if ((v34 & v33) == 0) {
      goto LABEL_46;
    }
    goto LABEL_44;
  }
  uint64_t v10 = 0;
  switch(*((unsigned char *)v15 + v16[23]))
  {
    case 6:
    case 0xC:
    case 0x2B:
      uint64_t v17 = v16[5];
      if (v17 && (*((unsigned char *)v15 + v17 + 2) & 0x20) != 0) {
        goto LABEL_13;
      }
      return 0;
    case 0x2C:
      return v10;
    default:
      goto LABEL_13;
  }
  return v10;
}

void sub_6C0C48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6C0D10(uint64_t a1, int **a2, uint64_t *a3, unint64_t a4, int a5, uint64_t a6)
{
  uint64_t v12 = (long long *)sub_5A7C34(a3, a4);
  long long v13 = (unsigned __int16 *)(*(void *)v12 - **(int **)v12);
  if (*v13 < 0x2Fu) {
    return 0;
  }
  uint64_t v14 = v13[23];
  if (!v14) {
    return 0;
  }
  unsigned int v15 = *(unsigned __int8 *)(*(void *)v12 + v14);
  BOOL v16 = v15 > 0x2A;
  uint64_t v17 = (1 << v15) & 0x50426810004;
  if (v16 || v17 == 0) {
    return 0;
  }
  int64_t v19 = v12;
  uint64_t v20 = sub_6DE7E0(a1 + 1160, a2, a3, -1);
  uint64_t v21 = 0;
  if (v20 != -1 && v20 != a4)
  {
    uint64_t v114 = a6;
    unint64_t v115 = v20;
    char v117 = a2;
    uint64_t v118 = a1 + 1160;
    int v113 = a5;
    uint64_t v140 = 0;
    v141 = 0;
    v142 = 0;
    sub_64F484(&v140, (long long *)a2);
    sub_64F484(&v140, v19);
    long long v22 = *v19;
    long long v23 = v19[1];
    unsigned int v138 = (int *)*((void *)v19 + 4);
    uint64_t v139 = 0;
    long long v136 = v22;
    long long v137 = v23;
    unint64_t v133 = 0;
    v134 = 0;
    uint64_t v135 = 0;
    do
    {
      long long v28 = (unsigned __int16 *)(v136 - *(int *)v136);
      if (*v28 < 9u)
      {
        uint64_t v29 = 0;
      }
      else
      {
        uint64_t v29 = v28[4];
        if (v29) {
          uint64_t v29 = *(unsigned int *)(v136 + v29);
        }
      }
      uint64_t v30 = v139 + v29;
      uint64_t v139 = v30;
      unsigned int v31 = (unsigned __int16 *)(v136 - *(int *)v136);
      if (*v31 < 0x2Fu) {
        goto LABEL_58;
      }
      uint64_t v32 = v31[23];
      if (!v32) {
        goto LABEL_58;
      }
      unsigned int v33 = *(unsigned __int8 *)(v136 + v32);
      BOOL v16 = v33 > 0x2A;
      uint64_t v34 = (1 << v33) & 0x50426810004;
      BOOL v35 = v16 || v34 == 0;
      if (v35 || v30 > *(void *)(a1 + 456)) {
        goto LABEL_58;
      }
      sub_2E44A4(*(void *)a1, (uint64_t)&v136, &v133);
      double v36 = sub_6CDA8C(v133, v134);
      unsigned int v37 = v133;
      if (v134 != v36) {
        v134 = v36;
      }
      if (v133 == v36)
      {
        uint64_t v21 = 0;
        goto LABEL_60;
      }
      *(void *)&long long v130 = &v136;
      if ((char *)v36 - (char *)v133 < 5121)
      {
LABEL_32:
        double v40 = 0;
        unint64_t v38 = 0;
      }
      else
      {
        unint64_t v38 = 0xCCCCCCCCCCCCCCCDLL * (v36 - v133);
        while (1)
        {
          unsigned int v39 = operator new(40 * v38, &std::nothrow);
          if (v39) {
            break;
          }
          BOOL v16 = v38 > 1;
          v38 >>= 1;
          if (!v16) {
            goto LABEL_32;
          }
        }
        double v40 = v39;
      }
      sub_6D5E10(v37, v36, (int ***)&v130, 0xCCCCCCCCCCCCCCCDLL * (v36 - v37), (uint64_t)v40, v38);
      if (v40) {
        operator delete(v40);
      }
      double v41 = v133;
      double v42 = v133[4];
      long long v43 = *((_OWORD *)v133 + 1);
      long long v136 = *(_OWORD *)v133;
      long long v137 = v43;
      unsigned int v138 = v42;
      uint64_t v44 = v141;
      if (v141 < v142)
      {
        long long v25 = *(_OWORD *)v133;
        long long v26 = *((_OWORD *)v133 + 1);
        *((void *)v141 + 4) = v133[4];
        *uint64_t v44 = v25;
        v44[1] = v26;
        long long v27 = (char *)v44 + 40;
      }
      else
      {
        uint64_t v45 = v140;
        unint64_t v46 = 0xCCCCCCCCCCCCCCCDLL * ((v141 - v140) >> 3);
        unint64_t v47 = v46 + 1;
        if (v46 + 1 > 0x666666666666666) {
          sub_2E00();
        }
        if (0x999999999999999ALL * ((v142 - v140) >> 3) > v47) {
          unint64_t v47 = 0x999999999999999ALL * ((v142 - v140) >> 3);
        }
        if (0xCCCCCCCCCCCCCCCDLL * ((v142 - v140) >> 3) >= 0x333333333333333) {
          unint64_t v48 = 0x666666666666666;
        }
        else {
          unint64_t v48 = v47;
        }
        if (v48)
        {
          if (v48 > 0x666666666666666) {
            sub_188D718();
          }
          int v49 = (char *)operator new(40 * v48);
        }
        else
        {
          int v49 = 0;
        }
        uint64_t v50 = &v49[40 * v46];
        long long v51 = v137;
        *(_OWORD *)uint64_t v50 = v136;
        *((_OWORD *)v50 + 1) = v51;
        *((void *)v50 + 4) = v138;
        int v52 = v50;
        if (v44 != (_OWORD *)v45)
        {
          do
          {
            long long v53 = *(_OWORD *)((char *)v44 - 40);
            long long v54 = *(_OWORD *)((char *)v44 - 24);
            *((void *)v52 - 1) = *((void *)v44 - 1);
            *(_OWORD *)(v52 - 24) = v54;
            *(_OWORD *)(v52 - 40) = v53;
            v52 -= 40;
            uint64_t v44 = (_OWORD *)((char *)v44 - 40);
          }
          while (v44 != (_OWORD *)v45);
          uint64_t v44 = v45;
        }
        long long v27 = v50 + 40;
        uint64_t v140 = v52;
        v141 = v50 + 40;
        v142 = &v49[40 * v48];
        if (v44)
        {
          operator delete(v44);
          double v41 = v133;
        }
      }
      v141 = v27;
    }
    while (0xCCCCCCCCCCCCCCCDLL * (v134 - v41) < 2);
    if (0xCCCCCCCCCCCCCCCDLL * ((v27 - v140) >> 3) < 3
      || ((v55 = sub_69BAF0(v117, (int **)v19), v55 >= 0.0) ? (double v56 = 90.0) : (double v56 = -90.0),
          double v57 = sub_69BAF0(v117, (int **)v141 - 5),
          v58.i16[0] = *(_WORD *)(a1 + 464),
          vabdd_f64(v57, v56) > (double)vmovl_s16(v58).i32[0]))
    {
LABEL_58:
      uint64_t v21 = 0;
LABEL_59:
      double v36 = v133;
LABEL_60:
      if (v36)
      {
        v134 = v36;
        operator delete(v36);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      return v21;
    }
    uint64_t v59 = sub_5A7C34(a3, v115);
    long long v60 = *(_OWORD *)v59;
    long long v61 = *(_OWORD *)(v59 + 16);
    uint64_t v132 = *(void *)(v59 + 32);
    long long v130 = v60;
    long long v131 = v61;
    LODWORD(v129) = 0;
    long long v127 = 0u;
    long long v128 = 0u;
    uint64_t v62 = sub_69CFC4(&v139, 2.0);
    uint64_t v63 = 0;
    uint64_t v64 = *(void *)(a1 + 456);
    if (v64 >= v62) {
      uint64_t v64 = v62;
    }
    uint64_t v116 = v64;
    uint64_t v65 = v130;
    double v66 = (unsigned __int16 *)(v130 - *(int *)v130);
    if (*v66 < 9u) {
      goto LABEL_69;
    }
LABEL_67:
    uint64_t v67 = v66[4];
    if (v67)
    {
      uint64_t v68 = *(unsigned int *)(v65 + v67);
      goto LABEL_70;
    }
    while (1)
    {
LABEL_69:
      uint64_t v68 = 0;
LABEL_70:
      v63 += v68;
      if (v63 > v116) {
        goto LABEL_58;
      }
      sub_2E44A4(*(void *)a1, (uint64_t)&v130, &v133);
      int v70 = v133;
      __int16 v71 = (char *)v134;
      if (v133 == v134) {
        goto LABEL_58;
      }
      int v119 = (unsigned int *)&v130;
      __p = *(void **)&v56;
      if ((char *)v134 - (char *)v133 < 5121)
      {
LABEL_76:
        int v74 = 0;
        unint64_t v72 = 0;
      }
      else
      {
        unint64_t v72 = 0xCCCCCCCCCCCCCCCDLL * (v134 - v133);
        while (1)
        {
          long long v73 = operator new(40 * v72, &std::nothrow);
          if (v73) {
            break;
          }
          BOOL v16 = v72 > 1;
          v72 >>= 1;
          if (!v16) {
            goto LABEL_76;
          }
        }
        int v74 = v73;
      }
      sub_6D62C4(v70, v71, (double *)&v119, 0xCCCCCCCCCCCCCCCDLL * ((v71 - (char *)v70) >> 3), (uint64_t)v74, v72, v69);
      if (v74) {
        operator delete(v74);
      }
      uint64_t v75 = (unsigned __int16 *)(v130 - *(int *)v130);
      unsigned int v76 = *v75;
      if (BYTE6(v132))
      {
        if (v76 >= 0x49)
        {
          unsigned int v77 = v75[36];
          if (v77) {
            goto LABEL_86;
          }
        }
      }
      else if (v76 >= 0x4B)
      {
        unsigned int v77 = v75[37];
        if (v77)
        {
LABEL_86:
          __int16 v78 = *(_WORD *)(v130 + v77);
          goto LABEL_88;
        }
      }
      __int16 v78 = -1;
LABEL_88:
      char v79 = *v133;
      uint64_t v80 = (unsigned __int16 *)((char *)v79 - *v79);
      unsigned int v81 = *v80;
      if (*((unsigned char *)v133 + 38))
      {
        if (v81 >= 0x4B)
        {
          unsigned int v82 = v80[37];
          if (v82) {
            goto LABEL_94;
          }
        }
      }
      else if (v81 >= 0x49)
      {
        unsigned int v82 = v80[36];
        if (v82)
        {
LABEL_94:
          int v83 = *(unsigned __int16 *)((char *)v79 + v82);
          goto LABEL_96;
        }
      }
      int v83 = 0xFFFF;
LABEL_96:
      unsigned __int16 v84 = v78 + 18000;
      unsigned __int16 v85 = v78 - 18000;
      if ((unsigned __int16)(v84 >> 5) < 0x465u) {
        unsigned __int16 v85 = v84;
      }
      int v86 = v83 - v85;
      if (v86 > 18000) {
        v86 -= 36000;
      }
      if (v86 < -17999) {
        v86 += 36000;
      }
      int16x4_t v87 = (int16x4_t)0x4059000000000000;
      v87.i16[0] = *(_WORD *)(a1 + 464);
      if (vabdd_f64((double)v86 / 100.0, v56) < (double)vmovl_s16(v87).i32[0])
      {
        int v119 = (unsigned int *)sub_2E4738((int **)&v130);
        if ((sub_3CCE68(a1 + 8, &v119) & 1) == 0)
        {
          unsigned int v92 = v133[4];
          long long v93 = *((_OWORD *)v133 + 1);
          long long v127 = *(_OWORD *)v133;
          long long v128 = v93;
          int v129 = v92;
          long long v95 = *(_OWORD *)v133;
          long long v94 = *((_OWORD *)v133 + 1);
          unsigned int v138 = v133[4];
          long long v136 = v95;
          long long v137 = v94;
          unsigned int v96 = v141;
          v124 = 0;
          uint64_t v125 = 0;
          uint64_t v126 = 0;
          if (v116 < 1)
          {
LABEL_118:
            sub_693CB0(v114);
            goto LABEL_58;
          }
          uint64_t v97 = 0;
          while (1)
          {
            unint64_t v98 = *((void *)v96 - 1);
            if (((unint64_t)v138 & 0xFFFFFFFFFFFFLL) == (v98 & 0xFFFFFFFFFFFFLL)
              && (((unint64_t)v138 & 0xFF000000000000) == 0) != (HIWORD(v98) & 1))
            {
              break;
            }
            sub_2E44A4(*(void *)a1, (uint64_t)&v136, &v133);
            unint64_t v99 = sub_6DE7E0(v118, (int **)&v136, (uint64_t *)&v133, -1);
            if (v99 == -1) {
              goto LABEL_58;
            }
            double v100 = (unsigned __int16 *)(v136 - *(int *)v136);
            if (*v100 >= 9u && (uint64_t v101 = v100[4]) != 0) {
              uint64_t v102 = *(unsigned int *)(v136 + v101);
            }
            else {
              uint64_t v102 = 0;
            }
            uint64_t v103 = sub_66F838(&v133, v99);
            v97 += v102;
            long long v104 = *(_OWORD *)v103;
            long long v105 = *(_OWORD *)(v103 + 16);
            unsigned int v138 = *(int **)(v103 + 32);
            long long v136 = v104;
            long long v137 = v105;
            if (v97 >= v116) {
              goto LABEL_118;
            }
          }
          sub_693CB0(v114);
          sub_69D028(v114, 0xCCCCCCCCCCCCCCCDLL * ((v141 - v140) >> 3));
          double v106 = v140;
          for (unint64_t i = v141; v106 != i; v106 += 40)
          {
            int v119 = (unsigned int *)*((void *)v106 + 4);
            sub_2D5B74((char **)v114, &v119);
          }
          if (v55 < 0.0) {
            int v108 = 1;
          }
          else {
            int v108 = 2;
          }
          *(_DWORD *)(v114 + 24) = v108;
          sub_2954EC(*(void *)a1, v132, (uint64_t)&v119);
          unint64_t v122 = sub_2E40A4((uint64_t)&v119);
          int v123 = v109;
          if (__p)
          {
            v121 = __p;
            operator delete(__p);
          }
          uint64_t v110 = sub_6C2458((uint64_t *)a1, &v140, (unsigned int *)&v122);
          *(void *)(v114 + 152) = v110;
          *(void *)(v114 + 160) = v111;
          BOOL v112 = v110 == -1 || v111 == 0x7FFFFFFFFFFFFFFFLL;
          uint64_t v21 = !v112;
          if (v112)
          {
            sub_693CB0(v114);
          }
          else if (v113)
          {
            sub_6B7BD0(a1, &v130, (char **)&v124, 0);
            sub_69D578(a1 + 64, (long long *)v117, &v130, (uint64_t)&v127, (char **)&v124);
            if (v124)
            {
              uint64_t v125 = v124;
              operator delete(v124);
            }
            uint64_t v21 = 1;
          }
          goto LABEL_59;
        }
      }
      unint64_t v88 = sub_6DE7E0(v118, (int **)&v130, (uint64_t *)&v133, -1);
      if (v88 == -1 || (sub_6D8104(v118, (int **)&v130, (uint64_t *)&v133, v88) & 1) != 0) {
        goto LABEL_58;
      }
      uint64_t v89 = sub_66F838(&v133, v88);
      long long v90 = *(_OWORD *)v89;
      long long v91 = *(_OWORD *)(v89 + 16);
      uint64_t v132 = *(void *)(v89 + 32);
      long long v130 = v90;
      long long v131 = v91;
      uint64_t v65 = v90;
      double v66 = (unsigned __int16 *)(v90 - *(int *)v90);
      if (*v66 >= 9u) {
        goto LABEL_67;
      }
    }
  }
  return v21;
}

void sub_6C16A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  if (__p) {
    operator delete(__p);
  }
  long long v25 = *(void **)(v23 - 200);
  if (v25)
  {
    *(void *)(v23 - 192) = v25;
    operator delete(v25);
    long long v26 = *(void **)(v23 - 128);
    if (!v26) {
LABEL_5:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    long long v26 = *(void **)(v23 - 128);
    if (!v26) {
      goto LABEL_5;
    }
  }
  *(void *)(v23 - 120) = v26;
  operator delete(v26);
  _Unwind_Resume(exception_object);
}

uint64_t sub_6C1788(uint64_t a1, void *a2, unint64_t a3, int **a4)
{
  uint64_t v7 = 0;
  double v36 = 0;
  unsigned int v37 = 0;
  uint64_t v38 = 0;
  __p = 0;
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  uint64_t v8 = (unsigned __int16 *)((char *)*a4 - **a4);
  if (*v8 >= 9u)
  {
    uint64_t v9 = v8[4];
    if (v9) {
      uint64_t v7 = *(unsigned int *)((char *)*a4 + v9);
    }
    else {
      uint64_t v7 = 0;
    }
  }
  long long v10 = *((_OWORD *)a4 + 1);
  long long v30 = *(_OWORD *)a4;
  long long v31 = v10;
  uint64_t v32 = a4[4];
  if (v7 >= *(void *)(a1 + 440))
  {
    BOOL v16 = 0;
    unsigned int v15 = 0;
  }
  else
  {
    while (1)
    {
      sub_2E44A4(*(void *)a1, (uint64_t)&v30, &v36);
      sub_6DE780(a1 + 1160, (uint64_t)&v30, (uint64_t *)&v36);
      if (v36 == v37 || fabs(sub_6D82EC(a1 + 1160, (int **)&v30, (int **)v36)) > *(double *)(a1 + 200)) {
        break;
      }
      uint64_t v11 = (int *)*((void *)v36 + 4);
      long long v12 = *((_OWORD *)v36 + 1);
      long long v30 = *(_OWORD *)v36;
      long long v31 = v12;
      uint64_t v32 = v11;
      uint64_t v29 = v11;
      sub_2D5B74((char **)&__p, &v29);
      long long v13 = (unsigned __int16 *)(v30 - *(int *)v30);
      if (*v13 >= 9u && (uint64_t v14 = v13[4]) != 0)
      {
        v7 += *(unsigned int *)(v30 + v14);
        if (v7 >= *(void *)(a1 + 440)) {
          break;
        }
      }
      else if (v7 >= *(void *)(a1 + 440))
      {
        break;
      }
    }
    unsigned int v15 = (int *)__p;
    BOOL v16 = v34;
  }
  unint64_t v17 = 126 - 2 * __clz(((char *)v16 - (char *)v15) >> 3);
  if (v16 == v15) {
    uint64_t v18 = 0;
  }
  else {
    uint64_t v18 = v17;
  }
  sub_303770((uint64_t)v15, v16, (uint64_t)&v29, v18, 1);
  sub_30361C((uint64_t)&__p);
  for (uint64_t i = sub_470F2C(a2, a3, v19); i < *(void *)(a1 + 440); i += sub_470F2C(a2, a3, v23))
  {
    if (a3 >= sub_470ADC(a2) - 1) {
      break;
    }
    uint64_t v21 = sub_470B40(a2, a3++);
    long long v22 = (_DWORD *)sub_470B40(a2, a3);
    double v23 = fabs(sub_6E0F74(a1 + 1160, v21, (uint64_t)v22));
    if (v23 > *(double *)(a1 + 200)) {
      break;
    }
    unint64_t v24 = (int *)__p;
    if (__p != v34)
    {
      int v25 = v22[1];
      while (*v24 != *v22
           || *((unsigned __int16 *)v24 + 2) != (unsigned __int16)v25
           || ((v25 & 0x20000000) == 0) == (*((unsigned char *)v24 + 6) == 0))
      {
        v24 += 2;
        if (v24 == v34)
        {
          unint64_t v24 = v34;
          break;
        }
      }
    }
    if (v24 != v34)
    {
      uint64_t v26 = 1;
      long long v27 = (int *)__p;
      if (__p) {
        goto LABEL_32;
      }
      goto LABEL_33;
    }
  }
  uint64_t v26 = 0;
  long long v27 = (int *)__p;
  if (__p)
  {
LABEL_32:
    uint64_t v34 = v27;
    operator delete(v27);
  }
LABEL_33:
  if (v36)
  {
    unsigned int v37 = v36;
    operator delete(v36);
  }
  return v26;
}

void sub_6C1A58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, void *a20,uint64_t a21)
{
  if (__p)
  {
    operator delete(__p);
    long long v22 = a20;
    if (!a20) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    long long v22 = a20;
    if (!a20) {
      goto LABEL_3;
    }
  }
  operator delete(v22);
  _Unwind_Resume(exception_object);
}

uint64_t sub_6C1AB0(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_5A7C34(a3, a4);
  LODWORD(v129) = 0;
  long long v127 = 0u;
  long long v128 = 0u;
  WORD2(v129) = -1;
  BYTE6(v129) = 0;
  LODWORD(v126) = 0;
  long long v124 = 0u;
  long long v125 = 0u;
  WORD2(v126) = -1;
  BYTE6(v126) = 0;
  LODWORD(v123) = 0;
  long long v121 = 0u;
  long long v122 = 0u;
  WORD2(v123) = -1;
  BYTE6(v123) = 0;
  LODWORD(v120) = 0;
  long long v118 = 0u;
  long long v119 = 0u;
  WORD2(v120) = -1;
  BYTE6(v120) = 0;
  LODWORD(v117) = 0;
  long long v115 = 0u;
  long long v116 = 0u;
  WORD2(v117) = -1;
  BYTE6(v117) = 0;
  BOOL v112 = 0;
  *(void *)int v113 = 0;
  uint64_t v114 = 0;
  sub_64F484((char **)&v112, (long long *)a2);
  *(_DWORD *)(a5 + 64) = 0;
  int v109 = 0;
  uint64_t v110 = 0;
  uint64_t v111 = 0;
  double v106 = 0;
  v107 = 0;
  uint64_t v108 = 0;
  __p = 0;
  long long v104 = 0;
  uint64_t v105 = 0;
  sub_6C28EC(a1, (int **)a2, (uint64_t)&v109);
  if (v109 == v110)
  {
    if (0xCCCCCCCCCCCCCCCDLL * ((a3[1] - *a3) >> 3) >= 2 && sub_6DE7E0(a1 + 1160, (int **)a2, a3, -1) != a4)
    {
      sub_6C2C70((uint64_t *)a1, v10, (void *)(a1 + 472), (uint64_t)&__p);
      uint64_t v18 = (char *)__p;
      if (__p == v104) {
        goto LABEL_31;
      }
      char v34 = *(v104 - 1);
      char v35 = *(v104 - 2) ^ 1;
      long long v36 = *(_OWORD *)(v104 - 40);
      long long v37 = *(_OWORD *)(v104 - 24);
      int v38 = *((_DWORD *)v104 - 2);
      WORD2(v117) = *((_WORD *)v104 - 2);
      LODWORD(v117) = v38;
      long long v115 = v36;
      long long v116 = v37;
      BYTE6(v117) = v35;
      HIBYTE(v117) = v34;
      sub_6C28EC(a1, (int **)&v115, (uint64_t)&v109);
      if (v109 != v110)
      {
        long long v39 = *(_OWORD *)v109;
        long long v40 = *((_OWORD *)v109 + 1);
        uint64_t v129 = *((void *)v109 + 4);
        long long v127 = v39;
        long long v128 = v40;
        long long v41 = *(_OWORD *)(v110 - 5);
        long long v42 = *(_OWORD *)(v110 - 3);
        uint64_t v126 = *(v110 - 1);
        long long v124 = v41;
        long long v125 = v42;
        sub_6C2C70((uint64_t *)a1, (uint64_t)&v127, (void *)(a1 + 480), (uint64_t)&v106);
        if (v106 != v107)
        {
          long long v43 = *(_OWORD *)(a2 + 16);
          long long v121 = *(_OWORD *)a2;
          long long v122 = v43;
          uint64_t v123 = *(void *)(a2 + 32);
          long long v44 = *(_OWORD *)(v107 - 24);
          long long v45 = *(_OWORD *)(v107 - 40);
          uint64_t v120 = *((void *)v107 - 1);
          long long v118 = v45;
          long long v119 = v44;
          sub_473C00((uint64_t)&v112, *(uint64_t *)v113, (char *)__p, v104, 0xCCCCCCCCCCCCCCCDLL * ((v104 - (unsigned char *)__p) >> 3));
          int v24 = 2;
          goto LABEL_5;
        }
      }
    }
LABEL_17:
    uint64_t v31 = 0;
    goto LABEL_18;
  }
  long long v11 = *(_OWORD *)(a2 + 16);
  long long v115 = *(_OWORD *)a2;
  long long v116 = v11;
  unint64_t v117 = *(void *)(a2 + 32);
  long long v13 = *(_OWORD *)v109;
  long long v12 = *((_OWORD *)v109 + 1);
  uint64_t v129 = *((void *)v109 + 4);
  long long v127 = v13;
  long long v128 = v12;
  long long v14 = *(_OWORD *)(v110 - 3);
  long long v15 = *(_OWORD *)(v110 - 5);
  uint64_t v126 = *(v110 - 1);
  long long v124 = v15;
  long long v125 = v14;
  sub_6C2C70((uint64_t *)a1, (uint64_t)&v127, (void *)(a1 + 472), (uint64_t)&v106);
  if (v106 == v107) {
    goto LABEL_17;
  }
  long long v16 = *(_OWORD *)(v107 - 40);
  long long v17 = *(_OWORD *)(v107 - 24);
  uint64_t v120 = *((void *)v107 - 1);
  long long v118 = v16;
  long long v119 = v17;
  sub_6C2C70((uint64_t *)a1, (uint64_t)&v124, (void *)(a1 + 480), (uint64_t)&__p);
  uint64_t v18 = (char *)__p;
  if (__p != v104)
  {
    char v19 = *(v104 - 1);
    char v20 = *(v104 - 2) ^ 1;
    long long v21 = *(_OWORD *)(v104 - 40);
    long long v22 = *(_OWORD *)(v104 - 24);
    int v23 = *((_DWORD *)v104 - 2);
    WORD2(v123) = *((_WORD *)v104 - 2);
    LODWORD(v123) = v23;
    long long v121 = v21;
    long long v122 = v22;
    BYTE6(v123) = v20;
    HIBYTE(v123) = v19;
    sub_473C00((uint64_t)&v112, *(uint64_t *)v113, (char *)v106, v107, 0xCCCCCCCCCCCCCCCDLL * ((v107 - (unsigned char *)v106) >> 3));
    int v24 = 1;
LABEL_5:
    *(_DWORD *)(a1 + 176) = v24;
    int v25 = (unsigned __int16 *)(v121 - *(int *)v121);
    if (*v25 >= 0x2Fu && (uint64_t v26 = v25[23]) != 0 && !*(unsigned char *)(v121 + v26)
      || (long long v27 = (unsigned __int16 *)(v118 - *(int *)v118), *v27 >= 0x2Fu)
      && (uint64_t v28 = v27[23]) != 0
      && !*(unsigned char *)(v118 + v28)
      || (double v29 = sub_6D82EC(a1 + 1160, (int **)v112, (int **)(*(void *)v113 - 40)),
          double v30 = fabs(v29),
          v30 < *(double *)(a1 + 288))
      || v30 > *(double *)(a1 + 304))
    {
      uint64_t v31 = 0;
      *(void *)(a5 + 8) = *(void *)a5;
      *(void *)(a5 + 48) = *(void *)(a5 + 40);
      *(void *)&long long v32 = -1;
      *((void *)&v32 + 1) = -1;
      *(_OWORD *)(a5 + 72) = v32;
      *(_OWORD *)(a5 + 88) = v32;
      *(_OWORD *)(a5 + 104) = v32;
      *(void *)(a5 + 120) = -1;
      *(void *)(a5 + 136) = -1;
      *(_DWORD *)(a5 + 24) = 0;
      *(_DWORD *)(a5 + 64) = 0;
      *(_DWORD *)(a5 + 128) = 0;
      *(_DWORD *)(a5 + 144) = 0;
      *(_OWORD *)(a5 + 152) = xmmword_20E2060;
      *(_WORD *)(a5 + 168) = 0;
      *(unsigned char *)(a5 + 170) = 0;
      *(void *)(a5 + 176) = 0;
      *(unsigned char *)(a5 + 188) = 0;
      *(unsigned char *)(a5 + 190) = 0;
      uint64_t v18 = (char *)__p;
      if (!__p) {
        goto LABEL_20;
      }
LABEL_19:
      long long v104 = v18;
      operator delete(v18);
      goto LABEL_20;
    }
    if (v29 <= 0.0) {
      int v46 = 1;
    }
    else {
      int v46 = 2;
    }
    double v100 = 0;
    uint64_t v101 = 0;
    uint64_t v102 = 0;
    sub_6C2FC0((uint64_t *)a1, &v121, (uint64_t)&v118, (uint64_t *)(a1 + 488), &v100);
    unint64_t v47 = v100;
    int16x4_t v87 = v101;
    if (v100 == v101)
    {
      sub_693CB0(a5);
      uint64_t v31 = 0;
      goto LABEL_91;
    }
    uint64_t v86 = a2;
    unint64_t v88 = (const void **)(a1 + 40);
    *(void *)(a1 + 48) = *(void *)(a1 + 40);
    while (1)
    {
      sub_2954EC(*(void *)a1, v47[4], (uint64_t)&v96);
      uint64_t v48 = *(void *)(a1 + 48);
      sub_2E51EC((uint64_t)&v96, (uint64_t)&v92);
      if (v99)
      {
        if (v97 == v98) {
          goto LABEL_44;
        }
        uint64_t v49 = v96;
        long long v90 = 0u;
        long long v91 = 0u;
        char v50 = 1;
        int v51 = -1;
        LODWORD(v52) = -1;
      }
      else
      {
        if (v97 == v98)
        {
LABEL_44:
          int v51 = 0;
          char v50 = 0;
          LODWORD(v52) = 0;
          uint64_t v49 = 0;
          long long v90 = 0u;
          long long v91 = 0u;
          memset(v89, 0, 7);
          goto LABEL_45;
        }
        unint64_t v53 = *((void *)v98 - 1);
        long long v54 = sub_2964C4(v96, v53, 1);
        char v50 = 0;
        double v55 = &v54[*(unsigned __int16 *)&v54[-*(int *)v54 + 4]];
        uint64_t v56 = (uint64_t)&v55[4 * HIDWORD(v53) + *(unsigned int *)v55];
        double v57 = (int *)(v56 + 4 + *(unsigned int *)(v56 + 4));
        uint64_t v49 = v96;
        int16x4_t v58 = (unsigned int *)((char *)v57 + *(unsigned __int16 *)((char *)v57 - *v57 + 6));
        int v51 = *(unsigned int *)((char *)v58 + *v58);
        unint64_t v52 = (unint64_t)(v98 - (unsigned char *)v97) >> 3;
        long long v90 = 0u;
        long long v91 = 0u;
      }
LABEL_45:
      v138[0] = v92;
      v138[1] = v93;
      v138[2] = v94;
      v138[3] = v95;
      long long v131 = v90;
      long long v132 = v91;
      long long v139 = v92;
      long long v140 = v93;
      uint64_t v130 = v49;
      uint64_t v133 = 0;
      int v134 = v52;
      int v135 = v51;
      char v136 = v50;
      *(_DWORD *)&v137[3] = *(_DWORD *)((char *)v89 + 3);
      *(_DWORD *)long long v137 = v89[0];
      long long v141 = v94;
      long long v142 = v95;
      if ((void)v95 == __PAIR64__(v51, v52))
      {
        uint64_t v59 = 0;
      }
      else
      {
        uint64_t v59 = 0;
        do
        {
          if (BYTE8(v142)) {
            sub_2E7608((uint64_t)&v139);
          }
          else {
            sub_2E74E8((uint64_t)&v139);
          }
          ++v59;
        }
        while (v142 != v52 || DWORD1(v142) != v51);
      }
      sub_6CFD9C(v88, v48, v138, (long long *)&v130, v59);
      if (v97)
      {
        unint64_t v98 = (char *)v97;
        operator delete(v97);
      }
      v47 += 5;
      if (v47 == v87)
      {
        *(void *)&v138[0] = sub_69A4A4(*(void *)a1, (uint64_t)&v115);
        DWORD2(v138[0]) = v61;
        sub_3B8BC4((unsigned int **)v88, (unsigned int *)v138, 0, 0, (uint64_t)&v139, v62, v63, v64, v65);
        uint64_t v66 = v86;
        uint64_t v130 = *((void *)&v139 + 1);
        LODWORD(v131) = v140;
        *(_DWORD *)(a5 + 24) = v46;
        uint64_t v67 = v112;
        uint64_t v68 = *(void *)v113;
        if (v112 != *(void **)v113)
        {
          __n128 v69 = *(_DWORD **)(a5 + 8);
          do
          {
            uint64_t v71 = v67[4];
            unint64_t v72 = *(void *)(a5 + 16);
            if ((unint64_t)v69 < v72)
            {
              *(void *)__n128 v69 = v71;
              int v70 = v69 + 2;
            }
            else
            {
              long long v73 = *(_DWORD **)a5;
              uint64_t v74 = ((uint64_t)v69 - *(void *)a5) >> 3;
              unint64_t v75 = v74 + 1;
              if ((unint64_t)(v74 + 1) >> 61) {
                sub_2E00();
              }
              uint64_t v76 = v72 - (void)v73;
              if (v76 >> 2 > v75) {
                unint64_t v75 = v76 >> 2;
              }
              if ((unint64_t)v76 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v77 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v77 = v75;
              }
              if (v77)
              {
                if (v77 >> 61) {
                  sub_188D718();
                }
                __int16 v78 = (char *)operator new(8 * v77);
                uint64_t v79 = (uint64_t)&v78[8 * v74];
                *(void *)uint64_t v79 = v71;
                int v70 = (void *)(v79 + 8);
                if (v69 != v73)
                {
                  do
                  {
LABEL_73:
                    int v81 = *(v69 - 2);
                    v69 -= 2;
                    int v82 = *(_DWORD *)((char *)v69 + 3);
                    *(_DWORD *)(v79 - 8) = v81;
                    v79 -= 8;
                    *(_DWORD *)(v79 + 3) = v82;
                  }
                  while (v69 != v73);
                  __n128 v69 = *(_DWORD **)a5;
                  *(void *)a5 = v79;
                  *(void *)(a5 + 8) = v70;
                  *(void *)(a5 + 16) = &v78[8 * v77];
                  uint64_t v66 = v86;
                  if (!v69) {
                    goto LABEL_60;
                  }
LABEL_77:
                  operator delete(v69);
                  goto LABEL_60;
                }
              }
              else
              {
                __int16 v78 = 0;
                uint64_t v79 = 8 * v74;
                uint64_t v80 = (void *)(8 * v74);
                *uint64_t v80 = v71;
                int v70 = v80 + 1;
                if (v69 != v73) {
                  goto LABEL_73;
                }
              }
              *(void *)a5 = v79;
              *(void *)(a5 + 8) = v70;
              *(void *)(a5 + 16) = &v78[8 * v77];
              uint64_t v66 = v86;
              if (v69) {
                goto LABEL_77;
              }
            }
LABEL_60:
            *(void *)(a5 + 8) = v70;
            v67 += 5;
            __n128 v69 = v70;
          }
          while (v67 != (void *)v68);
        }
        uint64_t v83 = sub_6C2458((uint64_t *)a1, &v112, (unsigned int *)&v130);
        BOOL v85 = v83 == -1 || v84 == 0x7FFFFFFFFFFFFFFFLL;
        uint64_t v31 = !v85;
        if (v85)
        {
          sub_693CB0(a5);
        }
        else
        {
          if (__PAIR64__(*(unsigned __int16 *)(v66 + 36), *(_DWORD *)(v66 + 32)) == __PAIR64__(WORD2(v117), v117)
            && (HIWORD(v117) & 1) != (*(unsigned char *)(v66 + 38) == 0))
          {
            *(void *)(a5 + 152) = v83;
            *(void *)(a5 + 160) = v84;
          }
          *(void *)(a5 + 176) = 0;
        }
LABEL_91:
        if (v100)
        {
          uint64_t v101 = v100;
          operator delete(v100);
          uint64_t v18 = (char *)__p;
          if (__p) {
            goto LABEL_19;
          }
          goto LABEL_20;
        }
LABEL_18:
        uint64_t v18 = (char *)__p;
        if (!__p) {
          goto LABEL_20;
        }
        goto LABEL_19;
      }
    }
  }
LABEL_31:
  uint64_t v31 = 0;
  if (v18) {
    goto LABEL_19;
  }
LABEL_20:
  if (v106)
  {
    v107 = (char *)v106;
    operator delete(v106);
  }
  if (v109)
  {
    uint64_t v110 = v109;
    operator delete(v109);
  }
  if (v112)
  {
    *(void *)int v113 = v112;
    operator delete(v112);
  }
  return v31;
}

void sub_6C2360(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,uint64_t a36,void *__p,uint64_t a38,uint64_t a39,void *a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,uint64_t a45,void *a46,uint64_t a47)
{
  if (__p)
  {
    operator delete(__p);
    uint64_t v48 = a40;
    if (!a40)
    {
LABEL_3:
      uint64_t v49 = a43;
      if (!a43) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v48 = a40;
    if (!a40) {
      goto LABEL_3;
    }
  }
  operator delete(v48);
  uint64_t v49 = a43;
  if (!a43)
  {
LABEL_4:
    char v50 = a46;
    if (!a46) {
      goto LABEL_5;
    }
    goto LABEL_9;
  }
LABEL_8:
  operator delete(v49);
  char v50 = a46;
  if (!a46) {
LABEL_5:
  }
    _Unwind_Resume(exception_object);
LABEL_9:
  operator delete(v50);
  _Unwind_Resume(exception_object);
}

uint64_t sub_6C2458(uint64_t *a1, void *a2, unsigned int *a3)
{
  unint64_t v4 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a2[1] - *a2) >> 3) - 1;
  if (v4 <= 1) {
    unint64_t v5 = 1;
  }
  else {
    unint64_t v5 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a2[1] - *a2) >> 3) - 1;
  }
  if (v4 >= 2)
  {
    uint64_t v6 = 0;
    uint64_t v7 = -1;
    unint64_t v14 = 1;
    double v8 = 1.79769313e308;
    while (1)
    {
      uint64_t v42 = -1;
      int v43 = 0x7FFFFFFF;
      uint64_t v17 = sub_5A7C34(a2, v14);
      sub_2954EC(*a1, *(void *)(v17 + 32), (uint64_t)&v36);
      sub_2E4B5C((uint64_t)&v36, &__p);
      if (v37)
      {
        int v38 = (uint64_t *)v37;
        operator delete(v37);
      }
      sub_3B8BC4((unsigned int **)&__p, a3, 0, 0, (uint64_t)&v36, v18, v19, v20, v21);
      *(double *)&int v25 = v36;
      uint64_t v42 = (uint64_t)v37;
      int v43 = (int)v38;
      if (v36 < v8)
      {
        uint64_t v46 = 0x7FEFFFFFFFFFFFFFLL;
        double v26 = NAN;
        uint64_t v44 = -1;
        int v45 = 0x7FFFFFFF;
        double v36 = COERCE_DOUBLE(&v42);
        long long v37 = &v46;
        int v38 = &v44;
        long long v27 = __p;
        uint64_t v28 = v41;
        if (__p != v41 && (char *)__p + 12 != v41)
        {
          do
          {
            sub_457FB8((uint64_t)&v36, v27, v27 + 3, v26, v22, v23, v24);
            double v29 = v27 + 6;
            v27 += 3;
          }
          while (v29 != v28);
          long long v27 = __p;
          uint64_t v28 = v41;
        }
        uint64_t v48 = 0;
        uint64_t v49 = 0;
        uint64_t v47 = 0x7FEFFFFFFFFFFFFFLL;
        double v36 = COERCE_DOUBLE(&v44);
        long long v37 = &v47;
        int v38 = &v48;
        long long v39 = &v49;
        if (v27 != v28 && v27 + 3 != v28)
        {
          do
          {
            double v26 = sub_4582C8((double **)&v36, (uint64_t)v27, v27 + 3, v26);
            double v30 = v27 + 6;
            v27 += 3;
          }
          while (v30 != v28);
        }
        sub_5A7C34(a2, v14);
        uint64_t v7 = v14;
        double v8 = *(double *)&v25;
      }
      uint64_t v31 = (void *)sub_5A7C34(a2, v14);
      long long v32 = (unsigned __int16 *)(*v31 - *(int *)*v31);
      if (*v32 >= 9u)
      {
        uint64_t v33 = v32[4];
        if (v33) {
          break;
        }
      }
      uint64_t v15 = 0;
      long long v16 = (char *)__p;
      if (__p) {
        goto LABEL_13;
      }
LABEL_14:
      v6 += v15;
      if (++v14 == v5) {
        goto LABEL_6;
      }
    }
    uint64_t v15 = *(unsigned int *)(*v31 + v33);
    long long v16 = (char *)__p;
    if (!__p) {
      goto LABEL_14;
    }
LABEL_13:
    long long v41 = v16;
    operator delete(v16);
    goto LABEL_14;
  }
  uint64_t v6 = 0;
  uint64_t v7 = -1;
  double v8 = 1.79769313e308;
LABEL_6:
  double v9 = v8 * 100.0;
  if (v8 * 100.0 >= 0.0)
  {
    double v10 = v8 * 100.0;
    if (v9 >= 4.50359963e15) {
      goto LABEL_33;
    }
    uint64_t v11 = (uint64_t)(v9 + v9) + 1;
  }
  else
  {
    double v10 = v8 * 100.0;
    if (v9 <= -4.50359963e15) {
      goto LABEL_33;
    }
    uint64_t v11 = (uint64_t)(v9 + v9);
    if (v11 >= 1) {
      --v11;
    }
  }
  double v10 = (double)(v11 >> 1);
LABEL_33:
  if (v10 < 9.22337204e18)
  {
    if (v9 >= 0.0)
    {
      if (v9 >= 4.50359963e15) {
        goto LABEL_45;
      }
      uint64_t v34 = (uint64_t)(v9 + v9) + 1;
    }
    else
    {
      if (v9 <= -4.50359963e15) {
        goto LABEL_45;
      }
      uint64_t v34 = (uint64_t)(v9 + v9);
      if (v34 >= 1) {
        --v34;
      }
    }
    double v9 = (double)(v34 >> 1);
LABEL_45:
    if ((uint64_t)v9 <= a1[63]) {
      return v7;
    }
    goto LABEL_46;
  }
  if (a1[63] == 0x7FFFFFFFFFFFFFFFLL || a1[63] == 0x7FFFFFFFFFFFFFFELL) {
    return v7;
  }
LABEL_46:
  if (v6 > a1[64]) {
    return -1;
  }
  return v7;
}

void sub_6C28AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_6C28EC(uint64_t a1, int **a2, uint64_t a3)
{
  *(void *)(a3 + 8) = *(void *)a3;
  uint64_t v6 = (unsigned __int16 *)((char *)*a2 - **a2);
  if (*v6 < 0xBu || (uint64_t v7 = v6[5]) == 0 || (*((unsigned char *)*a2 + v7) & 4) == 0)
  {
    __p = 0;
    long long v39 = 0;
    uint64_t v40 = 0;
    sub_2E44A4(*(void *)a1, (uint64_t)a2, &__p);
    double v8 = sub_6CDA8C((int **)__p, v39);
    double v9 = (long long *)__p;
    if (v39 != v8) {
      long long v39 = v8;
    }
    if ((char *)v8 - (unsigned char *)__p != 80) {
      goto LABEL_66;
    }
    uint64_t v10 = *(void *)__p;
    uint64_t v11 = (unsigned __int16 *)(*(void *)__p - **(int **)__p);
    unsigned int v12 = *v11;
    if (v12 < 0xB) {
      goto LABEL_66;
    }
    if (!v11[5]) {
      goto LABEL_66;
    }
    if ((*(_DWORD *)(v10 + v11[5]) & 1) == (*(_DWORD *)(v10 + v11[5]) & 2u) >> 1) {
      goto LABEL_66;
    }
    long long v13 = (long long *)(v8 - 5);
    unint64_t v14 = *(v8 - 5);
    uint64_t v15 = (unsigned __int16 *)((char *)v14 - *v14);
    unsigned int v16 = *v15;
    if (v16 < 0xB) {
      goto LABEL_66;
    }
    if (!v15[5]) {
      goto LABEL_66;
    }
    int v17 = *(int *)((char *)v14 + v15[5]);
    if (((v17 ^ ((v17 & 2) >> 1)) & 1) == 0) {
      goto LABEL_66;
    }
    unint64_t v18 = (char *)*a2;
    double v19 = (unsigned __int16 *)((char *)*a2 - **a2);
    unsigned int v20 = *v19;
    if (*((unsigned char *)a2 + 38))
    {
      if (v20 < 0x49 || (unsigned int v21 = v19[36]) == 0)
      {
LABEL_20:
        __int16 v22 = -1;
LABEL_21:
        if (*((unsigned char *)__p + 38))
        {
          if (v12 < 0x4B || (unsigned int v23 = v11[37]) == 0)
          {
LABEL_28:
            int v24 = 0xFFFF;
LABEL_29:
            unsigned __int16 v25 = v22 + 18000;
            unsigned __int16 v26 = v22 - 18000;
            if ((unsigned __int16)(v25 >> 5) >= 0x465u) {
              unsigned __int16 v25 = v26;
            }
            int v27 = v24 - v25;
            if (v27 > 18000) {
              v27 -= 36000;
            }
            if (v27 < -17999) {
              v27 += 36000;
            }
            double v28 = (double)v27 / 100.0;
            double v29 = fabs(v28);
            LOWORD(v28) = *(_WORD *)(a1 + 496);
            double v30 = (double)vmovl_s16(*(int16x4_t *)&v28).i32[0];
            if (v29 > v30) {
              goto LABEL_66;
            }
            if (*((unsigned char *)a2 + 38))
            {
              if (v20 < 0x49 || (unsigned int v31 = v19[36]) == 0)
              {
LABEL_43:
                __int16 v32 = -1;
LABEL_44:
                if (*((unsigned char *)v8 - 2))
                {
                  if (v16 < 0x4B || (unsigned int v33 = v15[37]) == 0)
                  {
LABEL_51:
                    int v34 = 0xFFFF;
LABEL_52:
                    unsigned __int16 v35 = v32 + 18000;
                    unsigned __int16 v36 = v32 - 18000;
                    if ((unsigned __int16)(v35 >> 5) >= 0x465u) {
                      unsigned __int16 v35 = v36;
                    }
                    int v37 = v34 - v35;
                    if (v37 > 18000) {
                      v37 -= 36000;
                    }
                    if (v37 < -17999) {
                      v37 += 36000;
                    }
                    if (fabs((double)v37 / 100.0) > v30) {
                      goto LABEL_66;
                    }
                    if (sub_6561B0((int **)__p) && sub_699454(v8 - 5))
                    {
                      sub_64F484((char **)a3, v9);
                    }
                    else
                    {
                      if (!sub_699454((int **)v9) || !sub_6561B0(v8 - 5)) {
                        goto LABEL_66;
                      }
                      sub_64F484((char **)a3, (long long *)(v8 - 5));
                      long long v13 = v9;
                    }
                    sub_64F484((char **)a3, v13);
LABEL_66:
                    if (__p)
                    {
                      long long v39 = (int **)__p;
                      operator delete(__p);
                    }
                    return;
                  }
                }
                else
                {
                  if (v16 < 0x49) {
                    goto LABEL_51;
                  }
                  unsigned int v33 = v15[36];
                  if (!v33) {
                    goto LABEL_51;
                  }
                }
                int v34 = *(unsigned __int16 *)((char *)v14 + v33);
                goto LABEL_52;
              }
            }
            else
            {
              if (v20 < 0x4B) {
                goto LABEL_43;
              }
              unsigned int v31 = v19[37];
              if (!v31) {
                goto LABEL_43;
              }
            }
            __int16 v32 = *(_WORD *)&v18[v31];
            goto LABEL_44;
          }
        }
        else
        {
          if (v12 < 0x49) {
            goto LABEL_28;
          }
          unsigned int v23 = v11[36];
          if (!v23) {
            goto LABEL_28;
          }
        }
        int v24 = *(unsigned __int16 *)(v10 + v23);
        goto LABEL_29;
      }
    }
    else
    {
      if (v20 < 0x4B) {
        goto LABEL_20;
      }
      unsigned int v21 = v19[37];
      if (!v19[37]) {
        goto LABEL_20;
      }
    }
    __int16 v22 = *(_WORD *)&v18[v21];
    goto LABEL_21;
  }
}

void sub_6C2C4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_6C2C70(uint64_t *a1, uint64_t a2, void *a3, uint64_t a4)
{
  *(void *)(a4 + 8) = *(void *)a4;
  sub_64F484((char **)a4, (long long *)a2);
  double v8 = 0;
  uint64_t v9 = 0;
  long long v10 = *(_OWORD *)(a2 + 16);
  long long v41 = *(_OWORD *)a2;
  long long v42 = v10;
  int v43 = *(int **)(a2 + 32);
  int v38 = 0;
  long long v39 = 0;
  uint64_t v40 = 0;
  while (1)
  {
    long long v13 = (unsigned __int16 *)(v41 - *(int *)v41);
    unsigned int v14 = *v13;
    if (v14 < 9)
    {
      uint64_t v15 = 0;
    }
    else
    {
      uint64_t v15 = v13[4];
      if (v13[4]) {
        uint64_t v15 = *(unsigned int *)(v41 + v15);
      }
    }
    v9 += v15;
    if (v9 > *a3) {
      break;
    }
    if (v14 < 0x2F)
    {
      if (v14 < 0xB) {
        break;
      }
    }
    else if (v13[23] && *(unsigned char *)(v41 + v13[23]) == 23)
    {
      goto LABEL_21;
    }
    if (!v13[5] || (*(unsigned char *)(v41 + v13[5]) & 4) == 0)
    {
      if (v14 < 0x2F) {
        break;
      }
      uint64_t v16 = v13[23];
      if (!v16) {
        break;
      }
      unsigned int v17 = *(unsigned __int8 *)(v41 + v16);
      BOOL v18 = v17 > 0x2A;
      uint64_t v19 = (1 << v17) & 0x50426810004;
      if (v18 || v19 == 0) {
        break;
      }
    }
LABEL_21:
    sub_2E44A4(*a1, (uint64_t)&v41, &v38);
    sub_6DE780((uint64_t)(a1 + 145), (uint64_t)&v41, (uint64_t *)&v38);
    unsigned int v21 = sub_6CDA8C(v38, v39);
    double v8 = v38;
    if (v39 != v21) {
      long long v39 = v21;
    }
    if (v38 == v21)
    {
      double v8 = v21;
      break;
    }
    long long v22 = *(_OWORD *)v38;
    long long v23 = *((_OWORD *)v38 + 1);
    int v43 = v38[4];
    long long v41 = v22;
    long long v42 = v23;
    unsigned __int16 v25 = *(char **)(a4 + 8);
    unint64_t v24 = *(void *)(a4 + 16);
    if ((unint64_t)v25 < v24)
    {
      long long v11 = *(_OWORD *)v38;
      long long v12 = *((_OWORD *)v38 + 1);
      *((void *)v25 + 4) = v38[4];
      *(_OWORD *)unsigned __int16 v25 = v11;
      *((_OWORD *)v25 + 1) = v12;
      *(void *)(a4 + 8) = v25 + 40;
      if (0xCCCCCCCCCCCCCCCDLL * (v21 - v8) >= 2) {
        goto LABEL_44;
      }
    }
    else
    {
      unsigned __int16 v26 = *(char **)a4;
      unint64_t v27 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)&v25[-*(void *)a4] >> 3);
      unint64_t v28 = v27 + 1;
      if (v27 + 1 > 0x666666666666666) {
        sub_2E00();
      }
      unint64_t v29 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v24 - (void)v26) >> 3);
      if (2 * v29 > v28) {
        unint64_t v28 = 2 * v29;
      }
      if (v29 >= 0x333333333333333) {
        unint64_t v30 = 0x666666666666666;
      }
      else {
        unint64_t v30 = v28;
      }
      if (v30)
      {
        if (v30 > 0x666666666666666) {
          sub_188D718();
        }
        unsigned int v31 = (char *)operator new(40 * v30);
      }
      else
      {
        unsigned int v31 = 0;
      }
      __int16 v32 = &v31[40 * v27];
      long long v33 = v42;
      *(_OWORD *)__int16 v32 = v41;
      *((_OWORD *)v32 + 1) = v33;
      *((void *)v32 + 4) = v43;
      int v34 = v32;
      if (v25 != v26)
      {
        do
        {
          long long v35 = *(_OWORD *)(v25 - 40);
          long long v36 = *(_OWORD *)(v25 - 24);
          *((void *)v34 - 1) = *((void *)v25 - 1);
          *(_OWORD *)(v34 - 24) = v36;
          *(_OWORD *)(v34 - 40) = v35;
          v34 -= 40;
          v25 -= 40;
        }
        while (v25 != v26);
        unsigned __int16 v25 = *(char **)a4;
      }
      int v37 = v32 + 40;
      *(void *)a4 = v34;
      *(void *)(a4 + 8) = v32 + 40;
      *(void *)(a4 + 16) = &v31[40 * v30];
      if (v25)
      {
        operator delete(v25);
        double v8 = v38;
        unsigned int v21 = v39;
      }
      *(void *)(a4 + 8) = v37;
      if (0xCCCCCCCCCCCCCCCDLL * (v21 - v8) >= 2) {
        goto LABEL_44;
      }
    }
  }
  *(void *)(a4 + 8) = *(void *)a4;
LABEL_44:
  if (v8)
  {
    long long v39 = v8;
    operator delete(v8);
  }
}

void sub_6C2F9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_6C2FC0(uint64_t *a1, long long *a2, uint64_t a3, uint64_t *a4, void *a5)
{
  uint64_t v6 = (char *)*a5;
  a5[1] = *a5;
  __p = 0;
  int v45 = 0;
  uint64_t v46 = 0;
  long long v7 = a2[1];
  long long v41 = *a2;
  long long v42 = v7;
  uint64_t v43 = *((void *)a2 + 4);
  if (*a4 >= 1)
  {
    uint64_t v10 = 0;
    uint64_t v11 = (uint64_t)(a1 + 145);
    do
    {
      uint64_t v15 = (unsigned __int16 *)(v41 - *(int *)v41);
      if (*v15 >= 0x2Fu)
      {
        uint64_t v16 = v15[23];
        if (v16)
        {
          unsigned int v17 = *(unsigned __int8 *)(v41 + v16);
          BOOL v18 = v17 > 0x36;
          uint64_t v19 = (1 << v17) & 0x44000000000008;
          if (!v18 && v19 != 0) {
            break;
          }
        }
      }
      sub_2E44A4(*a1, (uint64_t)&v41, &__p);
      sub_6DE780(v11, (uint64_t)&v41, (uint64_t *)&__p);
      if (__p == v45) {
        break;
      }
      long long v22 = *(_OWORD *)__p;
      long long v21 = *((_OWORD *)__p + 1);
      uint64_t v43 = *((void *)__p + 4);
      long long v41 = v22;
      long long v42 = v21;
      long long v23 = (unsigned __int16 *)(v22 - *(int *)v22);
      if (*v23 < 9u)
      {
        uint64_t v25 = 0;
      }
      else
      {
        uint64_t v24 = v23[4];
        if (v24) {
          uint64_t v25 = *(unsigned int *)(v22 + v24);
        }
        else {
          uint64_t v25 = 0;
        }
      }
      unint64_t v26 = *(void *)(a3 + 32);
      if ((v43 & 0xFFFFFFFFFFFFLL) == (v26 & 0xFFFFFFFFFFFFLL)
        && ((v43 & 0xFF000000000000) == 0) != (HIWORD(v26) & 1))
      {
        goto LABEL_38;
      }
      unint64_t v28 = (char *)a5[1];
      unint64_t v27 = a5[2];
      if ((unint64_t)v28 < v27)
      {
        long long v12 = *(_OWORD *)__p;
        long long v13 = *((_OWORD *)__p + 1);
        *((void *)v28 + 4) = *((void *)__p + 4);
        *(_OWORD *)unint64_t v28 = v12;
        *((_OWORD *)v28 + 1) = v13;
        unsigned int v14 = v28 + 40;
      }
      else
      {
        unint64_t v29 = (char *)*a5;
        unint64_t v30 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)&v28[-*a5] >> 3);
        unint64_t v31 = v30 + 1;
        if (v30 + 1 > 0x666666666666666) {
          sub_2E00();
        }
        unint64_t v32 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v27 - (void)v29) >> 3);
        if (2 * v32 > v31) {
          unint64_t v31 = 2 * v32;
        }
        unint64_t v33 = v32 >= 0x333333333333333 ? 0x666666666666666 : v31;
        if (v33)
        {
          if (v33 > 0x666666666666666) {
            sub_188D718();
          }
          int v34 = (char *)operator new(40 * v33);
        }
        else
        {
          int v34 = 0;
        }
        long long v35 = &v34[40 * v30];
        long long v36 = v42;
        *(_OWORD *)long long v35 = v41;
        *((_OWORD *)v35 + 1) = v36;
        *((void *)v35 + 4) = v43;
        int v37 = v35;
        if (v28 != v29)
        {
          do
          {
            long long v38 = *(_OWORD *)(v28 - 40);
            long long v39 = *(_OWORD *)(v28 - 24);
            *((void *)v37 - 1) = *((void *)v28 - 1);
            *(_OWORD *)(v37 - 24) = v39;
            *(_OWORD *)(v37 - 40) = v38;
            v37 -= 40;
            v28 -= 40;
          }
          while (v28 != v29);
          unint64_t v28 = (char *)*a5;
        }
        unsigned int v14 = v35 + 40;
        *a5 = v37;
        a5[1] = v35 + 40;
        a5[2] = &v34[40 * v33];
        if (v28) {
          operator delete(v28);
        }
      }
      v10 += v25;
      a5[1] = v14;
    }
    while (v10 < *a4);
    uint64_t v6 = (char *)*a5;
  }
  a5[1] = v6;
LABEL_38:
  if (__p)
  {
    int v45 = __p;
    operator delete(__p);
  }
}

void sub_6C328C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6C32AC(uint64_t *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_470B40(a2, a3);
  unint64_t v7 = a3 + 1;
  uint64_t v8 = sub_470B40(a2, v7);
  uint64_t v9 = *(int **)(v6 + 8);
  uint64_t v10 = (unsigned __int16 *)((char *)v9 - *v9);
  if (*v10 >= 0x2Fu)
  {
    uint64_t v11 = v10[23];
    if (v11)
    {
      unsigned int v12 = *((unsigned __int8 *)v9 + v11) - 2;
      if (v12 < 0x29 && ((0x14109A04001uLL >> v12) & 1) != 0) {
        goto LABEL_16;
      }
    }
  }
  if ((long long v13 = *(int **)(v8 + 8), v14 = (unsigned __int16 *)((char *)v13 - *v13), *v14 < 0x2Fu)
    || (uint64_t v15 = v14[23]) == 0
    || ((unsigned int v16 = *((unsigned __int8 *)v13 + v15), v17 = v16 > 0x2A, v18 = (1 << v16) & 0x50426810004, !v17)
      ? (BOOL v19 = v18 == 0)
      : (BOOL v19 = 1),
        v19))
  {
LABEL_16:
    char v22 = 0;
  }
  else
  {
    __p = 0;
    long long v54 = 0;
    uint64_t v55 = 0;
    unint64_t v20 = sub_470ADC(a2);
    if (v7 <= v20) {
      unint64_t v21 = v20;
    }
    else {
      unint64_t v21 = v7;
    }
    unint64_t v48 = v21;
    if (v7 >= v20)
    {
LABEL_38:
      char v47 = 0;
    }
    else
    {
      char v47 = 1;
      while (1)
      {
        long long v23 = (unsigned int *)sub_470B40(a2, v7);
        uint64_t v24 = *a1;
        uint64_t v25 = *v23;
        unint64_t v26 = ((unint64_t)(v23[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v23[1] << 32) | v25;
        unint64_t v27 = v26 & 0xFFFFFFFFFFFFLL;
        unint64_t v28 = (int *)sub_2D5D58(*a1, v26 & 0xFFFFFFFFFFFFLL);
        char v29 = BYTE6(v26) ^ 1;
        unint64_t v30 = (v26 ^ 0x1000000000000) >> 32;
        if (*(unsigned char *)(v24 + 7772))
        {
          unint64_t v31 = sub_2DB8E0(v24 + 3896, v25, 0);
          unint64_t v32 = &v31[-*(int *)v31];
          if (*(unsigned __int16 *)v32 < 5u)
          {
            uint64_t v33 = 0;
          }
          else
          {
            uint64_t v33 = *((unsigned __int16 *)v32 + 2);
            if (v33) {
              v33 += (uint64_t)&v31[*(unsigned int *)&v31[v33]];
            }
          }
          int v34 = (int *)(v33 + 4 * (unsigned __int16)v30 + 4 + *(unsigned int *)(v33 + 4 * (unsigned __int16)v30 + 4));
        }
        else
        {
          int v34 = 0;
        }
        long long v35 = (int *)sub_2E5C38(v24, v27, 1);
        v49[0] = v28;
        v49[1] = v34;
        v49[2] = v35;
        v49[3] = v36;
        int v50 = v25;
        __int16 v51 = v30;
        char v52 = v29;
        sub_2E44A4(*a1, (uint64_t)v49, &__p);
        int v37 = (unsigned __int16 *)((char *)v49[0] - *v49[0]);
        if (*v37 < 0x2Fu) {
          break;
        }
        uint64_t v38 = v37[23];
        if (!v38) {
          break;
        }
        unsigned int v39 = *((unsigned __int8 *)v49[0] + v38);
        if (v39 > 0x2A || ((1 << v39) & 0x50426810004) == 0)
        {
          v47 |= v39 == 0;
          int v45 = __p;
          if (__p) {
            goto LABEL_40;
          }
          goto LABEL_41;
        }
        unint64_t v41 = sub_6DE7E0((uint64_t)(a1 + 145), v49, (uint64_t *)&__p, -1);
        if (++v7 < sub_470ADC(a2))
        {
          if (v41 == -1
            || (uint64_t v42 = *(void *)(sub_66F838(&__p, v41) + 32), v43 = (_DWORD *)sub_470B40(a2, v7), *v43 != v42)
            || (int v44 = v43[1], WORD2(v42) != (unsigned __int16)v44)
            || ((v42 & 0xFF000000000000) == 0) != (v44 & 0x20000000u) >> 29)
          {
            char v47 = 0;
          }
        }
        if (v48 == v7) {
          goto LABEL_38;
        }
      }
    }
    int v45 = __p;
    if (__p)
    {
LABEL_40:
      long long v54 = v45;
      operator delete(v45);
    }
LABEL_41:
    char v22 = v47;
  }
  return v22 & 1;
}

void sub_6C35E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6C360C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!*(unsigned char *)(a1 + 712)) {
    return 0;
  }
  if (sub_6C4820(a1, a2, a3, a4)) {
    return 1;
  }
  uint64_t v226 = a5;
  uint64_t v229 = a4;
  uint64_t v11 = (unsigned int *)sub_470B40(a2, a3);
  uint64_t v236 = a1;
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *v11;
  v228 = v11;
  unint64_t v14 = ((unint64_t)(v11[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v11[1] << 32) | v13;
  char v15 = BYTE6(v14) ^ 1;
  unint64_t v16 = (v14 ^ 0x1000000000000) >> 32;
  unint64_t v17 = v14 & 0xFFFFFFFFFFFFLL;
  uint64_t v18 = sub_2D5D58(v12, v14 & 0xFFFFFFFFFFFFLL);
  unint64_t v227 = a3;
  if (*(unsigned char *)(v12 + 7772))
  {
    BOOL v19 = sub_2DB8E0(v12 + 3896, v13, 0);
    unint64_t v20 = &v19[-*(int *)v19];
    if (*(unsigned __int16 *)v20 < 5u)
    {
      uint64_t v21 = 0;
    }
    else
    {
      uint64_t v21 = *((unsigned __int16 *)v20 + 2);
      if (v21) {
        v21 += (uint64_t)&v19[*(unsigned int *)&v19[v21]];
      }
    }
    uint64_t v22 = v21 + 4 * (unsigned __int16)v16 + 4 + *(unsigned int *)(v21 + 4 * (unsigned __int16)v16 + 4);
  }
  else
  {
    uint64_t v22 = 0;
  }
  *(void *)&long long v248 = v18;
  *((void *)&v248 + 1) = v22;
  *(void *)&long long v249 = sub_2E5C38(v12, v17, 1);
  *((void *)&v249 + 1) = v23;
  LODWORD(v250) = v13;
  WORD2(v250) = v16;
  BYTE6(v250) = v15;
  v247[0] = (uint64_t *)v236;
  v247[1] = (uint64_t *)&v248;
  sub_46FF18();
  uint64_t v25 = v24;
  unint64_t v27 = v26;
  sub_46FF18();
  unint64_t v235 = v28;
  unint64_t v30 = v29;
  sub_46B058();
  v233 = v31;
  uint64_t v33 = v32;
  sub_46B058();
  BOOL v237 = 0;
  uint64_t v34 = v33 + v227;
  *(void *)&long long v244 = v35;
  for (*((void *)&v244 + 1) = v227 + 1 + v36; ; ++*((void *)&v244 + 1))
  {
    sub_46FF18();
    unsigned int v39 = v37;
    unint64_t v40 = v38;
    if ((void)v244)
    {
      unint64_t v41 = *((void *)&v244 + 1);
      unint64_t v42 = sub_470ADC((void *)v244);
      unint64_t v43 = v42;
      if (v39)
      {
        BOOL v44 = v41 < v42;
        unint64_t v45 = sub_470ADC(v39);
        if (v40 < v45 && v44)
        {
          uint64_t v47 = sub_470B40((void *)v244, *((uint64_t *)&v244 + 1));
          if (v47 == sub_470B40(v39, v40)) {
            goto LABEL_68;
          }
        }
        else if (v41 < v43 == v40 < v45)
        {
          goto LABEL_68;
        }
      }
      else if (v41 >= v42)
      {
        goto LABEL_68;
      }
    }
    else if (!v37 || v38 >= sub_470ADC(v37))
    {
      goto LABEL_68;
    }
    unint64_t v48 = *(int **)(sub_470B40((void *)v244, *((uint64_t *)&v244 + 1)) + 8);
    uint64_t v49 = (unsigned __int16 *)((char *)v48 - *v48);
    if (*v49 >= 0x2Fu)
    {
      uint64_t v50 = v49[23];
      if (v50)
      {
        unsigned int v51 = *((unsigned __int8 *)v48 + v50);
        BOOL v52 = v51 > 0x36;
        uint64_t v53 = (1 << v51) & 0x44000000000008;
        if (!v52 && v53 != 0) {
          return 0;
        }
      }
    }
    uint64_t v55 = (unsigned int *)sub_470B40((void *)v244, *((uint64_t *)&v244 + 1));
    uint64_t v56 = *(void *)v236;
    uint64_t v57 = *v55;
    unint64_t v58 = v57 | ((unint64_t)*((unsigned __int16 *)v55 + 2) << 32);
    uint64_t v59 = (int *)sub_2D5D58(*(void *)v236, v58);
    if (*(unsigned char *)(v56 + 7772)) {
      sub_2DB8E0(v56 + 3896, v57, 0);
    }
    sub_2E5C38(v56, v58, 1);
    long long v60 = (unsigned __int16 *)((char *)v59 - *v59);
    if (*v60 >= 0x2Fu && (uint64_t v61 = v60[23]) != 0 && *((unsigned char *)v59 + v61) == 14)
    {
      BOOL v62 = 1;
      if (!v237) {
        goto LABEL_40;
      }
    }
    else
    {
      BOOL v62 = sub_6C4DB0(v247, (void **)&v244);
      if (!v237)
      {
LABEL_40:
        BOOL v237 = sub_6C4DB0(v247, (void **)&v244);
        goto LABEL_43;
      }
    }
    BOOL v237 = 1;
LABEL_43:
    sub_46FF18();
    double v64 = v63;
    unint64_t v66 = v65;
    if (v25)
    {
      BOOL v67 = v27 < sub_470ADC(v25);
      if (!v64) {
        goto LABEL_51;
      }
    }
    else
    {
      BOOL v67 = 0;
      if (!v63)
      {
LABEL_51:
        BOOL v69 = 0;
        goto LABEL_52;
      }
    }
    unint64_t v68 = sub_470ADC(v64);
    BOOL v69 = v66 < v68;
    if (v66 < v68 && v67)
    {
      uint64_t v71 = sub_470B40(v25, v27);
      int v72 = v71 == sub_470B40(v64, v66);
      goto LABEL_53;
    }
LABEL_52:
    int v72 = v67 ^ v69 ^ 1;
LABEL_53:
    if ((v72 & v62) != 0)
    {
      unint64_t v27 = *((void *)&v244 + 1);
      uint64_t v25 = (void *)v244;
    }
    sub_46FF18();
    uint64_t v74 = v73;
    unint64_t v76 = v75;
    if (v30)
    {
      BOOL v77 = v235 < sub_470ADC(v30);
      if (!v74) {
        goto LABEL_64;
      }
    }
    else
    {
      BOOL v77 = 0;
      if (!v73)
      {
LABEL_64:
        BOOL v79 = 0;
        goto LABEL_65;
      }
    }
    unint64_t v78 = sub_470ADC(v74);
    BOOL v79 = v76 < v78;
    if (v76 < v78 && v77)
    {
      uint64_t v81 = sub_470B40(v30, v235);
      if (v81 != sub_470B40(v74, v76) || v62) {
        goto LABEL_12;
      }
      goto LABEL_66;
    }
LABEL_65:
    if ((v77 ^ v79 | v62)) {
      goto LABEL_12;
    }
LABEL_66:
    int v82 = (unsigned int *)sub_470B40((void *)v244, *((uint64_t *)&v244 + 1));
    if ((sub_664888(v236 + 3048, v82) & 1) == 0) {
      break;
    }
LABEL_12:
    uint64_t v34 = *((void *)&v244 + 1);
    v233 = (void *)v244;
  }
  unint64_t v235 = *((void *)&v244 + 1);
  unint64_t v30 = (void *)v244;
LABEL_68:
  sub_46FF18();
  BOOL v85 = v83;
  unint64_t v86 = v84;
  if (v25)
  {
    unint64_t v87 = sub_470ADC(v25);
    unint64_t v88 = v87;
    if (v85)
    {
      BOOL v89 = v27 < v87;
      unint64_t v90 = sub_470ADC(v85);
      if (v86 < v90 && v89)
      {
        uint64_t v92 = sub_470B40(v25, v27);
        if (v92 == sub_470B40(v85, v86)) {
          goto LABEL_115;
        }
      }
      else if (v27 < v88 == v86 < v90)
      {
        goto LABEL_115;
      }
LABEL_82:
      sub_46FF18();
      long long v95 = v93;
      unint64_t v96 = v94;
      if (v30)
      {
        unint64_t v97 = sub_470ADC(v30);
        unint64_t v98 = v97;
        if (v95)
        {
          BOOL v99 = v235 < v97;
          unint64_t v100 = sub_470ADC(v95);
          if (v96 < v100 && v99)
          {
            uint64_t v102 = sub_470B40(v30, v235);
            if (v102 != sub_470B40(v95, v96)) {
              goto LABEL_115;
            }
          }
          else if (v235 < v98 != v96 < v100)
          {
            goto LABEL_115;
          }
LABEL_96:
          uint64_t v103 = *(void *)v236;
          uint64_t v104 = *v228;
          unint64_t v105 = ((unint64_t)(v228[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v228[1] << 32) | v104;
          unint64_t v106 = v105 & 0xFFFFFFFFFFFFLL;
          uint64_t v224 = sub_2D5D58(*(void *)v236, v105 & 0xFFFFFFFFFFFFLL);
          char v107 = BYTE6(v105) ^ 1;
          unint64_t v230 = (v105 ^ 0x1000000000000) >> 32;
          if (*(unsigned char *)(v103 + 7772))
          {
            uint64_t v108 = sub_2DB8E0(v103 + 3896, v104, 0);
            int v109 = &v108[-*(int *)v108];
            if (*(unsigned __int16 *)v109 < 5u)
            {
              uint64_t v110 = 0;
            }
            else
            {
              uint64_t v110 = *((unsigned __int16 *)v109 + 2);
              if (v110) {
                v110 += (uint64_t)&v108[*(unsigned int *)&v108[v110]];
              }
            }
            uint64_t v111 = v110 + 4 * (unsigned __int16)v230 + 4 + *(unsigned int *)(v110 + 4 * (unsigned __int16)v230 + 4);
          }
          else
          {
            uint64_t v111 = 0;
          }
          uint64_t v112 = sub_2E5C38(v103, v106, 1);
          *(void *)&long long v244 = v224;
          *((void *)&v244 + 1) = v111;
          *(void *)&long long v245 = v112;
          *((void *)&v245 + 1) = v113;
          LODWORD(v246) = v104;
          WORD2(v246) = v230;
          BYTE6(v246) = v107;
          uint64_t v114 = (unsigned int *)sub_470B40(v233, v34);
          uint64_t v115 = *(void *)v236;
          uint64_t v116 = *v114;
          unint64_t v117 = ((unint64_t)(v114[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v114[1] << 32) | v116;
          unint64_t v118 = v117 & 0xFFFFFFFFFFFFLL;
          uint64_t v225 = sub_2D5D58(*(void *)v236, v117 & 0xFFFFFFFFFFFFLL);
          char v119 = BYTE6(v117) ^ 1;
          unint64_t v231 = (v117 ^ 0x1000000000000) >> 32;
          if (*(unsigned char *)(v115 + 7772))
          {
            uint64_t v120 = sub_2DB8E0(v115 + 3896, v116, 0);
            long long v121 = &v120[-*(int *)v120];
            if (*(unsigned __int16 *)v121 < 5u)
            {
              uint64_t v122 = 0;
            }
            else
            {
              uint64_t v122 = *((unsigned __int16 *)v121 + 2);
              if (v122) {
                v122 += (uint64_t)&v120[*(unsigned int *)&v120[v122]];
              }
            }
            uint64_t v123 = v122 + 4 * (unsigned __int16)v231 + 4 + *(unsigned int *)(v122 + 4 * (unsigned __int16)v231 + 4);
          }
          else
          {
            uint64_t v123 = 0;
          }
          uint64_t v124 = sub_2E5C38(v115, v118, 1);
          *(void *)&long long __src = v225;
          *((void *)&__src + 1) = v123;
          *(void *)&long long v252 = v124;
          *((void *)&v252 + 1) = v125;
          LODWORD(v253) = v116;
          WORD2(v253) = v231;
          BYTE6(v253) = v119;
          int v126 = sub_35E640();
          if (v126) {
            unint64_t v30 = v233;
          }
          unint64_t v127 = v235;
          if (v126) {
            unint64_t v127 = v34;
          }
          unint64_t v235 = v127;
        }
        else if (v235 >= v97)
        {
          goto LABEL_96;
        }
      }
      else if (!v93 || v94 >= sub_470ADC(v93))
      {
        goto LABEL_96;
      }
    }
    else if (v27 < v87)
    {
      goto LABEL_82;
    }
  }
  else if (v83 && v84 < sub_470ADC(v83))
  {
    goto LABEL_82;
  }
LABEL_115:
  sub_46FF18();
  uint64_t v130 = v128;
  unint64_t v131 = v129;
  if (!v25)
  {
    if (v128 && v129 < sub_470ADC(v128)) {
      goto LABEL_129;
    }
    return 0;
  }
  unint64_t v132 = sub_470ADC(v25);
  unint64_t v133 = v132;
  if (!v130)
  {
    if (v27 < v132) {
      goto LABEL_129;
    }
    return 0;
  }
  BOOL v134 = v27 < v132;
  unint64_t v135 = sub_470ADC(v130);
  if (v131 < v135 && v134)
  {
    uint64_t v137 = sub_470B40(v25, v27);
    if (v137 == sub_470B40(v130, v131)) {
      return 0;
    }
  }
  else if (v27 < v133 == v131 < v135)
  {
    return 0;
  }
LABEL_129:
  sub_46FF18();
  long long v139 = v138;
  unint64_t v141 = v140;
  if (v30)
  {
    int v142 = v235 < sub_470ADC(v30);
    if (v139) {
      goto LABEL_131;
    }
LABEL_138:
    int v144 = 0;
    goto LABEL_139;
  }
  int v142 = 0;
  if (!v138) {
    goto LABEL_138;
  }
LABEL_131:
  unint64_t v143 = sub_470ADC(v139);
  int v144 = v141 < v143;
  if (v141 < v143) {
    int v145 = v142;
  }
  else {
    int v145 = 0;
  }
  if (v145 == 1)
  {
    uint64_t v146 = sub_470B40(v30, v235);
    uint64_t v147 = sub_470B40(v139, v141);
    uint64_t v10 = 0;
    if (v146 == v147) {
      return v10;
    }
LABEL_140:
    if (v27 < v235)
    {
      sub_46B058();
      uint64_t v149 = v148;
      long long v150 = (long long *)sub_470B40(v30, v235);
      long long v151 = *v150;
      long long v152 = v150[2];
      long long v245 = v150[1];
      long long v246 = v152;
      long long v244 = v151;
      uint64_t v153 = *(void *)v236;
      uint64_t v154 = (unsigned int *)sub_470B40(v30, v235);
      sub_6921A0(v153, (((unint64_t)(v154[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v154[1] << 32) | *v154) ^ 0x1000000000000, 1, 1, (uint64_t)&v241);
      uint64_t v239 = 0;
      uint64_t v240 = 0;
      unint64_t v155 = sub_470ADC(a2);
      if (v227 <= v155) {
        unint64_t v156 = v155;
      }
      else {
        unint64_t v156 = v227;
      }
      unint64_t v234 = v156;
      if (v155 > v227)
      {
        uint64_t v157 = 0;
        LOBYTE(v158) = 0;
        uint64_t v232 = v235 - v149;
        double v159 = 0.0;
        unint64_t v160 = v227;
        while (1)
        {
          v161 = (unsigned int *)sub_470B40(a2, v160);
          __p[0] = (void *)((((unint64_t)(v161[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v161[1] << 32) | *v161) ^ 0x1000000000000);
          sub_2D5B74((char **)v229, __p);
          if (v158)
          {
            int v158 = 1;
          }
          else
          {
            uint64_t v162 = *(void *)v236;
            uint64_t v163 = *v161;
            unint64_t v164 = ((unint64_t)(v161[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v161[1] << 32) | v163;
            unint64_t v165 = v164 & 0xFFFFFFFFFFFFLL;
            uint64_t v166 = sub_2D5D58(*(void *)v236, v164 & 0xFFFFFFFFFFFFLL);
            int v167 = HIDWORD(v164) ^ 0x10000;
            if (*(unsigned char *)(v162 + 7772))
            {
              v168 = sub_2DB8E0(v162 + 3896, v163, 0);
              v169 = &v168[-*(int *)v168];
              if (*(unsigned __int16 *)v169 < 5u)
              {
                uint64_t v170 = 0;
              }
              else
              {
                uint64_t v170 = *((unsigned __int16 *)v169 + 2);
                if (v170) {
                  v170 += (uint64_t)&v168[*(unsigned int *)&v168[v170]];
                }
              }
              uint64_t v171 = v170
                   + 4 * (unsigned __int16)v167
                   + 4
                   + *(unsigned int *)(v170 + 4 * (unsigned __int16)v167 + 4);
            }
            else
            {
              uint64_t v171 = 0;
            }
            uint64_t v172 = sub_2E5C38(v162, v165, 1);
            *(void *)&long long __src = v166;
            *((void *)&__src + 1) = v171;
            *(void *)&long long v252 = v172;
            *((void *)&v252 + 1) = v173;
            LODWORD(v253) = v163;
            WORD2(v253) = v167;
            BYTE6(v253) = BYTE2(v167);
            int v158 = sub_6DEDE8(v236 + 1160, (int **)&__src) ^ 1;
          }
          if (v232 == v160) {
            goto LABEL_215;
          }
          unint64_t v174 = sub_470ADC(a2);
          double v175 = 0.0;
          if (v160 < v174 - 1) {
            break;
          }
LABEL_180:
          double v190 = fabs(v175);
          if (v190 >= v159) {
            double v159 = v190;
          }
          v191 = (int *)*((void *)v228 + 1);
          v192 = (unsigned __int16 *)((char *)v191 - *v191);
          unsigned int v193 = *v192;
          if (*((unsigned char *)v228 + 46))
          {
            if (v193 >= 0x49)
            {
              unsigned int v194 = v192[36];
              uint64_t v195 = v236;
              if (v194) {
                goto LABEL_185;
              }
LABEL_191:
              __int16 v196 = -1;
              v197 = (int *)*((void *)v161 + 1);
              v198 = (unsigned __int16 *)((char *)v197 - *v197);
              unsigned int v199 = *v198;
              if (!*((unsigned char *)v161 + 46)) {
                goto LABEL_186;
              }
              goto LABEL_194;
            }
          }
          else if (v193 >= 0x4B)
          {
            unsigned int v194 = v192[37];
            uint64_t v195 = v236;
            if (v194)
            {
LABEL_185:
              __int16 v196 = *(_WORD *)((char *)v191 + v194);
              v197 = (int *)*((void *)v161 + 1);
              v198 = (unsigned __int16 *)((char *)v197 - *v197);
              unsigned int v199 = *v198;
              if (!*((unsigned char *)v161 + 46)) {
                goto LABEL_186;
              }
              goto LABEL_194;
            }
            goto LABEL_191;
          }
          __int16 v196 = -1;
          uint64_t v195 = v236;
          v197 = (int *)*((void *)v161 + 1);
          v198 = (unsigned __int16 *)((char *)v197 - *v197);
          unsigned int v199 = *v198;
          if (!*((unsigned char *)v161 + 46))
          {
LABEL_186:
            if (v199 < 0x49) {
              goto LABEL_197;
            }
            unsigned int v200 = v198[36];
            if (!v200) {
              goto LABEL_197;
            }
            goto LABEL_196;
          }
LABEL_194:
          if (v199 < 0x4B || (unsigned int v200 = v198[37]) == 0)
          {
LABEL_197:
            int v201 = 0xFFFF;
            goto LABEL_198;
          }
LABEL_196:
          int v201 = *(unsigned __int16 *)((char *)v197 + v200);
LABEL_198:
          unsigned __int16 v202 = v196 + 18000;
          unsigned __int16 v203 = v196 - 18000;
          if ((unsigned __int16)(v202 >> 5) < 0x465u) {
            unsigned __int16 v203 = v202;
          }
          int v204 = v201 - v203;
          if (v204 > 18000) {
            v204 -= 36000;
          }
          if (v204 < -17999) {
            v204 += 36000;
          }
          int16x4_t v205 = (int16x4_t)0x4059000000000000;
          double v206 = fabs((double)v204 / 100.0);
          v205.i16[0] = *(_WORD *)(v195 + 744);
          if (v206 >= (double)vmovl_s16(v205).i32[0]) {
            uint64_t v207 = sub_470F2C(a2, v160, v206);
          }
          else {
            uint64_t v207 = 0;
          }
          v240 += v207;
          if (LODWORD(__p[0]) == v250
            && WORD2(__p[0]) == WORD2(v250)
            && ((v250 & 0x1000000000000) == 0) == (BYTE6(__p[0]) == 0))
          {
            uint64_t v208 = 0;
          }
          else
          {
            uint64_t v208 = sub_470F2C(a2, v160, v206);
          }
          v157 += v208;
          uint64_t v239 = v157;
          if (v234 == ++v160) {
            goto LABEL_215;
          }
        }
        uint64_t v176 = sub_470B40(a2, v160 + 1);
        v177 = (int *)*((void *)v161 + 1);
        v178 = (unsigned __int16 *)((char *)v177 - *v177);
        unsigned int v179 = *v178;
        if (*((unsigned char *)v161 + 46))
        {
          if (v179 < 0x49) {
            goto LABEL_168;
          }
          unsigned int v180 = v178[36];
          if (!v180) {
            goto LABEL_168;
          }
LABEL_164:
          __int16 v181 = *(_WORD *)((char *)v177 + v180);
          v182 = *(int **)(v176 + 8);
          v183 = (unsigned __int16 *)((char *)v182 - *v182);
          unsigned int v184 = *v183;
          if (!*(unsigned char *)(v176 + 46)) {
            goto LABEL_165;
          }
LABEL_169:
          if (v184 >= 0x4B)
          {
            unsigned int v185 = v183[37];
            if (v185) {
              goto LABEL_171;
            }
          }
LABEL_172:
          int v186 = 0xFFFF;
        }
        else
        {
          if (v179 >= 0x4B)
          {
            unsigned int v180 = v178[37];
            if (v180) {
              goto LABEL_164;
            }
          }
LABEL_168:
          __int16 v181 = -1;
          v182 = *(int **)(v176 + 8);
          v183 = (unsigned __int16 *)((char *)v182 - *v182);
          unsigned int v184 = *v183;
          if (*(unsigned char *)(v176 + 46)) {
            goto LABEL_169;
          }
LABEL_165:
          if (v184 < 0x49) {
            goto LABEL_172;
          }
          unsigned int v185 = v183[36];
          if (!v185) {
            goto LABEL_172;
          }
LABEL_171:
          int v186 = *(unsigned __int16 *)((char *)v182 + v185);
        }
        unsigned __int16 v187 = v181 + 18000;
        unsigned __int16 v188 = v181 - 18000;
        if ((unsigned __int16)(v187 >> 5) < 0x465u) {
          unsigned __int16 v188 = v187;
        }
        int v189 = v186 - v188;
        if (v189 > 18000) {
          v189 -= 36000;
        }
        if (v189 < -17999) {
          v189 += 36000;
        }
        double v175 = (double)v189 / 100.0;
        goto LABEL_180;
      }
      int v158 = 0;
      double v159 = 0.0;
LABEL_215:
      v209 = (void *)(v226 + 80);
      if (sub_6C4F8C(v236, v228, (unsigned int *)&v244, &v240, v159))
      {
        *(_DWORD *)(v229 + 24) = 3;
        uint64_t v210 = *(void *)(sub_5A7C34(v209, *(void *)(v226 + 104)) + 32);
        if (v243 == v210
          && WORD2(v243) == WORD2(v210)
          && !(((v210 & 0x1000000000000) == 0) ^ (BYTE6(v243) == 0) | v158 & 1))
        {
          sub_6BF228(v236, a2, v227, (int **)v226, v229, 1);
          v211 = (unsigned __int16 *)(*((void *)&v248 + 1) - (int)**((_DWORD **)&v248 + 1));
          double v212 = 0.0;
          double v213 = 0.0;
          if (*v211 >= 0x13u)
          {
            uint64_t v214 = v211[9];
            if (v214)
            {
              LOWORD(v213) = *(_WORD *)(*((void *)&v248 + 1) + v214);
              double v213 = (double)*(unint64_t *)&v213;
            }
          }
          v215 = (unsigned __int16 *)(*((void *)&v241 + 1) - (int)**((_DWORD **)&v241 + 1));
          if (*v215 < 0x13u)
          {
            uint64_t v217 = v229;
            uint64_t v218 = v236;
          }
          else
          {
            uint64_t v216 = v215[9];
            uint64_t v217 = v229;
            uint64_t v218 = v236;
            if (v216)
            {
              LOWORD(v212) = *(_WORD *)(*((void *)&v241 + 1) + v216);
              double v212 = (double)*(unint64_t *)&v212;
            }
          }
          if (v213 >= v212) {
            double v212 = v213;
          }
          LODWORD(v213) = *(_DWORD *)(v218 + 716);
          int v223 = *(_DWORD *)(v217 + 24);
          if (v212 > (double)*(unint64_t *)&v213) {
            int v223 = 3;
          }
          *(_DWORD *)(v217 + 24) = v223;
          *(void *)(v229 + 176) = sub_6C02B4((uint64_t *)v218, v217);
        }
        long long __src = v241;
        long long v252 = v242;
        unint64_t v253 = v243;
        uint64_t v10 = 1;
        sub_4721B0((void *)(v236 + 144), (char *)&__src, (char *)v254, 1uLL);
        *(void *)(v236 + 168) = 0;
        *(_DWORD *)(v236 + 176) = 4;
        *(unsigned char *)(v229 + 168) = 1;
        return v10;
      }
      if (!sub_8DC460(v236, (int **)&v248, (int **)&v241))
      {
        sub_693CB0(v229);
        return 0;
      }
      sub_6921A0(*(void *)v236, v243, 1, 1, (uint64_t)&__src);
      if (sub_69C254(v236, (int **)&v248, (int **)&__src))
      {
        *(_DWORD *)(v229 + 24) = 4;
        goto LABEL_228;
      }
      if (((v237 | v158) & 1) != 0
        || (unint64_t v221 = *(void *)(sub_5A7C34(v209, *(void *)(v226 + 104)) + 32), v243 != v221)
        || WORD2(v243) != WORD2(v221)
        || (HIWORD(v221) & 1) == (BYTE6(v243) == 0))
      {
        long long __src = v241;
        long long v252 = v242;
        unint64_t v253 = v243;
        sub_6A0AA4(__p, &__src, 1uLL);
        uint64_t v219 = v236;
        *(_DWORD *)(v229 + 24) = sub_69813C(v236, (int **)&v248, __p, 0, 0xFFFFFFFFFFFFFFFFLL);
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }
      }
      else
      {
        sub_6BF228(v236, a2, v227, (int **)v226, v229, 1);
        *(void *)(v229 + 176) = sub_6C02B4((uint64_t *)v236, v229);
LABEL_228:
        uint64_t v219 = v236;
      }
      *(_DWORD *)(v219 + 176) = 4;
      if (v237)
      {
        v222 = (unsigned int *)sub_470B40(a2, v227 + 1);
        sub_6B7AD0((uint64_t *)v236, v222, (uint64_t)&__src);
        uint64_t v219 = v236;
      }
      else
      {
        long long __src = v248;
        long long v252 = v249;
        unint64_t v253 = v250;
      }
      *(unsigned char *)(v229 + 168) = sub_8DC2FC(v219, &v248, (int **)&__src, (int **)&v241);
      return 1;
    }
  }
  else
  {
LABEL_139:
    uint64_t v10 = 0;
    if (v142 != v144) {
      goto LABEL_140;
    }
  }
  return v10;
}

void sub_6C47F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22)
{
  if (__p)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6C4820(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  if (!*(unsigned char *)(a1 + 859)) {
    return 0;
  }
  unint64_t v7 = (uint64_t *)a1;
  uint64_t v8 = (unsigned int *)sub_470B40(a2, a3);
  uint64_t v9 = (int *)*v7;
  unint64_t v10 = sub_2E68E8(*v7, (((unint64_t)(v8[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v8[1] << 32) | *v8) ^ 0x1000000000000);
  sub_3BDB4C(v9, v10, &__p);
  uint64_t v11 = v76;
  if ((v76 & 0x80u) != 0) {
    uint64_t v11 = v75;
  }
  if (v11)
  {
    __s1 = (void *)((((unint64_t)(v8[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v8[1] << 32) | *v8) ^ 0x1000000000000);
    sub_2D5B74((char **)a4, &__s1);
    unint64_t v12 = sub_470ADC(a2);
    unint64_t v69 = a3 + 1;
    if (a3 + 1 > v12) {
      unint64_t v13 = a3 + 1;
    }
    else {
      unint64_t v13 = v12;
    }
    unint64_t v70 = v13;
    if (a3 + 1 < v12)
    {
      uint64_t v14 = 0;
      unint64_t v15 = a3 + 1;
      unint64_t v68 = v8;
      while (1)
      {
        unint64_t v16 = (unsigned int *)sub_470B40(a2, v15);
        __s1 = (void *)((((unint64_t)(v16[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v16[1] << 32) | *v16) ^ 0x1000000000000);
        uint64_t v17 = a4;
        sub_2D5B74((char **)a4, &__s1);
        uint64_t v18 = v7;
        uint64_t v19 = *v7;
        uint64_t v20 = *v16;
        unint64_t v21 = v20 | ((unint64_t)*((unsigned __int16 *)v16 + 2) << 32);
        uint64_t v22 = (int *)sub_2D5D58(v19, v21);
        if (*(unsigned char *)(v19 + 7772)) {
          sub_2DB8E0(v19 + 3896, v20, 0);
        }
        sub_2E5C38(v19, v21, 1);
        if (v14 > v18[92])
        {
          uint64_t v30 = 0;
          *(void *)(v17 + 8) = *(void *)v17;
          *(void *)(v17 + 48) = *(void *)(v17 + 40);
          *(void *)&long long v40 = -1;
          *((void *)&v40 + 1) = -1;
          *(_OWORD *)(v17 + 72) = v40;
          *(_OWORD *)(v17 + 88) = v40;
          *(_OWORD *)(v17 + 104) = v40;
          *(void *)(v17 + 120) = -1;
          *(void *)(v17 + 136) = -1;
          *(_DWORD *)(v17 + 24) = 0;
          *(_DWORD *)(v17 + 64) = 0;
          *(_DWORD *)(v17 + 128) = 0;
          *(_DWORD *)(v17 + 144) = 0;
          *(_OWORD *)(v17 + 152) = xmmword_20E2060;
          *(_WORD *)(v17 + 168) = 0;
          *(unsigned char *)(v17 + 170) = 0;
          *(void *)(v17 + 176) = 0;
          *(unsigned char *)(v17 + 188) = 0;
          *(unsigned char *)(v17 + 190) = 0;
          if (((char)v76 & 0x80000000) == 0) {
            return v30;
          }
          goto LABEL_82;
        }
        unint64_t v7 = v18;
        uint64_t v24 = (unsigned __int16 *)((char *)v22 - *v22);
        a4 = v17;
        if (*v24 < 0x2Fu) {
          break;
        }
        uint64_t v25 = v24[23];
        if (!v25) {
          break;
        }
        unsigned int v26 = *((unsigned __int8 *)v22 + v25);
        BOOL v27 = v26 > 0x2A;
        uint64_t v28 = (1 << v26) & 0x50400004000;
        if (v27 || v28 == 0) {
          break;
        }
        v14 += sub_470F2C(a2, v15++, v23);
        if (v70 == v15) {
          goto LABEL_81;
        }
      }
      unint64_t v31 = (int *)*v18;
      unint64_t v32 = sub_2E68E8(*v18, (((unint64_t)(v16[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v16[1] << 32) | *v16) ^ 0x1000000000000);
      sub_3BDB4C(v31, v32, &__s1);
      if ((v73 & 0x80u) == 0) {
        size_t v33 = v73;
      }
      else {
        size_t v33 = __n;
      }
      uint64_t v34 = v76;
      if ((v76 & 0x80u) != 0) {
        uint64_t v34 = v75;
      }
      if (v33 == v34)
      {
        if ((v76 & 0x80u) == 0) {
          p_p = (unsigned __int8 *)&__p;
        }
        else {
          p_p = (unsigned __int8 *)__p;
        }
        uint64_t v36 = v68;
        if ((v73 & 0x80) != 0)
        {
          unsigned int v39 = __s1;
          if (memcmp(__s1, p_p, __n)) {
            unint64_t v15 = -1;
          }
          goto LABEL_46;
        }
        if (v73)
        {
          p_s1 = &__s1;
          uint64_t v38 = v73;
          while (*(unsigned __int8 *)p_s1 == *p_p)
          {
            p_s1 = (void **)((char *)p_s1 + 1);
            ++p_p;
            if (!--v38) {
              goto LABEL_40;
            }
          }
          unint64_t v15 = -1;
          if ((v73 & 0x80) != 0)
          {
LABEL_41:
            unsigned int v39 = __s1;
LABEL_46:
            operator delete(v39);
          }
        }
      }
      else
      {
        unint64_t v15 = -1;
        uint64_t v36 = v68;
LABEL_40:
        if ((v73 & 0x80) != 0) {
          goto LABEL_41;
        }
      }
      if (v15 == -1 || v15 <= v69) {
        goto LABEL_81;
      }
      uint64_t v41 = sub_470B40(a2, v15);
      unint64_t v42 = (int *)*((void *)v36 + 1);
      unint64_t v43 = (unsigned __int16 *)((char *)v42 - *v42);
      unsigned int v44 = *v43;
      if (*((unsigned char *)v36 + 46))
      {
        if (v44 < 0x49 || (unsigned int v45 = v43[36]) == 0)
        {
LABEL_56:
          __int16 v46 = -1;
LABEL_57:
          uint64_t v47 = *(int **)(v41 + 8);
          unint64_t v48 = (unsigned __int16 *)((char *)v47 - *v47);
          unsigned int v49 = *v48;
          if (*(unsigned char *)(v41 + 46))
          {
            if (v49 < 0x4B || (unsigned int v50 = v48[37]) == 0)
            {
LABEL_64:
              int v51 = 0xFFFF;
              goto LABEL_65;
            }
          }
          else
          {
            if (v49 < 0x49) {
              goto LABEL_64;
            }
            unsigned int v50 = v48[36];
            if (!v50) {
              goto LABEL_64;
            }
          }
          int v51 = *(unsigned __int16 *)((char *)v47 + v50);
LABEL_65:
          unsigned __int16 v52 = v46 + 18000;
          unsigned __int16 v53 = v46 - 18000;
          if ((unsigned __int16)(v52 >> 5) < 0x465u) {
            unsigned __int16 v53 = v52;
          }
          int v54 = v51 - v53;
          if (v54 > 18000) {
            v54 -= 36000;
          }
          if (v54 < -17999) {
            v54 += 36000;
          }
          int16x4_t v55 = (int16x4_t)0x4059000000000000;
          double v56 = fabs((double)v54 / 100.0);
          unsigned int v57 = v36[1];
          int v58 = v57 & 0x40000000;
          unsigned int v59 = v57 >> 31;
          unsigned int v60 = *(_DWORD *)(v41 + 4);
          int v61 = v60 & 0x40000000;
          unsigned int v62 = v60 >> 31;
          v55.i16[0] = *((_WORD *)v18 + 372);
          if (v56 >= (double)vmovl_s16(v55).i32[0] || v61 != 0 || v58 != 0 || v59 != v62) {
            goto LABEL_81;
          }
          *(_DWORD *)(v17 + 24) = 0;
          uint64_t v30 = 1;
          if (((char)v76 & 0x80000000) == 0) {
            return v30;
          }
          goto LABEL_82;
        }
      }
      else
      {
        if (v44 < 0x4B) {
          goto LABEL_56;
        }
        unsigned int v45 = v43[37];
        if (!v45) {
          goto LABEL_56;
        }
      }
      __int16 v46 = *(_WORD *)((char *)v42 + v45);
      goto LABEL_57;
    }
LABEL_81:
    uint64_t v30 = 0;
    *(void *)(a4 + 8) = *(void *)a4;
    *(void *)(a4 + 48) = *(void *)(a4 + 40);
    *(void *)&long long v66 = -1;
    *((void *)&v66 + 1) = -1;
    *(_OWORD *)(a4 + 72) = v66;
    *(_OWORD *)(a4 + 88) = v66;
    *(_OWORD *)(a4 + 104) = v66;
    *(void *)(a4 + 120) = -1;
    *(void *)(a4 + 136) = -1;
    *(_DWORD *)(a4 + 24) = 0;
    *(_DWORD *)(a4 + 64) = 0;
    *(_DWORD *)(a4 + 128) = 0;
    *(_DWORD *)(a4 + 144) = 0;
    *(_OWORD *)(a4 + 152) = xmmword_20E2060;
    *(_WORD *)(a4 + 168) = 0;
    *(unsigned char *)(a4 + 170) = 0;
    *(void *)(a4 + 176) = 0;
    *(unsigned char *)(a4 + 188) = 0;
    *(unsigned char *)(a4 + 190) = 0;
    if ((char)v76 < 0) {
LABEL_82:
    }
      operator delete(__p);
  }
  else
  {
    uint64_t v30 = 0;
    if ((char)v76 < 0) {
      goto LABEL_82;
    }
  }
  return v30;
}

void sub_6C4D78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_6C4DB0(uint64_t **a1, void **a2)
{
  unint64_t v4 = *a1;
  uint64_t v5 = **a1;
  uint64_t v6 = (unsigned int *)sub_470B40(*a2, (uint64_t)a2[1]);
  uint64_t v7 = *v6;
  unint64_t v8 = ((unint64_t)(v6[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v6[1] << 32) | v7;
  char v9 = BYTE6(v8) ^ 1;
  unint64_t v10 = (v8 ^ 0x1000000000000) >> 32;
  unint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
  unint64_t v12 = (int *)sub_2D5D58(v5, v8 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v5 + 7772))
  {
    unint64_t v13 = sub_2DB8E0(v5 + 3896, v7, 0);
    uint64_t v14 = &v13[-*(int *)v13];
    if (*(unsigned __int16 *)v14 < 5u)
    {
      uint64_t v15 = 0;
    }
    else
    {
      uint64_t v15 = *((unsigned __int16 *)v14 + 2);
      if (v15) {
        v15 += (uint64_t)&v13[*(unsigned int *)&v13[v15]];
      }
    }
    unint64_t v16 = (int *)(v15 + 4 * (unsigned __int16)v10 + 4 + *(unsigned int *)(v15 + 4 * (unsigned __int16)v10 + 4));
  }
  else
  {
    unint64_t v16 = 0;
  }
  v30[0] = v12;
  v30[1] = v16;
  v30[2] = (int *)sub_2E5C38(v5, v11, 1);
  v30[3] = v17;
  int v31 = v7;
  __int16 v32 = v10;
  char v33 = v9;
  uint64_t v19 = (unsigned __int16 *)((char *)v12 - *v12);
  if (*v19 >= 0x2Fu)
  {
    uint64_t v20 = v19[23];
    if (v20)
    {
      unsigned int v21 = *((unsigned __int8 *)v12 + v20);
      BOOL v22 = v21 > 0x36;
      uint64_t v23 = (1 << v21) & 0x44000000000008;
      if (!v22 && v23 != 0) {
        return 0;
      }
    }
  }
  uint64_t v25 = (int *)*a1[1];
  unsigned int v26 = (unsigned __int16 *)((char *)v25 - *v25);
  unsigned int v27 = *v26;
  if (v27 < 0x2F)
  {
    if (v27 < 0xB) {
      return 0;
    }
    goto LABEL_20;
  }
  if (!v26[23] || *((unsigned char *)v25 + v26[23]) != 23)
  {
LABEL_20:
    uint64_t v28 = v26[5];
    if (!v28 || (*((unsigned char *)v25 + v28) & 4) == 0) {
      return 0;
    }
  }
  if (*((unsigned char *)v4 + 713) && sub_470F2C(*a2, (unint64_t)a2[1], v18) <= v4[91]) {
    return sub_6DEED8(v4 + 145, v30);
  }
  return 0;
}

uint64_t sub_6C4F8C(uint64_t a1, unsigned int *a2, unsigned int *a3, void *a4, double a5)
{
  uint64_t v10 = *a2;
  unint64_t v11 = ((unint64_t)(a2[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)a2[1] << 32) | v10;
  char v12 = BYTE6(v11) ^ 1;
  uint64_t v13 = *(void *)a1;
  unint64_t v14 = (v11 ^ 0x1000000000000) >> 32;
  unint64_t v15 = v11 & 0xFFFFFFFFFFFFLL;
  unint64_t v16 = (int *)sub_2D5D58(*(void *)a1, v11 & 0xFFFFFFFFFFFFLL);
  int16x4_t v55 = a4;
  if (*(unsigned char *)(v13 + 7772))
  {
    uint64_t v17 = sub_2DB8E0(v13 + 3896, v10, 0);
    double v18 = &v17[-*(int *)v17];
    if (*(unsigned __int16 *)v18 < 5u)
    {
      uint64_t v19 = 0;
    }
    else
    {
      uint64_t v19 = *((unsigned __int16 *)v18 + 2);
      if (v19) {
        v19 += (uint64_t)&v17[*(unsigned int *)&v17[v19]];
      }
    }
    uint64_t v20 = (int *)(v19 + 4 * (unsigned __int16)v14 + 4 + *(unsigned int *)(v19 + 4 * (unsigned __int16)v14 + 4));
  }
  else
  {
    uint64_t v20 = 0;
  }
  v61[0] = v16;
  v61[1] = v20;
  v61[2] = (int *)sub_2E5C38(v13, v15, 1);
  v61[3] = v21;
  int v62 = v10;
  __int16 v63 = v14;
  char v64 = v12;
  uint64_t v22 = *a3;
  unint64_t v23 = ((unint64_t)(a3[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)a3[1] << 32) | v22;
  char v24 = BYTE6(v23) ^ 1;
  uint64_t v25 = *(void *)a1;
  unint64_t v26 = (v23 ^ 0x1000000000000) >> 32;
  unint64_t v27 = v23 & 0xFFFFFFFFFFFFLL;
  uint64_t v28 = (int *)sub_2D5D58(*(void *)a1, v23 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v25 + 7772))
  {
    char v29 = sub_2DB8E0(v25 + 3896, v22, 0);
    uint64_t v30 = &v29[-*(int *)v29];
    if (*(unsigned __int16 *)v30 < 5u)
    {
      uint64_t v31 = 0;
    }
    else
    {
      uint64_t v31 = *((unsigned __int16 *)v30 + 2);
      if (v31) {
        v31 += (uint64_t)&v29[*(unsigned int *)&v29[v31]];
      }
    }
    __int16 v32 = (int *)(v31 + 4 * (unsigned __int16)v26 + 4 + *(unsigned int *)(v31 + 4 * (unsigned __int16)v26 + 4));
  }
  else
  {
    __int16 v32 = 0;
  }
  v57[0] = v28;
  v57[1] = v32;
  v57[2] = (int *)sub_2E5C38(v25, v27, 1);
  v57[3] = v33;
  int v58 = v22;
  __int16 v59 = v26;
  char v60 = v24;
  double v34 = sub_2E3ED8(*(void *)a1, (uint64_t)v61, (uint64_t)v57) * 100.0;
  if (v34 >= 0.0)
  {
    double v35 = v34;
    if (v34 >= 4.50359963e15) {
      goto LABEL_23;
    }
    uint64_t v36 = (uint64_t)(v34 + v34) + 1;
  }
  else
  {
    double v35 = v34;
    if (v34 <= -4.50359963e15) {
      goto LABEL_23;
    }
    uint64_t v36 = (uint64_t)(v34 + v34);
    if (v36 >= 1) {
      --v36;
    }
  }
  double v35 = (double)(v36 >> 1);
LABEL_23:
  if (v35 < 9.22337204e18)
  {
    if (v34 >= 0.0)
    {
      if (v34 < 4.50359963e15)
      {
        uint64_t v37 = (uint64_t)(v34 + v34) + 1;
LABEL_32:
        double v34 = (double)(v37 >> 1);
      }
    }
    else if (v34 > -4.50359963e15)
    {
      uint64_t v37 = (uint64_t)(v34 + v34);
      if (v37 >= 1) {
        --v37;
      }
      goto LABEL_32;
    }
    uint64_t v38 = (uint64_t)v34;
    goto LABEL_34;
  }
  uint64_t v38 = 0x7FFFFFFFFFFFFFFELL;
LABEL_34:
  uint64_t v56 = v38;
  if (!sub_8DC2B0(a1, (char **)v61, (char **)v57)) {
    return 0;
  }
  if (*(unsigned char *)(a1 + 1008))
  {
    unsigned int v39 = a3[1];
    if ((v39 & 0x40000000) == 0)
    {
      unsigned int v40 = a2[1];
      if ((v40 & 0x40000000) == 0 && v40 >> 31 == v39 >> 31) {
        return 0;
      }
    }
  }
  double v41 = sub_6A2704(*(void *)a1, v61, v57);
  double v42 = sub_6D82EC(a1 + 1160, v61, v57);
  uint64_t v43 = 0;
  double v44 = *(double *)(a1 + 200);
  if (v44 <= a5 && fabs(v42) < v44)
  {
    if (fabs(v41) < *(double *)(a1 + 984)) {
      return 0;
    }
    uint64_t v46 = *(void *)a1;
    unint64_t v48 = a2;
    uint64_t v47 = *a2;
    unint64_t v49 = (((unint64_t)(v48[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v48[1] << 32) | v47) & 0xFFFFFFFFFFFFLL;
    sub_2D5D58(*(void *)a1, v49);
    if (*(unsigned char *)(v46 + 7772)) {
      sub_2DB8E0(v46 + 3896, v47, 0);
    }
    sub_2E5C38(v46, v49, 1);
    uint64_t v50 = *(void *)a1;
    unsigned __int16 v52 = a3;
    uint64_t v51 = *a3;
    unint64_t v53 = (((unint64_t)(v52[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v52[1] << 32) | v51) & 0xFFFFFFFFFFFFLL;
    sub_2D5D58(*(void *)a1, v53);
    if (*(unsigned char *)(v50 + 7772)) {
      sub_2DB8E0(v50 + 3896, v51, 0);
    }
    uint64_t v43 = 1;
    sub_2E5C38(v50, v53, 1);
    unsigned int v54 = sub_35E640();
    if (*v55 < *(void *)(a1 + 1000))
    {
      if (v56 > *(void *)(a1 + 992)) {
        return 1;
      }
      else {
        return v54;
      }
    }
  }
  return v43;
}

uint64_t sub_6C54C8(uint64_t a1, void *a2, void *a3, int **a4, int **a5, int a6, int a7)
{
  int v14 = sub_6DEDE8(a1 + 1160, a4);
  unint64_t v15 = *a4;
  uint64_t v16 = **a4;
  if (!v14)
  {
    unint64_t v23 = (char *)v15 - v16;
    unsigned int v24 = *(unsigned __int16 *)((char *)v15 - v16);
    if (*((unsigned char *)a4 + 38))
    {
      if (v24 < 0xB) {
        return 0;
      }
      unsigned int v25 = *((unsigned __int16 *)v23 + 5);
      if (!v25 || (*(int *)((char *)v15 + v25) & 2) == 0) {
        return 0;
      }
    }
    else
    {
      if (v24 < 0xB) {
        return 0;
      }
      unsigned int v35 = *((unsigned __int16 *)v23 + 5);
      if (!v35 || (*(int *)((char *)v15 + v35) & 1) == 0) {
        return 0;
      }
    }
  }
  uint64_t v17 = -v16;
  if (*(unsigned __int16 *)((char *)v15 + v17) >= 0x2Fu && *(_WORD *)((char *)v15 + v17 + 46))
  {
    unsigned int v18 = *((unsigned __int8 *)v15 + *(unsigned __int16 *)((char *)v15 + v17 + 46));
    BOOL v19 = v18 > 0x36;
    uint64_t v20 = (1 << v18) & 0x44000000000008;
    if (!v19 && v20 != 0) {
      return 0;
    }
  }
  if (a6)
  {
    if (sub_69EB54(a1, a4, a5, a7)) {
      return 0;
    }
    unint64_t v15 = *a4;
    uint64_t v17 = -(uint64_t)**a4;
  }
  unint64_t v26 = (unsigned __int16 *)((char *)v15 + v17);
  if (*v26 >= 0x2Fu)
  {
    uint64_t v27 = v26[23];
    if (v27)
    {
      if ((*((unsigned __int8 *)v15 + v27) | 2) == 0xA) {
        return 0;
      }
    }
  }
  double v28 = sub_6A2704(*(void *)a1, a5, a4);
  char v29 = *a4;
  uint64_t v30 = (unsigned __int16 *)((char *)*a4 - **a4);
  unsigned int v31 = *v30;
  if (v31 >= 0x2F)
  {
    uint64_t v36 = v30[23];
    if (v30[23])
    {
      LOBYTE(v32) = 0;
      switch(*((unsigned char *)v29 + v36))
      {
        case 6:
        case 0xC:
        case 0x2B:
          uint64_t v32 = v30[5];
          if (!v30[5]) {
            goto LABEL_34;
          }
          if ((*((unsigned char *)v29 + v32 + 2) & 0x20) != 0) {
            goto LABEL_49;
          }
          LOBYTE(v32) = 0;
          char v33 = *a5;
          double v34 = (unsigned __int16 *)((char *)*a5 - **a5);
          if (*v34 < 0x2Fu) {
            goto LABEL_50;
          }
          goto LABEL_35;
        case 0x2C:
          goto LABEL_34;
        default:
LABEL_49:
          LOBYTE(v32) = *((unsigned char *)v29 + v36) != 14;
          char v33 = *a5;
          double v34 = (unsigned __int16 *)((char *)*a5 - **a5);
          if (*v34 < 0x2Fu) {
            goto LABEL_50;
          }
          goto LABEL_35;
      }
    }
    LOBYTE(v32) = 1;
LABEL_34:
    char v33 = *a5;
    double v34 = (unsigned __int16 *)((char *)*a5 - **a5);
    if (*v34 < 0x2Fu) {
      goto LABEL_50;
    }
  }
  else
  {
    LOBYTE(v32) = 1;
    char v33 = *a5;
    double v34 = (unsigned __int16 *)((char *)*a5 - **a5);
    if (*v34 < 0x2Fu) {
      goto LABEL_50;
    }
  }
LABEL_35:
  if (v34[23])
  {
    unsigned int v37 = *((unsigned __int8 *)v33 + v34[23]);
    BOOL v19 = v37 > 0x36;
    uint64_t v38 = (1 << v37) & 0x44000000000008;
    if (!v19 && v38 != 0)
    {
      uint64_t v40 = v34[5];
      if (v40)
      {
        if (*((unsigned char *)a5 + 38)) {
          int v41 = 2;
        }
        else {
          int v41 = 1;
        }
        int v42 = *(int *)((char *)v33 + v40);
        if ((v42 & v41) == 0) {
          LOBYTE(v32) = 1;
        }
        if (v32 & 1) == 0 && (((v28 < 0.0) ^ ((unsigned __int16)(v42 & 0x8000) >> 15))) {
          return 0;
        }
      }
    }
  }
LABEL_50:
  uint64_t v43 = (unsigned __int16 *)(*a3 - *(int *)*a3);
  if (*v43 >= 0x43u && (uint64_t v44 = v43[33]) != 0)
  {
    if (v31 < 0x2F || *(unsigned __int8 *)(*a3 + v44) >= *(_DWORD *)(a1 + 688)) {
      goto LABEL_68;
    }
  }
  else if (v31 < 0x2F || *(_DWORD *)(a1 + 688) == 0)
  {
    goto LABEL_68;
  }
  uint64_t v47 = v30[23];
  if (v47)
  {
    unsigned int v48 = *((unsigned __int8 *)v29 + v47);
    BOOL v19 = v48 > 0x2F;
    uint64_t v49 = (1 << v48) & 0xE2E040048000;
    if (!v19 && v49 != 0)
    {
      unint64_t v51 = sub_2E68E8(*(void *)a1, (uint64_t)a4[4]);
      if (v51 > 0xFFFFFFFEFFFFFFFFLL || !v51)
      {
        uint64_t result = sub_6906B4((char **)a4);
        unsigned __int16 v52 = *a4;
        unint64_t v53 = (unsigned __int16 *)((char *)*a4 - **a4);
        if (*v53 < 0xBu) {
          return result;
        }
        goto LABEL_69;
      }
    }
  }
LABEL_68:
  uint64_t result = 1;
  unsigned __int16 v52 = *a4;
  unint64_t v53 = (unsigned __int16 *)((char *)*a4 - **a4);
  if (*v53 < 0xBu) {
    return result;
  }
LABEL_69:
  uint64_t v54 = v53[5];
  if (v54 && (*((unsigned char *)v52 + v54 + 2) & 2) != 0)
  {
    int16x4_t v55 = (unsigned __int16 *)(*a2 - *(int *)*a2);
    if (*v55 >= 0xBu)
    {
      uint64_t v56 = v55[5];
      if (v56) {
        return result & (*(unsigned __int8 *)(*a2 + v56 + 2) >> 1);
      }
    }
    return 0;
  }
  return result;
}

void sub_6C597C(uint64_t *a1, void *a2, uint64_t a3, int a4, uint64_t a5)
{
  *(_DWORD *)(a5 + 32) = 0;
  *(_OWORD *)a5 = 0u;
  *(_OWORD *)(a5 + 16) = 0u;
  *(_WORD *)(a5 + 36) = -1;
  *(unsigned char *)(a5 + 38) = 0;
  *(_OWORD *)(a5 + 40) = 0u;
  *(_OWORD *)(a5 + 56) = 0u;
  *(_DWORD *)(a5 + 72) = 0;
  *(_WORD *)(a5 + 76) = -1;
  *(unsigned char *)(a5 + 78) = 0;
  unint64_t v8 = (uint64_t *)(a5 + 80);
  *(void *)(a5 + 88) = *(void *)(a5 + 80);
  *(void *)(a5 + 104) = -1;
  *(_DWORD *)(a5 + 112) = 0;
  char v9 = (unsigned int *)sub_470B40(a2, a3);
  uint64_t v10 = *a1;
  uint64_t v11 = *v9;
  BOOL v89 = v9;
  unint64_t v12 = ((unint64_t)(v9[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v9[1] << 32) | v11;
  unint64_t v13 = v12 ^ 0x1000000000000;
  unint64_t v14 = (v12 ^ 0x1000000000000) >> 32;
  unint64_t v15 = v12 & 0xFFFFFFFFFFFFLL;
  uint64_t v16 = (int *)sub_2D5D58(*a1, v12 & 0xFFFFFFFFFFFFLL);
  uint64_t v92 = v8;
  if (*(unsigned char *)(v10 + 7772))
  {
    uint64_t v17 = sub_2DB8E0(v10 + 3896, v11, 0);
    unsigned int v18 = &v17[-*(int *)v17];
    if (*(unsigned __int16 *)v18 < 5u)
    {
      uint64_t v19 = 0;
    }
    else
    {
      uint64_t v19 = *((unsigned __int16 *)v18 + 2);
      if (v19) {
        v19 += (uint64_t)&v17[*(unsigned int *)&v17[v19]];
      }
    }
    uint64_t v20 = v19 + 4 * (unsigned __int16)v14 + 4 + *(unsigned int *)(v19 + 4 * (unsigned __int16)v14 + 4);
  }
  else
  {
    uint64_t v20 = 0;
  }
  uint64_t v21 = sub_2E5C38(v10, v15, 1);
  unint64_t v22 = HIWORD(v13);
  *(void *)&long long v100 = v16;
  *((void *)&v100 + 1) = v20;
  *(void *)&long long v101 = v21;
  *((void *)&v101 + 1) = v23;
  LODWORD(v102) = v11;
  WORD2(v102) = v14;
  unint64_t v24 = a3 + 1;
  BYTE6(v102) = v22;
  unsigned int v25 = (unsigned int *)sub_470B40(a2, a3 + 1);
  long long v91 = a1;
  uint64_t v26 = *a1;
  uint64_t v27 = *v25;
  unint64_t v94 = v25;
  unint64_t v28 = ((unint64_t)(v25[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v25[1] << 32) | v27;
  char v29 = BYTE6(v28) ^ 1;
  unint64_t v30 = (v28 ^ 0x1000000000000) >> 32;
  unint64_t v31 = v28 & 0xFFFFFFFFFFFFLL;
  long long v93 = (int *)sub_2D5D58(v26, v28 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v26 + 7772))
  {
    uint64_t v32 = sub_2DB8E0(v26 + 3896, v27, 0);
    char v33 = &v32[-*(int *)v32];
    if (*(unsigned __int16 *)v33 < 5u)
    {
      uint64_t v34 = 0;
    }
    else
    {
      uint64_t v34 = *((unsigned __int16 *)v33 + 2);
      if (v34) {
        v34 += (uint64_t)&v32[*(unsigned int *)&v32[v34]];
      }
    }
    uint64_t v35 = v34 + 4 * (unsigned __int16)v30 + 4 + *(unsigned int *)(v34 + 4 * (unsigned __int16)v30 + 4);
  }
  else
  {
    uint64_t v35 = 0;
  }
  *(void *)&long long v96 = v93;
  *((void *)&v96 + 1) = v35;
  uint64_t v97 = sub_2E5C38(v26, v31, 1);
  uint64_t v98 = v36;
  LODWORD(v99) = v27;
  WORD2(v99) = v30;
  BYTE6(v99) = v29;
  long long v37 = v101;
  *(_OWORD *)a5 = v100;
  *(_OWORD *)(a5 + 16) = v37;
  *(void *)(a5 + 32) = v102;
  uint64_t v38 = (unsigned __int16 *)((char *)v16 - *v16);
  unsigned int v39 = *v38;
  if (v39 >= 0x2F)
  {
    uint64_t v40 = v38[23];
    if (v38[23])
    {
      unsigned int v41 = *((unsigned __int8 *)v16 + v40);
      BOOL v42 = v41 > 0x36;
      uint64_t v43 = (1 << v41) & 0x44000000000008;
      if (!v42 && v43 != 0)
      {
        int v45 = 0;
        uint64_t v47 = (uint64_t)v91;
        uint64_t v46 = v92;
        uint64_t v48 = a3;
        if (a3) {
          goto LABEL_37;
        }
LABEL_33:
        unsigned int v53 = *((unsigned __int8 *)v16 + v40);
        BOOL v42 = v53 > 0x36;
        uint64_t v54 = (1 << v53) & 0x44000000000008;
        if (!v42 && v54 != 0) {
          goto LABEL_37;
        }
LABEL_39:
        int v56 = 1;
        if (!a4) {
          goto LABEL_46;
        }
        goto LABEL_40;
      }
    }
  }
  uint64_t v49 = (unsigned __int16 *)((char *)v93 - *v93);
  uint64_t v47 = (uint64_t)v91;
  uint64_t v46 = v92;
  uint64_t v48 = a3;
  if (*v49 < 0x2Fu || (uint64_t v50 = v49[23]) == 0)
  {
    int v45 = 0;
    if (a3) {
      goto LABEL_37;
    }
LABEL_31:
    if (v39 < 0x2F) {
      goto LABEL_39;
    }
    LODWORD(v40) = v38[23];
    if (!v38[23]) {
      goto LABEL_39;
    }
    goto LABEL_33;
  }
  unsigned int v51 = *((unsigned __int8 *)v93 + v50);
  BOOL v42 = v51 > 0x36;
  unint64_t v52 = (0x44000000000008uLL >> v51) & 1;
  if (v42) {
    int v45 = 0;
  }
  else {
    int v45 = v52;
  }
  if (!a3) {
    goto LABEL_31;
  }
LABEL_37:
  int v56 = v45 | sub_664888(v47 + 3048, v89) ^ 1;
  if (!a4)
  {
LABEL_46:
    sub_2E44A4(*(void *)v47, (uint64_t)&v100, v46);
    sub_6DE780(v47 + 1160, (uint64_t)&v100, v46);
    uint64_t v57 = *(void *)(a5 + 88);
    unint64_t v60 = sub_470ADC(a2);
    if (v24 <= v60) {
      unint64_t v59 = v60;
    }
    else {
      unint64_t v59 = a3 + 1;
    }
    if (v24 < v60) {
      goto LABEL_54;
    }
    goto LABEL_50;
  }
LABEL_40:
  if ((sub_664888(v47 + 3048, v94) & v56) != 1) {
    goto LABEL_46;
  }
  sub_6B7BD0(v47, &v100, (char **)v46, 0);
  uint64_t v57 = *(void *)(a5 + 88);
  unint64_t v58 = sub_470ADC(a2);
  if (v24 <= v58) {
    unint64_t v59 = v58;
  }
  else {
    unint64_t v59 = a3 + 1;
  }
  if (v24 < v58)
  {
    while (1)
    {
LABEL_54:
      __int16 v63 = (_DWORD *)sub_470B40(a2, v24);
      uint64_t v57 = *(void *)(a5 + 80);
      uint64_t v61 = *(void *)(a5 + 88);
      if (v57 != v61)
      {
        while (1)
        {
          uint64_t v64 = *(void *)(v57 + 32);
          if (*v63 == v64
            && (unsigned __int16)WORD2(*(void *)(v57 + 32)) == (unsigned __int16)v63[1]
            && ((v64 & 0xFF000000000000) == 0) != ((*(void *)v63 & 0x2000000000000000) == 0))
          {
            break;
          }
          v57 += 40;
          if (v57 == v61) {
            goto LABEL_53;
          }
        }
      }
      if (v57 != v61) {
        break;
      }
LABEL_53:
      if (++v24 == v59)
      {
        unint64_t v62 = -1;
        uint64_t v57 = *(void *)(a5 + 88);
        if (*(unsigned char *)(v47 + 1040)) {
          goto LABEL_64;
        }
        goto LABEL_77;
      }
    }
    unint64_t v62 = v24 + 1;
    if (!*(unsigned char *)(v47 + 1040)) {
      goto LABEL_77;
    }
    goto LABEL_64;
  }
LABEL_50:
  uint64_t v61 = *(void *)(a5 + 88);
  unint64_t v62 = -1;
  if (!*(unsigned char *)(v47 + 1040)) {
    goto LABEL_77;
  }
LABEL_64:
  if (v57 != v61)
  {
LABEL_77:
    uint64_t v61 = v57;
    goto LABEL_81;
  }
  if (sub_664888(v47 + 3048, v94))
  {
    uint64_t v65 = sub_6C6078((uint64_t *)v47, a2, v48, (long long **)v46);
    if (v65 != -1)
    {
      uint64_t v66 = v65;
      BOOL v67 = (_DWORD *)sub_470B40(a2, v65);
      uint64_t v68 = *(void *)(a5 + 80);
      uint64_t v69 = *(void *)(a5 + 88);
      if (v68 == v69)
      {
        uint64_t v61 = *(void *)(a5 + 80);
      }
      else
      {
        uint64_t v61 = *(void *)(a5 + 80);
        while (1)
        {
          uint64_t v70 = *(void *)(v61 + 32);
          BOOL v71 = *v67 == v70 && WORD2(v70) == (unsigned __int16)v67[1];
          if (v71 && ((v67[1] & 0x20000000) == 0) != ((v70 & 0xFF000000000000) == 0)) {
            break;
          }
          v61 += 40;
          if (v61 == v69)
          {
            uint64_t v61 = *(void *)(a5 + 88);
            break;
          }
        }
      }
      *(void *)(a5 + 104) = 0xCCCCCCCCCCCCCCCDLL * ((v61 - v68) >> 3);
      unint64_t v62 = v66 + 1;
    }
  }
LABEL_81:
  char v72 = sub_6C65E4(v47, a2, v48, v62);
  if (v61 == *(void *)(a5 + 88) || (v72 & 1) != 0) {
    goto LABEL_107;
  }
  unint64_t v73 = sub_470ADC(a2);
  if (v62 != -1 && v48 + 2 < v73)
  {
    if ((uint64_t v74 = (unsigned __int16 *)((char *)v93 - *v93), *v74 < 0x2Fu)
      || (uint64_t v75 = v74[23]) == 0
      || ((v76 = *((unsigned __int8 *)v93 + v75), BOOL v42 = v76 > 0x36, v77 = (1 << v76) & 0x44000000000008, !v42)
        ? (BOOL v78 = v77 == 0)
        : (BOOL v78 = 1),
          v78))
    {
      if (sub_664888(v47 + 3048, v94))
      {
        sub_46B058();
        uint64_t v80 = v79;
        unint64_t v82 = v48 + 2 + v81;
        sub_46B058();
        if (sub_6C9188(v80, v82, v84, v83 + v62))
        {
LABEL_107:
          if (sub_664888(v47 + 3048, v94))
          {
            sub_2E44A4(*(void *)v47, (uint64_t)&v100, v46);
            sub_6DE780(v47 + 1160, (uint64_t)&v100, v46);
            uint64_t v61 = *(void *)(a5 + 80);
            uint64_t v85 = *(void *)(a5 + 88);
            if (v61 != v85)
            {
              while (1)
              {
                uint64_t v86 = *(void *)(v61 + 32);
                if ((v86 & 0xFFFFFFFFFFFFLL) == (v99 & 0xFFFFFFFFFFFFLL)
                  && (HIWORD(v99) & 1) != ((v86 & 0xFF000000000000) == 0))
                {
                  break;
                }
                v61 += 40;
                if (v61 == v85)
                {
                  uint64_t v87 = *(void *)(a5 + 80);
                  goto LABEL_103;
                }
              }
            }
          }
        }
      }
    }
  }
  uint64_t v87 = *(void *)(a5 + 80);
  if (v61 == *(void *)(a5 + 88))
  {
LABEL_103:
    *(void *)(a5 + 88) = v87;
    sub_64F484((char **)v46, &v96);
    unint64_t v88 = 0;
  }
  else
  {
    unint64_t v88 = 0xCCCCCCCCCCCCCCCDLL * ((v61 - v87) >> 3);
  }
  *(void *)(a5 + 104) = v88;
}

uint64_t sub_6C6078(uint64_t *a1, void *a2, uint64_t a3, long long **a4)
{
  uint64_t v7 = (unsigned int *)sub_470B40(a2, a3);
  uint64_t v8 = *a1;
  uint64_t v9 = *v7;
  unint64_t v10 = ((unint64_t)(v7[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v7[1] << 32) | v9;
  char v11 = BYTE6(v10) ^ 1;
  unint64_t v12 = (v10 ^ 0x1000000000000) >> 32;
  unint64_t v13 = v10 & 0xFFFFFFFFFFFFLL;
  uint64_t v14 = sub_2D5D58(*a1, v10 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v8 + 7772))
  {
    unint64_t v15 = sub_2DB8E0(v8 + 3896, v9, 0);
    uint64_t v16 = &v15[-*(int *)v15];
    if (*(unsigned __int16 *)v16 < 5u)
    {
      uint64_t v17 = 0;
    }
    else
    {
      uint64_t v17 = *((unsigned __int16 *)v16 + 2);
      if (v17) {
        v17 += (uint64_t)&v15[*(unsigned int *)&v15[v17]];
      }
    }
    uint64_t v18 = v17 + 4 * (unsigned __int16)v12 + 4 + *(unsigned int *)(v17 + 4 * (unsigned __int16)v12 + 4);
  }
  else
  {
    uint64_t v18 = 0;
  }
  v89[0] = v14;
  v89[1] = v18;
  _DWORD v89[2] = sub_2E5C38(v8, v13, 1);
  v89[3] = v19;
  int v90 = v9;
  __int16 v91 = v12;
  unint64_t v20 = a3 + 1;
  char v92 = v11;
  unint64_t v21 = sub_470ADC(a2);
  if (a3 + 1 > v21) {
    unint64_t v22 = a3 + 1;
  }
  else {
    unint64_t v22 = v21;
  }
  if (v20 >= v21) {
    return -1;
  }
  uint64_t v23 = 0;
  while (1)
  {
    unint64_t v24 = (unsigned int *)sub_470B40(a2, v20);
    if ((sub_664888((uint64_t)(a1 + 381), v24) & 1) == 0) {
      break;
    }
    v23 += sub_470F2C(a2, v20++, v25);
    if (v22 == v20) {
      return -1;
    }
  }
  uint64_t v27 = *v7;
  unsigned int v26 = v7[1];
  unint64_t v28 = ((unint64_t)(v26 & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v26 << 32) | v27;
  unint64_t v29 = (v28 ^ 0x1000000000000) >> 48;
  if (__PAIR64__((unsigned __int16)v24[1], *v24) == __PAIR64__((unsigned __int16)v26, v27)
    && (((v29 != 0) ^ ((v24[1] & 0x20000000) >> 29)) & 1) != 0)
  {
    return -1;
  }
  uint64_t v30 = *a1;
  unint64_t v31 = (v28 ^ 0x1000000000000) >> 32;
  unint64_t v32 = v28 & 0xFFFFFFFFFFFFLL;
  uint64_t v33 = sub_2D5D58(*a1, v28 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v30 + 7772))
  {
    uint64_t v34 = sub_2DB8E0(v30 + 3896, v27, 0);
    uint64_t v35 = &v34[-*(int *)v34];
    if (*(unsigned __int16 *)v35 < 5u)
    {
      uint64_t v36 = 0;
    }
    else
    {
      uint64_t v36 = *((unsigned __int16 *)v35 + 2);
      if (v36) {
        v36 += (uint64_t)&v34[*(unsigned int *)&v34[v36]];
      }
    }
    uint64_t v37 = v36 + 4 * (unsigned __int16)v31 + 4 + *(unsigned int *)(v36 + 4 * (unsigned __int16)v31 + 4);
  }
  else
  {
    uint64_t v37 = 0;
  }
  *(void *)&long long v83 = v33;
  *((void *)&v83 + 1) = v37;
  uint64_t v84 = sub_2E5C38(v30, v32, 1);
  uint64_t v85 = v38;
  int v86 = v27;
  __int16 v87 = v31;
  char v88 = v29;
  uint64_t v39 = *a1;
  uint64_t v40 = *v24;
  unint64_t v41 = ((unint64_t)(v24[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v24[1] << 32) | v40;
  char v42 = BYTE6(v41) ^ 1;
  unint64_t v43 = (v41 ^ 0x1000000000000) >> 32;
  unint64_t v44 = v41 & 0xFFFFFFFFFFFFLL;
  int v45 = (void *)sub_2D5D58(*a1, v41 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v39 + 7772))
  {
    uint64_t v46 = sub_2DB8E0(v39 + 3896, v40, 0);
    uint64_t v47 = &v46[-*(int *)v46];
    if (*(unsigned __int16 *)v47 < 5u)
    {
      uint64_t v48 = 0;
    }
    else
    {
      uint64_t v48 = *((unsigned __int16 *)v47 + 2);
      if (v48) {
        v48 += (uint64_t)&v46[*(unsigned int *)&v46[v48]];
      }
    }
    uint64_t v49 = v48 + 4 * (unsigned __int16)v43 + 4 + *(unsigned int *)(v48 + 4 * (unsigned __int16)v43 + 4);
  }
  else
  {
    uint64_t v49 = 0;
  }
  __p = v45;
  uint64_t v77 = (void *)v49;
  uint64_t v78 = sub_2E5C38(v39, v44, 1);
  uint64_t v79 = v50;
  int v80 = v40;
  __int16 v81 = v43;
  char v82 = v42;
  if (sub_35E640()) {
    return -1;
  }
  uint64_t v52 = *a1;
  uint64_t v54 = v24;
  uint64_t v53 = *v24;
  unint64_t v55 = ((unint64_t)(v54[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v54[1] << 32) | v53;
  char v56 = BYTE6(v55) ^ 1;
  unint64_t v57 = (v55 ^ 0x1000000000000) >> 32;
  unint64_t v58 = v55 & 0xFFFFFFFFFFFFLL;
  uint64_t v59 = sub_2D5D58(*a1, v55 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v52 + 7772))
  {
    unint64_t v60 = sub_2DB8E0(v52 + 3896, v53, 0);
    uint64_t v61 = &v60[-*(int *)v60];
    if (*(unsigned __int16 *)v61 < 5u)
    {
      uint64_t v62 = 0;
    }
    else
    {
      uint64_t v62 = *((unsigned __int16 *)v61 + 2);
      if (v62) {
        v62 += (uint64_t)&v60[*(unsigned int *)&v60[v62]];
      }
    }
    uint64_t v63 = v62 + 4 * (unsigned __int16)v57 + 4 + *(unsigned int *)(v62 + 4 * (unsigned __int16)v57 + 4);
  }
  else
  {
    uint64_t v63 = 0;
  }
  *(void *)&long long v83 = v59;
  *((void *)&v83 + 1) = v63;
  uint64_t v84 = sub_2E5C38(v52, v58, 1);
  uint64_t v85 = v64;
  int v86 = v53;
  __int16 v87 = v57;
  char v88 = v56;
  __p = 0;
  uint64_t v77 = 0;
  uint64_t v78 = 0;
  uint64_t v66 = *a4;
  uint64_t v65 = a4[1];
  if (*a4 != v65)
  {
    do
    {
      if (a1[131] >= v23) {
        uint64_t v67 = v23;
      }
      else {
        uint64_t v67 = a1[131];
      }
      if (sub_6C7494(a1, v66, (uint64_t)&v83, v67))
      {
        v93[0] = *((void *)v66 + 4);
        sub_2D5B74((char **)&__p, v93);
      }
      uint64_t v66 = (long long *)((char *)v66 + 40);
    }
    while (v66 != v65);
    if (__p != v77)
    {
      uint64_t v68 = sub_6D0990(*a4, a4[1], (uint64_t *)&__p);
      if (a4[1] != v68) {
        a4[1] = v68;
      }
    }
  }
  sub_64F484((char **)a4, &v83);
  uint64_t v69 = *a4;
  uint64_t v70 = (int **)a4[1];
  unint64_t v71 = 126 - 2 * __clz(0xCCCCCCCCCCCCCCCDLL * (((char *)v70 - (char *)*a4) >> 3));
  BOOL v72 = v70 == (int **)*a4;
  v93[0] = (uint64_t)a1;
  v93[1] = (uint64_t)v89;
  if (v72) {
    uint64_t v73 = 0;
  }
  else {
    uint64_t v73 = v71;
  }
  sub_6D6BD4(v69, v70, v93, v73, 1);
  if (__p)
  {
    uint64_t v77 = __p;
    operator delete(__p);
  }
  return v20;
}

void sub_6C65BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6C65E4(uint64_t a1, void *a2, uint64_t a3, unint64_t a4)
{
  if (*(unsigned char *)(a1 + 546)) {
    BOOL v4 = a3 == -1;
  }
  else {
    BOOL v4 = 1;
  }
  if (v4 || a4 == -1) {
    return 0;
  }
  uint64_t v7 = a1;
  unint64_t v8 = a3 + 1;
  double v9 = 0.0;
  if (a3 + 1 > a4) {
    unint64_t v10 = a3 + 1;
  }
  else {
    unint64_t v10 = a4;
  }
  unint64_t v88 = v10;
  if (a3 + 1 < a4)
  {
    uint64_t v11 = 0;
    uint64_t v12 = a1 + 3048;
    double v13 = 0.0;
    unint64_t v84 = a4 - 1;
    uint64_t v85 = a3;
    __int16 v87 = (uint64_t *)(a1 + 3048);
    do
    {
      uint64_t v14 = (unsigned int *)sub_470B40(a2, v8);
      if (*(unsigned char *)(v7 + 560) && sub_6649D8(v12, (uint64_t)v14)) {
        continue;
      }
      unint64_t v15 = (int *)*((void *)v14 + 1);
      uint64_t v16 = (unsigned __int16 *)((char *)v15 - *v15);
      if (*v16 >= 0x2Fu)
      {
        uint64_t v17 = v16[23];
        if (v17)
        {
          if (*((unsigned char *)v15 + v17) == 14) {
            continue;
          }
        }
      }
      uint64_t v18 = *(void *)v7;
      uint64_t v19 = *v14;
      unint64_t v20 = ((unint64_t)(v14[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v14[1] << 32) | v19;
      char v21 = BYTE6(v20) ^ 1;
      unint64_t v22 = (v20 ^ 0x1000000000000) >> 32;
      unint64_t v23 = v20 & 0xFFFFFFFFFFFFLL;
      unint64_t v24 = (int *)sub_2D5D58(v18, v20 & 0xFFFFFFFFFFFFLL);
      uint64_t v89 = v11;
      if (*(unsigned char *)(v18 + 7772))
      {
        double v25 = sub_2DB8E0(v18 + 3896, v19, 0);
        unsigned int v26 = &v25[-*(int *)v25];
        if (*(unsigned __int16 *)v26 < 5u)
        {
          uint64_t v27 = 0;
        }
        else
        {
          uint64_t v27 = *((unsigned __int16 *)v26 + 2);
          if (v27) {
            v27 += (uint64_t)&v25[*(unsigned int *)&v25[v27]];
          }
        }
        uint64_t v28 = v27 + 4 * (unsigned __int16)v22 + 4 + *(unsigned int *)(v27 + 4 * (unsigned __int16)v22 + 4);
      }
      else
      {
        uint64_t v28 = 0;
      }
      uint64_t v29 = sub_2E5C38(v18, v23, 1);
      unint64_t v94 = v24;
      uint64_t v95 = v28;
      uint64_t v96 = v29;
      uint64_t v97 = v30;
      int v98 = v19;
      __int16 v99 = v22;
      char v100 = v21;
      uint64_t v12 = (uint64_t)v87;
      if (sub_663DA8(v87, &v94))
      {
        uint64_t v7 = a1;
        uint64_t v11 = v89;
        continue;
      }
      uint64_t v31 = sub_470B40(a2, v85);
      unint64_t v32 = *(int **)(v31 + 8);
      uint64_t v33 = (unsigned __int16 *)((char *)v32 - *v32);
      unsigned int v34 = *v33;
      if (*(unsigned char *)(v31 + 46))
      {
        if (v34 >= 0x49)
        {
          unsigned int v35 = v33[36];
          if (v35) {
            goto LABEL_34;
          }
        }
      }
      else if (v34 >= 0x4B)
      {
        unsigned int v35 = v33[37];
        if (v35)
        {
LABEL_34:
          __int16 v36 = *(_WORD *)((char *)v32 + v35);
          goto LABEL_36;
        }
      }
      __int16 v36 = -1;
LABEL_36:
      uint64_t v7 = a1;
      uint64_t v37 = v89;
      uint64_t v38 = (int *)*((void *)v14 + 1);
      uint64_t v39 = (unsigned __int16 *)((char *)v38 - *v38);
      unsigned int v40 = *v39;
      if (*((unsigned char *)v14 + 46))
      {
        if (v40 >= 0x4B)
        {
          unsigned int v41 = v39[37];
          if (v39[37]) {
            goto LABEL_42;
          }
        }
      }
      else if (v40 >= 0x49)
      {
        unsigned int v41 = v39[36];
        if (v39[36])
        {
LABEL_42:
          int v42 = *(unsigned __int16 *)((char *)v38 + v41);
          goto LABEL_44;
        }
      }
      int v42 = 0xFFFF;
LABEL_44:
      unsigned __int16 v43 = v36 + 18000;
      unsigned __int16 v44 = v36 - 18000;
      if ((unsigned __int16)(v43 >> 5) < 0x465u) {
        unsigned __int16 v44 = v43;
      }
      int v45 = v42 - v44;
      if (v45 > 18000) {
        v45 -= 36000;
      }
      if (v45 < -17999) {
        v45 += 36000;
      }
      double v46 = (double)v45 / 100.0;
      double v9 = v9 + v46;
      if (v8 >= v84) {
        goto LABEL_72;
      }
      if (!*((unsigned char *)v14 + 46))
      {
        if (v40 < 0x49)
        {
          int v47 = 0xFFFF;
LABEL_64:
          __int16 v49 = -1;
          goto LABEL_65;
        }
        if (v39[36])
        {
          int v47 = *(unsigned __int16 *)((char *)v38 + v39[36]);
          if (v40 < 0x4B) {
            goto LABEL_64;
          }
        }
        else
        {
          int v47 = 0xFFFF;
          if (v40 < 0x4B) {
            goto LABEL_64;
          }
        }
        unsigned int v48 = v39[37];
        if (!v48) {
          goto LABEL_64;
        }
        goto LABEL_62;
      }
      if (v40 >= 0x4B)
      {
        if (v39[37])
        {
          int v47 = *(unsigned __int16 *)((char *)v38 + v39[37]);
          unsigned int v48 = v39[36];
          if (!v48) {
            goto LABEL_64;
          }
        }
        else
        {
          int v47 = 0xFFFF;
          unsigned int v48 = v39[36];
          if (!v48) {
            goto LABEL_64;
          }
        }
        goto LABEL_62;
      }
      int v47 = 0xFFFF;
      __int16 v49 = -1;
      if (v40 >= 0x49)
      {
        unsigned int v48 = v39[36];
        if (!v48) {
          goto LABEL_64;
        }
LABEL_62:
        __int16 v49 = *(_WORD *)((char *)v38 + v48);
      }
LABEL_65:
      unsigned __int16 v50 = v49 + 18000;
      if ((unsigned __int16)((unsigned __int16)(v49 + 18000) >> 5) >= 0x465u) {
        unsigned __int16 v50 = v49 - 18000;
      }
      int v51 = v50 - v47;
      if (v51 > 18000) {
        v51 -= 36000;
      }
      if (v51 < -17999) {
        v51 += 36000;
      }
      double v9 = v9 + (double)v51 / 100.0;
LABEL_72:
      double v52 = fabs(v46);
      if (v52 <= *(double *)(a1 + 200))
      {
        double v46 = v13;
      }
      else
      {
        if (v89 > *(void *)(a1 + 552) && v13 != 0.0 && v13 > 0.0 == v46 <= 0.0) {
          return 1;
        }
        uint64_t v37 = 0;
      }
      uint64_t v11 = sub_470F2C(a2, v8, v52) + v37;
      uint64_t v85 = v8;
      double v13 = v46;
    }
    while (v88 != ++v8);
  }
  if (fabs(v9) <= 180.0) {
    return 0;
  }
  uint64_t v53 = (unsigned int *)sub_470B40(a2, a3);
  uint64_t v54 = *(void *)v7;
  uint64_t v55 = *v53;
  unint64_t v56 = ((unint64_t)(v53[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v53[1] << 32) | v55;
  char v57 = BYTE6(v56) ^ 1;
  unint64_t v58 = (v56 ^ 0x1000000000000) >> 32;
  unint64_t v59 = v56 & 0xFFFFFFFFFFFFLL;
  unint64_t v60 = (int *)sub_2D5D58(*(void *)v7, v56 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v54 + 7772))
  {
    uint64_t v61 = sub_2DB8E0(v54 + 3896, v55, 0);
    uint64_t v62 = &v61[-*(int *)v61];
    if (*(unsigned __int16 *)v62 < 5u)
    {
      uint64_t v63 = 0;
    }
    else
    {
      uint64_t v63 = *((unsigned __int16 *)v62 + 2);
      if (v63) {
        v63 += (uint64_t)&v61[*(unsigned int *)&v61[v63]];
      }
    }
    uint64_t v64 = v63 + 4 * (unsigned __int16)v58 + 4 + *(unsigned int *)(v63 + 4 * (unsigned __int16)v58 + 4);
  }
  else
  {
    uint64_t v64 = 0;
  }
  uint64_t v65 = sub_2E5C38(v54, v59, 1);
  unint64_t v94 = v60;
  uint64_t v95 = v64;
  uint64_t v96 = v65;
  uint64_t v97 = v66;
  int v98 = v55;
  __int16 v99 = v58;
  char v100 = v57;
  uint64_t v67 = (unsigned int *)sub_470B40(a2, a4 - 1);
  uint64_t v68 = *(void *)v7;
  uint64_t v69 = *v67;
  unint64_t v70 = ((unint64_t)(v67[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v67[1] << 32) | v69;
  char v71 = BYTE6(v70) ^ 1;
  unint64_t v72 = (v70 ^ 0x1000000000000) >> 32;
  unint64_t v73 = v70 & 0xFFFFFFFFFFFFLL;
  uint64_t v74 = (int *)sub_2D5D58(*(void *)v7, v70 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v68 + 7772))
  {
    uint64_t v75 = sub_2DB8E0(v68 + 3896, v69, 0);
    unsigned int v76 = &v75[-*(int *)v75];
    if (*(unsigned __int16 *)v76 < 5u)
    {
      uint64_t v77 = 0;
    }
    else
    {
      uint64_t v77 = *((unsigned __int16 *)v76 + 2);
      if (v77) {
        v77 += (uint64_t)&v75[*(unsigned int *)&v75[v77]];
      }
    }
    uint64_t v78 = (int *)(v77 + 4 * (unsigned __int16)v72 + 4 + *(unsigned int *)(v77 + 4 * (unsigned __int16)v72 + 4));
  }
  else
  {
    uint64_t v78 = 0;
  }
  uint64_t v79 = 1;
  v90[0] = v74;
  v90[1] = v78;
  v90[2] = (int *)sub_2E5C38(v68, v73, 1);
  v90[3] = v80;
  int v91 = v69;
  __int16 v92 = v72;
  char v93 = v71;
  if (sub_69C254(v7, &v94, v90)) {
    return 0;
  }
  return v79;
}

uint64_t sub_6C6C28(uint64_t a1, uint64_t a2, int ***a3, uint64_t a4)
{
  BOOL v19 = fabs(sub_6D82EC(a1 + 1160, (int **)a2, (int **)a4)) <= *(double *)(a1 + 200);
  unint64_t v8 = sub_2E68E8(*(void *)a1, *(void *)(a2 + 32));
  BOOL v9 = v8 > 0xFFFFFFFEFFFFFFFFLL || v8 == 0;
  if (v9
    || ((unint64_t v10 = sub_2E68E8(*(void *)a1, *(void *)(a4 + 32)), v10 <= 0xFFFFFFFEFFFFFFFFLL)
      ? (BOOL v11 = v10 == 0)
      : (BOOL v11 = 1),
        v11))
  {
    char v12 = 0;
  }
  else
  {
    char v12 = sub_2E79EC(*(void *)a1, *(void *)(a2 + 32), *(void *)(a4 + 32));
  }
  char v18 = v12;
  uint64_t v14 = *a3;
  double v13 = a3[1];
  v17[0] = (int **)a4;
  v17[1] = (int **)a2;
  v17[2] = (int **)a1;
  v17[3] = (int **)&v19;
  v17[4] = (int **)&v18;
  if (v14 == v13) {
    return 0;
  }
  uint64_t v15 = 0;
  do
  {
    v15 += sub_6D6874(v17, v14);
    v14 += 5;
  }
  while (v14 != v13);
  return v15;
}

uint64_t sub_6C6D30(uint64_t a1, unsigned int *a2)
{
  uint64_t v3 = *(void *)a1;
  sub_2D5904(*(void *)a1, a2, 0, (char **)(*(void *)a1 + 7800));
  BOOL v4 = *(unsigned char **)(v3 + 7800);
  uint64_t v5 = *(unsigned char **)(v3 + 7808);
  uint64_t v6 = v5 - v4;
  if (v5 == v4) {
    return 0;
  }
  if (v6 < 0) {
    sub_2E00();
  }
  uint64_t v7 = (char *)operator new(v5 - v4);
  memcpy(v7, v4, v6 - 1);
  uint64_t v8 = 0;
  uint64_t v9 = 8 * (v6 >> 3);
  do
  {
    uint64_t v10 = *(void *)&v7[v8];
    uint64_t v11 = *(void *)a1;
    char v12 = (int *)sub_2D5D58(*(void *)a1, v10 & 0xFFFFFFFFFFFFLL);
    if (*(unsigned char *)(v11 + 7772)) {
      sub_2DB8E0(v11 + 3896, v10, 0);
    }
    sub_2E5C38(v11, v10 & 0xFFFFFFFFFFFFLL, 1);
    double v13 = (unsigned __int16 *)((char *)v12 - *v12);
    if (*v13 >= 0x2Fu)
    {
      uint64_t v14 = v13[23];
      if (v14)
      {
        int v15 = *((unsigned __int8 *)v12 + v14);
        if (v15 == 9
          || (v15 != 20 ? (BOOL v16 = *(unsigned char *)(a1 + 695) == 0) : (BOOL v16 = 1), !v16 ? (v17 = 43) : (v17 = 20), v15 == v17))
        {
          uint64_t v18 = 1;
          goto LABEL_19;
        }
      }
    }
    v8 += 8;
  }
  while (v9 != v8);
  uint64_t v18 = 0;
LABEL_19:
  operator delete(v7);
  return v18;
}

void sub_6C6E9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6C6EC4(uint64_t a1, void *a2, uint64_t a3, void *a4, unint64_t a5, uint64_t a6)
{
  if (!*(unsigned char *)(a1 + 1060)) {
    return 0;
  }
  unint64_t v7 = a3;
  *(_DWORD *)(a6 + 24) = 0;
  *(void *)(a6 + 8) = *(void *)a6;
  *(void *)(a6 + 48) = *(void *)(a6 + 40);
  *(_DWORD *)(a6 + 64) = 0;
  *(void *)&long long v10 = -1;
  *((void *)&v10 + 1) = -1;
  *(_OWORD *)(a6 + 72) = v10;
  uint64_t v56 = a6 + 72;
  *(_OWORD *)(a6 + 88) = v10;
  *(_OWORD *)(a6 + 104) = v10;
  *(void *)(a6 + 120) = -1;
  *(_DWORD *)(a6 + 128) = 0;
  *(void *)(a6 + 136) = -1;
  *(_DWORD *)(a6 + 144) = 0;
  *(_OWORD *)(a6 + 152) = xmmword_20E2060;
  *(_WORD *)(a6 + 168) = 0;
  *(unsigned char *)(a6 + 170) = 0;
  *(void *)(a6 + 176) = 0;
  *(unsigned char *)(a6 + 188) = 0;
  *(unsigned char *)(a6 + 190) = 0;
  uint64_t v11 = (unsigned int *)sub_470B40(a2, a3);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *v11;
  unint64_t v14 = ((unint64_t)(v11[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v11[1] << 32) | v13;
  char v15 = BYTE6(v14) ^ 1;
  unint64_t v16 = (v14 ^ 0x1000000000000) >> 32;
  unint64_t v17 = v14 & 0xFFFFFFFFFFFFLL;
  uint64_t v18 = (int *)sub_2D5D58(*(void *)a1, v14 & 0xFFFFFFFFFFFFLL);
  char v57 = a2;
  if (*(unsigned char *)(v12 + 7772))
  {
    BOOL v19 = sub_2DB8E0(v12 + 3896, v13, 0);
    unint64_t v20 = &v19[-*(int *)v19];
    uint64_t v21 = a1;
    if (*(unsigned __int16 *)v20 < 5u)
    {
      uint64_t v22 = 0;
    }
    else
    {
      uint64_t v22 = *((unsigned __int16 *)v20 + 2);
      if (v22) {
        v22 += (uint64_t)&v19[*(unsigned int *)&v19[v22]];
      }
    }
    unint64_t v23 = (int *)(v22 + 4 * (unsigned __int16)v16 + 4 + *(unsigned int *)(v22 + 4 * (unsigned __int16)v16 + 4));
  }
  else
  {
    uint64_t v21 = a1;
    unint64_t v23 = 0;
  }
  v65[0] = v18;
  v65[1] = v23;
  v65[2] = (int *)sub_2E5C38(v12, v17, 1);
  v65[3] = v24;
  LODWORD(v66) = v13;
  WORD2(v66) = v16;
  BYTE6(v66) = v15;
  double v25 = (int **)sub_5A7C34(a4, a5);
  unsigned int v26 = (unsigned __int16 *)((char *)v18 - *v18);
  if (*v26 >= 0x2Fu && v26[23])
  {
    unsigned int v27 = *((unsigned __int8 *)v18 + v26[23]);
    BOOL v28 = v27 > 0x2B || ((1 << v27) & 0x80000001040) == 0;
    uint64_t v29 = v57;
    if (v28 || (uint64_t v30 = v26[5]) != 0 && (*((unsigned char *)v18 + v30 + 2) & 0x20) != 0)
    {
      BOOL v31 = v27 == 44;
      unint64_t v32 = *v25;
      uint64_t v33 = (unsigned __int16 *)((char *)*v25 - **v25);
      if (*v33 < 0x2Fu)
      {
LABEL_55:
        if (v31) {
          goto LABEL_28;
        }
        return 0;
      }
    }
    else
    {
      BOOL v31 = 1;
      unint64_t v32 = *v25;
      uint64_t v33 = (unsigned __int16 *)((char *)*v25 - **v25);
      if (*v33 < 0x2Fu) {
        goto LABEL_55;
      }
    }
  }
  else
  {
    BOOL v31 = 0;
    uint64_t v29 = v57;
    unint64_t v32 = *v25;
    uint64_t v33 = (unsigned __int16 *)((char *)*v25 - **v25);
    if (*v33 < 0x2Fu) {
      goto LABEL_55;
    }
  }
  if (!v33[23]) {
    goto LABEL_55;
  }
  unsigned int v34 = *((unsigned __int8 *)v32 + v33[23]);
  BOOL v35 = v34 > 0x2B || ((1 << v34) & 0x80000001040) == 0;
  if (v35 || (uint64_t v36 = v33[5]) != 0 && (*((unsigned char *)v32 + v36 + 2) & 0x20) != 0)
  {
    if (v31 != (v34 == 44)) {
      goto LABEL_28;
    }
    return 0;
  }
  if (v31) {
    return 0;
  }
LABEL_28:
  uint64_t v54 = v66;
  uint64_t v55 = v25;
  unint64_t v60 = (unint64_t)v25[4];
  uint64_t v62 = a6;
  unint64_t v64 = v60;
  double v37 = sub_6D82EC(v21 + 1160, v65, v25);
  unint64_t v38 = sub_470ADC(v29);
  if (v7 <= v38) {
    unint64_t v39 = v38;
  }
  else {
    unint64_t v39 = v7;
  }
  unint64_t v58 = v39;
  if (v38 > v7)
  {
    while (1)
    {
      unsigned int v40 = v29;
      unsigned int v41 = (unsigned int *)sub_470B40(v29, v7);
      uint64_t v42 = *(void *)v21;
      uint64_t v44 = *v41;
      unsigned int v43 = v41[1];
      unint64_t v45 = v44 | ((unint64_t)(unsigned __int16)v43 << 32);
      sub_2D5D58(*(void *)v21, v45);
      if (*(unsigned char *)(v42 + 7772)) {
        sub_2DB8E0(v42 + 3896, v44, 0);
      }
      sub_2E5C38(v42, v45, 1);
      unint64_t v16 = (v16 & 0xFF00000000000000 | ((unint64_t)(v43 & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v43 << 32) | v44) ^ 0x1000000000000;
      if (v44 == v60
        && (unsigned __int16)v43 == WORD2(v60)
        && ((v16 & 0xFF000000000000) == 0) != (HIWORD(v60) & 1))
      {
        break;
      }
      unint64_t v63 = v16;
      sub_2D5B74((char **)v62, &v63);
      ++v7;
      uint64_t v29 = v40;
      if (v58 == v7) {
        goto LABEL_40;
      }
    }
    sub_2D5B74((char **)v62, &v64);
  }
LABEL_40:
  double v46 = (unsigned __int16 *)((char *)v65[0] - *v65[0]);
  if ((*v46 < 0x2Fu || (uint64_t v47 = v46[23]) == 0 || *((unsigned char *)v65[0] + v47) == 32)
    && (unsigned int v48 = (unsigned __int16 *)((char *)*v55 - **v55), *v48 >= 0x2Fu)
    && (uint64_t v49 = v48[23]) != 0
    && *((unsigned char *)*v55 + v49) == 44
    && (unint64_t v50 = sub_2E68E8(*(void *)v21, v54), v50 <= 0xFFFFFFFEFFFFFFFFLL)
    && v50
    && (unint64_t v51 = sub_2E68E8(*(void *)v21, (uint64_t)v55[4]), v51 <= 0xFFFFFFFEFFFFFFFFLL)
    && v51
    && sub_2E79EC(*(void *)v21, v66, (uint64_t)v55[4])
    && fabs(v37) < *(double *)(v21 + 1064))
  {
    *(_DWORD *)(v62 + 24) = 3;
    uint64_t result = 1;
    *(unsigned char *)(v62 + 169) = 1;
    *(_DWORD *)(v21 + 176) = 5;
  }
  else
  {
    uint64_t result = 0;
    *(void *)(v62 + 8) = *(void *)v62;
    *(void *)(v62 + 48) = *(void *)(v62 + 40);
    *(void *)&long long v53 = -1;
    *((void *)&v53 + 1) = -1;
    *(_OWORD *)uint64_t v56 = v53;
    *(_OWORD *)(v56 + 16) = v53;
    *(_OWORD *)(v56 + 32) = v53;
    *(void *)(v56 + 48) = -1;
    *(_DWORD *)(v62 + 24) = 0;
    *(_DWORD *)(v62 + 64) = 0;
    *(_DWORD *)(v62 + 128) = 0;
    *(void *)(v62 + 136) = -1;
    *(_DWORD *)(v62 + 144) = 0;
    *(_OWORD *)(v62 + 152) = xmmword_20E2060;
    *(_WORD *)(v62 + 168) = 0;
    *(unsigned char *)(v62 + 170) = 0;
    *(void *)(v62 + 176) = 0;
    *(unsigned char *)(v62 + 188) = 0;
    *(unsigned char *)(v62 + 190) = 0;
  }
  return result;
}

BOOL sub_6C7410(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  if (a1 == a2) {
    return 1;
  }
  uint64_t v7 = a1 + 8;
  do
  {
    uint64_t v8 = (_DWORD *)sub_470B40(a3, a4);
    BOOL result = *(_DWORD *)(v7 - 8) == *v8 && (v8[1] & 0x1FFFFFFF) == *(unsigned __int16 *)(v7 - 4);
    ++a4;
    BOOL v11 = !result || v7 == a2;
    v7 += 8;
  }
  while (!v11);
  return result;
}

uint64_t sub_6C7494(uint64_t *a1, long long *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = 0;
  char v93 = 0;
  unint64_t v94 = 0;
  uint64_t v95 = 0;
  uint64_t v8 = (unsigned __int16 *)(*(void *)a2 - **(int **)a2);
  if (*v8 >= 9u)
  {
    uint64_t v7 = v8[4];
    if (v8[4]) {
      uint64_t v7 = *(unsigned int *)(*(void *)a2 + v7);
    }
  }
  *(void *)&long long v96 = v7;
  sub_69070C((char **)&v93, a2, &v96);
  uint64_t v9 = v93;
  if (v94 - (unsigned char *)v93 >= 49)
  {
    unint64_t v10 = ((v94 - (unsigned char *)v93) / 0x30uLL - 2) >> 1;
    uint64_t v11 = *((void *)v94 - 1);
    if (*((void *)v93 + 6 * v10 + 5) > v11)
    {
      uint64_t v12 = v94 - 48;
      long long v99 = *((_OWORD *)v94 - 3);
      long long v100 = *((_OWORD *)v94 - 2);
      uint64_t v101 = *((void *)v94 - 2);
      do
      {
        uint64_t v13 = v12;
        uint64_t v12 = (char *)&v9[6 * v10];
        long long v14 = *(_OWORD *)v12;
        long long v15 = *((_OWORD *)v12 + 1);
        *((void *)v13 + 4) = *((void *)v12 + 4);
        *(_OWORD *)uint64_t v13 = v14;
        *((_OWORD *)v13 + 1) = v15;
        *((void *)v13 + 5) = *((void *)v12 + 5);
        if (!v10) {
          break;
        }
        unint64_t v10 = (v10 - 1) >> 1;
      }
      while (v9[6 * v10 + 5] > v11);
      *(_OWORD *)uint64_t v12 = v99;
      *((_OWORD *)v12 + 1) = v100;
      *((void *)v12 + 4) = v101;
      *((void *)v12 + 5) = v11;
    }
  }
  int v90 = 0;
  int v91 = 0;
  __int16 v92 = 0;
  *(void *)&long long v99 = *((unsigned int *)a2 + 8) | ((unint64_t)*((unsigned __int16 *)a2 + 18) << 32);
  sub_29603C(&v90, &v99);
  __p = 0;
  unint64_t v88 = 0;
  uint64_t v89 = 0;
  unint64_t v16 = v93;
  unint64_t v17 = v94;
  if (v93 == v94)
  {
    uint64_t v79 = 0;
    goto LABEL_79;
  }
  do
  {
    long long v18 = *v16;
    long long v19 = v16[1];
    uint64_t v20 = *((void *)v16 + 5);
    uint64_t v86 = *((void *)v16 + 4);
    v85[0] = v18;
    v85[1] = v19;
    if (v17 - (unsigned char *)v16 >= 49)
    {
      uint64_t v21 = 0;
      int64_t v22 = 0xAAAAAAAAAAAAAAABLL * ((v17 - (unsigned char *)v16) >> 4);
      long long v96 = *v16;
      long long v97 = v16[1];
      uint64_t v98 = *((void *)v16 + 4);
      unint64_t v23 = v16;
      do
      {
        uint64_t v26 = v21 + 1;
        unsigned int v27 = (char *)&v23[3 * v21 + 3];
        uint64_t v28 = (2 * v21) | 1;
        uint64_t v29 = 2 * v21 + 2;
        if (v29 < v22)
        {
          uint64_t v30 = *((void *)&v23[3 * v26 + 2] + 1);
          uint64_t v31 = *((void *)v27 + 11);
          v27 += 48 * (v30 > v31);
          if (v30 > v31) {
            uint64_t v28 = v29;
          }
        }
        long long v24 = *(_OWORD *)v27;
        long long v25 = *((_OWORD *)v27 + 1);
        *((void *)v23 + 4) = *((void *)v27 + 4);
        *unint64_t v23 = v24;
        v23[1] = v25;
        *((void *)v23 + 5) = *((void *)v27 + 5);
        unint64_t v23 = v27;
        uint64_t v21 = v28;
      }
      while (v28 <= (uint64_t)((unint64_t)(v22 - 2) >> 1));
      unint64_t v32 = (long long *)(v17 - 48);
      if (v27 == v17 - 48)
      {
        long long v43 = v97;
        uint64_t v44 = v98;
        *(_OWORD *)unsigned int v27 = v96;
        *((_OWORD *)v27 + 1) = v43;
        *((void *)v27 + 4) = v44;
        *((void *)v27 + 5) = v20;
      }
      else
      {
        long long v33 = *v32;
        long long v34 = *((_OWORD *)v17 - 2);
        *((void *)v27 + 4) = *((void *)v17 - 2);
        *(_OWORD *)unsigned int v27 = v33;
        *((_OWORD *)v27 + 1) = v34;
        *((void *)v27 + 5) = *((void *)v17 - 1);
        long long *v32 = v96;
        *((_OWORD *)v17 - 2) = v97;
        *((void *)v17 - 2) = v98;
        *((void *)v17 - 1) = v20;
        uint64_t v35 = v27 - (char *)v16 + 48;
        if (v35 >= 49)
        {
          unint64_t v36 = (v35 / 0x30uLL - 2) >> 1;
          uint64_t v37 = *((void *)v27 + 5);
          if (*((void *)&v16[3 * v36 + 2] + 1) > v37)
          {
            long long v38 = *(_OWORD *)v27;
            long long v39 = *((_OWORD *)v27 + 1);
            uint64_t v101 = *((void *)v27 + 4);
            long long v99 = v38;
            long long v100 = v39;
            do
            {
              unsigned int v40 = v27;
              unsigned int v27 = (char *)&v16[3 * v36];
              long long v41 = *(_OWORD *)v27;
              long long v42 = *((_OWORD *)v27 + 1);
              *((void *)v40 + 4) = *((void *)v27 + 4);
              *(_OWORD *)unsigned int v40 = v41;
              *((_OWORD *)v40 + 1) = v42;
              *((void *)v40 + 5) = *((void *)v27 + 5);
              if (!v36) {
                break;
              }
              unint64_t v36 = (v36 - 1) >> 1;
            }
            while (*((void *)&v16[3 * v36 + 2] + 1) > v37);
            *(_OWORD *)unsigned int v27 = v99;
            *((_OWORD *)v27 + 1) = v100;
            *((void *)v27 + 4) = v101;
            *((void *)v27 + 5) = v37;
          }
        }
      }
      unint64_t v17 = v94;
    }
    unint64_t v94 = v17 - 48;
    sub_2E44A4(*a1, (uint64_t)v85, &__p);
    unint64_t v45 = (long long *)__p;
    double v46 = v88;
    long long v83 = v88;
    uint64_t v84 = v20;
    if (__p != v88)
    {
      while (1)
      {
        uint64_t v47 = *((unsigned __int16 *)v45 + 18);
        uint64_t v48 = *((unsigned int *)v45 + 8);
        uint64_t v49 = (char *)v90;
        unint64_t v50 = v91;
        unint64_t v51 = (char *)v90;
        if (v90 != v91)
        {
          unint64_t v51 = (char *)v90;
          while (*(void *)v51 != __PAIR64__(v47, v48))
          {
            v51 += 8;
            if (v51 == v91) {
              goto LABEL_38;
            }
          }
        }
        if (v51 != v91) {
          goto LABEL_32;
        }
LABEL_38:
        if (v48 == *(_DWORD *)(a3 + 32) && v47 == *(unsigned __int16 *)(a3 + 36))
        {
          uint64_t v79 = 1;
          int v80 = (int **)__p;
          if (__p) {
            goto LABEL_78;
          }
          goto LABEL_79;
        }
        uint64_t v53 = v48 | (v47 << 32);
        if (v91 >= v92) {
          break;
        }
        *(void *)int v91 = v53;
        uint64_t v54 = (uint64_t)(v50 + 8);
LABEL_66:
        int v91 = (char *)v54;
        unint64_t v70 = (unsigned __int16 *)(*(void *)v45 - **(int **)v45);
        if (*v70 >= 9u && (uint64_t v71 = v70[4]) != 0)
        {
          *(void *)&long long v96 = *(unsigned int *)(*(void *)v45 + v71) + v20;
          if ((uint64_t)v96 <= a4) {
            goto LABEL_71;
          }
        }
        else
        {
          *(void *)&long long v96 = v20;
          if (v20 <= a4)
          {
LABEL_71:
            sub_69070C((char **)&v93, v45, &v96);
            unint64_t v72 = v93;
            if (v94 - (unsigned char *)v93 >= 49)
            {
              unint64_t v73 = ((v94 - (unsigned char *)v93) / 0x30uLL - 2) >> 1;
              uint64_t v74 = *((void *)v94 - 1);
              if (*((void *)v93 + 6 * v73 + 5) > v74)
              {
                uint64_t v75 = v94 - 48;
                long long v99 = *((_OWORD *)v94 - 3);
                long long v100 = *((_OWORD *)v94 - 2);
                uint64_t v101 = *((void *)v94 - 2);
                do
                {
                  unsigned int v76 = v75;
                  uint64_t v75 = (char *)&v72[6 * v73];
                  long long v77 = *(_OWORD *)v75;
                  long long v78 = *((_OWORD *)v75 + 1);
                  *((void *)v76 + 4) = *((void *)v75 + 4);
                  *(_OWORD *)unsigned int v76 = v77;
                  *((_OWORD *)v76 + 1) = v78;
                  *((void *)v76 + 5) = *((void *)v75 + 5);
                  if (!v73) {
                    break;
                  }
                  unint64_t v73 = (v73 - 1) >> 1;
                }
                while (v72[6 * v73 + 5] > v74);
                *(_OWORD *)uint64_t v75 = v99;
                *((_OWORD *)v75 + 1) = v100;
                *((void *)v75 + 4) = v101;
                *((void *)v75 + 5) = v74;
              }
            }
          }
        }
LABEL_32:
        unint64_t v45 = (long long *)((char *)v45 + 40);
        if (v45 == (long long *)v46) {
          goto LABEL_12;
        }
      }
      uint64_t v55 = (v91 - (unsigned char *)v90) >> 3;
      unint64_t v56 = v55 + 1;
      if ((unint64_t)(v55 + 1) >> 61) {
        sub_2E00();
      }
      uint64_t v57 = v92 - (unsigned char *)v90;
      if ((v92 - (unsigned char *)v90) >> 2 > v56) {
        unint64_t v56 = v57 >> 2;
      }
      if ((unint64_t)v57 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v58 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v58 = v56;
      }
      if (v58)
      {
        if (v58 >> 61) {
          sub_188D718();
        }
        unint64_t v59 = operator new(8 * v58);
        unint64_t v60 = (uint64_t *)&v59[8 * v55];
        uint64_t *v60 = v53;
        uint64_t v54 = (uint64_t)(v60 + 1);
        if (v49 != v50)
        {
LABEL_53:
          unint64_t v61 = v50 - 8 - v49;
          if (v61 < 0x58) {
            goto LABEL_91;
          }
          if ((unint64_t)(v49 - v59) < 0x20) {
            goto LABEL_91;
          }
          uint64_t v62 = (v61 >> 3) + 1;
          uint64_t v63 = 8 * (v62 & 0x3FFFFFFFFFFFFFFCLL);
          unint64_t v64 = &v50[-v63];
          unint64_t v60 = (uint64_t *)((char *)v60 - v63);
          uint64_t v65 = &v59[8 * v55 - 16];
          uint64_t v66 = v50 - 16;
          uint64_t v67 = v62 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            long long v68 = *(_OWORD *)v66;
            *(v65 - 1) = *((_OWORD *)v66 - 1);
            *uint64_t v65 = v68;
            v65 -= 2;
            v66 -= 32;
            v67 -= 4;
          }
          while (v67);
          unint64_t v50 = v64;
          if (v62 != (v62 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_91:
            do
            {
              uint64_t v69 = *((void *)v50 - 1);
              v50 -= 8;
              *--unint64_t v60 = v69;
            }
            while (v50 != v49);
          }
          uint64_t v49 = (char *)v90;
          int v90 = v60;
          int v91 = (char *)v54;
          __int16 v92 = &v59[8 * v58];
          uint64_t v20 = v84;
          if (!v49) {
            goto LABEL_65;
          }
LABEL_64:
          operator delete(v49);
LABEL_65:
          double v46 = v83;
          goto LABEL_66;
        }
      }
      else
      {
        unint64_t v59 = 0;
        unint64_t v60 = (uint64_t *)(8 * v55);
        *(void *)(8 * v55) = v53;
        uint64_t v54 = 8 * v55 + 8;
        if (v49 != v50) {
          goto LABEL_53;
        }
      }
      int v90 = v60;
      int v91 = (char *)v54;
      __int16 v92 = &v59[8 * v58];
      uint64_t v20 = v84;
      if (!v49) {
        goto LABEL_65;
      }
      goto LABEL_64;
    }
LABEL_12:
    unint64_t v16 = v93;
    unint64_t v17 = v94;
  }
  while (v93 != v94);
  uint64_t v79 = 0;
  int v80 = (int **)__p;
  if (__p)
  {
LABEL_78:
    unint64_t v88 = v80;
    operator delete(v80);
  }
LABEL_79:
  if (v90)
  {
    int v91 = (char *)v90;
    operator delete(v90);
  }
  if (v93)
  {
    unint64_t v94 = v93;
    operator delete(v93);
  }
  return v79;
}

void sub_6C7BA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,uint64_t a24,void *a25,uint64_t a26)
{
  if (__p)
  {
    operator delete(__p);
    unsigned int v27 = a25;
    if (!a25) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    unsigned int v27 = a25;
    if (!a25) {
      goto LABEL_3;
    }
  }
  operator delete(v27);
  _Unwind_Resume(exception_object);
}

void sub_6C7C20(double *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_5A7C34((void *)(a2 + 80), *(void *)(a2 + 104));
  long long v7 = *(_OWORD *)(v6 + 16);
  long long v14 = *(_OWORD *)v6;
  long long v15 = v7;
  uint64_t v16 = *(void *)(v6 + 32);
  uint64_t v8 = operator new(0x28uLL);
  long long v18 = (char *)v8 + 40;
  long long v19 = (char *)v8 + 40;
  long long v9 = v15;
  _OWORD *v8 = v14;
  v8[1] = v9;
  *((void *)v8 + 4) = v16;
  unint64_t v17 = v8;
  int v11 = 0;
  memset(v10, 0, sizeof(v10));
  __int16 v12 = -1;
  char v13 = 0;
  sub_6BFC98(a1, (int **)a2, (uint64_t *)&v17, 0, (uint64_t)v10, a3 + 40);
  if (v17)
  {
    long long v18 = v17;
    operator delete(v17);
  }
}

void sub_6C7CDC(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)(v1 - 56);
  if (v3)
  {
    *(void *)(v1 - 48) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_6C7CF8(uint64_t a1, int **a2, uint64_t a3)
{
  *(void *)(a3 + 48) = *(void *)(a3 + 40);
  uint64_t v70 = a3 + 40;
  *(_DWORD *)(a3 + 64) = 0;
  uint64_t v5 = a2 + 10;
  sub_6C82E8(a1, (int ***)a2 + 10, (uint64_t)&__p);
  uint64_t v6 = (int **)*a2;
  long long v7 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v8 = *v7;
  if (v8 < 0x2F)
  {
    if (v8 < 0xB) {
      goto LABEL_14;
    }
  }
  else if (v7[23] && *((unsigned char *)v6 + v7[23]) == 23)
  {
    goto LABEL_8;
  }
  uint64_t v9 = v7[5];
  if (!v9 || (*((unsigned char *)v6 + v9) & 4) == 0)
  {
LABEL_14:
    uint64_t v21 = operator new(0x28uLL);
    int64_t v22 = a2[4];
    v21[4] = v22;
    long long v23 = *((_OWORD *)a2 + 1);
    *(_OWORD *)uint64_t v21 = *(_OWORD *)a2;
    *((_OWORD *)v21 + 1) = v23;
    int v24 = BYTE6(v22);
    long long v25 = (int *)v21[1];
    uint64_t v26 = (unsigned __int16 *)((char *)v25 - *v25);
    unsigned int v27 = *v26;
    if (v24)
    {
      if (v27 < 5) {
        goto LABEL_23;
      }
      unsigned int v28 = v26[2];
      if (!v28) {
        goto LABEL_23;
      }
    }
    else if (v27 < 9 || (unsigned int v28 = v26[4]) == 0)
    {
LABEL_23:
      LOWORD(v29) = 0;
      operator delete(v21);
      unint64_t v30 = (unint64_t)a2[13];
      if (v30 == -1) {
        goto LABEL_21;
      }
LABEL_24:
      unint64_t v36 = (uint64_t *)sub_5A7C34(v5, v30);
      uint64_t v31 = *v36;
      uint64_t v32 = v36[1];
      unint64_t v33 = v36[4];
      long long v34 = (int ***)__p;
      uint64_t v35 = v74;
      if (__p == v74) {
        goto LABEL_70;
      }
      goto LABEL_25;
    }
    LOWORD(v29) = *(_WORD *)((char *)v25 + v28);
    operator delete(v21);
    unint64_t v30 = (unint64_t)a2[13];
    if (v30 == -1) {
      goto LABEL_21;
    }
    goto LABEL_24;
  }
LABEL_8:
  if (__p == v74) {
    goto LABEL_14;
  }
  uint64_t v10 = (uint64_t)*(v74 - 2);
  if (v10 - (void)*(v74 - 3) != 40) {
    goto LABEL_14;
  }
  long long v78 = *(_OWORD *)(v10 - 40);
  v79[0] = *(_OWORD *)(v10 - 24);
  *(void *)((char *)v79 + 14) = *(void *)(v10 - 10);
  int v11 = *(unsigned __int8 *)(v10 - 2);
  char v12 = *(unsigned char *)(v10 - 1);
  long long v13 = *((_OWORD *)a2 + 1);
  long long v75 = *(_OWORD *)a2;
  long long v76 = v13;
  long long v77 = a2[4];
  long long v14 = (char *)operator new(0x50uLL);
  long long v15 = v79[0];
  *(_OWORD *)long long v14 = v78;
  *((_OWORD *)v14 + 1) = v15;
  long long v16 = v76;
  *(_OWORD *)(v14 + 40) = v75;
  *(void *)(v14 + 30) = *(void *)((char *)v79 + 14);
  v14[38] = v11 ^ 1;
  v14[39] = v12;
  *(_OWORD *)(v14 + 56) = v16;
  *((void *)v14 + 9) = v77;
  unint64_t v17 = (int *)*((void *)v14 + 1);
  long long v18 = (unsigned __int16 *)((char *)v17 - *v17);
  unsigned int v19 = *v18;
  if (v11 != 1)
  {
    if (v19 < 5) {
      goto LABEL_85;
    }
    unsigned int v20 = v18[2];
    if (!v20) {
      goto LABEL_85;
    }
  }
  else if (v19 < 9 || (unsigned int v20 = v18[4]) == 0)
  {
LABEL_85:
    int v60 = 0;
    unint64_t v61 = (int *)*((void *)v14 + 6);
    uint64_t v62 = (unsigned __int16 *)((char *)v61 - *v61);
    unsigned int v63 = *v62;
    if (v14[78]) {
      goto LABEL_86;
    }
LABEL_82:
    if (v63 >= 9)
    {
      unsigned int v64 = v62[4];
      if (v64) {
        goto LABEL_88;
      }
    }
    goto LABEL_89;
  }
  int v60 = *(unsigned __int16 *)((char *)v17 + v20);
  unint64_t v61 = (int *)*((void *)v14 + 6);
  uint64_t v62 = (unsigned __int16 *)((char *)v61 - *v61);
  unsigned int v63 = *v62;
  if (!v14[78]) {
    goto LABEL_82;
  }
LABEL_86:
  if (v63 >= 5)
  {
    unsigned int v64 = v62[2];
    if (v64)
    {
LABEL_88:
      int v65 = *(unsigned __int16 *)((char *)v61 + v64);
      goto LABEL_90;
    }
  }
LABEL_89:
  int v65 = 0;
LABEL_90:
  int v66 = v65 - v60;
  if (v66 > 18000) {
    v66 -= 36000;
  }
  if (v66 < -17999) {
    v66 += 36000;
  }
  int v67 = v60 + vcvtad_u64_f64((double)v66 / 100.0 * 0.5 * 100.0);
  unsigned int v29 = (v67 + (v67 < 0 ? 0x8CA0 : 0)) % 0x8CA0u;
  operator delete(v14);
  uint64_t v69 = v74 - 3;
  long long v68 = *(v74 - 3);
  if (v68)
  {
    *(v74 - 2) = v68;
    operator delete(v68);
  }
  uint64_t v74 = v69;
  unint64_t v30 = (unint64_t)a2[13];
  if (v30 != -1) {
    goto LABEL_24;
  }
LABEL_21:
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  unint64_t v33 = 0xFFFF00000000;
  long long v34 = (int ***)__p;
  uint64_t v35 = v74;
  if (__p != v74)
  {
LABEL_25:
    unsigned __int16 v37 = v29 + 18000;
    if ((unsigned __int16)((unsigned __int16)(v29 + 18000) >> 5) >= 0x465u) {
      unsigned __int16 v37 = v29 - 18000;
    }
    int v38 = v37;
    if (v33) {
      BOOL v39 = v31 == 0;
    }
    else {
      BOOL v39 = 1;
    }
    int v41 = !v39 && v32 != 0;
    while (1)
    {
      long long v42 = **v34;
      long long v43 = (unsigned __int16 *)((char *)v42 - *v42);
      if (*v43 >= 0xBu && (uint64_t v44 = v43[5]) != 0) {
        int v45 = *((unsigned __int8 *)v42 + v44 + 1) >> 7;
      }
      else {
        int v45 = 0;
      }
      int v46 = (unsigned __int16)sub_6A0FFC(a1, v34, 0) - v38;
      if (v46 > 18000) {
        v46 -= 36000;
      }
      if (v46 < -17999) {
        v46 += 36000;
      }
      double v47 = (double)v46 / 100.0;
      *(double *)&long long v75 = v47;
      if (v41)
      {
        uint64_t v48 = *v34;
        uint64_t v49 = v34[1];
        if (*v34 != v49)
        {
          while (__PAIR64__(*((unsigned __int16 *)v48 + 18), *((_DWORD *)v48 + 8)) != __PAIR64__(WORD2(v33), v33)
               || (HIWORD(v33) & 1) == (*((unsigned char *)v48 + 38) == 0))
          {
            v48 += 5;
            if (v48 == v49)
            {
              uint64_t v48 = v34[1];
              break;
            }
          }
        }
        BOOL v50 = v48 != v49;
        BOOL v72 = v50;
        uint64_t v51 = *(void *)(a3 + 48);
        if (*(void *)(a3 + 40) == v51) {
          goto LABEL_68;
        }
      }
      else
      {
        BOOL v50 = 0;
        BOOL v72 = 0;
        uint64_t v51 = *(void *)(a3 + 48);
        if (*(void *)(a3 + 40) == v51) {
          goto LABEL_68;
        }
      }
      int v52 = *(__int16 *)(v51 - 4);
      if (v52 > 0) {
        int v53 = v45;
      }
      else {
        int v53 = 0;
      }
      if (v53 == 1 && v47 < 0.0 || (v45 & 1) == 0 && v52 < 0 && v47 > 0.0)
      {
        if (v50)
        {
          double v54 = *(double *)(a1 + 848);
          if (!v45) {
            double v54 = -v54;
          }
          *(double *)&long long v78 = v54;
          sub_6D35E8(v70, (double *)&v78, (char *)&v72);
        }
        goto LABEL_36;
      }
LABEL_68:
      sub_6D35E8(v70, (double *)&v75, (char *)&v72);
      *(_DWORD *)(a3 + 64) = 1;
LABEL_36:
      v34 += 3;
      if (v34 == v35)
      {
        long long v34 = (int ***)__p;
        break;
      }
    }
  }
LABEL_70:
  if (v34)
  {
    uint64_t v55 = v74;
    unint64_t v56 = v34;
    if (v74 != v34)
    {
      uint64_t v57 = v74;
      do
      {
        unint64_t v59 = *(v57 - 3);
        v57 -= 3;
        unint64_t v58 = v59;
        if (v59)
        {
          *(v55 - 2) = v58;
          operator delete(v58);
        }
        uint64_t v55 = v57;
      }
      while (v57 != v34);
      unint64_t v56 = __p;
    }
    uint64_t v74 = v34;
    operator delete(v56);
  }
}

void sub_6C826C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_36094((void **)va);
  _Unwind_Resume(a1);
}

void sub_6C8280(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_36094((void **)va);
  _Unwind_Resume(a1);
}

void sub_6C8294(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_36094((void **)va);
  _Unwind_Resume(a1);
}

void sub_6C82AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_36094((void **)va);
  _Unwind_Resume(a1);
}

void sub_6C82C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_36094((void **)va);
  _Unwind_Resume(a1);
}

void sub_6C82D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_36094((void **)va);
  _Unwind_Resume(a1);
}

void sub_6C82E8(uint64_t a1@<X0>, int ***a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  uint64_t v3 = *a2;
  BOOL v4 = a2[1];
  if (*a2 != v4)
  {
    uint64_t v6 = a1 + 1160;
    do
    {
      if (sub_6DEDE8(v6, v3)) {
        goto LABEL_22;
      }
      long long v7 = *v3;
      unsigned int v8 = (unsigned __int16 *)((char *)*v3 - **v3);
      unsigned int v9 = *v8;
      if (*((unsigned char *)v3 + 38))
      {
        if (v9 < 0xB) {
          goto LABEL_22;
        }
        unsigned int v10 = v8[5];
        if (!v8[5]) {
          goto LABEL_17;
        }
        if ((*(int *)((char *)v7 + v8[5]) & 2) != 0) {
          goto LABEL_22;
        }
      }
      else
      {
        if (v9 < 0xB) {
          goto LABEL_22;
        }
        unsigned int v10 = v8[5];
        if (!v8[5])
        {
LABEL_17:
          if (v9 <= 0x2E) {
            goto LABEL_22;
          }
          unsigned int v10 = 0;
          uint64_t v11 = v8[23];
          if (v11)
          {
LABEL_19:
            if (*((unsigned char *)v7 + v11) == 23) {
              goto LABEL_25;
            }
          }
LABEL_20:
          if (!v10) {
            goto LABEL_22;
          }
          goto LABEL_21;
        }
        if (*(int *)((char *)v7 + v8[5])) {
          goto LABEL_22;
        }
      }
      if (v9 >= 0x2F)
      {
        uint64_t v11 = v8[23];
        if (v11) {
          goto LABEL_19;
        }
        goto LABEL_20;
      }
LABEL_21:
      if ((*((unsigned char *)v7 + v10) & 4) != 0)
      {
LABEL_25:
        uint64_t v16 = *(void *)(a3 + 8);
        if (*(void *)a3 != v16)
        {
          long long v18 = *(char **)(v16 - 24);
          unint64_t v17 = *(char **)(v16 - 16);
          if (v17 - v18 == 40)
          {
            unint64_t v19 = *(void *)(v16 - 8);
            if ((unint64_t)v17 >= v19)
            {
              unint64_t v22 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v19 - (void)v18) >> 3);
              if (2 * v22 <= 2) {
                uint64_t v23 = 2;
              }
              else {
                uint64_t v23 = 2 * v22;
              }
              if (v22 >= 0x333333333333333) {
                unint64_t v24 = 0x666666666666666;
              }
              else {
                unint64_t v24 = v23;
              }
              if (v24 > 0x666666666666666) {
                sub_188D718();
              }
              long long v25 = (char *)operator new(40 * v24);
              long long v26 = *(_OWORD *)v3;
              long long v27 = *((_OWORD *)v3 + 1);
              *((void *)v25 + 9) = v3[4];
              *(_OWORD *)(v25 + 40) = v26;
              *(_OWORD *)(v25 + 56) = v27;
              unsigned int v28 = v25 + 40;
              if (v17 != v18)
              {
                do
                {
                  long long v29 = *(_OWORD *)(v17 - 40);
                  long long v30 = *(_OWORD *)(v17 - 24);
                  *((void *)v28 - 1) = *((void *)v17 - 1);
                  *(_OWORD *)(v28 - 24) = v30;
                  *(_OWORD *)(v28 - 40) = v29;
                  v28 -= 40;
                  v17 -= 40;
                }
                while (v17 != v18);
                unint64_t v17 = *(char **)(v16 - 24);
              }
              uint64_t v31 = v25 + 80;
              *(void *)(v16 - 24) = v28;
              *(void *)(v16 - 16) = v25 + 80;
              *(void *)(v16 - 8) = &v25[40 * v24];
              if (v17) {
                operator delete(v17);
              }
              *(void *)(v16 - 16) = v31;
            }
            else
            {
              long long v20 = *(_OWORD *)v3;
              long long v21 = *((_OWORD *)v3 + 1);
              *((void *)v17 + 4) = v3[4];
              *(_OWORD *)unint64_t v17 = v20;
              *((_OWORD *)v17 + 1) = v21;
              *(void *)(v16 - 16) = v17 + 40;
            }
          }
        }
        goto LABEL_4;
      }
LABEL_22:
      long long v32 = *(_OWORD *)v3;
      long long v33 = *((_OWORD *)v3 + 1);
      long long v34 = v3[4];
      char v12 = operator new(0x28uLL);
      __p[1] = (char *)v12 + 40;
      unint64_t v36 = (char *)v12 + 40;
      *char v12 = v32;
      v12[1] = v33;
      *((void *)v12 + 4) = v34;
      __p[0] = v12;
      long long v13 = *(void **)(a3 + 8);
      if ((unint64_t)v13 < *(void *)(a3 + 16))
      {
        void *v13 = 0;
        v13[1] = 0;
        v13[2] = 0;
        *(_OWORD *)long long v13 = *(_OWORD *)__p;
        v13[2] = v36;
        *(void *)(a3 + 8) = v13 + 3;
      }
      else
      {
        long long v14 = sub_4D088((char **)a3, (uint64_t)__p);
        long long v15 = __p[0];
        *(void *)(a3 + 8) = v14;
        if (v15)
        {
          __p[1] = v15;
          operator delete(v15);
        }
      }
LABEL_4:
      v3 += 5;
    }
    while (v3 != v4);
  }
}

void sub_6C85B4(_Unwind_Exception *a1)
{
  sub_36094(v1);
  _Unwind_Resume(a1);
}

void sub_6C85C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  if (__p)
  {
    operator delete(__p);
    sub_36094(v16);
    _Unwind_Resume(a1);
  }
  sub_36094(v16);
  _Unwind_Resume(a1);
}

void *sub_6C8614(uint64_t a1, void **a2)
{
  uint64_t v5 = *(char **)(a1 + 8);
  unint64_t v4 = *(void *)(a1 + 16);
  uint64_t v6 = v5;
  if ((unint64_t)v5 >= v4)
  {
    unsigned int v8 = *(char **)a1;
    uint64_t v9 = (uint64_t)&v5[-*(void *)a1];
    uint64_t v10 = v9 >> 3;
    unint64_t v11 = (v9 >> 3) + 1;
    if (v11 >> 61) {
      sub_2E00();
    }
    uint64_t v12 = v4 - (void)v8;
    if (v12 >> 2 > v11) {
      unint64_t v11 = v12 >> 2;
    }
    BOOL v13 = (unint64_t)v12 >= 0x7FFFFFFFFFFFFFF8;
    unint64_t v14 = 0x1FFFFFFFFFFFFFFFLL;
    if (!v13) {
      unint64_t v14 = v11;
    }
    if (v14 >> 61) {
      sub_188D718();
    }
    uint64_t v15 = 8 * v14;
    uint64_t v16 = operator new(8 * v14);
    unint64_t v17 = &v16[8 * v10];
    *unint64_t v17 = **a2;
    long long v7 = v17 + 1;
    if (v5 != v8)
    {
      unint64_t v18 = v5 - v8 - 8;
      if (v18 < 0x58) {
        goto LABEL_23;
      }
      if ((unint64_t)(&v5[-v9] - v16) < 0x20) {
        goto LABEL_23;
      }
      uint64_t v19 = (v18 >> 3) + 1;
      uint64_t v20 = 8 * (v19 & 0x3FFFFFFFFFFFFFFCLL);
      uint64_t v6 = &v5[-v20];
      unint64_t v17 = (void *)((char *)v17 - v20);
      long long v21 = &v16[8 * v10 - 16];
      unint64_t v22 = v5 - 16;
      uint64_t v23 = v19 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        long long v24 = *(_OWORD *)v22;
        *(v21 - 1) = *((_OWORD *)v22 - 1);
        *long long v21 = v24;
        v21 -= 2;
        v22 -= 32;
        v23 -= 4;
      }
      while (v23);
      if (v19 != (v19 & 0x3FFFFFFFFFFFFFFCLL))
      {
LABEL_23:
        do
        {
          uint64_t v25 = *((void *)v6 - 1);
          v6 -= 8;
          *--unint64_t v17 = v25;
        }
        while (v6 != v8);
      }
    }
    *(void *)a1 = v17;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = &v16[v15];
    if (v8) {
      operator delete(v8);
    }
  }
  else
  {
    *(void *)uint64_t v5 = **a2;
    long long v7 = v5 + 8;
  }
  *(void *)(a1 + 8) = v7;
  return v7 - 1;
}

unint64_t sub_6C877C(uint64_t **a1, uint64_t *a2)
{
  int v2 = *a1;
  uint64_t v3 = **a1;
  uint64_t v4 = *a2;
  unint64_t v5 = HIDWORD(*a2);
  unint64_t v6 = *a2 & 0xFFFFFFFFFFFFLL;
  long long v7 = (int *)sub_2D5D58(v3, v6);
  if (*(unsigned char *)(v3 + 7772))
  {
    unsigned int v8 = sub_2DB8E0(v3 + 3896, v4, 0);
    uint64_t v9 = &v8[-*(int *)v8];
    if (*(unsigned __int16 *)v9 < 5u)
    {
      uint64_t v10 = 0;
    }
    else
    {
      uint64_t v10 = *((unsigned __int16 *)v9 + 2);
      if (v10) {
        v10 += (uint64_t)&v8[*(unsigned int *)&v8[v10]];
      }
    }
    unint64_t v11 = (int *)(v10 + 4 * (unsigned __int16)v5 + 4 + *(unsigned int *)(v10 + 4 * (unsigned __int16)v5 + 4));
  }
  else
  {
    unint64_t v11 = 0;
  }
  v17[0] = v7;
  v17[1] = v11;
  v17[2] = (int *)sub_2E5C38(v3, v6, 1);
  v17[3] = v12;
  int v18 = v4;
  __int16 v19 = v5;
  BOOL v20 = (v4 & 0xFF000000000000) != 0;
  BOOL v13 = (unsigned __int16 *)((char *)v7 - *v7);
  if (*v13 >= 0x2Fu
    && (uint64_t v14 = v13[23]) != 0
    && (unsigned int v15 = *((unsigned __int8 *)v7 + v14) - 14, v15 < 0x1F)
    && ((0x54100001u >> v15) & 1) != 0)
  {
    return 1;
  }
  else
  {
    return sub_661B0C((uint64_t)(v2 + 381), v17);
  }
}

uint64_t sub_6C88C0(void *a1, unint64_t a2, void *a3, unint64_t a4)
{
  unint64_t v6 = a2;
  if (a1)
  {
    if (a3)
    {
      while (1)
      {
        unint64_t v8 = sub_46C760(a1);
        unint64_t v9 = sub_46C760(a3);
        if (v6 >= v8 || a4 >= v9)
        {
          if (v6 < v8 == a4 < v9) {
            return 0;
          }
        }
        else
        {
          uint64_t v10 = sub_46C8EC(a1, v6);
          if (v10 == sub_46C8EC(a3, a4)) {
            return 0;
          }
        }
        unint64_t v11 = (void *)sub_46C8EC(a1, v6);
        uint64_t v12 = (unsigned __int16 *)(*v11 - *(int *)*v11);
        if (*v12 >= 0x2Fu)
        {
          uint64_t v13 = v12[23];
          if (v13)
          {
            unsigned int v14 = *(unsigned __int8 *)(*v11 + v13);
            BOOL v15 = v14 > 0x36;
            uint64_t v16 = (1 << v14) & 0x44000000000008;
            if (!v15 && v16 != 0) {
              break;
            }
          }
        }
        ++v6;
      }
      return 1;
    }
    if (a2 < sub_46C760(a1))
    {
      while (1)
      {
        long long v24 = (void *)sub_46C8EC(a1, v6);
        uint64_t v25 = (unsigned __int16 *)(*v24 - *(int *)*v24);
        if (*v25 >= 0x2Fu)
        {
          uint64_t v26 = v25[23];
          if (v26)
          {
            unsigned int v27 = *(unsigned __int8 *)(*v24 + v26);
            BOOL v15 = v27 > 0x36;
            uint64_t v28 = (1 << v27) & 0x44000000000008;
            if (!v15 && v28 != 0) {
              break;
            }
          }
        }
        if (++v6 >= sub_46C760(a1)) {
          return 0;
        }
      }
      return 1;
    }
  }
  else if (a3 && a4 < sub_46C760(a3))
  {
    while (1)
    {
      int v18 = (void *)sub_46C8EC(0, v6);
      __int16 v19 = (unsigned __int16 *)(*v18 - *(int *)*v18);
      if (*v19 >= 0x2Fu)
      {
        uint64_t v20 = v19[23];
        if (v20)
        {
          unsigned int v21 = *(unsigned __int8 *)(*v18 + v20);
          BOOL v15 = v21 > 0x36;
          uint64_t v22 = (1 << v21) & 0x44000000000008;
          if (!v15 && v22 != 0) {
            break;
          }
        }
      }
      ++v6;
      if (a4 >= sub_46C760(a3)) {
        return 0;
      }
    }
    return 1;
  }
  return 0;
}

uint64_t sub_6C8AE4(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  if (*(char *)(a2 + 31) < 0)
  {
    sub_4200((unsigned char *)(a1 + 8), *(void **)(a2 + 8), *(void *)(a2 + 16));
    uint64_t v5 = a1 + 32;
    if ((*(char *)(a2 + 55) & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 8);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = v4;
    uint64_t v5 = a1 + 32;
    if ((*(char *)(a2 + 55) & 0x80000000) == 0)
    {
LABEL_3:
      long long v6 = *(_OWORD *)(a2 + 32);
      *(void *)(v5 + 16) = *(void *)(a2 + 48);
      *(_OWORD *)uint64_t v5 = v6;
      goto LABEL_6;
    }
  }
  sub_4200((unsigned char *)v5, *(void **)(a2 + 32), *(void *)(a2 + 40));
LABEL_6:
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  sub_6C8C90((char **)(a1 + 64), (long long **)(a2 + 64));
  if (*(char *)(a2 + 111) < 0)
  {
    sub_4200((unsigned char *)(a1 + 88), *(void **)(a2 + 88), *(void *)(a2 + 96));
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 88);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = v7;
  }
  __int16 v8 = *(_WORD *)(a2 + 112);
  *(unsigned char *)(a1 + 114) = *(unsigned char *)(a2 + 114);
  *(_WORD *)(a1 + 112) = v8;
  unint64_t v9 = (unsigned char *)(a1 + 120);
  if (*(char *)(a2 + 143) < 0)
  {
    sub_4200(v9, *(void **)(a2 + 120), *(void *)(a2 + 128));
  }
  else
  {
    long long v10 = *(_OWORD *)(a2 + 120);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(_OWORD *)unint64_t v9 = v10;
  }
  return a1;
}

void sub_6C8C1C(_Unwind_Exception *a1)
{
  if (v1[111] < 0) {
    operator delete(*v5);
  }
  sub_2DE3B8(v4);
  if (v1[55] < 0)
  {
    operator delete(*v3);
    if ((v1[31] & 0x80000000) == 0) {
LABEL_5:
    }
      _Unwind_Resume(a1);
  }
  else if ((v1[31] & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(*v2);
  _Unwind_Resume(a1);
}

char **sub_6C8C90(char **a1, long long **a2)
{
  a1[2] = 0;
  int v3 = a1 + 16;
  *a1 = 0;
  a1[1] = 0;
  long long v4 = *a2;
  uint64_t v5 = a2[1];
  int64_t v6 = (char *)v5 - (char *)*a2;
  if (v5 != *a2)
  {
    unint64_t v7 = 0x6DB6DB6DB6DB6DB7 * (v6 >> 3);
    if (v7 >= 0x492492492492493) {
      sub_2E00();
    }
    __int16 v8 = (char *)operator new(v6);
    *a1 = v8;
    a1[1] = v8;
    a1[2] = &v8[56 * v7];
    a1[1] = sub_6C8D74(v3, v4, v5, v8);
  }
  return a1;
}

void sub_6C8D48(_Unwind_Exception *exception_object)
{
  *(void *)(v1 + 8) = v2;
  if (*(void *)v1) {
    sub_20AA918((void **)(v1 + 8), *(void ***)v1, (void **)v1);
  }
  _Unwind_Resume(exception_object);
}

char *sub_6C8D74(int a1, long long *a2, long long *a3, char *__dst)
{
  long long v4 = __dst;
  unint64_t v11 = __dst;
  if (a2 != a3)
  {
    int64_t v6 = a2;
    do
    {
      if (*((char *)v6 + 23) < 0)
      {
        sub_4200(v4, *(void **)v6, *((void *)v6 + 1));
      }
      else
      {
        long long v8 = *v6;
        *((void *)v4 + 2) = *((void *)v6 + 2);
        *(_OWORD *)long long v4 = v8;
      }
      unint64_t v9 = v4 + 24;
      if (*((char *)v6 + 47) < 0)
      {
        sub_4200(v9, *((void **)v6 + 3), *((void *)v6 + 4));
      }
      else
      {
        long long v7 = *(long long *)((char *)v6 + 24);
        *((void *)v4 + 5) = *((void *)v6 + 5);
        *(_OWORD *)unint64_t v9 = v7;
      }
      *((void *)v4 + 6) = *((void *)v6 + 6);
      int64_t v6 = (long long *)((char *)v6 + 56);
      long long v4 = v11 + 56;
      v11 += 56;
    }
    while (v6 != a3);
  }
  return v4;
}

void sub_6C8E48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (*(char *)(v9 + 23) < 0)
  {
    operator delete(*(void **)v9);
    sub_6C8E80((uint64_t)&a9);
    _Unwind_Resume(a1);
  }
  sub_6C8E80((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_6C8E80(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24))
  {
    uint64_t v3 = **(void **)(a1 + 16);
    uint64_t v4 = **(void **)(a1 + 8);
    while (1)
    {
      if (v3 == v4) {
        return a1;
      }
      if (*(char *)(v3 - 9) < 0)
      {
        operator delete(*(void **)(v3 - 32));
        if ((*(char *)(v3 - 33) & 0x80000000) == 0) {
          goto LABEL_4;
        }
      }
      else if ((*(char *)(v3 - 33) & 0x80000000) == 0)
      {
        goto LABEL_4;
      }
      operator delete(*(void **)(v3 - 56));
LABEL_4:
      v3 -= 56;
    }
  }
  return a1;
}

unint64_t sub_6C8F00(uint64_t **a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = **a1;
  uint64_t v4 = *a2;
  unint64_t v5 = HIDWORD(*a2);
  unint64_t v6 = *a2 & 0xFFFFFFFFFFFFLL;
  long long v7 = (int *)sub_2D5D58(v3, v6);
  if (*(unsigned char *)(v3 + 7772))
  {
    long long v8 = sub_2DB8E0(v3 + 3896, v4, 0);
    uint64_t v9 = &v8[-*(int *)v8];
    if (*(unsigned __int16 *)v9 < 5u)
    {
      uint64_t v10 = 0;
    }
    else
    {
      uint64_t v10 = *((unsigned __int16 *)v9 + 2);
      if (v10) {
        v10 += (uint64_t)&v8[*(unsigned int *)&v8[v10]];
      }
    }
    unint64_t v11 = (int *)(v10 + 4 * (unsigned __int16)v5 + 4 + *(unsigned int *)(v10 + 4 * (unsigned __int16)v5 + 4));
  }
  else
  {
    unint64_t v11 = 0;
  }
  v17[0] = v7;
  v17[1] = v11;
  v17[2] = (int *)sub_2E5C38(v3, v6, 1);
  v17[3] = v12;
  int v18 = v4;
  __int16 v19 = v5;
  BOOL v20 = (v4 & 0xFF000000000000) != 0;
  uint64_t v13 = (unsigned __int16 *)((char *)v7 - *v7);
  if (*v13 >= 0x2Fu
    && (uint64_t v14 = v13[23]) != 0
    && (unsigned int v15 = *((unsigned __int8 *)v7 + v14) - 14, v15 < 0x1F)
    && ((0x54100001u >> v15) & 1) != 0)
  {
    return 1;
  }
  else
  {
    return sub_66341C((uint64_t)(v2 + 381), v17);
  }
}

unint64_t sub_6C9044(uint64_t **a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = **a1;
  uint64_t v4 = *a2;
  unint64_t v5 = HIDWORD(*a2);
  unint64_t v6 = *a2 & 0xFFFFFFFFFFFFLL;
  long long v7 = (int *)sub_2D5D58(v3, v6);
  if (*(unsigned char *)(v3 + 7772))
  {
    long long v8 = sub_2DB8E0(v3 + 3896, v4, 0);
    uint64_t v9 = &v8[-*(int *)v8];
    if (*(unsigned __int16 *)v9 < 5u)
    {
      uint64_t v10 = 0;
    }
    else
    {
      uint64_t v10 = *((unsigned __int16 *)v9 + 2);
      if (v10) {
        v10 += (uint64_t)&v8[*(unsigned int *)&v8[v10]];
      }
    }
    unint64_t v11 = (int *)(v10 + 4 * (unsigned __int16)v5 + 4 + *(unsigned int *)(v10 + 4 * (unsigned __int16)v5 + 4));
  }
  else
  {
    unint64_t v11 = 0;
  }
  v17[0] = v7;
  v17[1] = v11;
  v17[2] = (int *)sub_2E5C38(v3, v6, 1);
  v17[3] = v12;
  int v18 = v4;
  __int16 v19 = v5;
  BOOL v20 = (v4 & 0xFF000000000000) != 0;
  uint64_t v13 = (unsigned __int16 *)((char *)v7 - *v7);
  if (*v13 >= 0x2Fu
    && (uint64_t v14 = v13[23]) != 0
    && (unsigned int v15 = *((unsigned __int8 *)v7 + v14) - 14, v15 < 0x1F)
    && ((0x54100001u >> v15) & 1) != 0)
  {
    return 1;
  }
  else
  {
    return sub_66529C((uint64_t)(v2 + 381), v17);
  }
}

uint64_t sub_6C9188(void *a1, unint64_t a2, void *a3, unint64_t a4)
{
  unint64_t v6 = a2;
  if (a1)
  {
    if (a3)
    {
      while (1)
      {
        unint64_t v8 = sub_470ADC(a1);
        unint64_t v9 = sub_470ADC(a3);
        if (v6 >= v8 || a4 >= v9)
        {
          if (v6 < v8 == a4 < v9) {
            return 0;
          }
        }
        else
        {
          uint64_t v10 = sub_470B40(a1, v6);
          if (v10 == sub_470B40(a3, a4)) {
            return 0;
          }
        }
        unint64_t v11 = *(int **)(sub_470B40(a1, v6) + 8);
        uint64_t v12 = (unsigned __int16 *)((char *)v11 - *v11);
        if (*v12 >= 0x2Fu)
        {
          uint64_t v13 = v12[23];
          if (v13)
          {
            unsigned int v14 = *((unsigned __int8 *)v11 + v13);
            BOOL v15 = v14 > 0x36;
            uint64_t v16 = (1 << v14) & 0x44000000000008;
            if (!v15 && v16 != 0) {
              break;
            }
          }
        }
        ++v6;
      }
      return 1;
    }
    if (a2 < sub_470ADC(a1))
    {
      while (1)
      {
        long long v24 = *(int **)(sub_470B40(a1, v6) + 8);
        uint64_t v25 = (unsigned __int16 *)((char *)v24 - *v24);
        if (*v25 >= 0x2Fu)
        {
          uint64_t v26 = v25[23];
          if (v26)
          {
            unsigned int v27 = *((unsigned __int8 *)v24 + v26);
            BOOL v15 = v27 > 0x36;
            uint64_t v28 = (1 << v27) & 0x44000000000008;
            if (!v15 && v28 != 0) {
              break;
            }
          }
        }
        if (++v6 >= sub_470ADC(a1)) {
          return 0;
        }
      }
      return 1;
    }
  }
  else if (a3 && a4 < sub_470ADC(a3))
  {
    while (1)
    {
      int v18 = *(int **)(sub_470B40(0, v6) + 8);
      __int16 v19 = (unsigned __int16 *)((char *)v18 - *v18);
      if (*v19 >= 0x2Fu)
      {
        uint64_t v20 = v19[23];
        if (v20)
        {
          unsigned int v21 = *((unsigned __int8 *)v18 + v20);
          BOOL v15 = v21 > 0x36;
          uint64_t v22 = (1 << v21) & 0x44000000000008;
          if (!v15 && v22 != 0) {
            break;
          }
        }
      }
      ++v6;
      if (a4 >= sub_470ADC(a3)) {
        return 0;
      }
    }
    return 1;
  }
  return 0;
}

void sub_6C93AC(uint64_t *a1@<X0>, unsigned int *a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6 = (std::mutex *)(a1 + 3);
  std::mutex::lock((std::mutex *)(a1 + 3));
  uint64_t v7 = sub_6C94F8(a1 + 11, a2);
  if (a1[15] == v7)
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F6A30, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_24F6A30))
    {
      off_24F6A20 = (int *)&unk_20E8B20;
      *(void *)&byte_24F6A28 = 0;
      __cxa_guard_release(&qword_24F6A30);
    }
    ++a1[24];
    uint64_t v15 = *((void *)off_24F6A20 + 1);
    *(void *)a3 = *(void *)off_24F6A20;
    *(void *)(a3 + 8) = v15;
    if (v15) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v15 + 8), 1uLL, memory_order_relaxed);
    }
    char v14 = byte_24F6A28;
  }
  else
  {
    ++a1[23];
    unint64_t v8 = *(uint64_t **)(v7 + 16);
    if (v8 != a1)
    {
      unint64_t v9 = (uint64_t *)v8[1];
      if (v9 != a1)
      {
        uint64_t v10 = *v8;
        *(void *)(v10 + 8) = v9;
        *(void *)v8[1] = v10;
        uint64_t v11 = *a1;
        *(void *)(v11 + 8) = v8;
        uint64_t *v8 = v11;
        *a1 = (uint64_t)v8;
        v8[1] = (uint64_t)a1;
      }
    }
    uint64_t v13 = v8[4];
    uint64_t v12 = v8[5];
    *(void *)a3 = v13;
    *(void *)(a3 + 8) = v12;
    if (v12) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v12 + 8), 1uLL, memory_order_relaxed);
    }
    char v14 = 1;
  }
  *(unsigned char *)(a3 + 16) = v14;

  std::mutex::unlock(v6);
}

uint64_t sub_6C94F8(uint64_t *a1, unsigned int *a2)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  if (v2 != v3)
  {
    unint64_t v4 = (*((unsigned __int16 *)a2 + 2) + ((unint64_t)*a2 << 6) + ((unint64_t)*a2 >> 2) + 2654435769u) ^ *a2;
    uint64_t v5 = *((unsigned __int8 *)a2 + 8);
    unint64_t v6 = ((v5 | (v4 << 6)) + (v4 >> 2) + 2654435769u) ^ v4;
    uint64_t v7 = *((unsigned __int8 *)a2 + 9);
    unint64_t v8 = ((v7 | (v6 << 6)) + (v6 >> 2) + 2654435769u) ^ v6;
    uint64_t v9 = *((unsigned __int8 *)a2 + 10);
    uint64_t v10 = *a1;
    unint64_t v11 = a1[1] - *a1;
    unint64_t v12 = ((v9 + (v8 << 6) + (v8 >> 2) + 2654435769u) ^ v8) % v11;
    uint64_t v13 = v11 - 1;
    while (1)
    {
      if (*(unsigned char *)(v10 + v12) == 2)
      {
        uint64_t result = v2 + 24 * v12;
        if (__PAIR64__(*(unsigned __int16 *)(result + 4), *(_DWORD *)result) == __PAIR64__((unsigned __int16)WORD2(*(void *)a2), *(void *)a2)&& (HIWORD(*(void *)a2) & 1) != (*(unsigned char *)(result + 6) == 0)&& *(unsigned __int8 *)(result + 8) == v5&& __PAIR64__(*(unsigned __int8 *)(result + 10), *(unsigned __int8 *)(result + 9)) == __PAIR64__(v9, v7))
        {
          return result;
        }
      }
      else if (!*(unsigned char *)(v10 + v12))
      {
        return v3;
      }
      if (v12 == v13) {
        unint64_t v12 = 0;
      }
      else {
        ++v12;
      }
    }
  }
  return a1[3];
}

void sub_6C9608(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_243A340;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_6C9628(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_243A340;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_6C967C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  if (v1)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    unint64_t v4 = *(void **)(a1 + 24);
    if (v3 == v1)
    {
      *(void *)(a1 + 32) = v1;
    }
    else
    {
      do
      {
        uint64_t v5 = *(void **)(v3 - 152);
        if (v5)
        {
          *(void *)(v3 - 144) = v5;
          operator delete(v5);
        }
        unint64_t v6 = *(void **)(v3 - 192);
        if (v6)
        {
          *(void *)(v3 - 184) = v6;
          operator delete(v6);
        }
        v3 -= 192;
      }
      while (v3 != v1);
      unint64_t v4 = *(void **)(a1 + 24);
      *(void *)(a1 + 32) = v1;
    }
    operator delete(v4);
  }
}

void sub_6C973C(void **a1, unint64_t a2)
{
  unint64_t v4 = (char *)a1[1];
  uint64_t v5 = a1[2];
  if (0xAAAAAAAAAAAAAAABLL * ((v5 - v4) >> 6) >= a2)
  {
    if (a2)
    {
      unint64_t v11 = &v4[192 * a2];
      *(void *)&long long v12 = -1;
      *((void *)&v12 + 1) = -1;
      do
      {
        *((_OWORD *)v4 + 2) = 0uLL;
        *((_OWORD *)v4 + 3) = 0uLL;
        *((_OWORD *)v4 + 4) = 0uLL;
        *((_OWORD *)v4 + 5) = 0uLL;
        *((_OWORD *)v4 + 6) = 0uLL;
        *((_OWORD *)v4 + 7) = 0uLL;
        *((_OWORD *)v4 + 10) = 0uLL;
        *((_OWORD *)v4 + 11) = 0uLL;
        *((_OWORD *)v4 + 8) = 0uLL;
        *((_OWORD *)v4 + 9) = 0uLL;
        *(_OWORD *)unint64_t v4 = 0uLL;
        *((_OWORD *)v4 + 1) = 0uLL;
        *((void *)v4 + 4) = -1;
        *((void *)v4 + 5) = 0;
        *((void *)v4 + 6) = 0;
        *((void *)v4 + 7) = 0;
        *((_DWORD *)v4 + 16) = 0;
        *(_OWORD *)(v4 + 72) = v12;
        *(_OWORD *)(v4 + 88) = v12;
        *(_OWORD *)(v4 + 104) = v12;
        *((void *)v4 + 15) = -1;
        *((void *)v4 + 17) = -1;
        *(_OWORD *)(v4 + 152) = xmmword_20E2060;
        *(void *)(v4 + 183) = 0;
        *((void *)v4 + 22) = 0;
        v4 += 192;
      }
      while (v4 != v11);
      unint64_t v4 = v11;
    }
    a1[1] = v4;
  }
  else
  {
    unint64_t v6 = 0xAAAAAAAAAAAAAAABLL * ((v4 - (unsigned char *)*a1) >> 6);
    unint64_t v7 = v6 + a2;
    if (v6 + a2 > 0x155555555555555) {
      sub_2E00();
    }
    unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((v5 - (unsigned char *)*a1) >> 6);
    if (2 * v8 > v7) {
      unint64_t v7 = 2 * v8;
    }
    if (v8 >= 0xAAAAAAAAAAAAAALL) {
      unint64_t v9 = 0x155555555555555;
    }
    else {
      unint64_t v9 = v7;
    }
    if (v9)
    {
      if (v9 > 0x155555555555555) {
        sub_188D718();
      }
      uint64_t v10 = (char *)operator new(192 * v9);
    }
    else
    {
      uint64_t v10 = 0;
    }
    uint64_t v13 = &v10[192 * v6];
    char v14 = &v10[192 * v9];
    uint64_t v15 = &v13[192 * a2];
    *(void *)&long long v16 = -1;
    *((void *)&v16 + 1) = -1;
    unint64_t v17 = v13;
    do
    {
      *((_OWORD *)v17 + 2) = 0uLL;
      *((_OWORD *)v17 + 3) = 0uLL;
      *((_OWORD *)v17 + 4) = 0uLL;
      *((_OWORD *)v17 + 5) = 0uLL;
      *((_OWORD *)v17 + 6) = 0uLL;
      *((_OWORD *)v17 + 7) = 0uLL;
      *((_OWORD *)v17 + 10) = 0uLL;
      *((_OWORD *)v17 + 11) = 0uLL;
      *((_OWORD *)v17 + 8) = 0uLL;
      *((_OWORD *)v17 + 9) = 0uLL;
      *(_OWORD *)unint64_t v17 = 0uLL;
      *((_OWORD *)v17 + 1) = 0uLL;
      *((void *)v17 + 4) = -1;
      *((void *)v17 + 5) = 0;
      *((void *)v17 + 6) = 0;
      *((void *)v17 + 7) = 0;
      *((_DWORD *)v17 + 16) = 0;
      *(_OWORD *)(v17 + 72) = v16;
      *(_OWORD *)(v17 + 88) = v16;
      *(_OWORD *)(v17 + 104) = v16;
      *((void *)v17 + 15) = -1;
      *((void *)v17 + 17) = -1;
      *(_OWORD *)(v17 + 152) = xmmword_20E2060;
      *(void *)(v17 + 183) = 0;
      *((void *)v17 + 22) = 0;
      v17 += 192;
    }
    while (v17 != v15);
    int v18 = (char *)*a1;
    __int16 v19 = (char *)a1[1];
    if (v19 == *a1)
    {
      *a1 = v13;
      a1[1] = v15;
      a1[2] = v14;
      if (!v19) {
        return;
      }
      goto LABEL_31;
    }
    uint64_t v20 = 0;
    do
    {
      unsigned int v21 = &v13[v20];
      uint64_t v22 = &v19[v20];
      *((void *)v21 - 24) = 0;
      *((void *)v21 - 23) = 0;
      *((void *)v21 - 22) = 0;
      *((_OWORD *)v21 - 12) = *(_OWORD *)&v19[v20 - 192];
      *((void *)v21 - 22) = *(void *)&v19[v20 - 176];
      *((void *)v22 - 23) = 0;
      *((void *)v22 - 22) = 0;
      *((void *)v22 - 24) = 0;
      long long v23 = *(_OWORD *)&v19[v20 - 168];
      *((void *)v21 - 18) = 0;
      *((void *)v21 - 17) = 0;
      *(_OWORD *)(v21 - 168) = v23;
      *((void *)v21 - 19) = 0;
      *(_OWORD *)(v21 - 152) = *(_OWORD *)&v19[v20 - 152];
      *((void *)v21 - 17) = *(void *)&v19[v20 - 136];
      *((void *)v22 - 19) = 0;
      *((void *)v22 - 18) = 0;
      *((void *)v22 - 17) = 0;
      *((_DWORD *)v21 - 32) = *(_DWORD *)&v19[v20 - 128];
      long long v24 = *(_OWORD *)&v19[v20 - 120];
      long long v25 = *(_OWORD *)&v19[v20 - 104];
      long long v26 = *(_OWORD *)&v19[v20 - 88];
      *(_OWORD *)(v21 - 72) = *(_OWORD *)&v19[v20 - 72];
      *(_OWORD *)(v21 - 88) = v26;
      *(_OWORD *)(v21 - 104) = v25;
      *(_OWORD *)(v21 - 120) = v24;
      long long v27 = *(_OWORD *)&v19[v20 - 56];
      long long v28 = *(_OWORD *)&v19[v20 - 40];
      long long v29 = *(_OWORD *)&v19[v20 - 24];
      *(void *)(v21 - 9) = *(void *)&v19[v20 - 9];
      *(_OWORD *)(v21 - 24) = v29;
      *(_OWORD *)(v21 - 40) = v28;
      *(_OWORD *)(v21 - 56) = v27;
      v20 -= 192;
    }
    while (&v19[v20] != v18);
    long long v30 = (char *)*a1;
    __int16 v19 = (char *)a1[1];
    *a1 = &v13[v20];
    a1[1] = v15;
    a1[2] = v14;
    if (v19 != v30)
    {
      do
      {
        uint64_t v31 = (void *)*((void *)v19 - 19);
        if (v31)
        {
          *((void *)v19 - 18) = v31;
          operator delete(v31);
        }
        long long v32 = (void *)*((void *)v19 - 24);
        if (v32)
        {
          *((void *)v19 - 23) = v32;
          operator delete(v32);
        }
        v19 -= 192;
      }
      while (v19 != v30);
      __int16 v19 = v30;
    }
    if (v19)
    {
LABEL_31:
      operator delete(v19);
    }
  }
}

uint64_t sub_6C9A3C(uint64_t a1, unsigned int *a2, uint64_t **a3, unint64_t a4)
{
  unint64_t v8 = (std::mutex *)(a1 + 208);
  std::mutex::lock((std::mutex *)(a1 + 208));
  unint64_t v9 = *a3;
  uint64_t v10 = (std::__shared_weak_count *)operator new(0x30uLL);
  v10->__shared_owners_ = 0;
  v10->__shared_weak_owners_ = 0;
  v10->__vftable = (std::__shared_weak_count_vtbl *)off_243A340;
  v10[1].__vftable = 0;
  v10[1].__shared_owners_ = 0;
  v10[1].__shared_weak_owners_ = 0;
  sub_599EE0((uint64_t)&v10[1], *v9, v9[1], 0xAAAAAAAAAAAAAAABLL * ((v9[1] - *v9) >> 6));
  char v14 = &v10[1].__vftable;
  uint64_t v15 = v10;
  uint64_t v11 = sub_6C9BB4((void **)a1, a2, (uint64_t *)&v14, a4, 0);
  long long v12 = v15;
  if (v15 && !atomic_fetch_add(&v15->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
  std::mutex::unlock(v8);
  return v11;
}

void sub_6C9B64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_14A84((uint64_t)&a9);
  std::mutex::unlock(v9);
  _Unwind_Resume(a1);
}

void sub_6C9B80(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v2);
  operator delete(v4);
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_6C9BA0(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_6C9BB4(void **a1, unsigned int *a2, uint64_t *a3, unint64_t a4, int a5)
{
  unint64_t v50 = a4;
  uint64_t v5 = (unint64_t *)(a1 + 21);
  if ((unint64_t)a1[21] < a4)
  {
    if (sub_723EC(1u))
    {
      sub_6BAC((uint64_t)&v43);
      unint64_t v6 = sub_188FC78(&v43, (uint64_t)"LRUCache: item is too large (", 29);
      unint64_t v7 = (void *)sub_38EC58((uint64_t)v6, &v50);
      unint64_t v8 = sub_188FC78(v7, (uint64_t)" > ", 3);
      unint64_t v9 = (void *)sub_38EC58((uint64_t)v8, v5);
      sub_188FC78(v9, (uint64_t)")", 1);
      std::stringbuf::str();
      sub_7246C((uint64_t *)&__p, 1u);
      if (SHIBYTE(v42) < 0) {
        operator delete(__p);
      }
      if (v49 < 0) {
        operator delete(v48);
      }
      std::streambuf::~streambuf();
      std::ostream::~ostream();
      std::ios::~ios();
    }
    return 0;
  }
  __p = &__p;
  p_p = &__p;
  uint64_t v42 = 0;
  long long v16 = (std::mutex *)(a1 + 3);
  std::mutex::lock((std::mutex *)(a1 + 3));
  uint64_t v17 = sub_6C94F8((uint64_t *)a1 + 11, a2);
  if (a1[15] != (void *)v17)
  {
    if (!a5)
    {
      uint64_t v10 = 0;
      std::mutex::unlock(v16);
      if (!v42) {
        return v10;
      }
      goto LABEL_26;
    }
    int v18 = *(void ***)(v17 + 16);
    a1[20] = (void *)((unsigned char *)a1[20] - (unsigned char *)v18[6]);
    sub_396CD0((uint64_t *)a1 + 11, (unsigned int *)v18 + 4);
    if (v18 != &__p)
    {
      __int16 v19 = (void **)v18[1];
      if (v19 != &__p)
      {
        uint64_t v20 = *v18;
        v20[1] = v19;
        *(void *)v18[1] = v20;
        unsigned int v21 = __p;
        *((void *)__p + 1) = v18;
        *int v18 = v21;
        v18[1] = &__p;
        a1[2] = (char *)a1[2] - 1;
        __p = v18;
        ++v42;
      }
    }
  }
  a1[22] = (char *)a1[22] + 1;
  uint64_t v22 = (void **)a1[1];
  if (v22 != a1)
  {
    unint64_t v23 = (unint64_t)a1[21] - a4;
    do
    {
      unint64_t v24 = (unint64_t)a1[20];
      if (v24 <= v23) {
        break;
      }
      a1[20] = (void *)(v24 - (void)v22[6]);
      sub_396CD0((uint64_t *)a1 + 11, (unsigned int *)v22 + 4);
      if (v22 != &__p)
      {
        long long v25 = (void **)v22[1];
        if (v25 != &__p)
        {
          long long v26 = *v22;
          v26[1] = v25;
          *(void *)v22[1] = v26;
          long long v27 = __p;
          *((void *)__p + 1) = v22;
          *uint64_t v22 = v27;
          v22[1] = &__p;
          a1[2] = (char *)a1[2] - 1;
          __p = v22;
          ++v42;
        }
      }
      uint64_t v22 = (void **)a1[1];
    }
    while (v22 != a1);
  }
  uint64_t v43 = *(void *)a2;
  LODWORD(v44) = a2[2];
  uint64_t v28 = *a3;
  uint64_t v29 = a3[1];
  uint64_t v45 = *a3;
  uint64_t v46 = v29;
  if (v29) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v29 + 8), 1uLL, memory_order_relaxed);
  }
  unint64_t v30 = v50;
  unint64_t v47 = v50;
  uint64_t v31 = operator new(0x38uLL);
  v31[2] = v43;
  *((_DWORD *)v31 + 6) = v44;
  v31[4] = v28;
  v31[5] = v29;
  v31[6] = v30;
  long long v32 = *a1;
  v32[1] = v31;
  *a1 = v31;
  *uint64_t v31 = v32;
  v31[1] = a1;
  a1[2] = (char *)a1[2] + 1;
  BOOL v39 = v31;
  sub_6CA0D0((uint64_t *)a1 + 11, a2, &v39);
  a1[20] = (char *)a1[20] + v30;
  uint64_t v10 = 1;
  std::mutex::unlock(v16);
  if (v42)
  {
LABEL_26:
    long long v33 = (void **)__p;
    long long v34 = p_p;
    uint64_t v35 = *p_p;
    v35[1] = *((void *)__p + 1);
    *v33[1] = v35;
    uint64_t v42 = 0;
    if (v34 != &__p)
    {
      do
      {
        unint64_t v36 = (void **)v34[1];
        unsigned __int16 v37 = (std::__shared_weak_count *)v34[5];
        if (v37 && !atomic_fetch_add(&v37->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
        operator delete(v34);
        long long v34 = v36;
      }
      while (v36 != &__p);
    }
  }
  return v10;
}

void sub_6CA028(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  std::mutex::unlock(v16);
  sub_396C08((uint64_t *)&__p);
  _Unwind_Resume(a1);
}

BOOL sub_6CA0D0(uint64_t *a1, unsigned int *a2, void *a3)
{
  uint64_t v6 = sub_6C94F8(a1, a2);
  uint64_t v7 = v6;
  uint64_t v8 = a1[4];
  if (v8 == v6)
  {
    if (2 * a1[8] + 2 > 0xAAAAAAAAAAAAAAABLL * ((v6 - a1[3]) >> 3)) {
      sub_396E20((uint64_t)a1);
    }
    unint64_t v9 = (*((unsigned __int16 *)a2 + 2) + ((unint64_t)*a2 << 6) + ((unint64_t)*a2 >> 2) + 2654435769u) ^ *a2;
    unint64_t v10 = ((*((unsigned __int8 *)a2 + 8) | (v9 << 6)) + (v9 >> 2) + 2654435769u) ^ v9;
    unint64_t v11 = ((*((unsigned __int8 *)a2 + 9) | (v10 << 6)) + (v10 >> 2) + 2654435769u) ^ v10;
    unint64_t v12 = (*((unsigned __int8 *)a2 + 10) + (v11 << 6) + (v11 >> 2) + 2654435769u) ^ v11;
    uint64_t v13 = *a1;
    unint64_t v14 = v12 % (a1[1] - *a1);
    int v15 = *(unsigned __int8 *)(*a1 + v14);
    if (*(unsigned char *)(*a1 + v14))
    {
      while (v15 != 1)
      {
        if (v14 == 0xAAAAAAAAAAAAAAABLL * ((a1[4] - a1[3]) >> 3) - 1) {
          unint64_t v14 = 0;
        }
        else {
          ++v14;
        }
        int v15 = *(unsigned __int8 *)(v13 + v14);
        if (!*(unsigned char *)(v13 + v14)) {
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
      ++a1[8];
    }
    ++a1[7];
    *(unsigned char *)(v13 + v14) = 2;
    uint64_t v16 = 24 * v14;
    uint64_t v17 = a1[3] + v16;
    uint64_t v18 = *(void *)a2;
    *(_DWORD *)(v17 + 7) = *(unsigned int *)((char *)a2 + 7);
    *(void *)uint64_t v17 = v18;
    *(void *)(a1[3] + v16 + 16) = *a3;
  }
  return v8 == v7;
}

char *sub_6CA248(void **a1, uint64_t a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 6);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0x155555555555555) {
    sub_2E00();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 6) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 6);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 6) >= 0xAAAAAAAAAAAAAALL) {
    unint64_t v6 = 0x155555555555555;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0x155555555555555) {
      sub_188D718();
    }
    uint64_t v7 = (char *)operator new(192 * v6);
  }
  else
  {
    uint64_t v7 = 0;
  }
  uint64_t v8 = &v7[192 * v3];
  *((void *)v8 + 2) = *(void *)(a2 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)a2;
  unint64_t v9 = &v7[192 * v6];
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(v8 + 40) = *(_OWORD *)(a2 + 40);
  *((void *)v8 + 7) = *(void *)(a2 + 56);
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = 0;
  *((_DWORD *)v8 + 16) = *(_DWORD *)(a2 + 64);
  long long v10 = *(_OWORD *)(a2 + 72);
  long long v11 = *(_OWORD *)(a2 + 88);
  long long v12 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(v8 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(v8 + 104) = v12;
  *(_OWORD *)(v8 + 88) = v11;
  *(_OWORD *)(v8 + 72) = v10;
  long long v13 = *(_OWORD *)(a2 + 136);
  long long v14 = *(_OWORD *)(a2 + 152);
  long long v15 = *(_OWORD *)(a2 + 168);
  *(void *)(v8 + 183) = *(void *)(a2 + 183);
  *(_OWORD *)(v8 + 168) = v15;
  *(_OWORD *)(v8 + 152) = v14;
  *(_OWORD *)(v8 + 136) = v13;
  uint64_t v16 = v8 + 192;
  uint64_t v17 = (char *)*a1;
  uint64_t v18 = (char *)a1[1];
  if (v18 == *a1)
  {
    *a1 = v8;
    a1[1] = v16;
    a1[2] = v9;
    if (!v18) {
      return v16;
    }
    goto LABEL_23;
  }
  uint64_t v19 = 0;
  do
  {
    uint64_t v20 = &v8[v19];
    unsigned int v21 = &v18[v19];
    *((void *)v20 - 23) = 0;
    *((void *)v20 - 22) = 0;
    *((_OWORD *)v20 - 12) = *(_OWORD *)&v18[v19 - 192];
    *((void *)v20 - 22) = *(void *)&v18[v19 - 176];
    *((void *)v21 - 23) = 0;
    *((void *)v21 - 22) = 0;
    *((void *)v21 - 24) = 0;
    *(_OWORD *)(v20 - 168) = *(_OWORD *)&v18[v19 - 168];
    *((void *)v20 - 18) = 0;
    *((void *)v20 - 17) = 0;
    *(_OWORD *)(v20 - 152) = *(_OWORD *)&v18[v19 - 152];
    *((void *)v20 - 17) = *(void *)&v18[v19 - 136];
    *((void *)v21 - 19) = 0;
    *((void *)v21 - 18) = 0;
    *((void *)v21 - 17) = 0;
    *((_DWORD *)v20 - 32) = *(_DWORD *)&v18[v19 - 128];
    long long v22 = *(_OWORD *)&v18[v19 - 120];
    long long v23 = *(_OWORD *)&v18[v19 - 104];
    long long v24 = *(_OWORD *)&v18[v19 - 88];
    *(_OWORD *)(v20 - 72) = *(_OWORD *)&v18[v19 - 72];
    *(_OWORD *)(v20 - 88) = v24;
    *(_OWORD *)(v20 - 104) = v23;
    *(_OWORD *)(v20 - 120) = v22;
    long long v25 = *(_OWORD *)&v18[v19 - 56];
    long long v26 = *(_OWORD *)&v18[v19 - 40];
    long long v27 = *(_OWORD *)&v18[v19 - 24];
    *(void *)(v20 - 9) = *(void *)&v18[v19 - 9];
    *(_OWORD *)(v20 - 24) = v27;
    *(_OWORD *)(v20 - 40) = v26;
    *(_OWORD *)(v20 - 56) = v25;
    v19 -= 192;
  }
  while (&v18[v19] != v17);
  uint64_t v28 = (char *)*a1;
  uint64_t v18 = (char *)a1[1];
  *a1 = &v8[v19];
  a1[1] = v16;
  a1[2] = v9;
  if (v18 != v28)
  {
    do
    {
      uint64_t v29 = (void *)*((void *)v18 - 19);
      if (v29)
      {
        *((void *)v18 - 18) = v29;
        operator delete(v29);
      }
      unint64_t v30 = (void *)*((void *)v18 - 24);
      if (v30)
      {
        *((void *)v18 - 23) = v30;
        operator delete(v30);
      }
      v18 -= 192;
    }
    while (v18 != v28);
    uint64_t v18 = v28;
  }
  if (v18) {
LABEL_23:
  }
    operator delete(v18);
  return v16;
}

unsigned char *sub_6CA4A8(void *a1, _DWORD *a2)
{
  uint64_t v5 = (unsigned char *)a1[1];
  unint64_t v4 = a1[2];
  if ((unint64_t)v5 >= v4)
  {
    uint64_t v7 = (unsigned char *)*a1;
    uint64_t v8 = (uint64_t)&v5[-*a1] >> 2;
    unint64_t v9 = v8 + 1;
    if ((unint64_t)(v8 + 1) >> 62) {
      sub_2E00();
    }
    uint64_t v10 = v4 - (void)v7;
    if (v10 >> 1 > v9) {
      unint64_t v9 = v10 >> 1;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v11 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v9;
    }
    if (v11)
    {
      if (v11 >> 62) {
        sub_188D718();
      }
      long long v12 = (char *)operator new(4 * v11);
    }
    else
    {
      long long v12 = 0;
    }
    long long v13 = &v12[4 * v8];
    *(_DWORD *)long long v13 = *a2;
    unint64_t v6 = v13 + 4;
    if (v5 != v7)
    {
      do
      {
        __int16 v14 = *((_WORD *)v5 - 2);
        v5 -= 4;
        char v15 = v5[2];
        *((_WORD *)v13 - 2) = v14;
        v13 -= 4;
        v13[2] = v15;
      }
      while (v5 != v7);
      uint64_t v5 = (unsigned char *)*a1;
    }
    *a1 = v13;
    a1[1] = v6;
    a1[2] = &v12[4 * v11];
    if (v5) {
      operator delete(v5);
    }
  }
  else
  {
    *(_DWORD *)uint64_t v5 = *a2;
    unint64_t v6 = v5 + 4;
  }
  a1[1] = v6;
  return v6 - 4;
}

char *sub_6CA5AC(uint64_t a1, uint64_t a2, unint64_t __src, char *a4, uint64_t a5)
{
  unint64_t v5 = *(void *)a1;
  uint64_t v6 = a2 - *(void *)a1;
  uint64_t v7 = (char *)(*(void *)a1 + (v6 & 0xFFFFFFFFFFFFFFFCLL));
  uint64_t v8 = a5 - 1;
  if (a5 < 1) {
    return v7;
  }
  uint64_t v12 = v6 >> 2;
  __int16 v14 = *(char **)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  if (a5 > (v13 - (uint64_t)v14) >> 2)
  {
    unint64_t v15 = a5 + ((uint64_t)&v14[-v5] >> 2);
    if (v15 >> 62) {
      sub_2E00();
    }
    uint64_t v16 = v13 - v5;
    if (v16 >> 1 > v15) {
      unint64_t v15 = v16 >> 1;
    }
    if ((unint64_t)v16 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v17 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v17 = v15;
    }
    if (v17)
    {
      if (v17 >> 62) {
        sub_188D718();
      }
      uint64_t v18 = (char *)operator new(4 * v17);
      uint64_t v12 = v6 >> 2;
    }
    else
    {
      uint64_t v18 = 0;
    }
    BOOL v39 = &v18[4 * v12];
    unsigned int v40 = &v39[4 * a5];
    int v41 = v39;
    uint64_t v42 = (int *)__src;
    if ((v8 & 0x3FFFFFFFFFFFFFFFuLL) < 7) {
      goto LABEL_55;
    }
    int v41 = &v18[4 * v12];
    uint64_t v42 = (int *)__src;
    if ((unint64_t)&v18[(v6 & 0xFFFFFFFFFFFFFFFCLL) - __src] < 0x20) {
      goto LABEL_55;
    }
    uint64_t v43 = (v8 & 0x3FFFFFFFFFFFFFFFLL) + 1;
    uint64_t v44 = 4 * (v43 & 0x7FFFFFFFFFFFFFF8);
    int v41 = &v39[v44];
    uint64_t v42 = (int *)(__src + v44);
    uint64_t v45 = (long long *)(__src + 16);
    uint64_t v46 = &v18[4 * v12 + 16];
    uint64_t v47 = v43 & 0x7FFFFFFFFFFFFFF8;
    do
    {
      long long v48 = *v45;
      *((_OWORD *)v46 - 1) = *(v45 - 1);
      *(_OWORD *)uint64_t v46 = v48;
      v45 += 2;
      v46 += 32;
      v47 -= 8;
    }
    while (v47);
    if (v43 != (v43 & 0x7FFFFFFFFFFFFFF8))
    {
LABEL_55:
      do
      {
        int v49 = *v42++;
        *(_DWORD *)int v41 = v49;
        v41 += 4;
      }
      while (v41 != v40);
    }
    unint64_t v50 = *(char **)a1;
    if (*(char **)a1 == v7)
    {
      int v52 = &v18[4 * v12];
      unint64_t v56 = &v18[4 * v17];
      uint64_t v57 = v14 - v7;
      if (v14 == v7) {
        goto LABEL_39;
      }
    }
    else
    {
      uint64_t v51 = v7;
      int v52 = &v18[4 * v12];
      do
      {
        __int16 v53 = *((_WORD *)v51 - 2);
        v51 -= 4;
        char v54 = v51[2];
        *((_WORD *)v52 - 2) = v53;
        v52 -= 4;
        v52[2] = v54;
      }
      while (v51 != v50);
      uint64_t v55 = *(unsigned char **)(a1 + 8);
      unint64_t v56 = &v18[4 * v17];
      uint64_t v57 = v55 - v7;
      if (v55 == v7) {
        goto LABEL_39;
      }
    }
    memmove(v40, v7, v57 - 1);
LABEL_39:
    unint64_t v58 = *(void **)a1;
    *(void *)a1 = v52;
    *(void *)(a1 + 8) = &v40[v57];
    *(void *)(a1 + 16) = v56;
    if (v58) {
      operator delete(v58);
    }
    return v39;
  }
  uint64_t v19 = (v14 - v7) >> 2;
  if (v19 >= a5)
  {
    uint64_t v20 = (char *)(__src + 4 * a5);
    long long v22 = *(char **)(a1 + 8);
    goto LABEL_18;
  }
  uint64_t v20 = (char *)(__src + 4 * v19);
  int64_t v21 = a4 - v20;
  if (a4 != v20)
  {
    memmove(*(void **)(a1 + 8), (const void *)(__src + 4 * v19), v21 - 1);
    uint64_t v12 = v6 >> 2;
  }
  long long v22 = &v14[v21];
  *(void *)(a1 + 8) = &v14[v21];
  if (v14 - v7 >= 1)
  {
LABEL_18:
    long long v23 = &v7[4 * a5];
    uint64_t v24 = v22 - v23;
    uint64_t v25 = (v22 - v23) >> 2;
    long long v26 = &v22[-4 * a5];
    long long v27 = v22;
    if (v26 < v14)
    {
      uint64_t v28 = (v6 & 0xFFFFFFFFFFFFFFFCLL) + v24;
      uint64_t v29 = (char *)(v28 + v5);
      unint64_t v30 = v28 + v5 + 4;
      if ((unint64_t)v14 > v30) {
        unint64_t v30 = (unint64_t)v14;
      }
      unint64_t v31 = v30 + ~v5 - v28;
      if (v31 < 0x2C)
      {
        long long v27 = v22;
      }
      else
      {
        unint64_t v32 = v22 - v29;
        long long v27 = v22;
        if (v32 >= 0x20)
        {
          uint64_t v33 = (v31 >> 2) + 1;
          uint64_t v34 = 4 * (v33 & 0x7FFFFFFFFFFFFFF8);
          v26 += v34;
          long long v27 = &v22[v34];
          uint64_t v35 = v22 + 16;
          unint64_t v36 = (long long *)(4 * v25 + 4 * v12 + v5 + 16);
          uint64_t v37 = v33 & 0x7FFFFFFFFFFFFFF8;
          do
          {
            long long v38 = *v36;
            *(v35 - 1) = *(v36 - 1);
            *uint64_t v35 = v38;
            v35 += 2;
            v36 += 2;
            v37 -= 8;
          }
          while (v37);
          if (v33 == (v33 & 0x7FFFFFFFFFFFFFF8)) {
            goto LABEL_46;
          }
        }
      }
      do
      {
        int v59 = *(_DWORD *)v26;
        v26 += 4;
        *(_DWORD *)long long v27 = v59;
        v27 += 4;
      }
      while (v26 < v14);
    }
LABEL_46:
    *(void *)(a1 + 8) = v27;
    if (v22 != v23) {
      memmove(&v22[-4 * v25], v7, v24 - 1);
    }
    if (v20 != (char *)__src) {
      memmove(v7, (const void *)__src, (size_t)&v20[~__src]);
    }
  }
  return v7;
}

uint64_t sub_6CA8EC(uint64_t result, unsigned int *a2, unsigned int (**a3)(unint64_t, unint64_t), uint64_t a4, char a5)
{
  uint64_t v12 = (unsigned int *)result;
LABEL_2:
  unint64_t v13 = (unint64_t)(a2 - 1);
  int v126 = a2 - 3;
  unint64_t v127 = a2 - 2;
  __int16 v14 = v12;
  uint64_t v125 = a2;
LABEL_3:
  unint64_t v15 = 1 - a4;
  while (1)
  {
    uint64_t v12 = v14;
    uint64_t v16 = (char *)a2 - (char *)v14;
    unint64_t v17 = a2 - v14;
    if (!(!v6 & v5)) {
      break;
    }
    if (v16 <= 95)
    {
      uint64_t v104 = v14 + 1;
      BOOL v106 = v14 == a2 || v104 == a2;
      if (a5)
      {
        if (!v106)
        {
          uint64_t v107 = 0;
          uint64_t v108 = v12;
          do
          {
            uint64_t v111 = *v108;
            uint64_t v110 = v108[1];
            uint64_t v108 = v104;
            unint64_t v9 = v9 & 0xFFFFFFFF00000000 | v110;
            unint64_t v13 = v13 & 0xFFFFFFFF00000000 | v111;
            uint64_t result = ((uint64_t (*)(unint64_t, unint64_t))*a3)(v9, v13);
            if (result)
            {
              uint64_t v112 = *v108;
              uint64_t v113 = v107;
              do
              {
                uint64_t v114 = (char *)v12 + v113;
                *((_WORD *)v114 + 2) = *(_WORD *)((char *)v12 + v113);
                v114[6] = *((unsigned char *)v12 + v113 + 2);
                if (!v113)
                {
                  uint64_t v109 = (uint64_t)v12;
                  goto LABEL_90;
                }
                unint64_t v8 = v8 & 0xFFFFFFFF00000000 | v112;
                unint64_t v7 = v7 & 0xFFFFFFFF00000000 | *((unsigned int *)v114 - 1);
                uint64_t result = ((uint64_t (*)(unint64_t, unint64_t))*a3)(v8, v7);
                v113 -= 4;
              }
              while ((result & 1) != 0);
              uint64_t v109 = (uint64_t)v12 + v113 + 4;
LABEL_90:
              *(_WORD *)uint64_t v109 = v112;
              *(unsigned char *)(v109 + 2) = BYTE2(v112);
              a2 = v125;
            }
            uint64_t v104 = v108 + 1;
            v107 += 4;
          }
          while (v108 + 1 != a2);
        }
      }
      else if (!v106)
      {
        do
        {
          uint64_t v118 = *v12;
          uint64_t v117 = v12[1];
          uint64_t v12 = v104;
          unint64_t v9 = v9 & 0xFFFFFFFF00000000 | v117;
          unint64_t v13 = v13 & 0xFFFFFFFF00000000 | v118;
          uint64_t result = ((uint64_t (*)(unint64_t, unint64_t))*a3)(v9, v13);
          if (result)
          {
            uint64_t v119 = *v12;
            uint64_t v120 = v12;
            do
            {
              long long v121 = v120;
              __int16 v122 = *((_WORD *)v120-- - 2);
              *(_WORD *)long long v121 = v122;
              *((unsigned char *)v121 + 2) = *((unsigned char *)v121 - 2);
              unint64_t v8 = v8 & 0xFFFFFFFF00000000 | v119;
              unint64_t v7 = v7 & 0xFFFFFFFF00000000 | *(v121 - 2);
              uint64_t result = ((uint64_t (*)(unint64_t, unint64_t))*a3)(v8, v7);
            }
            while ((result & 1) != 0);
            *(_WORD *)uint64_t v120 = v119;
            *((unsigned char *)v120 + 2) = BYTE2(v119);
            a2 = v125;
          }
          uint64_t v104 = v12 + 1;
        }
        while (v12 + 1 != a2);
      }
      return result;
    }
    unint64_t v9 = v15;
    if (v15 == 1)
    {
      if (v14 != a2)
      {
        return (uint64_t)sub_6CBD8C((unint64_t)v14, a2, a2, a3);
      }
      return result;
    }
    unint64_t v7 = v17 >> 1;
    uint64_t v18 = &v14[v17 >> 1];
    uint64_t v19 = *a3;
    if ((unint64_t)v16 < 0x201)
    {
      char v25 = v19(*v14, *v18);
      unsigned int v26 = (*a3)(*(unsigned int *)v13, *v12);
      if (v25)
      {
        unsigned int v27 = *v18;
        unsigned int v28 = HIWORD(*v18);
        if (v26)
        {
          __int16 v29 = *(_WORD *)v13;
          *((unsigned char *)v18 + 2) = *(unsigned char *)(v13 + 2);
          *(_WORD *)uint64_t v18 = v29;
          goto LABEL_34;
        }
        __int16 v53 = *(_WORD *)v12;
        *((unsigned char *)v18 + 2) = *((unsigned char *)v12 + 2);
        *(_WORD *)uint64_t v18 = v53;
        *((unsigned char *)v12 + 2) = v28;
        *(_WORD *)uint64_t v12 = v27;
        if ((*a3)(*(unsigned int *)v13, *v12))
        {
          unsigned int v27 = *v12;
          __int16 v54 = *(_WORD *)v13;
          *((unsigned char *)v12 + 2) = *(unsigned char *)(v13 + 2);
          *(_WORD *)uint64_t v12 = v54;
          unsigned int v28 = HIWORD(v27);
LABEL_34:
          *(unsigned char *)(v13 + 2) = v28;
          *(_WORD *)unint64_t v13 = v27;
        }
      }
      else if (v26)
      {
        unsigned int v34 = *v12;
        __int16 v35 = *(_WORD *)v13;
        *((unsigned char *)v12 + 2) = *(unsigned char *)(v13 + 2);
        *(_WORD *)uint64_t v12 = v35;
        *(unsigned char *)(v13 + 2) = BYTE2(v34);
        *(_WORD *)unint64_t v13 = v34;
        if ((*a3)(*v12, *v18))
        {
          unsigned int v36 = *v18;
          __int16 v37 = *(_WORD *)v12;
          *((unsigned char *)v18 + 2) = *((unsigned char *)v12 + 2);
          *(_WORD *)uint64_t v18 = v37;
          *((unsigned char *)v12 + 2) = BYTE2(v36);
          *(_WORD *)uint64_t v12 = v36;
          if (a5) {
            goto LABEL_57;
          }
          goto LABEL_56;
        }
      }
      if (a5) {
        goto LABEL_57;
      }
      goto LABEL_56;
    }
    char v20 = v19(*v18, *v14);
    unsigned int v21 = (*a3)(*(unsigned int *)v13, *v18);
    if (v20)
    {
      unsigned int v22 = *v12;
      unsigned int v23 = HIWORD(*v12);
      if (v21)
      {
        __int16 v24 = *(_WORD *)v13;
        *((unsigned char *)v12 + 2) = *(unsigned char *)(v13 + 2);
        *(_WORD *)uint64_t v12 = v24;
      }
      else
      {
        __int16 v38 = *(_WORD *)v18;
        *((unsigned char *)v12 + 2) = *((unsigned char *)v18 + 2);
        *(_WORD *)uint64_t v12 = v38;
        *((unsigned char *)v18 + 2) = v23;
        *(_WORD *)uint64_t v18 = v22;
        if (!(*a3)(*(unsigned int *)v13, *v18)) {
          goto LABEL_26;
        }
        unsigned int v22 = *v18;
        __int16 v39 = *(_WORD *)v13;
        *((unsigned char *)v18 + 2) = *(unsigned char *)(v13 + 2);
        *(_WORD *)uint64_t v18 = v39;
        unsigned int v23 = HIWORD(v22);
      }
      *(unsigned char *)(v13 + 2) = v23;
      *(_WORD *)unint64_t v13 = v22;
    }
    else if (v21)
    {
      unsigned int v30 = *v18;
      __int16 v31 = *(_WORD *)v13;
      *((unsigned char *)v18 + 2) = *(unsigned char *)(v13 + 2);
      *(_WORD *)uint64_t v18 = v31;
      *(unsigned char *)(v13 + 2) = BYTE2(v30);
      *(_WORD *)unint64_t v13 = v30;
      if ((*a3)(*v18, *v12))
      {
        unsigned int v32 = *v12;
        __int16 v33 = *(_WORD *)v18;
        *((unsigned char *)v12 + 2) = *((unsigned char *)v18 + 2);
        *(_WORD *)uint64_t v12 = v33;
        *((unsigned char *)v18 + 2) = BYTE2(v32);
        *(_WORD *)uint64_t v18 = v32;
      }
    }
LABEL_26:
    unsigned int v40 = v12 + 1;
    int v41 = &v12[v7];
    unsigned int v43 = *(v41 - 1);
    uint64_t v42 = v41 - 1;
    char v44 = (*a3)(v43, v12[1]);
    unsigned int v45 = (*a3)(*v127, *v42);
    if (v44)
    {
      int v46 = *v40;
      unsigned int v47 = HIWORD(*v40);
      if (v45)
      {
        __int16 v48 = *(_WORD *)v127;
        *((unsigned char *)v12 + 6) = *((unsigned char *)v127 + 2);
        *(_WORD *)unsigned int v40 = v48;
        *((unsigned char *)v127 + 2) = v47;
        *(_WORD *)unint64_t v127 = v46;
      }
      else
      {
        __int16 v55 = *(_WORD *)v42;
        *((unsigned char *)v12 + 6) = *((unsigned char *)v42 + 2);
        *(_WORD *)unsigned int v40 = v55;
        *((unsigned char *)v42 + 2) = v47;
        *(_WORD *)uint64_t v42 = v46;
        if ((*a3)(*v127, *v42))
        {
          unsigned int v56 = *v42;
          __int16 v57 = *(_WORD *)v127;
          *((unsigned char *)v42 + 2) = *((unsigned char *)v127 + 2);
          *(_WORD *)uint64_t v42 = v57;
          *((unsigned char *)v127 + 2) = BYTE2(v56);
          *(_WORD *)unint64_t v127 = v56;
        }
      }
    }
    else if (v45)
    {
      unsigned int v49 = *v42;
      __int16 v50 = *(_WORD *)v127;
      *((unsigned char *)v42 + 2) = *((unsigned char *)v127 + 2);
      *(_WORD *)uint64_t v42 = v50;
      *((unsigned char *)v127 + 2) = BYTE2(v49);
      *(_WORD *)unint64_t v127 = v49;
      if ((*a3)(*v42, *v40))
      {
        int v51 = *v40;
        __int16 v52 = *(_WORD *)v42;
        *((unsigned char *)v12 + 6) = *((unsigned char *)v42 + 2);
        *(_WORD *)unsigned int v40 = v52;
        *((unsigned char *)v42 + 2) = BYTE2(v51);
        *(_WORD *)uint64_t v42 = v51;
      }
    }
    unint64_t v58 = v12 + 2;
    int v59 = &v12[v7];
    unsigned int v60 = v59[1];
    unint64_t v7 = (unint64_t)(v59 + 1);
    char v61 = (*a3)(v60, v12[2]);
    unsigned int v62 = (*a3)(*v126, *(unsigned int *)v7);
    if (v61)
    {
      int v63 = *v58;
      unsigned int v64 = HIWORD(*v58);
      if (v62)
      {
        __int16 v65 = *(_WORD *)v126;
        *((unsigned char *)v12 + 10) = *((unsigned char *)v126 + 2);
        *(_WORD *)unint64_t v58 = v65;
        *((unsigned char *)v126 + 2) = v64;
        *(_WORD *)int v126 = v63;
      }
      else
      {
        __int16 v70 = *(_WORD *)v7;
        *((unsigned char *)v12 + 10) = *(unsigned char *)(v7 + 2);
        *(_WORD *)unint64_t v58 = v70;
        *(unsigned char *)(v7 + 2) = v64;
        *(_WORD *)unint64_t v7 = v63;
        if ((*a3)(*v126, *(unsigned int *)v7))
        {
          int v71 = *(_DWORD *)v7;
          __int16 v72 = *(_WORD *)v126;
          *(unsigned char *)(v7 + 2) = *((unsigned char *)v126 + 2);
          *(_WORD *)unint64_t v7 = v72;
          *((unsigned char *)v126 + 2) = BYTE2(v71);
          *(_WORD *)int v126 = v71;
        }
      }
    }
    else if (v62)
    {
      int v66 = *(_DWORD *)v7;
      __int16 v67 = *(_WORD *)v126;
      *(unsigned char *)(v7 + 2) = *((unsigned char *)v126 + 2);
      *(_WORD *)unint64_t v7 = v67;
      *((unsigned char *)v126 + 2) = BYTE2(v66);
      *(_WORD *)int v126 = v66;
      if ((*a3)(*(unsigned int *)v7, *v58))
      {
        int v68 = *v58;
        __int16 v69 = *(_WORD *)v7;
        *((unsigned char *)v12 + 10) = *(unsigned char *)(v7 + 2);
        *(_WORD *)unint64_t v58 = v69;
        *(unsigned char *)(v7 + 2) = BYTE2(v68);
        *(_WORD *)unint64_t v7 = v68;
      }
    }
    char v73 = (*a3)(*v18, *v42);
    unsigned int v74 = (*a3)(*(unsigned int *)v7, *v18);
    if (v73)
    {
      unsigned int v75 = *v42;
      unsigned int v76 = HIWORD(*v42);
      if (v74)
      {
        *(_WORD *)uint64_t v42 = *(_WORD *)v7;
        *((unsigned char *)v42 + 2) = *(unsigned char *)(v7 + 2);
        *(_WORD *)unint64_t v7 = v75;
        *(unsigned char *)(v7 + 2) = v76;
        a2 = v125;
      }
      else
      {
        *(_WORD *)uint64_t v42 = *(_WORD *)v18;
        *((unsigned char *)v42 + 2) = *((unsigned char *)v18 + 2);
        *(_WORD *)uint64_t v18 = v75;
        *((unsigned char *)v18 + 2) = v76;
        a2 = v125;
        if ((*a3)(*(unsigned int *)v7, *v18))
        {
          unsigned int v79 = *v18;
          *(_WORD *)uint64_t v18 = *(_WORD *)v7;
          *((unsigned char *)v18 + 2) = *(unsigned char *)(v7 + 2);
          *(_WORD *)unint64_t v7 = v79;
          *(unsigned char *)(v7 + 2) = BYTE2(v79);
        }
      }
    }
    else
    {
      a2 = v125;
      if (v74)
      {
        unsigned int v77 = *v18;
        *((unsigned char *)v18 + 2) = *(unsigned char *)(v7 + 2);
        *(_WORD *)uint64_t v18 = *(_WORD *)v7;
        *(_WORD *)unint64_t v7 = v77;
        *(unsigned char *)(v7 + 2) = BYTE2(v77);
        if ((*a3)(*v18, *v42))
        {
          unsigned int v78 = *v42;
          *(_WORD *)uint64_t v42 = *(_WORD *)v18;
          *((unsigned char *)v42 + 2) = *((unsigned char *)v18 + 2);
          *(_WORD *)uint64_t v18 = v78;
          *((unsigned char *)v18 + 2) = BYTE2(v78);
        }
      }
    }
    unsigned int v80 = *v12;
    __int16 v81 = *(_WORD *)v18;
    *((unsigned char *)v12 + 2) = *((unsigned char *)v18 + 2);
    *(_WORD *)uint64_t v12 = v81;
    *((unsigned char *)v18 + 2) = BYTE2(v80);
    *(_WORD *)uint64_t v18 = v80;
    if (a5) {
      goto LABEL_57;
    }
LABEL_56:
    unint64_t v8 = v8 & 0xFFFFFFFF00000000 | *v12;
    unint64_t v124 = v124 & 0xFFFFFFFF00000000 | *(v12 - 1);
    if ((((uint64_t (*)(void))*a3)() & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_6CB3C8(v12, (unint64_t)a2, (uint64_t (**)(unint64_t, unint64_t))a3);
      __int16 v14 = (unsigned int *)result;
      goto LABEL_62;
    }
LABEL_57:
    char v82 = (unsigned int *)sub_6CB570(v12, (unint64_t)a2, (uint64_t (**)(unint64_t, unint64_t))a3);
    if ((v83 & 1) == 0) {
      goto LABEL_60;
    }
    BOOL v84 = sub_6CB724(v12, v82, (uint64_t (**)(unint64_t, unint64_t))a3);
    __int16 v14 = v82 + 1;
    uint64_t result = sub_6CB724(v82 + 1, a2, (uint64_t (**)(unint64_t, unint64_t))a3);
    if (result)
    {
      a4 = -(uint64_t)v9;
      a2 = v82;
      if (v84) {
        return result;
      }
      goto LABEL_2;
    }
    unint64_t v15 = v9 + 1;
    if (!v84)
    {
LABEL_60:
      uint64_t result = sub_6CA8EC(v12, v82, a3, -(uint64_t)v9, a5 & 1);
      __int16 v14 = v82 + 1;
LABEL_62:
      a5 = 0;
      a4 = -(uint64_t)v9;
      goto LABEL_3;
    }
  }
  switch(v17)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      unsigned int v86 = *(a2 - 1);
      uint64_t v85 = a2 - 1;
      uint64_t result = ((uint64_t (*)(void, void))*a3)(v86, *v14);
      if (!result) {
        return result;
      }
      unsigned int v87 = *v14;
      goto LABEL_70;
    case 3uLL:
      unint64_t v88 = v14 + 1;
      char v89 = (*a3)(v14[1], *v14);
      unsigned int v90 = *(a2 - 1);
      uint64_t v85 = a2 - 1;
      uint64_t result = ((uint64_t (*)(void, void))*a3)(v90, v14[1]);
      if (v89)
      {
        unsigned int v87 = *v14;
        if (result)
        {
LABEL_70:
          __int16 v91 = *(_WORD *)v85;
          *((unsigned char *)v14 + 2) = *((unsigned char *)v85 + 2);
          *(_WORD *)__int16 v14 = v91;
        }
        else
        {
          *(_WORD *)__int16 v14 = *v88;
          *((unsigned char *)v14 + 2) = *((unsigned char *)v14 + 6);
          *((unsigned char *)v14 + 6) = BYTE2(v87);
          *((_WORD *)v14 + 2) = v87;
          uint64_t result = ((uint64_t (*)(void, void))*a3)(*v85, v14[1]);
          if (!result) {
            return result;
          }
          unsigned int v87 = *(_DWORD *)v88;
          __int16 v123 = *(_WORD *)v85;
          *((unsigned char *)v14 + 6) = *((unsigned char *)v85 + 2);
          _WORD *v88 = v123;
        }
        *((unsigned char *)v85 + 2) = BYTE2(v87);
        *(_WORD *)uint64_t v85 = v87;
        return result;
      }
      if (result)
      {
        unsigned int v115 = v14[1];
        __int16 v116 = *(_WORD *)v85;
        *((unsigned char *)v14 + 6) = *((unsigned char *)v85 + 2);
        _WORD *v88 = v116;
        *((unsigned char *)v85 + 2) = BYTE2(v115);
        *(_WORD *)uint64_t v85 = v115;
        uint64_t result = ((uint64_t (*)(void, void))*a3)(v14[1], *v14);
        if (result)
        {
          unsigned int v102 = *v14;
          *(_WORD *)__int16 v14 = *v88;
          char v103 = *((unsigned char *)v14 + 6);
LABEL_104:
          *((unsigned char *)v14 + 2) = v103;
          *((_WORD *)v14 + 2) = v102;
          *((unsigned char *)v14 + 6) = BYTE2(v102);
        }
      }
      break;
    case 4uLL:
      return sub_6CBBC0(v14, v14 + 1, v14 + 2, (unsigned int *)v13, (uint64_t (**)(void, void))a3);
    case 5uLL:
      __int16 v92 = v14 + 1;
      char v93 = v14 + 2;
      unint64_t v94 = v14 + 3;
      sub_6CBBC0(v14, v14 + 1, v14 + 2, v14 + 3, (uint64_t (**)(void, void))a3);
      unsigned int v96 = *(a2 - 1);
      uint64_t v95 = a2 - 1;
      uint64_t result = ((uint64_t (*)(void, void))*a3)(v96, v14[3]);
      if (!result) {
        return result;
      }
      int v97 = *v94;
      __int16 v98 = *(_WORD *)v95;
      *((unsigned char *)v14 + 14) = *((unsigned char *)v95 + 2);
      *(_WORD *)unint64_t v94 = v98;
      *((unsigned char *)v95 + 2) = BYTE2(v97);
      *(_WORD *)uint64_t v95 = v97;
      uint64_t result = ((uint64_t (*)(void, void))*a3)(*v94, *v93);
      if (!result) {
        return result;
      }
      int v99 = *v93;
      *((unsigned char *)v14 + 10) = *((unsigned char *)v14 + 14);
      *(_WORD *)char v93 = *(_WORD *)v94;
      *(_WORD *)unint64_t v94 = v99;
      *((unsigned char *)v14 + 14) = BYTE2(v99);
      uint64_t result = ((uint64_t (*)(void, void))*a3)(*v93, *(unsigned int *)v92);
      if (!result) {
        return result;
      }
      uint64_t v100 = *v14;
      unsigned int v101 = v14[1];
      *((unsigned char *)v14 + 6) = *((unsigned char *)v14 + 10);
      *__int16 v92 = *(_WORD *)v93;
      *((_WORD *)v14 + 4) = v101;
      *((unsigned char *)v14 + 10) = BYTE2(v101);
      uint64_t result = ((uint64_t (*)(void, uint64_t))*a3)(v14[1], v100);
      if (!result) {
        return result;
      }
      unsigned int v102 = *v14;
      *(_WORD *)__int16 v14 = *v92;
      char v103 = *((unsigned char *)v14 + 6);
      goto LABEL_104;
    default:
      JUMPOUT(0);
  }
  return result;
}

unsigned int *sub_6CB3C8(unsigned int *a1, unint64_t a2, uint64_t (**a3)(unint64_t, unint64_t))
{
  unint64_t v8 = a2;
  unint64_t v10 = *a1;
  if ((*a3)(v10, *(unsigned int *)(a2 - 4)))
  {
    unint64_t v11 = a1;
    do
    {
      unsigned int v12 = v11[1];
      ++v11;
      unint64_t v4 = v4 & 0xFFFFFFFF00000000 | v10;
      unint64_t v3 = v3 & 0xFFFFFFFF00000000 | v12;
    }
    while (((*a3)(v4, v3) & 1) == 0);
  }
  else
  {
    unint64_t v5 = (unint64_t)(a1 + 1);
    do
    {
      unint64_t v11 = (unsigned int *)v5;
      if (v5 >= v8) {
        break;
      }
      v5 += 4;
      unint64_t v4 = v4 & 0xFFFFFFFF00000000 | v10;
      unint64_t v3 = v3 & 0xFFFFFFFF00000000 | *v11;
    }
    while (!(*a3)(v4, v3));
  }
  if ((unint64_t)v11 < v8)
  {
    do
    {
      unsigned int v13 = *(_DWORD *)(v8 - 4);
      v8 -= 4;
      unint64_t v3 = v3 & 0xFFFFFFFF00000000 | v10;
      unint64_t v4 = v4 & 0xFFFFFFFF00000000 | v13;
    }
    while (((*a3)(v3, v4) & 1) != 0);
  }
  while ((unint64_t)v11 < v8)
  {
    int v14 = *v11;
    __int16 v15 = *(_WORD *)v8;
    *((unsigned char *)v11 + 2) = *(unsigned char *)(v8 + 2);
    *(_WORD *)unint64_t v11 = v15;
    *(unsigned char *)(v8 + 2) = BYTE2(v14);
    *(_WORD *)unint64_t v8 = v14;
    do
    {
      unsigned int v16 = v11[1];
      ++v11;
      unint64_t v6 = v6 & 0xFFFFFFFF00000000 | v10;
      unint64_t v5 = v5 & 0xFFFFFFFF00000000 | v16;
    }
    while (!(*a3)(v6, v5));
    do
    {
      unsigned int v17 = *(_DWORD *)(v8 - 4);
      v8 -= 4;
      unint64_t v4 = v4 & 0xFFFFFFFF00000000 | v10;
      unint64_t v3 = v3 & 0xFFFFFFFF00000000 | v17;
    }
    while (((*a3)(v4, v3) & 1) != 0);
  }
  if (v11 - 1 != a1)
  {
    __int16 v18 = *((_WORD *)v11 - 2);
    *((unsigned char *)a1 + 2) = *((unsigned char *)v11 - 2);
    *(_WORD *)a1 = v18;
  }
  *((_WORD *)v11 - 2) = v10;
  *((unsigned char *)v11 - 2) = BYTE2(v10);
  return v11;
}

unint64_t sub_6CB570(unsigned int *a1, unint64_t a2, uint64_t (**a3)(unint64_t, unint64_t))
{
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  do
  {
    unint64_t v4 = v4 & 0xFFFFFFFF00000000 | a1[v10 + 1];
    unint64_t v3 = v3 & 0xFFFFFFFF00000000 | v11;
    ++v10;
  }
  while (((*a3)(v4, v3) & 1) != 0);
  unsigned int v12 = &a1[v10];
  unint64_t v13 = (unint64_t)&a1[v10 - 1];
  if (v10 == 1)
  {
    do
    {
      if ((unint64_t)v12 >= a2) {
        break;
      }
      unsigned int v15 = *(_DWORD *)(a2 - 4);
      a2 -= 4;
      unint64_t v5 = v5 & 0xFFFFFFFF00000000 | v15;
      unint64_t v4 = v4 & 0xFFFFFFFF00000000 | v11;
    }
    while (((*a3)(v5, v4) & 1) == 0);
  }
  else
  {
    do
    {
      unsigned int v14 = *(_DWORD *)(a2 - 4);
      a2 -= 4;
      unint64_t v4 = v4 & 0xFFFFFFFF00000000 | v14;
      unint64_t v5 = v5 & 0xFFFFFFFF00000000 | v11;
    }
    while (!(*a3)(v4, v5));
  }
  if ((unint64_t)v12 < a2)
  {
    unint64_t v16 = a2;
    do
    {
      unsigned int v17 = *v12;
      __int16 v18 = *(_WORD *)v16;
      *((unsigned char *)v12 + 2) = *(unsigned char *)(v16 + 2);
      *(_WORD *)unsigned int v12 = v18;
      *(unsigned char *)(v16 + 2) = BYTE2(v17);
      *(_WORD *)unint64_t v16 = v17;
      do
      {
        unsigned int v19 = v12[1];
        ++v12;
        unint64_t v6 = v6 & 0xFFFFFFFF00000000 | v19;
        unint64_t v5 = v5 & 0xFFFFFFFF00000000 | v11;
      }
      while (((*a3)(v6, v5) & 1) != 0);
      do
      {
        unsigned int v20 = *(_DWORD *)(v16 - 4);
        v16 -= 4;
        unint64_t v4 = v4 & 0xFFFFFFFF00000000 | v20;
        unint64_t v13 = v13 & 0xFFFFFFFF00000000 | v11;
      }
      while (!(*a3)(v4, v13));
    }
    while ((unint64_t)v12 < v16);
    unint64_t v13 = (unint64_t)(v12 - 1);
  }
  if ((unsigned int *)v13 != a1)
  {
    __int16 v21 = *(_WORD *)v13;
    *((unsigned char *)a1 + 2) = *(unsigned char *)(v13 + 2);
    *(_WORD *)a1 = v21;
  }
  *(_WORD *)unint64_t v13 = v11;
  *(unsigned char *)(v13 + 2) = BYTE2(v11);
  return v13;
}

BOOL sub_6CB724(unsigned int *a1, unsigned int *a2, uint64_t (**a3)(unint64_t, unint64_t))
{
  unint64_t v6 = a2;
  uint64_t v8 = a2 - a1;
  BOOL result = 1;
  switch(v8)
  {
    case 0:
    case 1:
      return result;
    case 2:
      uint64_t v10 = a2 - 1;
      if (!(*a3)(*(a2 - 1), *a1)) {
        return 1;
      }
      unsigned int v11 = *a1;
      goto LABEL_6;
    case 3:
      unsigned int v12 = a1 + 1;
      char v13 = (*a3)(a1[1], *a1);
      unsigned int v14 = *(v6 - 1);
      uint64_t v10 = v6 - 1;
      int v15 = (*a3)(v14, a1[1]);
      if (v13)
      {
        unsigned int v11 = *a1;
        if (v15)
        {
LABEL_6:
          __int16 v16 = *(_WORD *)v10;
          *((unsigned char *)a1 + 2) = *((unsigned char *)v10 + 2);
          *(_WORD *)a1 = v16;
LABEL_7:
          *((unsigned char *)v10 + 2) = BYTE2(v11);
          *(_WORD *)uint64_t v10 = v11;
          return 1;
        }
        *(_WORD *)a1 = *v12;
        *((unsigned char *)a1 + 2) = *((unsigned char *)a1 + 6);
        *((unsigned char *)a1 + 6) = BYTE2(v11);
        *((_WORD *)a1 + 2) = v11;
        if ((*a3)(*v10, a1[1]))
        {
          unsigned int v11 = *(_DWORD *)v12;
          __int16 v39 = *(_WORD *)v10;
          *((unsigned char *)a1 + 6) = *((unsigned char *)v10 + 2);
          *unsigned int v12 = v39;
          goto LABEL_7;
        }
      }
      else if (v15)
      {
        unsigned int v34 = a1[1];
        __int16 v35 = *(_WORD *)v10;
        *((unsigned char *)a1 + 6) = *((unsigned char *)v10 + 2);
        *unsigned int v12 = v35;
        *((unsigned char *)v10 + 2) = BYTE2(v34);
        *(_WORD *)uint64_t v10 = v34;
        if ((*a3)(a1[1], *a1))
        {
          unsigned int v32 = *a1;
          *(_WORD *)a1 = *v12;
          char v33 = *((unsigned char *)a1 + 6);
LABEL_20:
          *((unsigned char *)a1 + 2) = v33;
          *((_WORD *)a1 + 2) = v32;
          *((unsigned char *)a1 + 6) = BYTE2(v32);
        }
      }
      return 1;
    case 4:
      sub_6CBBC0(a1, a1 + 1, a1 + 2, a2 - 1, a3);
      return 1;
    case 5:
      unsigned int v22 = a1 + 1;
      unsigned int v23 = a1 + 2;
      __int16 v24 = a1 + 3;
      sub_6CBBC0(a1, a1 + 1, a1 + 2, a1 + 3, a3);
      unsigned int v26 = *(v6 - 1);
      char v25 = v6 - 1;
      if (!(*a3)(v26, a1[3])) {
        return 1;
      }
      int v27 = *v24;
      __int16 v28 = *(_WORD *)v25;
      *((unsigned char *)a1 + 14) = *((unsigned char *)v25 + 2);
      *(_WORD *)__int16 v24 = v28;
      *((unsigned char *)v25 + 2) = BYTE2(v27);
      *(_WORD *)char v25 = v27;
      if (!(*a3)(*v24, *v23)) {
        return 1;
      }
      int v29 = *v23;
      *((unsigned char *)a1 + 10) = *((unsigned char *)a1 + 14);
      *(_WORD *)unsigned int v23 = *(_WORD *)v24;
      *(_WORD *)__int16 v24 = v29;
      *((unsigned char *)a1 + 14) = BYTE2(v29);
      if (!(*a3)(*v23, *(unsigned int *)v22)) {
        return 1;
      }
      unint64_t v30 = *a1;
      unsigned int v31 = a1[1];
      *((unsigned char *)a1 + 6) = *((unsigned char *)a1 + 10);
      *unsigned int v22 = *(_WORD *)v23;
      *((_WORD *)a1 + 4) = v31;
      *((unsigned char *)a1 + 10) = BYTE2(v31);
      if (!(*a3)(a1[1], v30)) {
        return 1;
      }
      unsigned int v32 = *a1;
      *(_WORD *)a1 = *v22;
      char v33 = *((unsigned char *)a1 + 6);
      goto LABEL_20;
    default:
      unsigned int v17 = a1 + 1;
      unint64_t v18 = (*a3)(a1[1], *a1);
      unsigned int v19 = a1 + 2;
      int v20 = (*a3)(a1[2], a1[1]);
      if (v18)
      {
        unsigned int v21 = *a1;
        if (v20)
        {
          *(_WORD *)a1 = *v19;
          *((unsigned char *)a1 + 2) = *((unsigned char *)a1 + 10);
          *((unsigned char *)a1 + 10) = BYTE2(v21);
          *((_WORD *)a1 + 4) = v21;
        }
        else
        {
          *(_WORD *)a1 = *v17;
          *((unsigned char *)a1 + 2) = *((unsigned char *)a1 + 6);
          *((unsigned char *)a1 + 6) = BYTE2(v21);
          *((_WORD *)a1 + 2) = v21;
          if ((*a3)(a1[2], a1[1]))
          {
            int v40 = *(_DWORD *)v17;
            *unsigned int v17 = *v19;
            *((unsigned char *)a1 + 6) = *((unsigned char *)a1 + 10);
            _WORD *v19 = v40;
            *((unsigned char *)a1 + 10) = BYTE2(v40);
          }
        }
      }
      else if (v20)
      {
        unint64_t v36 = *a1;
        unsigned int v37 = a1[1];
        *((unsigned char *)a1 + 6) = *((unsigned char *)a1 + 10);
        *unsigned int v17 = *v19;
        *((_WORD *)a1 + 4) = v37;
        *((unsigned char *)a1 + 10) = BYTE2(v37);
        if ((*a3)(a1[1], v36))
        {
          unsigned int v38 = *a1;
          *(_WORD *)a1 = *v17;
          *((unsigned char *)a1 + 2) = *((unsigned char *)a1 + 6);
          *((_WORD *)a1 + 2) = v38;
          *((unsigned char *)a1 + 6) = BYTE2(v38);
        }
      }
      int v41 = a1 + 3;
      if (a1 + 3 == v6) {
        return 1;
      }
      uint64_t v42 = 0;
      int v43 = 0;
      __int16 v48 = v6;
      while (1)
      {
        unint64_t v4 = v4 & 0xFFFFFFFF00000000 | *v41;
        unint64_t v49 = v49 & 0xFFFFFFFF00000000 | *(unsigned int *)v19;
        if (((unsigned int (*)(unint64_t))*a3)(v4))
        {
          uint64_t v45 = *v41;
          uint64_t v46 = v42;
          do
          {
            unsigned int v47 = (char *)a1 + v46;
            *((_WORD *)v47 + 6) = *(_WORD *)((char *)a1 + v46 + 8);
            v47[14] = *((unsigned char *)a1 + v46 + 10);
            if (v46 == -8)
            {
              uint64_t v44 = (uint64_t)a1;
              goto LABEL_31;
            }
            unint64_t v3 = v3 & 0xFFFFFFFF00000000 | v45;
            unint64_t v18 = v18 & 0xFFFFFFFF00000000 | *((unsigned int *)v47 + 1);
            v46 -= 4;
          }
          while (((*a3)(v3, v18) & 1) != 0);
          uint64_t v44 = (uint64_t)a1 + v46 + 12;
LABEL_31:
          *(_WORD *)uint64_t v44 = v45;
          *(unsigned char *)(v44 + 2) = BYTE2(v45);
          ++v43;
          unint64_t v6 = v48;
          if (v43 == 8) {
            return v41 + 1 == v48;
          }
        }
        unsigned int v19 = v41;
        v42 += 4;
        if (++v41 == v6) {
          return 1;
        }
      }
  }
}

uint64_t sub_6CBBC0(unsigned int *a1, unsigned int *a2, unsigned int *a3, unsigned int *a4, uint64_t (**a5)(void, void))
{
  char v10 = (*a5)(*a2, *a1);
  int v11 = (*a5)(*a3, *a2);
  if (v10)
  {
    int v12 = *a1;
    if (v11)
    {
      __int16 v13 = *(_WORD *)a3;
      *((unsigned char *)a1 + 2) = *((unsigned char *)a3 + 2);
      *(_WORD *)a1 = v13;
LABEL_9:
      *((unsigned char *)a3 + 2) = BYTE2(v12);
      *(_WORD *)a3 = v12;
      goto LABEL_10;
    }
    __int16 v18 = *(_WORD *)a2;
    *((unsigned char *)a1 + 2) = *((unsigned char *)a2 + 2);
    *(_WORD *)a1 = v18;
    *((unsigned char *)a2 + 2) = BYTE2(v12);
    *(_WORD *)a2 = v12;
    if ((*a5)(*a3, *a2))
    {
      int v12 = *a2;
      __int16 v19 = *(_WORD *)a3;
      *((unsigned char *)a2 + 2) = *((unsigned char *)a3 + 2);
      *(_WORD *)a2 = v19;
      goto LABEL_9;
    }
  }
  else if (v11)
  {
    int v14 = *a2;
    __int16 v15 = *(_WORD *)a3;
    *((unsigned char *)a2 + 2) = *((unsigned char *)a3 + 2);
    *(_WORD *)a2 = v15;
    *((unsigned char *)a3 + 2) = BYTE2(v14);
    *(_WORD *)a3 = v14;
    if ((*a5)(*a2, *a1))
    {
      int v16 = *a1;
      __int16 v17 = *(_WORD *)a2;
      *((unsigned char *)a1 + 2) = *((unsigned char *)a2 + 2);
      *(_WORD *)a1 = v17;
      *((unsigned char *)a2 + 2) = BYTE2(v16);
      *(_WORD *)a2 = v16;
    }
  }
LABEL_10:
  uint64_t result = (*a5)(*a4, *a3);
  if (result)
  {
    int v21 = *a3;
    __int16 v22 = *(_WORD *)a4;
    *((unsigned char *)a3 + 2) = *((unsigned char *)a4 + 2);
    *(_WORD *)a3 = v22;
    *((unsigned char *)a4 + 2) = BYTE2(v21);
    *(_WORD *)a4 = v21;
    uint64_t result = (*a5)(*a3, *a2);
    if (result)
    {
      int v23 = *a2;
      __int16 v24 = *(_WORD *)a3;
      *((unsigned char *)a2 + 2) = *((unsigned char *)a3 + 2);
      *(_WORD *)a2 = v24;
      *((unsigned char *)a3 + 2) = BYTE2(v23);
      *(_WORD *)a3 = v23;
      uint64_t result = (*a5)(*a2, *a1);
      if (result)
      {
        int v25 = *a1;
        __int16 v26 = *(_WORD *)a2;
        *((unsigned char *)a1 + 2) = *((unsigned char *)a2 + 2);
        *(_WORD *)a1 = v26;
        *((unsigned char *)a2 + 2) = BYTE2(v25);
        *(_WORD *)a2 = v25;
      }
    }
  }
  return result;
}

unsigned int *sub_6CBD8C(unint64_t a1, unsigned int *a2, unsigned int *a3, unsigned int (**a4)(unint64_t, unint64_t))
{
  if ((unsigned int *)a1 != a2)
  {
    unint64_t v9 = a2;
    unint64_t v10 = a1;
    int64_t v11 = (int64_t)a2 - a1;
    uint64_t v12 = (uint64_t)((uint64_t)a2 - a1) >> 2;
    if ((uint64_t)((uint64_t)a2 - a1) >= 5)
    {
      unint64_t v13 = (unint64_t)(v12 - 2) >> 1;
      unint64_t v14 = v13 + 1;
      unint64_t v4 = a1 + 4 * v13;
      do
      {
        sub_6CC23C(v10, a4, v12, (unsigned int *)v4);
        v4 -= 4;
        --v14;
      }
      while (v14);
    }
    __int16 v15 = v9;
    char v61 = (unsigned int *)v10;
    if (v9 == a3) {
      goto LABEL_32;
    }
    if (v11 < 8)
    {
      int v16 = v9;
      do
      {
        unint64_t v10 = v10 & 0xFFFFFFFF00000000 | *v16;
        unint64_t v4 = v4 & 0xFFFFFFFF00000000 | *v61;
        if ((*a4)(v10, v4))
        {
          unsigned int v17 = *v16;
          __int16 v18 = *(_WORD *)v61;
          *((unsigned char *)v16 + 2) = *((unsigned char *)v61 + 2);
          *(_WORD *)int v16 = v18;
          *((unsigned char *)v61 + 2) = BYTE2(v17);
          *(_WORD *)char v61 = v17;
        }
        ++v16;
      }
      while (v16 != a3);
      __int16 v15 = a3;
      unint64_t v10 = (unint64_t)v61;
LABEL_32:
      if (v11 < 5) {
        return v15;
      }
LABEL_33:
      unint64_t v58 = v15;
      __int16 v55 = v9;
      uint64_t v30 = (unint64_t)v11 >> 2;
      while (1)
      {
        uint64_t v33 = 0;
        LODWORD(v60) = *(_DWORD *)v10;
        unsigned int v34 = (unsigned int *)v10;
        do
        {
          unsigned int v31 = &v34[v33 + 1];
          uint64_t v36 = (2 * v33) | 1;
          uint64_t v37 = 2 * v33 + 2;
          if (v37 < v30)
          {
            unint64_t v4 = v4 & 0xFFFFFFFF00000000 | *v31;
            unint64_t v10 = v10 & 0xFFFFFFFF00000000 | v34[v33 + 2];
            if ((*a4)(v4, v10))
            {
              ++v31;
              uint64_t v36 = v37;
            }
          }
          __int16 v35 = *(_WORD *)v31;
          *((unsigned char *)v34 + 2) = *((unsigned char *)v31 + 2);
          *(_WORD *)unsigned int v34 = v35;
          unsigned int v34 = v31;
          uint64_t v33 = v36;
        }
        while (v36 <= (uint64_t)((unint64_t)(v30 - 2) >> 1));
        unsigned int v38 = v55 - 1;
        if (v31 != --v55)
        {
          __int16 v40 = *(_WORD *)v38;
          *((unsigned char *)v31 + 2) = *((unsigned char *)v38 + 2);
          *(_WORD *)unsigned int v31 = v40;
          unint64_t v10 = (unint64_t)v61;
          *((unsigned char *)v38 + 2) = BYTE2(v60);
          *(_WORD *)unsigned int v38 = v60;
          uint64_t v41 = (char *)v31 - (char *)v61 + 4;
          if (v41 < 5) {
            goto LABEL_36;
          }
          unint64_t v42 = (((unint64_t)v41 >> 2) - 2) >> 1;
          int v43 = &v61[v42];
          if (!(*a4)(*v43, *v31)) {
            goto LABEL_36;
          }
          uint64_t v60 = *v31;
          do
          {
            uint64_t v44 = v43;
            __int16 v45 = *(_WORD *)v43;
            *((unsigned char *)v31 + 2) = *((unsigned char *)v43 + 2);
            *(_WORD *)unsigned int v31 = v45;
            if (!v42) {
              break;
            }
            unint64_t v42 = (v42 - 1) >> 1;
            int v43 = &v61[v42];
            unint64_t v4 = v4 & 0xFFFFFFFF00000000 | *v43;
            unint64_t v10 = v10 & 0xFFFFFFFF00000000 | v60;
            unsigned int v31 = v44;
          }
          while ((((uint64_t (*)(unint64_t, unint64_t))*a4)(v4, v10) & 1) != 0);
          unsigned int v31 = v44;
        }
        unint64_t v10 = (unint64_t)v61;
        *(_WORD *)unsigned int v31 = v60;
        *((unsigned char *)v31 + 2) = BYTE2(v60);
LABEL_36:
        if (v30-- <= 2) {
          return v58;
        }
      }
    }
    uint64_t v56 = v12;
    int64_t v57 = (unint64_t)(v12 - 2) >> 1;
    unint64_t v4 = v10 + 4;
    unsigned int v47 = (unsigned int *)(v10 + 8);
    unint64_t v48 = v10 + 4;
    __int16 v54 = v9;
    int64_t v49 = v11;
    __int16 v50 = a3;
    while (1)
    {
      unint64_t v6 = v6 & 0xFFFFFFFF00000000 | *v9;
      unint64_t v5 = v5 & 0xFFFFFFFF00000000 | *(unsigned int *)v10;
      if ((*a4)(v6, v5))
      {
        unsigned int v19 = *v9;
        __int16 v20 = *(_WORD *)v10;
        *((unsigned char *)v9 + 2) = *(unsigned char *)(v10 + 2);
        *(_WORD *)unint64_t v9 = v20;
        *(unsigned char *)(v10 + 2) = BYTE2(v19);
        *(_WORD *)unint64_t v10 = v19;
        if (v11 == 8)
        {
          int v21 = (unsigned int *)v4;
          uint64_t v22 = 1;
          if ((((uint64_t (*)(void, void))*a4)(*(unsigned int *)v4, *(unsigned int *)v10) & 1) == 0) {
            goto LABEL_22;
          }
        }
        else
        {
          int v21 = v47;
          if ((*a4)(*(unsigned int *)v4, *v47))
          {
            uint64_t v22 = 2;
          }
          else
          {
            int v21 = (unsigned int *)v4;
            uint64_t v22 = 1;
          }
          if ((((uint64_t (*)(void, void))*a4)(*v21, *(unsigned int *)v10) & 1) == 0)
          {
LABEL_22:
            int v51 = v9;
            unint64_t v52 = v6;
            unint64_t v53 = v5;
            uint64_t v59 = *(unsigned int *)v10;
            unint64_t v23 = v10;
            do
            {
              int v25 = v21;
              __int16 v26 = *(_WORD *)v21;
              *(unsigned char *)(v23 + 2) = *((unsigned char *)v21 + 2);
              *(_WORD *)unint64_t v23 = v26;
              if (v57 < v22) {
                break;
              }
              uint64_t v27 = (2 * v22) | 1;
              int v21 = (unsigned int *)(v10 + 4 * v27);
              uint64_t v28 = 2 * v22 + 2;
              if (v28 < v56)
              {
                int64_t v11 = v11 & 0xFFFFFFFF00000000 | *v21;
                unint64_t v5 = v5 & 0xFFFFFFFF00000000 | v21[1];
                unsigned int v29 = (*a4)(v11, v5);
                if (v29) {
                  ++v21;
                }
                unint64_t v10 = (unint64_t)v61;
                if (v29) {
                  uint64_t v27 = v28;
                }
              }
              unint64_t v6 = v6 & 0xFFFFFFFF00000000 | *v21;
              unint64_t v4 = v4 & 0xFFFFFFFF00000000 | v59;
              unsigned int v24 = (*a4)(v6, v4);
              unint64_t v23 = (unint64_t)v25;
              uint64_t v22 = v27;
            }
            while (!v24);
            *(_WORD *)int v25 = v59;
            *((unsigned char *)v25 + 2) = BYTE2(v59);
            int64_t v11 = v49;
            a3 = v50;
            unint64_t v4 = v48;
            unint64_t v6 = v52;
            unint64_t v5 = v53;
            unint64_t v9 = v51;
          }
        }
      }
      if (++v9 == a3)
      {
        __int16 v15 = a3;
        unint64_t v9 = v54;
        goto LABEL_33;
      }
    }
  }
  return a3;
}

uint64_t sub_6CC23C(uint64_t result, unsigned int (**a2)(unint64_t, unint64_t), uint64_t a3, unsigned int *a4)
{
  unint64_t v7 = a3 - 2;
  if (a3 >= 2)
  {
    uint64_t v8 = a4;
    unint64_t v9 = result;
    int64_t v21 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) >= ((uint64_t)a4 - result) >> 2)
    {
      uint64_t v11 = ((uint64_t)a4 - result) >> 1;
      uint64_t v12 = v11 + 1;
      unint64_t v13 = (unsigned int *)(result + 4 * (v11 + 1));
      uint64_t v14 = v11 + 2;
      if (v11 + 2 < a3)
      {
        unint64_t v4 = (unint64_t)(v13 + 1);
        if ((*a2)(*v13, v13[1]))
        {
          ++v13;
          uint64_t v12 = v14;
        }
      }
      uint64_t result = ((uint64_t (*)(void, void))*a2)(*v13, *v8);
      if ((result & 1) == 0)
      {
        unint64_t v19 = v9;
        uint64_t v20 = *v8;
        do
        {
          __int16 v15 = v13;
          __int16 v16 = *(_WORD *)v13;
          *((unsigned char *)v8 + 2) = *((unsigned char *)v13 + 2);
          *(_WORD *)uint64_t v8 = v16;
          if (v21 < v12) {
            break;
          }
          uint64_t v17 = (2 * v12) | 1;
          unint64_t v13 = (unsigned int *)(v19 + 4 * v17);
          uint64_t v18 = 2 * v12 + 2;
          if (v18 < a3)
          {
            unint64_t v4 = v4 & 0xFFFFFFFF00000000 | *v13;
            unint64_t v9 = v9 & 0xFFFFFFFF00000000 | v13[1];
            if ((*a2)(v4, v9))
            {
              ++v13;
              uint64_t v17 = v18;
            }
          }
          unint64_t v5 = v5 & 0xFFFFFFFF00000000 | *v13;
          unint64_t v6 = v6 & 0xFFFFFFFF00000000 | v20;
          uint64_t result = ((uint64_t (*)(unint64_t, unint64_t))*a2)(v5, v6);
          uint64_t v8 = v15;
          uint64_t v12 = v17;
        }
        while (!result);
        *(_WORD *)__int16 v15 = v20;
        *((unsigned char *)v15 + 2) = BYTE2(v20);
      }
    }
  }
  return result;
}

void sub_6CC3CC(int **a1, int **a2, uint64_t *a3)
{
  if (a1 != a2)
  {
    unint64_t v3 = a2;
    unint64_t v4 = a1;
    unint64_t v5 = a1 + 5;
    if (a1 + 5 != a2)
    {
      while (1)
      {
        uint64_t v8 = *a3;
        double v9 = fabs(sub_6D82EC(a3[1] + 1160, v4, v5));
        uint64_t v11 = *(double **)(v8 + 8);
        unint64_t v10 = *(void *)(v8 + 16);
        if ((unint64_t)v11 >= v10) {
          break;
        }
        *uint64_t v11 = v9;
        uint64_t v7 = (uint64_t)(v11 + 1);
LABEL_5:
        *(void *)(v8 + 8) = v7;
        v4 += 5;
        v5 += 5;
        if (v5 == v3) {
          return;
        }
      }
      uint64_t v12 = v3;
      unint64_t v13 = *(double **)v8;
      uint64_t v14 = (uint64_t)v11 - *(void *)v8;
      uint64_t v15 = v14 >> 3;
      unint64_t v16 = (v14 >> 3) + 1;
      if (v16 >> 61) {
        sub_2E00();
      }
      uint64_t v17 = v10 - (void)v13;
      if (v17 >> 2 > v16) {
        unint64_t v16 = v17 >> 2;
      }
      if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v16 = 0x1FFFFFFFFFFFFFFFLL;
      }
      unint64_t v30 = v16;
      if (v16)
      {
        if (v16 >> 61) {
          sub_188D718();
        }
        uint64_t v18 = operator new(8 * v16);
        unint64_t v19 = (double *)&v18[8 * v15];
        double *v19 = v9;
        uint64_t v7 = (uint64_t)(v19 + 1);
        if (v11 != v13) {
          goto LABEL_15;
        }
      }
      else
      {
        uint64_t v18 = 0;
        unint64_t v19 = (double *)(8 * v15);
        *(double *)(8 * v15) = v9;
        uint64_t v7 = 8 * v15 + 8;
        if (v11 != v13)
        {
LABEL_15:
          unint64_t v20 = (char *)(v11 - 1) - (char *)v13;
          if (v20 >= 0x58)
          {
            unint64_t v21 = (char *)v11 - &v18[v14];
            unint64_t v3 = v12;
            if (v21 >= 0x20)
            {
              uint64_t v22 = (v20 >> 3) + 1;
              uint64_t v23 = 8 * (v22 & 0x3FFFFFFFFFFFFFFCLL);
              unsigned int v24 = &v11[v23 / 0xFFFFFFFFFFFFFFF8];
              unint64_t v19 = (double *)((char *)v19 - v23);
              int v25 = &v18[8 * v15 - 16];
              __int16 v26 = v11 - 2;
              uint64_t v27 = v22 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                long long v28 = *(_OWORD *)v26;
                *(v25 - 1) = *((_OWORD *)v26 - 1);
                *int v25 = v28;
                v25 -= 2;
                v26 -= 4;
                v27 -= 4;
              }
              while (v27);
              uint64_t v11 = v24;
              if (v22 == (v22 & 0x3FFFFFFFFFFFFFFCLL)) {
                goto LABEL_24;
              }
            }
          }
          else
          {
            unint64_t v3 = v12;
          }
          do
          {
            uint64_t v29 = *((void *)v11-- - 1);
            *((void *)v19-- - 1) = v29;
          }
          while (v11 != v13);
LABEL_24:
          *(void *)uint64_t v8 = v19;
          *(void *)(v8 + 8) = v7;
          *(void *)(v8 + 16) = &v18[8 * v30];
          if (v13) {
            operator delete(v13);
          }
          goto LABEL_5;
        }
      }
      unint64_t v3 = v12;
      goto LABEL_24;
    }
  }
}

BOOL sub_6CC5BC(uint64_t a1, int **a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  int v5 = sub_2E35CC(a2);
  int v6 = **(_DWORD **)a1;
  if (v6 < 1 || v5 < 1)
  {
    BOOL v8 = 0;
    double v9 = *a2;
    unint64_t v10 = (unsigned __int16 *)((char *)*a2 - **a2);
    if (*v10 < 0x43u) {
      goto LABEL_13;
    }
  }
  else
  {
    int v11 = v6 - v5;
    if (v11 < 0) {
      int v11 = -v11;
    }
    BOOL v8 = v11 > *(unsigned __int8 *)(v4 + 1136);
    double v9 = *a2;
    unint64_t v10 = (unsigned __int16 *)((char *)*a2 - **a2);
    if (*v10 < 0x43u) {
      goto LABEL_13;
    }
  }
  uint64_t v12 = v10[33];
  if (v12)
  {
    int v13 = *((unsigned __int8 *)v9 + v12);
    goto LABEL_14;
  }
LABEL_13:
  int v13 = 0;
LABEL_14:
  int v14 = **(_DWORD **)(a1 + 16) - v13;
  if (v14 >= 0) {
    unsigned int v15 = v14;
  }
  else {
    unsigned int v15 = -v14;
  }
  unsigned int v16 = *(unsigned __int8 *)(v4 + 1137);
  BOOL v17 = v15 > v16;
  unint64_t v18 = *(void *)(*(void *)(a1 + 24) + 32);
  if (__PAIR64__(*((unsigned __int16 *)a2 + 18), *((_DWORD *)a2 + 8)) != __PAIR64__(WORD2(v18), v18)
    || (HIWORD(v18) & 1) == (*((unsigned char *)a2 + 38) == 0))
  {
    BOOL result = sub_6D855C(v4 + 1160, a2);
    if (!result) {
      return result;
    }
    unint64_t v21 = *a2;
    uint64_t v22 = (unsigned __int16 *)((char *)*a2 - **a2);
    if (*v22 < 0x2Fu || !v22[23]) {
      goto LABEL_36;
    }
    unsigned int v23 = *((unsigned __int8 *)v21 + v22[23]);
    if (v23 - 15 >= 0x21 || ((0x1C5C08009uLL >> (v23 - 15)) & 1) == 0)
    {
      BOOL v24 = v23 > 0x2B || ((1 << v23) & 0x80000001040) == 0;
      if (v24 || (uint64_t v25 = v22[5]) != 0 && (*((unsigned char *)v21 + v25 + 2) & 0x20) != 0)
      {
        BOOL v17 = v23 == 44 || v15 > v16;
LABEL_36:
        if (!v17 && !v8) {
          return **(double **)(a1 + 40) - fabs(sub_69B314(v4, *(int ***)(a1 + 32), a2, v20)) > *(double *)(v4 + 1144);
        }
      }
    }
  }
  return 0;
}

int **sub_6CC7B0(int **a1, int **a2, uint64_t a3)
{
  if (a1 == a2) {
    return a2;
  }
  uint64_t v4 = a1;
  uint64_t v5 = a3 + 1160;
  while (sub_6D855C(v5, v4))
  {
    int v6 = *v4;
    uint64_t v7 = (unsigned __int16 *)((char *)*v4 - **v4);
    unsigned int v8 = *v7;
    if (v8 >= 0xB)
    {
      if (v7[5] && (*((unsigned char *)v6 + v7[5] + 3) & 4) != 0) {
        break;
      }
      if (v8 >= 0x2F)
      {
        uint64_t v9 = v7[23];
        if (v9)
        {
          unsigned int v10 = *((unsigned __int8 *)v6 + v9);
          BOOL v11 = v10 > 0x2A;
          uint64_t v12 = (1 << v10) & 0x50400000000;
          if (!v11 && v12 != 0) {
            break;
          }
        }
      }
    }
    v4 += 5;
    if (v4 == a2) {
      return a2;
    }
  }
  if (v4 == a2) {
    return a2;
  }
  for (uint64_t i = v4 + 5; i != a2; i += 5)
  {
    if (sub_6D855C(v5, i))
    {
      BOOL v17 = *i;
      unint64_t v18 = (unsigned __int16 *)((char *)*i - **i);
      unsigned int v19 = *v18;
      if (v19 < 0xB
        || (!v18[5] || (*((unsigned char *)v17 + v18[5] + 3) & 4) == 0)
        && (v19 < 0x2F
         || (uint64_t v20 = v18[23]) == 0
         || ((v21 = *((unsigned __int8 *)v17 + v20), BOOL v11 = v21 > 0x2A, v22 = (1 << v21) & 0x50400000000, !v11)
           ? (BOOL v23 = v22 == 0)
           : (BOOL v23 = 1),
             v23)))
      {
        long long v15 = *(_OWORD *)i;
        long long v16 = *((_OWORD *)i + 1);
        v4[4] = i[4];
        *(_OWORD *)uint64_t v4 = v15;
        *((_OWORD *)v4 + 1) = v16;
        v4 += 5;
      }
    }
  }
  return v4;
}

uint64_t sub_6CC938(uint64_t *a1, int **a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(void *)(a1[2] + 32);
  if (__PAIR64__(*((unsigned __int16 *)a2 + 18), *((_DWORD *)a2 + 8)) == __PAIR64__(WORD2(v5), v5)
    && ((v5 & 0x1000000000000) == 0) == (*((unsigned char *)a2 + 38) == 0))
  {
    return 0;
  }
  if (fabs(sub_6D82EC(v4 + 1160, (int **)a1[1], a2)) >= *(double *)(v4 + 200)) {
    return 0;
  }
  uint64_t result = sub_6D848C(v4 + 1160, (int **)a1[1], a2);
  if (result)
  {
    uint64_t result = sub_2E79EC(*(void *)v4, *(void *)(a1[1] + 32), (uint64_t)a2[4]);
    if (result)
    {
      uint64_t v7 = *a2;
      unsigned int v8 = (unsigned __int16 *)((char *)*a2 - **a2);
      if (*v8 >= 0x2Fu && v8[23])
      {
        unsigned int v9 = *((unsigned __int8 *)v7 + v8[23]);
        BOOL v10 = v9 > 0x2B || ((1 << v9) & 0x80000001040) == 0;
        v12 = !v10 && ((uint64_t v11 = v8[5]) == 0 || (*((unsigned char *)v7 + v11 + 2) & 0x20) == 0) || v9 == 44;
      }
      else
      {
        BOOL v12 = 0;
      }
      int v13 = *(int **)a1[1];
      int v14 = (unsigned __int16 *)((char *)v13 - *v13);
      if (*v14 >= 0x2Fu && v14[23])
      {
        unsigned int v15 = *((unsigned __int8 *)v13 + v14[23]);
        if (v15 > 0x2B || ((1 << v15) & 0x80000001040) == 0) {
          return v12 ^ (v15 == 44) ^ 1u;
        }
        uint64_t v17 = v14[5];
        if (v17 && (*((unsigned char *)v13 + v17 + 2) & 0x20) != 0) {
          return v12 ^ (v15 == 44) ^ 1u;
        }
        else {
          return v12;
        }
      }
      else
      {
        return !v12;
      }
    }
  }
  return result;
}

BOOL sub_6CCB34(uint64_t a1, unint64_t *a2)
{
  uint64_t v4 = *(uint64_t **)a1;
  sub_68F5DC(**(void **)a1, *a2, (unint64_t *)&v18);
  uint64_t v5 = v18;
  if (v18 != v19)
  {
    uint64_t v6 = 0;
    unint64_t v7 = *(void *)(*(void *)(a1 + 8) + 32);
    unint64_t v8 = (unint64_t)v18;
    do
    {
      if (__PAIR64__(*(unsigned __int16 *)(v8 + 4), *(_DWORD *)v8) == __PAIR64__(WORD2(v7), v7)) {
        v6 += HIWORD(v7) & 1 ^ (*(unsigned char *)(v8 + 6) == 0);
      }
      v8 += 8;
    }
    while ((_DWORD *)v8 != v19);
    if (v6)
    {
      uint64_t v9 = *(void *)(*(void *)(a1 + 16) + 32);
      if (__PAIR64__(*((unsigned __int16 *)v19 - 2), *(v19 - 2)) == __PAIR64__(WORD2(v9), v9)
        && ((v9 & 0x1000000000000) == 0) == (*((unsigned char *)v19 - 2) == 0))
      {
        sub_6CCCD4(*v4, *a2, (uint64_t *)&v16);
        uint64_t v13 = (uint64_t)v16;
        BOOL v12 = v17;
        if (v16 == v17)
        {
          BOOL v10 = 0;
          unsigned int v15 = v16;
          if (!v16) {
            goto LABEL_22;
          }
        }
        else
        {
          uint64_t v14 = (uint64_t)v16;
          while (*(unsigned char *)(v14 + 48) != 1)
          {
            v14 += 128;
            if ((void **)v14 == v17)
            {
              uint64_t v14 = (uint64_t)v17;
              break;
            }
          }
          BOOL v10 = v14 != (void)v17;
          if (!v16)
          {
LABEL_22:
            uint64_t v5 = v18;
            if (!v18) {
              return v10;
            }
            goto LABEL_10;
          }
          do
            BOOL v12 = sub_2DF518(v12 - 16);
          while (v12 != (void **)v13);
          unsigned int v15 = v16;
        }
        uint64_t v17 = (void **)v13;
        operator delete(v15);
        goto LABEL_22;
      }
    }
  }
  BOOL v10 = 0;
  if (v18)
  {
LABEL_10:
    unsigned int v19 = v5;
    operator delete(v5);
  }
  return v10;
}

void sub_6CCCB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_6CCCD4(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = (int *)sub_2DBC9C(a1, a2);
  uint64_t v5 = (unsigned __int16 *)((char *)v4 - *v4);
  if (*v5 >= 0xBu && (uint64_t v6 = v5[5]) != 0)
  {
    unint64_t v7 = (unsigned int *)((char *)v4 + v6 + *(unsigned int *)((char *)v4 + v6));
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    sub_6CCE48((uint64_t)a3, *v7);
    unsigned int v10 = *v7;
    uint64_t v9 = v7 + 1;
    uint64_t v8 = v10;
    if (v10)
    {
      uint64_t v11 = 4 * v8;
      BOOL v12 = (void *)a3[1];
      do
      {
        sub_2DE844((int *)((char *)v9 + *v9), (uint64_t)v13);
        BOOL v12 = (void *)(sub_6CD008(a3, v12, (uint64_t)v13) + 128);
        sub_2DF518(v13);
        ++v9;
        v11 -= 4;
      }
      while (v11);
    }
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
  }
}

void sub_6CCDA8(_Unwind_Exception *a1)
{
  sub_6CCDEC(v1);
  _Unwind_Resume(a1);
}

void sub_6CCDBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_2DF518(&a9);
  sub_6CCDEC(v9);
  _Unwind_Resume(a1);
}

void sub_6CCDD8(_Unwind_Exception *a1)
{
  sub_6CCDEC(v1);
  _Unwind_Resume(a1);
}

void **sub_6CCDEC(void **a1)
{
  uint64_t v2 = (void **)*a1;
  if (*a1)
  {
    unint64_t v3 = (void **)a1[1];
    uint64_t v4 = v2;
    if (v3 != v2)
    {
      do
        unint64_t v3 = sub_2DF518(v3 - 16);
      while (v3 != v2);
      uint64_t v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void sub_6CCE48(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = *(void ***)a1;
  if (a2 <= (uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 7) {
    return;
  }
  if (a2 >> 57) {
    sub_2E00();
  }
  uint64_t v4 = *(void ***)(a1 + 8);
  unint64_t v5 = a2 << 7;
  uint64_t v6 = (char *)operator new(a2 << 7);
  unint64_t v7 = &v6[v5];
  uint64_t v8 = &v6[(char *)v4 - (char *)v2];
  if (v4 == v2)
  {
    *(void *)a1 = v8;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v7;
    if (!v2) {
      return;
    }
    goto LABEL_10;
  }
  uint64_t v9 = 0;
  do
  {
    unsigned int v10 = &v8[v9 * 8];
    uint64_t v11 = &v4[v9];
    *((_OWORD *)v10 - 8) = *(_OWORD *)&v4[v9 - 16];
    *((void *)v10 - 14) = v4[v9 - 14];
    *(v11 - 16) = 0;
    *(v11 - 15) = 0;
    *(v11 - 14) = 0;
    *(_OWORD *)(v10 - 104) = *(_OWORD *)&v4[v9 - 13];
    *((void *)v10 - 11) = v4[v9 - 11];
    *(v11 - 13) = 0;
    *(v11 - 12) = 0;
    *(v11 - 11) = 0;
    *((_WORD *)v10 - 40) = v4[v9 - 10];
    *(_OWORD *)(v10 - 72) = *(_OWORD *)&v4[v9 - 9];
    *((void *)v10 - 7) = v4[v9 - 7];
    *(v11 - 9) = 0;
    *(v11 - 8) = 0;
    *(v11 - 7) = 0;
    *((_OWORD *)v10 - 3) = *(_OWORD *)&v4[v9 - 6];
    *((void *)v10 - 4) = v4[v9 - 4];
    *(v11 - 6) = 0;
    *(v11 - 5) = 0;
    *(v11 - 4) = 0;
    *(_OWORD *)(v10 - 24) = *(_OWORD *)&v4[v9 - 3];
    *((void *)v10 - 1) = v4[v9 - 1];
    *(v11 - 3) = 0;
    *(v11 - 2) = 0;
    *(v11 - 1) = 0;
    v9 -= 16;
  }
  while (&v4[v9] != v2);
  BOOL v12 = *(void ***)a1;
  uint64_t v2 = *(void ***)(a1 + 8);
  *(void *)a1 = &v8[v9 * 8];
  *(void *)(a1 + 8) = v8;
  *(void *)(a1 + 16) = v7;
  if (v2 != v12)
  {
    do
    {
      v2 -= 16;
      sub_2DF518(v2);
    }
    while (v2 != v12);
    uint64_t v2 = v12;
  }
  if (v2)
  {
LABEL_10:
    operator delete(v2);
  }
}

uint64_t sub_6CCFB4(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 128;
    sub_2DF518((void **)(i - 128));
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_6CD008(uint64_t *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = (uint64_t)a2;
  uint64_t v7 = *a1;
  unint64_t v6 = a1[1];
  uint64_t v8 = ((uint64_t)a2 - *a1) >> 7;
  unint64_t v9 = a1[2];
  if (v6 >= v9)
  {
    unint64_t v10 = ((uint64_t)(v6 - v7) >> 7) + 1;
    if (v10 >> 57) {
      sub_2E00();
    }
    uint64_t v11 = v9 - v7;
    uint64_t v12 = v11 >> 6;
    if (v11 >> 6 <= v10) {
      uint64_t v12 = v10;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFF80) {
      unint64_t v13 = 0x1FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v13 = v12;
    }
    BOOL v23 = a1 + 2;
    if (v13)
    {
      if (v13 >> 57) {
        sub_188D718();
      }
      uint64_t v14 = (char *)operator new(v13 << 7);
    }
    else
    {
      uint64_t v14 = 0;
    }
    __p = v14;
    uint64_t v20 = &v14[128 * v8];
    unsigned int v21 = v20;
    uint64_t v22 = &v14[128 * v13];
    sub_6CD618((uint64_t)&__p, a3);
    uint64_t v4 = sub_6CD8A0(a1, &__p, v4);
    uint64_t v17 = v20;
    for (uint64_t i = v21; v21 != v17; uint64_t i = v21)
    {
      unsigned int v21 = i - 128;
      sub_2DF518((void **)i - 16);
    }
    if (__p) {
      operator delete(__p);
    }
  }
  else if (a2 == (void *)v6)
  {
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
    *(_OWORD *)a2 = *(_OWORD *)a3;
    a2[2] = *(void *)(a3 + 16);
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
    uint64_t v15 = v7 + (v8 << 7);
    *(void *)(v15 + 24) = 0;
    *(void *)(v15 + 32) = 0;
    *(void *)(v15 + 40) = 0;
    *(_OWORD *)(v15 + 24) = *(_OWORD *)(a3 + 24);
    *(void *)(v15 + 40) = *(void *)(a3 + 40);
    *(void *)(a3 + 32) = 0;
    *(void *)(a3 + 40) = 0;
    *(void *)(a3 + 24) = 0;
    *(_WORD *)(v15 + 48) = *(_WORD *)(a3 + 48);
    *(void *)(v15 + 64) = 0;
    *(void *)(v15 + 72) = 0;
    *(void *)(v15 + 56) = 0;
    *(_OWORD *)(v15 + 56) = *(_OWORD *)(a3 + 56);
    *(void *)(v15 + 72) = *(void *)(a3 + 72);
    *(void *)(a3 + 56) = 0;
    *(void *)(a3 + 64) = 0;
    *(void *)(a3 + 72) = 0;
    *(void *)(v15 + 80) = 0;
    *(void *)(v15 + 88) = 0;
    *(void *)(v15 + 96) = 0;
    *(_OWORD *)(v15 + 80) = *(_OWORD *)(a3 + 80);
    *(void *)(v15 + 96) = *(void *)(a3 + 96);
    *(void *)(a3 + 80) = 0;
    *(void *)(a3 + 88) = 0;
    *(void *)(a3 + 96) = 0;
    *(void *)(v15 + 104) = 0;
    *(void *)(v15 + 112) = 0;
    *(void *)(v15 + 120) = 0;
    *(_OWORD *)(v15 + 104) = *(_OWORD *)(a3 + 104);
    *(void *)(v15 + 120) = *(void *)(a3 + 120);
    *(void *)(a3 + 104) = 0;
    *(void *)(a3 + 112) = 0;
    *(void *)(a3 + 120) = 0;
    a1[1] = (uint64_t)(a2 + 16);
  }
  else
  {
    sub_6CD21C((uint64_t)a1, (uint64_t)a2, v6, (uint64_t)(a2 + 16));
    sub_6CD344(v4, a3);
  }
  return v4;
}

void sub_6CD208(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_6CCFB4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_6CD21C(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(result + 8);
  unint64_t v5 = a2 + v4 - a4;
  for (uint64_t i = v4; v5 < a3; v5 += 128)
  {
    *(void *)uint64_t i = 0;
    *(void *)(i + 8) = 0;
    *(void *)(i + 16) = 0;
    *(_OWORD *)uint64_t i = *(_OWORD *)v5;
    *(void *)(i + 16) = *(void *)(v5 + 16);
    *(void *)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    *(void *)(v5 + 16) = 0;
    *(void *)(i + 24) = 0;
    *(void *)(i + 32) = 0;
    *(void *)(i + 40) = 0;
    *(_OWORD *)(i + 24) = *(_OWORD *)(v5 + 24);
    *(void *)(i + 40) = *(void *)(v5 + 40);
    *(void *)(v5 + 32) = 0;
    *(void *)(v5 + 40) = 0;
    *(void *)(v5 + 24) = 0;
    *(_WORD *)(i + 48) = *(_WORD *)(v5 + 48);
    *(void *)(i + 64) = 0;
    *(void *)(i + 72) = 0;
    *(void *)(i + 56) = 0;
    *(_OWORD *)(i + 56) = *(_OWORD *)(v5 + 56);
    *(void *)(i + 72) = *(void *)(v5 + 72);
    *(void *)(v5 + 56) = 0;
    *(void *)(v5 + 64) = 0;
    *(void *)(v5 + 72) = 0;
    *(void *)(i + 80) = 0;
    *(void *)(i + 88) = 0;
    *(void *)(i + 96) = 0;
    *(_OWORD *)(i + 80) = *(_OWORD *)(v5 + 80);
    *(void *)(i + 96) = *(void *)(v5 + 96);
    *(void *)(v5 + 80) = 0;
    *(void *)(v5 + 88) = 0;
    *(void *)(v5 + 96) = 0;
    *(void *)(i + 104) = 0;
    *(void *)(i + 112) = 0;
    *(void *)(i + 120) = 0;
    *(_OWORD *)(i + 104) = *(_OWORD *)(v5 + 104);
    *(void *)(i + 120) = *(void *)(v5 + 120);
    *(void *)(v5 + 104) = 0;
    *(void *)(v5 + 112) = 0;
    *(void *)(v5 + 120) = 0;
    i += 128;
  }
  *(void *)(result + 8) = i;
  if (v4 != a4)
  {
    uint64_t v7 = v4 - 128;
    uint64_t v8 = (v4 - a4) >> 7 << 7;
    uint64_t v9 = a2 - 128;
    do
    {
      uint64_t result = sub_6CD344(v7, v9 + v8);
      v7 -= 128;
      v8 -= 128;
    }
    while (v8);
  }
  return result;
}

uint64_t sub_6CD344(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void ***)a1;
  if (*(void *)a1)
  {
    unint64_t v5 = *(void ***)(a1 + 8);
    unint64_t v6 = *(void ***)a1;
    if (v5 == v4)
    {
LABEL_11:
      *(void *)(a1 + 8) = v4;
      operator delete(v6);
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      goto LABEL_12;
    }
    while (1)
    {
      if (*((char *)v5 - 1) < 0)
      {
        operator delete(*(v5 - 3));
        if (*((char *)v5 - 25) < 0) {
LABEL_9:
        }
          operator delete(*(v5 - 6));
      }
      else if (*((char *)v5 - 25) < 0)
      {
        goto LABEL_9;
      }
      v5 -= 6;
      if (v5 == v4)
      {
        unint64_t v6 = *(void ***)a1;
        goto LABEL_11;
      }
    }
  }
LABEL_12:
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  uint64_t v7 = (void **)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 24);
  if (!v8) {
    goto LABEL_23;
  }
  uint64_t v9 = *(void *)(a1 + 32);
  unint64_t v10 = *(void **)(a1 + 24);
  if (v9 != v8)
  {
    while (1)
    {
      if (*(char *)(v9 - 1) < 0)
      {
        operator delete(*(void **)(v9 - 24));
        if (*(char *)(v9 - 25) < 0) {
LABEL_20:
        }
          operator delete(*(void **)(v9 - 48));
      }
      else if (*(char *)(v9 - 25) < 0)
      {
        goto LABEL_20;
      }
      v9 -= 48;
      if (v9 == v8)
      {
        unint64_t v10 = *v7;
        break;
      }
    }
  }
  *(void *)(a1 + 32) = v8;
  operator delete(v10);
  *uint64_t v7 = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
LABEL_23:
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0;
  uint64_t v11 = (void **)(a1 + 56);
  uint64_t v12 = *(void ***)(a1 + 56);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  if (v12)
  {
    unint64_t v13 = *(void ***)(a1 + 64);
    uint64_t v14 = v12;
    if (v13 != v12)
    {
      do
      {
        if (*((char *)v13 - 9) < 0) {
          operator delete(*(v13 - 4));
        }
        v13 -= 5;
      }
      while (v13 != v12);
      uint64_t v14 = *v11;
    }
    *(void *)(a1 + 64) = v12;
    operator delete(v14);
    *uint64_t v11 = 0;
    *(void *)(a1 + 64) = 0;
    *(void *)(a1 + 72) = 0;
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a2 + 56) = 0;
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = 0;
  uint64_t v15 = (void **)(a1 + 80);
  uint64_t v16 = *(void *)(a1 + 80);
  if (v16)
  {
    uint64_t v17 = *(void *)(a1 + 88);
    unint64_t v18 = *(void **)(a1 + 80);
    if (v17 == v16)
    {
LABEL_41:
      *(void *)(a1 + 88) = v16;
      operator delete(v18);
      *uint64_t v15 = 0;
      *(void *)(a1 + 88) = 0;
      *(void *)(a1 + 96) = 0;
      goto LABEL_42;
    }
    while (1)
    {
      if (*(char *)(v17 - 9) < 0)
      {
        operator delete(*(void **)(v17 - 32));
        if (*(char *)(v17 - 33) < 0) {
LABEL_39:
        }
          operator delete(*(void **)(v17 - 56));
      }
      else if (*(char *)(v17 - 33) < 0)
      {
        goto LABEL_39;
      }
      v17 -= 56;
      if (v17 == v16)
      {
        unint64_t v18 = *v15;
        goto LABEL_41;
      }
    }
  }
LABEL_42:
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a2 + 80) = 0;
  *(void *)(a2 + 88) = 0;
  *(void *)(a2 + 96) = 0;
  unsigned int v19 = (void **)(a1 + 104);
  uint64_t v20 = *(void *)(a1 + 104);
  if (v20)
  {
    uint64_t v21 = *(void *)(a1 + 112);
    uint64_t v22 = *(void **)(a1 + 104);
    if (v21 == v20)
    {
LABEL_52:
      *(void *)(a1 + 112) = v20;
      operator delete(v22);
      _DWORD *v19 = 0;
      *(void *)(a1 + 112) = 0;
      *(void *)(a1 + 120) = 0;
      goto LABEL_53;
    }
    while (1)
    {
      if (*(char *)(v21 - 1) < 0)
      {
        operator delete(*(void **)(v21 - 24));
        if (*(char *)(v21 - 25) < 0) {
LABEL_50:
        }
          operator delete(*(void **)(v21 - 48));
      }
      else if (*(char *)(v21 - 25) < 0)
      {
        goto LABEL_50;
      }
      v21 -= 48;
      if (v21 == v20)
      {
        uint64_t v22 = *v19;
        goto LABEL_52;
      }
    }
  }
LABEL_53:
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = 0;
  *(void *)(a2 + 120) = 0;
  return a1;
}

__n128 sub_6CD618(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 16);
  if (v4 != *(void **)(a1 + 24)) {
    goto LABEL_22;
  }
  unint64_t v6 = *(unsigned char **)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  if (v5 <= *(void *)a1)
  {
    unint64_t v12 = ((char *)v4 - v6) >> 6;
    if (v4 == (void *)v6) {
      unint64_t v12 = 1;
    }
    if (v12 >> 57) {
      sub_188D718();
    }
    unint64_t v13 = v12 >> 2;
    unint64_t v14 = v12 << 7;
    uint64_t v15 = (char *)operator new(v12 << 7);
    uint64_t v16 = &v15[128 * v13];
    uint64_t v17 = &v15[v14];
    if (v4 == (void *)v5)
    {
      *(void *)a1 = v15;
      *(void *)(a1 + 8) = v16;
      *(void *)(a1 + 16) = v16;
      *(void *)(a1 + 24) = v17;
      if (!v6) {
        goto LABEL_19;
      }
    }
    else
    {
      unint64_t v18 = (char *)v4 + (void)v16 - v5;
      unint64_t v19 = v13 << 7;
      do
      {
        uint64_t v20 = &v15[v19];
        *(_OWORD *)uint64_t v20 = *(_OWORD *)v5;
        *((void *)v20 + 2) = *(void *)(v5 + 16);
        *(void *)unint64_t v5 = 0;
        *(void *)(v5 + 8) = 0;
        *(void *)(v5 + 16) = 0;
        *(_OWORD *)(v20 + 24) = *(_OWORD *)(v5 + 24);
        *((void *)v20 + 5) = *(void *)(v5 + 40);
        *(void *)(v5 + 24) = 0;
        *(void *)(v5 + 32) = 0;
        *(void *)(v5 + 40) = 0;
        *((_WORD *)v20 + 24) = *(_WORD *)(v5 + 48);
        *(_OWORD *)(v20 + 56) = *(_OWORD *)(v5 + 56);
        *((void *)v20 + 9) = *(void *)(v5 + 72);
        *(void *)(v5 + 56) = 0;
        *(void *)(v5 + 64) = 0;
        *(void *)(v5 + 72) = 0;
        *((_OWORD *)v20 + 5) = *(_OWORD *)(v5 + 80);
        *((void *)v20 + 12) = *(void *)(v5 + 96);
        *(void *)(v5 + 80) = 0;
        *(void *)(v5 + 88) = 0;
        *(void *)(v5 + 96) = 0;
        *(_OWORD *)(v20 + 104) = *(_OWORD *)(v5 + 104);
        *((void *)v20 + 15) = *(void *)(v5 + 120);
        *(void *)(v5 + 104) = 0;
        *(void *)(v5 + 112) = 0;
        *(void *)(v5 + 120) = 0;
        v19 += 128;
        v5 += 128;
      }
      while (v20 + 128 != v18);
      unint64_t v6 = *(unsigned char **)a1;
      uint64_t v21 = *(void ***)(a1 + 8);
      uint64_t v22 = *(void ***)(a1 + 16);
      *(void *)a1 = v15;
      *(void *)(a1 + 8) = v16;
      *(void *)(a1 + 16) = v18;
      *(void *)(a1 + 24) = v17;
      while (v22 != v21)
      {
        v22 -= 16;
        sub_2DF518(v22);
      }
      if (!v6) {
        goto LABEL_19;
      }
    }
    operator delete(v6);
LABEL_19:
    uint64_t v4 = *(void **)(a1 + 16);
    goto LABEL_22;
  }
  uint64_t v7 = (uint64_t)(v5 - *(void *)a1) >> 7;
  if (v7 >= -1) {
    uint64_t v8 = v7 + 1;
  }
  else {
    uint64_t v8 = v7 + 2;
  }
  uint64_t v9 = v8 >> 1;
  uint64_t v10 = -v9;
  if ((void *)v5 == v4)
  {
    unint64_t v11 = v5 - (v9 << 7);
  }
  else
  {
    do
    {
      sub_6CD344(v5 + (v10 << 7), v5);
      v5 += 128;
    }
    while ((void *)v5 != v4);
    uint64_t v4 = *(void **)(a1 + 8);
    unint64_t v11 = v5 + (v10 << 7);
  }
  *(void *)(a1 + 8) = &v4[16 * v10];
  *(void *)(a1 + 16) = v11;
  uint64_t v4 = (void *)v11;
LABEL_22:
  *uint64_t v4 = 0;
  v4[1] = 0;
  v4[2] = 0;
  *(_OWORD *)uint64_t v4 = *(_OWORD *)a2;
  v4[2] = *(void *)(a2 + 16);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  v4[3] = 0;
  v4[4] = 0;
  v4[5] = 0;
  *(_OWORD *)(v4 + 3) = *(_OWORD *)(a2 + 24);
  v4[5] = *(void *)(a2 + 40);
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 24) = 0;
  *((_WORD *)v4 + 24) = *(_WORD *)(a2 + 48);
  v4[8] = 0;
  v4[9] = 0;
  v4[7] = 0;
  *(_OWORD *)(v4 + 7) = *(_OWORD *)(a2 + 56);
  v4[9] = *(void *)(a2 + 72);
  *(void *)(a2 + 56) = 0;
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = 0;
  v4[10] = 0;
  v4[11] = 0;
  v4[12] = 0;
  *((_OWORD *)v4 + 5) = *(_OWORD *)(a2 + 80);
  v4[12] = *(void *)(a2 + 96);
  *(void *)(a2 + 80) = 0;
  *(void *)(a2 + 88) = 0;
  *(void *)(a2 + 96) = 0;
  v4[13] = 0;
  v4[14] = 0;
  v4[15] = 0;
  __n128 result = *(__n128 *)(a2 + 104);
  *(__n128 *)(v4 + 13) = result;
  v4[15] = *(void *)(a2 + 120);
  *(void *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = 0;
  *(void *)(a2 + 120) = 0;
  *(void *)(a1 + 16) += 128;
  return result;
}

uint64_t sub_6CD8A0(uint64_t *a1, void *a2, uint64_t a3)
{
  uint64_t result = a2[1];
  uint64_t v5 = *a1;
  uint64_t v6 = result;
  if (*a1 != a3)
  {
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = result + v7;
      uint64_t v9 = a3 + v7;
      *(void *)(v8 - 128) = 0;
      *(void *)(v8 - 120) = 0;
      *(void *)(v8 - 112) = 0;
      *(_OWORD *)(v8 - 128) = *(_OWORD *)(a3 + v7 - 128);
      *(void *)(v8 - 112) = *(void *)(a3 + v7 - 112);
      *(void *)(v9 - 128) = 0;
      *(void *)(v9 - 120) = 0;
      *(void *)(v9 - 112) = 0;
      *(void *)(v8 - 104) = 0;
      *(void *)(v8 - 96) = 0;
      *(void *)(v8 - 88) = 0;
      *(_OWORD *)(v8 - 104) = *(_OWORD *)(a3 + v7 - 104);
      *(void *)(v8 - 88) = *(void *)(a3 + v7 - 88);
      *(void *)(v9 - 96) = 0;
      *(void *)(v9 - 88) = 0;
      *(void *)(v9 - 104) = 0;
      __int16 v10 = *(_WORD *)(a3 + v7 - 80);
      *(void *)(v8 - 64) = 0;
      *(void *)(v8 - 56) = 0;
      *(void *)(v8 - 72) = 0;
      *(_WORD *)(v8 - 80) = v10;
      *(_OWORD *)(v8 - 72) = *(_OWORD *)(a3 + v7 - 72);
      *(void *)(v8 - 56) = *(void *)(a3 + v7 - 56);
      *(void *)(v9 - 72) = 0;
      *(void *)(v9 - 64) = 0;
      *(void *)(v9 - 56) = 0;
      *(void *)(v8 - 48) = 0;
      *(void *)(v8 - 40) = 0;
      *(void *)(v8 - 32) = 0;
      *(_OWORD *)(v8 - 48) = *(_OWORD *)(a3 + v7 - 48);
      *(void *)(v8 - 32) = *(void *)(a3 + v7 - 32);
      *(void *)(v9 - 48) = 0;
      *(void *)(v9 - 40) = 0;
      *(void *)(v9 - 32) = 0;
      *(void *)(v8 - 24) = 0;
      *(void *)(v8 - 16) = 0;
      *(void *)(v8 - 8) = 0;
      *(_OWORD *)(v8 - 24) = *(_OWORD *)(a3 + v7 - 24);
      *(void *)(v8 - 8) = *(void *)(a3 + v7 - 8);
      *(void *)(v9 - 24) = 0;
      *(void *)(v9 - 16) = 0;
      *(void *)(v9 - 8) = 0;
      v7 -= 128;
    }
    while (a3 + v7 != v5);
    uint64_t v6 = result + v7;
  }
  a2[1] = v6;
  uint64_t v11 = a1[1];
  uint64_t v12 = a2[2];
  if (v11 != a3)
  {
    do
    {
      *(void *)uint64_t v12 = 0;
      *(void *)(v12 + 8) = 0;
      *(void *)(v12 + 16) = 0;
      *(_OWORD *)uint64_t v12 = *(_OWORD *)a3;
      *(void *)(v12 + 16) = *(void *)(a3 + 16);
      *(void *)a3 = 0;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(v12 + 24) = 0;
      *(void *)(v12 + 32) = 0;
      *(void *)(v12 + 40) = 0;
      *(_OWORD *)(v12 + 24) = *(_OWORD *)(a3 + 24);
      *(void *)(v12 + 40) = *(void *)(a3 + 40);
      *(void *)(a3 + 32) = 0;
      *(void *)(a3 + 40) = 0;
      *(void *)(a3 + 24) = 0;
      *(_WORD *)(v12 + 48) = *(_WORD *)(a3 + 48);
      *(void *)(v12 + 64) = 0;
      *(void *)(v12 + 72) = 0;
      *(void *)(v12 + 56) = 0;
      *(_OWORD *)(v12 + 56) = *(_OWORD *)(a3 + 56);
      *(void *)(v12 + 72) = *(void *)(a3 + 72);
      *(void *)(a3 + 56) = 0;
      *(void *)(a3 + 64) = 0;
      *(void *)(a3 + 72) = 0;
      *(void *)(v12 + 80) = 0;
      *(void *)(v12 + 88) = 0;
      *(void *)(v12 + 96) = 0;
      *(_OWORD *)(v12 + 80) = *(_OWORD *)(a3 + 80);
      *(void *)(v12 + 96) = *(void *)(a3 + 96);
      *(void *)(a3 + 80) = 0;
      *(void *)(a3 + 88) = 0;
      *(void *)(a3 + 96) = 0;
      *(void *)(v12 + 104) = 0;
      *(void *)(v12 + 112) = 0;
      *(void *)(v12 + 120) = 0;
      *(_OWORD *)(v12 + 104) = *(_OWORD *)(a3 + 104);
      *(void *)(v12 + 120) = *(void *)(a3 + 120);
      *(void *)(a3 + 104) = 0;
      *(void *)(a3 + 112) = 0;
      *(void *)(a3 + 120) = 0;
      v12 += 128;
      a3 += 128;
    }
    while (a3 != v11);
    uint64_t v6 = a2[1];
  }
  a2[2] = v12;
  uint64_t v13 = *a1;
  *a1 = v6;
  a2[1] = v13;
  uint64_t v14 = a1[1];
  a1[1] = a2[2];
  a2[2] = v14;
  uint64_t v15 = a1[2];
  a1[2] = a2[3];
  a2[3] = v15;
  *a2 = a2[1];
  return result;
}

int **sub_6CDA8C(int **result, int **a2)
{
  if (result == a2) {
    return a2;
  }
  while (1)
  {
    uint64_t v2 = *result;
    uint64_t v3 = (unsigned __int16 *)((char *)*result - **result);
    unsigned int v4 = *v3;
    if (*((unsigned char *)result + 38))
    {
      if (v4 < 0xB) {
        break;
      }
      if (!v3[5]) {
        break;
      }
      int v5 = *(int *)((char *)v2 + v3[5]);
      if ((v5 & 2) == 0 && (v5 & 1) == 0) {
        break;
      }
    }
    else
    {
      if (v4 < 0xB) {
        break;
      }
      if (!v3[5]) {
        break;
      }
      int v6 = *(int *)((char *)v2 + v3[5]);
      if ((v6 & 1) == 0 && (v6 & 2) == 0) {
        break;
      }
    }
    if (v4 >= 0x2F)
    {
      uint64_t v7 = v3[23];
      if (v7)
      {
        unsigned int v8 = *((unsigned __int8 *)v2 + v7);
        BOOL v9 = v8 > 0x2F;
        uint64_t v10 = (1 << v8) & 0xA08040000000;
        if (!v9 && v10 != 0) {
          break;
        }
      }
    }
    result += 5;
    if (result == a2) {
      return a2;
    }
  }
  if (result != a2)
  {
    for (uint64_t i = result + 5; i != a2; i += 5)
    {
      uint64_t v15 = *i;
      uint64_t v16 = (unsigned __int16 *)((char *)*i - **i);
      unsigned int v17 = *v16;
      if (*((unsigned char *)i + 38))
      {
        if (v17 >= 0xB)
        {
          if (v16[5])
          {
            int v18 = *(int *)((char *)v15 + v16[5]);
            if (v18 & 2) != 0 || (v18) {
              goto LABEL_35;
            }
          }
        }
      }
      else if (v17 >= 0xB)
      {
        if (v16[5])
        {
          int v19 = *(int *)((char *)v15 + v16[5]);
          if ((v19 & 1) != 0 || (v19 & 2) != 0)
          {
LABEL_35:
            if (v17 < 0x2F
              || (uint64_t v20 = v16[23]) == 0
              || ((v21 = *((unsigned __int8 *)v15 + v20), BOOL v9 = v21 > 0x2F, v22 = (1 << v21) & 0xA08040000000, !v9)
                ? (BOOL v23 = v22 == 0)
                : (BOOL v23 = 1),
                  v23))
            {
              long long v13 = *(_OWORD *)i;
              long long v14 = *((_OWORD *)i + 1);
              result[4] = i[4];
              *(_OWORD *)uint64_t result = v13;
              *((_OWORD *)result + 1) = v14;
              result += 5;
            }
          }
        }
      }
    }
  }
  return result;
}

int **sub_6CDC10(int **result, int **a2, int ***a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a4 >= 2)
  {
    uint64_t v8 = (uint64_t)result;
    if (a4 == 2)
    {
      BOOL v9 = a2 - 5;
      uint64_t result = (int **)sub_6CDE8C(a3, a2 - 5, result);
      if (result)
      {
        long long v10 = *(_OWORD *)v8;
        long long v11 = *(_OWORD *)(v8 + 16);
        uint64_t v12 = *(int **)(v8 + 32);
        uint64_t v13 = (uint64_t)*(a2 - 1);
        long long v14 = *(_OWORD *)(a2 - 3);
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
        *(_OWORD *)(v8 + 16) = v14;
        *(void *)(v8 + 32) = v13;
        *(a2 - 1) = v12;
        *(_OWORD *)BOOL v9 = v10;
        *(_OWORD *)(a2 - 3) = v11;
      }
    }
    else if ((uint64_t)a4 > 128)
    {
      uint64_t v17 = a5;
      unint64_t v18 = a4 >> 1;
      int v19 = &result[5 * (a4 >> 1)];
      unint64_t v20 = a4 >> 1;
      if ((uint64_t)a4 <= a6)
      {
        sub_6CE360((uint64_t)result, v19, a3, v20, a5);
        uint64_t v21 = v17 + 40 * v18;
        uint64_t result = (int **)sub_6CE360(v8 + 40 * (a4 >> 1), a2, a3, a4 - (a4 >> 1), v21);
        unint64_t v22 = v17 + 40 * a4;
        uint64_t v23 = v21;
        while (v23 != v22)
        {
          uint64_t result = (int **)sub_6CDE8C(a3, (int **)v23, (int **)v17);
          if (result)
          {
            long long v26 = *(_OWORD *)v23;
            long long v27 = *(_OWORD *)(v23 + 16);
            *(void *)(v8 + 32) = *(void *)(v23 + 32);
            *(_OWORD *)uint64_t v8 = v26;
            *(_OWORD *)(v8 + 16) = v27;
            v23 += 40;
            v8 += 40;
            if (v17 == v21)
            {
LABEL_19:
              if (v23 != v22)
              {
                uint64_t v28 = 0;
                do
                {
                  uint64_t v29 = v8 + v28;
                  long long v30 = *(_OWORD *)(v23 + v28);
                  long long v31 = *(_OWORD *)(v23 + v28 + 16);
                  *(void *)(v29 + 32) = *(void *)(v23 + v28 + 32);
                  *(_OWORD *)uint64_t v29 = v30;
                  *(_OWORD *)(v29 + 16) = v31;
                  v28 += 40;
                }
                while (v23 + v28 != v22);
              }
              return result;
            }
          }
          else
          {
            long long v24 = *(_OWORD *)v17;
            long long v25 = *(_OWORD *)(v17 + 16);
            *(void *)(v8 + 32) = *(void *)(v17 + 32);
            *(_OWORD *)uint64_t v8 = v24;
            *(_OWORD *)(v8 + 16) = v25;
            v17 += 40;
            v8 += 40;
            if (v17 == v21) {
              goto LABEL_19;
            }
          }
        }
        if (v17 != v21)
        {
          uint64_t v32 = 0;
          do
          {
            uint64_t v33 = v8 + v32;
            long long v34 = *(_OWORD *)(v17 + v32);
            long long v35 = *(_OWORD *)(v17 + v32 + 16);
            *(void *)(v33 + 32) = *(void *)(v17 + v32 + 32);
            *(_OWORD *)uint64_t v33 = v34;
            *(_OWORD *)(v33 + 16) = v35;
            v32 += 40;
          }
          while (v17 + v32 != v21);
        }
      }
      else
      {
        sub_6CDC10(result, v19, a3, v20, a5, a6);
        sub_6CDC10(v8 + 40 * (a4 >> 1), a2, a3, a4 - (a4 >> 1), v17, a6);
        return (int **)sub_6CE598(v8, (int **)(v8 + 40 * (a4 >> 1)), (char *)a2, a3, a4 >> 1, a4 - (a4 >> 1), (char *)v17, a6);
      }
    }
    else
    {
      return (int **)sub_6CE064((uint64_t)result, a2, a3);
    }
  }
  return result;
}

uint64_t sub_6CDE8C(int ***a1, int **a2, int **a3)
{
  uint64_t v3 = **a1;
  unsigned int v4 = (unsigned __int16 *)((char *)v3 - *v3);
  unsigned int v5 = *v4;
  if (*((unsigned char *)*a1 + 38))
  {
    if (v5 < 0x49) {
      goto LABEL_11;
    }
    unsigned int v6 = v4[36];
    if (!v4[36]) {
      goto LABEL_11;
    }
  }
  else if (v5 < 0x4B || (unsigned int v6 = v4[37]) == 0)
  {
LABEL_11:
    int v7 = 0xFFFF;
    uint64_t v8 = (char *)*a2;
    BOOL v9 = (unsigned __int16 *)((char *)*a2 - **a2);
    unsigned int v10 = *v9;
    if (*((unsigned char *)a2 + 38)) {
      goto LABEL_12;
    }
    goto LABEL_8;
  }
  int v7 = *(unsigned __int16 *)((char *)v3 + v6);
  uint64_t v8 = (char *)*a2;
  BOOL v9 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v10 = *v9;
  if (*((unsigned char *)a2 + 38))
  {
LABEL_12:
    if (v10 >= 0x4B)
    {
      unsigned int v11 = v9[37];
      if (v11) {
        goto LABEL_14;
      }
    }
LABEL_18:
    int v12 = 0xFFFF;
    if (!*((unsigned char *)*a1 + 38)) {
      goto LABEL_15;
    }
    goto LABEL_19;
  }
LABEL_8:
  if (v10 < 0x49) {
    goto LABEL_18;
  }
  unsigned int v11 = v9[36];
  if (!v11) {
    goto LABEL_18;
  }
LABEL_14:
  int v12 = *(unsigned __int16 *)&v8[v11];
  if (!*((unsigned char *)*a1 + 38))
  {
LABEL_15:
    if (v5 < 0x4B) {
      goto LABEL_25;
    }
    unsigned int v13 = v4[37];
    if (!v13) {
      goto LABEL_25;
    }
    goto LABEL_21;
  }
LABEL_19:
  if (v5 < 0x49 || (unsigned int v13 = v4[36]) == 0)
  {
LABEL_25:
    int v14 = 0xFFFF;
    uint64_t v15 = (char *)*a3;
    uint64_t v16 = (unsigned __int16 *)((char *)*a3 - **a3);
    unsigned int v17 = *v16;
    if (*((unsigned char *)a3 + 38)) {
      goto LABEL_26;
    }
LABEL_22:
    if (v17 >= 0x49)
    {
      unsigned int v18 = v16[36];
      if (v18) {
        goto LABEL_28;
      }
    }
LABEL_29:
    int v19 = 0xFFFF;
    goto LABEL_30;
  }
LABEL_21:
  int v14 = *(unsigned __int16 *)((char *)v3 + v13);
  uint64_t v15 = (char *)*a3;
  uint64_t v16 = (unsigned __int16 *)((char *)*a3 - **a3);
  unsigned int v17 = *v16;
  if (!*((unsigned char *)a3 + 38)) {
    goto LABEL_22;
  }
LABEL_26:
  if (v17 < 0x4B) {
    goto LABEL_29;
  }
  unsigned int v18 = v16[37];
  if (!v18) {
    goto LABEL_29;
  }
LABEL_28:
  int v19 = *(unsigned __int16 *)&v15[v18];
LABEL_30:
  int32x2_t v20 = vdup_n_s32(0x4650u);
  int8x8_t v21 = (int8x8_t)vadd_s32((int32x2_t)__PAIR64__(v14, v7), v20);
  int32x2_t v22 = vdup_n_s32(0x8CA0u);
  int32x2_t v23 = vsub_s32((int32x2_t)__PAIR64__(v19, v12), (int32x2_t)vand_s8(vbsl_s8((int8x8_t)vcgt_u32((uint32x2_t)v22, (uint32x2_t)vand_s8(v21, (int8x8_t)0xFFFF0000FFFFLL)), v21, (int8x8_t)vadd_s32((int32x2_t)__PAIR64__(v14, v7), vdup_n_s32(0xB9B0u))), (int8x8_t)0xFFFF0000FFFFLL));
  int32x2_t v24 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v23, v20), (int8x8_t)vadd_s32(v23, vdup_n_s32(0xFFFF7360)), (int8x8_t)v23);
  int8x8_t v25 = vbsl_s8((int8x8_t)vcgt_s32(vdup_n_s32(0xFFFFB9B1), v24), (int8x8_t)vadd_s32(v24, v22), (int8x8_t)v24);
  v26.i64[0] = v25.i32[0];
  v26.i64[1] = v25.i32[1];
  float64x2_t v27 = vabsq_f64(vdivq_f64(vcvtq_f64_s64(v26), (float64x2_t)vdupq_n_s64(0x4059000000000000uLL)));
  return *(void *)&vmovn_s64(vcgtq_f64((float64x2_t)vdupq_laneq_s64((int64x2_t)v27, 1), v27)) & 1;
}

uint64_t sub_6CE064(uint64_t result, int **a2, int ***a3)
{
  if ((int **)result == a2) {
    return result;
  }
  uint64_t v4 = result;
  unsigned int v5 = (int **)(result + 40);
  if ((int **)(result + 40) == a2) {
    return result;
  }
  uint64_t v7 = 0;
  int32x2_t v8 = vdup_n_s32(0x4650u);
  int32x2_t v9 = vdup_n_s32(0xB9B0u);
  int32x2_t v10 = vdup_n_s32(0x8CA0u);
  int32x2_t v11 = vdup_n_s32(0xFFFF7360);
  int32x2_t v12 = vdup_n_s32(0xFFFFB9B1);
  unsigned int v13 = (int **)result;
  float64x2_t v44 = (float64x2_t)vdupq_n_s64(0x4059000000000000uLL);
  while (2)
  {
    uint64_t v15 = v5;
    uint64_t result = sub_6CDE8C(a3, v5, v13);
    if (!result) {
      goto LABEL_6;
    }
    uint64_t v16 = *v15;
    *(_OWORD *)__int16 v45 = *((_OWORD *)v13 + 3);
    *(_OWORD *)&v45[14] = *(_OWORD *)((char *)v13 + 62);
    int v17 = *((unsigned __int8 *)v13 + 78);
    char v18 = *((unsigned char *)v13 + 79);
    uint64_t v19 = v7;
    do
    {
      uint64_t v27 = v4 + v19;
      long long v28 = *(_OWORD *)(v4 + v19 + 16);
      *(_OWORD *)(v27 + 40) = *(_OWORD *)(v4 + v19);
      *(_OWORD *)(v27 + 56) = v28;
      *(void *)(v27 + 72) = *(void *)(v4 + v19 + 32);
      if (!v19)
      {
        uint64_t v14 = v4;
        goto LABEL_5;
      }
      uint64_t v29 = **a3;
      long long v30 = (unsigned __int16 *)((char *)v29 - *v29);
      unsigned int v31 = *v30;
      if (*((unsigned char *)*a3 + 38))
      {
        if (v31 >= 0x49)
        {
          unsigned int v32 = v30[36];
          if (v30[36]) {
            goto LABEL_18;
          }
        }
      }
      else if (v31 >= 0x4B)
      {
        unsigned int v32 = v30[37];
        if (v30[37])
        {
LABEL_18:
          int v33 = *(unsigned __int16 *)((char *)v29 + v32);
          long long v34 = (unsigned __int16 *)((char *)v16 - *v16);
          unsigned int v35 = *v34;
          if (v17) {
            goto LABEL_23;
          }
          goto LABEL_19;
        }
      }
      int v33 = 0xFFFF;
      long long v34 = (unsigned __int16 *)((char *)v16 - *v16);
      unsigned int v35 = *v34;
      if (v17)
      {
LABEL_23:
        if (v35 >= 0x4B)
        {
          unsigned int v36 = v34[37];
          if (v36) {
            goto LABEL_25;
          }
        }
        goto LABEL_29;
      }
LABEL_19:
      if (v35 >= 0x49)
      {
        unsigned int v36 = v34[36];
        if (v36)
        {
LABEL_25:
          int v37 = *(unsigned __int16 *)((char *)v16 + v36);
          if (!*((unsigned char *)*a3 + 38)) {
            goto LABEL_26;
          }
          goto LABEL_30;
        }
      }
LABEL_29:
      int v37 = 0xFFFF;
      if (!*((unsigned char *)*a3 + 38))
      {
LABEL_26:
        if (v31 >= 0x4B)
        {
          unsigned int v38 = v30[37];
          if (v38) {
            goto LABEL_32;
          }
        }
        goto LABEL_33;
      }
LABEL_30:
      if (v31 >= 0x49)
      {
        unsigned int v38 = v30[36];
        if (v38)
        {
LABEL_32:
          int v39 = *(unsigned __int16 *)((char *)v29 + v38);
          goto LABEL_34;
        }
      }
LABEL_33:
      int v39 = 0xFFFF;
LABEL_34:
      uint64_t result = *(unsigned __int8 *)(v4 + v19 - 2);
      __int16 v40 = *(int **)(v27 - 40);
      uint64_t v41 = (unsigned __int16 *)((char *)v40 - *v40);
      unsigned int v42 = *v41;
      if (*(unsigned char *)(v4 + v19 - 2))
      {
        if (v42 < 0x4B) {
          goto LABEL_9;
        }
        unsigned int v43 = v41[37];
        if (!v43) {
          goto LABEL_9;
        }
      }
      else if (v42 < 0x49 || (unsigned int v43 = v41[36]) == 0)
      {
LABEL_9:
        int v20 = 0xFFFF;
        goto LABEL_10;
      }
      int v20 = *(unsigned __int16 *)((char *)v40 + v43);
LABEL_10:
      int8x8_t v21 = (int8x8_t)vadd_s32((int32x2_t)__PAIR64__(v39, v33), v8);
      int32x2_t v22 = vsub_s32((int32x2_t)__PAIR64__(v20, v37), (int32x2_t)vand_s8(vbsl_s8((int8x8_t)vcgt_u32((uint32x2_t)v10, (uint32x2_t)vand_s8(v21, (int8x8_t)0xFFFF0000FFFFLL)), v21, (int8x8_t)vadd_s32((int32x2_t)__PAIR64__(v39, v33), v9)), (int8x8_t)0xFFFF0000FFFFLL));
      int32x2_t v23 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v22, v8), (int8x8_t)vadd_s32(v22, v11), (int8x8_t)v22);
      int8x8_t v24 = vbsl_s8((int8x8_t)vcgt_s32(v12, v23), (int8x8_t)vadd_s32(v23, v10), (int8x8_t)v23);
      v25.i64[0] = v24.i32[0];
      v25.i64[1] = v24.i32[1];
      int64x2_t v26 = (int64x2_t)vabsq_f64(vdivq_f64(vcvtq_f64_s64(v25), v44));
      v19 -= 40;
    }
    while ((vmovn_s64(vcgtq_f64((float64x2_t)vdupq_laneq_s64(v26, 1), (float64x2_t)v26)).u8[0] & 1) != 0);
    uint64_t v14 = v4 + v19 + 40;
LABEL_5:
    *(void *)uint64_t v14 = v16;
    *(_OWORD *)(v14 + 8) = *(_OWORD *)v45;
    *(_OWORD *)(v14 + 22) = *(_OWORD *)&v45[14];
    *(unsigned char *)(v14 + 38) = v17;
    *(unsigned char *)(v14 + 39) = v18;
LABEL_6:
    unsigned int v5 = v15 + 5;
    v7 += 40;
    unsigned int v13 = v15;
    if (v15 + 5 != a2) {
      continue;
    }
    return result;
  }
}

uint64_t sub_6CE360(uint64_t result, int **a2, int ***a3, unint64_t a4, uint64_t a5)
{
  if (a4)
  {
    uint64_t v5 = a5;
    uint64_t v9 = result;
    if (a4 == 2)
    {
      int32x2_t v12 = a2 - 5;
      uint64_t result = sub_6CDE8C(a3, a2 - 5, (int **)result);
      if (result)
      {
        long long v13 = *(_OWORD *)v12;
        long long v14 = *((_OWORD *)v12 + 1);
        *(void *)(v5 + 32) = v12[4];
        *(_OWORD *)uint64_t v5 = v13;
        *(_OWORD *)(v5 + 16) = v14;
        long long v15 = *(_OWORD *)v9;
        long long v16 = *(_OWORD *)(v9 + 16);
        int v17 = *(int **)(v9 + 32);
      }
      else
      {
        long long v18 = *(_OWORD *)v9;
        long long v19 = *(_OWORD *)(v9 + 16);
        *(void *)(v5 + 32) = *(void *)(v9 + 32);
        *(_OWORD *)uint64_t v5 = v18;
        *(_OWORD *)(v5 + 16) = v19;
        long long v15 = *(_OWORD *)v12;
        long long v16 = *((_OWORD *)v12 + 1);
        int v17 = v12[4];
      }
      *(void *)(v5 + 72) = v17;
      *(_OWORD *)(v5 + 40) = v15;
      *(_OWORD *)(v5 + 56) = v16;
    }
    else if (a4 == 1)
    {
      long long v10 = *(_OWORD *)result;
      long long v11 = *(_OWORD *)(result + 16);
      *(void *)(a5 + 32) = *(void *)(result + 32);
      *(_OWORD *)a5 = v10;
      *(_OWORD *)(a5 + 16) = v11;
    }
    else if ((uint64_t)a4 > 8)
    {
      unint64_t v20 = a4 >> 1;
      uint64_t v21 = 40 * (a4 >> 1);
      uint64_t v22 = result + v21;
      sub_6CDC10(result, result + v21, a3, a4 >> 1, a5, a4 >> 1);
      uint64_t result = sub_6CDC10(v9 + v21, a2, a3, a4 - v20, v5 + v21, a4 - v20);
      uint64_t v23 = v9 + v21;
      while ((int **)v23 != a2)
      {
        uint64_t result = sub_6CDE8C(a3, (int **)v23, (int **)v9);
        if (result)
        {
          long long v26 = *(_OWORD *)v23;
          long long v27 = *(_OWORD *)(v23 + 16);
          *(void *)(v5 + 32) = *(void *)(v23 + 32);
          *(_OWORD *)uint64_t v5 = v26;
          *(_OWORD *)(v5 + 16) = v27;
          v23 += 40;
          v5 += 40;
          if (v9 == v22)
          {
LABEL_19:
            if ((int **)v23 != a2)
            {
              uint64_t v28 = 0;
              do
              {
                uint64_t v29 = v5 + v28;
                long long v30 = *(_OWORD *)(v23 + v28);
                long long v31 = *(_OWORD *)(v23 + v28 + 16);
                *(void *)(v29 + 32) = *(void *)(v23 + v28 + 32);
                *(_OWORD *)uint64_t v29 = v30;
                *(_OWORD *)(v29 + 16) = v31;
                v28 += 40;
              }
              while ((int **)(v23 + v28) != a2);
            }
            return result;
          }
        }
        else
        {
          long long v24 = *(_OWORD *)v9;
          long long v25 = *(_OWORD *)(v9 + 16);
          *(void *)(v5 + 32) = *(void *)(v9 + 32);
          *(_OWORD *)uint64_t v5 = v24;
          *(_OWORD *)(v5 + 16) = v25;
          v9 += 40;
          v5 += 40;
          if (v9 == v22) {
            goto LABEL_19;
          }
        }
      }
      if (v9 != v22)
      {
        uint64_t v32 = 0;
        do
        {
          uint64_t v33 = v5 + v32;
          long long v34 = *(_OWORD *)(v9 + v32);
          long long v35 = *(_OWORD *)(v9 + v32 + 16);
          *(void *)(v33 + 32) = *(void *)(v9 + v32 + 32);
          *(_OWORD *)uint64_t v33 = v34;
          *(_OWORD *)(v33 + 16) = v35;
          v32 += 40;
        }
        while (v9 + v32 != v22);
      }
    }
    else
    {
      return sub_6CEA4C(result, a2, a5, a3);
    }
  }
  return result;
}

uint64_t sub_6CE598(uint64_t result, int **a2, char *a3, int ***a4, uint64_t a5, uint64_t a6, char *a7, uint64_t a8)
{
  uint64_t v77 = a6;
  if (a6)
  {
    long long v14 = (int **)result;
    while (v77 > a8 && a5 > a8)
    {
      if (!a5) {
        return result;
      }
      unint64_t v15 = 0;
      uint64_t v16 = -a5;
      while (1)
      {
        int v17 = (char *)&v14[v15 / 8];
        uint64_t result = sub_6CDE8C(a4, a2, &v14[v15 / 8]);
        if (result) {
          break;
        }
        v15 += 40;
        if (__CFADD__(v16++, 1)) {
          return result;
        }
      }
      uint64_t v19 = -v16;
      uint64_t v20 = v77;
      long long __src = a7;
      unsigned int v76 = a4;
      uint64_t v73 = a8;
      unsigned int v74 = a3;
      if (-v16 >= v77)
      {
        if (v16 == -1)
        {
          unsigned int v62 = (char *)&v14[v15 / 8];
          long long v63 = *(_OWORD *)&v14[v15 / 8];
          long long v64 = *(_OWORD *)&v14[v15 / 8 + 2];
          unsigned int v80 = v14[v15 / 8 + 4];
          long long v78 = v63;
          long long v79 = v64;
          long long v65 = *(_OWORD *)a2;
          long long v66 = *((_OWORD *)a2 + 1);
          *((void *)v62 + 4) = a2[4];
          *(_OWORD *)unsigned int v62 = v65;
          *((_OWORD *)v62 + 1) = v66;
          *(_OWORD *)a2 = v78;
          *((_OWORD *)a2 + 1) = v79;
          a2[4] = v80;
          return result;
        }
        if (v16 > 0) {
          uint64_t v19 = 1 - v16;
        }
        uint64_t v26 = v19 >> 1;
        long long v24 = &(&v14[5 * (v19 >> 1)])[v15 / 8];
        *(void *)&long long v78 = *a4;
        uint64_t v23 = a2;
        if (a2 != (int **)a3)
        {
          uint64_t v72 = v19 >> 1;
          unint64_t v27 = 0xCCCCCCCCCCCCCCCDLL * ((a3 - (char *)a2) >> 3);
          uint64_t v23 = a2;
          do
          {
            uint64_t v28 = &v23[5 * (v27 >> 1)];
            int v29 = sub_6CDE8C((int ***)&v78, v28, v24);
            if (v29) {
              v27 += ~(v27 >> 1);
            }
            else {
              v27 >>= 1;
            }
            if (v29) {
              uint64_t v23 = v28 + 5;
            }
          }
          while (v27);
          uint64_t v20 = v77;
          uint64_t v26 = v72;
        }
        uint64_t v22 = 0xCCCCCCCCCCCCCCCDLL * (v23 - a2);
      }
      else
      {
        if (v77 >= 0) {
          uint64_t v21 = v77;
        }
        else {
          uint64_t v21 = v77 + 1;
        }
        uint64_t v22 = v21 >> 1;
        uint64_t v23 = &a2[5 * (v21 >> 1)];
        long long v24 = a2;
        if ((char *)a2 - (char *)v14 != v15)
        {
          uint64_t v71 = v21 >> 1;
          unint64_t v25 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)((char *)a2 - (char *)v14 - v15) >> 3);
          long long v24 = &v14[v15 / 8];
          do
          {
            if (sub_6CDE8C(v76, v23, &v24[5 * (v25 >> 1)]))
            {
              v25 >>= 1;
            }
            else
            {
              v24 += 5 * (v25 >> 1) + 5;
              v25 += ~(v25 >> 1);
            }
          }
          while (v25);
          uint64_t v22 = v71;
          uint64_t v20 = v77;
        }
        uint64_t v26 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)((char *)v24 - (char *)v14 - v15) >> 3);
      }
      a5 = -(v26 + v16);
      uint64_t v77 = v20 - v22;
      long long v30 = (char *)a2;
      uint64_t v31 = v20;
      uint64_t v32 = v26;
      uint64_t v33 = v22;
      long long v34 = sub_6CED44((char *)v24, v30, (char *)v23);
      uint64_t v35 = v33;
      a3 = v34;
      if (v32 + v35 >= v31 - (v32 + v35) - v16)
      {
        __int16 v40 = v23;
        a4 = v76;
        uint64_t v41 = v32;
        uint64_t v42 = v35;
        a7 = __src;
        uint64_t result = sub_6CE598(v34, v40, v74, v76, a5, v77, __src, v73);
        a2 = v24;
        a8 = v73;
        a5 = v41;
        uint64_t v77 = v42;
        long long v14 = (int **)v17;
        if (!v42) {
          return result;
        }
      }
      else
      {
        unsigned int v36 = v24;
        uint64_t v37 = v32;
        a7 = __src;
        a8 = v73;
        uint64_t result = sub_6CE598(&v14[v15 / 8], v36, v34, v76, v37, v35, __src, v73);
        unsigned int v38 = a3;
        int v39 = v23;
        a4 = v76;
        a2 = v39;
        a3 = v74;
        long long v14 = (int **)v38;
        if (!v77) {
          return result;
        }
      }
    }
    if (a5 <= v77)
    {
      if (v14 != a2)
      {
        uint64_t v52 = 0;
        do
        {
          unint64_t v53 = &a7[v52 * 8];
          long long v54 = *(_OWORD *)&v14[v52];
          long long v55 = *(_OWORD *)&v14[v52 + 2];
          *((void *)v53 + 4) = v14[v52 + 4];
          *(_OWORD *)unint64_t v53 = v54;
          *((_OWORD *)v53 + 1) = v55;
          v52 += 5;
        }
        while (&v14[v52] != a2);
        if (v52 * 8)
        {
          uint64_t v56 = &a7[v52 * 8];
          int64_t v57 = (int **)a7;
          while (a2 != (int **)a3)
          {
            uint64_t result = sub_6CDE8C(a4, a2, v57);
            if (result)
            {
              long long v60 = *(_OWORD *)a2;
              long long v61 = *((_OWORD *)a2 + 1);
              v14[4] = a2[4];
              *(_OWORD *)long long v14 = v60;
              *((_OWORD *)v14 + 1) = v61;
              a2 += 5;
              v14 += 5;
              if (v56 == (char *)v57) {
                return result;
              }
            }
            else
            {
              long long v58 = *(_OWORD *)v57;
              long long v59 = *((_OWORD *)v57 + 1);
              v14[4] = v57[4];
              *(_OWORD *)long long v14 = v58;
              *((_OWORD *)v14 + 1) = v59;
              v57 += 5;
              v14 += 5;
              if (v56 == (char *)v57) {
                return result;
              }
            }
          }
          return (uint64_t)memmove(v14, v57, a7 - (char *)v57 + v52 * 8);
        }
      }
    }
    else if (a3 != (char *)a2)
    {
      uint64_t v43 = 0;
      do
      {
        float64x2_t v44 = &a7[v43 * 8];
        long long v45 = *(_OWORD *)&a2[v43];
        long long v46 = *(_OWORD *)&a2[v43 + 2];
        *((void *)v44 + 4) = a2[v43 + 4];
        *(_OWORD *)float64x2_t v44 = v45;
        *((_OWORD *)v44 + 1) = v46;
        v43 += 5;
      }
      while (&a2[v43] != (int **)a3);
      if (v43 * 8)
      {
        unsigned int v47 = (int **)&a7[v43 * 8];
        unint64_t v48 = a3 - 40;
        while (a2 != v14)
        {
          uint64_t result = sub_6CDE8C(a4, v47 - 5, a2 - 5);
          if (result) {
            int64_t v49 = a2 - 5;
          }
          else {
            int64_t v49 = v47 - 5;
          }
          if (result) {
            a2 -= 5;
          }
          else {
            v47 -= 5;
          }
          __int16 v50 = v49[4];
          long long v51 = *((_OWORD *)v49 + 1);
          *(_OWORD *)unint64_t v48 = *(_OWORD *)v49;
          *((_OWORD *)v48 + 1) = v51;
          *((void *)v48 + 4) = v50;
          v48 -= 40;
          if (v47 == (int **)a7) {
            return result;
          }
        }
        uint64_t v67 = 0;
        do
        {
          int v68 = &v48[v67 * 8];
          long long v69 = *(_OWORD *)&v47[v67 - 5];
          long long v70 = *(_OWORD *)&v47[v67 - 3];
          *((void *)v68 + 4) = v47[v67 - 1];
          *(_OWORD *)int v68 = v69;
          *((_OWORD *)v68 + 1) = v70;
          v67 -= 5;
        }
        while (&v47[v67] != (int **)a7);
      }
    }
  }
  return result;
}

uint64_t sub_6CEA4C(uint64_t result, int **a2, uint64_t a3, int ***a4)
{
  if ((int **)result != a2)
  {
    unsigned int v6 = (int **)result;
    long long v7 = *(_OWORD *)result;
    long long v8 = *(_OWORD *)(result + 16);
    *(void *)(a3 + 32) = *(void *)(result + 32);
    *(_OWORD *)a3 = v7;
    *(_OWORD *)(a3 + 16) = v8;
    uint64_t v9 = (int **)(result + 40);
    if ((int **)(result + 40) != a2)
    {
      uint64_t v11 = 0;
      int32x2_t v12 = vdup_n_s32(0x4650u);
      int32x2_t v13 = vdup_n_s32(0xB9B0u);
      int32x2_t v14 = vdup_n_s32(0x8CA0u);
      int32x2_t v15 = vdup_n_s32(0xFFFF7360);
      int32x2_t v16 = vdup_n_s32(0xFFFFB9B1);
      uint64_t v17 = a3;
      float64x2_t v50 = (float64x2_t)vdupq_n_s64(0x4059000000000000uLL);
      while (1)
      {
        uint64_t v21 = v6;
        uint64_t v22 = v17;
        unsigned int v6 = v9;
        v17 += 40;
        uint64_t result = sub_6CDE8C(a4, v9, (int **)v22);
        uint64_t v18 = v17;
        if (result)
        {
          long long v23 = *(_OWORD *)(v22 + 16);
          *(_OWORD *)uint64_t v17 = *(_OWORD *)v22;
          *(_OWORD *)(v17 + 16) = v23;
          *(void *)(v17 + 32) = *(void *)(v22 + 32);
          uint64_t v18 = a3;
          if (v22 != a3) {
            break;
          }
        }
LABEL_5:
        long long v19 = *(_OWORD *)v6;
        long long v20 = *((_OWORD *)v6 + 1);
        *(void *)(v18 + 32) = v6[4];
        *(_OWORD *)uint64_t v18 = v19;
        *(_OWORD *)(v18 + 16) = v20;
        uint64_t v9 = v6 + 5;
        v11 += 40;
        if (v6 + 5 == a2) {
          return result;
        }
      }
      uint64_t v24 = v11;
      while (1)
      {
        unint64_t v25 = **a4;
        uint64_t v26 = (unsigned __int16 *)((char *)v25 - *v25);
        unsigned int v27 = *v26;
        if (*((unsigned char *)*a4 + 38))
        {
          if (v27 >= 0x49)
          {
            unsigned int v28 = v26[36];
            if (v26[36]) {
              goto LABEL_15;
            }
          }
        }
        else if (v27 >= 0x4B)
        {
          unsigned int v28 = v26[37];
          if (v26[37])
          {
LABEL_15:
            int v29 = *(unsigned __int16 *)((char *)v25 + v28);
            long long v30 = *v6;
            uint64_t v31 = (unsigned __int16 *)((char *)*v6 - **v6);
            unsigned int v32 = *v31;
            if (*((unsigned char *)v21 + 78)) {
              goto LABEL_20;
            }
            goto LABEL_16;
          }
        }
        int v29 = 0xFFFF;
        long long v30 = *v6;
        uint64_t v31 = (unsigned __int16 *)((char *)*v6 - **v6);
        unsigned int v32 = *v31;
        if (*((unsigned char *)v21 + 78))
        {
LABEL_20:
          if (v32 >= 0x4B)
          {
            unsigned int v33 = v31[37];
            if (v33) {
              goto LABEL_22;
            }
          }
          goto LABEL_26;
        }
LABEL_16:
        if (v32 >= 0x49)
        {
          unsigned int v33 = v31[36];
          if (v33)
          {
LABEL_22:
            int v34 = *(unsigned __int16 *)((char *)v30 + v33);
            if (!*((unsigned char *)*a4 + 38)) {
              goto LABEL_23;
            }
            goto LABEL_27;
          }
        }
LABEL_26:
        int v34 = 0xFFFF;
        if (!*((unsigned char *)*a4 + 38))
        {
LABEL_23:
          if (v27 >= 0x4B)
          {
            unsigned int v35 = v26[37];
            if (v35) {
              goto LABEL_29;
            }
          }
          goto LABEL_30;
        }
LABEL_27:
        if (v27 >= 0x49)
        {
          unsigned int v35 = v26[36];
          if (v35)
          {
LABEL_29:
            int v36 = *(unsigned __int16 *)((char *)v25 + v35);
            goto LABEL_31;
          }
        }
LABEL_30:
        int v36 = 0xFFFF;
LABEL_31:
        uint64_t v37 = a3 + v24;
        unsigned int v38 = (void *)(a3 + v24 - 40);
        int v39 = (unsigned __int16 *)(*v38 - *(int *)*v38);
        unsigned int v40 = *v39;
        if (*(unsigned char *)(a3 + v24 - 2))
        {
          if (v40 < 0x4B) {
            goto LABEL_38;
          }
          unsigned int v41 = v39[37];
          if (!v41) {
            goto LABEL_38;
          }
        }
        else if (v40 < 0x49 || (unsigned int v41 = v39[36]) == 0)
        {
LABEL_38:
          int v42 = 0xFFFF;
          goto LABEL_39;
        }
        int v42 = *(unsigned __int16 *)(*v38 + v41);
LABEL_39:
        int8x8_t v43 = (int8x8_t)vadd_s32((int32x2_t)__PAIR64__(v36, v29), v12);
        int32x2_t v44 = vsub_s32((int32x2_t)__PAIR64__(v42, v34), (int32x2_t)vand_s8(vbsl_s8((int8x8_t)vcgt_u32((uint32x2_t)v14, (uint32x2_t)vand_s8(v43, (int8x8_t)0xFFFF0000FFFFLL)), v43, (int8x8_t)vadd_s32((int32x2_t)__PAIR64__(v36, v29), v13)), (int8x8_t)0xFFFF0000FFFFLL));
        int32x2_t v45 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v44, v12), (int8x8_t)vadd_s32(v44, v15), (int8x8_t)v44);
        int8x8_t v46 = vbsl_s8((int8x8_t)vcgt_s32(v16, v45), (int8x8_t)vadd_s32(v45, v14), (int8x8_t)v45);
        v47.i64[0] = v46.i32[0];
        v47.i64[1] = v46.i32[1];
        int64x2_t v48 = (int64x2_t)vabsq_f64(vdivq_f64(vcvtq_f64_s64(v47), v50));
        if ((vmovn_s64(vcgtq_f64((float64x2_t)vdupq_laneq_s64(v48, 1), (float64x2_t)v48)).u8[0] & 1) == 0)
        {
          uint64_t v18 = a3 + v24;
          goto LABEL_5;
        }
        long long v49 = *(_OWORD *)(a3 + v24 - 24);
        *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
        *(_OWORD *)(v37 + 16) = v49;
        *(void *)(v37 + 32) = *(void *)(a3 + v24 - 8);
        v24 -= 40;
        if (!v24)
        {
          uint64_t v18 = a3;
          goto LABEL_5;
        }
      }
    }
  }
  return result;
}

char *sub_6CED44(char *__src, char *a2, char *a3)
{
  uint64_t v4 = a3;
  if (__src != a2)
  {
    if (a2 == a3)
    {
      return __src;
    }
    else if (__src + 40 == a2)
    {
      long long v35 = *(_OWORD *)__src;
      long long v38 = *((_OWORD *)__src + 1);
      uint64_t v41 = *((void *)__src + 4);
      int64_t v15 = a3 - a2;
      memmove(__src, a2, a3 - a2);
      uint64_t v4 = &__src[v15];
      *(_OWORD *)uint64_t v4 = v35;
      *((_OWORD *)v4 + 1) = v38;
      *((void *)v4 + 4) = v41;
    }
    else if (a2 + 40 == a3)
    {
      uint64_t v4 = __src + 40;
      long long v36 = *(_OWORD *)(a3 - 40);
      long long v39 = *(_OWORD *)(a3 - 24);
      uint64_t v42 = *((void *)a3 - 1);
      size_t v16 = a3 - 40 - __src;
      if (a3 - 40 != __src) {
        memmove(__src + 40, __src, v16);
      }
      *(_OWORD *)long long __src = v36;
      *((_OWORD *)__src + 1) = v39;
      *((void *)__src + 4) = v42;
    }
    else
    {
      unint64_t v6 = 0xCCCCCCCCCCCCCCCDLL * ((a2 - __src) >> 3);
      if (v6 == 0xCCCCCCCCCCCCCCCDLL * ((a3 - a2) >> 3))
      {
        long long v7 = __src + 40;
        long long v8 = a2 + 40;
        do
        {
          long long v9 = *(_OWORD *)(v7 - 40);
          long long v10 = *(_OWORD *)(v7 - 24);
          uint64_t v11 = *((void *)v7 - 1);
          uint64_t v12 = *((void *)v8 - 1);
          long long v13 = *(_OWORD *)(v8 - 24);
          *(_OWORD *)(v7 - 40) = *(_OWORD *)(v8 - 40);
          *(_OWORD *)(v7 - 24) = v13;
          *((void *)v7 - 1) = v12;
          *((void *)v8 - 1) = v11;
          *(_OWORD *)(v8 - 24) = v10;
          *(_OWORD *)(v8 - 40) = v9;
          if (v7 == a2) {
            break;
          }
          v7 += 40;
          BOOL v14 = v8 == a3;
          v8 += 40;
        }
        while (!v14);
        return a2;
      }
      else
      {
        uint64_t v17 = 0xCCCCCCCCCCCCCCCDLL * ((a3 - a2) >> 3);
        unint64_t v18 = 0xCCCCCCCCCCCCCCCDLL * ((a2 - __src) >> 3);
        do
        {
          uint64_t v19 = v18;
          unint64_t v18 = v17;
          uint64_t v17 = v19 % v17;
        }
        while (v17);
        if (v18)
        {
          long long v20 = &__src[40 * v18];
          do
          {
            long long v21 = *(_OWORD *)(v20 - 40);
            long long v22 = *(_OWORD *)(v20 - 24);
            uint64_t v23 = *((void *)v20 - 1);
            v20 -= 40;
            long long v37 = v21;
            long long v40 = v22;
            uint64_t v43 = v23;
            uint64_t v24 = &v20[8 * ((a2 - __src) >> 3)];
            unint64_t v25 = v20;
            do
            {
              uint64_t v26 = v24;
              long long v27 = *(_OWORD *)v24;
              long long v28 = *((_OWORD *)v24 + 1);
              *((void *)v25 + 4) = *((void *)v24 + 4);
              *(_OWORD *)unint64_t v25 = v27;
              *((_OWORD *)v25 + 1) = v28;
              unint64_t v29 = 0xCCCCCCCCCCCCCCCDLL * ((a3 - v24) >> 3);
              v24 += 8 * ((a2 - __src) >> 3);
              BOOL v30 = __OFSUB__(v6, v29);
              uint64_t v32 = v6 - v29;
              char v31 = (v32 < 0) ^ v30;
              unsigned int v33 = &__src[40 * v32];
              if (!v31) {
                uint64_t v24 = v33;
              }
              unint64_t v25 = v26;
            }
            while (v24 != v20);
            *((void *)v26 + 4) = v43;
            *(_OWORD *)uint64_t v26 = v37;
            *((_OWORD *)v26 + 1) = v40;
          }
          while (v20 != __src);
        }
        return &__src[8 * ((a3 - a2) >> 3)];
      }
    }
  }
  return v4;
}

__n128 sub_6CEF64(int **a1, char *a2, double *a3, unint64_t a4, uint64_t a5, uint64_t a6, __n128 result)
{
  if (a4 >= 2)
  {
    unint64_t v9 = (unint64_t)a1;
    if (a4 == 2)
    {
      long long v10 = a2 - 40;
      if (sub_6CF254(a3, (int **)a2 - 5, a1))
      {
        uint64_t result = *(__n128 *)v9;
        long long v11 = *(_OWORD *)(v9 + 16);
        uint64_t v12 = *(void *)(v9 + 32);
        uint64_t v13 = *((void *)a2 - 1);
        long long v14 = *(_OWORD *)(a2 - 24);
        *(_OWORD *)unint64_t v9 = *(_OWORD *)v10;
        *(_OWORD *)(v9 + 16) = v14;
        *(void *)(v9 + 32) = v13;
        *((void *)a2 - 1) = v12;
        *(__n128 *)long long v10 = result;
        *(_OWORD *)(a2 - 24) = v11;
      }
    }
    else if ((uint64_t)a4 > 128)
    {
      uint64_t v28 = a5;
      unint64_t v29 = a4 >> 1;
      uint64_t v30 = (uint64_t)&a1[5 * (a4 >> 1)];
      unint64_t v31 = a4 >> 1;
      if ((uint64_t)a4 <= a6)
      {
        __n128 v32 = sub_6CF628((uint64_t)a1, v30, a3, v31, a5, result);
        uint64_t v33 = v28 + 40 * v29;
        result.n128_u64[0] = sub_6CF628(v9 + 40 * (a4 >> 1), (uint64_t)a2, a3, a4 - (a4 >> 1), v33, v32).n128_u64[0];
        unint64_t v34 = v28 + 40 * a4;
        uint64_t v35 = v33;
        while (v35 != v34)
        {
          if (sub_6CF254(a3, (int **)v35, (int **)v28))
          {
            uint64_t result = *(__n128 *)v35;
            long long v37 = *(_OWORD *)(v35 + 16);
            *(void *)(v9 + 32) = *(void *)(v35 + 32);
            *(__n128 *)unint64_t v9 = result;
            *(_OWORD *)(v9 + 16) = v37;
            v35 += 40;
            v9 += 40;
            if (v28 == v33)
            {
LABEL_26:
              if (v35 != v34)
              {
                uint64_t v38 = 0;
                do
                {
                  uint64_t v39 = v9 + v38;
                  uint64_t result = *(__n128 *)(v35 + v38);
                  long long v40 = *(_OWORD *)(v35 + v38 + 16);
                  *(void *)(v39 + 32) = *(void *)(v35 + v38 + 32);
                  *(__n128 *)uint64_t v39 = result;
                  *(_OWORD *)(v39 + 16) = v40;
                  v38 += 40;
                }
                while (v35 + v38 != v34);
              }
              return result;
            }
          }
          else
          {
            uint64_t result = *(__n128 *)v28;
            long long v36 = *(_OWORD *)(v28 + 16);
            *(void *)(v9 + 32) = *(void *)(v28 + 32);
            *(__n128 *)unint64_t v9 = result;
            *(_OWORD *)(v9 + 16) = v36;
            v28 += 40;
            v9 += 40;
            if (v28 == v33) {
              goto LABEL_26;
            }
          }
        }
        if (v28 != v33)
        {
          uint64_t v41 = 0;
          do
          {
            uint64_t v42 = v9 + v41;
            uint64_t result = *(__n128 *)(v28 + v41);
            long long v43 = *(_OWORD *)(v28 + v41 + 16);
            *(void *)(v42 + 32) = *(void *)(v28 + v41 + 32);
            *(__n128 *)uint64_t v42 = result;
            *(_OWORD *)(v42 + 16) = v43;
            v41 += 40;
          }
          while (v28 + v41 != v33);
        }
      }
      else
      {
        sub_6CEF64(a1, v30, a3, v31, a5, a6);
        sub_6CEF64(v9 + 40 * (a4 >> 1), a2, a3, a4 - (a4 >> 1), v28, a6);
        sub_6CF8E8(v9, (int **)(v9 + 40 * (a4 >> 1)), a2, a3, a4 >> 1, a4 - (a4 >> 1), (char *)v28, a6);
      }
    }
    else if (a1 != (int **)a2)
    {
      size_t v16 = a1 + 5;
      if (a1 + 5 != (int **)a2)
      {
        uint64_t v17 = 0;
        unint64_t v18 = a1;
        do
        {
          long long v21 = v18;
          unint64_t v18 = v16;
          if (sub_6CF254(a3, v16, v21))
          {
            __n128 v22 = *(__n128 *)v18;
            long long v23 = *((_OWORD *)v18 + 1);
            int8x8_t v46 = v18[4];
            __n128 v44 = v22;
            long long v45 = v23;
            uint64_t v24 = v17;
            do
            {
              uint64_t v25 = v9 + v24;
              long long v26 = *(_OWORD *)(v9 + v24 + 16);
              *(_OWORD *)(v25 + 40) = *(_OWORD *)(v9 + v24);
              *(_OWORD *)(v25 + 56) = v26;
              *(void *)(v25 + 72) = *(void *)(v9 + v24 + 32);
              if (!v24)
              {
                uint64_t v19 = v9;
                goto LABEL_10;
              }
              v24 -= 40;
            }
            while ((sub_6CF254(a3, (int **)&v44, (int **)(v24 + v9)) & 1) != 0);
            uint64_t v19 = v9 + v24 + 40;
LABEL_10:
            uint64_t result = v44;
            long long v20 = v45;
            *(void *)(v19 + 32) = v46;
            *(__n128 *)uint64_t v19 = result;
            *(_OWORD *)(v19 + 16) = v20;
          }
          size_t v16 = v18 + 5;
          v17 += 40;
        }
        while (v18 + 5 != (int **)a2);
      }
    }
  }
  return result;
}

unint64_t sub_6CF254(double *a1, int **a2, int **a3)
{
  uint64_t v3 = (uint64_t)*a2;
  int v4 = *((unsigned __int8 *)a2 + 38);
  uint64_t v5 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v6 = *v5;
  if (*((unsigned char *)a2 + 38))
  {
    if (v6 >= 0xB)
    {
      unsigned int v7 = v5[5];
      if (!v5[5]) {
        goto LABEL_10;
      }
      int v8 = 2;
LABEL_8:
      unsigned int v7 = (*(_DWORD *)(v3 + v7) & v8) != 0;
      goto LABEL_10;
    }
  }
  else if (v6 >= 0xB)
  {
    unsigned int v7 = v5[5];
    if (!v5[5]) {
      goto LABEL_10;
    }
    int v8 = 1;
    goto LABEL_8;
  }
  unsigned int v7 = 0;
LABEL_10:
  uint64_t v9 = (uint64_t)*a3;
  int v10 = *((unsigned __int8 *)a3 + 38);
  long long v11 = (unsigned __int16 *)((char *)*a3 - **a3);
  unsigned int v12 = *v11;
  if (*((unsigned char *)a3 + 38))
  {
    if (v12 >= 0xB && v11[5])
    {
      if (v7 == ((*(_DWORD *)(v9 + v11[5]) & 2) != 0)) {
        goto LABEL_14;
      }
LABEL_38:
      if (*((unsigned char *)a2 + 38))
      {
        if (v6 >= 0xB)
        {
          uint64_t v24 = v5[5];
          if (v5[5]) {
            return (*(_DWORD *)(v3 + v5[5]) & 2) != 0;
          }
          return v24;
        }
      }
      else if (v6 >= 0xB)
      {
        uint64_t v24 = v5[5];
        if (v5[5]) {
          return (*(_DWORD *)(v3 + v5[5]) & 1) != 0;
        }
        return v24;
      }
      return 0;
    }
    goto LABEL_37;
  }
  if (v12 < 0xB || !v11[5])
  {
LABEL_37:
    if (v7) {
      goto LABEL_38;
    }
    goto LABEL_14;
  }
  if (v7 != ((*(_DWORD *)(v9 + v11[5]) & 1) != 0)) {
    goto LABEL_38;
  }
LABEL_14:
  if (v6 < 0x2F
    || !v5[23]
    || ((unsigned int v13 = *(unsigned __int8 *)(v3 + v5[23]), v14 = v13 > 0x2D, v15 = (1 << v13) & 0x208040000000, !v14)
      ? (BOOL v16 = v15 == 0)
      : (BOOL v16 = 1),
        v16))
  {
    if (v12 <= 0x2E)
    {
      int v22 = 0;
      if (v6 < 0x2F) {
        goto LABEL_32;
      }
      goto LABEL_43;
    }
    unsigned int v17 = v11[23];
    if (!v11[23]) {
      goto LABEL_31;
    }
    int v18 = 0;
  }
  else
  {
    if (v12 <= 0x2E) {
      return 0;
    }
    unsigned int v17 = v11[23];
    if (!v11[23]) {
      return 0;
    }
    int v18 = 1;
  }
  unsigned int v19 = *(unsigned __int8 *)(v9 + v17);
  BOOL v14 = v19 > 0x2D;
  uint64_t v20 = (1 << v19) & 0x208040000000;
  if (!v14 && v20 != 0)
  {
    if (v18) {
      goto LABEL_31;
    }
LABEL_98:
    unsigned int v44 = *(unsigned __int8 *)(v9 + v17);
    if (v44 < 0x2E) {
      return (0x208040000000uLL >> v44) & 1;
    }
    return 0;
  }
  if (v18) {
    goto LABEL_98;
  }
LABEL_31:
  int v22 = 1;
  if (v6 < 0x2F)
  {
LABEL_32:
    LODWORD(v23) = 0;
    goto LABEL_45;
  }
LABEL_43:
  uint64_t v23 = v5[23];
  if (v5[23]) {
    LODWORD(v23) = *(unsigned __int8 *)(v3 + v23) == 47;
  }
LABEL_45:
  if (!v22 || !v11[23])
  {
    if ((v23 & 1) == 0) {
      goto LABEL_50;
    }
    return 0;
  }
  uint64_t v24 = *(unsigned __int8 *)(v9 + v11[23]) == 47;
  if ((v23 ^ v24)) {
    return v24;
  }
LABEL_50:
  long long v26 = **(int ***)a1;
  long long v27 = (unsigned __int16 *)((char *)v26 - *v26);
  unsigned int v28 = *v27;
  if (*(unsigned char *)(*(void *)a1 + 38))
  {
    if (v28 < 0x49) {
      goto LABEL_64;
    }
    unsigned int v29 = v27[36];
    if (!v27[36]) {
      goto LABEL_64;
    }
  }
  else if (v28 < 0x4B || (unsigned int v29 = v27[37]) == 0)
  {
LABEL_64:
    __int16 v30 = -1;
    if (v4) {
      goto LABEL_65;
    }
LABEL_61:
    if (v6 >= 0x49)
    {
      unsigned int v31 = v5[36];
      if (v31) {
        goto LABEL_67;
      }
    }
    goto LABEL_68;
  }
  __int16 v30 = *(_WORD *)((char *)v26 + v29);
  if (!v4) {
    goto LABEL_61;
  }
LABEL_65:
  if (v6 >= 0x4B)
  {
    unsigned int v31 = v5[37];
    if (v31)
    {
LABEL_67:
      int v32 = *(unsigned __int16 *)(v3 + v31);
      goto LABEL_69;
    }
  }
LABEL_68:
  int v32 = 0xFFFF;
LABEL_69:
  unsigned __int16 v33 = v30 + 18000;
  if ((unsigned __int16)((unsigned __int16)(v30 + 18000) >> 5) >= 0x465u) {
    unsigned __int16 v33 = v30 - 18000;
  }
  int v34 = v32 - v33;
  if (v34 > 18000) {
    v34 -= 36000;
  }
  if (v34 < -17999) {
    v34 += 36000;
  }
  double v35 = (double)v34;
  if (*(unsigned char *)(*(void *)a1 + 38))
  {
    if (v28 < 0x49) {
      goto LABEL_85;
    }
    unsigned int v36 = v27[36];
    if (!v27[36]) {
      goto LABEL_85;
    }
  }
  else if (v28 < 0x4B || (unsigned int v36 = v27[37]) == 0)
  {
LABEL_85:
    __int16 v37 = -1;
    double v38 = v35 / 100.0;
    if (v10) {
      goto LABEL_86;
    }
LABEL_82:
    if (v12 >= 0x49)
    {
      unsigned int v39 = v11[36];
      if (v11[36]) {
        goto LABEL_88;
      }
    }
LABEL_89:
    int v40 = 0xFFFF;
    goto LABEL_90;
  }
  __int16 v37 = *(_WORD *)((char *)v26 + v36);
  double v38 = v35 / 100.0;
  if (!v10) {
    goto LABEL_82;
  }
LABEL_86:
  if (v12 < 0x4B) {
    goto LABEL_89;
  }
  unsigned int v39 = v11[37];
  if (!v11[37]) {
    goto LABEL_89;
  }
LABEL_88:
  int v40 = *(unsigned __int16 *)(v9 + v39);
LABEL_90:
  unsigned __int16 v41 = v37 + 18000;
  unsigned __int16 v42 = v37 - 18000;
  if ((unsigned __int16)(v41 >> 5) < 0x465u) {
    unsigned __int16 v42 = v41;
  }
  int v43 = v40 - v42;
  if (v43 > 18000) {
    v43 -= 36000;
  }
  if (v43 < -17999) {
    v43 += 36000;
  }
  return vabdd_f64(v38, a1[1]) < vabdd_f64((double)v43 / 100.0, a1[1]);
}

__n128 sub_6CF628(uint64_t a1, uint64_t a2, double *a3, unint64_t a4, uint64_t a5, __n128 result)
{
  if (a4)
  {
    uint64_t v6 = a5;
    uint64_t v10 = a1;
    if (a4 == 2)
    {
      uint64_t v12 = a2 - 40;
      if (sub_6CF254(a3, (int **)(a2 - 40), (int **)a1))
      {
        __n128 v13 = *(__n128 *)v12;
        long long v14 = *(_OWORD *)(v12 + 16);
        *(void *)(v6 + 32) = *(void *)(v12 + 32);
        *(__n128 *)uint64_t v6 = v13;
        *(_OWORD *)(v6 + 16) = v14;
        uint64_t result = *(__n128 *)v10;
        long long v15 = *(_OWORD *)(v10 + 16);
        uint64_t v16 = *(void *)(v10 + 32);
      }
      else
      {
        __n128 v27 = *(__n128 *)v10;
        long long v28 = *(_OWORD *)(v10 + 16);
        *(void *)(v6 + 32) = *(void *)(v10 + 32);
        *(__n128 *)uint64_t v6 = v27;
        *(_OWORD *)(v6 + 16) = v28;
        uint64_t result = *(__n128 *)v12;
        long long v15 = *(_OWORD *)(v12 + 16);
        uint64_t v16 = *(void *)(v12 + 32);
      }
      *(void *)(v6 + 72) = v16;
      *(__n128 *)(v6 + 40) = result;
      *(_OWORD *)(v6 + 56) = v15;
    }
    else if (a4 == 1)
    {
      uint64_t result = *(__n128 *)a1;
      long long v11 = *(_OWORD *)(a1 + 16);
      *(void *)(a5 + 32) = *(void *)(a1 + 32);
      *(__n128 *)a5 = result;
      *(_OWORD *)(a5 + 16) = v11;
    }
    else if ((uint64_t)a4 > 8)
    {
      unint64_t v29 = a4 >> 1;
      uint64_t v30 = 40 * (a4 >> 1);
      uint64_t v31 = a1 + v30;
      sub_6CEF64(a1, a1 + v30, a3, a4 >> 1, a5, a4 >> 1);
      sub_6CEF64(v10 + v30, a2, a3, a4 - v29, v6 + v30, a4 - v29);
      uint64_t v32 = v10 + v30;
      while (v32 != a2)
      {
        if (sub_6CF254(a3, (int **)v32, (int **)v10))
        {
          uint64_t result = *(__n128 *)v32;
          long long v34 = *(_OWORD *)(v32 + 16);
          *(void *)(v6 + 32) = *(void *)(v32 + 32);
          *(__n128 *)uint64_t v6 = result;
          *(_OWORD *)(v6 + 16) = v34;
          v32 += 40;
          v6 += 40;
          if (v10 == v31)
          {
LABEL_26:
            if (v32 != a2)
            {
              uint64_t v35 = 0;
              do
              {
                uint64_t v36 = v6 + v35;
                uint64_t result = *(__n128 *)(v32 + v35);
                long long v37 = *(_OWORD *)(v32 + v35 + 16);
                *(void *)(v36 + 32) = *(void *)(v32 + v35 + 32);
                *(__n128 *)uint64_t v36 = result;
                *(_OWORD *)(v36 + 16) = v37;
                v35 += 40;
              }
              while (v32 + v35 != a2);
            }
            return result;
          }
        }
        else
        {
          uint64_t result = *(__n128 *)v10;
          long long v33 = *(_OWORD *)(v10 + 16);
          *(void *)(v6 + 32) = *(void *)(v10 + 32);
          *(__n128 *)uint64_t v6 = result;
          *(_OWORD *)(v6 + 16) = v33;
          v10 += 40;
          v6 += 40;
          if (v10 == v31) {
            goto LABEL_26;
          }
        }
      }
      if (v10 != v31)
      {
        uint64_t v38 = 0;
        do
        {
          uint64_t v39 = v6 + v38;
          uint64_t result = *(__n128 *)(v10 + v38);
          long long v40 = *(_OWORD *)(v10 + v38 + 16);
          *(void *)(v39 + 32) = *(void *)(v10 + v38 + 32);
          *(__n128 *)uint64_t v39 = result;
          *(_OWORD *)(v39 + 16) = v40;
          v38 += 40;
        }
        while (v10 + v38 != v31);
      }
    }
    else if (a1 != a2)
    {
      uint64_t result = *(__n128 *)a1;
      long long v17 = *(_OWORD *)(a1 + 16);
      *(void *)(a5 + 32) = *(void *)(a1 + 32);
      *(__n128 *)a5 = result;
      *(_OWORD *)(a5 + 16) = v17;
      uint64_t v18 = a1 + 40;
      if (a1 + 40 != a2)
      {
        uint64_t v19 = 0;
        uint64_t v20 = a5;
        do
        {
          uint64_t v22 = v20;
          v20 += 40;
          uint64_t v23 = v20;
          if (sub_6CF254(a3, (int **)v18, (int **)v22))
          {
            long long v24 = *(_OWORD *)(v22 + 16);
            *(_OWORD *)uint64_t v20 = *(_OWORD *)v22;
            *(_OWORD *)(v20 + 16) = v24;
            *(void *)(v20 + 32) = *(void *)(v22 + 32);
            uint64_t v23 = v6;
            if (v22 != v6)
            {
              uint64_t v25 = v19;
              while (1)
              {
                uint64_t v23 = v6 + v25;
                if (!sub_6CF254(a3, (int **)v18, (int **)(v6 + v25 - 40))) {
                  break;
                }
                long long v26 = *(_OWORD *)(v6 + v25 - 24);
                *(_OWORD *)uint64_t v23 = *(_OWORD *)(v6 + v25 - 40);
                *(_OWORD *)(v23 + 16) = v26;
                *(void *)(v23 + 32) = *(void *)(v6 + v25 - 8);
                v25 -= 40;
                if (!v25)
                {
                  uint64_t v23 = v6;
                  break;
                }
              }
            }
          }
          uint64_t result = *(__n128 *)v18;
          long long v21 = *(_OWORD *)(v18 + 16);
          *(void *)(v23 + 32) = *(void *)(v18 + 32);
          *(__n128 *)uint64_t v23 = result;
          *(_OWORD *)(v23 + 16) = v21;
          v18 += 40;
          v19 += 40;
        }
        while (v18 != a2);
      }
    }
  }
  return result;
}

unint64_t sub_6CF8E8(unint64_t result, int **a2, char *a3, double *a4, uint64_t a5, uint64_t a6, char *a7, uint64_t a8)
{
  uint64_t v77 = a6;
  if (a6)
  {
    long long v14 = (int **)result;
    while (v77 > a8 && a5 > a8)
    {
      if (!a5) {
        return result;
      }
      unint64_t v15 = 0;
      uint64_t v16 = -a5;
      while (1)
      {
        long long v17 = (char *)&v14[v15 / 8];
        uint64_t result = sub_6CF254(a4, a2, &v14[v15 / 8]);
        if (result) {
          break;
        }
        v15 += 40;
        if (__CFADD__(v16++, 1)) {
          return result;
        }
      }
      uint64_t v19 = -v16;
      uint64_t v20 = v77;
      long long __src = a7;
      unsigned int v76 = a4;
      uint64_t v73 = a8;
      unsigned int v74 = a3;
      if (-v16 >= v77)
      {
        if (v16 == -1)
        {
          unsigned int v62 = (char *)&v14[v15 / 8];
          long long v63 = *(_OWORD *)&v14[v15 / 8];
          long long v64 = *(_OWORD *)&v14[v15 / 8 + 2];
          unsigned int v80 = v14[v15 / 8 + 4];
          long long v78 = v63;
          long long v79 = v64;
          long long v65 = *(_OWORD *)a2;
          long long v66 = *((_OWORD *)a2 + 1);
          *((void *)v62 + 4) = a2[4];
          *(_OWORD *)unsigned int v62 = v65;
          *((_OWORD *)v62 + 1) = v66;
          *(_OWORD *)a2 = v78;
          *((_OWORD *)a2 + 1) = v79;
          a2[4] = v80;
          return result;
        }
        if (v16 > 0) {
          uint64_t v19 = 1 - v16;
        }
        uint64_t v26 = v19 >> 1;
        long long v24 = &(&v14[5 * (v19 >> 1)])[v15 / 8];
        long long v78 = *(_OWORD *)a4;
        uint64_t v23 = a2;
        if (a2 != (int **)a3)
        {
          uint64_t v72 = v19 >> 1;
          unint64_t v27 = 0xCCCCCCCCCCCCCCCDLL * ((a3 - (char *)a2) >> 3);
          uint64_t v23 = a2;
          do
          {
            long long v28 = &v23[5 * (v27 >> 1)];
            int v29 = sub_6CF254((double *)&v78, v28, v24);
            if (v29) {
              v27 += ~(v27 >> 1);
            }
            else {
              v27 >>= 1;
            }
            if (v29) {
              uint64_t v23 = v28 + 5;
            }
          }
          while (v27);
          uint64_t v20 = v77;
          uint64_t v26 = v72;
        }
        uint64_t v22 = 0xCCCCCCCCCCCCCCCDLL * (v23 - a2);
      }
      else
      {
        if (v77 >= 0) {
          uint64_t v21 = v77;
        }
        else {
          uint64_t v21 = v77 + 1;
        }
        uint64_t v22 = v21 >> 1;
        uint64_t v23 = &a2[5 * (v21 >> 1)];
        long long v24 = a2;
        if ((char *)a2 - (char *)v14 != v15)
        {
          uint64_t v71 = v21 >> 1;
          unint64_t v25 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)((char *)a2 - (char *)v14 - v15) >> 3);
          long long v24 = &v14[v15 / 8];
          do
          {
            if (sub_6CF254(v76, v23, &v24[5 * (v25 >> 1)]))
            {
              v25 >>= 1;
            }
            else
            {
              v24 += 5 * (v25 >> 1) + 5;
              v25 += ~(v25 >> 1);
            }
          }
          while (v25);
          uint64_t v22 = v71;
          uint64_t v20 = v77;
        }
        uint64_t v26 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)((char *)v24 - (char *)v14 - v15) >> 3);
      }
      a5 = -(v26 + v16);
      uint64_t v77 = v20 - v22;
      uint64_t v30 = (char *)a2;
      uint64_t v31 = v20;
      uint64_t v32 = v26;
      uint64_t v33 = v22;
      long long v34 = sub_6CED44((char *)v24, v30, (char *)v23);
      uint64_t v35 = v33;
      a3 = v34;
      if (v32 + v35 >= v31 - (v32 + v35) - v16)
      {
        long long v40 = v23;
        a4 = v76;
        uint64_t v41 = v32;
        uint64_t v42 = v35;
        a7 = __src;
        uint64_t result = sub_6CF8E8(v34, v40, v74, v76, a5, v77, __src, v73);
        a2 = v24;
        a8 = v73;
        a5 = v41;
        uint64_t v77 = v42;
        long long v14 = (int **)v17;
        if (!v42) {
          return result;
        }
      }
      else
      {
        uint64_t v36 = v24;
        uint64_t v37 = v32;
        a7 = __src;
        a8 = v73;
        uint64_t result = sub_6CF8E8(&v14[v15 / 8], v36, v34, v76, v37, v35, __src, v73);
        uint64_t v38 = a3;
        uint64_t v39 = v23;
        a4 = v76;
        a2 = v39;
        a3 = v74;
        long long v14 = (int **)v38;
        if (!v77) {
          return result;
        }
      }
    }
    if (a5 <= v77)
    {
      if (v14 != a2)
      {
        uint64_t v52 = 0;
        do
        {
          unint64_t v53 = &a7[v52 * 8];
          long long v54 = *(_OWORD *)&v14[v52];
          long long v55 = *(_OWORD *)&v14[v52 + 2];
          *((void *)v53 + 4) = v14[v52 + 4];
          *(_OWORD *)unint64_t v53 = v54;
          *((_OWORD *)v53 + 1) = v55;
          v52 += 5;
        }
        while (&v14[v52] != a2);
        if (v52 * 8)
        {
          uint64_t v56 = &a7[v52 * 8];
          int64_t v57 = (int **)a7;
          while (a2 != (int **)a3)
          {
            uint64_t result = sub_6CF254(a4, a2, v57);
            if (result)
            {
              long long v60 = *(_OWORD *)a2;
              long long v61 = *((_OWORD *)a2 + 1);
              v14[4] = a2[4];
              *(_OWORD *)long long v14 = v60;
              *((_OWORD *)v14 + 1) = v61;
              a2 += 5;
              v14 += 5;
              if (v56 == (char *)v57) {
                return result;
              }
            }
            else
            {
              long long v58 = *(_OWORD *)v57;
              long long v59 = *((_OWORD *)v57 + 1);
              v14[4] = v57[4];
              *(_OWORD *)long long v14 = v58;
              *((_OWORD *)v14 + 1) = v59;
              v57 += 5;
              v14 += 5;
              if (v56 == (char *)v57) {
                return result;
              }
            }
          }
          return (unint64_t)memmove(v14, v57, a7 - (char *)v57 + v52 * 8);
        }
      }
    }
    else if (a3 != (char *)a2)
    {
      uint64_t v43 = 0;
      do
      {
        unsigned int v44 = &a7[v43 * 8];
        long long v45 = *(_OWORD *)&a2[v43];
        long long v46 = *(_OWORD *)&a2[v43 + 2];
        *((void *)v44 + 4) = a2[v43 + 4];
        *(_OWORD *)unsigned int v44 = v45;
        *((_OWORD *)v44 + 1) = v46;
        v43 += 5;
      }
      while (&a2[v43] != (int **)a3);
      if (v43 * 8)
      {
        int64x2_t v47 = (int **)&a7[v43 * 8];
        int64x2_t v48 = a3 - 40;
        while (a2 != v14)
        {
          uint64_t result = sub_6CF254(a4, v47 - 5, a2 - 5);
          if (result) {
            long long v49 = a2 - 5;
          }
          else {
            long long v49 = v47 - 5;
          }
          if (result) {
            a2 -= 5;
          }
          else {
            v47 -= 5;
          }
          float64x2_t v50 = v49[4];
          long long v51 = *((_OWORD *)v49 + 1);
          *(_OWORD *)int64x2_t v48 = *(_OWORD *)v49;
          *((_OWORD *)v48 + 1) = v51;
          *((void *)v48 + 4) = v50;
          v48 -= 40;
          if (v47 == (int **)a7) {
            return result;
          }
        }
        uint64_t v67 = 0;
        do
        {
          int v68 = &v48[v67 * 8];
          long long v69 = *(_OWORD *)&v47[v67 - 5];
          long long v70 = *(_OWORD *)&v47[v67 - 3];
          *((void *)v68 + 4) = v47[v67 - 1];
          *(_OWORD *)int v68 = v69;
          *((_OWORD *)v68 + 1) = v70;
          v67 -= 5;
        }
        while (&v47[v67] != (int **)a7);
      }
    }
  }
  return result;
}

char *sub_6CFD9C(const void **a1, uint64_t a2, long long *a3, long long *a4, uint64_t a5)
{
  uint64_t v5 = (char *)*a1;
  uint64_t v6 = (a2 - (uint64_t)*a1) / 12;
  unsigned int v7 = (char *)*a1 + 12 * v6;
  if (a5 >= 1)
  {
    uint64_t v12 = (uint64_t)(a1 + 2);
    long long v11 = a1[2];
    unint64_t v13 = (unint64_t)a1[1];
    if ((uint64_t)(0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v11[-v13] >> 2)) >= a5)
    {
      long long v20 = a3[1];
      long long v55 = *a3;
      long long v56 = v20;
      long long v21 = a3[3];
      long long v57 = a3[2];
      long long v58 = v21;
      uint64_t v22 = a5 + 1;
      do
      {
        while (BYTE8(v58))
        {
          sub_2E7608((uint64_t)&v55);
          if (--v22 <= 1) {
            goto LABEL_16;
          }
        }
        sub_2E74E8((uint64_t)&v55);
        --v22;
      }
      while (v22 > 1);
LABEL_16:
      long long v59 = v55;
      long long v60 = v56;
      *(_OWORD *)long long v61 = v57;
      *(_OWORD *)&v61[16] = v58;
      uint64_t v23 = (uint64_t)a1[1];
      int64_t v24 = 0xAAAAAAAAAAAAAAABLL * ((v23 - (uint64_t)v7) >> 2);
      if (v24 >= a5) {
        goto LABEL_24;
      }
      long long v25 = a3[1];
      long long v59 = *a3;
      long long v60 = v25;
      *(_OWORD *)long long v61 = a3[2];
      *(_OWORD *)&v61[9] = *(long long *)((char *)a3 + 41);
      if (v23 - (uint64_t)v7 >= 1)
      {
        uint64_t v26 = v24 + 1;
        do
        {
          while (v61[24])
          {
            sub_2E7608((uint64_t)&v59);
            if (--v26 <= 1) {
              goto LABEL_22;
            }
          }
          sub_2E74E8((uint64_t)&v59);
          --v26;
        }
        while (v26 > 1);
LABEL_22:
        uint64_t v23 = (uint64_t)a1[1];
      }
      v62[0] = v59;
      v62[1] = v60;
      v62[2] = *(_OWORD *)v61;
      v62[3] = *(_OWORD *)&v61[16];
      long long v27 = a4[1];
      long long v64 = *a4;
      long long v65 = v27;
      long long v28 = a4[3];
      long long v66 = a4[2];
      long long v67 = v28;
      uint64_t v29 = sub_2E6714(v12, v62, (uint64_t)&v64, v23);
      a1[1] = (const void *)v29;
      uint64_t v23 = v29;
      if (v24 >= 1)
      {
LABEL_24:
        uint64_t v30 = &v7[12 * a5];
        unint64_t v31 = v23 - 12 * a5;
        uint64_t v32 = v23;
        if (v31 < v13)
        {
          uint64_t v32 = v23;
          do
          {
            uint64_t v33 = *(void *)v31;
            *(_DWORD *)(v32 + 8) = *(_DWORD *)(v31 + 8);
            *(void *)uint64_t v32 = v33;
            v32 += 12;
            v31 += 12;
          }
          while (v31 < v13);
        }
        a1[1] = (const void *)v32;
        if ((char *)v23 != v30) {
          memmove(&v7[12 * a5], v7, v23 - (void)v30);
        }
        long long v34 = a3[1];
        long long v64 = *a3;
        long long v65 = v34;
        long long v35 = a3[3];
        long long v66 = a3[2];
        long long v67 = v35;
        v63[0] = v59;
        v63[1] = v60;
        v63[2] = *(_OWORD *)v61;
        v63[3] = *(_OWORD *)&v61[16];
        sub_6D0180(&v64, (uint64_t)v63, (uint64_t)v7, (uint64_t)v62);
      }
    }
    else
    {
      unint64_t v14 = a5 - 0x5555555555555555 * ((uint64_t)(v13 - (void)v5) >> 2);
      if (v14 > 0x1555555555555555) {
        sub_2E00();
      }
      unint64_t v15 = 0xAAAAAAAAAAAAAAABLL * ((v11 - v5) >> 2);
      uint64_t v16 = 2 * v15;
      if (2 * v15 <= v14) {
        uint64_t v16 = v14;
      }
      if (v15 >= 0xAAAAAAAAAAAAAAALL) {
        unint64_t v17 = 0x1555555555555555;
      }
      else {
        unint64_t v17 = v16;
      }
      if (v17)
      {
        if (v17 > 0x1555555555555555) {
          sub_188D718();
        }
        uint64_t v18 = (char *)operator new(12 * v17);
      }
      else
      {
        uint64_t v18 = 0;
      }
      uint64_t v36 = 12 * v6;
      uint64_t v37 = &v18[12 * v6];
      uint64_t v38 = &v18[12 * v17];
      long long v39 = a3[1];
      v53[0] = *a3;
      v53[1] = v39;
      long long v40 = a3[3];
      v53[2] = a3[2];
      long long v54 = v40;
      uint64_t v41 = &v37[12 * a5];
      do
      {
        uint64_t v42 = &v18[v36];
        *(void *)uint64_t v42 = sub_2E1BC0((uint64_t)v53);
        *((_DWORD *)v42 + 2) = v43;
        if (BYTE8(v54)) {
          sub_2E7608((uint64_t)v53);
        }
        else {
          sub_2E74E8((uint64_t)v53);
        }
        v36 += 12;
      }
      while (v42 + 12 != v41);
      unsigned int v44 = (char *)*a1;
      long long v45 = v37;
      if (*a1 != v7)
      {
        long long v46 = v7;
        long long v45 = v37;
        do
        {
          uint64_t v47 = *(void *)(v46 - 12);
          v46 -= 12;
          int v48 = *((_DWORD *)v46 + 2);
          *(void *)(v45 - 12) = v47;
          v45 -= 12;
          *((_DWORD *)v45 + 2) = v48;
        }
        while (v46 != v44);
      }
      long long v49 = a1[1];
      uint64_t v50 = v49 - v7;
      if (v49 != v7) {
        memmove(v41, v7, v49 - v7);
      }
      long long v51 = (void *)*a1;
      *a1 = v45;
      a1[1] = &v41[v50];
      a1[2] = v38;
      if (v51) {
        operator delete(v51);
      }
      return v37;
    }
  }
  return v7;
}

void sub_6D0154(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_6D015C(_Unwind_Exception *exception_object)
{
  if (!v1) {
    _Unwind_Resume(exception_object);
  }
  operator delete(v1);
  _Unwind_Resume(exception_object);
}

double sub_6D0180@<D0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v5 = *(_DWORD *)(a2 + 48);
  uint64_t v6 = *(unsigned int *)(a2 + 52);
  long long v7 = a1[1];
  long long v29 = *a1;
  long long v30 = v7;
  long long v8 = a1[3];
  long long v31 = a1[2];
  long long v32 = v8;
  uint64_t v9 = DWORD1(v8);
  if (v8 != v5 || DWORD1(v8) != v6)
  {
    uint64_t v28 = a4;
    while (1)
    {
      uint64_t v10 = *((void *)&v30 + 1) + 4 * v9;
      int v11 = *(unsigned __int16 *)(v10 + 4);
      int v12 = *(unsigned __int16 *)(v10 + 6);
      unsigned int v13 = sub_511FC(DWORD2(v31));
      unsigned int v14 = DWORD2(v31) & ~(-1 << (v13 & 0xFE));
      int v15 = sub_51938(v14);
      int v16 = sub_51938(v14 >> 1);
      unint64_t v17 = (unsigned __int16 *)(v30 - *(int *)v30);
      unsigned int v18 = *v17;
      if (v18 < 0xD) {
        break;
      }
      if (!v17[6]) {
        goto LABEL_10;
      }
      int v19 = *(_DWORD *)(v30 + v17[6] + *(unsigned int *)(v30 + v17[6]) + 4 * DWORD1(v32) + 4);
LABEL_17:
      int v23 = 1 << -(v13 >> 1);
      if (v13 < 2) {
        int v23 = -2;
      }
      LODWORD(v24) = v23 * v16 + 4 * v12;
      if (v24 >= 0xFFFFFFFE) {
        uint64_t v24 = 4294967294;
      }
      else {
        uint64_t v24 = v24;
      }
      *(void *)a3 = (v23 * v15 + 4 * v11) | (unint64_t)(v24 << 32);
      *(_DWORD *)(a3 + 8) = v19;
      if (BYTE8(v32))
      {
        sub_2E7608((uint64_t)&v29);
        a3 += 12;
        uint64_t v9 = DWORD1(v32);
        if (v32 == v5) {
          goto LABEL_5;
        }
      }
      else
      {
        sub_2E74E8((uint64_t)&v29);
        a3 += 12;
        uint64_t v9 = DWORD1(v32);
        if (v32 == v5)
        {
LABEL_5:
          if (v9 == v6)
          {
            a4 = v28;
            goto LABEL_26;
          }
        }
      }
    }
    if (v18 >= 0xB)
    {
LABEL_10:
      if (v17[5])
      {
        int v20 = *(unsigned __int16 *)(v30 + v17[5] + *(unsigned int *)(v30 + v17[5]) + 2 * DWORD1(v32) + 4);
        if (v20 != 0xFFFF)
        {
          uint64_t v21 = v17[4];
          if (v21) {
            int v22 = *(_DWORD *)(v30 + v21);
          }
          else {
            int v22 = 0;
          }
          int v19 = HIDWORD(v31) + v20 + v22;
          goto LABEL_17;
        }
      }
    }
    int v19 = 0x7FFFFFFF;
    goto LABEL_17;
  }
LABEL_26:
  long long v25 = v30;
  *(_OWORD *)a4 = v29;
  *(_OWORD *)(a4 + 16) = v25;
  double result = *(double *)&v31;
  long long v27 = v32;
  *(_OWORD *)(a4 + 32) = v31;
  *(_OWORD *)(a4 + 48) = v27;
  *(void *)(a4 + 64) = a3;
  return result;
}

uint64_t sub_6D036C(int ***a1, int **a2)
{
  int v4 = a1[2];
  int v5 = *a1;
  uint64_t v6 = (*a1)[4];
  if (__PAIR64__(*((unsigned __int16 *)a2 + 18), *((_DWORD *)a2 + 8)) == __PAIR64__(WORD2(v6), v6)
    && (((unint64_t)v6 >> 48) & 1) != (*((unsigned char *)a2 + 38) == 0))
  {
    return 1;
  }
  long long v7 = *a2;
  long long v8 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v9 = *v8;
  if (v9 >= 0x43 && v8[33]) {
    unsigned int v10 = *((unsigned __int8 *)v7 + v8[33]);
  }
  else {
    unsigned int v10 = 0;
  }
  int v11 = a1[1];
  int v12 = *v11;
  unsigned int v13 = (unsigned __int16 *)((char *)*v11 - **v11);
  unsigned int v14 = *v13;
  if (v14 < 0x43)
  {
    if (!v10) {
      return 1;
    }
  }
  else
  {
    uint64_t v15 = v13[33];
    if (v13[33]) {
      LODWORD(v15) = *((unsigned __int8 *)v12 + v15);
    }
    if (v10 <= v15) {
      return 1;
    }
  }
  if (v9 >= 0x2F && v8[23])
  {
    int v16 = *((unsigned __int8 *)v7 + v8[23]);
    if (v14 < 0x2F)
    {
LABEL_21:
      if (v16 == 32) {
        return 1;
      }
      goto LABEL_22;
    }
  }
  else
  {
    int v16 = 32;
    if (v14 < 0x2F) {
      goto LABEL_21;
    }
  }
  uint64_t v17 = v13[23];
  if (!v17) {
    goto LABEL_21;
  }
  if (v16 == *((unsigned __int8 *)v12 + v17)) {
    return 1;
  }
LABEL_22:
  if (v9 >= 0x43 && v8[33])
  {
    unsigned int v18 = *((unsigned __int8 *)v7 + v8[33]);
    int v19 = *v5;
    int v20 = (unsigned __int16 *)((char *)v19 - *v19);
    unsigned int v21 = *v20;
    if (v21 < 0x43) {
      goto LABEL_25;
    }
LABEL_28:
    uint64_t v22 = v20[33];
    if (v20[33]) {
      LODWORD(v22) = *((unsigned __int8 *)v19 + v22);
    }
    if (v18 <= v22) {
      return 1;
    }
    goto LABEL_31;
  }
  unsigned int v18 = 0;
  int v19 = *v5;
  int v20 = (unsigned __int16 *)((char *)v19 - *v19);
  unsigned int v21 = *v20;
  if (v21 >= 0x43) {
    goto LABEL_28;
  }
LABEL_25:
  if (!v18) {
    return 1;
  }
LABEL_31:
  if (v9 < 0x2F || (uint64_t v23 = v8[23]) == 0)
  {
    int v24 = 32;
    if (v21 < 0x2F) {
      goto LABEL_52;
    }
    goto LABEL_36;
  }
  int v24 = *((unsigned __int8 *)v7 + v23);
  if (v21 >= 0x2F)
  {
LABEL_36:
    if (!v20[23]) {
      goto LABEL_52;
    }
    if (v24 != *((unsigned __int8 *)v19 + v20[23])) {
      goto LABEL_38;
    }
    return 1;
  }
LABEL_52:
  if (v24 == 32) {
    return 1;
  }
LABEL_38:
  uint64_t v25 = (uint64_t)(v4 + 145);
  double v26 = sub_6D82EC((uint64_t)(v4 + 145), v11, a2);
  if (*(unsigned char *)a1[3] && fabs(v26) > *((double *)v4 + 25)) {
    return 0;
  }
  unint64_t v27 = sub_2E68E8((uint64_t)*v4, (uint64_t)a1[1][4]);
  int v28 = 0;
  if (v27 <= 0xFFFFFFFEFFFFFFFFLL)
  {
    if (v27)
    {
      unint64_t v29 = sub_2E68E8((uint64_t)*v4, (uint64_t)a2[4]);
      int v28 = 0;
      if (v29 <= 0xFFFFFFFEFFFFFFFFLL)
      {
        if (v29) {
          int v28 = sub_2E79EC((uint64_t)*v4, (uint64_t)a1[1][4], (uint64_t)a2[4]);
        }
      }
    }
  }
  if (!*(unsigned char *)a1[3])
  {
    int v30 = *(unsigned char *)a1[4] ? v28 : 1;
    if (v30 != 1) {
      return 0;
    }
  }
  sub_68F4F8((uint64_t)*v4, *((unsigned int *)a2 + 8) | ((unint64_t)*((unsigned __int16 *)a2 + 18) << 32), &__p);
  uint64_t v36 = v4;
  long long v31 = sub_6D06D4((unint64_t **)&__p, (uint64_t **)&v36);
  long long v32 = v38;
  if (sub_6D855C(v25, a2))
  {
    uint64_t v33 = 1;
  }
  else
  {
    BOOL v35 = sub_6D85C0(v25, a2);
    uint64_t v33 = v32 != v31 || v35;
  }
  if (!__p) {
    return v33;
  }
  uint64_t v38 = (unint64_t *)__p;
  operator delete(__p);
  return v33;
}

void sub_6D06B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

unint64_t *sub_6D06D4(unint64_t **a1, uint64_t **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  if (*a1 != v3)
  {
    int v4 = *a2;
    while (1)
    {
      int v5 = (int *)sub_2DBC9C(*v4, *v2);
      uint64_t v6 = (unsigned __int16 *)((char *)v5 - *v5);
      if (*v6 >= 0xFu
        && v6[7]
        && (*((unsigned char *)v5 + v6[7]) & 4) != 0
        && (!v6[2] || *((unsigned __int8 *)v5 + v6[2]) - 1 >= 5)
        && !v6[4])
      {
        break;
      }
      if (++v2 == v3) {
        return v3;
      }
    }
  }
  return v2;
}

void sub_6D0774(uint64_t *a1, unint64_t a2)
{
  int v5 = (_DWORD *)a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = v5;
  if (a2 > (v4 - (uint64_t)v5) >> 3)
  {
    long long v7 = (_DWORD *)*a1;
    uint64_t v8 = ((uint64_t)v5 - *a1) >> 3;
    unint64_t v9 = v8 + a2;
    if ((v8 + a2) >> 61) {
      sub_2E00();
    }
    uint64_t v10 = v4 - (void)v7;
    if (v10 >> 2 > v9) {
      unint64_t v9 = v10 >> 2;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v11 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v9;
    }
    if (v11)
    {
      if (v11 >> 61) {
        sub_188D718();
      }
      int v12 = (char *)operator new(8 * v11);
      uint64_t v13 = (uint64_t)&v12[8 * v8];
      uint64_t v14 = v13 + 8 * a2;
      uint64_t v15 = v13;
      uint64_t v16 = (a2 - 1) & 0x1FFFFFFFFFFFFFFFLL;
      if (!v16) {
        goto LABEL_24;
      }
    }
    else
    {
      int v12 = 0;
      uint64_t v13 = 8 * v8;
      uint64_t v14 = 8 * v8 + 8 * a2;
      uint64_t v15 = 8 * v8;
      uint64_t v16 = (a2 - 1) & 0x1FFFFFFFFFFFFFFFLL;
      if (!v16)
      {
        do
        {
LABEL_24:
          *(_DWORD *)uint64_t v15 = 0;
          *(_WORD *)(v15 + 4) = 0;
          *(unsigned char *)(v15 + 6) = 1;
          v15 += 8;
        }
        while (v15 != v14);
LABEL_25:
        uint64_t v23 = &v12[8 * v11];
        if (v5 != v7)
        {
          do
          {
            int v24 = *(v6 - 2);
            v6 -= 2;
            int v25 = *(_DWORD *)((char *)v6 + 3);
            *(_DWORD *)(v13 - 8) = v24;
            v13 -= 8;
            *(_DWORD *)(v13 + 3) = v25;
          }
          while (v6 != v7);
        }
        double v26 = (void *)*a1;
        *a1 = v13;
        a1[1] = v14;
        a1[2] = (uint64_t)v23;
        if (v26)
        {
          operator delete(v26);
        }
        return;
      }
    }
    uint64_t v20 = v16 + 1;
    uint64_t v15 = v13 + 8 * (v20 & 0x3FFFFFFFFFFFFFFELL);
    uint64_t v21 = v13 + 8;
    uint64_t v22 = v20 & 0x3FFFFFFFFFFFFFFELL;
    do
    {
      *(_DWORD *)(v21 - 8) = 0;
      *(_DWORD *)uint64_t v21 = 0;
      *(_WORD *)(v21 - 4) = 0;
      *(_WORD *)(v21 + 4) = 0;
      *(unsigned char *)(v21 - 2) = 1;
      *(unsigned char *)(v21 + 6) = 1;
      v21 += 16;
      v22 -= 2;
    }
    while (v22);
    if (v20 == (v20 & 0x3FFFFFFFFFFFFFFELL)) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (a2)
  {
    if (((a2 - 1) & 0x1FFFFFFFFFFFFFFFLL) == 0) {
      goto LABEL_36;
    }
    uint64_t v17 = ((a2 - 1) & 0x1FFFFFFFFFFFFFFFLL) + 1;
    uint64_t v6 = &v5[2 * (v17 & 0x3FFFFFFFFFFFFFFELL)];
    unsigned int v18 = v5 + 2;
    uint64_t v19 = v17 & 0x3FFFFFFFFFFFFFFELL;
    do
    {
      *(v18 - 2) = 0;
      *unsigned int v18 = 0;
      *((_WORD *)v18 - 2) = 0;
      *((_WORD *)v18 + 2) = 0;
      *((unsigned char *)v18 - 2) = 1;
      *((unsigned char *)v18 + 6) = 1;
      v18 += 4;
      v19 -= 2;
    }
    while (v19);
    if (v17 != (v17 & 0x3FFFFFFFFFFFFFFELL))
    {
LABEL_36:
      do
      {
        _DWORD *v6 = 0;
        *((_WORD *)v6 + 2) = 0;
        *((unsigned char *)v6 + 6) = 1;
        v6 += 2;
      }
      while (v6 != &v5[2 * a2]);
    }
    uint64_t v6 = &v5[2 * a2];
  }
  a1[1] = (uint64_t)v6;
}

long long *sub_6D0990(long long *result, long long *a2, uint64_t *a3)
{
  if (result == a2) {
    return a2;
  }
  uint64_t v3 = a3[1];
  if (*a3 != v3)
  {
    do
    {
      unint64_t v4 = *((void *)result + 4);
      uint64_t v5 = *a3;
      while (__PAIR64__(*(unsigned __int16 *)(v5 + 4), *(_DWORD *)v5) != __PAIR64__(WORD2(v4), v4)
           || (HIWORD(v4) & 1) == (*(unsigned char *)(v5 + 6) == 0))
      {
        v5 += 8;
        if (v5 == v3) {
          goto LABEL_8;
        }
      }
      if (v5 != v3) {
        goto LABEL_11;
      }
LABEL_8:
      double result = (long long *)((char *)result + 40);
    }
    while (result != a2);
    return a2;
  }
  double result = (long long *)((char *)result + 40 * (((char *)a2 - (char *)result - 40) / 0x28uLL) + 40);
LABEL_11:
  if (result == a2) {
    return a2;
  }
  uint64_t v6 = (long long *)((char *)result + 40);
  if ((long long *)((char *)result + 40) == a2) {
    return result;
  }
  long long v7 = result;
  do
  {
    uint64_t v8 = v6;
    uint64_t v9 = *a3;
    uint64_t v10 = a3[1];
    if (*a3 != v10)
    {
      unint64_t v11 = *((void *)result + 9);
      while (__PAIR64__(*(unsigned __int16 *)(v9 + 4), *(_DWORD *)v9) != __PAIR64__(WORD2(v11), v11)
           || (HIWORD(v11) & 1) == (*(unsigned char *)(v9 + 6) == 0))
      {
        v9 += 8;
        if (v9 == v10)
        {
          uint64_t v9 = a3[1];
          break;
        }
      }
    }
    if (v9 == v10)
    {
      long long v12 = *v8;
      long long v13 = v8[1];
      *((void *)v7 + 4) = *((void *)v8 + 4);
      *long long v7 = v12;
      v7[1] = v13;
      long long v7 = (long long *)((char *)v7 + 40);
    }
    uint64_t v6 = (long long *)((char *)v8 + 40);
    double result = v8;
  }
  while ((long long *)((char *)v8 + 40) != a2);
  return v7;
}

void sub_6D0AF4(long long *a1, int **a2, uint64_t *a3, uint64_t a4, char a5)
{
void sub_6D1134(int **a1, int **a2, uint64_t *a3)
{
  if (a1 != a2)
  {
    uint64_t v44 = v8;
    uint64_t v45 = v7;
    uint64_t v46 = v6;
    uint64_t v47 = v5;
    uint64_t v48 = v3;
    uint64_t v49 = v4;
    unint64_t v11 = a1 + 5;
    if (a1 + 5 != a2)
    {
      uint64_t v13 = 0;
      uint64_t v14 = a1;
      do
      {
        unint64_t v17 = v11;
        uint64_t v19 = *a3;
        unsigned int v18 = (int **)a3[1];
        uint64_t v20 = *a3 + 1160;
        double v21 = sub_6D82EC(v20, v18, v11);
        double v22 = sub_6D82EC(v20, v18, v14);
        if (*(unsigned char *)(v19 + 857))
        {
          double v23 = sub_6A2704(*(void *)v19, v18, v17);
          double v24 = sub_6A2704(*(void *)v19, v18, v14);
          v25.i16[0] = *(_WORD *)(v19 + 748);
          double v26 = (double)vmovl_s16(v25).i32[0];
          if (vabdd_f64(v21, v22) <= v26)
          {
            LOWORD(v26) = *(_WORD *)(v19 + 750);
            if (vabdd_f64(v23, v24) >= (double)vmovl_s16(*(int16x4_t *)&v26).i32[0])
            {
              double v21 = v23;
              double v22 = v24;
            }
          }
        }
        if (fabs(v21) < fabs(v22))
        {
          long long v27 = *((_OWORD *)v17 + 1);
          long long v41 = *(_OWORD *)v17;
          long long v42 = v27;
          long long v43 = v17[4];
          uint64_t v28 = v13;
          do
          {
            double v29 = (char *)a1 + v28;
            long long v30 = *(_OWORD *)((char *)a1 + v28 + 16);
            *(_OWORD *)(v29 + 40) = *(_OWORD *)((char *)a1 + v28);
            *(_OWORD *)(v29 + 56) = v30;
            *((void *)v29 + 9) = *(int **)((char *)a1 + v28 + 32);
            if (!v28)
            {
              uint64_t v15 = (uint64_t)a1;
              goto LABEL_5;
            }
            double v31 = (int **)(v29 - 40);
            uint64_t v33 = *a3;
            uint64_t v32 = (int **)a3[1];
            uint64_t v34 = *a3 + 1160;
            double v35 = sub_6D82EC(v34, v32, (int **)&v41);
            double v36 = sub_6D82EC(v34, v32, v31);
            if (*(unsigned char *)(v33 + 857))
            {
              double v37 = sub_6A2704(*(void *)v33, v32, (int **)&v41);
              double v38 = sub_6A2704(*(void *)v33, v32, v31);
              v39.i16[0] = *(_WORD *)(v33 + 748);
              double v40 = (double)vmovl_s16(v39).i32[0];
              if (vabdd_f64(v35, v36) <= v40)
              {
                LOWORD(v40) = *(_WORD *)(v33 + 750);
                if (vabdd_f64(v37, v38) >= (double)vmovl_s16(*(int16x4_t *)&v40).i32[0])
                {
                  double v35 = v37;
                  double v36 = v38;
                }
              }
            }
            v28 -= 40;
          }
          while (fabs(v35) < fabs(v36));
          uint64_t v15 = (uint64_t)a1 + v28 + 40;
LABEL_5:
          long long v16 = v42;
          *(_OWORD *)uint64_t v15 = v41;
          *(_OWORD *)(v15 + 16) = v16;
          *(void *)(v15 + 32) = v43;
        }
        unint64_t v11 = v17 + 5;
        v13 += 40;
        uint64_t v14 = v17;
      }
      while (v17 + 5 != a2);
    }
  }
}

void sub_6D1388(int **a1, int **a2, uint64_t *a3)
{
  if (a1 != a2)
  {
    uint64_t v40 = v8;
    uint64_t v41 = v7;
    uint64_t v42 = v6;
    uint64_t v43 = v5;
    uint64_t v44 = v3;
    uint64_t v45 = v4;
    uint64_t v10 = a1;
    unint64_t v11 = a1 + 5;
    if (a1 + 5 != a2)
    {
      uint64_t v13 = a1 - 5;
      do
      {
        uint64_t v15 = v11;
        uint64_t v17 = *a3;
        long long v16 = (int **)a3[1];
        uint64_t v18 = *a3 + 1160;
        double v19 = sub_6D82EC(v18, v16, v11);
        double v20 = sub_6D82EC(v18, v16, v10);
        if (*(unsigned char *)(v17 + 857))
        {
          double v21 = sub_6A2704(*(void *)v17, v16, v15);
          double v22 = sub_6A2704(*(void *)v17, v16, v10);
          v23.i16[0] = *(_WORD *)(v17 + 748);
          double v24 = (double)vmovl_s16(v23).i32[0];
          if (vabdd_f64(v19, v20) <= v24)
          {
            LOWORD(v24) = *(_WORD *)(v17 + 750);
            if (vabdd_f64(v21, v22) >= (double)vmovl_s16(*(int16x4_t *)&v24).i32[0])
            {
              double v19 = v21;
              double v20 = v22;
            }
          }
        }
        if (fabs(v19) < fabs(v20))
        {
          long long v25 = *((_OWORD *)v15 + 1);
          long long v37 = *(_OWORD *)v15;
          long long v38 = v25;
          int16x4_t v39 = v15[4];
          double v26 = v13;
          do
          {
            long long v27 = *(_OWORD *)(v26 + 7);
            *((_OWORD *)v26 + 5) = *(_OWORD *)(v26 + 5);
            *((_OWORD *)v26 + 6) = v27;
            v26[14] = v26[9];
            uint64_t v29 = *a3;
            uint64_t v28 = (int **)a3[1];
            uint64_t v30 = *a3 + 1160;
            double v31 = sub_6D82EC(v30, v28, (int **)&v37);
            double v32 = sub_6D82EC(v30, v28, v26);
            if (*(unsigned char *)(v29 + 857))
            {
              double v33 = sub_6A2704(*(void *)v29, v28, (int **)&v37);
              double v34 = sub_6A2704(*(void *)v29, v28, v26);
              v35.i16[0] = *(_WORD *)(v29 + 748);
              double v36 = (double)vmovl_s16(v35).i32[0];
              if (vabdd_f64(v31, v32) <= v36)
              {
                LOWORD(v36) = *(_WORD *)(v29 + 750);
                if (vabdd_f64(v33, v34) >= (double)vmovl_s16(*(int16x4_t *)&v36).i32[0])
                {
                  double v31 = v33;
                  double v32 = v34;
                }
              }
            }
            v26 -= 5;
          }
          while (fabs(v31) < fabs(v32));
          long long v14 = v38;
          *((_OWORD *)v26 + 5) = v37;
          *((_OWORD *)v26 + 6) = v14;
          v26[14] = v39;
        }
        unint64_t v11 = v15 + 5;
        v13 += 5;
        uint64_t v10 = v15;
      }
      while (v15 + 5 != a2);
    }
  }
}

uint64_t sub_6D15B4(int **a1, int **a2, int **a3, uint64_t *a4)
{
  uint64_t v9 = *a4;
  uint64_t v8 = (int **)a4[1];
  uint64_t v10 = *a4 + 1160;
  double v11 = sub_6D82EC(v10, v8, a2);
  double v12 = sub_6D82EC(v10, v8, a1);
  if (*(unsigned char *)(v9 + 857))
  {
    double v13 = sub_6A2704(*(void *)v9, v8, a2);
    double v14 = sub_6A2704(*(void *)v9, v8, a1);
    v15.i16[0] = *(_WORD *)(v9 + 748);
    double v16 = (double)vmovl_s16(v15).i32[0];
    if (vabdd_f64(v11, v12) <= v16)
    {
      LOWORD(v16) = *(_WORD *)(v9 + 750);
      if (vabdd_f64(v13, v14) >= (double)vmovl_s16(*(int16x4_t *)&v16).i32[0])
      {
        double v11 = v13;
        double v12 = v14;
      }
    }
  }
  double v17 = fabs(v11);
  double v18 = fabs(v12);
  uint64_t v20 = *a4;
  double v19 = (int **)a4[1];
  uint64_t v21 = *a4 + 1160;
  double v22 = sub_6D82EC(v21, v19, a3);
  double v23 = sub_6D82EC(v21, v19, a2);
  if (v17 >= v18)
  {
    if (*(unsigned char *)(v20 + 857))
    {
      double v34 = sub_6A2704(*(void *)v20, v19, a3);
      double v35 = sub_6A2704(*(void *)v20, v19, a2);
      v36.i16[0] = *(_WORD *)(v20 + 748);
      double v37 = (double)vmovl_s16(v36).i32[0];
      if (vabdd_f64(v22, v23) <= v37)
      {
        LOWORD(v37) = *(_WORD *)(v20 + 750);
        if (vabdd_f64(v34, v35) >= (double)vmovl_s16(*(int16x4_t *)&v37).i32[0])
        {
          double v22 = v34;
          double v23 = v35;
        }
      }
    }
    if (fabs(v22) >= fabs(v23)) {
      return 0;
    }
    long long v38 = *(_OWORD *)a2;
    long long v39 = *((_OWORD *)a2 + 1);
    uint64_t v40 = a2[4];
    uint64_t v41 = a3[4];
    long long v42 = *((_OWORD *)a3 + 1);
    *(_OWORD *)a2 = *(_OWORD *)a3;
    *((_OWORD *)a2 + 1) = v42;
    a2[4] = v41;
    a3[4] = v40;
    *(_OWORD *)a3 = v38;
    *((_OWORD *)a3 + 1) = v39;
    uint64_t v44 = *a4;
    uint64_t v43 = (int **)a4[1];
    uint64_t v45 = *a4 + 1160;
    double v46 = sub_6D82EC(v45, v43, a2);
    double v47 = sub_6D82EC(v45, v43, a1);
    if (*(unsigned char *)(v44 + 857))
    {
      double v48 = sub_6A2704(*(void *)v44, v43, a2);
      double v49 = sub_6A2704(*(void *)v44, v43, a1);
      v50.i16[0] = *(_WORD *)(v44 + 748);
      double v51 = (double)vmovl_s16(v50).i32[0];
      if (vabdd_f64(v46, v47) <= v51)
      {
        LOWORD(v51) = *(_WORD *)(v44 + 750);
        if (vabdd_f64(v48, v49) >= (double)vmovl_s16(*(int16x4_t *)&v51).i32[0])
        {
          double v46 = v48;
          double v47 = v49;
        }
      }
    }
    if (fabs(v46) < fabs(v47))
    {
      long long v52 = *(_OWORD *)a1;
      long long v53 = *((_OWORD *)a1 + 1);
      long long v54 = a1[4];
      long long v55 = a2[4];
      long long v56 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v56;
      a1[4] = v55;
      a2[4] = v54;
      uint64_t result = 2;
      *(_OWORD *)a2 = v52;
      *((_OWORD *)a2 + 1) = v53;
      return result;
    }
  }
  else
  {
    if (*(unsigned char *)(v20 + 857))
    {
      double v24 = sub_6A2704(*(void *)v20, v19, a3);
      double v25 = sub_6A2704(*(void *)v20, v19, a2);
      v26.i16[0] = *(_WORD *)(v20 + 748);
      double v27 = (double)vmovl_s16(v26).i32[0];
      if (vabdd_f64(v22, v23) <= v27)
      {
        LOWORD(v27) = *(_WORD *)(v20 + 750);
        if (vabdd_f64(v24, v25) >= (double)vmovl_s16(*(int16x4_t *)&v27).i32[0])
        {
          double v22 = v24;
          double v23 = v25;
        }
      }
    }
    if (fabs(v22) < fabs(v23))
    {
      long long v28 = *(_OWORD *)a1;
      long long v29 = *((_OWORD *)a1 + 1);
      uint64_t v30 = a1[4];
      double v31 = a3[4];
      long long v32 = *((_OWORD *)a3 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a3;
      *((_OWORD *)a1 + 1) = v32;
      a1[4] = v31;
      a3[4] = v30;
      uint64_t result = 1;
LABEL_29:
      *(_OWORD *)a3 = v28;
      *((_OWORD *)a3 + 1) = v29;
      return result;
    }
    long long v57 = *(_OWORD *)a1;
    long long v58 = *((_OWORD *)a1 + 1);
    uint64_t v59 = a1[4];
    long long v60 = a2[4];
    long long v61 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v61;
    a1[4] = v60;
    a2[4] = v59;
    *(_OWORD *)a2 = v57;
    *((_OWORD *)a2 + 1) = v58;
    uint64_t v63 = *a4;
    unsigned int v62 = (int **)a4[1];
    uint64_t v64 = *a4 + 1160;
    double v65 = sub_6D82EC(v64, v62, a3);
    double v66 = sub_6D82EC(v64, v62, a2);
    if (*(unsigned char *)(v63 + 857))
    {
      double v67 = sub_6A2704(*(void *)v63, v62, a3);
      double v68 = sub_6A2704(*(void *)v63, v62, a2);
      v69.i16[0] = *(_WORD *)(v63 + 748);
      double v70 = (double)vmovl_s16(v69).i32[0];
      if (vabdd_f64(v65, v66) <= v70)
      {
        LOWORD(v70) = *(_WORD *)(v63 + 750);
        if (vabdd_f64(v67, v68) >= (double)vmovl_s16(*(int16x4_t *)&v70).i32[0])
        {
          double v65 = v67;
          double v66 = v68;
        }
      }
    }
    if (fabs(v65) < fabs(v66))
    {
      long long v28 = *(_OWORD *)a2;
      long long v29 = *((_OWORD *)a2 + 1);
      uint64_t v71 = a2[4];
      uint64_t v72 = a3[4];
      long long v73 = *((_OWORD *)a3 + 1);
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *((_OWORD *)a2 + 1) = v73;
      a2[4] = v72;
      a3[4] = v71;
      uint64_t result = 2;
      goto LABEL_29;
    }
  }
  return 1;
}

long long *sub_6D19F8(long long *a1, int **a2, uint64_t *a3)
{
  uint64_t v4 = a2;
  long long v6 = a1[1];
  long long v76 = *a1;
  long long v77 = v6;
  uint64_t v78 = *((void *)a1 + 4);
  uint64_t v7 = a2 - 5;
  uint64_t v9 = *a3;
  uint64_t v8 = (int **)a3[1];
  uint64_t v10 = *a3 + 1160;
  double v11 = sub_6D82EC(v10, v8, (int **)&v76);
  double v12 = sub_6D82EC(v10, v8, v7);
  if (*(unsigned char *)(v9 + 857))
  {
    double v13 = sub_6A2704(*(void *)v9, v8, (int **)&v76);
    double v14 = sub_6A2704(*(void *)v9, v8, v7);
    v15.i16[0] = *(_WORD *)(v9 + 748);
    double v16 = (double)vmovl_s16(v15).i32[0];
    if (vabdd_f64(v11, v12) <= v16)
    {
      LOWORD(v16) = *(_WORD *)(v9 + 750);
      if (vabdd_f64(v13, v14) >= (double)vmovl_s16(*(int16x4_t *)&v16).i32[0])
      {
        double v11 = v13;
        double v12 = v14;
      }
    }
  }
  if (fabs(v11) >= fabs(v12))
  {
    double v27 = (long long *)((char *)a1 + 40);
    do
    {
      double v17 = v27;
      if (v27 >= (long long *)v4) {
        break;
      }
      uint64_t v29 = *a3;
      long long v28 = (int **)a3[1];
      uint64_t v30 = *a3 + 1160;
      double v31 = sub_6D82EC(v30, v28, (int **)&v76);
      double v32 = sub_6D82EC(v30, v28, (int **)v17);
      if (*(unsigned char *)(v29 + 857))
      {
        double v33 = sub_6A2704(*(void *)v29, v28, (int **)&v76);
        double v34 = sub_6A2704(*(void *)v29, v28, (int **)v17);
        v35.i16[0] = *(_WORD *)(v29 + 748);
        double v36 = (double)vmovl_s16(v35).i32[0];
        if (vabdd_f64(v31, v32) <= v36)
        {
          LOWORD(v36) = *(_WORD *)(v29 + 750);
          if (vabdd_f64(v33, v34) >= (double)vmovl_s16(*(int16x4_t *)&v36).i32[0])
          {
            double v31 = v33;
            double v32 = v34;
          }
        }
      }
      double v27 = (long long *)((char *)v17 + 40);
    }
    while (fabs(v31) >= fabs(v32));
  }
  else
  {
    double v17 = a1;
    do
    {
      double v17 = (long long *)((char *)v17 + 40);
      uint64_t v19 = *a3;
      double v18 = (int **)a3[1];
      uint64_t v20 = *a3 + 1160;
      double v21 = sub_6D82EC(v20, v18, (int **)&v76);
      double v22 = sub_6D82EC(v20, v18, (int **)v17);
      if (*(unsigned char *)(v19 + 857))
      {
        double v23 = sub_6A2704(*(void *)v19, v18, (int **)&v76);
        double v24 = sub_6A2704(*(void *)v19, v18, (int **)v17);
        v25.i16[0] = *(_WORD *)(v19 + 748);
        double v26 = (double)vmovl_s16(v25).i32[0];
        if (vabdd_f64(v21, v22) <= v26)
        {
          LOWORD(v26) = *(_WORD *)(v19 + 750);
          if (vabdd_f64(v23, v24) >= (double)vmovl_s16(*(int16x4_t *)&v26).i32[0])
          {
            double v21 = v23;
            double v22 = v24;
          }
        }
      }
    }
    while (fabs(v21) >= fabs(v22));
  }
  if (v17 < (long long *)v4)
  {
    do
    {
      v4 -= 5;
      uint64_t v62 = *a3;
      long long v61 = (int **)a3[1];
      uint64_t v63 = *a3 + 1160;
      double v64 = sub_6D82EC(v63, v61, (int **)&v76);
      double v65 = sub_6D82EC(v63, v61, v4);
      if (*(unsigned char *)(v62 + 857))
      {
        double v66 = sub_6A2704(*(void *)v62, v61, (int **)&v76);
        double v67 = sub_6A2704(*(void *)v62, v61, v4);
        v68.i16[0] = *(_WORD *)(v62 + 748);
        double v69 = (double)vmovl_s16(v68).i32[0];
        if (vabdd_f64(v64, v65) <= v69)
        {
          LOWORD(v69) = *(_WORD *)(v62 + 750);
          if (vabdd_f64(v66, v67) >= (double)vmovl_s16(*(int16x4_t *)&v69).i32[0])
          {
            double v64 = v66;
            double v65 = v67;
          }
        }
      }
    }
    while (fabs(v64) < fabs(v65));
  }
  while (v17 < (long long *)v4)
  {
    long long v37 = *v17;
    long long v38 = v17[1];
    __int16 v81 = (int *)*((void *)v17 + 4);
    long long v79 = v37;
    long long v80 = v38;
    long long v39 = *(_OWORD *)v4;
    long long v40 = *((_OWORD *)v4 + 1);
    *((void *)v17 + 4) = v4[4];
    *double v17 = v39;
    v17[1] = v40;
    long long v41 = v79;
    long long v42 = v80;
    v4[4] = v81;
    *(_OWORD *)uint64_t v4 = v41;
    *((_OWORD *)v4 + 1) = v42;
    do
    {
      double v17 = (long long *)((char *)v17 + 40);
      uint64_t v44 = *a3;
      uint64_t v43 = (int **)a3[1];
      uint64_t v45 = *a3 + 1160;
      double v46 = sub_6D82EC(v45, v43, (int **)&v76);
      double v47 = sub_6D82EC(v45, v43, (int **)v17);
      if (*(unsigned char *)(v44 + 857))
      {
        double v48 = sub_6A2704(*(void *)v44, v43, (int **)&v76);
        double v49 = sub_6A2704(*(void *)v44, v43, (int **)v17);
        v50.i16[0] = *(_WORD *)(v44 + 748);
        double v51 = (double)vmovl_s16(v50).i32[0];
        if (vabdd_f64(v46, v47) <= v51)
        {
          LOWORD(v51) = *(_WORD *)(v44 + 750);
          if (vabdd_f64(v48, v49) >= (double)vmovl_s16(*(int16x4_t *)&v51).i32[0])
          {
            double v46 = v48;
            double v47 = v49;
          }
        }
      }
    }
    while (fabs(v46) >= fabs(v47));
    do
    {
      v4 -= 5;
      uint64_t v53 = *a3;
      long long v52 = (int **)a3[1];
      uint64_t v54 = *a3 + 1160;
      double v55 = sub_6D82EC(v54, v52, (int **)&v76);
      double v56 = sub_6D82EC(v54, v52, v4);
      if (*(unsigned char *)(v53 + 857))
      {
        double v57 = sub_6A2704(*(void *)v53, v52, (int **)&v76);
        double v58 = sub_6A2704(*(void *)v53, v52, v4);
        v59.i16[0] = *(_WORD *)(v53 + 748);
        double v60 = (double)vmovl_s16(v59).i32[0];
        if (vabdd_f64(v55, v56) <= v60)
        {
          LOWORD(v60) = *(_WORD *)(v53 + 750);
          if (vabdd_f64(v57, v58) >= (double)vmovl_s16(*(int16x4_t *)&v60).i32[0])
          {
            double v55 = v57;
            double v56 = v58;
          }
        }
      }
    }
    while (fabs(v55) < fabs(v56));
  }
  double v70 = (long long *)((char *)v17 - 40);
  if ((long long *)((char *)v17 - 40) != a1)
  {
    long long v71 = *v70;
    long long v72 = *(long long *)((char *)v17 - 24);
    *((void *)a1 + 4) = *((void *)v17 - 1);
    *a1 = v71;
    a1[1] = v72;
  }
  long long v73 = v76;
  long long v74 = v77;
  *((void *)v17 - 1) = v78;
  long long *v70 = v73;
  *(long long *)((char *)v17 - 24) = v74;
  return v17;
}

uint64_t sub_6D1F24(long long *a1, int **a2, uint64_t *a3)
{
  uint64_t v6 = 0;
  long long v7 = a1[1];
  long long v67 = *a1;
  long long v68 = v7;
  uint64_t v69 = *((void *)a1 + 4);
  do
  {
    uint64_t v9 = *a3;
    uint64_t v8 = (int **)a3[1];
    uint64_t v10 = *a3 + 1160;
    double v11 = sub_6D82EC(v10, v8, (int **)((char *)a1 + v6 + 40));
    double v12 = sub_6D82EC(v10, v8, (int **)&v67);
    if (*(unsigned char *)(v9 + 857))
    {
      double v13 = sub_6A2704(*(void *)v9, v8, (int **)((char *)a1 + v6 + 40));
      double v14 = sub_6A2704(*(void *)v9, v8, (int **)&v67);
      v15.i16[0] = *(_WORD *)(v9 + 748);
      double v16 = (double)vmovl_s16(v15).i32[0];
      if (vabdd_f64(v11, v12) <= v16)
      {
        LOWORD(v16) = *(_WORD *)(v9 + 750);
        if (vabdd_f64(v13, v14) >= (double)vmovl_s16(*(int16x4_t *)&v16).i32[0])
        {
          double v11 = v13;
          double v12 = v14;
        }
      }
    }
    v6 += 40;
  }
  while (fabs(v11) < fabs(v12));
  unint64_t v17 = (unint64_t)a1 + v6;
  uint64_t v18 = (uint64_t)a1 + v6 - 40;
  if (v6 == 40)
  {
    do
    {
      if (v17 >= (unint64_t)a2) {
        break;
      }
      a2 -= 5;
      uint64_t v29 = *a3;
      long long v28 = (int **)a3[1];
      uint64_t v30 = *a3 + 1160;
      double v31 = sub_6D82EC(v30, v28, a2);
      double v32 = sub_6D82EC(v30, v28, (int **)&v67);
      if (*(unsigned char *)(v29 + 857))
      {
        double v33 = sub_6A2704(*(void *)v29, v28, a2);
        double v34 = sub_6A2704(*(void *)v29, v28, (int **)&v67);
        v35.i16[0] = *(_WORD *)(v29 + 748);
        double v36 = (double)vmovl_s16(v35).i32[0];
        if (vabdd_f64(v31, v32) <= v36)
        {
          LOWORD(v36) = *(_WORD *)(v29 + 750);
          if (vabdd_f64(v33, v34) >= (double)vmovl_s16(*(int16x4_t *)&v36).i32[0])
          {
            double v31 = v33;
            double v32 = v34;
          }
        }
      }
    }
    while (fabs(v31) >= fabs(v32));
  }
  else
  {
    do
    {
      a2 -= 5;
      uint64_t v20 = *a3;
      uint64_t v19 = (int **)a3[1];
      uint64_t v21 = *a3 + 1160;
      double v22 = sub_6D82EC(v21, v19, a2);
      double v23 = sub_6D82EC(v21, v19, (int **)&v67);
      if (*(unsigned char *)(v20 + 857))
      {
        double v24 = sub_6A2704(*(void *)v20, v19, a2);
        double v25 = sub_6A2704(*(void *)v20, v19, (int **)&v67);
        v26.i16[0] = *(_WORD *)(v20 + 748);
        double v27 = (double)vmovl_s16(v26).i32[0];
        if (vabdd_f64(v22, v23) <= v27)
        {
          LOWORD(v27) = *(_WORD *)(v20 + 750);
          if (vabdd_f64(v24, v25) >= (double)vmovl_s16(*(int16x4_t *)&v27).i32[0])
          {
            double v22 = v24;
            double v23 = v25;
          }
        }
      }
    }
    while (fabs(v22) >= fabs(v23));
  }
  if (v17 < (unint64_t)a2)
  {
    unint64_t v37 = v17;
    long long v38 = a2;
    do
    {
      long long v40 = *(_OWORD *)(v37 + 16);
      long long v70 = *(_OWORD *)v37;
      long long v39 = v70;
      long long v71 = v40;
      long long v72 = *(int **)(v37 + 32);
      long long v41 = v72;
      long long v43 = *(_OWORD *)v38;
      long long v42 = *((_OWORD *)v38 + 1);
      *(void *)(v37 + 32) = v38[4];
      *(_OWORD *)unint64_t v37 = v43;
      *(_OWORD *)(v37 + 16) = v42;
      v38[4] = v41;
      *(_OWORD *)long long v38 = v39;
      *((_OWORD *)v38 + 1) = v40;
      do
      {
        v37 += 40;
        uint64_t v45 = *a3;
        uint64_t v44 = (int **)a3[1];
        uint64_t v46 = *a3 + 1160;
        double v47 = sub_6D82EC(v46, v44, (int **)v37);
        double v48 = sub_6D82EC(v46, v44, (int **)&v67);
        if (*(unsigned char *)(v45 + 857))
        {
          double v49 = sub_6A2704(*(void *)v45, v44, (int **)v37);
          double v50 = sub_6A2704(*(void *)v45, v44, (int **)&v67);
          v51.i16[0] = *(_WORD *)(v45 + 748);
          double v52 = (double)vmovl_s16(v51).i32[0];
          if (vabdd_f64(v47, v48) <= v52)
          {
            LOWORD(v52) = *(_WORD *)(v45 + 750);
            if (vabdd_f64(v49, v50) >= (double)vmovl_s16(*(int16x4_t *)&v52).i32[0])
            {
              double v47 = v49;
              double v48 = v50;
            }
          }
        }
      }
      while (fabs(v47) < fabs(v48));
      do
      {
        v38 -= 5;
        uint64_t v54 = *a3;
        uint64_t v53 = (int **)a3[1];
        uint64_t v55 = *a3 + 1160;
        double v56 = sub_6D82EC(v55, v53, v38);
        double v57 = sub_6D82EC(v55, v53, (int **)&v67);
        if (*(unsigned char *)(v54 + 857))
        {
          double v58 = sub_6A2704(*(void *)v54, v53, v38);
          double v59 = sub_6A2704(*(void *)v54, v53, (int **)&v67);
          v60.i16[0] = *(_WORD *)(v54 + 748);
          double v61 = (double)vmovl_s16(v60).i32[0];
          if (vabdd_f64(v56, v57) <= v61)
          {
            LOWORD(v61) = *(_WORD *)(v54 + 750);
            if (vabdd_f64(v58, v59) >= (double)vmovl_s16(*(int16x4_t *)&v61).i32[0])
            {
              double v56 = v58;
              double v57 = v59;
            }
          }
        }
      }
      while (fabs(v56) >= fabs(v57));
    }
    while (v37 < (unint64_t)v38);
    uint64_t v18 = v37 - 40;
  }
  if ((long long *)v18 != a1)
  {
    long long v62 = *(_OWORD *)v18;
    long long v63 = *(_OWORD *)(v18 + 16);
    *((void *)a1 + 4) = *(void *)(v18 + 32);
    *a1 = v62;
    a1[1] = v63;
  }
  long long v64 = v67;
  long long v65 = v68;
  *(void *)(v18 + 32) = v69;
  *(_OWORD *)uint64_t v18 = v64;
  *(_OWORD *)(v18 + 16) = v65;
  return v18;
}

BOOL sub_6D23C4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = (a2 - a1) >> 3;
  BOOL result = 1;
  switch(0xCCCCCCCCCCCCCCCDLL * v6)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      uint64_t v8 = (_OWORD *)(a2 - 40);
      uint64_t v10 = *a3;
      uint64_t v9 = (int **)a3[1];
      double v11 = sub_6D82EC(*a3 + 1160, v9, (int **)(a2 - 40));
      double v12 = sub_6D82EC(v10 + 1160, v9, (int **)a1);
      if (*(unsigned char *)(v10 + 857))
      {
        double v13 = sub_6A2704(*(void *)v10, v9, (int **)(v4 - 40));
        double v14 = sub_6A2704(*(void *)v10, v9, (int **)a1);
        v15.i16[0] = *(_WORD *)(v10 + 748);
        double v16 = (double)vmovl_s16(v15).i32[0];
        if (vabdd_f64(v11, v12) <= v16)
        {
          LOWORD(v16) = *(_WORD *)(v10 + 750);
          if (vabdd_f64(v13, v14) >= (double)vmovl_s16(*(int16x4_t *)&v16).i32[0])
          {
            double v11 = v13;
            double v12 = v14;
          }
        }
      }
      if (fabs(v11) >= fabs(v12)) {
        return 1;
      }
      long long v17 = *(_OWORD *)a1;
      long long v18 = *(_OWORD *)(a1 + 16);
      uint64_t v19 = *(void *)(a1 + 32);
      uint64_t v20 = *(void *)(v4 - 8);
      long long v21 = *(_OWORD *)(v4 - 24);
      *(_OWORD *)a1 = *v8;
      *(_OWORD *)(a1 + 16) = v21;
      *(void *)(a1 + 32) = v20;
      *(void *)(v4 - 8) = v19;
      BOOL result = 1;
      _OWORD *v8 = v17;
      *(_OWORD *)(v4 - 24) = v18;
      return result;
    case 3uLL:
      sub_6D15B4((int **)a1, (int **)(a1 + 40), (int **)(a2 - 40), a3);
      return 1;
    case 4uLL:
      sub_6D27D0((int **)a1, (int **)(a1 + 40), (int **)(a1 + 80), (int **)(a2 - 40), a3);
      return 1;
    case 5uLL:
      sub_6D2AA4((int **)a1, (int **)(a1 + 40), (int **)(a1 + 80), (int **)(a1 + 120), (int **)(a2 - 40), a3);
      return 1;
    default:
      double v22 = (int **)(a1 + 80);
      sub_6D15B4((int **)a1, (int **)(a1 + 40), (int **)(a1 + 80), a3);
      uint64_t v23 = a1 + 120;
      if (a1 + 120 == v4) {
        return 1;
      }
      uint64_t v24 = 0;
      int v25 = 0;
      uint64_t v51 = v4;
      break;
  }
  while (1)
  {
    uint64_t v28 = *a3;
    uint64_t v29 = (int **)a3[1];
    uint64_t v30 = *a3 + 1160;
    double v31 = sub_6D82EC(v30, v29, (int **)v23);
    double v32 = sub_6D82EC(v30, v29, v22);
    if (*(unsigned char *)(v28 + 857))
    {
      double v33 = sub_6A2704(*(void *)v28, v29, (int **)v23);
      double v34 = sub_6A2704(*(void *)v28, v29, v22);
      v35.i16[0] = *(_WORD *)(v28 + 748);
      double v36 = (double)vmovl_s16(v35).i32[0];
      if (vabdd_f64(v31, v32) <= v36)
      {
        LOWORD(v36) = *(_WORD *)(v28 + 750);
        if (vabdd_f64(v33, v34) >= (double)vmovl_s16(*(int16x4_t *)&v36).i32[0])
        {
          double v31 = v33;
          double v32 = v34;
        }
      }
    }
    if (fabs(v31) < fabs(v32))
    {
      long long v37 = *(_OWORD *)(v23 + 16);
      long long v52 = *(_OWORD *)v23;
      long long v53 = v37;
      uint64_t v54 = *(void *)(v23 + 32);
      uint64_t v38 = v24;
      do
      {
        uint64_t v39 = a1 + v38;
        long long v40 = *(_OWORD *)(a1 + v38 + 96);
        *(_OWORD *)(v39 + 120) = *(_OWORD *)(a1 + v38 + 80);
        *(_OWORD *)(v39 + 136) = v40;
        *(void *)(v39 + 152) = *(void *)(a1 + v38 + 112);
        if (v38 == -80)
        {
          uint64_t v26 = a1;
          goto LABEL_11;
        }
        long long v41 = (int **)(v39 + 40);
        uint64_t v42 = *a3;
        long long v43 = (int **)a3[1];
        uint64_t v44 = *a3 + 1160;
        double v45 = sub_6D82EC(v44, v43, (int **)&v52);
        double v46 = sub_6D82EC(v44, v43, v41);
        if (*(unsigned char *)(v42 + 857))
        {
          double v47 = sub_6A2704(*(void *)v42, v43, (int **)&v52);
          double v48 = sub_6A2704(*(void *)v42, v43, v41);
          v49.i16[0] = *(_WORD *)(v42 + 748);
          double v50 = (double)vmovl_s16(v49).i32[0];
          if (vabdd_f64(v45, v46) <= v50)
          {
            LOWORD(v50) = *(_WORD *)(v42 + 750);
            if (vabdd_f64(v47, v48) >= (double)vmovl_s16(*(int16x4_t *)&v50).i32[0])
            {
              double v45 = v47;
              double v46 = v48;
            }
          }
        }
        v38 -= 40;
      }
      while (fabs(v45) < fabs(v46));
      uint64_t v26 = a1 + v38 + 120;
LABEL_11:
      long long v27 = v53;
      *(_OWORD *)uint64_t v26 = v52;
      *(_OWORD *)(v26 + 16) = v27;
      *(void *)(v26 + 32) = v54;
      ++v25;
      uint64_t v4 = v51;
      if (v25 == 8) {
        return v23 + 40 == v51;
      }
    }
    double v22 = (int **)v23;
    v24 += 40;
    v23 += 40;
    if (v23 == v4) {
      return 1;
    }
  }
}

void sub_6D27D0(int **a1, int **a2, int **a3, int **a4, uint64_t *a5)
{
  sub_6D15B4(a1, a2, a3, a5);
  uint64_t v11 = *a5;
  uint64_t v10 = (int **)a5[1];
  uint64_t v12 = *a5 + 1160;
  double v13 = sub_6D82EC(v12, v10, a4);
  double v14 = sub_6D82EC(v12, v10, a3);
  if (*(unsigned char *)(v11 + 857))
  {
    double v15 = sub_6A2704(*(void *)v11, v10, a4);
    double v16 = sub_6A2704(*(void *)v11, v10, a3);
    v17.i16[0] = *(_WORD *)(v11 + 748);
    double v18 = (double)vmovl_s16(v17).i32[0];
    if (vabdd_f64(v13, v14) <= v18)
    {
      LOWORD(v18) = *(_WORD *)(v11 + 750);
      if (vabdd_f64(v15, v16) >= (double)vmovl_s16(*(int16x4_t *)&v18).i32[0])
      {
        double v13 = v15;
        double v14 = v16;
      }
    }
  }
  if (fabs(v13) < fabs(v14))
  {
    long long v19 = *(_OWORD *)a3;
    long long v20 = *((_OWORD *)a3 + 1);
    long long v21 = a3[4];
    double v22 = a4[4];
    long long v23 = *((_OWORD *)a4 + 1);
    *(_OWORD *)a3 = *(_OWORD *)a4;
    *((_OWORD *)a3 + 1) = v23;
    a3[4] = v22;
    a4[4] = v21;
    *(_OWORD *)a4 = v19;
    *((_OWORD *)a4 + 1) = v20;
    uint64_t v25 = *a5;
    uint64_t v24 = (int **)a5[1];
    uint64_t v26 = *a5 + 1160;
    double v27 = sub_6D82EC(v26, v24, a3);
    double v28 = sub_6D82EC(v26, v24, a2);
    if (*(unsigned char *)(v25 + 857))
    {
      double v29 = sub_6A2704(*(void *)v25, v24, a3);
      double v30 = sub_6A2704(*(void *)v25, v24, a2);
      v31.i16[0] = *(_WORD *)(v25 + 748);
      double v32 = (double)vmovl_s16(v31).i32[0];
      if (vabdd_f64(v27, v28) <= v32)
      {
        LOWORD(v32) = *(_WORD *)(v25 + 750);
        if (vabdd_f64(v29, v30) >= (double)vmovl_s16(*(int16x4_t *)&v32).i32[0])
        {
          double v27 = v29;
          double v28 = v30;
        }
      }
    }
    if (fabs(v27) < fabs(v28))
    {
      long long v33 = *(_OWORD *)a2;
      long long v34 = *((_OWORD *)a2 + 1);
      int16x4_t v35 = a2[4];
      double v36 = a3[4];
      long long v37 = *((_OWORD *)a3 + 1);
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *((_OWORD *)a2 + 1) = v37;
      a2[4] = v36;
      a3[4] = v35;
      *(_OWORD *)a3 = v33;
      *((_OWORD *)a3 + 1) = v34;
      uint64_t v39 = *a5;
      uint64_t v38 = (int **)a5[1];
      double v40 = sub_6D82EC(v39 + 1160, v38, a2);
      double v41 = sub_6D82EC(v39 + 1160, v38, a1);
      if (*(unsigned char *)(v39 + 857))
      {
        double v42 = sub_6A2704(*(void *)v39, v38, a2);
        double v43 = sub_6A2704(*(void *)v39, v38, a1);
        v44.i16[0] = *(_WORD *)(v39 + 748);
        double v45 = (double)vmovl_s16(v44).i32[0];
        if (vabdd_f64(v40, v41) <= v45)
        {
          LOWORD(v45) = *(_WORD *)(v39 + 750);
          if (vabdd_f64(v42, v43) >= (double)vmovl_s16(*(int16x4_t *)&v45).i32[0])
          {
            double v40 = v42;
            double v41 = v43;
          }
        }
      }
      if (fabs(v40) < fabs(v41))
      {
        long long v46 = *(_OWORD *)a1;
        long long v47 = *((_OWORD *)a1 + 1);
        double v48 = a1[4];
        int16x4_t v49 = a2[4];
        long long v50 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v50;
        a1[4] = v49;
        a2[4] = v48;
        *(_OWORD *)a2 = v46;
        *((_OWORD *)a2 + 1) = v47;
      }
    }
  }
}

void sub_6D2AA4(int **a1, int **a2, int **a3, int **a4, int **a5, uint64_t *a6)
{
  sub_6D27D0(a1, a2, a3, a4, a6);
  uint64_t v13 = *a6;
  uint64_t v12 = (int **)a6[1];
  uint64_t v14 = *a6 + 1160;
  double v15 = sub_6D82EC(v14, v12, a5);
  double v16 = sub_6D82EC(v14, v12, a4);
  if (*(unsigned char *)(v13 + 857))
  {
    double v17 = sub_6A2704(*(void *)v13, v12, a5);
    double v18 = sub_6A2704(*(void *)v13, v12, a4);
    v19.i16[0] = *(_WORD *)(v13 + 748);
    double v20 = (double)vmovl_s16(v19).i32[0];
    if (vabdd_f64(v15, v16) <= v20)
    {
      LOWORD(v20) = *(_WORD *)(v13 + 750);
      if (vabdd_f64(v17, v18) >= (double)vmovl_s16(*(int16x4_t *)&v20).i32[0])
      {
        double v15 = v17;
        double v16 = v18;
      }
    }
  }
  if (fabs(v15) < fabs(v16))
  {
    long long v21 = *(_OWORD *)a4;
    long long v22 = *((_OWORD *)a4 + 1);
    long long v23 = a4[4];
    uint64_t v24 = a5[4];
    long long v25 = *((_OWORD *)a5 + 1);
    *(_OWORD *)a4 = *(_OWORD *)a5;
    *((_OWORD *)a4 + 1) = v25;
    a4[4] = v24;
    a5[4] = v23;
    *(_OWORD *)a5 = v21;
    *((_OWORD *)a5 + 1) = v22;
    uint64_t v27 = *a6;
    uint64_t v26 = (int **)a6[1];
    uint64_t v28 = *a6 + 1160;
    double v29 = sub_6D82EC(v28, v26, a4);
    double v30 = sub_6D82EC(v28, v26, a3);
    if (*(unsigned char *)(v27 + 857))
    {
      double v31 = sub_6A2704(*(void *)v27, v26, a4);
      double v32 = sub_6A2704(*(void *)v27, v26, a3);
      v33.i16[0] = *(_WORD *)(v27 + 748);
      double v34 = (double)vmovl_s16(v33).i32[0];
      if (vabdd_f64(v29, v30) <= v34)
      {
        LOWORD(v34) = *(_WORD *)(v27 + 750);
        if (vabdd_f64(v31, v32) >= (double)vmovl_s16(*(int16x4_t *)&v34).i32[0])
        {
          double v29 = v31;
          double v30 = v32;
        }
      }
    }
    if (fabs(v29) < fabs(v30))
    {
      long long v35 = *(_OWORD *)a3;
      long long v36 = *((_OWORD *)a3 + 1);
      long long v37 = a3[4];
      uint64_t v38 = a4[4];
      long long v39 = *((_OWORD *)a4 + 1);
      *(_OWORD *)a3 = *(_OWORD *)a4;
      *((_OWORD *)a3 + 1) = v39;
      a3[4] = v38;
      a4[4] = v37;
      *(_OWORD *)a4 = v35;
      *((_OWORD *)a4 + 1) = v36;
      uint64_t v41 = *a6;
      double v40 = (int **)a6[1];
      uint64_t v42 = *a6 + 1160;
      double v43 = sub_6D82EC(v42, v40, a3);
      double v44 = sub_6D82EC(v42, v40, a2);
      if (*(unsigned char *)(v41 + 857))
      {
        double v45 = sub_6A2704(*(void *)v41, v40, a3);
        double v46 = sub_6A2704(*(void *)v41, v40, a2);
        v47.i16[0] = *(_WORD *)(v41 + 748);
        double v48 = (double)vmovl_s16(v47).i32[0];
        if (vabdd_f64(v43, v44) <= v48)
        {
          LOWORD(v48) = *(_WORD *)(v41 + 750);
          if (vabdd_f64(v45, v46) >= (double)vmovl_s16(*(int16x4_t *)&v48).i32[0])
          {
            double v43 = v45;
            double v44 = v46;
          }
        }
      }
      if (fabs(v43) < fabs(v44))
      {
        long long v49 = *(_OWORD *)a2;
        long long v50 = *((_OWORD *)a2 + 1);
        uint64_t v51 = a2[4];
        long long v52 = a3[4];
        long long v53 = *((_OWORD *)a3 + 1);
        *(_OWORD *)a2 = *(_OWORD *)a3;
        *((_OWORD *)a2 + 1) = v53;
        a2[4] = v52;
        a3[4] = v51;
        *(_OWORD *)a3 = v49;
        *((_OWORD *)a3 + 1) = v50;
        uint64_t v55 = *a6;
        uint64_t v54 = (int **)a6[1];
        double v56 = sub_6D82EC(v55 + 1160, v54, a2);
        double v57 = sub_6D82EC(v55 + 1160, v54, a1);
        if (*(unsigned char *)(v55 + 857))
        {
          double v58 = sub_6A2704(*(void *)v55, v54, a2);
          double v59 = sub_6A2704(*(void *)v55, v54, a1);
          v60.i16[0] = *(_WORD *)(v55 + 748);
          double v61 = (double)vmovl_s16(v60).i32[0];
          if (vabdd_f64(v56, v57) <= v61)
          {
            LOWORD(v61) = *(_WORD *)(v55 + 750);
            if (vabdd_f64(v58, v59) >= (double)vmovl_s16(*(int16x4_t *)&v61).i32[0])
            {
              double v56 = v58;
              double v57 = v59;
            }
          }
        }
        if (fabs(v56) < fabs(v57))
        {
          long long v62 = *(_OWORD *)a1;
          long long v63 = *((_OWORD *)a1 + 1);
          long long v64 = a1[4];
          long long v65 = a2[4];
          long long v66 = *((_OWORD *)a2 + 1);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((_OWORD *)a1 + 1) = v66;
          a1[4] = v65;
          a2[4] = v64;
          *(_OWORD *)a2 = v62;
          *((_OWORD *)a2 + 1) = v63;
        }
      }
    }
  }
}

void sub_6D2E48(uint64_t a1, uint64_t *a2, uint64_t a3, int **a4)
{
  unint64_t v10 = a3 - 2;
  if (a3 >= 2)
  {
    uint64_t v67 = v9;
    uint64_t v68 = v8;
    uint64_t v69 = v7;
    uint64_t v70 = v6;
    uint64_t v71 = v4;
    uint64_t v72 = v5;
    uint64_t v11 = a4;
    uint64_t v12 = a1;
    int64_t v63 = v10 >> 1;
    if ((uint64_t)(v10 >> 1) >= (uint64_t)(0xCCCCCCCCCCCCCCCDLL * (((uint64_t)a4 - a1) >> 3)))
    {
      int64_t v15 = (0x999999999999999ALL * (((uint64_t)a4 - a1) >> 3)) | 1;
      double v16 = (int **)(a1 + 40 * v15);
      int64_t v17 = 0x999999999999999ALL * (((uint64_t)a4 - a1) >> 3) + 2;
      if (v17 < a3)
      {
        uint64_t v19 = *a2;
        double v18 = (int **)a2[1];
        uint64_t v20 = *a2 + 1160;
        double v21 = sub_6D82EC(v20, v18, v16);
        double v22 = sub_6D82EC(v20, v18, v16 + 5);
        if (*(unsigned char *)(v19 + 857))
        {
          double v23 = sub_6A2704(*(void *)v19, v18, v16);
          double v24 = sub_6A2704(*(void *)v19, v18, v16 + 5);
          v25.i16[0] = *(_WORD *)(v19 + 748);
          double v26 = (double)vmovl_s16(v25).i32[0];
          if (vabdd_f64(v21, v22) <= v26)
          {
            LOWORD(v26) = *(_WORD *)(v19 + 750);
            if (vabdd_f64(v23, v24) >= (double)vmovl_s16(*(int16x4_t *)&v26).i32[0])
            {
              double v21 = v23;
              double v22 = v24;
            }
          }
        }
        uint64_t v12 = a1;
        if (fabs(v21) < fabs(v22))
        {
          v16 += 5;
          int64_t v15 = v17;
        }
      }
      uint64_t v27 = *a2;
      uint64_t v28 = (int **)a2[1];
      uint64_t v29 = *a2 + 1160;
      double v30 = sub_6D82EC(v29, v28, v16);
      double v31 = sub_6D82EC(v29, v28, v11);
      if (*(unsigned char *)(v27 + 857))
      {
        double v32 = sub_6A2704(*(void *)v27, v28, v16);
        double v33 = sub_6A2704(*(void *)v27, v28, v11);
        v34.i16[0] = *(_WORD *)(v27 + 748);
        double v35 = (double)vmovl_s16(v34).i32[0];
        if (vabdd_f64(v30, v31) <= v35)
        {
          LOWORD(v35) = *(_WORD *)(v27 + 750);
          if (vabdd_f64(v32, v33) >= (double)vmovl_s16(*(int16x4_t *)&v35).i32[0])
          {
            double v30 = v32;
            double v31 = v33;
          }
        }
      }
      if (fabs(v30) >= fabs(v31))
      {
        long long v36 = *((_OWORD *)v11 + 1);
        long long v64 = *(_OWORD *)v11;
        long long v65 = v36;
        long long v66 = v11[4];
        do
        {
          long long v37 = v16;
          long long v38 = *(_OWORD *)v16;
          long long v39 = *((_OWORD *)v16 + 1);
          v11[4] = v16[4];
          *(_OWORD *)uint64_t v11 = v38;
          *((_OWORD *)v11 + 1) = v39;
          if (v63 < v15) {
            break;
          }
          uint64_t v40 = 2 * v15;
          int64_t v15 = (2 * v15) | 1;
          double v16 = (int **)(v12 + 40 * v15);
          int64_t v41 = v40 + 2;
          if (v40 + 2 < a3)
          {
            uint64_t v43 = *a2;
            uint64_t v42 = (int **)a2[1];
            uint64_t v44 = *a2 + 1160;
            double v45 = sub_6D82EC(v44, v42, v16);
            double v46 = sub_6D82EC(v44, v42, v16 + 5);
            if (*(unsigned char *)(v43 + 857))
            {
              double v47 = sub_6A2704(*(void *)v43, v42, v16);
              double v48 = sub_6A2704(*(void *)v43, v42, v16 + 5);
              v49.i16[0] = *(_WORD *)(v43 + 748);
              double v50 = (double)vmovl_s16(v49).i32[0];
              if (vabdd_f64(v45, v46) <= v50)
              {
                LOWORD(v50) = *(_WORD *)(v43 + 750);
                if (vabdd_f64(v47, v48) >= (double)vmovl_s16(*(int16x4_t *)&v50).i32[0])
                {
                  double v45 = v47;
                  double v46 = v48;
                }
              }
            }
            uint64_t v12 = a1;
            if (fabs(v45) < fabs(v46))
            {
              v16 += 5;
              int64_t v15 = v41;
            }
          }
          uint64_t v52 = *a2;
          uint64_t v51 = (int **)a2[1];
          uint64_t v53 = *a2 + 1160;
          double v54 = sub_6D82EC(v53, v51, v16);
          double v55 = sub_6D82EC(v53, v51, (int **)&v64);
          if (*(unsigned char *)(v52 + 857))
          {
            double v56 = sub_6A2704(*(void *)v52, v51, v16);
            double v57 = sub_6A2704(*(void *)v52, v51, (int **)&v64);
            v58.i16[0] = *(_WORD *)(v52 + 748);
            double v59 = (double)vmovl_s16(v58).i32[0];
            if (vabdd_f64(v54, v55) <= v59)
            {
              LOWORD(v59) = *(_WORD *)(v52 + 750);
              if (vabdd_f64(v56, v57) >= (double)vmovl_s16(*(int16x4_t *)&v59).i32[0])
              {
                double v54 = v56;
                double v55 = v57;
              }
            }
          }
          uint64_t v11 = v37;
        }
        while (fabs(v54) >= fabs(v55));
        long long v60 = v64;
        long long v61 = v65;
        v37[4] = v66;
        *(_OWORD *)long long v37 = v60;
        *((_OWORD *)v37 + 1) = v61;
      }
    }
  }
}

int **sub_6D3240(int **a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = 0;
  uint64_t v6 = a3 - 2;
  if (a3 < 2) {
    uint64_t v6 = a3 - 1;
  }
  uint64_t v7 = v6 >> 1;
  do
  {
    unint64_t v10 = a1;
    a1 += 5 * v5 + 5;
    uint64_t v11 = 2 * v5;
    uint64_t v5 = (2 * v5) | 1;
    uint64_t v12 = v11 + 2;
    if (v11 + 2 < a3)
    {
      uint64_t v13 = *a2;
      uint64_t v14 = (int **)a2[1];
      uint64_t v15 = *a2 + 1160;
      double v16 = sub_6D82EC(v15, v14, a1);
      double v17 = sub_6D82EC(v15, v14, a1 + 5);
      if (*(unsigned char *)(v13 + 857))
      {
        double v18 = sub_6A2704(*(void *)v13, v14, a1);
        double v19 = sub_6A2704(*(void *)v13, v14, a1 + 5);
        v20.i16[0] = *(_WORD *)(v13 + 748);
        double v21 = (double)vmovl_s16(v20).i32[0];
        if (vabdd_f64(v16, v17) <= v21)
        {
          LOWORD(v21) = *(_WORD *)(v13 + 750);
          if (vabdd_f64(v18, v19) >= (double)vmovl_s16(*(int16x4_t *)&v21).i32[0])
          {
            double v16 = v18;
            double v17 = v19;
          }
        }
      }
      if (fabs(v16) < fabs(v17))
      {
        a1 += 5;
        uint64_t v5 = v12;
      }
    }
    long long v8 = *(_OWORD *)a1;
    long long v9 = *((_OWORD *)a1 + 1);
    v10[4] = a1[4];
    *(_OWORD *)unint64_t v10 = v8;
    *((_OWORD *)v10 + 1) = v9;
  }
  while (v5 <= v7);
  return a1;
}

void sub_6D33C4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  if (a4 >= 2)
  {
    uint64_t v41 = v9;
    uint64_t v42 = v8;
    uint64_t v43 = v7;
    uint64_t v44 = v6;
    uint64_t v45 = v4;
    uint64_t v46 = v5;
    unint64_t v12 = (unint64_t)(a4 - 2) >> 1;
    uint64_t v13 = (int **)(a1 + 40 * v12);
    uint64_t v14 = (int **)(a2 - 40);
    uint64_t v16 = *a3;
    uint64_t v15 = (int **)a3[1];
    uint64_t v17 = *a3 + 1160;
    double v18 = sub_6D82EC(v17, v15, v13);
    double v19 = sub_6D82EC(v17, v15, v14);
    if (*(unsigned char *)(v16 + 857))
    {
      double v20 = sub_6A2704(*(void *)v16, v15, v13);
      double v21 = sub_6A2704(*(void *)v16, v15, v14);
      v22.i16[0] = *(_WORD *)(v16 + 748);
      double v23 = (double)vmovl_s16(v22).i32[0];
      if (vabdd_f64(v18, v19) <= v23)
      {
        LOWORD(v23) = *(_WORD *)(v16 + 750);
        if (vabdd_f64(v20, v21) >= (double)vmovl_s16(*(int16x4_t *)&v23).i32[0])
        {
          double v18 = v20;
          double v19 = v21;
        }
      }
    }
    if (fabs(v18) < fabs(v19))
    {
      long long v24 = *((_OWORD *)v14 + 1);
      long long v38 = *(_OWORD *)v14;
      long long v39 = v24;
      uint64_t v40 = v14[4];
      do
      {
        int16x4_t v25 = v13;
        long long v26 = *(_OWORD *)v13;
        long long v27 = *((_OWORD *)v13 + 1);
        v14[4] = v13[4];
        *(_OWORD *)uint64_t v14 = v26;
        *((_OWORD *)v14 + 1) = v27;
        if (!v12) {
          break;
        }
        unint64_t v12 = (v12 - 1) >> 1;
        uint64_t v13 = (int **)(a1 + 40 * v12);
        uint64_t v29 = *a3;
        uint64_t v28 = (int **)a3[1];
        uint64_t v30 = *a3 + 1160;
        double v31 = sub_6D82EC(v30, v28, v13);
        double v32 = sub_6D82EC(v30, v28, (int **)&v38);
        if (*(unsigned char *)(v29 + 857))
        {
          double v33 = sub_6A2704(*(void *)v29, v28, (int **)(a1 + 40 * v12));
          double v34 = sub_6A2704(*(void *)v29, v28, (int **)&v38);
          v35.i16[0] = *(_WORD *)(v29 + 748);
          double v36 = (double)vmovl_s16(v35).i32[0];
          if (vabdd_f64(v31, v32) <= v36)
          {
            LOWORD(v36) = *(_WORD *)(v29 + 750);
            if (vabdd_f64(v33, v34) >= (double)vmovl_s16(*(int16x4_t *)&v36).i32[0])
            {
              double v31 = v33;
              double v32 = v34;
            }
          }
        }
        uint64_t v14 = v25;
      }
      while (fabs(v31) < fabs(v32));
      long long v37 = v39;
      *(_OWORD *)int16x4_t v25 = v38;
      *((_OWORD *)v25 + 1) = v37;
      v25[4] = v40;
    }
  }
}

char *sub_6D35E8(uint64_t a1, double *a2, char *a3)
{
  uint64_t v7 = *(unsigned char **)(a1 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  if ((unint64_t)v7 >= v6)
  {
    unint64_t v10 = *(unsigned char **)a1;
    uint64_t v11 = (uint64_t)&v7[-*(void *)a1] >> 2;
    unint64_t v12 = v11 + 1;
    if ((unint64_t)(v11 + 1) >> 62) {
      sub_2E00();
    }
    uint64_t v13 = v6 - (void)v10;
    if (v13 >> 1 > v12) {
      unint64_t v12 = v13 >> 1;
    }
    BOOL v14 = (unint64_t)v13 >= 0x7FFFFFFFFFFFFFFCLL;
    unint64_t v15 = 0x3FFFFFFFFFFFFFFFLL;
    if (!v14) {
      unint64_t v15 = v12;
    }
    if (v15 >> 62) {
      sub_188D718();
    }
    uint64_t v16 = 4 * v15;
    uint64_t v17 = (char *)operator new(4 * v15);
    double v18 = &v17[4 * v11];
    char v19 = *a3;
    *(_WORD *)double v18 = (int)*a2;
    v18[2] = v19;
    for (uint64_t i = v18 + 4; v7 != v10; v18[2] = v21)
    {
      __int16 v20 = *((_WORD *)v7 - 2);
      v7 -= 4;
      char v21 = v7[2];
      *((_WORD *)v18 - 2) = v20;
      v18 -= 4;
    }
    *(void *)a1 = v18;
    *(void *)(a1 + 8) = i;
    *(void *)(a1 + 16) = &v17[v16];
    if (v10) {
      operator delete(v10);
    }
  }
  else
  {
    char v8 = *a3;
    *(_WORD *)uint64_t v7 = (int)*a2;
    v7[2] = v8;
    uint64_t i = v7 + 4;
  }
  *(void *)(a1 + 8) = i;
  return i - 4;
}

BOOL sub_6D3704(uint64_t a1, int **a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  int v5 = sub_2E35CC(a2);
  int v6 = **(_DWORD **)a1;
  if (v6 < 1 || v5 < 1)
  {
    BOOL v8 = 0;
    uint64_t v9 = *a2;
    unint64_t v10 = (unsigned __int16 *)((char *)*a2 - **a2);
    if (*v10 < 0x43u) {
      goto LABEL_13;
    }
  }
  else
  {
    int v11 = v6 - v5;
    if (v11 < 0) {
      int v11 = -v11;
    }
    BOOL v8 = v11 > *(unsigned __int8 *)(v4 + 1136);
    uint64_t v9 = *a2;
    unint64_t v10 = (unsigned __int16 *)((char *)*a2 - **a2);
    if (*v10 < 0x43u) {
      goto LABEL_13;
    }
  }
  uint64_t v12 = v10[33];
  if (v12)
  {
    int v13 = *((unsigned __int8 *)v9 + v12);
    goto LABEL_14;
  }
LABEL_13:
  int v13 = 0;
LABEL_14:
  int v14 = **(_DWORD **)(a1 + 16) - v13;
  if (v14 >= 0) {
    unsigned int v15 = v14;
  }
  else {
    unsigned int v15 = -v14;
  }
  unsigned int v16 = *(unsigned __int8 *)(v4 + 1137);
  BOOL v17 = v15 > v16;
  unint64_t v18 = *(void *)(*(void *)(a1 + 24) + 32);
  if (__PAIR64__(*((unsigned __int16 *)a2 + 18), *((_DWORD *)a2 + 8)) != __PAIR64__(WORD2(v18), v18)
    || (HIWORD(v18) & 1) == (*((unsigned char *)a2 + 38) == 0))
  {
    BOOL result = sub_6DB184(v4 + 1160, a2);
    if (!result) {
      return result;
    }
    char v21 = *a2;
    int16x4_t v22 = (unsigned __int16 *)((char *)*a2 - **a2);
    if (*v22 < 0x2Fu || !v22[23]) {
      goto LABEL_36;
    }
    unsigned int v23 = *((unsigned __int8 *)v21 + v22[23]);
    if (v23 - 15 >= 0x21 || ((0x1C5C08009uLL >> (v23 - 15)) & 1) == 0)
    {
      BOOL v24 = v23 > 0x2B || ((1 << v23) & 0x80000001040) == 0;
      if (v24 || (uint64_t v25 = v22[5]) != 0 && (*((unsigned char *)v21 + v25 + 2) & 0x20) != 0)
      {
        BOOL v17 = v23 == 44 || v15 > v16;
LABEL_36:
        if (!v17 && !v8) {
          return **(double **)(a1 + 40) - fabs(sub_69B314(v4, *(int ***)(a1 + 32), a2, v20)) > *(double *)(v4 + 1144);
        }
      }
    }
  }
  return 0;
}

int **sub_6D38F8(int **a1, int **a2, uint64_t a3)
{
  if (a1 == a2) {
    return a2;
  }
  uint64_t v4 = a1;
  uint64_t v5 = a3 + 1160;
  while (sub_6DB184(v5, v4))
  {
    int v6 = *v4;
    uint64_t v7 = (unsigned __int16 *)((char *)*v4 - **v4);
    unsigned int v8 = *v7;
    if (v8 >= 0xB)
    {
      if (v7[5] && (*((unsigned char *)v6 + v7[5] + 3) & 4) != 0) {
        break;
      }
      if (v8 >= 0x2F)
      {
        uint64_t v9 = v7[23];
        if (v9)
        {
          unsigned int v10 = *((unsigned __int8 *)v6 + v9);
          BOOL v11 = v10 > 0x2A;
          uint64_t v12 = (1 << v10) & 0x50400000000;
          if (!v11 && v12 != 0) {
            break;
          }
        }
      }
    }
    v4 += 5;
    if (v4 == a2) {
      return a2;
    }
  }
  if (v4 == a2) {
    return a2;
  }
  for (uint64_t i = v4 + 5; i != a2; i += 5)
  {
    if (sub_6DB184(v5, i))
    {
      BOOL v17 = *i;
      unint64_t v18 = (unsigned __int16 *)((char *)*i - **i);
      unsigned int v19 = *v18;
      if (v19 < 0xB
        || (!v18[5] || (*((unsigned char *)v17 + v18[5] + 3) & 4) == 0)
        && (v19 < 0x2F
         || (uint64_t v20 = v18[23]) == 0
         || ((v21 = *((unsigned __int8 *)v17 + v20), BOOL v11 = v21 > 0x2A, v22 = (1 << v21) & 0x50400000000, !v11)
           ? (BOOL v23 = v22 == 0)
           : (BOOL v23 = 1),
             v23)))
      {
        long long v15 = *(_OWORD *)i;
        long long v16 = *((_OWORD *)i + 1);
        v4[4] = i[4];
        *(_OWORD *)uint64_t v4 = v15;
        *((_OWORD *)v4 + 1) = v16;
        v4 += 5;
      }
    }
  }
  return v4;
}

uint64_t sub_6D3A80(uint64_t *a1, int **a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(void *)(a1[2] + 32);
  if (__PAIR64__(*((unsigned __int16 *)a2 + 18), *((_DWORD *)a2 + 8)) == __PAIR64__(WORD2(v5), v5)
    && ((v5 & 0x1000000000000) == 0) == (*((unsigned char *)a2 + 38) == 0))
  {
    return 0;
  }
  if (fabs(sub_6D82EC(v4 + 1160, (int **)a1[1], a2)) >= *(double *)(v4 + 200)) {
    return 0;
  }
  uint64_t result = sub_6DC0D4(v4 + 1160, (int **)a1[1], a2);
  if (result)
  {
    uint64_t result = sub_2E79EC(*(void *)v4, *(void *)(a1[1] + 32), (uint64_t)a2[4]);
    if (result)
    {
      uint64_t v7 = *a2;
      unsigned int v8 = (unsigned __int16 *)((char *)*a2 - **a2);
      if (*v8 >= 0x2Fu && v8[23])
      {
        unsigned int v9 = *((unsigned __int8 *)v7 + v8[23]);
        BOOL v10 = v9 > 0x2B || ((1 << v9) & 0x80000001040) == 0;
        v12 = !v10 && ((uint64_t v11 = v8[5]) == 0 || (*((unsigned char *)v7 + v11 + 2) & 0x20) == 0) || v9 == 44;
      }
      else
      {
        BOOL v12 = 0;
      }
      int v13 = *(int **)a1[1];
      int v14 = (unsigned __int16 *)((char *)v13 - *v13);
      if (*v14 >= 0x2Fu && v14[23])
      {
        unsigned int v15 = *((unsigned __int8 *)v13 + v14[23]);
        if (v15 > 0x2B || ((1 << v15) & 0x80000001040) == 0) {
          return v12 ^ (v15 == 44) ^ 1u;
        }
        uint64_t v17 = v14[5];
        if (v17 && (*((unsigned char *)v13 + v17 + 2) & 0x20) != 0) {
          return v12 ^ (v15 == 44) ^ 1u;
        }
        else {
          return v12;
        }
      }
      else
      {
        return !v12;
      }
    }
  }
  return result;
}

BOOL sub_6D3C7C(uint64_t a1, unint64_t *a2)
{
  uint64_t v4 = *(uint64_t **)a1;
  sub_68F5DC(**(void **)a1, *a2, (unint64_t *)&v18);
  uint64_t v5 = v18;
  if (v18 != v19)
  {
    uint64_t v6 = 0;
    unint64_t v7 = *(void *)(*(void *)(a1 + 8) + 32);
    unint64_t v8 = (unint64_t)v18;
    do
    {
      if (__PAIR64__(*(unsigned __int16 *)(v8 + 4), *(_DWORD *)v8) == __PAIR64__(WORD2(v7), v7)) {
        v6 += HIWORD(v7) & 1 ^ (*(unsigned char *)(v8 + 6) == 0);
      }
      v8 += 8;
    }
    while ((_DWORD *)v8 != v19);
    if (v6)
    {
      uint64_t v9 = *(void *)(*(void *)(a1 + 16) + 32);
      if (__PAIR64__(*((unsigned __int16 *)v19 - 2), *(v19 - 2)) == __PAIR64__(WORD2(v9), v9)
        && ((v9 & 0x1000000000000) == 0) == (*((unsigned char *)v19 - 2) == 0))
      {
        sub_6CCCD4(*v4, *a2, (uint64_t *)&v16);
        uint64_t v13 = (uint64_t)v16;
        BOOL v12 = v17;
        if (v16 == v17)
        {
          BOOL v10 = 0;
          unsigned int v15 = v16;
          if (!v16) {
            goto LABEL_22;
          }
        }
        else
        {
          uint64_t v14 = (uint64_t)v16;
          while (*(unsigned char *)(v14 + 48) != 1)
          {
            v14 += 128;
            if ((void **)v14 == v17)
            {
              uint64_t v14 = (uint64_t)v17;
              break;
            }
          }
          BOOL v10 = v14 != (void)v17;
          if (!v16)
          {
LABEL_22:
            uint64_t v5 = v18;
            if (!v18) {
              return v10;
            }
            goto LABEL_10;
          }
          do
            BOOL v12 = sub_2DF518(v12 - 16);
          while (v12 != (void **)v13);
          unsigned int v15 = v16;
        }
        uint64_t v17 = (void **)v13;
        operator delete(v15);
        goto LABEL_22;
      }
    }
  }
  BOOL v10 = 0;
  if (v18)
  {
LABEL_10:
    unsigned int v19 = v5;
    operator delete(v5);
  }
  return v10;
}

void sub_6D3E00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

int **sub_6D3E1C(int **result, int **a2, int ***a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a4 >= 2)
  {
    uint64_t v8 = (uint64_t)result;
    if (a4 == 2)
    {
      uint64_t v9 = a2 - 5;
      uint64_t result = (int **)sub_6CDE8C(a3, a2 - 5, result);
      if (result)
      {
        long long v10 = *(_OWORD *)v8;
        long long v11 = *(_OWORD *)(v8 + 16);
        BOOL v12 = *(int **)(v8 + 32);
        uint64_t v13 = (uint64_t)*(a2 - 1);
        long long v14 = *(_OWORD *)(a2 - 3);
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
        *(_OWORD *)(v8 + 16) = v14;
        *(void *)(v8 + 32) = v13;
        *(a2 - 1) = v12;
        *(_OWORD *)uint64_t v9 = v10;
        *(_OWORD *)(a2 - 3) = v11;
      }
    }
    else if ((uint64_t)a4 > 128)
    {
      uint64_t v17 = a5;
      unint64_t v18 = a4 >> 1;
      unsigned int v19 = &result[5 * (a4 >> 1)];
      unint64_t v20 = a4 >> 1;
      if ((uint64_t)a4 <= a6)
      {
        sub_6D4098((uint64_t)result, v19, a3, v20, a5);
        uint64_t v21 = v17 + 40 * v18;
        uint64_t result = (int **)sub_6D4098(v8 + 40 * (a4 >> 1), a2, a3, a4 - (a4 >> 1), v21);
        unint64_t v22 = v17 + 40 * a4;
        uint64_t v23 = v21;
        while (v23 != v22)
        {
          uint64_t result = (int **)sub_6CDE8C(a3, (int **)v23, (int **)v17);
          if (result)
          {
            long long v26 = *(_OWORD *)v23;
            long long v27 = *(_OWORD *)(v23 + 16);
            *(void *)(v8 + 32) = *(void *)(v23 + 32);
            *(_OWORD *)uint64_t v8 = v26;
            *(_OWORD *)(v8 + 16) = v27;
            v23 += 40;
            v8 += 40;
            if (v17 == v21)
            {
LABEL_19:
              if (v23 != v22)
              {
                uint64_t v28 = 0;
                do
                {
                  uint64_t v29 = v8 + v28;
                  long long v30 = *(_OWORD *)(v23 + v28);
                  long long v31 = *(_OWORD *)(v23 + v28 + 16);
                  *(void *)(v29 + 32) = *(void *)(v23 + v28 + 32);
                  *(_OWORD *)uint64_t v29 = v30;
                  *(_OWORD *)(v29 + 16) = v31;
                  v28 += 40;
                }
                while (v23 + v28 != v22);
              }
              return result;
            }
          }
          else
          {
            long long v24 = *(_OWORD *)v17;
            long long v25 = *(_OWORD *)(v17 + 16);
            *(void *)(v8 + 32) = *(void *)(v17 + 32);
            *(_OWORD *)uint64_t v8 = v24;
            *(_OWORD *)(v8 + 16) = v25;
            v17 += 40;
            v8 += 40;
            if (v17 == v21) {
              goto LABEL_19;
            }
          }
        }
        if (v17 != v21)
        {
          uint64_t v32 = 0;
          do
          {
            uint64_t v33 = v8 + v32;
            long long v34 = *(_OWORD *)(v17 + v32);
            long long v35 = *(_OWORD *)(v17 + v32 + 16);
            *(void *)(v33 + 32) = *(void *)(v17 + v32 + 32);
            *(_OWORD *)uint64_t v33 = v34;
            *(_OWORD *)(v33 + 16) = v35;
            v32 += 40;
          }
          while (v17 + v32 != v21);
        }
      }
      else
      {
        sub_6D3E1C(result, v19, a3, v20, a5, a6);
        sub_6D3E1C(v8 + 40 * (a4 >> 1), a2, a3, a4 - (a4 >> 1), v17, a6);
        return (int **)sub_6CE598(v8, (int **)(v8 + 40 * (a4 >> 1)), (char *)a2, a3, a4 >> 1, a4 - (a4 >> 1), (char *)v17, a6);
      }
    }
    else
    {
      return (int **)sub_6CE064((uint64_t)result, a2, a3);
    }
  }
  return result;
}

uint64_t sub_6D4098(uint64_t result, int **a2, int ***a3, unint64_t a4, uint64_t a5)
{
  if (a4)
  {
    uint64_t v5 = a5;
    uint64_t v9 = result;
    if (a4 == 2)
    {
      BOOL v12 = a2 - 5;
      uint64_t result = sub_6CDE8C(a3, a2 - 5, (int **)result);
      if (result)
      {
        long long v13 = *(_OWORD *)v12;
        long long v14 = *((_OWORD *)v12 + 1);
        *(void *)(v5 + 32) = v12[4];
        *(_OWORD *)uint64_t v5 = v13;
        *(_OWORD *)(v5 + 16) = v14;
        long long v15 = *(_OWORD *)v9;
        long long v16 = *(_OWORD *)(v9 + 16);
        uint64_t v17 = *(int **)(v9 + 32);
      }
      else
      {
        long long v18 = *(_OWORD *)v9;
        long long v19 = *(_OWORD *)(v9 + 16);
        *(void *)(v5 + 32) = *(void *)(v9 + 32);
        *(_OWORD *)uint64_t v5 = v18;
        *(_OWORD *)(v5 + 16) = v19;
        long long v15 = *(_OWORD *)v12;
        long long v16 = *((_OWORD *)v12 + 1);
        uint64_t v17 = v12[4];
      }
      *(void *)(v5 + 72) = v17;
      *(_OWORD *)(v5 + 40) = v15;
      *(_OWORD *)(v5 + 56) = v16;
    }
    else if (a4 == 1)
    {
      long long v10 = *(_OWORD *)result;
      long long v11 = *(_OWORD *)(result + 16);
      *(void *)(a5 + 32) = *(void *)(result + 32);
      *(_OWORD *)a5 = v10;
      *(_OWORD *)(a5 + 16) = v11;
    }
    else if ((uint64_t)a4 > 8)
    {
      unint64_t v20 = a4 >> 1;
      uint64_t v21 = 40 * (a4 >> 1);
      uint64_t v22 = result + v21;
      sub_6D3E1C(result, result + v21, a3, a4 >> 1, a5, a4 >> 1);
      uint64_t result = sub_6D3E1C(v9 + v21, a2, a3, a4 - v20, v5 + v21, a4 - v20);
      uint64_t v23 = v9 + v21;
      while ((int **)v23 != a2)
      {
        uint64_t result = sub_6CDE8C(a3, (int **)v23, (int **)v9);
        if (result)
        {
          long long v26 = *(_OWORD *)v23;
          long long v27 = *(_OWORD *)(v23 + 16);
          *(void *)(v5 + 32) = *(void *)(v23 + 32);
          *(_OWORD *)uint64_t v5 = v26;
          *(_OWORD *)(v5 + 16) = v27;
          v23 += 40;
          v5 += 40;
          if (v9 == v22)
          {
LABEL_19:
            if ((int **)v23 != a2)
            {
              uint64_t v28 = 0;
              do
              {
                uint64_t v29 = v5 + v28;
                long long v30 = *(_OWORD *)(v23 + v28);
                long long v31 = *(_OWORD *)(v23 + v28 + 16);
                *(void *)(v29 + 32) = *(void *)(v23 + v28 + 32);
                *(_OWORD *)uint64_t v29 = v30;
                *(_OWORD *)(v29 + 16) = v31;
                v28 += 40;
              }
              while ((int **)(v23 + v28) != a2);
            }
            return result;
          }
        }
        else
        {
          long long v24 = *(_OWORD *)v9;
          long long v25 = *(_OWORD *)(v9 + 16);
          *(void *)(v5 + 32) = *(void *)(v9 + 32);
          *(_OWORD *)uint64_t v5 = v24;
          *(_OWORD *)(v5 + 16) = v25;
          v9 += 40;
          v5 += 40;
          if (v9 == v22) {
            goto LABEL_19;
          }
        }
      }
      if (v9 != v22)
      {
        uint64_t v32 = 0;
        do
        {
          uint64_t v33 = v5 + v32;
          long long v34 = *(_OWORD *)(v9 + v32);
          long long v35 = *(_OWORD *)(v9 + v32 + 16);
          *(void *)(v33 + 32) = *(void *)(v9 + v32 + 32);
          *(_OWORD *)uint64_t v33 = v34;
          *(_OWORD *)(v33 + 16) = v35;
          v32 += 40;
        }
        while (v9 + v32 != v22);
      }
    }
    else
    {
      return sub_6CEA4C(result, a2, a5, a3);
    }
  }
  return result;
}

__n128 sub_6D42D0(int **a1, char *a2, double *a3, unint64_t a4, uint64_t a5, uint64_t a6, __n128 result)
{
  if (a4 >= 2)
  {
    unint64_t v9 = (unint64_t)a1;
    if (a4 == 2)
    {
      long long v10 = a2 - 40;
      if (sub_6CF254(a3, (int **)a2 - 5, a1))
      {
        uint64_t result = *(__n128 *)v9;
        long long v11 = *(_OWORD *)(v9 + 16);
        uint64_t v12 = *(void *)(v9 + 32);
        uint64_t v13 = *((void *)a2 - 1);
        long long v14 = *(_OWORD *)(a2 - 24);
        *(_OWORD *)unint64_t v9 = *(_OWORD *)v10;
        *(_OWORD *)(v9 + 16) = v14;
        *(void *)(v9 + 32) = v13;
        *((void *)a2 - 1) = v12;
        *(__n128 *)long long v10 = result;
        *(_OWORD *)(a2 - 24) = v11;
      }
    }
    else if ((uint64_t)a4 > 128)
    {
      uint64_t v28 = a5;
      unint64_t v29 = a4 >> 1;
      uint64_t v30 = (uint64_t)&a1[5 * (a4 >> 1)];
      unint64_t v31 = a4 >> 1;
      if ((uint64_t)a4 <= a6)
      {
        __n128 v32 = sub_6D45C0((uint64_t)a1, v30, a3, v31, a5, result);
        uint64_t v33 = v28 + 40 * v29;
        result.n128_u64[0] = sub_6D45C0(v9 + 40 * (a4 >> 1), (uint64_t)a2, a3, a4 - (a4 >> 1), v33, v32).n128_u64[0];
        unint64_t v34 = v28 + 40 * a4;
        uint64_t v35 = v33;
        while (v35 != v34)
        {
          if (sub_6CF254(a3, (int **)v35, (int **)v28))
          {
            uint64_t result = *(__n128 *)v35;
            long long v37 = *(_OWORD *)(v35 + 16);
            *(void *)(v9 + 32) = *(void *)(v35 + 32);
            *(__n128 *)unint64_t v9 = result;
            *(_OWORD *)(v9 + 16) = v37;
            v35 += 40;
            v9 += 40;
            if (v28 == v33)
            {
LABEL_26:
              if (v35 != v34)
              {
                uint64_t v38 = 0;
                do
                {
                  uint64_t v39 = v9 + v38;
                  uint64_t result = *(__n128 *)(v35 + v38);
                  long long v40 = *(_OWORD *)(v35 + v38 + 16);
                  *(void *)(v39 + 32) = *(void *)(v35 + v38 + 32);
                  *(__n128 *)uint64_t v39 = result;
                  *(_OWORD *)(v39 + 16) = v40;
                  v38 += 40;
                }
                while (v35 + v38 != v34);
              }
              return result;
            }
          }
          else
          {
            uint64_t result = *(__n128 *)v28;
            long long v36 = *(_OWORD *)(v28 + 16);
            *(void *)(v9 + 32) = *(void *)(v28 + 32);
            *(__n128 *)unint64_t v9 = result;
            *(_OWORD *)(v9 + 16) = v36;
            v28 += 40;
            v9 += 40;
            if (v28 == v33) {
              goto LABEL_26;
            }
          }
        }
        if (v28 != v33)
        {
          uint64_t v41 = 0;
          do
          {
            uint64_t v42 = v9 + v41;
            uint64_t result = *(__n128 *)(v28 + v41);
            long long v43 = *(_OWORD *)(v28 + v41 + 16);
            *(void *)(v42 + 32) = *(void *)(v28 + v41 + 32);
            *(__n128 *)uint64_t v42 = result;
            *(_OWORD *)(v42 + 16) = v43;
            v41 += 40;
          }
          while (v28 + v41 != v33);
        }
      }
      else
      {
        sub_6D42D0(a1, v30, a3, v31, a5, a6);
        sub_6D42D0(v9 + 40 * (a4 >> 1), a2, a3, a4 - (a4 >> 1), v28, a6);
        sub_6CF8E8(v9, (int **)(v9 + 40 * (a4 >> 1)), a2, a3, a4 >> 1, a4 - (a4 >> 1), (char *)v28, a6);
      }
    }
    else if (a1 != (int **)a2)
    {
      long long v16 = a1 + 5;
      if (a1 + 5 != (int **)a2)
      {
        uint64_t v17 = 0;
        long long v18 = a1;
        do
        {
          uint64_t v21 = v18;
          long long v18 = v16;
          if (sub_6CF254(a3, v16, v21))
          {
            __n128 v22 = *(__n128 *)v18;
            long long v23 = *((_OWORD *)v18 + 1);
            uint64_t v46 = v18[4];
            __n128 v44 = v22;
            long long v45 = v23;
            uint64_t v24 = v17;
            do
            {
              uint64_t v25 = v9 + v24;
              long long v26 = *(_OWORD *)(v9 + v24 + 16);
              *(_OWORD *)(v25 + 40) = *(_OWORD *)(v9 + v24);
              *(_OWORD *)(v25 + 56) = v26;
              *(void *)(v25 + 72) = *(void *)(v9 + v24 + 32);
              if (!v24)
              {
                uint64_t v19 = v9;
                goto LABEL_10;
              }
              v24 -= 40;
            }
            while ((sub_6CF254(a3, (int **)&v44, (int **)(v24 + v9)) & 1) != 0);
            uint64_t v19 = v9 + v24 + 40;
LABEL_10:
            uint64_t result = v44;
            long long v20 = v45;
            *(void *)(v19 + 32) = v46;
            *(__n128 *)uint64_t v19 = result;
            *(_OWORD *)(v19 + 16) = v20;
          }
          long long v16 = v18 + 5;
          v17 += 40;
        }
        while (v18 + 5 != (int **)a2);
      }
    }
  }
  return result;
}

__n128 sub_6D45C0(uint64_t a1, uint64_t a2, double *a3, unint64_t a4, uint64_t a5, __n128 result)
{
  if (a4)
  {
    uint64_t v6 = a5;
    uint64_t v10 = a1;
    if (a4 == 2)
    {
      uint64_t v12 = a2 - 40;
      if (sub_6CF254(a3, (int **)(a2 - 40), (int **)a1))
      {
        __n128 v13 = *(__n128 *)v12;
        long long v14 = *(_OWORD *)(v12 + 16);
        *(void *)(v6 + 32) = *(void *)(v12 + 32);
        *(__n128 *)uint64_t v6 = v13;
        *(_OWORD *)(v6 + 16) = v14;
        uint64_t result = *(__n128 *)v10;
        long long v15 = *(_OWORD *)(v10 + 16);
        uint64_t v16 = *(void *)(v10 + 32);
      }
      else
      {
        __n128 v27 = *(__n128 *)v10;
        long long v28 = *(_OWORD *)(v10 + 16);
        *(void *)(v6 + 32) = *(void *)(v10 + 32);
        *(__n128 *)uint64_t v6 = v27;
        *(_OWORD *)(v6 + 16) = v28;
        uint64_t result = *(__n128 *)v12;
        long long v15 = *(_OWORD *)(v12 + 16);
        uint64_t v16 = *(void *)(v12 + 32);
      }
      *(void *)(v6 + 72) = v16;
      *(__n128 *)(v6 + 40) = result;
      *(_OWORD *)(v6 + 56) = v15;
    }
    else if (a4 == 1)
    {
      uint64_t result = *(__n128 *)a1;
      long long v11 = *(_OWORD *)(a1 + 16);
      *(void *)(a5 + 32) = *(void *)(a1 + 32);
      *(__n128 *)a5 = result;
      *(_OWORD *)(a5 + 16) = v11;
    }
    else if ((uint64_t)a4 > 8)
    {
      unint64_t v29 = a4 >> 1;
      uint64_t v30 = 40 * (a4 >> 1);
      uint64_t v31 = a1 + v30;
      sub_6D42D0(a1, a1 + v30, a3, a4 >> 1, a5, a4 >> 1);
      sub_6D42D0(v10 + v30, a2, a3, a4 - v29, v6 + v30, a4 - v29);
      uint64_t v32 = v10 + v30;
      while (v32 != a2)
      {
        if (sub_6CF254(a3, (int **)v32, (int **)v10))
        {
          uint64_t result = *(__n128 *)v32;
          long long v34 = *(_OWORD *)(v32 + 16);
          *(void *)(v6 + 32) = *(void *)(v32 + 32);
          *(__n128 *)uint64_t v6 = result;
          *(_OWORD *)(v6 + 16) = v34;
          v32 += 40;
          v6 += 40;
          if (v10 == v31)
          {
LABEL_26:
            if (v32 != a2)
            {
              uint64_t v35 = 0;
              do
              {
                uint64_t v36 = v6 + v35;
                uint64_t result = *(__n128 *)(v32 + v35);
                long long v37 = *(_OWORD *)(v32 + v35 + 16);
                *(void *)(v36 + 32) = *(void *)(v32 + v35 + 32);
                *(__n128 *)uint64_t v36 = result;
                *(_OWORD *)(v36 + 16) = v37;
                v35 += 40;
              }
              while (v32 + v35 != a2);
            }
            return result;
          }
        }
        else
        {
          uint64_t result = *(__n128 *)v10;
          long long v33 = *(_OWORD *)(v10 + 16);
          *(void *)(v6 + 32) = *(void *)(v10 + 32);
          *(__n128 *)uint64_t v6 = result;
          *(_OWORD *)(v6 + 16) = v33;
          v10 += 40;
          v6 += 40;
          if (v10 == v31) {
            goto LABEL_26;
          }
        }
      }
      if (v10 != v31)
      {
        uint64_t v38 = 0;
        do
        {
          uint64_t v39 = v6 + v38;
          uint64_t result = *(__n128 *)(v10 + v38);
          long long v40 = *(_OWORD *)(v10 + v38 + 16);
          *(void *)(v39 + 32) = *(void *)(v10 + v38 + 32);
          *(__n128 *)uint64_t v39 = result;
          *(_OWORD *)(v39 + 16) = v40;
          v38 += 40;
        }
        while (v10 + v38 != v31);
      }
    }
    else if (a1 != a2)
    {
      uint64_t result = *(__n128 *)a1;
      long long v17 = *(_OWORD *)(a1 + 16);
      *(void *)(a5 + 32) = *(void *)(a1 + 32);
      *(__n128 *)a5 = result;
      *(_OWORD *)(a5 + 16) = v17;
      uint64_t v18 = a1 + 40;
      if (a1 + 40 != a2)
      {
        uint64_t v19 = 0;
        uint64_t v20 = a5;
        do
        {
          uint64_t v22 = v20;
          v20 += 40;
          uint64_t v23 = v20;
          if (sub_6CF254(a3, (int **)v18, (int **)v22))
          {
            long long v24 = *(_OWORD *)(v22 + 16);
            *(_OWORD *)uint64_t v20 = *(_OWORD *)v22;
            *(_OWORD *)(v20 + 16) = v24;
            *(void *)(v20 + 32) = *(void *)(v22 + 32);
            uint64_t v23 = v6;
            if (v22 != v6)
            {
              uint64_t v25 = v19;
              while (1)
              {
                uint64_t v23 = v6 + v25;
                if (!sub_6CF254(a3, (int **)v18, (int **)(v6 + v25 - 40))) {
                  break;
                }
                long long v26 = *(_OWORD *)(v6 + v25 - 24);
                *(_OWORD *)uint64_t v23 = *(_OWORD *)(v6 + v25 - 40);
                *(_OWORD *)(v23 + 16) = v26;
                *(void *)(v23 + 32) = *(void *)(v6 + v25 - 8);
                v25 -= 40;
                if (!v25)
                {
                  uint64_t v23 = v6;
                  break;
                }
              }
            }
          }
          uint64_t result = *(__n128 *)v18;
          long long v21 = *(_OWORD *)(v18 + 16);
          *(void *)(v23 + 32) = *(void *)(v18 + 32);
          *(__n128 *)uint64_t v23 = result;
          *(_OWORD *)(v23 + 16) = v21;
          v18 += 40;
          v19 += 40;
        }
        while (v18 != a2);
      }
    }
  }
  return result;
}

uint64_t sub_6D4880(int ***a1, int **a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = *a1;
  uint64_t v6 = (*a1)[4];
  if (__PAIR64__(*((unsigned __int16 *)a2 + 18), *((_DWORD *)a2 + 8)) == __PAIR64__(WORD2(v6), v6)
    && (((unint64_t)v6 >> 48) & 1) != (*((unsigned char *)a2 + 38) == 0))
  {
    return 1;
  }
  unint64_t v7 = *a2;
  uint64_t v8 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v9 = *v8;
  if (v9 >= 0x43 && v8[33]) {
    unsigned int v10 = *((unsigned __int8 *)v7 + v8[33]);
  }
  else {
    unsigned int v10 = 0;
  }
  long long v11 = a1[1];
  uint64_t v12 = *v11;
  __n128 v13 = (unsigned __int16 *)((char *)*v11 - **v11);
  unsigned int v14 = *v13;
  if (v14 < 0x43)
  {
    if (!v10) {
      return 1;
    }
  }
  else
  {
    uint64_t v15 = v13[33];
    if (v13[33]) {
      LODWORD(v15) = *((unsigned __int8 *)v12 + v15);
    }
    if (v10 <= v15) {
      return 1;
    }
  }
  if (v9 >= 0x2F && v8[23])
  {
    int v16 = *((unsigned __int8 *)v7 + v8[23]);
    if (v14 < 0x2F)
    {
LABEL_21:
      if (v16 == 32) {
        return 1;
      }
      goto LABEL_22;
    }
  }
  else
  {
    int v16 = 32;
    if (v14 < 0x2F) {
      goto LABEL_21;
    }
  }
  uint64_t v17 = v13[23];
  if (!v17) {
    goto LABEL_21;
  }
  if (v16 == *((unsigned __int8 *)v12 + v17)) {
    return 1;
  }
LABEL_22:
  if (v9 >= 0x43 && v8[33])
  {
    unsigned int v18 = *((unsigned __int8 *)v7 + v8[33]);
    uint64_t v19 = *v5;
    uint64_t v20 = (unsigned __int16 *)((char *)v19 - *v19);
    unsigned int v21 = *v20;
    if (v21 < 0x43) {
      goto LABEL_25;
    }
LABEL_28:
    uint64_t v22 = v20[33];
    if (v20[33]) {
      LODWORD(v22) = *((unsigned __int8 *)v19 + v22);
    }
    if (v18 <= v22) {
      return 1;
    }
    goto LABEL_31;
  }
  unsigned int v18 = 0;
  uint64_t v19 = *v5;
  uint64_t v20 = (unsigned __int16 *)((char *)v19 - *v19);
  unsigned int v21 = *v20;
  if (v21 >= 0x43) {
    goto LABEL_28;
  }
LABEL_25:
  if (!v18) {
    return 1;
  }
LABEL_31:
  if (v9 < 0x2F || (uint64_t v23 = v8[23]) == 0)
  {
    int v24 = 32;
    if (v21 < 0x2F) {
      goto LABEL_52;
    }
    goto LABEL_36;
  }
  int v24 = *((unsigned __int8 *)v7 + v23);
  if (v21 >= 0x2F)
  {
LABEL_36:
    if (!v20[23]) {
      goto LABEL_52;
    }
    if (v24 != *((unsigned __int8 *)v19 + v20[23])) {
      goto LABEL_38;
    }
    return 1;
  }
LABEL_52:
  if (v24 == 32) {
    return 1;
  }
LABEL_38:
  uint64_t v25 = (uint64_t)(v4 + 145);
  double v26 = sub_6D82EC((uint64_t)(v4 + 145), v11, a2);
  if (*(unsigned char *)a1[3] && fabs(v26) > *((double *)v4 + 25)) {
    return 0;
  }
  unint64_t v27 = sub_2E68E8((uint64_t)*v4, (uint64_t)a1[1][4]);
  int v28 = 0;
  if (v27 <= 0xFFFFFFFEFFFFFFFFLL)
  {
    if (v27)
    {
      unint64_t v29 = sub_2E68E8((uint64_t)*v4, (uint64_t)a2[4]);
      int v28 = 0;
      if (v29 <= 0xFFFFFFFEFFFFFFFFLL)
      {
        if (v29) {
          int v28 = sub_2E79EC((uint64_t)*v4, (uint64_t)a1[1][4], (uint64_t)a2[4]);
        }
      }
    }
  }
  if (!*(unsigned char *)a1[3])
  {
    int v30 = *(unsigned char *)a1[4] ? v28 : 1;
    if (v30 != 1) {
      return 0;
    }
  }
  sub_68F4F8((uint64_t)*v4, *((unsigned int *)a2 + 8) | ((unint64_t)*((unsigned __int16 *)a2 + 18) << 32), &__p);
  uint64_t v36 = v4;
  uint64_t v31 = sub_6D4BE8((unint64_t **)&__p, (uint64_t **)&v36);
  uint64_t v32 = v38;
  if (sub_6DB184(v25, a2))
  {
    uint64_t v33 = 1;
  }
  else
  {
    BOOL v35 = sub_6DC1A4(v25, a2);
    uint64_t v33 = v32 != v31 || v35;
  }
  if (!__p) {
    return v33;
  }
  uint64_t v38 = (unint64_t *)__p;
  operator delete(__p);
  return v33;
}

void sub_6D4BC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

unint64_t *sub_6D4BE8(unint64_t **a1, uint64_t **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  if (*a1 == v3) {
    return v2;
  }
  uint64_t v4 = *a2;
  do
  {
    uint64_t v5 = (int *)sub_2DBC9C(*v4, *v2);
    uint64_t v6 = (unsigned __int16 *)((char *)v5 - *v5);
    unsigned int v7 = *v6;
    if (v7 < 0xF)
    {
      if (v7 < 5) {
        return v2;
      }
    }
    else if (v6[7] && (*((unsigned char *)v5 + v6[7]) & 1) == 0)
    {
      goto LABEL_3;
    }
    if ((!v6[2] || *((unsigned __int8 *)v5 + v6[2]) - 1 >= 5) && (v7 < 9 || !v6[4])) {
      return v2;
    }
LABEL_3:
    ++v2;
  }
  while (v2 != v3);
  return v3;
}

void sub_6D4CAC(long long *a1, int **a2, uint64_t *a3, uint64_t a4, char a5)
{
BOOL sub_6D52EC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = (a2 - a1) >> 3;
  BOOL result = 1;
  switch(0xCCCCCCCCCCCCCCCDLL * v6)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      uint64_t v8 = (_OWORD *)(a2 - 40);
      uint64_t v10 = *a3;
      unsigned int v9 = (int **)a3[1];
      double v11 = sub_6D82EC(*a3 + 1160, v9, (int **)(a2 - 40));
      double v12 = sub_6D82EC(v10 + 1160, v9, (int **)a1);
      if (*(unsigned char *)(v10 + 857))
      {
        double v13 = sub_6A2704(*(void *)v10, v9, (int **)(v4 - 40));
        double v14 = sub_6A2704(*(void *)v10, v9, (int **)a1);
        v15.i16[0] = *(_WORD *)(v10 + 748);
        double v16 = (double)vmovl_s16(v15).i32[0];
        if (vabdd_f64(v11, v12) <= v16)
        {
          LOWORD(v16) = *(_WORD *)(v10 + 750);
          if (vabdd_f64(v13, v14) >= (double)vmovl_s16(*(int16x4_t *)&v16).i32[0])
          {
            double v11 = v13;
            double v12 = v14;
          }
        }
      }
      if (fabs(v11) >= fabs(v12)) {
        return 1;
      }
      long long v17 = *(_OWORD *)a1;
      long long v18 = *(_OWORD *)(a1 + 16);
      uint64_t v19 = *(void *)(a1 + 32);
      uint64_t v20 = *(void *)(v4 - 8);
      long long v21 = *(_OWORD *)(v4 - 24);
      *(_OWORD *)a1 = *v8;
      *(_OWORD *)(a1 + 16) = v21;
      *(void *)(a1 + 32) = v20;
      *(void *)(v4 - 8) = v19;
      BOOL result = 1;
      _OWORD *v8 = v17;
      *(_OWORD *)(v4 - 24) = v18;
      return result;
    case 3uLL:
      sub_6D15B4((int **)a1, (int **)(a1 + 40), (int **)(a2 - 40), a3);
      return 1;
    case 4uLL:
      sub_6D27D0((int **)a1, (int **)(a1 + 40), (int **)(a1 + 80), (int **)(a2 - 40), a3);
      return 1;
    case 5uLL:
      sub_6D2AA4((int **)a1, (int **)(a1 + 40), (int **)(a1 + 80), (int **)(a1 + 120), (int **)(a2 - 40), a3);
      return 1;
    default:
      long long v22 = (int **)(a1 + 80);
      sub_6D15B4((int **)a1, (int **)(a1 + 40), (int **)(a1 + 80), a3);
      uint64_t v23 = a1 + 120;
      if (a1 + 120 == v4) {
        return 1;
      }
      uint64_t v24 = 0;
      int v25 = 0;
      uint64_t v51 = v4;
      break;
  }
  while (1)
  {
    uint64_t v28 = *a3;
    double v29 = (int **)a3[1];
    uint64_t v30 = *a3 + 1160;
    double v31 = sub_6D82EC(v30, v29, (int **)v23);
    double v32 = sub_6D82EC(v30, v29, v22);
    if (*(unsigned char *)(v28 + 857))
    {
      double v33 = sub_6A2704(*(void *)v28, v29, (int **)v23);
      double v34 = sub_6A2704(*(void *)v28, v29, v22);
      v35.i16[0] = *(_WORD *)(v28 + 748);
      double v36 = (double)vmovl_s16(v35).i32[0];
      if (vabdd_f64(v31, v32) <= v36)
      {
        LOWORD(v36) = *(_WORD *)(v28 + 750);
        if (vabdd_f64(v33, v34) >= (double)vmovl_s16(*(int16x4_t *)&v36).i32[0])
        {
          double v31 = v33;
          double v32 = v34;
        }
      }
    }
    if (fabs(v31) < fabs(v32))
    {
      long long v37 = *(_OWORD *)(v23 + 16);
      long long v52 = *(_OWORD *)v23;
      long long v53 = v37;
      uint64_t v54 = *(void *)(v23 + 32);
      uint64_t v38 = v24;
      do
      {
        uint64_t v39 = a1 + v38;
        long long v40 = *(_OWORD *)(a1 + v38 + 96);
        *(_OWORD *)(v39 + 120) = *(_OWORD *)(a1 + v38 + 80);
        *(_OWORD *)(v39 + 136) = v40;
        *(void *)(v39 + 152) = *(void *)(a1 + v38 + 112);
        if (v38 == -80)
        {
          uint64_t v26 = a1;
          goto LABEL_11;
        }
        int16x4_t v41 = (int **)(v39 + 40);
        uint64_t v42 = *a3;
        long long v43 = (int **)a3[1];
        uint64_t v44 = *a3 + 1160;
        double v45 = sub_6D82EC(v44, v43, (int **)&v52);
        double v46 = sub_6D82EC(v44, v43, v41);
        if (*(unsigned char *)(v42 + 857))
        {
          double v47 = sub_6A2704(*(void *)v42, v43, (int **)&v52);
          double v48 = sub_6A2704(*(void *)v42, v43, v41);
          v49.i16[0] = *(_WORD *)(v42 + 748);
          double v50 = (double)vmovl_s16(v49).i32[0];
          if (vabdd_f64(v45, v46) <= v50)
          {
            LOWORD(v50) = *(_WORD *)(v42 + 750);
            if (vabdd_f64(v47, v48) >= (double)vmovl_s16(*(int16x4_t *)&v50).i32[0])
            {
              double v45 = v47;
              double v46 = v48;
            }
          }
        }
        v38 -= 40;
      }
      while (fabs(v45) < fabs(v46));
      uint64_t v26 = a1 + v38 + 120;
LABEL_11:
      long long v27 = v53;
      *(_OWORD *)uint64_t v26 = v52;
      *(_OWORD *)(v26 + 16) = v27;
      *(void *)(v26 + 32) = v54;
      ++v25;
      uint64_t v4 = v51;
      if (v25 == 8) {
        return v23 + 40 == v51;
      }
    }
    long long v22 = (int **)v23;
    v24 += 40;
    v23 += 40;
    if (v23 == v4) {
      return 1;
    }
  }
}

uint64_t sub_6D56F8(uint64_t a1, int **a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  int v5 = sub_2E35CC(a2);
  int v6 = **(_DWORD **)a1;
  if (v6 < 1 || v5 < 1)
  {
    BOOL v8 = 0;
    unsigned int v9 = *a2;
    uint64_t v10 = (unsigned __int16 *)((char *)*a2 - **a2);
    if (*v10 < 0x43u) {
      goto LABEL_13;
    }
  }
  else
  {
    int v11 = v6 - v5;
    if (v11 < 0) {
      int v11 = -v11;
    }
    BOOL v8 = v11 > *(unsigned __int8 *)(v4 + 1136);
    unsigned int v9 = *a2;
    uint64_t v10 = (unsigned __int16 *)((char *)*a2 - **a2);
    if (*v10 < 0x43u) {
      goto LABEL_13;
    }
  }
  uint64_t v12 = v10[33];
  if (v12)
  {
    int v13 = *((unsigned __int8 *)v9 + v12);
    goto LABEL_14;
  }
LABEL_13:
  int v13 = 0;
LABEL_14:
  int v14 = **(_DWORD **)(a1 + 16) - v13;
  if (v14 >= 0) {
    unsigned int v15 = v14;
  }
  else {
    unsigned int v15 = -v14;
  }
  unsigned int v16 = *(unsigned __int8 *)(v4 + 1137);
  BOOL v17 = v15 > v16;
  unint64_t v18 = *(void *)(*(void *)(a1 + 24) + 32);
  if (__PAIR64__(*((unsigned __int16 *)a2 + 18), *((_DWORD *)a2 + 8)) != __PAIR64__(WORD2(v18), v18)
    || (HIWORD(v18) & 1) == (*((unsigned char *)a2 + 38) == 0))
  {
    uint64_t result = sub_6DEDE8(v4 + 1160, a2);
    if (!result) {
      return result;
    }
    long long v21 = *a2;
    long long v22 = (unsigned __int16 *)((char *)*a2 - **a2);
    if (*v22 < 0x2Fu || !v22[23]) {
      goto LABEL_36;
    }
    unsigned int v23 = *((unsigned __int8 *)v21 + v22[23]);
    if (v23 - 15 >= 0x21 || ((0x1C5C08009uLL >> (v23 - 15)) & 1) == 0)
    {
      BOOL v24 = v23 > 0x2B || ((1 << v23) & 0x80000001040) == 0;
      if (v24 || (uint64_t v25 = v22[5]) != 0 && (*((unsigned char *)v21 + v25 + 2) & 0x20) != 0)
      {
        BOOL v17 = v23 == 44 || v15 > v16;
LABEL_36:
        if (!v17 && !v8) {
          return **(double **)(a1 + 40) - fabs(sub_69B314(v4, *(int ***)(a1 + 32), a2, v20)) > *(double *)(v4 + 1144);
        }
      }
    }
  }
  return 0;
}

int **sub_6D58EC(int **a1, int **a2, uint64_t a3)
{
  if (a1 == a2) {
    return a2;
  }
  uint64_t v4 = a1;
  uint64_t v5 = a3 + 1160;
  while (sub_6DEDE8(v5, v4))
  {
    int v6 = *v4;
    unsigned int v7 = (unsigned __int16 *)((char *)*v4 - **v4);
    unsigned int v8 = *v7;
    if (v8 >= 0xB)
    {
      if (v7[5] && (*((unsigned char *)v6 + v7[5] + 3) & 4) != 0) {
        break;
      }
      if (v8 >= 0x2F)
      {
        uint64_t v9 = v7[23];
        if (v9)
        {
          unsigned int v10 = *((unsigned __int8 *)v6 + v9);
          BOOL v11 = v10 > 0x2A;
          uint64_t v12 = (1 << v10) & 0x50400000000;
          if (!v11 && v12 != 0) {
            break;
          }
        }
      }
    }
    v4 += 5;
    if (v4 == a2) {
      return a2;
    }
  }
  if (v4 == a2) {
    return a2;
  }
  for (uint64_t i = v4 + 5; i != a2; i += 5)
  {
    if (sub_6DEDE8(v5, i))
    {
      BOOL v17 = *i;
      unint64_t v18 = (unsigned __int16 *)((char *)*i - **i);
      unsigned int v19 = *v18;
      if (v19 < 0xB
        || (!v18[5] || (*((unsigned char *)v17 + v18[5] + 3) & 4) == 0)
        && (v19 < 0x2F
         || (uint64_t v20 = v18[23]) == 0
         || ((v21 = *((unsigned __int8 *)v17 + v20), BOOL v11 = v21 > 0x2A, v22 = (1 << v21) & 0x50400000000, !v11)
           ? (BOOL v23 = v22 == 0)
           : (BOOL v23 = 1),
             v23)))
      {
        long long v15 = *(_OWORD *)i;
        long long v16 = *((_OWORD *)i + 1);
        v4[4] = i[4];
        *(_OWORD *)uint64_t v4 = v15;
        *((_OWORD *)v4 + 1) = v16;
        v4 += 5;
      }
    }
  }
  return v4;
}

uint64_t sub_6D5A74(uint64_t *a1, int **a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(void *)(a1[2] + 32);
  if (__PAIR64__(*((unsigned __int16 *)a2 + 18), *((_DWORD *)a2 + 8)) == __PAIR64__(WORD2(v5), v5)
    && ((v5 & 0x1000000000000) == 0) == (*((unsigned char *)a2 + 38) == 0))
  {
    return 0;
  }
  if (fabs(sub_6D82EC(v4 + 1160, (int **)a1[1], a2)) >= *(double *)(v4 + 200)) {
    return 0;
  }
  uint64_t result = sub_65BD8();
  if (result)
  {
    uint64_t result = sub_2E79EC(*(void *)v4, *(void *)(a1[1] + 32), (uint64_t)a2[4]);
    if (result)
    {
      unsigned int v7 = *a2;
      unsigned int v8 = (unsigned __int16 *)((char *)*a2 - **a2);
      if (*v8 >= 0x2Fu && v8[23])
      {
        unsigned int v9 = *((unsigned __int8 *)v7 + v8[23]);
        BOOL v10 = v9 > 0x2B || ((1 << v9) & 0x80000001040) == 0;
        v12 = !v10 && ((uint64_t v11 = v8[5]) == 0 || (*((unsigned char *)v7 + v11 + 2) & 0x20) == 0) || v9 == 44;
      }
      else
      {
        BOOL v12 = 0;
      }
      int v13 = *(int **)a1[1];
      int v14 = (unsigned __int16 *)((char *)v13 - *v13);
      if (*v14 >= 0x2Fu && v14[23])
      {
        unsigned int v15 = *((unsigned __int8 *)v13 + v14[23]);
        if (v15 > 0x2B || ((1 << v15) & 0x80000001040) == 0) {
          return v12 ^ (v15 == 44) ^ 1u;
        }
        uint64_t v17 = v14[5];
        if (v17 && (*((unsigned char *)v13 + v17 + 2) & 0x20) != 0) {
          return v12 ^ (v15 == 44) ^ 1u;
        }
        else {
          return v12;
        }
      }
      else
      {
        return !v12;
      }
    }
  }
  return result;
}

BOOL sub_6D5C70(uint64_t a1, unint64_t *a2)
{
  uint64_t v4 = *(uint64_t **)a1;
  sub_68F5DC(**(void **)a1, *a2, (unint64_t *)&v18);
  uint64_t v5 = v18;
  if (v18 != v19)
  {
    uint64_t v6 = 0;
    unint64_t v7 = *(void *)(*(void *)(a1 + 8) + 32);
    unint64_t v8 = (unint64_t)v18;
    do
    {
      if (__PAIR64__(*(unsigned __int16 *)(v8 + 4), *(_DWORD *)v8) == __PAIR64__(WORD2(v7), v7)) {
        v6 += HIWORD(v7) & 1 ^ (*(unsigned char *)(v8 + 6) == 0);
      }
      v8 += 8;
    }
    while ((_DWORD *)v8 != v19);
    if (v6)
    {
      uint64_t v9 = *(void *)(*(void *)(a1 + 16) + 32);
      if (__PAIR64__(*((unsigned __int16 *)v19 - 2), *(v19 - 2)) == __PAIR64__(WORD2(v9), v9)
        && ((v9 & 0x1000000000000) == 0) == (*((unsigned char *)v19 - 2) == 0))
      {
        sub_6CCCD4(*v4, *a2, (uint64_t *)&v16);
        uint64_t v13 = (uint64_t)v16;
        BOOL v12 = v17;
        if (v16 == v17)
        {
          BOOL v10 = 0;
          unsigned int v15 = v16;
          if (!v16) {
            goto LABEL_22;
          }
        }
        else
        {
          uint64_t v14 = (uint64_t)v16;
          while (*(unsigned char *)(v14 + 48) != 1)
          {
            v14 += 128;
            if ((void **)v14 == v17)
            {
              uint64_t v14 = (uint64_t)v17;
              break;
            }
          }
          BOOL v10 = v14 != (void)v17;
          if (!v16)
          {
LABEL_22:
            uint64_t v5 = v18;
            if (!v18) {
              return v10;
            }
            goto LABEL_10;
          }
          do
            BOOL v12 = sub_2DF518(v12 - 16);
          while (v12 != (void **)v13);
          unsigned int v15 = v16;
        }
        uint64_t v17 = (void **)v13;
        operator delete(v15);
        goto LABEL_22;
      }
    }
  }
  BOOL v10 = 0;
  if (v18)
  {
LABEL_10:
    unsigned int v19 = v5;
    operator delete(v5);
  }
  return v10;
}

void sub_6D5DF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

int **sub_6D5E10(int **result, int **a2, int ***a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a4 >= 2)
  {
    uint64_t v8 = (uint64_t)result;
    if (a4 == 2)
    {
      uint64_t v9 = a2 - 5;
      uint64_t result = (int **)sub_6CDE8C(a3, a2 - 5, result);
      if (result)
      {
        long long v10 = *(_OWORD *)v8;
        long long v11 = *(_OWORD *)(v8 + 16);
        BOOL v12 = *(int **)(v8 + 32);
        uint64_t v13 = (uint64_t)*(a2 - 1);
        long long v14 = *(_OWORD *)(a2 - 3);
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
        *(_OWORD *)(v8 + 16) = v14;
        *(void *)(v8 + 32) = v13;
        *(a2 - 1) = v12;
        *(_OWORD *)uint64_t v9 = v10;
        *(_OWORD *)(a2 - 3) = v11;
      }
    }
    else if ((uint64_t)a4 > 128)
    {
      uint64_t v17 = a5;
      unint64_t v18 = a4 >> 1;
      unsigned int v19 = &result[5 * (a4 >> 1)];
      unint64_t v20 = a4 >> 1;
      if ((uint64_t)a4 <= a6)
      {
        sub_6D608C((uint64_t)result, v19, a3, v20, a5);
        uint64_t v21 = v17 + 40 * v18;
        uint64_t result = (int **)sub_6D608C(v8 + 40 * (a4 >> 1), a2, a3, a4 - (a4 >> 1), v21);
        unint64_t v22 = v17 + 40 * a4;
        uint64_t v23 = v21;
        while (v23 != v22)
        {
          uint64_t result = (int **)sub_6CDE8C(a3, (int **)v23, (int **)v17);
          if (result)
          {
            long long v26 = *(_OWORD *)v23;
            long long v27 = *(_OWORD *)(v23 + 16);
            *(void *)(v8 + 32) = *(void *)(v23 + 32);
            *(_OWORD *)uint64_t v8 = v26;
            *(_OWORD *)(v8 + 16) = v27;
            v23 += 40;
            v8 += 40;
            if (v17 == v21)
            {
LABEL_19:
              if (v23 != v22)
              {
                uint64_t v28 = 0;
                do
                {
                  uint64_t v29 = v8 + v28;
                  long long v30 = *(_OWORD *)(v23 + v28);
                  long long v31 = *(_OWORD *)(v23 + v28 + 16);
                  *(void *)(v29 + 32) = *(void *)(v23 + v28 + 32);
                  *(_OWORD *)uint64_t v29 = v30;
                  *(_OWORD *)(v29 + 16) = v31;
                  v28 += 40;
                }
                while (v23 + v28 != v22);
              }
              return result;
            }
          }
          else
          {
            long long v24 = *(_OWORD *)v17;
            long long v25 = *(_OWORD *)(v17 + 16);
            *(void *)(v8 + 32) = *(void *)(v17 + 32);
            *(_OWORD *)uint64_t v8 = v24;
            *(_OWORD *)(v8 + 16) = v25;
            v17 += 40;
            v8 += 40;
            if (v17 == v21) {
              goto LABEL_19;
            }
          }
        }
        if (v17 != v21)
        {
          uint64_t v32 = 0;
          do
          {
            uint64_t v33 = v8 + v32;
            long long v34 = *(_OWORD *)(v17 + v32);
            long long v35 = *(_OWORD *)(v17 + v32 + 16);
            *(void *)(v33 + 32) = *(void *)(v17 + v32 + 32);
            *(_OWORD *)uint64_t v33 = v34;
            *(_OWORD *)(v33 + 16) = v35;
            v32 += 40;
          }
          while (v17 + v32 != v21);
        }
      }
      else
      {
        sub_6D5E10(result, v19, a3, v20, a5, a6);
        sub_6D5E10(v8 + 40 * (a4 >> 1), a2, a3, a4 - (a4 >> 1), v17, a6);
        return (int **)sub_6CE598(v8, (int **)(v8 + 40 * (a4 >> 1)), (char *)a2, a3, a4 >> 1, a4 - (a4 >> 1), (char *)v17, a6);
      }
    }
    else
    {
      return (int **)sub_6CE064((uint64_t)result, a2, a3);
    }
  }
  return result;
}

uint64_t sub_6D608C(uint64_t result, int **a2, int ***a3, unint64_t a4, uint64_t a5)
{
  if (a4)
  {
    uint64_t v5 = a5;
    uint64_t v9 = result;
    if (a4 == 2)
    {
      BOOL v12 = a2 - 5;
      uint64_t result = sub_6CDE8C(a3, a2 - 5, (int **)result);
      if (result)
      {
        long long v13 = *(_OWORD *)v12;
        long long v14 = *((_OWORD *)v12 + 1);
        *(void *)(v5 + 32) = v12[4];
        *(_OWORD *)uint64_t v5 = v13;
        *(_OWORD *)(v5 + 16) = v14;
        long long v15 = *(_OWORD *)v9;
        long long v16 = *(_OWORD *)(v9 + 16);
        uint64_t v17 = *(int **)(v9 + 32);
      }
      else
      {
        long long v18 = *(_OWORD *)v9;
        long long v19 = *(_OWORD *)(v9 + 16);
        *(void *)(v5 + 32) = *(void *)(v9 + 32);
        *(_OWORD *)uint64_t v5 = v18;
        *(_OWORD *)(v5 + 16) = v19;
        long long v15 = *(_OWORD *)v12;
        long long v16 = *((_OWORD *)v12 + 1);
        uint64_t v17 = v12[4];
      }
      *(void *)(v5 + 72) = v17;
      *(_OWORD *)(v5 + 40) = v15;
      *(_OWORD *)(v5 + 56) = v16;
    }
    else if (a4 == 1)
    {
      long long v10 = *(_OWORD *)result;
      long long v11 = *(_OWORD *)(result + 16);
      *(void *)(a5 + 32) = *(void *)(result + 32);
      *(_OWORD *)a5 = v10;
      *(_OWORD *)(a5 + 16) = v11;
    }
    else if ((uint64_t)a4 > 8)
    {
      unint64_t v20 = a4 >> 1;
      uint64_t v21 = 40 * (a4 >> 1);
      uint64_t v22 = result + v21;
      sub_6D5E10(result, result + v21, a3, a4 >> 1, a5, a4 >> 1);
      uint64_t result = sub_6D5E10(v9 + v21, a2, a3, a4 - v20, v5 + v21, a4 - v20);
      uint64_t v23 = v9 + v21;
      while ((int **)v23 != a2)
      {
        uint64_t result = sub_6CDE8C(a3, (int **)v23, (int **)v9);
        if (result)
        {
          long long v26 = *(_OWORD *)v23;
          long long v27 = *(_OWORD *)(v23 + 16);
          *(void *)(v5 + 32) = *(void *)(v23 + 32);
          *(_OWORD *)uint64_t v5 = v26;
          *(_OWORD *)(v5 + 16) = v27;
          v23 += 40;
          v5 += 40;
          if (v9 == v22)
          {
LABEL_19:
            if ((int **)v23 != a2)
            {
              uint64_t v28 = 0;
              do
              {
                uint64_t v29 = v5 + v28;
                long long v30 = *(_OWORD *)(v23 + v28);
                long long v31 = *(_OWORD *)(v23 + v28 + 16);
                *(void *)(v29 + 32) = *(void *)(v23 + v28 + 32);
                *(_OWORD *)uint64_t v29 = v30;
                *(_OWORD *)(v29 + 16) = v31;
                v28 += 40;
              }
              while ((int **)(v23 + v28) != a2);
            }
            return result;
          }
        }
        else
        {
          long long v24 = *(_OWORD *)v9;
          long long v25 = *(_OWORD *)(v9 + 16);
          *(void *)(v5 + 32) = *(void *)(v9 + 32);
          *(_OWORD *)uint64_t v5 = v24;
          *(_OWORD *)(v5 + 16) = v25;
          v9 += 40;
          v5 += 40;
          if (v9 == v22) {
            goto LABEL_19;
          }
        }
      }
      if (v9 != v22)
      {
        uint64_t v32 = 0;
        do
        {
          uint64_t v33 = v5 + v32;
          long long v34 = *(_OWORD *)(v9 + v32);
          long long v35 = *(_OWORD *)(v9 + v32 + 16);
          *(void *)(v33 + 32) = *(void *)(v9 + v32 + 32);
          *(_OWORD *)uint64_t v33 = v34;
          *(_OWORD *)(v33 + 16) = v35;
          v32 += 40;
        }
        while (v9 + v32 != v22);
      }
    }
    else
    {
      return sub_6CEA4C(result, a2, a5, a3);
    }
  }
  return result;
}

__n128 sub_6D62C4(int **a1, char *a2, double *a3, unint64_t a4, uint64_t a5, uint64_t a6, __n128 result)
{
  if (a4 >= 2)
  {
    unint64_t v9 = (unint64_t)a1;
    if (a4 == 2)
    {
      long long v10 = a2 - 40;
      if (sub_6CF254(a3, (int **)a2 - 5, a1))
      {
        uint64_t result = *(__n128 *)v9;
        long long v11 = *(_OWORD *)(v9 + 16);
        uint64_t v12 = *(void *)(v9 + 32);
        uint64_t v13 = *((void *)a2 - 1);
        long long v14 = *(_OWORD *)(a2 - 24);
        *(_OWORD *)unint64_t v9 = *(_OWORD *)v10;
        *(_OWORD *)(v9 + 16) = v14;
        *(void *)(v9 + 32) = v13;
        *((void *)a2 - 1) = v12;
        *(__n128 *)long long v10 = result;
        *(_OWORD *)(a2 - 24) = v11;
      }
    }
    else if ((uint64_t)a4 > 128)
    {
      uint64_t v28 = a5;
      unint64_t v29 = a4 >> 1;
      uint64_t v30 = (uint64_t)&a1[5 * (a4 >> 1)];
      unint64_t v31 = a4 >> 1;
      if ((uint64_t)a4 <= a6)
      {
        __n128 v32 = sub_6D65B4((uint64_t)a1, v30, a3, v31, a5, result);
        uint64_t v33 = v28 + 40 * v29;
        result.n128_u64[0] = sub_6D65B4(v9 + 40 * (a4 >> 1), (uint64_t)a2, a3, a4 - (a4 >> 1), v33, v32).n128_u64[0];
        unint64_t v34 = v28 + 40 * a4;
        uint64_t v35 = v33;
        while (v35 != v34)
        {
          if (sub_6CF254(a3, (int **)v35, (int **)v28))
          {
            uint64_t result = *(__n128 *)v35;
            long long v37 = *(_OWORD *)(v35 + 16);
            *(void *)(v9 + 32) = *(void *)(v35 + 32);
            *(__n128 *)unint64_t v9 = result;
            *(_OWORD *)(v9 + 16) = v37;
            v35 += 40;
            v9 += 40;
            if (v28 == v33)
            {
LABEL_26:
              if (v35 != v34)
              {
                uint64_t v38 = 0;
                do
                {
                  uint64_t v39 = v9 + v38;
                  uint64_t result = *(__n128 *)(v35 + v38);
                  long long v40 = *(_OWORD *)(v35 + v38 + 16);
                  *(void *)(v39 + 32) = *(void *)(v35 + v38 + 32);
                  *(__n128 *)uint64_t v39 = result;
                  *(_OWORD *)(v39 + 16) = v40;
                  v38 += 40;
                }
                while (v35 + v38 != v34);
              }
              return result;
            }
          }
          else
          {
            uint64_t result = *(__n128 *)v28;
            long long v36 = *(_OWORD *)(v28 + 16);
            *(void *)(v9 + 32) = *(void *)(v28 + 32);
            *(__n128 *)unint64_t v9 = result;
            *(_OWORD *)(v9 + 16) = v36;
            v28 += 40;
            v9 += 40;
            if (v28 == v33) {
              goto LABEL_26;
            }
          }
        }
        if (v28 != v33)
        {
          uint64_t v41 = 0;
          do
          {
            uint64_t v42 = v9 + v41;
            uint64_t result = *(__n128 *)(v28 + v41);
            long long v43 = *(_OWORD *)(v28 + v41 + 16);
            *(void *)(v42 + 32) = *(void *)(v28 + v41 + 32);
            *(__n128 *)uint64_t v42 = result;
            *(_OWORD *)(v42 + 16) = v43;
            v41 += 40;
          }
          while (v28 + v41 != v33);
        }
      }
      else
      {
        sub_6D62C4(a1, v30, a3, v31, a5, a6);
        sub_6D62C4(v9 + 40 * (a4 >> 1), a2, a3, a4 - (a4 >> 1), v28, a6);
        sub_6CF8E8(v9, (int **)(v9 + 40 * (a4 >> 1)), a2, a3, a4 >> 1, a4 - (a4 >> 1), (char *)v28, a6);
      }
    }
    else if (a1 != (int **)a2)
    {
      long long v16 = a1 + 5;
      if (a1 + 5 != (int **)a2)
      {
        uint64_t v17 = 0;
        long long v18 = a1;
        do
        {
          uint64_t v21 = v18;
          long long v18 = v16;
          if (sub_6CF254(a3, v16, v21))
          {
            __n128 v22 = *(__n128 *)v18;
            long long v23 = *((_OWORD *)v18 + 1);
            double v46 = v18[4];
            __n128 v44 = v22;
            long long v45 = v23;
            uint64_t v24 = v17;
            do
            {
              uint64_t v25 = v9 + v24;
              long long v26 = *(_OWORD *)(v9 + v24 + 16);
              *(_OWORD *)(v25 + 40) = *(_OWORD *)(v9 + v24);
              *(_OWORD *)(v25 + 56) = v26;
              *(void *)(v25 + 72) = *(void *)(v9 + v24 + 32);
              if (!v24)
              {
                uint64_t v19 = v9;
                goto LABEL_10;
              }
              v24 -= 40;
            }
            while ((sub_6CF254(a3, (int **)&v44, (int **)(v24 + v9)) & 1) != 0);
            uint64_t v19 = v9 + v24 + 40;
LABEL_10:
            uint64_t result = v44;
            long long v20 = v45;
            *(void *)(v19 + 32) = v46;
            *(__n128 *)uint64_t v19 = result;
            *(_OWORD *)(v19 + 16) = v20;
          }
          long long v16 = v18 + 5;
          v17 += 40;
        }
        while (v18 + 5 != (int **)a2);
      }
    }
  }
  return result;
}

__n128 sub_6D65B4(uint64_t a1, uint64_t a2, double *a3, unint64_t a4, uint64_t a5, __n128 result)
{
  if (a4)
  {
    uint64_t v6 = a5;
    uint64_t v10 = a1;
    if (a4 == 2)
    {
      uint64_t v12 = a2 - 40;
      if (sub_6CF254(a3, (int **)(a2 - 40), (int **)a1))
      {
        __n128 v13 = *(__n128 *)v12;
        long long v14 = *(_OWORD *)(v12 + 16);
        *(void *)(v6 + 32) = *(void *)(v12 + 32);
        *(__n128 *)uint64_t v6 = v13;
        *(_OWORD *)(v6 + 16) = v14;
        uint64_t result = *(__n128 *)v10;
        long long v15 = *(_OWORD *)(v10 + 16);
        uint64_t v16 = *(void *)(v10 + 32);
      }
      else
      {
        __n128 v27 = *(__n128 *)v10;
        long long v28 = *(_OWORD *)(v10 + 16);
        *(void *)(v6 + 32) = *(void *)(v10 + 32);
        *(__n128 *)uint64_t v6 = v27;
        *(_OWORD *)(v6 + 16) = v28;
        uint64_t result = *(__n128 *)v12;
        long long v15 = *(_OWORD *)(v12 + 16);
        uint64_t v16 = *(void *)(v12 + 32);
      }
      *(void *)(v6 + 72) = v16;
      *(__n128 *)(v6 + 40) = result;
      *(_OWORD *)(v6 + 56) = v15;
    }
    else if (a4 == 1)
    {
      uint64_t result = *(__n128 *)a1;
      long long v11 = *(_OWORD *)(a1 + 16);
      *(void *)(a5 + 32) = *(void *)(a1 + 32);
      *(__n128 *)a5 = result;
      *(_OWORD *)(a5 + 16) = v11;
    }
    else if ((uint64_t)a4 > 8)
    {
      unint64_t v29 = a4 >> 1;
      uint64_t v30 = 40 * (a4 >> 1);
      uint64_t v31 = a1 + v30;
      sub_6D62C4(a1, a1 + v30, a3, a4 >> 1, a5, a4 >> 1);
      sub_6D62C4(v10 + v30, a2, a3, a4 - v29, v6 + v30, a4 - v29);
      uint64_t v32 = v10 + v30;
      while (v32 != a2)
      {
        if (sub_6CF254(a3, (int **)v32, (int **)v10))
        {
          uint64_t result = *(__n128 *)v32;
          long long v34 = *(_OWORD *)(v32 + 16);
          *(void *)(v6 + 32) = *(void *)(v32 + 32);
          *(__n128 *)uint64_t v6 = result;
          *(_OWORD *)(v6 + 16) = v34;
          v32 += 40;
          v6 += 40;
          if (v10 == v31)
          {
LABEL_26:
            if (v32 != a2)
            {
              uint64_t v35 = 0;
              do
              {
                uint64_t v36 = v6 + v35;
                uint64_t result = *(__n128 *)(v32 + v35);
                long long v37 = *(_OWORD *)(v32 + v35 + 16);
                *(void *)(v36 + 32) = *(void *)(v32 + v35 + 32);
                *(__n128 *)uint64_t v36 = result;
                *(_OWORD *)(v36 + 16) = v37;
                v35 += 40;
              }
              while (v32 + v35 != a2);
            }
            return result;
          }
        }
        else
        {
          uint64_t result = *(__n128 *)v10;
          long long v33 = *(_OWORD *)(v10 + 16);
          *(void *)(v6 + 32) = *(void *)(v10 + 32);
          *(__n128 *)uint64_t v6 = result;
          *(_OWORD *)(v6 + 16) = v33;
          v10 += 40;
          v6 += 40;
          if (v10 == v31) {
            goto LABEL_26;
          }
        }
      }
      if (v10 != v31)
      {
        uint64_t v38 = 0;
        do
        {
          uint64_t v39 = v6 + v38;
          uint64_t result = *(__n128 *)(v10 + v38);
          long long v40 = *(_OWORD *)(v10 + v38 + 16);
          *(void *)(v39 + 32) = *(void *)(v10 + v38 + 32);
          *(__n128 *)uint64_t v39 = result;
          *(_OWORD *)(v39 + 16) = v40;
          v38 += 40;
        }
        while (v10 + v38 != v31);
      }
    }
    else if (a1 != a2)
    {
      uint64_t result = *(__n128 *)a1;
      long long v17 = *(_OWORD *)(a1 + 16);
      *(void *)(a5 + 32) = *(void *)(a1 + 32);
      *(__n128 *)a5 = result;
      *(_OWORD *)(a5 + 16) = v17;
      uint64_t v18 = a1 + 40;
      if (a1 + 40 != a2)
      {
        uint64_t v19 = 0;
        uint64_t v20 = a5;
        do
        {
          uint64_t v22 = v20;
          v20 += 40;
          uint64_t v23 = v20;
          if (sub_6CF254(a3, (int **)v18, (int **)v22))
          {
            long long v24 = *(_OWORD *)(v22 + 16);
            *(_OWORD *)uint64_t v20 = *(_OWORD *)v22;
            *(_OWORD *)(v20 + 16) = v24;
            *(void *)(v20 + 32) = *(void *)(v22 + 32);
            uint64_t v23 = v6;
            if (v22 != v6)
            {
              uint64_t v25 = v19;
              while (1)
              {
                uint64_t v23 = v6 + v25;
                if (!sub_6CF254(a3, (int **)v18, (int **)(v6 + v25 - 40))) {
                  break;
                }
                long long v26 = *(_OWORD *)(v6 + v25 - 24);
                *(_OWORD *)uint64_t v23 = *(_OWORD *)(v6 + v25 - 40);
                *(_OWORD *)(v23 + 16) = v26;
                *(void *)(v23 + 32) = *(void *)(v6 + v25 - 8);
                v25 -= 40;
                if (!v25)
                {
                  uint64_t v23 = v6;
                  break;
                }
              }
            }
          }
          uint64_t result = *(__n128 *)v18;
          long long v21 = *(_OWORD *)(v18 + 16);
          *(void *)(v23 + 32) = *(void *)(v18 + 32);
          *(__n128 *)uint64_t v23 = result;
          *(_OWORD *)(v23 + 16) = v21;
          v18 += 40;
          v19 += 40;
        }
        while (v18 != a2);
      }
    }
  }
  return result;
}

uint64_t sub_6D6874(int ***a1, int **a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = *a1;
  uint64_t v6 = (*a1)[4];
  if (__PAIR64__(*((unsigned __int16 *)a2 + 18), *((_DWORD *)a2 + 8)) == __PAIR64__(WORD2(v6), v6)
    && (((unint64_t)v6 >> 48) & 1) != (*((unsigned char *)a2 + 38) == 0))
  {
    return 1;
  }
  unint64_t v7 = *a2;
  uint64_t v8 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v9 = *v8;
  if (v9 >= 0x43 && v8[33]) {
    unsigned int v10 = *((unsigned __int8 *)v7 + v8[33]);
  }
  else {
    unsigned int v10 = 0;
  }
  long long v11 = a1[1];
  uint64_t v12 = *v11;
  __n128 v13 = (unsigned __int16 *)((char *)*v11 - **v11);
  unsigned int v14 = *v13;
  if (v14 < 0x43)
  {
    if (!v10) {
      return 1;
    }
  }
  else
  {
    uint64_t v15 = v13[33];
    if (v13[33]) {
      LODWORD(v15) = *((unsigned __int8 *)v12 + v15);
    }
    if (v10 <= v15) {
      return 1;
    }
  }
  if (v9 >= 0x2F && v8[23])
  {
    int v16 = *((unsigned __int8 *)v7 + v8[23]);
    if (v14 < 0x2F)
    {
LABEL_21:
      if (v16 == 32) {
        return 1;
      }
      goto LABEL_22;
    }
  }
  else
  {
    int v16 = 32;
    if (v14 < 0x2F) {
      goto LABEL_21;
    }
  }
  uint64_t v17 = v13[23];
  if (!v17) {
    goto LABEL_21;
  }
  if (v16 == *((unsigned __int8 *)v12 + v17)) {
    return 1;
  }
LABEL_22:
  if (v9 >= 0x43 && v8[33])
  {
    unsigned int v18 = *((unsigned __int8 *)v7 + v8[33]);
    uint64_t v19 = *v5;
    uint64_t v20 = (unsigned __int16 *)((char *)v19 - *v19);
    unsigned int v21 = *v20;
    if (v21 < 0x43) {
      goto LABEL_25;
    }
LABEL_28:
    uint64_t v22 = v20[33];
    if (v20[33]) {
      LODWORD(v22) = *((unsigned __int8 *)v19 + v22);
    }
    if (v18 <= v22) {
      return 1;
    }
    goto LABEL_31;
  }
  unsigned int v18 = 0;
  uint64_t v19 = *v5;
  uint64_t v20 = (unsigned __int16 *)((char *)v19 - *v19);
  unsigned int v21 = *v20;
  if (v21 >= 0x43) {
    goto LABEL_28;
  }
LABEL_25:
  if (!v18) {
    return 1;
  }
LABEL_31:
  if (v9 < 0x2F || (uint64_t v23 = v8[23]) == 0)
  {
    int v24 = 32;
    if (v21 < 0x2F) {
      goto LABEL_53;
    }
    goto LABEL_36;
  }
  int v24 = *((unsigned __int8 *)v7 + v23);
  if (v21 >= 0x2F)
  {
LABEL_36:
    if (!v20[23]) {
      goto LABEL_53;
    }
    if (v24 != *((unsigned __int8 *)v19 + v20[23])) {
      goto LABEL_38;
    }
    return 1;
  }
LABEL_53:
  if (v24 == 32) {
    return 1;
  }
LABEL_38:
  double v25 = sub_6D82EC((uint64_t)(v4 + 145), v11, a2);
  if (*(unsigned char *)a1[3] && fabs(v25) > *((double *)v4 + 25)) {
    return 0;
  }
  unint64_t v26 = sub_2E68E8((uint64_t)*v4, (uint64_t)a1[1][4]);
  int v27 = 0;
  if (v26 <= 0xFFFFFFFEFFFFFFFFLL)
  {
    if (v26)
    {
      unint64_t v28 = sub_2E68E8((uint64_t)*v4, (uint64_t)a2[4]);
      int v27 = 0;
      if (v28 <= 0xFFFFFFFEFFFFFFFFLL)
      {
        if (v28) {
          int v27 = sub_2E79EC((uint64_t)*v4, (uint64_t)a1[1][4], (uint64_t)a2[4]);
        }
      }
    }
  }
  if (!*(unsigned char *)a1[3])
  {
    int v29 = *(unsigned char *)a1[4] ? v27 : 1;
    if (v29 != 1) {
      return 0;
    }
  }
  sub_68F4F8((uint64_t)*v4, *((unsigned int *)a2 + 8) | ((unint64_t)*((unsigned __int16 *)a2 + 18) << 32), &__p);
  uint64_t v30 = (unint64_t *)__p;
  uint64_t v31 = v36;
  if (__p == v36)
  {
    uint64_t v31 = (unint64_t *)__p;
  }
  else
  {
    do
      sub_2DBC9C((uint64_t)*v4, *v30++);
    while (v30 != v31);
    uint64_t v30 = v36;
  }
  if (sub_6DEDE8((uint64_t)(v4 + 145), a2))
  {
    uint64_t v32 = 1;
  }
  else
  {
    unsigned int v34 = sub_6DEE5C((uint64_t)(v4 + 145), a2);
    if (v31 == v30) {
      uint64_t v32 = v34;
    }
    else {
      uint64_t v32 = 1;
    }
  }
  if (__p)
  {
    uint64_t v36 = (unint64_t *)__p;
    operator delete(__p);
  }
  return v32;
}

void sub_6D6BB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_6D6BD4(long long *a1, int **a2, uint64_t *a3, uint64_t a4, char a5)
{
BOOL sub_6D7214(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = (a2 - a1) >> 3;
  BOOL result = 1;
  switch(0xCCCCCCCCCCCCCCCDLL * v6)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      uint64_t v8 = (_OWORD *)(a2 - 40);
      uint64_t v10 = *a3;
      unsigned int v9 = (int **)a3[1];
      double v11 = sub_6D82EC(*a3 + 1160, v9, (int **)(a2 - 40));
      double v12 = sub_6D82EC(v10 + 1160, v9, (int **)a1);
      if (*(unsigned char *)(v10 + 857))
      {
        double v13 = sub_6A2704(*(void *)v10, v9, (int **)(v4 - 40));
        double v14 = sub_6A2704(*(void *)v10, v9, (int **)a1);
        v15.i16[0] = *(_WORD *)(v10 + 748);
        double v16 = (double)vmovl_s16(v15).i32[0];
        if (vabdd_f64(v11, v12) <= v16)
        {
          LOWORD(v16) = *(_WORD *)(v10 + 750);
          if (vabdd_f64(v13, v14) >= (double)vmovl_s16(*(int16x4_t *)&v16).i32[0])
          {
            double v11 = v13;
            double v12 = v14;
          }
        }
      }
      if (fabs(v11) >= fabs(v12)) {
        return 1;
      }
      long long v17 = *(_OWORD *)a1;
      long long v18 = *(_OWORD *)(a1 + 16);
      uint64_t v19 = *(void *)(a1 + 32);
      uint64_t v20 = *(void *)(v4 - 8);
      long long v21 = *(_OWORD *)(v4 - 24);
      *(_OWORD *)a1 = *v8;
      *(_OWORD *)(a1 + 16) = v21;
      *(void *)(a1 + 32) = v20;
      *(void *)(v4 - 8) = v19;
      BOOL result = 1;
      _OWORD *v8 = v17;
      *(_OWORD *)(v4 - 24) = v18;
      return result;
    case 3uLL:
      sub_6D15B4((int **)a1, (int **)(a1 + 40), (int **)(a2 - 40), a3);
      return 1;
    case 4uLL:
      sub_6D27D0((int **)a1, (int **)(a1 + 40), (int **)(a1 + 80), (int **)(a2 - 40), a3);
      return 1;
    case 5uLL:
      sub_6D2AA4((int **)a1, (int **)(a1 + 40), (int **)(a1 + 80), (int **)(a1 + 120), (int **)(a2 - 40), a3);
      return 1;
    default:
      long long v22 = (int **)(a1 + 80);
      sub_6D15B4((int **)a1, (int **)(a1 + 40), (int **)(a1 + 80), a3);
      uint64_t v23 = a1 + 120;
      if (a1 + 120 == v4) {
        return 1;
      }
      uint64_t v24 = 0;
      int v25 = 0;
      uint64_t v51 = v4;
      break;
  }
  while (1)
  {
    uint64_t v28 = *a3;
    double v29 = (int **)a3[1];
    uint64_t v30 = *a3 + 1160;
    double v31 = sub_6D82EC(v30, v29, (int **)v23);
    double v32 = sub_6D82EC(v30, v29, v22);
    if (*(unsigned char *)(v28 + 857))
    {
      double v33 = sub_6A2704(*(void *)v28, v29, (int **)v23);
      double v34 = sub_6A2704(*(void *)v28, v29, v22);
      v35.i16[0] = *(_WORD *)(v28 + 748);
      double v36 = (double)vmovl_s16(v35).i32[0];
      if (vabdd_f64(v31, v32) <= v36)
      {
        LOWORD(v36) = *(_WORD *)(v28 + 750);
        if (vabdd_f64(v33, v34) >= (double)vmovl_s16(*(int16x4_t *)&v36).i32[0])
        {
          double v31 = v33;
          double v32 = v34;
        }
      }
    }
    if (fabs(v31) < fabs(v32))
    {
      long long v37 = *(_OWORD *)(v23 + 16);
      long long v52 = *(_OWORD *)v23;
      long long v53 = v37;
      uint64_t v54 = *(void *)(v23 + 32);
      uint64_t v38 = v24;
      do
      {
        uint64_t v39 = a1 + v38;
        long long v40 = *(_OWORD *)(a1 + v38 + 96);
        *(_OWORD *)(v39 + 120) = *(_OWORD *)(a1 + v38 + 80);
        *(_OWORD *)(v39 + 136) = v40;
        *(void *)(v39 + 152) = *(void *)(a1 + v38 + 112);
        if (v38 == -80)
        {
          uint64_t v26 = a1;
          goto LABEL_11;
        }
        int16x4_t v41 = (int **)(v39 + 40);
        uint64_t v42 = *a3;
        long long v43 = (int **)a3[1];
        uint64_t v44 = *a3 + 1160;
        double v45 = sub_6D82EC(v44, v43, (int **)&v52);
        double v46 = sub_6D82EC(v44, v43, v41);
        if (*(unsigned char *)(v42 + 857))
        {
          double v47 = sub_6A2704(*(void *)v42, v43, (int **)&v52);
          double v48 = sub_6A2704(*(void *)v42, v43, v41);
          v49.i16[0] = *(_WORD *)(v42 + 748);
          double v50 = (double)vmovl_s16(v49).i32[0];
          if (vabdd_f64(v45, v46) <= v50)
          {
            LOWORD(v50) = *(_WORD *)(v42 + 750);
            if (vabdd_f64(v47, v48) >= (double)vmovl_s16(*(int16x4_t *)&v50).i32[0])
            {
              double v45 = v47;
              double v46 = v48;
            }
          }
        }
        v38 -= 40;
      }
      while (fabs(v45) < fabs(v46));
      uint64_t v26 = a1 + v38 + 120;
LABEL_11:
      long long v27 = v53;
      *(_OWORD *)uint64_t v26 = v52;
      *(_OWORD *)(v26 + 16) = v27;
      *(void *)(v26 + 32) = v54;
      ++v25;
      uint64_t v4 = v51;
      if (v25 == 8) {
        return v23 + 40 == v51;
      }
    }
    long long v22 = (int **)v23;
    v24 += 40;
    v23 += 40;
    if (v23 == v4) {
      return 1;
    }
  }
}

double sub_6D7620()
{
  byte_25A0667 = 1;
  word_25A0650 = 65;
  byte_25A067F = 1;
  word_25A0668 = 65;
  byte_25A0697 = 8;
  strcpy((char *)&qword_25A0680, "any_mode");
  byte_25A06AF = 7;
  strcpy((char *)&dword_25A0698, "cycling");
  byte_25A06C7 = 7;
  strcpy((char *)&dword_25A06B0, "driving");
  byte_25A06DF = 7;
  strcpy((char *)&dword_25A06C8, "walking");
  char v4 = 7;
  strcpy((char *)v3, "UNKNOWN");
  int v5 = 0;
  char v7 = 14;
  strcpy((char *)v6, "ROUTES_THROUGH");
  int v8 = 1;
  char v10 = 9;
  strcpy((char *)__p, "ROUTES_TO");
  int v11 = 3;
  char v13 = 11;
  strcpy((char *)v12, "ROUTES_FROM");
  int v14 = 2;
  xmmword_25A0710 = 0u;
  *(_OWORD *)&qword_25A0720 = 0u;
  dword_25A0730 = 1065353216;
  sub_3A6EF0((uint64_t)&xmmword_25A0710, (uint64_t)v3, (uint64_t)v3);
  sub_3A6EF0((uint64_t)&xmmword_25A0710, (uint64_t)v6, (uint64_t)v6);
  sub_3A6EF0((uint64_t)&xmmword_25A0710, (uint64_t)__p, (uint64_t)__p);
  sub_3A6EF0((uint64_t)&xmmword_25A0710, (uint64_t)v12, (uint64_t)v12);
  if (v13 < 0)
  {
    operator delete(v12[0]);
    if ((v10 & 0x80000000) == 0)
    {
LABEL_3:
      if ((v7 & 0x80000000) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      operator delete(v6[0]);
      if ((v4 & 0x80000000) == 0) {
        goto LABEL_5;
      }
LABEL_9:
      operator delete(v3[0]);
      goto LABEL_5;
    }
  }
  else if ((v10 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p[0]);
  if (v7 < 0) {
    goto LABEL_8;
  }
LABEL_4:
  if (v4 < 0) {
    goto LABEL_9;
  }
LABEL_5:
  qword_25A06E8 = 0;
  qword_25A06F0 = 0;
  qword_25A06E0 = 0;
  v0 = operator new(9uLL);
  *(void *)v0 = 0x4020C000103050DLL;
  v0[8] = 6;
  qword_25A06E0 = (uint64_t)v0;
  qword_25A06E8 = (uint64_t)(v0 + 9);
  qword_25A06F0 = (uint64_t)(v0 + 9);
  qword_25A06F8 = 0;
  qword_25A0700 = 0;
  unk_25A0708 = 0;
  uint64_t v1 = (char *)operator new(9uLL);
  qword_25A0700 = (uint64_t)(v1 + 9);
  unk_25A0708 = v1 + 9;
  double result = 1.10224369e-279;
  *(void *)uint64_t v1 = 0x604020C00010305;
  v1[8] = 13;
  qword_25A06F8 = (uint64_t)v1;
  return result;
}

void sub_6D78DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  if (qword_25A0720) {
    sub_20AA99C((void **)qword_25A0720);
  }
  long long v37 = (void *)xmmword_25A0710;
  *(void *)&xmmword_25A0710 = 0;
  if (v37)
  {
    operator delete(v37);
    if ((a36 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a29 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_11;
    }
  }
  else if ((a36 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(__p);
  if ((a29 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a22 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_12;
  }
LABEL_11:
  operator delete(a24);
  if ((a22 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a15 & 0x80000000) == 0) {
LABEL_14:
    }
      _Unwind_Resume(exception_object);
LABEL_13:
    operator delete(a10);
    _Unwind_Resume(exception_object);
  }
LABEL_12:
  operator delete(a17);
  if ((a15 & 0x80000000) == 0) {
    goto LABEL_14;
  }
  goto LABEL_13;
}

uint64_t sub_6D797C(uint64_t a1, void *a2, const void *a3, _OWORD *a4, char a5)
{
  *(void *)(a1 + 880) = sub_3750CC(a2);
  *(_OWORD *)(a1 + 888) = *a4;
  *(unsigned char *)(a1 + 904) = a5;
  memcpy((void *)(a1 + 912), a3, 0x3D0uLL);
  return a1;
}

void sub_6D79F0(_Unwind_Exception *a1)
{
  uint64_t v3 = *(void **)(v1 + 848);
  if (v3)
  {
    *(void *)(v1 + 856) = v3;
    operator delete(v3);
  }
  sub_20AA9E0((void **)(v1 + 824), (void *)v1);
  sub_328138(v1);
  _Unwind_Resume(a1);
}

void sub_6D7A20(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  char v4 = (int **)a3[1];
  unint64_t v5 = 126 - 2 * __clz(0xCCCCCCCCCCCCCCCDLL * (((uint64_t)v4 - *a3) >> 3));
  BOOL v6 = v4 == (int **)*a3;
  v8[0] = a2;
  v8[1] = a1;
  if (v6) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = v5;
  }
  sub_6E1308(v3, v4, (uint64_t)v8, v7, 1);
}

uint64_t sub_6D7A80(uint64_t a1, char **a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = &(*a2)[-*(int *)*a2];
  unsigned int v4 = *(unsigned __int16 *)v3;
  if (v4 < 0x2F) {
    return 0;
  }
  if (*((_WORD *)v3 + 23))
  {
    unsigned int v5 = v2[*((unsigned __int16 *)v3 + 23)];
    if (v5 <= 0x2C)
    {
      if (((1 << v5) & 0x180000105240) != 0) {
        return *(unsigned int *)(a1 + 1484);
      }
      if (!v2[*((unsigned __int16 *)v3 + 23)]) {
        return *(unsigned int *)(a1 + 1480);
      }
    }
  }
  if (v4 >= 0x43 && (uint64_t v7 = *((unsigned __int16 *)v3 + 33)) != 0) {
    return v2[v7];
  }
  else {
    return 0;
  }
}

uint64_t sub_6D7AFC(uint64_t a1, int **a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v7 = 0;
  int v8 = 0;
  uint64_t v9 = 0;
  sub_6D7BA0(a1, a2, a3, &v7);
  if (v7 == v8)
  {
    a4 = -1;
  }
  else
  {
    unsigned int v5 = v7;
    while (*v5 != a4)
    {
      if (++v5 == v8)
      {
        unsigned int v5 = v8;
        break;
      }
    }
    if (v5 == v8)
    {
      a4 = *v7;
LABEL_10:
      int v8 = v7;
      operator delete(v7);
      return a4;
    }
  }
  if (v7) {
    goto LABEL_10;
  }
  return a4;
}

void sub_6D7B84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_6D7BA0(uint64_t a1, int **a2, uint64_t *a3, unint64_t **a4)
{
  uint64_t v6 = a1;
  a4[1] = *a4;
  __int16 v81 = 0;
  char v82 = 0;
  uint64_t v83 = 0;
  sub_6D97A8(a1, a2, (uint64_t)a3, (uint64_t)&v81);
  uint64_t v7 = v81;
  long long v79 = v82;
  if (v81 == v82) {
    goto LABEL_90;
  }
  uint64_t v78 = v6;
  do
  {
    unint64_t v9 = *v7;
    if (*v7 == -1 || !sub_6D8104(v6, a2, a3, *v7)) {
      goto LABEL_69;
    }
    char v10 = (int **)sub_5A7C34(a3, v9);
    int v11 = (unsigned __int16 *)((char *)*a2 - **a2);
    unsigned int v12 = *v11;
    if (*((unsigned char *)a2 + 38))
    {
      if (v12 >= 0x49)
      {
        unsigned int v13 = v11[36];
        if (v13) {
          goto LABEL_14;
        }
      }
    }
    else if (v12 >= 0x4B)
    {
      unsigned int v13 = v11[37];
      if (v13)
      {
LABEL_14:
        __int16 v14 = *(_WORD *)((char *)*a2 + v13);
        int16x4_t v15 = (char *)*v10;
        double v16 = (unsigned __int16 *)((char *)*v10 - **v10);
        unsigned int v17 = *v16;
        if (*((unsigned char *)v10 + 38)) {
          goto LABEL_19;
        }
        goto LABEL_15;
      }
    }
    __int16 v14 = -1;
    int16x4_t v15 = (char *)*v10;
    double v16 = (unsigned __int16 *)((char *)*v10 - **v10);
    unsigned int v17 = *v16;
    if (*((unsigned char *)v10 + 38))
    {
LABEL_19:
      if (v17 >= 0x4B)
      {
        unsigned int v18 = v16[37];
        if (v18) {
          goto LABEL_21;
        }
      }
      goto LABEL_22;
    }
LABEL_15:
    if (v17 >= 0x49)
    {
      unsigned int v18 = v16[36];
      if (v18)
      {
LABEL_21:
        int v19 = *(unsigned __int16 *)&v15[v18];
        goto LABEL_23;
      }
    }
LABEL_22:
    int v19 = 0xFFFF;
LABEL_23:
    unsigned __int16 v20 = v14 + 18000;
    unsigned __int16 v21 = v14 - 18000;
    if ((unsigned __int16)(v20 >> 5) < 0x465u) {
      unsigned __int16 v21 = v20;
    }
    int v22 = v19 - v21;
    if (v22 > 18000) {
      v22 -= 36000;
    }
    if (v22 >= -17999) {
      int v23 = v22;
    }
    else {
      int v23 = v22 + 36000;
    }
    uint64_t v24 = (int **)sub_5A7C34(a3, v9);
    double v25 = sub_6D82EC(v6, a2, v24);
    double v26 = fabs((double)v23 / 100.0);
    double v27 = fabs(v25);
    if (v27 >= v26) {
      double v27 = v26;
    }
    if (v27 <= *(double *)(v6 + 1064)
      || (uint64_t v28 = (unsigned __int16 *)((char *)*a2 - **a2), *v28 < 0x2Fu)
      || (uint64_t v29 = v28[23]) == 0
      || ((v30 = *((unsigned __int8 *)*a2 + v29), BOOL v31 = v30 > 0x2A, v32 = (1 << v30) & 0x50426810004, !v31)
        ? (BOOL v33 = v32 == 0)
        : (BOOL v33 = 1),
          v33))
    {
      if (v27 <= *(double *)(v6 + 1056)
        || (double v34 = (unsigned __int16 *)((char *)*a2 - **a2), *v34 >= 0x2Fu)
        && (uint64_t v35 = v34[23]) != 0
        && ((v36 = *((unsigned __int8 *)*a2 + v35), BOOL v31 = v36 > 0x2A, v37 = (1 << v36) & 0x50426810004, !v31)
          ? (BOOL v38 = v37 == 0)
          : (BOOL v38 = 1),
            !v38))
      {
        long long v40 = a4[1];
        unint64_t v39 = (unint64_t)a4[2];
        if ((unint64_t)v40 < v39)
        {
          unint64_t *v40 = v9;
          uint64_t v41 = (uint64_t)(v40 + 1);
LABEL_68:
          a4[1] = (unint64_t *)v41;
LABEL_69:
          long long v60 = a4[1];
          unint64_t v59 = (unint64_t)a4[2];
          if ((unint64_t)v60 >= v59)
          {
            long long v61 = *a4;
            uint64_t v62 = (char *)v60 - (char *)*a4;
            uint64_t v63 = v62 >> 3;
            unint64_t v64 = (v62 >> 3) + 1;
            if (v64 >> 61) {
              sub_2E00();
            }
            uint64_t v65 = v59 - (void)v61;
            if (v65 >> 2 > v64) {
              unint64_t v64 = v65 >> 2;
            }
            if ((unint64_t)v65 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v66 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v66 = v64;
            }
            if (v66)
            {
              if (v66 >> 61) {
                sub_188D718();
              }
              uint64_t v67 = operator new(8 * v66);
              uint64_t v68 = (unint64_t *)&v67[8 * v63];
              *uint64_t v68 = v9;
              uint64_t v8 = (uint64_t)(v68 + 1);
              if (v60 == v61)
              {
LABEL_87:
                *a4 = v68;
                a4[1] = (unint64_t *)v8;
                a4[2] = (unint64_t *)&v67[8 * v66];
                if (v61) {
                  operator delete(v61);
                }
                goto LABEL_4;
              }
            }
            else
            {
              uint64_t v67 = 0;
              uint64_t v68 = (unint64_t *)(8 * v63);
              *(void *)(8 * v63) = v9;
              uint64_t v8 = 8 * v63 + 8;
              if (v60 == v61) {
                goto LABEL_87;
              }
            }
            unint64_t v69 = (char *)(v60 - 1) - (char *)v61;
            if (v69 < 0x58) {
              goto LABEL_99;
            }
            if ((unint64_t)((char *)v60 - &v67[v62]) < 0x20) {
              goto LABEL_99;
            }
            uint64_t v70 = (v69 >> 3) + 1;
            uint64_t v71 = 8 * (v70 & 0x3FFFFFFFFFFFFFFCLL);
            uint64_t v72 = &v60[v71 / 0xFFFFFFFFFFFFFFF8];
            uint64_t v68 = (unint64_t *)((char *)v68 - v71);
            long long v73 = &v67[8 * v63 - 16];
            long long v74 = v60 - 2;
            uint64_t v75 = v70 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              long long v76 = *(_OWORD *)v74;
              *(v73 - 1) = *((_OWORD *)v74 - 1);
              *long long v73 = v76;
              v73 -= 2;
              v74 -= 4;
              v75 -= 4;
            }
            while (v75);
            long long v60 = v72;
            if (v70 != (v70 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_99:
              do
              {
                unint64_t v77 = *--v60;
                *--uint64_t v68 = v77;
              }
              while (v60 != v61);
            }
            goto LABEL_87;
          }
          unint64_t *v60 = v9;
          uint64_t v8 = (uint64_t)(v60 + 1);
LABEL_4:
          a4[1] = (unint64_t *)v8;
          uint64_t v6 = v78;
          goto LABEL_5;
        }
        uint64_t v42 = *a4;
        uint64_t v43 = (char *)v40 - (char *)*a4;
        uint64_t v44 = v43 >> 3;
        unint64_t v45 = (v43 >> 3) + 1;
        if (v45 >> 61) {
          sub_2E00();
        }
        uint64_t v46 = v39 - (void)v42;
        if (v46 >> 2 > v45) {
          unint64_t v45 = v46 >> 2;
        }
        if ((unint64_t)v46 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v47 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v47 = v45;
        }
        if (v47)
        {
          if (v47 >> 61) {
            sub_188D718();
          }
          double v48 = operator new(8 * v47);
          int16x4_t v49 = (unint64_t *)&v48[8 * v44];
          *int16x4_t v49 = v9;
          uint64_t v41 = (uint64_t)(v49 + 1);
          if (v40 == v42) {
            goto LABEL_66;
          }
LABEL_60:
          unint64_t v50 = (char *)(v40 - 1) - (char *)v42;
          if (v50 < 0x58) {
            goto LABEL_100;
          }
          if ((unint64_t)((char *)v40 - &v48[v43]) < 0x20) {
            goto LABEL_100;
          }
          uint64_t v51 = (v50 >> 3) + 1;
          uint64_t v52 = 8 * (v51 & 0x3FFFFFFFFFFFFFFCLL);
          long long v53 = &v40[v52 / 0xFFFFFFFFFFFFFFF8];
          int16x4_t v49 = (unint64_t *)((char *)v49 - v52);
          uint64_t v54 = &v48[8 * v44 - 16];
          long long v55 = v40 - 2;
          uint64_t v56 = v51 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            long long v57 = *(_OWORD *)v55;
            *(v54 - 1) = *((_OWORD *)v55 - 1);
            *uint64_t v54 = v57;
            v54 -= 2;
            v55 -= 4;
            v56 -= 4;
          }
          while (v56);
          long long v40 = v53;
          if (v51 != (v51 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_100:
            do
            {
              unint64_t v58 = *--v40;
              *--int16x4_t v49 = v58;
            }
            while (v40 != v42);
          }
        }
        else
        {
          double v48 = 0;
          int16x4_t v49 = (unint64_t *)(8 * v44);
          *(void *)(8 * v44) = v9;
          uint64_t v41 = 8 * v44 + 8;
          if (v40 != v42) {
            goto LABEL_60;
          }
        }
LABEL_66:
        *a4 = v49;
        a4[1] = (unint64_t *)v41;
        a4[2] = (unint64_t *)&v48[8 * v47];
        if (v42) {
          operator delete(v42);
        }
        goto LABEL_68;
      }
    }
LABEL_5:
    ++v7;
  }
  while (v7 != v79);
  uint64_t v7 = v81;
LABEL_90:
  if (v7)
  {
    char v82 = v7;
    operator delete(v7);
  }
}

void sub_6D80D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6D8104(uint64_t a1, int **a2, uint64_t *a3, unint64_t a4)
{
  double v27 = (int **)sub_5A7C34(a3, a4);
  double v7 = sub_6D82EC(a1, a2, v27);
  uint64_t v8 = *a3;
  uint64_t v9 = a3[1];
  if (*a3 == v9) {
    return 0;
  }
  double v10 = fabs(v7);
  while (1)
  {
    uint64_t v11 = *(void *)(a1 + 880);
    uint64_t v12 = *(void *)(v8 + 32);
    unsigned int v13 = (int *)sub_2D5D58(v11, v12 & 0xFFFFFFFFFFFFLL);
    if (*(unsigned char *)(v11 + 7772))
    {
      __int16 v14 = sub_2DB8E0(v11 + 3896, v12, 0);
      int16x4_t v15 = &v14[-*(int *)v14];
      if (*(unsigned __int16 *)v15 < 5u)
      {
        uint64_t v16 = 0;
      }
      else
      {
        uint64_t v16 = *((unsigned __int16 *)v15 + 2);
        if (v16) {
          v16 += (uint64_t)&v14[*(unsigned int *)&v14[v16]];
        }
      }
      unsigned int v17 = (int *)(v16
                  + 4 * (unsigned __int16)((v12 ^ 0x1000000000000uLL) >> 32)
                  + 4
                  + *(unsigned int *)(v16 + 4 * (unsigned __int16)((v12 ^ 0x1000000000000uLL) >> 32) + 4));
    }
    else
    {
      unsigned int v17 = 0;
    }
    unsigned int v18 = (int *)sub_2E5C38(v11, v12 & 0xFFFFFFFFFFFFLL, 1);
    v28[0] = v13;
    v28[1] = v17;
    v28[2] = v18;
    v28[3] = v19;
    int v29 = v12;
    __int16 v30 = (v12 ^ 0x1000000000000uLL) >> 32;
    BOOL v31 = ((v12 ^ 0x1000000000000) & 0xFF000000000000) != 0;
    double v20 = sub_6D82EC(a1, v28, v27);
    int v22 = (unsigned __int16 *)((char *)v28[0] - *v28[0]);
    unsigned int v23 = *v22;
    if (v31)
    {
      if (v23 < 0xB) {
        goto LABEL_4;
      }
      unsigned int v24 = v22[5];
      if (!v24 || (*(int *)((char *)v28[0] + v24) & 2) == 0) {
        goto LABEL_4;
      }
    }
    else
    {
      if (v23 < 0xB) {
        goto LABEL_4;
      }
      unsigned int v25 = v22[5];
      if (!v25 || (*(int *)((char *)v28[0] + v25) & 1) == 0) {
        goto LABEL_4;
      }
    }
    v21.i16[0] = *(_WORD *)(a1 + 1320);
    if (fabs(v20) + (double)vmovl_s16(v21).i32[0] < v10) {
      return 1;
    }
LABEL_4:
    v8 += 40;
    if (v8 == v9) {
      return 0;
    }
  }
}

double sub_6D82EC(uint64_t a1, int **a2, int **a3)
{
  if (*(unsigned char *)(a1 + 904))
  {
    uint64_t v3 = a2[1];
    unsigned int v4 = (unsigned __int16 *)((char *)v3 - *v3);
    unsigned int v5 = *v4;
    if (*((unsigned char *)a2 + 38))
    {
      if (v5 < 5) {
        goto LABEL_16;
      }
      unsigned int v6 = v4[2];
      if (!v4[2]) {
        goto LABEL_16;
      }
    }
    else if (v5 < 9 || (unsigned int v6 = v4[4]) == 0)
    {
LABEL_16:
      __int16 v10 = 0;
      uint64_t v11 = a3[1];
      uint64_t v12 = (unsigned __int16 *)((char *)v11 - *v11);
      unsigned int v13 = *v12;
      if (*((unsigned char *)a3 + 38)) {
        goto LABEL_17;
      }
LABEL_13:
      if (v13 < 5) {
        goto LABEL_19;
      }
      unsigned int v14 = v12[2];
      if (!v14) {
        goto LABEL_19;
      }
      goto LABEL_29;
    }
    __int16 v10 = *(_WORD *)((char *)v3 + v6);
    uint64_t v11 = a3[1];
    uint64_t v12 = (unsigned __int16 *)((char *)v11 - *v11);
    unsigned int v13 = *v12;
    if (*((unsigned char *)a3 + 38))
    {
LABEL_17:
      if (v13 < 9 || (unsigned int v14 = v12[4]) == 0)
      {
LABEL_19:
        int v15 = 0;
        goto LABEL_31;
      }
      goto LABEL_29;
    }
    goto LABEL_13;
  }
  double v7 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v8 = *v7;
  if (*((unsigned char *)a2 + 38))
  {
    if (v8 < 0x49) {
      goto LABEL_26;
    }
    unsigned int v9 = v7[36];
    if (!v7[36]) {
      goto LABEL_26;
    }
  }
  else if (v8 < 0x4B || (unsigned int v9 = v7[37]) == 0)
  {
LABEL_26:
    __int16 v10 = -1;
    uint64_t v11 = *a3;
    uint64_t v16 = (unsigned __int16 *)((char *)*a3 - **a3);
    unsigned int v17 = *v16;
    if (*((unsigned char *)a3 + 38)) {
      goto LABEL_27;
    }
LABEL_23:
    if (v17 >= 0x49)
    {
      unsigned int v14 = v16[36];
      if (v14) {
        goto LABEL_29;
      }
    }
    goto LABEL_30;
  }
  __int16 v10 = *(_WORD *)((char *)*a2 + v9);
  uint64_t v11 = *a3;
  uint64_t v16 = (unsigned __int16 *)((char *)*a3 - **a3);
  unsigned int v17 = *v16;
  if (!*((unsigned char *)a3 + 38)) {
    goto LABEL_23;
  }
LABEL_27:
  if (v17 >= 0x4B)
  {
    unsigned int v14 = v16[37];
    if (v14)
    {
LABEL_29:
      int v15 = *(unsigned __int16 *)((char *)v11 + v14);
      goto LABEL_31;
    }
  }
LABEL_30:
  int v15 = 0xFFFF;
LABEL_31:
  unsigned __int16 v18 = v10 + 18000;
  unsigned __int16 v19 = v10 - 18000;
  if ((unsigned __int16)(v18 >> 5) < 0x465u) {
    unsigned __int16 v19 = v18;
  }
  int v20 = v15 - v19;
  if (v20 > 18000) {
    v20 -= 36000;
  }
  if (v20 < -17999) {
    v20 += 36000;
  }
  return (double)v20 / 100.0;
}

BOOL sub_6D848C(uint64_t a1, int **a2, int **a3)
{
  uint64_t v3 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v4 = *v3;
  if (*((unsigned char *)a2 + 38))
  {
    if (v4 >= 0x47)
    {
      unsigned int v5 = v3[35];
      if (v5)
      {
        int v6 = 2;
LABEL_8:
        BOOL v7 = (*(int *)((char *)*a2 + v5) & v6) != 0;
        goto LABEL_10;
      }
    }
  }
  else if (v4 >= 0x47)
  {
    unsigned int v5 = v3[35];
    if (v5)
    {
      int v6 = 1;
      goto LABEL_8;
    }
  }
  BOOL v7 = 0;
LABEL_10:
  unsigned int v8 = (char *)*a3;
  unsigned int v9 = (unsigned __int16 *)((char *)*a3 - **a3);
  unsigned int v10 = *v9;
  if (*((unsigned char *)a3 + 38))
  {
    if (v10 >= 0x47)
    {
      unsigned int v11 = v9[35];
      if (v11) {
        return v7 ^ ((*(_DWORD *)&v8[v11] & 2) != 0) ^ 1;
      }
    }
  }
  else if (v10 >= 0x47)
  {
    unsigned int v13 = v9[35];
    if (v13) {
      return v7 ^ ((*(_DWORD *)&v8[v13] & 1) != 0) ^ 1;
    }
  }
  return !v7;
}

BOOL sub_6D855C(uint64_t a1, int **a2)
{
  uint64_t v2 = (char *)*a2;
  uint64_t v3 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v4 = *v3;
  if (*((unsigned char *)a2 + 38))
  {
    if (v4 >= 0x47)
    {
      unsigned int v5 = v3[35];
      if (v5) {
        return (*(_DWORD *)&v2[v5] & 2) != 0;
      }
    }
  }
  else if (v4 >= 0x47)
  {
    unsigned int v7 = v3[35];
    if (v7) {
      return (*(_DWORD *)&v2[v7] & 1) != 0;
    }
  }
  return 0;
}

BOOL sub_6D85C0(uint64_t a1, int **a2)
{
  uint64_t v2 = (char *)*a2;
  uint64_t v3 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v4 = *v3;
  if (*((unsigned char *)a2 + 38) == 1)
  {
    if (v4 >= 0x47)
    {
      unsigned int v5 = v3[35];
      if (v5) {
        return (*(_DWORD *)&v2[v5] & 1) != 0;
      }
    }
  }
  else if (v4 >= 0x47)
  {
    unsigned int v7 = v3[35];
    if (v7) {
      return (*(_DWORD *)&v2[v7] & 2) != 0;
    }
  }
  return 0;
}

BOOL sub_6D862C(void *a1, int **a2)
{
  unsigned int v4 = (char *)*a2;
  unsigned int v5 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v6 = *v5;
  if (*((unsigned char *)a2 + 38))
  {
    if (v6 >= 0xB)
    {
      uint64_t v7 = v5[5];
      if (v7)
      {
        int v8 = *(_DWORD *)&v4[v7];
        if ((v8 & 2) != 0 && (v8 & 1) == 0)
        {
LABEL_68:
          long long v53 = *((_OWORD *)a2 + 1);
          long long v68 = *(_OWORD *)a2;
          long long v69 = v53;
          unint64_t v54 = (unint64_t)a2[4];
          unint64_t v70 = v54;
          uint64_t v55 = a1[110];
          uint64_t v56 = sub_2D5D58(v55, v54 & 0xFFFFFFFFFFFFLL);
          if (*(unsigned char *)(v55 + 7772))
          {
            long long v57 = sub_2DB8E0(v55 + 3896, v54, 0);
            unint64_t v58 = &v57[-*(int *)v57];
            if (*(unsigned __int16 *)v58 < 5u)
            {
              uint64_t v59 = 0;
            }
            else
            {
              uint64_t v59 = *((unsigned __int16 *)v58 + 2);
              if (v59) {
                v59 += (uint64_t)&v57[*(unsigned int *)&v57[v59]];
              }
            }
            uint64_t v60 = v59
                + 4 * (unsigned __int16)((v54 ^ 0x1000000000000) >> 32)
                + 4
                + *(unsigned int *)(v59 + 4 * (unsigned __int16)((v54 ^ 0x1000000000000) >> 32) + 4);
          }
          else
          {
            uint64_t v60 = 0;
          }
          *(void *)&long long v65 = v56;
          *((void *)&v65 + 1) = v60;
          *(void *)&long long v66 = sub_2E5C38(v55, v54 & 0xFFFFFFFFFFFFLL, 1);
          *((void *)&v66 + 1) = v61;
          LODWORD(v67) = v54;
          WORD2(v67) = (v54 ^ 0x1000000000000) >> 32;
          BYTE6(v67) = ((v54 ^ 0x1000000000000) & 0xFF000000000000) != 0;
          goto LABEL_19;
        }
      }
    }
  }
  else if (v6 >= 0xB)
  {
    uint64_t v9 = v5[5];
    if (v9)
    {
      int v10 = *(_DWORD *)&v4[v9];
      if ((v10 & 1) != 0 && (v10 & 2) == 0) {
        goto LABEL_68;
      }
    }
  }
  uint64_t v11 = a1[110];
  unint64_t v12 = (unint64_t)a2[4];
  uint64_t v13 = sub_2D5D58(v11, v12 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v11 + 7772))
  {
    unsigned int v14 = sub_2DB8E0(v11 + 3896, v12, 0);
    int v15 = &v14[-*(int *)v14];
    if (*(unsigned __int16 *)v15 < 5u)
    {
      uint64_t v16 = 0;
    }
    else
    {
      uint64_t v16 = *((unsigned __int16 *)v15 + 2);
      if (v16) {
        v16 += (uint64_t)&v14[*(unsigned int *)&v14[v16]];
      }
    }
    uint64_t v17 = v16
        + 4 * (unsigned __int16)((v12 ^ 0x1000000000000) >> 32)
        + 4
        + *(unsigned int *)(v16 + 4 * (unsigned __int16)((v12 ^ 0x1000000000000) >> 32) + 4);
  }
  else
  {
    uint64_t v17 = 0;
  }
  *(void *)&long long v68 = v13;
  *((void *)&v68 + 1) = v17;
  *(void *)&long long v69 = sub_2E5C38(v11, v12 & 0xFFFFFFFFFFFFLL, 1);
  *((void *)&v69 + 1) = v18;
  LODWORD(v70) = v12;
  WORD2(v70) = (v12 ^ 0x1000000000000) >> 32;
  BYTE6(v70) = ((v12 ^ 0x1000000000000) & 0xFF000000000000) != 0;
  long long v19 = *((_OWORD *)a2 + 1);
  long long v65 = *(_OWORD *)a2;
  long long v66 = v19;
  uint64_t v67 = a2[4];
LABEL_19:
  sub_6D8B2C((uint64_t)a1, (int **)&v68, 1, a1 + 156, 1, (uint64_t)&v62);
  uint64_t v20 = v62;
  if (v62 == 0x7FFFFFFFFFFFFFFFLL) {
    goto LABEL_45;
  }
  int16x4_t v21 = v63;
  int v22 = v64;
  sub_6D8B2C((uint64_t)a1, (int **)&v65, 0, a1 + 156, 1, (uint64_t)&v62);
  if (v62 == 0x7FFFFFFFFFFFFFFFLL) {
    goto LABEL_45;
  }
  unsigned int v23 = (unsigned __int16 *)((char *)v21 - *v21);
  if (*v23 >= 0x2Fu && (uint64_t v24 = v23[23]) != 0)
  {
    unsigned int v25 = *((unsigned __int8 *)v21 + v24);
    BOOL v26 = v25 > 0x2F;
    unint64_t v27 = (0xE2E040048000uLL >> v25) & 1;
    if (v26) {
      char v28 = 0;
    }
    else {
      char v28 = v27;
    }
    int v29 = v64;
    __int16 v30 = (unsigned __int16 *)((char *)v63 - *v63);
    if (*v30 < 0x2Fu) {
      goto LABEL_36;
    }
  }
  else
  {
    char v28 = 0;
    int v29 = v64;
    __int16 v30 = (unsigned __int16 *)((char *)v63 - *v63);
    if (*v30 < 0x2Fu) {
      goto LABEL_36;
    }
  }
  uint64_t v31 = v30[23];
  if (v31)
  {
    unsigned int v32 = *((unsigned __int8 *)v63 + v31);
    BOOL v26 = v32 > 0x2F;
    uint64_t v33 = (1 << v32) & 0xE2E040048000;
    BOOL v34 = v26 || v33 == 0;
    if (!v34)
    {
      if ((v28 & 1) == 0) {
        goto LABEL_45;
      }
      goto LABEL_37;
    }
  }
LABEL_36:
  if (v28) {
    goto LABEL_45;
  }
LABEL_37:
  uint64_t v35 = (unsigned __int16 *)(v68 - *(int *)v68);
  if (*v35 >= 9u && (uint64_t v36 = v35[4]) != 0) {
    uint64_t v37 = *(unsigned int *)(v68 + v36);
  }
  else {
    uint64_t v37 = 0;
  }
  BOOL v34 = (v22 | v29) == 0;
  uint64_t v38 = 156;
  if (v34) {
    uint64_t v38 = 157;
  }
  if (v62 + v20 + v37 < a1[v38]) {
    return 1;
  }
LABEL_45:
  sub_6D8B2C((uint64_t)a1, (int **)&v68, 1, a1 + 158, 0, (uint64_t)&v62);
  BOOL result = 0;
  uint64_t v40 = v62;
  if (v62 == 0x7FFFFFFFFFFFFFFFLL) {
    return result;
  }
  uint64_t v41 = v63;
  sub_6D8B2C((uint64_t)a1, (int **)&v65, 0, a1 + 158, 0, (uint64_t)&v62);
  BOOL result = 0;
  if (v62 == 0x7FFFFFFFFFFFFFFFLL) {
    return result;
  }
  uint64_t v42 = (unsigned __int16 *)((char *)v41 - *v41);
  if (*v42 < 0x2Fu)
  {
    LOBYTE(v43) = 0;
    unint64_t v45 = (unsigned __int16 *)((char *)v63 - *v63);
    if (*v45 < 0x2Fu) {
      goto LABEL_61;
    }
  }
  else
  {
    unint64_t v43 = v42[23];
    if (v43)
    {
      unsigned int v44 = *((unsigned __int8 *)v41 + v43);
      BOOL v26 = v44 > 0x2F;
      unint64_t v43 = (0xE2E040048000uLL >> v44) & 1;
      if (v26) {
        LOBYTE(v43) = 0;
      }
    }
    unint64_t v45 = (unsigned __int16 *)((char *)v63 - *v63);
    if (*v45 < 0x2Fu) {
      goto LABEL_61;
    }
  }
  uint64_t v46 = v45[23];
  if (v46)
  {
    unsigned int v47 = *((unsigned __int8 *)v63 + v46);
    BOOL v26 = v47 > 0x2F;
    uint64_t v48 = (1 << v47) & 0xE2E040048000;
    if (!v26 && v48 != 0)
    {
      if (v43) {
        goto LABEL_62;
      }
      return 0;
    }
  }
LABEL_61:
  if (v43) {
    return 0;
  }
LABEL_62:
  unint64_t v50 = (unsigned __int16 *)(v68 - *(int *)v68);
  if (*v50 >= 9u && (uint64_t v51 = v50[4]) != 0) {
    uint64_t v52 = *(unsigned int *)(v68 + v51);
  }
  else {
    uint64_t v52 = 0;
  }
  return v62 + v40 + v52 < a1[158];
}

void sub_6D8B2C(uint64_t a1@<X0>, int **a2@<X1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v8 = 0;
  *(void *)(a1 + 856) = *(void *)(a1 + 848);
  *(void *)(a1 + 832) = *(void *)(a1 + 824);
  *(_DWORD *)(a1 + 872) = 0;
  *(void *)(a1 + 776) = *(void *)(a1 + 768);
  do
  {
    uint64_t v10 = a1 + v8;
    if (*(void *)(a1 + v8 + 16))
    {
      unint64_t v11 = *(void *)(v10 + 24);
      if (v11 >= 0x80)
      {
        uint64_t v9 = (void *)(a1 + v8);
        operator delete(*(void **)(a1 + v8));
        v9[5] = 0;
        void *v9 = &unk_20E1710;
        v9[1] = 0;
        v9[2] = 0;
        v9[3] = 0;
      }
      else if (v11)
      {
        *(void *)(v10 + 16) = 0;
        memset(*(void **)(a1 + v8), 128, v11 + 8);
        *(unsigned char *)(*(void *)(a1 + v8) + v11) = -1;
        unint64_t v12 = *(void *)(v10 + 24);
        if (v12 == 7) {
          uint64_t v13 = 6;
        }
        else {
          uint64_t v13 = v12 - (v12 >> 3);
        }
        *(void *)(a1 + v8 + 40) = v13 - *(void *)(v10 + 16);
      }
    }
    v8 += 48;
  }
  while (v8 != 768);
  LOBYTE(v14) = 0;
  *(void *)(a1 + 800) = *(void *)(a1 + 792);
  *(_DWORD *)(a1 + 816) = 0;
  long long v121 = a2[4];
  int v15 = (unsigned __int16 *)((char *)*a2 - **a2);
  int v16 = a3;
  if (*v15 >= 0x2Fu)
  {
    uint64_t v14 = v15[23];
    if (v15[23]) {
      LOBYTE(v14) = (*((unsigned char *)*a2 + v14) & 0xF7) == 34;
    }
  }
  *(void *)uint64_t v137 = 0;
  long long v17 = *((_OWORD *)a2 + 1);
  *(_OWORD *)&v137[8] = *(_OWORD *)a2;
  *(_OWORD *)&v137[24] = v17;
  unsigned int v138 = a2[4];
  char v139 = v14;
  sub_6DB1E8(a1, (unint64_t *)&v121, (uint64_t)v137);
  BOOL v134 = 0;
  unint64_t v135 = 0;
  uint64_t v136 = 0;
  unint64_t v131 = 0;
  unint64_t v132 = 0;
  uint64_t v133 = 0;
  __p = 0;
  unint64_t v129 = 0;
  uint64_t v130 = 0;
  while (*(_DWORD *)(a1 + 872))
  {
    unint64_t v18 = *(void *)(a1 + 768) + ((unint64_t)**(unsigned int **)(a1 + 824) << 6);
    long long v19 = *(_OWORD *)(v18 + 16);
    long long v20 = *(_OWORD *)(v18 + 32);
    *(void *)&v137[32] = *(void *)(v18 + 48);
    *(_OWORD *)uint64_t v137 = v19;
    *(_OWORD *)&v137[16] = v20;
    uint64_t v119 = *(void *)(v18 + 8);
    int v114 = *(unsigned __int8 *)(v18 + 56);
    sub_51325C(a1);
    sub_2E44A4(*(void *)(a1 + 880), (uint64_t)v137, &v134);
    unint64_t v21 = 126 - 2 * __clz(0xCCCCCCCCCCCCCCCDLL * (((char *)v135 - (unsigned char *)v134) >> 3));
    long long v121 = (int *)v137;
    __int16 v122 = (int *)a1;
    if (v135 == v134) {
      uint64_t v22 = 0;
    }
    else {
      uint64_t v22 = v21;
    }
    sub_6E1308((uint64_t)v134, v135, (uint64_t)&v121, v22, 1);
    if (v16)
    {
      long long v121 = 0;
      __int16 v122 = 0;
      uint64_t v123 = 0;
      sub_6D7BA0(a1, (int **)v137, (uint64_t *)&v134, (unint64_t **)&v121);
      if (v121 != v122)
      {
        uint64_t v24 = v121;
        while (*(void *)v24 != -1)
        {
          v24 += 2;
          if (v24 == v122)
          {
            uint64_t v24 = v122;
            break;
          }
        }
        if (v24 == v122)
        {
          unint64_t v25 = *(void *)v121;
LABEL_33:
          __int16 v122 = v121;
          operator delete(v121);
          unint64_t v132 = v131;
          BOOL v26 = (int **)v134;
          uint64_t v120 = v135;
          if (v134 == v135) {
            continue;
          }
LABEL_34:
          char v116 = 0;
LABEL_41:
          unsigned int v32 = (unsigned __int16 *)((char *)*v26 - **v26);
          if (*v32 >= 0x2Fu)
          {
            uint64_t v27 = v32[23];
            if (v27)
            {
              unsigned int v28 = *((unsigned __int8 *)*v26 + v27);
              BOOL v29 = v28 > 0x36;
              uint64_t v30 = (1 << v28) & 0x44000000000008;
              if (!v29 && v30 != 0)
              {
LABEL_40:
                v26 += 5;
                if (v26 == v120)
                {
                  if ((v116 & 1) == 0)
                  {
                    BOOL v106 = v131;
                    unint64_t v105 = v132;
                    if (v131 != v132)
                    {
                      do
                      {
                        long long v121 = (int *)v106[5];
                        sub_6DB6A0(a1, (unint64_t *)&v121, (uint64_t)v106);
                        v106 += 7;
                      }
                      while (v106 != v105);
                    }
                  }
                  continue;
                }
                goto LABEL_41;
              }
            }
          }
          if (v16)
          {
            if (v25 != -1)
            {
              uint64_t v33 = *(void *)(sub_66F838(&v134, v25) + 32);
              unint64_t v34 = (unint64_t)v26[4];
              if ((v33 & 0xFFFFFFFFFFFFLL) == (v34 & 0xFFFFFFFFFFFFLL))
              {
                BOOL v35 = (v33 & 0xFF000000000000) == 0;
                goto LABEL_46;
              }
            }
LABEL_95:
            int v37 = 0;
            uint64_t v38 = *(int **)v137;
            unint64_t v39 = (unsigned __int16 *)(*(void *)v137 - (int)**(_DWORD **)v137);
            unsigned int v40 = *v39;
            if (v137[38]) {
              goto LABEL_96;
            }
LABEL_89:
            if (v40 < 0x4B) {
              goto LABEL_102;
            }
            unsigned int v68 = v39[37];
            if (!v68) {
              goto LABEL_102;
            }
LABEL_98:
            __int16 v70 = *(_WORD *)((char *)v38 + v68);
            int v71 = *((unsigned __int8 *)v26 + 38);
            uint64_t v72 = *v26;
            uint64_t v73 = **v26;
            long long v74 = (unsigned __int16 *)((char *)*v26 - v73);
            unsigned int v75 = *v74;
            if (!*((unsigned char *)v26 + 38)) {
              goto LABEL_99;
            }
LABEL_103:
            if (v75 >= 0x4B)
            {
              unsigned int v76 = v74[37];
              if (v74[37]) {
                goto LABEL_105;
              }
            }
LABEL_106:
            int v77 = 0xFFFF;
            goto LABEL_107;
          }
          uint64_t v41 = *(void *)(a1 + 880);
          unint64_t v42 = (unint64_t)v26[4];
          unint64_t v43 = v42 & 0xFFFFFFFFFFFFLL;
          unsigned int v44 = (int *)sub_2D5D58(v41, v42 & 0xFFFFFFFFFFFFLL);
          if (*(unsigned char *)(v41 + 7772))
          {
            unint64_t v45 = sub_2DB8E0(v41 + 3896, v42, 0);
            uint64_t v46 = &v45[-*(int *)v45];
            if (*(unsigned __int16 *)v46 < 5u)
            {
              uint64_t v47 = 0;
            }
            else
            {
              uint64_t v47 = *((unsigned __int16 *)v46 + 2);
              if (v47) {
                v47 += (uint64_t)&v45[*(unsigned int *)&v45[v47]];
              }
            }
            uint64_t v48 = v47
                + 4 * (unsigned __int16)((v42 ^ 0x1000000000000) >> 32)
                + 4
                + *(unsigned int *)(v47 + 4 * (unsigned __int16)((v42 ^ 0x1000000000000) >> 32) + 4);
            if (*(unsigned char *)(v41 + 7773))
            {
LABEL_59:
              uint64_t v49 = v41 + 3896;
              unint64_t v50 = sub_2E5E08(v49, v42, 1);
              if (v50)
              {
                uint64_t v51 = &v50[-*(int *)v50];
                if (*(unsigned __int16 *)v51 >= 0xBu)
                {
                  uint64_t v52 = *((unsigned __int16 *)v51 + 5);
                  if (!*((_WORD *)v51 + 5)) {
                    goto LABEL_187;
                  }
                  long long v53 = &v50[v52 + *(unsigned int *)&v50[v52]];
                  if (*(_DWORD *)v53 > HIDWORD(v43))
                  {
                    unint64_t v54 = &v53[8 * HIDWORD(v43)];
                    unsigned int v57 = *((_DWORD *)v54 + 1);
                    uint64_t v56 = v54 + 4;
                    unsigned int v55 = v57;
                    if (v57)
                    {
                      unint64_t v58 = sub_2E5F98(v49, v55, 1);
                      if (v58)
                      {
                        uint64_t v59 = &v58[-*(int *)v58];
                        unsigned int v60 = *(unsigned __int16 *)v59;
                        if ((*((unsigned char *)v56 + 6) & 2) == 0)
                        {
                          if (v60 < 7)
                          {
                            uint64_t v61 = 0;
                            uint64_t v64 = 0;
                            uint64_t v52 = 0;
                            if (v60 >= 5) {
                              goto LABEL_179;
                            }
                            goto LABEL_77;
                          }
                          uint64_t v61 = (_DWORD *)*((unsigned __int16 *)v59 + 3);
                          if (*((_WORD *)v59 + 3)) {
                            uint64_t v61 = (_DWORD *)((char *)v61 + (void)v58 + *(unsigned int *)((char *)v61 + (void)v58));
                          }
LABEL_179:
                          int v62 = *((unsigned __int16 *)v59 + 2);
                          if (*((_WORD *)v59 + 2))
                          {
LABEL_180:
                            uint64_t v63 = &v58[v62 + *(unsigned int *)&v58[v62]];
                            if (v61)
                            {
LABEL_181:
                              uint64_t v103 = *((unsigned __int16 *)v56 + 2);
                              if (*v61 > v103)
                              {
                                uint64_t v52 = (uint64_t)&v61[v103 + 1] + v61[v103 + 1];
                                if (!v63)
                                {
LABEL_187:
                                  uint64_t v64 = 0;
                                  goto LABEL_77;
                                }
LABEL_185:
                                uint64_t v104 = *((unsigned __int16 *)v56 + 2);
                                if (*(_DWORD *)v63 <= v104) {
                                  goto LABEL_187;
                                }
                                uint64_t v64 = (uint64_t)&v63[4 * v104 + 4 + *(unsigned int *)&v63[4 * v104 + 4]];
LABEL_77:
                                long long v121 = v44;
                                __int16 v122 = (int *)v48;
                                uint64_t v123 = v52;
                                uint64_t v124 = v64;
                                int v125 = v42;
                                __int16 v126 = (v42 ^ 0x1000000000000) >> 32;
                                BOOL v127 = ((v42 ^ 0x1000000000000) & 0xFF000000000000) != 0;
                                sub_2E44A4(*(void *)(a1 + 880), (uint64_t)&v121, &__p);
                                unint64_t v65 = 126 - 2 * __clz(0xCCCCCCCCCCCCCCCDLL * (((char *)v129 - (unsigned char *)__p) >> 3));
                                unint64_t v140 = (unint64_t *)&v121;
                                unint64_t v141 = (unint64_t *)a1;
                                if (v129 == __p) {
                                  uint64_t v66 = 0;
                                }
                                else {
                                  uint64_t v66 = v65;
                                }
                                sub_6E1308((uint64_t)__p, v129, (uint64_t)&v140, v66, 1);
                                unint64_t v140 = 0;
                                unint64_t v141 = 0;
                                uint64_t v142 = 0;
                                sub_6D7BA0(a1, &v121, (uint64_t *)&__p, &v140);
                                int v16 = a3;
                                if (v140 == v141) {
                                  goto LABEL_86;
                                }
                                uint64_t v67 = v140;
                                while (*v67 != -1)
                                {
                                  if (++v67 == v141)
                                  {
                                    uint64_t v67 = v141;
                                    break;
                                  }
                                }
                                if (v67 != v141)
                                {
LABEL_86:
                                  if (v140)
                                  {
                                    unint64_t v141 = v140;
                                    operator delete(v140);
                                  }
                                  int v37 = 0;
                                  unint64_t v25 = -1;
                                  uint64_t v38 = *(int **)v137;
                                  unint64_t v39 = (unsigned __int16 *)(*(void *)v137 - (int)**(_DWORD **)v137);
                                  unsigned int v40 = *v39;
                                  if (v137[38]) {
                                    goto LABEL_96;
                                  }
                                  goto LABEL_89;
                                }
                                unint64_t v25 = *v140;
                                unint64_t v141 = v140;
                                operator delete(v140);
                                if (v25 == -1) {
                                  goto LABEL_95;
                                }
                                uint64_t v69 = *(void *)(sub_66F838(&__p, v25) + 32);
                                unint64_t v34 = *(void *)&v137[32];
                                if ((v69 & 0xFFFFFFFFFFFFLL) != (*(void *)&v137[32] & 0xFFFFFFFFFFFFLL)) {
                                  goto LABEL_95;
                                }
                                BOOL v35 = (v69 & 0xFF000000000000) == 0x1000000000000;
LABEL_46:
                                int v36 = v35;
                                int v37 = v36 ^ HIWORD(v34) & 1;
                                uint64_t v38 = *(int **)v137;
                                unint64_t v39 = (unsigned __int16 *)(*(void *)v137 - (int)**(_DWORD **)v137);
                                unsigned int v40 = *v39;
                                if (!v137[38]) {
                                  goto LABEL_89;
                                }
LABEL_96:
                                if (v40 >= 0x49)
                                {
                                  unsigned int v68 = v39[36];
                                  if (v68) {
                                    goto LABEL_98;
                                  }
                                }
LABEL_102:
                                __int16 v70 = -1;
                                int v71 = *((unsigned __int8 *)v26 + 38);
                                uint64_t v72 = *v26;
                                uint64_t v73 = **v26;
                                long long v74 = (unsigned __int16 *)((char *)*v26 - v73);
                                unsigned int v75 = *v74;
                                if (*((unsigned char *)v26 + 38)) {
                                  goto LABEL_103;
                                }
LABEL_99:
                                if (v75 < 0x49) {
                                  goto LABEL_106;
                                }
                                unsigned int v76 = v74[36];
                                if (!v74[36]) {
                                  goto LABEL_106;
                                }
LABEL_105:
                                int v77 = *(unsigned __int16 *)((char *)v72 + v76);
LABEL_107:
                                uint64_t v78 = -v73;
                                unsigned __int16 v79 = v70 + 18000;
                                unsigned __int16 v80 = v70 - 18000;
                                if ((unsigned __int16)(v79 >> 5) < 0x465u) {
                                  unsigned __int16 v80 = v79;
                                }
                                int v81 = v77 - v80;
                                if (v81 > 18000) {
                                  v81 -= 36000;
                                }
                                if (v81 < -17999) {
                                  v81 += 36000;
                                }
                                double v82 = (double)v81 / 100.0;
                                if (a5)
                                {
                                  if (v75 < 0x2F)
                                  {
                                    if (v75 < 0xB) {
                                      goto LABEL_151;
                                    }
                                  }
                                  else if (v74[23] && *((unsigned char *)v72 + v74[23]) == 23)
                                  {
                                    if (v37) {
                                      goto LABEL_151;
                                    }
LABEL_132:
                                    if (v74[5])
                                    {
                                      int v86 = *(int *)((char *)v72 + v74[5]);
                                      if (v71) {
                                        int v87 = 2;
                                      }
                                      else {
                                        int v87 = 1;
                                      }
                                      int v88 = ((v86 & v87) != 0) ^ ((unsigned __int16)(v86 & 0x8000) >> 15);
                                    }
                                    else
                                    {
                                      int v88 = 0;
                                    }
                                    if (v88) {
                                      BOOL v89 = v82 < 0.0;
                                    }
                                    else {
                                      BOOL v89 = v82 > 0.0;
                                    }
                                    if (v89)
                                    {
                                      long long v121 = (int *)sub_2E4738((int **)v137);
                                      if (!sub_3CCE68(a1 + 888, (unsigned int **)&v121))
                                      {
                                        if (v114)
                                        {
                                          BOOL v108 = 1;
                                          uint64_t v109 = a6;
                                        }
                                        else
                                        {
                                          uint64_t v110 = (unsigned __int16 *)((char *)*v26 - **v26);
                                          uint64_t v109 = a6;
                                          BOOL v108 = *v110 >= 0x2Fu
                                              && (uint64_t v111 = v110[23]) != 0
                                              && (*((unsigned char *)*v26 + v111) & 0xF7) == 34;
                                        }
                                        *(void *)uint64_t v109 = v119;
                                        long long v112 = *((_OWORD *)v26 + 1);
                                        *(_OWORD *)(v109 + 8) = *(_OWORD *)v26;
                                        *(_OWORD *)(v109 + 24) = v112;
                                        *(void *)(v109 + 40) = v26[4];
                                        *(unsigned char *)(v109 + 48) = v108;
                                        uint64_t v107 = (int **)__p;
                                        if (__p) {
                                          goto LABEL_193;
                                        }
                                        goto LABEL_194;
                                      }
                                      uint64_t v38 = *(int **)v137;
                                    }
                                    unsigned int v90 = (unsigned __int16 *)((char *)v38 - *v38);
                                    if (*v90 >= 0x2Fu && (uint64_t v91 = v90[23]) != 0)
                                    {
                                      unsigned int v92 = *((unsigned __int8 *)v38 + v91);
                                      BOOL v29 = v92 > 0x2A;
                                      unint64_t v93 = (0x2FBD97EFFFBuLL >> v92) & 1;
                                      if (v29) {
                                        LOBYTE(v93) = 1;
                                      }
                                    }
                                    else
                                    {
                                      LOBYTE(v93) = 1;
                                    }
                                    v116 |= v93 | a3 ^ 1;
                                    uint64_t v72 = *v26;
                                    uint64_t v78 = -(uint64_t)**v26;
                                    goto LABEL_151;
                                  }
                                  if (v74[5] && !(v37 & 1 | ((*((unsigned char *)v72 + v74[5]) & 4) == 0))) {
                                    goto LABEL_132;
                                  }
                                  goto LABEL_151;
                                }
                                if (v71)
                                {
                                  if (v75 < 0xB) {
                                    goto LABEL_151;
                                  }
                                  unsigned int v83 = v74[5];
                                  if (!v74[5]) {
                                    goto LABEL_151;
                                  }
                                  int v84 = 1;
                                  int v85 = 2;
                                }
                                else
                                {
                                  if (v75 < 0xB) {
                                    goto LABEL_151;
                                  }
                                  unsigned int v83 = v74[5];
                                  if (!v74[5]) {
                                    goto LABEL_151;
                                  }
                                  int v84 = 2;
                                  int v85 = 1;
                                }
                                if (((*(int *)((char *)v72 + v83) & v85) != 0) != ((*(int *)((char *)v72 + v83) & v84) != 0))
                                {
                                  LOWORD(v23) = *(_WORD *)(a1 + 1272);
                                  double v23 = (double)vmovl_s16(*(int16x4_t *)&v23).i32[0];
                                  if (!(v37 & 1 | (fabs(v82) <= v23))) {
                                    goto LABEL_132;
                                  }
                                }
LABEL_151:
                                if (*(unsigned __int16 *)((char *)v72 + v78) >= 9u && *(_WORD *)((char *)v72 + v78 + 8)) {
                                  uint64_t v94 = *(unsigned int *)((char *)v72 + *(unsigned __int16 *)((char *)v72 + v78 + 8));
                                }
                                else {
                                  uint64_t v94 = 0;
                                }
                                uint64_t v95 = v94 + v119;
                                long long v121 = (int *)(v94 + v119);
                                unsigned int v96 = *v26;
                                int v97 = (unsigned __int16 *)((char *)*v26 - **v26);
                                unsigned int v98 = *v97;
                                if (v16)
                                {
                                  if (*((unsigned char *)v26 + 38)) {
                                    goto LABEL_157;
                                  }
LABEL_162:
                                  if (v98 < 0xB || !v97[5] || (*(int *)((char *)v96 + v97[5]) & 1) == 0) {
                                    goto LABEL_40;
                                  }
                                }
                                else
                                {
                                  if (*((unsigned char *)v26 + 38)) {
                                    goto LABEL_162;
                                  }
LABEL_157:
                                  if (v98 < 0xB || !v97[5] || (*(int *)((char *)v96 + v97[5]) & 2) == 0) {
                                    goto LABEL_40;
                                  }
                                }
                                if (v95 <= *a4)
                                {
                                  if ((int v99 = (unsigned __int16 *)((char *)v38 - *v38), *v99 >= 0x2Fu)
                                    && (uint64_t v100 = v99[23]) != 0
                                    && (unsigned int v101 = *((unsigned __int8 *)v38 + v100), v101 <= 0x2A)
                                    && ((1 << v101) & 0x50426810004) != 0
                                    || v37)
                                  {
                                    if (v114)
                                    {
                                      LOBYTE(v102) = 1;
                                    }
                                    else if (*v97 < 0x2Fu)
                                    {
                                      LOBYTE(v102) = 0;
                                    }
                                    else
                                    {
                                      uint64_t v102 = v97[23];
                                      if (v97[23]) {
                                        LOBYTE(v102) = (*((unsigned char *)v96 + v102) & 0xF7) == 34;
                                      }
                                    }
                                    LOBYTE(v140) = v102;
                                    sub_6DB4E8((char **)&v131, (long long *)v26, &v121, (char *)&v140);
                                  }
                                }
                                goto LABEL_40;
                              }
                            }
LABEL_184:
                            uint64_t v52 = 0;
                            if (!v63) {
                              goto LABEL_187;
                            }
                            goto LABEL_185;
                          }
LABEL_74:
                          uint64_t v63 = 0;
                          if (v61) {
                            goto LABEL_181;
                          }
                          goto LABEL_184;
                        }
                        if (v60 >= 5)
                        {
                          uint64_t v61 = (_DWORD *)*((unsigned __int16 *)v59 + 2);
                          if (*((_WORD *)v59 + 2)) {
                            uint64_t v61 = (_DWORD *)((char *)v61 + (void)v58 + *(unsigned int *)((char *)v61 + (void)v58));
                          }
                          if (v60 >= 7)
                          {
                            int v62 = *((unsigned __int16 *)v59 + 3);
                            if (*((_WORD *)v59 + 3)) {
                              goto LABEL_180;
                            }
                          }
                          goto LABEL_74;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          else
          {
            uint64_t v48 = 0;
            if (*(unsigned char *)(v41 + 7773)) {
              goto LABEL_59;
            }
          }
          uint64_t v64 = 0;
          uint64_t v52 = 0;
          goto LABEL_77;
        }
      }
      unint64_t v25 = -1;
      if (v121) {
        goto LABEL_33;
      }
    }
    else
    {
      unint64_t v25 = -1;
    }
    unint64_t v132 = v131;
    BOOL v26 = (int **)v134;
    uint64_t v120 = v135;
    if (v134 != v135) {
      goto LABEL_34;
    }
  }
  *(void *)a6 = 0x7FFFFFFFFFFFFFFFLL;
  *(_OWORD *)(a6 + 8) = 0u;
  *(_OWORD *)(a6 + 24) = 0u;
  *(_DWORD *)(a6 + 40) = 0;
  *(_WORD *)(a6 + 44) = -1;
  *(unsigned char *)(a6 + 46) = 0;
  *(unsigned char *)(a6 + 48) = 0;
  uint64_t v107 = (int **)__p;
  if (__p)
  {
LABEL_193:
    unint64_t v129 = v107;
    operator delete(v107);
  }
LABEL_194:
  if (v131)
  {
    unint64_t v132 = v131;
    operator delete(v131);
  }
  if (v134)
  {
    unint64_t v135 = (int **)v134;
    operator delete(v134);
  }
}

void sub_6D9708(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29)
{
  if (__p) {
    operator delete(__p);
  }
  if (a22)
  {
    operator delete(a22);
    uint64_t v30 = a25;
    if (!a25)
    {
LABEL_5:
      uint64_t v31 = a28;
      if (!a28) {
        goto LABEL_6;
      }
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v30 = a25;
    if (!a25) {
      goto LABEL_5;
    }
  }
  operator delete(v30);
  uint64_t v31 = a28;
  if (!a28) {
LABEL_6:
  }
    _Unwind_Resume(exception_object);
LABEL_9:
  operator delete(v31);
  _Unwind_Resume(exception_object);
}

void sub_6D97A8(uint64_t a1, int **a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 8) = *(void *)a4;
  if (*(void *)a3 == *(void *)(a3 + 8)) {
    return;
  }
  if (sub_6DA620((double *)a1, a2, a3))
  {
    __p = 0;
    sub_A4710(a4, &__p);
    return;
  }
  sub_6DA894(a1, a2, (void *)a3, (unint64_t **)a4);
  if (*(void *)a4 != *(void *)(a4 + 8)) {
    return;
  }
  uint64_t v8 = *(int ***)a3;
  uint64_t v9 = *(int ***)(a3 + 8);
  __p = (void *)a1;
  uint64_t v147 = a2;
  if (v8 == v9)
  {
    unint64_t v11 = v8;
LABEL_12:
    uint64_t v10 = sub_6E4238(v11, v8, a1, a2);
    unint64_t v11 = *(int ***)a3;
    uint64_t v8 = *(int ***)(a3 + 8);
    goto LABEL_13;
  }
  while (!sub_6E3FAC((uint64_t *)&__p, v8))
  {
    v8 += 5;
    if (v8 == v9)
    {
      uint64_t v8 = v9;
      break;
    }
  }
  uint64_t v10 = v8;
  unint64_t v11 = *(int ***)a3;
  uint64_t v8 = *(int ***)(a3 + 8);
  if (v10 == v8) {
    goto LABEL_12;
  }
LABEL_13:
  if (v10 == v8) {
    unint64_t v12 = v11;
  }
  else {
    unint64_t v12 = v10;
  }
  unint64_t v13 = (unint64_t)v12[4];
  uint64_t v14 = v13 & 0xFF000000000000;
  int v15 = (int *)sub_2D5D58(*(void *)(a1 + 880), v13 & 0xFFFFFFFFFFFFLL);
  int v16 = (unsigned __int16 *)((char *)v15 - *v15);
  unsigned int v17 = *v16;
  if (v14)
  {
    if (v17 < 0x29) {
      goto LABEL_65;
    }
    unsigned int v18 = v16[20];
    if (!v18) {
      goto LABEL_65;
    }
    goto LABEL_22;
  }
  if (v17 >= 0x27)
  {
    unsigned int v18 = v16[19];
    if (v18)
    {
LABEL_22:
      if (*(int *)((char *)v15 + v18 + *(int *)((char *)v15 + v18)) != 1) {
        goto LABEL_65;
      }
      uint64_t v19 = *(void *)(a3 + 8) - *(void *)a3;
      if (!v19) {
        goto LABEL_65;
      }
      uint64_t v20 = 0;
      unint64_t v21 = 0;
      uint64_t v22 = v19 / 40;
      do
      {
        double v23 = (int **)sub_5A7C34((void *)a3, v21);
        unint64_t v24 = (unint64_t)v23[4];
        unint64_t v25 = (unint64_t)v12[4];
        if ((v24 & 0xFFFFFFFFFFFFLL) == (v25 & 0xFFFFFFFFFFFFLL)
          && ((v24 & 0xFF000000000000) == 0) != (HIWORD(v25) & 1))
        {
          goto LABEL_25;
        }
        if (fabs(sub_6D82EC(a1, a2, v23)) > *(double *)(a1 + 912)) {
          break;
        }
        BOOL v26 = (unsigned __int16 *)((char *)*a2 - **a2);
        unsigned int v27 = *v26;
        if (*((unsigned char *)a2 + 38))
        {
          if (v27 >= 0x47)
          {
            unsigned int v28 = v26[35];
            if (v28)
            {
              int v29 = 2;
LABEL_36:
              BOOL v30 = (*(int *)((char *)*a2 + v28) & v29) != 0;
              goto LABEL_38;
            }
          }
        }
        else if (v27 >= 0x47)
        {
          unsigned int v28 = v26[35];
          if (v28)
          {
            int v29 = 1;
            goto LABEL_36;
          }
        }
        BOOL v30 = 0;
LABEL_38:
        uint64_t v31 = *v23;
        unsigned int v32 = (unsigned __int16 *)((char *)*v23 - **v23);
        unsigned int v33 = *v32;
        if (!*((unsigned char *)v23 + 38))
        {
          if (v33 >= 0x47)
          {
            unsigned int v35 = v32[35];
            if (v35) {
              LOBYTE(v30) = v30 ^ ((*(int *)((char *)v31 + v35) & 1) != 0);
            }
          }
LABEL_46:
          if (v30) {
            goto LABEL_25;
          }
          goto LABEL_47;
        }
        if (v33 < 0x47) {
          goto LABEL_46;
        }
        unsigned int v34 = v32[35];
        if (!v34) {
          goto LABEL_46;
        }
        if ((v30 ^ ((*(int *)((char *)v31 + v34) & 2) != 0))) {
          goto LABEL_25;
        }
LABEL_47:
        unint64_t v36 = (unint64_t)v12[4];
        uint64_t v37 = v36 & 0xFF000000000000;
        uint64_t v38 = (int *)sub_2D5D58(*(void *)(a1 + 880), v36 & 0xFFFFFFFFFFFFLL);
        unint64_t v39 = (unsigned __int16 *)((char *)v38 - *v38);
        unsigned int v40 = *v39;
        if (v37)
        {
          if (v40 >= 0x29)
          {
            unsigned int v41 = v39[20];
            if (v41) {
              goto LABEL_53;
            }
          }
        }
        else if (v40 >= 0x27)
        {
          unsigned int v41 = v39[19];
          if (v41)
          {
LABEL_53:
            int v42 = *(int *)((char *)v38 + v41 + *(int *)((char *)v38 + v41));
            goto LABEL_55;
          }
        }
        int v42 = 0;
LABEL_55:
        unint64_t v43 = (unint64_t)v23[4];
        uint64_t v44 = v43 & 0xFF000000000000;
        unint64_t v45 = (int *)sub_2D5D58(*(void *)(a1 + 880), v43 & 0xFFFFFFFFFFFFLL);
        uint64_t v46 = (unsigned __int16 *)((char *)v45 - *v45);
        unsigned int v47 = *v46;
        if (v44)
        {
          if (v47 >= 0x29)
          {
            unsigned int v48 = v46[20];
            if (v48) {
              goto LABEL_61;
            }
          }
        }
        else if (v47 >= 0x27)
        {
          unsigned int v48 = v46[19];
          if (v48)
          {
LABEL_61:
            if (v42)
            {
              int v49 = *(int *)((char *)v45 + v48 + *(int *)((char *)v45 + v48));
              if (v49)
              {
                if (v49 - v42 >= *(_DWORD *)(a1 + 1080)) {
                  unint64_t v12 = (int **)(*(void *)a3 + v20);
                }
              }
            }
          }
        }
LABEL_25:
        ++v21;
        v20 += 40;
      }
      while (v22 != v21);
    }
  }
LABEL_65:
  unint64_t v149 = 0xCCCCCCCCCCCCCCCDLL * (((uint64_t)v12 - *(void *)a3) >> 3);
  double v50 = sub_6D82EC(a1, a2, v12);
  uint64_t v51 = *v12;
  uint64_t v52 = (unsigned __int16 *)((char *)*v12 - **v12);
  unsigned int v53 = *v52;
  if (v53 < 0x2F) {
    goto LABEL_75;
  }
  if (!v52[23] || (unsigned int v54 = *((unsigned __int8 *)v51 + v52[23]), v54 > 0x2C))
  {
LABEL_72:
    if (v53 >= 0x43 && v52[33])
    {
      int v55 = *((unsigned __int8 *)v51 + v52[33]);
      goto LABEL_76;
    }
LABEL_75:
    int v55 = 0;
    goto LABEL_76;
  }
  if (((1 << v54) & 0x180000105240) == 0)
  {
    if (!*((unsigned char *)v51 + v52[23]))
    {
      int v55 = *(_DWORD *)(a1 + 1480);
      goto LABEL_76;
    }
    goto LABEL_72;
  }
  int v55 = *(_DWORD *)(a1 + 1484);
LABEL_76:
  uint64_t v56 = *a2;
  unsigned int v57 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v58 = *v57;
  if (v58 < 0x2F) {
    goto LABEL_86;
  }
  if (v57[23])
  {
    unsigned int v59 = *((unsigned __int8 *)v56 + v57[23]);
    if (v59 <= 0x2C)
    {
      if (((1 << v59) & 0x180000105240) != 0)
      {
        LODWORD(v60) = *(_DWORD *)(a1 + 1484);
        goto LABEL_87;
      }
      if (!*((unsigned char *)v56 + v57[23]))
      {
        LODWORD(v60) = *(_DWORD *)(a1 + 1480);
        goto LABEL_87;
      }
    }
  }
  if (v58 < 0x43)
  {
LABEL_86:
    LODWORD(v60) = 0;
  }
  else
  {
    uint64_t v60 = v57[33];
    if (v57[33]) {
      LODWORD(v60) = *((unsigned __int8 *)v56 + v60);
    }
  }
LABEL_87:
  double v61 = fabs(v50);
  if (v55 != v60) {
    goto LABEL_126;
  }
  if (v53 < 0x2F)
  {
    LOBYTE(v62) = 0;
  }
  else
  {
    unint64_t v62 = v52[23];
    if (v52[23])
    {
      unsigned int v63 = *((unsigned __int8 *)v51 + v62);
      BOOL v64 = v63 > 0x2A;
      unint64_t v62 = (0x50426810004uLL >> v63) & 1;
      if (v64) {
        LOBYTE(v62) = 0;
      }
    }
  }
  if (v58 < 0x2F
    || !v57[23]
    || ((v65 = *((unsigned __int8 *)v56 + v57[23]), BOOL v64 = v65 > 0x2A, v66 = (1 << v65) & 0x50426810004, !v64)
      ? (BOOL v67 = v66 == 0)
      : (BOOL v67 = 1),
        v67))
  {
    if (v62) {
      goto LABEL_126;
    }
  }
  else if ((v62 & 1) == 0)
  {
    goto LABEL_126;
  }
  v69 = v53 >= 0x2F && (uint64_t v68 = v52[23]) != 0 && *((unsigned char *)v51 + v68) == 28;
  if (v58 >= 0x2F && v57[23]) {
    v69 ^= *((unsigned char *)v56 + v57[23]) == 28;
  }
  if ((v69 & 1) == 0 && sub_6D848C(a1, v12, a2))
  {
    int v70 = sub_6906B4((char **)v12);
    if (v70 == sub_6906B4((char **)a2))
    {
      int v71 = (unsigned __int16 *)((char *)*v12 - **v12);
      if (*v71 >= 0xBu && (uint64_t v72 = v71[5]) != 0) {
        int v73 = (*((unsigned __int8 *)*v12 + v72 + 1) >> 4) & 1;
      }
      else {
        int v73 = 0;
      }
      long long v74 = (unsigned __int16 *)((char *)*a2 - **a2);
      if (*v74 >= 0xBu && (uint64_t v75 = v74[5]) != 0)
      {
        if (v73 != (*((unsigned char *)*a2 + v75 + 1) & 0x10) >> 4) {
          goto LABEL_126;
        }
      }
      else if (v73)
      {
        goto LABEL_126;
      }
      if (v61 <= *(double *)(a1 + 960)) {
        goto LABEL_261;
      }
      uint64_t v76 = sub_6DACA4(*(int ***)a3, *(int ***)(a3 + 8), a1, a2);
      if (v61 <= *(double *)(a1 + 928))
      {
        uint64_t v77 = v76;
        if ((sub_6DAF14(a1, a2, (char **)v12) & 1) != 0 || v77 == 1) {
          goto LABEL_261;
        }
      }
    }
  }
LABEL_126:
  uint64_t v78 = *a2;
  unsigned __int16 v79 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v80 = *v79;
  if (v80 >= 0x2F && v79[23])
  {
    unsigned int v81 = *((unsigned __int8 *)v78 + v79[23]);
    BOOL v64 = v81 > 0x2A;
    uint64_t v82 = (1 << v81) & 0x50426810004;
    if (!v64 && v82 != 0)
    {
      if (*((unsigned char *)a2 + 38))
      {
        if (v80 < 0x49 || (unsigned int v84 = v79[36]) == 0)
        {
LABEL_139:
          __int16 v85 = -1;
LABEL_140:
          int v86 = (unsigned __int16 *)((char *)*v12 - **v12);
          unsigned int v87 = *v86;
          if (*((unsigned char *)v12 + 38))
          {
            if (v87 < 0x4B || (unsigned int v88 = v86[37]) == 0)
            {
LABEL_147:
              int v89 = 0xFFFF;
LABEL_148:
              unsigned __int16 v90 = v85 + 18000;
              unsigned __int16 v91 = v85 - 18000;
              if ((unsigned __int16)(v90 >> 5) < 0x465u) {
                unsigned __int16 v91 = v90;
              }
              int v92 = v89 - v91;
              if (v92 > 18000) {
                v92 -= 36000;
              }
              if (v92 < -17999) {
                v92 += 36000;
              }
              if (fabs((double)v92 / 100.0) > *(double *)(a1 + 928)) {
                goto LABEL_155;
              }
LABEL_261:
              sub_A4710(a4, &v149);
              return;
            }
          }
          else
          {
            if (v87 < 0x49) {
              goto LABEL_147;
            }
            unsigned int v88 = v86[36];
            if (!v88) {
              goto LABEL_147;
            }
          }
          int v89 = *(unsigned __int16 *)((char *)*v12 + v88);
          goto LABEL_148;
        }
      }
      else
      {
        if (v80 < 0x4B) {
          goto LABEL_139;
        }
        unsigned int v84 = v79[37];
        if (!v84) {
          goto LABEL_139;
        }
      }
      __int16 v85 = *(_WORD *)((char *)v78 + v84);
      goto LABEL_140;
    }
  }
LABEL_155:
  __p = 0;
  uint64_t v147 = 0;
  uint64_t v148 = 0;
  uint64_t v93 = *(void *)(a3 + 8) - *(void *)a3;
  if (!v93) {
    goto LABEL_258;
  }
  uint64_t v94 = 0;
  uint64_t v95 = 0;
  uint64_t v96 = v93 / 40;
  do
  {
    unint64_t v145 = (unint64_t)v95;
    double v97 = fabs(sub_6D82EC(a1, a2, (int **)(*(void *)a3 + v94)));
    double v98 = *(double *)(a1 + 936);
    int v99 = *(int ***)a3;
    uint64_t v100 = *a2;
    uint64_t v101 = **a2;
    if (v97 < v98)
    {
LABEL_182:
      int v114 = (unsigned __int16 *)((char *)v100 - v101);
      unsigned int v115 = *v114;
      if (*((unsigned char *)a2 + 38))
      {
        if (v115 >= 0x47)
        {
          unsigned int v116 = v114[35];
          if (v114[35])
          {
            int v117 = 2;
LABEL_189:
            BOOL v118 = (*(int *)((char *)v100 + v116) & v117) != 0;
            goto LABEL_191;
          }
        }
      }
      else if (v115 >= 0x47)
      {
        unsigned int v116 = v114[35];
        if (v114[35])
        {
          int v117 = 1;
          goto LABEL_189;
        }
      }
      BOOL v118 = 0;
LABEL_191:
      uint64_t v119 = v99[5 * v145];
      uint64_t v120 = (unsigned __int16 *)((char *)v119 - *v119);
      unsigned int v121 = *v120;
      if (BYTE6(v99[5 * v145 + 4]))
      {
        if (v121 >= 0x47 && v120[35])
        {
          if ((v118 ^ ((*(int *)((char *)v119 + v120[35]) & 2) != 0))) {
            goto LABEL_157;
          }
          goto LABEL_200;
        }
      }
      else if (v121 >= 0x47 && v120[35])
      {
        LOBYTE(v118) = v118 ^ ((*(int *)((char *)v119 + v120[35]) & 1) != 0);
      }
      if (v118) {
        goto LABEL_157;
      }
LABEL_200:
      if (v115 >= 0xB && (uint64_t v122 = v114[5]) != 0)
      {
        if ((*((unsigned char *)v100 + v122 + 1) & 0x10) != 0 || v121 <= 0xA)
        {
LABEL_208:
          if (sub_2E79EC(*(void *)(a1 + 880), (uint64_t)a2[4], (uint64_t)v99[5 * v145 + 4])) {
            sub_A4710((uint64_t)&__p, &v145);
          }
          goto LABEL_157;
        }
      }
      else if (v121 < 0xB)
      {
        goto LABEL_208;
      }
      if (v120[5] && (*((unsigned char *)v119 + v120[5] + 1) & 0x10) != 0) {
        goto LABEL_157;
      }
      goto LABEL_208;
    }
    uint64_t v102 = (char *)v100 - v101;
    unsigned int v103 = *(unsigned __int16 *)((char *)v100 - v101);
    if (*((unsigned char *)a2 + 38))
    {
      if (v103 >= 0x49)
      {
        unsigned int v104 = *((unsigned __int16 *)v102 + 36);
        if (v104) {
          goto LABEL_165;
        }
      }
    }
    else if (v103 >= 0x4B)
    {
      unsigned int v104 = *((unsigned __int16 *)v102 + 37);
      if (v104)
      {
LABEL_165:
        __int16 v105 = *(_WORD *)((char *)v100 + v104);
        goto LABEL_167;
      }
    }
    __int16 v105 = -1;
LABEL_167:
    BOOL v106 = v99[5 * v145];
    uint64_t v107 = (unsigned __int16 *)((char *)v106 - *v106);
    unsigned int v108 = *v107;
    if (BYTE6(v99[5 * v145 + 4]))
    {
      if (v108 >= 0x4B)
      {
        unsigned int v109 = v107[37];
        if (v109) {
          goto LABEL_173;
        }
      }
    }
    else if (v108 >= 0x49)
    {
      unsigned int v109 = v107[36];
      if (v109)
      {
LABEL_173:
        int v110 = *(unsigned __int16 *)((char *)v106 + v109);
        goto LABEL_175;
      }
    }
    int v110 = 0xFFFF;
LABEL_175:
    unsigned __int16 v111 = v105 + 18000;
    unsigned __int16 v112 = v105 - 18000;
    if ((unsigned __int16)(v111 >> 5) < 0x465u) {
      unsigned __int16 v112 = v111;
    }
    int v113 = v110 - v112;
    if (v113 > 18000) {
      v113 -= 36000;
    }
    if (v113 < -17999) {
      v113 += 36000;
    }
    if (fabs((double)v113 / 100.0) < v98) {
      goto LABEL_182;
    }
LABEL_157:
    uint64_t v95 = (unsigned int *)((char *)v95 + 1);
    v94 += 40;
  }
  while ((unsigned int *)v96 != v95);
  uint64_t v123 = (unsigned int **)__p;
  if (v147 - (unsigned char *)__p == 8)
  {
    sub_A4710(a4, __p);
    goto LABEL_271;
  }
  if (__p != v147)
  {
    uint64_t v124 = *(int ***)a3;
    int v125 = *a2;
    do
    {
      unint64_t v145 = (unint64_t)*v123;
      __int16 v126 = v124[5 * v145];
      BOOL v127 = (unsigned __int16 *)((char *)v126 - *v126);
      unsigned int v128 = *v127;
      if (v128 < 0x2F) {
        goto LABEL_229;
      }
      if (v127[23])
      {
        unsigned int v129 = *((unsigned __int8 *)v126 + v127[23]);
        if (v129 <= 0x2C)
        {
          if (((1 << v129) & 0x180000105240) != 0)
          {
            int v130 = *(_DWORD *)(a1 + 1484);
            unint64_t v131 = (unsigned __int16 *)((char *)v125 - *v125);
            unsigned int v132 = *v131;
            if (v132 < 0x2F) {
              goto LABEL_239;
            }
            goto LABEL_230;
          }
          if (!*((unsigned char *)v126 + v127[23]))
          {
            int v130 = *(_DWORD *)(a1 + 1480);
            unint64_t v131 = (unsigned __int16 *)((char *)v125 - *v125);
            unsigned int v132 = *v131;
            if (v132 < 0x2F) {
              goto LABEL_239;
            }
            goto LABEL_230;
          }
        }
      }
      if (v128 >= 0x43 && v127[33])
      {
        int v130 = *((unsigned __int8 *)v126 + v127[33]);
        unint64_t v131 = (unsigned __int16 *)((char *)v125 - *v125);
        unsigned int v132 = *v131;
        if (v132 < 0x2F) {
          goto LABEL_239;
        }
      }
      else
      {
LABEL_229:
        int v130 = 0;
        unint64_t v131 = (unsigned __int16 *)((char *)v125 - *v125);
        unsigned int v132 = *v131;
        if (v132 < 0x2F) {
          goto LABEL_239;
        }
      }
LABEL_230:
      if (v131[23])
      {
        unsigned int v133 = *((unsigned __int8 *)v125 + v131[23]);
        if (v133 <= 0x2C)
        {
          if (((1 << v133) & 0x180000105240) != 0)
          {
            LODWORD(v134) = *(_DWORD *)(a1 + 1484);
            goto LABEL_240;
          }
          if (!*((unsigned char *)v125 + v131[23]))
          {
            LODWORD(v134) = *(_DWORD *)(a1 + 1480);
            goto LABEL_240;
          }
        }
      }
      if (v132 < 0x43)
      {
LABEL_239:
        LODWORD(v134) = 0;
        goto LABEL_240;
      }
      uint64_t v134 = v131[33];
      if (v131[33]) {
        LODWORD(v134) = *((unsigned __int8 *)v125 + v134);
      }
LABEL_240:
      if (v130 != v134) {
        goto LABEL_215;
      }
      if (v128 >= 0x2F && v127[23])
      {
        int v135 = *((unsigned __int8 *)v126 + v127[23]);
        if (v132 < 0x2F) {
          goto LABEL_249;
        }
      }
      else
      {
        int v135 = 32;
        if (v132 < 0x2F) {
          goto LABEL_249;
        }
      }
      if (!v131[23])
      {
LABEL_249:
        if (v135 != 32) {
          goto LABEL_215;
        }
        goto LABEL_250;
      }
      if (v135 != *((unsigned __int8 *)v125 + v131[23])) {
        goto LABEL_215;
      }
LABEL_250:
      if (v128 >= 0xB && (uint64_t v136 = v127[5]) != 0)
      {
        int v137 = (*((unsigned __int8 *)v126 + v136 + 1) >> 4) & 1;
        if (v132 < 0xB) {
          goto LABEL_214;
        }
      }
      else
      {
        int v137 = 0;
        if (v132 < 0xB) {
          goto LABEL_214;
        }
      }
      if (!v131[5])
      {
LABEL_214:
        if ((v137 & 1) == 0) {
          goto LABEL_257;
        }
        goto LABEL_215;
      }
      if (v137 == (*((unsigned char *)v125 + v131[5] + 1) & 0x10) >> 4)
      {
LABEL_257:
        sub_A4710(a4, &v145);
        goto LABEL_271;
      }
LABEL_215:
      ++v123;
    }
    while (v123 != (unsigned int **)v147);
  }
LABEL_258:
  if (v61 <= *(double *)(a1 + 952)) {
    goto LABEL_270;
  }
  unint64_t v145 = sub_2E4738(a2);
  if (sub_3CCE68(a1 + 888, (unsigned int **)&v145))
  {
    unint64_t v145 = 0;
    sub_A4710(a4, &v145);
    goto LABEL_271;
  }
  if (v61 <= *(double *)(a1 + 976) && (sub_6D8104(a1, a2, (uint64_t *)a3, v149) & 1) == 0)
  {
LABEL_270:
    sub_A4710(a4, &v149);
    goto LABEL_271;
  }
  unsigned int v138 = sub_6DB09C(*(int ***)a3, *(int ***)(a3 + 8), a2);
  unint64_t v139 = 0xCCCCCCCCCCCCCCCDLL * (((uint64_t)v138 - *(void *)a3) >> 3);
  unint64_t v145 = v139;
  double v140 = sub_69BAF0(a2, v138);
  uint64_t v144 = a1;
  if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 3) >= 2
    && fabs(v140) <= *(double *)(a1 + 984)
    && (sub_6D8104(a1, a2, (uint64_t *)a3, v139) & 1) == 0
    && (!*(unsigned char *)(a1 + 1592) || (sub_6DB110(&v144, (uint64_t)a2, (uint64_t)v138) & 1) != 0))
  {
    unint64_t v141 = &v145;
LABEL_282:
    sub_A4710(a4, v141);
    goto LABEL_271;
  }
  if (*(void *)(a3 + 8) - *(void *)a3 == 40 && (sub_6DB110(&v144, (uint64_t)a2, (uint64_t)v12) & 1) != 0
    || v61 <= *(double *)(a1 + 944)
    && (BOOL v142 = sub_6DB184(a1, a2), v142 != sub_6DB184(a1, v12))
    && (sub_6D8104(a1, a2, (uint64_t *)a3, v149) & 1) == 0)
  {
    unint64_t v141 = &v149;
    goto LABEL_282;
  }
  if (fabs(sub_6D82EC(a1, a2, *(int ***)a3)) <= *(double *)(a1 + 912))
  {
    uint64_t v143 = 0;
    sub_A4710(a4, &v143);
  }
LABEL_271:
  if (__p)
  {
    uint64_t v147 = __p;
    operator delete(__p);
  }
}

void sub_6DA5E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_6DA620(double *a1, int **a2, uint64_t a3)
{
  uint64_t v3 = *(int ***)a3;
  if (*(void *)a3 == *(void *)(a3 + 8) || fabs(sub_6D82EC((uint64_t)a1, a2, *(int ***)a3)) > a1[114]) {
    return 0;
  }
  uint64_t v7 = *a2;
  uint64_t v8 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v9 = *v8;
  if (*((unsigned char *)a2 + 38))
  {
    if (v9 < 0x49) {
      goto LABEL_13;
    }
    unsigned int v10 = v8[36];
    if (!v8[36]) {
      goto LABEL_13;
    }
  }
  else if (v9 < 0x4B || (unsigned int v10 = v8[37]) == 0)
  {
LABEL_13:
    __int16 v11 = -1;
    int v12 = *((unsigned __int8 *)v3 + 38);
    unint64_t v13 = *v3;
    uint64_t v14 = (unsigned __int16 *)((char *)*v3 - **v3);
    unsigned int v15 = *v14;
    if (*((unsigned char *)v3 + 38)) {
      goto LABEL_14;
    }
LABEL_10:
    if (v15 >= 0x49)
    {
      unsigned int v16 = v14[36];
      if (v14[36]) {
        goto LABEL_16;
      }
    }
    goto LABEL_17;
  }
  __int16 v11 = *(_WORD *)((char *)v7 + v10);
  int v12 = *((unsigned __int8 *)v3 + 38);
  unint64_t v13 = *v3;
  uint64_t v14 = (unsigned __int16 *)((char *)*v3 - **v3);
  unsigned int v15 = *v14;
  if (!*((unsigned char *)v3 + 38)) {
    goto LABEL_10;
  }
LABEL_14:
  if (v15 >= 0x4B)
  {
    unsigned int v16 = v14[37];
    if (v14[37])
    {
LABEL_16:
      int v17 = *(unsigned __int16 *)((char *)v13 + v16);
      goto LABEL_18;
    }
  }
LABEL_17:
  int v17 = 0xFFFF;
LABEL_18:
  unsigned __int16 v18 = v11 + 18000;
  unsigned __int16 v19 = v11 - 18000;
  if ((unsigned __int16)(v18 >> 5) < 0x465u) {
    unsigned __int16 v19 = v18;
  }
  int v20 = v17 - v19;
  if (v20 > 18000) {
    v20 -= 36000;
  }
  if (v20 < -17999) {
    v20 += 36000;
  }
  if (fabs((double)v20 / 100.0) > a1[115]) {
    return 0;
  }
  if (!*((unsigned char *)a2 + 38))
  {
    if (v9 >= 0x47)
    {
      unsigned int v24 = v8[35];
      if (v24)
      {
        BOOL v22 = (*(int *)((char *)v7 + v24) & 1) != 0;
        BOOL v23 = v15 >= 0x47;
        if (v12) {
          goto LABEL_39;
        }
LABEL_33:
        if (v23)
        {
          unsigned int v25 = v14[35];
          if (v25)
          {
            if ((v22 ^ ((*(int *)((char *)v13 + v25)))) {
              return 0;
            }
            goto LABEL_45;
          }
        }
LABEL_44:
        if (v22) {
          return 0;
        }
        goto LABEL_45;
      }
    }
LABEL_38:
    BOOL v22 = 0;
    BOOL v23 = v15 >= 0x47;
    if (v12) {
      goto LABEL_39;
    }
    goto LABEL_33;
  }
  if (v9 < 0x47) {
    goto LABEL_38;
  }
  unsigned int v21 = v8[35];
  if (!v21) {
    goto LABEL_38;
  }
  BOOL v22 = (*(int *)((char *)v7 + v21) & 2) != 0;
  BOOL v23 = v15 >= 0x47;
  if (!v12) {
    goto LABEL_33;
  }
LABEL_39:
  if (!v23) {
    goto LABEL_44;
  }
  unsigned int v26 = v14[35];
  if (!v26) {
    goto LABEL_44;
  }
  if ((v22 ^ ((*(int *)((char *)v13 + v26) & 2) != 0))) {
    return 0;
  }
LABEL_45:
  if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 3) < 2) {
    return 1;
  }
  unsigned int v27 = (int **)sub_5A7C34((void *)a3, 1uLL);
  return fabs(sub_6D82EC((uint64_t)a1, a2, v27)) > a1[116];
}

void sub_6DA894(uint64_t a1, int **a2, void *a3, unint64_t **a4)
{
  unsigned int v4 = *a4;
  a4[1] = *a4;
  if (!*(unsigned char *)(a1 + 1586)) {
    return;
  }
  unsigned int v5 = a3;
  uint64_t v6 = a3[1] - *a3;
  if (!v6) {
    goto LABEL_58;
  }
  unint64_t v7 = 0;
  uint64_t v60 = a4;
  unint64_t v61 = 0xCCCCCCCCCCCCCCCDLL * (v6 >> 3);
  while (2)
  {
    unsigned int v9 = (int **)sub_5A7C34(v5, v7);
    double v10 = sub_6D82EC(a1, a2, v9);
    unint64_t v11 = sub_2E48C4(v9);
    if (fabs(v10) > *(double *)(a1 + 912)) {
      goto LABEL_6;
    }
    unint64_t v13 = *v60;
    int v12 = v60[1];
    if (*v60 == v12)
    {
      unsigned int v41 = v60;
      unint64_t v42 = (unint64_t)v60[2];
      if ((unint64_t)v13 >= v42) {
        goto LABEL_36;
      }
      goto LABEL_4;
    }
    int v14 = v11;
    unint64_t v15 = HIDWORD(v11);
    unsigned int v65 = v60[1];
    int v66 = v11;
    do
    {
      unsigned int v16 = (int **)sub_5A7C34(v5, *v13);
      int v17 = (char *)*v16;
      unsigned __int16 v18 = (unsigned __int16 *)((char *)*v16 - **v16);
      if (*((unsigned char *)v16 + 38))
      {
        if (v18[3])
        {
          unint64_t v19 = __ROR8__(*(void *)&v17[v18[3]], 32);
          unint64_t v20 = HIDWORD(v19);
        }
        else
        {
          unint64_t v22 = *(unsigned int *)&v17[v18[60]];
          unsigned int v23 = *((_DWORD *)v16 + 8);
          unint64_t v19 = v22 >> 16;
          unsigned int v24 = sub_511FC(v23);
          unint64_t v25 = v7;
          unsigned int v26 = v24 >> 1;
          char v27 = v24 & 0xFE;
          unsigned int v28 = v23 & ~(-1 << (v24 & 0xFE));
          int v29 = sub_51938(v28);
          int v30 = sub_51938(v28 >> 1);
          int v31 = v29 + (char)v22;
          int v32 = v30 + ((__int16)v22 >> 8);
          unsigned int v5 = a3;
          unsigned int v33 = (int)((((((v31 & ~(v31 >> 31)) - v31 + (v31 >> 31)) >> v26) + (v31 >> 31)) << v26)
                    + v31)
              % (1 << v26);
          unsigned int v34 = (int)((((((v32 & ~(v32 >> 31)) - v32 + (v32 >> 31)) >> v26) + (v32 >> 31)) << v26)
                    + v32)
              % (1 << v26);
          int v35 = -1 << v26;
          unint64_t v7 = v25;
          int v14 = v66;
          if (~v35 < v33) {
            unsigned int v36 = ~v35;
          }
          else {
            unsigned int v36 = v33;
          }
          if (~v35 < v34) {
            unsigned int v37 = ~v35;
          }
          else {
            unsigned int v37 = v34;
          }
          sub_518C8(v36, v37);
          LODWORD(v20) = v38 | (1 << v27);
          int v12 = v65;
        }
      }
      else
      {
        unsigned int v21 = *v18;
        if (v21 < 5) {
          goto LABEL_26;
        }
        if (v18[2])
        {
          unint64_t v19 = __ROR8__(*(void *)&v17[v18[2]], 32);
          unint64_t v20 = HIDWORD(v19);
          goto LABEL_28;
        }
        if (v21 >= 0x77 && (uint64_t v39 = v18[59]) != 0) {
          LODWORD(v19) = *(unsigned __int16 *)&v17[v39];
        }
        else {
LABEL_26:
        }
          LODWORD(v19) = 0;
        LODWORD(v20) = *((_DWORD *)v16 + 8);
      }
LABEL_28:
      if (v20 == v14 && v15 == v19) {
        goto LABEL_6;
      }
      ++v13;
    }
    while (v13 != v12);
    unsigned int v41 = v60;
    unint64_t v13 = v60[1];
    unint64_t v42 = (unint64_t)v60[2];
    if ((unint64_t)v13 < v42)
    {
LABEL_4:
      unint64_t *v13 = v7;
      uint64_t v8 = (uint64_t)(v13 + 1);
      goto LABEL_5;
    }
LABEL_36:
    unint64_t v43 = *v41;
    uint64_t v44 = (char *)v13 - (char *)*v41;
    uint64_t v45 = v44 >> 3;
    unint64_t v46 = (v44 >> 3) + 1;
    if (v46 >> 61) {
      sub_2E00();
    }
    uint64_t v47 = v42 - (void)v43;
    if (v47 >> 2 > v46) {
      unint64_t v46 = v47 >> 2;
    }
    if ((unint64_t)v47 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v48 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v48 = v46;
    }
    if (!v48)
    {
      int v49 = 0;
      double v50 = (unint64_t *)(8 * v45);
      *(void *)(8 * v45) = v7;
      uint64_t v8 = 8 * v45 + 8;
      if (v13 == v43) {
        goto LABEL_55;
      }
LABEL_47:
      unint64_t v51 = (char *)(v13 - 1) - (char *)v43;
      if (v51 >= 0x58)
      {
        if ((unint64_t)((char *)v13 - &v49[v44]) >= 0x20)
        {
          uint64_t v53 = (v51 >> 3) + 1;
          uint64_t v54 = 8 * (v53 & 0x3FFFFFFFFFFFFFFCLL);
          uint64_t v52 = &v13[v54 / 0xFFFFFFFFFFFFFFF8];
          double v50 = (unint64_t *)((char *)v50 - v54);
          int v55 = &v49[8 * v45 - 16];
          uint64_t v56 = v13 - 2;
          uint64_t v57 = v53 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            long long v58 = *(_OWORD *)v56;
            *(v55 - 1) = *((_OWORD *)v56 - 1);
            *int v55 = v58;
            v55 -= 2;
            v56 -= 4;
            v57 -= 4;
          }
          while (v57);
          if (v53 == (v53 & 0x3FFFFFFFFFFFFFFCLL)) {
            goto LABEL_55;
          }
        }
        else
        {
          uint64_t v52 = v13;
        }
      }
      else
      {
        uint64_t v52 = v13;
      }
      do
      {
        unint64_t v59 = *--v52;
        *--double v50 = v59;
      }
      while (v52 != v43);
      goto LABEL_55;
    }
    if (v48 >> 61) {
      sub_188D718();
    }
    int v49 = operator new(8 * v48);
    double v50 = (unint64_t *)&v49[8 * v45];
    *double v50 = v7;
    uint64_t v8 = (uint64_t)(v50 + 1);
    if (v13 != v43) {
      goto LABEL_47;
    }
LABEL_55:
    int *v41 = v50;
    v41[1] = (unint64_t *)v8;
    v41[2] = (unint64_t *)&v49[8 * v48];
    if (v43) {
      operator delete(v43);
    }
LABEL_5:
    v41[1] = (unint64_t *)v8;
LABEL_6:
    if (++v7 != v61) {
      continue;
    }
    break;
  }
  a4 = v60;
  unsigned int v4 = *v60;
  if ((unint64_t)((char *)v60[1] - (char *)*v60) <= 8) {
LABEL_58:
  }
    a4[1] = v4;
}

uint64_t sub_6DACA4(int **a1, int **a2, uint64_t a3, int **a4)
{
  if (a1 != a2)
  {
    unsigned int v4 = (char *)*a4;
    unsigned int v5 = (unsigned __int16 *)((char *)*a4 - **a4);
    unsigned int v6 = *v5;
    if (*((unsigned char *)a4 + 38))
    {
      if (v6 > 0x46)
      {
        uint64_t v7 = v5[35];
        if (v7)
        {
          uint64_t v8 = 0;
          int v9 = *(_DWORD *)&v4[v7];
          while (1)
          {
            unint64_t v11 = (unsigned __int16 *)((char *)*a1 - **a1);
            unsigned int v12 = *v11;
            if (*((unsigned char *)a1 + 38))
            {
              if (v12 >= 0x47)
              {
                unsigned int v13 = v11[35];
                if (v13)
                {
                  int v14 = 2;
LABEL_15:
                  BOOL v10 = (*(int *)((char *)*a1 + v13) & v14) != 0;
                  goto LABEL_7;
                }
              }
            }
            else if (v12 >= 0x47)
            {
              unsigned int v13 = v11[35];
              if (v13)
              {
                int v14 = 1;
                goto LABEL_15;
              }
            }
            BOOL v10 = 0;
LABEL_7:
            v8 += ((v9 & 2) == 0) ^ v10;
            a1 += 5;
            if (a1 == a2) {
              return v8;
            }
          }
        }
        uint64_t v8 = 0;
        while (1)
        {
          while (1)
          {
            char v27 = (unsigned __int16 *)((char *)*a1 - **a1);
            unsigned int v28 = *v27;
            if (*((unsigned char *)a1 + 38)) {
              break;
            }
            if (v28 >= 0x47)
            {
              unsigned int v29 = v27[35];
              if (v29)
              {
                int v30 = 1;
                goto LABEL_53;
              }
            }
LABEL_45:
            ++v8;
            a1 += 5;
            if (a1 == a2) {
              return v8;
            }
          }
          if (v28 < 0x47) {
            goto LABEL_45;
          }
          unsigned int v29 = v27[35];
          if (!v29) {
            goto LABEL_45;
          }
          int v30 = 2;
LABEL_53:
          v8 += (*(int *)((char *)*a1 + v29) & v30) == 0;
          a1 += 5;
          if (a1 == a2) {
            return v8;
          }
        }
      }
      uint64_t v8 = 0;
      while (1)
      {
        while (1)
        {
          unsigned int v23 = (unsigned __int16 *)((char *)*a1 - **a1);
          unsigned int v24 = *v23;
          if (*((unsigned char *)a1 + 38)) {
            break;
          }
          if (v24 >= 0x47)
          {
            unsigned int v25 = v23[35];
            if (v25)
            {
              int v26 = 1;
              goto LABEL_42;
            }
          }
LABEL_34:
          ++v8;
          a1 += 5;
          if (a1 == a2) {
            return v8;
          }
        }
        if (v24 < 0x47) {
          goto LABEL_34;
        }
        unsigned int v25 = v23[35];
        if (!v25) {
          goto LABEL_34;
        }
        int v26 = 2;
LABEL_42:
        v8 += (*(int *)((char *)*a1 + v25) & v26) == 0;
        a1 += 5;
        if (a1 == a2) {
          return v8;
        }
      }
    }
    uint64_t v8 = 0;
    while (1)
    {
      int v17 = *a1;
      unsigned __int16 v18 = (unsigned __int16 *)((char *)*a1 - **a1);
      unsigned int v19 = *v18;
      if (*((unsigned char *)a1 + 38))
      {
        if (v19 >= 0x47)
        {
          unsigned int v20 = v18[35];
          if (v20)
          {
            BOOL v21 = (*(int *)((char *)v17 + v20) & 2) != 0;
            if (v6 >= 0x47) {
              goto LABEL_31;
            }
            goto LABEL_19;
          }
        }
      }
      else if (v19 >= 0x47)
      {
        unsigned int v22 = v18[35];
        if (v22)
        {
          BOOL v21 = (*(int *)((char *)v17 + v22) & 1) != 0;
          if (v6 >= 0x47) {
            goto LABEL_31;
          }
          goto LABEL_19;
        }
      }
      BOOL v21 = 0;
      if (v6 >= 0x47)
      {
LABEL_31:
        uint64_t v16 = v5[35];
        if (v5[35]) {
          LODWORD(v16) = v4[v16] & 1;
        }
        goto LABEL_20;
      }
LABEL_19:
      LODWORD(v16) = 0;
LABEL_20:
      v8 += v21 ^ v16 ^ 1;
      a1 += 5;
      if (a1 == a2) {
        return v8;
      }
    }
  }
  return 0;
}

uint64_t sub_6DAF14(uint64_t a1, int **a2, char **a3)
{
  unsigned int v6 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v7 = *v6;
  if (*((unsigned char *)a2 + 38))
  {
    if (v7 < 0x49) {
      goto LABEL_11;
    }
    unsigned int v8 = v6[36];
    if (!v8) {
      goto LABEL_11;
    }
  }
  else if (v7 < 0x4B || (unsigned int v8 = v6[37]) == 0)
  {
LABEL_11:
    __int16 v9 = -1;
    BOOL v10 = *a3;
    unint64_t v11 = &(*a3)[-*(int *)*a3];
    unsigned int v12 = *(unsigned __int16 *)v11;
    if (*((unsigned char *)a3 + 38)) {
      goto LABEL_12;
    }
    goto LABEL_8;
  }
  __int16 v9 = *(_WORD *)((char *)*a2 + v8);
  BOOL v10 = *a3;
  unint64_t v11 = &(*a3)[-*(int *)*a3];
  unsigned int v12 = *(unsigned __int16 *)v11;
  if (*((unsigned char *)a3 + 38))
  {
LABEL_12:
    if (v12 >= 0x4B)
    {
      int v13 = *((unsigned __int16 *)v11 + 37);
      if (v13) {
        goto LABEL_14;
      }
    }
LABEL_16:
    int v14 = 0xFFFF;
    if ((sub_2E79EC(*(void *)(a1 + 880), (uint64_t)a2[4], (uint64_t)a3[4]) & 1) == 0) {
      goto LABEL_15;
    }
    goto LABEL_17;
  }
LABEL_8:
  if (v12 < 0x49) {
    goto LABEL_16;
  }
  int v13 = *((unsigned __int16 *)v11 + 36);
  if (!v13) {
    goto LABEL_16;
  }
LABEL_14:
  int v14 = *(unsigned __int16 *)&v10[v13];
  if ((sub_2E79EC(*(void *)(a1 + 880), (uint64_t)a2[4], (uint64_t)a3[4]) & 1) == 0)
  {
LABEL_15:
    int v15 = sub_2E5314(*(void *)(a1 + 880), a2, a3);
    goto LABEL_18;
  }
LABEL_17:
  int v15 = 1;
LABEL_18:
  unsigned __int16 v16 = v9 + 18000;
  if ((unsigned __int16)((unsigned __int16)(v9 + 18000) >> 5) >= 0x465u) {
    unsigned __int16 v16 = v9 - 18000;
  }
  int v17 = v14 - v16;
  if (v17 <= 18000) {
    int v18 = v17;
  }
  else {
    int v18 = v17 - 36000;
  }
  if (v18 < -17999) {
    v18 += 36000;
  }
  double v19 = fabs((double)v18 / 100.0);
  if (*(unsigned char *)(a1 + 1592)) {
    unsigned int v20 = v15;
  }
  else {
    unsigned int v20 = 1;
  }
  if (v19 <= *(double *)(a1 + 968)) {
    return v20;
  }
  else {
    return 0;
  }
}

int **sub_6DB09C(int **a1, int **a2, int **a3)
{
  uint64_t v3 = a1;
  unsigned int v7 = a3;
  if (a1 != a2)
  {
    for (uint64_t i = a1 + 5; i != a2; i += 5)
    {
      if (sub_6CDE8C(&v7, i, v3)) {
        uint64_t v3 = i;
      }
    }
  }
  return v3;
}

uint64_t sub_6DB110(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  if (sub_2E79EC(*(void *)(*a1 + 880), *(void *)(a2 + 32), *(void *)(a3 + 32))) {
    return 1;
  }
  uint64_t v7 = *(void *)(v5 + 880);

  return sub_2E5314(v7, (int **)a2, (char **)a3);
}

BOOL sub_6DB184(uint64_t a1, int **a2)
{
  uint64_t v2 = (char *)*a2;
  uint64_t v3 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v4 = *v3;
  if (*((unsigned char *)a2 + 38))
  {
    if (v4 >= 0xB)
    {
      unsigned int v5 = v3[5];
      if (v5) {
        return (*(_DWORD *)&v2[v5] & 2) != 0;
      }
    }
  }
  else if (v4 >= 0xB)
  {
    unsigned int v7 = v3[5];
    if (v7) {
      return (*(_DWORD *)&v2[v7] & 1) != 0;
    }
  }
  return 0;
}

void sub_6DB1E8(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v6 = 0;
  ++*(_DWORD *)(a1 + 816);
  unint64_t v7 = *a2;
  unint64_t v8 = (*a2 >> 16) & 0xFFFF0000 | (*a2 << 32);
  BOOL v9 = (*a2 & 0xFF000000000000) == 0;
  unint64_t v10 = ((0x2127599BF4325C37 * ((v8 | v9) ^ (v8 >> 23))) ^ ~((0x2127599BF4325C37 * ((v8 | v9) ^ (v8 >> 23))) >> 47))
      + (((0x2127599BF4325C37 * ((v8 | v9) ^ (v8 >> 23))) ^ ((0x2127599BF4325C37 * ((v8 | v9) ^ (v8 >> 23))) >> 47)) << 21);
  unint64_t v11 = 21 * ((265 * (v10 ^ (v10 >> 24))) ^ ((265 * (v10 ^ (v10 >> 24))) >> 14));
  unint64_t v12 = 2147483649u * (v11 ^ (v11 >> 28));
  int v13 = (void *)(a1
                 + 48
                 * (((((unsigned __int16)(v11 ^ (v11 >> 28)) >> 8) ^ ((-2147483647
                                                                                      * (v11 ^ (v11 >> 28))) >> 16)) ^ ((-2147483647 * (v11 ^ (v11 >> 28))) >> 24)) & 0xF));
  unint64_t v14 = v12 >> 7;
  uint64_t v15 = v13[3];
  while (1)
  {
    unint64_t v16 = v14 & v15;
    uint64_t v17 = *(void *)(*v13 + v16);
    unint64_t v18 = ((v17 ^ (0x101010101010101 * (v12 & 0x7F))) - 0x101010101010101) & ~(v17 ^ (0x101010101010101
                                                                                        * (v12 & 0x7F))) & 0x8080808080808080;
    if (v18) {
      break;
    }
LABEL_8:
    if ((v17 & (~v17 << 6) & 0x8080808080808080) != 0) {
      goto LABEL_11;
    }
    v6 += 8;
    unint64_t v14 = v6 + v16;
  }
  while (1)
  {
    unint64_t v19 = (v16 + (__clz(__rbit64(v18)) >> 3)) & v15;
    uint64_t v20 = v13[1] + 12 * v19;
    if (__PAIR64__(*(unsigned __int16 *)(v20 + 4), *(_DWORD *)v20) == __PAIR64__(WORD2(v7), v7)
      && (HIWORD(v7) & 1) != (*(unsigned char *)(v20 + 6) == 0))
    {
      break;
    }
    v18 &= v18 - 1;
    if (!v18) {
      goto LABEL_8;
    }
  }
  if (v15 == v19)
  {
LABEL_11:
    unint64_t v21 = *(void *)(a1 + 776) - *(void *)(a1 + 768);
    sub_6E45C0(a1, v12, a2, (uint64_t)&v34);
    uint64_t v22 = v34;
    if (v36)
    {
      uint64_t v23 = *(void *)(v34 + 8) + 12 * v35;
      *(void *)uint64_t v23 = *a2;
      *(_DWORD *)(v23 + 8) = 0;
    }
    *(_DWORD *)(*(void *)(v22 + 8) + 12 * v35 + 8) = v21 >> 6;
    sub_6E4470((char **)(a1 + 768), a2, (long long *)a3);
    unsigned int v24 = (uint64_t *)(a1 + 824);
    unint64_t v25 = (v21 >> 6);
    uint64_t v26 = *(void *)(a1 + 848);
    if (v25 >= (*(void *)(a1 + 856) - v26) >> 2 || *(_DWORD *)(v26 + 4 * v25) == -1) {
      sub_521F5C((uint64_t)v24, v21 >> 6, (unint64_t *)a3);
    }
    else {
      sub_5221BC(v24, v21 >> 6, (void *)a3);
    }
    return;
  }
  unint64_t v27 = *(void *)(a1 + 768) + ((unint64_t)*(unsigned int *)(v20 + 8) << 6);
  long long v28 = *(_OWORD *)a3;
  long long v29 = *(_OWORD *)(a3 + 16);
  long long v30 = *(_OWORD *)(a3 + 32);
  *(unsigned char *)(v27 + 56) = *(unsigned char *)(a3 + 48);
  *(_OWORD *)(v27 + 40) = v30;
  *(_OWORD *)(v27 + 24) = v29;
  *(_OWORD *)(v27 + 8) = v28;
  int v31 = (uint64_t *)(a1 + 824);
  unint64_t v32 = *(unsigned int *)(v20 + 8);
  uint64_t v33 = *(void *)(a1 + 848);
  if (v32 >= (*(void *)(a1 + 856) - v33) >> 2 || *(_DWORD *)(v33 + 4 * v32) == -1)
  {
    sub_521F5C((uint64_t)v31, v32, (unint64_t *)a3);
  }
  else
  {
    sub_5221BC(v31, v32, (void *)a3);
  }
}

char *sub_6DB4E8(char **a1, long long *a2, void *a3, char *a4)
{
  BOOL v9 = a1[1];
  unint64_t v8 = (unint64_t)a1[2];
  if ((unint64_t)v9 < v8)
  {
    uint64_t v10 = *((void *)a2 + 4);
    long long v12 = *a2;
    long long v11 = a2[1];
    char v13 = *a4;
    *(void *)BOOL v9 = *a3;
    *(_OWORD *)(v9 + 8) = v12;
    *(_OWORD *)(v9 + 24) = v11;
    *((void *)v9 + 5) = v10;
    v9[48] = v13;
    unint64_t v14 = v9 + 56;
    goto LABEL_14;
  }
  uint64_t v15 = *a1;
  uint64_t v16 = 0x6DB6DB6DB6DB6DB7 * ((v9 - *a1) >> 3);
  unint64_t v17 = v16 + 1;
  if ((unint64_t)(v16 + 1) > 0x492492492492492) {
    sub_2E00();
  }
  unint64_t v18 = 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(v8 - (void)v15) >> 3);
  if (2 * v18 > v17) {
    unint64_t v17 = 2 * v18;
  }
  if (v18 >= 0x249249249249249) {
    unint64_t v19 = 0x492492492492492;
  }
  else {
    unint64_t v19 = v17;
  }
  if (v19 > 0x492492492492492) {
    sub_188D718();
  }
  uint64_t v20 = 56 * v19;
  unint64_t v21 = (char *)operator new(56 * v19);
  uint64_t v22 = &v21[56 * v16];
  long long v23 = a2[1];
  *(_OWORD *)(v22 + 8) = *a2;
  unsigned int v24 = &v21[v20];
  char v25 = *a4;
  *(void *)uint64_t v22 = *a3;
  *(_OWORD *)(v22 + 24) = v23;
  *((void *)v22 + 5) = *((void *)a2 + 4);
  v22[48] = v25;
  unint64_t v14 = v22 + 56;
  if (v9 == v15)
  {
    *a1 = v22;
    a1[1] = v14;
    a1[2] = v24;
    if (!v15) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  do
  {
    long long v26 = *(_OWORD *)(v9 - 56);
    long long v27 = *(_OWORD *)(v9 - 40);
    long long v28 = *(_OWORD *)(v9 - 24);
    long long v29 = v22 - 56;
    *(v22 - 8) = *(v9 - 8);
    *(_OWORD *)(v22 - 24) = v28;
    *(_OWORD *)(v22 - 40) = v27;
    *(_OWORD *)(v22 - 56) = v26;
    v9 -= 56;
    v22 -= 56;
  }
  while (v9 != v15);
  *a1 = v29;
  a1[1] = v14;
  a1[2] = v24;
  if (v15) {
LABEL_13:
  }
    operator delete(v15);
LABEL_14:
  a1[1] = v14;
  return v14 - 56;
}

uint64_t sub_6DB6A0(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v6 = 0;
  unint64_t v7 = *a2;
  unint64_t v8 = (*a2 >> 16) & 0xFFFF0000 | (*a2 << 32);
  BOOL v9 = (*a2 & 0xFF000000000000) == 0;
  unint64_t v10 = ((0x2127599BF4325C37 * ((v8 | v9) ^ (v8 >> 23))) ^ ~((0x2127599BF4325C37 * ((v8 | v9) ^ (v8 >> 23))) >> 47))
      + (((0x2127599BF4325C37 * ((v8 | v9) ^ (v8 >> 23))) ^ ((0x2127599BF4325C37 * ((v8 | v9) ^ (v8 >> 23))) >> 47)) << 21);
  unint64_t v11 = 21 * ((265 * (v10 ^ (v10 >> 24))) ^ ((265 * (v10 ^ (v10 >> 24))) >> 14));
  unint64_t v12 = 2147483649u * (v11 ^ (v11 >> 28));
  char v13 = (void *)(a1
                 + 48
                 * (((((unsigned __int16)(v11 ^ (v11 >> 28)) >> 8) ^ ((-2147483647
                                                                                      * (v11 ^ (v11 >> 28))) >> 16)) ^ ((-2147483647 * (v11 ^ (v11 >> 28))) >> 24)) & 0xF));
  unint64_t v14 = v12 >> 7;
  uint64_t v15 = v13[3];
  uint64_t v16 = 0x101010101010101 * (v12 & 0x7F);
  int v17 = (unsigned __int16)WORD2(*a2);
  uint64_t v18 = HIWORD(*a2) & 1;
  while (1)
  {
    unint64_t v19 = v14 & v15;
    uint64_t v20 = *(void *)(*v13 + v19);
    unint64_t v21 = ((v20 ^ v16) - 0x101010101010101) & ~(v20 ^ v16) & 0x8080808080808080;
    if (v21) {
      break;
    }
LABEL_9:
    if ((v20 & (~v20 << 6) & 0x8080808080808080) != 0) {
      goto LABEL_12;
    }
    v6 += 8;
    unint64_t v14 = v6 + v19;
  }
  while (1)
  {
    unint64_t v22 = (v19 + (__clz(__rbit64(v21)) >> 3)) & v15;
    uint64_t v23 = v13[1] + 12 * v22;
    if (*(_DWORD *)v23 == v7
      && *(unsigned __int16 *)(v23 + 4) == v17
      && ((v18 ^ (*(unsigned char *)(v23 + 6) == 0)) & 1) != 0)
    {
      break;
    }
    v21 &= v21 - 1;
    if (!v21) {
      goto LABEL_9;
    }
  }
  if (v15 == v22)
  {
LABEL_12:
    ++*(_DWORD *)(a1 + 816);
    unint64_t v24 = *(void *)(a1 + 776) - *(void *)(a1 + 768);
    BOOL v26 = (*a2 & 0xFF000000000000) == 0;
    unint64_t v25 = (*a2 >> 16) & 0xFFFF0000 | (*a2 << 32);
    unint64_t v27 = ((0x2127599BF4325C37 * ((v25 | v26) ^ (v25 >> 23))) ^ ~((0x2127599BF4325C37 * ((v25 | v26) ^ (v25 >> 23))) >> 47))
        + (((0x2127599BF4325C37 * ((v25 | v26) ^ (v25 >> 23))) ^ ((0x2127599BF4325C37 * ((v25 | v26) ^ (v25 >> 23))) >> 47)) << 21);
    unint64_t v28 = 21 * ((265 * (v27 ^ (v27 >> 24))) ^ ((265 * (v27 ^ (v27 >> 24))) >> 14));
    sub_6E45C0(a1, 2147483649u * (v28 ^ (v28 >> 28)), a2, (uint64_t)&v43);
    uint64_t v29 = v43;
    if (v45)
    {
      uint64_t v30 = *(void *)(v43 + 8) + 12 * v44;
      *(void *)uint64_t v30 = *a2;
      *(_DWORD *)(v30 + 8) = 0;
    }
    *(_DWORD *)(*(void *)(v29 + 8) + 12 * v44 + 8) = v24 >> 6;
    sub_6E4470((char **)(a1 + 768), a2, (long long *)a3);
    int v31 = (uint64_t *)(a1 + 824);
    unint64_t v32 = (v24 >> 6);
    uint64_t v33 = *(void *)(a1 + 848);
    if (v32 < (*(void *)(a1 + 856) - v33) >> 2 && *(_DWORD *)(v33 + 4 * v32) != -1)
    {
      unint64_t v34 = v24 >> 6;
LABEL_17:
      sub_5221BC(v31, v34, (void *)a3);
      return 1;
    }
    unint64_t v34 = v24 >> 6;
LABEL_19:
    sub_521F5C((uint64_t)v31, v34, (unint64_t *)a3);
    return 1;
  }
  unint64_t v36 = *(void *)(a1 + 768) + ((unint64_t)*(unsigned int *)(v23 + 8) << 6);
  uint64_t v38 = *(void *)(v36 + 8);
  unint64_t v37 = v36 + 8;
  if (*(void *)a3 < v38)
  {
    ++*(_DWORD *)(a1 + 816);
    long long v39 = *(_OWORD *)a3;
    long long v40 = *(_OWORD *)(a3 + 16);
    long long v41 = *(_OWORD *)(a3 + 32);
    *(unsigned char *)(v37 + 48) = *(unsigned char *)(a3 + 48);
    *(_OWORD *)(v37 + 16) = v40;
    *(_OWORD *)(v37 + 32) = v41;
    *(_OWORD *)unint64_t v37 = v39;
    int v31 = (uint64_t *)(a1 + 824);
    unint64_t v34 = *(unsigned int *)(v23 + 8);
    uint64_t v42 = *(void *)(a1 + 848);
    if (v34 < (*(void *)(a1 + 856) - v42) >> 2 && *(_DWORD *)(v42 + 4 * v34) != -1) {
      goto LABEL_17;
    }
    goto LABEL_19;
  }
  return 0;
}

uint64_t sub_6DB9C8(uint64_t a1, void *a2, const void *a3, _OWORD *a4, char a5)
{
  *(void *)(a1 + 880) = sub_3750CC(a2);
  *(_OWORD *)(a1 + 888) = *a4;
  *(unsigned char *)(a1 + 904) = a5;
  memcpy((void *)(a1 + 912), a3, 0x3D0uLL);
  return a1;
}

void sub_6DBA3C(_Unwind_Exception *a1)
{
  uint64_t v3 = *(void **)(v1 + 848);
  if (v3)
  {
    *(void *)(v1 + 856) = v3;
    operator delete(v3);
  }
  sub_20AA9E0((void **)(v1 + 824), (void *)v1);
  sub_328138(v1);
  _Unwind_Resume(a1);
}

void sub_6DBA6C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  unsigned int v4 = (int **)a3[1];
  unint64_t v5 = 126 - 2 * __clz(0xCCCCCCCCCCCCCCCDLL * (((uint64_t)v4 - *a3) >> 3));
  BOOL v6 = v4 == (int **)*a3;
  v8[0] = a2;
  v8[1] = a1;
  if (v6) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = v5;
  }
  sub_6E4EFC(v3, v4, (uint64_t)v8, v7, 1);
}

uint64_t sub_6DBACC(uint64_t a1, int **a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v7 = 0;
  unint64_t v8 = 0;
  uint64_t v9 = 0;
  sub_6DBB70(a1, a2, a3, &v7);
  if (v7 == v8)
  {
    a4 = -1;
  }
  else
  {
    unint64_t v5 = v7;
    while (*v5 != a4)
    {
      if (++v5 == v8)
      {
        unint64_t v5 = v8;
        break;
      }
    }
    if (v5 == v8)
    {
      a4 = *v7;
LABEL_10:
      unint64_t v8 = v7;
      operator delete(v7);
      return a4;
    }
  }
  if (v7) {
    goto LABEL_10;
  }
  return a4;
}

void sub_6DBB54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_6DBB70(uint64_t a1, int **a2, uint64_t *a3, unint64_t **a4)
{
  uint64_t v6 = a1;
  a4[1] = *a4;
  unsigned int v81 = 0;
  uint64_t v82 = 0;
  uint64_t v83 = 0;
  sub_6DD38C(a1, a2, (uint64_t)a3, (uint64_t)&v81);
  uint64_t v7 = v81;
  unsigned __int16 v79 = v82;
  if (v81 == v82) {
    goto LABEL_90;
  }
  uint64_t v78 = v6;
  do
  {
    unint64_t v9 = *v7;
    if (*v7 == -1 || !sub_6D8104(v6, a2, a3, *v7)) {
      goto LABEL_69;
    }
    unint64_t v10 = (int **)sub_5A7C34(a3, v9);
    unint64_t v11 = (unsigned __int16 *)((char *)*a2 - **a2);
    unsigned int v12 = *v11;
    if (*((unsigned char *)a2 + 38))
    {
      if (v12 >= 0x49)
      {
        unsigned int v13 = v11[36];
        if (v13) {
          goto LABEL_14;
        }
      }
    }
    else if (v12 >= 0x4B)
    {
      unsigned int v13 = v11[37];
      if (v13)
      {
LABEL_14:
        __int16 v14 = *(_WORD *)((char *)*a2 + v13);
        uint64_t v15 = (char *)*v10;
        uint64_t v16 = (unsigned __int16 *)((char *)*v10 - **v10);
        unsigned int v17 = *v16;
        if (*((unsigned char *)v10 + 38)) {
          goto LABEL_19;
        }
        goto LABEL_15;
      }
    }
    __int16 v14 = -1;
    uint64_t v15 = (char *)*v10;
    uint64_t v16 = (unsigned __int16 *)((char *)*v10 - **v10);
    unsigned int v17 = *v16;
    if (*((unsigned char *)v10 + 38))
    {
LABEL_19:
      if (v17 >= 0x4B)
      {
        unsigned int v18 = v16[37];
        if (v18) {
          goto LABEL_21;
        }
      }
      goto LABEL_22;
    }
LABEL_15:
    if (v17 >= 0x49)
    {
      unsigned int v18 = v16[36];
      if (v18)
      {
LABEL_21:
        int v19 = *(unsigned __int16 *)&v15[v18];
        goto LABEL_23;
      }
    }
LABEL_22:
    int v19 = 0xFFFF;
LABEL_23:
    unsigned __int16 v20 = v14 + 18000;
    unsigned __int16 v21 = v14 - 18000;
    if ((unsigned __int16)(v20 >> 5) < 0x465u) {
      unsigned __int16 v21 = v20;
    }
    int v22 = v19 - v21;
    if (v22 > 18000) {
      v22 -= 36000;
    }
    if (v22 >= -17999) {
      int v23 = v22;
    }
    else {
      int v23 = v22 + 36000;
    }
    unint64_t v24 = (int **)sub_5A7C34(a3, v9);
    double v25 = sub_6D82EC(v6, a2, v24);
    double v26 = fabs((double)v23 / 100.0);
    double v27 = fabs(v25);
    if (v27 >= v26) {
      double v27 = v26;
    }
    if (v27 <= *(double *)(v6 + 1064)
      || (unint64_t v28 = (unsigned __int16 *)((char *)*a2 - **a2), *v28 < 0x2Fu)
      || (uint64_t v29 = v28[23]) == 0
      || ((v30 = *((unsigned __int8 *)*a2 + v29), BOOL v31 = v30 > 0x2A, v32 = (1 << v30) & 0x50426810004, !v31)
        ? (BOOL v33 = v32 == 0)
        : (BOOL v33 = 1),
          v33))
    {
      if (v27 <= *(double *)(v6 + 1056)
        || (unint64_t v34 = (unsigned __int16 *)((char *)*a2 - **a2), *v34 >= 0x2Fu)
        && (uint64_t v35 = v34[23]) != 0
        && ((v36 = *((unsigned __int8 *)*a2 + v35), BOOL v31 = v36 > 0x2A, v37 = (1 << v36) & 0x50426810004, !v31)
          ? (BOOL v38 = v37 == 0)
          : (BOOL v38 = 1),
            !v38))
      {
        long long v40 = a4[1];
        unint64_t v39 = (unint64_t)a4[2];
        if ((unint64_t)v40 < v39)
        {
          unint64_t *v40 = v9;
          uint64_t v41 = (uint64_t)(v40 + 1);
LABEL_68:
          a4[1] = (unint64_t *)v41;
LABEL_69:
          uint64_t v60 = a4[1];
          unint64_t v59 = (unint64_t)a4[2];
          if ((unint64_t)v60 >= v59)
          {
            unint64_t v61 = *a4;
            uint64_t v62 = (char *)v60 - (char *)*a4;
            uint64_t v63 = v62 >> 3;
            unint64_t v64 = (v62 >> 3) + 1;
            if (v64 >> 61) {
              sub_2E00();
            }
            uint64_t v65 = v59 - (void)v61;
            if (v65 >> 2 > v64) {
              unint64_t v64 = v65 >> 2;
            }
            if ((unint64_t)v65 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v66 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v66 = v64;
            }
            if (v66)
            {
              if (v66 >> 61) {
                sub_188D718();
              }
              BOOL v67 = operator new(8 * v66);
              uint64_t v68 = (unint64_t *)&v67[8 * v63];
              *uint64_t v68 = v9;
              uint64_t v8 = (uint64_t)(v68 + 1);
              if (v60 == v61)
              {
LABEL_87:
                *a4 = v68;
                a4[1] = (unint64_t *)v8;
                a4[2] = (unint64_t *)&v67[8 * v66];
                if (v61) {
                  operator delete(v61);
                }
                goto LABEL_4;
              }
            }
            else
            {
              BOOL v67 = 0;
              uint64_t v68 = (unint64_t *)(8 * v63);
              *(void *)(8 * v63) = v9;
              uint64_t v8 = 8 * v63 + 8;
              if (v60 == v61) {
                goto LABEL_87;
              }
            }
            unint64_t v69 = (char *)(v60 - 1) - (char *)v61;
            if (v69 < 0x58) {
              goto LABEL_99;
            }
            if ((unint64_t)((char *)v60 - &v67[v62]) < 0x20) {
              goto LABEL_99;
            }
            uint64_t v70 = (v69 >> 3) + 1;
            uint64_t v71 = 8 * (v70 & 0x3FFFFFFFFFFFFFFCLL);
            uint64_t v72 = &v60[v71 / 0xFFFFFFFFFFFFFFF8];
            uint64_t v68 = (unint64_t *)((char *)v68 - v71);
            int v73 = &v67[8 * v63 - 16];
            long long v74 = v60 - 2;
            uint64_t v75 = v70 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              long long v76 = *(_OWORD *)v74;
              *(v73 - 1) = *((_OWORD *)v74 - 1);
              *int v73 = v76;
              v73 -= 2;
              v74 -= 4;
              v75 -= 4;
            }
            while (v75);
            uint64_t v60 = v72;
            if (v70 != (v70 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_99:
              do
              {
                unint64_t v77 = *--v60;
                *--uint64_t v68 = v77;
              }
              while (v60 != v61);
            }
            goto LABEL_87;
          }
          unint64_t *v60 = v9;
          uint64_t v8 = (uint64_t)(v60 + 1);
LABEL_4:
          a4[1] = (unint64_t *)v8;
          uint64_t v6 = v78;
          goto LABEL_5;
        }
        uint64_t v42 = *a4;
        uint64_t v43 = (char *)v40 - (char *)*a4;
        uint64_t v44 = v43 >> 3;
        unint64_t v45 = (v43 >> 3) + 1;
        if (v45 >> 61) {
          sub_2E00();
        }
        uint64_t v46 = v39 - (void)v42;
        if (v46 >> 2 > v45) {
          unint64_t v45 = v46 >> 2;
        }
        if ((unint64_t)v46 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v47 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v47 = v45;
        }
        if (v47)
        {
          if (v47 >> 61) {
            sub_188D718();
          }
          unint64_t v48 = operator new(8 * v47);
          int v49 = (unint64_t *)&v48[8 * v44];
          *int v49 = v9;
          uint64_t v41 = (uint64_t)(v49 + 1);
          if (v40 == v42) {
            goto LABEL_66;
          }
LABEL_60:
          unint64_t v50 = (char *)(v40 - 1) - (char *)v42;
          if (v50 < 0x58) {
            goto LABEL_100;
          }
          if ((unint64_t)((char *)v40 - &v48[v43]) < 0x20) {
            goto LABEL_100;
          }
          uint64_t v51 = (v50 >> 3) + 1;
          uint64_t v52 = 8 * (v51 & 0x3FFFFFFFFFFFFFFCLL);
          uint64_t v53 = &v40[v52 / 0xFFFFFFFFFFFFFFF8];
          int v49 = (unint64_t *)((char *)v49 - v52);
          uint64_t v54 = &v48[8 * v44 - 16];
          int v55 = v40 - 2;
          uint64_t v56 = v51 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            long long v57 = *(_OWORD *)v55;
            *(v54 - 1) = *((_OWORD *)v55 - 1);
            *uint64_t v54 = v57;
            v54 -= 2;
            v55 -= 4;
            v56 -= 4;
          }
          while (v56);
          long long v40 = v53;
          if (v51 != (v51 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_100:
            do
            {
              unint64_t v58 = *--v40;
              *--int v49 = v58;
            }
            while (v40 != v42);
          }
        }
        else
        {
          unint64_t v48 = 0;
          int v49 = (unint64_t *)(8 * v44);
          *(void *)(8 * v44) = v9;
          uint64_t v41 = 8 * v44 + 8;
          if (v40 != v42) {
            goto LABEL_60;
          }
        }
LABEL_66:
        *a4 = v49;
        a4[1] = (unint64_t *)v41;
        a4[2] = (unint64_t *)&v48[8 * v47];
        if (v42) {
          operator delete(v42);
        }
        goto LABEL_68;
      }
    }
LABEL_5:
    ++v7;
  }
  while (v7 != v79);
  uint64_t v7 = v81;
LABEL_90:
  if (v7)
  {
    uint64_t v82 = v7;
    operator delete(v7);
  }
}

void sub_6DC0A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_6DC0D4(uint64_t a1, int **a2, int **a3)
{
  uint64_t v3 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v4 = *v3;
  if (*((unsigned char *)a2 + 38))
  {
    if (v4 >= 0xB)
    {
      unsigned int v5 = v3[5];
      if (v5)
      {
        int v6 = 2;
LABEL_8:
        BOOL v7 = (*(int *)((char *)*a2 + v5) & v6) != 0;
        goto LABEL_10;
      }
    }
  }
  else if (v4 >= 0xB)
  {
    unsigned int v5 = v3[5];
    if (v5)
    {
      int v6 = 1;
      goto LABEL_8;
    }
  }
  BOOL v7 = 0;
LABEL_10:
  uint64_t v8 = (char *)*a3;
  unint64_t v9 = (unsigned __int16 *)((char *)*a3 - **a3);
  unsigned int v10 = *v9;
  if (*((unsigned char *)a3 + 38))
  {
    if (v10 >= 0xB)
    {
      unsigned int v11 = v9[5];
      if (v11) {
        return v7 ^ ((*(_DWORD *)&v8[v11] & 2) != 0) ^ 1;
      }
    }
  }
  else if (v10 >= 0xB)
  {
    unsigned int v13 = v9[5];
    if (v13) {
      return v7 ^ ((*(_DWORD *)&v8[v13] & 1) != 0) ^ 1;
    }
  }
  return !v7;
}

BOOL sub_6DC1A4(uint64_t a1, int **a2)
{
  uint64_t v2 = (char *)*a2;
  uint64_t v3 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v4 = *v3;
  if (*((unsigned char *)a2 + 38) == 1)
  {
    if (v4 >= 0xB)
    {
      unsigned int v5 = v3[5];
      if (v5) {
        return (*(_DWORD *)&v2[v5] & 1) != 0;
      }
    }
  }
  else if (v4 >= 0xB)
  {
    unsigned int v7 = v3[5];
    if (v7) {
      return (*(_DWORD *)&v2[v7] & 2) != 0;
    }
  }
  return 0;
}

BOOL sub_6DC210(void *a1, int **a2)
{
  unsigned int v4 = (char *)*a2;
  unsigned int v5 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v6 = *v5;
  if (*((unsigned char *)a2 + 38))
  {
    if (v6 >= 0xB)
    {
      uint64_t v7 = v5[5];
      if (v7)
      {
        int v8 = *(_DWORD *)&v4[v7];
        if ((v8 & 2) != 0 && (v8 & 1) == 0)
        {
LABEL_68:
          long long v53 = *((_OWORD *)a2 + 1);
          long long v68 = *(_OWORD *)a2;
          long long v69 = v53;
          unint64_t v54 = (unint64_t)a2[4];
          unint64_t v70 = v54;
          uint64_t v55 = a1[110];
          uint64_t v56 = sub_2D5D58(v55, v54 & 0xFFFFFFFFFFFFLL);
          if (*(unsigned char *)(v55 + 7772))
          {
            long long v57 = sub_2DB8E0(v55 + 3896, v54, 0);
            unint64_t v58 = &v57[-*(int *)v57];
            if (*(unsigned __int16 *)v58 < 5u)
            {
              uint64_t v59 = 0;
            }
            else
            {
              uint64_t v59 = *((unsigned __int16 *)v58 + 2);
              if (v59) {
                v59 += (uint64_t)&v57[*(unsigned int *)&v57[v59]];
              }
            }
            uint64_t v60 = v59
                + 4 * (unsigned __int16)((v54 ^ 0x1000000000000) >> 32)
                + 4
                + *(unsigned int *)(v59 + 4 * (unsigned __int16)((v54 ^ 0x1000000000000) >> 32) + 4);
          }
          else
          {
            uint64_t v60 = 0;
          }
          *(void *)&long long v65 = v56;
          *((void *)&v65 + 1) = v60;
          *(void *)&long long v66 = sub_2E5C38(v55, v54 & 0xFFFFFFFFFFFFLL, 1);
          *((void *)&v66 + 1) = v61;
          LODWORD(v67) = v54;
          WORD2(v67) = (v54 ^ 0x1000000000000) >> 32;
          BYTE6(v67) = ((v54 ^ 0x1000000000000) & 0xFF000000000000) != 0;
          goto LABEL_19;
        }
      }
    }
  }
  else if (v6 >= 0xB)
  {
    uint64_t v9 = v5[5];
    if (v9)
    {
      int v10 = *(_DWORD *)&v4[v9];
      if ((v10 & 1) != 0 && (v10 & 2) == 0) {
        goto LABEL_68;
      }
    }
  }
  uint64_t v11 = a1[110];
  unint64_t v12 = (unint64_t)a2[4];
  uint64_t v13 = sub_2D5D58(v11, v12 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v11 + 7772))
  {
    __int16 v14 = sub_2DB8E0(v11 + 3896, v12, 0);
    uint64_t v15 = &v14[-*(int *)v14];
    if (*(unsigned __int16 *)v15 < 5u)
    {
      uint64_t v16 = 0;
    }
    else
    {
      uint64_t v16 = *((unsigned __int16 *)v15 + 2);
      if (v16) {
        v16 += (uint64_t)&v14[*(unsigned int *)&v14[v16]];
      }
    }
    uint64_t v17 = v16
        + 4 * (unsigned __int16)((v12 ^ 0x1000000000000) >> 32)
        + 4
        + *(unsigned int *)(v16 + 4 * (unsigned __int16)((v12 ^ 0x1000000000000) >> 32) + 4);
  }
  else
  {
    uint64_t v17 = 0;
  }
  *(void *)&long long v68 = v13;
  *((void *)&v68 + 1) = v17;
  *(void *)&long long v69 = sub_2E5C38(v11, v12 & 0xFFFFFFFFFFFFLL, 1);
  *((void *)&v69 + 1) = v18;
  LODWORD(v70) = v12;
  WORD2(v70) = (v12 ^ 0x1000000000000) >> 32;
  BYTE6(v70) = ((v12 ^ 0x1000000000000) & 0xFF000000000000) != 0;
  long long v19 = *((_OWORD *)a2 + 1);
  long long v65 = *(_OWORD *)a2;
  long long v66 = v19;
  BOOL v67 = a2[4];
LABEL_19:
  sub_6DC710((uint64_t)a1, (int **)&v68, 1, a1 + 156, 1, (uint64_t)&v62);
  uint64_t v20 = v62;
  if (v62 == 0x7FFFFFFFFFFFFFFFLL) {
    goto LABEL_45;
  }
  unsigned __int16 v21 = v63;
  int v22 = v64;
  sub_6DC710((uint64_t)a1, (int **)&v65, 0, a1 + 156, 1, (uint64_t)&v62);
  if (v62 == 0x7FFFFFFFFFFFFFFFLL) {
    goto LABEL_45;
  }
  int v23 = (unsigned __int16 *)((char *)v21 - *v21);
  if (*v23 >= 0x2Fu && (uint64_t v24 = v23[23]) != 0)
  {
    unsigned int v25 = *((unsigned __int8 *)v21 + v24);
    BOOL v26 = v25 > 0x2F;
    unint64_t v27 = (0xE2E040048000uLL >> v25) & 1;
    if (v26) {
      char v28 = 0;
    }
    else {
      char v28 = v27;
    }
    int v29 = v64;
    unsigned int v30 = (unsigned __int16 *)((char *)v63 - *v63);
    if (*v30 < 0x2Fu) {
      goto LABEL_36;
    }
  }
  else
  {
    char v28 = 0;
    int v29 = v64;
    unsigned int v30 = (unsigned __int16 *)((char *)v63 - *v63);
    if (*v30 < 0x2Fu) {
      goto LABEL_36;
    }
  }
  uint64_t v31 = v30[23];
  if (v31)
  {
    unsigned int v32 = *((unsigned __int8 *)v63 + v31);
    BOOL v26 = v32 > 0x2F;
    uint64_t v33 = (1 << v32) & 0xE2E040048000;
    BOOL v34 = v26 || v33 == 0;
    if (!v34)
    {
      if ((v28 & 1) == 0) {
        goto LABEL_45;
      }
      goto LABEL_37;
    }
  }
LABEL_36:
  if (v28) {
    goto LABEL_45;
  }
LABEL_37:
  uint64_t v35 = (unsigned __int16 *)(v68 - *(int *)v68);
  if (*v35 >= 9u && (uint64_t v36 = v35[4]) != 0) {
    uint64_t v37 = *(unsigned int *)(v68 + v36);
  }
  else {
    uint64_t v37 = 0;
  }
  BOOL v34 = (v22 | v29) == 0;
  uint64_t v38 = 156;
  if (v34) {
    uint64_t v38 = 157;
  }
  if (v62 + v20 + v37 < a1[v38]) {
    return 1;
  }
LABEL_45:
  sub_6DC710((uint64_t)a1, (int **)&v68, 1, a1 + 158, 0, (uint64_t)&v62);
  BOOL result = 0;
  uint64_t v40 = v62;
  if (v62 == 0x7FFFFFFFFFFFFFFFLL) {
    return result;
  }
  uint64_t v41 = v63;
  sub_6DC710((uint64_t)a1, (int **)&v65, 0, a1 + 158, 0, (uint64_t)&v62);
  BOOL result = 0;
  if (v62 == 0x7FFFFFFFFFFFFFFFLL) {
    return result;
  }
  uint64_t v42 = (unsigned __int16 *)((char *)v41 - *v41);
  if (*v42 < 0x2Fu)
  {
    LOBYTE(v43) = 0;
    unint64_t v45 = (unsigned __int16 *)((char *)v63 - *v63);
    if (*v45 < 0x2Fu) {
      goto LABEL_61;
    }
  }
  else
  {
    unint64_t v43 = v42[23];
    if (v43)
    {
      unsigned int v44 = *((unsigned __int8 *)v41 + v43);
      BOOL v26 = v44 > 0x2F;
      unint64_t v43 = (0xE2E040048000uLL >> v44) & 1;
      if (v26) {
        LOBYTE(v43) = 0;
      }
    }
    unint64_t v45 = (unsigned __int16 *)((char *)v63 - *v63);
    if (*v45 < 0x2Fu) {
      goto LABEL_61;
    }
  }
  uint64_t v46 = v45[23];
  if (v46)
  {
    unsigned int v47 = *((unsigned __int8 *)v63 + v46);
    BOOL v26 = v47 > 0x2F;
    uint64_t v48 = (1 << v47) & 0xE2E040048000;
    if (!v26 && v48 != 0)
    {
      if (v43) {
        goto LABEL_62;
      }
      return 0;
    }
  }
LABEL_61:
  if (v43) {
    return 0;
  }
LABEL_62:
  unint64_t v50 = (unsigned __int16 *)(v68 - *(int *)v68);
  if (*v50 >= 9u && (uint64_t v51 = v50[4]) != 0) {
    uint64_t v52 = *(unsigned int *)(v68 + v51);
  }
  else {
    uint64_t v52 = 0;
  }
  return v62 + v40 + v52 < a1[158];
}

void sub_6DC710(uint64_t a1@<X0>, int **a2@<X1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v8 = 0;
  *(void *)(a1 + 856) = *(void *)(a1 + 848);
  *(void *)(a1 + 832) = *(void *)(a1 + 824);
  *(_DWORD *)(a1 + 872) = 0;
  *(void *)(a1 + 776) = *(void *)(a1 + 768);
  do
  {
    uint64_t v10 = a1 + v8;
    if (*(void *)(a1 + v8 + 16))
    {
      unint64_t v11 = *(void *)(v10 + 24);
      if (v11 >= 0x80)
      {
        uint64_t v9 = (void *)(a1 + v8);
        operator delete(*(void **)(a1 + v8));
        v9[5] = 0;
        void *v9 = &unk_20E1710;
        v9[1] = 0;
        v9[2] = 0;
        v9[3] = 0;
      }
      else if (v11)
      {
        *(void *)(v10 + 16) = 0;
        memset(*(void **)(a1 + v8), 128, v11 + 8);
        *(unsigned char *)(*(void *)(a1 + v8) + v11) = -1;
        unint64_t v12 = *(void *)(v10 + 24);
        if (v12 == 7) {
          uint64_t v13 = 6;
        }
        else {
          uint64_t v13 = v12 - (v12 >> 3);
        }
        *(void *)(a1 + v8 + 40) = v13 - *(void *)(v10 + 16);
      }
    }
    v8 += 48;
  }
  while (v8 != 768);
  LOBYTE(v14) = 0;
  *(void *)(a1 + 800) = *(void *)(a1 + 792);
  *(_DWORD *)(a1 + 816) = 0;
  unsigned int v121 = a2[4];
  uint64_t v15 = (unsigned __int16 *)((char *)*a2 - **a2);
  int v16 = a3;
  if (*v15 >= 0x2Fu)
  {
    uint64_t v14 = v15[23];
    if (v15[23]) {
      LOBYTE(v14) = (*((unsigned char *)*a2 + v14) & 0xF7) == 34;
    }
  }
  *(void *)int v137 = 0;
  long long v17 = *((_OWORD *)a2 + 1);
  *(_OWORD *)&v137[8] = *(_OWORD *)a2;
  *(_OWORD *)&v137[24] = v17;
  unsigned int v138 = a2[4];
  char v139 = v14;
  sub_6DB1E8(a1, (unint64_t *)&v121, (uint64_t)v137);
  uint64_t v134 = 0;
  int v135 = 0;
  uint64_t v136 = 0;
  unint64_t v131 = 0;
  unsigned int v132 = 0;
  uint64_t v133 = 0;
  __p = 0;
  unsigned int v129 = 0;
  uint64_t v130 = 0;
  while (*(_DWORD *)(a1 + 872))
  {
    unint64_t v18 = *(void *)(a1 + 768) + ((unint64_t)**(unsigned int **)(a1 + 824) << 6);
    long long v19 = *(_OWORD *)(v18 + 16);
    long long v20 = *(_OWORD *)(v18 + 32);
    *(void *)&v137[32] = *(void *)(v18 + 48);
    *(_OWORD *)int v137 = v19;
    *(_OWORD *)&v137[16] = v20;
    uint64_t v119 = *(void *)(v18 + 8);
    int v114 = *(unsigned __int8 *)(v18 + 56);
    sub_51325C(a1);
    sub_2E44A4(*(void *)(a1 + 880), (uint64_t)v137, &v134);
    unint64_t v21 = 126 - 2 * __clz(0xCCCCCCCCCCCCCCCDLL * (((char *)v135 - (unsigned char *)v134) >> 3));
    unsigned int v121 = (int *)v137;
    uint64_t v122 = (int *)a1;
    if (v135 == v134) {
      uint64_t v22 = 0;
    }
    else {
      uint64_t v22 = v21;
    }
    sub_6E4EFC((uint64_t)v134, v135, (uint64_t)&v121, v22, 1);
    if (v16)
    {
      unsigned int v121 = 0;
      uint64_t v122 = 0;
      uint64_t v123 = 0;
      sub_6DBB70(a1, (int **)v137, (uint64_t *)&v134, (unint64_t **)&v121);
      if (v121 != v122)
      {
        uint64_t v24 = v121;
        while (*(void *)v24 != -1)
        {
          v24 += 2;
          if (v24 == v122)
          {
            uint64_t v24 = v122;
            break;
          }
        }
        if (v24 == v122)
        {
          unint64_t v25 = *(void *)v121;
LABEL_33:
          uint64_t v122 = v121;
          operator delete(v121);
          unsigned int v132 = v131;
          BOOL v26 = (int **)v134;
          uint64_t v120 = v135;
          if (v134 == v135) {
            continue;
          }
LABEL_34:
          char v116 = 0;
LABEL_41:
          unsigned int v32 = (unsigned __int16 *)((char *)*v26 - **v26);
          if (*v32 >= 0x2Fu)
          {
            uint64_t v27 = v32[23];
            if (v27)
            {
              unsigned int v28 = *((unsigned __int8 *)*v26 + v27);
              BOOL v29 = v28 > 0x36;
              uint64_t v30 = (1 << v28) & 0x44000000000008;
              if (!v29 && v30 != 0)
              {
LABEL_40:
                v26 += 5;
                if (v26 == v120)
                {
                  if ((v116 & 1) == 0)
                  {
                    BOOL v106 = v131;
                    __int16 v105 = v132;
                    if (v131 != v132)
                    {
                      do
                      {
                        unsigned int v121 = (int *)v106[5];
                        sub_6DB6A0(a1, (unint64_t *)&v121, (uint64_t)v106);
                        v106 += 7;
                      }
                      while (v106 != v105);
                    }
                  }
                  continue;
                }
                goto LABEL_41;
              }
            }
          }
          if (v16)
          {
            if (v25 != -1)
            {
              uint64_t v33 = *(void *)(sub_66F838(&v134, v25) + 32);
              unint64_t v34 = (unint64_t)v26[4];
              if ((v33 & 0xFFFFFFFFFFFFLL) == (v34 & 0xFFFFFFFFFFFFLL))
              {
                BOOL v35 = (v33 & 0xFF000000000000) == 0;
                goto LABEL_46;
              }
            }
LABEL_95:
            int v37 = 0;
            uint64_t v38 = *(int **)v137;
            unint64_t v39 = (unsigned __int16 *)(*(void *)v137 - (int)**(_DWORD **)v137);
            unsigned int v40 = *v39;
            if (v137[38]) {
              goto LABEL_96;
            }
LABEL_89:
            if (v40 < 0x4B) {
              goto LABEL_102;
            }
            unsigned int v68 = v39[37];
            if (!v68) {
              goto LABEL_102;
            }
LABEL_98:
            __int16 v70 = *(_WORD *)((char *)v38 + v68);
            int v71 = *((unsigned __int8 *)v26 + 38);
            uint64_t v72 = *v26;
            uint64_t v73 = **v26;
            long long v74 = (unsigned __int16 *)((char *)*v26 - v73);
            unsigned int v75 = *v74;
            if (!*((unsigned char *)v26 + 38)) {
              goto LABEL_99;
            }
LABEL_103:
            if (v75 >= 0x4B)
            {
              unsigned int v76 = v74[37];
              if (v74[37]) {
                goto LABEL_105;
              }
            }
LABEL_106:
            int v77 = 0xFFFF;
            goto LABEL_107;
          }
          uint64_t v41 = *(void *)(a1 + 880);
          unint64_t v42 = (unint64_t)v26[4];
          unint64_t v43 = v42 & 0xFFFFFFFFFFFFLL;
          unsigned int v44 = (int *)sub_2D5D58(v41, v42 & 0xFFFFFFFFFFFFLL);
          if (*(unsigned char *)(v41 + 7772))
          {
            unint64_t v45 = sub_2DB8E0(v41 + 3896, v42, 0);
            uint64_t v46 = &v45[-*(int *)v45];
            if (*(unsigned __int16 *)v46 < 5u)
            {
              uint64_t v47 = 0;
            }
            else
            {
              uint64_t v47 = *((unsigned __int16 *)v46 + 2);
              if (v47) {
                v47 += (uint64_t)&v45[*(unsigned int *)&v45[v47]];
              }
            }
            uint64_t v48 = v47
                + 4 * (unsigned __int16)((v42 ^ 0x1000000000000) >> 32)
                + 4
                + *(unsigned int *)(v47 + 4 * (unsigned __int16)((v42 ^ 0x1000000000000) >> 32) + 4);
            if (*(unsigned char *)(v41 + 7773))
            {
LABEL_59:
              uint64_t v49 = v41 + 3896;
              unint64_t v50 = sub_2E5E08(v49, v42, 1);
              if (v50)
              {
                uint64_t v51 = &v50[-*(int *)v50];
                if (*(unsigned __int16 *)v51 >= 0xBu)
                {
                  uint64_t v52 = *((unsigned __int16 *)v51 + 5);
                  if (!*((_WORD *)v51 + 5)) {
                    goto LABEL_187;
                  }
                  long long v53 = &v50[v52 + *(unsigned int *)&v50[v52]];
                  if (*(_DWORD *)v53 > HIDWORD(v43))
                  {
                    unint64_t v54 = &v53[8 * HIDWORD(v43)];
                    unsigned int v57 = *((_DWORD *)v54 + 1);
                    uint64_t v56 = v54 + 4;
                    unsigned int v55 = v57;
                    if (v57)
                    {
                      unint64_t v58 = sub_2E5F98(v49, v55, 1);
                      if (v58)
                      {
                        uint64_t v59 = &v58[-*(int *)v58];
                        unsigned int v60 = *(unsigned __int16 *)v59;
                        if ((*((unsigned char *)v56 + 6) & 2) == 0)
                        {
                          if (v60 < 7)
                          {
                            uint64_t v61 = 0;
                            uint64_t v64 = 0;
                            uint64_t v52 = 0;
                            if (v60 >= 5) {
                              goto LABEL_179;
                            }
                            goto LABEL_77;
                          }
                          uint64_t v61 = (_DWORD *)*((unsigned __int16 *)v59 + 3);
                          if (*((_WORD *)v59 + 3)) {
                            uint64_t v61 = (_DWORD *)((char *)v61 + (void)v58 + *(unsigned int *)((char *)v61 + (void)v58));
                          }
LABEL_179:
                          int v62 = *((unsigned __int16 *)v59 + 2);
                          if (*((_WORD *)v59 + 2))
                          {
LABEL_180:
                            uint64_t v63 = &v58[v62 + *(unsigned int *)&v58[v62]];
                            if (v61)
                            {
LABEL_181:
                              uint64_t v103 = *((unsigned __int16 *)v56 + 2);
                              if (*v61 > v103)
                              {
                                uint64_t v52 = (uint64_t)&v61[v103 + 1] + v61[v103 + 1];
                                if (!v63)
                                {
LABEL_187:
                                  uint64_t v64 = 0;
                                  goto LABEL_77;
                                }
LABEL_185:
                                uint64_t v104 = *((unsigned __int16 *)v56 + 2);
                                if (*(_DWORD *)v63 <= v104) {
                                  goto LABEL_187;
                                }
                                uint64_t v64 = (uint64_t)&v63[4 * v104 + 4 + *(unsigned int *)&v63[4 * v104 + 4]];
LABEL_77:
                                unsigned int v121 = v44;
                                uint64_t v122 = (int *)v48;
                                uint64_t v123 = v52;
                                uint64_t v124 = v64;
                                int v125 = v42;
                                __int16 v126 = (v42 ^ 0x1000000000000) >> 32;
                                BOOL v127 = ((v42 ^ 0x1000000000000) & 0xFF000000000000) != 0;
                                sub_2E44A4(*(void *)(a1 + 880), (uint64_t)&v121, &__p);
                                unint64_t v65 = 126 - 2 * __clz(0xCCCCCCCCCCCCCCCDLL * (((char *)v129 - (unsigned char *)__p) >> 3));
                                double v140 = (unint64_t *)&v121;
                                unint64_t v141 = (unint64_t *)a1;
                                if (v129 == __p) {
                                  uint64_t v66 = 0;
                                }
                                else {
                                  uint64_t v66 = v65;
                                }
                                sub_6E4EFC((uint64_t)__p, v129, (uint64_t)&v140, v66, 1);
                                double v140 = 0;
                                unint64_t v141 = 0;
                                uint64_t v142 = 0;
                                sub_6DBB70(a1, &v121, (uint64_t *)&__p, &v140);
                                int v16 = a3;
                                if (v140 == v141) {
                                  goto LABEL_86;
                                }
                                BOOL v67 = v140;
                                while (*v67 != -1)
                                {
                                  if (++v67 == v141)
                                  {
                                    BOOL v67 = v141;
                                    break;
                                  }
                                }
                                if (v67 != v141)
                                {
LABEL_86:
                                  if (v140)
                                  {
                                    unint64_t v141 = v140;
                                    operator delete(v140);
                                  }
                                  int v37 = 0;
                                  unint64_t v25 = -1;
                                  uint64_t v38 = *(int **)v137;
                                  unint64_t v39 = (unsigned __int16 *)(*(void *)v137 - (int)**(_DWORD **)v137);
                                  unsigned int v40 = *v39;
                                  if (v137[38]) {
                                    goto LABEL_96;
                                  }
                                  goto LABEL_89;
                                }
                                unint64_t v25 = *v140;
                                unint64_t v141 = v140;
                                operator delete(v140);
                                if (v25 == -1) {
                                  goto LABEL_95;
                                }
                                uint64_t v69 = *(void *)(sub_66F838(&__p, v25) + 32);
                                unint64_t v34 = *(void *)&v137[32];
                                if ((v69 & 0xFFFFFFFFFFFFLL) != (*(void *)&v137[32] & 0xFFFFFFFFFFFFLL)) {
                                  goto LABEL_95;
                                }
                                BOOL v35 = (v69 & 0xFF000000000000) == 0x1000000000000;
LABEL_46:
                                int v36 = v35;
                                int v37 = v36 ^ HIWORD(v34) & 1;
                                uint64_t v38 = *(int **)v137;
                                unint64_t v39 = (unsigned __int16 *)(*(void *)v137 - (int)**(_DWORD **)v137);
                                unsigned int v40 = *v39;
                                if (!v137[38]) {
                                  goto LABEL_89;
                                }
LABEL_96:
                                if (v40 >= 0x49)
                                {
                                  unsigned int v68 = v39[36];
                                  if (v68) {
                                    goto LABEL_98;
                                  }
                                }
LABEL_102:
                                __int16 v70 = -1;
                                int v71 = *((unsigned __int8 *)v26 + 38);
                                uint64_t v72 = *v26;
                                uint64_t v73 = **v26;
                                long long v74 = (unsigned __int16 *)((char *)*v26 - v73);
                                unsigned int v75 = *v74;
                                if (*((unsigned char *)v26 + 38)) {
                                  goto LABEL_103;
                                }
LABEL_99:
                                if (v75 < 0x49) {
                                  goto LABEL_106;
                                }
                                unsigned int v76 = v74[36];
                                if (!v74[36]) {
                                  goto LABEL_106;
                                }
LABEL_105:
                                int v77 = *(unsigned __int16 *)((char *)v72 + v76);
LABEL_107:
                                uint64_t v78 = -v73;
                                unsigned __int16 v79 = v70 + 18000;
                                unsigned __int16 v80 = v70 - 18000;
                                if ((unsigned __int16)(v79 >> 5) < 0x465u) {
                                  unsigned __int16 v80 = v79;
                                }
                                int v81 = v77 - v80;
                                if (v81 > 18000) {
                                  v81 -= 36000;
                                }
                                if (v81 < -17999) {
                                  v81 += 36000;
                                }
                                double v82 = (double)v81 / 100.0;
                                if (a5)
                                {
                                  if (v75 < 0x2F)
                                  {
                                    if (v75 < 0xB) {
                                      goto LABEL_151;
                                    }
                                  }
                                  else if (v74[23] && *((unsigned char *)v72 + v74[23]) == 23)
                                  {
                                    if (v37) {
                                      goto LABEL_151;
                                    }
LABEL_132:
                                    if (v74[5])
                                    {
                                      int v86 = *(int *)((char *)v72 + v74[5]);
                                      if (v71) {
                                        int v87 = 2;
                                      }
                                      else {
                                        int v87 = 1;
                                      }
                                      int v88 = ((v86 & v87) != 0) ^ ((unsigned __int16)(v86 & 0x8000) >> 15);
                                    }
                                    else
                                    {
                                      int v88 = 0;
                                    }
                                    if (v88) {
                                      BOOL v89 = v82 < 0.0;
                                    }
                                    else {
                                      BOOL v89 = v82 > 0.0;
                                    }
                                    if (v89)
                                    {
                                      unsigned int v121 = (int *)sub_2E4738((int **)v137);
                                      if (!sub_3CCE68(a1 + 888, (unsigned int **)&v121))
                                      {
                                        if (v114)
                                        {
                                          BOOL v108 = 1;
                                          uint64_t v109 = a6;
                                        }
                                        else
                                        {
                                          int v110 = (unsigned __int16 *)((char *)*v26 - **v26);
                                          uint64_t v109 = a6;
                                          BOOL v108 = *v110 >= 0x2Fu
                                              && (uint64_t v111 = v110[23]) != 0
                                              && (*((unsigned char *)*v26 + v111) & 0xF7) == 34;
                                        }
                                        *(void *)uint64_t v109 = v119;
                                        long long v112 = *((_OWORD *)v26 + 1);
                                        *(_OWORD *)(v109 + 8) = *(_OWORD *)v26;
                                        *(_OWORD *)(v109 + 24) = v112;
                                        *(void *)(v109 + 40) = v26[4];
                                        *(unsigned char *)(v109 + 48) = v108;
                                        uint64_t v107 = (int **)__p;
                                        if (__p) {
                                          goto LABEL_193;
                                        }
                                        goto LABEL_194;
                                      }
                                      uint64_t v38 = *(int **)v137;
                                    }
                                    unsigned __int16 v90 = (unsigned __int16 *)((char *)v38 - *v38);
                                    if (*v90 >= 0x2Fu && (uint64_t v91 = v90[23]) != 0)
                                    {
                                      unsigned int v92 = *((unsigned __int8 *)v38 + v91);
                                      BOOL v29 = v92 > 0x2A;
                                      unint64_t v93 = (0x2FBD97EFFFBuLL >> v92) & 1;
                                      if (v29) {
                                        LOBYTE(v93) = 1;
                                      }
                                    }
                                    else
                                    {
                                      LOBYTE(v93) = 1;
                                    }
                                    v116 |= v93 | a3 ^ 1;
                                    uint64_t v72 = *v26;
                                    uint64_t v78 = -(uint64_t)**v26;
                                    goto LABEL_151;
                                  }
                                  if (v74[5] && !(v37 & 1 | ((*((unsigned char *)v72 + v74[5]) & 4) == 0))) {
                                    goto LABEL_132;
                                  }
                                  goto LABEL_151;
                                }
                                if (v71)
                                {
                                  if (v75 < 0xB) {
                                    goto LABEL_151;
                                  }
                                  unsigned int v83 = v74[5];
                                  if (!v74[5]) {
                                    goto LABEL_151;
                                  }
                                  int v84 = 1;
                                  int v85 = 2;
                                }
                                else
                                {
                                  if (v75 < 0xB) {
                                    goto LABEL_151;
                                  }
                                  unsigned int v83 = v74[5];
                                  if (!v74[5]) {
                                    goto LABEL_151;
                                  }
                                  int v84 = 2;
                                  int v85 = 1;
                                }
                                if (((*(int *)((char *)v72 + v83) & v85) != 0) != ((*(int *)((char *)v72 + v83) & v84) != 0))
                                {
                                  LOWORD(v23) = *(_WORD *)(a1 + 1272);
                                  double v23 = (double)vmovl_s16(*(int16x4_t *)&v23).i32[0];
                                  if (!(v37 & 1 | (fabs(v82) <= v23))) {
                                    goto LABEL_132;
                                  }
                                }
LABEL_151:
                                if (*(unsigned __int16 *)((char *)v72 + v78) >= 9u && *(_WORD *)((char *)v72 + v78 + 8)) {
                                  uint64_t v94 = *(unsigned int *)((char *)v72 + *(unsigned __int16 *)((char *)v72 + v78 + 8));
                                }
                                else {
                                  uint64_t v94 = 0;
                                }
                                uint64_t v95 = v94 + v119;
                                unsigned int v121 = (int *)(v94 + v119);
                                uint64_t v96 = *v26;
                                double v97 = (unsigned __int16 *)((char *)*v26 - **v26);
                                unsigned int v98 = *v97;
                                if (v16)
                                {
                                  if (*((unsigned char *)v26 + 38)) {
                                    goto LABEL_157;
                                  }
LABEL_162:
                                  if (v98 < 0xB || !v97[5] || (*(int *)((char *)v96 + v97[5]) & 1) == 0) {
                                    goto LABEL_40;
                                  }
                                }
                                else
                                {
                                  if (*((unsigned char *)v26 + 38)) {
                                    goto LABEL_162;
                                  }
LABEL_157:
                                  if (v98 < 0xB || !v97[5] || (*(int *)((char *)v96 + v97[5]) & 2) == 0) {
                                    goto LABEL_40;
                                  }
                                }
                                if (v95 <= *a4)
                                {
                                  if ((int v99 = (unsigned __int16 *)((char *)v38 - *v38), *v99 >= 0x2Fu)
                                    && (uint64_t v100 = v99[23]) != 0
                                    && (unsigned int v101 = *((unsigned __int8 *)v38 + v100), v101 <= 0x2A)
                                    && ((1 << v101) & 0x50426810004) != 0
                                    || v37)
                                  {
                                    if (v114)
                                    {
                                      LOBYTE(v102) = 1;
                                    }
                                    else if (*v97 < 0x2Fu)
                                    {
                                      LOBYTE(v102) = 0;
                                    }
                                    else
                                    {
                                      uint64_t v102 = v97[23];
                                      if (v97[23]) {
                                        LOBYTE(v102) = (*((unsigned char *)v96 + v102) & 0xF7) == 34;
                                      }
                                    }
                                    LOBYTE(v140) = v102;
                                    sub_6DB4E8((char **)&v131, (long long *)v26, &v121, (char *)&v140);
                                  }
                                }
                                goto LABEL_40;
                              }
                            }
LABEL_184:
                            uint64_t v52 = 0;
                            if (!v63) {
                              goto LABEL_187;
                            }
                            goto LABEL_185;
                          }
LABEL_74:
                          uint64_t v63 = 0;
                          if (v61) {
                            goto LABEL_181;
                          }
                          goto LABEL_184;
                        }
                        if (v60 >= 5)
                        {
                          uint64_t v61 = (_DWORD *)*((unsigned __int16 *)v59 + 2);
                          if (*((_WORD *)v59 + 2)) {
                            uint64_t v61 = (_DWORD *)((char *)v61 + (void)v58 + *(unsigned int *)((char *)v61 + (void)v58));
                          }
                          if (v60 >= 7)
                          {
                            int v62 = *((unsigned __int16 *)v59 + 3);
                            if (*((_WORD *)v59 + 3)) {
                              goto LABEL_180;
                            }
                          }
                          goto LABEL_74;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          else
          {
            uint64_t v48 = 0;
            if (*(unsigned char *)(v41 + 7773)) {
              goto LABEL_59;
            }
          }
          uint64_t v64 = 0;
          uint64_t v52 = 0;
          goto LABEL_77;
        }
      }
      unint64_t v25 = -1;
      if (v121) {
        goto LABEL_33;
      }
    }
    else
    {
      unint64_t v25 = -1;
    }
    unsigned int v132 = v131;
    BOOL v26 = (int **)v134;
    uint64_t v120 = v135;
    if (v134 != v135) {
      goto LABEL_34;
    }
  }
  *(void *)a6 = 0x7FFFFFFFFFFFFFFFLL;
  *(_OWORD *)(a6 + 8) = 0u;
  *(_OWORD *)(a6 + 24) = 0u;
  *(_DWORD *)(a6 + 40) = 0;
  *(_WORD *)(a6 + 44) = -1;
  *(unsigned char *)(a6 + 46) = 0;
  *(unsigned char *)(a6 + 48) = 0;
  uint64_t v107 = (int **)__p;
  if (__p)
  {
LABEL_193:
    unsigned int v129 = v107;
    operator delete(v107);
  }
LABEL_194:
  if (v131)
  {
    unsigned int v132 = v131;
    operator delete(v131);
  }
  if (v134)
  {
    int v135 = (int **)v134;
    operator delete(v134);
  }
}

void sub_6DD2EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29)
{
  if (__p) {
    operator delete(__p);
  }
  if (a22)
  {
    operator delete(a22);
    uint64_t v30 = a25;
    if (!a25)
    {
LABEL_5:
      uint64_t v31 = a28;
      if (!a28) {
        goto LABEL_6;
      }
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v30 = a25;
    if (!a25) {
      goto LABEL_5;
    }
  }
  operator delete(v30);
  uint64_t v31 = a28;
  if (!a28) {
LABEL_6:
  }
    _Unwind_Resume(exception_object);
LABEL_9:
  operator delete(v31);
  _Unwind_Resume(exception_object);
}

void sub_6DD38C(uint64_t a1, int **a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 8) = *(void *)a4;
  if (*(void *)a3 == *(void *)(a3 + 8)) {
    return;
  }
  if (sub_6DE1F8((double *)a1, a2, a3))
  {
    __p = 0;
    sub_A4710(a4, &__p);
    return;
  }
  sub_6DA894(a1, a2, (void *)a3, (unint64_t **)a4);
  if (*(void *)a4 != *(void *)(a4 + 8)) {
    return;
  }
  uint64_t v8 = *(int ***)a3;
  uint64_t v9 = *(int ***)(a3 + 8);
  __p = (void *)a1;
  uint64_t v147 = a2;
  if (v8 == v9)
  {
    unint64_t v11 = v8;
LABEL_12:
    uint64_t v10 = sub_6E58D4(v11, v8, a1, a2);
    unint64_t v11 = *(int ***)a3;
    uint64_t v8 = *(int ***)(a3 + 8);
    goto LABEL_13;
  }
  while (!sub_6E564C((uint64_t *)&__p, v8))
  {
    v8 += 5;
    if (v8 == v9)
    {
      uint64_t v8 = v9;
      break;
    }
  }
  uint64_t v10 = v8;
  unint64_t v11 = *(int ***)a3;
  uint64_t v8 = *(int ***)(a3 + 8);
  if (v10 == v8) {
    goto LABEL_12;
  }
LABEL_13:
  if (v10 == v8) {
    unint64_t v12 = v11;
  }
  else {
    unint64_t v12 = v10;
  }
  unint64_t v13 = (unint64_t)v12[4];
  uint64_t v14 = v13 & 0xFF000000000000;
  uint64_t v15 = (int *)sub_2D5D58(*(void *)(a1 + 880), v13 & 0xFFFFFFFFFFFFLL);
  int v16 = (unsigned __int16 *)((char *)v15 - *v15);
  unsigned int v17 = *v16;
  if (v14)
  {
    if (v17 < 0x29) {
      goto LABEL_65;
    }
    unsigned int v18 = v16[20];
    if (!v18) {
      goto LABEL_65;
    }
    goto LABEL_22;
  }
  if (v17 >= 0x27)
  {
    unsigned int v18 = v16[19];
    if (v18)
    {
LABEL_22:
      if (*(int *)((char *)v15 + v18 + *(int *)((char *)v15 + v18)) != 1) {
        goto LABEL_65;
      }
      uint64_t v19 = *(void *)(a3 + 8) - *(void *)a3;
      if (!v19) {
        goto LABEL_65;
      }
      uint64_t v20 = 0;
      unint64_t v21 = 0;
      uint64_t v22 = v19 / 40;
      do
      {
        double v23 = (int **)sub_5A7C34((void *)a3, v21);
        unint64_t v24 = (unint64_t)v23[4];
        unint64_t v25 = (unint64_t)v12[4];
        if ((v24 & 0xFFFFFFFFFFFFLL) == (v25 & 0xFFFFFFFFFFFFLL)
          && ((v24 & 0xFF000000000000) == 0) != (HIWORD(v25) & 1))
        {
          goto LABEL_25;
        }
        if (fabs(sub_6D82EC(a1, a2, v23)) > *(double *)(a1 + 912)) {
          break;
        }
        BOOL v26 = (unsigned __int16 *)((char *)*a2 - **a2);
        unsigned int v27 = *v26;
        if (*((unsigned char *)a2 + 38))
        {
          if (v27 >= 0xB)
          {
            unsigned int v28 = v26[5];
            if (v28)
            {
              int v29 = 2;
LABEL_36:
              BOOL v30 = (*(int *)((char *)*a2 + v28) & v29) != 0;
              goto LABEL_38;
            }
          }
        }
        else if (v27 >= 0xB)
        {
          unsigned int v28 = v26[5];
          if (v28)
          {
            int v29 = 1;
            goto LABEL_36;
          }
        }
        BOOL v30 = 0;
LABEL_38:
        uint64_t v31 = *v23;
        unsigned int v32 = (unsigned __int16 *)((char *)*v23 - **v23);
        unsigned int v33 = *v32;
        if (!*((unsigned char *)v23 + 38))
        {
          if (v33 >= 0xB)
          {
            unsigned int v35 = v32[5];
            if (v35) {
              LOBYTE(v30) = v30 ^ ((*(int *)((char *)v31 + v35) & 1) != 0);
            }
          }
LABEL_46:
          if (v30) {
            goto LABEL_25;
          }
          goto LABEL_47;
        }
        if (v33 < 0xB) {
          goto LABEL_46;
        }
        unsigned int v34 = v32[5];
        if (!v34) {
          goto LABEL_46;
        }
        if ((v30 ^ ((*(int *)((char *)v31 + v34) & 2) != 0))) {
          goto LABEL_25;
        }
LABEL_47:
        unint64_t v36 = (unint64_t)v12[4];
        uint64_t v37 = v36 & 0xFF000000000000;
        uint64_t v38 = (int *)sub_2D5D58(*(void *)(a1 + 880), v36 & 0xFFFFFFFFFFFFLL);
        unint64_t v39 = (unsigned __int16 *)((char *)v38 - *v38);
        unsigned int v40 = *v39;
        if (v37)
        {
          if (v40 >= 0x29)
          {
            unsigned int v41 = v39[20];
            if (v41) {
              goto LABEL_53;
            }
          }
        }
        else if (v40 >= 0x27)
        {
          unsigned int v41 = v39[19];
          if (v41)
          {
LABEL_53:
            int v42 = *(int *)((char *)v38 + v41 + *(int *)((char *)v38 + v41));
            goto LABEL_55;
          }
        }
        int v42 = 0;
LABEL_55:
        unint64_t v43 = (unint64_t)v23[4];
        uint64_t v44 = v43 & 0xFF000000000000;
        unint64_t v45 = (int *)sub_2D5D58(*(void *)(a1 + 880), v43 & 0xFFFFFFFFFFFFLL);
        uint64_t v46 = (unsigned __int16 *)((char *)v45 - *v45);
        unsigned int v47 = *v46;
        if (v44)
        {
          if (v47 >= 0x29)
          {
            unsigned int v48 = v46[20];
            if (v48) {
              goto LABEL_61;
            }
          }
        }
        else if (v47 >= 0x27)
        {
          unsigned int v48 = v46[19];
          if (v48)
          {
LABEL_61:
            if (v42)
            {
              int v49 = *(int *)((char *)v45 + v48 + *(int *)((char *)v45 + v48));
              if (v49)
              {
                if (v49 - v42 >= *(_DWORD *)(a1 + 1080)) {
                  unint64_t v12 = (int **)(*(void *)a3 + v20);
                }
              }
            }
          }
        }
LABEL_25:
        ++v21;
        v20 += 40;
      }
      while (v22 != v21);
    }
  }
LABEL_65:
  unint64_t v149 = 0xCCCCCCCCCCCCCCCDLL * (((uint64_t)v12 - *(void *)a3) >> 3);
  double v50 = sub_6D82EC(a1, a2, v12);
  uint64_t v51 = *v12;
  uint64_t v52 = (unsigned __int16 *)((char *)*v12 - **v12);
  unsigned int v53 = *v52;
  if (v53 < 0x2F) {
    goto LABEL_75;
  }
  if (!v52[23] || (unsigned int v54 = *((unsigned __int8 *)v51 + v52[23]), v54 > 0x2C))
  {
LABEL_72:
    if (v53 >= 0x43 && v52[33])
    {
      int v55 = *((unsigned __int8 *)v51 + v52[33]);
      goto LABEL_76;
    }
LABEL_75:
    int v55 = 0;
    goto LABEL_76;
  }
  if (((1 << v54) & 0x180000105240) == 0)
  {
    if (!*((unsigned char *)v51 + v52[23]))
    {
      int v55 = *(_DWORD *)(a1 + 1480);
      goto LABEL_76;
    }
    goto LABEL_72;
  }
  int v55 = *(_DWORD *)(a1 + 1484);
LABEL_76:
  uint64_t v56 = *a2;
  unsigned int v57 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v58 = *v57;
  if (v58 < 0x2F) {
    goto LABEL_86;
  }
  if (v57[23])
  {
    unsigned int v59 = *((unsigned __int8 *)v56 + v57[23]);
    if (v59 <= 0x2C)
    {
      if (((1 << v59) & 0x180000105240) != 0)
      {
        LODWORD(v60) = *(_DWORD *)(a1 + 1484);
        goto LABEL_87;
      }
      if (!*((unsigned char *)v56 + v57[23]))
      {
        LODWORD(v60) = *(_DWORD *)(a1 + 1480);
        goto LABEL_87;
      }
    }
  }
  if (v58 < 0x43)
  {
LABEL_86:
    LODWORD(v60) = 0;
  }
  else
  {
    uint64_t v60 = v57[33];
    if (v57[33]) {
      LODWORD(v60) = *((unsigned __int8 *)v56 + v60);
    }
  }
LABEL_87:
  double v61 = fabs(v50);
  if (v55 != v60) {
    goto LABEL_126;
  }
  if (v53 < 0x2F)
  {
    LOBYTE(v62) = 0;
  }
  else
  {
    unint64_t v62 = v52[23];
    if (v52[23])
    {
      unsigned int v63 = *((unsigned __int8 *)v51 + v62);
      BOOL v64 = v63 > 0x2A;
      unint64_t v62 = (0x50426810004uLL >> v63) & 1;
      if (v64) {
        LOBYTE(v62) = 0;
      }
    }
  }
  if (v58 < 0x2F
    || !v57[23]
    || ((v65 = *((unsigned __int8 *)v56 + v57[23]), BOOL v64 = v65 > 0x2A, v66 = (1 << v65) & 0x50426810004, !v64)
      ? (BOOL v67 = v66 == 0)
      : (BOOL v67 = 1),
        v67))
  {
    if (v62) {
      goto LABEL_126;
    }
  }
  else if ((v62 & 1) == 0)
  {
    goto LABEL_126;
  }
  v69 = v53 >= 0x2F && (uint64_t v68 = v52[23]) != 0 && *((unsigned char *)v51 + v68) == 28;
  if (v58 >= 0x2F && v57[23]) {
    v69 ^= *((unsigned char *)v56 + v57[23]) == 28;
  }
  if ((v69 & 1) == 0 && sub_6DC0D4(a1, v12, a2))
  {
    int v70 = sub_6906B4((char **)v12);
    if (v70 == sub_6906B4((char **)a2))
    {
      int v71 = (unsigned __int16 *)((char *)*v12 - **v12);
      if (*v71 >= 0xBu && (uint64_t v72 = v71[5]) != 0) {
        int v73 = (*((unsigned __int8 *)*v12 + v72 + 1) >> 4) & 1;
      }
      else {
        int v73 = 0;
      }
      long long v74 = (unsigned __int16 *)((char *)*a2 - **a2);
      if (*v74 >= 0xBu && (uint64_t v75 = v74[5]) != 0)
      {
        if (v73 != (*((unsigned char *)*a2 + v75 + 1) & 0x10) >> 4) {
          goto LABEL_126;
        }
      }
      else if (v73)
      {
        goto LABEL_126;
      }
      if (v61 <= *(double *)(a1 + 960)) {
        goto LABEL_259;
      }
      uint64_t v76 = sub_6DE46C(*(int ***)a3, *(int ***)(a3 + 8), a1, a2);
      if (v61 <= *(double *)(a1 + 928))
      {
        uint64_t v77 = v76;
        if ((sub_6DAF14(a1, a2, (char **)v12) & 1) != 0 || v77 == 1) {
          goto LABEL_259;
        }
      }
    }
  }
LABEL_126:
  uint64_t v78 = *a2;
  unsigned __int16 v79 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v80 = *v79;
  if (v80 >= 0x2F && v79[23])
  {
    unsigned int v81 = *((unsigned __int8 *)v78 + v79[23]);
    BOOL v64 = v81 > 0x2A;
    uint64_t v82 = (1 << v81) & 0x50426810004;
    if (!v64 && v82 != 0)
    {
      if (*((unsigned char *)a2 + 38))
      {
        if (v80 < 0x49 || (unsigned int v84 = v79[36]) == 0)
        {
LABEL_139:
          __int16 v85 = -1;
LABEL_140:
          int v86 = (unsigned __int16 *)((char *)*v12 - **v12);
          unsigned int v87 = *v86;
          if (*((unsigned char *)v12 + 38))
          {
            if (v87 < 0x4B || (unsigned int v88 = v86[37]) == 0)
            {
LABEL_147:
              int v89 = 0xFFFF;
LABEL_148:
              unsigned __int16 v90 = v85 + 18000;
              unsigned __int16 v91 = v85 - 18000;
              if ((unsigned __int16)(v90 >> 5) < 0x465u) {
                unsigned __int16 v91 = v90;
              }
              int v92 = v89 - v91;
              if (v92 > 18000) {
                v92 -= 36000;
              }
              if (v92 < -17999) {
                v92 += 36000;
              }
              if (fabs((double)v92 / 100.0) > *(double *)(a1 + 928)) {
                goto LABEL_155;
              }
LABEL_259:
              sub_A4710(a4, &v149);
              return;
            }
          }
          else
          {
            if (v87 < 0x49) {
              goto LABEL_147;
            }
            unsigned int v88 = v86[36];
            if (!v88) {
              goto LABEL_147;
            }
          }
          int v89 = *(unsigned __int16 *)((char *)*v12 + v88);
          goto LABEL_148;
        }
      }
      else
      {
        if (v80 < 0x4B) {
          goto LABEL_139;
        }
        unsigned int v84 = v79[37];
        if (!v84) {
          goto LABEL_139;
        }
      }
      __int16 v85 = *(_WORD *)((char *)v78 + v84);
      goto LABEL_140;
    }
  }
LABEL_155:
  __p = 0;
  uint64_t v147 = 0;
  uint64_t v148 = 0;
  uint64_t v93 = *(void *)(a3 + 8) - *(void *)a3;
  if (!v93) {
    goto LABEL_256;
  }
  uint64_t v94 = 0;
  uint64_t v95 = 0;
  uint64_t v96 = v93 / 40;
  do
  {
    unint64_t v145 = (unint64_t)v95;
    double v97 = fabs(sub_6D82EC(a1, a2, (int **)(*(void *)a3 + v94)));
    double v98 = *(double *)(a1 + 936);
    int v99 = *(int ***)a3;
    uint64_t v100 = *a2;
    uint64_t v101 = **a2;
    if (v97 < v98)
    {
LABEL_182:
      int v114 = (unsigned __int16 *)((char *)v100 - v101);
      unsigned int v115 = *v114;
      if (*((unsigned char *)a2 + 38))
      {
        if (v115 >= 0xB)
        {
          unsigned int v116 = v114[5];
          if (v114[5])
          {
            int v117 = 2;
LABEL_189:
            BOOL v118 = (*(int *)((char *)v100 + v116) & v117) != 0;
            goto LABEL_191;
          }
        }
      }
      else if (v115 >= 0xB)
      {
        unsigned int v116 = v114[5];
        if (v114[5])
        {
          int v117 = 1;
          goto LABEL_189;
        }
      }
      BOOL v118 = 0;
LABEL_191:
      uint64_t v119 = v99[5 * v145];
      uint64_t v120 = (unsigned __int16 *)((char *)v119 - *v119);
      unsigned int v121 = *v120;
      if (BYTE6(v99[5 * v145 + 4]))
      {
        if (v121 >= 0xB && v120[5])
        {
          if ((v118 ^ ((*(int *)((char *)v119 + v120[5]) & 2) != 0))) {
            goto LABEL_157;
          }
LABEL_200:
          if (v115 >= 0xB && (uint64_t v122 = v114[5]) != 0 && (*((unsigned char *)v100 + v122 + 1) & 0x10) != 0
            || v121 < 0xB
            || !v120[5]
            || (*((unsigned char *)v119 + v120[5] + 1) & 0x10) == 0)
          {
            if (sub_2E79EC(*(void *)(a1 + 880), (uint64_t)a2[4], (uint64_t)v99[5 * v145 + 4])) {
              sub_A4710((uint64_t)&__p, &v145);
            }
          }
          goto LABEL_157;
        }
      }
      else if (v121 >= 0xB && v120[5])
      {
        LOBYTE(v118) = v118 ^ ((*(int *)((char *)v119 + v120[5]) & 1) != 0);
      }
      if (v118) {
        goto LABEL_157;
      }
      goto LABEL_200;
    }
    uint64_t v102 = (char *)v100 - v101;
    unsigned int v103 = *(unsigned __int16 *)((char *)v100 - v101);
    if (*((unsigned char *)a2 + 38))
    {
      if (v103 >= 0x49)
      {
        unsigned int v104 = *((unsigned __int16 *)v102 + 36);
        if (v104) {
          goto LABEL_165;
        }
      }
    }
    else if (v103 >= 0x4B)
    {
      unsigned int v104 = *((unsigned __int16 *)v102 + 37);
      if (v104)
      {
LABEL_165:
        __int16 v105 = *(_WORD *)((char *)v100 + v104);
        goto LABEL_167;
      }
    }
    __int16 v105 = -1;
LABEL_167:
    BOOL v106 = v99[5 * v145];
    uint64_t v107 = (unsigned __int16 *)((char *)v106 - *v106);
    unsigned int v108 = *v107;
    if (BYTE6(v99[5 * v145 + 4]))
    {
      if (v108 >= 0x4B)
      {
        unsigned int v109 = v107[37];
        if (v109) {
          goto LABEL_173;
        }
      }
    }
    else if (v108 >= 0x49)
    {
      unsigned int v109 = v107[36];
      if (v109)
      {
LABEL_173:
        int v110 = *(unsigned __int16 *)((char *)v106 + v109);
        goto LABEL_175;
      }
    }
    int v110 = 0xFFFF;
LABEL_175:
    unsigned __int16 v111 = v105 + 18000;
    unsigned __int16 v112 = v105 - 18000;
    if ((unsigned __int16)(v111 >> 5) < 0x465u) {
      unsigned __int16 v112 = v111;
    }
    int v113 = v110 - v112;
    if (v113 > 18000) {
      v113 -= 36000;
    }
    if (v113 < -17999) {
      v113 += 36000;
    }
    if (fabs((double)v113 / 100.0) < v98) {
      goto LABEL_182;
    }
LABEL_157:
    uint64_t v95 = (unsigned int *)((char *)v95 + 1);
    v94 += 40;
  }
  while ((unsigned int *)v96 != v95);
  uint64_t v123 = (unsigned int **)__p;
  if (v147 - (unsigned char *)__p == 8)
  {
    sub_A4710(a4, __p);
    goto LABEL_269;
  }
  if (__p != v147)
  {
    uint64_t v124 = *(int ***)a3;
    int v125 = *a2;
    do
    {
      unint64_t v145 = (unint64_t)*v123;
      __int16 v126 = v124[5 * v145];
      BOOL v127 = (unsigned __int16 *)((char *)v126 - *v126);
      unsigned int v128 = *v127;
      if (v128 < 0x2F) {
        goto LABEL_227;
      }
      if (v127[23])
      {
        unsigned int v129 = *((unsigned __int8 *)v126 + v127[23]);
        if (v129 <= 0x2C)
        {
          if (((1 << v129) & 0x180000105240) != 0)
          {
            int v130 = *(_DWORD *)(a1 + 1484);
            unint64_t v131 = (unsigned __int16 *)((char *)v125 - *v125);
            unsigned int v132 = *v131;
            if (v132 < 0x2F) {
              goto LABEL_237;
            }
            goto LABEL_228;
          }
          if (!*((unsigned char *)v126 + v127[23]))
          {
            int v130 = *(_DWORD *)(a1 + 1480);
            unint64_t v131 = (unsigned __int16 *)((char *)v125 - *v125);
            unsigned int v132 = *v131;
            if (v132 < 0x2F) {
              goto LABEL_237;
            }
            goto LABEL_228;
          }
        }
      }
      if (v128 >= 0x43 && v127[33])
      {
        int v130 = *((unsigned __int8 *)v126 + v127[33]);
        unint64_t v131 = (unsigned __int16 *)((char *)v125 - *v125);
        unsigned int v132 = *v131;
        if (v132 < 0x2F) {
          goto LABEL_237;
        }
      }
      else
      {
LABEL_227:
        int v130 = 0;
        unint64_t v131 = (unsigned __int16 *)((char *)v125 - *v125);
        unsigned int v132 = *v131;
        if (v132 < 0x2F) {
          goto LABEL_237;
        }
      }
LABEL_228:
      if (v131[23])
      {
        unsigned int v133 = *((unsigned __int8 *)v125 + v131[23]);
        if (v133 <= 0x2C)
        {
          if (((1 << v133) & 0x180000105240) != 0)
          {
            LODWORD(v134) = *(_DWORD *)(a1 + 1484);
            goto LABEL_238;
          }
          if (!*((unsigned char *)v125 + v131[23]))
          {
            LODWORD(v134) = *(_DWORD *)(a1 + 1480);
            goto LABEL_238;
          }
        }
      }
      if (v132 < 0x43)
      {
LABEL_237:
        LODWORD(v134) = 0;
        goto LABEL_238;
      }
      uint64_t v134 = v131[33];
      if (v131[33]) {
        LODWORD(v134) = *((unsigned __int8 *)v125 + v134);
      }
LABEL_238:
      if (v130 != v134) {
        goto LABEL_213;
      }
      if (v128 >= 0x2F && v127[23])
      {
        int v135 = *((unsigned __int8 *)v126 + v127[23]);
        if (v132 < 0x2F) {
          goto LABEL_247;
        }
      }
      else
      {
        int v135 = 32;
        if (v132 < 0x2F) {
          goto LABEL_247;
        }
      }
      if (!v131[23])
      {
LABEL_247:
        if (v135 != 32) {
          goto LABEL_213;
        }
        goto LABEL_248;
      }
      if (v135 != *((unsigned __int8 *)v125 + v131[23])) {
        goto LABEL_213;
      }
LABEL_248:
      if (v128 >= 0xB && (uint64_t v136 = v127[5]) != 0)
      {
        int v137 = (*((unsigned __int8 *)v126 + v136 + 1) >> 4) & 1;
        if (v132 < 0xB) {
          goto LABEL_212;
        }
      }
      else
      {
        int v137 = 0;
        if (v132 < 0xB) {
          goto LABEL_212;
        }
      }
      if (!v131[5])
      {
LABEL_212:
        if ((v137 & 1) == 0) {
          goto LABEL_255;
        }
        goto LABEL_213;
      }
      if (v137 == (*((unsigned char *)v125 + v131[5] + 1) & 0x10) >> 4)
      {
LABEL_255:
        sub_A4710(a4, &v145);
        goto LABEL_269;
      }
LABEL_213:
      ++v123;
    }
    while (v123 != (unsigned int **)v147);
  }
LABEL_256:
  if (v61 <= *(double *)(a1 + 952)) {
    goto LABEL_268;
  }
  unint64_t v145 = sub_2E4738(a2);
  if (sub_3CCE68(a1 + 888, (unsigned int **)&v145))
  {
    unint64_t v145 = 0;
    sub_A4710(a4, &v145);
    goto LABEL_269;
  }
  if (v61 <= *(double *)(a1 + 976) && (sub_6D8104(a1, a2, (uint64_t *)a3, v149) & 1) == 0)
  {
LABEL_268:
    sub_A4710(a4, &v149);
    goto LABEL_269;
  }
  unsigned int v138 = sub_6DB09C(*(int ***)a3, *(int ***)(a3 + 8), a2);
  unint64_t v139 = 0xCCCCCCCCCCCCCCCDLL * (((uint64_t)v138 - *(void *)a3) >> 3);
  unint64_t v145 = v139;
  double v140 = sub_69BAF0(a2, v138);
  uint64_t v144 = a1;
  if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 3) >= 2
    && fabs(v140) <= *(double *)(a1 + 984)
    && (sub_6D8104(a1, a2, (uint64_t *)a3, v139) & 1) == 0
    && (!*(unsigned char *)(a1 + 1592) || (sub_6DB110(&v144, (uint64_t)a2, (uint64_t)v138) & 1) != 0))
  {
    unint64_t v141 = &v145;
LABEL_280:
    sub_A4710(a4, v141);
    goto LABEL_269;
  }
  if (*(void *)(a3 + 8) - *(void *)a3 == 40 && (sub_6DB110(&v144, (uint64_t)a2, (uint64_t)v12) & 1) != 0
    || v61 <= *(double *)(a1 + 944)
    && (BOOL v142 = sub_6DB184(a1, a2), v142 != sub_6DB184(a1, v12))
    && (sub_6D8104(a1, a2, (uint64_t *)a3, v149) & 1) == 0)
  {
    unint64_t v141 = &v149;
    goto LABEL_280;
  }
  if (fabs(sub_6D82EC(a1, a2, *(int ***)a3)) <= *(double *)(a1 + 912))
  {
    uint64_t v143 = 0;
    sub_A4710(a4, &v143);
  }
LABEL_269:
  if (__p)
  {
    uint64_t v147 = __p;
    operator delete(__p);
  }
}

void sub_6DE1B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_6DE1F8(double *a1, int **a2, uint64_t a3)
{
  uint64_t v3 = *(int ***)a3;
  if (*(void *)a3 == *(void *)(a3 + 8) || fabs(sub_6D82EC((uint64_t)a1, a2, *(int ***)a3)) > a1[114]) {
    return 0;
  }
  uint64_t v7 = *a2;
  uint64_t v8 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v9 = *v8;
  if (*((unsigned char *)a2 + 38))
  {
    if (v9 < 0x49) {
      goto LABEL_13;
    }
    unsigned int v10 = v8[36];
    if (!v8[36]) {
      goto LABEL_13;
    }
  }
  else if (v9 < 0x4B || (unsigned int v10 = v8[37]) == 0)
  {
LABEL_13:
    __int16 v11 = -1;
    int v12 = *((unsigned __int8 *)v3 + 38);
    unint64_t v13 = *v3;
    uint64_t v14 = (unsigned __int16 *)((char *)*v3 - **v3);
    unsigned int v15 = *v14;
    if (*((unsigned char *)v3 + 38)) {
      goto LABEL_14;
    }
LABEL_10:
    if (v15 >= 0x49)
    {
      unsigned int v16 = v14[36];
      if (v14[36]) {
        goto LABEL_16;
      }
    }
    goto LABEL_17;
  }
  __int16 v11 = *(_WORD *)((char *)v7 + v10);
  int v12 = *((unsigned __int8 *)v3 + 38);
  unint64_t v13 = *v3;
  uint64_t v14 = (unsigned __int16 *)((char *)*v3 - **v3);
  unsigned int v15 = *v14;
  if (!*((unsigned char *)v3 + 38)) {
    goto LABEL_10;
  }
LABEL_14:
  if (v15 >= 0x4B)
  {
    unsigned int v16 = v14[37];
    if (v14[37])
    {
LABEL_16:
      int v17 = *(unsigned __int16 *)((char *)v13 + v16);
      goto LABEL_18;
    }
  }
LABEL_17:
  int v17 = 0xFFFF;
LABEL_18:
  unsigned __int16 v18 = v11 + 18000;
  unsigned __int16 v19 = v11 - 18000;
  if ((unsigned __int16)(v18 >> 5) < 0x465u) {
    unsigned __int16 v19 = v18;
  }
  int v20 = v17 - v19;
  if (v20 > 18000) {
    v20 -= 36000;
  }
  if (v20 < -17999) {
    v20 += 36000;
  }
  if (fabs((double)v20 / 100.0) > a1[115]) {
    return 0;
  }
  if (!*((unsigned char *)a2 + 38))
  {
    if (v9 >= 0xB)
    {
      unsigned int v24 = v8[5];
      if (v24)
      {
        BOOL v22 = (*(int *)((char *)v7 + v24) & 1) != 0;
        BOOL v23 = v15 >= 0xB;
        if (v12) {
          goto LABEL_39;
        }
LABEL_33:
        if (v23)
        {
          unsigned int v25 = v14[5];
          if (v25)
          {
            if ((v22 ^ ((*(int *)((char *)v13 + v25)))) {
              return 0;
            }
            goto LABEL_45;
          }
        }
LABEL_44:
        if (v22) {
          return 0;
        }
        goto LABEL_45;
      }
    }
LABEL_38:
    BOOL v22 = 0;
    BOOL v23 = v15 >= 0xB;
    if (v12) {
      goto LABEL_39;
    }
    goto LABEL_33;
  }
  if (v9 < 0xB) {
    goto LABEL_38;
  }
  unsigned int v21 = v8[5];
  if (!v21) {
    goto LABEL_38;
  }
  BOOL v22 = (*(int *)((char *)v7 + v21) & 2) != 0;
  BOOL v23 = v15 >= 0xB;
  if (!v12) {
    goto LABEL_33;
  }
LABEL_39:
  if (!v23) {
    goto LABEL_44;
  }
  unsigned int v26 = v14[5];
  if (!v26) {
    goto LABEL_44;
  }
  if ((v22 ^ ((*(int *)((char *)v13 + v26) & 2) != 0))) {
    return 0;
  }
LABEL_45:
  if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 3) < 2) {
    return 1;
  }
  unsigned int v27 = (int **)sub_5A7C34((void *)a3, 1uLL);
  return fabs(sub_6D82EC((uint64_t)a1, a2, v27)) > a1[116];
}

uint64_t sub_6DE46C(int **a1, int **a2, uint64_t a3, int **a4)
{
  if (a1 != a2)
  {
    unsigned int v4 = (char *)*a4;
    unsigned int v5 = (unsigned __int16 *)((char *)*a4 - **a4);
    unsigned int v6 = *v5;
    if (*((unsigned char *)a4 + 38))
    {
      if (v6 > 0xA)
      {
        uint64_t v7 = v5[5];
        if (v7)
        {
          uint64_t v8 = 0;
          int v9 = *(_DWORD *)&v4[v7];
          while (1)
          {
            __int16 v11 = (unsigned __int16 *)((char *)*a1 - **a1);
            unsigned int v12 = *v11;
            if (*((unsigned char *)a1 + 38))
            {
              if (v12 >= 0xB)
              {
                unsigned int v13 = v11[5];
                if (v13)
                {
                  int v14 = 2;
LABEL_15:
                  BOOL v10 = (*(int *)((char *)*a1 + v13) & v14) != 0;
                  goto LABEL_7;
                }
              }
            }
            else if (v12 >= 0xB)
            {
              unsigned int v13 = v11[5];
              if (v13)
              {
                int v14 = 1;
                goto LABEL_15;
              }
            }
            BOOL v10 = 0;
LABEL_7:
            v8 += ((v9 & 2) == 0) ^ v10;
            a1 += 5;
            if (a1 == a2) {
              return v8;
            }
          }
        }
        uint64_t v8 = 0;
        while (1)
        {
          while (1)
          {
            unsigned int v27 = (unsigned __int16 *)((char *)*a1 - **a1);
            unsigned int v28 = *v27;
            if (*((unsigned char *)a1 + 38)) {
              break;
            }
            if (v28 >= 0xB)
            {
              unsigned int v29 = v27[5];
              if (v29)
              {
                int v30 = 1;
                goto LABEL_53;
              }
            }
LABEL_45:
            ++v8;
            a1 += 5;
            if (a1 == a2) {
              return v8;
            }
          }
          if (v28 < 0xB) {
            goto LABEL_45;
          }
          unsigned int v29 = v27[5];
          if (!v29) {
            goto LABEL_45;
          }
          int v30 = 2;
LABEL_53:
          v8 += (*(int *)((char *)*a1 + v29) & v30) == 0;
          a1 += 5;
          if (a1 == a2) {
            return v8;
          }
        }
      }
      uint64_t v8 = 0;
      while (1)
      {
        while (1)
        {
          BOOL v23 = (unsigned __int16 *)((char *)*a1 - **a1);
          unsigned int v24 = *v23;
          if (*((unsigned char *)a1 + 38)) {
            break;
          }
          if (v24 >= 0xB)
          {
            unsigned int v25 = v23[5];
            if (v25)
            {
              int v26 = 1;
              goto LABEL_42;
            }
          }
LABEL_34:
          ++v8;
          a1 += 5;
          if (a1 == a2) {
            return v8;
          }
        }
        if (v24 < 0xB) {
          goto LABEL_34;
        }
        unsigned int v25 = v23[5];
        if (!v25) {
          goto LABEL_34;
        }
        int v26 = 2;
LABEL_42:
        v8 += (*(int *)((char *)*a1 + v25) & v26) == 0;
        a1 += 5;
        if (a1 == a2) {
          return v8;
        }
      }
    }
    uint64_t v8 = 0;
    while (1)
    {
      int v17 = *a1;
      unsigned __int16 v18 = (unsigned __int16 *)((char *)*a1 - **a1);
      unsigned int v19 = *v18;
      if (*((unsigned char *)a1 + 38))
      {
        if (v19 >= 0xB)
        {
          unsigned int v20 = v18[5];
          if (v20)
          {
            BOOL v21 = (*(int *)((char *)v17 + v20) & 2) != 0;
            if (v6 >= 0xB) {
              goto LABEL_31;
            }
            goto LABEL_19;
          }
        }
      }
      else if (v19 >= 0xB)
      {
        unsigned int v22 = v18[5];
        if (v22)
        {
          BOOL v21 = (*(int *)((char *)v17 + v22) & 1) != 0;
          if (v6 >= 0xB) {
            goto LABEL_31;
          }
          goto LABEL_19;
        }
      }
      BOOL v21 = 0;
      if (v6 >= 0xB)
      {
LABEL_31:
        uint64_t v16 = v5[5];
        if (v5[5]) {
          LODWORD(v16) = v4[v16] & 1;
        }
        goto LABEL_20;
      }
LABEL_19:
      LODWORD(v16) = 0;
LABEL_20:
      v8 += v21 ^ v16 ^ 1;
      a1 += 5;
      if (a1 == a2) {
        return v8;
      }
    }
  }
  return 0;
}

uint64_t sub_6DE6DC(uint64_t a1, void *a2, const void *a3, _OWORD *a4, char a5)
{
  *(void *)(a1 + 880) = sub_3750CC(a2);
  *(_OWORD *)(a1 + 888) = *a4;
  *(unsigned char *)(a1 + 904) = a5;
  memcpy((void *)(a1 + 912), a3, 0x3D0uLL);
  return a1;
}

void sub_6DE750(_Unwind_Exception *a1)
{
  uint64_t v3 = *(void **)(v1 + 848);
  if (v3)
  {
    *(void *)(v1 + 856) = v3;
    operator delete(v3);
  }
  sub_20AA9E0((void **)(v1 + 824), (void *)v1);
  sub_328138(v1);
  _Unwind_Resume(a1);
}

void sub_6DE780(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  unsigned int v4 = (int **)a3[1];
  unint64_t v5 = 126 - 2 * __clz(0xCCCCCCCCCCCCCCCDLL * (((uint64_t)v4 - *a3) >> 3));
  BOOL v6 = v4 == (int **)*a3;
  v8[0] = a2;
  v8[1] = a1;
  if (v6) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = v5;
  }
  sub_6E5CFC(v3, v4, (uint64_t)v8, v7, 1);
}

uint64_t sub_6DE7E0(uint64_t a1, int **a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  sub_6DE884(a1, a2, a3, &v7);
  if (v7 == v8)
  {
    a4 = -1;
  }
  else
  {
    unint64_t v5 = v7;
    while (*v5 != a4)
    {
      if (++v5 == v8)
      {
        unint64_t v5 = v8;
        break;
      }
    }
    if (v5 == v8)
    {
      a4 = *v7;
LABEL_10:
      uint64_t v8 = v7;
      operator delete(v7);
      return a4;
    }
  }
  if (v7) {
    goto LABEL_10;
  }
  return a4;
}

void sub_6DE868(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_6DE884(uint64_t a1, int **a2, uint64_t *a3, unint64_t **a4)
{
  uint64_t v6 = a1;
  a4[1] = *a4;
  unsigned int v81 = 0;
  uint64_t v82 = 0;
  uint64_t v83 = 0;
  sub_6E0054(a1, a2, (uint64_t)a3, (uint64_t)&v81);
  uint64_t v7 = v81;
  unsigned __int16 v79 = v82;
  if (v81 == v82) {
    goto LABEL_90;
  }
  uint64_t v78 = v6;
  do
  {
    unint64_t v9 = *v7;
    if (*v7 == -1 || !sub_6D8104(v6, a2, a3, *v7)) {
      goto LABEL_69;
    }
    BOOL v10 = (int **)sub_5A7C34(a3, v9);
    __int16 v11 = (unsigned __int16 *)((char *)*a2 - **a2);
    unsigned int v12 = *v11;
    if (*((unsigned char *)a2 + 38))
    {
      if (v12 >= 0x49)
      {
        unsigned int v13 = v11[36];
        if (v13) {
          goto LABEL_14;
        }
      }
    }
    else if (v12 >= 0x4B)
    {
      unsigned int v13 = v11[37];
      if (v13)
      {
LABEL_14:
        __int16 v14 = *(_WORD *)((char *)*a2 + v13);
        unsigned int v15 = (char *)*v10;
        uint64_t v16 = (unsigned __int16 *)((char *)*v10 - **v10);
        unsigned int v17 = *v16;
        if (*((unsigned char *)v10 + 38)) {
          goto LABEL_19;
        }
        goto LABEL_15;
      }
    }
    __int16 v14 = -1;
    unsigned int v15 = (char *)*v10;
    uint64_t v16 = (unsigned __int16 *)((char *)*v10 - **v10);
    unsigned int v17 = *v16;
    if (*((unsigned char *)v10 + 38))
    {
LABEL_19:
      if (v17 >= 0x4B)
      {
        unsigned int v18 = v16[37];
        if (v18) {
          goto LABEL_21;
        }
      }
      goto LABEL_22;
    }
LABEL_15:
    if (v17 >= 0x49)
    {
      unsigned int v18 = v16[36];
      if (v18)
      {
LABEL_21:
        int v19 = *(unsigned __int16 *)&v15[v18];
        goto LABEL_23;
      }
    }
LABEL_22:
    int v19 = 0xFFFF;
LABEL_23:
    unsigned __int16 v20 = v14 + 18000;
    unsigned __int16 v21 = v14 - 18000;
    if ((unsigned __int16)(v20 >> 5) < 0x465u) {
      unsigned __int16 v21 = v20;
    }
    int v22 = v19 - v21;
    if (v22 > 18000) {
      v22 -= 36000;
    }
    if (v22 >= -17999) {
      int v23 = v22;
    }
    else {
      int v23 = v22 + 36000;
    }
    unsigned int v24 = (int **)sub_5A7C34(a3, v9);
    double v25 = sub_6D82EC(v6, a2, v24);
    double v26 = fabs((double)v23 / 100.0);
    double v27 = fabs(v25);
    if (v27 >= v26) {
      double v27 = v26;
    }
    if (v27 <= *(double *)(v6 + 1064)
      || (unsigned int v28 = (unsigned __int16 *)((char *)*a2 - **a2), *v28 < 0x2Fu)
      || (uint64_t v29 = v28[23]) == 0
      || ((v30 = *((unsigned __int8 *)*a2 + v29), BOOL v31 = v30 > 0x2A, v32 = (1 << v30) & 0x50426810004, !v31)
        ? (BOOL v33 = v32 == 0)
        : (BOOL v33 = 1),
          v33))
    {
      if (v27 <= *(double *)(v6 + 1056)
        || (unsigned int v34 = (unsigned __int16 *)((char *)*a2 - **a2), *v34 >= 0x2Fu)
        && (uint64_t v35 = v34[23]) != 0
        && ((v36 = *((unsigned __int8 *)*a2 + v35), BOOL v31 = v36 > 0x2A, v37 = (1 << v36) & 0x50426810004, !v31)
          ? (BOOL v38 = v37 == 0)
          : (BOOL v38 = 1),
            !v38))
      {
        unsigned int v40 = a4[1];
        unint64_t v39 = (unint64_t)a4[2];
        if ((unint64_t)v40 < v39)
        {
          unint64_t *v40 = v9;
          uint64_t v41 = (uint64_t)(v40 + 1);
LABEL_68:
          a4[1] = (unint64_t *)v41;
LABEL_69:
          uint64_t v60 = a4[1];
          unint64_t v59 = (unint64_t)a4[2];
          if ((unint64_t)v60 >= v59)
          {
            double v61 = *a4;
            uint64_t v62 = (char *)v60 - (char *)*a4;
            uint64_t v63 = v62 >> 3;
            unint64_t v64 = (v62 >> 3) + 1;
            if (v64 >> 61) {
              sub_2E00();
            }
            uint64_t v65 = v59 - (void)v61;
            if (v65 >> 2 > v64) {
              unint64_t v64 = v65 >> 2;
            }
            if ((unint64_t)v65 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v66 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v66 = v64;
            }
            if (v66)
            {
              if (v66 >> 61) {
                sub_188D718();
              }
              BOOL v67 = operator new(8 * v66);
              uint64_t v68 = (unint64_t *)&v67[8 * v63];
              *uint64_t v68 = v9;
              uint64_t v8 = (uint64_t)(v68 + 1);
              if (v60 == v61)
              {
LABEL_87:
                *a4 = v68;
                a4[1] = (unint64_t *)v8;
                a4[2] = (unint64_t *)&v67[8 * v66];
                if (v61) {
                  operator delete(v61);
                }
                goto LABEL_4;
              }
            }
            else
            {
              BOOL v67 = 0;
              uint64_t v68 = (unint64_t *)(8 * v63);
              *(void *)(8 * v63) = v9;
              uint64_t v8 = 8 * v63 + 8;
              if (v60 == v61) {
                goto LABEL_87;
              }
            }
            unint64_t v69 = (char *)(v60 - 1) - (char *)v61;
            if (v69 < 0x58) {
              goto LABEL_99;
            }
            if ((unint64_t)((char *)v60 - &v67[v62]) < 0x20) {
              goto LABEL_99;
            }
            uint64_t v70 = (v69 >> 3) + 1;
            uint64_t v71 = 8 * (v70 & 0x3FFFFFFFFFFFFFFCLL);
            uint64_t v72 = &v60[v71 / 0xFFFFFFFFFFFFFFF8];
            uint64_t v68 = (unint64_t *)((char *)v68 - v71);
            int v73 = &v67[8 * v63 - 16];
            long long v74 = v60 - 2;
            uint64_t v75 = v70 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              long long v76 = *(_OWORD *)v74;
              *(v73 - 1) = *((_OWORD *)v74 - 1);
              *int v73 = v76;
              v73 -= 2;
              v74 -= 4;
              v75 -= 4;
            }
            while (v75);
            uint64_t v60 = v72;
            if (v70 != (v70 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_99:
              do
              {
                unint64_t v77 = *--v60;
                *--uint64_t v68 = v77;
              }
              while (v60 != v61);
            }
            goto LABEL_87;
          }
          unint64_t *v60 = v9;
          uint64_t v8 = (uint64_t)(v60 + 1);
LABEL_4:
          a4[1] = (unint64_t *)v8;
          uint64_t v6 = v78;
          goto LABEL_5;
        }
        int v42 = *a4;
        uint64_t v43 = (char *)v40 - (char *)*a4;
        uint64_t v44 = v43 >> 3;
        unint64_t v45 = (v43 >> 3) + 1;
        if (v45 >> 61) {
          sub_2E00();
        }
        uint64_t v46 = v39 - (void)v42;
        if (v46 >> 2 > v45) {
          unint64_t v45 = v46 >> 2;
        }
        if ((unint64_t)v46 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v47 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v47 = v45;
        }
        if (v47)
        {
          if (v47 >> 61) {
            sub_188D718();
          }
          unsigned int v48 = operator new(8 * v47);
          int v49 = (unint64_t *)&v48[8 * v44];
          *int v49 = v9;
          uint64_t v41 = (uint64_t)(v49 + 1);
          if (v40 == v42) {
            goto LABEL_66;
          }
LABEL_60:
          unint64_t v50 = (char *)(v40 - 1) - (char *)v42;
          if (v50 < 0x58) {
            goto LABEL_100;
          }
          if ((unint64_t)((char *)v40 - &v48[v43]) < 0x20) {
            goto LABEL_100;
          }
          uint64_t v51 = (v50 >> 3) + 1;
          uint64_t v52 = 8 * (v51 & 0x3FFFFFFFFFFFFFFCLL);
          unsigned int v53 = &v40[v52 / 0xFFFFFFFFFFFFFFF8];
          int v49 = (unint64_t *)((char *)v49 - v52);
          unsigned int v54 = &v48[8 * v44 - 16];
          int v55 = v40 - 2;
          uint64_t v56 = v51 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            long long v57 = *(_OWORD *)v55;
            *(v54 - 1) = *((_OWORD *)v55 - 1);
            *unsigned int v54 = v57;
            v54 -= 2;
            v55 -= 4;
            v56 -= 4;
          }
          while (v56);
          unsigned int v40 = v53;
          if (v51 != (v51 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_100:
            do
            {
              unint64_t v58 = *--v40;
              *--int v49 = v58;
            }
            while (v40 != v42);
          }
        }
        else
        {
          unsigned int v48 = 0;
          int v49 = (unint64_t *)(8 * v44);
          *(void *)(8 * v44) = v9;
          uint64_t v41 = 8 * v44 + 8;
          if (v40 != v42) {
            goto LABEL_60;
          }
        }
LABEL_66:
        *a4 = v49;
        a4[1] = (unint64_t *)v41;
        a4[2] = (unint64_t *)&v48[8 * v47];
        if (v42) {
          operator delete(v42);
        }
        goto LABEL_68;
      }
    }
LABEL_5:
    ++v7;
  }
  while (v7 != v79);
  uint64_t v7 = v81;
LABEL_90:
  if (v7)
  {
    uint64_t v82 = v7;
    operator delete(v7);
  }
}

void sub_6DEDB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6DEDE8(uint64_t a1, int **a2)
{
  uint64_t v2 = (char *)*a2;
  uint64_t v3 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v4 = *v3;
  if (*((unsigned char *)a2 + 38))
  {
    if (v4 >= 0x39)
    {
      uint64_t v5 = v3[28];
      if (v5)
      {
        unsigned int v6 = *(_DWORD *)&v2[v5];
        if ((v6 & 2) != 0) {
          return 1;
        }
        goto LABEL_9;
      }
    }
    return 0;
  }
  if (v4 < 0x39) {
    return 0;
  }
  uint64_t v7 = v3[28];
  if (!v7) {
    return 0;
  }
  unsigned int v6 = *(_DWORD *)&v2[v7];
  if (v6) {
    return 1;
  }
LABEL_9:
  if ((v6 & 7) == 4) {
    return 1;
  }
  if ((v6 & 3) != 0) {
    return 0;
  }
  return (v6 >> 5) & 1;
}

uint64_t sub_6DEE5C(uint64_t a1, int **a2)
{
  uint64_t v2 = (char *)*a2;
  uint64_t v3 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v4 = *v3;
  if (*((unsigned char *)a2 + 38) == 1)
  {
    if (v4 >= 0x39)
    {
      uint64_t v5 = v3[28];
      if (v5)
      {
        unsigned int v6 = *(_DWORD *)&v2[v5];
        if (v6) {
          return 1;
        }
        goto LABEL_9;
      }
    }
    return 0;
  }
  if (v4 < 0x39) {
    return 0;
  }
  uint64_t v7 = v3[28];
  if (!v7) {
    return 0;
  }
  unsigned int v6 = *(_DWORD *)&v2[v7];
  if ((v6 & 2) != 0) {
    return 1;
  }
LABEL_9:
  if ((v6 & 7) == 4) {
    return 1;
  }
  if ((v6 & 3) != 0) {
    return 0;
  }
  return (v6 >> 5) & 1;
}

BOOL sub_6DEED8(void *a1, int **a2)
{
  unsigned int v4 = (char *)*a2;
  uint64_t v5 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v6 = *v5;
  if (*((unsigned char *)a2 + 38))
  {
    if (v6 >= 0xB)
    {
      uint64_t v7 = v5[5];
      if (v7)
      {
        int v8 = *(_DWORD *)&v4[v7];
        if ((v8 & 2) != 0 && (v8 & 1) == 0)
        {
LABEL_68:
          long long v53 = *((_OWORD *)a2 + 1);
          long long v68 = *(_OWORD *)a2;
          long long v69 = v53;
          unint64_t v54 = (unint64_t)a2[4];
          unint64_t v70 = v54;
          uint64_t v55 = a1[110];
          uint64_t v56 = sub_2D5D58(v55, v54 & 0xFFFFFFFFFFFFLL);
          if (*(unsigned char *)(v55 + 7772))
          {
            long long v57 = sub_2DB8E0(v55 + 3896, v54, 0);
            unint64_t v58 = &v57[-*(int *)v57];
            if (*(unsigned __int16 *)v58 < 5u)
            {
              uint64_t v59 = 0;
            }
            else
            {
              uint64_t v59 = *((unsigned __int16 *)v58 + 2);
              if (v59) {
                v59 += (uint64_t)&v57[*(unsigned int *)&v57[v59]];
              }
            }
            uint64_t v60 = v59
                + 4 * (unsigned __int16)((v54 ^ 0x1000000000000) >> 32)
                + 4
                + *(unsigned int *)(v59 + 4 * (unsigned __int16)((v54 ^ 0x1000000000000) >> 32) + 4);
          }
          else
          {
            uint64_t v60 = 0;
          }
          *(void *)&long long v65 = v56;
          *((void *)&v65 + 1) = v60;
          *(void *)&long long v66 = sub_2E5C38(v55, v54 & 0xFFFFFFFFFFFFLL, 1);
          *((void *)&v66 + 1) = v61;
          LODWORD(v67) = v54;
          WORD2(v67) = (v54 ^ 0x1000000000000) >> 32;
          BYTE6(v67) = ((v54 ^ 0x1000000000000) & 0xFF000000000000) != 0;
          goto LABEL_19;
        }
      }
    }
  }
  else if (v6 >= 0xB)
  {
    uint64_t v9 = v5[5];
    if (v9)
    {
      int v10 = *(_DWORD *)&v4[v9];
      if ((v10 & 1) != 0 && (v10 & 2) == 0) {
        goto LABEL_68;
      }
    }
  }
  uint64_t v11 = a1[110];
  unint64_t v12 = (unint64_t)a2[4];
  uint64_t v13 = sub_2D5D58(v11, v12 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v11 + 7772))
  {
    __int16 v14 = sub_2DB8E0(v11 + 3896, v12, 0);
    unsigned int v15 = &v14[-*(int *)v14];
    if (*(unsigned __int16 *)v15 < 5u)
    {
      uint64_t v16 = 0;
    }
    else
    {
      uint64_t v16 = *((unsigned __int16 *)v15 + 2);
      if (v16) {
        v16 += (uint64_t)&v14[*(unsigned int *)&v14[v16]];
      }
    }
    uint64_t v17 = v16
        + 4 * (unsigned __int16)((v12 ^ 0x1000000000000) >> 32)
        + 4
        + *(unsigned int *)(v16 + 4 * (unsigned __int16)((v12 ^ 0x1000000000000) >> 32) + 4);
  }
  else
  {
    uint64_t v17 = 0;
  }
  *(void *)&long long v68 = v13;
  *((void *)&v68 + 1) = v17;
  *(void *)&long long v69 = sub_2E5C38(v11, v12 & 0xFFFFFFFFFFFFLL, 1);
  *((void *)&v69 + 1) = v18;
  LODWORD(v70) = v12;
  WORD2(v70) = (v12 ^ 0x1000000000000) >> 32;
  BYTE6(v70) = ((v12 ^ 0x1000000000000) & 0xFF000000000000) != 0;
  long long v19 = *((_OWORD *)a2 + 1);
  long long v65 = *(_OWORD *)a2;
  long long v66 = v19;
  BOOL v67 = a2[4];
LABEL_19:
  sub_6DF3D8((uint64_t)a1, (int **)&v68, 1, a1 + 156, 1, (uint64_t)&v62);
  uint64_t v20 = v62;
  if (v62 == 0x7FFFFFFFFFFFFFFFLL) {
    goto LABEL_45;
  }
  unsigned __int16 v21 = v63;
  int v22 = v64;
  sub_6DF3D8((uint64_t)a1, (int **)&v65, 0, a1 + 156, 1, (uint64_t)&v62);
  if (v62 == 0x7FFFFFFFFFFFFFFFLL) {
    goto LABEL_45;
  }
  int v23 = (unsigned __int16 *)((char *)v21 - *v21);
  if (*v23 >= 0x2Fu && (uint64_t v24 = v23[23]) != 0)
  {
    unsigned int v25 = *((unsigned __int8 *)v21 + v24);
    BOOL v26 = v25 > 0x2F;
    unint64_t v27 = (0xE2E040048000uLL >> v25) & 1;
    if (v26) {
      char v28 = 0;
    }
    else {
      char v28 = v27;
    }
    int v29 = v64;
    unsigned int v30 = (unsigned __int16 *)((char *)v63 - *v63);
    if (*v30 < 0x2Fu) {
      goto LABEL_36;
    }
  }
  else
  {
    char v28 = 0;
    int v29 = v64;
    unsigned int v30 = (unsigned __int16 *)((char *)v63 - *v63);
    if (*v30 < 0x2Fu) {
      goto LABEL_36;
    }
  }
  uint64_t v31 = v30[23];
  if (v31)
  {
    unsigned int v32 = *((unsigned __int8 *)v63 + v31);
    BOOL v26 = v32 > 0x2F;
    uint64_t v33 = (1 << v32) & 0xE2E040048000;
    BOOL v34 = v26 || v33 == 0;
    if (!v34)
    {
      if ((v28 & 1) == 0) {
        goto LABEL_45;
      }
      goto LABEL_37;
    }
  }
LABEL_36:
  if (v28) {
    goto LABEL_45;
  }
LABEL_37:
  uint64_t v35 = (unsigned __int16 *)(v68 - *(int *)v68);
  if (*v35 >= 9u && (uint64_t v36 = v35[4]) != 0) {
    uint64_t v37 = *(unsigned int *)(v68 + v36);
  }
  else {
    uint64_t v37 = 0;
  }
  BOOL v34 = (v22 | v29) == 0;
  uint64_t v38 = 156;
  if (v34) {
    uint64_t v38 = 157;
  }
  if (v62 + v20 + v37 < a1[v38]) {
    return 1;
  }
LABEL_45:
  sub_6DF3D8((uint64_t)a1, (int **)&v68, 1, a1 + 158, 0, (uint64_t)&v62);
  BOOL result = 0;
  uint64_t v40 = v62;
  if (v62 == 0x7FFFFFFFFFFFFFFFLL) {
    return result;
  }
  uint64_t v41 = v63;
  sub_6DF3D8((uint64_t)a1, (int **)&v65, 0, a1 + 158, 0, (uint64_t)&v62);
  BOOL result = 0;
  if (v62 == 0x7FFFFFFFFFFFFFFFLL) {
    return result;
  }
  int v42 = (unsigned __int16 *)((char *)v41 - *v41);
  if (*v42 < 0x2Fu)
  {
    LOBYTE(v43) = 0;
    unint64_t v45 = (unsigned __int16 *)((char *)v63 - *v63);
    if (*v45 < 0x2Fu) {
      goto LABEL_61;
    }
  }
  else
  {
    unint64_t v43 = v42[23];
    if (v43)
    {
      unsigned int v44 = *((unsigned __int8 *)v41 + v43);
      BOOL v26 = v44 > 0x2F;
      unint64_t v43 = (0xE2E040048000uLL >> v44) & 1;
      if (v26) {
        LOBYTE(v43) = 0;
      }
    }
    unint64_t v45 = (unsigned __int16 *)((char *)v63 - *v63);
    if (*v45 < 0x2Fu) {
      goto LABEL_61;
    }
  }
  uint64_t v46 = v45[23];
  if (v46)
  {
    unsigned int v47 = *((unsigned __int8 *)v63 + v46);
    BOOL v26 = v47 > 0x2F;
    uint64_t v48 = (1 << v47) & 0xE2E040048000;
    if (!v26 && v48 != 0)
    {
      if (v43) {
        goto LABEL_62;
      }
      return 0;
    }
  }
LABEL_61:
  if (v43) {
    return 0;
  }
LABEL_62:
  unint64_t v50 = (unsigned __int16 *)(v68 - *(int *)v68);
  if (*v50 >= 9u && (uint64_t v51 = v50[4]) != 0) {
    uint64_t v52 = *(unsigned int *)(v68 + v51);
  }
  else {
    uint64_t v52 = 0;
  }
  return v62 + v40 + v52 < a1[158];
}

void sub_6DF3D8(uint64_t a1@<X0>, int **a2@<X1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v8 = 0;
  *(void *)(a1 + 856) = *(void *)(a1 + 848);
  *(void *)(a1 + 832) = *(void *)(a1 + 824);
  *(_DWORD *)(a1 + 872) = 0;
  *(void *)(a1 + 776) = *(void *)(a1 + 768);
  do
  {
    uint64_t v10 = a1 + v8;
    if (*(void *)(a1 + v8 + 16))
    {
      unint64_t v11 = *(void *)(v10 + 24);
      if (v11 >= 0x80)
      {
        uint64_t v9 = (void *)(a1 + v8);
        operator delete(*(void **)(a1 + v8));
        v9[5] = 0;
        void *v9 = &unk_20E1710;
        v9[1] = 0;
        v9[2] = 0;
        v9[3] = 0;
      }
      else if (v11)
      {
        *(void *)(v10 + 16) = 0;
        memset(*(void **)(a1 + v8), 128, v11 + 8);
        *(unsigned char *)(*(void *)(a1 + v8) + v11) = -1;
        unint64_t v12 = *(void *)(v10 + 24);
        if (v12 == 7) {
          uint64_t v13 = 6;
        }
        else {
          uint64_t v13 = v12 - (v12 >> 3);
        }
        *(void *)(a1 + v8 + 40) = v13 - *(void *)(v10 + 16);
      }
    }
    v8 += 48;
  }
  while (v8 != 768);
  LOBYTE(v14) = 0;
  *(void *)(a1 + 800) = *(void *)(a1 + 792);
  *(_DWORD *)(a1 + 816) = 0;
  unsigned int v121 = a2[4];
  unsigned int v15 = (unsigned __int16 *)((char *)*a2 - **a2);
  int v16 = a3;
  if (*v15 >= 0x2Fu)
  {
    uint64_t v14 = v15[23];
    if (v15[23]) {
      LOBYTE(v14) = (*((unsigned char *)*a2 + v14) & 0xF7) == 34;
    }
  }
  *(void *)int v137 = 0;
  long long v17 = *((_OWORD *)a2 + 1);
  *(_OWORD *)&v137[8] = *(_OWORD *)a2;
  *(_OWORD *)&v137[24] = v17;
  unsigned int v138 = a2[4];
  char v139 = v14;
  sub_6DB1E8(a1, (unint64_t *)&v121, (uint64_t)v137);
  uint64_t v134 = 0;
  int v135 = 0;
  uint64_t v136 = 0;
  unint64_t v131 = 0;
  unsigned int v132 = 0;
  uint64_t v133 = 0;
  __p = 0;
  unsigned int v129 = 0;
  uint64_t v130 = 0;
  while (*(_DWORD *)(a1 + 872))
  {
    unint64_t v18 = *(void *)(a1 + 768) + ((unint64_t)**(unsigned int **)(a1 + 824) << 6);
    long long v19 = *(_OWORD *)(v18 + 16);
    long long v20 = *(_OWORD *)(v18 + 32);
    *(void *)&v137[32] = *(void *)(v18 + 48);
    *(_OWORD *)int v137 = v19;
    *(_OWORD *)&v137[16] = v20;
    uint64_t v119 = *(void *)(v18 + 8);
    int v114 = *(unsigned __int8 *)(v18 + 56);
    sub_51325C(a1);
    sub_2E44A4(*(void *)(a1 + 880), (uint64_t)v137, &v134);
    unint64_t v21 = 126 - 2 * __clz(0xCCCCCCCCCCCCCCCDLL * (((char *)v135 - (unsigned char *)v134) >> 3));
    unsigned int v121 = (int *)v137;
    uint64_t v122 = (int *)a1;
    if (v135 == v134) {
      uint64_t v22 = 0;
    }
    else {
      uint64_t v22 = v21;
    }
    sub_6E5CFC((uint64_t)v134, v135, (uint64_t)&v121, v22, 1);
    if (v16)
    {
      unsigned int v121 = 0;
      uint64_t v122 = 0;
      uint64_t v123 = 0;
      sub_6DE884(a1, (int **)v137, (uint64_t *)&v134, (unint64_t **)&v121);
      if (v121 != v122)
      {
        uint64_t v24 = v121;
        while (*(void *)v24 != -1)
        {
          v24 += 2;
          if (v24 == v122)
          {
            uint64_t v24 = v122;
            break;
          }
        }
        if (v24 == v122)
        {
          unint64_t v25 = *(void *)v121;
LABEL_33:
          uint64_t v122 = v121;
          operator delete(v121);
          unsigned int v132 = v131;
          BOOL v26 = (int **)v134;
          uint64_t v120 = v135;
          if (v134 == v135) {
            continue;
          }
LABEL_34:
          char v116 = 0;
LABEL_41:
          unsigned int v32 = (unsigned __int16 *)((char *)*v26 - **v26);
          if (*v32 >= 0x2Fu)
          {
            uint64_t v27 = v32[23];
            if (v27)
            {
              unsigned int v28 = *((unsigned __int8 *)*v26 + v27);
              BOOL v29 = v28 > 0x36;
              uint64_t v30 = (1 << v28) & 0x44000000000008;
              if (!v29 && v30 != 0)
              {
LABEL_40:
                v26 += 5;
                if (v26 == v120)
                {
                  if ((v116 & 1) == 0)
                  {
                    BOOL v106 = v131;
                    __int16 v105 = v132;
                    if (v131 != v132)
                    {
                      do
                      {
                        unsigned int v121 = (int *)v106[5];
                        sub_6DB6A0(a1, (unint64_t *)&v121, (uint64_t)v106);
                        v106 += 7;
                      }
                      while (v106 != v105);
                    }
                  }
                  continue;
                }
                goto LABEL_41;
              }
            }
          }
          if (v16)
          {
            if (v25 != -1)
            {
              uint64_t v33 = *(void *)(sub_66F838(&v134, v25) + 32);
              unint64_t v34 = (unint64_t)v26[4];
              if ((v33 & 0xFFFFFFFFFFFFLL) == (v34 & 0xFFFFFFFFFFFFLL))
              {
                BOOL v35 = (v33 & 0xFF000000000000) == 0;
                goto LABEL_46;
              }
            }
LABEL_95:
            int v37 = 0;
            uint64_t v38 = *(int **)v137;
            unint64_t v39 = (unsigned __int16 *)(*(void *)v137 - (int)**(_DWORD **)v137);
            unsigned int v40 = *v39;
            if (v137[38]) {
              goto LABEL_96;
            }
LABEL_89:
            if (v40 < 0x4B) {
              goto LABEL_102;
            }
            unsigned int v68 = v39[37];
            if (!v68) {
              goto LABEL_102;
            }
LABEL_98:
            __int16 v70 = *(_WORD *)((char *)v38 + v68);
            int v71 = *((unsigned __int8 *)v26 + 38);
            uint64_t v72 = *v26;
            uint64_t v73 = **v26;
            long long v74 = (unsigned __int16 *)((char *)*v26 - v73);
            unsigned int v75 = *v74;
            if (!*((unsigned char *)v26 + 38)) {
              goto LABEL_99;
            }
LABEL_103:
            if (v75 >= 0x4B)
            {
              unsigned int v76 = v74[37];
              if (v74[37]) {
                goto LABEL_105;
              }
            }
LABEL_106:
            int v77 = 0xFFFF;
            goto LABEL_107;
          }
          uint64_t v41 = *(void *)(a1 + 880);
          unint64_t v42 = (unint64_t)v26[4];
          unint64_t v43 = v42 & 0xFFFFFFFFFFFFLL;
          unsigned int v44 = (int *)sub_2D5D58(v41, v42 & 0xFFFFFFFFFFFFLL);
          if (*(unsigned char *)(v41 + 7772))
          {
            unint64_t v45 = sub_2DB8E0(v41 + 3896, v42, 0);
            uint64_t v46 = &v45[-*(int *)v45];
            if (*(unsigned __int16 *)v46 < 5u)
            {
              uint64_t v47 = 0;
            }
            else
            {
              uint64_t v47 = *((unsigned __int16 *)v46 + 2);
              if (v47) {
                v47 += (uint64_t)&v45[*(unsigned int *)&v45[v47]];
              }
            }
            uint64_t v48 = v47
                + 4 * (unsigned __int16)((v42 ^ 0x1000000000000) >> 32)
                + 4
                + *(unsigned int *)(v47 + 4 * (unsigned __int16)((v42 ^ 0x1000000000000) >> 32) + 4);
            if (*(unsigned char *)(v41 + 7773))
            {
LABEL_59:
              uint64_t v49 = v41 + 3896;
              unint64_t v50 = sub_2E5E08(v49, v42, 1);
              if (v50)
              {
                uint64_t v51 = &v50[-*(int *)v50];
                if (*(unsigned __int16 *)v51 >= 0xBu)
                {
                  uint64_t v52 = *((unsigned __int16 *)v51 + 5);
                  if (!*((_WORD *)v51 + 5)) {
                    goto LABEL_187;
                  }
                  long long v53 = &v50[v52 + *(unsigned int *)&v50[v52]];
                  if (*(_DWORD *)v53 > HIDWORD(v43))
                  {
                    unint64_t v54 = &v53[8 * HIDWORD(v43)];
                    unsigned int v57 = *((_DWORD *)v54 + 1);
                    uint64_t v56 = v54 + 4;
                    unsigned int v55 = v57;
                    if (v57)
                    {
                      unint64_t v58 = sub_2E5F98(v49, v55, 1);
                      if (v58)
                      {
                        uint64_t v59 = &v58[-*(int *)v58];
                        unsigned int v60 = *(unsigned __int16 *)v59;
                        if ((*((unsigned char *)v56 + 6) & 2) == 0)
                        {
                          if (v60 < 7)
                          {
                            uint64_t v61 = 0;
                            uint64_t v64 = 0;
                            uint64_t v52 = 0;
                            if (v60 >= 5) {
                              goto LABEL_179;
                            }
                            goto LABEL_77;
                          }
                          uint64_t v61 = (_DWORD *)*((unsigned __int16 *)v59 + 3);
                          if (*((_WORD *)v59 + 3)) {
                            uint64_t v61 = (_DWORD *)((char *)v61 + (void)v58 + *(unsigned int *)((char *)v61 + (void)v58));
                          }
LABEL_179:
                          int v62 = *((unsigned __int16 *)v59 + 2);
                          if (*((_WORD *)v59 + 2))
                          {
LABEL_180:
                            uint64_t v63 = &v58[v62 + *(unsigned int *)&v58[v62]];
                            if (v61)
                            {
LABEL_181:
                              uint64_t v103 = *((unsigned __int16 *)v56 + 2);
                              if (*v61 > v103)
                              {
                                uint64_t v52 = (uint64_t)&v61[v103 + 1] + v61[v103 + 1];
                                if (!v63)
                                {
LABEL_187:
                                  uint64_t v64 = 0;
                                  goto LABEL_77;
                                }
LABEL_185:
                                uint64_t v104 = *((unsigned __int16 *)v56 + 2);
                                if (*(_DWORD *)v63 <= v104) {
                                  goto LABEL_187;
                                }
                                uint64_t v64 = (uint64_t)&v63[4 * v104 + 4 + *(unsigned int *)&v63[4 * v104 + 4]];
LABEL_77:
                                unsigned int v121 = v44;
                                uint64_t v122 = (int *)v48;
                                uint64_t v123 = v52;
                                uint64_t v124 = v64;
                                int v125 = v42;
                                __int16 v126 = (v42 ^ 0x1000000000000) >> 32;
                                BOOL v127 = ((v42 ^ 0x1000000000000) & 0xFF000000000000) != 0;
                                sub_2E44A4(*(void *)(a1 + 880), (uint64_t)&v121, &__p);
                                unint64_t v65 = 126 - 2 * __clz(0xCCCCCCCCCCCCCCCDLL * (((char *)v129 - (unsigned char *)__p) >> 3));
                                double v140 = (unint64_t *)&v121;
                                unint64_t v141 = (unint64_t *)a1;
                                if (v129 == __p) {
                                  uint64_t v66 = 0;
                                }
                                else {
                                  uint64_t v66 = v65;
                                }
                                sub_6E5CFC((uint64_t)__p, v129, (uint64_t)&v140, v66, 1);
                                double v140 = 0;
                                unint64_t v141 = 0;
                                uint64_t v142 = 0;
                                sub_6DE884(a1, &v121, (uint64_t *)&__p, &v140);
                                int v16 = a3;
                                if (v140 == v141) {
                                  goto LABEL_86;
                                }
                                BOOL v67 = v140;
                                while (*v67 != -1)
                                {
                                  if (++v67 == v141)
                                  {
                                    BOOL v67 = v141;
                                    break;
                                  }
                                }
                                if (v67 != v141)
                                {
LABEL_86:
                                  if (v140)
                                  {
                                    unint64_t v141 = v140;
                                    operator delete(v140);
                                  }
                                  int v37 = 0;
                                  unint64_t v25 = -1;
                                  uint64_t v38 = *(int **)v137;
                                  unint64_t v39 = (unsigned __int16 *)(*(void *)v137 - (int)**(_DWORD **)v137);
                                  unsigned int v40 = *v39;
                                  if (v137[38]) {
                                    goto LABEL_96;
                                  }
                                  goto LABEL_89;
                                }
                                unint64_t v25 = *v140;
                                unint64_t v141 = v140;
                                operator delete(v140);
                                if (v25 == -1) {
                                  goto LABEL_95;
                                }
                                uint64_t v69 = *(void *)(sub_66F838(&__p, v25) + 32);
                                unint64_t v34 = *(void *)&v137[32];
                                if ((v69 & 0xFFFFFFFFFFFFLL) != (*(void *)&v137[32] & 0xFFFFFFFFFFFFLL)) {
                                  goto LABEL_95;
                                }
                                BOOL v35 = (v69 & 0xFF000000000000) == 0x1000000000000;
LABEL_46:
                                int v36 = v35;
                                int v37 = v36 ^ HIWORD(v34) & 1;
                                uint64_t v38 = *(int **)v137;
                                unint64_t v39 = (unsigned __int16 *)(*(void *)v137 - (int)**(_DWORD **)v137);
                                unsigned int v40 = *v39;
                                if (!v137[38]) {
                                  goto LABEL_89;
                                }
LABEL_96:
                                if (v40 >= 0x49)
                                {
                                  unsigned int v68 = v39[36];
                                  if (v68) {
                                    goto LABEL_98;
                                  }
                                }
LABEL_102:
                                __int16 v70 = -1;
                                int v71 = *((unsigned __int8 *)v26 + 38);
                                uint64_t v72 = *v26;
                                uint64_t v73 = **v26;
                                long long v74 = (unsigned __int16 *)((char *)*v26 - v73);
                                unsigned int v75 = *v74;
                                if (*((unsigned char *)v26 + 38)) {
                                  goto LABEL_103;
                                }
LABEL_99:
                                if (v75 < 0x49) {
                                  goto LABEL_106;
                                }
                                unsigned int v76 = v74[36];
                                if (!v74[36]) {
                                  goto LABEL_106;
                                }
LABEL_105:
                                int v77 = *(unsigned __int16 *)((char *)v72 + v76);
LABEL_107:
                                uint64_t v78 = -v73;
                                unsigned __int16 v79 = v70 + 18000;
                                unsigned __int16 v80 = v70 - 18000;
                                if ((unsigned __int16)(v79 >> 5) < 0x465u) {
                                  unsigned __int16 v80 = v79;
                                }
                                int v81 = v77 - v80;
                                if (v81 > 18000) {
                                  v81 -= 36000;
                                }
                                if (v81 < -17999) {
                                  v81 += 36000;
                                }
                                double v82 = (double)v81 / 100.0;
                                if (a5)
                                {
                                  if (v75 < 0x2F)
                                  {
                                    if (v75 < 0xB) {
                                      goto LABEL_151;
                                    }
                                  }
                                  else if (v74[23] && *((unsigned char *)v72 + v74[23]) == 23)
                                  {
                                    if (v37) {
                                      goto LABEL_151;
                                    }
LABEL_132:
                                    if (v74[5])
                                    {
                                      int v86 = *(int *)((char *)v72 + v74[5]);
                                      if (v71) {
                                        int v87 = 2;
                                      }
                                      else {
                                        int v87 = 1;
                                      }
                                      int v88 = ((v86 & v87) != 0) ^ ((unsigned __int16)(v86 & 0x8000) >> 15);
                                    }
                                    else
                                    {
                                      int v88 = 0;
                                    }
                                    if (v88) {
                                      BOOL v89 = v82 < 0.0;
                                    }
                                    else {
                                      BOOL v89 = v82 > 0.0;
                                    }
                                    if (v89)
                                    {
                                      unsigned int v121 = (int *)sub_2E4738((int **)v137);
                                      if (!sub_3CCE68(a1 + 888, (unsigned int **)&v121))
                                      {
                                        if (v114)
                                        {
                                          BOOL v108 = 1;
                                          uint64_t v109 = a6;
                                        }
                                        else
                                        {
                                          int v110 = (unsigned __int16 *)((char *)*v26 - **v26);
                                          uint64_t v109 = a6;
                                          BOOL v108 = *v110 >= 0x2Fu
                                              && (uint64_t v111 = v110[23]) != 0
                                              && (*((unsigned char *)*v26 + v111) & 0xF7) == 34;
                                        }
                                        *(void *)uint64_t v109 = v119;
                                        long long v112 = *((_OWORD *)v26 + 1);
                                        *(_OWORD *)(v109 + 8) = *(_OWORD *)v26;
                                        *(_OWORD *)(v109 + 24) = v112;
                                        *(void *)(v109 + 40) = v26[4];
                                        *(unsigned char *)(v109 + 48) = v108;
                                        uint64_t v107 = (int **)__p;
                                        if (__p) {
                                          goto LABEL_193;
                                        }
                                        goto LABEL_194;
                                      }
                                      uint64_t v38 = *(int **)v137;
                                    }
                                    unsigned __int16 v90 = (unsigned __int16 *)((char *)v38 - *v38);
                                    if (*v90 >= 0x2Fu && (uint64_t v91 = v90[23]) != 0)
                                    {
                                      unsigned int v92 = *((unsigned __int8 *)v38 + v91);
                                      BOOL v29 = v92 > 0x2A;
                                      unint64_t v93 = (0x2FBD97EFFFBuLL >> v92) & 1;
                                      if (v29) {
                                        LOBYTE(v93) = 1;
                                      }
                                    }
                                    else
                                    {
                                      LOBYTE(v93) = 1;
                                    }
                                    v116 |= v93 | a3 ^ 1;
                                    uint64_t v72 = *v26;
                                    uint64_t v78 = -(uint64_t)**v26;
                                    goto LABEL_151;
                                  }
                                  if (v74[5] && !(v37 & 1 | ((*((unsigned char *)v72 + v74[5]) & 4) == 0))) {
                                    goto LABEL_132;
                                  }
                                  goto LABEL_151;
                                }
                                if (v71)
                                {
                                  if (v75 < 0xB) {
                                    goto LABEL_151;
                                  }
                                  unsigned int v83 = v74[5];
                                  if (!v74[5]) {
                                    goto LABEL_151;
                                  }
                                  int v84 = 1;
                                  int v85 = 2;
                                }
                                else
                                {
                                  if (v75 < 0xB) {
                                    goto LABEL_151;
                                  }
                                  unsigned int v83 = v74[5];
                                  if (!v74[5]) {
                                    goto LABEL_151;
                                  }
                                  int v84 = 2;
                                  int v85 = 1;
                                }
                                if (((*(int *)((char *)v72 + v83) & v85) != 0) != ((*(int *)((char *)v72 + v83) & v84) != 0))
                                {
                                  LOWORD(v23) = *(_WORD *)(a1 + 1272);
                                  double v23 = (double)vmovl_s16(*(int16x4_t *)&v23).i32[0];
                                  if (!(v37 & 1 | (fabs(v82) <= v23))) {
                                    goto LABEL_132;
                                  }
                                }
LABEL_151:
                                if (*(unsigned __int16 *)((char *)v72 + v78) >= 9u && *(_WORD *)((char *)v72 + v78 + 8)) {
                                  uint64_t v94 = *(unsigned int *)((char *)v72 + *(unsigned __int16 *)((char *)v72 + v78 + 8));
                                }
                                else {
                                  uint64_t v94 = 0;
                                }
                                uint64_t v95 = v94 + v119;
                                unsigned int v121 = (int *)(v94 + v119);
                                uint64_t v96 = *v26;
                                double v97 = (unsigned __int16 *)((char *)*v26 - **v26);
                                unsigned int v98 = *v97;
                                if (v16)
                                {
                                  if (*((unsigned char *)v26 + 38)) {
                                    goto LABEL_157;
                                  }
LABEL_162:
                                  if (v98 < 0xB || !v97[5] || (*(int *)((char *)v96 + v97[5]) & 1) == 0) {
                                    goto LABEL_40;
                                  }
                                }
                                else
                                {
                                  if (*((unsigned char *)v26 + 38)) {
                                    goto LABEL_162;
                                  }
LABEL_157:
                                  if (v98 < 0xB || !v97[5] || (*(int *)((char *)v96 + v97[5]) & 2) == 0) {
                                    goto LABEL_40;
                                  }
                                }
                                if (v95 <= *a4)
                                {
                                  if ((int v99 = (unsigned __int16 *)((char *)v38 - *v38), *v99 >= 0x2Fu)
                                    && (uint64_t v100 = v99[23]) != 0
                                    && (unsigned int v101 = *((unsigned __int8 *)v38 + v100), v101 <= 0x2A)
                                    && ((1 << v101) & 0x50426810004) != 0
                                    || v37)
                                  {
                                    if (v114)
                                    {
                                      LOBYTE(v102) = 1;
                                    }
                                    else if (*v97 < 0x2Fu)
                                    {
                                      LOBYTE(v102) = 0;
                                    }
                                    else
                                    {
                                      uint64_t v102 = v97[23];
                                      if (v97[23]) {
                                        LOBYTE(v102) = (*((unsigned char *)v96 + v102) & 0xF7) == 34;
                                      }
                                    }
                                    LOBYTE(v140) = v102;
                                    sub_6DB4E8((char **)&v131, (long long *)v26, &v121, (char *)&v140);
                                  }
                                }
                                goto LABEL_40;
                              }
                            }
LABEL_184:
                            uint64_t v52 = 0;
                            if (!v63) {
                              goto LABEL_187;
                            }
                            goto LABEL_185;
                          }
LABEL_74:
                          uint64_t v63 = 0;
                          if (v61) {
                            goto LABEL_181;
                          }
                          goto LABEL_184;
                        }
                        if (v60 >= 5)
                        {
                          uint64_t v61 = (_DWORD *)*((unsigned __int16 *)v59 + 2);
                          if (*((_WORD *)v59 + 2)) {
                            uint64_t v61 = (_DWORD *)((char *)v61 + (void)v58 + *(unsigned int *)((char *)v61 + (void)v58));
                          }
                          if (v60 >= 7)
                          {
                            int v62 = *((unsigned __int16 *)v59 + 3);
                            if (*((_WORD *)v59 + 3)) {
                              goto LABEL_180;
                            }
                          }
                          goto LABEL_74;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          else
          {
            uint64_t v48 = 0;
            if (*(unsigned char *)(v41 + 7773)) {
              goto LABEL_59;
            }
          }
          uint64_t v64 = 0;
          uint64_t v52 = 0;
          goto LABEL_77;
        }
      }
      unint64_t v25 = -1;
      if (v121) {
        goto LABEL_33;
      }
    }
    else
    {
      unint64_t v25 = -1;
    }
    unsigned int v132 = v131;
    BOOL v26 = (int **)v134;
    uint64_t v120 = v135;
    if (v134 != v135) {
      goto LABEL_34;
    }
  }
  *(void *)a6 = 0x7FFFFFFFFFFFFFFFLL;
  *(_OWORD *)(a6 + 8) = 0u;
  *(_OWORD *)(a6 + 24) = 0u;
  *(_DWORD *)(a6 + 40) = 0;
  *(_WORD *)(a6 + 44) = -1;
  *(unsigned char *)(a6 + 46) = 0;
  *(unsigned char *)(a6 + 48) = 0;
  uint64_t v107 = (int **)__p;
  if (__p)
  {
LABEL_193:
    unsigned int v129 = v107;
    operator delete(v107);
  }
LABEL_194:
  if (v131)
  {
    unsigned int v132 = v131;
    operator delete(v131);
  }
  if (v134)
  {
    int v135 = (int **)v134;
    operator delete(v134);
  }
}

void sub_6DFFB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29)
{
  if (__p) {
    operator delete(__p);
  }
  if (a22)
  {
    operator delete(a22);
    uint64_t v30 = a25;
    if (!a25)
    {
LABEL_5:
      uint64_t v31 = a28;
      if (!a28) {
        goto LABEL_6;
      }
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v30 = a25;
    if (!a25) {
      goto LABEL_5;
    }
  }
  operator delete(v30);
  uint64_t v31 = a28;
  if (!a28) {
LABEL_6:
  }
    _Unwind_Resume(exception_object);
LABEL_9:
  operator delete(v31);
  _Unwind_Resume(exception_object);
}

void sub_6E0054(uint64_t a1, int **a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 8) = *(void *)a4;
  if (*(void *)a3 != *(void *)(a3 + 8))
  {
    if (sub_6E0DB4((double *)a1, a2, a3))
    {
      __p = 0;
      sub_A4710(a4, &__p);
      return;
    }
    sub_6DA894(a1, a2, (void *)a3, (unint64_t **)a4);
    if (*(void *)a4 == *(void *)(a4 + 8))
    {
      uint64_t v8 = *(int ***)a3;
      uint64_t v9 = *(int ***)(a3 + 8);
      __p = (void *)a1;
      unsigned int v138 = a2;
      if (v8 == v9)
      {
        unint64_t v11 = v8;
        uint64_t v10 = v8;
      }
      else
      {
        while (!sub_6E644C((uint64_t *)&__p, v8))
        {
          v8 += 5;
          if (v8 == v9)
          {
            uint64_t v8 = v9;
            break;
          }
        }
        uint64_t v10 = v8;
        uint64_t v8 = *(int ***)a3;
        unint64_t v11 = *(int ***)(a3 + 8);
      }
      if (v10 == v11) {
        uint64_t v10 = v8;
      }
      if (v10 == v11) {
        unint64_t v12 = v8;
      }
      else {
        unint64_t v12 = v10;
      }
      unint64_t v13 = (unint64_t)v12[4];
      uint64_t v14 = v13 & 0xFF000000000000;
      unsigned int v15 = (int *)sub_2D5D58(*(void *)(a1 + 880), v13 & 0xFFFFFFFFFFFFLL);
      int v16 = (unsigned __int16 *)((char *)v15 - *v15);
      unsigned int v17 = *v16;
      if (v14)
      {
        if (v17 < 0x29) {
          goto LABEL_47;
        }
        unsigned int v18 = v16[20];
        if (!v18) {
          goto LABEL_47;
        }
      }
      else if (v17 < 0x27 || (unsigned int v18 = v16[19]) == 0)
      {
LABEL_47:
        unint64_t v140 = 0xCCCCCCCCCCCCCCCDLL * (((uint64_t)v12 - *(void *)a3) >> 3);
        double v40 = sub_6D82EC(a1, a2, v12);
        uint64_t v41 = *v12;
        unint64_t v42 = (unsigned __int16 *)((char *)*v12 - **v12);
        unsigned int v43 = *v42;
        if (v43 >= 0x2F)
        {
          if (v42[23])
          {
            unsigned int v44 = *((unsigned __int8 *)v41 + v42[23]);
            if (v44 <= 0x2C)
            {
              if (((1 << v44) & 0x180000105240) != 0)
              {
                int v45 = *(_DWORD *)(a1 + 1484);
LABEL_58:
                uint64_t v46 = *a2;
                uint64_t v47 = (unsigned __int16 *)((char *)*a2 - **a2);
                unsigned int v48 = *v47;
                if (v48 < 0x2F) {
                  goto LABEL_68;
                }
                if (v47[23])
                {
                  unsigned int v49 = *((unsigned __int8 *)v46 + v47[23]);
                  if (v49 <= 0x2C)
                  {
                    if (((1 << v49) & 0x180000105240) != 0)
                    {
                      LODWORD(v50) = *(_DWORD *)(a1 + 1484);
                      goto LABEL_69;
                    }
                    if (!*((unsigned char *)v46 + v47[23]))
                    {
                      LODWORD(v50) = *(_DWORD *)(a1 + 1480);
                      goto LABEL_69;
                    }
                  }
                }
                if (v48 < 0x43)
                {
LABEL_68:
                  LODWORD(v50) = 0;
                }
                else
                {
                  uint64_t v50 = v47[33];
                  if (v47[33]) {
                    LODWORD(v50) = *((unsigned __int8 *)v46 + v50);
                  }
                }
LABEL_69:
                double v51 = fabs(v40);
                if (v45 != v50) {
                  goto LABEL_110;
                }
                if (v43 < 0x2F)
                {
                  LOBYTE(v52) = 0;
                }
                else
                {
                  unint64_t v52 = v42[23];
                  if (v42[23])
                  {
                    unsigned int v53 = *((unsigned __int8 *)v41 + v52);
                    BOOL v54 = v53 > 0x2A;
                    unint64_t v52 = (0x50426810004uLL >> v53) & 1;
                    if (v54) {
                      LOBYTE(v52) = 0;
                    }
                  }
                }
                if (v48 < 0x2F
                  || !v47[23]
                  || ((unsigned int v55 = *((unsigned __int8 *)v46 + v47[23]),
                       BOOL v54 = v55 > 0x2A,
                       uint64_t v56 = (1 << v55) & 0x50426810004,
                       !v54)
                    ? (BOOL v57 = v56 == 0)
                    : (BOOL v57 = 1),
                      v57))
                {
                  if (v52) {
                    goto LABEL_110;
                  }
                }
                else if ((v52 & 1) == 0)
                {
                  goto LABEL_110;
                }
                v59 = v43 >= 0x2F && (uint64_t v58 = v42[23]) != 0 && *((unsigned char *)v41 + v58) == 28;
                if (v48 >= 0x2F && v47[23]) {
                  v59 ^= *((unsigned char *)v46 + v47[23]) == 28;
                }
                if ((v59 & 1) == 0)
                {
                  int v60 = sub_6906B4((char **)v12);
                  if (v60 == sub_6906B4((char **)a2))
                  {
                    uint64_t v61 = (unsigned __int16 *)((char *)*v12 - **v12);
                    if (*v61 >= 0xBu && (uint64_t v62 = v61[5]) != 0) {
                      int v63 = (*((unsigned __int8 *)*v12 + v62 + 1) >> 4) & 1;
                    }
                    else {
                      int v63 = 0;
                    }
                    uint64_t v64 = (unsigned __int16 *)((char *)*a2 - **a2);
                    if (*v64 >= 0xBu && (uint64_t v65 = v64[5]) != 0)
                    {
                      if (v63 != (*((unsigned char *)*a2 + v65 + 1) & 0x10) >> 4) {
                        goto LABEL_110;
                      }
                    }
                    else if (v63)
                    {
                      goto LABEL_110;
                    }
                    if (v51 <= *(double *)(a1 + 960)) {
                      goto LABEL_225;
                    }
                    uint64_t v66 = *(void *)(a3 + 8);
                    unint64_t v67 = *(void *)a3 == v66 ? 0 : (v66 - *(void *)a3 - 40) / 0x28uLL + 1;
                    if (v51 <= *(double *)(a1 + 928) && ((sub_6DAF14(a1, a2, (char **)v12) & 1) != 0 || v67 == 1)) {
                      goto LABEL_225;
                    }
                  }
                }
LABEL_110:
                unsigned int v68 = *a2;
                uint64_t v69 = (unsigned __int16 *)((char *)*a2 - **a2);
                unsigned int v70 = *v69;
                if (v70 < 0x2F
                  || !v69[23]
                  || ((unsigned int v71 = *((unsigned __int8 *)v68 + v69[23]),
                       BOOL v54 = v71 > 0x2A,
                       uint64_t v72 = (1 << v71) & 0x50426810004,
                       !v54)
                    ? (BOOL v73 = v72 == 0)
                    : (BOOL v73 = 1),
                      v73))
                {
LABEL_139:
                  __p = 0;
                  unsigned int v138 = 0;
                  uint64_t v139 = 0;
                  uint64_t v83 = *(void *)(a3 + 8) - *(void *)a3;
                  if (!v83) {
                    goto LABEL_222;
                  }
                  uint64_t v84 = 0;
                  int v85 = 0;
                  uint64_t v86 = v83 / 40;
                  while (1)
                  {
                    unint64_t v136 = (unint64_t)v85;
                    double v87 = fabs(sub_6D82EC(a1, a2, (int **)(*(void *)a3 + v84)));
                    double v88 = *(double *)(a1 + 936);
                    BOOL v89 = *(int ***)a3;
                    unsigned __int16 v90 = *a2;
                    uint64_t v91 = **a2;
                    if (v87 >= v88) {
                      break;
                    }
LABEL_166:
                    uint64_t v104 = (unsigned __int16 *)((char *)v90 - v91);
                    if (*v104 >= 0xBu && (uint64_t v105 = v104[5]) != 0 && (*((unsigned char *)v90 + v105 + 1) & 0x10) != 0
                      || (BOOL v106 = v89[5 * v136], v107 = (unsigned __int16 *)((char *)v106 - *v106), *v107 < 0xBu)
                      || (uint64_t v108 = v107[5]) == 0
                      || (*((unsigned char *)v106 + v108 + 1) & 0x10) == 0)
                    {
                      if (sub_2E79EC(*(void *)(a1 + 880), (uint64_t)a2[4], (uint64_t)v89[5 * v136 + 4])) {
                        sub_A4710((uint64_t)&__p, &v136);
                      }
                    }
LABEL_141:
                    int v85 = (unsigned int *)((char *)v85 + 1);
                    v84 += 40;
                    if ((unsigned int *)v86 == v85)
                    {
                      uint64_t v109 = (unsigned int **)__p;
                      if (v138 - (unsigned char *)__p == 8)
                      {
                        sub_A4710(a4, __p);
                        goto LABEL_235;
                      }
                      if (__p != v138)
                      {
                        int v110 = *(int ***)a3;
                        uint64_t v111 = *a2;
                        do
                        {
                          unint64_t v136 = (unint64_t)*v109;
                          long long v112 = v110[5 * v136];
                          int v113 = (unsigned __int16 *)((char *)v112 - *v112);
                          unsigned int v114 = *v113;
                          if (v114 < 0x2F) {
                            goto LABEL_193;
                          }
                          if (v113[23])
                          {
                            unsigned int v115 = *((unsigned __int8 *)v112 + v113[23]);
                            if (v115 <= 0x2C)
                            {
                              if (((1 << v115) & 0x180000105240) != 0)
                              {
                                int v116 = *(_DWORD *)(a1 + 1484);
                                int v117 = (unsigned __int16 *)((char *)v111 - *v111);
                                unsigned int v118 = *v117;
                                if (v118 < 0x2F) {
                                  goto LABEL_203;
                                }
                                goto LABEL_194;
                              }
                              if (!*((unsigned char *)v112 + v113[23]))
                              {
                                int v116 = *(_DWORD *)(a1 + 1480);
                                int v117 = (unsigned __int16 *)((char *)v111 - *v111);
                                unsigned int v118 = *v117;
                                if (v118 < 0x2F) {
                                  goto LABEL_203;
                                }
                                goto LABEL_194;
                              }
                            }
                          }
                          if (v114 >= 0x43 && v113[33])
                          {
                            int v116 = *((unsigned __int8 *)v112 + v113[33]);
                            int v117 = (unsigned __int16 *)((char *)v111 - *v111);
                            unsigned int v118 = *v117;
                            if (v118 < 0x2F) {
                              goto LABEL_203;
                            }
                          }
                          else
                          {
LABEL_193:
                            int v116 = 0;
                            int v117 = (unsigned __int16 *)((char *)v111 - *v111);
                            unsigned int v118 = *v117;
                            if (v118 < 0x2F) {
                              goto LABEL_203;
                            }
                          }
LABEL_194:
                          if (v117[23])
                          {
                            unsigned int v119 = *((unsigned __int8 *)v111 + v117[23]);
                            if (v119 <= 0x2C)
                            {
                              if (((1 << v119) & 0x180000105240) != 0)
                              {
                                LODWORD(v120) = *(_DWORD *)(a1 + 1484);
                                goto LABEL_204;
                              }
                              if (!*((unsigned char *)v111 + v117[23]))
                              {
                                LODWORD(v120) = *(_DWORD *)(a1 + 1480);
                                goto LABEL_204;
                              }
                            }
                          }
                          if (v118 < 0x43)
                          {
LABEL_203:
                            LODWORD(v120) = 0;
                            goto LABEL_204;
                          }
                          uint64_t v120 = v117[33];
                          if (v117[33]) {
                            LODWORD(v120) = *((unsigned __int8 *)v111 + v120);
                          }
LABEL_204:
                          if (v116 != v120) {
                            goto LABEL_179;
                          }
                          if (v114 >= 0x2F && v113[23])
                          {
                            int v121 = *((unsigned __int8 *)v112 + v113[23]);
                            if (v118 < 0x2F) {
                              goto LABEL_213;
                            }
                          }
                          else
                          {
                            int v121 = 32;
                            if (v118 < 0x2F) {
                              goto LABEL_213;
                            }
                          }
                          if (!v117[23])
                          {
LABEL_213:
                            if (v121 != 32) {
                              goto LABEL_179;
                            }
                            goto LABEL_214;
                          }
                          if (v121 != *((unsigned __int8 *)v111 + v117[23])) {
                            goto LABEL_179;
                          }
LABEL_214:
                          if (v114 >= 0xB && (uint64_t v122 = v113[5]) != 0)
                          {
                            int v123 = (*((unsigned __int8 *)v112 + v122 + 1) >> 4) & 1;
                            if (v118 < 0xB) {
                              goto LABEL_178;
                            }
                          }
                          else
                          {
                            int v123 = 0;
                            if (v118 < 0xB) {
                              goto LABEL_178;
                            }
                          }
                          if (!v117[5])
                          {
LABEL_178:
                            if ((v123 & 1) == 0) {
                              goto LABEL_221;
                            }
                            goto LABEL_179;
                          }
                          if (v123 == (*((unsigned char *)v111 + v117[5] + 1) & 0x10) >> 4)
                          {
LABEL_221:
                            sub_A4710(a4, &v136);
                            goto LABEL_235;
                          }
LABEL_179:
                          ++v109;
                        }
                        while (v109 != (unsigned int **)v138);
                      }
LABEL_222:
                      if (v51 <= *(double *)(a1 + 952)) {
                        goto LABEL_234;
                      }
                      unint64_t v136 = sub_2E4738(a2);
                      if (sub_3CCE68(a1 + 888, (unsigned int **)&v136))
                      {
                        unint64_t v136 = 0;
                        sub_A4710(a4, &v136);
                        goto LABEL_235;
                      }
                      if (v51 <= *(double *)(a1 + 976) && (sub_6D8104(a1, a2, (uint64_t *)a3, v140) & 1) == 0)
                      {
LABEL_234:
                        sub_A4710(a4, &v140);
                        goto LABEL_235;
                      }
                      uint64_t v124 = sub_6DB09C(*(int ***)a3, *(int ***)(a3 + 8), a2);
                      unint64_t v125 = 0xCCCCCCCCCCCCCCCDLL * (((uint64_t)v124 - *(void *)a3) >> 3);
                      unint64_t v136 = v125;
                      double v126 = sub_69BAF0(a2, v124);
                      uint64_t v135 = a1;
                      if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 3) >= 2
                        && fabs(v126) <= *(double *)(a1 + 984)
                        && (sub_6D8104(a1, a2, (uint64_t *)a3, v125) & 1) == 0
                        && (!*(unsigned char *)(a1 + 1592) || (sub_6DB110(&v135, (uint64_t)a2, (uint64_t)v124) & 1) != 0))
                      {
                        BOOL v127 = &v136;
LABEL_255:
                        sub_A4710(a4, v127);
                        goto LABEL_235;
                      }
                      if (*(void *)(a3 + 8) - *(void *)a3 != 40
                        || (sub_6DB110(&v135, (uint64_t)a2, (uint64_t)v12) & 1) == 0)
                      {
                        if (v51 > *(double *)(a1 + 944)) {
                          goto LABEL_257;
                        }
                        unsigned int v128 = (unsigned __int16 *)((char *)*a2 - **a2);
                        if (*v128 >= 0xBu && (uint64_t v129 = v128[5]) != 0)
                        {
                          unsigned int v130 = *(int *)((char *)*a2 + v129);
                          if (v130) {
                            int v131 = 1;
                          }
                          else {
                            int v131 = (v130 >> 1) & 1;
                          }
                        }
                        else
                        {
                          int v131 = 0;
                        }
                        unsigned int v132 = (unsigned __int16 *)((char *)*v12 - **v12);
                        if (*v132 >= 0xBu && (uint64_t v133 = v132[5]) != 0)
                        {
                          if (*(int *)((char *)*v12 + v133))
                          {
                            if (v131) {
                              goto LABEL_257;
                            }
                          }
                          else if (v131 == (*(int *)((char *)*v12 + v133) & 2u) >> 1)
                          {
LABEL_257:
                            if (fabs(sub_6D82EC(a1, a2, *(int ***)a3)) <= *(double *)(a1 + 912))
                            {
                              uint64_t v134 = 0;
                              sub_A4710(a4, &v134);
                            }
LABEL_235:
                            if (__p)
                            {
                              unsigned int v138 = __p;
                              operator delete(__p);
                            }
                            return;
                          }
                        }
                        else if ((v131 & 1) == 0)
                        {
                          goto LABEL_257;
                        }
                        if (sub_6D8104(a1, a2, (uint64_t *)a3, v140)) {
                          goto LABEL_257;
                        }
                      }
                      BOOL v127 = &v140;
                      goto LABEL_255;
                    }
                  }
                  unsigned int v92 = (char *)v90 - v91;
                  unsigned int v93 = *(unsigned __int16 *)((char *)v90 - v91);
                  if (*((unsigned char *)a2 + 38))
                  {
                    if (v93 < 0x49 || (unsigned int v94 = *((unsigned __int16 *)v92 + 36)) == 0)
                    {
LABEL_150:
                      __int16 v95 = -1;
LABEL_151:
                      uint64_t v96 = v89[5 * v136];
                      double v97 = (unsigned __int16 *)((char *)v96 - *v96);
                      unsigned int v98 = *v97;
                      if (BYTE6(v89[5 * v136 + 4]))
                      {
                        if (v98 < 0x4B || (unsigned int v99 = v97[37]) == 0)
                        {
LABEL_158:
                          int v100 = 0xFFFF;
LABEL_159:
                          unsigned __int16 v101 = v95 + 18000;
                          unsigned __int16 v102 = v95 - 18000;
                          if ((unsigned __int16)(v101 >> 5) < 0x465u) {
                            unsigned __int16 v102 = v101;
                          }
                          int v103 = v100 - v102;
                          if (v103 > 18000) {
                            v103 -= 36000;
                          }
                          if (v103 < -17999) {
                            v103 += 36000;
                          }
                          if (fabs((double)v103 / 100.0) >= v88) {
                            goto LABEL_141;
                          }
                          goto LABEL_166;
                        }
                      }
                      else
                      {
                        if (v98 < 0x49) {
                          goto LABEL_158;
                        }
                        unsigned int v99 = v97[36];
                        if (!v99) {
                          goto LABEL_158;
                        }
                      }
                      int v100 = *(unsigned __int16 *)((char *)v96 + v99);
                      goto LABEL_159;
                    }
                  }
                  else
                  {
                    if (v93 < 0x4B) {
                      goto LABEL_150;
                    }
                    unsigned int v94 = *((unsigned __int16 *)v92 + 37);
                    if (!v94) {
                      goto LABEL_150;
                    }
                  }
                  __int16 v95 = *(_WORD *)((char *)v90 + v94);
                  goto LABEL_151;
                }
                if (*((unsigned char *)a2 + 38))
                {
                  if (v70 < 0x49 || (unsigned int v74 = v69[36]) == 0)
                  {
LABEL_123:
                    __int16 v75 = -1;
LABEL_124:
                    unsigned int v76 = (unsigned __int16 *)((char *)*v12 - **v12);
                    unsigned int v77 = *v76;
                    if (*((unsigned char *)v12 + 38))
                    {
                      if (v77 < 0x4B || (unsigned int v78 = v76[37]) == 0)
                      {
LABEL_131:
                        int v79 = 0xFFFF;
LABEL_132:
                        unsigned __int16 v80 = v75 + 18000;
                        unsigned __int16 v81 = v75 - 18000;
                        if ((unsigned __int16)(v80 >> 5) < 0x465u) {
                          unsigned __int16 v81 = v80;
                        }
                        int v82 = v79 - v81;
                        if (v82 > 18000) {
                          v82 -= 36000;
                        }
                        if (v82 < -17999) {
                          v82 += 36000;
                        }
                        if (fabs((double)v82 / 100.0) > *(double *)(a1 + 928)) {
                          goto LABEL_139;
                        }
LABEL_225:
                        sub_A4710(a4, &v140);
                        return;
                      }
                    }
                    else
                    {
                      if (v77 < 0x49) {
                        goto LABEL_131;
                      }
                      unsigned int v78 = v76[36];
                      if (!v78) {
                        goto LABEL_131;
                      }
                    }
                    int v79 = *(unsigned __int16 *)((char *)*v12 + v78);
                    goto LABEL_132;
                  }
                }
                else
                {
                  if (v70 < 0x4B) {
                    goto LABEL_123;
                  }
                  unsigned int v74 = v69[37];
                  if (!v74) {
                    goto LABEL_123;
                  }
                }
                __int16 v75 = *(_WORD *)((char *)v68 + v74);
                goto LABEL_124;
              }
              if (!*((unsigned char *)v41 + v42[23]))
              {
                int v45 = *(_DWORD *)(a1 + 1480);
                goto LABEL_58;
              }
            }
          }
          if (v43 >= 0x43 && v42[33])
          {
            int v45 = *((unsigned __int8 *)v41 + v42[33]);
            goto LABEL_58;
          }
        }
        int v45 = 0;
        goto LABEL_58;
      }
      if (*(int *)((char *)v15 + v18 + *(int *)((char *)v15 + v18)) != 1) {
        goto LABEL_47;
      }
      uint64_t v19 = *(void *)(a3 + 8) - *(void *)a3;
      if (!v19) {
        goto LABEL_47;
      }
      uint64_t v20 = 0;
      unint64_t v21 = 0;
      uint64_t v22 = v19 / 40;
      while (1)
      {
        uint64_t v23 = sub_5A7C34((void *)a3, v21);
        uint64_t v24 = *(void *)(v23 + 32);
        unint64_t v25 = (unint64_t)v12[4];
        if ((v24 & 0xFFFFFFFFFFFFLL) == (v25 & 0xFFFFFFFFFFFFLL)
          && ((v24 & 0xFF000000000000) == 0) != (HIWORD(v25) & 1))
        {
          goto LABEL_25;
        }
        if (fabs(sub_6D82EC(a1, a2, (int **)v23)) > *(double *)(a1 + 912)) {
          goto LABEL_47;
        }
        unint64_t v26 = (unint64_t)v12[4];
        uint64_t v27 = v26 & 0xFF000000000000;
        unsigned int v28 = (int *)sub_2D5D58(*(void *)(a1 + 880), v26 & 0xFFFFFFFFFFFFLL);
        BOOL v29 = (unsigned __int16 *)((char *)v28 - *v28);
        unsigned int v30 = *v29;
        if (v27)
        {
          if (v30 >= 0x29)
          {
            unsigned int v31 = v29[20];
            if (v31) {
              goto LABEL_35;
            }
          }
        }
        else if (v30 >= 0x27)
        {
          unsigned int v31 = v29[19];
          if (v31)
          {
LABEL_35:
            int v32 = *(int *)((char *)v28 + v31 + *(int *)((char *)v28 + v31));
            goto LABEL_37;
          }
        }
        int v32 = 0;
LABEL_37:
        uint64_t v33 = *(void *)(v23 + 32);
        uint64_t v34 = v33 & 0xFF000000000000;
        BOOL v35 = (int *)sub_2D5D58(*(void *)(a1 + 880), v33 & 0xFFFFFFFFFFFFLL);
        int v36 = (unsigned __int16 *)((char *)v35 - *v35);
        unsigned int v37 = *v36;
        if (v34)
        {
          if (v37 >= 0x29)
          {
            unsigned int v38 = v36[20];
            if (v38) {
              goto LABEL_43;
            }
          }
        }
        else if (v37 >= 0x27)
        {
          unsigned int v38 = v36[19];
          if (v38)
          {
LABEL_43:
            if (v32)
            {
              int v39 = *(int *)((char *)v35 + v38 + *(int *)((char *)v35 + v38));
              if (v39)
              {
                if (v39 - v32 >= *(_DWORD *)(a1 + 1080)) {
                  unint64_t v12 = (int **)(*(void *)a3 + v20);
                }
              }
            }
          }
        }
LABEL_25:
        ++v21;
        v20 += 40;
        if (v22 == v21) {
          goto LABEL_47;
        }
      }
    }
  }
}

void sub_6E0D74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6E0DB4(double *a1, int **a2, uint64_t a3)
{
  uint64_t v3 = *(int ***)a3;
  if (*(void *)a3 == *(void *)(a3 + 8) || fabs(sub_6D82EC((uint64_t)a1, a2, *(int ***)a3)) > a1[114]) {
    return 0;
  }
  uint64_t v7 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v8 = *v7;
  if (*((unsigned char *)a2 + 38))
  {
    if (v8 < 0x49) {
      goto LABEL_13;
    }
    unsigned int v9 = v7[36];
    if (!v9) {
      goto LABEL_13;
    }
  }
  else if (v8 < 0x4B || (unsigned int v9 = v7[37]) == 0)
  {
LABEL_13:
    __int16 v10 = -1;
    unint64_t v11 = *v3;
    unint64_t v12 = (unsigned __int16 *)((char *)*v3 - **v3);
    unsigned int v13 = *v12;
    if (*((unsigned char *)v3 + 38)) {
      goto LABEL_14;
    }
LABEL_10:
    if (v13 >= 0x49)
    {
      unsigned int v14 = v12[36];
      if (v14) {
        goto LABEL_16;
      }
    }
    goto LABEL_17;
  }
  __int16 v10 = *(_WORD *)((char *)*a2 + v9);
  unint64_t v11 = *v3;
  unint64_t v12 = (unsigned __int16 *)((char *)*v3 - **v3);
  unsigned int v13 = *v12;
  if (!*((unsigned char *)v3 + 38)) {
    goto LABEL_10;
  }
LABEL_14:
  if (v13 >= 0x4B)
  {
    unsigned int v14 = v12[37];
    if (v14)
    {
LABEL_16:
      int v15 = *(unsigned __int16 *)((char *)v11 + v14);
      goto LABEL_18;
    }
  }
LABEL_17:
  int v15 = 0xFFFF;
LABEL_18:
  unsigned __int16 v16 = v10 + 18000;
  unsigned __int16 v17 = v10 - 18000;
  if ((unsigned __int16)(v16 >> 5) < 0x465u) {
    unsigned __int16 v17 = v16;
  }
  int v18 = v15 - v17;
  if (v18 > 18000) {
    v18 -= 36000;
  }
  if (v18 < -17999) {
    v18 += 36000;
  }
  if (fabs((double)v18 / 100.0) <= a1[115])
  {
    if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 3) < 2) {
      return 1;
    }
    uint64_t v19 = (int **)sub_5A7C34((void *)a3, 1uLL);
    if (fabs(sub_6D82EC((uint64_t)a1, a2, v19)) > a1[116]) {
      return 1;
    }
  }
  return 0;
}

double sub_6E0F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(a1 + 904))
  {
    uint64_t v3 = *(int **)(a2 + 16);
    unsigned int v4 = (unsigned __int16 *)((char *)v3 - *v3);
    unsigned int v5 = *v4;
    if (*(unsigned char *)(a2 + 46))
    {
      if (v5 < 5) {
        goto LABEL_16;
      }
      unsigned int v6 = v4[2];
      if (!v6) {
        goto LABEL_16;
      }
    }
    else if (v5 < 9 || (unsigned int v6 = v4[4]) == 0)
    {
LABEL_16:
      __int16 v11 = 0;
      unint64_t v12 = *(int **)(a3 + 16);
      unsigned int v13 = (unsigned __int16 *)((char *)v12 - *v12);
      unsigned int v14 = *v13;
      if (*(unsigned char *)(a3 + 46)) {
        goto LABEL_17;
      }
LABEL_13:
      if (v14 < 5) {
        goto LABEL_19;
      }
      unsigned int v15 = v13[2];
      if (!v15) {
        goto LABEL_19;
      }
      goto LABEL_29;
    }
    __int16 v11 = *(_WORD *)((char *)v3 + v6);
    unint64_t v12 = *(int **)(a3 + 16);
    unsigned int v13 = (unsigned __int16 *)((char *)v12 - *v12);
    unsigned int v14 = *v13;
    if (*(unsigned char *)(a3 + 46))
    {
LABEL_17:
      if (v14 < 9 || (unsigned int v15 = v13[4]) == 0)
      {
LABEL_19:
        int v16 = 0;
        goto LABEL_31;
      }
      goto LABEL_29;
    }
    goto LABEL_13;
  }
  uint64_t v7 = *(int **)(a2 + 8);
  unsigned int v8 = (unsigned __int16 *)((char *)v7 - *v7);
  unsigned int v9 = *v8;
  if (*(unsigned char *)(a2 + 46))
  {
    if (v9 < 0x49) {
      goto LABEL_26;
    }
    unsigned int v10 = v8[36];
    if (!v10) {
      goto LABEL_26;
    }
  }
  else if (v9 < 0x4B || (unsigned int v10 = v8[37]) == 0)
  {
LABEL_26:
    __int16 v11 = -1;
    unint64_t v12 = *(int **)(a3 + 8);
    unsigned __int16 v17 = (unsigned __int16 *)((char *)v12 - *v12);
    unsigned int v18 = *v17;
    if (*(unsigned char *)(a3 + 46)) {
      goto LABEL_27;
    }
LABEL_23:
    if (v18 >= 0x49)
    {
      unsigned int v15 = v17[36];
      if (v15) {
        goto LABEL_29;
      }
    }
    goto LABEL_30;
  }
  __int16 v11 = *(_WORD *)((char *)v7 + v10);
  unint64_t v12 = *(int **)(a3 + 8);
  unsigned __int16 v17 = (unsigned __int16 *)((char *)v12 - *v12);
  unsigned int v18 = *v17;
  if (!*(unsigned char *)(a3 + 46)) {
    goto LABEL_23;
  }
LABEL_27:
  if (v18 >= 0x4B)
  {
    unsigned int v15 = v17[37];
    if (v15)
    {
LABEL_29:
      int v16 = *(unsigned __int16 *)((char *)v12 + v15);
      goto LABEL_31;
    }
  }
LABEL_30:
  int v16 = 0xFFFF;
LABEL_31:
  unsigned __int16 v19 = v11 + 18000;
  unsigned __int16 v20 = v11 - 18000;
  if ((unsigned __int16)(v19 >> 5) < 0x465u) {
    unsigned __int16 v20 = v19;
  }
  int v21 = v16 - v20;
  if (v21 > 18000) {
    v21 -= 36000;
  }
  if (v21 < -17999) {
    v21 += 36000;
  }
  return (double)v21 / 100.0;
}

uint64_t sub_6E1118(uint64_t a1)
{
  *(void *)a1 = &unk_20E1710;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = &unk_20E1710;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = &unk_20E1710;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = &unk_20E1710;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = &unk_20E1710;
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 240) = &unk_20E1710;
  *(void *)(a1 + 256) = 0;
  *(void *)(a1 + 264) = 0;
  *(void *)(a1 + 248) = 0;
  *(void *)(a1 + 280) = 0;
  *(void *)(a1 + 288) = &unk_20E1710;
  *(void *)(a1 + 304) = 0;
  *(void *)(a1 + 312) = 0;
  *(void *)(a1 + 296) = 0;
  *(void *)(a1 + 328) = 0;
  *(void *)(a1 + 336) = &unk_20E1710;
  *(void *)(a1 + 344) = 0;
  *(void *)(a1 + 352) = 0;
  *(void *)(a1 + 360) = 0;
  *(void *)(a1 + 376) = 0;
  *(void *)(a1 + 384) = &unk_20E1710;
  *(void *)(a1 + 392) = 0;
  *(void *)(a1 + 400) = 0;
  *(void *)(a1 + 408) = 0;
  *(void *)(a1 + 424) = 0;
  *(void *)(a1 + 432) = &unk_20E1710;
  *(void *)(a1 + 440) = 0;
  *(void *)(a1 + 448) = 0;
  *(void *)(a1 + 456) = 0;
  *(void *)(a1 + 472) = 0;
  *(void *)(a1 + 480) = &unk_20E1710;
  *(void *)(a1 + 520) = 0;
  *(void *)(a1 + 488) = 0;
  *(void *)(a1 + 496) = 0;
  *(void *)(a1 + 504) = 0;
  *(void *)(a1 + 528) = &unk_20E1710;
  *(void *)(a1 + 568) = 0;
  *(void *)(a1 + 544) = 0;
  *(void *)(a1 + 536) = 0;
  *(void *)(a1 + 552) = 0;
  *(void *)(a1 + 576) = &unk_20E1710;
  *(void *)(a1 + 616) = 0;
  *(void *)(a1 + 592) = 0;
  *(void *)(a1 + 584) = 0;
  *(void *)(a1 + 600) = 0;
  *(void *)(a1 + 624) = &unk_20E1710;
  *(void *)(a1 + 664) = 0;
  *(void *)(a1 + 640) = 0;
  *(void *)(a1 + 632) = 0;
  *(void *)(a1 + 648) = 0;
  *(void *)(a1 + 672) = &unk_20E1710;
  *(void *)(a1 + 712) = 0;
  *(void *)(a1 + 688) = 0;
  *(void *)(a1 + 680) = 0;
  *(void *)(a1 + 696) = 0;
  *(void *)(a1 + 720) = &unk_20E1710;
  *(void *)(a1 + 736) = 0;
  *(void *)(a1 + 728) = 0;
  *(void *)(a1 + 744) = 0;
  *(_DWORD *)(a1 + 872) = 0;
  *(_OWORD *)(a1 + 840) = 0u;
  *(_OWORD *)(a1 + 856) = 0u;
  *(_OWORD *)(a1 + 824) = 0u;
  *(_OWORD *)(a1 + 804) = 0u;
  *(_OWORD *)(a1 + 792) = 0u;
  *(_OWORD *)(a1 + 776) = 0u;
  *(_OWORD *)(a1 + 760) = 0u;
  uint64_t v2 = (char *)operator new(8uLL);
  *(void *)(a1 + 848) = v2;
  *(void *)(a1 + 856) = v2;
  *(void *)(a1 + 864) = v2 + 8;
  uint64_t v3 = (char *)operator new(0x7F0uLL);
  *(void *)(a1 + 824) = v3;
  *(void *)(a1 + 832) = v3;
  *(void *)(a1 + 840) = v3 + 2032;
  return a1;
}

void sub_6E1284(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;
  v1[107] = v3;
  operator delete(v3);
  unsigned int v5 = (void *)v1[103];
  if (v5)
  {
    v1[104] = v5;
    operator delete(v5);
    unsigned int v6 = (void *)v1[99];
    if (!v6)
    {
LABEL_3:
      uint64_t v7 = (void *)v1[96];
      if (!v7) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else
  {
    unsigned int v6 = (void *)v1[99];
    if (!v6) {
      goto LABEL_3;
    }
  }
  v1[100] = v6;
  operator delete(v6);
  uint64_t v7 = (void *)v1[96];
  if (!v7)
  {
LABEL_4:
    sub_328138((uint64_t)v1);
    _Unwind_Resume(a1);
  }
LABEL_7:
  v1[97] = v7;
  operator delete(v7);
  sub_328138((uint64_t)v1);
  _Unwind_Resume(a1);
}

void sub_6E1308(uint64_t a1, int **a2, uint64_t a3, uint64_t a4, char a5)
{
void sub_6E17CC(uint64_t a1, int **a2, uint64_t a3)
{
  if ((int **)a1 == a2) {
    return;
  }
  unsigned int v4 = (int **)(a1 + 40);
  if ((int **)(a1 + 40) == a2) {
    return;
  }
  uint64_t v6 = 0;
  uint64_t v7 = (int **)a1;
  while (2)
  {
    unsigned int v9 = v4;
    uint64_t v10 = *(void *)(a3 + 8);
    double v11 = sub_6D82EC(v10, *(int ***)a3, v4);
    if (fabs(v11) >= fabs(sub_6D82EC(v10, *(int ***)a3, v7))) {
      goto LABEL_6;
    }
    unint64_t v12 = *v9;
    uint64_t v13 = v7[6];
    *(_OWORD *)unsigned int v55 = *(_OWORD *)(v7 + 7);
    *(void *)&v55[14] = *(int **)((char *)v7 + 70);
    int v14 = *((unsigned __int8 *)v7 + 78);
    char v15 = *((unsigned char *)v7 + 79);
    uint64_t v16 = v6;
    do
    {
      uint64_t v21 = a1 + v16;
      long long v22 = *(_OWORD *)(a1 + v16 + 16);
      *(_OWORD *)(v21 + 40) = *(_OWORD *)(a1 + v16);
      *(_OWORD *)(v21 + 56) = v22;
      *(void *)(v21 + 72) = *(void *)(a1 + v16 + 32);
      if (!v16)
      {
        uint64_t v8 = a1;
        goto LABEL_5;
      }
      long long v23 = *(int ***)a3;
      if (!*(unsigned char *)(*(void *)(a3 + 8) + 904))
      {
        char v28 = (unsigned __int16 *)((char *)*v23 - **v23);
        unsigned int v29 = *v28;
        if (*(unsigned char *)(*(void *)a3 + 38))
        {
          if (v29 < 0x49) {
            goto LABEL_44;
          }
          unsigned int v30 = v28[36];
          if (!v30) {
            goto LABEL_44;
          }
        }
        else if (v29 < 0x4B || (unsigned int v30 = v28[37]) == 0)
        {
LABEL_44:
          __int16 v31 = -1;
          int v36 = (unsigned __int16 *)((char *)v12 - *v12);
          unsigned int v37 = *v36;
          if (v14) {
            goto LABEL_45;
          }
          goto LABEL_41;
        }
        __int16 v31 = *(_WORD *)((char *)*v23 + v30);
        int v36 = (unsigned __int16 *)((char *)v12 - *v12);
        unsigned int v37 = *v36;
        if (v14)
        {
LABEL_45:
          if (v37 >= 0x4B)
          {
            unsigned int v34 = v36[37];
            if (v34) {
              goto LABEL_47;
            }
          }
LABEL_49:
          unsigned int v34 = 0xFFFF;
          goto LABEL_50;
        }
LABEL_41:
        if (v37 >= 0x49)
        {
          unsigned int v34 = v36[36];
          if (v34)
          {
LABEL_47:
            unint64_t v35 = v12;
            goto LABEL_48;
          }
        }
        goto LABEL_49;
      }
      long long v24 = v23[1];
      uint64_t v25 = (unsigned __int16 *)((char *)v24 - *v24);
      unsigned int v26 = *v25;
      if (*(unsigned char *)(*(void *)a3 + 38))
      {
        if (v26 < 5) {
          goto LABEL_33;
        }
        unsigned int v27 = v25[2];
        if (!v27) {
          goto LABEL_33;
        }
      }
      else if (v26 < 9 || (unsigned int v27 = v25[4]) == 0)
      {
LABEL_33:
        __int16 v31 = 0;
        long long v32 = (unsigned __int16 *)((char *)v13 - *v13);
        unsigned int v33 = *v32;
        if (v14)
        {
LABEL_34:
          if (v33 < 9)
          {
LABEL_37:
            unsigned int v34 = 0;
            goto LABEL_50;
          }
          unsigned int v34 = v32[4];
          if (!v34) {
            goto LABEL_50;
          }
LABEL_36:
          unint64_t v35 = v13;
LABEL_48:
          unsigned int v34 = *(unsigned __int16 *)((char *)v35 + v34);
          goto LABEL_50;
        }
        goto LABEL_30;
      }
      __int16 v31 = *(_WORD *)((char *)v24 + v27);
      long long v32 = (unsigned __int16 *)((char *)v13 - *v13);
      unsigned int v33 = *v32;
      if (v14) {
        goto LABEL_34;
      }
LABEL_30:
      if (v33 < 5) {
        goto LABEL_37;
      }
      unsigned int v34 = v32[2];
      if (v34) {
        goto LABEL_36;
      }
LABEL_50:
      unsigned __int16 v38 = v31 + 18000;
      unsigned __int16 v39 = v31 - 18000;
      if ((unsigned __int16)(v38 >> 5) < 0x465u) {
        unsigned __int16 v39 = v38;
      }
      int v40 = v34 - v39;
      if (v40 > 18000) {
        v40 -= 36000;
      }
      if (v40 < -17999) {
        v40 += 36000;
      }
      if (*(unsigned char *)(*(void *)(a3 + 8) + 904))
      {
        uint64_t v41 = v23[1];
        unint64_t v42 = (unsigned __int16 *)((char *)v41 - *v41);
        unsigned int v43 = *v42;
        if (*(unsigned char *)(*(void *)a3 + 38))
        {
          if (v43 >= 5)
          {
            unsigned int v44 = v42[2];
            if (!v42[2])
            {
LABEL_69:
              unsigned int v48 = *(int **)(a1 + v16 - 32);
              unsigned int v49 = (unsigned __int16 *)((char *)v48 - *v48);
              unsigned int v50 = *v49;
              if (*(unsigned char *)(a1 + v16 - 2))
              {
                if (v50 < 9) {
                  goto LABEL_9;
                }
                unsigned int v51 = v49[4];
                if (!v51) {
                  goto LABEL_9;
                }
              }
              else if (v50 < 5 || (unsigned int v51 = v49[2]) == 0)
              {
LABEL_9:
                int v17 = 0;
                goto LABEL_10;
              }
LABEL_86:
              int v17 = *(unsigned __int16 *)((char *)v48 + v51);
              goto LABEL_10;
            }
LABEL_67:
            LOWORD(v44) = *(_WORD *)((char *)v41 + v44);
            goto LABEL_69;
          }
        }
        else if (v43 >= 9)
        {
          unsigned int v44 = v42[4];
          if (!v42[4]) {
            goto LABEL_69;
          }
          goto LABEL_67;
        }
        LOWORD(v44) = 0;
        goto LABEL_69;
      }
      int v45 = *v23;
      uint64_t v46 = (unsigned __int16 *)((char *)v45 - *v45);
      unsigned int v47 = *v46;
      if (*(unsigned char *)(*(void *)a3 + 38))
      {
        if (v47 >= 0x49)
        {
          unsigned int v44 = v46[36];
          if (v46[36]) {
            goto LABEL_78;
          }
        }
      }
      else if (v47 >= 0x4B)
      {
        unsigned int v44 = v46[37];
        if (v46[37])
        {
LABEL_78:
          LOWORD(v44) = *(_WORD *)((char *)v45 + v44);
          goto LABEL_80;
        }
      }
      LOWORD(v44) = -1;
LABEL_80:
      unsigned int v48 = *(int **)(v21 - 40);
      unint64_t v52 = (unsigned __int16 *)((char *)v48 - *v48);
      unsigned int v53 = *v52;
      if (*(unsigned char *)(a1 + v16 - 2))
      {
        if (v53 >= 0x4B)
        {
          unsigned int v51 = v52[37];
          if (v51) {
            goto LABEL_86;
          }
        }
      }
      else if (v53 >= 0x49)
      {
        unsigned int v51 = v52[36];
        if (v51) {
          goto LABEL_86;
        }
      }
      int v17 = 0xFFFF;
LABEL_10:
      unsigned __int16 v18 = v44 + 18000;
      unsigned __int16 v19 = v44 - 18000;
      if ((unsigned __int16)(v18 >> 5) < 0x465u) {
        unsigned __int16 v19 = v18;
      }
      int v20 = v17 - v19;
      if (v20 > 18000) {
        v20 -= 36000;
      }
      if (v20 < -17999) {
        v20 += 36000;
      }
      v16 -= 40;
    }
    while (fabs((double)v40 / 100.0) < fabs((double)v20 / 100.0));
    uint64_t v8 = a1 + v16 + 40;
LABEL_5:
    *(void *)uint64_t v8 = v12;
    *(void *)(v8 + 8) = v13;
    *(_OWORD *)(v8 + 16) = *(_OWORD *)v55;
    *(void *)(v8 + 30) = *(void *)&v55[14];
    *(unsigned char *)(v8 + 38) = v14;
    *(unsigned char *)(v8 + 39) = v15;
LABEL_6:
    unsigned int v4 = v9 + 5;
    v6 += 40;
    uint64_t v7 = v9;
    if (v9 + 5 != a2) {
      continue;
    }
    break;
  }
}

void sub_6E1C30(int **a1, int **a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v3 = a1;
    unsigned int v4 = a1 + 5;
    if (a1 + 5 != a2)
    {
      while (1)
      {
        uint64_t v6 = v4;
        uint64_t v7 = *(void *)(a3 + 8);
        double v8 = sub_6D82EC(v7, *(int ***)a3, v4);
        if (fabs(v8) < fabs(sub_6D82EC(v7, *(int ***)a3, v3))) {
          break;
        }
LABEL_5:
        unsigned int v4 = v6 + 5;
        uint64_t v3 = v6;
        if (v6 + 5 == a2) {
          return;
        }
      }
      unsigned int v9 = *v6;
      uint64_t v10 = v3[6];
      *(_OWORD *)unsigned int v50 = *(_OWORD *)(v3 + 7);
      *(void *)&v50[14] = *(int **)((char *)v3 + 70);
      int v11 = *((unsigned __int8 *)v3 + 78);
      char v12 = *((unsigned char *)v3 + 79);
      while (1)
      {
        long long v17 = *((_OWORD *)v3 + 1);
        *(_OWORD *)(v3 + 5) = *(_OWORD *)v3;
        *(_OWORD *)(v3 + 7) = v17;
        v3[9] = v3[4];
        unsigned __int16 v18 = *(int ***)a3;
        if (!*(unsigned char *)(*(void *)(a3 + 8) + 904))
        {
          long long v23 = (unsigned __int16 *)((char *)*v18 - **v18);
          unsigned int v24 = *v23;
          if (*(unsigned char *)(*(void *)a3 + 38))
          {
            if (v24 < 0x49) {
              goto LABEL_42;
            }
            unsigned int v25 = v23[36];
            if (!v25) {
              goto LABEL_42;
            }
LABEL_38:
            __int16 v26 = *(_WORD *)((char *)*v18 + v25);
            __int16 v31 = (unsigned __int16 *)((char *)v9 - *v9);
            unsigned int v32 = *v31;
            if (!v11) {
              goto LABEL_39;
            }
LABEL_43:
            if (v32 >= 0x4B)
            {
              unsigned int v29 = v31[37];
              if (v29) {
                goto LABEL_45;
              }
            }
          }
          else
          {
            if (v24 >= 0x4B)
            {
              unsigned int v25 = v23[37];
              if (v25) {
                goto LABEL_38;
              }
            }
LABEL_42:
            __int16 v26 = -1;
            __int16 v31 = (unsigned __int16 *)((char *)v9 - *v9);
            unsigned int v32 = *v31;
            if (v11) {
              goto LABEL_43;
            }
LABEL_39:
            if (v32 >= 0x49)
            {
              unsigned int v29 = v31[36];
              if (v29)
              {
LABEL_45:
                unsigned int v30 = v9;
                goto LABEL_46;
              }
            }
          }
          unsigned int v29 = 0xFFFF;
          goto LABEL_48;
        }
        unsigned __int16 v19 = v18[1];
        int v20 = (unsigned __int16 *)((char *)v19 - *v19);
        unsigned int v21 = *v20;
        if (*(unsigned char *)(*(void *)a3 + 38))
        {
          if (v21 < 5) {
            goto LABEL_31;
          }
          unsigned int v22 = v20[2];
          if (!v22) {
            goto LABEL_31;
          }
        }
        else if (v21 < 9 || (unsigned int v22 = v20[4]) == 0)
        {
LABEL_31:
          __int16 v26 = 0;
          unsigned int v27 = (unsigned __int16 *)((char *)v10 - *v10);
          unsigned int v28 = *v27;
          if (v11)
          {
LABEL_32:
            if (v28 < 9)
            {
LABEL_35:
              unsigned int v29 = 0;
              goto LABEL_48;
            }
            unsigned int v29 = v27[4];
            if (!v29) {
              goto LABEL_48;
            }
LABEL_34:
            unsigned int v30 = v10;
LABEL_46:
            unsigned int v29 = *(unsigned __int16 *)((char *)v30 + v29);
            goto LABEL_48;
          }
          goto LABEL_28;
        }
        __int16 v26 = *(_WORD *)((char *)v19 + v22);
        unsigned int v27 = (unsigned __int16 *)((char *)v10 - *v10);
        unsigned int v28 = *v27;
        if (v11) {
          goto LABEL_32;
        }
LABEL_28:
        if (v28 < 5) {
          goto LABEL_35;
        }
        unsigned int v29 = v27[2];
        if (v29) {
          goto LABEL_34;
        }
LABEL_48:
        unsigned __int16 v33 = v26 + 18000;
        unsigned __int16 v34 = v26 - 18000;
        if ((unsigned __int16)(v33 >> 5) < 0x465u) {
          unsigned __int16 v34 = v33;
        }
        int v35 = v29 - v34;
        if (v35 > 18000) {
          v35 -= 36000;
        }
        if (v35 < -17999) {
          v35 += 36000;
        }
        if (!*(unsigned char *)(*(void *)(a3 + 8) + 904))
        {
          unsigned int v44 = *v18;
          int v45 = (unsigned __int16 *)((char *)v44 - *v44);
          unsigned int v46 = *v45;
          if (*(unsigned char *)(*(void *)a3 + 38))
          {
            if (v46 < 0x49) {
              goto LABEL_80;
            }
            unsigned int v39 = v45[36];
            if (!v45[36]) {
              goto LABEL_80;
            }
LABEL_76:
            LOWORD(v39) = *(_WORD *)((char *)v44 + v39);
            int v40 = *(v3 - 5);
            unsigned int v47 = (unsigned __int16 *)((char *)v40 - *v40);
            unsigned int v48 = *v47;
            if (!*((unsigned char *)v3 - 2)) {
              goto LABEL_77;
            }
LABEL_81:
            if (v48 < 0x4B) {
              goto LABEL_84;
            }
            unsigned int v43 = v47[37];
            if (!v43) {
              goto LABEL_84;
            }
          }
          else
          {
            if (v46 >= 0x4B)
            {
              unsigned int v39 = v45[37];
              if (v45[37]) {
                goto LABEL_76;
              }
            }
LABEL_80:
            LOWORD(v39) = -1;
            int v40 = *(v3 - 5);
            unsigned int v47 = (unsigned __int16 *)((char *)v40 - *v40);
            unsigned int v48 = *v47;
            if (*((unsigned char *)v3 - 2)) {
              goto LABEL_81;
            }
LABEL_77:
            if (v48 < 0x49 || (unsigned int v43 = v47[36]) == 0)
            {
LABEL_84:
              int v13 = 0xFFFF;
              goto LABEL_9;
            }
          }
LABEL_83:
          int v13 = *(unsigned __int16 *)((char *)v40 + v43);
          goto LABEL_9;
        }
        int v36 = v18[1];
        unsigned int v37 = (unsigned __int16 *)((char *)v36 - *v36);
        unsigned int v38 = *v37;
        if (*(unsigned char *)(*(void *)a3 + 38))
        {
          if (v38 >= 5)
          {
            unsigned int v39 = v37[2];
            if (!v37[2]) {
              goto LABEL_58;
            }
LABEL_68:
            LOWORD(v39) = *(_WORD *)((char *)v36 + v39);
            int v40 = *(v3 - 4);
            uint64_t v41 = (unsigned __int16 *)((char *)v40 - *v40);
            unsigned int v42 = *v41;
            if (*((unsigned char *)v3 - 2)) {
              goto LABEL_59;
            }
            goto LABEL_69;
          }
          LOWORD(v39) = 0;
          int v40 = *(v3 - 4);
          uint64_t v41 = (unsigned __int16 *)((char *)v40 - *v40);
          unsigned int v42 = *v41;
          if (*((unsigned char *)v3 - 2)) {
            goto LABEL_59;
          }
        }
        else
        {
          if (v38 >= 9)
          {
            unsigned int v39 = v37[4];
            if (!v37[4])
            {
LABEL_58:
              int v40 = *(v3 - 4);
              uint64_t v41 = (unsigned __int16 *)((char *)v40 - *v40);
              unsigned int v42 = *v41;
              if (*((unsigned char *)v3 - 2)) {
                goto LABEL_59;
              }
              goto LABEL_69;
            }
            goto LABEL_68;
          }
          LOWORD(v39) = 0;
          int v40 = *(v3 - 4);
          uint64_t v41 = (unsigned __int16 *)((char *)v40 - *v40);
          unsigned int v42 = *v41;
          if (*((unsigned char *)v3 - 2))
          {
LABEL_59:
            if (v42 >= 9)
            {
              unsigned int v43 = v41[4];
              if (v43) {
                goto LABEL_83;
              }
            }
            goto LABEL_8;
          }
        }
LABEL_69:
        if (v42 >= 5)
        {
          unsigned int v43 = v41[2];
          if (v43) {
            goto LABEL_83;
          }
        }
LABEL_8:
        int v13 = 0;
LABEL_9:
        v3 -= 5;
        unsigned __int16 v14 = v39 + 18000;
        unsigned __int16 v15 = v39 - 18000;
        if ((unsigned __int16)(v14 >> 5) < 0x465u) {
          unsigned __int16 v15 = v14;
        }
        int v16 = v13 - v15;
        if (v16 > 18000) {
          v16 -= 36000;
        }
        if (v16 < -17999) {
          v16 += 36000;
        }
        if (fabs((double)v35 / 100.0) >= fabs((double)v16 / 100.0))
        {
          v3[5] = v9;
          v3[6] = v10;
          *(int **)((char *)v3 + 70) = *(int **)&v50[14];
          *(_OWORD *)(v3 + 7) = *(_OWORD *)v50;
          *((unsigned char *)v3 + 78) = v11;
          *((unsigned char *)v3 + 79) = v12;
          goto LABEL_5;
        }
      }
    }
  }
}

uint64_t sub_6E20C4(int **a1, int **a2, int **a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a4 + 8);
  double v9 = fabs(sub_6D82EC(v8, *(int ***)a4, a2));
  double v10 = fabs(sub_6D82EC(v8, *(int ***)a4, a1));
  uint64_t v11 = *(void *)(a4 + 8);
  double v12 = sub_6D82EC(v11, *(int ***)a4, a3);
  double v13 = sub_6D82EC(v11, *(int ***)a4, a2);
  double v14 = fabs(v12);
  double v15 = fabs(v13);
  if (v9 < v10)
  {
    if (v14 < v15)
    {
      long long v16 = *(_OWORD *)a1;
      long long v17 = *((_OWORD *)a1 + 1);
      unsigned __int16 v18 = a1[4];
      unsigned __int16 v19 = a3[4];
      long long v20 = *((_OWORD *)a3 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a3;
      *((_OWORD *)a1 + 1) = v20;
      a1[4] = v19;
      a3[4] = v18;
      uint64_t result = 1;
LABEL_9:
      *(_OWORD *)a3 = v16;
      *((_OWORD *)a3 + 1) = v17;
      return result;
    }
    long long v34 = *(_OWORD *)a1;
    long long v35 = *((_OWORD *)a1 + 1);
    int v36 = a1[4];
    unsigned int v37 = a2[4];
    long long v38 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v38;
    a1[4] = v37;
    a2[4] = v36;
    *(_OWORD *)a2 = v34;
    *((_OWORD *)a2 + 1) = v35;
    uint64_t v39 = *(void *)(a4 + 8);
    double v40 = sub_6D82EC(v39, *(int ***)a4, a3);
    if (fabs(v40) < fabs(sub_6D82EC(v39, *(int ***)a4, a2)))
    {
      long long v16 = *(_OWORD *)a2;
      long long v17 = *((_OWORD *)a2 + 1);
      uint64_t v41 = a2[4];
      unsigned int v42 = a3[4];
      long long v43 = *((_OWORD *)a3 + 1);
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *((_OWORD *)a2 + 1) = v43;
      a2[4] = v42;
      a3[4] = v41;
      uint64_t result = 2;
      goto LABEL_9;
    }
    return 1;
  }
  if (v14 < v15)
  {
    long long v22 = *(_OWORD *)a2;
    long long v23 = *((_OWORD *)a2 + 1);
    unsigned int v24 = a2[4];
    unsigned int v25 = a3[4];
    long long v26 = *((_OWORD *)a3 + 1);
    *(_OWORD *)a2 = *(_OWORD *)a3;
    *((_OWORD *)a2 + 1) = v26;
    a2[4] = v25;
    a3[4] = v24;
    *(_OWORD *)a3 = v22;
    *((_OWORD *)a3 + 1) = v23;
    uint64_t v27 = *(void *)(a4 + 8);
    double v28 = sub_6D82EC(v27, *(int ***)a4, a2);
    if (fabs(v28) < fabs(sub_6D82EC(v27, *(int ***)a4, a1)))
    {
      long long v29 = *(_OWORD *)a1;
      long long v30 = *((_OWORD *)a1 + 1);
      __int16 v31 = a1[4];
      unsigned int v32 = a2[4];
      long long v33 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v33;
      a1[4] = v32;
      a2[4] = v31;
      uint64_t result = 2;
      *(_OWORD *)a2 = v29;
      *((_OWORD *)a2 + 1) = v30;
      return result;
    }
    return 1;
  }
  return 0;
}

long long *sub_6E22B0(long long *a1, int **a2, uint64_t a3)
{
  unsigned int v4 = a2;
  long long v6 = a1[1];
  long long v104 = *a1;
  long long v105 = v6;
  uint64_t v106 = *((void *)a1 + 4);
  uint64_t v7 = a2 - 5;
  uint64_t v8 = *(void *)(a3 + 8);
  double v9 = sub_6D82EC(v8, *(int ***)a3, (int **)&v104);
  if (fabs(v9) >= fabs(sub_6D82EC(v8, *(int ***)a3, v7)))
  {
    double v13 = (long long *)((char *)a1 + 40);
    do
    {
      double v10 = v13;
      if (v13 >= (long long *)v4) {
        break;
      }
      uint64_t v14 = *(void *)(a3 + 8);
      double v15 = sub_6D82EC(v14, *(int ***)a3, (int **)&v104);
      double v16 = sub_6D82EC(v14, *(int ***)a3, (int **)v10);
      double v13 = (long long *)((char *)v10 + 40);
    }
    while (fabs(v15) >= fabs(v16));
  }
  else
  {
    double v10 = a1;
    do
    {
      double v10 = (long long *)((char *)v10 + 40);
      uint64_t v11 = *(void *)(a3 + 8);
      double v12 = sub_6D82EC(v11, *(int ***)a3, (int **)&v104);
    }
    while (fabs(v12) >= fabs(sub_6D82EC(v11, *(int ***)a3, (int **)v10)));
  }
  if (v10 < (long long *)v4)
  {
    do
    {
      v4 -= 5;
      uint64_t v17 = *(void *)(a3 + 8);
      double v18 = sub_6D82EC(v17, *(int ***)a3, (int **)&v104);
    }
    while (fabs(v18) < fabs(sub_6D82EC(v17, *(int ***)a3, v4)));
  }
  if (v10 >= (long long *)v4) {
    goto LABEL_166;
  }
  while (2)
  {
    long long v19 = *v10;
    long long v20 = v10[1];
    uint64_t v109 = (int *)*((void *)v10 + 4);
    long long v107 = v19;
    long long v108 = v20;
    long long v21 = *(_OWORD *)v4;
    long long v22 = *((_OWORD *)v4 + 1);
    *((void *)v10 + 4) = v4[4];
    *double v10 = v21;
    v10[1] = v22;
    long long v23 = v107;
    long long v24 = v108;
    v4[4] = v109;
    *(_OWORD *)unsigned int v4 = v23;
    *((_OWORD *)v4 + 1) = v24;
    unsigned int v25 = *(int ***)a3;
    do
    {
      if (!*(unsigned char *)(*(void *)(a3 + 8) + 904))
      {
        long long v35 = (unsigned __int16 *)((char *)*v25 - **v25);
        unsigned int v36 = *v35;
        if (*(unsigned char *)(*(void *)a3 + 38))
        {
          if (v36 < 0x49) {
            goto LABEL_48;
          }
          unsigned int v37 = v35[36];
          if (!v37) {
            goto LABEL_48;
          }
        }
        else if (v36 < 0x4B || (unsigned int v37 = v35[37]) == 0)
        {
LABEL_48:
          __int16 v38 = -1;
          long long v43 = (unsigned __int16 *)(v104 - *(int *)v104);
          unsigned int v44 = *v43;
          if (BYTE6(v106)) {
            goto LABEL_49;
          }
          goto LABEL_45;
        }
        __int16 v38 = *(_WORD *)((char *)*v25 + v37);
        long long v43 = (unsigned __int16 *)(v104 - *(int *)v104);
        unsigned int v44 = *v43;
        if (BYTE6(v106))
        {
LABEL_49:
          if (v44 >= 0x4B)
          {
            unsigned int v41 = v43[37];
            if (v41) {
              goto LABEL_51;
            }
          }
LABEL_53:
          unsigned int v41 = 0xFFFF;
          goto LABEL_54;
        }
LABEL_45:
        if (v44 >= 0x49)
        {
          unsigned int v41 = v43[36];
          if (v41)
          {
LABEL_51:
            uint64_t v42 = v104;
            goto LABEL_52;
          }
        }
        goto LABEL_53;
      }
      __int16 v31 = v25[1];
      unsigned int v32 = (unsigned __int16 *)((char *)v31 - *v31);
      unsigned int v33 = *v32;
      if (*(unsigned char *)(*(void *)a3 + 38))
      {
        if (v33 < 5) {
          goto LABEL_37;
        }
        unsigned int v34 = v32[2];
        if (!v34) {
          goto LABEL_37;
        }
      }
      else if (v33 < 9 || (unsigned int v34 = v32[4]) == 0)
      {
LABEL_37:
        __int16 v38 = 0;
        uint64_t v39 = (unsigned __int16 *)(*((void *)&v104 + 1) - (int)**((_DWORD **)&v104 + 1));
        unsigned int v40 = *v39;
        if (BYTE6(v106))
        {
LABEL_38:
          if (v40 < 9)
          {
LABEL_41:
            unsigned int v41 = 0;
            goto LABEL_54;
          }
          unsigned int v41 = v39[4];
          if (!v41) {
            goto LABEL_54;
          }
LABEL_40:
          uint64_t v42 = *((void *)&v104 + 1);
LABEL_52:
          unsigned int v41 = *(unsigned __int16 *)(v42 + v41);
          goto LABEL_54;
        }
        goto LABEL_34;
      }
      __int16 v38 = *(_WORD *)((char *)v31 + v34);
      uint64_t v39 = (unsigned __int16 *)(*((void *)&v104 + 1) - (int)**((_DWORD **)&v104 + 1));
      unsigned int v40 = *v39;
      if (BYTE6(v106)) {
        goto LABEL_38;
      }
LABEL_34:
      if (v40 < 5) {
        goto LABEL_41;
      }
      unsigned int v41 = v39[2];
      if (v41) {
        goto LABEL_40;
      }
LABEL_54:
      unsigned __int16 v45 = v38 + 18000;
      unsigned __int16 v46 = v38 - 18000;
      if ((unsigned __int16)(v45 >> 5) < 0x465u) {
        unsigned __int16 v46 = v45;
      }
      int v47 = v41 - v46;
      if (v47 > 18000) {
        v47 -= 36000;
      }
      if (v47 < -17999) {
        v47 += 36000;
      }
      if (*(unsigned char *)(*(void *)(a3 + 8) + 904))
      {
        unsigned int v48 = v25[1];
        unsigned int v49 = (unsigned __int16 *)((char *)v48 - *v48);
        unsigned int v50 = *v49;
        if (*(unsigned char *)(*(void *)a3 + 38))
        {
          if (v50 < 5) {
            goto LABEL_75;
          }
          unsigned int v51 = v49[2];
          if (!v51) {
            goto LABEL_75;
          }
        }
        else if (v50 < 9 || (unsigned int v51 = v49[4]) == 0)
        {
LABEL_75:
          __int16 v55 = 0;
          uint64_t v56 = (int *)*((void *)v10 + 6);
          BOOL v57 = (unsigned __int16 *)((char *)v56 - *v56);
          unsigned int v58 = *v57;
          if (*((unsigned char *)v10 + 78)) {
            goto LABEL_76;
          }
          goto LABEL_72;
        }
        __int16 v55 = *(_WORD *)((char *)v48 + v51);
        uint64_t v56 = (int *)*((void *)v10 + 6);
        BOOL v57 = (unsigned __int16 *)((char *)v56 - *v56);
        unsigned int v58 = *v57;
        if (*((unsigned char *)v10 + 78))
        {
LABEL_76:
          if (v58 < 9) {
            goto LABEL_14;
          }
          unsigned int v59 = v57[4];
          if (!v59) {
            goto LABEL_14;
          }
LABEL_88:
          int v26 = *(unsigned __int16 *)((char *)v56 + v59);
          goto LABEL_15;
        }
LABEL_72:
        if (v58 < 5 || (unsigned int v59 = v57[2]) == 0)
        {
LABEL_14:
          int v26 = 0;
          goto LABEL_15;
        }
        goto LABEL_88;
      }
      unint64_t v52 = (unsigned __int16 *)((char *)*v25 - **v25);
      unsigned int v53 = *v52;
      if (*(unsigned char *)(*(void *)a3 + 38))
      {
        if (v53 >= 0x49)
        {
          unsigned int v54 = v52[36];
          if (v54) {
            goto LABEL_81;
          }
        }
      }
      else if (v53 >= 0x4B)
      {
        unsigned int v54 = v52[37];
        if (v54)
        {
LABEL_81:
          __int16 v55 = *(_WORD *)((char *)*v25 + v54);
          uint64_t v56 = (int *)*((void *)v10 + 5);
          int v60 = (unsigned __int16 *)((char *)v56 - *v56);
          unsigned int v61 = *v60;
          if (*((unsigned char *)v10 + 78)) {
            goto LABEL_86;
          }
          goto LABEL_82;
        }
      }
      __int16 v55 = -1;
      uint64_t v56 = (int *)*((void *)v10 + 5);
      int v60 = (unsigned __int16 *)((char *)v56 - *v56);
      unsigned int v61 = *v60;
      if (*((unsigned char *)v10 + 78))
      {
LABEL_86:
        if (v61 >= 0x4B)
        {
          unsigned int v59 = v60[37];
          if (v59) {
            goto LABEL_88;
          }
        }
        goto LABEL_89;
      }
LABEL_82:
      if (v61 >= 0x49)
      {
        unsigned int v59 = v60[36];
        if (v59) {
          goto LABEL_88;
        }
      }
LABEL_89:
      int v26 = 0xFFFF;
LABEL_15:
      double v10 = (long long *)((char *)v10 + 40);
      double v27 = (double)v47 / 100.0;
      unsigned __int16 v28 = v55 + 18000;
      unsigned __int16 v29 = v55 - 18000;
      if ((unsigned __int16)(v28 >> 5) >= 0x465u) {
        unsigned __int16 v28 = v29;
      }
      int v30 = v26 - v28;
      if (v30 > 18000) {
        v30 -= 36000;
      }
      if (v30 < -17999) {
        v30 += 36000;
      }
    }
    while (fabs(v27) >= fabs((double)v30 / 100.0));
    do
    {
      if (!*(unsigned char *)(*(void *)(a3 + 8) + 904))
      {
        unsigned int v71 = (unsigned __int16 *)((char *)*v25 - **v25);
        unsigned int v72 = *v71;
        if (*(unsigned char *)(*(void *)a3 + 38))
        {
          if (v72 < 0x49) {
            goto LABEL_124;
          }
          unsigned int v73 = v71[36];
          if (!v73) {
            goto LABEL_124;
          }
        }
        else if (v72 < 0x4B || (unsigned int v73 = v71[37]) == 0)
        {
LABEL_124:
          __int16 v74 = -1;
          int v79 = (unsigned __int16 *)(v104 - *(int *)v104);
          unsigned int v80 = *v79;
          if (BYTE6(v106)) {
            goto LABEL_125;
          }
          goto LABEL_121;
        }
        __int16 v74 = *(_WORD *)((char *)*v25 + v73);
        int v79 = (unsigned __int16 *)(v104 - *(int *)v104);
        unsigned int v80 = *v79;
        if (BYTE6(v106))
        {
LABEL_125:
          if (v80 >= 0x4B)
          {
            unsigned int v77 = v79[37];
            if (v77) {
              goto LABEL_127;
            }
          }
LABEL_129:
          unsigned int v77 = 0xFFFF;
          goto LABEL_130;
        }
LABEL_121:
        if (v80 >= 0x49)
        {
          unsigned int v77 = v79[36];
          if (v77)
          {
LABEL_127:
            uint64_t v78 = v104;
            goto LABEL_128;
          }
        }
        goto LABEL_129;
      }
      unint64_t v67 = v25[1];
      unsigned int v68 = (unsigned __int16 *)((char *)v67 - *v67);
      unsigned int v69 = *v68;
      if (*(unsigned char *)(*(void *)a3 + 38))
      {
        if (v69 < 5) {
          goto LABEL_113;
        }
        unsigned int v70 = v68[2];
        if (!v70) {
          goto LABEL_113;
        }
      }
      else if (v69 < 9 || (unsigned int v70 = v68[4]) == 0)
      {
LABEL_113:
        __int16 v74 = 0;
        __int16 v75 = (unsigned __int16 *)(*((void *)&v104 + 1) - (int)**((_DWORD **)&v104 + 1));
        unsigned int v76 = *v75;
        if (BYTE6(v106))
        {
LABEL_114:
          if (v76 < 9)
          {
LABEL_117:
            unsigned int v77 = 0;
            goto LABEL_130;
          }
          unsigned int v77 = v75[4];
          if (!v77) {
            goto LABEL_130;
          }
LABEL_116:
          uint64_t v78 = *((void *)&v104 + 1);
LABEL_128:
          unsigned int v77 = *(unsigned __int16 *)(v78 + v77);
          goto LABEL_130;
        }
        goto LABEL_110;
      }
      __int16 v74 = *(_WORD *)((char *)v67 + v70);
      __int16 v75 = (unsigned __int16 *)(*((void *)&v104 + 1) - (int)**((_DWORD **)&v104 + 1));
      unsigned int v76 = *v75;
      if (BYTE6(v106)) {
        goto LABEL_114;
      }
LABEL_110:
      if (v76 < 5) {
        goto LABEL_117;
      }
      unsigned int v77 = v75[2];
      if (v77) {
        goto LABEL_116;
      }
LABEL_130:
      unsigned __int16 v81 = v74 + 18000;
      unsigned __int16 v82 = v74 - 18000;
      if ((unsigned __int16)(v81 >> 5) < 0x465u) {
        unsigned __int16 v82 = v81;
      }
      int v83 = v77 - v82;
      if (v83 > 18000) {
        v83 -= 36000;
      }
      if (v83 < -17999) {
        v83 += 36000;
      }
      if (*(unsigned char *)(*(void *)(a3 + 8) + 904))
      {
        uint64_t v84 = v25[1];
        int v85 = (unsigned __int16 *)((char *)v84 - *v84);
        unsigned int v86 = *v85;
        if (*(unsigned char *)(*(void *)a3 + 38))
        {
          if (v86 < 5) {
            goto LABEL_151;
          }
          unsigned int v87 = v85[2];
          if (!v87) {
            goto LABEL_151;
          }
        }
        else if (v86 < 9 || (unsigned int v87 = v85[4]) == 0)
        {
LABEL_151:
          __int16 v91 = 0;
          unsigned int v92 = *(v4 - 4);
          unsigned int v93 = (unsigned __int16 *)((char *)v92 - *v92);
          unsigned int v94 = *v93;
          if (*((unsigned char *)v4 - 2)) {
            goto LABEL_152;
          }
          goto LABEL_148;
        }
        __int16 v91 = *(_WORD *)((char *)v84 + v87);
        unsigned int v92 = *(v4 - 4);
        unsigned int v93 = (unsigned __int16 *)((char *)v92 - *v92);
        unsigned int v94 = *v93;
        if (*((unsigned char *)v4 - 2))
        {
LABEL_152:
          if (v94 < 9) {
            goto LABEL_90;
          }
          unsigned int v95 = v93[4];
          if (!v95) {
            goto LABEL_90;
          }
LABEL_164:
          int v62 = *(unsigned __int16 *)((char *)v92 + v95);
          goto LABEL_91;
        }
LABEL_148:
        if (v94 < 5 || (unsigned int v95 = v93[2]) == 0)
        {
LABEL_90:
          int v62 = 0;
          goto LABEL_91;
        }
        goto LABEL_164;
      }
      double v88 = (unsigned __int16 *)((char *)*v25 - **v25);
      unsigned int v89 = *v88;
      if (*(unsigned char *)(*(void *)a3 + 38))
      {
        if (v89 >= 0x49)
        {
          unsigned int v90 = v88[36];
          if (v90) {
            goto LABEL_157;
          }
        }
      }
      else if (v89 >= 0x4B)
      {
        unsigned int v90 = v88[37];
        if (v90)
        {
LABEL_157:
          __int16 v91 = *(_WORD *)((char *)*v25 + v90);
          unsigned int v92 = *(v4 - 5);
          uint64_t v96 = (unsigned __int16 *)((char *)v92 - *v92);
          unsigned int v97 = *v96;
          if (*((unsigned char *)v4 - 2)) {
            goto LABEL_162;
          }
          goto LABEL_158;
        }
      }
      __int16 v91 = -1;
      unsigned int v92 = *(v4 - 5);
      uint64_t v96 = (unsigned __int16 *)((char *)v92 - *v92);
      unsigned int v97 = *v96;
      if (*((unsigned char *)v4 - 2))
      {
LABEL_162:
        if (v97 >= 0x4B)
        {
          unsigned int v95 = v96[37];
          if (v95) {
            goto LABEL_164;
          }
        }
        goto LABEL_165;
      }
LABEL_158:
      if (v97 >= 0x49)
      {
        unsigned int v95 = v96[36];
        if (v95) {
          goto LABEL_164;
        }
      }
LABEL_165:
      int v62 = 0xFFFF;
LABEL_91:
      v4 -= 5;
      double v63 = (double)v83 / 100.0;
      unsigned __int16 v64 = v91 + 18000;
      unsigned __int16 v65 = v91 - 18000;
      if ((unsigned __int16)(v64 >> 5) >= 0x465u) {
        unsigned __int16 v64 = v65;
      }
      int v66 = v62 - v64;
      if (v66 > 18000) {
        v66 -= 36000;
      }
      if (v66 < -17999) {
        v66 += 36000;
      }
    }
    while (fabs(v63) < fabs((double)v66 / 100.0));
    if (v10 < (long long *)v4) {
      continue;
    }
    break;
  }
LABEL_166:
  unsigned int v98 = (long long *)((char *)v10 - 40);
  if ((long long *)((char *)v10 - 40) != a1)
  {
    long long v99 = *v98;
    long long v100 = *(long long *)((char *)v10 - 24);
    *((void *)a1 + 4) = *((void *)v10 - 1);
    *a1 = v99;
    a1[1] = v100;
  }
  long long v101 = v104;
  long long v102 = v105;
  *((void *)v10 - 1) = v106;
  *unsigned int v98 = v101;
  *(long long *)((char *)v10 - 24) = v102;
  return v10;
}

uint64_t sub_6E2A9C(long long *a1, int **a2, uint64_t a3)
{
  uint64_t v6 = 0;
  long long v7 = a1[1];
  long long v101 = *a1;
  long long v102 = v7;
  uint64_t v103 = *((void *)a1 + 4);
  do
  {
    v6 += 40;
    uint64_t v8 = *(void *)(a3 + 8);
    double v9 = sub_6D82EC(v8, *(int ***)a3, (int **)((char *)a1 + v6));
  }
  while (fabs(v9) < fabs(sub_6D82EC(v8, *(int ***)a3, (int **)&v101)));
  unint64_t v10 = (unint64_t)a1 + v6;
  uint64_t v11 = (uint64_t)a1 + v6 - 40;
  if (v6 == 40)
  {
    do
    {
      if (v10 >= (unint64_t)a2) {
        break;
      }
      a2 -= 5;
      uint64_t v14 = *(void *)(a3 + 8);
      double v15 = sub_6D82EC(v14, *(int ***)a3, a2);
    }
    while (fabs(v15) >= fabs(sub_6D82EC(v14, *(int ***)a3, (int **)&v101)));
  }
  else
  {
    do
    {
      a2 -= 5;
      uint64_t v12 = *(void *)(a3 + 8);
      double v13 = sub_6D82EC(v12, *(int ***)a3, a2);
    }
    while (fabs(v13) >= fabs(sub_6D82EC(v12, *(int ***)a3, (int **)&v101)));
  }
  if (v10 < (unint64_t)a2)
  {
    unint64_t v16 = v10;
    uint64_t v17 = a2;
    while (1)
    {
      long long v19 = *(_OWORD *)(v16 + 16);
      long long v104 = *(_OWORD *)v16;
      long long v18 = v104;
      long long v105 = v19;
      uint64_t v106 = *(int **)(v16 + 32);
      long long v20 = v106;
      long long v22 = *(_OWORD *)v17;
      long long v21 = *((_OWORD *)v17 + 1);
      *(void *)(v16 + 32) = v17[4];
      *(_OWORD *)unint64_t v16 = v22;
      *(_OWORD *)(v16 + 16) = v21;
      v17[4] = v20;
      *(_OWORD *)uint64_t v17 = v18;
      *((_OWORD *)v17 + 1) = v19;
      long long v23 = *(int ***)a3;
      do
      {
        if (*(unsigned char *)(*(void *)(a3 + 8) + 904))
        {
          unsigned __int16 v29 = v23[1];
          int v30 = (unsigned __int16 *)((char *)v29 - *v29);
          unsigned int v31 = *v30;
          if (*(unsigned char *)(*(void *)a3 + 38))
          {
            if (v31 < 5) {
              goto LABEL_35;
            }
            unsigned int v32 = v30[2];
            if (!v32) {
              goto LABEL_35;
            }
LABEL_31:
            __int16 v36 = *(_WORD *)((char *)v29 + v32);
            unsigned int v37 = *(int **)(v16 + 48);
            __int16 v38 = (unsigned __int16 *)((char *)v37 - *v37);
            unsigned int v39 = *v38;
            if (!*(unsigned char *)(v16 + 78)) {
              goto LABEL_32;
            }
LABEL_36:
            if (v39 < 9) {
              goto LABEL_38;
            }
            unsigned int v40 = v38[4];
            if (!v40) {
              goto LABEL_38;
            }
          }
          else
          {
            if (v31 >= 9)
            {
              unsigned int v32 = v30[4];
              if (v32) {
                goto LABEL_31;
              }
            }
LABEL_35:
            __int16 v36 = 0;
            unsigned int v37 = *(int **)(v16 + 48);
            __int16 v38 = (unsigned __int16 *)((char *)v37 - *v37);
            unsigned int v39 = *v38;
            if (*(unsigned char *)(v16 + 78)) {
              goto LABEL_36;
            }
LABEL_32:
            if (v39 < 5 || (unsigned int v40 = v38[2]) == 0)
            {
LABEL_38:
              int v41 = 0;
              goto LABEL_50;
            }
          }
LABEL_48:
          int v41 = *(unsigned __int16 *)((char *)v37 + v40);
          goto LABEL_50;
        }
        unsigned int v33 = (unsigned __int16 *)((char *)*v23 - **v23);
        unsigned int v34 = *v33;
        if (*(unsigned char *)(*(void *)a3 + 38))
        {
          if (v34 >= 0x49)
          {
            unsigned int v35 = v33[36];
            if (v35) {
              goto LABEL_41;
            }
          }
        }
        else if (v34 >= 0x4B)
        {
          unsigned int v35 = v33[37];
          if (v35)
          {
LABEL_41:
            __int16 v36 = *(_WORD *)((char *)*v23 + v35);
            unsigned int v37 = *(int **)(v16 + 40);
            uint64_t v42 = (unsigned __int16 *)((char *)v37 - *v37);
            unsigned int v43 = *v42;
            if (*(unsigned char *)(v16 + 78)) {
              goto LABEL_46;
            }
            goto LABEL_42;
          }
        }
        __int16 v36 = -1;
        unsigned int v37 = *(int **)(v16 + 40);
        uint64_t v42 = (unsigned __int16 *)((char *)v37 - *v37);
        unsigned int v43 = *v42;
        if (*(unsigned char *)(v16 + 78))
        {
LABEL_46:
          if (v43 >= 0x4B)
          {
            unsigned int v40 = v42[37];
            if (v40) {
              goto LABEL_48;
            }
          }
          goto LABEL_49;
        }
LABEL_42:
        if (v43 >= 0x49)
        {
          unsigned int v40 = v42[36];
          if (v40) {
            goto LABEL_48;
          }
        }
LABEL_49:
        int v41 = 0xFFFF;
LABEL_50:
        unsigned __int16 v44 = v36 + 18000;
        unsigned __int16 v45 = v36 - 18000;
        if ((unsigned __int16)(v44 >> 5) < 0x465u) {
          unsigned __int16 v45 = v44;
        }
        int v46 = v41 - v45;
        if (v46 > 18000) {
          v46 -= 36000;
        }
        if (v46 < -17999) {
          v46 += 36000;
        }
        if (!*(unsigned char *)(*(void *)(a3 + 8) + 904))
        {
          unsigned int v51 = (unsigned __int16 *)((char *)*v23 - **v23);
          unsigned int v52 = *v51;
          if (*(unsigned char *)(*(void *)a3 + 38))
          {
            if (v52 < 0x49) {
              goto LABEL_81;
            }
            unsigned int v53 = v51[36];
            if (!v53) {
              goto LABEL_81;
            }
LABEL_77:
            __int16 v54 = *(_WORD *)((char *)*v23 + v53);
            unsigned int v58 = (unsigned __int16 *)(v101 - *(int *)v101);
            unsigned int v59 = *v58;
            if (!BYTE6(v103)) {
              goto LABEL_78;
            }
LABEL_82:
            if (v59 >= 0x4B)
            {
              unsigned int v24 = v58[37];
              if (v24) {
                goto LABEL_84;
              }
            }
          }
          else
          {
            if (v52 >= 0x4B)
            {
              unsigned int v53 = v51[37];
              if (v53) {
                goto LABEL_77;
              }
            }
LABEL_81:
            __int16 v54 = -1;
            unsigned int v58 = (unsigned __int16 *)(v101 - *(int *)v101);
            unsigned int v59 = *v58;
            if (BYTE6(v103)) {
              goto LABEL_82;
            }
LABEL_78:
            if (v59 >= 0x49)
            {
              unsigned int v24 = v58[36];
              if (v24)
              {
LABEL_84:
                uint64_t v57 = v101;
                goto LABEL_85;
              }
            }
          }
          unsigned int v24 = 0xFFFF;
          goto LABEL_13;
        }
        int v47 = v23[1];
        unsigned int v48 = (unsigned __int16 *)((char *)v47 - *v47);
        unsigned int v49 = *v48;
        if (*(unsigned char *)(*(void *)a3 + 38))
        {
          if (v49 >= 5)
          {
            unsigned int v50 = v48[2];
            if (v50) {
              goto LABEL_67;
            }
          }
        }
        else if (v49 >= 9)
        {
          unsigned int v50 = v48[4];
          if (v50)
          {
LABEL_67:
            __int16 v54 = *(_WORD *)((char *)v47 + v50);
            __int16 v55 = (unsigned __int16 *)(*((void *)&v101 + 1) - (int)**((_DWORD **)&v101 + 1));
            unsigned int v56 = *v55;
            if (!BYTE6(v103)) {
              goto LABEL_68;
            }
            goto LABEL_72;
          }
        }
        __int16 v54 = 0;
        __int16 v55 = (unsigned __int16 *)(*((void *)&v101 + 1) - (int)**((_DWORD **)&v101 + 1));
        unsigned int v56 = *v55;
        if (!BYTE6(v103))
        {
LABEL_68:
          if (v56 < 5) {
            goto LABEL_12;
          }
          unsigned int v24 = v55[2];
          if (v24) {
            goto LABEL_74;
          }
          goto LABEL_13;
        }
LABEL_72:
        if (v56 < 9)
        {
LABEL_12:
          unsigned int v24 = 0;
          goto LABEL_13;
        }
        unsigned int v24 = v55[4];
        if (v24)
        {
LABEL_74:
          uint64_t v57 = *((void *)&v101 + 1);
LABEL_85:
          unsigned int v24 = *(unsigned __int16 *)(v57 + v24);
        }
LABEL_13:
        v16 += 40;
        double v25 = (double)v46 / 100.0;
        unsigned __int16 v26 = v54 + 18000;
        unsigned __int16 v27 = v54 - 18000;
        if ((unsigned __int16)(v26 >> 5) >= 0x465u) {
          unsigned __int16 v26 = v27;
        }
        int v28 = v24 - v26;
        if (v28 > 18000) {
          v28 -= 36000;
        }
        if (v28 < -17999) {
          v28 += 36000;
        }
      }
      while (fabs(v25) < fabs((double)v28 / 100.0));
      do
      {
        if (*(unsigned char *)(*(void *)(a3 + 8) + 904))
        {
          unsigned __int16 v65 = v23[1];
          int v66 = (unsigned __int16 *)((char *)v65 - *v65);
          unsigned int v67 = *v66;
          if (*(unsigned char *)(*(void *)a3 + 38))
          {
            if (v67 < 5) {
              goto LABEL_110;
            }
            unsigned int v68 = v66[2];
            if (!v68) {
              goto LABEL_110;
            }
LABEL_106:
            __int16 v72 = *(_WORD *)((char *)v65 + v68);
            unsigned int v73 = *(v17 - 4);
            __int16 v74 = (unsigned __int16 *)((char *)v73 - *v73);
            unsigned int v75 = *v74;
            if (!*((unsigned char *)v17 - 2)) {
              goto LABEL_107;
            }
LABEL_111:
            if (v75 < 9) {
              goto LABEL_113;
            }
            unsigned int v76 = v74[4];
            if (!v76) {
              goto LABEL_113;
            }
          }
          else
          {
            if (v67 >= 9)
            {
              unsigned int v68 = v66[4];
              if (v68) {
                goto LABEL_106;
              }
            }
LABEL_110:
            __int16 v72 = 0;
            unsigned int v73 = *(v17 - 4);
            __int16 v74 = (unsigned __int16 *)((char *)v73 - *v73);
            unsigned int v75 = *v74;
            if (*((unsigned char *)v17 - 2)) {
              goto LABEL_111;
            }
LABEL_107:
            if (v75 < 5 || (unsigned int v76 = v74[2]) == 0)
            {
LABEL_113:
              int v77 = 0;
              goto LABEL_125;
            }
          }
LABEL_123:
          int v77 = *(unsigned __int16 *)((char *)v73 + v76);
          goto LABEL_125;
        }
        unsigned int v69 = (unsigned __int16 *)((char *)*v23 - **v23);
        unsigned int v70 = *v69;
        if (*(unsigned char *)(*(void *)a3 + 38))
        {
          if (v70 >= 0x49)
          {
            unsigned int v71 = v69[36];
            if (v71) {
              goto LABEL_116;
            }
          }
        }
        else if (v70 >= 0x4B)
        {
          unsigned int v71 = v69[37];
          if (v71)
          {
LABEL_116:
            __int16 v72 = *(_WORD *)((char *)*v23 + v71);
            unsigned int v73 = *(v17 - 5);
            uint64_t v78 = (unsigned __int16 *)((char *)v73 - *v73);
            unsigned int v79 = *v78;
            if (*((unsigned char *)v17 - 2)) {
              goto LABEL_121;
            }
            goto LABEL_117;
          }
        }
        __int16 v72 = -1;
        unsigned int v73 = *(v17 - 5);
        uint64_t v78 = (unsigned __int16 *)((char *)v73 - *v73);
        unsigned int v79 = *v78;
        if (*((unsigned char *)v17 - 2))
        {
LABEL_121:
          if (v79 >= 0x4B)
          {
            unsigned int v76 = v78[37];
            if (v76) {
              goto LABEL_123;
            }
          }
          goto LABEL_124;
        }
LABEL_117:
        if (v79 >= 0x49)
        {
          unsigned int v76 = v78[36];
          if (v76) {
            goto LABEL_123;
          }
        }
LABEL_124:
        int v77 = 0xFFFF;
LABEL_125:
        unsigned __int16 v80 = v72 + 18000;
        unsigned __int16 v81 = v72 - 18000;
        if ((unsigned __int16)(v80 >> 5) < 0x465u) {
          unsigned __int16 v81 = v80;
        }
        int v82 = v77 - v81;
        if (v82 > 18000) {
          v82 -= 36000;
        }
        if (v82 < -17999) {
          v82 += 36000;
        }
        if (!*(unsigned char *)(*(void *)(a3 + 8) + 904))
        {
          unsigned int v87 = (unsigned __int16 *)((char *)*v23 - **v23);
          unsigned int v88 = *v87;
          if (*(unsigned char *)(*(void *)a3 + 38))
          {
            if (v88 < 0x49) {
              goto LABEL_156;
            }
            unsigned int v89 = v87[36];
            if (!v89) {
              goto LABEL_156;
            }
LABEL_152:
            __int16 v90 = *(_WORD *)((char *)*v23 + v89);
            unsigned int v94 = (unsigned __int16 *)(v101 - *(int *)v101);
            unsigned int v95 = *v94;
            if (!BYTE6(v103)) {
              goto LABEL_153;
            }
LABEL_157:
            if (v95 >= 0x4B)
            {
              unsigned int v60 = v94[37];
              if (v60) {
                goto LABEL_159;
              }
            }
          }
          else
          {
            if (v88 >= 0x4B)
            {
              unsigned int v89 = v87[37];
              if (v89) {
                goto LABEL_152;
              }
            }
LABEL_156:
            __int16 v90 = -1;
            unsigned int v94 = (unsigned __int16 *)(v101 - *(int *)v101);
            unsigned int v95 = *v94;
            if (BYTE6(v103)) {
              goto LABEL_157;
            }
LABEL_153:
            if (v95 >= 0x49)
            {
              unsigned int v60 = v94[36];
              if (v60)
              {
LABEL_159:
                uint64_t v93 = v101;
                goto LABEL_160;
              }
            }
          }
          unsigned int v60 = 0xFFFF;
          goto LABEL_88;
        }
        int v83 = v23[1];
        uint64_t v84 = (unsigned __int16 *)((char *)v83 - *v83);
        unsigned int v85 = *v84;
        if (*(unsigned char *)(*(void *)a3 + 38))
        {
          if (v85 >= 5)
          {
            unsigned int v86 = v84[2];
            if (v86) {
              goto LABEL_142;
            }
          }
        }
        else if (v85 >= 9)
        {
          unsigned int v86 = v84[4];
          if (v86)
          {
LABEL_142:
            __int16 v90 = *(_WORD *)((char *)v83 + v86);
            __int16 v91 = (unsigned __int16 *)(*((void *)&v101 + 1) - (int)**((_DWORD **)&v101 + 1));
            unsigned int v92 = *v91;
            if (!BYTE6(v103)) {
              goto LABEL_143;
            }
            goto LABEL_147;
          }
        }
        __int16 v90 = 0;
        __int16 v91 = (unsigned __int16 *)(*((void *)&v101 + 1) - (int)**((_DWORD **)&v101 + 1));
        unsigned int v92 = *v91;
        if (!BYTE6(v103))
        {
LABEL_143:
          if (v92 < 5) {
            goto LABEL_87;
          }
          unsigned int v60 = v91[2];
          if (v60) {
            goto LABEL_149;
          }
          goto LABEL_88;
        }
LABEL_147:
        if (v92 < 9)
        {
LABEL_87:
          unsigned int v60 = 0;
          goto LABEL_88;
        }
        unsigned int v60 = v91[4];
        if (v60)
        {
LABEL_149:
          uint64_t v93 = *((void *)&v101 + 1);
LABEL_160:
          unsigned int v60 = *(unsigned __int16 *)(v93 + v60);
        }
LABEL_88:
        v17 -= 5;
        double v61 = (double)v82 / 100.0;
        unsigned __int16 v62 = v90 + 18000;
        unsigned __int16 v63 = v90 - 18000;
        if ((unsigned __int16)(v62 >> 5) >= 0x465u) {
          unsigned __int16 v62 = v63;
        }
        int v64 = v60 - v62;
        if (v64 > 18000) {
          v64 -= 36000;
        }
        if (v64 < -17999) {
          v64 += 36000;
        }
      }
      while (fabs(v61) >= fabs((double)v64 / 100.0));
      if (v16 >= (unint64_t)v17)
      {
        uint64_t v11 = v16 - 40;
        break;
      }
    }
  }
  if ((long long *)v11 != a1)
  {
    long long v96 = *(_OWORD *)v11;
    long long v97 = *(_OWORD *)(v11 + 16);
    *((void *)a1 + 4) = *(void *)(v11 + 32);
    *a1 = v96;
    a1[1] = v97;
  }
  long long v98 = v101;
  long long v99 = v102;
  *(void *)(v11 + 32) = v103;
  *(_OWORD *)uint64_t v11 = v98;
  *(_OWORD *)(v11 + 16) = v99;
  return v11;
}

BOOL sub_6E3250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (a2 - a1) >> 3;
  BOOL result = 1;
  switch(0xCCCCCCCCCCCCCCCDLL * v6)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      uint64_t v8 = a2 - 40;
      uint64_t v9 = *(void *)(a3 + 8);
      double v10 = sub_6D82EC(v9, *(int ***)a3, (int **)(a2 - 40));
      if (fabs(v10) >= fabs(sub_6D82EC(v9, *(int ***)a3, (int **)a1))) {
        return 1;
      }
      long long v11 = *(_OWORD *)a1;
      long long v12 = *(_OWORD *)(a1 + 16);
      uint64_t v13 = *(void *)(a1 + 32);
      uint64_t v14 = *(void *)(v8 + 32);
      long long v15 = *(_OWORD *)(v8 + 16);
      *(_OWORD *)a1 = *(_OWORD *)v8;
      *(_OWORD *)(a1 + 16) = v15;
      *(void *)(a1 + 32) = v14;
      *(void *)(v8 + 32) = v13;
      BOOL result = 1;
      *(_OWORD *)uint64_t v8 = v11;
      *(_OWORD *)(v8 + 16) = v12;
      return result;
    case 3uLL:
      sub_6E20C4((int **)a1, (int **)(a1 + 40), (int **)(a2 - 40), a3);
      return 1;
    case 4uLL:
      sub_6E34DC((int **)a1, (int **)(a1 + 40), (int **)(a1 + 80), (int **)(a2 - 40), a3);
      return 1;
    case 5uLL:
      sub_6E3630((int **)a1, (int **)(a1 + 40), (int **)(a1 + 80), (int **)(a1 + 120), (int **)(a2 - 40), a3);
      return 1;
    default:
      unint64_t v16 = (int **)(a1 + 80);
      sub_6E20C4((int **)a1, (int **)(a1 + 40), (int **)(a1 + 80), a3);
      uint64_t v17 = a1 + 120;
      if (a1 + 120 == a2) {
        return 1;
      }
      uint64_t v18 = 0;
      int v19 = 0;
      break;
  }
  while (1)
  {
    uint64_t v22 = *(void *)(a3 + 8);
    double v23 = sub_6D82EC(v22, *(int ***)a3, (int **)v17);
    if (fabs(v23) < fabs(sub_6D82EC(v22, *(int ***)a3, v16)))
    {
      long long v24 = *(_OWORD *)(v17 + 16);
      long long v31 = *(_OWORD *)v17;
      long long v32 = v24;
      uint64_t v33 = *(void *)(v17 + 32);
      uint64_t v25 = v18;
      do
      {
        uint64_t v26 = a1 + v25;
        long long v27 = *(_OWORD *)(a1 + v25 + 96);
        *(_OWORD *)(v26 + 120) = *(_OWORD *)(a1 + v25 + 80);
        *(_OWORD *)(v26 + 136) = v27;
        *(void *)(v26 + 152) = *(void *)(a1 + v25 + 112);
        if (v25 == -80)
        {
          uint64_t v20 = a1;
          goto LABEL_7;
        }
        int v28 = (int **)(v26 + 40);
        uint64_t v29 = *(void *)(a3 + 8);
        double v30 = sub_6D82EC(v29, *(int ***)a3, (int **)&v31);
        v25 -= 40;
      }
      while (fabs(v30) < fabs(sub_6D82EC(v29, *(int ***)a3, v28)));
      uint64_t v20 = a1 + v25 + 120;
LABEL_7:
      long long v21 = v32;
      *(_OWORD *)uint64_t v20 = v31;
      *(_OWORD *)(v20 + 16) = v21;
      *(void *)(v20 + 32) = v33;
      if (++v19 == 8) {
        return v17 + 40 == a2;
      }
    }
    unint64_t v16 = (int **)v17;
    v18 += 40;
    v17 += 40;
    if (v17 == a2) {
      return 1;
    }
  }
}

void sub_6E34DC(int **a1, int **a2, int **a3, int **a4, uint64_t a5)
{
  sub_6E20C4(a1, a2, a3, a5);
  uint64_t v10 = *(void *)(a5 + 8);
  double v11 = sub_6D82EC(v10, *(int ***)a5, a4);
  if (fabs(v11) < fabs(sub_6D82EC(v10, *(int ***)a5, a3)))
  {
    long long v12 = *(_OWORD *)a3;
    long long v13 = *((_OWORD *)a3 + 1);
    uint64_t v14 = a3[4];
    long long v15 = a4[4];
    long long v16 = *((_OWORD *)a4 + 1);
    *(_OWORD *)a3 = *(_OWORD *)a4;
    *((_OWORD *)a3 + 1) = v16;
    a3[4] = v15;
    a4[4] = v14;
    *(_OWORD *)a4 = v12;
    *((_OWORD *)a4 + 1) = v13;
    uint64_t v17 = *(void *)(a5 + 8);
    double v18 = sub_6D82EC(v17, *(int ***)a5, a3);
    if (fabs(v18) < fabs(sub_6D82EC(v17, *(int ***)a5, a2)))
    {
      long long v19 = *(_OWORD *)a2;
      long long v20 = *((_OWORD *)a2 + 1);
      long long v21 = a2[4];
      uint64_t v22 = a3[4];
      long long v23 = *((_OWORD *)a3 + 1);
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *((_OWORD *)a2 + 1) = v23;
      a2[4] = v22;
      a3[4] = v21;
      *(_OWORD *)a3 = v19;
      *((_OWORD *)a3 + 1) = v20;
      uint64_t v24 = *(void *)(a5 + 8);
      double v25 = sub_6D82EC(v24, *(int ***)a5, a2);
      if (fabs(v25) < fabs(sub_6D82EC(v24, *(int ***)a5, a1)))
      {
        long long v26 = *(_OWORD *)a1;
        long long v27 = *((_OWORD *)a1 + 1);
        int v28 = a1[4];
        uint64_t v29 = a2[4];
        long long v30 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v30;
        a1[4] = v29;
        a2[4] = v28;
        *(_OWORD *)a2 = v26;
        *((_OWORD *)a2 + 1) = v27;
      }
    }
  }
}

void sub_6E3630(int **a1, int **a2, int **a3, int **a4, int **a5, uint64_t a6)
{
  sub_6E34DC(a1, a2, a3, a4, a6);
  uint64_t v12 = *(void *)(a6 + 8);
  double v13 = sub_6D82EC(v12, *(int ***)a6, a5);
  if (fabs(v13) < fabs(sub_6D82EC(v12, *(int ***)a6, a4)))
  {
    long long v14 = *(_OWORD *)a4;
    long long v15 = *((_OWORD *)a4 + 1);
    long long v16 = a4[4];
    uint64_t v17 = a5[4];
    long long v18 = *((_OWORD *)a5 + 1);
    *(_OWORD *)a4 = *(_OWORD *)a5;
    *((_OWORD *)a4 + 1) = v18;
    a4[4] = v17;
    a5[4] = v16;
    *(_OWORD *)a5 = v14;
    *((_OWORD *)a5 + 1) = v15;
    uint64_t v19 = *(void *)(a6 + 8);
    double v20 = sub_6D82EC(v19, *(int ***)a6, a4);
    if (fabs(v20) < fabs(sub_6D82EC(v19, *(int ***)a6, a3)))
    {
      long long v21 = *(_OWORD *)a3;
      long long v22 = *((_OWORD *)a3 + 1);
      long long v23 = a3[4];
      uint64_t v24 = a4[4];
      long long v25 = *((_OWORD *)a4 + 1);
      *(_OWORD *)a3 = *(_OWORD *)a4;
      *((_OWORD *)a3 + 1) = v25;
      a3[4] = v24;
      a4[4] = v23;
      *(_OWORD *)a4 = v21;
      *((_OWORD *)a4 + 1) = v22;
      uint64_t v26 = *(void *)(a6 + 8);
      double v27 = sub_6D82EC(v26, *(int ***)a6, a3);
      if (fabs(v27) < fabs(sub_6D82EC(v26, *(int ***)a6, a2)))
      {
        long long v28 = *(_OWORD *)a2;
        long long v29 = *((_OWORD *)a2 + 1);
        long long v30 = a2[4];
        long long v31 = a3[4];
        long long v32 = *((_OWORD *)a3 + 1);
        *(_OWORD *)a2 = *(_OWORD *)a3;
        *((_OWORD *)a2 + 1) = v32;
        a2[4] = v31;
        a3[4] = v30;
        *(_OWORD *)a3 = v28;
        *((_OWORD *)a3 + 1) = v29;
        uint64_t v33 = *(void *)(a6 + 8);
        double v34 = sub_6D82EC(v33, *(int ***)a6, a2);
        if (fabs(v34) < fabs(sub_6D82EC(v33, *(int ***)a6, a1)))
        {
          long long v35 = *(_OWORD *)a1;
          long long v36 = *((_OWORD *)a1 + 1);
          unsigned int v37 = a1[4];
          __int16 v38 = a2[4];
          long long v39 = *((_OWORD *)a2 + 1);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((_OWORD *)a1 + 1) = v39;
          a1[4] = v38;
          a2[4] = v37;
          *(_OWORD *)a2 = v35;
          *((_OWORD *)a2 + 1) = v36;
        }
      }
    }
  }
}

void sub_6E37E4(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4)
{
  unint64_t v8 = a3 - 2;
  if (a3 >= 2)
  {
    uint64_t v37 = v7;
    uint64_t v38 = v6;
    uint64_t v39 = v4;
    uint64_t v40 = v5;
    uint64_t v9 = a4;
    int64_t v11 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) >= (uint64_t)(0xCCCCCCCCCCCCCCCDLL * (((uint64_t)a4 - a1) >> 3)))
    {
      int64_t v14 = (0x999999999999999ALL * (((uint64_t)a4 - a1) >> 3)) | 1;
      long long v15 = (long long *)(a1 + 40 * v14);
      int64_t v16 = 0x999999999999999ALL * (((uint64_t)a4 - a1) >> 3) + 2;
      if (v16 < a3)
      {
        uint64_t v17 = *(void *)(a2 + 8);
        double v18 = sub_6D82EC(v17, *(int ***)a2, (int **)(a1 + 40 * v14));
        if (fabs(v18) < fabs(sub_6D82EC(v17, *(int ***)a2, (int **)v15 + 5)))
        {
          long long v15 = (long long *)((char *)v15 + 40);
          int64_t v14 = v16;
        }
      }
      uint64_t v19 = *(void *)(a2 + 8);
      double v20 = sub_6D82EC(v19, *(int ***)a2, (int **)v15);
      if (fabs(v20) >= fabs(sub_6D82EC(v19, *(int ***)a2, (int **)v9)))
      {
        long long v21 = v9[1];
        long long v34 = *v9;
        long long v35 = v21;
        uint64_t v36 = *((void *)v9 + 4);
        do
        {
          long long v25 = v15;
          long long v26 = *v15;
          long long v27 = v15[1];
          *((void *)v9 + 4) = *((void *)v15 + 4);
          long long *v9 = v26;
          v9[1] = v27;
          if (v11 < v14) {
            break;
          }
          uint64_t v28 = 2 * v14;
          int64_t v14 = (2 * v14) | 1;
          long long v15 = (long long *)(a1 + 40 * v14);
          int64_t v29 = v28 + 2;
          if (v28 + 2 < a3)
          {
            uint64_t v30 = *(void *)(a2 + 8);
            double v31 = sub_6D82EC(v30, *(int ***)a2, (int **)v15);
            if (fabs(v31) < fabs(sub_6D82EC(v30, *(int ***)a2, (int **)v15 + 5)))
            {
              long long v15 = (long long *)((char *)v15 + 40);
              int64_t v14 = v29;
            }
          }
          uint64_t v22 = *(void *)(a2 + 8);
          double v23 = sub_6D82EC(v22, *(int ***)a2, (int **)v15);
          double v24 = sub_6D82EC(v22, *(int ***)a2, (int **)&v34);
          uint64_t v9 = v25;
        }
        while (fabs(v23) >= fabs(v24));
        long long v32 = v34;
        long long v33 = v35;
        *((void *)v25 + 4) = v36;
        *long long v25 = v32;
        v25[1] = v33;
      }
    }
  }
}

void sub_6E39E4(uint64_t a1, int **a2, void *a3)
{
  if ((uint64_t)a2 - a1 >= 41)
  {
    uint64_t v4 = a2;
    int64_t v6 = ((unint64_t)a2 - a1) / 0x28;
    do
    {
      while (2)
      {
        uint64_t v8 = 0;
        long long v57 = *(_OWORD *)a1;
        long long v58 = *(_OWORD *)(a1 + 16);
        unsigned int v59 = *(int **)(a1 + 32);
        uint64_t v9 = (int **)a1;
        do
        {
          uint64_t v12 = v9;
          uint64_t v13 = v8 + 1;
          v9 += 5 * v8 + 5;
          uint64_t v14 = 2 * v8;
          uint64_t v8 = (2 * v8) | 1;
          int64_t v15 = v14 + 2;
          if (v15 >= v6) {
            goto LABEL_5;
          }
          int64_t v16 = (int **)*a3;
          if (*(unsigned char *)(a3[1] + 904))
          {
            uint64_t v17 = v16[1];
            double v18 = (unsigned __int16 *)((char *)v17 - *v17);
            unsigned int v19 = *v18;
            if (*(unsigned char *)(*a3 + 38))
            {
              if (v19 < 5) {
                goto LABEL_19;
              }
              unsigned int v20 = v18[2];
              if (!v20) {
                goto LABEL_19;
              }
LABEL_18:
              __int16 v24 = *(_WORD *)((char *)v17 + v20);
            }
            else
            {
              if (v19 >= 9)
              {
                unsigned int v20 = v18[4];
                if (v20) {
                  goto LABEL_18;
                }
              }
LABEL_19:
              __int16 v24 = 0;
            }
            long long v25 = &v12[5 * v13];
            int v26 = *((unsigned __int8 *)v25 + 38);
            long long v27 = v25[1];
            uint64_t v28 = (unsigned __int16 *)((char *)v27 - *v27);
            unsigned int v29 = *v28;
            if (v26)
            {
              if (v29 < 9) {
                goto LABEL_26;
              }
              unsigned int v30 = v28[4];
              if (!v30) {
                goto LABEL_26;
              }
            }
            else if (v29 < 5 || (unsigned int v30 = v28[2]) == 0)
            {
LABEL_26:
              int v31 = 0;
              goto LABEL_39;
            }
LABEL_37:
            int v31 = *(unsigned __int16 *)((char *)v27 + v30);
            goto LABEL_39;
          }
          long long v21 = (unsigned __int16 *)((char *)*v16 - **v16);
          unsigned int v22 = *v21;
          if (*(unsigned char *)(*a3 + 38))
          {
            if (v22 >= 0x49)
            {
              unsigned int v23 = v21[36];
              if (v23) {
                goto LABEL_29;
              }
            }
          }
          else if (v22 >= 0x4B)
          {
            unsigned int v23 = v21[37];
            if (v23)
            {
LABEL_29:
              __int16 v24 = *(_WORD *)((char *)*v16 + v23);
              goto LABEL_31;
            }
          }
          __int16 v24 = -1;
LABEL_31:
          int v32 = BYTE6(v12[5 * v13 + 4]);
          long long v27 = *v9;
          long long v33 = (unsigned __int16 *)((char *)*v9 - **v9);
          unsigned int v34 = *v33;
          if (v32)
          {
            if (v34 >= 0x4B)
            {
              unsigned int v30 = v33[37];
              if (v30) {
                goto LABEL_37;
              }
            }
          }
          else if (v34 >= 0x49)
          {
            unsigned int v30 = v33[36];
            if (v30) {
              goto LABEL_37;
            }
          }
          int v31 = 0xFFFF;
LABEL_39:
          unsigned __int16 v35 = v24 + 18000;
          unsigned __int16 v36 = v24 - 18000;
          if ((unsigned __int16)(v35 >> 5) < 0x465u) {
            unsigned __int16 v36 = v35;
          }
          int v37 = v31 - v36;
          if (v37 > 18000) {
            v37 -= 36000;
          }
          if (v37 < -17999) {
            v37 += 36000;
          }
          if (!*(unsigned char *)(a3[1] + 904))
          {
            int v46 = *v16;
            int v47 = (unsigned __int16 *)((char *)v46 - *v46);
            unsigned int v48 = *v47;
            if (*(unsigned char *)(*a3 + 38))
            {
              if (v48 < 0x49) {
                goto LABEL_71;
              }
              unsigned int v41 = v47[36];
              if (!v47[36]) {
                goto LABEL_71;
              }
LABEL_67:
              LOWORD(v41) = *(_WORD *)((char *)v46 + v41);
              uint64_t v42 = v9[5];
              unsigned int v50 = (unsigned __int16 *)((char *)v42 - *v42);
              unsigned int v51 = *v50;
              if (!*((unsigned char *)v9 + 78)) {
                goto LABEL_68;
              }
LABEL_72:
              if (v51 < 0x4B) {
                goto LABEL_75;
              }
              unsigned int v45 = v50[37];
              if (!v45) {
                goto LABEL_75;
              }
            }
            else
            {
              if (v48 >= 0x4B)
              {
                unsigned int v41 = v47[37];
                if (v47[37]) {
                  goto LABEL_67;
                }
              }
LABEL_71:
              LOWORD(v41) = -1;
              uint64_t v42 = v9[5];
              unsigned int v50 = (unsigned __int16 *)((char *)v42 - *v42);
              unsigned int v51 = *v50;
              if (*((unsigned char *)v9 + 78)) {
                goto LABEL_72;
              }
LABEL_68:
              if (v51 < 0x49 || (unsigned int v45 = v50[36]) == 0)
              {
LABEL_75:
                int v49 = 0xFFFF;
                goto LABEL_76;
              }
            }
LABEL_74:
            int v49 = *(unsigned __int16 *)((char *)v42 + v45);
            goto LABEL_76;
          }
          uint64_t v38 = v16[1];
          uint64_t v39 = (unsigned __int16 *)((char *)v38 - *v38);
          unsigned int v40 = *v39;
          if (*(unsigned char *)(*a3 + 38))
          {
            if (v40 >= 5)
            {
              unsigned int v41 = v39[2];
              if (!v39[2]) {
                goto LABEL_49;
              }
LABEL_59:
              LOWORD(v41) = *(_WORD *)((char *)v38 + v41);
              uint64_t v42 = v9[6];
              unsigned int v43 = (unsigned __int16 *)((char *)v42 - *v42);
              unsigned int v44 = *v43;
              if (*((unsigned char *)v9 + 78)) {
                goto LABEL_50;
              }
              goto LABEL_60;
            }
            LOWORD(v41) = 0;
            uint64_t v42 = v9[6];
            unsigned int v43 = (unsigned __int16 *)((char *)v42 - *v42);
            unsigned int v44 = *v43;
            if (*((unsigned char *)v9 + 78)) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v40 >= 9)
            {
              unsigned int v41 = v39[4];
              if (!v39[4])
              {
LABEL_49:
                uint64_t v42 = v9[6];
                unsigned int v43 = (unsigned __int16 *)((char *)v42 - *v42);
                unsigned int v44 = *v43;
                if (*((unsigned char *)v9 + 78)) {
                  goto LABEL_50;
                }
                goto LABEL_60;
              }
              goto LABEL_59;
            }
            LOWORD(v41) = 0;
            uint64_t v42 = v9[6];
            unsigned int v43 = (unsigned __int16 *)((char *)v42 - *v42);
            unsigned int v44 = *v43;
            if (*((unsigned char *)v9 + 78))
            {
LABEL_50:
              if (v44 >= 9)
              {
                unsigned int v45 = v43[4];
                if (v45) {
                  goto LABEL_74;
                }
              }
              goto LABEL_62;
            }
          }
LABEL_60:
          if (v44 >= 5)
          {
            unsigned int v45 = v43[2];
            if (v45) {
              goto LABEL_74;
            }
          }
LABEL_62:
          int v49 = 0;
LABEL_76:
          unsigned __int16 v52 = v41 + 18000;
          unsigned __int16 v53 = v41 - 18000;
          if ((unsigned __int16)(v52 >> 5) < 0x465u) {
            unsigned __int16 v53 = v52;
          }
          int v54 = v49 - v53;
          if (v54 > 18000) {
            v54 -= 36000;
          }
          if (v54 < -17999) {
            v54 += 36000;
          }
          if (fabs((double)v37 / 100.0) < fabs((double)v54 / 100.0))
          {
            v9 += 5;
            uint64_t v8 = v15;
          }
LABEL_5:
          long long v10 = *(_OWORD *)v9;
          long long v11 = *((_OWORD *)v9 + 1);
          v12[4] = v9[4];
          *(_OWORD *)uint64_t v12 = v10;
          *((_OWORD *)v12 + 1) = v11;
        }
        while (v8 <= (uint64_t)((unint64_t)(v6 - 2) >> 1));
        v4 -= 5;
        if (v9 == v4)
        {
          v9[4] = v59;
          *(_OWORD *)uint64_t v9 = v57;
          *((_OWORD *)v9 + 1) = v58;
          BOOL v7 = v6-- <= 2;
          if (v7) {
            return;
          }
          continue;
        }
        break;
      }
      long long v55 = *(_OWORD *)v4;
      long long v56 = *((_OWORD *)v4 + 1);
      v9[4] = v4[4];
      *(_OWORD *)uint64_t v9 = v55;
      *((_OWORD *)v9 + 1) = v56;
      *(_OWORD *)uint64_t v4 = v57;
      *((_OWORD *)v4 + 1) = v58;
      v4[4] = v59;
      sub_6E3E90(a1, (uint64_t)(v9 + 5), (uint64_t)a3, 0xCCCCCCCCCCCCCCCDLL * (((uint64_t)v9 - a1 + 40) >> 3));
      BOOL v7 = v6-- <= 2;
    }
    while (!v7);
  }
}

void sub_6E3E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 >= 2)
  {
    uint64_t v26 = v7;
    uint64_t v27 = v6;
    uint64_t v28 = v4;
    uint64_t v29 = v5;
    unint64_t v10 = (unint64_t)(a4 - 2) >> 1;
    long long v11 = (int **)(a1 + 40 * v10);
    uint64_t v12 = (long long *)(a2 - 40);
    uint64_t v13 = *(void *)(a3 + 8);
    double v14 = sub_6D82EC(v13, *(int ***)a3, v11);
    if (fabs(v14) < fabs(sub_6D82EC(v13, *(int ***)a3, (int **)v12)))
    {
      long long v15 = v12[1];
      long long v23 = *v12;
      long long v24 = v15;
      uint64_t v25 = *((void *)v12 + 4);
      do
      {
        int64_t v16 = (long long *)v11;
        long long v17 = *(_OWORD *)v11;
        long long v18 = *((_OWORD *)v11 + 1);
        *((void *)v12 + 4) = v11[4];
        *uint64_t v12 = v17;
        v12[1] = v18;
        if (!v10) {
          break;
        }
        unint64_t v10 = (v10 - 1) >> 1;
        long long v11 = (int **)(a1 + 40 * v10);
        uint64_t v19 = *(void *)(a3 + 8);
        double v20 = sub_6D82EC(v19, *(int ***)a3, v11);
        double v21 = sub_6D82EC(v19, *(int ***)a3, (int **)&v23);
        uint64_t v12 = v16;
      }
      while (fabs(v20) < fabs(v21));
      long long v22 = v24;
      *int64_t v16 = v23;
      v16[1] = v22;
      *((void *)v16 + 4) = v25;
    }
  }
}

BOOL sub_6E3FAC(uint64_t *a1, int **a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (int **)a1[1];
  uint64_t v5 = *a2;
  uint64_t v6 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v7 = *v6;
  if (*((unsigned char *)a2 + 38))
  {
    if (v7 >= 0x47)
    {
      unsigned int v8 = v6[35];
      if (v6[35])
      {
        int v9 = 2;
LABEL_8:
        BOOL v10 = (*(int *)((char *)v5 + v8) & v9) != 0;
        goto LABEL_10;
      }
    }
  }
  else if (v7 >= 0x47)
  {
    unsigned int v8 = v6[35];
    if (v6[35])
    {
      int v9 = 1;
      goto LABEL_8;
    }
  }
  BOOL v10 = 0;
LABEL_10:
  long long v11 = *v4;
  uint64_t v12 = (unsigned __int16 *)((char *)*v4 - **v4);
  unsigned int v13 = *v12;
  if (!*((unsigned char *)v4 + 38))
  {
    if (v13 >= 0x47 && v12[35])
    {
      if ((v10 ^ ((*(int *)((char *)v11 + v12[35])))) {
        return 0;
      }
      goto LABEL_21;
    }
LABEL_19:
    if (v10) {
      return 0;
    }
    if (v13 < 0x2F) {
      goto LABEL_30;
    }
    goto LABEL_21;
  }
  if (v13 < 0x47 || !v12[35]) {
    goto LABEL_19;
  }
  if ((v10 ^ ((*(int *)((char *)v11 + v12[35]) & 2) != 0))) {
    return 0;
  }
LABEL_21:
  if (v12[23])
  {
    unsigned int v14 = *((unsigned __int8 *)v11 + v12[23]);
    BOOL v15 = v14 > 0x2B || ((1 << v14) & 0x80000001040) == 0;
    if (v15 || (uint64_t v16 = v12[5]) != 0 && (*((unsigned char *)v11 + v16 + 2) & 0x20) != 0)
    {
      BOOL v17 = v14 == 44;
      if (v7 < 0x2F) {
        goto LABEL_42;
      }
    }
    else
    {
      BOOL v17 = 1;
      if (v7 < 0x2F) {
        goto LABEL_42;
      }
    }
    goto LABEL_33;
  }
LABEL_30:
  BOOL v17 = 0;
  if (v7 < 0x2F)
  {
LABEL_42:
    if (!v17) {
      goto LABEL_43;
    }
    return 0;
  }
LABEL_33:
  if (!v6[23]) {
    goto LABEL_42;
  }
  unsigned int v18 = *((unsigned __int8 *)v5 + v6[23]);
  if (v18 <= 0x2B && ((1 << v18) & 0x80000001040) != 0)
  {
    uint64_t v20 = v6[5];
    if (!v20 || (*((unsigned char *)v5 + v20 + 2) & 0x20) == 0)
    {
      if (v17) {
        goto LABEL_43;
      }
      return 0;
    }
  }
  if ((v17 ^ (v18 == 44))) {
    return 0;
  }
LABEL_43:
  if (fabs(sub_6D82EC(*a1, v4, a2)) >= *(double *)(v3 + 928)) {
    return 0;
  }
  if (sub_2E3ED8(*(void *)(v3 + 880), (uint64_t)v4, (uint64_t)a2) < *(double *)(v3 + 1800)) {
    return 1;
  }
  uint64_t v22 = *(void *)(v3 + 880);
  uint64_t v29 = a2[4];
  long long v23 = *((_OWORD *)a2 + 1);
  v28[0] = *(_OWORD *)a2;
  v28[1] = v23;
  BYTE6(v29) ^= 1u;
  long long v24 = *(_OWORD *)v4;
  long long v25 = *((_OWORD *)v4 + 1);
  uint64_t v27 = v4[4];
  v26[0] = v24;
  v26[1] = v25;
  BYTE6(v27) ^= 1u;
  return sub_2E3ED8(v22, (uint64_t)v28, (uint64_t)v26) < *(double *)(v3 + 1800);
}

int **sub_6E4238(int **result, int **a2, uint64_t a3, int **a4)
{
  if (result != a2)
  {
    uint64_t v4 = (char *)*a4;
    uint64_t v5 = (unsigned __int16 *)((char *)*a4 - **a4);
    unsigned int v6 = *v5;
    if (*((unsigned char *)a4 + 38))
    {
      if (v6 <= 0x46)
      {
        while (1)
        {
          BOOL v15 = *result;
          uint64_t v16 = (unsigned __int16 *)((char *)*result - **result);
          unsigned int v17 = *v16;
          if (*((unsigned char *)result + 38))
          {
            if (v17 < 0x47) {
              return result;
            }
            unsigned int v18 = v16[35];
            if (!v18 || (*(int *)((char *)v15 + v18) & 2) == 0) {
              return result;
            }
          }
          else
          {
            if (v17 < 0x47) {
              return result;
            }
            unsigned int v19 = v16[35];
            if (!v19 || (*(int *)((char *)v15 + v19) & 1) == 0) {
              return result;
            }
          }
          result += 5;
          if (result == a2) {
            return a2;
          }
        }
      }
      uint64_t v7 = v5[35];
      if (!v7)
      {
        while (1)
        {
          long long v25 = *result;
          uint64_t v26 = (unsigned __int16 *)((char *)*result - **result);
          unsigned int v27 = *v26;
          if (*((unsigned char *)result + 38))
          {
            if (v27 < 0x47) {
              return result;
            }
            unsigned int v28 = v26[35];
            if (!v28 || (*(int *)((char *)v25 + v28) & 2) == 0) {
              return result;
            }
          }
          else
          {
            if (v27 < 0x47) {
              return result;
            }
            unsigned int v29 = v26[35];
            if (!v29 || (*(int *)((char *)v25 + v29) & 1) == 0) {
              return result;
            }
          }
          result += 5;
          if (result == a2) {
            return a2;
          }
        }
      }
      int v8 = *(_DWORD *)&v4[v7];
      while (1)
      {
        uint64_t v20 = *result;
        double v21 = (unsigned __int16 *)((char *)*result - **result);
        unsigned int v22 = *v21;
        if (*((unsigned char *)result + 38))
        {
          if (v22 < 0x47) {
            goto LABEL_31;
          }
          unsigned int v23 = v21[35];
          if (!v23) {
            goto LABEL_31;
          }
          if (((*(int *)((char *)v20 + v23) & 2) != 0) == (v8 & 2) >> 1) {
            return result;
          }
        }
        else
        {
          if (v22 < 0x47 || (unsigned int v24 = v21[35]) == 0)
          {
LABEL_31:
            if ((v8 & 2) == 0) {
              return result;
            }
            goto LABEL_32;
          }
          if ((*(int *)((char *)v20 + v24)) == (v8 & 2) >> 1) {
            return result;
          }
        }
LABEL_32:
        result += 5;
        if (result == a2) {
          return a2;
        }
      }
    }
    while (1)
    {
      int v9 = *result;
      BOOL v10 = (unsigned __int16 *)((char *)*result - **result);
      unsigned int v11 = *v10;
      if (*((unsigned char *)result + 38))
      {
        if (v11 < 0x47) {
          goto LABEL_17;
        }
        unsigned int v12 = v10[35];
        if (!v12) {
          goto LABEL_17;
        }
        BOOL v13 = (*(int *)((char *)v9 + v12) & 2) != 0;
        if (v6 < 0x47) {
          goto LABEL_6;
        }
      }
      else
      {
        if (v11 < 0x47 || (unsigned int v14 = v10[35]) == 0)
        {
LABEL_17:
          BOOL v13 = 0;
          if (v6 < 0x47) {
            goto LABEL_6;
          }
          goto LABEL_18;
        }
        BOOL v13 = (*(int *)((char *)v9 + v14) & 1) != 0;
        if (v6 < 0x47) {
          goto LABEL_6;
        }
      }
LABEL_18:
      if (v5[35])
      {
        if (v13 == (v4[v5[35]] & 1)) {
          return result;
        }
        goto LABEL_7;
      }
LABEL_6:
      if (!v13) {
        return result;
      }
LABEL_7:
      result += 5;
      if (result == a2) {
        return a2;
      }
    }
  }
  return result;
}

char *sub_6E4470(char **a1, void *a2, long long *a3)
{
  uint64_t v7 = a1[1];
  unint64_t v6 = (unint64_t)a1[2];
  if ((unint64_t)v7 >= v6)
  {
    unsigned int v12 = *a1;
    uint64_t v13 = (v7 - *a1) >> 6;
    unint64_t v14 = v13 + 1;
    if ((unint64_t)(v13 + 1) >> 58) {
      sub_2E00();
    }
    uint64_t v15 = v6 - (void)v12;
    if (v15 >> 5 > v14) {
      unint64_t v14 = v15 >> 5;
    }
    if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFC0) {
      unint64_t v16 = 0x3FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v16 = v14;
    }
    if (v16)
    {
      if (v16 >> 58) {
        sub_188D718();
      }
      unsigned int v17 = (char *)operator new(v16 << 6);
    }
    else
    {
      unsigned int v17 = 0;
    }
    unsigned int v18 = &v17[64 * v13];
    *(void *)unsigned int v18 = *a2;
    long long v19 = a3[1];
    *(_OWORD *)(v18 + 8) = *a3;
    *(_OWORD *)(v18 + 24) = v19;
    *(_OWORD *)(v18 + 40) = a3[2];
    *((void *)v18 + 7) = *((void *)a3 + 6);
    unsigned int v11 = v18 + 64;
    if (v7 != v12)
    {
      do
      {
        long long v20 = *((_OWORD *)v7 - 4);
        long long v21 = *((_OWORD *)v7 - 3);
        long long v22 = *((_OWORD *)v7 - 1);
        *((_OWORD *)v18 - 2) = *((_OWORD *)v7 - 2);
        *((_OWORD *)v18 - 1) = v22;
        *((_OWORD *)v18 - 4) = v20;
        *((_OWORD *)v18 - 3) = v21;
        v18 -= 64;
        v7 -= 64;
      }
      while (v7 != v12);
      uint64_t v7 = *a1;
    }
    *a1 = v18;
    a1[1] = v11;
    a1[2] = &v17[64 * v16];
    if (v7) {
      operator delete(v7);
    }
  }
  else
  {
    *(void *)uint64_t v7 = *a2;
    long long v8 = *a3;
    long long v9 = a3[1];
    long long v10 = a3[2];
    *((void *)v7 + 7) = *((void *)a3 + 6);
    *(_OWORD *)(v7 + 40) = v10;
    *(_OWORD *)(v7 + 24) = v9;
    *(_OWORD *)(v7 + 8) = v8;
    unsigned int v11 = v7 + 64;
  }
  a1[1] = v11;
  return v11 - 64;
}

unint64_t sub_6E45C0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = 0;
  unint64_t v6 = (uint64_t *)(a1 + 48 * (((BYTE1(a2) ^ BYTE2(a2)) ^ BYTE3(a2)) & 0xF));
  unint64_t v7 = a2 >> 7;
  uint64_t v8 = v6[3];
  while (1)
  {
    unint64_t v9 = v7 & v8;
    uint64_t v10 = *(void *)(*v6 + v9);
    unint64_t v11 = ((v10 ^ (0x101010101010101 * (a2 & 0x7F))) - 0x101010101010101) & ~(v10 ^ (0x101010101010101
                                                                                       * (a2 & 0x7F))) & 0x8080808080808080;
    if (v11) {
      break;
    }
LABEL_7:
    if ((v10 & (~v10 << 6) & 0x8080808080808080) != 0)
    {
      unint64_t result = sub_6E46E0(v6, a2);
      *(void *)a4 = v6;
      *(void *)(a4 + 8) = result;
      *(unsigned char *)(a4 + 16) = 1;
      return result;
    }
    v5 += 8;
    unint64_t v7 = v5 + v9;
  }
  unint64_t v12 = *a3;
  while (1)
  {
    unint64_t result = (v9 + (__clz(__rbit64(v11)) >> 3)) & v8;
    uint64_t v14 = v6[1] + 12 * result;
    if (__PAIR64__(*(unsigned __int16 *)(v14 + 4), *(_DWORD *)v14) == __PAIR64__(WORD2(v12), v12)
      && (HIWORD(v12) & 1) != (*(unsigned char *)(v14 + 6) == 0))
    {
      break;
    }
    v11 &= v11 - 1;
    if (!v11) {
      goto LABEL_7;
    }
  }
  *(void *)a4 = v6;
  *(void *)(a4 + 8) = result;
  *(unsigned char *)(a4 + 16) = 0;
  return result;
}

unint64_t sub_6E46E0(uint64_t *a1, unint64_t a2)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = *a1;
  unint64_t v6 = v4 & (a2 >> 7);
  unint64_t v7 = *(void *)(*a1 + v6) & (~*(void *)(*a1 + v6) << 7) & 0x8080808080808080;
  if (!v7)
  {
    uint64_t v8 = 8;
    do
    {
      unint64_t v6 = (v6 + v8) & v4;
      v8 += 8;
      unint64_t v7 = *(void *)(v5 + v6) & (~*(void *)(v5 + v6) << 7) & 0x8080808080808080;
    }
    while (!v7);
  }
  unint64_t result = (v6 + (__clz(__rbit64(v7)) >> 3)) & v4;
  uint64_t v10 = a1[5];
  if (!v10)
  {
    if (*(unsigned __int8 *)(v5 + result) == 254)
    {
      uint64_t v10 = 0;
    }
    else
    {
      sub_6E47D8((uint64_t)a1);
      unint64_t result = sub_2D7FC4(a1, a2);
      uint64_t v5 = *a1;
      uint64_t v10 = a1[5];
    }
  }
  ++a1[2];
  a1[5] = v10 - (*(unsigned __int8 *)(v5 + result) == 128);
  *(unsigned char *)(v5 + result) = a2 & 0x7F;
  *(unsigned char *)((a1[3] & (result - 8)) + (a1[3] & 7) + *a1 + 1) = a2 & 0x7F;
  return result;
}

void sub_6E47D8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 24);
  if (!v1)
  {
    uint64_t v2 = (unsigned char *)(&def_332C + 1);
    goto LABEL_4;
  }
  if (*(void *)(a1 + 16) > (v1 - (v1 >> 3)) >> 1)
  {
    uint64_t v2 = (char *)((2 * v1) | 1);
LABEL_4:
    sub_6E4808((char **)a1, v2);
    return;
  }
  sub_6E49F0(a1);
}

void sub_6E4808(char **a1, char *a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  unint64_t v6 = a1[3];
  unint64_t v7 = ((unint64_t)a2 & 0xFFFFFFFFFFFFFFFCLL) + 12;
  uint64_t v8 = (char *)operator new(v7 + 12 * (void)a2);
  *a1 = v8;
  a1[1] = &v8[v7];
  memset(v8, 128, (size_t)(a2 + 8));
  a2[(void)v8] = -1;
  uint64_t v9 = (uint64_t)&a2[-((unint64_t)a2 >> 3)];
  if (a2 == (unsigned char *)dword_4 + 3) {
    uint64_t v9 = 6;
  }
  a1[5] = (char *)(v9 - (void)a1[2]);
  a1[3] = a2;
  if (v6)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if ((i[(void)v4] & 0x80000000) == 0)
      {
        uint64_t v15 = &v5[12 * (void)i];
        BOOL v17 = (*(void *)v15 & 0xFF000000000000) == 0;
        unint64_t v16 = (*(void *)v15 >> 16) & 0xFFFF0000 | (*(void *)v15 << 32);
        unint64_t v18 = ((0x2127599BF4325C37 * ((v16 | v17) ^ (v16 >> 23))) ^ ~((0x2127599BF4325C37
                                                                       * ((v16 | v17) ^ (v16 >> 23))) >> 47))
            + (((0x2127599BF4325C37 * ((v16 | v17) ^ (v16 >> 23))) ^ ((0x2127599BF4325C37
                                                                       * ((v16 | v17) ^ (v16 >> 23))) >> 47)) << 21);
        unint64_t v19 = 21 * ((265 * (v18 ^ (v18 >> 24))) ^ ((265 * (v18 ^ (v18 >> 24))) >> 14));
        unint64_t v20 = 2147483649u * (v19 ^ (v19 >> 28));
        long long v21 = a1[3];
        long long v22 = *a1;
        unint64_t v23 = (unint64_t)v21 & (v20 >> 7);
        unint64_t v24 = *(void *)&(*a1)[v23] & (~*(void *)&(*a1)[v23] << 7) & 0x8080808080808080;
        if (!v24)
        {
          uint64_t v25 = 8;
          do
          {
            unint64_t v23 = (v23 + v25) & (unint64_t)v21;
            v25 += 8;
            unint64_t v24 = *(void *)&v22[v23] & (~*(void *)&v22[v23] << 7) & 0x8080808080808080;
          }
          while (!v24);
        }
        unint64_t v11 = (v23 + (__clz(__rbit64(v24)) >> 3)) & (unint64_t)v21;
        char v12 = v20 & 0x7F;
        v22[v11] = v12;
        (*a1)[((unint64_t)a1[3] & 7) + 1 + ((v11 - 8) & (unint64_t)a1[3])] = v12;
        uint64_t v13 = (uint64_t)&a1[1][12 * v11];
        unint64_t v14 = *(void *)v15;
        *(_DWORD *)(v13 + 8) = *((_DWORD *)v15 + 2);
        *(void *)uint64_t v13 = v14;
      }
    }
    operator delete(v4);
  }
}

uint64_t sub_6E49F0(uint64_t result)
{
  unint64_t v1 = *(int8x16_t **)result;
  uint64_t v2 = *(void *)(result + 24);
  uint64_t v3 = *(void *)result + v2;
  if (v3 + 1 != *(void *)result)
  {
    unint64_t v4 = v2 - 7;
    uint64_t v5 = *(unint64_t **)result;
    if (v4 < 0x18) {
      goto LABEL_28;
    }
    uint64_t v6 = (v4 >> 3) + 1;
    uint64_t v5 = (unint64_t *)v1 + (v6 & 0x3FFFFFFFFFFFFFFCLL);
    unint64_t v7 = v1 + 1;
    v8.i64[0] = 0x8080808080808080;
    v8.i64[1] = 0x8080808080808080;
    v9.i64[0] = 0xFEFEFEFEFEFEFEFELL;
    v9.i64[1] = 0xFEFEFEFEFEFEFEFELL;
    uint64_t v10 = v6 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      int8x16_t v11 = vandq_s8(v7[-1], v8);
      int8x16_t v12 = vandq_s8(*v7, v8);
      v7[-1] = vandq_s8((int8x16_t)vsraq_n_u64((uint64x2_t)vmvnq_s8(v11), (uint64x2_t)v11, 7uLL), v9);
      *unint64_t v7 = vandq_s8((int8x16_t)vsraq_n_u64((uint64x2_t)vmvnq_s8(v12), (uint64x2_t)v12, 7uLL), v9);
      v7 += 2;
      v10 -= 4;
    }
    while (v10);
    if (v6 != (v6 & 0x3FFFFFFFFFFFFFFCLL))
    {
LABEL_28:
      do
      {
        *uint64_t v5 = (~(*v5 & 0x8080808080808080) + ((*v5 & 0x8080808080808080) >> 7)) & 0xFEFEFEFEFEFEFEFELL;
        ++v5;
      }
      while (v5 != (unint64_t *)(v3 + 1));
    }
  }
  *(void *)(v3 + 1) = v1->i64[0];
  *(unsigned char *)uint64_t v3 = -1;
  uint64_t v13 = *(void *)(result + 24);
  if (v13)
  {
    for (unint64_t i = 0; i != v13; ++i)
    {
      BOOL v17 = *(int8x16_t **)result;
      if (*(unsigned __int8 *)(*(void *)result + i) == 254)
      {
        unint64_t v18 = *(void *)(*(void *)(result + 8) + 12 * i);
        unint64_t v19 = (v18 >> 16) & 0xFFFF0000 | (v18 << 32);
        BOOL v20 = (v18 & 0xFF000000000000) == 0;
        unint64_t v21 = ((0x2127599BF4325C37 * ((v19 | v20) ^ (v19 >> 23))) ^ ~((0x2127599BF4325C37
                                                                       * ((v19 | v20) ^ (v19 >> 23))) >> 47))
            + (((0x2127599BF4325C37 * ((v19 | v20) ^ (v19 >> 23))) ^ ((0x2127599BF4325C37
                                                                       * ((v19 | v20) ^ (v19 >> 23))) >> 47)) << 21);
        unint64_t v22 = 21 * ((265 * (v21 ^ (v21 >> 24))) ^ ((265 * (v21 ^ (v21 >> 24))) >> 14));
        unint64_t v23 = 2147483649u * (v22 ^ (v22 >> 28));
        unint64_t v24 = v13 & (v23 >> 7);
        unint64_t v25 = *(uint64_t *)((unsigned char *)v17->i64 + v24) & (~*(uint64_t *)((char *)v17->i64 + v24) << 7) & 0x8080808080808080;
        if (v25)
        {
          unint64_t v15 = v13 & (v23 >> 7);
        }
        else
        {
          uint64_t v26 = 8;
          unint64_t v15 = v13 & (v23 >> 7);
          do
          {
            unint64_t v15 = (v15 + v26) & v13;
            v26 += 8;
            unint64_t v25 = *(uint64_t *)((unsigned char *)v17->i64 + v15) & (~*(uint64_t *)((char *)v17->i64 + v15) << 7) & 0x8080808080808080;
          }
          while (!v25);
        }
        unint64_t v16 = (v15 + (__clz(__rbit64(v25)) >> 3)) & v13;
        if ((((v16 - v24) ^ (i - v24)) & v13) > 7)
        {
          int v27 = v17->u8[v16];
          v17->i8[v16] = v23 & 0x7F;
          *(unsigned char *)((*(void *)(result + 24) & (v16 - 8)) + (*(void *)(result + 24) & 7) + *(void *)result + 1) = v23 & 0x7F;
          uint64_t v28 = *(void *)(result + 8);
          if (v27 == 128)
          {
            uint64_t v29 = v28 + 12 * v16;
            unsigned int v30 = (uint64_t *)(v28 + 12 * i);
            uint64_t v31 = *v30;
            *(_DWORD *)(v29 + 8) = *((_DWORD *)v30 + 2);
            *(void *)uint64_t v29 = v31;
            *(unsigned char *)(*(void *)result + i) = 0x80;
            *(unsigned char *)((*(void *)(result + 24) & (i - 8)) + (*(void *)(result + 24) & 7) + *(void *)result + 1) = 0x80;
          }
          else
          {
            int v32 = (uint64_t *)(v28 + 12 * i);
            uint64_t v33 = *v32;
            int v34 = *((_DWORD *)v32 + 2);
            uint64_t v35 = 12 * v16;
            unsigned __int16 v36 = (uint64_t *)(v28 + v35);
            int v37 = *((_DWORD *)v36 + 2);
            uint64_t *v32 = *v36;
            *((_DWORD *)v32 + 2) = v37;
            uint64_t v38 = *(void *)(result + 8) + v35;
            *(void *)uint64_t v38 = v33;
            *(_DWORD *)(v38 + 8) = v34;
            --i;
          }
        }
        else
        {
          v17->i8[i] = v23 & 0x7F;
          *(unsigned char *)((*(void *)(result + 24) & (i - 8)) + (*(void *)(result + 24) & 7) + *(void *)result + 1) = v23 & 0x7F;
        }
      }
      uint64_t v13 = *(void *)(result + 24);
    }
    uint64_t v39 = i - (i >> 3);
    BOOL v40 = i == 7;
    uint64_t v41 = 6;
    if (!v40) {
      uint64_t v41 = v39;
    }
  }
  else
  {
    uint64_t v41 = 0;
  }
  *(void *)(result + 40) = v41 - *(void *)(result + 16);
  return result;
}

uint64_t sub_6E4D0C(uint64_t a1)
{
  *(void *)a1 = &unk_20E1710;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = &unk_20E1710;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = &unk_20E1710;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = &unk_20E1710;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = &unk_20E1710;
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 240) = &unk_20E1710;
  *(void *)(a1 + 256) = 0;
  *(void *)(a1 + 264) = 0;
  *(void *)(a1 + 248) = 0;
  *(void *)(a1 + 280) = 0;
  *(void *)(a1 + 288) = &unk_20E1710;
  *(void *)(a1 + 304) = 0;
  *(void *)(a1 + 312) = 0;
  *(void *)(a1 + 296) = 0;
  *(void *)(a1 + 328) = 0;
  *(void *)(a1 + 336) = &unk_20E1710;
  *(void *)(a1 + 344) = 0;
  *(void *)(a1 + 352) = 0;
  *(void *)(a1 + 360) = 0;
  *(void *)(a1 + 376) = 0;
  *(void *)(a1 + 384) = &unk_20E1710;
  *(void *)(a1 + 392) = 0;
  *(void *)(a1 + 400) = 0;
  *(void *)(a1 + 408) = 0;
  *(void *)(a1 + 424) = 0;
  *(void *)(a1 + 432) = &unk_20E1710;
  *(void *)(a1 + 440) = 0;
  *(void *)(a1 + 448) = 0;
  *(void *)(a1 + 456) = 0;
  *(void *)(a1 + 472) = 0;
  *(void *)(a1 + 480) = &unk_20E1710;
  *(void *)(a1 + 520) = 0;
  *(void *)(a1 + 488) = 0;
  *(void *)(a1 + 496) = 0;
  *(void *)(a1 + 504) = 0;
  *(void *)(a1 + 528) = &unk_20E1710;
  *(void *)(a1 + 568) = 0;
  *(void *)(a1 + 544) = 0;
  *(void *)(a1 + 536) = 0;
  *(void *)(a1 + 552) = 0;
  *(void *)(a1 + 576) = &unk_20E1710;
  *(void *)(a1 + 616) = 0;
  *(void *)(a1 + 592) = 0;
  *(void *)(a1 + 584) = 0;
  *(void *)(a1 + 600) = 0;
  *(void *)(a1 + 624) = &unk_20E1710;
  *(void *)(a1 + 664) = 0;
  *(void *)(a1 + 640) = 0;
  *(void *)(a1 + 632) = 0;
  *(void *)(a1 + 648) = 0;
  *(void *)(a1 + 672) = &unk_20E1710;
  *(void *)(a1 + 712) = 0;
  *(void *)(a1 + 688) = 0;
  *(void *)(a1 + 680) = 0;
  *(void *)(a1 + 696) = 0;
  *(void *)(a1 + 720) = &unk_20E1710;
  *(void *)(a1 + 736) = 0;
  *(void *)(a1 + 728) = 0;
  *(void *)(a1 + 744) = 0;
  *(_DWORD *)(a1 + 872) = 0;
  *(_OWORD *)(a1 + 840) = 0u;
  *(_OWORD *)(a1 + 856) = 0u;
  *(_OWORD *)(a1 + 824) = 0u;
  *(_OWORD *)(a1 + 804) = 0u;
  *(_OWORD *)(a1 + 792) = 0u;
  *(_OWORD *)(a1 + 776) = 0u;
  *(_OWORD *)(a1 + 760) = 0u;
  uint64_t v2 = (char *)operator new(8uLL);
  *(void *)(a1 + 848) = v2;
  *(void *)(a1 + 856) = v2;
  *(void *)(a1 + 864) = v2 + 8;
  uint64_t v3 = (char *)operator new(0x7F0uLL);
  *(void *)(a1 + 824) = v3;
  *(void *)(a1 + 832) = v3;
  *(void *)(a1 + 840) = v3 + 2032;
  return a1;
}

void sub_6E4E78(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;
  v1[107] = v3;
  operator delete(v3);
  uint64_t v5 = (void *)v1[103];
  if (v5)
  {
    v1[104] = v5;
    operator delete(v5);
    uint64_t v6 = (void *)v1[99];
    if (!v6)
    {
LABEL_3:
      unint64_t v7 = (void *)v1[96];
      if (!v7) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v6 = (void *)v1[99];
    if (!v6) {
      goto LABEL_3;
    }
  }
  v1[100] = v6;
  operator delete(v6);
  unint64_t v7 = (void *)v1[96];
  if (!v7)
  {
LABEL_4:
    sub_328138((uint64_t)v1);
    _Unwind_Resume(a1);
  }
LABEL_7:
  v1[97] = v7;
  operator delete(v7);
  sub_328138((uint64_t)v1);
  _Unwind_Resume(a1);
}

void sub_6E4EFC(uint64_t a1, int **a2, uint64_t a3, uint64_t a4, char a5)
{
BOOL sub_6E53C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (a2 - a1) >> 3;
  BOOL result = 1;
  switch(0xCCCCCCCCCCCCCCCDLL * v6)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      uint64_t v8 = a2 - 40;
      uint64_t v9 = *(void *)(a3 + 8);
      double v10 = sub_6D82EC(v9, *(int ***)a3, (int **)(a2 - 40));
      if (fabs(v10) >= fabs(sub_6D82EC(v9, *(int ***)a3, (int **)a1))) {
        return 1;
      }
      long long v11 = *(_OWORD *)a1;
      long long v12 = *(_OWORD *)(a1 + 16);
      uint64_t v13 = *(void *)(a1 + 32);
      uint64_t v14 = *(void *)(v8 + 32);
      long long v15 = *(_OWORD *)(v8 + 16);
      *(_OWORD *)a1 = *(_OWORD *)v8;
      *(_OWORD *)(a1 + 16) = v15;
      *(void *)(a1 + 32) = v14;
      *(void *)(v8 + 32) = v13;
      BOOL result = 1;
      *(_OWORD *)uint64_t v8 = v11;
      *(_OWORD *)(v8 + 16) = v12;
      return result;
    case 3uLL:
      sub_6E20C4((int **)a1, (int **)(a1 + 40), (int **)(a2 - 40), a3);
      return 1;
    case 4uLL:
      sub_6E34DC((int **)a1, (int **)(a1 + 40), (int **)(a1 + 80), (int **)(a2 - 40), a3);
      return 1;
    case 5uLL:
      sub_6E3630((int **)a1, (int **)(a1 + 40), (int **)(a1 + 80), (int **)(a1 + 120), (int **)(a2 - 40), a3);
      return 1;
    default:
      unint64_t v16 = (int **)(a1 + 80);
      sub_6E20C4((int **)a1, (int **)(a1 + 40), (int **)(a1 + 80), a3);
      uint64_t v17 = a1 + 120;
      if (a1 + 120 == a2) {
        return 1;
      }
      uint64_t v18 = 0;
      int v19 = 0;
      break;
  }
  while (1)
  {
    uint64_t v22 = *(void *)(a3 + 8);
    double v23 = sub_6D82EC(v22, *(int ***)a3, (int **)v17);
    if (fabs(v23) < fabs(sub_6D82EC(v22, *(int ***)a3, v16)))
    {
      long long v24 = *(_OWORD *)(v17 + 16);
      long long v31 = *(_OWORD *)v17;
      long long v32 = v24;
      uint64_t v33 = *(void *)(v17 + 32);
      uint64_t v25 = v18;
      do
      {
        uint64_t v26 = a1 + v25;
        long long v27 = *(_OWORD *)(a1 + v25 + 96);
        *(_OWORD *)(v26 + 120) = *(_OWORD *)(a1 + v25 + 80);
        *(_OWORD *)(v26 + 136) = v27;
        *(void *)(v26 + 152) = *(void *)(a1 + v25 + 112);
        if (v25 == -80)
        {
          uint64_t v20 = a1;
          goto LABEL_7;
        }
        char v28 = (int **)(v26 + 40);
        uint64_t v29 = *(void *)(a3 + 8);
        double v30 = sub_6D82EC(v29, *(int ***)a3, (int **)&v31);
        v25 -= 40;
      }
      while (fabs(v30) < fabs(sub_6D82EC(v29, *(int ***)a3, v28)));
      uint64_t v20 = a1 + v25 + 120;
LABEL_7:
      long long v21 = v32;
      *(_OWORD *)uint64_t v20 = v31;
      *(_OWORD *)(v20 + 16) = v21;
      *(void *)(v20 + 32) = v33;
      if (++v19 == 8) {
        return v17 + 40 == a2;
      }
    }
    unint64_t v16 = (int **)v17;
    v18 += 40;
    v17 += 40;
    if (v17 == a2) {
      return 1;
    }
  }
}

BOOL sub_6E564C(uint64_t *a1, int **a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = (int **)a1[1];
  char v5 = *a2;
  uint64_t v6 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v7 = *v6;
  if (*((unsigned char *)a2 + 38))
  {
    if (v7 >= 0xB)
    {
      unsigned int v8 = v6[5];
      if (v6[5])
      {
        int v9 = 2;
LABEL_8:
        BOOL v10 = (*(int *)((char *)v5 + v8) & v9) != 0;
        goto LABEL_10;
      }
    }
  }
  else if (v7 >= 0xB)
  {
    unsigned int v8 = v6[5];
    if (v6[5])
    {
      int v9 = 1;
      goto LABEL_8;
    }
  }
  BOOL v10 = 0;
LABEL_10:
  long long v11 = *v4;
  long long v12 = (unsigned __int16 *)((char *)*v4 - **v4);
  unsigned int v13 = *v12;
  if (!*((unsigned char *)v4 + 38))
  {
    if (v13 >= 0xB && v12[5])
    {
      if ((v10 ^ ((*(int *)((char *)v11 + v12[5])))) {
        return 0;
      }
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v13 < 0xB || !v12[5])
  {
LABEL_19:
    if (v10) {
      return 0;
    }
    goto LABEL_20;
  }
  if ((v10 ^ ((*(int *)((char *)v11 + v12[5]) & 2) != 0))) {
    return 0;
  }
LABEL_20:
  if (v13 >= 0x2F && v12[23])
  {
    unsigned int v14 = *((unsigned __int8 *)v11 + v12[23]);
    BOOL v15 = v14 > 0x2B || ((1 << v14) & 0x80000001040) == 0;
    if (v15 || (uint64_t v16 = v12[5]) != 0 && (*((unsigned char *)v11 + v16 + 2) & 0x20) != 0)
    {
      BOOL v17 = v14 == 44;
      if (v7 < 0x2F)
      {
LABEL_41:
        if (!v17) {
          goto LABEL_42;
        }
        return 0;
      }
    }
    else
    {
      BOOL v17 = 1;
      if (v7 < 0x2F) {
        goto LABEL_41;
      }
    }
  }
  else
  {
    BOOL v17 = 0;
    if (v7 < 0x2F) {
      goto LABEL_41;
    }
  }
  if (!v6[23]) {
    goto LABEL_41;
  }
  unsigned int v18 = *((unsigned __int8 *)v5 + v6[23]);
  if (v18 <= 0x2B && ((1 << v18) & 0x80000001040) != 0)
  {
    uint64_t v20 = v6[5];
    if (!v20 || (*((unsigned char *)v5 + v20 + 2) & 0x20) == 0)
    {
      if (v17) {
        goto LABEL_42;
      }
      return 0;
    }
  }
  if ((v17 ^ (v18 == 44))) {
    return 0;
  }
LABEL_42:
  if (fabs(sub_6D82EC(*a1, v4, a2)) >= *(double *)(v3 + 928)) {
    return 0;
  }
  if (sub_2E3ED8(*(void *)(v3 + 880), (uint64_t)v4, (uint64_t)a2) < *(double *)(v3 + 1800)) {
    return 1;
  }
  uint64_t v22 = *(void *)(v3 + 880);
  uint64_t v29 = a2[4];
  long long v23 = *((_OWORD *)a2 + 1);
  v28[0] = *(_OWORD *)a2;
  v28[1] = v23;
  BYTE6(v29) ^= 1u;
  long long v24 = *(_OWORD *)v4;
  long long v25 = *((_OWORD *)v4 + 1);
  long long v27 = v4[4];
  v26[0] = v24;
  v26[1] = v25;
  BYTE6(v27) ^= 1u;
  return sub_2E3ED8(v22, (uint64_t)v28, (uint64_t)v26) < *(double *)(v3 + 1800);
}

int **sub_6E58D4(int **result, int **a2, uint64_t a3, int **a4)
{
  if (result != a2)
  {
    unint64_t v4 = (char *)*a4;
    char v5 = (unsigned __int16 *)((char *)*a4 - **a4);
    unsigned int v6 = *v5;
    if (*((unsigned char *)a4 + 38))
    {
      if (v6 <= 0xA)
      {
        while (1)
        {
          BOOL v15 = *result;
          uint64_t v16 = (unsigned __int16 *)((char *)*result - **result);
          unsigned int v17 = *v16;
          if (*((unsigned char *)result + 38))
          {
            if (v17 < 0xB) {
              return result;
            }
            unsigned int v18 = v16[5];
            if (!v18 || (*(int *)((char *)v15 + v18) & 2) == 0) {
              return result;
            }
          }
          else
          {
            if (v17 < 0xB) {
              return result;
            }
            unsigned int v19 = v16[5];
            if (!v19 || (*(int *)((char *)v15 + v19) & 1) == 0) {
              return result;
            }
          }
          result += 5;
          if (result == a2) {
            return a2;
          }
        }
      }
      uint64_t v7 = v5[5];
      if (!v7)
      {
        while (1)
        {
          long long v25 = *result;
          uint64_t v26 = (unsigned __int16 *)((char *)*result - **result);
          unsigned int v27 = *v26;
          if (*((unsigned char *)result + 38))
          {
            if (v27 < 0xB) {
              return result;
            }
            unsigned int v28 = v26[5];
            if (!v28 || (*(int *)((char *)v25 + v28) & 2) == 0) {
              return result;
            }
          }
          else
          {
            if (v27 < 0xB) {
              return result;
            }
            unsigned int v29 = v26[5];
            if (!v29 || (*(int *)((char *)v25 + v29) & 1) == 0) {
              return result;
            }
          }
          result += 5;
          if (result == a2) {
            return a2;
          }
        }
      }
      int v8 = *(_DWORD *)&v4[v7];
      while (1)
      {
        uint64_t v20 = *result;
        long long v21 = (unsigned __int16 *)((char *)*result - **result);
        unsigned int v22 = *v21;
        if (*((unsigned char *)result + 38))
        {
          if (v22 < 0xB) {
            goto LABEL_31;
          }
          unsigned int v23 = v21[5];
          if (!v23) {
            goto LABEL_31;
          }
          if (((*(int *)((char *)v20 + v23) & 2) != 0) == (v8 & 2) >> 1) {
            return result;
          }
        }
        else
        {
          if (v22 < 0xB || (unsigned int v24 = v21[5]) == 0)
          {
LABEL_31:
            if ((v8 & 2) == 0) {
              return result;
            }
            goto LABEL_32;
          }
          if ((*(int *)((char *)v20 + v24)) == (v8 & 2) >> 1) {
            return result;
          }
        }
LABEL_32:
        result += 5;
        if (result == a2) {
          return a2;
        }
      }
    }
    while (1)
    {
      int v9 = *result;
      BOOL v10 = (unsigned __int16 *)((char *)*result - **result);
      unsigned int v11 = *v10;
      if (*((unsigned char *)result + 38))
      {
        if (v11 < 0xB) {
          goto LABEL_17;
        }
        unsigned int v12 = v10[5];
        if (!v12) {
          goto LABEL_17;
        }
        BOOL v13 = (*(int *)((char *)v9 + v12) & 2) != 0;
        if (v6 < 0xB) {
          goto LABEL_6;
        }
      }
      else
      {
        if (v11 < 0xB || (unsigned int v14 = v10[5]) == 0)
        {
LABEL_17:
          BOOL v13 = 0;
          if (v6 < 0xB) {
            goto LABEL_6;
          }
          goto LABEL_18;
        }
        BOOL v13 = (*(int *)((char *)v9 + v14) & 1) != 0;
        if (v6 < 0xB) {
          goto LABEL_6;
        }
      }
LABEL_18:
      if (v5[5])
      {
        if (v13 == (v4[v5[5]] & 1)) {
          return result;
        }
        goto LABEL_7;
      }
LABEL_6:
      if (!v13) {
        return result;
      }
LABEL_7:
      result += 5;
      if (result == a2) {
        return a2;
      }
    }
  }
  return result;
}

uint64_t sub_6E5B0C(uint64_t a1)
{
  *(void *)a1 = &unk_20E1710;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = &unk_20E1710;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = &unk_20E1710;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = &unk_20E1710;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = &unk_20E1710;
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 240) = &unk_20E1710;
  *(void *)(a1 + 256) = 0;
  *(void *)(a1 + 264) = 0;
  *(void *)(a1 + 248) = 0;
  *(void *)(a1 + 280) = 0;
  *(void *)(a1 + 288) = &unk_20E1710;
  *(void *)(a1 + 304) = 0;
  *(void *)(a1 + 312) = 0;
  *(void *)(a1 + 296) = 0;
  *(void *)(a1 + 328) = 0;
  *(void *)(a1 + 336) = &unk_20E1710;
  *(void *)(a1 + 344) = 0;
  *(void *)(a1 + 352) = 0;
  *(void *)(a1 + 360) = 0;
  *(void *)(a1 + 376) = 0;
  *(void *)(a1 + 384) = &unk_20E1710;
  *(void *)(a1 + 392) = 0;
  *(void *)(a1 + 400) = 0;
  *(void *)(a1 + 408) = 0;
  *(void *)(a1 + 424) = 0;
  *(void *)(a1 + 432) = &unk_20E1710;
  *(void *)(a1 + 440) = 0;
  *(void *)(a1 + 448) = 0;
  *(void *)(a1 + 456) = 0;
  *(void *)(a1 + 472) = 0;
  *(void *)(a1 + 480) = &unk_20E1710;
  *(void *)(a1 + 520) = 0;
  *(void *)(a1 + 488) = 0;
  *(void *)(a1 + 496) = 0;
  *(void *)(a1 + 504) = 0;
  *(void *)(a1 + 528) = &unk_20E1710;
  *(void *)(a1 + 568) = 0;
  *(void *)(a1 + 544) = 0;
  *(void *)(a1 + 536) = 0;
  *(void *)(a1 + 552) = 0;
  *(void *)(a1 + 576) = &unk_20E1710;
  *(void *)(a1 + 616) = 0;
  *(void *)(a1 + 592) = 0;
  *(void *)(a1 + 584) = 0;
  *(void *)(a1 + 600) = 0;
  *(void *)(a1 + 624) = &unk_20E1710;
  *(void *)(a1 + 664) = 0;
  *(void *)(a1 + 640) = 0;
  *(void *)(a1 + 632) = 0;
  *(void *)(a1 + 648) = 0;
  *(void *)(a1 + 672) = &unk_20E1710;
  *(void *)(a1 + 712) = 0;
  *(void *)(a1 + 688) = 0;
  *(void *)(a1 + 680) = 0;
  *(void *)(a1 + 696) = 0;
  *(void *)(a1 + 720) = &unk_20E1710;
  *(void *)(a1 + 736) = 0;
  *(void *)(a1 + 728) = 0;
  *(void *)(a1 + 744) = 0;
  *(_DWORD *)(a1 + 872) = 0;
  *(_OWORD *)(a1 + 840) = 0u;
  *(_OWORD *)(a1 + 856) = 0u;
  *(_OWORD *)(a1 + 824) = 0u;
  *(_OWORD *)(a1 + 804) = 0u;
  *(_OWORD *)(a1 + 792) = 0u;
  *(_OWORD *)(a1 + 776) = 0u;
  *(_OWORD *)(a1 + 760) = 0u;
  uint64_t v2 = (char *)operator new(8uLL);
  *(void *)(a1 + 848) = v2;
  *(void *)(a1 + 856) = v2;
  *(void *)(a1 + 864) = v2 + 8;
  uint64_t v3 = (char *)operator new(0x7F0uLL);
  *(void *)(a1 + 824) = v3;
  *(void *)(a1 + 832) = v3;
  *(void *)(a1 + 840) = v3 + 2032;
  return a1;
}

void sub_6E5C78(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;
  v1[107] = v3;
  operator delete(v3);
  char v5 = (void *)v1[103];
  if (v5)
  {
    v1[104] = v5;
    operator delete(v5);
    unsigned int v6 = (void *)v1[99];
    if (!v6)
    {
LABEL_3:
      uint64_t v7 = (void *)v1[96];
      if (!v7) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else
  {
    unsigned int v6 = (void *)v1[99];
    if (!v6) {
      goto LABEL_3;
    }
  }
  v1[100] = v6;
  operator delete(v6);
  uint64_t v7 = (void *)v1[96];
  if (!v7)
  {
LABEL_4:
    sub_328138((uint64_t)v1);
    _Unwind_Resume(a1);
  }
LABEL_7:
  v1[97] = v7;
  operator delete(v7);
  sub_328138((uint64_t)v1);
  _Unwind_Resume(a1);
}

void sub_6E5CFC(uint64_t a1, int **a2, uint64_t a3, uint64_t a4, char a5)
{
BOOL sub_6E61C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (a2 - a1) >> 3;
  BOOL result = 1;
  switch(0xCCCCCCCCCCCCCCCDLL * v6)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      uint64_t v8 = a2 - 40;
      uint64_t v9 = *(void *)(a3 + 8);
      double v10 = sub_6D82EC(v9, *(int ***)a3, (int **)(a2 - 40));
      if (fabs(v10) >= fabs(sub_6D82EC(v9, *(int ***)a3, (int **)a1))) {
        return 1;
      }
      long long v11 = *(_OWORD *)a1;
      long long v12 = *(_OWORD *)(a1 + 16);
      uint64_t v13 = *(void *)(a1 + 32);
      uint64_t v14 = *(void *)(v8 + 32);
      long long v15 = *(_OWORD *)(v8 + 16);
      *(_OWORD *)a1 = *(_OWORD *)v8;
      *(_OWORD *)(a1 + 16) = v15;
      *(void *)(a1 + 32) = v14;
      *(void *)(v8 + 32) = v13;
      BOOL result = 1;
      *(_OWORD *)uint64_t v8 = v11;
      *(_OWORD *)(v8 + 16) = v12;
      return result;
    case 3uLL:
      sub_6E20C4((int **)a1, (int **)(a1 + 40), (int **)(a2 - 40), a3);
      return 1;
    case 4uLL:
      sub_6E34DC((int **)a1, (int **)(a1 + 40), (int **)(a1 + 80), (int **)(a2 - 40), a3);
      return 1;
    case 5uLL:
      sub_6E3630((int **)a1, (int **)(a1 + 40), (int **)(a1 + 80), (int **)(a1 + 120), (int **)(a2 - 40), a3);
      return 1;
    default:
      unint64_t v16 = (int **)(a1 + 80);
      sub_6E20C4((int **)a1, (int **)(a1 + 40), (int **)(a1 + 80), a3);
      uint64_t v17 = a1 + 120;
      if (a1 + 120 == a2) {
        return 1;
      }
      uint64_t v18 = 0;
      int v19 = 0;
      break;
  }
  while (1)
  {
    uint64_t v22 = *(void *)(a3 + 8);
    double v23 = sub_6D82EC(v22, *(int ***)a3, (int **)v17);
    if (fabs(v23) < fabs(sub_6D82EC(v22, *(int ***)a3, v16)))
    {
      long long v24 = *(_OWORD *)(v17 + 16);
      long long v31 = *(_OWORD *)v17;
      long long v32 = v24;
      uint64_t v33 = *(void *)(v17 + 32);
      uint64_t v25 = v18;
      do
      {
        uint64_t v26 = a1 + v25;
        long long v27 = *(_OWORD *)(a1 + v25 + 96);
        *(_OWORD *)(v26 + 120) = *(_OWORD *)(a1 + v25 + 80);
        *(_OWORD *)(v26 + 136) = v27;
        *(void *)(v26 + 152) = *(void *)(a1 + v25 + 112);
        if (v25 == -80)
        {
          uint64_t v20 = a1;
          goto LABEL_7;
        }
        char v28 = (int **)(v26 + 40);
        uint64_t v29 = *(void *)(a3 + 8);
        double v30 = sub_6D82EC(v29, *(int ***)a3, (int **)&v31);
        v25 -= 40;
      }
      while (fabs(v30) < fabs(sub_6D82EC(v29, *(int ***)a3, v28)));
      uint64_t v20 = a1 + v25 + 120;
LABEL_7:
      long long v21 = v32;
      *(_OWORD *)uint64_t v20 = v31;
      *(_OWORD *)(v20 + 16) = v21;
      *(void *)(v20 + 32) = v33;
      if (++v19 == 8) {
        return v17 + 40 == a2;
      }
    }
    unint64_t v16 = (int **)v17;
    v18 += 40;
    v17 += 40;
    if (v17 == a2) {
      return 1;
    }
  }
}

BOOL sub_6E644C(uint64_t *a1, int **a2)
{
  uint64_t v3 = (int **)a1[1];
  unint64_t v4 = *v3;
  char v5 = (unsigned __int16 *)((char *)*v3 - **v3);
  if (*v5 >= 0x2Fu && v5[23])
  {
    unsigned int v6 = *((unsigned __int8 *)v4 + v5[23]);
    BOOL v7 = v6 > 0x2B || ((1 << v6) & 0x80000001040) == 0;
    BOOL v9 = !v7 && ((v8 = v5[5]) == 0 || (*((unsigned char *)v4 + v8 + 2) & 0x20) == 0) || v6 == 44;
  }
  else
  {
    BOOL v9 = 0;
  }
  uint64_t v10 = *a1;
  long long v11 = *a2;
  long long v12 = (unsigned __int16 *)((char *)*a2 - **a2);
  if (*v12 >= 0x2Fu && v12[23])
  {
    unsigned int v13 = *((unsigned __int8 *)v11 + v12[23]);
    BOOL v14 = v13 > 0x2B || ((1 << v13) & 0x80000001040) == 0;
    if (v14 || (uint64_t v15 = v12[5]) != 0 && (*((unsigned char *)v11 + v15 + 2) & 0x20) != 0)
    {
      if ((v9 ^ (v13 == 44))) {
        return 0;
      }
    }
    else if (!v9)
    {
      return 0;
    }
  }
  else if (v9)
  {
    return 0;
  }
  if (fabs(sub_6D82EC(*a1, v3, a2)) >= *(double *)(v10 + 928)) {
    return 0;
  }
  if (sub_2E3ED8(*(void *)(v10 + 880), (uint64_t)v3, (uint64_t)a2) < *(double *)(v10 + 1800)) {
    return 1;
  }
  uint64_t v17 = *(void *)(v10 + 880);
  long long v24 = a2[4];
  long long v18 = *((_OWORD *)a2 + 1);
  v23[0] = *(_OWORD *)a2;
  v23[1] = v18;
  BYTE6(v24) ^= 1u;
  long long v19 = *(_OWORD *)v3;
  long long v20 = *((_OWORD *)v3 + 1);
  uint64_t v22 = v3[4];
  v21[0] = v19;
  v21[1] = v20;
  BYTE6(v22) ^= 1u;
  return sub_2E3ED8(v17, (uint64_t)v23, (uint64_t)v21) < *(double *)(v10 + 1800);
}

void sub_6E6628()
{
  unk_25A074F = 16641;
  word_25A0738 = 65;
  byte_25A0767 = 1;
  byte_25A0751 = 0;
}

uint64_t sub_6E6650(void *a1)
{
  return a1[2] - *a1;
}

uint64_t sub_6E6660(uint64_t a1, uint64_t a2, int a3, long long *a4)
{
  *(_OWORD *)(a1 + 218) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 236) = 0;
  *(void *)(a1 + 242) = 0;
  *(void *)(a1 + 256) = 0x7FFFFFFFFFFFFFFFLL;
  *(_DWORD *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = 0x7FFFFFFFFFFFFFFFLL;
  *(_WORD *)(a1 + 280) = 0;
  int64x2_t v8 = vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
  *(int64x2_t *)(a1 + 288) = v8;
  *(void *)(a1 + 304) = 0x7FFFFFFFFFFFFFFFLL;
  *(_WORD *)(a1 + 312) = 0;
  *(int64x2_t *)(a1 + 320) = v8;
  *(int64x2_t *)(a1 + 336) = v8;
  *(void *)(a1 + 352) = 0x7FFFFFFFFFFFFFFFLL;
  *(_WORD *)(a1 + 360) = 0;
  *(unsigned char *)(a1 + 362) = 0;
  *(void *)(a1 + 368) = 0x7FFFFFFFFFFFFFFFLL;
  *(unsigned char *)(a1 + 376) = 0;
  *(int64x2_t *)(a1 + 384) = v8;
  *(void *)(a1 + 400) = 0x7FFFFFFFFFFFFFFFLL;
  *(_WORD *)(a1 + 408) = 0;
  *(unsigned char *)(a1 + 410) = 0;
  *(int64x2_t *)(a1 + 416) = v8;
  *(int64x2_t *)(a1 + 432) = v8;
  *(int64x2_t *)(a1 + 448) = v8;
  *(void *)(a1 + 464) = 0x7FFFFFFFFFFFFFFFLL;
  *(unsigned char *)(a1 + 472) = 0;
  *(int64x2_t *)(a1 + 480) = v8;
  *(unsigned char *)(a1 + 500) = 0;
  *(_DWORD *)(a1 + 496) = 0;
  *(void *)(a1 + 504) = 0;
  *(int64x2_t *)(a1 + 512) = v8;
  *(_WORD *)(a1 + 528) = 0;
  *(void *)(a1 + 532) = 0;
  *(int64x2_t *)(a1 + 544) = v8;
  *(_OWORD *)(a1 + 560) = 0u;
  *(_WORD *)(a1 + 576) = 0;
  *(void *)(a1 + 584) = 0xBFF0000000000000;
  *(_OWORD *)(a1 + 592) = 0u;
  *(_OWORD *)(a1 + 608) = 0u;
  *(_OWORD *)(a1 + 624) = 0u;
  *(_OWORD *)(a1 + 640) = 0u;
  *(_OWORD *)(a1 + 656) = 0u;
  *(unsigned char *)(a1 + 672) = 1;
  *(_WORD *)(a1 + 681) = 0;
  *(void *)(a1 + 673) = 0;
  *(void *)(a1 + 688) = 0x7FFFFFFFFFFFFFFFLL;
  *(void *)(a1 + 696) = 0;
  *(int64x2_t *)(a1 + 704) = v8;
  *(_OWORD *)(a1 + 720) = 0u;
  *(_OWORD *)(a1 + 736) = 0u;
  *(int64x2_t *)(a1 + 752) = v8;
  *(int64x2_t *)(a1 + 768) = v8;
  *(unsigned char *)(a1 + 784) = 0;
  *(_OWORD *)(a1 + 792) = 0u;
  *(void *)(a1 + 808) = 0x7FFFFFFFFFFFFFFFLL;
  *(void *)(a1 + 816) = 0x7FFFFFFFFFFFFFFFLL;
  *(unsigned char *)(a1 + 824) = 0;
  *(int64x2_t *)(a1 + 832) = v8;
  *(void *)(a1 + 848) = 0;
  *(unsigned char *)(a1 + 856) = 0;
  *(void *)(a1 + 864) = 0x7FFFFFFFFFFFFFFFLL;
  *(_DWORD *)(a1 + 872) = 0;
  *(unsigned char *)(a1 + 876) = 0;
  *(unsigned char *)(a1 + 896) = 0;
  *(_OWORD *)(a1 + 880) = 0u;
  *(void *)(a1 + 904) = 0x7FFFFFFFFFFFFFFFLL;
  *(_WORD *)(a1 + 912) = 0;
  *(void *)(a1 + 920) = 0;
  *(int64x2_t *)(a1 + 928) = v8;
  *(_WORD *)(a1 + 970) = 0;
  long long v19 = operator new(0x20uLL);
  long long v20 = xmmword_20B8E90;
  strcpy((char *)v19, "routing/guidance/Maneuvers.json");
  if (*((char *)a4 + 23) < 0)
  {
    sub_4200(&__dst, *(void **)a4, *((void *)a4 + 1));
  }
  else
  {
    long long __dst = *a4;
    uint64_t v24 = *((void *)a4 + 2);
  }
  sub_28C774(&__p, (uint64_t)&__dst, 1uLL);
  BOOL v9 = sub_374CDC(a2, (uint64_t)&v19, (uint64_t *)&__p);
  sub_3CB370(v9, a3, 0, v21);
  uint64_t v10 = (void **)__p;
  if (__p)
  {
    long long v11 = v18;
    long long v12 = __p;
    if (v18 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0) {
          operator delete(*(v11 - 3));
        }
        v11 -= 3;
      }
      while (v11 != v10);
      long long v12 = __p;
    }
    long long v18 = v10;
    operator delete(v12);
  }
  if (SHIBYTE(v24) < 0)
  {
    operator delete((void *)__dst);
    if ((SHIBYTE(v20) & 0x80000000) == 0) {
      goto LABEL_14;
    }
  }
  else if ((SHIBYTE(v20) & 0x80000000) == 0)
  {
    goto LABEL_14;
  }
  operator delete(v19);
LABEL_14:
  sub_6E69B4(a1, v21);
  unsigned int v13 = v22;
  if (v22)
  {
    do
    {
      unint64_t v16 = *(char **)v13;
      sub_57AC8((uint64_t *)v13 + 5);
      if (v13[39] < 0) {
        operator delete(*((void **)v13 + 2));
      }
      operator delete(v13);
      unsigned int v13 = v16;
    }
    while (v16);
  }
  BOOL v14 = v21[0];
  v21[0] = 0;
  if (v14) {
    operator delete(v14);
  }
  return a1;
}

void sub_6E695C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_6E69B4(uint64_t a1, void *a2)
{
  strcpy((char *)v177, "obvious_straight_angle");
  HIBYTE(v177[2]) = 22;
  unint64_t v4 = sub_58070(a2, (uint64_t)v177);
  char v5 = (void *)a1;
  if (v4)
  {
    char v5 = v4 + 5;
    if (*((_DWORD *)v4 + 12) != 1) {
      char v5 = (void *)a1;
    }
  }
  *(void *)a1 = *v5;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v177[1] = xmmword_20B8E90;
  strcpy(v177[0], "obvious_ahead_max_contact_angle");
  unsigned int v6 = sub_58070(a2, (uint64_t)v177);
  BOOL v7 = (void *)(a1 + 8);
  if (v6)
  {
    BOOL v7 = v6 + 5;
    if (*((_DWORD *)v6 + 12) != 1) {
      BOOL v7 = (void *)(a1 + 8);
    }
  }
  *(void *)(a1 + 8) = *v7;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v177[1] = xmmword_20B91C0;
  strcpy(v177[0], "straight_candidate_angle");
  int64x2_t v8 = sub_58070(a2, (uint64_t)v177);
  BOOL v9 = (void *)(a1 + 16);
  if (v8)
  {
    BOOL v9 = v8 + 5;
    if (*((_DWORD *)v8 + 12) != 1) {
      BOOL v9 = (void *)(a1 + 16);
    }
  }
  *(void *)(a1 + 16) = *v9;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v177[1] = xmmword_20B91C0;
  strcpy(v177[0], "same_name_straight_angle");
  uint64_t v10 = sub_58070(a2, (uint64_t)v177);
  long long v11 = (void *)(a1 + 24);
  if (v10)
  {
    long long v11 = v10 + 5;
    if (*((_DWORD *)v10 + 12) != 1) {
      long long v11 = (void *)(a1 + 24);
    }
  }
  *(void *)(a1 + 24) = *v11;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9240;
  strcpy(v177[0], "drivability_transition_straight_angle");
  long long v12 = sub_58070(a2, (uint64_t)v177);
  unsigned int v13 = (void *)(a1 + 32);
  if (v12)
  {
    unsigned int v13 = v12 + 5;
    if (*((_DWORD *)v12 + 12) != 1) {
      unsigned int v13 = (void *)(a1 + 32);
    }
  }
  *(void *)(a1 + 32) = *v13;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20B93E0;
  strcpy(v177[0], "matching_properties_straight_approach_angle");
  BOOL v14 = sub_58070(a2, (uint64_t)v177);
  uint64_t v15 = (void *)(a1 + 48);
  if (v14)
  {
    uint64_t v15 = v14 + 5;
    if (*((_DWORD *)v14 + 12) != 1) {
      uint64_t v15 = (void *)(a1 + 48);
    }
  }
  *(void *)(a1 + 48) = *v15;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9A40;
  strcpy(v177[0], "matching_properties_straight_contact_angle");
  unint64_t v16 = sub_58070(a2, (uint64_t)v177);
  uint64_t v17 = (void *)(a1 + 56);
  if (v16)
  {
    uint64_t v17 = v16 + 5;
    if (*((_DWORD *)v16 + 12) != 1) {
      uint64_t v17 = (void *)(a1 + 56);
    }
  }
  *(void *)(a1 + 56) = *v17;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x38uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9A60;
  strcpy(v177[0], "better_entrance_fallback_straight_approach_angle");
  long long v18 = sub_58070(a2, (uint64_t)v177);
  long long v19 = (void *)(a1 + 40);
  if (v18)
  {
    long long v19 = v18 + 5;
    if (*((_DWORD *)v18 + 12) != 1) {
      long long v19 = (void *)(a1 + 40);
    }
  }
  *(void *)(a1 + 40) = *v19;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x38uLL);
  *(_OWORD *)&v177[1] = xmmword_20B99F0;
  strcpy(v177[0], "no_better_entrance_fallback_straight_approach_angle");
  long long v20 = sub_58070(a2, (uint64_t)v177);
  long long v21 = (void *)(a1 + 64);
  if (v20)
  {
    long long v21 = v20 + 5;
    if (*((_DWORD *)v20 + 12) != 1) {
      long long v21 = (void *)(a1 + 64);
    }
  }
  *(void *)(a1 + 64) = *v21;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v177[1] = xmmword_20B8E90;
  strcpy(v177[0], "fallback_straight_contact_angle");
  uint64_t v22 = sub_58070(a2, (uint64_t)v177);
  double v23 = (void *)(a1 + 72);
  if (v22)
  {
    double v23 = v22 + 5;
    if (*((_DWORD *)v22 + 12) != 1) {
      double v23 = (void *)(a1 + 72);
    }
  }
  *(void *)(a1 + 72) = *v23;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  HIBYTE(v177[2]) = 14;
  strcpy((char *)v177, "keep_min_angle");
  uint64_t v24 = sub_58070(a2, (uint64_t)v177);
  uint64_t v25 = (void *)(a1 + 80);
  if (v24)
  {
    uint64_t v25 = v24 + 5;
    if (*((_DWORD *)v24 + 12) != 1) {
      uint64_t v25 = (void *)(a1 + 80);
    }
  }
  *(void *)(a1 + 80) = *v25;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  HIBYTE(v177[2]) = 21;
  strcpy((char *)v177, "slight_turn_min_angle");
  uint64_t v26 = sub_58070(a2, (uint64_t)v177);
  long long v27 = (void *)(a1 + 88);
  if (v26)
  {
    long long v27 = v26 + 5;
    if (*((_DWORD *)v26 + 12) != 1) {
      long long v27 = (void *)(a1 + 88);
    }
  }
  *(void *)(a1 + 88) = *v27;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  HIBYTE(v177[2]) = 21;
  strcpy((char *)v177, "normal_turn_min_angle");
  char v28 = sub_58070(a2, (uint64_t)v177);
  uint64_t v29 = (void *)(a1 + 104);
  if (v28)
  {
    uint64_t v29 = v28 + 5;
    if (*((_DWORD *)v28 + 12) != 1) {
      uint64_t v29 = (void *)(a1 + 104);
    }
  }
  *(void *)(a1 + 104) = *v29;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B8FD0;
  strcpy(v177[0], "normal_turn_min_angle_when_ambiguous");
  double v30 = sub_58070(a2, (uint64_t)v177);
  long long v31 = (void *)(a1 + 96);
  if (v30)
  {
    long long v31 = v30 + 5;
    if (*((_DWORD *)v30 + 12) != 1) {
      long long v31 = (void *)(a1 + 96);
    }
  }
  *(void *)(a1 + 96) = *v31;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  HIBYTE(v177[2]) = 20;
  strcpy((char *)v177, "sharp_turn_min_angle");
  long long v32 = sub_58070(a2, (uint64_t)v177);
  uint64_t v33 = (void *)(a1 + 120);
  if (v32)
  {
    uint64_t v33 = v32 + 5;
    if (*((_DWORD *)v32 + 12) != 1) {
      uint64_t v33 = (void *)(a1 + 120);
    }
  }
  *(void *)(a1 + 120) = *v33;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B93A0;
  strcpy(v177[0], "sharp_turn_min_angle_when_ambiguous");
  unint64_t v34 = sub_58070(a2, (uint64_t)v177);
  unint64_t v35 = (void *)(a1 + 112);
  if (v34)
  {
    unint64_t v35 = v34 + 5;
    if (*((_DWORD *)v34 + 12) != 1) {
      unint64_t v35 = (void *)(a1 + 112);
    }
  }
  *(void *)(a1 + 112) = *v35;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v177[1] = xmmword_20B5EB0;
  strcpy(v177[0], "u_turn_same_name_min_angle");
  unsigned __int16 v36 = sub_58070(a2, (uint64_t)v177);
  long long v37 = (void *)(a1 + 128);
  if (v36)
  {
    long long v37 = v36 + 5;
    if (*((_DWORD *)v36 + 12) != 1) {
      long long v37 = (void *)(a1 + 128);
    }
  }
  *(void *)(a1 + 128) = *v37;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v177[1] = xmmword_20B8E90;
  strcpy(v177[0], "u_turn_different_name_min_angle");
  long long v38 = sub_58070(a2, (uint64_t)v177);
  long long v39 = (void *)(a1 + 136);
  if (v38)
  {
    long long v39 = v38 + 5;
    if (*((_DWORD *)v38 + 12) != 1) {
      long long v39 = (void *)(a1 + 136);
    }
  }
  *(void *)(a1 + 136) = *v39;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  HIBYTE(v177[2]) = 20;
  strcpy((char *)v177, "non_ramp_merge_angle");
  long long v40 = sub_58070(a2, (uint64_t)v177);
  uint64_t v41 = (void *)(a1 + 144);
  if (v40)
  {
    uint64_t v41 = v40 + 5;
    if (*((_DWORD *)v40 + 12) != 1) {
      uint64_t v41 = (void *)(a1 + 144);
    }
  }
  *(void *)(a1 + 144) = *v41;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  HIBYTE(v177[2]) = 16;
  strcpy((char *)v177, "ramp_merge_angle");
  uint64_t v42 = sub_58070(a2, (uint64_t)v177);
  unsigned int v43 = (void *)(a1 + 152);
  if (v42)
  {
    unsigned int v43 = v42 + 5;
    if (*((_DWORD *)v42 + 12) != 1) {
      unsigned int v43 = (void *)(a1 + 152);
    }
  }
  *(void *)(a1 + 152) = *v43;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20B93E0;
  strcpy(v177[0], "max_angle_diff_to_use_alternate_angle_model");
  unsigned int v44 = sub_58070(a2, (uint64_t)v177);
  unsigned int v45 = (void *)(a1 + 160);
  if (v44)
  {
    unsigned int v45 = v44 + 5;
    if (*((_DWORD *)v44 + 12) != 1) {
      unsigned int v45 = (void *)(a1 + 160);
    }
  }
  *(void *)(a1 + 160) = *v45;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9800;
  strcpy(v177[0], "priority_ahead_lane_count_diff");
  int v46 = sub_58070(a2, (uint64_t)v177);
  if (v46 && *((_DWORD *)v46 + 12) == 1)
  {
    *(_DWORD *)(a1 + 168) = (int)*((double *)v46 + 5);
    if (SHIBYTE(v177[2]) < 0) {
      goto LABEL_111;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 168) = *(_DWORD *)(a1 + 168);
    if (SHIBYTE(v177[2]) < 0) {
LABEL_111:
    }
      operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20B93B0;
  strcpy(v177[0], "taken_branch_perpendicular_distance_threshold");
  int v47 = sub_58070(a2, (uint64_t)v177);
  if (v47 && *((_DWORD *)v47 + 12) == 1)
  {
    *(_DWORD *)(a1 + 172) = *((double *)v47 + 5);
    if (SHIBYTE(v177[2]) < 0) {
      goto LABEL_117;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 172) = *(_DWORD *)(a1 + 172);
    if (SHIBYTE(v177[2]) < 0) {
LABEL_117:
    }
      operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x38uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9A10;
  strcpy(v177[0], "non_taken_branch_perpendicular_distance_threshold");
  unsigned int v48 = sub_58070(a2, (uint64_t)v177);
  if (v48 && *((_DWORD *)v48 + 12) == 1)
  {
    *(_DWORD *)(a1 + 176) = *((double *)v48 + 5);
    if (SHIBYTE(v177[2]) < 0) {
      goto LABEL_123;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 176) = *(_DWORD *)(a1 + 176);
    if (SHIBYTE(v177[2]) < 0) {
LABEL_123:
    }
      operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v177[1] = xmmword_20B5EB0;
  strcpy(v177[0], "ambiguous_ahead_lane_count");
  int v49 = sub_58070(a2, (uint64_t)v177);
  if (v49 && *((_DWORD *)v49 + 12) == 1)
  {
    *(_DWORD *)(a1 + 180) = *((double *)v49 + 5);
    if (SHIBYTE(v177[2]) < 0) {
      goto LABEL_129;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 180) = *(_DWORD *)(a1 + 180);
    if (SHIBYTE(v177[2]) < 0) {
LABEL_129:
    }
      operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B93A0;
  strcpy(v177[0], "ambiguous_ahead_max_lane_count_diff");
  unsigned int v50 = sub_58070(a2, (uint64_t)v177);
  if (v50 && *((_DWORD *)v50 + 12) == 1)
  {
    *(_DWORD *)(a1 + 188) = (int)*((double *)v50 + 5);
    if (SHIBYTE(v177[2]) < 0) {
      goto LABEL_135;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 188) = *(_DWORD *)(a1 + 188);
    if (SHIBYTE(v177[2]) < 0) {
LABEL_135:
    }
      operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20B93C0;
  strcpy(v177[0], "ambiguous_ahead_ramp_max_lane_count_diff");
  unsigned int v51 = sub_58070(a2, (uint64_t)v177);
  if (v51 && *((_DWORD *)v51 + 12) == 1)
  {
    *(_DWORD *)(a1 + 192) = (int)*((double *)v51 + 5);
    if (SHIBYTE(v177[2]) < 0) {
      goto LABEL_141;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 192) = *(_DWORD *)(a1 + 192);
    if (SHIBYTE(v177[2]) < 0) {
LABEL_141:
    }
      operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9260;
  strcpy(v177[0], "ambiguous_ahead_road_class_divide");
  unsigned __int16 v52 = sub_58070(a2, (uint64_t)v177);
  if (v52 && *((_DWORD *)v52 + 12) == 1)
  {
    *(_DWORD *)(a1 + 184) = *((double *)v52 + 5);
    if (SHIBYTE(v177[2]) < 0) {
      goto LABEL_147;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 184) = *(_DWORD *)(a1 + 184);
    if (SHIBYTE(v177[2]) < 0) {
LABEL_147:
    }
      operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B93A0;
  strcpy(v177[0], "ambiguous_ahead_max_road_class_diff");
  unsigned __int16 v53 = sub_58070(a2, (uint64_t)v177);
  if (v53 && *((_DWORD *)v53 + 12) == 1)
  {
    *(_DWORD *)(a1 + 196) = (int)*((double *)v53 + 5);
    if (SHIBYTE(v177[2]) < 0) {
      goto LABEL_153;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 196) = *(_DWORD *)(a1 + 196);
    if (SHIBYTE(v177[2]) < 0) {
LABEL_153:
    }
      operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20B93C0;
  strcpy(v177[0], "ambiguous_ahead_ramp_max_road_class_diff");
  int v54 = sub_58070(a2, (uint64_t)v177);
  if (v54 && *((_DWORD *)v54 + 12) == 1)
  {
    *(_DWORD *)(a1 + 200) = (int)*((double *)v54 + 5);
    if (SHIBYTE(v177[2]) < 0) {
      goto LABEL_159;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 200) = *(_DWORD *)(a1 + 200);
    if (SHIBYTE(v177[2]) < 0) {
LABEL_159:
    }
      operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20B93C0;
  strcpy(v177[0], "ambiguous_ahead_high_road_class_max_diff");
  long long v55 = sub_58070(a2, (uint64_t)v177);
  if (v55 && *((_DWORD *)v55 + 12) == 1)
  {
    *(_DWORD *)(a1 + 204) = (int)*((double *)v55 + 5);
    if (SHIBYTE(v177[2]) < 0) {
      goto LABEL_165;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 204) = *(_DWORD *)(a1 + 204);
    if (SHIBYTE(v177[2]) < 0) {
LABEL_165:
    }
      operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20B93C0;
  strcpy(v177[0], "ambiguous_ahead_max_contact_angle_spread");
  long long v56 = sub_58070(a2, (uint64_t)v177);
  long long v57 = (void *)(a1 + 208);
  if (v56)
  {
    long long v57 = v56 + 5;
    if (*((_DWORD *)v56 + 12) != 1) {
      long long v57 = (void *)(a1 + 208);
    }
  }
  *(void *)(a1 + 208) = *v57;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9390;
  strcpy(v177[0], "ambiguous_ahead_max_angle_spread");
  long long v58 = sub_58070(a2, (uint64_t)v177);
  unsigned int v59 = (void *)(a1 + 216);
  if (v58)
  {
    unsigned int v59 = v58 + 5;
    if (*((_DWORD *)v58 + 12) != 1) {
      unsigned int v59 = (void *)(a1 + 216);
    }
  }
  *(void *)(a1 + 216) = *v59;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B93A0;
  strcpy(v177[0], "ambiguous_ahead_max_angle_collinear");
  unsigned int v60 = sub_58070(a2, (uint64_t)v177);
  double v61 = (void *)(a1 + 224);
  if (v60)
  {
    double v61 = v60 + 5;
    if (*((_DWORD *)v60 + 12) != 1) {
      double v61 = (void *)(a1 + 224);
    }
  }
  *(void *)(a1 + 224) = *v61;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x38uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9A60;
  strcpy(v177[0], "ambiguous_ahead_same_lane_count_max_angle_spread");
  unsigned __int16 v62 = sub_58070(a2, (uint64_t)v177);
  if (v62 && *((_DWORD *)v62 + 12) == 1)
  {
    *(_WORD *)(a1 + 232) = (int)*((double *)v62 + 5);
    if (SHIBYTE(v177[2]) < 0) {
      goto LABEL_186;
    }
  }
  else
  {
    *(_WORD *)(a1 + 232) = *(_WORD *)(a1 + 232);
    if (SHIBYTE(v177[2]) < 0) {
LABEL_186:
    }
      operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20E1380;
  strcpy(v177[0], "count_reverse_traversable_branches_for_ahead");
  unsigned __int16 v63 = sub_58070(a2, (uint64_t)v177);
  if (v63 && (int v64 = *((_DWORD *)v63 + 12), (v64 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)(a1 + 248) = v64 == 4;
    if (SHIBYTE(v177[2]) < 0) {
      goto LABEL_192;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 248) = *(unsigned char *)(a1 + 248) != 0;
    if (SHIBYTE(v177[2]) < 0) {
LABEL_192:
    }
      operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9800;
  strcpy(v177[0], "allow_u_turn_from_two_way_road");
  unsigned __int16 v65 = sub_58070(a2, (uint64_t)v177);
  if (v65 && (int v66 = *((_DWORD *)v65 + 12), (v66 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)(a1 + 249) = v66 == 4;
    if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
      goto LABEL_199;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 249) = *(unsigned char *)(a1 + 249) != 0;
    if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
      goto LABEL_199;
    }
  }
  operator delete(v177[0]);
LABEL_199:
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9280;
  strcpy(v177[0], "ambiguous_ahead_sidewalk_max_angle");
  *(double *)(a1 + 240) = sub_5C7E8(a2, (uint64_t)v177);
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B8FD0;
  strcpy(v177[0], "ambiguous_ramp_split_lane_count_diff");
  unsigned int v67 = sub_58070(a2, (uint64_t)v177);
  if (v67 && *((_DWORD *)v67 + 12) == 1)
  {
    *(_DWORD *)(a1 + 236) = (int)*((double *)v67 + 5);
    if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
      goto LABEL_207;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 236) = *(_DWORD *)(a1 + 236);
    if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
      goto LABEL_207;
    }
  }
  operator delete(v177[0]);
LABEL_207:
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9960;
  strcpy(v177[0], "segments_merge_together_search_distance");
  sub_5C8A4(a2, (uint64_t)v177, (uint64_t *)(a1 + 256));
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v177[1] = xmmword_20B5EB0;
  strcpy(v177[0], "off_ramp_road_class_divide");
  unsigned int v68 = sub_58070(a2, (uint64_t)v177);
  if (v68 && *((_DWORD *)v68 + 12) == 1)
  {
    *(_DWORD *)(a1 + 264) = *((double *)v68 + 5);
    if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
      goto LABEL_215;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 264) = *(_DWORD *)(a1 + 264);
    if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
      goto LABEL_215;
    }
  }
  operator delete(v177[0]);
LABEL_215:
  HIBYTE(v177[2]) = 16;
  strcpy((char *)v177, "pivot_max_length");
  sub_5C8A4(a2, (uint64_t)v177, (uint64_t *)(a1 + 272));
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v177[1] = xmmword_20B5EB0;
  strcpy(v177[0], "pivot_turn_angle_tolerance");
  unsigned int v69 = sub_58070(a2, (uint64_t)v177);
  if (v69 && *((_DWORD *)v69 + 12) == 1)
  {
    *(_WORD *)(a1 + 280) = (int)*((double *)v69 + 5);
    if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
      goto LABEL_223;
    }
  }
  else
  {
    *(_WORD *)(a1 + 280) = *(_WORD *)(a1 + 280);
    if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
      goto LABEL_223;
    }
  }
  operator delete(v177[0]);
LABEL_223:
  v177[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9800;
  strcpy(v177[0], "far_from_intersection_distance");
  sub_5C8A4(a2, (uint64_t)v177, (uint64_t *)(a1 + 320));
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20E1380;
  strcpy(v177[0], "maneuver_max_length_if_far_from_intersection");
  sub_5C8A4(a2, (uint64_t)v177, (uint64_t *)(a1 + 328));
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9960;
  strcpy(v177[0], "ramp_triangle_traversed_ramp_max_length");
  sub_5C8A4(a2, (uint64_t)v177, (uint64_t *)(a1 + 288));
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20B93D0;
  strcpy(v177[0], "ramp_triangle_untraversed_ramp_max_length");
  sub_5C8A4(a2, (uint64_t)v177, (uint64_t *)(a1 + 296));
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9280;
  strcpy(v177[0], "ramp_triangle_main_road_max_length");
  sub_5C8A4(a2, (uint64_t)v177, (uint64_t *)(a1 + 304));
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9240;
  strcpy(v177[0], "ramp_triangle_ramp_entrance_max_angle");
  unsigned int v70 = sub_58070(a2, (uint64_t)v177);
  if (v70 && *((_DWORD *)v70 + 12) == 1)
  {
    *(_WORD *)(a1 + 312) = (int)*((double *)v70 + 5);
    if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
      goto LABEL_239;
    }
  }
  else
  {
    *(_WORD *)(a1 + 312) = *(_WORD *)(a1 + 312);
    if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
      goto LABEL_239;
    }
  }
  operator delete(v177[0]);
LABEL_239:
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B93A0;
  strcpy(v177[0], "between_dual_carriageway_max_length");
  sub_5C8A4(a2, (uint64_t)v177, (uint64_t *)(a1 + 336));
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x40uLL);
  *(_OWORD *)&v177[1] = xmmword_20B99C0;
  strcpy(v177[0], "between_dual_carriageway_no_interior_turn_channel_max_length");
  sub_5C8A4(a2, (uint64_t)v177, (uint64_t *)(a1 + 344));
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20E1380;
  strcpy(v177[0], "between_unmarked_dual_carriageway_max_length");
  sub_5C8A4(a2, (uint64_t)v177, (uint64_t *)(a1 + 352));
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20B93E0;
  strcpy(v177[0], "between_unmarked_dual_carriageway_min_angle");
  unsigned int v71 = sub_58070(a2, (uint64_t)v177);
  if (v71 && *((_DWORD *)v71 + 12) == 1)
  {
    *(_WORD *)(a1 + 360) = (int)*((double *)v71 + 5);
    if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
      goto LABEL_251;
    }
  }
  else
  {
    *(_WORD *)(a1 + 360) = *(_WORD *)(a1 + 360);
    if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
      goto LABEL_251;
    }
  }
  operator delete(v177[0]);
LABEL_251:
  v177[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v177[1] = xmmword_20B91A0;
  strcpy(v177[0], "multi_turn_length_tolerance");
  sub_5C8A4(a2, (uint64_t)v177, (uint64_t *)(a1 + 368));
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  HIBYTE(v177[2]) = 17;
  strcpy((char *)v177, "enable_multi_turn");
  __int16 v72 = sub_58070(a2, (uint64_t)v177);
  if (v72 && (int v73 = *((_DWORD *)v72 + 12), (v73 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)(a1 + 362) = v73 == 4;
    if (SHIBYTE(v177[2]) < 0) {
      goto LABEL_258;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 362) = *(unsigned char *)(a1 + 362) != 0;
    if (SHIBYTE(v177[2]) < 0) {
LABEL_258:
    }
      operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20E1380;
  strcpy(v177[0], "multi_turn_skip_vendor_intersection_internal");
  __int16 v74 = sub_58070(a2, (uint64_t)v177);
  if (v74 && (int v75 = *((_DWORD *)v74 + 12), (v75 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)(a1 + 376) = v75 == 4;
    if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
      goto LABEL_265;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 376) = *(unsigned char *)(a1 + 376) != 0;
    if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
      goto LABEL_265;
    }
  }
  operator delete(v177[0]);
LABEL_265:
  v177[0] = (char *)operator new(0x38uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9A60;
  strcpy(v177[0], "complex_intersection_same_branch_search_distance");
  sub_5C8A4(a2, (uint64_t)v177, (uint64_t *)(a1 + 384));
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x38uLL);
  *(_OWORD *)&v177[1] = xmmword_20B99E0;
  strcpy(v177[0], "complex_intersection_same_branch_search_distance_long");
  sub_5C8A4(a2, (uint64_t)v177, (uint64_t *)(a1 + 392));
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20E1380;
  strcpy(v177[0], "retain_keep_followed_by_normal_turn_distance");
  sub_5C8A4(a2, (uint64_t)v177, (uint64_t *)(a1 + 400));
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v177[1] = xmmword_20B8E90;
  strcpy(v177[0], "better_entrance_angle_tolerance");
  unsigned int v76 = sub_58070(a2, (uint64_t)v177);
  if (v76 && *((_DWORD *)v76 + 12) == 1)
  {
    *(_WORD *)(a1 + 408) = (int)*((double *)v76 + 5);
    if (SHIBYTE(v177[2]) < 0) {
      goto LABEL_276;
    }
  }
  else
  {
    *(_WORD *)(a1 + 408) = *(_WORD *)(a1 + 408);
    if (SHIBYTE(v177[2]) < 0) {
LABEL_276:
    }
      operator delete(v177[0]);
  }
  HIBYTE(v177[2]) = 20;
  strcpy((char *)v177, "max_roundabout_exits");
  int v77 = sub_58070(a2, (uint64_t)v177);
  if (v77 && *((_DWORD *)v77 + 12) == 1)
  {
    *(unsigned char *)(a1 + 410) = (int)*((double *)v77 + 5);
    if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
      goto LABEL_283;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 410) = *(unsigned char *)(a1 + 410);
    if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
      goto LABEL_283;
    }
  }
  operator delete(v177[0]);
LABEL_283:
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B93A0;
  strcpy(v177[0], "roundabout_max_exploration_distance");
  sub_5C8A4(a2, (uint64_t)v177, (uint64_t *)(a1 + 416));
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x19uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9250;
  strcpy(v177[0], "roundabout_min_distance");
  sub_5C8A4(a2, (uint64_t)v177, (uint64_t *)(a1 + 424));
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x38uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9A20;
  strcpy(v177[0], "max_exploration_distance_to_reach_turbo_roundabout");
  sub_5C8A4(a2, (uint64_t)v177, (uint64_t *)(a1 + 432));
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9240;
  strcpy(v177[0], "continue_before_maneuver_min_distance");
  sub_5C8A4(a2, (uint64_t)v177, (uint64_t *)(a1 + 440));
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20B93B0;
  strcpy(v177[0], "lookahead_distance_for_swallow_mini_maneuvers");
  sub_5C8A4(a2, (uint64_t)v177, (uint64_t *)(a1 + 456));
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B93A0;
  strcpy(v177[0], "max_distance_for_mergeable_maneuver");
  sub_5C8A4(a2, (uint64_t)v177, (uint64_t *)(a1 + 464));
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B8FD0;
  strcpy(v177[0], "continue_after_maneuver_min_distance");
  sub_5C8A4(a2, (uint64_t)v177, (uint64_t *)(a1 + 448));
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9A40;
  strcpy(v177[0], "use_internal_distance_in_combine_maneuvers");
  uint64_t v78 = sub_58070(a2, (uint64_t)v177);
  if (v78 && (int v79 = *((_DWORD *)v78 + 12), (v79 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)(a1 + 472) = v79 == 4;
    if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
      goto LABEL_303;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 472) = *(unsigned char *)(a1 + 472) != 0;
    if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
      goto LABEL_303;
    }
  }
  operator delete(v177[0]);
LABEL_303:
  v177[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9800;
  strcpy(v177[0], "simple_roundabout_max_distance");
  sub_5C8A4(a2, (uint64_t)v177, (uint64_t *)(a1 + 480));
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v177[1] = xmmword_20B8890;
  strcpy(v177[0], "large_roundabout_min_distance");
  sub_5C8A4(a2, (uint64_t)v177, (uint64_t *)(a1 + 488));
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B8FD0;
  strcpy(v177[0], "simple_roundabout_max_previous_exits");
  unsigned __int16 v80 = sub_58070(a2, (uint64_t)v177);
  if (v80 && *((_DWORD *)v80 + 12) == 1)
  {
    *(unsigned char *)(a1 + 496) = (int)*((double *)v80 + 5);
    if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
      goto LABEL_313;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 496) = *(unsigned char *)(a1 + 496);
    if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
      goto LABEL_313;
    }
  }
  operator delete(v177[0]);
LABEL_313:
  HIBYTE(v177[2]) = 20;
  strcpy((char *)v177, "use_special_guidance");
  *(unsigned char *)(a1 + 497) = sub_29D62C(a2, (uint64_t)v177);
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9960;
  strcpy(v177[0], "use_vendor_intersection_internal_always");
  *(unsigned char *)(a1 + 498) = sub_29D62C(a2, (uint64_t)v177);
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9A40;
  strcpy(v177[0], "use_vendor_intersection_internal_when_true");
  *(unsigned char *)(a1 + 499) = sub_29D62C(a2, (uint64_t)v177);
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x38uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9AC0;
  strcpy(v177[0], "enable_additional_vendor_intersection_internal_types");
  *(unsigned char *)(a1 + 500) = sub_29D62C(a2, (uint64_t)v177);
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x38uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9AC0;
  strcpy(v177[0], "min_display_class_to_ignore_for_roundabout_exit_road");
  unsigned __int16 v81 = sub_58070(a2, (uint64_t)v177);
  if (v81 && *((_DWORD *)v81 + 12) == 1)
  {
    *(_DWORD *)(a1 + 504) = *((double *)v81 + 5);
    if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
      goto LABEL_327;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 504) = *(_DWORD *)(a1 + 504);
    if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
      goto LABEL_327;
    }
  }
  operator delete(v177[0]);
LABEL_327:
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9280;
  strcpy(v177[0], "enable_simple_roundabout_detection");
  *(unsigned char *)(a1 + 508) = sub_29D62C(a2, (uint64_t)v177);
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v177[1] = xmmword_20B5EB0;
  strcpy(v177[0], "simplify_large_roundabouts");
  *(unsigned char *)(a1 + 509) = sub_29D62C(a2, (uint64_t)v177);
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  strcpy((char *)v177, "enable_follow_maneuver");
  HIBYTE(v177[2]) = 22;
  *(unsigned char *)(a1 + 510) = sub_29D62C(a2, (uint64_t)v177);
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v177[1] = xmmword_20B8E90;
  strcpy(v177[0], "enable_ramped_pathway_maneuvers");
  *(unsigned char *)(a1 + 511) = sub_29D62C(a2, (uint64_t)v177);
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20E1380;
  strcpy(v177[0], "combine_stairs_brunnel_maneuver_min_distance");
  sub_5C8A4(a2, (uint64_t)v177, (uint64_t *)(a1 + 512));
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v177[1] = xmmword_20B91B0;
  strcpy(v177[0], "intersection_internal_length");
  sub_5C8A4(a2, (uint64_t)v177, (uint64_t *)(a1 + 520));
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v177[1] = xmmword_20B5EB0;
  strcpy(v177[0], "enable_crosswalk_maneuvers");
  int v82 = sub_58070(a2, (uint64_t)v177);
  if (v82 && (int v83 = *((_DWORD *)v82 + 12), (v83 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)(a1 + 528) = v83 == 4;
    if (SHIBYTE(v177[2]) < 0) {
      goto LABEL_344;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 528) = *(unsigned char *)(a1 + 528) != 0;
    if (SHIBYTE(v177[2]) < 0) {
LABEL_344:
    }
      operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9A40;
  strcpy(v177[0], "moderate_curve_segment_deviation_threshold");
  uint64_t v84 = sub_58070(a2, (uint64_t)v177);
  if (v84 && *((_DWORD *)v84 + 12) == 1)
  {
    *(_DWORD *)(a1 + 532) = *((double *)v84 + 5);
    if (SHIBYTE(v177[2]) < 0) {
      goto LABEL_350;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 532) = *(_DWORD *)(a1 + 532);
    if (SHIBYTE(v177[2]) < 0) {
LABEL_350:
    }
      operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20E12D0;
  strcpy(v177[0], "high_curve_segment_deviation_threshold");
  unsigned int v85 = sub_58070(a2, (uint64_t)v177);
  if (v85 && *((_DWORD *)v85 + 12) == 1)
  {
    *(_DWORD *)(a1 + 536) = *((double *)v85 + 5);
    if (SHIBYTE(v177[2]) < 0) {
      goto LABEL_356;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 536) = *(_DWORD *)(a1 + 536);
    if (SHIBYTE(v177[2]) < 0) {
LABEL_356:
    }
      operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20B93C0;
  strcpy(v177[0], "consider_dual_carriageways_as_crosswalks");
  unsigned int v86 = sub_58070(a2, (uint64_t)v177);
  if (v86 && (int v87 = *((_DWORD *)v86 + 12), (v87 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)(a1 + 529) = v87 == 4;
    if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
      goto LABEL_363;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 529) = *(unsigned char *)(a1 + 529) != 0;
    if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
      goto LABEL_363;
    }
  }
  operator delete(v177[0]);
LABEL_363:
  v177[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v177[1] = xmmword_20B8870;
  strcpy(v177[0], "inferred_xwalk_max_length");
  sub_5C8A4(a2, (uint64_t)v177, (uint64_t *)(a1 + 544));
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9960;
  strcpy(v177[0], "complex_intersection_traversal_distance");
  sub_5C8A4(a2, (uint64_t)v177, (uint64_t *)(a1 + 552));
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B93A0;
  strcpy(v177[0], "complex_intersection_straight_angle");
  unsigned int v88 = sub_58070(a2, (uint64_t)v177);
  if (v88 && *((_DWORD *)v88 + 12) == 1)
  {
    *(_WORD *)(a1 + 560) = (int)*((double *)v88 + 5);
    if (SHIBYTE(v177[2]) < 0) {
      goto LABEL_372;
    }
  }
  else
  {
    *(_WORD *)(a1 + 560) = *(_WORD *)(a1 + 560);
    if (SHIBYTE(v177[2]) < 0) {
LABEL_372:
    }
      operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9800;
  strcpy(v177[0], "suppress_maneuvers_through_ota");
  unsigned int v89 = sub_58070(a2, (uint64_t)v177);
  if (v89 && (int v90 = *((_DWORD *)v89 + 12), (v90 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)(a1 + 562) = v90 == 4;
    if (SHIBYTE(v177[2]) < 0) {
      goto LABEL_378;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 562) = *(unsigned char *)(a1 + 562) != 0;
    if (SHIBYTE(v177[2]) < 0) {
LABEL_378:
    }
      operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9280;
  strcpy(v177[0], "suppress_maneuvers_through_parking");
  __int16 v91 = sub_58070(a2, (uint64_t)v177);
  if (v91 && (int v92 = *((_DWORD *)v91 + 12), (v92 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)(a1 + 563) = v92 == 4;
    if (SHIBYTE(v177[2]) < 0) {
      goto LABEL_384;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 563) = *(unsigned char *)(a1 + 563) != 0;
    if (SHIBYTE(v177[2]) < 0) {
LABEL_384:
    }
      operator delete(v177[0]);
  }
  HIBYTE(v177[2]) = 21;
  strcpy((char *)v177, "freeway_display_class");
  uint64_t v93 = sub_58070(a2, (uint64_t)v177);
  if (v93 && *((_DWORD *)v93 + 12) == 1)
  {
    *(_DWORD *)(a1 + 568) = *((double *)v93 + 5);
    if (SHIBYTE(v177[2]) < 0) {
      goto LABEL_390;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 568) = *(_DWORD *)(a1 + 568);
    if (SHIBYTE(v177[2]) < 0) {
LABEL_390:
    }
      operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v177[1] = xmmword_20B5EB0;
  strcpy(v177[0], "walking_only_display_class");
  unsigned int v94 = sub_58070(a2, (uint64_t)v177);
  if (v94 && *((_DWORD *)v94 + 12) == 1)
  {
    *(_DWORD *)(a1 + 572) = *((double *)v94 + 5);
    if (SHIBYTE(v177[2]) < 0) {
      goto LABEL_396;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 572) = *(_DWORD *)(a1 + 572);
    if (SHIBYTE(v177[2]) < 0) {
LABEL_396:
    }
      operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9800;
  strcpy(v177[0], "junction_based_angle_threshold");
  unsigned int v95 = sub_58070(a2, (uint64_t)v177);
  if (v95 && *((_DWORD *)v95 + 12) == 1)
  {
    *(_WORD *)(a1 + 564) = (int)*((double *)v95 + 5);
    if (SHIBYTE(v177[2]) < 0) {
      goto LABEL_402;
    }
  }
  else
  {
    *(_WORD *)(a1 + 564) = *(_WORD *)(a1 + 564);
    if (SHIBYTE(v177[2]) < 0) {
LABEL_402:
    }
      operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v177[1] = xmmword_20B91C0;
  strcpy(v177[0], "junction_angles_min_diff");
  long long v96 = sub_58070(a2, (uint64_t)v177);
  if (v96 && *((_DWORD *)v96 + 12) == 1)
  {
    *(_WORD *)(a1 + 566) = (int)*((double *)v96 + 5);
    if (SHIBYTE(v177[2]) < 0) {
      goto LABEL_408;
    }
  }
  else
  {
    *(_WORD *)(a1 + 566) = *(_WORD *)(a1 + 566);
    if (SHIBYTE(v177[2]) < 0) {
LABEL_408:
    }
      operator delete(v177[0]);
  }
  HIBYTE(v177[2]) = 19;
  strcpy((char *)v177, "icon_straight_angle");
  long long v97 = sub_58070(a2, (uint64_t)v177);
  long long v98 = (void *)(a1 + 592);
  if (v97)
  {
    long long v98 = v97 + 5;
    if (*((_DWORD *)v97 + 12) != 1) {
      long long v98 = (void *)(a1 + 592);
    }
  }
  *(void *)(a1 + 592) = *v98;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  HIBYTE(v177[2]) = 20;
  strcpy((char *)v177, "icon_keep_left_angle");
  long long v99 = sub_58070(a2, (uint64_t)v177);
  long long v100 = (void *)(a1 + 600);
  if (v99)
  {
    long long v100 = v99 + 5;
    if (*((_DWORD *)v99 + 12) != 1) {
      long long v100 = (void *)(a1 + 600);
    }
  }
  *(void *)(a1 + 600) = *v100;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  strcpy((char *)v177, "icon_slight_left_angle");
  HIBYTE(v177[2]) = 22;
  long long v101 = sub_58070(a2, (uint64_t)v177);
  long long v102 = (void *)(a1 + 608);
  if (v101)
  {
    long long v102 = v101 + 5;
    if (*((_DWORD *)v101 + 12) != 1) {
      long long v102 = (void *)(a1 + 608);
    }
  }
  *(void *)(a1 + 608) = *v102;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  HIBYTE(v177[2]) = 15;
  strcpy((char *)v177, "icon_left_angle");
  uint64_t v103 = sub_58070(a2, (uint64_t)v177);
  long long v104 = (void *)(a1 + 616);
  if (v103)
  {
    long long v104 = v103 + 5;
    if (*((_DWORD *)v103 + 12) != 1) {
      long long v104 = (void *)(a1 + 616);
    }
  }
  *(void *)(a1 + 616) = *v104;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  HIBYTE(v177[2]) = 21;
  strcpy((char *)v177, "icon_sharp_left_angle");
  long long v105 = sub_58070(a2, (uint64_t)v177);
  uint64_t v106 = (void *)(a1 + 624);
  if (v105)
  {
    uint64_t v106 = v105 + 5;
    if (*((_DWORD *)v105 + 12) != 1) {
      uint64_t v106 = (void *)(a1 + 624);
    }
  }
  *(void *)(a1 + 624) = *v106;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  HIBYTE(v177[2]) = 21;
  strcpy((char *)v177, "icon_keep_right_angle");
  long long v107 = sub_58070(a2, (uint64_t)v177);
  long long v108 = (void *)(a1 + 632);
  if (v107)
  {
    long long v108 = v107 + 5;
    if (*((_DWORD *)v107 + 12) != 1) {
      long long v108 = (void *)(a1 + 632);
    }
  }
  *(void *)(a1 + 632) = *v108;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x19uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9250;
  strcpy(v177[0], "icon_slight_right_angle");
  uint64_t v109 = sub_58070(a2, (uint64_t)v177);
  int v110 = (void *)(a1 + 640);
  if (v109)
  {
    int v110 = v109 + 5;
    if (*((_DWORD *)v109 + 12) != 1) {
      int v110 = (void *)(a1 + 640);
    }
  }
  *(void *)(a1 + 640) = *v110;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  HIBYTE(v177[2]) = 16;
  strcpy((char *)v177, "icon_right_angle");
  uint64_t v111 = sub_58070(a2, (uint64_t)v177);
  long long v112 = (void *)(a1 + 648);
  if (v111)
  {
    long long v112 = v111 + 5;
    if (*((_DWORD *)v111 + 12) != 1) {
      long long v112 = (void *)(a1 + 648);
    }
  }
  *(void *)(a1 + 648) = *v112;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  strcpy((char *)v177, "icon_sharp_right_angle");
  HIBYTE(v177[2]) = 22;
  int v113 = sub_58070(a2, (uint64_t)v177);
  unsigned int v114 = (void *)(a1 + 656);
  if (v113)
  {
    unsigned int v114 = v113 + 5;
    if (*((_DWORD *)v113 + 12) != 1) {
      unsigned int v114 = (void *)(a1 + 656);
    }
  }
  *(void *)(a1 + 656) = *v114;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v177[1] = xmmword_20B8870;
  strcpy(v177[0], "roundabout_fallback_angle");
  unsigned int v115 = sub_58070(a2, (uint64_t)v177);
  int v116 = (void *)(a1 + 664);
  if (v115)
  {
    int v116 = v115 + 5;
    if (*((_DWORD *)v115 + 12) != 1) {
      int v116 = (void *)(a1 + 664);
    }
  }
  *(void *)(a1 + 664) = *v116;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9390;
  strcpy(v177[0], "enable_junction_angle_comparison");
  int v117 = sub_58070(a2, (uint64_t)v177);
  if (v117 && (int v118 = *((_DWORD *)v117 + 12), (v118 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)(a1 + 673) = v118 == 4;
    if (SHIBYTE(v177[2]) < 0) {
      goto LABEL_464;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 673) = *(unsigned char *)(a1 + 673) != 0;
    if (SHIBYTE(v177[2]) < 0) {
LABEL_464:
    }
      operator delete(v177[0]);
  }
  strcpy((char *)v177, "enable_multiple_aheads");
  HIBYTE(v177[2]) = 22;
  unsigned int v119 = sub_58070(a2, (uint64_t)v177);
  if (v119 && (int v120 = *((_DWORD *)v119 + 12), (v120 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)(a1 + 674) = v120 == 4;
    if (SHIBYTE(v177[2]) < 0) {
      goto LABEL_470;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 674) = *(unsigned char *)(a1 + 674) != 0;
    if (SHIBYTE(v177[2]) < 0) {
LABEL_470:
    }
      operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20E1380;
  strcpy(v177[0], "enable_straight_through_complex_intersection");
  int v121 = sub_58070(a2, (uint64_t)v177);
  if (v121 && (int v122 = *((_DWORD *)v121 + 12), (v122 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)(a1 + 675) = v122 == 4;
    if (SHIBYTE(v177[2]) < 0) {
      goto LABEL_476;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 675) = *(unsigned char *)(a1 + 675) != 0;
    if (SHIBYTE(v177[2]) < 0) {
LABEL_476:
    }
      operator delete(v177[0]);
  }
  HIBYTE(v177[2]) = 21;
  strcpy((char *)v177, "arrive_left_min_angle");
  int v123 = sub_58070(a2, (uint64_t)v177);
  uint64_t v124 = (void *)(a1 + 720);
  if (v123)
  {
    uint64_t v124 = v123 + 5;
    if (*((_DWORD *)v123 + 12) != 1) {
      uint64_t v124 = (void *)(a1 + 720);
    }
  }
  *(void *)(a1 + 720) = *v124;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  HIBYTE(v177[2]) = 21;
  strcpy((char *)v177, "arrive_left_max_angle");
  unint64_t v125 = sub_58070(a2, (uint64_t)v177);
  double v126 = (void *)(a1 + 728);
  if (v125)
  {
    double v126 = v125 + 5;
    if (*((_DWORD *)v125 + 12) != 1) {
      double v126 = (void *)(a1 + 728);
    }
  }
  *(void *)(a1 + 728) = *v126;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  strcpy((char *)v177, "arrive_right_min_angle");
  HIBYTE(v177[2]) = 22;
  BOOL v127 = sub_58070(a2, (uint64_t)v177);
  unsigned int v128 = (void *)(a1 + 736);
  if (v127)
  {
    unsigned int v128 = v127 + 5;
    if (*((_DWORD *)v127 + 12) != 1) {
      unsigned int v128 = (void *)(a1 + 736);
    }
  }
  *(void *)(a1 + 736) = *v128;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  strcpy((char *)v177, "arrive_right_max_angle");
  HIBYTE(v177[2]) = 22;
  uint64_t v129 = sub_58070(a2, (uint64_t)v177);
  unsigned int v130 = (void *)(a1 + 744);
  if (v129)
  {
    unsigned int v130 = v129 + 5;
    if (*((_DWORD *)v129 + 12) != 1) {
      unsigned int v130 = (void *)(a1 + 744);
    }
  }
  *(void *)(a1 + 744) = *v130;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x38uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9AD0;
  strcpy(v177[0], "min_sided_arrive_distance_from_destination_center_point");
  sub_5C8A4(a2, (uint64_t)v177, (uint64_t *)(a1 + 704));
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20E12D0;
  strcpy(v177[0], "ends_on_closest_road_advisory_distance");
  sub_5C8A4(a2, (uint64_t)v177, (uint64_t *)(a1 + 712));
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9280;
  strcpy(v177[0], "max_turn_angle_for_ped_transitions");
  int v131 = sub_58070(a2, (uint64_t)v177);
  unsigned int v132 = (void *)(a1 + 880);
  if (v131)
  {
    unsigned int v132 = v131 + 5;
    if (*((_DWORD *)v131 + 12) != 1) {
      unsigned int v132 = (void *)(a1 + 880);
    }
  }
  *(void *)(a1 + 880) = *v132;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20B93D0;
  strcpy(v177[0], "max_perpendicular_distance_for_best_ahead");
  uint64_t v133 = sub_58070(a2, (uint64_t)v177);
  uint64_t v134 = (void *)(a1 + 888);
  if (v133)
  {
    uint64_t v134 = v133 + 5;
    if (*((_DWORD *)v133 + 12) != 1) {
      uint64_t v134 = (void *)(a1 + 888);
    }
  }
  *(void *)(a1 + 888) = *v134;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v177[1] = xmmword_20B91B0;
  strcpy(v177[0], "announce_ped_fow_transitions");
  uint64_t v135 = sub_58070(a2, (uint64_t)v177);
  if (v135 && (int v136 = *((_DWORD *)v135 + 12), (v136 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)(a1 + 876) = v136 == 4;
    if (SHIBYTE(v177[2]) < 0) {
      goto LABEL_516;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 876) = *(unsigned char *)(a1 + 876) != 0;
    if (SHIBYTE(v177[2]) < 0) {
LABEL_516:
    }
      operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x38uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9A10;
  strcpy(v177[0], "include_non_traversable_segments_to_outbound_list");
  int v137 = sub_58070(a2, (uint64_t)v177);
  if (v137 && (int v138 = *((_DWORD *)v137 + 12), (v138 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)(a1 + 896) = v138 == 4;
    if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
      goto LABEL_523;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 896) = *(unsigned char *)(a1 + 896) != 0;
    if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
      goto LABEL_523;
    }
  }
  operator delete(v177[0]);
LABEL_523:
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20B93C0;
  strcpy(v177[0], "allow_routing_internal_intersection_flag");
  *(unsigned char *)(a1 + 676) = sub_29D62C(a2, (uint64_t)v177);
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20B93E0;
  strcpy(v177[0], "enable_dual_carriageway_transition_internal");
  *(unsigned char *)(a1 + 677) = sub_29D62C(a2, (uint64_t)v177);
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B93A0;
  strcpy(v177[0], "no_turn_for_single_outbound_segment");
  *(unsigned char *)(a1 + 678) = sub_29D62C(a2, (uint64_t)v177);
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v177[1] = xmmword_20B5EB0;
  strcpy(v177[0], "enable_two_stage_maneuvers");
  *(unsigned char *)(a1 + 576) = sub_29D62C(a2, (uint64_t)v177);
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20E12D0;
  strcpy(v177[0], "two_stage_min_num_non_connecting_lanes");
  *(unsigned char *)(a1 + 577) = sub_31AB44(a2, (uint64_t)v177);
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  HIBYTE(v177[2]) = 18;
  strcpy((char *)v177, "min_observed_speed");
  *(double *)(a1 + 584) = sub_5C7E8(a2, (uint64_t)v177) * 1.609344;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v177[1] = xmmword_20B8E90;
  strcpy(v177[0], "enable_continue_on_infra_change");
  *(unsigned char *)(a1 + 679) = sub_29D62C(a2, (uint64_t)v177);
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9A40;
  strcpy(v177[0], "compare_names_for_contact_angle_comparison");
  *(unsigned char *)(a1 + 680) = sub_29D62C(a2, (uint64_t)v177);
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20E1380;
  strcpy(v177[0], "enable_mode_transition_intersection_internal");
  *(unsigned char *)(a1 + 681) = sub_29D62C(a2, (uint64_t)v177);
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x38uLL);
  *(_OWORD *)&v177[1] = xmmword_20B99F0;
  strcpy(v177[0], "enable_mode_transition_internal_crosswalk_connected");
  *(unsigned char *)(a1 + 682) = sub_29D62C(a2, (uint64_t)v177);
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9280;
  strcpy(v177[0], "mode_transition_segment_max_length");
  sub_5C8A4(a2, (uint64_t)v177, (uint64_t *)(a1 + 688));
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B8FD0;
  strcpy(v177[0], "mode_transition_connecting_max_angle");
  uint64_t v139 = sub_58070(a2, (uint64_t)v177);
  unint64_t v140 = (void *)(a1 + 696);
  if (v139)
  {
    unint64_t v140 = v139 + 5;
    if (*((_DWORD *)v139 + 12) != 1) {
      unint64_t v140 = (void *)(a1 + 696);
    }
  }
  *(void *)(a1 + 696) = *v140;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  HIBYTE(v177[2]) = 19;
  strcpy((char *)v177, "drivable_lane_width");
  double v141 = sub_5C7E8(a2, (uint64_t)v177) * 100.0;
  if (v141 >= 0.0)
  {
    double v142 = v141;
    if (v141 >= 4.50359963e15) {
      goto LABEL_558;
    }
    uint64_t v143 = (uint64_t)(v141 + v141) + 1;
  }
  else
  {
    double v142 = v141;
    if (v141 <= -4.50359963e15) {
      goto LABEL_558;
    }
    uint64_t v143 = (uint64_t)(v141 + v141);
    if (v143 >= 1) {
      --v143;
    }
  }
  double v142 = (double)(v143 >> 1);
LABEL_558:
  if (v142 < 9.22337204e18)
  {
    if (v141 >= 0.0)
    {
      if (v141 >= 4.50359963e15) {
        goto LABEL_569;
      }
      uint64_t v144 = (uint64_t)(v141 + v141) + 1;
    }
    else
    {
      if (v141 <= -4.50359963e15) {
        goto LABEL_569;
      }
      uint64_t v144 = (uint64_t)(v141 + v141);
      if (v144 >= 1) {
        --v144;
      }
    }
    double v141 = (double)(v144 >> 1);
LABEL_569:
    *(void *)(a1 + 752) = (uint64_t)v141;
    if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
      goto LABEL_571;
    }
    goto LABEL_570;
  }
  *(void *)(a1 + 752) = 0x7FFFFFFFFFFFFFFELL;
  if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
    goto LABEL_571;
  }
LABEL_570:
  operator delete(v177[0]);
LABEL_571:
  HIBYTE(v177[2]) = 18;
  strcpy((char *)v177, "bicycle_lane_width");
  double v145 = sub_5C7E8(a2, (uint64_t)v177) * 100.0;
  if (v145 >= 0.0)
  {
    double v146 = v145;
    if (v145 >= 4.50359963e15) {
      goto LABEL_579;
    }
    uint64_t v147 = (uint64_t)(v145 + v145) + 1;
  }
  else
  {
    double v146 = v145;
    if (v145 <= -4.50359963e15) {
      goto LABEL_579;
    }
    uint64_t v147 = (uint64_t)(v145 + v145);
    if (v147 >= 1) {
      --v147;
    }
  }
  double v146 = (double)(v147 >> 1);
LABEL_579:
  if (v146 < 9.22337204e18)
  {
    if (v145 >= 0.0)
    {
      if (v145 >= 4.50359963e15) {
        goto LABEL_590;
      }
      uint64_t v148 = (uint64_t)(v145 + v145) + 1;
    }
    else
    {
      if (v145 <= -4.50359963e15) {
        goto LABEL_590;
      }
      uint64_t v148 = (uint64_t)(v145 + v145);
      if (v148 >= 1) {
        --v148;
      }
    }
    double v145 = (double)(v148 >> 1);
LABEL_590:
    *(void *)(a1 + 760) = (uint64_t)v145;
    if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
      goto LABEL_592;
    }
    goto LABEL_591;
  }
  *(void *)(a1 + 760) = 0x7FFFFFFFFFFFFFFELL;
  if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
    goto LABEL_592;
  }
LABEL_591:
  operator delete(v177[0]);
LABEL_592:
  v177[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v177[1] = xmmword_20B91B0;
  strcpy(v177[0], "sidewalk_internal_max_length");
  double v149 = sub_5C7E8(a2, (uint64_t)v177) * 100.0;
  if (v149 >= 0.0)
  {
    double v150 = v149;
    if (v149 >= 4.50359963e15) {
      goto LABEL_600;
    }
    uint64_t v151 = (uint64_t)(v149 + v149) + 1;
  }
  else
  {
    double v150 = v149;
    if (v149 <= -4.50359963e15) {
      goto LABEL_600;
    }
    uint64_t v151 = (uint64_t)(v149 + v149);
    if (v151 >= 1) {
      --v151;
    }
  }
  double v150 = (double)(v151 >> 1);
LABEL_600:
  if (v150 < 9.22337204e18)
  {
    if (v149 >= 0.0)
    {
      if (v149 >= 4.50359963e15) {
        goto LABEL_611;
      }
      uint64_t v152 = (uint64_t)(v149 + v149) + 1;
    }
    else
    {
      if (v149 <= -4.50359963e15) {
        goto LABEL_611;
      }
      uint64_t v152 = (uint64_t)(v149 + v149);
      if (v152 >= 1) {
        --v152;
      }
    }
    double v149 = (double)(v152 >> 1);
LABEL_611:
    *(void *)(a1 + 768) = (uint64_t)v149;
    if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
      goto LABEL_613;
    }
    goto LABEL_612;
  }
  *(void *)(a1 + 768) = 0x7FFFFFFFFFFFFFFELL;
  if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
    goto LABEL_613;
  }
LABEL_612:
  operator delete(v177[0]);
LABEL_613:
  v177[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v177[1] = xmmword_20B91A0;
  strcpy(v177[0], "pathway_internal_max_length");
  double v153 = sub_5C7E8(a2, (uint64_t)v177) * 100.0;
  if (v153 >= 0.0)
  {
    double v154 = v153;
    if (v153 >= 4.50359963e15) {
      goto LABEL_621;
    }
    uint64_t v155 = (uint64_t)(v153 + v153) + 1;
  }
  else
  {
    double v154 = v153;
    if (v153 <= -4.50359963e15) {
      goto LABEL_621;
    }
    uint64_t v155 = (uint64_t)(v153 + v153);
    if (v155 >= 1) {
      --v155;
    }
  }
  double v154 = (double)(v155 >> 1);
LABEL_621:
  if (v154 < 9.22337204e18)
  {
    if (v153 >= 0.0)
    {
      if (v153 >= 4.50359963e15) {
        goto LABEL_632;
      }
      uint64_t v156 = (uint64_t)(v153 + v153) + 1;
    }
    else
    {
      if (v153 <= -4.50359963e15) {
        goto LABEL_632;
      }
      uint64_t v156 = (uint64_t)(v153 + v153);
      if (v156 >= 1) {
        --v156;
      }
    }
    double v153 = (double)(v156 >> 1);
LABEL_632:
    *(void *)(a1 + 776) = (uint64_t)v153;
    if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
      goto LABEL_634;
    }
    goto LABEL_633;
  }
  *(void *)(a1 + 776) = 0x7FFFFFFFFFFFFFFELL;
  if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
    goto LABEL_634;
  }
LABEL_633:
  operator delete(v177[0]);
LABEL_634:
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B93A0;
  strcpy(v177[0], "always_include_non_dual_carriageway");
  *(unsigned char *)(a1 + 784) = sub_29D62C(a2, (uint64_t)v177);
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20B93B0;
  strcpy(v177[0], "min_sharp_angle_for_junction_based_comparison");
  *(double *)(a1 + 792) = sub_5C7E8(a2, (uint64_t)v177);
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9240;
  strcpy(v177[0], "cross_continue_minimum_junction_angle");
  *(double *)(a1 + 800) = sub_5C7E8(a2, (uint64_t)v177);
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20B93B0;
  strcpy(v177[0], "min_length_non_straight_intermediate_segments");
  double v157 = sub_5C7E8(a2, (uint64_t)v177) * 100.0;
  if (v157 >= 0.0)
  {
    double v158 = v157;
    if (v157 >= 4.50359963e15) {
      goto LABEL_648;
    }
    uint64_t v159 = (uint64_t)(v157 + v157) + 1;
  }
  else
  {
    double v158 = v157;
    if (v157 <= -4.50359963e15) {
      goto LABEL_648;
    }
    uint64_t v159 = (uint64_t)(v157 + v157);
    if (v159 >= 1) {
      --v159;
    }
  }
  double v158 = (double)(v159 >> 1);
LABEL_648:
  if (v158 >= 9.22337204e18)
  {
    *(void *)(a1 + 816) = 0x7FFFFFFFFFFFFFFELL;
    if (SHIBYTE(v177[2]) < 0) {
      goto LABEL_660;
    }
    goto LABEL_661;
  }
  if (v157 >= 0.0)
  {
    if (v157 >= 4.50359963e15) {
      goto LABEL_659;
    }
    uint64_t v160 = (uint64_t)(v157 + v157) + 1;
  }
  else
  {
    if (v157 <= -4.50359963e15) {
      goto LABEL_659;
    }
    uint64_t v160 = (uint64_t)(v157 + v157);
    if (v160 >= 1) {
      --v160;
    }
  }
  double v157 = (double)(v160 >> 1);
LABEL_659:
  *(void *)(a1 + 816) = (uint64_t)v157;
  if (SHIBYTE(v177[2]) < 0) {
LABEL_660:
  }
    operator delete(v177[0]);
LABEL_661:
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20B93C0;
  strcpy(v177[0], "check_different_street_side_for_crossing");
  v161 = sub_58070(a2, (uint64_t)v177);
  if (v161 && (int v162 = *((_DWORD *)v161 + 12), (v162 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)(a1 + 824) = v162 == 4;
    if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
      goto LABEL_667;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 824) = *(unsigned char *)(a1 + 824) != 0;
    if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
      goto LABEL_667;
    }
  }
  operator delete(v177[0]);
LABEL_667:
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9960;
  strcpy(v177[0], "min_announce_ahead_gap_different_name_m");
  *(void *)(a1 + 832) = sub_5CDE0(a2, v177);
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9260;
  strcpy(v177[0], "min_announce_ahead_gap_fallback_m");
  *(void *)(a1 + 840) = sub_5CDE0(a2, v177);
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9260;
  strcpy(v177[0], "min_announce_ahead_gap_turn_angle");
  *(double *)(a1 + 848) = sub_5C7E8(a2, (uint64_t)v177);
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x38uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9A10;
  strcpy(v177[0], "enable_adding_segment_connected_to_internal_chain");
  *(unsigned char *)(a1 + 856) = sub_29D62C(a2, (uint64_t)v177);
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B8FD0;
  strcpy(v177[0], "connected_segments_search_distance_m");
  *(void *)(a1 + 864) = sub_5CDE0(a2, v177);
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9A40;
  strcpy(v177[0], "suppress_silent_through_familiar_maneuvers");
  *(unsigned char *)(a1 + 872) = sub_29D62C(a2, (uint64_t)v177);
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20B93D0;
  strcpy(v177[0], "needs_highway_junction_maneuver_treatment");
  *(unsigned char *)(a1 + 873) = sub_29D62C(a2, (uint64_t)v177);
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B8FD0;
  strcpy(v177[0], "enable_bike_path_transition_guidance");
  *(unsigned char *)(a1 + 874) = sub_29D62C(a2, (uint64_t)v177);
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20B93E0;
  strcpy(v177[0], "announce_mini_roundabout_continue_maneuvers");
  *(unsigned char *)(a1 + 875) = sub_29D62C(a2, (uint64_t)v177);
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v177[1] = xmmword_20B8E90;
  strcpy(v177[0], "max_length_crosswalk_connectors");
  sub_5C8A4(a2, (uint64_t)v177, (uint64_t *)(a1 + 904));
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9280;
  strcpy(v177[0], "min_distance_for_crossing_maneuver");
  sub_5C8A4(a2, (uint64_t)v177, (uint64_t *)(a1 + 808));
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9390;
  strcpy(v177[0], "enable_railway_shuttle_maneuvers");
  *(unsigned char *)(a1 + 912) = sub_29D62C(a2, (uint64_t)v177);
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9240;
  strcpy(v177[0], "check_for_wide_angled_ambiguous_forks");
  *(unsigned char *)(a1 + 913) = sub_29D62C(a2, (uint64_t)v177);
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v177[1] = xmmword_20B8E90;
  strcpy(v177[0], "significant_deviation_threshold");
  uint64_t v163 = sub_58070(a2, (uint64_t)v177);
  unint64_t v164 = (void *)(a1 + 920);
  if (v163)
  {
    unint64_t v164 = v163 + 5;
    if (*((_DWORD *)v163 + 12) != 1) {
      unint64_t v164 = (void *)(a1 + 920);
    }
  }
  *(void *)(a1 + 920) = *v164;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B93A0;
  strcpy(v177[0], "max_distance_to_force_contact_angle");
  sub_5C8A4(a2, (uint64_t)v177, (uint64_t *)(a1 + 936));
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B93A0;
  strcpy(v177[0], "min_distance_to_force_contact_angle");
  sub_5C8A4(a2, (uint64_t)v177, (uint64_t *)(a1 + 928));
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9390;
  strcpy(v177[0], "min_turn_angle_to_force_maneuver");
  unint64_t v165 = sub_58070(a2, (uint64_t)v177);
  uint64_t v166 = (void *)(a1 + 944);
  if (v165)
  {
    uint64_t v166 = v165 + 5;
    if (*((_DWORD *)v165 + 12) != 1) {
      uint64_t v166 = (void *)(a1 + 944);
    }
  }
  *(void *)(a1 + 944) = *v166;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20B93E0;
  strcpy(v177[0], "max_lane_count_difference_to_force_maneuver");
  int v167 = sub_58070(a2, (uint64_t)v177);
  if (v167 && *((_DWORD *)v167 + 12) == 1)
  {
    *(unsigned char *)(a1 + 952) = (int)*((double *)v167 + 5);
    if (SHIBYTE(v177[2]) < 0) {
      goto LABEL_712;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 952) = *(unsigned char *)(a1 + 952);
    if (SHIBYTE(v177[2]) < 0) {
LABEL_712:
    }
      operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9A80;
  strcpy(v177[0], "max_display_class_difference_to_force_maneuver");
  v168 = sub_58070(a2, (uint64_t)v177);
  if (v168 && *((_DWORD *)v168 + 12) == 1)
  {
    *(unsigned char *)(a1 + 953) = (int)*((double *)v168 + 5);
    if (SHIBYTE(v177[2]) < 0) {
      goto LABEL_718;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 953) = *(unsigned char *)(a1 + 953);
    if (SHIBYTE(v177[2]) < 0) {
LABEL_718:
    }
      operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20B93E0;
  strcpy(v177[0], "max_turn_angle_difference_to_force_maneuver");
  v169 = sub_58070(a2, (uint64_t)v177);
  uint64_t v170 = (void *)(a1 + 960);
  if (v169)
  {
    uint64_t v170 = v169 + 5;
    if (*((_DWORD *)v169 + 12) != 1) {
      uint64_t v170 = (void *)(a1 + 960);
    }
  }
  *(void *)(a1 + 960) = *v170;
  if (SHIBYTE(v177[2]) < 0) {
    operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9A80;
  strcpy(v177[0], "min_display_class_difference_to_announce_ahead");
  uint64_t v171 = sub_58070(a2, (uint64_t)v177);
  if (v171 && *((_DWORD *)v171 + 12) == 1)
  {
    *(unsigned char *)(a1 + 968) = (int)*((double *)v171 + 5);
    if (SHIBYTE(v177[2]) < 0) {
      goto LABEL_729;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 968) = *(unsigned char *)(a1 + 968);
    if (SHIBYTE(v177[2]) < 0) {
LABEL_729:
    }
      operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v177[1] = xmmword_20B93E0;
  strcpy(v177[0], "min_lane_count_difference_to_announce_ahead");
  uint64_t v172 = sub_58070(a2, (uint64_t)v177);
  if (v172 && *((_DWORD *)v172 + 12) == 1)
  {
    *(unsigned char *)(a1 + 969) = (int)*((double *)v172 + 5);
    if (SHIBYTE(v177[2]) < 0) {
      goto LABEL_735;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 969) = *(unsigned char *)(a1 + 969);
    if (SHIBYTE(v177[2]) < 0) {
LABEL_735:
    }
      operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x40uLL);
  *(_OWORD *)&v177[1] = xmmword_20B9A30;
  strcpy(v177[0], "should_announce_ahead_aggressively_for_freeway_name_change");
  uint64_t v173 = sub_58070(a2, (uint64_t)v177);
  if (v173 && (int v174 = *((_DWORD *)v173 + 12), (v174 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)(a1 + 970) = v174 == 4;
    if (SHIBYTE(v177[2]) < 0) {
      goto LABEL_741;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 970) = *(unsigned char *)(a1 + 970) != 0;
    if (SHIBYTE(v177[2]) < 0) {
LABEL_741:
    }
      operator delete(v177[0]);
  }
  v177[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v177[1] = xmmword_20B91B0;
  strcpy(v177[0], "enable_turn_around_maneuvers");
  double v175 = sub_58070(a2, (uint64_t)v177);
  if (v175)
  {
    int v176 = *((_DWORD *)v175 + 12);
    if ((v176 & 0xFFFFFFFE) == 4)
    {
      *(unsigned char *)(a1 + 971) = v176 == 4;
      if ((SHIBYTE(v177[2]) & 0x80000000) == 0) {
        return;
      }
      goto LABEL_745;
    }
  }
  *(unsigned char *)(a1 + 971) = *(unsigned char *)(a1 + 971) != 0;
  if (SHIBYTE(v177[2]) < 0) {
LABEL_745:
  }
    operator delete(v177[0]);
}

void sub_6EB014(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 - 41) < 0) {
    operator delete(*(void **)(v1 - 64));
  }
  _Unwind_Resume(exception_object);
}

void sub_6EB064(_Unwind_Exception *a1)
{
  if (*(char *)(v1 - 41) < 0)
  {
    operator delete(*(void **)(v1 - 64));
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x6EB05CLL);
}

BOOL sub_6EB9D4(uint64_t a1)
{
  return *(unsigned char *)(a1 + 498) || *(unsigned char *)(a1 + 499) != 0;
}

void sub_6EB9F4()
{
  unk_25A077F = 16641;
  word_25A0768 = 65;
  byte_25A0797 = 1;
  byte_25A0781 = 0;
  byte_25A07AF = 8;
  strcpy((char *)&qword_25A0798, "any_mode");
  byte_25A07C7 = 7;
  strcpy((char *)&dword_25A07B0, "cycling");
  byte_25A07DF = 7;
  strcpy((char *)&dword_25A07C8, "driving");
  byte_25A07F7 = 7;
  strcpy((char *)&dword_25A07E0, "walking");
}

uint64_t sub_6EBAA0(uint64_t a1, void *a2)
{
  uint64_t v14 = 0;
  uint64_t v15 = operator new(0x28uLL);
  long long v16 = xmmword_20B93A0;
  strcpy((char *)v15, "ManeuverPedestrianPropertiesBuilder");
  long long v12 = 0;
  unsigned int v13 = 0;
  unint64_t v4 = sub_374CDC((uint64_t)a2, (uint64_t)&v15, (uint64_t *)&v12);
  sub_3CB2F0(v4, (uint64_t)__p);
  sub_6EC6AC(a1, __p);
  char v5 = v18;
  if (v18)
  {
    do
    {
      uint64_t v10 = *(char **)v5;
      sub_57AC8((uint64_t *)v5 + 5);
      if (v5[39] < 0) {
        operator delete(*((void **)v5 + 2));
      }
      operator delete(v5);
      char v5 = v10;
    }
    while (v10);
  }
  unsigned int v6 = __p[0];
  __p[0] = 0;
  if (v6) {
    operator delete(v6);
  }
  BOOL v7 = (void **)v12;
  if (v12)
  {
    int64x2_t v8 = v13;
    BOOL v9 = v12;
    if (v13 != v12)
    {
      do
      {
        if (*((char *)v8 - 1) < 0) {
          operator delete(*(v8 - 3));
        }
        v8 -= 3;
      }
      while (v8 != v7);
      BOOL v9 = v12;
    }
    unsigned int v13 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v16) < 0) {
    operator delete(v15);
  }
  *(void *)(a1 + 48) = sub_3750CC(a2);
  return a1;
}

void sub_6EBBE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_6EBC1C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  sub_6EBD24(a1, a2, a3, a3 + ((uint64_t)(*(void *)(a4 + 8) - *(void *)a4) >> 3) - 1, *(_DWORD *)(a4 + 24), (uint64_t)v9);
  if (*(void *)v9 == -1
    && (v6.i64[0] = -1,
        v6.i64[1] = -1,
        (vmaxv_u16((uint16x4_t)vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)&v9[8], v6), (int32x4_t)vceqq_s64(*(int64x2_t *)&v9[24], v6))))) & 1) == 0))
  {
    if (*(void *)&v10[0] == -1) {
      return;
    }
    if (!*(_DWORD *)(a4 + 24)) {
      goto LABEL_4;
    }
  }
  else if (!*(_DWORD *)(a4 + 24))
  {
LABEL_4:
    if (!*(unsigned char *)(a4 + 189))
    {
      *(_DWORD *)(a4 + 24) = 3;
      *(void *)(a4 + 176) = 0;
    }
  }
  if (sub_6EC34C(a1, a4))
  {
    long long v7 = *(_OWORD *)v9;
    *(_OWORD *)(a4 + 88) = *(_OWORD *)&v9[16];
    long long v8 = v10[0];
    *(_OWORD *)(a4 + 104) = *(_OWORD *)&v9[32];
    *(_OWORD *)(a4 + 120) = v8;
    *(_OWORD *)(a4 + 132) = *(_OWORD *)((char *)v10 + 12);
    *(_OWORD *)(a4 + 72) = v7;
  }
  sub_6EC4C0(a1, a4);
}

uint64_t sub_6EBD24@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  unint64_t v7 = a3;
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(sub_46C8EC(a2, a3) + 32);
  unsigned int v13 = (int *)sub_2D5D58(v11, v12 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v11 + 7772)) {
    sub_2DB8E0(v11 + 3896, v12, 0);
  }
  sub_2E5C38(v11, v12 & 0xFFFFFFFFFFFFLL, 1);
  uint64_t v14 = *(void *)(a1 + 48);
  uint64_t v15 = *(void *)(sub_46C8EC(a2, a4) + 32);
  long long v16 = (int *)sub_2D5D58(v14, v15 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v14 + 7772)) {
    sub_2DB8E0(v14 + 3896, v15, 0);
  }
  uint64_t result = sub_2E5C38(v14, v15 & 0xFFFFFFFFFFFFLL, 1);
  unint64_t v70 = a4;
  if (*(unsigned char *)a1 || *(unsigned char *)(a1 + 1) || *(unsigned char *)(a1 + 2))
  {
    uint64_t result = sub_6ECA5C(a1, a2, v7, v18);
    if ((result & 1) == 0)
    {
      uint64_t result = sub_6ECBB4(a1, a2, v7, a4);
      LODWORD(v7) = result;
      unint64_t v19 = -1;
      uint64_t v21 = v20;
      uint64_t v72 = -1;
      uint64_t v73 = -1;
      uint64_t v71 = -1;
      switch((int)result)
      {
        case 0:
          goto LABEL_15;
        case 1:
          goto LABEL_14;
        case 2:
          uint64_t v21 = -1;
          unint64_t v19 = v20;
          goto LABEL_14;
        case 3:
          unint64_t v19 = v20;
          unint64_t v7 = HIDWORD(result);
          uint64_t v72 = -1;
          uint64_t v73 = -1;
          uint64_t v71 = v20;
          if (!*(unsigned char *)(a1 + 3)) {
            goto LABEL_38;
          }
          goto LABEL_16;
        default:
          uint64_t v21 = -1;
LABEL_14:
          uint64_t v72 = v21;
          uint64_t v73 = v19;
          uint64_t v71 = -1;
          unint64_t v19 = v20;
          unint64_t v7 = HIDWORD(result);
LABEL_15:
          if (*(unsigned char *)(a1 + 3)) {
            goto LABEL_16;
          }
          goto LABEL_38;
      }
    }
  }
  LODWORD(v7) = 0;
  unint64_t v19 = -1;
  uint64_t v72 = -1;
  uint64_t v73 = -1;
  uint64_t v71 = -1;
  if (!*(unsigned char *)(a1 + 3))
  {
LABEL_38:
    unint64_t v33 = -1;
    if (!*(unsigned char *)(a1 + 4)) {
      goto LABEL_65;
    }
    goto LABEL_50;
  }
LABEL_16:
  uint64_t v22 = (unsigned __int16 *)((char *)v13 - *v13);
  unsigned int v23 = *v22;
  if (v23 >= 0xB && v22[5] && (*((unsigned char *)v13 + v22[5] + 1) & 4) != 0)
  {
    if (v23 < 0x2F) {
      goto LABEL_38;
    }
    uint64_t v24 = v22[23];
    if (!v24) {
      goto LABEL_38;
    }
    unsigned int v25 = *((unsigned __int8 *)v13 + v24);
    BOOL v26 = v25 > 0x2A;
    uint64_t v27 = (1 << v25) & 0x50426810004;
    if (v26 || v27 == 0) {
      goto LABEL_38;
    }
  }
  uint64_t v29 = (unsigned __int16 *)((char *)v16 - *v16);
  unsigned int v30 = *v29;
  if (v30 >= 0x2F && v29[23] && *((unsigned char *)v16 + v29[23]) == 9)
  {
    if ((v15 & 0xFF000000000000) != 0)
    {
      if (v30 < 0x73) {
        goto LABEL_40;
      }
      unsigned int v31 = v29[57];
      if (!v31) {
        goto LABEL_40;
      }
      int v32 = 1;
    }
    else
    {
      if (v30 < 0x73) {
        goto LABEL_40;
      }
      unsigned int v31 = v29[57];
      if (!v31) {
        goto LABEL_40;
      }
      int v32 = 2;
    }
    if (*((unsigned __int8 *)v16 + v31) == v32) {
      goto LABEL_38;
    }
  }
LABEL_40:
  uint64_t v34 = *(void *)(a1 + 8);
  uint64_t result = sub_6EF6F0(a1, a2, v70);
  if (result < v34) {
    unint64_t v33 = -1;
  }
  else {
    unint64_t v33 = v35;
  }
  unint64_t v74 = v33;
  unint64_t v75 = v19;
  if (v19 == -1)
  {
    unint64_t v19 = v74;
    if (!*(unsigned char *)(a1 + 4)) {
      goto LABEL_65;
    }
  }
  else
  {
    unsigned __int16 v36 = &v75;
    if (v33 != -1 && v19 < v33) {
      unsigned __int16 v36 = &v74;
    }
    unint64_t v19 = *v36;
    if (!*(unsigned char *)(a1 + 4))
    {
LABEL_65:
      unint64_t v43 = -1;
      if (!*(unsigned char *)(a1 + 3)) {
        goto LABEL_81;
      }
      goto LABEL_66;
    }
  }
LABEL_50:
  long long v37 = (unsigned __int16 *)((char *)v13 - *v13);
  if (*v37 >= 0x2Fu)
  {
    uint64_t v38 = v37[23];
    if (v38)
    {
      if (*((unsigned char *)v13 + v38) == 51) {
        goto LABEL_65;
      }
    }
  }
  long long v39 = (unsigned __int16 *)((char *)v16 - *v16);
  if (*v39 < 0x2Fu) {
    goto LABEL_65;
  }
  uint64_t v40 = v39[23];
  if (!v40 || *((unsigned char *)v16 + v40) != 51) {
    goto LABEL_65;
  }
  uint64_t v41 = *(void *)(a1 + 16);
  uint64_t result = sub_6EF850(a1, a2, v70);
  if (result < v41) {
    unint64_t v43 = -1;
  }
  else {
    unint64_t v43 = v42;
  }
  unint64_t v74 = v43;
  unint64_t v75 = v19;
  if (v19 == -1)
  {
    unint64_t v19 = v74;
    if (!*(unsigned char *)(a1 + 3)) {
      goto LABEL_81;
    }
  }
  else
  {
    unsigned int v44 = &v75;
    if (v43 != -1 && v19 < v43) {
      unsigned int v44 = &v74;
    }
    unint64_t v19 = *v44;
    if (!*(unsigned char *)(a1 + 3))
    {
LABEL_81:
      unint64_t v49 = -1;
      int v51 = a5;
      uint64_t v52 = -1;
      if ((a5 - 6) < 2) {
        goto LABEL_99;
      }
      goto LABEL_82;
    }
  }
LABEL_66:
  unsigned int v45 = (unsigned __int16 *)((char *)v13 - *v13);
  if (*v45 >= 0xBu)
  {
    uint64_t v46 = v45[5];
    if (v46)
    {
      if ((*((unsigned char *)v13 + v46 + 1) & 8) != 0) {
        goto LABEL_81;
      }
    }
  }
  uint64_t v47 = *(void *)(a1 + 8);
  uint64_t result = sub_6EF970(a1, a2, v70);
  if (result < v47) {
    unint64_t v49 = -1;
  }
  else {
    unint64_t v49 = v48;
  }
  unint64_t v74 = v49;
  unint64_t v75 = v19;
  if (v19 == -1)
  {
    int v51 = a5;
    unint64_t v19 = v74;
    uint64_t v52 = -1;
    if ((a5 - 6) < 2) {
      goto LABEL_99;
    }
    goto LABEL_82;
  }
  unsigned int v50 = &v75;
  if (v49 != -1 && v19 < v49) {
    unsigned int v50 = &v74;
  }
  int v51 = a5;
  unint64_t v19 = *v50;
  uint64_t v52 = -1;
  if ((a5 - 6) >= 2)
  {
LABEL_82:
    if ((v51 - 86) >= 2)
    {
      if ((v51 - 41) < 0x13) {
        goto LABEL_98;
      }
      unsigned __int16 v53 = (unsigned __int16 *)((char *)v13 - *v13);
      if (*v53 >= 0x2Fu)
      {
        uint64_t v54 = v53[23];
        if (v54)
        {
          unsigned int v55 = *((unsigned __int8 *)v13 + v54);
          BOOL v26 = v55 > 0x36;
          uint64_t v56 = (1 << v55) & 0x44000000000008;
          if (!v26 && v56 != 0) {
            goto LABEL_98;
          }
        }
      }
      if ((long long v58 = (unsigned __int16 *)((char *)v16 - *v16), *v58 < 0x2Fu)
        || (uint64_t v59 = v58[23]) == 0
        || ((v60 = *((unsigned __int8 *)v16 + v59), BOOL v26 = v60 > 0x36, v61 = (1 << v60) & 0x44000000000008, !v26)
          ? (BOOL v62 = v61 == 0)
          : (BOOL v62 = 1),
            v62))
      {
LABEL_98:
        uint64_t v52 = -1;
      }
      else
      {
        uint64_t v52 = v70;
      }
    }
  }
LABEL_99:
  if (v71 == -1
    && v43 == -1
    && v72 == -1
    && v33 == -1
    && v49 == -1
    && v52 == -1
    && v73 == -1
    && ((unsigned __int16 v63 = (unsigned __int16 *)((char *)v16 - *v16), *v63 < 0x2Fu)
     || (uint64_t v64 = v63[23]) == 0
     || ((v65 = *((unsigned __int8 *)v16 + v64), BOOL v26 = v65 > 0x36, v66 = (1 << v65) & 0x44000000000008, !v26)
       ? (BOOL v67 = v66 == 0)
       : (BOOL v67 = 1),
         v67)))
  {
    *(void *)(a6 + 48) = -1;
    *(void *)&long long v68 = -1;
    *((void *)&v68 + 1) = -1;
    *(_OWORD *)(a6 + 16) = v68;
    *(_OWORD *)(a6 + 32) = v68;
    *(_OWORD *)a6 = v68;
    *(_DWORD *)(a6 + 56) = 0;
    *(void *)(a6 + 64) = -1;
  }
  else
  {
    *(void *)a6 = v71;
    *(void *)(a6 + 8) = v43;
    *(void *)(a6 + 16) = v72;
    *(void *)(a6 + 24) = v33;
    *(void *)(a6 + 32) = v49;
    *(void *)(a6 + 40) = v52;
    *(void *)(a6 + 48) = v73;
    *(_DWORD *)(a6 + 56) = v7;
    *(void *)(a6 + 64) = v19;
  }
  *(_DWORD *)(a6 + 72) = 0;
  return result;
}

BOOL sub_6EC34C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(*(void *)(a2 + 8) - 8);
  char v5 = (int *)sub_2D5D58(v3, v4 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v3 + 7772)) {
    sub_2DB8E0(v3 + 3896, v4, 0);
  }
  sub_2E5C38(v3, v4 & 0xFFFFFFFFFFFFLL, 1);
  int64x2_t v6 = (unsigned __int16 *)((char *)v5 - *v5);
  unsigned int v7 = *v6;
  if (v7 < 0xB) {
    return 0;
  }
  if (v6[5])
  {
    if (v7 < 0x39 || (*(int *)((char *)v5 + v6[5]) & 3) != 0) {
      return 0;
    }
  }
  else if (v7 < 0x39)
  {
    return 0;
  }
  if (!v6[28]) {
    return 0;
  }
  int v9 = *(int *)((char *)v5 + v6[28]);
  BOOL v10 = (v9 & 0x23) != 0x20 && (v9 & 3) == 0;
  if (v10 && (v9 & 7) != 4) {
    return 0;
  }
  if (v7 >= 0x47)
  {
    uint64_t v12 = v6[35];
    if (v12)
    {
      if ((*((unsigned char *)v5 + v12) & 3) != 0) {
        return 0;
      }
    }
  }
  unsigned int v13 = *(_DWORD *)(a2 + 24);
  if (v13 - 6 >= 2 && v13 - 86 >= 2)
  {
    if (v13 - 41 < 0x13) {
      return 0;
    }
  }
  else if (v13 < 0x56)
  {
    return 0;
  }
  if (v13 - 4 >= 0x20 || ((0x805C0001 >> (v13 - 4)) & 1) == 0) {
    return v13 - 94 < 0xFFFFFFFD;
  }
  return 0;
}

void sub_6EC4C0(uint64_t a1, uint64_t a2)
{
  v2.i64[0] = *(void *)(a2 + 88);
  v2.i64[1] = *(void *)(a2 + 120);
  v3.i64[0] = -1;
  v3.i64[1] = -1;
  if ((vmaxv_u16((uint16x4_t)vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqq_s64((int64x2_t)vextq_s8(*(int8x16_t *)(a2 + 72), *(int8x16_t *)(a2 + 72), 8uLL), v3), (int32x4_t)vceqq_s64(v2, v3))))) & 1) != 0|| (*(void *)(a2 + 96) == -1 ? (BOOL v4 = *(void *)(a2 + 104) == -1) : (BOOL v4 = 0), !v4))
  {
    int v5 = 1;
    switch(*(_DWORD *)(a2 + 24))
    {
      case 1:
      case 0x14:
      case 0x1B:
      case 0x1D:
      case 0x21:
      case 0x3C:
      case 0x3E:
      case 0x41:
      case 0x56:
        goto LABEL_10;
      case 2:
      case 0x15:
      case 0x1C:
      case 0x1E:
      case 0x22:
      case 0x3D:
      case 0x3F:
      case 0x42:
      case 0x57:
        int v5 = 2;
LABEL_10:
        *(_DWORD *)(a2 + 24) = v5;
        break;
      default:
        return;
    }
  }
}

uint64_t sub_6EC6AC(uint64_t a1, void *a2)
{
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B5EB0;
  strcpy((char *)__p[0], "enable_escalator_maneuvers");
  BOOL v4 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(unsigned char *)a1 = v4;
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B8E90;
  strcpy((char *)__p[0], "enable_ramped_pathway_maneuvers");
  BOOL v5 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(unsigned char *)(a1 + 1) = v5;
  __p[0] = operator new(0x19uLL);
  *(_OWORD *)&__p[1] = xmmword_20B9250;
  strcpy((char *)__p[0], "enable_stairs_maneuvers");
  BOOL v6 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(unsigned char *)(a1 + 2) = v6;
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B91C0;
  strcpy((char *)__p[0], "enable_brunnel_maneuvers");
  BOOL v7 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(unsigned char *)(a1 + 3) = v7;
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B8870;
  strcpy((char *)__p[0], "enable_elevator_maneuvers");
  BOOL v8 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(unsigned char *)(a1 + 4) = v8;
  HIBYTE(__p[2]) = 20;
  strcpy((char *)__p, "brunnel_min_length_m");
  *(void *)(a1 + 8) = sub_5CDE0(a2, __p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  HIBYTE(__p[2]) = 21;
  strcpy((char *)__p, "elevator_min_length_m");
  *(void *)(a1 + 16) = sub_5CDE0(a2, __p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  strcpy((char *)__p, "escalator_min_length_m");
  HIBYTE(__p[2]) = 22;
  *(void *)(a1 + 24) = sub_5CDE0(a2, __p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B9800;
  strcpy((char *)__p[0], "intersection_internal_length_m");
  *(void *)(a1 + 32) = sub_5CDE0(a2, __p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  HIBYTE(__p[2]) = 19;
  strcpy((char *)__p, "stairs_min_length_m");
  *(void *)(a1 + 40) = sub_5CDE0(a2, __p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  return a1;
}

void sub_6ECA1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_6ECA5C(uint64_t a1, void *a2, unint64_t a3, double a4)
{
  uint64_t v7 = sub_46CCC8(a2, a3, a4);
  BOOL result = 0;
  if (!a3 || v7 > *(void *)(a1 + 32)) {
    return result;
  }
  if (sub_46C760(a2) - 1 == a3) {
    return 0;
  }
  int v9 = (void *)sub_46C8EC(a2, a3 - 1);
  BOOL v10 = (void *)sub_46C8EC(a2, a3 + 1);
  uint64_t v11 = (unsigned __int16 *)(*v9 - *(int *)*v9);
  if (*v11 < 0x2Fu || !v11[23]) {
    return 0;
  }
  int v12 = *(unsigned __int8 *)(*v9 + v11[23]);
  if (v12 != 9)
  {
    if (*(unsigned char *)(a1 + 1) && v12 != 20)
    {
      if (v12 != 43) {
        return 0;
      }
      goto LABEL_14;
    }
    if (v12 != 20) {
      return 0;
    }
  }
LABEL_14:
  unsigned int v13 = (unsigned __int16 *)(*v10 - *(int *)*v10);
  if (*v13 < 0x2Fu) {
    return 0;
  }
  uint64_t v14 = v13[23];
  if (!v14) {
    return 0;
  }
  int v15 = *(unsigned __int8 *)(*v10 + v14);
  if (v15 == 9) {
    return 1;
  }
  if (v15 == 20 || *(unsigned char *)(a1 + 1) == 0) {
    int v17 = 20;
  }
  else {
    int v17 = 43;
  }
  return v15 == v17;
}

uint64_t sub_6ECBB4(uint64_t a1, void *a2, uint64_t a3, unint64_t a4)
{
  BOOL v5 = a2;
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(sub_46C8EC(a2, a3) + 32);
  int v9 = (int *)sub_2D5D58(v7, v8 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v7 + 7772))
  {
    BOOL v10 = sub_2DB8E0(v7 + 3896, v8, 0);
    uint64_t v11 = &v10[-*(int *)v10];
    if (*(unsigned __int16 *)v11 < 5u)
    {
      uint64_t v12 = 0;
    }
    else
    {
      uint64_t v12 = *((unsigned __int16 *)v11 + 2);
      if (v12) {
        v12 += (uint64_t)&v10[*(unsigned int *)&v10[v12]];
      }
    }
    uint64_t v13 = v12 + 4 * WORD2(v8) + 4 + *(unsigned int *)(v12 + 4 * WORD2(v8) + 4);
  }
  else
  {
    uint64_t v13 = 0;
  }
  v65[0] = v9;
  v65[1] = v13;
  v65[2] = sub_2E5C38(v7, v8 & 0xFFFFFFFFFFFFLL, 1);
  v65[3] = v14;
  int v66 = v8;
  __int16 v67 = WORD2(v8);
  BOOL v68 = (v8 & 0xFF000000000000) != 0;
  if (*(unsigned char *)(a1 + 1))
  {
    int v15 = (unsigned __int16 *)((char *)v9 - *v9);
    v17 = *v15 >= 0x2Fu && (uint64_t v16 = v15[23]) != 0 && *((unsigned char *)v9 + v16) == 43;
  }
  else
  {
    BOOL v17 = 1;
  }
  unint64_t v18 = a3 + 1;
  unint64_t v19 = sub_46C760(v5);
  if (a3 + 1 > v19) {
    unint64_t v20 = a3 + 1;
  }
  else {
    unint64_t v20 = v19;
  }
  unint64_t v59 = v20;
  if (v18 >= v19) {
    return 0;
  }
  char v56 = v17;
  unint64_t v21 = 0;
  unint64_t v22 = 0;
  long long v57 = v5;
  uint64_t v58 = 0;
  do
  {
    unsigned int v25 = (char **)sub_46C8EC(v5, v18);
    uint64_t v27 = *v25;
    char v28 = &(*v25)[-*(int *)*v25];
    unsigned int v29 = *(unsigned __int16 *)v28;
    if (v18 < a4)
    {
      if (v29 < 0x2F) {
        goto LABEL_23;
      }
      uint64_t v30 = *((unsigned __int16 *)v28 + 23);
      if (!v30) {
        goto LABEL_23;
      }
      int v31 = v27[v30];
      if (v31 != 9)
      {
        BOOL v32 = v31 == 20;
        char v33 = v56;
        if (v31 == 20) {
          char v33 = 1;
        }
        if ((v33 & 1) == 0) {
          BOOL v32 = v31 == 43;
        }
        if (!v32) {
          goto LABEL_23;
        }
      }
      goto LABEL_44;
    }
    if (v29 < 0x2F) {
      goto LABEL_63;
    }
    uint64_t v34 = *((unsigned __int16 *)v28 + 23);
    if (!v34) {
      goto LABEL_63;
    }
    int v35 = v27[v34];
    if (v35 != 9)
    {
      BOOL v36 = v35 == 20;
      char v37 = v56;
      if (v35 == 20) {
        char v37 = 1;
      }
      if ((v37 & 1) == 0) {
        BOOL v36 = v35 == 43;
      }
      if (!v36)
      {
LABEL_63:
        if (!sub_6ECA5C(a1, v5, v18, v26)) {
          break;
        }
      }
    }
LABEL_44:
    uint64_t v38 = *(void *)(a1 + 48);
    unint64_t v39 = (unint64_t)v25[4];
    uint64_t v40 = (int *)sub_2D5D58(v38, v39 & 0xFFFFFFFFFFFFLL);
    if (*(unsigned char *)(v38 + 7772))
    {
      uint64_t v41 = sub_2DB8E0(v38 + 3896, v39, 0);
      unint64_t v42 = &v41[-*(int *)v41];
      unint64_t v43 = v21;
      if (*(unsigned __int16 *)v42 < 5u)
      {
        uint64_t v44 = 0;
      }
      else
      {
        uint64_t v44 = *((unsigned __int16 *)v42 + 2);
        if (v44) {
          v44 += (uint64_t)&v41[*(unsigned int *)&v41[v44]];
        }
      }
      unsigned int v45 = (int *)(v44 + 4 * WORD2(v39) + 4 + *(unsigned int *)(v44 + 4 * WORD2(v39) + 4));
    }
    else
    {
      unint64_t v43 = v21;
      unsigned int v45 = 0;
    }
    uint64_t v46 = (int *)sub_2E5C38(v38, v39 & 0xFFFFFFFFFFFFLL, 1);
    v61[0] = v40;
    v61[1] = v45;
    v61[2] = v46;
    v61[3] = v47;
    int v62 = v39;
    __int16 v63 = WORD2(v39);
    BOOL v64 = (v39 & 0xFF000000000000) != 0;
    unint64_t v21 = v43;
    unint64_t v48 = sub_6ECF7C((unsigned char *)a1, v65, v61, v22, v43);
    unint64_t v50 = v48;
    if (v48)
    {
      unint64_t v21 = HIDWORD(v48);
      BOOL v5 = v57;
      uint64_t v23 = sub_46CCC8(v57, v18, v49);
      uint64_t v24 = v58;
      if (v22 != v50) {
        uint64_t v24 = 0;
      }
      uint64_t v58 = v23 + v24;
    }
    else
    {
      unint64_t v50 = v22;
      BOOL v5 = v57;
    }
    unint64_t v22 = v50;
LABEL_23:
    ++v18;
  }
  while (v59 != v18);
  if (v22 != 1)
  {
    if ((v22 & 0xFFFFFFFE) == 2)
    {
      BOOL v51 = v58 < *(void *)(a1 + 40);
      unint64_t v52 = v21;
      uint64_t v53 = v22;
      goto LABEL_57;
    }
    return 0;
  }
  BOOL v51 = v58 < *(void *)(a1 + 24);
  unint64_t v52 = v21;
  uint64_t v53 = 1;
LABEL_57:
  uint64_t v54 = v53 | (v52 << 32);
  if (v51) {
    return 0;
  }
  else {
    return v54;
  }
}

unint64_t sub_6ECF7C(unsigned char *a1, void *a2, int **a3, unsigned int a4, int a5)
{
  if (*a1)
  {
    BOOL v5 = (unsigned __int16 *)(*a2 - *(int *)*a2);
    if (*v5 >= 0x2Fu && (uint64_t v6 = v5[23]) != 0)
    {
      BOOL v7 = *(unsigned __int8 *)(*a2 + v6) != 20;
      if (!a1[1])
      {
LABEL_26:
        BOOL v10 = 0;
        if (!a1[2]) {
          goto LABEL_27;
        }
        goto LABEL_12;
      }
    }
    else
    {
      BOOL v7 = 1;
      if (!a1[1]) {
        goto LABEL_26;
      }
    }
  }
  else
  {
    BOOL v7 = 0;
    if (!a1[1]) {
      goto LABEL_26;
    }
  }
  uint64_t v8 = (unsigned __int16 *)(*a2 - *(int *)*a2);
  if (*v8 >= 0x2Fu && (uint64_t v9 = v8[23]) != 0)
  {
    BOOL v10 = *(unsigned __int8 *)(*a2 + v9) != 43;
    if (!a1[2])
    {
LABEL_27:
      BOOL v13 = 0;
      char v21 = !v7;
      if (a4 != 1) {
        char v21 = 1;
      }
      if (v21) {
        goto LABEL_30;
      }
LABEL_21:
      uint64_t v16 = *a3;
      uint64_t v17 = **a3;
      unint64_t v18 = (unsigned __int16 *)((char *)*a3 - v17);
      unsigned int v19 = *v18;
      if (v19 >= 0x2F)
      {
        uint64_t v20 = v18[23];
        if (v20)
        {
          if (*((unsigned char *)v16 + v20) == 20) {
            goto LABEL_43;
          }
        }
      }
      goto LABEL_49;
    }
  }
  else
  {
    BOOL v10 = 1;
    if (!a1[2]) {
      goto LABEL_27;
    }
  }
LABEL_12:
  uint64_t v11 = (unsigned __int16 *)(*a2 - *(int *)*a2);
  if (*v11 >= 0x2Fu && (uint64_t v12 = v11[23]) != 0)
  {
    BOOL v13 = *(unsigned __int8 *)(*a2 + v12) != 9;
    char v14 = !v7;
    if (a4 != 1) {
      char v14 = 1;
    }
    if ((v14 & 1) == 0) {
      goto LABEL_21;
    }
  }
  else
  {
    BOOL v13 = 1;
    char v15 = !v7;
    if (a4 != 1) {
      char v15 = 1;
    }
    if ((v15 & 1) == 0) {
      goto LABEL_21;
    }
  }
LABEL_30:
  char v22 = !v10;
  if (a4 != 2) {
    char v22 = 1;
  }
  if (v22)
  {
    char v25 = !v13;
    uint64_t v16 = *a3;
    if (a4 != 3) {
      char v25 = 1;
    }
    if ((v25 & 1) == 0)
    {
      uint64_t v17 = *v16;
      unsigned int v19 = *(unsigned __int16 *)((char *)v16 - v17);
      if (v19 >= 0x2F
        && *(_WORD *)((char *)v16 - v17 + 46)
        && *((unsigned char *)v16 + *(unsigned __int16 *)((char *)v16 - v17 + 46)) == 9)
      {
        goto LABEL_43;
      }
    }
LABEL_49:
    if (v7)
    {
      uint64_t v30 = *v16;
      if (*(unsigned __int16 *)((char *)v16 - v30) >= 0x2Fu
        && *(_WORD *)((char *)v16 - v30 + 46)
        && *((unsigned char *)v16 + *(unsigned __int16 *)((char *)v16 - v30 + 46)) == 20)
      {
        a4 = 1;
        int v31 = (unsigned __int16 *)((char *)v16 - v30);
        BOOL v32 = *v31 >= 0x73u;
        if (!*((unsigned char *)a3 + 38)) {
          goto LABEL_70;
        }
LABEL_76:
        if (v32)
        {
          uint64_t v37 = v31[57];
          if (v37)
          {
            if (*((unsigned char *)v16 + v37) == 2) {
              return a4 | 0x100000000;
            }
            int v38 = 1;
            return ((unint64_t)(*((unsigned __int8 *)v16 + v37) == v38) << 33) | a4;
          }
        }
        return a4;
      }
    }
    if (v10
      && (uint64_t v33 = *v16, *(unsigned __int16 *)((char *)v16 - v33) >= 0x2Fu)
      && (uint64_t v34 = *(unsigned __int16 *)((char *)v16 - v33 + 46), *(_WORD *)((char *)v16 - v33 + 46)))
    {
      uint64_t v35 = -v33;
      BOOL v36 = *((unsigned char *)v16 + v34) == 43;
      if (v36) {
        LOBYTE(v13) = 0;
      }
      if (!v13)
      {
        a4 = 2 * v36;
        int v31 = (unsigned __int16 *)((char *)v16 + v35);
        BOOL v32 = *v31 >= 0x73u;
        if (!*((unsigned char *)a3 + 38)) {
          goto LABEL_70;
        }
        goto LABEL_76;
      }
    }
    else
    {
      uint64_t v35 = -(uint64_t)*v16;
      if (!v13) {
        goto LABEL_75;
      }
    }
    if (*(unsigned __int16 *)((char *)v16 + v35) >= 0x2Fu && *(_WORD *)((char *)v16 + v35 + 46))
    {
      if (*((unsigned char *)v16 + *(unsigned __int16 *)((char *)v16 + v35 + 46)) == 9) {
        a4 = 3;
      }
      else {
        a4 = 0;
      }
      int v31 = (unsigned __int16 *)((char *)v16 + v35);
      BOOL v32 = *v31 >= 0x73u;
      if (*((unsigned char *)a3 + 38)) {
        goto LABEL_76;
      }
LABEL_70:
      if (v32)
      {
        uint64_t v37 = v31[57];
        if (v37)
        {
          if (*((unsigned char *)v16 + v37) == 1) {
            return a4 | 0x100000000;
          }
          int v38 = 2;
          return ((unint64_t)(*((unsigned __int8 *)v16 + v37) == v38) << 33) | a4;
        }
      }
      return a4;
    }
LABEL_75:
    a4 = 0;
    int v31 = (unsigned __int16 *)((char *)v16 + v35);
    BOOL v32 = *v31 >= 0x73u;
    if (*((unsigned char *)a3 + 38)) {
      goto LABEL_76;
    }
    goto LABEL_70;
  }
  uint64_t v16 = *a3;
  uint64_t v17 = **a3;
  uint64_t v23 = (unsigned __int16 *)((char *)*a3 - v17);
  unsigned int v19 = *v23;
  if (v19 < 0x2F) {
    goto LABEL_49;
  }
  uint64_t v24 = v23[23];
  if (!v24 || *((unsigned char *)v16 + v24) != 43) {
    goto LABEL_49;
  }
LABEL_43:
  double v26 = (char *)v16 - v17;
  if (*((unsigned char *)a3 + 38))
  {
    if (v19 < 0x73) {
      return a4;
    }
    uint64_t v27 = *((unsigned __int16 *)v26 + 57);
    if (!*((_WORD *)v26 + 57)) {
      return a4;
    }
    int v28 = 1;
    if (a5 == 1 && *((unsigned char *)v16 + v27) == 2) {
      return a4 | 0x100000000;
    }
  }
  else
  {
    if (v19 < 0x73) {
      return a4;
    }
    uint64_t v27 = *((unsigned __int16 *)v26 + 57);
    if (!*((_WORD *)v26 + 57)) {
      return a4;
    }
    int v28 = 2;
    if (a5 == 1 && *((unsigned char *)v16 + v27) == 1) {
      return a4 | 0x100000000;
    }
  }
  if (a5 == 2 && *((unsigned __int8 *)v16 + v27) == v28) {
    return a4 | 0x200000000;
  }
  return a4;
}

uint64_t sub_6ED378(uint64_t a1, void *a2)
{
  uint64_t v14 = 0;
  char v15 = operator new(0x28uLL);
  long long v16 = xmmword_20B93A0;
  strcpy((char *)v15, "ManeuverPedestrianPropertiesBuilder");
  uint64_t v12 = 0;
  BOOL v13 = 0;
  BOOL v4 = sub_374CDC((uint64_t)a2, (uint64_t)&v15, (uint64_t *)&v12);
  sub_3CB560(v4, (uint64_t)__p);
  sub_6EDE10(a1, __p);
  BOOL v5 = v18;
  if (v18)
  {
    do
    {
      BOOL v10 = *(char **)v5;
      sub_57AC8((uint64_t *)v5 + 5);
      if (v5[39] < 0) {
        operator delete(*((void **)v5 + 2));
      }
      operator delete(v5);
      BOOL v5 = v10;
    }
    while (v10);
  }
  uint64_t v6 = __p[0];
  __p[0] = 0;
  if (v6) {
    operator delete(v6);
  }
  BOOL v7 = (void **)v12;
  if (v12)
  {
    uint64_t v8 = v13;
    uint64_t v9 = v12;
    if (v13 != v12)
    {
      do
      {
        if (*((char *)v8 - 1) < 0) {
          operator delete(*(v8 - 3));
        }
        v8 -= 3;
      }
      while (v8 != v7);
      uint64_t v9 = v12;
    }
    BOOL v13 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v16) < 0) {
    operator delete(v15);
  }
  *(void *)(a1 + 48) = sub_3750CC(a2);
  return a1;
}

void sub_6ED4BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_6ED4F4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  sub_6ED5FC(a1, a2, a3, a3 + ((uint64_t)(*(void *)(a4 + 8) - *(void *)a4) >> 3) - 1, *(_DWORD *)(a4 + 24), (uint64_t)v9);
  if (*(void *)v9 == -1
    && (v6.i64[0] = -1,
        v6.i64[1] = -1,
        (vmaxv_u16((uint16x4_t)vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)&v9[8], v6), (int32x4_t)vceqq_s64(*(int64x2_t *)&v9[24], v6))))) & 1) == 0))
  {
    if (*(void *)&v10[0] == -1) {
      return;
    }
    if (!*(_DWORD *)(a4 + 24)) {
      goto LABEL_4;
    }
  }
  else if (!*(_DWORD *)(a4 + 24))
  {
LABEL_4:
    if (!*(unsigned char *)(a4 + 189))
    {
      *(_DWORD *)(a4 + 24) = 3;
      *(void *)(a4 + 176) = 0;
    }
  }
  if (sub_6EC34C(a1, a4))
  {
    long long v7 = *(_OWORD *)v9;
    *(_OWORD *)(a4 + 88) = *(_OWORD *)&v9[16];
    long long v8 = v10[0];
    *(_OWORD *)(a4 + 104) = *(_OWORD *)&v9[32];
    *(_OWORD *)(a4 + 120) = v8;
    *(_OWORD *)(a4 + 132) = *(_OWORD *)((char *)v10 + 12);
    *(_OWORD *)(a4 + 72) = v7;
  }
  sub_6EDC24(a1, a4);
}

uint64_t sub_6ED5FC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  unint64_t v7 = a3;
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(sub_46C8EC(a2, a3) + 32);
  BOOL v13 = (int *)sub_2D5D58(v11, v12 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v11 + 7772)) {
    sub_2DB8E0(v11 + 3896, v12, 0);
  }
  sub_2E5C38(v11, v12 & 0xFFFFFFFFFFFFLL, 1);
  uint64_t v14 = *(void *)(a1 + 48);
  uint64_t v15 = *(void *)(sub_46C8EC(a2, a4) + 32);
  long long v16 = (int *)sub_2D5D58(v14, v15 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v14 + 7772)) {
    sub_2DB8E0(v14 + 3896, v15, 0);
  }
  uint64_t result = sub_2E5C38(v14, v15 & 0xFFFFFFFFFFFFLL, 1);
  unint64_t v70 = a4;
  if (*(unsigned char *)a1 || *(unsigned char *)(a1 + 1) || *(unsigned char *)(a1 + 2))
  {
    uint64_t result = sub_6ECA5C(a1, a2, v7, v18);
    if ((result & 1) == 0)
    {
      uint64_t result = sub_6ECBB4(a1, a2, v7, a4);
      LODWORD(v7) = result;
      unint64_t v19 = -1;
      uint64_t v21 = v20;
      uint64_t v72 = -1;
      uint64_t v73 = -1;
      uint64_t v71 = -1;
      switch((int)result)
      {
        case 0:
          goto LABEL_15;
        case 1:
          goto LABEL_14;
        case 2:
          uint64_t v21 = -1;
          unint64_t v19 = v20;
          goto LABEL_14;
        case 3:
          unint64_t v19 = v20;
          unint64_t v7 = HIDWORD(result);
          uint64_t v72 = -1;
          uint64_t v73 = -1;
          uint64_t v71 = v20;
          if (!*(unsigned char *)(a1 + 3)) {
            goto LABEL_38;
          }
          goto LABEL_16;
        default:
          uint64_t v21 = -1;
LABEL_14:
          uint64_t v72 = v21;
          uint64_t v73 = v19;
          uint64_t v71 = -1;
          unint64_t v19 = v20;
          unint64_t v7 = HIDWORD(result);
LABEL_15:
          if (*(unsigned char *)(a1 + 3)) {
            goto LABEL_16;
          }
          goto LABEL_38;
      }
    }
  }
  LODWORD(v7) = 0;
  unint64_t v19 = -1;
  uint64_t v72 = -1;
  uint64_t v73 = -1;
  uint64_t v71 = -1;
  if (!*(unsigned char *)(a1 + 3))
  {
LABEL_38:
    unint64_t v33 = -1;
    if (!*(unsigned char *)(a1 + 4)) {
      goto LABEL_65;
    }
    goto LABEL_50;
  }
LABEL_16:
  char v22 = (unsigned __int16 *)((char *)v13 - *v13);
  unsigned int v23 = *v22;
  if (v23 >= 0xB && v22[5] && (*((unsigned char *)v13 + v22[5] + 1) & 4) != 0)
  {
    if (v23 < 0x2F) {
      goto LABEL_38;
    }
    uint64_t v24 = v22[23];
    if (!v24) {
      goto LABEL_38;
    }
    unsigned int v25 = *((unsigned __int8 *)v13 + v24);
    BOOL v26 = v25 > 0x2A;
    uint64_t v27 = (1 << v25) & 0x50426810004;
    if (v26 || v27 == 0) {
      goto LABEL_38;
    }
  }
  unsigned int v29 = (unsigned __int16 *)((char *)v16 - *v16);
  unsigned int v30 = *v29;
  if (v30 >= 0x2F && v29[23] && *((unsigned char *)v16 + v29[23]) == 9)
  {
    if ((v15 & 0xFF000000000000) != 0)
    {
      if (v30 < 0x73) {
        goto LABEL_40;
      }
      unsigned int v31 = v29[57];
      if (!v31) {
        goto LABEL_40;
      }
      int v32 = 1;
    }
    else
    {
      if (v30 < 0x73) {
        goto LABEL_40;
      }
      unsigned int v31 = v29[57];
      if (!v31) {
        goto LABEL_40;
      }
      int v32 = 2;
    }
    if (*((unsigned __int8 *)v16 + v31) == v32) {
      goto LABEL_38;
    }
  }
LABEL_40:
  uint64_t v34 = *(void *)(a1 + 8);
  uint64_t result = sub_6EF6F0(a1, a2, v70);
  if (result < v34) {
    unint64_t v33 = -1;
  }
  else {
    unint64_t v33 = v35;
  }
  unint64_t v74 = v33;
  unint64_t v75 = v19;
  if (v19 == -1)
  {
    unint64_t v19 = v74;
    if (!*(unsigned char *)(a1 + 4)) {
      goto LABEL_65;
    }
  }
  else
  {
    BOOL v36 = &v75;
    if (v33 != -1 && v19 < v33) {
      BOOL v36 = &v74;
    }
    unint64_t v19 = *v36;
    if (!*(unsigned char *)(a1 + 4))
    {
LABEL_65:
      unint64_t v43 = -1;
      if (!*(unsigned char *)(a1 + 3)) {
        goto LABEL_81;
      }
      goto LABEL_66;
    }
  }
LABEL_50:
  uint64_t v37 = (unsigned __int16 *)((char *)v13 - *v13);
  if (*v37 >= 0x2Fu)
  {
    uint64_t v38 = v37[23];
    if (v38)
    {
      if (*((unsigned char *)v13 + v38) == 51) {
        goto LABEL_65;
      }
    }
  }
  unint64_t v39 = (unsigned __int16 *)((char *)v16 - *v16);
  if (*v39 < 0x2Fu) {
    goto LABEL_65;
  }
  uint64_t v40 = v39[23];
  if (!v40 || *((unsigned char *)v16 + v40) != 51) {
    goto LABEL_65;
  }
  uint64_t v41 = *(void *)(a1 + 16);
  uint64_t result = sub_6EF850(a1, a2, v70);
  if (result < v41) {
    unint64_t v43 = -1;
  }
  else {
    unint64_t v43 = v42;
  }
  unint64_t v74 = v43;
  unint64_t v75 = v19;
  if (v19 == -1)
  {
    unint64_t v19 = v74;
    if (!*(unsigned char *)(a1 + 3)) {
      goto LABEL_81;
    }
  }
  else
  {
    uint64_t v44 = &v75;
    if (v43 != -1 && v19 < v43) {
      uint64_t v44 = &v74;
    }
    unint64_t v19 = *v44;
    if (!*(unsigned char *)(a1 + 3))
    {
LABEL_81:
      unint64_t v49 = -1;
      int v51 = a5;
      uint64_t v52 = -1;
      if ((a5 - 6) < 2) {
        goto LABEL_99;
      }
      goto LABEL_82;
    }
  }
LABEL_66:
  unsigned int v45 = (unsigned __int16 *)((char *)v13 - *v13);
  if (*v45 >= 0xBu)
  {
    uint64_t v46 = v45[5];
    if (v46)
    {
      if ((*((unsigned char *)v13 + v46 + 1) & 8) != 0) {
        goto LABEL_81;
      }
    }
  }
  uint64_t v47 = *(void *)(a1 + 8);
  uint64_t result = sub_6EF970(a1, a2, v70);
  if (result < v47) {
    unint64_t v49 = -1;
  }
  else {
    unint64_t v49 = v48;
  }
  unint64_t v74 = v49;
  unint64_t v75 = v19;
  if (v19 == -1)
  {
    int v51 = a5;
    unint64_t v19 = v74;
    uint64_t v52 = -1;
    if ((a5 - 6) < 2) {
      goto LABEL_99;
    }
    goto LABEL_82;
  }
  unint64_t v50 = &v75;
  if (v49 != -1 && v19 < v49) {
    unint64_t v50 = &v74;
  }
  int v51 = a5;
  unint64_t v19 = *v50;
  uint64_t v52 = -1;
  if ((a5 - 6) >= 2)
  {
LABEL_82:
    if ((v51 - 86) >= 2)
    {
      if ((v51 - 41) < 0x13) {
        goto LABEL_98;
      }
      uint64_t v53 = (unsigned __int16 *)((char *)v13 - *v13);
      if (*v53 >= 0x2Fu)
      {
        uint64_t v54 = v53[23];
        if (v54)
        {
          unsigned int v55 = *((unsigned __int8 *)v13 + v54);
          BOOL v26 = v55 > 0x36;
          uint64_t v56 = (1 << v55) & 0x44000000000008;
          if (!v26 && v56 != 0) {
            goto LABEL_98;
          }
        }
      }
      if ((uint64_t v58 = (unsigned __int16 *)((char *)v16 - *v16), *v58 < 0x2Fu)
        || (uint64_t v59 = v58[23]) == 0
        || ((v60 = *((unsigned __int8 *)v16 + v59), BOOL v26 = v60 > 0x36, v61 = (1 << v60) & 0x44000000000008, !v26)
          ? (BOOL v62 = v61 == 0)
          : (BOOL v62 = 1),
            v62))
      {
LABEL_98:
        uint64_t v52 = -1;
      }
      else
      {
        uint64_t v52 = v70;
      }
    }
  }
LABEL_99:
  if (v71 == -1
    && v43 == -1
    && v72 == -1
    && v33 == -1
    && v49 == -1
    && v52 == -1
    && v73 == -1
    && ((__int16 v63 = (unsigned __int16 *)((char *)v16 - *v16), *v63 < 0x2Fu)
     || (uint64_t v64 = v63[23]) == 0
     || ((v65 = *((unsigned __int8 *)v16 + v64), BOOL v26 = v65 > 0x36, v66 = (1 << v65) & 0x44000000000008, !v26)
       ? (BOOL v67 = v66 == 0)
       : (BOOL v67 = 1),
         v67)))
  {
    *(void *)(a6 + 48) = -1;
    *(void *)&long long v68 = -1;
    *((void *)&v68 + 1) = -1;
    *(_OWORD *)(a6 + 16) = v68;
    *(_OWORD *)(a6 + 32) = v68;
    *(_OWORD *)a6 = v68;
    *(_DWORD *)(a6 + 56) = 0;
    *(void *)(a6 + 64) = -1;
  }
  else
  {
    *(void *)a6 = v71;
    *(void *)(a6 + 8) = v43;
    *(void *)(a6 + 16) = v72;
    *(void *)(a6 + 24) = v33;
    *(void *)(a6 + 32) = v49;
    *(void *)(a6 + 40) = v52;
    *(void *)(a6 + 48) = v73;
    *(_DWORD *)(a6 + 56) = v7;
    *(void *)(a6 + 64) = v19;
  }
  *(_DWORD *)(a6 + 72) = 0;
  return result;
}

void sub_6EDC24(uint64_t a1, uint64_t a2)
{
  v2.i64[0] = *(void *)(a2 + 88);
  v2.i64[1] = *(void *)(a2 + 120);
  v3.i64[0] = -1;
  v3.i64[1] = -1;
  if ((vmaxv_u16((uint16x4_t)vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqq_s64((int64x2_t)vextq_s8(*(int8x16_t *)(a2 + 72), *(int8x16_t *)(a2 + 72), 8uLL), v3), (int32x4_t)vceqq_s64(v2, v3))))) & 1) != 0|| (*(void *)(a2 + 96) == -1 ? (BOOL v4 = *(void *)(a2 + 104) == -1) : (BOOL v4 = 0), !v4))
  {
    int v5 = 1;
    switch(*(_DWORD *)(a2 + 24))
    {
      case 1:
      case 0x14:
      case 0x1B:
      case 0x1D:
      case 0x21:
      case 0x3C:
      case 0x3E:
      case 0x41:
      case 0x56:
        goto LABEL_10;
      case 2:
      case 0x15:
      case 0x1C:
      case 0x1E:
      case 0x22:
      case 0x3D:
      case 0x3F:
      case 0x42:
      case 0x57:
        int v5 = 2;
LABEL_10:
        *(_DWORD *)(a2 + 24) = v5;
        break;
      default:
        return;
    }
  }
}

uint64_t sub_6EDE10(uint64_t a1, void *a2)
{
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B5EB0;
  strcpy((char *)__p[0], "enable_escalator_maneuvers");
  BOOL v4 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(unsigned char *)a1 = v4;
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B8E90;
  strcpy((char *)__p[0], "enable_ramped_pathway_maneuvers");
  BOOL v5 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(unsigned char *)(a1 + 1) = v5;
  __p[0] = operator new(0x19uLL);
  *(_OWORD *)&__p[1] = xmmword_20B9250;
  strcpy((char *)__p[0], "enable_stairs_maneuvers");
  BOOL v6 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(unsigned char *)(a1 + 2) = v6;
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B91C0;
  strcpy((char *)__p[0], "enable_brunnel_maneuvers");
  BOOL v7 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(unsigned char *)(a1 + 3) = v7;
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B8870;
  strcpy((char *)__p[0], "enable_elevator_maneuvers");
  BOOL v8 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(unsigned char *)(a1 + 4) = v8;
  HIBYTE(__p[2]) = 20;
  strcpy((char *)__p, "brunnel_min_length_m");
  *(void *)(a1 + 8) = sub_5CDE0(a2, __p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  HIBYTE(__p[2]) = 21;
  strcpy((char *)__p, "elevator_min_length_m");
  *(void *)(a1 + 16) = sub_5CDE0(a2, __p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  strcpy((char *)__p, "escalator_min_length_m");
  HIBYTE(__p[2]) = 22;
  *(void *)(a1 + 24) = sub_5CDE0(a2, __p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B9800;
  strcpy((char *)__p[0], "intersection_internal_length_m");
  *(void *)(a1 + 32) = sub_5CDE0(a2, __p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  HIBYTE(__p[2]) = 19;
  strcpy((char *)__p, "stairs_min_length_m");
  *(void *)(a1 + 40) = sub_5CDE0(a2, __p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  return a1;
}

void sub_6EE180(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6EE1C0(uint64_t a1, void *a2)
{
  uint64_t v14 = 0;
  uint64_t v15 = operator new(0x28uLL);
  long long v16 = xmmword_20B93A0;
  strcpy((char *)v15, "ManeuverPedestrianPropertiesBuilder");
  uint64_t v12 = 0;
  BOOL v13 = 0;
  BOOL v4 = sub_374CDC((uint64_t)a2, (uint64_t)&v15, (uint64_t *)&v12);
  sub_3CB5E0(v4, (uint64_t)__p);
  sub_6EEDE8(a1, __p);
  BOOL v5 = v18;
  if (v18)
  {
    do
    {
      BOOL v10 = *(char **)v5;
      sub_57AC8((uint64_t *)v5 + 5);
      if (v5[39] < 0) {
        operator delete(*((void **)v5 + 2));
      }
      operator delete(v5);
      BOOL v5 = v10;
    }
    while (v10);
  }
  BOOL v6 = __p[0];
  __p[0] = 0;
  if (v6) {
    operator delete(v6);
  }
  BOOL v7 = (void **)v12;
  if (v12)
  {
    BOOL v8 = v13;
    uint64_t v9 = v12;
    if (v13 != v12)
    {
      do
      {
        if (*((char *)v8 - 1) < 0) {
          operator delete(*(v8 - 3));
        }
        v8 -= 3;
      }
      while (v8 != v7);
      uint64_t v9 = v12;
    }
    BOOL v13 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v16) < 0) {
    operator delete(v15);
  }
  *(void *)(a1 + 48) = sub_3750CC(a2);
  return a1;
}

void sub_6EE304(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_6EE33C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  sub_6EE4F4(a1, a2, a3, a3 + ((uint64_t)(*(void *)(a4 + 8) - *(void *)a4) >> 3) - 1, *(_DWORD *)(a4 + 24), (uint64_t)v12);
  if (*(void *)v12 != -1
    || (v6.i64[0] = -1,
        v6.i64[1] = -1,
        (vmaxv_u16((uint16x4_t)vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)&v12[8], v6), (int32x4_t)vceqq_s64(*(int64x2_t *)&v12[24], v6))))) & 1) != 0))
  {
    if (*(_DWORD *)(a4 + 24)) {
      goto LABEL_8;
    }
    goto LABEL_4;
  }
  if (*(void *)&v13[0] == -1) {
    return;
  }
  if (!*(_DWORD *)(a4 + 24))
  {
LABEL_4:
    if (!*(unsigned char *)(a4 + 189))
    {
      *(_DWORD *)(a4 + 24) = 3;
      *(void *)(a4 + 176) = 0;
    }
  }
LABEL_8:
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(*(void *)(a4 + 8) - 8);
  sub_2D5D58(v7, v8 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v7 + 7772)) {
    sub_2DB8E0(v7 + 3896, v8, 0);
  }
  sub_2E5C38(v7, v8 & 0xFFFFFFFFFFFFLL, 1);
  unsigned int v9 = *(_DWORD *)(a4 + 24);
  if (v9 - 6 >= 2 && v9 - 86 >= 2)
  {
    if (v9 - 41 >= 0x13) {
      goto LABEL_13;
    }
  }
  else if (v9 >= 0x56)
  {
LABEL_13:
    if ((v9 > 0x23 || ((1 << v9) & 0x805C00010) == 0) && v9 - 94 <= 0xFFFFFFFC)
    {
      long long v10 = *(_OWORD *)v12;
      *(_OWORD *)(a4 + 88) = *(_OWORD *)&v12[16];
      long long v11 = v13[0];
      *(_OWORD *)(a4 + 104) = *(_OWORD *)&v12[32];
      *(_OWORD *)(a4 + 120) = v11;
      *(_OWORD *)(a4 + 132) = *(_OWORD *)((char *)v13 + 12);
      *(_OWORD *)(a4 + 72) = v10;
    }
  }
  sub_6EEBFC(a1, a4);
}

uint64_t sub_6EE4F4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  unint64_t v6 = a3;
  uint64_t v10 = *(void *)(a1 + 48);
  long long v11 = (unsigned int *)sub_470B40(a2, a3);
  uint64_t v12 = *v11;
  unint64_t v13 = v12 | ((unint64_t)*((unsigned __int16 *)v11 + 2) << 32);
  uint64_t v14 = (int *)sub_2D5D58(v10, v13);
  if (*(unsigned char *)(v10 + 7772)) {
    sub_2DB8E0(v10 + 3896, v12, 0);
  }
  sub_2E5C38(v10, v13, 1);
  uint64_t v15 = *(void *)(a1 + 48);
  long long v16 = (unsigned int *)sub_470B40(a2, a4);
  uint64_t v18 = *v16;
  unsigned int v17 = v16[1];
  unint64_t v19 = v18 | ((unint64_t)(unsigned __int16)v17 << 32);
  unint64_t v20 = (int *)sub_2D5D58(v15, v19);
  if (*(unsigned char *)(v15 + 7772)) {
    sub_2DB8E0(v15 + 3896, v18, 0);
  }
  uint64_t result = sub_2E5C38(v15, v19, 1);
  if (*(unsigned char *)a1 || *(unsigned char *)(a1 + 1) || *(unsigned char *)(a1 + 2))
  {
    uint64_t result = sub_6EF198(a1, a2, v6, v22);
    if ((result & 1) == 0)
    {
      uint64_t result = sub_6EF2EC(a1, a2, v6, a4);
      LODWORD(v6) = result;
      unint64_t v23 = -1;
      uint64_t v25 = v24;
      uint64_t v75 = -1;
      uint64_t v76 = -1;
      uint64_t v74 = -1;
      switch((int)result)
      {
        case 0:
          goto LABEL_15;
        case 1:
          goto LABEL_14;
        case 2:
          uint64_t v25 = -1;
          unint64_t v23 = v24;
          goto LABEL_14;
        case 3:
          unint64_t v23 = v24;
          unint64_t v6 = HIDWORD(result);
          uint64_t v75 = -1;
          uint64_t v76 = -1;
          uint64_t v74 = v24;
          if (!*(unsigned char *)(a1 + 3)) {
            goto LABEL_38;
          }
          goto LABEL_16;
        default:
          uint64_t v25 = -1;
LABEL_14:
          uint64_t v75 = v25;
          uint64_t v76 = v23;
          uint64_t v74 = -1;
          unint64_t v23 = v24;
          unint64_t v6 = HIDWORD(result);
LABEL_15:
          if (*(unsigned char *)(a1 + 3)) {
            goto LABEL_16;
          }
          goto LABEL_38;
      }
    }
  }
  LODWORD(v6) = 0;
  unint64_t v23 = -1;
  uint64_t v75 = -1;
  uint64_t v76 = -1;
  uint64_t v74 = -1;
  if (!*(unsigned char *)(a1 + 3))
  {
LABEL_38:
    unint64_t v37 = -1;
    if (!*(unsigned char *)(a1 + 4)) {
      goto LABEL_65;
    }
    goto LABEL_50;
  }
LABEL_16:
  BOOL v26 = (unsigned __int16 *)((char *)v14 - *v14);
  unsigned int v27 = *v26;
  if (v27 >= 0xB && v26[5] && (*((unsigned char *)v14 + v26[5] + 1) & 4) != 0)
  {
    if (v27 < 0x2F) {
      goto LABEL_38;
    }
    uint64_t v28 = v26[23];
    if (!v28) {
      goto LABEL_38;
    }
    unsigned int v29 = *((unsigned __int8 *)v14 + v28);
    BOOL v30 = v29 > 0x2A;
    uint64_t v31 = (1 << v29) & 0x50426810004;
    if (v30 || v31 == 0) {
      goto LABEL_38;
    }
  }
  unint64_t v33 = (unsigned __int16 *)((char *)v20 - *v20);
  unsigned int v34 = *v33;
  if (v34 >= 0x2F && v33[23] && *((unsigned char *)v20 + v33[23]) == 9)
  {
    if ((v17 & 0x20000000) != 0)
    {
      if (v34 < 0x73) {
        goto LABEL_40;
      }
      unsigned int v35 = v33[57];
      if (!v35) {
        goto LABEL_40;
      }
      int v36 = 2;
    }
    else
    {
      if (v34 < 0x73) {
        goto LABEL_40;
      }
      unsigned int v35 = v33[57];
      if (!v35) {
        goto LABEL_40;
      }
      int v36 = 1;
    }
    if (*((unsigned __int8 *)v20 + v35) == v36) {
      goto LABEL_38;
    }
  }
LABEL_40:
  uint64_t v38 = *(void *)(a1 + 8);
  uint64_t result = sub_6EFA90(a1, a2, a4);
  if (result < v38) {
    unint64_t v37 = -1;
  }
  else {
    unint64_t v37 = v39;
  }
  unint64_t v78 = v37;
  unint64_t v79 = v23;
  if (v23 == -1)
  {
    unint64_t v23 = v78;
    if (!*(unsigned char *)(a1 + 4)) {
      goto LABEL_65;
    }
  }
  else
  {
    uint64_t v40 = &v79;
    if (v37 != -1 && v23 < v37) {
      uint64_t v40 = &v78;
    }
    unint64_t v23 = *v40;
    if (!*(unsigned char *)(a1 + 4))
    {
LABEL_65:
      unint64_t v47 = -1;
      if (!*(unsigned char *)(a1 + 3)) {
        goto LABEL_81;
      }
      goto LABEL_66;
    }
  }
LABEL_50:
  uint64_t v41 = (unsigned __int16 *)((char *)v14 - *v14);
  if (*v41 >= 0x2Fu)
  {
    uint64_t v42 = v41[23];
    if (v42)
    {
      if (*((unsigned char *)v14 + v42) == 51) {
        goto LABEL_65;
      }
    }
  }
  unint64_t v43 = (unsigned __int16 *)((char *)v20 - *v20);
  if (*v43 < 0x2Fu) {
    goto LABEL_65;
  }
  uint64_t v44 = v43[23];
  if (!v44 || *((unsigned char *)v20 + v44) != 51) {
    goto LABEL_65;
  }
  uint64_t v45 = *(void *)(a1 + 16);
  uint64_t result = sub_6EFBF4(a1, a2, a4);
  if (result < v45) {
    unint64_t v47 = -1;
  }
  else {
    unint64_t v47 = v46;
  }
  unint64_t v78 = v47;
  unint64_t v79 = v23;
  if (v23 == -1)
  {
    unint64_t v23 = v78;
    if (!*(unsigned char *)(a1 + 3)) {
      goto LABEL_81;
    }
  }
  else
  {
    unint64_t v48 = &v79;
    if (v47 != -1 && v23 < v47) {
      unint64_t v48 = &v78;
    }
    unint64_t v23 = *v48;
    if (!*(unsigned char *)(a1 + 3))
    {
LABEL_81:
      unint64_t v53 = -1;
      int v55 = a5;
      uint64_t v56 = -1;
      if ((a5 - 6) < 2) {
        goto LABEL_99;
      }
      goto LABEL_82;
    }
  }
LABEL_66:
  unint64_t v49 = (unsigned __int16 *)((char *)v14 - *v14);
  if (*v49 >= 0xBu)
  {
    uint64_t v50 = v49[5];
    if (v50)
    {
      if ((*((unsigned char *)v14 + v50 + 1) & 8) != 0) {
        goto LABEL_81;
      }
    }
  }
  uint64_t v51 = *(void *)(a1 + 8);
  uint64_t result = sub_6EFD18(a1, a2, a4);
  if (result < v51) {
    unint64_t v53 = -1;
  }
  else {
    unint64_t v53 = v52;
  }
  unint64_t v78 = v53;
  unint64_t v79 = v23;
  if (v23 == -1)
  {
    int v55 = a5;
    unint64_t v23 = v78;
    uint64_t v56 = -1;
    if ((a5 - 6) < 2) {
      goto LABEL_99;
    }
    goto LABEL_82;
  }
  uint64_t v54 = &v79;
  if (v53 != -1 && v23 < v53) {
    uint64_t v54 = &v78;
  }
  int v55 = a5;
  unint64_t v23 = *v54;
  uint64_t v56 = -1;
  if ((a5 - 6) >= 2)
  {
LABEL_82:
    if ((v55 - 86) >= 2)
    {
      if ((v55 - 41) < 0x13) {
        goto LABEL_98;
      }
      long long v57 = (unsigned __int16 *)((char *)v14 - *v14);
      if (*v57 >= 0x2Fu)
      {
        uint64_t v58 = v57[23];
        if (v58)
        {
          unsigned int v59 = *((unsigned __int8 *)v14 + v58);
          BOOL v30 = v59 > 0x36;
          uint64_t v60 = (1 << v59) & 0x44000000000008;
          if (!v30 && v60 != 0) {
            goto LABEL_98;
          }
        }
      }
      if ((BOOL v62 = (unsigned __int16 *)((char *)v20 - *v20), *v62 < 0x2Fu)
        || (uint64_t v63 = v62[23]) == 0
        || ((v64 = *((unsigned __int8 *)v20 + v63), BOOL v30 = v64 > 0x36, v65 = (1 << v64) & 0x44000000000008, !v30)
          ? (BOOL v66 = v65 == 0)
          : (BOOL v66 = 1),
            v66))
      {
LABEL_98:
        uint64_t v56 = -1;
      }
      else
      {
        uint64_t v56 = a4;
      }
    }
  }
LABEL_99:
  if (v74 == -1
    && v47 == -1
    && v75 == -1
    && v37 == -1
    && v53 == -1
    && v56 == -1
    && v76 == -1
    && ((BOOL v67 = (unsigned __int16 *)((char *)v20 - *v20), *v67 < 0x2Fu)
     || (uint64_t v68 = v67[23]) == 0
     || ((v69 = *((unsigned __int8 *)v20 + v68), BOOL v30 = v69 > 0x36, v70 = (1 << v69) & 0x44000000000008, !v30)
       ? (BOOL v71 = v70 == 0)
       : (BOOL v71 = 1),
         v71)))
  {
    *(void *)(a6 + 48) = -1;
    *(void *)&long long v72 = -1;
    *((void *)&v72 + 1) = -1;
    *(_OWORD *)(a6 + 16) = v72;
    *(_OWORD *)(a6 + 32) = v72;
    *(_OWORD *)a6 = v72;
    *(_DWORD *)(a6 + 56) = 0;
    *(void *)(a6 + 64) = -1;
  }
  else
  {
    *(void *)a6 = v74;
    *(void *)(a6 + 8) = v47;
    *(void *)(a6 + 16) = v75;
    *(void *)(a6 + 24) = v37;
    *(void *)(a6 + 32) = v53;
    *(void *)(a6 + 40) = v56;
    *(void *)(a6 + 48) = v76;
    *(_DWORD *)(a6 + 56) = v6;
    *(void *)(a6 + 64) = v23;
  }
  *(_DWORD *)(a6 + 72) = 0;
  return result;
}

BOOL sub_6EEB1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(*(void *)(a2 + 8) - 8);
  sub_2D5D58(v3, v4 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v3 + 7772)) {
    sub_2DB8E0(v3 + 3896, v4, 0);
  }
  sub_2E5C38(v3, v4 & 0xFFFFFFFFFFFFLL, 1);
  unsigned int v5 = *(_DWORD *)(a2 + 24);
  if (v5 - 6 >= 2 && v5 - 86 >= 2)
  {
    if (v5 - 41 < 0x13) {
      return 0;
    }
  }
  else if (v5 < 0x56)
  {
    return 0;
  }
  if (v5 - 4 >= 0x20 || ((0x805C0001 >> (v5 - 4)) & 1) == 0) {
    return v5 - 94 < 0xFFFFFFFD;
  }
  return 0;
}

void sub_6EEBFC(uint64_t a1, uint64_t a2)
{
  v2.i64[0] = *(void *)(a2 + 88);
  v2.i64[1] = *(void *)(a2 + 120);
  v3.i64[0] = -1;
  v3.i64[1] = -1;
  if ((vmaxv_u16((uint16x4_t)vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqq_s64((int64x2_t)vextq_s8(*(int8x16_t *)(a2 + 72), *(int8x16_t *)(a2 + 72), 8uLL), v3), (int32x4_t)vceqq_s64(v2, v3))))) & 1) != 0|| (*(void *)(a2 + 96) == -1 ? (BOOL v4 = *(void *)(a2 + 104) == -1) : (BOOL v4 = 0), !v4))
  {
    int v5 = 1;
    switch(*(_DWORD *)(a2 + 24))
    {
      case 1:
      case 0x14:
      case 0x1B:
      case 0x1D:
      case 0x21:
      case 0x3C:
      case 0x3E:
      case 0x41:
      case 0x56:
        goto LABEL_10;
      case 2:
      case 0x15:
      case 0x1C:
      case 0x1E:
      case 0x22:
      case 0x3D:
      case 0x3F:
      case 0x42:
      case 0x57:
        int v5 = 2;
LABEL_10:
        *(_DWORD *)(a2 + 24) = v5;
        break;
      default:
        return;
    }
  }
}

uint64_t sub_6EEDE8(uint64_t a1, void *a2)
{
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B5EB0;
  strcpy((char *)__p[0], "enable_escalator_maneuvers");
  BOOL v4 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(unsigned char *)a1 = v4;
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B8E90;
  strcpy((char *)__p[0], "enable_ramped_pathway_maneuvers");
  BOOL v5 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(unsigned char *)(a1 + 1) = v5;
  __p[0] = operator new(0x19uLL);
  *(_OWORD *)&__p[1] = xmmword_20B9250;
  strcpy((char *)__p[0], "enable_stairs_maneuvers");
  BOOL v6 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(unsigned char *)(a1 + 2) = v6;
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B91C0;
  strcpy((char *)__p[0], "enable_brunnel_maneuvers");
  BOOL v7 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(unsigned char *)(a1 + 3) = v7;
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B8870;
  strcpy((char *)__p[0], "enable_elevator_maneuvers");
  BOOL v8 = sub_29D62C(a2, (uint64_t)__p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  *(unsigned char *)(a1 + 4) = v8;
  HIBYTE(__p[2]) = 20;
  strcpy((char *)__p, "brunnel_min_length_m");
  *(void *)(a1 + 8) = sub_5CDE0(a2, __p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  HIBYTE(__p[2]) = 21;
  strcpy((char *)__p, "elevator_min_length_m");
  *(void *)(a1 + 16) = sub_5CDE0(a2, __p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  strcpy((char *)__p, "escalator_min_length_m");
  HIBYTE(__p[2]) = 22;
  *(void *)(a1 + 24) = sub_5CDE0(a2, __p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B9800;
  strcpy((char *)__p[0], "intersection_internal_length_m");
  *(void *)(a1 + 32) = sub_5CDE0(a2, __p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  HIBYTE(__p[2]) = 19;
  strcpy((char *)__p, "stairs_min_length_m");
  *(void *)(a1 + 40) = sub_5CDE0(a2, __p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  return a1;
}

void sub_6EF158(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_6EF198(uint64_t a1, void *a2, unint64_t a3, double a4)
{
  uint64_t v7 = sub_470F2C(a2, a3, a4);
  BOOL result = 0;
  if (a3 && v7 <= *(void *)(a1 + 32))
  {
    if (sub_470ADC(a2) - 1 == a3)
    {
      return 0;
    }
    else
    {
      uint64_t v9 = sub_470B40(a2, a3 - 1);
      uint64_t v10 = sub_470B40(a2, a3 + 1);
      long long v11 = *(int **)(v9 + 8);
      uint64_t v12 = (unsigned __int16 *)((char *)v11 - *v11);
      if (*v12 < 0x2Fu) {
        return 0;
      }
      uint64_t v13 = v12[23];
      if (!v12[23]) {
        return 0;
      }
      int v14 = *(unsigned __int8 *)(a1 + 1);
      int v15 = *((unsigned __int8 *)v11 + v13);
      if (v15 != 9)
      {
        BOOL v16 = v15 == 20 || v14 == 0;
        int v17 = v16 ? 20 : 43;
        if (v15 != v17) {
          return 0;
        }
      }
      uint64_t v18 = *(int **)(v10 + 8);
      unint64_t v19 = (unsigned __int16 *)((char *)v18 - *v18);
      if (*v19 >= 0x2Fu && (uint64_t v20 = v19[23]) != 0)
      {
        int v21 = *((unsigned __int8 *)v18 + v20);
        if (v21 == 9)
        {
          return 1;
        }
        else
        {
          if (v21 == 20 || v14 == 0) {
            int v23 = 20;
          }
          else {
            int v23 = 43;
          }
          return v21 == v23;
        }
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_6EF2EC(uint64_t a1, void *a2, uint64_t a3, unint64_t a4)
{
  BOOL v5 = a2;
  uint64_t v6 = a1;
  uint64_t v7 = *(void *)(a1 + 48);
  BOOL v8 = (unsigned int *)sub_470B40(a2, a3);
  uint64_t v9 = *v8;
  unint64_t v10 = ((unint64_t)(v8[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v8[1] << 32) | v9;
  char v11 = BYTE6(v10) ^ 1;
  unint64_t v12 = (v10 ^ 0x1000000000000) >> 32;
  unint64_t v13 = v10 & 0xFFFFFFFFFFFFLL;
  int v14 = (int *)sub_2D5D58(v7, v10 & 0xFFFFFFFFFFFFLL);
  if (*(unsigned char *)(v7 + 7772))
  {
    int v15 = sub_2DB8E0(v7 + 3896, v9, 0);
    BOOL v16 = &v15[-*(int *)v15];
    if (*(unsigned __int16 *)v16 < 5u)
    {
      uint64_t v17 = 0;
    }
    else
    {
      uint64_t v17 = *((unsigned __int16 *)v16 + 2);
      if (v17) {
        v17 += (uint64_t)&v15[*(unsigned int *)&v15[v17]];
      }
    }
    uint64_t v18 = v17 + 4 * (unsigned __int16)v12 + 4 + *(unsigned int *)(v17 + 4 * (unsigned __int16)v12 + 4);
  }
  else
  {
    uint64_t v18 = 0;
  }
  v73[0] = v14;
  v73[1] = v18;
  v73[2] = sub_2E5C38(v7, v13, 1);
  v73[3] = v19;
  int v74 = v9;
  __int16 v75 = v12;
  char v76 = v11;
  if (*(unsigned char *)(v6 + 1))
  {
    uint64_t v20 = (unsigned __int16 *)((char *)v14 - *v14);
    v22 = *v20 < 0x2Fu || (uint64_t v21 = v20[23]) == 0 || *((unsigned char *)v14 + v21) != 43;
    BOOL v64 = v22;
  }
  else
  {
    BOOL v64 = 0;
  }
  unint64_t v23 = a3 + 1;
  unint64_t v24 = sub_470ADC(v5);
  if (a3 + 1 > v24) {
    unint64_t v25 = a3 + 1;
  }
  else {
    unint64_t v25 = v24;
  }
  unint64_t v67 = v25;
  if (v23 >= v24) {
    return 0;
  }
  unint64_t v26 = 0;
  unsigned int v27 = 0;
  uint64_t v65 = v5;
  uint64_t v66 = 0;
  while (1)
  {
    BOOL v30 = (unsigned int *)sub_470B40(v5, v23);
    int v32 = (int *)*((void *)v30 + 1);
    unint64_t v33 = (unsigned __int16 *)((char *)v32 - *v32);
    unsigned int v34 = *v33;
    if (v23 >= a4) {
      break;
    }
    if (v34 >= 0x2F)
    {
      uint64_t v35 = v33[23];
      if (v35)
      {
        int v36 = *((unsigned __int8 *)v32 + v35);
        if (v36 == 9) {
          goto LABEL_42;
        }
        int v37 = v64 && v36 != 20 ? 43 : 20;
        if (v36 == v37) {
          goto LABEL_42;
        }
      }
    }
LABEL_24:
    if (v67 == ++v23) {
      goto LABEL_51;
    }
  }
  if (v34 >= 0x2F
    && (uint64_t v38 = v33[23]) != 0
    && ((int v39 = *((unsigned __int8 *)v32 + v38), v39 == 9) || (!v64 || v39 == 20 ? (v40 = 20) : (v40 = 43), v39 == v40))
    || sub_6EF198(v6, v5, v23, v31))
  {
LABEL_42:
    uint64_t v41 = (unsigned char *)v6;
    uint64_t v42 = *(void *)(v6 + 48);
    uint64_t v44 = v30;
    uint64_t v43 = *v30;
    unint64_t v45 = ((unint64_t)(v44[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v44[1] << 32) | v43;
    char v46 = BYTE6(v45) ^ 1;
    unint64_t v47 = (v45 ^ 0x1000000000000) >> 32;
    unint64_t v48 = v45 & 0xFFFFFFFFFFFFLL;
    unint64_t v49 = (int *)sub_2D5D58(v42, v45 & 0xFFFFFFFFFFFFLL);
    if (*(unsigned char *)(v42 + 7772))
    {
      uint64_t v50 = sub_2DB8E0(v42 + 3896, v43, 0);
      uint64_t v51 = &v50[-*(int *)v50];
      if (*(unsigned __int16 *)v51 < 5u)
      {
        uint64_t v52 = 0;
      }
      else
      {
        uint64_t v52 = *((unsigned __int16 *)v51 + 2);
        if (v52) {
          v52 += (uint64_t)&v50[*(unsigned int *)&v50[v52]];
        }
      }
      unint64_t v53 = (int *)(v52 + 4 * (unsigned __int16)v47 + 4 + *(unsigned int *)(v52 + 4 * (unsigned __int16)v47 + 4));
    }
    else
    {
      unint64_t v53 = 0;
    }
    uint64_t v54 = (int *)sub_2E5C38(v42, v48, 1);
    v69[0] = v49;
    v69[1] = v53;
    v69[2] = v54;
    v69[3] = v55;
    int v70 = v43;
    __int16 v71 = v47;
    char v72 = v46;
    uint64_t v6 = (uint64_t)v41;
    unint64_t v56 = sub_6ECF7C(v41, v73, v69, v27, v26);
    unsigned int v58 = v56;
    if (v56)
    {
      unint64_t v26 = HIDWORD(v56);
      BOOL v5 = v65;
      uint64_t v28 = sub_470F2C(v65, v23, v57);
      uint64_t v29 = v66;
      if (v27 != v58) {
        uint64_t v29 = 0;
      }
      uint64_t v66 = v28 + v29;
    }
    else
    {
      unsigned int v58 = v27;
      BOOL v5 = v65;
    }
    unsigned int v27 = v58;
    goto LABEL_24;
  }
LABEL_51:
  if (v27 != 1)
  {
    if ((v27 & 0xFFFFFFFE) == 2)
    {
      BOOL v59 = v66 < *(void *)(v6 + 40);
      unint64_t v60 = v26;
      uint64_t v61 = v27;
      goto LABEL_55;
    }
    return 0;
  }
  BOOL v59 = v66 < *(void *)(v6 + 24);
  unint64_t v60 = v26;
  uint64_t v61 = 1;
LABEL_55:
  uint64_t v62 = v61 | (v60 << 32);
  if (v59) {
    return 0;
  }
  else {
    return v62;
  }
}

uint64_t sub_6EF6F0(uint64_t a1, void *a2, unint64_t a3)
{
  unint64_t v6 = sub_46C760(a2);
  if (a3 <= v6) {
    unint64_t v7 = v6;
  }
  else {
    unint64_t v7 = a3;
  }
  if (v6 <= a3) {
    return 0;
  }
  uint64_t v8 = 0;
  do
  {
    uint64_t v9 = *(void *)(a1 + 48);
    uint64_t v10 = *(void *)(sub_46C8EC(a2, a3) + 32);
    char v11 = (int *)sub_2D5D58(v9, v10 & 0xFFFFFFFFFFFFLL);
    if (*(unsigned char *)(v9 + 7772)) {
      sub_2DB8E0(v9 + 3896, v10, 0);
    }
    sub_2E5C38(v9, v10 & 0xFFFFFFFFFFFFLL, 1);
    unint64_t v13 = (unsigned __int16 *)((char *)v11 - *v11);
    unsigned int v14 = *v13;
    if (v14 < 0xB || !v13[5] || (*((unsigned char *)v11 + v13[5] + 1) & 4) == 0) {
      break;
    }
    if (v14 >= 0x2F)
    {
      uint64_t v15 = v13[23];
      if (v15)
      {
        unsigned int v16 = *((unsigned __int8 *)v11 + v15);
        BOOL v17 = v16 > 0x2A;
        uint64_t v18 = (1 << v16) & 0x50426810004;
        if (!v17 && v18 != 0) {
          break;
        }
      }
    }
    v8 += sub_46CCC8(a2, a3++, v12);
  }
  while (v7 != a3);
  return v8;
}

uint64_t sub_6EF850(uint64_t a1, void *a2, unint64_t a3)
{
  unint64_t v6 = sub_46C760(a2);
  if (a3 <= v6) {
    unint64_t v7 = v6;
  }
  else {
    unint64_t v7 = a3;
  }
  if (v6 <= a3) {
    return 0;
  }
  uint64_t v8 = 0;
  do
  {
    uint64_t v9 = *(void *)(a1 + 48);
    uint64_t v10 = *(void *)(sub_46C8EC(a2, a3) + 32);
    char v11 = (int *)sub_2D5D58(v9, v10 & 0xFFFFFFFFFFFFLL);
    if (*(unsigned char *)(v9 + 7772)) {
      sub_2DB8E0(v9 + 3896, v10, 0);
    }
    sub_2E5C38(v9, v10 & 0xFFFFFFFFFFFFLL, 1);
    unint64_t v13 = (unsigned __int16 *)((char *)v11 - *v11);
    if (*v13 < 0x2Fu) {
      break;
    }
    uint64_t v14 = v13[23];
    if (!v14) {
      break;
    }
    if (*((unsigned char *)v11 + v14) != 51) {
      break;
    }
    v8 += sub_46CCC8(a2, a3++, v12);
  }
  while (v7 != a3);
  return v8;
}

uint64_t sub_6EF970(uint64_t a1, void *a2, unint64_t a3)
{
  unint64_t v6 = sub_46C760(a2);
  if (a3 <= v6) {
    unint64_t v7 = v6;
  }
  else {
    unint64_t v7 = a3;
  }
  if (v6 <= a3) {
    return 0;
  }
  uint64_t v8 = 0;
  do
  {
    uint64_t v9 = *(void *)(a1 + 48);
    uint64_t v10 = *(void *)(sub_46C8EC(a2, a3) + 32);
    char v11 = (int *)sub_2D5D58(v9, v10 & 0xFFFFFFFFFFFFLL);
    if (*(unsigned char *)(v9 + 7772)) {
      sub_2DB8E0(v9 + 3896, v10, 0);
    }
    sub_2E5C38(v9, v10 & 0xFFFFFFFFFFFFLL, 1);
    unint64_t v13 = (unsigned __int16 *)((char *)v11 - *v11);
    if (*v13 < 0xBu) {
      break;
    }
    uint64_t v14 = v13[5];
    if (!v14) {
      break;
    }
    if ((*((unsigned char *)v11 + v14 + 1) & 8) == 0) {
      break;
    }
    v8 += sub_46CCC8(a2, a3++, v12);
  }
  while (v7 != a3);
  return v8;
}

uint64_t sub_6EFA90(uint64_t a1, void *a2, unint64_t a3)
{
  unint64_t v6 = sub_470ADC(a2);
  if (a3 <= v6) {
    unint64_t v7 = v6;
  }
  else {
    unint64_t v7 = a3;
  }
  if (v6 <= a3) {
    return 0;
  }
  uint64_t v8 = 0;
  do
  {
    uint64_t v9 = *(void *)(a1 + 48);
    uint64_t v10 = (unsigned int *)sub_470B40(a2, a3);
    uint64_t v11 = *v10;
    unint64_t v12 = v11 | ((unint64_t)*((unsigned __int16 *)v10 + 2) << 32);
    unint64_t v13 = (int *)sub_2D5D58(v9, v12);
    if (*(unsigned char *)(v9 + 7772)) {
      sub_2DB8E0(v9 + 3896, v11, 0);
    }
    sub_2E5C38(v9, v12, 1);
    uint64_t v15 = (unsigned __int16 *)((char *)v13 - *v13);
    unsigned int v16 = *v15;
    if (v16 < 0xB || !v15[5] || (*((unsigned char *)v13 + v15[5] + 1) & 4) == 0) {
      break;
    }
    if (v16 >= 0x2F)
    {
      uint64_t v17 = v15[23];
      if (v17)
      {
        unsigned int v18 = *((unsigned __int8 *)v13 + v17);
        BOOL v19 = v18 > 0x2A;
        uint64_t v20 = (1 << v18) & 0x50426810004;
        if (!v19 && v20 != 0) {
          break;
        }
      }
    }
    v8 += sub_470F2C(a2, a3++, v14);
  }
  while (v7 != a3);
  return v8;
}

uint64_t sub_6EFBF4(uint64_t a1, void *a2, unint64_t a3)
{
  unint64_t v6 = sub_470ADC(a2);
  if (a3 <= v6) {
    unint64_t v7 = v6;
  }
  else {
    unint64_t v7 = a3;
  }
  if (v6 <= a3) {
    return 0;
  }
  uint64_t v8 = 0;
  do
  {
    uint64_t v9 = *(void *)(a1 + 48);
    uint64_t v10 = (unsigned int *)sub_470B40(a2, a3);
    uint64_t v11 = *v10;
    unint64_t v12 = v11 | ((unint64_t)*((unsigned __int16 *)v10 + 2) << 32);
    unint64_t v13 = (int *)sub_2D5D58(v9, v12);
    if (*(unsigned char *)(v9 + 7772)) {
      sub_2DB8E0(v9 + 3896, v11, 0);
    }
    sub_2E5C38(v9, v12, 1);
    uint64_t v15 = (unsigned __int16 *)((char *)v13 - *v13);
    if (*v15 < 0x2Fu) {
      break;
    }
    uint64_t v16 = v15[23];
    if (!v16) {
      break;
    }
    if (*((unsigned char *)v13 + v16) != 51) {
      break;
    }
    v8 += sub_470F2C(a2, a3++, v14);
  }
  while (v7 != a3);
  return v8;
}

uint64_t sub_6EFD18(uint64_t a1, void *a2, unint64_t a3)
{
  unint64_t v6 = sub_470ADC(a2);
  if (a3 <= v6) {
    unint64_t v7 = v6;
  }
  else {
    unint64_t v7 = a3;
  }
  if (v6 <= a3) {
    return 0;
  }
  uint64_t v8 = 0;
  do
  {
    uint64_t v9 = *(void *)(a1 + 48);
    uint64_t v10 = (unsigned int *)sub_470B40(a2, a3);
    uint64_t v11 = *v10;
    unint64_t v12 = v11 | ((unint64_t)*((unsigned __int16 *)v10 + 2) << 32);
    unint64_t v13 = (int *)sub_2D5D58(v9, v12);
    if (*(unsigned char *)(v9 + 7772)) {
      sub_2DB8E0(v9 + 3896, v11, 0);
    }
    sub_2E5C38(v9, v12, 1);
    uint64_t v15 = (unsigned __int16 *)((char *)v13 - *v13);
    if (*v15 < 0xBu) {
      break;
    }
    uint64_t v16 = v15[5];
    if (!v16) {
      break;
    }
    if ((*((unsigned char *)v13 + v16 + 1) & 8) == 0) {
      break;
    }
    v8 += sub_470F2C(a2, a3++, v14);
  }
  while (v7 != a3);
  return v8;
}

double sub_6EFE3C()
{
  byte_25A080F = 1;
  word_25A07F8 = 65;
  byte_25A0827 = 1;
  word_25A0810 = 65;
  byte_25A083F = 8;
  strcpy((char *)&qword_25A0828, "any_mode");
  byte_25A0857 = 7;
  strcpy((char *)&dword_25A0840, "cycling");
  byte_25A086F = 7;
  strcpy((char *)&dword_25A0858, "driving");
  byte_25A0887 = 7;
  strcpy((char *)&dword_25A0870, "walking");
  char v4 = 7;
  strcpy((char *)v3, "UNKNOWN");
  int v5 = 0;
  char v7 = 14;
  strcpy((char *)v6, "ROUTES_THROUGH");
  int v8 = 1;
  char v10 = 9;
  strcpy((char *)__p, "ROUTES_TO");
  int v11 = 3;
  char v13 = 11;
  strcpy((char *)v12, "ROUTES_FROM");
  int v14 = 2;
  xmmword_25A08B8 = 0u;
  *(_OWORD *)&qword_25A08C8 = 0u;
  dword_25A08D8 = 1065353216;
  sub_3A6EF0((uint64_t)&xmmword_25A08B8, (uint64_t)v3, (uint64_t)v3);
  sub_3A6EF0((uint64_t)&xmmword_25A08B8, (uint64_t)v6, (uint64_t)v6);
  sub_3A6EF0((uint64_t)&xmmword_25A08B8, (uint64_t)__p, (uint64_t)__p);
  sub_3A6EF0((uint64_t)&xmmword_25A08B8, (uint64_t)v12, (uint64_t)v12);
  if (v13 < 0)
  {
    operator delete(v12[0]);
    if ((v10 & 0x80000000) == 0)
    {
LABEL_3:
      if ((v7 & 0x80000000) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      operator delete(v6[0]);
      if ((v4 & 0x80000000) == 0) {
        goto LABEL_5;
      }
LABEL_9:
      operator delete(v3[0]);
      goto LABEL_5;
    }
  }
  else if ((v10 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p[0]);
  if (v7 < 0) {
    goto LABEL_8;
  }
LABEL_4:
  if (v4 < 0) {
    goto LABEL_9;
  }
LABEL_5:
  qword_25A0890 = 0;
  qword_25A0898 = 0;
  qword_25A0888 = 0;
  v0 = operator new(9uLL);
  *(void *)v0 = 0x4020C000103050DLL;
  v0[8] = 6;
  qword_25A0888 = (uint64_t)v0;
  qword_25A0890 = (uint64_t)(v0 + 9);
  qword_25A0898 = (uint64_t)(v0 + 9);
  qword_25A08A0 = 0;
  qword_25A08A8 = 0;
  unk_25A08B0 = 0;
  uint64_t v1 = (char *)operator new(9uLL);
  qword_25A08A8 = (uint64_t)(v1 + 9);
  unk_25A08B0 = v1 + 9;
  double result = 1.10224369e-279;
  *(void *)uint64_t v1 = 0x604020C00010305;
  v1[8] = 13;
  qword_25A08A0 = (uint64_t)v1;
  return result;
}

void sub_6F00F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  if (qword_25A08C8) {
    sub_20AAA48((void **)qword_25A08C8);
  }
  int v37 = (void *)xmmword_25A08B8;
  *(void *)&xmmword_25A08B8 = 0;
  if (v37)
  {
    operator delete(v37);
    if ((a36 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a29 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_11;
    }
  }
  else if ((a36 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(__p);
  if ((a29 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a22 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_12;
  }
LABEL_11:
  operator delete(a24);
  if ((a22 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a15 & 0x80000000) == 0) {
LABEL_14:
    }
      _Unwind_Resume(exception_object);
LABEL_13:
    operator delete(a10);
    _Unwind_Resume(exception_object);
  }
LABEL_12:
  operator delete(a17);
  if ((a15 & 0x80000000) == 0) {
    goto LABEL_14;
  }
  goto LABEL_13;
}

void *sub_6F0198(void *a1, int a2)
{
  switch(a2)
  {
    case 0:
      int64x2_t v3 = "NO_TURN";
      goto LABEL_83;
    case 1:
      int64x2_t v3 = "LEFT_TURN";
      goto LABEL_16;
    case 2:
      int64x2_t v3 = "RIGHT_TURN";
      goto LABEL_20;
    case 3:
      int64x2_t v3 = "STRAIGHT_AHEAD";
      goto LABEL_59;
    case 4:
      int64x2_t v3 = "U_TURN";
      uint64_t v4 = 6;
      goto LABEL_86;
    case 5:
      int64x2_t v3 = "FOLLOW_ROAD";
      goto LABEL_81;
    case 6:
      int64x2_t v3 = "ENTER_ROUNDABOUT";
      goto LABEL_55;
    case 7:
      int64x2_t v3 = "EXIT_ROUNDABOUT";
      goto LABEL_52;
    case 11:
      int64x2_t v3 = "OFF_RAMP";
      uint64_t v4 = 8;
      goto LABEL_86;
    case 12:
      int64x2_t v3 = "ON_RAMP";
      goto LABEL_83;
    case 16:
      int64x2_t v3 = "ARRIVE_END_OF_NAVIGATION";
      goto LABEL_72;
    case 17:
      int64x2_t v3 = "START_ROUTE";
      goto LABEL_81;
    case 18:
      int64x2_t v3 = "ARRIVE_AT_DESTINATION";
      goto LABEL_85;
    case 20:
      int64x2_t v3 = "KEEP_LEFT";
LABEL_16:
      uint64_t v4 = 9;
      goto LABEL_86;
    case 21:
      int64x2_t v3 = "KEEP_RIGHT";
      goto LABEL_20;
    case 22:
      int64x2_t v3 = "ENTER_FERRY";
      goto LABEL_81;
    case 23:
      int64x2_t v3 = "EXIT_FERRY";
LABEL_20:
      uint64_t v4 = 10;
      goto LABEL_86;
    case 24:
      int64x2_t v3 = "CHANGE_FERRY";
      goto LABEL_68;
    case 25:
      int64x2_t v3 = "START_ROUTE_WITH_U_TURN";
      goto LABEL_74;
    case 26:
      int64x2_t v3 = "U_TURN_AT_ROUNDABOUT";
      goto LABEL_77;
    case 27:
      int64x2_t v3 = "LEFT_TURN_AT_END";
      goto LABEL_55;
    case 28:
      int64x2_t v3 = "RIGHT_TURN_AT_END";
      goto LABEL_57;
    case 29:
      int64x2_t v3 = "HIGHWAY_OFF_RAMP_LEFT";
      goto LABEL_85;
    case 30:
      int64x2_t v3 = "HIGHWAY_OFF_RAMP_RIGHT";
      goto LABEL_79;
    case 33:
      int64x2_t v3 = "ARRIVE_AT_DESTINATION_LEFT";
      uint64_t v4 = 26;
      goto LABEL_86;
    case 34:
      int64x2_t v3 = "ARRIVE_AT_DESTINATION_RIGHT";
      uint64_t v4 = 27;
      goto LABEL_86;
    case 35:
      int64x2_t v3 = "U_TURN_WHEN_POSSIBLE";
      goto LABEL_77;
    case 39:
      int64x2_t v3 = "ARRIVE_END_OF_DIRECTIONS";
      goto LABEL_72;
    case 41:
      int64x2_t v3 = "ROUNDABOUT_EXIT_1";
      goto LABEL_57;
    case 42:
      int64x2_t v3 = "ROUNDABOUT_EXIT_2";
      goto LABEL_57;
    case 43:
      int64x2_t v3 = "ROUNDABOUT_EXIT_3";
      goto LABEL_57;
    case 44:
      int64x2_t v3 = "ROUNDABOUT_EXIT_4";
      goto LABEL_57;
    case 45:
      int64x2_t v3 = "ROUNDABOUT_EXIT_5";
      goto LABEL_57;
    case 46:
      int64x2_t v3 = "ROUNDABOUT_EXIT_6";
      goto LABEL_57;
    case 47:
      int64x2_t v3 = "ROUNDABOUT_EXIT_7";
      goto LABEL_57;
    case 48:
      int64x2_t v3 = "ROUNDABOUT_EXIT_8";
      goto LABEL_57;
    case 49:
      int64x2_t v3 = "ROUNDABOUT_EXIT_9";
      goto LABEL_57;
    case 50:
      int64x2_t v3 = "ROUNDABOUT_EXIT_10";
      goto LABEL_64;
    case 51:
      int64x2_t v3 = "ROUNDABOUT_EXIT_11";
      goto LABEL_64;
    case 52:
      int64x2_t v3 = "ROUNDABOUT_EXIT_12";
      goto LABEL_64;
    case 53:
      int64x2_t v3 = "ROUNDABOUT_EXIT_13";
      goto LABEL_64;
    case 54:
      int64x2_t v3 = "ROUNDABOUT_EXIT_14";
      goto LABEL_64;
    case 55:
      int64x2_t v3 = "ROUNDABOUT_EXIT_15";
      goto LABEL_64;
    case 56:
      int64x2_t v3 = "ROUNDABOUT_EXIT_16";
      goto LABEL_64;
    case 57:
      int64x2_t v3 = "ROUNDABOUT_EXIT_17";
      goto LABEL_64;
    case 58:
      int64x2_t v3 = "ROUNDABOUT_EXIT_18";
      goto LABEL_64;
    case 59:
      int64x2_t v3 = "ROUNDABOUT_EXIT_19";
      goto LABEL_64;
    case 60:
      int64x2_t v3 = "SHARP_LEFT_TURN";
LABEL_52:
      uint64_t v4 = 15;
      goto LABEL_86;
    case 61:
      int64x2_t v3 = "SHARP_RIGHT_TURN";
      goto LABEL_55;
    case 62:
      int64x2_t v3 = "SLIGHT_LEFT_TURN";
LABEL_55:
      uint64_t v4 = 16;
      goto LABEL_86;
    case 63:
      int64x2_t v3 = "SLIGHT_RIGHT_TURN";
LABEL_57:
      uint64_t v4 = 17;
      goto LABEL_86;
    case 64:
      int64x2_t v3 = "CHANGE_HIGHWAY";
LABEL_59:
      uint64_t v4 = 14;
      goto LABEL_86;
    case 65:
      int64x2_t v3 = "CHANGE_HIGHWAY_LEFT";
      goto LABEL_66;
    case 66:
      int64x2_t v3 = "CHANGE_HIGHWAY_RIGHT";
      goto LABEL_77;
    case 82:
      int64x2_t v3 = "WAYPOINT_STOP";
      uint64_t v4 = 13;
      goto LABEL_86;
    case 83:
      int64x2_t v3 = "WAYPOINT_STOP_LEFT";
LABEL_64:
      uint64_t v4 = 18;
      goto LABEL_86;
    case 84:
      int64x2_t v3 = "WAYPOINT_STOP_RIGHT";
LABEL_66:
      uint64_t v4 = 19;
      goto LABEL_86;
    case 85:
      int64x2_t v3 = "RESUME_ROUTE";
LABEL_68:
      uint64_t v4 = 12;
      goto LABEL_86;
    case 86:
      int64x2_t v3 = "ROUNDABOUT_EXIT_LEFT";
      goto LABEL_77;
    case 87:
      int64x2_t v3 = "ROUNDABOUT_EXIT_RIGHT";
      goto LABEL_85;
    case 88:
      int64x2_t v3 = "RESUME_ROUTE_WITH_U_TURN";
      goto LABEL_72;
    case 89:
      int64x2_t v3 = "FOLLOW_ROAD_ENTER_DETOUR";
LABEL_72:
      uint64_t v4 = 24;
      goto LABEL_86;
    case 90:
      int64x2_t v3 = "FOLLOW_ROAD_EXIT_DETOUR";
LABEL_74:
      uint64_t v4 = 23;
      goto LABEL_86;
    case 91:
      int64x2_t v3 = "ENTER_RAILWAY_SHUTTLE";
LABEL_85:
      uint64_t v4 = 21;
      goto LABEL_86;
    case 92:
      int64x2_t v3 = "EXIT_RAILWAY_SHUTTLE";
LABEL_77:
      uint64_t v4 = 20;
      goto LABEL_86;
    case 93:
      int64x2_t v3 = "CHANGE_RAILWAY_SHUTTLE";
LABEL_79:
      uint64_t v4 = 22;
      goto LABEL_86;
    case 94:
      int64x2_t v3 = "TURN_AROUND";
LABEL_81:
      uint64_t v4 = 11;
      goto LABEL_86;
    case 95:
      int64x2_t v3 = "UNKNOWN";
LABEL_83:
      uint64_t v4 = 7;
LABEL_86:
      sub_188FC78(a1, (uint64_t)v3, v4);
      break;
    default:
      return a1;
  }
  return a1;
}

uint64_t sub_6F0740(uint64_t a1, uint64_t a2)
{
  strcpy((char *)v11, "MultiPointRouteAligner");
  HIBYTE(v11[2]) = 22;
  __p = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int64x2_t v3 = sub_374CDC(a2, (uint64_t)v11, (uint64_t *)&__p);
  *(_OWORD *)a1 = xmmword_20E8BE0;
  *(_OWORD *)(a1 + 16) = xmmword_20E8BF0;
  *(unsigned char *)(a1 + 32) = 0;
  sub_6F12AC(a1, v3);
  uint64_t v4 = (void **)__p;
  if (__p)
  {
    int v5 = v9;
    unint64_t v6 = __p;
    if (v9 != __p)
    {
      do
      {
        if (*((char *)v5 - 1) < 0) {
          operator delete(*(v5 - 3));
        }
        v5 -= 3;
      }
      while (v5 != v4);
      unint64_t v6 = __p;
    }
    uint64_t v9 = v4;
    operator delete(v6);
  }
  if (SHIBYTE(v11[2]) < 0) {
    operator delete(v11[0]);
  }
  return a1;
}

void sub_6F0844(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_6F0868(int a1, unint64_t a2, int **a3, double a4, double a5, double a6, double a7)
{
  unint64_t v11 = a2 - 1;
  LODWORD(v12) = *(_DWORD *)(sub_38128(a3, a2 - 1) + 4);
  long double v13 = exp((double)v12 * -6.28318531 / 4294967300.0 + 3.14159265);
  long double v14 = atan((v13 - 1.0 / v13) * 0.5);
  double v15 = 0.00932288077 / (1.0 / cos(v14 * 57.2957795 / 180.0 * 3.14159265));
  uint64_t v16 = &(*a3)[3 * v11];
  int v17 = *v16;
  unsigned int v18 = v16[1];
  BOOL v19 = (unsigned int *)sub_38128(a3, v11);
  uint64_t v20 = *v19;
  uint64_t v21 = v19[1];
  unint64_t v22 = v11;
  do
  {
    if (!v22) {
      break;
    }
    unint64_t v23 = (unsigned int *)sub_38128(a3, --v22);
  }
  while (sqrt((double)((*v23 - v20) * (*v23 - v20) + (v23[1] - v21) * ((unint64_t)v23[1] - v21))) / 100.0 <= a6);
  unint64_t v24 = (_DWORD *)sub_38128(a3, v22);
  unsigned int v26 = v24[1];
  double i = 0.0;
  BOOL v28 = v17 == *v24 && v18 == v26;
  unint64_t v29 = a2;
  if (!v28)
  {
    double v30 = -(double)(*v24 - v17);
    if (v17 - *v24 < (*v24 - v17)) {
      double v30 = (double)(v17 - *v24);
    }
    long double v31 = atan2((double)v18 - (double)v26, v30);
    HIDWORD(v25) = 1080459264;
    for (double i = (v31 + 1.57079633) * 180.0 / 3.14159265; i >= 180.0; double i = i + -360.0)
      ;
    for (; i < -180.0; double i = i + 360.0)
      ;
  }
  if (!a2) {
    return;
  }
  int v32 = 0;
  int v122 = 0;
  unint64_t v33 = v11;
  unsigned int v34 = 0;
  DWORD1(v35) = 1073291771;
  unint64_t v123 = a2;
  unint64_t v120 = v33;
  while (1)
  {
    int v36 = &(*a3)[3 * v33];
    LODWORD(v35) = *v36;
    LODWORD(v25) = v36[1];
    double v37 = (double)(unint64_t)v35;
    double v38 = (double)*(unint64_t *)&v25;
    unint64_t v39 = v120;
    if (v33 == v120)
    {
      int v40 = (unsigned int *)sub_38128(a3, v120);
      uint64_t v42 = *v40;
      uint64_t v41 = v40[1];
      do
      {
        if (!v39) {
          break;
        }
        uint64_t v43 = (unsigned int *)sub_38128(a3, --v39);
      }
      while (sqrt((double)((*v43 - v42) * (*v43 - v42) + (v43[1] - v41) * ((unint64_t)v43[1] - v41))) / 100.0 <= a6);
      uint64_t v44 = (unsigned int *)sub_38128(a3, v39);
      unsigned int v45 = v44[1];
      double v46 = v37 - (double)*v44;
      double v47 = v38 - (double)v45;
      if (v45 >= 0xFFFFFFFE) {
        unsigned int v45 = -2;
      }
      unint64_t v48 = &(*a3)[3 * v120];
      int v50 = *v48;
      unsigned int v49 = v48[1];
      double j = 0.0;
      unsigned int v52 = v50 - *v44;
      if (v52) {
        BOOL v53 = 0;
      }
      else {
        BOOL v53 = v45 == v49;
      }
      if (!v53)
      {
        double v54 = -(double)(*v44 - v50);
        if (v50 - *v44 < *v44 - v50) {
          double v54 = (double)v52;
        }
        for (double j = (atan2((double)v49 - (double)v45, v54) + 1.57079633) * 180.0 / 3.14159265; j >= 180.0; double j = j + -360.0)
          ;
        for (; j < -180.0; double j = j + 360.0)
          ;
      }
    }
    else if (v33)
    {
      int v55 = (unsigned int *)sub_38128(a3, v33);
      uint64_t v57 = *v55;
      uint64_t v56 = v55[1];
      unint64_t v58 = v33;
      do
      {
        if (!v58) {
          break;
        }
        BOOL v59 = (unsigned int *)sub_38128(a3, --v58);
      }
      while (sqrt((double)((*v59 - v57) * (*v59 - v57) + (v59[1] - v56) * ((unint64_t)v59[1] - v56))) / 100.0 <= a6);
      uint64_t v60 = *(void *)sub_38128(a3, v58);
      uint64_t v61 = (unsigned int *)sub_38128(a3, v33);
      uint64_t v63 = *v61;
      uint64_t v62 = v61[1];
      unint64_t v64 = v123;
      while (v64 < v29)
      {
        uint64_t v65 = (unsigned int *)sub_38128(a3, v64++);
        if (sqrt((double)((*v65 - v63) * (*v65 - v63) + (v65[1] - v62) * ((unint64_t)v65[1] - v62))) / 100.0 > a6)
        {
          unint64_t v66 = v64 - 1;
          goto LABEL_46;
        }
      }
      unint64_t v66 = -1 - 0x5555555555555555 * (a3[1] - *a3);
LABEL_46:
      uint64_t v73 = (unsigned int *)sub_38128(a3, v66);
      unsigned int v75 = *v73;
      unsigned int v74 = v73[1];
      double v76 = (double)HIDWORD(v60);
      double v77 = (double)v74;
      if (*v73 == v60 && HIDWORD(v60) == v74)
      {
        double v80 = v77 - v76;
        double j = 0.0;
      }
      else
      {
        double v79 = (double)(*v73 - v60);
        if (*v73 - v60 >= v60 - *v73) {
          double v79 = -(double)(v60 - *v73);
        }
        double v80 = v77 - v76;
        for (double j = (atan2(v77 - v76, v79) + 1.57079633) * 180.0 / 3.14159265; j >= 180.0; double j = j + -360.0)
          ;
        for (; j < -180.0; double j = j + 360.0)
          ;
      }
      double v46 = ((double)v75 - (double)v60) * 0.5;
      double v47 = v80 * 0.5;
    }
    else
    {
      unint64_t v67 = (unsigned int *)sub_38128(a3, 0);
      uint64_t v68 = *v67;
      uint64_t v69 = v67[1];
      unint64_t v70 = 1;
      while (v29 != v70)
      {
        __int16 v71 = (unsigned int *)sub_38128(a3, v70++);
        if (sqrt((double)((*v71 - v68) * (*v71 - v68) + (v71[1] - v69) * ((unint64_t)v71[1] - v69))) / 100.0 > a6)
        {
          unint64_t v72 = v70 - 1;
          goto LABEL_60;
        }
      }
      unint64_t v72 = -1 - 0x5555555555555555 * (a3[1] - *a3);
LABEL_60:
      unsigned __int16 v81 = (unsigned int *)sub_38128(a3, v72);
      unsigned int v82 = v81[1];
      double v46 = (double)*v81 - v37;
      double v47 = (double)v82 - v38;
      int v83 = *a3;
      if (v82 >= 0xFFFFFFFE) {
        unsigned int v82 = -2;
      }
      int v85 = *v83;
      unsigned int v84 = v83[1];
      double j = 0.0;
      unsigned int v86 = *v81 - v85;
      if (v86) {
        BOOL v87 = 0;
      }
      else {
        BOOL v87 = v84 == v82;
      }
      if (!v87)
      {
        double v88 = -(double)(v85 - *v81);
        if (*v81 - v85 < v85 - *v81) {
          double v88 = (double)v86;
        }
        for (double j = (atan2((double)v82 - (double)v84, v88) + 1.57079633) * 180.0 / 3.14159265; j >= 180.0; double j = j + -360.0)
          ;
        for (; j < -180.0; double j = j + 360.0)
          ;
      }
    }
    sub_440F0(i, j);
    if (*(double *)&v35 > a7) {
      break;
    }
    double v89 = -v47;
    double v90 = -v46;
    if (a1) {
      double v90 = v46;
    }
    else {
      double v89 = v47;
    }
    double v91 = sqrt(v90 * v90 + v89 * v89);
    double v92 = 0.0;
    double v93 = 0.0;
    if (v91 != 0.0)
    {
      double v92 = v89 / v91;
      double v93 = v90 / v91;
    }
    *(double *)&long long v35 = a4 * v92;
    double v25 = a4 * v93;
    double v94 = a4 * v92 / v15;
    double v95 = a4 * v93 / v15;
    if (v34 < v122)
    {
      *unsigned int v34 = v94;
      v34[1] = v95;
      v34 += 2;
      if (!v33) {
        break;
      }
      goto LABEL_95;
    }
    uint64_t v96 = ((char *)v34 - (char *)v32) >> 4;
    unint64_t v97 = v96 + 1;
    if ((unint64_t)(v96 + 1) >> 60) {
      sub_2E00();
    }
    if (v122 - v32 > v97) {
      unint64_t v97 = v122 - v32;
    }
    if ((unint64_t)((char *)v122 - (char *)v32) >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v98 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v98 = v97;
    }
    if (v98)
    {
      if (v98 >> 60) {
        sub_188D718();
      }
      long long v99 = (char *)operator new(16 * v98);
      long long v100 = (double *)&v99[16 * v96];
      *long long v100 = v94;
      v100[1] = v95;
      if (v34 == v32)
      {
LABEL_101:
        long long v102 = v100;
        unsigned int v34 = v100 + 2;
        int v122 = (double *)&v99[16 * v98];
        if (v32) {
          goto LABEL_93;
        }
        goto LABEL_94;
      }
    }
    else
    {
      long long v99 = 0;
      long long v100 = (double *)(16 * v96);
      *long long v100 = v94;
      v100[1] = v95;
      if (v34 == v32) {
        goto LABEL_101;
      }
    }
    long long v101 = v100;
    do
    {
      long long v35 = *((_OWORD *)v34 - 1);
      long long v102 = v101 - 2;
      *((_OWORD *)v101 - 1) = v35;
      v34 -= 2;
      v101 -= 2;
    }
    while (v34 != v32);
    unsigned int v34 = v100 + 2;
    int v122 = (double *)&v99[16 * v98];
    if (v32) {
LABEL_93:
    }
      operator delete(v32);
LABEL_94:
    int v32 = v102;
    unint64_t v29 = a2;
    if (!v33) {
      break;
    }
LABEL_95:
    uint64_t v103 = *a3;
    long long v104 = (unsigned int *)sub_38128(a3, v33);
    uint64_t v106 = *v104;
    uint64_t v105 = v104[1];
    unint64_t v107 = v33;
    do
    {
      if (!v107) {
        break;
      }
      long long v108 = (unsigned int *)sub_38128(a3, --v107);
    }
    while (sqrt((double)((*v108 - v106) * (*v108 - v106) + (v108[1] - v105) * ((unint64_t)v108[1] - v105)))
          / 100.0 <= a6);
    uint64_t v109 = (void *)sub_38128(a3, v107);
    uint64_t v110 = v103[3 * v33 + 1] - HIDWORD(*v109);
    HIDWORD(v25) = HIDWORD(a5);
    *(double *)&long long v35 = sqrt((double)((v103[3 * v33] - (unint64_t)*v109)
                                  * (v103[3 * v33] - (unint64_t)*v109)
                                  + v110 * v110))
                    / -100.0
                    * a5;
    a4 = a4 + *(double *)&v35;
    unint64_t v29 = a2;
    if (a4 <= 0.0) {
      break;
    }
    --v33;
    --v123;
  }
  if (v34 == v32)
  {
    if (v32) {
      goto LABEL_111;
    }
  }
  else
  {
    uint64_t v111 = ((char *)v34 - (char *)v32) >> 4;
    uint64_t v112 = 3 * v29;
    int v113 = v32 + 1;
    do
    {
      uint64_t v114 = (uint64_t)&(*a3)[v112];
      LODWORD(v35) = *(_DWORD *)(v114 - 12);
      LODWORD(v25) = *(_DWORD *)(v114 - 8);
      *(double *)&long long v35 = *(v113 - 1) + (double)(unint64_t)v35;
      double v115 = *v113;
      v113 += 2;
      double v25 = v115 + (double)*(unint64_t *)&v25;
      LODWORD(v116) = v25;
      int v117 = *(_DWORD *)(v114 - 4);
      if (v25 >= 0xFFFFFFFE) {
        uint64_t v116 = 4294967294;
      }
      else {
        uint64_t v116 = v116;
      }
      *(void *)(v114 - 12) = *(double *)&v35 | (unint64_t)(v116 << 32);
      *(_DWORD *)(v114 - 4) = 0x7FFFFFFF;
      (*a3)[v112 - 1] = v117;
      v112 -= 3;
      --v111;
    }
    while (v111);
LABEL_111:
    operator delete(v32);
  }
}

void sub_6F1258(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  if (v18) {
    operator delete(v18);
  }
  _Unwind_Resume(exception_object);
}

void sub_6F12AC(uint64_t a1, void *a2)
{
  HIBYTE(__p[2]) = 6;
  strcpy((char *)__p, "enable");
  uint64_t v4 = sub_58070(a2, (uint64_t)__p);
  if (v4 && (int v5 = *((_DWORD *)v4 + 12), (v5 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)(a1 + 32) = v5 == 4;
    if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
      goto LABEL_7;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a1 + 32) != 0;
    if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
      goto LABEL_7;
    }
  }
  operator delete(__p[0]);
LABEL_7:
  HIBYTE(__p[2]) = 17;
  strcpy((char *)__p, "minimum_shift_gap");
  sub_5C8A4(a2, (uint64_t)__p, (uint64_t *)a1);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  HIBYTE(__p[2]) = 17;
  strcpy((char *)__p, "maximum_shift_gap");
  sub_5C8A4(a2, (uint64_t)__p, (uint64_t *)(a1 + 8));
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  __p[0] = operator new(0x28uLL);
  *(_OWORD *)&__p[1] = xmmword_20B8FD0;
  strcpy((char *)__p[0], "maximum_shift_bearing_change_degrees");
  unint64_t v6 = sub_58070(a2, (uint64_t)__p);
  char v7 = (void *)(a1 + 16);
  if (v6)
  {
    char v7 = v6 + 5;
    if (*((_DWORD *)v6 + 12) != 1) {
      char v7 = (void *)(a1 + 16);
    }
  }
  *(void *)(a1 + 16) = *v7;
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B91A0;
  strcpy((char *)__p[0], "shift_attenuation_per_meter");
  int v8 = sub_58070(a2, (uint64_t)__p);
  uint64_t v9 = (void *)(a1 + 24);
  if (v8)
  {
    uint64_t v9 = v8 + 5;
    if (*((_DWORD *)v8 + 12) != 1) {
      uint64_t v9 = (void *)(a1 + 24);
    }
  }
  *(void *)(a1 + 24) = *v9;
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
}

void sub_6F14CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6F14F8(uint64_t a1, uint64_t a2)
{
  strcpy((char *)v11, "MultiPointRouteAligner");
  HIBYTE(v11[2]) = 22;
  __p = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int64x2_t v3 = sub_374CDC(a2, (uint64_t)v11, (uint64_t *)&__p);
  *(_OWORD *)a1 = xmmword_20E8BE0;
  *(_OWORD *)(a1 + 16) = xmmword_20E8BF0;
  *(unsigned char *)(a1 + 32) = 0;
  sub_6F1620(a1, v3);
  uint64_t v4 = (void **)__p;
  if (__p)
  {
    int v5 = v9;
    unint64_t v6 = __p;
    if (v9 != __p)
    {
      do
      {
        if (*((char *)v5 - 1) < 0) {
          operator delete(*(v5 - 3));
        }
        v5 -= 3;
      }
      while (v5 != v4);
      unint64_t v6 = __p;
    }
    uint64_t v9 = v4;
    operator delete(v6);
  }
  if (SHIBYTE(v11[2]) < 0) {
    operator delete(v11[0]);
  }
  return a1;
}

void sub_6F15FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_6F1620(uint64_t a1, void *a2)
{
  HIBYTE(__p[2]) = 6;
  strcpy((char *)__p, "enable");
  uint64_t v4 = sub_58070(a2, (uint64_t)__p);
  if (v4 && (int v5 = *((_DWORD *)v4 + 12), (v5 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)(a1 + 32) = v5 == 4;
    if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
      goto LABEL_7;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a1 + 32) != 0;
    if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
      goto LABEL_7;
    }
  }
  operator delete(__p[0]);
LABEL_7:
  HIBYTE(__p[2]) = 17;
  strcpy((char *)__p, "minimum_shift_gap");
  sub_5C8A4(a2, (uint64_t)__p, (uint64_t *)a1);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  HIBYTE(__p[2]) = 17;
  strcpy((char *)__p, "maximum_shift_gap");
  sub_5C8A4(a2, (uint64_t)__p, (uint64_t *)(a1 + 8));
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  __p[0] = operator new(0x28uLL);
  *(_OWORD *)&__p[1] = xmmword_20B8FD0;
  strcpy((char *)__p[0], "maximum_shift_bearing_change_degrees");
  unint64_t v6 = sub_58070(a2, (uint64_t)__p);
  char v7 = (void *)(a1 + 16);
  if (v6)
  {
    char v7 = v6 + 5;
    if (*((_DWORD *)v6 + 12) != 1) {
      char v7 = (void *)(a1 + 16);
    }
  }
  *(void *)(a1 + 16) = *v7;
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B91A0;
  strcpy((char *)__p[0], "shift_attenuation_per_meter");
  int v8 = sub_58070(a2, (uint64_t)__p);
  uint64_t v9 = (void *)(a1 + 24);
  if (v8)
  {
    uint64_t v9 = v8 + 5;
    if (*((_DWORD *)v8 + 12) != 1) {
      uint64_t v9 = (void *)(a1 + 24);
    }
  }
  *(void *)(a1 + 24) = *v9;
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
}

void sub_6F1840(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6F186C(uint64_t a1, uint64_t a2)
{
  strcpy((char *)v11, "MultiPointRouteAligner");
  HIBYTE(v11[2]) = 22;
  __p = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int64x2_t v3 = sub_374CDC(a2, (uint64_t)v11, (uint64_t *)&__p);
  *(_OWORD *)a1 = xmmword_20E8BE0;
  *(_OWORD *)(a1 + 16) = xmmword_20E8BF0;
  *(unsigned char *)(a1 + 32) = 0;
  sub_6F1994(a1, v3);
  uint64_t v4 = (void **)__p;
  if (__p)
  {
    int v5 = v9;
    unint64_t v6 = __p;
    if (v9 != __p)
    {
      do
      {
        if (*((char *)v5 - 1) < 0) {
          operator delete(*(v5 - 3));
        }
        v5 -= 3;
      }
      while (v5 != v4);
      unint64_t v6 = __p;
    }
    uint64_t v9 = v4;
    operator delete(v6);
  }
  if (SHIBYTE(v11[2]) < 0) {
    operator delete(v11[0]);
  }
  return a1;
}

void sub_6F1970(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_6F1994(uint64_t a1, void *a2)
{
  HIBYTE(__p[2]) = 6;
  strcpy((char *)__p, "enable");
  uint64_t v4 = sub_58070(a2, (uint64_t)__p);
  if (v4 && (int v5 = *((_DWORD *)v4 + 12), (v5 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)(a1 + 32) = v5 == 4;
    if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
      goto LABEL_7;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a1 + 32) != 0;
    if ((SHIBYTE(__p[2]) & 0x80000000) == 0) {
      goto LABEL_7;
    }
  }
  operator delete(__p[0]);
LABEL_7:
  HIBYTE(__p[2]) = 17;
  strcpy((char *)__p, "minimum_shift_gap");
  sub_5C8A4(a2, (uint64_t)__p, (uint64_t *)a1);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  HIBYTE(__p[2]) = 17;
  strcpy((char *)__p, "maximum_shift_gap");
  sub_5C8A4(a2, (uint64_t)__p, (uint64_t *)(a1 + 8));
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  __p[0] = operator new(0x28uLL);
  *(_OWORD *)&__p[1] = xmmword_20B8FD0;
  strcpy((char *)__p[0], "maximum_shift_bearing_change_degrees");
  unint64_t v6 = sub_58070(a2, (uint64_t)__p);
  char v7 = (void *)(a1 + 16);
  if (v6)
  {
    char v7 = v6 + 5;
    if (*((_DWORD *)v6 + 12) != 1) {
      char v7 = (void *)(a1 + 16);
    }
  }
  *(void *)(a1 + 16) = *v7;
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B91A0;
  strcpy((char *)__p[0], "shift_attenuation_per_meter");
  int v8 = sub_58070(a2, (uint64_t)__p);
  uint64_t v9 = (void *)(a1 + 24);
  if (v8)
  {
    uint64_t v9 = v8 + 5;
    if (*((_DWORD *)v8 + 12) != 1) {
      uint64_t v9 = (void *)(a1 + 24);
    }
  }
  *(void *)(a1 + 24) = *v9;
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
}

void sub_6F1BB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_6F1BE0(uint64_t a1, void *a2)
{
  if (*(unsigned char *)(a1 + 32))
  {
    int64x2_t v2 = (void *)nullsub_1(a2);
    unint64_t v3 = 0xFF55E3181697D6CDLL * ((uint64_t)(v2[1] - *v2) >> 3);
    unint64_t v4 = v3 <= 1 ? 1 : 0xFF55E3181697D6CDLL * ((uint64_t)(v2[1] - *v2) >> 3);
    unint64_t v88 = v4;
    if (v3 >= 2)
    {
      uint64_t v5 = 1;
      double v6 = -6.28318531;
      double v7 = 1.0;
      while (1)
      {
        int v8 = (void *)sub_6467E8(a2, v5);
        uint64_t v91 = v5;
        uint64_t v9 = (void *)sub_6467E8(a2, v5 - 1);
        uint64_t v10 = sub_650EEC((uint64_t)v8, 0);
        unint64_t v11 = sub_46C760(v9);
        unint64_t v12 = sub_650EEC((uint64_t)v9, v11 - 1);
        double v92 = v9;
        if (*v10 == v10[1]) {
          break;
        }
LABEL_10:
        int v13 = sub_46C760(v9);
        double v15 = (char *)*v12;
        long double v14 = (char *)v12[1];
        BOOL v16 = *v12 == (void)v14;
        if ((char *)*v12 == v14)
        {
          uint64_t v17 = (v13 - 1);
          if ((v17 & 0x80000000) == 0)
          {
            uint64_t v18 = v17 - 1;
            while (1)
            {
              while (1)
              {
                uint64_t v20 = sub_650EEC((uint64_t)v9, v18);
                double v15 = (char *)*v12;
                if (v12 != v20) {
                  break;
                }
                long double v14 = (char *)v12[1];
                BOOL v16 = v15 == v14;
                if (v15 != v14 || v18-- == -1) {
                  goto LABEL_43;
                }
              }
              unint64_t v22 = (char *)*v20;
              uint64_t v21 = (char *)v20[1];
              int64_t v23 = (int64_t)&v21[-*v20];
              unint64_t v24 = 0xAAAAAAAAAAAAAAABLL * (v23 >> 2);
              uint64_t v25 = v12[2];
              if (0xAAAAAAAAAAAAAAABLL * ((v25 - (uint64_t)v15) >> 2) < v24)
              {
                if (v15)
                {
                  v12[1] = (uint64_t)v15;
                  operator delete(v15);
                  uint64_t v25 = 0;
                  *unint64_t v12 = 0;
                  v12[1] = 0;
                  v12[2] = 0;
                }
                if (v24 > 0x1555555555555555) {
                  goto LABEL_113;
                }
                unint64_t v26 = 0xAAAAAAAAAAAAAAABLL * (v25 >> 2);
                uint64_t v27 = 2 * v26;
                if (2 * v26 <= v24) {
                  uint64_t v27 = 0xAAAAAAAAAAAAAAABLL * (v23 >> 2);
                }
                unint64_t v28 = v26 >= 0xAAAAAAAAAAAAAAALL ? 0x1555555555555555 : v27;
                if (v28 > 0x1555555555555555) {
LABEL_113:
                }
                  sub_2E00();
                uint64_t v29 = 12 * v28;
                double v30 = (char *)operator new(12 * v28);
                double v15 = v30;
                *unint64_t v12 = (uint64_t)v30;
                v12[1] = (uint64_t)v30;
                v12[2] = (uint64_t)&v30[v29];
                if (v21 != v22) {
                  memcpy(v30, v22, v23);
                }
                goto LABEL_38;
              }
              long double v31 = (unsigned char *)v12[1];
              unint64_t v32 = 0xAAAAAAAAAAAAAAABLL * ((v31 - v15) >> 2);
              if (v32 < v24) {
                break;
              }
              if (v21 != v22)
              {
                unsigned int v34 = (void *)*v12;
                unint64_t v33 = v22;
LABEL_37:
                memmove(v34, v33, v23);
              }
LABEL_38:
              long double v14 = &v15[v23];
              v12[1] = (uint64_t)&v15[v23];
              double v15 = (char *)*v12;
              BOOL v16 = *v12 == (void)v14;
              if ((char *)*v12 != v14 || v18-- == -1) {
                goto LABEL_43;
              }
            }
            if (v31 != v15)
            {
              memmove((void *)*v12, v22, v31 - v15);
              double v15 = (char *)v12[1];
            }
            unint64_t v33 = &v22[12 * v32];
            int64_t v23 = v21 - v33;
            if (v21 == v33) {
              goto LABEL_38;
            }
            unsigned int v34 = v15;
            goto LABEL_37;
          }
        }
LABEL_43:
        if (!v16 && *v10 != v10[1])
        {
          int v36 = (unsigned int *)sub_38128(v12, 0xAAAAAAAAAAAAAAABLL * ((v14 - v15) >> 2) - 2);
          unsigned int v37 = *v36;
          unsigned int v38 = v36[1];
          uint64_t v39 = v12[1];
          uint64_t v40 = *(unsigned int *)(v39 - 12);
          uint64_t v41 = *(unsigned int *)(v39 - 8);
          int v42 = *(_DWORD *)(v39 - 4);
          uint64_t v43 = *(unsigned int *)*v10;
          uint64_t v44 = *(unsigned int *)(*v10 + 4);
          int v45 = *(_DWORD *)(*v10 + 8);
          double v46 = (int *)sub_38128(v10, 1uLL);
          BOOL v47 = v40 == v43 && v41 == v44;
          if (!v47 || v42 != v45)
          {
            int v50 = *v46;
            unsigned int v49 = v46[1];
            double v51 = (((double)v38 - (double)v41) * ((double)v43 - (double)v40)
                 - ((double)v37 - (double)v40) * ((double)v44 - (double)v41))
                / sqrt(((double)v37 - (double)v40) * ((double)v37 - (double)v40)+ ((double)v38 - (double)v41) * ((double)v38 - (double)v41));
            unsigned int v52 = v44 >= 0xFFFFFFFE ? -2 : v44;
            long double v53 = exp((double)v52 * v6 / 4294967300.0 + 3.14159265);
            long double v54 = atan((v53 - v7 / v53) * 0.5);
            double v55 = v51 * (0.00932288077 / (v7 / cos(v54 * 57.2957795 / 180.0 * 3.14159265)));
            double v56 = fabs(v55);
            if (v56 >= (double)*(uint64_t *)a1 / 100.0
              && sqrt((double)(unint64_t)((v40 - v43) * (v40 - v43) + (v41 - v44) * (v41 - v44))) / 100.0 - v56 < (double)*(uint64_t *)(a1 + 8) / 100.0)
            {
              double v57 = v6;
              if (v40 != v37 || (double i = 0.0, v38 != v41))
              {
                double v59 = -(double)(v37 - v40);
                if (v40 - v37 < v37 - v40) {
                  double v59 = (double)(v40 - v37);
                }
                for (double i = (atan2((double)v41 - (double)v38, v59) + 1.57079633) * 180.0 / 3.14159265;
                      i >= 180.0;
                for (; i < -180.0; double i = i + 360.0)
                  ;
              }
              if (v50 != v43 || (double j = 0.0, v44 != v49))
              {
                double v61 = -(double)(v43 - v50);
                if (v50 - (int)v43 < (v43 - v50)) {
                  double v61 = (double)(v50 - v43);
                }
                for (double j = (atan2((double)v49 - (double)v44, v61) + 1.57079633) * 180.0 / 3.14159265;
                      j >= 180.0;
                for (; j < -180.0; double j = j + 360.0)
                  ;
              }
              double v62 = vabdd_f64(i, j);
              double v6 = v57;
              double v7 = 1.0;
              if (v62 < *(double *)(a1 + 16))
              {
                int v63 = sub_46C760(v92);
                if (v55 != 0.0)
                {
                  uint64_t v64 = (v63 - 1);
                  if ((v64 & 0x80000000) == 0)
                  {
                    do
                    {
                      uint64_t v65 = sub_650EEC((uint64_t)v92, v64);
                      unint64_t v66 = 0xAAAAAAAAAAAAAAABLL * ((v65[1] - *v65) >> 2);
                      double v67 = *(double *)(a1 + 24);
                      BOOL v68 = fabs(v56 / v67) != INFINITY && v66 > 1;
                      if (v68)
                      {
                        sub_6F0868(v55 > 0.0, v66, (int **)v65, v56, v67, 0.5, *(double *)(a1 + 16));
                        double v56 = v69;
                      }
                      else
                      {
                        double v56 = (double)v66;
                      }
                      if (v56 == 0.0) {
                        break;
                      }
                      BOOL v68 = (int)v64-- <= 0;
                    }
                    while (!v68);
                  }
                }
              }
            }
          }
        }
        uint64_t v5 = v91 + 1;
        if (v91 + 1 == v88) {
          return;
        }
      }
      LODWORD(v70) = 0;
      while (1)
      {
        while (1)
        {
          while (1)
          {
            if (sub_46C760(v8) <= v70) {
              goto LABEL_10;
            }
            uint64_t v70 = (v70 + 1);
            __int16 v71 = sub_650EEC((uint64_t)v8, v70);
            unint64_t v72 = (char *)*v10;
            if (v10 != v71) {
              break;
            }
            if (v72 != (char *)v10[1]) {
              goto LABEL_10;
            }
          }
          uint64_t v73 = (char *)*v71;
          unsigned int v74 = (char *)v71[1];
          int64_t v75 = (int64_t)&v74[-*v71];
          unint64_t v76 = 0xAAAAAAAAAAAAAAABLL * (v75 >> 2);
          uint64_t v77 = v10[2];
          if (0xAAAAAAAAAAAAAAABLL * ((v77 - (uint64_t)v72) >> 2) >= v76) {
            break;
          }
          if (v72)
          {
            v10[1] = (uint64_t)v72;
            operator delete(v72);
            uint64_t v77 = 0;
            *uint64_t v10 = 0;
            v10[1] = 0;
            _OWORD v10[2] = 0;
          }
          if (v76 > 0x1555555555555555) {
            goto LABEL_114;
          }
          unint64_t v78 = 0xAAAAAAAAAAAAAAABLL * (v77 >> 2);
          uint64_t v79 = 2 * v78;
          if (2 * v78 <= v76) {
            uint64_t v79 = 0xAAAAAAAAAAAAAAABLL * (v75 >> 2);
          }
          unint64_t v80 = v78 >= 0xAAAAAAAAAAAAAAALL ? 0x1555555555555555 : v79;
          if (v80 > 0x1555555555555555) {
LABEL_114:
          }
            sub_2E00();
          uint64_t v81 = 12 * v80;
          unsigned int v82 = (char *)operator new(12 * v80);
          int v83 = v82;
          *uint64_t v10 = (uint64_t)v82;
          v10[1] = (uint64_t)v82;
          _OWORD v10[2] = (uint64_t)&v82[v81];
          uint64_t v9 = v92;
          if (v74 != v73) {
            memcpy(v82, v73, v75);
          }
          v10[1] = (uint64_t)&v83[v75];
          if ((char *)*v10 != &v83[v75]) {
            goto LABEL_10;
          }
        }
        unsigned int v84 = (unsigned char *)v10[1];
        unint64_t v85 = 0xAAAAAAAAAAAAAAABLL * ((v84 - v72) >> 2);
        if (v85 < v76) {
          break;
        }
        if (v74 != v73)
        {
          BOOL v87 = (void *)*v10;
          unsigned int v86 = v73;
LABEL_110:
          memmove(v87, v86, v75);
        }
LABEL_111:
        uint64_t v9 = v92;
        v10[1] = (uint64_t)&v72[v75];
        if ((char *)*v10 != &v72[v75]) {
          goto LABEL_10;
        }
      }
      if (v84 != v72)
      {
        memmove((void *)*v10, v73, v84 - v72);
        unint64_t v72 = (char *)v10[1];
      }
      unsigned int v86 = &v73[12 * v85];
      int64_t v75 = v74 - v86;
      if (v74 == v86) {
        goto LABEL_111;
      }
      BOOL v87 = v72;
      goto LABEL_110;
    }
  }
}

double sub_6F245C()
{
  byte_25A08F7 = 1;
  word_25A08E0 = 65;
  byte_25A090F = 1;
  word_25A08F8 = 65;
  char v4 = 7;
  strcpy((char *)v3, "UNKNOWN");
  int v5 = 0;
  char v7 = 14;
  strcpy((char *)v6, "ROUTES_THROUGH");
  int v8 = 1;
  char v10 = 9;
  strcpy((char *)__p, "ROUTES_TO");
  int v11 = 3;
  char v13 = 11;
  strcpy((char *)v12, "ROUTES_FROM");
  int v14 = 2;
  xmmword_25A09A0 = 0u;
  *(_OWORD *)&qword_25A09B0 = 0u;
  dword_25A09C0 = 1065353216;
  sub_3A6EF0((uint64_t)&xmmword_25A09A0, (uint64_t)v3, (uint64_t)v3);
  sub_3A6EF0((uint64_t)&xmmword_25A09A0, (uint64_t)v6, (uint64_t)v6);
  sub_3A6EF0((uint64_t)&xmmword_25A09A0, (uint64_t)__p, (uint64_t)__p);
  sub_3A6EF0((uint64_t)&xmmword_25A09A0, (uint64_t)v12, (uint64_t)v12);
  if (v13 < 0)
  {
    operator delete(v12[0]);
    if ((v10 & 0x80000000) == 0)
    {
LABEL_3:
      if ((v7 & 0x80000000) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      operator delete(v6[0]);
      if ((v4 & 0x80000000) == 0) {
        goto LABEL_5;
      }
LABEL_9:
      operator delete(v3[0]);
      goto LABEL_5;
    }
  }
  else if ((v10 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p[0]);
  if (v7 < 0) {
    goto LABEL_8;
  }
LABEL_4:
  if (v4 < 0) {
    goto LABEL_9;
  }
LABEL_5:
  byte_25A0927 = 8;
  strcpy((char *)&qword_25A0910, "any_mode");
  byte_25A093F = 7;
  strcpy((char *)&dword_25A0928, "cycling");
  byte_25A0957 = 7;
  strcpy((char *)&dword_25A0940, "driving");
  byte_25A096F = 7;
  strcpy((char *)&dword_25A0958, "walking");
  qword_25A0978 = 0;
  qword_25A0980 = 0;
  qword_25A0970 = 0;
  v0 = operator new(9uLL);
  *(void *)v0 = 0x4020C000103050DLL;
  v0[8] = 6;
  qword_25A0970 = (uint64_t)v0;
  qword_25A0978 = (uint64_t)(v0 + 9);
  qword_25A0980 = (uint64_t)(v0 + 9);
  qword_25A0988 = 0;
  qword_25A0990 = 0;
  unk_25A0998 = 0;
  uint64_t v1 = (char *)operator new(9uLL);
  qword_25A0990 = (uint64_t)(v1 + 9);
  unk_25A0998 = v1 + 9;
  double result = 1.10224369e-279;
  *(void *)uint64_t v1 = 0x604020C00010305;
  v1[8] = 13;
  qword_25A0988 = (uint64_t)v1;
  return result;
}

void sub_6F2724(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  if (qword_25A09B0) {
    sub_20AAA8C((void **)qword_25A09B0);
  }
  unsigned int v37 = (void *)xmmword_25A09A0;
  *(void *)&xmmword_25A09A0 = 0;
  if (v37)
  {
    operator delete(v37);
    if ((a36 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a29 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_11;
    }
  }
  else if ((a36 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(__p);
  if ((a29 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a22 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_12;
  }
LABEL_11:
  operator delete(a24);
  if ((a22 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a15 & 0x80000000) == 0) {
LABEL_14:
    }
      _Unwind_Resume(exception_object);
LABEL_13:
    operator delete(a10);
    _Unwind_Resume(exception_object);
  }
LABEL_12:
  operator delete(a17);
  if ((a15 & 0x80000000) == 0) {
    goto LABEL_14;
  }
  goto LABEL_13;
}

uint64_t sub_6F27C4(uint64_t a1, int a2, long long *a3, long long *a4)
{
  *(_DWORD *)a1 = a2;
  if (*((char *)a3 + 23) < 0)
  {
    sub_4200((unsigned char *)(a1 + 8), *(void **)a3, *((void *)a3 + 1));
    uint64_t v7 = a1 + 32;
    if ((*((char *)a4 + 23) & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    long long v6 = *a3;
    *(void *)(a1 + 24) = *((void *)a3 + 2);
    *(_OWORD *)(a1 + 8) = v6;
    uint64_t v7 = a1 + 32;
    if ((*((char *)a4 + 23) & 0x80000000) == 0)
    {
LABEL_3:
      long long v8 = *a4;
      *(void *)(v7 + 16) = *((void *)a4 + 2);
      *(_OWORD *)uint64_t v7 = v8;
      return a1;
    }
  }
  sub_4200((unsigned char *)v7, *(void **)a4, *((void *)a4 + 1));
  return a1;
}

void sub_6F2864(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_6F2880(uint64_t a1)
{
  if (*(char *)(a1 + 31) < 0)
  {
    if (*(void *)(a1 + 16)) {
      return *(_DWORD *)a1 != -1;
    }
  }
  else if (*(unsigned char *)(a1 + 31))
  {
    return *(_DWORD *)a1 != -1;
  }
  return 0;
}

BOOL sub_6F28B0(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0)
  {
    sub_4200(__n, *(void **)a2, *(void *)(a2 + 8));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    *(_OWORD *)size_t __n = *(_OWORD *)a2;
    uint64_t v39 = *(void *)(a2 + 16);
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    {
LABEL_3:
      *(_OWORD *)long long __dst = *(_OWORD *)(a1 + 8);
      uint64_t v37 = *(void *)(a1 + 24);
      goto LABEL_6;
    }
  }
  sub_4200(__dst, *(void **)(a1 + 8), *(void *)(a1 + 16));
LABEL_6:
  if (v39 >= 0) {
    char v4 = __n;
  }
  else {
    char v4 = (size_t *)__n[0];
  }
  if (v39 >= 0) {
    size_t v5 = HIBYTE(v39);
  }
  else {
    size_t v5 = __n[1];
  }
  for (; v5; --v5)
  {
    *(unsigned char *)char v4 = __toupper(*(char *)v4);
    char v4 = (size_t *)((char *)v4 + 1);
  }
  char v6 = HIBYTE(v37);
  uint64_t v7 = __dst;
  long long v8 = (void **)__dst[0];
  uint64_t v9 = __dst[1];
  if (v37 >= 0) {
    char v10 = __dst;
  }
  else {
    char v10 = (void **)__dst[0];
  }
  int64_t v11 = HIBYTE(v37);
  if (v37 >= 0) {
    unint64_t v12 = (char *)HIBYTE(v37);
  }
  else {
    unint64_t v12 = (char *)__dst[1];
  }
  if (v12)
  {
    do
    {
      *(unsigned char *)char v10 = __toupper(*(char *)v10);
      char v10 = (void **)((char *)v10 + 1);
      --v12;
    }
    while (v12);
    int64_t v11 = HIBYTE(v37);
    long long v8 = (void **)__dst[0];
    uint64_t v9 = __dst[1];
    char v6 = HIBYTE(v37);
  }
  int64_t v13 = __n[1];
  if (v39 >= 0) {
    size_t v14 = HIBYTE(v39);
  }
  else {
    size_t v14 = __n[1];
  }
  if (v6 >= 0) {
    int64_t v15 = v11;
  }
  else {
    int64_t v15 = (int64_t)v9;
  }
  if (v6 < 0) {
    uint64_t v7 = v8;
  }
  if (v14 == v15)
  {
    if (v39 < 0)
    {
      BOOL v19 = (size_t *)__n[0];
      if (memcmp((const void *)__n[0], v7, __n[1])) {
        goto LABEL_42;
      }
    }
    else if (HIBYTE(v39))
    {
      BOOL v16 = __n;
      uint64_t v17 = v7;
      uint64_t v18 = HIBYTE(v39);
      while (*(unsigned __int8 *)v16 == *(unsigned __int8 *)v17)
      {
        BOOL v16 = (size_t *)((char *)v16 + 1);
        uint64_t v17 = (void **)((char *)v17 + 1);
        if (!--v18) {
          goto LABEL_53;
        }
      }
      goto LABEL_38;
    }
LABEL_53:
    BOOL v20 = 0;
    if (v6 < 0) {
      goto LABEL_73;
    }
    goto LABEL_70;
  }
LABEL_38:
  if (v39 >= 0) {
    BOOL v19 = __n;
  }
  else {
    BOOL v19 = (size_t *)__n[0];
  }
  int64_t v13 = v14;
LABEL_42:
  if (v15)
  {
    if (v13 >= v15)
    {
      uint64_t v21 = (char *)v19 + v13;
      int v22 = *(char *)v7;
      int64_t v23 = v19;
      do
      {
        if (v13 - v15 == -1) {
          break;
        }
        unint64_t v24 = (char *)memchr(v23, v22, v13 - v15 + 1);
        if (!v24) {
          break;
        }
        uint64_t v25 = v24;
        if (!memcmp(v24, v7, v15))
        {
          BOOL v20 = 1;
          if (v25 == v21 || v25 - (char *)v19 == -1) {
            goto LABEL_69;
          }
          while ((*(char *)v7 & 0x80000000) == 0
               && (_DefaultRuneLocale.__runetype[*(unsigned __int8 *)v7] & 0x400) != 0)
          {
            uint64_t v7 = (void **)((char *)v7 + 1);
            if (!--v15) {
              goto LABEL_60;
            }
          }
          goto LABEL_53;
        }
        int64_t v23 = (size_t *)(v25 + 1);
        int64_t v13 = v21 - (v25 + 1);
      }
      while (v13 >= v15);
    }
    BOOL v20 = 1;
    if (v6 < 0)
    {
LABEL_73:
      operator delete(__dst[0]);
      if (SHIBYTE(v39) < 0) {
        goto LABEL_74;
      }
      return v20;
    }
  }
  else
  {
LABEL_60:
    int v26 = *(char *)(a2 + 23);
    BOOL v27 = v26 < 0;
    unint64_t v28 = *(unsigned __int8 **)a2;
    if (v26 >= 0) {
      unint64_t v28 = (unsigned __int8 *)a2;
    }
    uint64_t v29 = (unsigned __int8 *)*(unsigned __int8 *)(a2 + 23);
    if (v27) {
      uint64_t v29 = *(unsigned __int8 **)(a2 + 8);
    }
    v33[0] = v28;
    v33[1] = v29;
    sub_6F2BFC(v33, __p);
    unint64_t v30 = (unint64_t)__p[1];
    if ((v35 & 0x80u) == 0) {
      unint64_t v30 = v35;
    }
    long double v31 = (void *)HIBYTE(v37);
    char v6 = HIBYTE(v37);
    if (v37 < 0) {
      long double v31 = __dst[1];
    }
    BOOL v20 = v30 != (void)v31;
    if ((char)v35 < 0)
    {
      operator delete(__p[0]);
      if (v37 < 0) {
        goto LABEL_73;
      }
    }
    else
    {
LABEL_69:
      if (v6 < 0) {
        goto LABEL_73;
      }
    }
  }
LABEL_70:
  if (SHIBYTE(v39) < 0) {
LABEL_74:
  }
    operator delete((void *)__n[0]);
  return v20;
}

void sub_6F2BA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a20 < 0)
  {
    operator delete(__p);
    if ((a27 & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else if ((a27 & 0x80000000) == 0)
  {
LABEL_3:
    _Unwind_Resume(a1);
  }
  operator delete(a22);
  _Unwind_Resume(a1);
}

unsigned __int8 **sub_6F2BFC@<X0>(unsigned __int8 **result@<X0>, void *a2@<X8>)
{
  char v4 = *result;
  unint64_t v3 = (unint64_t)result[1];
  size_t v5 = (char *)&(*result)[v3];
  if (v3)
  {
    char v6 = result[1];
    uint64_t v7 = *result;
    while ((char)*v7 < 0 || (_DefaultRuneLocale.__runetype[*v7] & 0x400) == 0)
    {
      ++v7;
      if (!--v6) {
        goto LABEL_13;
      }
    }
    if (v7 != (unsigned __int8 *)v5)
    {
LABEL_7:
      long long v8 = v7;
      while (((char)*v8 & 0x80000000) == 0 && (_DefaultRuneLocale.__runetype[*v8] & 0x400) != 0)
      {
        if (++v8 == (unsigned __int8 *)v5) {
          goto LABEL_14;
        }
      }
      size_t v5 = (char *)v8;
      uint64_t v9 = (char *)(v7 - v4);
      BOOL v10 = v3 >= v7 - v4;
      size_t v11 = v3 - (v7 - v4);
      if (!v10) {
        goto LABEL_28;
      }
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v7 = *result;
    if (v4 != (unsigned __int8 *)v5) {
      goto LABEL_7;
    }
  }
LABEL_13:
  uint64_t v7 = &(*result)[v3];
LABEL_14:
  uint64_t v9 = (char *)(v7 - v4);
  BOOL v10 = v3 >= v7 - v4;
  size_t v11 = v3 - (v7 - v4);
  if (!v10)
  {
LABEL_28:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  }
LABEL_16:
  size_t v12 = v5 - (char *)v7;
  if (v11 >= v12) {
    size_t v13 = v12;
  }
  else {
    size_t v13 = v11;
  }
  if (v13 >= 0x7FFFFFFFFFFFFFF8) {
    sub_188D690();
  }
  if (v13 >= 0x17)
  {
    uint64_t v14 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v13 | 7) != 0x17) {
      uint64_t v14 = v13 | 7;
    }
    uint64_t v15 = v14 + 1;
    BOOL v16 = operator new(v14 + 1);
    a2[1] = v13;
    a2[2] = v15 | 0x8000000000000000;
    *a2 = v16;
    a2 = v16;
  }
  else
  {
    *((unsigned char *)a2 + 23) = v13;
    if (!v13)
    {
      *(unsigned char *)a2 = 0;
      return result;
    }
  }
  double result = (unsigned __int8 **)memmove(a2, &v9[(void)v4], v13);
  *((unsigned char *)a2 + v13) = 0;
  return result;
}

void sub_6F2D94(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

BOOL sub_6F2DA8(uint64_t a1)
{
  if (*(char *)(a1 + 55) < 0) {
    return *(void *)(a1 + 40) != 0;
  }
  else {
    return *(unsigned char *)(a1 + 55) != 0;
  }
}

BOOL sub_6F2DD0(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 != *(_DWORD *)a2) {
    return 0;
  }
  uint64_t v4 = *(unsigned __int8 *)(a1 + 31);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = *(unsigned __int8 *)(a1 + 31);
  }
  else {
    uint64_t v5 = *(void *)(a1 + 16);
  }
  uint64_t v6 = *(unsigned __int8 *)(a2 + 31);
  int v7 = (char)v6;
  if ((v6 & 0x80u) != 0) {
    uint64_t v6 = *(void *)(a2 + 16);
  }
  if (v5 != v6) {
    return 0;
  }
  long long v8 = (const void **)(a1 + 8);
  uint64_t v9 = v7 >= 0 ? (unsigned __int8 *)(a2 + 8) : *(unsigned __int8 **)(a2 + 8);
  if ((v4 & 0x80) != 0)
  {
    if (memcmp(*v8, v9, *(void *)(a1 + 16))) {
      return 0;
    }
  }
  else if (*(unsigned char *)(a1 + 31))
  {
    while (*(unsigned __int8 *)v8 == *v9)
    {
      long long v8 = (const void **)((char *)v8 + 1);
      ++v9;
      if (!--v4) {
        goto LABEL_19;
      }
    }
    return 0;
  }
LABEL_19:
  uint64_t v11 = *(unsigned __int8 *)(a1 + 55);
  if (*(char *)(a1 + 55) < 0)
  {
    if (!*(void *)(a1 + 40)) {
      return 1;
    }
  }
  else if (!*(unsigned char *)(a1 + 55))
  {
    return 1;
  }
  uint64_t v12 = *(unsigned __int8 *)(a2 + 55);
  int v13 = (char)v12;
  if ((v12 & 0x80u) != 0) {
    uint64_t v12 = *(void *)(a2 + 40);
  }
  if (!v12) {
    return 1;
  }
  uint64_t v14 = (v11 & 0x80u) == 0 ? *(unsigned __int8 *)(a1 + 55) : *(void *)(a1 + 40);
  if (v14 != v12) {
    return 0;
  }
  uint64_t v15 = (const void **)(a1 + 32);
  uint64_t v18 = *(unsigned __int8 **)(a2 + 32);
  uint64_t v17 = (unsigned __int8 *)(a2 + 32);
  BOOL v16 = v18;
  if (v13 >= 0) {
    BOOL v19 = v17;
  }
  else {
    BOOL v19 = v16;
  }
  if ((v11 & 0x80) != 0) {
    return memcmp(*v15, v19, *(void *)(a1 + 40)) == 0;
  }
  if (!*(unsigned char *)(a1 + 55)) {
    return 1;
  }
  uint64_t v20 = v11 - 1;
  do
  {
    int v22 = *(unsigned __int8 *)v15;
    uint64_t v15 = (const void **)((char *)v15 + 1);
    int v21 = v22;
    int v24 = *v19++;
    int v23 = v24;
    BOOL v26 = v20-- != 0;
    BOOL result = v21 == v23;
  }
  while (v21 == v23 && v26);
  return result;
}

uint64_t sub_6F2F50(uint64_t __dst, long long *a2, int a3, int a4)
{
  uint64_t v6 = __dst;
  if (*((char *)a2 + 23) < 0)
  {
    sub_4200((unsigned char *)__dst, *(void **)a2, *((void *)a2 + 1));
    *(_DWORD *)(v6 + 24) = a3;
    *(_DWORD *)(v6 + 28) = a4;
    return v6;
  }
  else
  {
    long long v7 = *a2;
    *(void *)(__dst + 16) = *((void *)a2 + 2);
    *(_OWORD *)long long __dst = v7;
    *(_DWORD *)(__dst + 24) = a3;
    *(_DWORD *)(__dst + 28) = a4;
  }
  return __dst;
}

void *sub_6F2FC8(void *result)
{
  *BOOL result = 0;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0x100000000;
  return result;
}

BOOL sub_6F2FD8(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0) {
    return *(void *)(a1 + 8) != 0;
  }
  else {
    return *(unsigned char *)(a1 + 23) != 0;
  }
}

char *sub_6F3000(char *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_4200(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v3 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)long long __dst = v3;
  }
  *((void *)__dst + 3) = sub_1133328();
  *((void *)__dst + 4) = 0;
  *((void *)__dst + 5) = 0;
  *((void *)__dst + 6) = 0;
  *((_DWORD *)__dst + 14) = 0;
  *(void *)(__dst + 60) = 0xFFFFFFFF00000001;
  *((void *)__dst + 17) = 0;
  *((void *)__dst + 18) = 0;
  *((void *)__dst + 16) = 0;
  *(_OWORD *)(__dst + 72) = 0u;
  *(_OWORD *)(__dst + 88) = 0u;
  *(_OWORD *)(__dst + 104) = 0u;
  *((_DWORD *)__dst + 30) = 0;
  return __dst;
}

void sub_6F3088(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6F30A4(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = sub_1133328();
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = 0;
  *(void *)(a1 + 60) = 0xFFFFFFFF00000001;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 128) = 0;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_DWORD *)(a1 + 120) = 0;
  return a1;
}

void sub_6F3108(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_6F3124(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0)
  {
    if (*(void *)(a1 + 8)) {
      return sub_6F28B0(a1 + 64, a1);
    }
  }
  else if (*(unsigned char *)(a1 + 23))
  {
    return sub_6F28B0(a1 + 64, a1);
  }
  return 0;
}

char *sub_6F3150@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  if (result[23] < 0) {
    return (char *)sub_4200((unsigned char *)a2, *(void **)result, *((void *)result + 1));
  }
  *(_OWORD *)a2 = *(_OWORD *)result;
  *(void *)(a2 + 16) = *((void *)result + 2);
  return result;
}

BOOL sub_6F317C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = a1[23];
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = a1[23];
  }
  else {
    uint64_t v3 = *((void *)a1 + 1);
  }
  uint64_t v4 = a2[23];
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *((void *)a2 + 1);
  }
  if (v3 != v4) {
    return 0;
  }
  uint64_t v6 = a2;
  if (v5 < 0) {
    a2 = *(unsigned __int8 **)a2;
  }
  if ((v2 & 0x80) != 0)
  {
    if (memcmp(*(const void **)a1, a2, *((void *)a1 + 1))) {
      return 0;
    }
  }
  else if (a1[23])
  {
    long long v8 = a1;
    while (*v8 == *a2)
    {
      ++v8;
      ++a2;
      if (!--v2) {
        goto LABEL_18;
      }
    }
    return 0;
  }
LABEL_18:
  BOOL result = sub_1132FD0((uint64_t)(a1 + 24), (uint64_t)(v6 + 24));
  if (result)
  {
    BOOL result = sub_6F2DD0((uint64_t)(a1 + 64), (uint64_t)(v6 + 64));
    if (result) {
      return *((_DWORD *)a1 + 30) == *((_DWORD *)v6 + 30);
    }
  }
  return result;
}

BOOL sub_6F326C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = a1[23];
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = a1[23];
  }
  else {
    uint64_t v3 = *((void *)a1 + 1);
  }
  uint64_t v4 = a2[23];
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *((void *)a2 + 1);
  }
  if (v3 != v4) {
    return 1;
  }
  uint64_t v6 = a2;
  if (v5 < 0) {
    a2 = *(unsigned __int8 **)a2;
  }
  if ((v2 & 0x80) != 0)
  {
    if (memcmp(*(const void **)a1, a2, *((void *)a1 + 1))) {
      return 1;
    }
  }
  else if (a1[23])
  {
    long long v8 = a1;
    while (*v8 == *a2)
    {
      ++v8;
      ++a2;
      if (!--v2) {
        goto LABEL_16;
      }
    }
    return 1;
  }
LABEL_16:
  if (sub_1132FD0((uint64_t)(a1 + 24), (uint64_t)(v6 + 24)) && sub_6F2DD0((uint64_t)(a1 + 64), (uint64_t)(v6 + 64))) {
    return *((_DWORD *)a1 + 30) != *((_DWORD *)v6 + 30);
  }
  return 1;
}

int64x2_t *sub_6F3348(int64x2_t *a1)
{
  a1->i64[0] = 0;
  a1->i64[1] = 0;
  a1[1].i64[0] = 0;
  a1[1].i64[1] = sub_1133328();
  a1[2] = vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
  return a1;
}

void sub_6F3388(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6F33A4(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0)
  {
    if (*(void *)(a1 + 8)) {
      return sub_1132F2C((uint64_t *)(a1 + 24));
    }
  }
  else if (*(unsigned char *)(a1 + 23))
  {
    return sub_1132F2C((uint64_t *)(a1 + 24));
  }
  return 0;
}

void sub_6F33CC(uint64_t a1@<X0>, unsigned __int8 **a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v70 = 0;
  __int16 v71 = 0;
  uint64_t v72 = 0;
  uint64_t v9 = *a2;
  BOOL v10 = a2[1];
  if (*a2 != v10)
  {
    uint64_t v11 = *a2;
    do
    {
      if (*v11) {
        BOOL v12 = 1;
      }
      else {
        BOOL v12 = v11[114] == 2;
      }
      char v13 = v12;
      if (!v12) {
        break;
      }
      v11 += 144;
    }
    while (v11 != v10);
    *(void *)__p = &v70;
    if (v13)
    {
      do
      {
        if (*v9 <= 1u)
        {
          double v59 = v9;
          sub_2A98DC((void ***)__p, &v59);
        }
        v9 += 144;
      }
      while (v9 != v10);
      goto LABEL_28;
    }
    do
    {
      int v14 = v9[114];
      if (*v9)
      {
        if (*v9 != 1 || v14 == 2) {
          goto LABEL_18;
        }
      }
      else if (v14 == 2)
      {
        goto LABEL_18;
      }
      double v59 = v9;
      sub_2A98DC((void ***)__p, &v59);
LABEL_18:
      v9 += 144;
    }
    while (v9 != v10);
  }
LABEL_28:
  double v67 = 0;
  BOOL v68 = 0;
  uint64_t v69 = 0;
  BOOL v16 = v70;
  uint64_t v17 = v71;
  if (v70 == v71) {
    goto LABEL_67;
  }
  int v18 = -1;
  do
  {
    BOOL v19 = *(unsigned char **)v16;
    sub_29603C((void **)&v67, (void *)(*(void *)v16 + 56));
    if (*v19) {
      BOOL v20 = 0;
    }
    else {
      BOOL v20 = v18 == -1;
    }
    if (v20) {
      int v18 = ((unint64_t)(v68 - v67) >> 3) - 1;
    }
    v16 += 8;
  }
  while (v16 != v17);
  if (v67 == v68 || v18 == -1) {
    goto LABEL_67;
  }
  int v63 = 50331648;
  uint64_t v64 = 0;
  int v65 = 14;
  int v66 = v18;
  uint64_t v22 = sub_656AC();
  *(void *)__p = a4;
  *(void *)&__p[8] = a4 + 4;
  *(_DWORD *)&__p[16] = 4;
  uint64_t v56 = 1;
  double v59 = v67;
  *(void *)&long long v60 = v68;
  DWORD2(v60) = 2;
  uint64_t v61 = (v68 - v67) >> 3;
  unint64_t v23 = (*(uint64_t (**)(uint64_t, unsigned char *, unsigned __int8 **, int *))(*(void *)v22 + 48))(v22, __p, &v59, &v63);
  int v24 = v70;
  uint64_t v25 = &v70[8 * v18];
  uint64_t v52 = a4;
  double v51 = a3;
  if (HIDWORD(v23))
  {
    BOOL v26 = v71;
    if (v70 == v71)
    {
LABEL_67:
      sub_6F30A4(a5);
      goto LABEL_68;
    }
  }
  else
  {
    BOOL v26 = v71;
    if ((int)v23 >= (int)((unint64_t)(v71 - v70) >> 3)) {
      BOOL v27 = &v70[8 * v18];
    }
    else {
      BOOL v27 = &v70[8 * v23];
    }
    if ((v23 & 0x80000000) == 0) {
      uint64_t v25 = v27;
    }
    if (v70 == v71) {
      goto LABEL_67;
    }
  }
  unint64_t v28 = (void *)(*(void *)v25 + 56);
  uint64_t v29 = (void **)(a5 + 72);
  unint64_t v30 = (void **)(a5 + 96);
  long double v31 = (void **)(a5 + 32);
  while (1)
  {
    uint64_t v32 = *(void *)v24;
    if (sub_1132FF4(*(void *)v24 + 56, (uint64_t)v28)) {
      goto LABEL_53;
    }
    sub_6F30A4(a5);
    std::string::operator=((std::string *)a5, (const std::string *)(v32 + 8));
    *(void *)(a5 + 24) = *v28;
    if (sub_6F2FD8(a5)) {
      break;
    }
    if (*(char *)(a5 + 151) < 0)
    {
      operator delete(*(void **)(a5 + 128));
      if ((*(char *)(a5 + 119) & 0x80000000) == 0)
      {
LABEL_58:
        if ((*(char *)(a5 + 95) & 0x80000000) == 0) {
          goto LABEL_59;
        }
        goto LABEL_64;
      }
    }
    else if ((*(char *)(a5 + 119) & 0x80000000) == 0)
    {
      goto LABEL_58;
    }
    operator delete(*v30);
    if ((*(char *)(a5 + 95) & 0x80000000) == 0)
    {
LABEL_59:
      if ((*(char *)(a5 + 55) & 0x80000000) == 0) {
        goto LABEL_60;
      }
      goto LABEL_65;
    }
LABEL_64:
    operator delete(*v29);
    if ((*(char *)(a5 + 55) & 0x80000000) == 0)
    {
LABEL_60:
      if (*(char *)(a5 + 23) < 0) {
        goto LABEL_66;
      }
      goto LABEL_53;
    }
LABEL_65:
    operator delete(*v31);
    if (*(char *)(a5 + 23) < 0) {
LABEL_66:
    }
      operator delete(*(void **)a5);
LABEL_53:
    v24 += 8;
    if (v24 == v26) {
      goto LABEL_67;
    }
  }
  if (*(char *)(v32 + 111) < 0) {
    uint64_t v33 = *(void *)(v32 + 96);
  }
  else {
    uint64_t v33 = *(unsigned __int8 *)(v32 + 111);
  }
  if (v33) {
    unsigned int v34 = (const std::string *)(v32 + 88);
  }
  else {
    unsigned int v34 = (const std::string *)(v32 + 8);
  }
  std::string::operator=((std::string *)(a5 + 128), v34);
  uint64_t v36 = *v51;
  uint64_t v35 = v51[1];
  if (*v51 != v35)
  {
    uint64_t v37 = *v51;
    while (!*(unsigned char *)(v37 + 32))
    {
      v37 += 40;
      if (v37 == v35) {
        goto LABEL_87;
      }
    }
    if (v37 == v35)
    {
LABEL_87:
      LODWORD(v59) = *(_DWORD *)v36;
      if ((*(char *)(v36 + 31) & 0x80000000) == 0)
      {
        uint64_t v38 = v36 + 8;
        goto LABEL_89;
      }
      sub_4200(&v60, *(void **)(v36 + 8), *(void *)(v36 + 16));
    }
    else
    {
      LODWORD(v59) = *(_DWORD *)v37;
      if ((*(char *)(v37 + 31) & 0x80000000) == 0)
      {
        uint64_t v38 = v37 + 8;
        uint64_t v36 = v37;
LABEL_89:
        long long v39 = *(_OWORD *)v38;
        uint64_t v61 = *(void *)(v38 + 16);
        long long v60 = v39;
        goto LABEL_92;
      }
      sub_4200(&v60, *(void **)(v37 + 8), *(void *)(v37 + 16));
      uint64_t v36 = v37;
    }
LABEL_92:
    char v62 = *(unsigned char *)(v36 + 32);
    char v54 = 0;
    LOBYTE(v53) = 0;
    sub_6F27C4((uint64_t)__p, (int)v59, &v60, &v53);
    *(_DWORD *)(a5 + 64) = *(_DWORD *)__p;
    if (*(char *)(a5 + 95) < 0) {
      operator delete(*v29);
    }
    *(_OWORD *)uint64_t v29 = *(_OWORD *)&__p[8];
    *(void *)(a5 + 88) = v56;
    HIBYTE(v56) = 0;
    __p[8] = 0;
    if (*(char *)(a5 + 119) < 0)
    {
      operator delete(*v30);
      int v41 = SHIBYTE(v56);
      uint64_t v40 = a5 + 64;
      *(_OWORD *)unint64_t v30 = v57;
      *(void *)(a5 + 112) = v58;
      HIBYTE(v58) = 0;
      LOBYTE(v57) = 0;
      if (v41 < 0) {
        operator delete(*(void **)&__p[8]);
      }
    }
    else
    {
      uint64_t v40 = a5 + 64;
      *(_OWORD *)unint64_t v30 = v57;
      *(void *)(a5 + 112) = v58;
      HIBYTE(v58) = 0;
      LOBYTE(v57) = 0;
    }
    if (v54 < 0) {
      operator delete((void *)v53);
    }
    if (!sub_6F28B0(v40, v32 + 8)) {
      std::string::operator=((std::string *)(a5 + 96), (const std::string *)(v32 + 120));
    }
    if (SHIBYTE(v61) < 0) {
      operator delete((void *)v60);
    }
  }
  sub_6F3AF4(a1, (uint64_t *)(v32 + 64), (long long *)(v32 + 88), v52, (uint64_t)__p);
  if (*(char *)(a5 + 55) < 0) {
    operator delete(*v31);
  }
  *(_OWORD *)long double v31 = *(_OWORD *)__p;
  uint64_t v42 = v56;
  *(void *)(a5 + 48) = *(void *)&__p[16];
  *(void *)(a5 + 56) = v42;
  uint64_t v43 = a1;
  if (!sub_6F2FD8(a5 + 32))
  {
    sub_6F3E90(a1, (uint64_t *)&v70, v52, (uint64_t)__p);
    if (*(char *)(a5 + 55) < 0) {
      operator delete(*v31);
    }
    *(_OWORD *)long double v31 = *(_OWORD *)__p;
    uint64_t v44 = v56;
    *(void *)(a5 + 48) = *(void *)&__p[16];
    *(void *)(a5 + 56) = v44;
    int v45 = *(unsigned __int8 *)(a1 + 23);
    if (*(char *)(a1 + 23) < 0)
    {
      if (*(void *)(a1 + 8) == 3)
      {
        double v46 = *(unsigned __int16 **)a1;
        goto LABEL_114;
      }
    }
    else
    {
      double v46 = (unsigned __int16 *)a1;
      if (v45 != 3) {
        goto LABEL_121;
      }
LABEL_114:
      int v47 = *v46;
      int v48 = *((unsigned __int8 *)v46 + 2);
      if (v47 == 20554 && v48 == 78)
      {
        sub_6F518C((uint64_t *)a1, (char *)a5);
        uint64_t v43 = a1;
        int v45 = *(unsigned __int8 *)(a1 + 23);
      }
      if ((v45 & 0x80) != 0)
      {
        if (*(void *)(v43 + 8) == 3)
        {
          uint64_t v43 = *(void *)v43;
LABEL_125:
          BOOL v50 = *(_WORD *)v43 == 18499 && *(unsigned char *)(v43 + 2) == 78;
          if (v50 && *(_DWORD *)(v52 + 32) == 5) {
            *(_DWORD *)(a5 + 60) = 0;
          }
        }
      }
      else
      {
LABEL_121:
        if (v45 == 3) {
          goto LABEL_125;
        }
      }
    }
  }
LABEL_68:
  if (v67)
  {
    BOOL v68 = v67;
    operator delete(v67);
  }
  if (v70)
  {
    __int16 v71 = v70;
    operator delete(v70);
  }
}

void sub_6F3A38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  sub_4A50F4(v35);
  uint64_t v38 = *(void **)(v36 - 136);
  if (v38)
  {
    *(void *)(v36 - 128) = v38;
    operator delete(v38);
    long long v39 = *(void **)(v36 - 112);
    if (!v39) {
LABEL_3:
    }
      _Unwind_Resume(a1);
  }
  else
  {
    long long v39 = *(void **)(v36 - 112);
    if (!v39) {
      goto LABEL_3;
    }
  }
  *(void *)(v36 - 104) = v39;
  operator delete(v39);
  _Unwind_Resume(a1);
}

void sub_6F3AF4(uint64_t a1@<X0>, uint64_t *a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v30 = 0;
  uint64_t v10 = *a2;
  uint64_t v11 = a2[1];
  if (*a2 == v11) {
    goto LABEL_27;
  }
  do
  {
    if ((sub_6F4188(a1, a4, v10) & 1) != 0
      && sub_6F42C4(a1, v10 + 24) == *(_DWORD *)(a4 + 32)
      && (!v30 || *(_DWORD *)(v10 + 52) < v29))
    {
      sub_6FB5F8(&__str, (const std::string *)v10);
    }
    v10 += 56;
  }
  while (v10 != v11);
  if (!v30)
  {
LABEL_27:
    if (*(unsigned char *)(a1 + 24))
    {
      uint64_t v14 = *a2;
      uint64_t v13 = a2[1];
      uint64_t v15 = *a2 + 56;
      if (*a2 != v13 && v15 != v13)
      {
        do
        {
          if (*(_DWORD *)(v15 + 52) < *(_DWORD *)(v14 + 52)) {
            uint64_t v14 = v15;
          }
          v15 += 56;
        }
        while (v15 != v13);
      }
      if (v14 != v13)
      {
        int v17 = *(_DWORD *)(a4 + 32) - 1;
        if v17 < 0x2A && ((0x27EFFDFFFBFuLL >> v17))
        {
          int v19 = dword_20E8CE0[v17];
          uint64_t v18 = 3;
          char v24 = 3;
          LOWORD(__p[0]) = v19;
          BYTE2(__p[0]) = BYTE2(v19);
        }
        else
        {
          uint64_t v18 = 0;
          char v24 = 0;
        }
        *(unsigned char *)((unint64_t)__p | v18) = 0;
        sub_6F2FC8((void *)a5);
        sub_6FC690(v14, (unsigned __int8 *)(v14 + 24), (unsigned __int8 *)__p, (uint64_t)&v21);
        if (*(char *)(a5 + 23) < 0) {
          operator delete(*(void **)a5);
        }
        *(_OWORD *)a5 = v21;
        *(void *)(a5 + 16) = v22;
        *(_DWORD *)(a5 + 24) = sub_6F4468((unsigned __int8 *)(v14 + 24));
        *(_DWORD *)(a5 + 28) = 2;
        if (v24 < 0) {
          operator delete(__p[0]);
        }
        goto LABEL_38;
      }
    }
LABEL_31:
    sub_6F2F50(a5, a3, 0, 1);
    goto LABEL_38;
  }
  std::string::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = __str.__r_.__value_.__l.__size_;
  }
  if (!size) {
    goto LABEL_31;
  }
  sub_6F2FC8((void *)a5);
  if (!v30
    || (std::string::operator=((std::string *)a5, &__str), !v30)
    || (*(_DWORD *)(a5 + 24) = sub_6F4468((unsigned __int8 *)&v26), !v30))
  {
    exception = __cxa_allocate_exception(8uLL);
    void *exception = &off_2439078;
  }
  if ((unint64_t)v28 > 5) {
    *(_DWORD *)(a5 + 28) = 2;
  }
  else {
    *(_DWORD *)(a5 + 28) = dword_20E8D88[v28];
  }
LABEL_38:
  if (!v30) {
    return;
  }
  if ((v27 & 0x80000000) == 0)
  {
    if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_43:
    operator delete(__str.__r_.__value_.__l.__data_);
    return;
  }
  operator delete(v26);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_43;
  }
}

void sub_6F3E0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if (*(char *)(v19 + 23) < 0) {
    operator delete(*(void **)v19);
  }
  if (a18 < 0)
  {
    operator delete(__p);
    sub_6F45D8((uint64_t)&a19);
    _Unwind_Resume(a1);
  }
  sub_6F45D8((uint64_t)&a19);
  _Unwind_Resume(a1);
}

double sub_6F3E90@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  long long v7 = (unsigned __int8 **)*a2;
  long long v8 = (unsigned __int8 **)a2[1];
  if ((unsigned __int8 **)*a2 == v8)
  {
LABEL_13:
    sub_6F2FC8(&__p);
    HIDWORD(v33) = 1;
    uint64_t v15 = (void *)*a2;
    BOOL v16 = (void *)a2[1];
    if ((void *)*a2 == v16)
    {
      uint64_t v19 = *a2;
    }
    else
    {
      while (1)
      {
        uint64_t v17 = *v15;
        uint64_t v34 = sub_1133208(0x29u);
        if (sub_1132FD0(v17 + 56, (uint64_t)&v34)) {
          break;
        }
        if (++v15 == v16)
        {
          uint64_t v15 = v16;
          break;
        }
      }
      uint64_t v18 = v15;
      uint64_t v19 = *a2;
      uint64_t v15 = (void *)a2[1];
      if (v18 != v15)
      {
        if ((void *)v19 != v15)
        {
          while (1)
          {
            uint64_t v20 = *(void *)v19;
            uint64_t v34 = sub_1133208(0x2Bu);
            if (sub_1132FD0(v20 + 56, (uint64_t)&v34)) {
              break;
            }
            v19 += 8;
            if ((void *)v19 == v15)
            {
              uint64_t v19 = (uint64_t)v15;
              break;
            }
          }
          if (v19 != a2[1])
          {
            uint64_t v21 = *(void *)v19;
            std::string::operator=(&__p, (const std::string *)(*(void *)v19 + 8));
            int v22 = sub_1132F18((uint64_t *)(v21 + 56));
LABEL_45:
            LODWORD(v33) = v22;
            goto LABEL_46;
          }
          uint64_t v19 = a2[1];
        }
        uint64_t v15 = (void *)v19;
        uint64_t v19 = *a2;
      }
    }
    uint64_t v34 = sub_6F5EB4(v19, (uint64_t)v15, a3 + 32);
    int v23 = sub_1132FB0(&v34);
    char v24 = (unsigned __int8 **)*a2;
    uint64_t v25 = (unsigned __int8 **)a2[1];
    if (!v23) {
      goto LABEL_41;
    }
    if (v24 != v25)
    {
      while (!sub_1132FD0((uint64_t)(*v24 + 56), (uint64_t)&v34))
      {
        if (++v24 == v25)
        {
          char v24 = v25;
          break;
        }
      }
      if (v24 != (unsigned __int8 **)a2[1])
      {
        BOOL v26 = *v24;
        LODWORD(v33) = sub_1132F18((uint64_t *)*v24 + 7);
        std::string::operator=(&__p, (const std::string *)(v26 + 8));
LABEL_46:
        double result = *(double *)&__p.__r_.__value_.__l.__data_;
        *(_OWORD *)a4 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
        uint64_t v31 = v33;
        *(void *)(a4 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
        *(void *)(a4 + 24) = v31;
        return result;
      }
      char v24 = (unsigned __int8 **)a2[1];
    }
    uint64_t v25 = v24;
    char v24 = (unsigned __int8 **)*a2;
LABEL_41:
    while (v24 != v25)
    {
      char v27 = *v24;
      char v28 = (uint64_t *)(*v24 + 56);
      BOOL v29 = sub_64DBC(v28);
      if (*v27 < 2u && v29)
      {
        std::string::operator=(&__p, (const std::string *)(v27 + 8));
        int v22 = sub_1132F18(v28);
        goto LABEL_45;
      }
      ++v24;
    }
    sub_6F2FC8((void *)a4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    return result;
  }
  while (1)
  {
    uint64_t v10 = (uint64_t)*v7;
    if (**v7 <= 1u)
    {
      memset(&__p, 0, sizeof(__p));
      sub_6F3AF4(a1, (uint64_t *)(v10 + 64), (long long *)&__p, a3, a4);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      BOOL v11 = sub_6F2FD8(a4);
      BOOL v13 = v11;
      char v14 = *(char *)(a4 + 23) >= 0 || v11;
      if ((v14 & 1) == 0) {
        operator delete(*(void **)a4);
      }
      if (v13) {
        return result;
      }
    }
    if (++v7 == v8) {
      goto LABEL_13;
    }
  }
}

void sub_6F4138(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6F4188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v3 = 0;
  int v4 = 3;
  switch(*(unsigned char *)(a3 + 48))
  {
    case 1:
      return 1;
    case 4:
      goto LABEL_3;
    case 5:
      return v3;
    default:
      int v4 = 2;
LABEL_3:
      uint64_t v6 = *(unsigned char **)(a2 + 40);
      int v5 = *(unsigned char **)(a2 + 48);
      int64_t v7 = v5 - v6;
      if (v5 == v6) {
        return 0;
      }
      if (v7 < 0) {
        sub_2E00();
      }
      long long v8 = (char *)operator new(v5 - v6);
      uint64_t v9 = 4 * (v7 >> 2);
      uint64_t v10 = &v8[v9];
      memcpy(v8, v6, v7);
      uint64_t v11 = 0;
      break;
  }
  while (*(_DWORD *)&v8[v11] != v4)
  {
    v11 += 4;
    if (v9 == v11) {
      goto LABEL_11;
    }
  }
  uint64_t v10 = &v8[v11];
LABEL_11:
  BOOL v3 = v7 >> 2 != (v10 - v8) >> 2;
  operator delete(v8);
  return v3;
}

void sub_6F4290(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6F42C4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(unsigned __int8 *)(a2 + 23);
  if ((v3 & 0x80u) == 0) {
    int v4 = (unsigned __int8 *)a2;
  }
  else {
    int v4 = *(unsigned __int8 **)a2;
  }
  if ((v3 & 0x80u) != 0) {
    unint64_t v3 = *(void *)(a2 + 8);
  }
  if (v3 >= 0x1F) {
    uint64_t v5 = 31;
  }
  else {
    uint64_t v5 = v3;
  }
  if (v5)
  {
    if (v5 == 1)
    {
      uint64_t v6 = *v4;
      uint64_t v7 = 1;
    }
    else
    {
      if (v5 != 2)
      {
        sub_76DEC(v4, v5, (uint64_t)&v18);
        goto LABEL_17;
      }
      uint64_t v6 = *(unsigned __int16 *)v4;
      uint64_t v7 = 2;
    }
    *(void *)&long long v18 = v6;
    *((void *)&v18 + 1) = v7;
    long long v19 = 0u;
    long long v20 = 0u;
  }
  else
  {
    long long v19 = 0u;
    long long v20 = 0u;
    long long v18 = 0u;
  }
LABEL_17:
  uint64_t v11 = sub_1133038((uint64_t)&v18, 3);
  long long v28 = xmmword_20E8CB0;
  *(_OWORD *)BOOL v29 = unk_20E8CC0;
  *(_OWORD *)&v29[12] = unk_20E8CCC;
  long long v24 = xmmword_20E8C70;
  long long v25 = unk_20E8C80;
  long long v26 = xmmword_20E8C90;
  long long v27 = unk_20E8CA0;
  long long v20 = xmmword_20E8C30;
  long long v21 = unk_20E8C40;
  long long v22 = xmmword_20E8C50;
  long long v23 = unk_20E8C60;
  long long v18 = xmmword_20E8C10;
  long long v19 = unk_20E8C20;
  uint64_t v8 = sub_65800();
  v15[0] = &v11;
  v15[1] = v12;
  int v16 = 2;
  uint64_t v17 = 1;
  v12[0] = &v18;
  v12[1] = &v30;
  int v13 = 4;
  uint64_t v14 = 51;
  unsigned int v9 = (*(uint64_t (**)(uint64_t, void *, void *))(*(void *)v8 + 40))(v8, v15, v12);
  if (v9 > 0x32) {
    return sub_6F4468((unsigned __int8 *)a2);
  }
  uint64_t result = *((unsigned int *)&v18 + v9);
  if (!result) {
    return sub_6F4468((unsigned __int8 *)a2);
  }
  return result;
}

uint64_t sub_6F4468(unsigned __int8 *a1)
{
  uint64_t v1 = a1;
  unint64_t v2 = a1[23];
  unint64_t v3 = *((void *)a1 + 1);
  if ((v2 & 0x80u) != 0)
  {
    a1 = *(unsigned __int8 **)a1;
    unint64_t v2 = v3;
  }
  if (v2 >= 0x1F) {
    uint64_t v4 = 31;
  }
  else {
    uint64_t v4 = v2;
  }
  switch(v4)
  {
    case 0:
      long long v15 = 0u;
      long long v16 = 0u;
      long long v14 = 0u;
      goto LABEL_14;
    case 1:
      uint64_t v5 = *a1;
      uint64_t v6 = 1;
LABEL_12:
      *(void *)&long long v14 = v5;
      *((void *)&v14 + 1) = v6;
      long long v15 = 0u;
      long long v16 = 0u;
      goto LABEL_14;
    case 2:
      uint64_t v5 = *(unsigned __int16 *)a1;
      uint64_t v6 = 2;
      goto LABEL_12;
  }
  sub_76DEC(a1, v4, (uint64_t)&v14);
LABEL_14:
  uint64_t v13 = sub_1133038((uint64_t)&v14, 3);
  uint64_t result = sub_1132F18(&v13);
  if (result) {
    return result;
  }
  unint64_t v8 = v1[23];
  if ((v8 & 0x80u) == 0) {
    unsigned int v9 = v1;
  }
  else {
    unsigned int v9 = *(unsigned __int8 **)v1;
  }
  if ((v8 & 0x80u) != 0) {
    unint64_t v8 = *((void *)v1 + 1);
  }
  if (v8 >= 0x1F) {
    uint64_t v10 = 31;
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    if (v10 == 1)
    {
      uint64_t v11 = *v9;
      uint64_t v12 = 1;
    }
    else
    {
      if (v10 != 2)
      {
        sub_76DEC(v9, v10, (uint64_t)&v14);
        goto LABEL_31;
      }
      uint64_t v11 = *(unsigned __int16 *)v9;
      uint64_t v12 = 2;
    }
    *(void *)&long long v14 = v11;
    *((void *)&v14 + 1) = v12;
    long long v15 = 0u;
    long long v16 = 0u;
  }
  else
  {
    long long v15 = 0u;
    long long v16 = 0u;
    long long v14 = 0u;
  }
LABEL_31:
  uint64_t v13 = sub_1133038((uint64_t)&v14, 0);
  return sub_1132F18(&v13);
}

uint64_t sub_6F45D8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 56))
  {
    if (*(char *)(a1 + 47) < 0)
    {
      operator delete(*(void **)(a1 + 24));
      if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
        goto LABEL_4;
      }
    }
    else if ((*(char *)(a1 + 23) & 0x80000000) == 0)
    {
LABEL_4:
      *(unsigned char *)(a1 + 56) = 0;
      return a1;
    }
    operator delete(*(void **)a1);
    goto LABEL_4;
  }
  return a1;
}

void sub_6F4634(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, int64x2_t *a4@<X8>)
{
  std::string __p = 0;
  int v45 = 0;
  uint64_t v4 = *a2;
  uint64_t v41 = a2[1];
  if (*a2 != v41)
  {
    uint64_t v5 = 0;
    while (1)
    {
      uint64_t v7 = *(unsigned __int8 **)v4;
      uint64_t v6 = *(unsigned __int8 **)(v4 + 8);
      while (v7 != v6)
      {
        uint64_t v9 = sub_76580(v7);
        uint64_t v10 = v9;
        if (v5 < v45)
        {
          *(void *)uint64_t v5 = v9;
          uint64_t v8 = (uint64_t)(v5 + 8);
          goto LABEL_6;
        }
        uint64_t v11 = (v5 - __p) >> 3;
        unint64_t v12 = v11 + 1;
        if ((unint64_t)(v11 + 1) >> 61) {
          sub_2E00();
        }
        uint64_t v13 = v45 - __p;
        if ((v45 - __p) >> 2 > v12) {
          unint64_t v12 = v13 >> 2;
        }
        if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v14 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v14 = v12;
        }
        if (v14)
        {
          if (v14 >> 61) {
            sub_188D718();
          }
          long long v15 = operator new(8 * v14);
          long long v16 = &v15[8 * v11];
          *(void *)long long v16 = v10;
          uint64_t v8 = (uint64_t)(v16 + 8);
          if (v5 == __p)
          {
LABEL_24:
            std::string __p = v16;
            int v45 = &v15[8 * v14];
            if (!v5) {
              goto LABEL_6;
            }
LABEL_25:
            operator delete(v5);
            goto LABEL_6;
          }
        }
        else
        {
          long long v15 = 0;
          long long v16 = (char *)(8 * v11);
          *(void *)(8 * v11) = v10;
          uint64_t v8 = 8 * v11 + 8;
          if (v5 == __p) {
            goto LABEL_24;
          }
        }
        unint64_t v17 = v5 - 8 - __p;
        if (v17 < 0x168)
        {
          long long v18 = v5;
          goto LABEL_20;
        }
        if (&v15[v5 - __p - 8 - (v17 & 0xFFFFFFFFFFFFFFF8)] > &v15[v5 - __p - 8])
        {
          long long v18 = v5;
          do
          {
LABEL_20:
            uint64_t v19 = *((void *)v18 - 1);
            v18 -= 8;
            *((void *)v16 - 1) = v19;
            v16 -= 8;
          }
          while (v18 != __p);
          goto LABEL_21;
        }
        if (&v5[-(v17 & 0xFFFFFFFFFFFFFFF8) - 8] > v5 - 8)
        {
          long long v18 = v5;
          goto LABEL_20;
        }
        if ((unint64_t)(__p - v15) < 0x20)
        {
          long long v18 = v5;
          goto LABEL_20;
        }
        uint64_t v20 = (v17 >> 3) + 1;
        uint64_t v21 = 8 * (v20 & 0x3FFFFFFFFFFFFFFCLL);
        long long v18 = &v5[-v21];
        v16 -= v21;
        long long v22 = &v15[8 * v11 - 16];
        long long v23 = v5 - 16;
        uint64_t v24 = v20 & 0x3FFFFFFFFFFFFFFCLL;
        do
        {
          long long v25 = *(_OWORD *)v23;
          *(v22 - 1) = *((_OWORD *)v23 - 1);
          *long long v22 = v25;
          v22 -= 2;
          v23 -= 32;
          v24 -= 4;
        }
        while (v24);
        if (v20 != (v20 & 0x3FFFFFFFFFFFFFFCLL)) {
          goto LABEL_20;
        }
LABEL_21:
        uint64_t v5 = __p;
        std::string __p = v16;
        int v45 = &v15[8 * v14];
        if (v5) {
          goto LABEL_25;
        }
LABEL_6:
        v7 += 48;
        uint64_t v5 = (char *)v8;
      }
      v4 += 128;
      if (v4 == v41) {
        goto LABEL_37;
      }
    }
  }
  uint64_t v5 = 0;
LABEL_37:
  uint64_t v26 = sub_656AC();
  sub_76DEC("en_US", 5, (uint64_t)v52);
  uint64_t v27 = sub_1133038((uint64_t)v52, 0);
  v49[0] = a3;
  v49[1] = a3 + 4;
  int v50 = 4;
  uint64_t v51 = 1;
  v46[0] = __p;
  v46[1] = v5;
  int v47 = 2;
  uint64_t v48 = (v5 - __p) >> 3;
  int v28 = (*(uint64_t (**)(uint64_t, void *, void *))(*(void *)v26 + 40))(v26, v49, v46);
  if ((v28 & 0x80000000) == 0 && v28 < (int)((unint64_t)(v5 - __p) >> 3)) {
    uint64_t v27 = *(void *)&__p[8 * v28];
  }
  a4->i64[0] = 0;
  a4->i64[1] = 0;
  a4[1].i64[0] = 0;
  uint64_t v30 = *a2;
  uint64_t v29 = a2[1];
  if (*a2 == v29) {
    goto LABEL_63;
  }
  do
  {
    while (1)
    {
      sub_6F4BC8(a1, v30, a3, v27, (uint64_t)v52);
      if (sub_6F2FD8((uint64_t)v52))
      {
        unint64_t v31 = a4->u64[1];
        if (v31 >= a4[1].i64[0])
        {
          uint64_t v32 = sub_5B09D8(a4, (long long *)v52);
        }
        else
        {
          sub_4AA8E0((char *)a4->i64[1], (long long *)v52);
          uint64_t v32 = v31 + 152;
          a4->i64[1] = v31 + 152;
        }
        a4->i64[1] = v32;
      }
      if (v61 < 0) {
        break;
      }
      if ((v59 & 0x80000000) == 0) {
        goto LABEL_51;
      }
LABEL_55:
      operator delete(v58);
      if (v57 < 0) {
        goto LABEL_56;
      }
LABEL_52:
      if ((v55 & 0x80000000) == 0) {
        goto LABEL_57;
      }
LABEL_42:
      operator delete(v54);
      if (v53 < 0) {
        goto LABEL_58;
      }
LABEL_43:
      v30 += 128;
      if (v30 == v29) {
        goto LABEL_59;
      }
    }
    operator delete(v60);
    if (v59 < 0) {
      goto LABEL_55;
    }
LABEL_51:
    if ((v57 & 0x80000000) == 0) {
      goto LABEL_52;
    }
LABEL_56:
    operator delete(v56);
    if (v55 < 0) {
      goto LABEL_42;
    }
LABEL_57:
    if ((v53 & 0x80000000) == 0) {
      goto LABEL_43;
    }
LABEL_58:
    operator delete(v52[0]);
    v30 += 128;
  }
  while (v30 != v29);
LABEL_59:
  if (a4->i64[0] == a4->i64[1])
  {
LABEL_63:
    uint64_t v34 = *a2;
    uint64_t v33 = a2[1];
    while (1)
    {
      if (v34 == v33) {
        goto LABEL_60;
      }
      if (*(void *)v34 != *(void *)(v34 + 8)) {
        break;
      }
LABEL_65:
      v34 += 128;
    }
    uint64_t v35 = sub_76580(*(unsigned __int8 **)v34);
    sub_6F4BC8(a1, v34, a3, v35, (uint64_t)v52);
    if (sub_6F2FD8((uint64_t)v52))
    {
      unint64_t v36 = a4->u64[1];
      if (v36 >= a4[1].i64[0])
      {
        uint64_t v37 = sub_5B09D8(a4, (long long *)v52);
        uint64_t v38 = a4;
      }
      else
      {
        sub_4AA8E0((char *)a4->i64[1], (long long *)v52);
        uint64_t v37 = v36 + 152;
        uint64_t v38 = a4;
        a4->i64[1] = v36 + 152;
      }
      v38->i64[1] = v37;
    }
    if (v61 < 0)
    {
      operator delete(v60);
      if ((v59 & 0x80000000) == 0)
      {
LABEL_75:
        if ((v57 & 0x80000000) == 0) {
          goto LABEL_76;
        }
        goto LABEL_80;
      }
    }
    else if ((v59 & 0x80000000) == 0)
    {
      goto LABEL_75;
    }
    operator delete(v58);
    if ((v57 & 0x80000000) == 0)
    {
LABEL_76:
      if (v55 < 0)
      {
LABEL_64:
        operator delete(v54);
        if ((v53 & 0x80000000) == 0) {
          goto LABEL_65;
        }
LABEL_82:
        operator delete(v52[0]);
        goto LABEL_65;
      }
LABEL_81:
      if ((v53 & 0x80000000) == 0) {
        goto LABEL_65;
      }
      goto LABEL_82;
    }
LABEL_80:
    operator delete(v56);
    if (v55 < 0) {
      goto LABEL_64;
    }
    goto LABEL_81;
  }
LABEL_60:
  if (__p) {
    operator delete(__p);
  }
}

void sub_6F4B5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_6F4BC8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v46 = a4;
  uint64_t v9 = *(std::string **)a2;
  uint64_t v10 = *(std::string **)(a2 + 8);
  if (*(std::string **)a2 != v10)
  {
    while (1)
    {
      uint64_t v42 = sub_76580((unsigned __int8 *)v9);
      __str.__r_.__value_.__r.__words[0] = sub_1133030(&v42);
      __p[0] = (void *)sub_1133030(&v46);
      if (sub_1132FD0((uint64_t)&__str, (uint64_t)__p) || sub_76648((unsigned __int8 *)v9)) {
        break;
      }
      v9 += 2;
      if (v9 == v10)
      {
        uint64_t v9 = v10;
        break;
      }
    }
  }
  uint64_t v11 = *(std::string **)(a2 + 8);
  sub_6F30A4(a5);
  if (v9 != v11)
  {
    std::string::operator=((std::string *)a5, v9 + 1);
    *(void *)(a5 + 24) = sub_76580((unsigned __int8 *)v9);
    unint64_t v12 = *(unsigned __int8 **)(a2 + 24);
    uint64_t v13 = *(unsigned __int8 **)(a2 + 32);
    if (v12 != v13)
    {
      while (1)
      {
        uint64_t v42 = sub_76580(v12);
        __str.__r_.__value_.__r.__words[0] = sub_1133030(&v42);
        __p[0] = (void *)sub_1133030(&v46);
        if (sub_1132FD0((uint64_t)&__str, (uint64_t)__p) || sub_76648(v12)) {
          break;
        }
        v12 += 48;
        if (v12 == v13)
        {
          unint64_t v12 = v13;
          break;
        }
      }
    }
    if (v12 == *(unsigned __int8 **)(a2 + 32)) {
      unint64_t v14 = (const std::string *)a5;
    }
    else {
      unint64_t v14 = (const std::string *)(v12 + 24);
    }
    std::string::operator=((std::string *)(a5 + 128), v14);
    if (*(unsigned char *)(a2 + 49))
    {
      if (*(unsigned char *)(a2 + 49) == 3) {
        goto LABEL_25;
      }
      int v15 = *(unsigned __int8 *)(a2 + 48);
      if (v15 == 5 || v15 == 8) {
        int v17 = 2;
      }
      else {
        int v17 = 3;
      }
    }
    else
    {
      int v17 = 1;
    }
    *(_DWORD *)(a5 + 120) = v17;
LABEL_25:
    uint64_t v19 = *(void *)(a2 + 56);
    uint64_t v18 = *(void *)(a2 + 64);
    if (v19 == v18) {
      goto LABEL_58;
    }
    uint64_t v20 = *(void *)(a2 + 56);
    while (!*(unsigned char *)(v20 + 32))
    {
      v20 += 40;
      if (v20 == v18) {
        goto LABEL_34;
      }
    }
    if (v20 == v18)
    {
LABEL_34:
      LODWORD(v42) = *(_DWORD *)v19;
      if (*(char *)(v19 + 31) < 0)
      {
        sub_4200(&v43, *(void **)(v19 + 8), *(void *)(v19 + 16));
      }
      else
      {
        long long v22 = *(_OWORD *)(v19 + 8);
        uint64_t v44 = *(void *)(v19 + 24);
        long long v43 = v22;
      }
      goto LABEL_38;
    }
    LODWORD(v42) = *(_DWORD *)v20;
    if (*(char *)(v20 + 31) < 0)
    {
      sub_4200(&v43, *(void **)(v20 + 8), *(void *)(v20 + 16));
    }
    else
    {
      long long v21 = *(_OWORD *)(v20 + 8);
      uint64_t v44 = *(void *)(v20 + 24);
      long long v43 = v21;
    }
    uint64_t v19 = v20;
LABEL_38:
    char v45 = *(unsigned char *)(v19 + 32);
    char v37 = 0;
    LOBYTE(__p[0]) = 0;
    sub_6F27C4((uint64_t)&__str, v42, &v43, (long long *)__p);
    *(_DWORD *)(a5 + 64) = __str.__r_.__value_.__l.__data_;
    long long v23 = (void **)(a5 + 72);
    if (*(char *)(a5 + 95) < 0) {
      operator delete(*v23);
    }
    *(_OWORD *)long long v23 = *(_OWORD *)&__str.__r_.__value_.__r.__words[1];
    *(void *)(a5 + 88) = v39;
    HIBYTE(v39) = 0;
    __str.__r_.__value_.__s.__data_[8] = 0;
    uint64_t v24 = (void **)(a5 + 96);
    if ((*(char *)(a5 + 119) & 0x80000000) == 0)
    {
      *(_OWORD *)uint64_t v24 = v40;
      *(void *)(a5 + 112) = v41;
      HIBYTE(v41) = 0;
      LOBYTE(v40) = 0;
      if (v37 < 0) {
        goto LABEL_42;
      }
LABEL_46:
      uint64_t v25 = *(void *)(a2 + 104);
      uint64_t v26 = *(void *)(a2 + 112);
      if (v25 != v26) {
        goto LABEL_47;
      }
      goto LABEL_51;
    }
    operator delete(*v24);
    int v27 = SHIBYTE(v39);
    *(_OWORD *)uint64_t v24 = v40;
    *(void *)(a5 + 112) = v41;
    HIBYTE(v41) = 0;
    LOBYTE(v40) = 0;
    if (v27 < 0)
    {
      operator delete((void *)__str.__r_.__value_.__l.__size_);
      if ((v37 & 0x80000000) == 0) {
        goto LABEL_46;
      }
    }
    else if ((v37 & 0x80000000) == 0)
    {
      goto LABEL_46;
    }
LABEL_42:
    operator delete(__p[0]);
    uint64_t v25 = *(void *)(a2 + 104);
    uint64_t v26 = *(void *)(a2 + 112);
    if (v25 != v26)
    {
LABEL_47:
      while (1)
      {
        __p[0] = (void *)sub_76580((unsigned __int8 *)v25);
        __str.__r_.__value_.__r.__words[0] = sub_1133030((uint64_t *)__p);
        uint64_t v47 = sub_1133030(&v46);
        if (sub_1132FD0((uint64_t)&__str, (uint64_t)&v47) || sub_76648((unsigned __int8 *)v25)) {
          break;
        }
        v25 += 48;
        if (v25 == v26)
        {
          uint64_t v25 = v26;
          break;
        }
      }
    }
LABEL_51:
    if (v25 == *(void *)(a2 + 112))
    {
      *((unsigned char *)&__str.__r_.__value_.__s + 23) = 0;
      __str.__r_.__value_.__s.__data_[0] = 0;
    }
    else if (*(char *)(v25 + 47) < 0)
    {
      sub_4200(&__str, *(void **)(v25 + 24), *(void *)(v25 + 32));
    }
    else
    {
      std::string __str = *(std::string *)(v25 + 24);
    }
    std::string::operator=((std::string *)(a5 + 96), &__str);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__str.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v44) & 0x80000000) == 0) {
        goto LABEL_58;
      }
    }
    else if ((SHIBYTE(v44) & 0x80000000) == 0)
    {
      goto LABEL_58;
    }
    operator delete((void *)v43);
LABEL_58:
    sub_6F3AF4(a1, (uint64_t *)(a2 + 80), (long long *)(a5 + 128), a3, (uint64_t)&__str);
    int v28 = (void **)(a5 + 32);
    if (*(char *)(a5 + 55) < 0) {
      operator delete(*v28);
    }
    *(_OWORD *)int v28 = *(_OWORD *)&__str.__r_.__value_.__l.__data_;
    uint64_t v29 = v39;
    *(void *)(a5 + 48) = *((void *)&__str.__r_.__value_.__l + 2);
    *(void *)(a5 + 56) = v29;
    memset(&__str, 0, sizeof(__str));
    int v30 = *(unsigned __int8 *)(a1 + 23);
    if ((v30 & 0x80) != 0)
    {
      if (*(void *)(a1 + 8) != 3) {
        return;
      }
      unint64_t v31 = *(unsigned __int16 **)a1;
    }
    else
    {
      unint64_t v31 = (unsigned __int16 *)a1;
      if (v30 != 3)
      {
LABEL_70:
        if (v30 != 3) {
          return;
        }
LABEL_77:
        if (*(_WORD *)a1 == 18499 && *(unsigned char *)(a1 + 2) == 78 && *(_DWORD *)(a3 + 32) == 5) {
          *(_DWORD *)(a5 + 60) = 0;
        }
        return;
      }
    }
    int v32 = *v31;
    int v33 = *((unsigned __int8 *)v31 + 2);
    if (v32 == 20554 && v33 == 78)
    {
      sub_6F518C((uint64_t *)a1, (char *)a5);
      int v30 = *(unsigned __int8 *)(a1 + 23);
      if ((v30 & 0x80) == 0) {
        goto LABEL_70;
      }
    }
    else if ((v30 & 0x80) == 0)
    {
      goto LABEL_70;
    }
    if (*(void *)(a1 + 8) != 3) {
      return;
    }
    a1 = *(void *)a1;
    goto LABEL_77;
  }
}

void sub_6F50A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0)
  {
    operator delete(__p);
    sub_4A50F4(v32);
    _Unwind_Resume(a1);
  }
  sub_4A50F4(v32);
  _Unwind_Resume(a1);
}

void sub_6F518C(uint64_t *a1, char *a2)
{
  int v3 = *((char *)a1 + 23);
  if (v3 < 0)
  {
    if (a1[1] != 3) {
      return;
    }
    a1 = (uint64_t *)*a1;
  }
  else if (v3 != 3)
  {
    return;
  }
  BOOL v4 = *(_WORD *)a1 == 20554 && *((unsigned char *)a1 + 2) == 78;
  if (v4 && sub_6F2880((uint64_t)(a2 + 64)))
  {
    uint64_t v5 = a2[23];
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = (unsigned __int8 *)a2;
    }
    else {
      uint64_t v6 = *(unsigned __int8 **)a2;
    }
    if ((v5 & 0x80u) != 0) {
      uint64_t v5 = *((void *)a2 + 1);
    }
    if (v5)
    {
      while (((char)*v6 & 0x80000000) == 0 && (_DefaultRuneLocale.__runetype[*v6] & 0x400) != 0)
      {
        ++v6;
        if (!--v5) {
          goto LABEL_21;
        }
      }
      return;
    }
LABEL_21:
    memset(&v49, 0, sizeof(v49));
    memset(&v48, 0, sizeof(v48));
    memset(&v47, 0, sizeof(v47));
    memset(&v46, 0, sizeof(v46));
    int v7 = *((_DWORD *)a2 + 16);
    if (v7 == 100000)
    {
      std::string::assign(&v49, "都道府県道");
      uint64_t v8 = "トドウフケンドウ";
    }
    else
    {
      if (v7 != 100006)
      {
LABEL_26:
        if (a2[23] < 0)
        {
          sub_4200(v44, *(void **)a2, *((void *)a2 + 1));
        }
        else
        {
          *(_OWORD *)uint64_t v44 = *(_OWORD *)a2;
          uint64_t v45 = *((void *)a2 + 2);
        }
        int v9 = SHIBYTE(v49.__r_.__value_.__r.__words[2]);
        if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          size_t size = HIBYTE(v49.__r_.__value_.__r.__words[2]);
        }
        else {
          size_t size = v49.__r_.__value_.__l.__size_;
        }
        if (size) {
          goto LABEL_36;
        }
        std::string::size_type v11 = HIBYTE(v48.__r_.__value_.__r.__words[2]);
        if ((v48.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::string::size_type v11 = v48.__r_.__value_.__l.__size_;
        }
        if (v11)
        {
LABEL_36:
          int v12 = SHIBYTE(v45);
          if (v45 >= 0) {
            size_t v13 = HIBYTE(v45);
          }
          else {
            size_t v13 = (size_t)v44[1];
          }
          unint64_t v14 = v13 + size;
          if (v13 + size > 0x7FFFFFFFFFFFFFF7) {
            sub_188D690();
          }
          if (v14 > 0x16)
          {
            uint64_t v16 = (v14 & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((v14 | 7) != 0x17) {
              uint64_t v16 = v14 | 7;
            }
            uint64_t v17 = v16 + 1;
            p_dst = (std::string *)operator new(v16 + 1);
            __dst.__r_.__value_.__l.__size_ = v13 + size;
            __dst.__r_.__value_.__r.__words[2] = v17 | 0x8000000000000000;
            __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
          }
          else
          {
            memset(&__dst, 0, sizeof(__dst));
            p_dst = &__dst;
            *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v13 + size;
          }
          if (size)
          {
            if (v9 >= 0) {
              uint64_t v18 = &v49;
            }
            else {
              uint64_t v18 = (std::string *)v49.__r_.__value_.__r.__words[0];
            }
            memmove(p_dst, v18, size);
          }
          uint64_t v19 = (char *)p_dst + size;
          if (v13)
          {
            if (v12 >= 0) {
              uint64_t v20 = v44;
            }
            else {
              uint64_t v20 = (void **)v44[0];
            }
            memmove(v19, v20, v13);
          }
          v19[v13] = 0;
          if ((v48.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            long long v21 = &v48;
          }
          else {
            long long v21 = (std::string *)v48.__r_.__value_.__r.__words[0];
          }
          if ((v48.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::string::size_type v22 = HIBYTE(v48.__r_.__value_.__r.__words[2]);
          }
          else {
            std::string::size_type v22 = v48.__r_.__value_.__l.__size_;
          }
          long long v23 = std::string::append(&__dst, (const std::string::value_type *)v21, v22);
          long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
          __p.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
          *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v24;
          v23->__r_.__value_.__l.__size_ = 0;
          v23->__r_.__value_.__r.__words[2] = 0;
          v23->__r_.__value_.__r.__words[0] = 0;
          if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__dst.__r_.__value_.__l.__data_);
          }
          std::string::operator=((std::string *)a2, &__p);
          sub_76DEC("ja_JP", 5, (uint64_t)&__dst);
          *((void *)a2 + 3) = sub_1133038((uint64_t)&__dst, 0);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
        }
        int v25 = SHIBYTE(v47.__r_.__value_.__r.__words[2]);
        if ((v47.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          size_t v26 = HIBYTE(v47.__r_.__value_.__r.__words[2]);
        }
        else {
          size_t v26 = v47.__r_.__value_.__l.__size_;
        }
        if (v26) {
          goto LABEL_72;
        }
        std::string::size_type v27 = HIBYTE(v46.__r_.__value_.__r.__words[2]);
        if ((v46.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::string::size_type v27 = v46.__r_.__value_.__l.__size_;
        }
        if (v27)
        {
LABEL_72:
          int v28 = SHIBYTE(v45);
          if (v45 >= 0) {
            size_t v29 = HIBYTE(v45);
          }
          else {
            size_t v29 = (size_t)v44[1];
          }
          unint64_t v30 = v29 + v26;
          if (v29 + v26 > 0x7FFFFFFFFFFFFFF7) {
            sub_188D690();
          }
          if (v30 > 0x16)
          {
            uint64_t v32 = (v30 & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((v30 | 7) != 0x17) {
              uint64_t v32 = v30 | 7;
            }
            uint64_t v33 = v32 + 1;
            unint64_t v31 = (std::string *)operator new(v32 + 1);
            __dst.__r_.__value_.__l.__size_ = v29 + v26;
            __dst.__r_.__value_.__r.__words[2] = v33 | 0x8000000000000000;
            __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v31;
          }
          else
          {
            memset(&__dst, 0, sizeof(__dst));
            unint64_t v31 = &__dst;
            *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v29 + v26;
          }
          if (v26)
          {
            if (v25 >= 0) {
              uint64_t v34 = &v47;
            }
            else {
              uint64_t v34 = (std::string *)v47.__r_.__value_.__r.__words[0];
            }
            memmove(v31, v34, v26);
          }
          uint64_t v35 = (char *)v31 + v26;
          if (v29)
          {
            if (v28 >= 0) {
              unint64_t v36 = v44;
            }
            else {
              unint64_t v36 = (void **)v44[0];
            }
            memmove(v35, v36, v29);
          }
          v35[v29] = 0;
          if ((v46.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            char v37 = &v46;
          }
          else {
            char v37 = (std::string *)v46.__r_.__value_.__r.__words[0];
          }
          if ((v46.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::string::size_type v38 = HIBYTE(v46.__r_.__value_.__r.__words[2]);
          }
          else {
            std::string::size_type v38 = v46.__r_.__value_.__l.__size_;
          }
          uint64_t v39 = std::string::append(&__dst, (const std::string::value_type *)v37, v38);
          long long v40 = *(_OWORD *)&v39->__r_.__value_.__l.__data_;
          __p.__r_.__value_.__r.__words[2] = v39->__r_.__value_.__r.__words[2];
          *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v40;
          v39->__r_.__value_.__l.__size_ = 0;
          v39->__r_.__value_.__r.__words[2] = 0;
          v39->__r_.__value_.__r.__words[0] = 0;
          if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__dst.__r_.__value_.__l.__data_);
          }
          sub_6F2F50((uint64_t)&__dst, (long long *)&__p, 20, 1);
          uint64_t v41 = (void **)(a2 + 32);
          if (a2[55] < 0) {
            operator delete(*v41);
          }
          *(_OWORD *)uint64_t v41 = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
          uint64_t v42 = v51;
          *((void *)a2 + 6) = *((void *)&__dst.__r_.__value_.__l + 2);
          *((void *)a2 + 7) = v42;
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
        }
        if (SHIBYTE(v45) < 0)
        {
          operator delete(v44[0]);
          if ((SHIBYTE(v46.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_105:
            if ((SHIBYTE(v47.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
              goto LABEL_106;
            }
            goto LABEL_111;
          }
        }
        else if ((SHIBYTE(v46.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
          goto LABEL_105;
        }
        operator delete(v46.__r_.__value_.__l.__data_);
        if ((SHIBYTE(v47.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_106:
          if ((SHIBYTE(v48.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
            goto LABEL_107;
          }
          goto LABEL_112;
        }
LABEL_111:
        operator delete(v47.__r_.__value_.__l.__data_);
        if ((SHIBYTE(v48.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_107:
          if ((SHIBYTE(v49.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
            return;
          }
          goto LABEL_113;
        }
LABEL_112:
        operator delete(v48.__r_.__value_.__l.__data_);
        if ((SHIBYTE(v49.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          return;
        }
LABEL_113:
        operator delete(v49.__r_.__value_.__l.__data_);
        return;
      }
      std::string::assign(&v49, "国道");
      uint64_t v8 = "コクドウ";
    }
    std::string::assign(&v47, v8);
    std::string::assign(&v48, "号線");
    std::string::assign(&v46, "ゴウセン");
    goto LABEL_26;
  }
}

void sub_6F56F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45)
{
  if (a27 < 0)
  {
    operator delete(__p);
    if ((a33 & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else if ((a33 & 0x80000000) == 0)
  {
LABEL_3:
    if (a39 < 0) {
      goto LABEL_4;
    }
    goto LABEL_8;
  }
  operator delete(a28);
  if (a39 < 0)
  {
LABEL_4:
    operator delete(a34);
    if ((a45 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_9;
  }
LABEL_8:
  if ((a45 & 0x80000000) == 0) {
LABEL_5:
  }
    _Unwind_Resume(a1);
LABEL_9:
  operator delete(a40);
  _Unwind_Resume(a1);
}

void sub_6F57B4(const std::string **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *((unsigned char *)&v17.__r_.__value_.__s + 23) = 0;
  v17.__r_.__value_.__s.__data_[0] = 0;
  if (*a1 == a1[1])
  {
    *(std::string *)a3 = v17;
  }
  else
  {
    std::string::operator=(&v17, *a1 + 1);
    sub_6F59AC((long long **)a1, (uint64_t **)&__p);
    int v12 = 50331648;
    uint64_t v13 = 0;
    uint64_t v14 = -4294967282;
    uint64_t v6 = sub_656AC();
    v21[0] = a2;
    v21[1] = a2 + 4;
    int v22 = 4;
    uint64_t v23 = 1;
    v18[0] = __p;
    v18[1] = v16;
    int v19 = 2;
    uint64_t v20 = (v16 - (unsigned char *)__p) >> 3;
    unint64_t v7 = (*(uint64_t (**)(uint64_t, void *, void *, int *))(*(void *)v6 + 48))(v6, v21, v18, &v12);
    if (v7 >> 31)
    {
      *(std::string *)a3 = v17;
      memset(&v17, 0, sizeof(v17));
    }
    else
    {
      if ((int)v7 >= (int)(-1431655765 * ((unint64_t)((char *)a1[1] - (char *)*a1) >> 4))) {
        unint64_t v8 = 0;
      }
      else {
        unint64_t v8 = v7;
      }
      uint64_t v9 = (uint64_t)&(*a1)[2 * v8];
      uint64_t v10 = (void **)(v9 + 24);
      if (*(char *)(v9 + 47) < 0)
      {
        sub_4200((unsigned char *)a3, *v10, *(void *)(v9 + 32));
      }
      else
      {
        long long v11 = *(_OWORD *)v10;
        *(void *)(a3 + 16) = *(void *)(v9 + 40);
        *(_OWORD *)a3 = v11;
      }
    }
    if (__p)
    {
      uint64_t v16 = __p;
      operator delete(__p);
    }
    if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v17.__r_.__value_.__l.__data_);
    }
  }
}

void sub_6F5958(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (__p)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void sub_6F59AC(long long **a1@<X0>, uint64_t **a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  BOOL v4 = *a1;
  int v3 = a1[1];
  if (v3 != *a1)
  {
    unint64_t v5 = 0xAAAAAAAAAAAAAAABLL * (v3 - *a1);
    if (v5 >> 61) {
      sub_2E00();
    }
    uint64_t v6 = (uint64_t *)operator new(0x5555555555555558 * (v3 - *a1));
    *a2 = v6;
    a2[1] = v6;
    a2[2] = &v6[v5];
    while (1)
    {
      if (*((char *)v4 + 23) < 0)
      {
        sub_4200(__p, *(void **)v4, *((void *)v4 + 1));
      }
      else
      {
        long long v7 = *v4;
        uint64_t v36 = *((void *)v4 + 2);
        *(_OWORD *)std::string __p = v7;
      }
      unint64_t v8 = HIBYTE(v36);
      if (v36 >= 0) {
        uint64_t v9 = (unsigned __int8 *)__p;
      }
      else {
        uint64_t v9 = (unsigned __int8 *)__p[0];
      }
      if (v36 < 0) {
        unint64_t v8 = (unint64_t)__p[1];
      }
      if (v8 >= 0x1F) {
        uint64_t v10 = 31;
      }
      else {
        uint64_t v10 = v8;
      }
      if (!v10)
      {
        long long v38 = 0u;
        long long v39 = 0u;
        long long v37 = 0u;
        goto LABEL_26;
      }
      if (v10 == 1) {
        break;
      }
      if (v10 == 2)
      {
        int v12 = __p;
        if (v36 < 0) {
          int v12 = (void **)__p[0];
        }
        *(void *)&long long v37 = *v9 | ((unint64_t)*((unsigned __int8 *)v12 + 1) << 8);
        uint64_t v11 = 2;
        goto LABEL_24;
      }
      sub_76DEC(v9, v10, (uint64_t)&v37);
LABEL_26:
      uint64_t v13 = sub_1133038((uint64_t)&v37, 0);
      uint64_t v14 = v13;
      uint64_t v16 = a2[1];
      unint64_t v15 = (unint64_t)a2[2];
      if ((unint64_t)v16 >= v15)
      {
        uint64_t v18 = *a2;
        uint64_t v19 = (char *)v16 - (char *)*a2;
        uint64_t v20 = v19 >> 3;
        unint64_t v21 = (v19 >> 3) + 1;
        if (v21 >> 61) {
          sub_2E00();
        }
        uint64_t v22 = v15 - (void)v18;
        if (v22 >> 2 > v21) {
          unint64_t v21 = v22 >> 2;
        }
        if ((unint64_t)v22 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v23 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v23 = v21;
        }
        if (v23)
        {
          if (v23 >> 61) {
            sub_188D718();
          }
          long long v24 = operator new(8 * v23);
          int v25 = (uint64_t *)&v24[8 * v20];
          *int v25 = v14;
          uint64_t v17 = (uint64_t)(v25 + 1);
          if (v16 != v18)
          {
LABEL_42:
            unint64_t v26 = (char *)(v16 - 1) - (char *)v18;
            if (v26 < 0x58) {
              goto LABEL_56;
            }
            if ((unint64_t)((char *)v16 - &v24[v19]) < 0x20) {
              goto LABEL_56;
            }
            uint64_t v27 = (v26 >> 3) + 1;
            uint64_t v28 = 8 * (v27 & 0x3FFFFFFFFFFFFFFCLL);
            size_t v29 = &v16[v28 / 0xFFFFFFFFFFFFFFF8];
            int v25 = (uint64_t *)((char *)v25 - v28);
            unint64_t v30 = &v24[8 * v20 - 16];
            unint64_t v31 = v16 - 2;
            uint64_t v32 = v27 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              long long v33 = *(_OWORD *)v31;
              *(v30 - 1) = *((_OWORD *)v31 - 1);
              _OWORD *v30 = v33;
              v30 -= 2;
              v31 -= 4;
              v32 -= 4;
            }
            while (v32);
            uint64_t v16 = v29;
            if (v27 != (v27 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_56:
              do
              {
                uint64_t v34 = *--v16;
                *--int v25 = v34;
              }
              while (v16 != v18);
            }
            uint64_t v16 = *a2;
            *a2 = v25;
            a2[1] = (uint64_t *)v17;
            a2[2] = (uint64_t *)&v24[8 * v23];
            if (!v16) {
              goto LABEL_39;
            }
LABEL_38:
            operator delete(v16);
            goto LABEL_39;
          }
        }
        else
        {
          long long v24 = 0;
          int v25 = (uint64_t *)(8 * v20);
          *(void *)(8 * v20) = v14;
          uint64_t v17 = 8 * v20 + 8;
          if (v16 != v18) {
            goto LABEL_42;
          }
        }
        *a2 = v25;
        a2[1] = (uint64_t *)v17;
        a2[2] = (uint64_t *)&v24[8 * v23];
        if (v16) {
          goto LABEL_38;
        }
      }
      else
      {
        *uint64_t v16 = v13;
        uint64_t v17 = (uint64_t)(v16 + 1);
      }
LABEL_39:
      a2[1] = (uint64_t *)v17;
      if (SHIBYTE(v36) < 0) {
        operator delete(__p[0]);
      }
      v4 += 3;
      if (v4 == v3) {
        return;
      }
    }
    *(void *)&long long v37 = *v9;
    uint64_t v11 = 1;
LABEL_24:
    *((void *)&v37 + 1) = v11;
    long long v38 = 0u;
    long long v39 = 0u;
    goto LABEL_26;
  }
}

void sub_6F5CC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  uint64_t v18 = *(void **)v16;
  if (!*(void *)v16) {
    _Unwind_Resume(exception_object);
  }
  *(void *)(v16 + 8) = v18;
  operator delete(v18);
  _Unwind_Resume(exception_object);
}

void sub_6F5D24(char *a1@<X1>, uint64_t a2@<X2>, int64x2_t *a3@<X8>)
{
  sub_6F3348(a3);
  if (*(void *)a1 != *((void *)a1 + 1))
  {
    sub_6FB710(a1, (unint64_t *)&__p);
    int v10 = 50331648;
    uint64_t v11 = 0;
    uint64_t v12 = -4294967282;
    uint64_t v6 = sub_65800();
    v18[0] = a2 + 32;
    v18[1] = a2 + 36;
    int v19 = 4;
    uint64_t v20 = 1;
    v15[0] = __p;
    v15[1] = v14;
    int v16 = 2;
    uint64_t v17 = (v14 - (unsigned char *)__p) >> 3;
    unint64_t v7 = (*(uint64_t (**)(uint64_t, void *, void *, int *))(*(void *)v6 + 48))(v6, v18, v15, &v10);
    if (!(v7 >> 31))
    {
      uint64_t v8 = *(void *)a1;
      if ((int)v7 >= (int)(-1431655765 * ((*((void *)a1 + 1) - *(void *)a1) >> 4))) {
        unint64_t v9 = 0;
      }
      else {
        unint64_t v9 = v7;
      }
      a3[1].i64[1] = sub_76580((unsigned __int8 *)(v8 + 48 * v9));
      std::string::operator=((std::string *)a3, (const std::string *)(v8 + 48 * v9 + 24));
    }
    if (__p)
    {
      uint64_t v14 = __p;
      operator delete(__p);
    }
  }
}

void sub_6F5E60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p)
  {
    operator delete(__p);
    if ((*(char *)(v13 + 23) & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((*(char *)(v13 + 23) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)v13);
  _Unwind_Resume(exception_object);
}

uint64_t sub_6F5EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::string __p = 0;
  unint64_t v21 = 0;
  uint64_t v22 = 0;
  if (a1 == a2) {
    goto LABEL_18;
  }
  uint64_t v5 = a1;
  int v6 = -1;
  do
  {
    unint64_t v7 = *(unsigned char **)v5;
    sub_29603C(&__p, (void *)(*(void *)v5 + 56));
    if (*v7) {
      BOOL v8 = 0;
    }
    else {
      BOOL v8 = v6 == -1;
    }
    if (v8) {
      int v6 = ((unint64_t)(v21 - (unsigned char *)__p) >> 3) - 1;
    }
    v5 += 8;
  }
  while (v5 != a2);
  if (__p == v21)
  {
LABEL_18:
    uint64_t v14 = sub_1133328();
    goto LABEL_20;
  }
  int v16 = 50331648;
  uint64_t v17 = 0;
  int v18 = 14;
  int v19 = v6;
  uint64_t v9 = sub_65800();
  v26[0] = a3;
  v26[1] = a3 + 4;
  int v27 = 4;
  uint64_t v28 = 1;
  v23[0] = __p;
  v23[1] = v21;
  int v24 = 2;
  uint64_t v25 = (v21 - (unsigned char *)__p) >> 3;
  unint64_t v10 = (*(uint64_t (**)(uint64_t, void *, void *, int *))(*(void *)v9 + 48))(v9, v26, v23, &v16);
  if (HIDWORD(v10))
  {
    uint64_t v14 = sub_1133328();
LABEL_20:
    uint64_t v12 = v14;
    uint64_t v13 = __p;
    if (!__p) {
      return v12;
    }
LABEL_21:
    unint64_t v21 = v13;
    operator delete(v13);
    return v12;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F6A40, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_24F6A40))
  {
    qword_24F6A38 = sub_1133328();
    __cxa_guard_release(&qword_24F6A40);
  }
  uint64_t v11 = &qword_24F6A38;
  if ((v10 & 0x80000000) == 0 && (int)v10 < (int)((unint64_t)(v21 - (unsigned char *)__p) >> 3)) {
    uint64_t v11 = (uint64_t *)((char *)__p + 8 * v10);
  }
  uint64_t v12 = *v11;
  uint64_t v13 = __p;
  if (__p) {
    goto LABEL_21;
  }
  return v12;
}

void sub_6F6074(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_6F60AC(unsigned __int16 *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int v66 = 0;
  double v67 = 0;
  uint64_t v68 = 0;
  unint64_t v10 = (unsigned __int8 *)*a2;
  uint64_t v11 = (unsigned __int8 *)a2[1];
  if ((unsigned __int8 *)*a2 != v11)
  {
    uint64_t v12 = (unsigned __int8 *)*a2;
    do
    {
      if (*v12) {
        BOOL v13 = 1;
      }
      else {
        BOOL v13 = v12[114] == 2;
      }
      char v14 = v13;
      if (!v13) {
        break;
      }
      v12 += 144;
    }
    while (v12 != v11);
    *(void *)std::string __p = &v66;
    if (v14)
    {
      do
      {
        if (*v10 <= 1u)
        {
          char v55 = v10;
          sub_2A98DC((void ***)__p, &v55);
        }
        v10 += 144;
      }
      while (v10 != v11);
      goto LABEL_28;
    }
    do
    {
      int v15 = v10[114];
      if (*v10)
      {
        if (*v10 != 1 || v15 == 2) {
          goto LABEL_18;
        }
      }
      else if (v15 == 2)
      {
        goto LABEL_18;
      }
      char v55 = v10;
      sub_2A98DC((void ***)__p, &v55);
LABEL_18:
      v10 += 144;
    }
    while (v10 != v11);
  }
LABEL_28:
  int v63 = 0;
  uint64_t v64 = 0;
  uint64_t v65 = 0;
  uint64_t v17 = v66;
  int v18 = v67;
  if (v66 == v67) {
    goto LABEL_67;
  }
  int v19 = -1;
  do
  {
    uint64_t v20 = *(unsigned char **)v17;
    sub_29603C((void **)&v63, (void *)(*(void *)v17 + 56));
    if (*v20) {
      BOOL v21 = 0;
    }
    else {
      BOOL v21 = v19 == -1;
    }
    if (v21) {
      int v19 = ((unint64_t)(v64 - v63) >> 3) - 1;
    }
    v17 += 8;
  }
  while (v17 != v18);
  if (v63 == v64 || v19 == -1) {
    goto LABEL_67;
  }
  int v59 = 50331648;
  uint64_t v60 = 0;
  int v61 = 14;
  int v62 = v19;
  uint64_t v23 = sub_656AC();
  *(void *)std::string __p = a4;
  *(void *)&__p[8] = a4 + 4;
  *(_DWORD *)&__p[16] = 4;
  uint64_t v52 = 1;
  char v55 = v63;
  *(void *)&long long v56 = v64;
  DWORD2(v56) = 2;
  uint64_t v57 = (v64 - v63) >> 3;
  unint64_t v24 = (*(uint64_t (**)(uint64_t, unsigned char *, unsigned __int8 **, int *))(*(void *)v23 + 48))(v23, __p, &v55, &v59);
  uint64_t v25 = v66;
  unint64_t v26 = &v66[8 * v19];
  uint64_t v47 = a4;
  std::string v46 = a3;
  if (HIDWORD(v24))
  {
    int v27 = v67;
    if (v66 == v67)
    {
LABEL_67:
      sub_6F30A4(a5);
      goto LABEL_68;
    }
  }
  else
  {
    int v27 = v67;
    if ((int)v24 >= (int)((unint64_t)(v67 - v66) >> 3)) {
      uint64_t v28 = &v66[8 * v19];
    }
    else {
      uint64_t v28 = &v66[8 * v24];
    }
    if ((v24 & 0x80000000) == 0) {
      unint64_t v26 = v28;
    }
    if (v66 == v67) {
      goto LABEL_67;
    }
  }
  size_t v29 = (void *)(*(void *)v26 + 56);
  unint64_t v30 = (void **)(a5 + 72);
  unint64_t v31 = (void **)(a5 + 96);
  std::string v48 = (void **)(a5 + 32);
  while (1)
  {
    uint64_t v32 = *(void *)v25;
    if (sub_1132FF4(*(void *)v25 + 56, (uint64_t)v29)) {
      goto LABEL_53;
    }
    sub_6F30A4(a5);
    std::string::operator=((std::string *)a5, (const std::string *)(v32 + 8));
    *(void *)(a5 + 24) = *v29;
    if (sub_6F2FD8(a5)) {
      break;
    }
    if (*(char *)(a5 + 151) < 0)
    {
      operator delete(*(void **)(a5 + 128));
      if ((*(char *)(a5 + 119) & 0x80000000) == 0)
      {
LABEL_58:
        if ((*(char *)(a5 + 95) & 0x80000000) == 0) {
          goto LABEL_59;
        }
        goto LABEL_64;
      }
    }
    else if ((*(char *)(a5 + 119) & 0x80000000) == 0)
    {
      goto LABEL_58;
    }
    operator delete(*v31);
    if ((*(char *)(a5 + 95) & 0x80000000) == 0)
    {
LABEL_59:
      if ((*(char *)(a5 + 55) & 0x80000000) == 0) {
        goto LABEL_60;
      }
      goto LABEL_65;
    }
LABEL_64:
    operator delete(*v30);
    if ((*(char *)(a5 + 55) & 0x80000000) == 0)
    {
LABEL_60:
      if (*(char *)(a5 + 23) < 0) {
        goto LABEL_66;
      }
      goto LABEL_53;
    }
LABEL_65:
    operator delete(*v48);
    if (*(char *)(a5 + 23) < 0) {
LABEL_66:
    }
      operator delete(*(void **)a5);
LABEL_53:
    v25 += 8;
    if (v25 == v27) {
      goto LABEL_67;
    }
  }
  long long v33 = (long long *)(v32 + 88);
  if (*(char *)(v32 + 111) < 0) {
    uint64_t v34 = *(void *)(v32 + 96);
  }
  else {
    uint64_t v34 = *(unsigned __int8 *)(v32 + 111);
  }
  uint64_t v35 = v47;
  if (v34) {
    uint64_t v36 = (const std::string *)(v32 + 88);
  }
  else {
    uint64_t v36 = (const std::string *)(v32 + 8);
  }
  std::string::operator=((std::string *)(a5 + 128), v36);
  uint64_t v38 = *v46;
  uint64_t v37 = v46[1];
  if (*v46 != v37)
  {
    uint64_t v39 = *v46;
    while (!*(unsigned char *)(v39 + 32))
    {
      v39 += 40;
      if (v39 == v37) {
        goto LABEL_87;
      }
    }
    if (v39 == v37)
    {
LABEL_87:
      LODWORD(v55) = *(_DWORD *)v38;
      if ((*(char *)(v38 + 31) & 0x80000000) == 0)
      {
        uint64_t v40 = v38 + 8;
        goto LABEL_89;
      }
      sub_4200(&v56, *(void **)(v38 + 8), *(void *)(v38 + 16));
    }
    else
    {
      LODWORD(v55) = *(_DWORD *)v39;
      if ((*(char *)(v39 + 31) & 0x80000000) == 0)
      {
        uint64_t v40 = v39 + 8;
        uint64_t v38 = v39;
LABEL_89:
        long long v41 = *(_OWORD *)v40;
        uint64_t v57 = *(void *)(v40 + 16);
        long long v56 = v41;
        goto LABEL_92;
      }
      sub_4200(&v56, *(void **)(v39 + 8), *(void *)(v39 + 16));
      uint64_t v38 = v39;
    }
LABEL_92:
    char v58 = *(unsigned char *)(v38 + 32);
    char v50 = 0;
    LOBYTE(v49) = 0;
    sub_6F27C4((uint64_t)__p, (int)v55, &v56, &v49);
    *(_DWORD *)(a5 + 64) = *(_DWORD *)__p;
    long long v33 = (long long *)(v32 + 88);
    if (*(char *)(a5 + 95) < 0) {
      operator delete(*v30);
    }
    *(_OWORD *)unint64_t v30 = *(_OWORD *)&__p[8];
    *(void *)(a5 + 88) = v52;
    HIBYTE(v52) = 0;
    __p[8] = 0;
    uint64_t v35 = v47;
    if (*(char *)(a5 + 119) < 0)
    {
      operator delete(*v31);
      int v43 = SHIBYTE(v52);
      uint64_t v42 = a5 + 64;
      *(_OWORD *)unint64_t v31 = v53;
      *(void *)(a5 + 112) = v54;
      HIBYTE(v54) = 0;
      LOBYTE(v53) = 0;
      if (v43 < 0) {
        operator delete(*(void **)&__p[8]);
      }
    }
    else
    {
      uint64_t v42 = a5 + 64;
      *(_OWORD *)unint64_t v31 = v53;
      *(void *)(a5 + 112) = v54;
      HIBYTE(v54) = 0;
      LOBYTE(v53) = 0;
    }
    if (v50 < 0) {
      operator delete((void *)v49);
    }
    if (!sub_6F28B0(v42, v32 + 8)) {
      std::string::operator=((std::string *)(a5 + 96), (const std::string *)(v32 + 120));
    }
    if (SHIBYTE(v57) < 0) {
      operator delete((void *)v56);
    }
  }
  sub_6F6764((uint64_t)a1, (uint64_t *)(v32 + 64), v33, v35, (uint64_t)__p);
  if (*(char *)(a5 + 55) < 0) {
    operator delete(*v48);
  }
  *(_OWORD *)std::string v48 = *(_OWORD *)__p;
  uint64_t v44 = v52;
  *(void *)(a5 + 48) = *(void *)&__p[16];
  *(void *)(a5 + 56) = v44;
  if (!sub_6F2FD8((uint64_t)v48))
  {
    sub_6F6B00((uint64_t)a1, (uint64_t *)&v66, v35, (uint64_t)__p);
    if (*(char *)(a5 + 55) < 0) {
      operator delete(*v48);
    }
    *(_OWORD *)std::string v48 = *(_OWORD *)__p;
    uint64_t v45 = v52;
    *(void *)(a5 + 48) = *(void *)&__p[16];
    *(void *)(a5 + 56) = v45;
    sub_6F6DF8(a1, a5, a2, v35);
  }
LABEL_68:
  if (v63)
  {
    uint64_t v64 = v63;
    operator delete(v63);
  }
  if (v66)
  {
    double v67 = v66;
    operator delete(v66);
  }
}

void sub_6F66A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  sub_4A50F4(v37);
  uint64_t v40 = *(void **)(v38 - 136);
  if (v40)
  {
    *(void *)(v38 - 128) = v40;
    operator delete(v40);
    long long v41 = *(void **)(v38 - 112);
    if (!v41) {
LABEL_3:
    }
      _Unwind_Resume(a1);
  }
  else
  {
    long long v41 = *(void **)(v38 - 112);
    if (!v41) {
      goto LABEL_3;
    }
  }
  *(void *)(v38 - 104) = v41;
  operator delete(v41);
  _Unwind_Resume(a1);
}

void sub_6F6764(uint64_t a1@<X0>, uint64_t *a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v30 = 0;
  uint64_t v10 = *a2;
  uint64_t v11 = a2[1];
  if (*a2 == v11) {
    goto LABEL_27;
  }
  do
  {
    if ((sub_6F6F40(a1, a4, v10) & 1) != 0
      && sub_6F707C(a1, v10 + 24) == *(_DWORD *)(a4 + 32)
      && (!v30 || *(_DWORD *)(v10 + 52) < v29))
    {
      sub_6FB5F8(&__str, (const std::string *)v10);
    }
    v10 += 56;
  }
  while (v10 != v11);
  if (!v30)
  {
LABEL_27:
    if (*(unsigned char *)(a1 + 24))
    {
      uint64_t v14 = *a2;
      uint64_t v13 = a2[1];
      uint64_t v15 = *a2 + 56;
      if (*a2 != v13 && v15 != v13)
      {
        do
        {
          if (*(_DWORD *)(v15 + 52) < *(_DWORD *)(v14 + 52)) {
            uint64_t v14 = v15;
          }
          v15 += 56;
        }
        while (v15 != v13);
      }
      if (v14 != v13)
      {
        unsigned int v17 = *(_DWORD *)(a4 + 32) - 1;
        if (v17 < 0x2A && ((0x27EFFDFFFBFuLL >> v17) & 1) != 0)
        {
          int v19 = dword_20E8CE0[v17];
          uint64_t v18 = 3;
          char v24 = 3;
          LOWORD(__p[0]) = v19;
          BYTE2(__p[0]) = BYTE2(v19);
        }
        else
        {
          uint64_t v18 = 0;
          char v24 = 0;
        }
        *(unsigned char *)((unint64_t)__p | v18) = 0;
        sub_6F2FC8((void *)a5);
        sub_6FC690(v14, (unsigned __int8 *)(v14 + 24), (unsigned __int8 *)__p, (uint64_t)&v21);
        if (*(char *)(a5 + 23) < 0) {
          operator delete(*(void **)a5);
        }
        *(_OWORD *)a5 = v21;
        *(void *)(a5 + 16) = v22;
        *(_DWORD *)(a5 + 24) = sub_6F4468((unsigned __int8 *)(v14 + 24));
        *(_DWORD *)(a5 + 28) = 2;
        if (v24 < 0) {
          operator delete(__p[0]);
        }
        goto LABEL_38;
      }
    }
LABEL_31:
    sub_6F2F50(a5, a3, 0, 1);
    goto LABEL_38;
  }
  std::string::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = __str.__r_.__value_.__l.__size_;
  }
  if (!size) {
    goto LABEL_31;
  }
  sub_6F2FC8((void *)a5);
  if (!v30
    || (std::string::operator=((std::string *)a5, &__str), !v30)
    || (*(_DWORD *)(a5 + 24) = sub_6F4468((unsigned __int8 *)&v26), !v30))
  {
    exception = __cxa_allocate_exception(8uLL);
    void *exception = &off_2439078;
  }
  if ((unint64_t)v28 > 5) {
    *(_DWORD *)(a5 + 28) = 2;
  }
  else {
    *(_DWORD *)(a5 + 28) = dword_20E8D88[v28];
  }
LABEL_38:
  if (!v30) {
    return;
  }
  if ((v27 & 0x80000000) == 0)
  {
    if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_43:
    operator delete(__str.__r_.__value_.__l.__data_);
    return;
  }
  operator delete(v26);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_43;
  }
}

void sub_6F6A7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if (*(char *)(v19 + 23) < 0) {
    operator delete(*(void **)v19);
  }
  if (a18 < 0)
  {
    operator delete(__p);
    sub_6F45D8((uint64_t)&a19);
    _Unwind_Resume(a1);
  }
  sub_6F45D8((uint64_t)&a19);
  _Unwind_Resume(a1);
}

double sub_6F6B00@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v7 = (unsigned __int8 **)*a2;
  BOOL v8 = (unsigned __int8 **)a2[1];
  if ((unsigned __int8 **)*a2 == v8)
  {
LABEL_13:
    sub_6F2FC8(&__p);
    HIDWORD(v33) = 1;
    uint64_t v15 = (void *)*a2;
    int v16 = (void *)a2[1];
    if ((void *)*a2 == v16)
    {
      uint64_t v19 = *a2;
    }
    else
    {
      while (1)
      {
        uint64_t v17 = *v15;
        uint64_t v34 = sub_1133208(0x29u);
        if (sub_1132FD0(v17 + 56, (uint64_t)&v34)) {
          break;
        }
        if (++v15 == v16)
        {
          uint64_t v15 = v16;
          break;
        }
      }
      uint64_t v18 = v15;
      uint64_t v19 = *a2;
      uint64_t v15 = (void *)a2[1];
      if (v18 != v15)
      {
        if ((void *)v19 != v15)
        {
          while (1)
          {
            uint64_t v20 = *(void *)v19;
            uint64_t v34 = sub_1133208(0x2Bu);
            if (sub_1132FD0(v20 + 56, (uint64_t)&v34)) {
              break;
            }
            v19 += 8;
            if ((void *)v19 == v15)
            {
              uint64_t v19 = (uint64_t)v15;
              break;
            }
          }
          if (v19 != a2[1])
          {
            uint64_t v21 = *(void *)v19;
            std::string::operator=(&__p, (const std::string *)(*(void *)v19 + 8));
            int v22 = sub_1132F18((uint64_t *)(v21 + 56));
LABEL_45:
            LODWORD(v33) = v22;
            goto LABEL_46;
          }
          uint64_t v19 = a2[1];
        }
        uint64_t v15 = (void *)v19;
        uint64_t v19 = *a2;
      }
    }
    uint64_t v34 = sub_6F5EB4(v19, (uint64_t)v15, a3 + 32);
    int v23 = sub_1132FB0(&v34);
    char v24 = (unsigned __int8 **)*a2;
    uint64_t v25 = (unsigned __int8 **)a2[1];
    if (!v23) {
      goto LABEL_41;
    }
    if (v24 != v25)
    {
      while (!sub_1132FD0((uint64_t)(*v24 + 56), (uint64_t)&v34))
      {
        if (++v24 == v25)
        {
          char v24 = v25;
          break;
        }
      }
      if (v24 != (unsigned __int8 **)a2[1])
      {
        unint64_t v26 = *v24;
        LODWORD(v33) = sub_1132F18((uint64_t *)*v24 + 7);
        std::string::operator=(&__p, (const std::string *)(v26 + 8));
LABEL_46:
        double result = *(double *)&__p.__r_.__value_.__l.__data_;
        *(_OWORD *)a4 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
        uint64_t v31 = v33;
        *(void *)(a4 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
        *(void *)(a4 + 24) = v31;
        return result;
      }
      char v24 = (unsigned __int8 **)a2[1];
    }
    uint64_t v25 = v24;
    char v24 = (unsigned __int8 **)*a2;
LABEL_41:
    while (v24 != v25)
    {
      char v27 = *v24;
      char v28 = (uint64_t *)(*v24 + 56);
      BOOL v29 = sub_64DBC(v28);
      if (*v27 < 2u && v29)
      {
        std::string::operator=(&__p, (const std::string *)(v27 + 8));
        int v22 = sub_1132F18(v28);
        goto LABEL_45;
      }
      ++v24;
    }
    sub_6F2FC8((void *)a4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    return result;
  }
  while (1)
  {
    uint64_t v10 = (uint64_t)*v7;
    if (**v7 <= 1u)
    {
      memset(&__p, 0, sizeof(__p));
      sub_6F6764(a1, (uint64_t *)(v10 + 64), (long long *)&__p, a3, a4);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      BOOL v11 = sub_6F2FD8(a4);
      BOOL v13 = v11;
      char v14 = *(char *)(a4 + 23) >= 0 || v11;
      if ((v14 & 1) == 0) {
        operator delete(*(void **)a4);
      }
      if (v13) {
        return result;
      }
    }
    if (++v7 == v8) {
      goto LABEL_13;
    }
  }
}

void sub_6F6DA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_6F6DF8(unsigned __int16 *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v7 = (uint64_t)a1;
  int v8 = *((unsigned __int8 *)a1 + 23);
  if (*((char *)a1 + 23) < 0)
  {
    if (*((void *)a1 + 1) != 3) {
      goto LABEL_14;
    }
    uint64_t v9 = *(unsigned __int16 **)a1;
  }
  else
  {
    uint64_t v9 = a1;
    if (v8 != 3) {
      goto LABEL_11;
    }
  }
  int v10 = *v9;
  int v11 = *((unsigned __int8 *)v9 + 2);
  if (v10 == 20554 && v11 == 78)
  {
    sub_6F7D20((uint64_t *)a1, (char *)a2);
    int v8 = *(unsigned __int8 *)(v7 + 23);
    if ((v8 & 0x80) == 0) {
      goto LABEL_11;
    }
  }
  else if ((v8 & 0x80) == 0)
  {
LABEL_11:
    if (v8 != 3) {
      goto LABEL_21;
    }
    BOOL v13 = (unsigned __int16 *)v7;
    goto LABEL_16;
  }
LABEL_14:
  if (*(void *)(v7 + 8) != 3) {
    goto LABEL_24;
  }
  BOOL v13 = *(unsigned __int16 **)v7;
LABEL_16:
  int v14 = *v13;
  int v15 = *((unsigned __int8 *)v13 + 2);
  if (v14 == 16967 && v15 == 82)
  {
    sub_6F8348(v7, a2, a3, a4);
    int v8 = *(unsigned __int8 *)(v7 + 23);
    if ((v8 & 0x80) == 0)
    {
LABEL_21:
      if (v8 != 3) {
        return;
      }
      goto LABEL_26;
    }
  }
  else if ((v8 & 0x80) == 0)
  {
    goto LABEL_21;
  }
LABEL_24:
  if (*(void *)(v7 + 8) != 3) {
    return;
  }
  uint64_t v7 = *(void *)v7;
LABEL_26:
  if (*(_WORD *)v7 == 18499 && *(unsigned char *)(v7 + 2) == 78 && *(_DWORD *)(a4 + 32) == 5) {
    *(_DWORD *)(a2 + 60) = 0;
  }
}

uint64_t sub_6F6F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v3 = 0;
  int v4 = 3;
  switch(*(unsigned char *)(a3 + 48))
  {
    case 1:
      return 1;
    case 4:
      goto LABEL_3;
    case 5:
      return v3;
    default:
      int v4 = 2;
LABEL_3:
      int v6 = *(unsigned char **)(a2 + 40);
      uint64_t v5 = *(unsigned char **)(a2 + 48);
      int64_t v7 = v5 - v6;
      if (v5 == v6) {
        return 0;
      }
      if (v7 < 0) {
        sub_2E00();
      }
      int v8 = (char *)operator new(v5 - v6);
      uint64_t v9 = 4 * (v7 >> 2);
      int v10 = &v8[v9];
      memcpy(v8, v6, v7);
      uint64_t v11 = 0;
      break;
  }
  while (*(_DWORD *)&v8[v11] != v4)
  {
    v11 += 4;
    if (v9 == v11) {
      goto LABEL_11;
    }
  }
  int v10 = &v8[v11];
LABEL_11:
  BOOL v3 = v7 >> 2 != (v10 - v8) >> 2;
  operator delete(v8);
  return v3;
}

void sub_6F7048(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6F707C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(unsigned __int8 *)(a2 + 23);
  if ((v3 & 0x80u) == 0) {
    int v4 = (unsigned __int8 *)a2;
  }
  else {
    int v4 = *(unsigned __int8 **)a2;
  }
  if ((v3 & 0x80u) != 0) {
    unint64_t v3 = *(void *)(a2 + 8);
  }
  if (v3 >= 0x1F) {
    uint64_t v5 = 31;
  }
  else {
    uint64_t v5 = v3;
  }
  if (v5)
  {
    if (v5 == 1)
    {
      uint64_t v6 = *v4;
      uint64_t v7 = 1;
    }
    else
    {
      if (v5 != 2)
      {
        sub_76DEC(v4, v5, (uint64_t)&v18);
        goto LABEL_17;
      }
      uint64_t v6 = *(unsigned __int16 *)v4;
      uint64_t v7 = 2;
    }
    *(void *)&long long v18 = v6;
    *((void *)&v18 + 1) = v7;
    long long v19 = 0u;
    long long v20 = 0u;
  }
  else
  {
    long long v19 = 0u;
    long long v20 = 0u;
    long long v18 = 0u;
  }
LABEL_17:
  uint64_t v11 = sub_1133038((uint64_t)&v18, 3);
  long long v28 = xmmword_20E8CB0;
  *(_OWORD *)BOOL v29 = unk_20E8CC0;
  *(_OWORD *)&v29[12] = unk_20E8CCC;
  long long v24 = xmmword_20E8C70;
  long long v25 = unk_20E8C80;
  long long v26 = xmmword_20E8C90;
  long long v27 = unk_20E8CA0;
  long long v20 = xmmword_20E8C30;
  long long v21 = unk_20E8C40;
  long long v22 = xmmword_20E8C50;
  long long v23 = unk_20E8C60;
  long long v18 = xmmword_20E8C10;
  long long v19 = unk_20E8C20;
  uint64_t v8 = sub_65800();
  v15[0] = &v11;
  v15[1] = v12;
  int v16 = 2;
  uint64_t v17 = 1;
  v12[0] = &v18;
  v12[1] = &v30;
  int v13 = 4;
  uint64_t v14 = 51;
  unsigned int v9 = (*(uint64_t (**)(uint64_t, void *, void *))(*(void *)v8 + 40))(v8, v15, v12);
  if (v9 > 0x32) {
    return sub_6F4468((unsigned __int8 *)a2);
  }
  uint64_t result = *((unsigned int *)&v18 + v9);
  if (!result) {
    return sub_6F4468((unsigned __int8 *)a2);
  }
  return result;
}

void sub_6F7220(unsigned __int16 *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, int64x2_t *a4@<X8>)
{
  std::string __p = 0;
  uint64_t v45 = 0;
  uint64_t v4 = *a2;
  uint64_t v41 = a2[1];
  if (*a2 != v41)
  {
    uint64_t v5 = 0;
    while (1)
    {
      uint64_t v7 = *(unsigned __int8 **)v4;
      uint64_t v6 = *(unsigned __int8 **)(v4 + 8);
      while (v7 != v6)
      {
        uint64_t v9 = sub_76580(v7);
        uint64_t v10 = v9;
        if (v5 < v45)
        {
          *(void *)uint64_t v5 = v9;
          uint64_t v8 = (uint64_t)(v5 + 8);
          goto LABEL_6;
        }
        uint64_t v11 = (v5 - __p) >> 3;
        unint64_t v12 = v11 + 1;
        if ((unint64_t)(v11 + 1) >> 61) {
          sub_2E00();
        }
        uint64_t v13 = v45 - __p;
        if ((v45 - __p) >> 2 > v12) {
          unint64_t v12 = v13 >> 2;
        }
        if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v14 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v14 = v12;
        }
        if (v14)
        {
          if (v14 >> 61) {
            sub_188D718();
          }
          int v15 = operator new(8 * v14);
          int v16 = &v15[8 * v11];
          *(void *)int v16 = v10;
          uint64_t v8 = (uint64_t)(v16 + 8);
          if (v5 == __p)
          {
LABEL_24:
            std::string __p = v16;
            uint64_t v45 = &v15[8 * v14];
            if (!v5) {
              goto LABEL_6;
            }
LABEL_25:
            operator delete(v5);
            goto LABEL_6;
          }
        }
        else
        {
          int v15 = 0;
          int v16 = (char *)(8 * v11);
          *(void *)(8 * v11) = v10;
          uint64_t v8 = 8 * v11 + 8;
          if (v5 == __p) {
            goto LABEL_24;
          }
        }
        unint64_t v17 = v5 - 8 - __p;
        if (v17 < 0x168)
        {
          long long v18 = v5;
          goto LABEL_20;
        }
        if (&v15[v5 - __p - 8 - (v17 & 0xFFFFFFFFFFFFFFF8)] > &v15[v5 - __p - 8])
        {
          long long v18 = v5;
          do
          {
LABEL_20:
            uint64_t v19 = *((void *)v18 - 1);
            v18 -= 8;
            *((void *)v16 - 1) = v19;
            v16 -= 8;
          }
          while (v18 != __p);
          goto LABEL_21;
        }
        if (&v5[-(v17 & 0xFFFFFFFFFFFFFFF8) - 8] > v5 - 8)
        {
          long long v18 = v5;
          goto LABEL_20;
        }
        if ((unint64_t)(__p - v15) < 0x20)
        {
          long long v18 = v5;
          goto LABEL_20;
        }
        uint64_t v20 = (v17 >> 3) + 1;
        uint64_t v21 = 8 * (v20 & 0x3FFFFFFFFFFFFFFCLL);
        long long v18 = &v5[-v21];
        v16 -= v21;
        long long v22 = &v15[8 * v11 - 16];
        long long v23 = v5 - 16;
        uint64_t v24 = v20 & 0x3FFFFFFFFFFFFFFCLL;
        do
        {
          long long v25 = *(_OWORD *)v23;
          *(v22 - 1) = *((_OWORD *)v23 - 1);
          *long long v22 = v25;
          v22 -= 2;
          v23 -= 32;
          v24 -= 4;
        }
        while (v24);
        if (v20 != (v20 & 0x3FFFFFFFFFFFFFFCLL)) {
          goto LABEL_20;
        }
LABEL_21:
        uint64_t v5 = __p;
        std::string __p = v16;
        uint64_t v45 = &v15[8 * v14];
        if (v5) {
          goto LABEL_25;
        }
LABEL_6:
        v7 += 48;
        uint64_t v5 = (char *)v8;
      }
      v4 += 128;
      if (v4 == v41) {
        goto LABEL_37;
      }
    }
  }
  uint64_t v5 = 0;
LABEL_37:
  uint64_t v26 = sub_656AC();
  sub_76DEC("en_US", 5, (uint64_t)v52);
  uint64_t v27 = sub_1133038((uint64_t)v52, 0);
  v49[0] = a3;
  v49[1] = a3 + 4;
  int v50 = 4;
  uint64_t v51 = 1;
  v46[0] = __p;
  v46[1] = v5;
  int v47 = 2;
  uint64_t v48 = (v5 - __p) >> 3;
  int v28 = (*(uint64_t (**)(uint64_t, void *, void *))(*(void *)v26 + 40))(v26, v49, v46);
  if ((v28 & 0x80000000) == 0 && v28 < (int)((unint64_t)(v5 - __p) >> 3)) {
    uint64_t v27 = *(void *)&__p[8 * v28];
  }
  a4->i64[0] = 0;
  a4->i64[1] = 0;
  a4[1].i64[0] = 0;
  uint64_t v30 = *a2;
  uint64_t v29 = a2[1];
  if (*a2 == v29) {
    goto LABEL_63;
  }
  do
  {
    while (1)
    {
      sub_6F77B4(a1, v30, a3, v27, (uint64_t)v52);
      if (sub_6F2FD8((uint64_t)v52))
      {
        unint64_t v31 = a4->u64[1];
        if (v31 >= a4[1].i64[0])
        {
          uint64_t v32 = sub_5B09D8(a4, (long long *)v52);
        }
        else
        {
          sub_4AA8E0((char *)a4->i64[1], (long long *)v52);
          uint64_t v32 = v31 + 152;
          a4->i64[1] = v31 + 152;
        }
        a4->i64[1] = v32;
      }
      if (v61 < 0) {
        break;
      }
      if ((v59 & 0x80000000) == 0) {
        goto LABEL_51;
      }
LABEL_55:
      operator delete(v58);
      if (v57 < 0) {
        goto LABEL_56;
      }
LABEL_52:
      if ((v55 & 0x80000000) == 0) {
        goto LABEL_57;
      }
LABEL_42:
      operator delete(v54);
      if (v53 < 0) {
        goto LABEL_58;
      }
LABEL_43:
      v30 += 128;
      if (v30 == v29) {
        goto LABEL_59;
      }
    }
    operator delete(v60);
    if (v59 < 0) {
      goto LABEL_55;
    }
LABEL_51:
    if ((v57 & 0x80000000) == 0) {
      goto LABEL_52;
    }
LABEL_56:
    operator delete(v56);
    if (v55 < 0) {
      goto LABEL_42;
    }
LABEL_57:
    if ((v53 & 0x80000000) == 0) {
      goto LABEL_43;
    }
LABEL_58:
    operator delete(v52[0]);
    v30 += 128;
  }
  while (v30 != v29);
LABEL_59:
  if (a4->i64[0] == a4->i64[1])
  {
LABEL_63:
    uint64_t v34 = *a2;
    uint64_t v33 = a2[1];
    while (1)
    {
      if (v34 == v33) {
        goto LABEL_60;
      }
      if (*(void *)v34 != *(void *)(v34 + 8)) {
        break;
      }
LABEL_65:
      v34 += 128;
    }
    uint64_t v35 = sub_76580(*(unsigned __int8 **)v34);
    sub_6F77B4(a1, v34, a3, v35, (uint64_t)v52);
    if (sub_6F2FD8((uint64_t)v52))
    {
      unint64_t v36 = a4->u64[1];
      if (v36 >= a4[1].i64[0])
      {
        uint64_t v37 = sub_5B09D8(a4, (long long *)v52);
        uint64_t v38 = a4;
      }
      else
      {
        sub_4AA8E0((char *)a4->i64[1], (long long *)v52);
        uint64_t v37 = v36 + 152;
        uint64_t v38 = a4;
        a4->i64[1] = v36 + 152;
      }
      v38->i64[1] = v37;
    }
    if (v61 < 0)
    {
      operator delete(v60);
      if ((v59 & 0x80000000) == 0)
      {
LABEL_75:
        if ((v57 & 0x80000000) == 0) {
          goto LABEL_76;
        }
        goto LABEL_80;
      }
    }
    else if ((v59 & 0x80000000) == 0)
    {
      goto LABEL_75;
    }
    operator delete(v58);
    if ((v57 & 0x80000000) == 0)
    {
LABEL_76:
      if (v55 < 0)
      {
LABEL_64:
        operator delete(v54);
        if ((v53 & 0x80000000) == 0) {
          goto LABEL_65;
        }
LABEL_82:
        operator delete(v52[0]);
        goto LABEL_65;
      }
LABEL_81:
      if ((v53 & 0x80000000) == 0) {
        goto LABEL_65;
      }
      goto LABEL_82;
    }
LABEL_80:
    operator delete(v56);
    if (v55 < 0) {
      goto LABEL_64;
    }
    goto LABEL_81;
  }
LABEL_60:
  if (__p) {
    operator delete(__p);
  }
}

void sub_6F7748(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_6F77B4(unsigned __int16 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v43 = a4;
  uint64_t v9 = *(std::string **)a2;
  uint64_t v10 = *(std::string **)(a2 + 8);
  if (*(std::string **)a2 != v10)
  {
    while (1)
    {
      uint64_t v39 = sub_76580((unsigned __int8 *)v9);
      __str.__r_.__value_.__r.__words[0] = sub_1133030(&v39);
      __p[0] = (void *)sub_1133030(&v43);
      if (sub_1132FD0((uint64_t)&__str, (uint64_t)__p) || sub_76648((unsigned __int8 *)v9)) {
        break;
      }
      v9 += 2;
      if (v9 == v10)
      {
        uint64_t v9 = v10;
        break;
      }
    }
  }
  uint64_t v11 = *(std::string **)(a2 + 8);
  sub_6F30A4(a5);
  if (v9 != v11)
  {
    std::string::operator=((std::string *)a5, v9 + 1);
    *(void *)(a5 + 24) = sub_76580((unsigned __int8 *)v9);
    unint64_t v12 = *(unsigned __int8 **)(a2 + 24);
    uint64_t v13 = *(unsigned __int8 **)(a2 + 32);
    if (v12 != v13)
    {
      while (1)
      {
        uint64_t v39 = sub_76580(v12);
        __str.__r_.__value_.__r.__words[0] = sub_1133030(&v39);
        __p[0] = (void *)sub_1133030(&v43);
        if (sub_1132FD0((uint64_t)&__str, (uint64_t)__p) || sub_76648(v12)) {
          break;
        }
        v12 += 48;
        if (v12 == v13)
        {
          unint64_t v12 = v13;
          break;
        }
      }
    }
    if (v12 == *(unsigned __int8 **)(a2 + 32)) {
      unint64_t v14 = (const std::string *)a5;
    }
    else {
      unint64_t v14 = (const std::string *)(v12 + 24);
    }
    std::string::operator=((std::string *)(a5 + 128), v14);
    if (*(unsigned char *)(a2 + 49))
    {
      if (*(unsigned char *)(a2 + 49) == 3) {
        goto LABEL_25;
      }
      int v15 = *(unsigned __int8 *)(a2 + 48);
      if (v15 == 5 || v15 == 8) {
        int v17 = 2;
      }
      else {
        int v17 = 3;
      }
    }
    else
    {
      int v17 = 1;
    }
    *(_DWORD *)(a5 + 120) = v17;
LABEL_25:
    uint64_t v19 = *(void *)(a2 + 56);
    uint64_t v18 = *(void *)(a2 + 64);
    if (v19 == v18)
    {
LABEL_58:
      sub_6F6764((uint64_t)a1, (uint64_t *)(a2 + 80), (long long *)(a5 + 128), a3, (uint64_t)&__str);
      int v28 = (void **)(a5 + 32);
      if (*(char *)(a5 + 55) < 0) {
        operator delete(*v28);
      }
      *(_OWORD *)int v28 = *(_OWORD *)&__str.__r_.__value_.__l.__data_;
      uint64_t v29 = v36;
      *(void *)(a5 + 48) = *((void *)&__str.__r_.__value_.__l + 2);
      *(void *)(a5 + 56) = v29;
      memset(&__str, 0, sizeof(__str));
      sub_6F6DF8(a1, a5, (uint64_t *)&__str, a3);
      std::string::size_type v30 = __str.__r_.__value_.__r.__words[0];
      if (__str.__r_.__value_.__r.__words[0])
      {
        std::string::size_type size = __str.__r_.__value_.__l.__size_;
        uint64_t v32 = (void *)__str.__r_.__value_.__r.__words[0];
        if (__str.__r_.__value_.__l.__size_ != __str.__r_.__value_.__r.__words[0])
        {
          do
            std::string::size_type size = sub_2DF404(size - 144);
          while (size != v30);
          uint64_t v32 = (void *)__str.__r_.__value_.__r.__words[0];
        }
        __str.__r_.__value_.__l.__size_ = v30;
        operator delete(v32);
      }
      return;
    }
    uint64_t v20 = *(void *)(a2 + 56);
    while (!*(unsigned char *)(v20 + 32))
    {
      v20 += 40;
      if (v20 == v18) {
        goto LABEL_34;
      }
    }
    if (v20 == v18)
    {
LABEL_34:
      LODWORD(v39) = *(_DWORD *)v19;
      if (*(char *)(v19 + 31) < 0)
      {
        sub_4200(&v40, *(void **)(v19 + 8), *(void *)(v19 + 16));
      }
      else
      {
        long long v22 = *(_OWORD *)(v19 + 8);
        uint64_t v41 = *(void *)(v19 + 24);
        long long v40 = v22;
      }
      goto LABEL_38;
    }
    LODWORD(v39) = *(_DWORD *)v20;
    if (*(char *)(v20 + 31) < 0)
    {
      sub_4200(&v40, *(void **)(v20 + 8), *(void *)(v20 + 16));
    }
    else
    {
      long long v21 = *(_OWORD *)(v20 + 8);
      uint64_t v41 = *(void *)(v20 + 24);
      long long v40 = v21;
    }
    uint64_t v19 = v20;
LABEL_38:
    char v42 = *(unsigned char *)(v19 + 32);
    char v34 = 0;
    LOBYTE(__p[0]) = 0;
    sub_6F27C4((uint64_t)&__str, v39, &v40, (long long *)__p);
    *(_DWORD *)(a5 + 64) = __str.__r_.__value_.__l.__data_;
    long long v23 = (void **)(a5 + 72);
    if (*(char *)(a5 + 95) < 0) {
      operator delete(*v23);
    }
    *(_OWORD *)long long v23 = *(_OWORD *)&__str.__r_.__value_.__r.__words[1];
    *(void *)(a5 + 88) = v36;
    HIBYTE(v36) = 0;
    __str.__r_.__value_.__s.__data_[8] = 0;
    uint64_t v24 = (void **)(a5 + 96);
    if ((*(char *)(a5 + 119) & 0x80000000) == 0)
    {
      *(_OWORD *)uint64_t v24 = v37;
      *(void *)(a5 + 112) = v38;
      HIBYTE(v38) = 0;
      LOBYTE(v37) = 0;
      if (v34 < 0) {
        goto LABEL_42;
      }
LABEL_46:
      uint64_t v25 = *(void *)(a2 + 104);
      uint64_t v26 = *(void *)(a2 + 112);
      if (v25 != v26) {
        goto LABEL_47;
      }
      goto LABEL_51;
    }
    operator delete(*v24);
    int v27 = SHIBYTE(v36);
    *(_OWORD *)uint64_t v24 = v37;
    *(void *)(a5 + 112) = v38;
    HIBYTE(v38) = 0;
    LOBYTE(v37) = 0;
    if (v27 < 0)
    {
      operator delete((void *)__str.__r_.__value_.__l.__size_);
      if ((v34 & 0x80000000) == 0) {
        goto LABEL_46;
      }
    }
    else if ((v34 & 0x80000000) == 0)
    {
      goto LABEL_46;
    }
LABEL_42:
    operator delete(__p[0]);
    uint64_t v25 = *(void *)(a2 + 104);
    uint64_t v26 = *(void *)(a2 + 112);
    if (v25 != v26)
    {
LABEL_47:
      while (1)
      {
        __p[0] = (void *)sub_76580((unsigned __int8 *)v25);
        __str.__r_.__value_.__r.__words[0] = sub_1133030((uint64_t *)__p);
        uint64_t v44 = sub_1133030(&v43);
        if (sub_1132FD0((uint64_t)&__str, (uint64_t)&v44) || sub_76648((unsigned __int8 *)v25)) {
          break;
        }
        v25 += 48;
        if (v25 == v26)
        {
          uint64_t v25 = v26;
          break;
        }
      }
    }
LABEL_51:
    if (v25 == *(void *)(a2 + 112))
    {
      *((unsigned char *)&__str.__r_.__value_.__s + 23) = 0;
      __str.__r_.__value_.__s.__data_[0] = 0;
    }
    else if (*(char *)(v25 + 47) < 0)
    {
      sub_4200(&__str, *(void **)(v25 + 24), *(void *)(v25 + 32));
    }
    else
    {
      std::string __str = *(std::string *)(v25 + 24);
    }
    std::string::operator=((std::string *)(a5 + 96), &__str);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__str.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v41) & 0x80000000) == 0) {
        goto LABEL_58;
      }
    }
    else if ((SHIBYTE(v41) & 0x80000000) == 0)
    {
      goto LABEL_58;
    }
    operator delete((void *)v40);
    goto LABEL_58;
  }
}

void sub_6F7C38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0)
  {
    operator delete(__p);
    sub_4A50F4(v32);
    _Unwind_Resume(a1);
  }
  sub_4A50F4(v32);
  _Unwind_Resume(a1);
}

void sub_6F7D20(uint64_t *a1, char *a2)
{
  int v3 = *((char *)a1 + 23);
  if (v3 < 0)
  {
    if (a1[1] != 3) {
      return;
    }
    a1 = (uint64_t *)*a1;
  }
  else if (v3 != 3)
  {
    return;
  }
  BOOL v4 = *(_WORD *)a1 == 20554 && *((unsigned char *)a1 + 2) == 78;
  if (v4 && sub_6F2880((uint64_t)(a2 + 64)))
  {
    uint64_t v5 = a2[23];
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = (unsigned __int8 *)a2;
    }
    else {
      uint64_t v6 = *(unsigned __int8 **)a2;
    }
    if ((v5 & 0x80u) != 0) {
      uint64_t v5 = *((void *)a2 + 1);
    }
    if (v5)
    {
      while (((char)*v6 & 0x80000000) == 0 && (_DefaultRuneLocale.__runetype[*v6] & 0x400) != 0)
      {
        ++v6;
        if (!--v5) {
          goto LABEL_21;
        }
      }
      return;
    }
LABEL_21:
    memset(&v49, 0, sizeof(v49));
    memset(&v48, 0, sizeof(v48));
    memset(&v47, 0, sizeof(v47));
    memset(&v46, 0, sizeof(v46));
    int v7 = *((_DWORD *)a2 + 16);
    if (v7 == 100000)
    {
      std::string::assign(&v49, "都道府県道");
      uint64_t v8 = "トドウフケンドウ";
    }
    else
    {
      if (v7 != 100006)
      {
LABEL_26:
        if (a2[23] < 0)
        {
          sub_4200(v44, *(void **)a2, *((void *)a2 + 1));
        }
        else
        {
          *(_OWORD *)uint64_t v44 = *(_OWORD *)a2;
          uint64_t v45 = *((void *)a2 + 2);
        }
        int v9 = SHIBYTE(v49.__r_.__value_.__r.__words[2]);
        if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          size_t size = HIBYTE(v49.__r_.__value_.__r.__words[2]);
        }
        else {
          size_t size = v49.__r_.__value_.__l.__size_;
        }
        if (size) {
          goto LABEL_36;
        }
        std::string::size_type v11 = HIBYTE(v48.__r_.__value_.__r.__words[2]);
        if ((v48.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::string::size_type v11 = v48.__r_.__value_.__l.__size_;
        }
        if (v11)
        {
LABEL_36:
          int v12 = SHIBYTE(v45);
          if (v45 >= 0) {
            size_t v13 = HIBYTE(v45);
          }
          else {
            size_t v13 = (size_t)v44[1];
          }
          unint64_t v14 = v13 + size;
          if (v13 + size > 0x7FFFFFFFFFFFFFF7) {
            sub_188D690();
          }
          if (v14 > 0x16)
          {
            uint64_t v16 = (v14 & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((v14 | 7) != 0x17) {
              uint64_t v16 = v14 | 7;
            }
            uint64_t v17 = v16 + 1;
            p_dst = (std::string *)operator new(v16 + 1);
            __dst.__r_.__value_.__l.__size_ = v13 + size;
            __dst.__r_.__value_.__r.__words[2] = v17 | 0x8000000000000000;
            __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
          }
          else
          {
            memset(&__dst, 0, sizeof(__dst));
            p_dst = &__dst;
            *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v13 + size;
          }
          if (size)
          {
            if (v9 >= 0) {
              uint64_t v18 = &v49;
            }
            else {
              uint64_t v18 = (std::string *)v49.__r_.__value_.__r.__words[0];
            }
            memmove(p_dst, v18, size);
          }
          uint64_t v19 = (char *)p_dst + size;
          if (v13)
          {
            if (v12 >= 0) {
              uint64_t v20 = v44;
            }
            else {
              uint64_t v20 = (void **)v44[0];
            }
            memmove(v19, v20, v13);
          }
          v19[v13] = 0;
          if ((v48.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            long long v21 = &v48;
          }
          else {
            long long v21 = (std::string *)v48.__r_.__value_.__r.__words[0];
          }
          if ((v48.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::string::size_type v22 = HIBYTE(v48.__r_.__value_.__r.__words[2]);
          }
          else {
            std::string::size_type v22 = v48.__r_.__value_.__l.__size_;
          }
          long long v23 = std::string::append(&__dst, (const std::string::value_type *)v21, v22);
          long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
          __p.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
          *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v24;
          v23->__r_.__value_.__l.__size_ = 0;
          v23->__r_.__value_.__r.__words[2] = 0;
          v23->__r_.__value_.__r.__words[0] = 0;
          if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__dst.__r_.__value_.__l.__data_);
          }
          std::string::operator=((std::string *)a2, &__p);
          sub_76DEC("ja_JP", 5, (uint64_t)&__dst);
          *((void *)a2 + 3) = sub_1133038((uint64_t)&__dst, 0);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
        }
        int v25 = SHIBYTE(v47.__r_.__value_.__r.__words[2]);
        if ((v47.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          size_t v26 = HIBYTE(v47.__r_.__value_.__r.__words[2]);
        }
        else {
          size_t v26 = v47.__r_.__value_.__l.__size_;
        }
        if (v26) {
          goto LABEL_72;
        }
        std::string::size_type v27 = HIBYTE(v46.__r_.__value_.__r.__words[2]);
        if ((v46.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::string::size_type v27 = v46.__r_.__value_.__l.__size_;
        }
        if (v27)
        {
LABEL_72:
          int v28 = SHIBYTE(v45);
          if (v45 >= 0) {
            size_t v29 = HIBYTE(v45);
          }
          else {
            size_t v29 = (size_t)v44[1];
          }
          unint64_t v30 = v29 + v26;
          if (v29 + v26 > 0x7FFFFFFFFFFFFFF7) {
            sub_188D690();
          }
          if (v30 > 0x16)
          {
            uint64_t v32 = (v30 & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((v30 | 7) != 0x17) {
              uint64_t v32 = v30 | 7;
            }
            uint64_t v33 = v32 + 1;
            unint64_t v31 = (std::string *)operator new(v32 + 1);
            __dst.__r_.__value_.__l.__size_ = v29 + v26;
            __dst.__r_.__value_.__r.__words[2] = v33 | 0x8000000000000000;
            __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v31;
          }
          else
          {
            memset(&__dst, 0, sizeof(__dst));
            unint64_t v31 = &__dst;
            *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v29 + v26;
          }
          if (v26)
          {
            if (v25 >= 0) {
              char v34 = &v47;
            }
            else {
              char v34 = (std::string *)v47.__r_.__value_.__r.__words[0];
            }
            memmove(v31, v34, v26);
          }
          uint64_t v35 = (char *)v31 + v26;
          if (v29)
          {
            if (v28 >= 0) {
              uint64_t v36 = v44;
            }
            else {
              uint64_t v36 = (void **)v44[0];
            }
            memmove(v35, v36, v29);
          }
          v35[v29] = 0;
          if ((v46.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            long long v37 = &v46;
          }
          else {
            long long v37 = (std::string *)v46.__r_.__value_.__r.__words[0];
          }
          if ((v46.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::string::size_type v38 = HIBYTE(v46.__r_.__value_.__r.__words[2]);
          }
          else {
            std::string::size_type v38 = v46.__r_.__value_.__l.__size_;
          }
          uint64_t v39 = std::string::append(&__dst, (const std::string::value_type *)v37, v38);
          long long v40 = *(_OWORD *)&v39->__r_.__value_.__l.__data_;
          __p.__r_.__value_.__r.__words[2] = v39->__r_.__value_.__r.__words[2];
          *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v40;
          v39->__r_.__value_.__l.__size_ = 0;
          v39->__r_.__value_.__r.__words[2] = 0;
          v39->__r_.__value_.__r.__words[0] = 0;
          if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__dst.__r_.__value_.__l.__data_);
          }
          sub_6F2F50((uint64_t)&__dst, (long long *)&__p, 20, 1);
          uint64_t v41 = (void **)(a2 + 32);
          if (a2[55] < 0) {
            operator delete(*v41);
          }
          *(_OWORD *)uint64_t v41 = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
          uint64_t v42 = v51;
          *((void *)a2 + 6) = *((void *)&__dst.__r_.__value_.__l + 2);
          *((void *)a2 + 7) = v42;
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
        }
        if (SHIBYTE(v45) < 0)
        {
          operator delete(v44[0]);
          if ((SHIBYTE(v46.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_105:
            if ((SHIBYTE(v47.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
              goto LABEL_106;
            }
            goto LABEL_111;
          }
        }
        else if ((SHIBYTE(v46.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
          goto LABEL_105;
        }
        operator delete(v46.__r_.__value_.__l.__data_);
        if ((SHIBYTE(v47.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_106:
          if ((SHIBYTE(v48.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
            goto LABEL_107;
          }
          goto LABEL_112;
        }
LABEL_111:
        operator delete(v47.__r_.__value_.__l.__data_);
        if ((SHIBYTE(v48.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_107:
          if ((SHIBYTE(v49.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
            return;
          }
          goto LABEL_113;
        }
LABEL_112:
        operator delete(v48.__r_.__value_.__l.__data_);
        if ((SHIBYTE(v49.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          return;
        }
LABEL_113:
        operator delete(v49.__r_.__value_.__l.__data_);
        return;
      }
      std::string::assign(&v49, "国道");
      uint64_t v8 = "コクドウ";
    }
    std::string::assign(&v47, v8);
    std::string::assign(&v48, "号線");
    std::string::assign(&v46, "ゴウセン");
    goto LABEL_26;
  }
}

void sub_6F8284(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45)
{
  if (a27 < 0)
  {
    operator delete(__p);
    if ((a33 & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else if ((a33 & 0x80000000) == 0)
  {
LABEL_3:
    if (a39 < 0) {
      goto LABEL_4;
    }
    goto LABEL_8;
  }
  operator delete(a28);
  if (a39 < 0)
  {
LABEL_4:
    operator delete(a34);
    if ((a45 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_9;
  }
LABEL_8:
  if ((a45 & 0x80000000) == 0) {
LABEL_5:
  }
    _Unwind_Resume(a1);
LABEL_9:
  operator delete(a40);
  _Unwind_Resume(a1);
}

void sub_6F8348(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  int v8 = *(char *)(a1 + 23);
  if (v8 < 0)
  {
    if (*(void *)(a1 + 8) != 3) {
      return;
    }
    int v9 = *(unsigned __int16 **)a1;
  }
  else
  {
    int v9 = (unsigned __int16 *)a1;
    if (v8 != 3) {
      return;
    }
  }
  int v10 = *v9;
  int v11 = *((unsigned __int8 *)v9 + 2);
  if (v10 == 16967 && v11 == 82)
  {
    size_t v13 = (_DWORD *)(a2 + 64);
    if (sub_6F2880(a2 + 64))
    {
      if (*(char *)(a2 + 95) < 0)
      {
        sub_4200(__p, *(void **)(a2 + 72), *(void *)(a2 + 80));
        unsigned int v14 = *v13 - 2600;
        if (v14 > 0xA) {
          goto LABEL_46;
        }
      }
      else
      {
        *(_OWORD *)std::string __p = *(_OWORD *)(a2 + 72);
        uint64_t v33 = *(void *)(a2 + 88);
        unsigned int v14 = *v13 - 2600;
        if (v14 > 0xA) {
          goto LABEL_46;
        }
      }
      if (((1 << v14) & 0x421) != 0)
      {
        uint64_t v15 = *a3;
        uint64_t v16 = a3[1];
        if (*a3 != v16)
        {
          if (v33 >= 0) {
            uint64_t v17 = (void *)HIBYTE(v33);
          }
          else {
            uint64_t v17 = __p[1];
          }
          if (v33 >= 0) {
            uint64_t v18 = __p;
          }
          else {
            uint64_t v18 = (void **)__p[0];
          }
          do
          {
            if (*(void *)(v15 + 64) == *(void *)(v15 + 72)) {
              goto LABEL_25;
            }
            uint64_t v20 = *(unsigned __int8 *)(v15 + 31);
            long long v21 = (v20 & 0x80u) == 0 ? (void *)*(unsigned __int8 *)(v15 + 31) : *(void **)(v15 + 16);
            if (v21 != v17) {
              goto LABEL_25;
            }
            std::string::size_type v22 = (const void **)(v15 + 8);
            if ((v20 & 0x80) != 0)
            {
              uint64_t v19 = (unsigned __int8 *)*v22;
              if (memcmp(*v22, v18, *(void *)(v15 + 16))) {
                goto LABEL_25;
              }
              int v24 = *v19;
              if (v24 == 65) {
                goto LABEL_40;
              }
            }
            else
            {
              if (*(unsigned char *)(v15 + 31))
              {
                uint64_t v23 = 0;
                while (*(unsigned __int8 *)(v15 + v23 + 8) == *((unsigned __int8 *)v18 + v23))
                {
                  if (v20 == ++v23) {
                    goto LABEL_36;
                  }
                }
                goto LABEL_25;
              }
LABEL_36:
              int v24 = *(unsigned __int8 *)v22;
              if (v24 == 65) {
                goto LABEL_40;
              }
            }
            if (v24 == 77)
            {
LABEL_40:
              sub_6F6764(a1, (uint64_t *)(v15 + 64), (long long *)(v15 + 88), a4, (uint64_t)&v29);
              int v25 = (void **)(a2 + 32);
              if (*(char *)(a2 + 55) < 0) {
                operator delete(*v25);
              }
              *(_OWORD *)int v25 = v29;
              uint64_t v26 = v31;
              *(void *)(a2 + 48) = v30;
              *(void *)(a2 + 56) = v26;
              if (!sub_6F2FD8(a2 + 32))
              {
                int v27 = sub_1132F18((uint64_t *)(v15 + 56));
                sub_6F2F50((uint64_t)&v29, (long long *)(v15 + 8), v27, 1);
                if (*(char *)(a2 + 55) < 0) {
                  operator delete(*v25);
                }
                *(_OWORD *)int v25 = v29;
                uint64_t v28 = v31;
                *(void *)(a2 + 48) = v30;
                *(void *)(a2 + 56) = v28;
              }
              break;
            }
LABEL_25:
            v15 += 144;
          }
          while (v15 != v16);
        }
      }
LABEL_46:
      if (SHIBYTE(v33) < 0) {
        operator delete(__p[0]);
      }
    }
  }
}

void sub_6F85B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_6F85DC(const std::string **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *((unsigned char *)&v17.__r_.__value_.__s + 23) = 0;
  v17.__r_.__value_.__s.__data_[0] = 0;
  if (*a1 == a1[1])
  {
    *(std::string *)a3 = v17;
  }
  else
  {
    std::string::operator=(&v17, *a1 + 1);
    sub_6F87D4((long long **)a1, (uint64_t **)&__p);
    int v12 = 50331648;
    uint64_t v13 = 0;
    uint64_t v14 = -4294967282;
    uint64_t v6 = sub_656AC();
    v21[0] = a2;
    v21[1] = a2 + 4;
    int v22 = 4;
    uint64_t v23 = 1;
    v18[0] = __p;
    v18[1] = v16;
    int v19 = 2;
    uint64_t v20 = (v16 - (unsigned char *)__p) >> 3;
    unint64_t v7 = (*(uint64_t (**)(uint64_t, void *, void *, int *))(*(void *)v6 + 48))(v6, v21, v18, &v12);
    if (v7 >> 31)
    {
      *(std::string *)a3 = v17;
      memset(&v17, 0, sizeof(v17));
    }
    else
    {
      if ((int)v7 >= (int)(-1431655765 * ((unint64_t)((char *)a1[1] - (char *)*a1) >> 4))) {
        unint64_t v8 = 0;
      }
      else {
        unint64_t v8 = v7;
      }
      uint64_t v9 = (uint64_t)&(*a1)[2 * v8];
      int v10 = (void **)(v9 + 24);
      if (*(char *)(v9 + 47) < 0)
      {
        sub_4200((unsigned char *)a3, *v10, *(void *)(v9 + 32));
      }
      else
      {
        long long v11 = *(_OWORD *)v10;
        *(void *)(a3 + 16) = *(void *)(v9 + 40);
        *(_OWORD *)a3 = v11;
      }
    }
    if (__p)
    {
      uint64_t v16 = __p;
      operator delete(__p);
    }
    if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v17.__r_.__value_.__l.__data_);
    }
  }
}

void sub_6F8780(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (__p)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void sub_6F87D4(long long **a1@<X0>, uint64_t **a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  BOOL v4 = *a1;
  int v3 = a1[1];
  if (v3 != *a1)
  {
    unint64_t v5 = 0xAAAAAAAAAAAAAAABLL * (v3 - *a1);
    if (v5 >> 61) {
      sub_2E00();
    }
    uint64_t v6 = (uint64_t *)operator new(0x5555555555555558 * (v3 - *a1));
    *a2 = v6;
    a2[1] = v6;
    a2[2] = &v6[v5];
    while (1)
    {
      if (*((char *)v4 + 23) < 0)
      {
        sub_4200(__p, *(void **)v4, *((void *)v4 + 1));
      }
      else
      {
        long long v7 = *v4;
        uint64_t v36 = *((void *)v4 + 2);
        *(_OWORD *)std::string __p = v7;
      }
      unint64_t v8 = HIBYTE(v36);
      if (v36 >= 0) {
        uint64_t v9 = (unsigned __int8 *)__p;
      }
      else {
        uint64_t v9 = (unsigned __int8 *)__p[0];
      }
      if (v36 < 0) {
        unint64_t v8 = (unint64_t)__p[1];
      }
      if (v8 >= 0x1F) {
        uint64_t v10 = 31;
      }
      else {
        uint64_t v10 = v8;
      }
      if (!v10)
      {
        long long v38 = 0u;
        long long v39 = 0u;
        long long v37 = 0u;
        goto LABEL_26;
      }
      if (v10 == 1) {
        break;
      }
      if (v10 == 2)
      {
        int v12 = __p;
        if (v36 < 0) {
          int v12 = (void **)__p[0];
        }
        *(void *)&long long v37 = *v9 | ((unint64_t)*((unsigned __int8 *)v12 + 1) << 8);
        uint64_t v11 = 2;
        goto LABEL_24;
      }
      sub_76DEC(v9, v10, (uint64_t)&v37);
LABEL_26:
      uint64_t v13 = sub_1133038((uint64_t)&v37, 0);
      uint64_t v14 = v13;
      uint64_t v16 = a2[1];
      unint64_t v15 = (unint64_t)a2[2];
      if ((unint64_t)v16 >= v15)
      {
        uint64_t v18 = *a2;
        uint64_t v19 = (char *)v16 - (char *)*a2;
        uint64_t v20 = v19 >> 3;
        unint64_t v21 = (v19 >> 3) + 1;
        if (v21 >> 61) {
          sub_2E00();
        }
        uint64_t v22 = v15 - (void)v18;
        if (v22 >> 2 > v21) {
          unint64_t v21 = v22 >> 2;
        }
        if ((unint64_t)v22 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v23 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v23 = v21;
        }
        if (v23)
        {
          if (v23 >> 61) {
            sub_188D718();
          }
          int v24 = operator new(8 * v23);
          int v25 = (uint64_t *)&v24[8 * v20];
          *int v25 = v14;
          uint64_t v17 = (uint64_t)(v25 + 1);
          if (v16 != v18)
          {
LABEL_42:
            unint64_t v26 = (char *)(v16 - 1) - (char *)v18;
            if (v26 < 0x58) {
              goto LABEL_56;
            }
            if ((unint64_t)((char *)v16 - &v24[v19]) < 0x20) {
              goto LABEL_56;
            }
            uint64_t v27 = (v26 >> 3) + 1;
            uint64_t v28 = 8 * (v27 & 0x3FFFFFFFFFFFFFFCLL);
            long long v29 = &v16[v28 / 0xFFFFFFFFFFFFFFF8];
            int v25 = (uint64_t *)((char *)v25 - v28);
            uint64_t v30 = &v24[8 * v20 - 16];
            uint64_t v31 = v16 - 2;
            uint64_t v32 = v27 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              long long v33 = *(_OWORD *)v31;
              *(v30 - 1) = *((_OWORD *)v31 - 1);
              _OWORD *v30 = v33;
              v30 -= 2;
              v31 -= 4;
              v32 -= 4;
            }
            while (v32);
            uint64_t v16 = v29;
            if (v27 != (v27 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_56:
              do
              {
                uint64_t v34 = *--v16;
                *--int v25 = v34;
              }
              while (v16 != v18);
            }
            uint64_t v16 = *a2;
            *a2 = v25;
            a2[1] = (uint64_t *)v17;
            a2[2] = (uint64_t *)&v24[8 * v23];
            if (!v16) {
              goto LABEL_39;
            }
LABEL_38:
            operator delete(v16);
            goto LABEL_39;
          }
        }
        else
        {
          int v24 = 0;
          int v25 = (uint64_t *)(8 * v20);
          *(void *)(8 * v20) = v14;
          uint64_t v17 = 8 * v20 + 8;
          if (v16 != v18) {
            goto LABEL_42;
          }
        }
        *a2 = v25;
        a2[1] = (uint64_t *)v17;
        a2[2] = (uint64_t *)&v24[8 * v23];
        if (v16) {
          goto LABEL_38;
        }
      }
      else
      {
        *uint64_t v16 = v13;
        uint64_t v17 = (uint64_t)(v16 + 1);
      }
LABEL_39:
      a2[1] = (uint64_t *)v17;
      if (SHIBYTE(v36) < 0) {
        operator delete(__p[0]);
      }
      v4 += 3;
      if (v4 == v3) {
        return;
      }
    }
    *(void *)&long long v37 = *v9;
    uint64_t v11 = 1;
LABEL_24:
    *((void *)&v37 + 1) = v11;
    long long v38 = 0u;
    long long v39 = 0u;
    goto LABEL_26;
  }
}

void sub_6F8AEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  uint64_t v18 = *(void **)v16;
  if (!*(void *)v16) {
    _Unwind_Resume(exception_object);
  }
  *(void *)(v16 + 8) = v18;
  operator delete(v18);
  _Unwind_Resume(exception_object);
}

void sub_6F8B4C(char *a1@<X1>, uint64_t a2@<X2>, int64x2_t *a3@<X8>)
{
  sub_6F3348(a3);
  if (*(void *)a1 != *((void *)a1 + 1))
  {
    sub_6FB7FC(a1, (unint64_t *)&__p);
    int v10 = 50331648;
    uint64_t v11 = 0;
    uint64_t v12 = -4294967282;
    uint64_t v6 = sub_65800();
    v18[0] = a2 + 32;
    v18[1] = a2 + 36;
    int v19 = 4;
    uint64_t v20 = 1;
    v15[0] = __p;
    v15[1] = v14;
    int v16 = 2;
    uint64_t v17 = (v14 - (unsigned char *)__p) >> 3;
    unint64_t v7 = (*(uint64_t (**)(uint64_t, void *, void *, int *))(*(void *)v6 + 48))(v6, v18, v15, &v10);
    if (!(v7 >> 31))
    {
      uint64_t v8 = *(void *)a1;
      if ((int)v7 >= (int)(-1431655765 * ((*((void *)a1 + 1) - *(void *)a1) >> 4))) {
        unint64_t v9 = 0;
      }
      else {
        unint64_t v9 = v7;
      }
      a3[1].i64[1] = sub_76580((unsigned __int8 *)(v8 + 48 * v9));
      std::string::operator=((std::string *)a3, (const std::string *)(v8 + 48 * v9 + 24));
    }
    if (__p)
    {
      uint64_t v14 = __p;
      operator delete(__p);
    }
  }
}

void sub_6F8C88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p)
  {
    operator delete(__p);
    if ((*(char *)(v13 + 23) & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((*(char *)(v13 + 23) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)v13);
  _Unwind_Resume(exception_object);
}

void sub_6F8CDC(uint64_t a1@<X0>, unsigned __int8 **a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v70 = 0;
  __int16 v71 = 0;
  uint64_t v72 = 0;
  unint64_t v9 = *a2;
  int v10 = a2[1];
  if (*a2 != v10)
  {
    uint64_t v11 = *a2;
    do
    {
      if (*v11) {
        BOOL v12 = 1;
      }
      else {
        BOOL v12 = v11[114] == 2;
      }
      char v13 = v12;
      if (!v12) {
        break;
      }
      v11 += 144;
    }
    while (v11 != v10);
    *(void *)std::string __p = &v70;
    if (v13)
    {
      do
      {
        if (*v9 <= 1u)
        {
          char v59 = v9;
          sub_2A98DC((void ***)__p, &v59);
        }
        v9 += 144;
      }
      while (v9 != v10);
      goto LABEL_28;
    }
    do
    {
      int v14 = v9[114];
      if (*v9)
      {
        if (*v9 != 1 || v14 == 2) {
          goto LABEL_18;
        }
      }
      else if (v14 == 2)
      {
        goto LABEL_18;
      }
      char v59 = v9;
      sub_2A98DC((void ***)__p, &v59);
LABEL_18:
      v9 += 144;
    }
    while (v9 != v10);
  }
LABEL_28:
  double v67 = 0;
  uint64_t v68 = 0;
  uint64_t v69 = 0;
  int v16 = v70;
  uint64_t v17 = v71;
  if (v70 == v71) {
    goto LABEL_67;
  }
  int v18 = -1;
  do
  {
    int v19 = *(unsigned char **)v16;
    sub_29603C((void **)&v67, (void *)(*(void *)v16 + 56));
    if (*v19) {
      BOOL v20 = 0;
    }
    else {
      BOOL v20 = v18 == -1;
    }
    if (v20) {
      int v18 = ((unint64_t)(v68 - v67) >> 3) - 1;
    }
    v16 += 8;
  }
  while (v16 != v17);
  if (v67 == v68 || v18 == -1) {
    goto LABEL_67;
  }
  int v63 = 50331648;
  uint64_t v64 = 0;
  int v65 = 14;
  int v66 = v18;
  uint64_t v22 = sub_656AC();
  *(void *)std::string __p = a4;
  *(void *)&__p[8] = a4 + 4;
  *(_DWORD *)&__p[16] = 4;
  uint64_t v56 = 1;
  char v59 = v67;
  *(void *)&long long v60 = v68;
  DWORD2(v60) = 2;
  uint64_t v61 = (v68 - v67) >> 3;
  unint64_t v23 = (*(uint64_t (**)(uint64_t, unsigned char *, unsigned __int8 **, int *))(*(void *)v22 + 48))(v22, __p, &v59, &v63);
  int v24 = v70;
  int v25 = &v70[8 * v18];
  uint64_t v52 = a4;
  uint64_t v51 = a3;
  if (HIDWORD(v23))
  {
    unint64_t v26 = v71;
    if (v70 == v71)
    {
LABEL_67:
      sub_6F30A4(a5);
      goto LABEL_68;
    }
  }
  else
  {
    unint64_t v26 = v71;
    if ((int)v23 >= (int)((unint64_t)(v71 - v70) >> 3)) {
      uint64_t v27 = &v70[8 * v18];
    }
    else {
      uint64_t v27 = &v70[8 * v23];
    }
    if ((v23 & 0x80000000) == 0) {
      int v25 = v27;
    }
    if (v70 == v71) {
      goto LABEL_67;
    }
  }
  uint64_t v28 = (void *)(*(void *)v25 + 56);
  long long v29 = (void **)(a5 + 72);
  uint64_t v30 = (void **)(a5 + 96);
  uint64_t v31 = (void **)(a5 + 32);
  while (1)
  {
    uint64_t v32 = *(void *)v24;
    if (sub_1132FF4(*(void *)v24 + 56, (uint64_t)v28)) {
      goto LABEL_53;
    }
    sub_6F30A4(a5);
    std::string::operator=((std::string *)a5, (const std::string *)(v32 + 8));
    *(void *)(a5 + 24) = *v28;
    if (sub_6F2FD8(a5)) {
      break;
    }
    if (*(char *)(a5 + 151) < 0)
    {
      operator delete(*(void **)(a5 + 128));
      if ((*(char *)(a5 + 119) & 0x80000000) == 0)
      {
LABEL_58:
        if ((*(char *)(a5 + 95) & 0x80000000) == 0) {
          goto LABEL_59;
        }
        goto LABEL_64;
      }
    }
    else if ((*(char *)(a5 + 119) & 0x80000000) == 0)
    {
      goto LABEL_58;
    }
    operator delete(*v30);
    if ((*(char *)(a5 + 95) & 0x80000000) == 0)
    {
LABEL_59:
      if ((*(char *)(a5 + 55) & 0x80000000) == 0) {
        goto LABEL_60;
      }
      goto LABEL_65;
    }
LABEL_64:
    operator delete(*v29);
    if ((*(char *)(a5 + 55) & 0x80000000) == 0)
    {
LABEL_60:
      if (*(char *)(a5 + 23) < 0) {
        goto LABEL_66;
      }
      goto LABEL_53;
    }
LABEL_65:
    operator delete(*v31);
    if (*(char *)(a5 + 23) < 0) {
LABEL_66:
    }
      operator delete(*(void **)a5);
LABEL_53:
    v24 += 8;
    if (v24 == v26) {
      goto LABEL_67;
    }
  }
  if (*(char *)(v32 + 111) < 0) {
    uint64_t v33 = *(void *)(v32 + 96);
  }
  else {
    uint64_t v33 = *(unsigned __int8 *)(v32 + 111);
  }
  if (v33) {
    uint64_t v34 = (const std::string *)(v32 + 88);
  }
  else {
    uint64_t v34 = (const std::string *)(v32 + 8);
  }
  std::string::operator=((std::string *)(a5 + 128), v34);
  uint64_t v36 = *v51;
  uint64_t v35 = v51[1];
  if (*v51 != v35)
  {
    uint64_t v37 = *v51;
    while (!*(unsigned char *)(v37 + 32))
    {
      v37 += 40;
      if (v37 == v35) {
        goto LABEL_87;
      }
    }
    if (v37 == v35)
    {
LABEL_87:
      LODWORD(v59) = *(_DWORD *)v36;
      if ((*(char *)(v36 + 31) & 0x80000000) == 0)
      {
        uint64_t v38 = v36 + 8;
        goto LABEL_89;
      }
      sub_4200(&v60, *(void **)(v36 + 8), *(void *)(v36 + 16));
    }
    else
    {
      LODWORD(v59) = *(_DWORD *)v37;
      if ((*(char *)(v37 + 31) & 0x80000000) == 0)
      {
        uint64_t v38 = v37 + 8;
        uint64_t v36 = v37;
LABEL_89:
        long long v39 = *(_OWORD *)v38;
        uint64_t v61 = *(void *)(v38 + 16);
        long long v60 = v39;
        goto LABEL_92;
      }
      sub_4200(&v60, *(void **)(v37 + 8), *(void *)(v37 + 16));
      uint64_t v36 = v37;
    }
LABEL_92:
    char v62 = *(unsigned char *)(v36 + 32);
    char v54 = 0;
    LOBYTE(v53) = 0;
    sub_6F27C4((uint64_t)__p, (int)v59, &v60, &v53);
    *(_DWORD *)(a5 + 64) = *(_DWORD *)__p;
    if (*(char *)(a5 + 95) < 0) {
      operator delete(*v29);
    }
    *(_OWORD *)long long v29 = *(_OWORD *)&__p[8];
    *(void *)(a5 + 88) = v56;
    HIBYTE(v56) = 0;
    __p[8] = 0;
    if (*(char *)(a5 + 119) < 0)
    {
      operator delete(*v30);
      int v41 = SHIBYTE(v56);
      uint64_t v40 = a5 + 64;
      *(_OWORD *)uint64_t v30 = v57;
      *(void *)(a5 + 112) = v58;
      HIBYTE(v58) = 0;
      LOBYTE(v57) = 0;
      if (v41 < 0) {
        operator delete(*(void **)&__p[8]);
      }
    }
    else
    {
      uint64_t v40 = a5 + 64;
      *(_OWORD *)uint64_t v30 = v57;
      *(void *)(a5 + 112) = v58;
      HIBYTE(v58) = 0;
      LOBYTE(v57) = 0;
    }
    if (v54 < 0) {
      operator delete((void *)v53);
    }
    if (!sub_6F28B0(v40, v32 + 8)) {
      std::string::operator=((std::string *)(a5 + 96), (const std::string *)(v32 + 120));
    }
    if (SHIBYTE(v61) < 0) {
      operator delete((void *)v60);
    }
  }
  sub_6F9404(a1, (uint64_t *)(v32 + 64), (long long *)(v32 + 88), v52, (uint64_t)__p);
  if (*(char *)(a5 + 55) < 0) {
    operator delete(*v31);
  }
  *(_OWORD *)uint64_t v31 = *(_OWORD *)__p;
  uint64_t v42 = v56;
  *(void *)(a5 + 48) = *(void *)&__p[16];
  *(void *)(a5 + 56) = v42;
  uint64_t v43 = a1;
  if (!sub_6F2FD8(a5 + 32))
  {
    sub_6F97A0(a1, (uint64_t *)&v70, v52, (uint64_t)__p);
    if (*(char *)(a5 + 55) < 0) {
      operator delete(*v31);
    }
    *(_OWORD *)uint64_t v31 = *(_OWORD *)__p;
    uint64_t v44 = v56;
    *(void *)(a5 + 48) = *(void *)&__p[16];
    *(void *)(a5 + 56) = v44;
    int v45 = *(unsigned __int8 *)(a1 + 23);
    if (*(char *)(a1 + 23) < 0)
    {
      if (*(void *)(a1 + 8) == 3)
      {
        std::string v46 = *(unsigned __int16 **)a1;
        goto LABEL_114;
      }
    }
    else
    {
      std::string v46 = (unsigned __int16 *)a1;
      if (v45 != 3) {
        goto LABEL_121;
      }
LABEL_114:
      int v47 = *v46;
      int v48 = *((unsigned __int8 *)v46 + 2);
      if (v47 == 20554 && v48 == 78)
      {
        sub_6FA8D0((uint64_t *)a1, (char *)a5);
        uint64_t v43 = a1;
        int v45 = *(unsigned __int8 *)(a1 + 23);
      }
      if ((v45 & 0x80) != 0)
      {
        if (*(void *)(v43 + 8) == 3)
        {
          uint64_t v43 = *(void *)v43;
LABEL_125:
          BOOL v50 = *(_WORD *)v43 == 18499 && *(unsigned char *)(v43 + 2) == 78;
          if (v50 && *(_DWORD *)(v52 + 32) == 5) {
            *(_DWORD *)(a5 + 60) = 0;
          }
        }
      }
      else
      {
LABEL_121:
        if (v45 == 3) {
          goto LABEL_125;
        }
      }
    }
  }
LABEL_68:
  if (v67)
  {
    uint64_t v68 = v67;
    operator delete(v67);
  }
  if (v70)
  {
    __int16 v71 = v70;
    operator delete(v70);
  }
}

void sub_6F9348(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  sub_4A50F4(v35);
  uint64_t v38 = *(void **)(v36 - 136);
  if (v38)
  {
    *(void *)(v36 - 128) = v38;
    operator delete(v38);
    long long v39 = *(void **)(v36 - 112);
    if (!v39) {
LABEL_3:
    }
      _Unwind_Resume(a1);
  }
  else
  {
    long long v39 = *(void **)(v36 - 112);
    if (!v39) {
      goto LABEL_3;
    }
  }
  *(void *)(v36 - 104) = v39;
  operator delete(v39);
  _Unwind_Resume(a1);
}

void sub_6F9404(uint64_t a1@<X0>, uint64_t *a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v30 = 0;
  uint64_t v10 = *a2;
  uint64_t v11 = a2[1];
  if (*a2 == v11) {
    goto LABEL_27;
  }
  do
  {
    if ((sub_6F9A98(a1, a4, v10) & 1) != 0
      && sub_6F9BD4(a1, v10 + 24) == *(_DWORD *)(a4 + 32)
      && (!v30 || *(_DWORD *)(v10 + 52) < v29))
    {
      sub_6FB5F8(&__str, (const std::string *)v10);
    }
    v10 += 56;
  }
  while (v10 != v11);
  if (!v30)
  {
LABEL_27:
    if (*(unsigned char *)(a1 + 24))
    {
      uint64_t v14 = *a2;
      uint64_t v13 = a2[1];
      uint64_t v15 = *a2 + 56;
      if (*a2 != v13 && v15 != v13)
      {
        do
        {
          if (*(_DWORD *)(v15 + 52) < *(_DWORD *)(v14 + 52)) {
            uint64_t v14 = v15;
          }
          v15 += 56;
        }
        while (v15 != v13);
      }
      if (v14 != v13)
      {
        unsigned int v17 = *(_DWORD *)(a4 + 32) - 1;
        if (v17 < 0x2A && ((0x27EFFDFFFBFuLL >> v17) & 1) != 0)
        {
          int v19 = dword_20E8CE0[v17];
          uint64_t v18 = 3;
          char v24 = 3;
          LOWORD(__p[0]) = v19;
          BYTE2(__p[0]) = BYTE2(v19);
        }
        else
        {
          uint64_t v18 = 0;
          char v24 = 0;
        }
        *(unsigned char *)((unint64_t)__p | v18) = 0;
        sub_6F2FC8((void *)a5);
        sub_6FC690(v14, (unsigned __int8 *)(v14 + 24), (unsigned __int8 *)__p, (uint64_t)&v21);
        if (*(char *)(a5 + 23) < 0) {
          operator delete(*(void **)a5);
        }
        *(_OWORD *)a5 = v21;
        *(void *)(a5 + 16) = v22;
        *(_DWORD *)(a5 + 24) = sub_6F4468((unsigned __int8 *)(v14 + 24));
        *(_DWORD *)(a5 + 28) = 2;
        if (v24 < 0) {
          operator delete(__p[0]);
        }
        goto LABEL_38;
      }
    }
LABEL_31:
    sub_6F2F50(a5, a3, 0, 1);
    goto LABEL_38;
  }
  std::string::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = __str.__r_.__value_.__l.__size_;
  }
  if (!size) {
    goto LABEL_31;
  }
  sub_6F2FC8((void *)a5);
  if (!v30
    || (std::string::operator=((std::string *)a5, &__str), !v30)
    || (*(_DWORD *)(a5 + 24) = sub_6F4468((unsigned __int8 *)&v26), !v30))
  {
    exception = __cxa_allocate_exception(8uLL);
    void *exception = &off_2439078;
  }
  if ((unint64_t)v28 > 5) {
    *(_DWORD *)(a5 + 28) = 2;
  }
  else {
    *(_DWORD *)(a5 + 28) = dword_20E8D88[v28];
  }
LABEL_38:
  if (!v30) {
    return;
  }
  if ((v27 & 0x80000000) == 0)
  {
    if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_43:
    operator delete(__str.__r_.__value_.__l.__data_);
    return;
  }
  operator delete(v26);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_43;
  }
}

void sub_6F971C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if (*(char *)(v19 + 23) < 0) {
    operator delete(*(void **)v19);
  }
  if (a18 < 0)
  {
    operator delete(__p);
    sub_6F45D8((uint64_t)&a19);
    _Unwind_Resume(a1);
  }
  sub_6F45D8((uint64_t)&a19);
  _Unwind_Resume(a1);
}

double sub_6F97A0@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v7 = (unsigned __int8 **)*a2;
  uint64_t v8 = (unsigned __int8 **)a2[1];
  if ((unsigned __int8 **)*a2 == v8)
  {
LABEL_13:
    sub_6F2FC8(&__p);
    HIDWORD(v33) = 1;
    uint64_t v15 = (void *)*a2;
    int v16 = (void *)a2[1];
    if ((void *)*a2 == v16)
    {
      uint64_t v19 = *a2;
    }
    else
    {
      while (1)
      {
        uint64_t v17 = *v15;
        uint64_t v34 = sub_1133208(0x29u);
        if (sub_1132FD0(v17 + 56, (uint64_t)&v34)) {
          break;
        }
        if (++v15 == v16)
        {
          uint64_t v15 = v16;
          break;
        }
      }
      uint64_t v18 = v15;
      uint64_t v19 = *a2;
      uint64_t v15 = (void *)a2[1];
      if (v18 != v15)
      {
        if ((void *)v19 != v15)
        {
          while (1)
          {
            uint64_t v20 = *(void *)v19;
            uint64_t v34 = sub_1133208(0x2Bu);
            if (sub_1132FD0(v20 + 56, (uint64_t)&v34)) {
              break;
            }
            v19 += 8;
            if ((void *)v19 == v15)
            {
              uint64_t v19 = (uint64_t)v15;
              break;
            }
          }
          if (v19 != a2[1])
          {
            uint64_t v21 = *(void *)v19;
            std::string::operator=(&__p, (const std::string *)(*(void *)v19 + 8));
            int v22 = sub_1132F18((uint64_t *)(v21 + 56));
LABEL_45:
            LODWORD(v33) = v22;
            goto LABEL_46;
          }
          uint64_t v19 = a2[1];
        }
        uint64_t v15 = (void *)v19;
        uint64_t v19 = *a2;
      }
    }
    uint64_t v34 = sub_6F5EB4(v19, (uint64_t)v15, a3 + 32);
    int v23 = sub_1132FB0(&v34);
    char v24 = (unsigned __int8 **)*a2;
    int v25 = (unsigned __int8 **)a2[1];
    if (!v23) {
      goto LABEL_41;
    }
    if (v24 != v25)
    {
      while (!sub_1132FD0((uint64_t)(*v24 + 56), (uint64_t)&v34))
      {
        if (++v24 == v25)
        {
          char v24 = v25;
          break;
        }
      }
      if (v24 != (unsigned __int8 **)a2[1])
      {
        unint64_t v26 = *v24;
        LODWORD(v33) = sub_1132F18((uint64_t *)*v24 + 7);
        std::string::operator=(&__p, (const std::string *)(v26 + 8));
LABEL_46:
        double result = *(double *)&__p.__r_.__value_.__l.__data_;
        *(_OWORD *)a4 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
        uint64_t v31 = v33;
        *(void *)(a4 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
        *(void *)(a4 + 24) = v31;
        return result;
      }
      char v24 = (unsigned __int8 **)a2[1];
    }
    int v25 = v24;
    char v24 = (unsigned __int8 **)*a2;
LABEL_41:
    while (v24 != v25)
    {
      char v27 = *v24;
      char v28 = (uint64_t *)(*v24 + 56);
      BOOL v29 = sub_64DBC(v28);
      if (*v27 < 2u && v29)
      {
        std::string::operator=(&__p, (const std::string *)(v27 + 8));
        int v22 = sub_1132F18(v28);
        goto LABEL_45;
      }
      ++v24;
    }
    sub_6F2FC8((void *)a4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    return result;
  }
  while (1)
  {
    uint64_t v10 = (uint64_t)*v7;
    if (**v7 <= 1u)
    {
      memset(&__p, 0, sizeof(__p));
      sub_6F9404(a1, (uint64_t *)(v10 + 64), (long long *)&__p, a3, a4);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      BOOL v11 = sub_6F2FD8(a4);
      BOOL v13 = v11;
      char v14 = *(char *)(a4 + 23) >= 0 || v11;
      if ((v14 & 1) == 0) {
        operator delete(*(void **)a4);
      }
      if (v13) {
        return result;
      }
    }
    if (++v7 == v8) {
      goto LABEL_13;
    }
  }
}

void sub_6F9A48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6F9A98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v3 = 0;
  int v4 = 3;
  switch(*(unsigned char *)(a3 + 48))
  {
    case 1:
      return 1;
    case 4:
      goto LABEL_3;
    case 5:
      return v3;
    default:
      int v4 = 2;
LABEL_3:
      uint64_t v6 = *(unsigned char **)(a2 + 40);
      unint64_t v5 = *(unsigned char **)(a2 + 48);
      int64_t v7 = v5 - v6;
      if (v5 == v6) {
        return 0;
      }
      if (v7 < 0) {
        sub_2E00();
      }
      uint64_t v8 = (char *)operator new(v5 - v6);
      uint64_t v9 = 4 * (v7 >> 2);
      uint64_t v10 = &v8[v9];
      memcpy(v8, v6, v7);
      uint64_t v11 = 0;
      break;
  }
  while (*(_DWORD *)&v8[v11] != v4)
  {
    v11 += 4;
    if (v9 == v11) {
      goto LABEL_11;
    }
  }
  uint64_t v10 = &v8[v11];
LABEL_11:
  BOOL v3 = v7 >> 2 != (v10 - v8) >> 2;
  operator delete(v8);
  return v3;
}

void sub_6F9BA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_6F9BD4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(unsigned __int8 *)(a2 + 23);
  if ((v3 & 0x80u) == 0) {
    int v4 = (unsigned __int8 *)a2;
  }
  else {
    int v4 = *(unsigned __int8 **)a2;
  }
  if ((v3 & 0x80u) != 0) {
    unint64_t v3 = *(void *)(a2 + 8);
  }
  if (v3 >= 0x1F) {
    uint64_t v5 = 31;
  }
  else {
    uint64_t v5 = v3;
  }
  if (v5)
  {
    if (v5 == 1)
    {
      uint64_t v6 = *v4;
      uint64_t v7 = 1;
    }
    else
    {
      if (v5 != 2)
      {
        sub_76DEC(v4, v5, (uint64_t)&v18);
        goto LABEL_17;
      }
      uint64_t v6 = *(unsigned __int16 *)v4;
      uint64_t v7 = 2;
    }
    *(void *)&long long v18 = v6;
    *((void *)&v18 + 1) = v7;
    long long v19 = 0u;
    long long v20 = 0u;
  }
  else
  {
    long long v19 = 0u;
    long long v20 = 0u;
    long long v18 = 0u;
  }
LABEL_17:
  uint64_t v11 = sub_1133038((uint64_t)&v18, 3);
  long long v28 = xmmword_20E8CB0;
  *(_OWORD *)BOOL v29 = unk_20E8CC0;
  *(_OWORD *)&v29[12] = unk_20E8CCC;
  long long v24 = xmmword_20E8C70;
  long long v25 = unk_20E8C80;
  long long v26 = xmmword_20E8C90;
  long long v27 = unk_20E8CA0;
  long long v20 = xmmword_20E8C30;
  long long v21 = unk_20E8C40;
  long long v22 = xmmword_20E8C50;
  long long v23 = unk_20E8C60;
  long long v18 = xmmword_20E8C10;
  long long v19 = unk_20E8C20;
  uint64_t v8 = sub_65800();
  v15[0] = &v11;
  v15[1] = v12;
  int v16 = 2;
  uint64_t v17 = 1;
  v12[0] = &v18;
  v12[1] = &v30;
  int v13 = 4;
  uint64_t v14 = 51;
  unsigned int v9 = (*(uint64_t (**)(uint64_t, void *, void *))(*(void *)v8 + 40))(v8, v15, v12);
  if (v9 > 0x32) {
    return sub_6F4468((unsigned __int8 *)a2);
  }
  uint64_t result = *((unsigned int *)&v18 + v9);
  if (!result) {
    return sub_6F4468((unsigned __int8 *)a2);
  }
  return result;
}

void sub_6F9D78(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, int64x2_t *a4@<X8>)
{
  std::string __p = 0;
  int v45 = 0;
  uint64_t v4 = *a2;
  uint64_t v41 = a2[1];
  if (*a2 != v41)
  {
    uint64_t v5 = 0;
    while (1)
    {
      uint64_t v7 = *(unsigned __int8 **)v4;
      uint64_t v6 = *(unsigned __int8 **)(v4 + 8);
      while (v7 != v6)
      {
        uint64_t v9 = sub_76580(v7);
        uint64_t v10 = v9;
        if (v5 < v45)
        {
          *(void *)uint64_t v5 = v9;
          uint64_t v8 = (uint64_t)(v5 + 8);
          goto LABEL_6;
        }
        uint64_t v11 = (v5 - __p) >> 3;
        unint64_t v12 = v11 + 1;
        if ((unint64_t)(v11 + 1) >> 61) {
          sub_2E00();
        }
        uint64_t v13 = v45 - __p;
        if ((v45 - __p) >> 2 > v12) {
          unint64_t v12 = v13 >> 2;
        }
        if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v14 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v14 = v12;
        }
        if (v14)
        {
          if (v14 >> 61) {
            sub_188D718();
          }
          uint64_t v15 = operator new(8 * v14);
          int v16 = &v15[8 * v11];
          *(void *)int v16 = v10;
          uint64_t v8 = (uint64_t)(v16 + 8);
          if (v5 == __p)
          {
LABEL_24:
            std::string __p = v16;
            int v45 = &v15[8 * v14];
            if (!v5) {
              goto LABEL_6;
            }
LABEL_25:
            operator delete(v5);
            goto LABEL_6;
          }
        }
        else
        {
          uint64_t v15 = 0;
          int v16 = (char *)(8 * v11);
          *(void *)(8 * v11) = v10;
          uint64_t v8 = 8 * v11 + 8;
          if (v5 == __p) {
            goto LABEL_24;
          }
        }
        unint64_t v17 = v5 - 8 - __p;
        if (v17 < 0x168)
        {
          long long v18 = v5;
          goto LABEL_20;
        }
        if (&v15[v5 - __p - 8 - (v17 & 0xFFFFFFFFFFFFFFF8)] > &v15[v5 - __p - 8])
        {
          long long v18 = v5;
          do
          {
LABEL_20:
            uint64_t v19 = *((void *)v18 - 1);
            v18 -= 8;
            *((void *)v16 - 1) = v19;
            v16 -= 8;
          }
          while (v18 != __p);
          goto LABEL_21;
        }
        if (&v5[-(v17 & 0xFFFFFFFFFFFFFFF8) - 8] > v5 - 8)
        {
          long long v18 = v5;
          goto LABEL_20;
        }
        if ((unint64_t)(__p - v15) < 0x20)
        {
          long long v18 = v5;
          goto LABEL_20;
        }
        uint64_t v20 = (v17 >> 3) + 1;
        uint64_t v21 = 8 * (v20 & 0x3FFFFFFFFFFFFFFCLL);
        long long v18 = &v5[-v21];
        v16 -= v21;
        long long v22 = &v15[8 * v11 - 16];
        long long v23 = v5 - 16;
        uint64_t v24 = v20 & 0x3FFFFFFFFFFFFFFCLL;
        do
        {
          long long v25 = *(_OWORD *)v23;
          *(v22 - 1) = *((_OWORD *)v23 - 1);
          *long long v22 = v25;
          v22 -= 2;
          v23 -= 32;
          v24 -= 4;
        }
        while (v24);
        if (v20 != (v20 & 0x3FFFFFFFFFFFFFFCLL)) {
          goto LABEL_20;
        }
LABEL_21:
        uint64_t v5 = __p;
        std::string __p = v16;
        int v45 = &v15[8 * v14];
        if (v5) {
          goto LABEL_25;
        }
LABEL_6:
        v7 += 48;
        uint64_t v5 = (char *)v8;
      }
      v4 += 128;
      if (v4 == v41) {
        goto LABEL_37;
      }
    }
  }
  uint64_t v5 = 0;
LABEL_37:
  uint64_t v26 = sub_656AC();
  sub_76DEC("en_US", 5, (uint64_t)v52);
  uint64_t v27 = sub_1133038((uint64_t)v52, 0);
  v49[0] = a3;
  v49[1] = a3 + 4;
  int v50 = 4;
  uint64_t v51 = 1;
  v46[0] = __p;
  v46[1] = v5;
  int v47 = 2;
  uint64_t v48 = (v5 - __p) >> 3;
  int v28 = (*(uint64_t (**)(uint64_t, void *, void *))(*(void *)v26 + 40))(v26, v49, v46);
  if ((v28 & 0x80000000) == 0 && v28 < (int)((unint64_t)(v5 - __p) >> 3)) {
    uint64_t v27 = *(void *)&__p[8 * v28];
  }
  a4->i64[0] = 0;
  a4->i64[1] = 0;
  a4[1].i64[0] = 0;
  uint64_t v30 = *a2;
  uint64_t v29 = a2[1];
  if (*a2 == v29) {
    goto LABEL_63;
  }
  do
  {
    while (1)
    {
      sub_6FA30C(a1, v30, a3, v27, (uint64_t)v52);
      if (sub_6F2FD8((uint64_t)v52))
      {
        unint64_t v31 = a4->u64[1];
        if (v31 >= a4[1].i64[0])
        {
          uint64_t v32 = sub_5B09D8(a4, (long long *)v52);
        }
        else
        {
          sub_4AA8E0((char *)a4->i64[1], (long long *)v52);
          uint64_t v32 = v31 + 152;
          a4->i64[1] = v31 + 152;
        }
        a4->i64[1] = v32;
      }
      if (v61 < 0) {
        break;
      }
      if ((v59 & 0x80000000) == 0) {
        goto LABEL_51;
      }
LABEL_55:
      operator delete(v58);
      if (v57 < 0) {
        goto LABEL_56;
      }
LABEL_52:
      if ((v55 & 0x80000000) == 0) {
        goto LABEL_57;
      }
LABEL_42:
      operator delete(v54);
      if (v53 < 0) {
        goto LABEL_58;
      }
LABEL_43:
      v30 += 128;
      if (v30 == v29) {
        goto LABEL_59;
      }
    }
    operator delete(v60);
    if (v59 < 0) {
      goto LABEL_55;
    }
LABEL_51:
    if ((v57 & 0x80000000) == 0) {
      goto LABEL_52;
    }
LABEL_56:
    operator delete(v56);
    if (v55 < 0) {
      goto LABEL_42;
    }
LABEL_57:
    if ((v53 & 0x80000000) == 0) {
      goto LABEL_43;
    }
LABEL_58:
    operator delete(v52[0]);
    v30 += 128;
  }
  while (v30 != v29);
LABEL_59:
  if (a4->i64[0] == a4->i64[1])
  {
LABEL_63:
    uint64_t v34 = *a2;
    uint64_t v33 = a2[1];
    while (1)
    {
      if (v34 == v33) {
        goto LABEL_60;
      }
      if (*(void *)v34 != *(void *)(v34 + 8)) {
        break;
      }
LABEL_65:
      v34 += 128;
    }
    uint64_t v35 = sub_76580(*(unsigned __int8 **)v34);
    sub_6FA30C(a1, v34, a3, v35, (uint64_t)v52);
    if (sub_6F2FD8((uint64_t)v52))
    {
      unint64_t v36 = a4->u64[1];
      if (v36 >= a4[1].i64[0])
      {
        uint64_t v37 = sub_5B09D8(a4, (long long *)v52);
        uint64_t v38 = a4;
      }
      else
      {
        sub_4AA8E0((char *)a4->i64[1], (long long *)v52);
        uint64_t v37 = v36 + 152;
        uint64_t v38 = a4;
        a4->i64[1] = v36 + 152;
      }
      v38->i64[1] = v37;
    }
    if (v61 < 0)
    {
      operator delete(v60);
      if ((v59 & 0x80000000) == 0)
      {
LABEL_75:
        if ((v57 & 0x80000000) == 0) {
          goto LABEL_76;
        }
        goto LABEL_80;
      }
    }
    else if ((v59 & 0x80000000) == 0)
    {
      goto LABEL_75;
    }
    operator delete(v58);
    if ((v57 & 0x80000000) == 0)
    {
LABEL_76:
      if (v55 < 0)
      {
LABEL_64:
        operator delete(v54);
        if ((v53 & 0x80000000) == 0) {
          goto LABEL_65;
        }
LABEL_82:
        operator delete(v52[0]);
        goto LABEL_65;
      }
LABEL_81:
      if ((v53 & 0x80000000) == 0) {
        goto LABEL_65;
      }
      goto LABEL_82;
    }
LABEL_80:
    operator delete(v56);
    if (v55 < 0) {
      goto LABEL_64;
    }
    goto LABEL_81;
  }
LABEL_60:
  if (__p) {
    operator delete(__p);
  }
}

void sub_6FA2A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_6FA30C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v46 = a4;
  uint64_t v9 = *(std::string **)a2;
  uint64_t v10 = *(std::string **)(a2 + 8);
  if (*(std::string **)a2 != v10)
  {
    while (1)
    {
      uint64_t v42 = sub_76580((unsigned __int8 *)v9);
      __str.__r_.__value_.__r.__words[0] = sub_1133030(&v42);
      __p[0] = (void *)sub_1133030(&v46);
      if (sub_1132FD0((uint64_t)&__str, (uint64_t)__p) || sub_76648((unsigned __int8 *)v9)) {
        break;
      }
      v9 += 2;
      if (v9 == v10)
      {
        uint64_t v9 = v10;
        break;
      }
    }
  }
  uint64_t v11 = *(std::string **)(a2 + 8);
  sub_6F30A4(a5);
  if (v9 != v11)
  {
    std::string::operator=((std::string *)a5, v9 + 1);
    *(void *)(a5 + 24) = sub_76580((unsigned __int8 *)v9);
    unint64_t v12 = *(unsigned __int8 **)(a2 + 24);
    uint64_t v13 = *(unsigned __int8 **)(a2 + 32);
    if (v12 != v13)
    {
      while (1)
      {
        uint64_t v42 = sub_76580(v12);
        __str.__r_.__value_.__r.__words[0] = sub_1133030(&v42);
        __p[0] = (void *)sub_1133030(&v46);
        if (sub_1132FD0((uint64_t)&__str, (uint64_t)__p) || sub_76648(v12)) {
          break;
        }
        v12 += 48;
        if (v12 == v13)
        {
          unint64_t v12 = v13;
          break;
        }
      }
    }
    if (v12 == *(unsigned __int8 **)(a2 + 32)) {
      unint64_t v14 = (const std::string *)a5;
    }
    else {
      unint64_t v14 = (const std::string *)(v12 + 24);
    }
    std::string::operator=((std::string *)(a5 + 128), v14);
    if (*(unsigned char *)(a2 + 49))
    {
      if (*(unsigned char *)(a2 + 49) == 3) {
        goto LABEL_25;
      }
      int v15 = *(unsigned __int8 *)(a2 + 48);
      if (v15 == 5 || v15 == 8) {
        int v17 = 2;
      }
      else {
        int v17 = 3;
      }
    }
    else
    {
      int v17 = 1;
    }
    *(_DWORD *)(a5 + 120) = v17;
LABEL_25:
    uint64_t v19 = *(void *)(a2 + 56);
    uint64_t v18 = *(void *)(a2 + 64);
    if (v19 == v18) {
      goto LABEL_58;
    }
    uint64_t v20 = *(void *)(a2 + 56);
    while (!*(unsigned char *)(v20 + 32))
    {
      v20 += 40;
      if (v20 == v18) {
        goto LABEL_34;
      }
    }
    if (v20 == v18)
    {
LABEL_34:
      LODWORD(v42) = *(_DWORD *)v19;
      if (*(char *)(v19 + 31) < 0)
      {
        sub_4200(&v43, *(void **)(v19 + 8), *(void *)(v19 + 16));
      }
      else
      {
        long long v22 = *(_OWORD *)(v19 + 8);
        uint64_t v44 = *(void *)(v19 + 24);
        long long v43 = v22;
      }
      goto LABEL_38;
    }
    LODWORD(v42) = *(_DWORD *)v20;
    if (*(char *)(v20 + 31) < 0)
    {
      sub_4200(&v43, *(void **)(v20 + 8), *(void *)(v20 + 16));
    }
    else
    {
      long long v21 = *(_OWORD *)(v20 + 8);
      uint64_t v44 = *(void *)(v20 + 24);
      long long v43 = v21;
    }
    uint64_t v19 = v20;
LABEL_38:
    char v45 = *(unsigned char *)(v19 + 32);
    char v37 = 0;
    LOBYTE(__p[0]) = 0;
    sub_6F27C4((uint64_t)&__str, v42, &v43, (long long *)__p);
    *(_DWORD *)(a5 + 64) = __str.__r_.__value_.__l.__data_;
    long long v23 = (void **)(a5 + 72);
    if (*(char *)(a5 + 95) < 0) {
      operator delete(*v23);
    }
    *(_OWORD *)long long v23 = *(_OWORD *)&__str.__r_.__value_.__r.__words[1];
    *(void *)(a5 + 88) = v39;
    HIBYTE(v39) = 0;
    __str.__r_.__value_.__s.__data_[8] = 0;
    uint64_t v24 = (void **)(a5 + 96);
    if ((*(char *)(a5 + 119) & 0x80000000) == 0)
    {
      *(_OWORD *)uint64_t v24 = v40;
      *(void *)(a5 + 112) = v41;
      HIBYTE(v41) = 0;
      LOBYTE(v40) = 0;
      if (v37 < 0) {
        goto LABEL_42;
      }
LABEL_46:
      uint64_t v25 = *(void *)(a2 + 104);
      uint64_t v26 = *(void *)(a2 + 112);
      if (v25 != v26) {
        goto LABEL_47;
      }
      goto LABEL_51;
    }
    operator delete(*v24);
    int v27 = SHIBYTE(v39);
    *(_OWORD *)uint64_t v24 = v40;
    *(void *)(a5 + 112) = v41;
    HIBYTE(v41) = 0;
    LOBYTE(v40) = 0;
    if (v27 < 0)
    {
      operator delete((void *)__str.__r_.__value_.__l.__size_);
      if ((v37 & 0x80000000) == 0) {
        goto LABEL_46;
      }
    }
    else if ((v37 & 0x80000000) == 0)
    {
      goto LABEL_46;
    }
LABEL_42:
    operator delete(__p[0]);
    uint64_t v25 = *(void *)(a2 + 104);
    uint64_t v26 = *(void *)(a2 + 112);
    if (v25 != v26)
    {
LABEL_47:
      while (1)
      {
        __p[0] = (void *)sub_76580((unsigned __int8 *)v25);
        __str.__r_.__value_.__r.__words[0] = sub_1133030((uint64_t *)__p);
        uint64_t v47 = sub_1133030(&v46);
        if (sub_1132FD0((uint64_t)&__str, (uint64_t)&v47) || sub_76648((unsigned __int8 *)v25)) {
          break;
        }
        v25 += 48;
        if (v25 == v26)
        {
          uint64_t v25 = v26;
          break;
        }
      }
    }
LABEL_51:
    if (v25 == *(void *)(a2 + 112))
    {
      *((unsigned char *)&__str.__r_.__value_.__s + 23) = 0;
      __str.__r_.__value_.__s.__data_[0] = 0;
    }
    else if (*(char *)(v25 + 47) < 0)
    {
      sub_4200(&__str, *(void **)(v25 + 24), *(void *)(v25 + 32));
    }
    else
    {
      std::string __str = *(std::string *)(v25 + 24);
    }
    std::string::operator=((std::string *)(a5 + 96), &__str);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__str.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v44) & 0x80000000) == 0) {
        goto LABEL_58;
      }
    }
    else if ((SHIBYTE(v44) & 0x80000000) == 0)
    {
      goto LABEL_58;
    }
    operator delete((void *)v43);
LABEL_58:
    sub_6F9404(a1, (uint64_t *)(a2 + 80), (long long *)(a5 + 128), a3, (uint64_t)&__str);
    int v28 = (void **)(a5 + 32);
    if (*(char *)(a5 + 55) < 0) {
      operator delete(*v28);
    }
    *(_OWORD *)int v28 = *(_OWORD *)&__str.__r_.__value_.__l.__data_;
    uint64_t v29 = v39;
    *(void *)(a5 + 48) = *((void *)&__str.__r_.__value_.__l + 2);
    *(void *)(a5 + 56) = v29;
    memset(&__str, 0, sizeof(__str));
    int v30 = *(unsigned __int8 *)(a1 + 23);
    if ((v30 & 0x80) != 0)
    {
      if (*(void *)(a1 + 8) != 3) {
        return;
      }
      unint64_t v31 = *(unsigned __int16 **)a1;
    }
    else
    {
      unint64_t v31 = (unsigned __int16 *)a1;
      if (v30 != 3)
      {
LABEL_70:
        if (v30 != 3) {
          return;
        }
LABEL_77:
        if (*(_WORD *)a1 == 18499 && *(unsigned char *)(a1 + 2) == 78 && *(_DWORD *)(a3 + 32) == 5) {
          *(_DWORD *)(a5 + 60) = 0;
        }
        return;
      }
    }
    int v32 = *v31;
    int v33 = *((unsigned __int8 *)v31 + 2);
    if (v32 == 20554 && v33 == 78)
    {
      sub_6FA8D0((uint64_t *)a1, (char *)a5);
      int v30 = *(unsigned __int8 *)(a1 + 23);
      if ((v30 & 0x80) == 0) {
        goto LABEL_70;
      }
    }
    else if ((v30 & 0x80) == 0)
    {
      goto LABEL_70;
    }
    if (*(void *)(a1 + 8) != 3) {
      return;
    }
    a1 = *(void *)a1;
    goto LABEL_77;
  }
}

void sub_6FA7E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0)
  {
    operator delete(__p);
    sub_4A50F4(v32);
    _Unwind_Resume(a1);
  }
  sub_4A50F4(v32);
  _Unwind_Resume(a1);
}

void sub_6FA8D0(uint64_t *a1, char *a2)
{
  int v3 = *((char *)a1 + 23);
  if (v3 < 0)
  {
    if (a1[1] != 3) {
      return;
    }
    a1 = (uint64_t *)*a1;
  }
  else if (v3 != 3)
  {
    return;
  }
  BOOL v4 = *(_WORD *)a1 == 20554 && *((unsigned char *)a1 + 2) == 78;
  if (v4 && sub_6F2880((uint64_t)(a2 + 64)))
  {
    uint64_t v5 = a2[23];
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = (unsigned __int8 *)a2;
    }
    else {
      uint64_t v6 = *(unsigned __int8 **)a2;
    }
    if ((v5 & 0x80u) != 0) {
      uint64_t v5 = *((void *)a2 + 1);
    }
    if (v5)
    {
      while (((char)*v6 & 0x80000000) == 0 && (_DefaultRuneLocale.__runetype[*v6] & 0x400) != 0)
      {
        ++v6;
        if (!--v5) {
          goto LABEL_21;
        }
      }
      return;
    }
LABEL_21:
    memset(&v49, 0, sizeof(v49));
    memset(&v48, 0, sizeof(v48));
    memset(&v47, 0, sizeof(v47));
    memset(&v46, 0, sizeof(v46));
    int v7 = *((_DWORD *)a2 + 16);
    if (v7 == 100000)
    {
      std::string::assign(&v49, "都道府県道");
      uint64_t v8 = "トドウフケンドウ";
    }
    else
    {
      if (v7 != 100006)
      {
LABEL_26:
        if (a2[23] < 0)
        {
          sub_4200(v44, *(void **)a2, *((void *)a2 + 1));
        }
        else
        {
          *(_OWORD *)uint64_t v44 = *(_OWORD *)a2;
          uint64_t v45 = *((void *)a2 + 2);
        }
        int v9 = SHIBYTE(v49.__r_.__value_.__r.__words[2]);
        if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          size_t size = HIBYTE(v49.__r_.__value_.__r.__words[2]);
        }
        else {
          size_t size = v49.__r_.__value_.__l.__size_;
        }
        if (size) {
          goto LABEL_36;
        }
        std::string::size_type v11 = HIBYTE(v48.__r_.__value_.__r.__words[2]);
        if ((v48.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::string::size_type v11 = v48.__r_.__value_.__l.__size_;
        }
        if (v11)
        {
LABEL_36:
          int v12 = SHIBYTE(v45);
          if (v45 >= 0) {
            size_t v13 = HIBYTE(v45);
          }
          else {
            size_t v13 = (size_t)v44[1];
          }
          unint64_t v14 = v13 + size;
          if (v13 + size > 0x7FFFFFFFFFFFFFF7) {
            sub_188D690();
          }
          if (v14 > 0x16)
          {
            uint64_t v16 = (v14 & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((v14 | 7) != 0x17) {
              uint64_t v16 = v14 | 7;
            }
            uint64_t v17 = v16 + 1;
            p_dst = (std::string *)operator new(v16 + 1);
            __dst.__r_.__value_.__l.__size_ = v13 + size;
            __dst.__r_.__value_.__r.__words[2] = v17 | 0x8000000000000000;
            __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
          }
          else
          {
            memset(&__dst, 0, sizeof(__dst));
            p_dst = &__dst;
            *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v13 + size;
          }
          if (size)
          {
            if (v9 >= 0) {
              uint64_t v18 = &v49;
            }
            else {
              uint64_t v18 = (std::string *)v49.__r_.__value_.__r.__words[0];
            }
            memmove(p_dst, v18, size);
          }
          uint64_t v19 = (char *)p_dst + size;
          if (v13)
          {
            if (v12 >= 0) {
              uint64_t v20 = v44;
            }
            else {
              uint64_t v20 = (void **)v44[0];
            }
            memmove(v19, v20, v13);
          }
          v19[v13] = 0;
          if ((v48.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            long long v21 = &v48;
          }
          else {
            long long v21 = (std::string *)v48.__r_.__value_.__r.__words[0];
          }
          if ((v48.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::string::size_type v22 = HIBYTE(v48.__r_.__value_.__r.__words[2]);
          }
          else {
            std::string::size_type v22 = v48.__r_.__value_.__l.__size_;
          }
          long long v23 = std::string::append(&__dst, (const std::string::value_type *)v21, v22);
          long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
          __p.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
          *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v24;
          v23->__r_.__value_.__l.__size_ = 0;
          v23->__r_.__value_.__r.__words[2] = 0;
          v23->__r_.__value_.__r.__words[0] = 0;
          if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__dst.__r_.__value_.__l.__data_);
          }
          std::string::operator=((std::string *)a2, &__p);
          sub_76DEC("ja_JP", 5, (uint64_t)&__dst);
          *((void *)a2 + 3) = sub_1133038((uint64_t)&__dst, 0);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
        }
        int v25 = SHIBYTE(v47.__r_.__value_.__r.__words[2]);
        if ((v47.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          size_t v26 = HIBYTE(v47.__r_.__value_.__r.__words[2]);
        }
        else {
          size_t v26 = v47.__r_.__value_.__l.__size_;
        }
        if (v26) {
          goto LABEL_72;
        }
        std::string::size_type v27 = HIBYTE(v46.__r_.__value_.__r.__words[2]);
        if ((v46.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::string::size_type v27 = v46.__r_.__value_.__l.__size_;
        }
        if (v27)
        {
LABEL_72:
          int v28 = SHIBYTE(v45);
          if (v45 >= 0) {
            size_t v29 = HIBYTE(v45);
          }
          else {
            size_t v29 = (size_t)v44[1];
          }
          unint64_t v30 = v29 + v26;
          if (v29 + v26 > 0x7FFFFFFFFFFFFFF7) {
            sub_188D690();
          }
          if (v30 > 0x16)
          {
            uint64_t v32 = (v30 & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((v30 | 7) != 0x17) {
              uint64_t v32 = v30 | 7;
            }
            uint64_t v33 = v32 + 1;
            unint64_t v31 = (std::string *)operator new(v32 + 1);
            __dst.__r_.__value_.__l.__size_ = v29 + v26;
            __dst.__r_.__value_.__r.__words[2] = v33 | 0x8000000000000000;
            __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v31;
          }
          else
          {
            memset(&__dst, 0, sizeof(__dst));
            unint64_t v31 = &__dst;
            *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v29 + v26;
          }
          if (v26)
          {
            if (v25 >= 0) {
              uint64_t v34 = &v47;
            }
            else {
              uint64_t v34 = (std::string *)v47.__r_.__value_.__r.__words[0];
            }
            memmove(v31, v34, v26);
          }
          uint64_t v35 = (char *)v31 + v26;
          if (v29)
          {
            if (v28 >= 0) {
              unint64_t v36 = v44;
            }
            else {
              unint64_t v36 = (void **)v44[0];
            }
            memmove(v35, v36, v29);
          }
          v35[v29] = 0;
          if ((v46.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            char v37 = &v46;
          }
          else {
            char v37 = (std::string *)v46.__r_.__value_.__r.__words[0];
          }
          if ((v46.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::string::size_type v38 = HIBYTE(v46.__r_.__value_.__r.__words[2]);
          }
          else {
            std::string::size_type v38 = v46.__r_.__value_.__l.__size_;
          }
          uint64_t v39 = std::string::append(&__dst, (const std::string::value_type *)v37, v38);
          long long v40 = *(_OWORD *)&v39->__r_.__value_.__l.__data_;
          __p.__r_.__value_.__r.__words[2] = v39->__r_.__value_.__r.__words[2];
          *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v40;
          v39->__r_.__value_.__l.__size_ = 0;
          v39->__r_.__value_.__r.__words[2] = 0;
          v39->__r_.__value_.__r.__words[0] = 0;
          if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__dst.__r_.__value_.__l.__data_);
          }
          sub_6F2F50((uint64_t)&__dst, (long long *)&__p, 20, 1);
          uint64_t v41 = (void **)(a2 + 32);
          if (a2[55] < 0) {
            operator delete(*v41);
          }
          *(_OWORD *)uint64_t v41 = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
          uint64_t v42 = v51;
          *((void *)a2 + 6) = *((void *)&__dst.__r_.__value_.__l + 2);
          *((void *)a2 + 7) = v42;
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
        }
        if (SHIBYTE(v45) < 0)
        {
          operator delete(v44[0]);
          if ((SHIBYTE(v46.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_105:
            if ((SHIBYTE(v47.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
              goto LABEL_106;
            }
            goto LABEL_111;
          }
        }
        else if ((SHIBYTE(v46.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
          goto LABEL_105;
        }
        operator delete(v46.__r_.__value_.__l.__data_);
        if ((SHIBYTE(v47.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_106:
          if ((SHIBYTE(v48.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
            goto LABEL_107;
          }
          goto LABEL_112;
        }
LABEL_111:
        operator delete(v47.__r_.__value_.__l.__data_);
        if ((SHIBYTE(v48.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_107:
          if ((SHIBYTE(v49.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
            return;
          }
          goto LABEL_113;
        }
LABEL_112:
        operator delete(v48.__r_.__value_.__l.__data_);
        if ((SHIBYTE(v49.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          return;
        }
LABEL_113:
        operator delete(v49.__r_.__value_.__l.__data_);
        return;
      }
      std::string::assign(&v49, "国道");
      uint64_t v8 = "コクドウ";
    }
    std::string::assign(&v47, v8);
    std::string::assign(&v48, "号線");
    std::string::assign(&v46, "ゴウセン");
    goto LABEL_26;
  }
}

void sub_6FAE34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45)
{
  if (a27 < 0)
  {
    operator delete(__p);
    if ((a33 & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else if ((a33 & 0x80000000) == 0)
  {
LABEL_3:
    if (a39 < 0) {
      goto LABEL_4;
    }
    goto LABEL_8;
  }
  operator delete(a28);
  if (a39 < 0)
  {
LABEL_4:
    operator delete(a34);
    if ((a45 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_9;
  }
LABEL_8:
  if ((a45 & 0x80000000) == 0) {
LABEL_5:
  }
    _Unwind_Resume(a1);
LABEL_9:
  operator delete(a40);
  _Unwind_Resume(a1);
}

void sub_6FAEF8(const std::string **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *((unsigned char *)&v17.__r_.__value_.__s + 23) = 0;
  v17.__r_.__value_.__s.__data_[0] = 0;
  if (*a1 == a1[1])
  {
    *(std::string *)a3 = v17;
  }
  else
  {
    std::string::operator=(&v17, *a1 + 1);
    sub_6FB0F0((long long **)a1, (uint64_t **)&__p);
    int v12 = 50331648;
    uint64_t v13 = 0;
    uint64_t v14 = -4294967282;
    uint64_t v6 = sub_656AC();
    v21[0] = a2;
    v21[1] = a2 + 4;
    int v22 = 4;
    uint64_t v23 = 1;
    v18[0] = __p;
    v18[1] = v16;
    int v19 = 2;
    uint64_t v20 = (v16 - (unsigned char *)__p) >> 3;
    unint64_t v7 = (*(uint64_t (**)(uint64_t, void *, void *, int *))(*(void *)v6 + 48))(v6, v21, v18, &v12);
    if (v7 >> 31)
    {
      *(std::string *)a3 = v17;
      memset(&v17, 0, sizeof(v17));
    }
    else
    {
      if ((int)v7 >= (int)(-1431655765 * ((unint64_t)((char *)a1[1] - (char *)*a1) >> 4))) {
        unint64_t v8 = 0;
      }
      else {
        unint64_t v8 = v7;
      }
      uint64_t v9 = (uint64_t)&(*a1)[2 * v8];
      uint64_t v10 = (void **)(v9 + 24);
      if (*(char *)(v9 + 47) < 0)
      {
        sub_4200((unsigned char *)a3, *v10, *(void *)(v9 + 32));
      }
      else
      {
        long long v11 = *(_OWORD *)v10;
        *(void *)(a3 + 16) = *(void *)(v9 + 40);
        *(_OWORD *)a3 = v11;
      }
    }
    if (__p)
    {
      uint64_t v16 = __p;
      operator delete(__p);
    }
    if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v17.__r_.__value_.__l.__data_);
    }
  }
}

void sub_6FB09C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (__p)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void sub_6FB0F0(long long **a1@<X0>, uint64_t **a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  BOOL v4 = *a1;
  int v3 = a1[1];
  if (v3 != *a1)
  {
    unint64_t v5 = 0xAAAAAAAAAAAAAAABLL * (v3 - *a1);
    if (v5 >> 61) {
      sub_2E00();
    }
    uint64_t v6 = (uint64_t *)operator new(0x5555555555555558 * (v3 - *a1));
    *a2 = v6;
    a2[1] = v6;
    a2[2] = &v6[v5];
    while (1)
    {
      if (*((char *)v4 + 23) < 0)
      {
        sub_4200(__p, *(void **)v4, *((void *)v4 + 1));
      }
      else
      {
        long long v7 = *v4;
        uint64_t v36 = *((void *)v4 + 2);
        *(_OWORD *)std::string __p = v7;
      }
      unint64_t v8 = HIBYTE(v36);
      if (v36 >= 0) {
        uint64_t v9 = (unsigned __int8 *)__p;
      }
      else {
        uint64_t v9 = (unsigned __int8 *)__p[0];
      }
      if (v36 < 0) {
        unint64_t v8 = (unint64_t)__p[1];
      }
      if (v8 >= 0x1F) {
        uint64_t v10 = 31;
      }
      else {
        uint64_t v10 = v8;
      }
      if (!v10)
      {
        long long v38 = 0u;
        long long v39 = 0u;
        long long v37 = 0u;
        goto LABEL_26;
      }
      if (v10 == 1) {
        break;
      }
      if (v10 == 2)
      {
        int v12 = __p;
        if (v36 < 0) {
          int v12 = (void **)__p[0];
        }
        *(void *)&long long v37 = *v9 | ((unint64_t)*((unsigned __int8 *)v12 + 1) << 8);
        uint64_t v11 = 2;
        goto LABEL_24;
      }
      sub_76DEC(v9, v10, (uint64_t)&v37);
LABEL_26:
      uint64_t v13 = sub_1133038((uint64_t)&v37, 0);
      uint64_t v14 = v13;
      uint64_t v16 = a2[1];
      unint64_t v15 = (unint64_t)a2[2];
      if ((unint64_t)v16 >= v15)
      {
        uint64_t v18 = *a2;
        uint64_t v19 = (char *)v16 - (char *)*a2;
        uint64_t v20 = v19 >> 3;
        unint64_t v21 = (v19 >> 3) + 1;
        if (v21 >> 61) {
          sub_2E00();
        }
        uint64_t v22 = v15 - (void)v18;
        if (v22 >> 2 > v21) {
          unint64_t v21 = v22 >> 2;
        }
        if ((unint64_t)v22 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v23 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v23 = v21;
        }
        if (v23)
        {
          if (v23 >> 61) {
            sub_188D718();
          }
          long long v24 = operator new(8 * v23);
          int v25 = (uint64_t *)&v24[8 * v20];
          *int v25 = v14;
          uint64_t v17 = (uint64_t)(v25 + 1);
          if (v16 != v18)
          {
LABEL_42:
            unint64_t v26 = (char *)(v16 - 1) - (char *)v18;
            if (v26 < 0x58) {
              goto LABEL_56;
            }
            if ((unint64_t)((char *)v16 - &v24[v19]) < 0x20) {
              goto LABEL_56;
            }
            uint64_t v27 = (v26 >> 3) + 1;
            uint64_t v28 = 8 * (v27 & 0x3FFFFFFFFFFFFFFCLL);
            size_t v29 = &v16[v28 / 0xFFFFFFFFFFFFFFF8];
            int v25 = (uint64_t *)((char *)v25 - v28);
            unint64_t v30 = &v24[8 * v20 - 16];
            unint64_t v31 = v16 - 2;
            uint64_t v32 = v27 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              long long v33 = *(_OWORD *)v31;
              *(v30 - 1) = *((_OWORD *)v31 - 1);
              _OWORD *v30 = v33;
              v30 -= 2;
              v31 -= 4;
              v32 -= 4;
            }
            while (v32);
            uint64_t v16 = v29;
            if (v27 != (v27 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_56:
              do
              {
                uint64_t v34 = *--v16;
                *--int v25 = v34;
              }
              while (v16 != v18);
            }
            uint64_t v16 = *a2;
            *a2 = v25;
            a2[1] = (uint64_t *)v17;
            a2[2] = (uint64_t *)&v24[8 * v23];
            if (!v16) {
              goto LABEL_39;
            }
LABEL_38:
            operator delete(v16);
            goto LABEL_39;
          }
        }
        else
        {
          long long v24 = 0;
          int v25 = (uint64_t *)(8 * v20);
          *(void *)(8 * v20) = v14;
          uint64_t v17 = 8 * v20 + 8;
          if (v16 != v18) {
            goto LABEL_42;
          }
        }
        *a2 = v25;
        a2[1] = (uint64_t *)v17;
        a2[2] = (uint64_t *)&v24[8 * v23];
        if (v16) {
          goto LABEL_38;
        }
      }
      else
      {
        *uint64_t v16 = v13;
        uint64_t v17 = (uint64_t)(v16 + 1);
      }
LABEL_39:
      a2[1] = (uint64_t *)v17;
      if (SHIBYTE(v36) < 0) {
        operator delete(__p[0]);
      }
      v4 += 3;
      if (v4 == v3) {
        return;
      }
    }
    *(void *)&long long v37 = *v9;
    uint64_t v11 = 1;
LABEL_24:
    *((void *)&v37 + 1) = v11;
    long long v38 = 0u;
    long long v39 = 0u;
    goto LABEL_26;
  }
}

void sub_6FB408(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  uint64_t v18 = *(void **)v16;
  if (!*(void *)v16) {
    _Unwind_Resume(exception_object);
  }
  *(void *)(v16 + 8) = v18;
  operator delete(v18);
  _Unwind_Resume(exception_object);
}

void sub_6FB468(char *a1@<X1>, uint64_t a2@<X2>, int64x2_t *a3@<X8>)
{
  sub_6F3348(a3);
  if (*(void *)a1 != *((void *)a1 + 1))
  {
    sub_6FB8E8(a1, (unint64_t *)&__p);
    int v10 = 50331648;
    uint64_t v11 = 0;
    uint64_t v12 = -4294967282;
    uint64_t v6 = sub_65800();
    v18[0] = a2 + 32;
    v18[1] = a2 + 36;
    int v19 = 4;
    uint64_t v20 = 1;
    v15[0] = __p;
    v15[1] = v14;
    int v16 = 2;
    uint64_t v17 = (v14 - (unsigned char *)__p) >> 3;
    unint64_t v7 = (*(uint64_t (**)(uint64_t, void *, void *, int *))(*(void *)v6 + 48))(v6, v18, v15, &v10);
    if (!(v7 >> 31))
    {
      uint64_t v8 = *(void *)a1;
      if ((int)v7 >= (int)(-1431655765 * ((*((void *)a1 + 1) - *(void *)a1) >> 4))) {
        unint64_t v9 = 0;
      }
      else {
        unint64_t v9 = v7;
      }
      a3[1].i64[1] = sub_76580((unsigned __int8 *)(v8 + 48 * v9));
      std::string::operator=((std::string *)a3, (const std::string *)(v8 + 48 * v9 + 24));
    }
    if (__p)
    {
      uint64_t v14 = __p;
      operator delete(__p);
    }
  }
}

void sub_6FB5A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p)
  {
    operator delete(__p);
    if ((*(char *)(v13 + 23) & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((*(char *)(v13 + 23) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)v13);
  _Unwind_Resume(exception_object);
}

std::string *sub_6FB5F8(std::string *__dst, const std::string *a2)
{
  if (!__dst[2].__r_.__value_.__s.__data_[8])
  {
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_4200(__dst, a2->__r_.__value_.__l.__data_, a2->__r_.__value_.__l.__size_);
      uint64_t result = __dst + 1;
      if ((SHIBYTE(a2[1].__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_4;
      }
    }
    else
    {
      long long v4 = *(_OWORD *)&a2->__r_.__value_.__l.__data_;
      __dst->__r_.__value_.__r.__words[2] = a2->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__dst->__r_.__value_.__l.__data_ = v4;
      uint64_t result = __dst + 1;
      if ((SHIBYTE(a2[1].__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_4:
        long long v6 = *(_OWORD *)&a2[1].__r_.__value_.__l.__data_;
        result->__r_.__value_.__r.__words[2] = a2[1].__r_.__value_.__r.__words[2];
        *(_OWORD *)&result->__r_.__value_.__l.__data_ = v6;
LABEL_7:
        __dst[2].__r_.__value_.__r.__words[0] = a2[2].__r_.__value_.__r.__words[0];
        __dst[2].__r_.__value_.__s.__data_[8] = 1;
        return result;
      }
    }
    uint64_t result = (std::string *)sub_4200(result, a2[1].__r_.__value_.__l.__data_, a2[1].__r_.__value_.__l.__size_);
    goto LABEL_7;
  }

  return sub_6FB6D4(__dst, a2);
}

void sub_6FB6B8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_6FB6D4(std::string *a1, const std::string *a2)
{
  std::string::operator=(a1, a2);
  uint64_t result = std::string::operator=(a1 + 1, a2 + 1);
  a1[2].__r_.__value_.__r.__words[0] = a2[2].__r_.__value_.__r.__words[0];
  return result;
}

char *sub_6FB710@<X0>(char *result@<X0>, unint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  int v3 = *(unsigned __int8 **)result;
  long long v4 = (unsigned __int8 *)*((void *)result + 1);
  if (v4 != *(unsigned __int8 **)result)
  {
    unint64_t v5 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v4[-*(void *)result] >> 4);
    if (v5 >> 61) {
      sub_2E00();
    }
    uint64_t result = (char *)operator new(0x5555555555555558 * ((uint64_t)&v4[-*(void *)result] >> 4));
    long long v6 = result;
    *a2 = (unint64_t)result;
    a2[1] = (unint64_t)result;
    for (a2[2] = (unint64_t)&result[8 * v5]; v3 != v4; v3 += 48)
    {
      uint64_t v7 = sub_76580(v3);
      uint64_t result = sub_2A5934(a2, v6, &v7);
      long long v6 = result + 8;
    }
  }
  return result;
}

void sub_6FB7DC(_Unwind_Exception *exception_object)
{
  int v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_6FB7FC@<X0>(char *result@<X0>, unint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  int v3 = *(unsigned __int8 **)result;
  long long v4 = (unsigned __int8 *)*((void *)result + 1);
  if (v4 != *(unsigned __int8 **)result)
  {
    unint64_t v5 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v4[-*(void *)result] >> 4);
    if (v5 >> 61) {
      sub_2E00();
    }
    uint64_t result = (char *)operator new(0x5555555555555558 * ((uint64_t)&v4[-*(void *)result] >> 4));
    long long v6 = result;
    *a2 = (unint64_t)result;
    a2[1] = (unint64_t)result;
    for (a2[2] = (unint64_t)&result[8 * v5]; v3 != v4; v3 += 48)
    {
      uint64_t v7 = sub_76580(v3);
      uint64_t result = sub_2A5934(a2, v6, &v7);
      long long v6 = result + 8;
    }
  }
  return result;
}

void sub_6FB8C8(_Unwind_Exception *exception_object)
{
  int v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_6FB8E8@<X0>(char *result@<X0>, unint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  int v3 = *(unsigned __int8 **)result;
  long long v4 = (unsigned __int8 *)*((void *)result + 1);
  if (v4 != *(unsigned __int8 **)result)
  {
    unint64_t v5 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v4[-*(void *)result] >> 4);
    if (v5 >> 61) {
      sub_2E00();
    }
    uint64_t result = (char *)operator new(0x5555555555555558 * ((uint64_t)&v4[-*(void *)result] >> 4));
    long long v6 = result;
    *a2 = (unint64_t)result;
    a2[1] = (unint64_t)result;
    for (a2[2] = (unint64_t)&result[8 * v5]; v3 != v4; v3 += 48)
    {
      uint64_t v7 = sub_76580(v3);
      uint64_t result = sub_2A5934(a2, v6, &v7);
      long long v6 = result + 8;
    }
  }
  return result;
}

void sub_6FB9B4(_Unwind_Exception *exception_object)
{
  int v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_6FB9D4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if ((*(char *)(a1 + 23) & 0x80000000) == 0)
  {
    if (!*(unsigned char *)(a1 + 23))
    {
      *(_OWORD *)a2 = *(_OWORD *)a1;
      *(void *)(a2 + 16) = *(void *)(a1 + 16);
      return;
    }
LABEL_5:
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25A09D0, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_25A09D0))
    {
      if (byte_25A0A4F < 0)
      {
        sub_4200(&xmmword_25A4798, (void *)xmmword_25A0A38, *((unint64_t *)&xmmword_25A0A38 + 1));
      }
      else
      {
        xmmword_25A4798 = xmmword_25A0A38;
        qword_25A47A8 = unk_25A0A48;
      }
      if (byte_25A0A37 < 0)
      {
        sub_4200(&xmmword_25A47B0, (void *)xmmword_25A0A20, *((unint64_t *)&xmmword_25A0A20 + 1));
      }
      else
      {
        xmmword_25A47B0 = xmmword_25A0A20;
        qword_25A47C0 = unk_25A0A30;
      }
      if (byte_25A09EF < 0)
      {
        sub_4200(&xmmword_25A47C8, (void *)xmmword_25A09D8, *((unint64_t *)&xmmword_25A09D8 + 1));
      }
      else
      {
        xmmword_25A47C8 = xmmword_25A09D8;
        qword_25A47D8 = unk_25A09E8;
      }
      if (byte_25A0A07 < 0)
      {
        sub_4200(&xmmword_25A47E0, (void *)xmmword_25A09F0, *((unint64_t *)&xmmword_25A09F0 + 1));
      }
      else
      {
        xmmword_25A47E0 = xmmword_25A09F0;
        qword_25A47F0 = unk_25A0A00;
      }
      if (byte_25A0A1F < 0)
      {
        sub_4200(&xmmword_25A47F8, (void *)xmmword_25A0A08, *((unint64_t *)&xmmword_25A0A08 + 1));
      }
      else
      {
        xmmword_25A47F8 = xmmword_25A0A08;
        qword_25A4808 = unk_25A0A18;
      }
      __cxa_guard_release(&qword_25A09D0);
    }
    int v4 = byte_25A0A37;
    if (byte_25A0A37 >= 0) {
      size_t v5 = byte_25A0A37;
    }
    else {
      size_t v5 = *((void *)&xmmword_25A0A20 + 1);
    }
    int v6 = *(char *)(a1 + 23);
    if (v6 >= 0) {
      size_t v7 = *(unsigned __int8 *)(a1 + 23);
    }
    else {
      size_t v7 = *(void *)(a1 + 8);
    }
    unint64_t v8 = v7 + v5;
    if (v7 + v5 >= 0x7FFFFFFFFFFFFFF8) {
      sub_188D690();
    }
    if (v8 > 0x16)
    {
      uint64_t v10 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v8 | 7) != 0x17) {
        uint64_t v10 = v8 | 7;
      }
      uint64_t v11 = v10 + 1;
      p_dst = (std::string *)operator new(v10 + 1);
      __dst.__r_.__value_.__l.__size_ = v7 + v5;
      __dst.__r_.__value_.__r.__words[2] = v11 | 0x8000000000000000;
      __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
      if (!v5) {
        goto LABEL_23;
      }
    }
    else
    {
      memset(&__dst, 0, sizeof(__dst));
      p_dst = &__dst;
      *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v7 + v5;
      if (!v5)
      {
LABEL_23:
        uint64_t v13 = (char *)p_dst + v5;
        if (v7)
        {
          if (v6 >= 0) {
            uint64_t v14 = (const void *)a1;
          }
          else {
            uint64_t v14 = *(const void **)a1;
          }
          memmove(v13, v14, v7);
        }
        v13[v7] = 0;
        if (byte_25A0A4F >= 0) {
          unint64_t v15 = (const std::string::value_type *)&xmmword_25A0A38;
        }
        else {
          unint64_t v15 = (const std::string::value_type *)xmmword_25A0A38;
        }
        if (byte_25A0A4F >= 0) {
          std::string::size_type v16 = byte_25A0A4F;
        }
        else {
          std::string::size_type v16 = *((void *)&xmmword_25A0A38 + 1);
        }
        uint64_t v17 = std::string::append(&__dst, v15, v16);
        long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
        *(void *)(a2 + 16) = *((void *)&v17->__r_.__value_.__l + 2);
        *(_OWORD *)a2 = v18;
        v17->__r_.__value_.__l.__size_ = 0;
        v17->__r_.__value_.__r.__words[2] = 0;
        v17->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__dst.__r_.__value_.__l.__data_);
        }
        return;
      }
    }
    if (v4 >= 0) {
      uint64_t v12 = &xmmword_25A0A20;
    }
    else {
      uint64_t v12 = (long long *)xmmword_25A0A20;
    }
    memmove(p_dst, v12, v5);
    goto LABEL_23;
  }
  if (*(void *)(a1 + 8)) {
    goto LABEL_5;
  }
  int v19 = *(void **)a1;

  sub_4200((unsigned char *)a2, v19, 0);
}

void sub_6FBD5C(_Unwind_Exception *a1)
{
}

void sub_6FBD74()
{
  uint64_t v1 = (void **)(v0 - 24);
  if (*(char *)(v0 - 1) < 0) {
    operator delete(*v1);
  }
  while (v1 != (void **)&xmmword_25A4798)
  {
    if (*((char *)v1 - 1) < 0) {
      operator delete(*(v1 - 3));
    }
    v1 -= 3;
  }
  JUMPOUT(0x6FBD60);
}

void sub_6FBDB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_6FBDD4(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v4 = a1[23];
  size_t v5 = *(char **)a1;
  if (v4 >= 0) {
    int v6 = a1;
  }
  else {
    int v6 = *(char **)a1;
  }
  __s = v6;
  if (byte_25A0A7F >= 0) {
    size_t v7 = &qword_25A0A68;
  }
  else {
    size_t v7 = (uint64_t *)qword_25A0A68;
  }
  if (byte_25A0A7F >= 0) {
    int64_t v8 = byte_25A0A7F;
  }
  else {
    int64_t v8 = qword_25A0A70;
  }
  if (v8)
  {
    if (v4 >= 0) {
      int64_t v9 = a1[23];
    }
    else {
      int64_t v9 = *((void *)a1 + 1);
    }
    if (v9 >= v8)
    {
      uint64_t v14 = v6;
      unint64_t v15 = &v6[v9];
      int v16 = *(char *)v7;
      int64_t v17 = v9;
      do
      {
        int64_t v18 = v17 - v8;
        if (v18 == -1) {
          break;
        }
        int v19 = (char *)memchr(v14, v16, v18 + 1);
        if (!v19) {
          break;
        }
        uint64_t v20 = v19;
        if (!memcmp(v19, v7, v8))
        {
          if (v20 == v15 || v20 - __s == -1) {
            break;
          }
          goto LABEL_47;
        }
        uint64_t v14 = v20 + 1;
        int64_t v17 = v15 - (v20 + 1);
      }
      while (v17 >= v8);
    }
    int v10 = byte_25A09EF;
    if (byte_25A09EF >= 0) {
      size_t v11 = byte_25A09EF;
    }
    else {
      size_t v11 = *((void *)&xmmword_25A09D8 + 1);
    }
    unint64_t v12 = v9 + v11;
    if (v9 + v11 >= 0x7FFFFFFFFFFFFFF8) {
      sub_188D690();
    }
    if (v12 > 0x16)
    {
      uint64_t v21 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v12 | 7) != 0x17) {
        uint64_t v21 = v12 | 7;
      }
      uint64_t v22 = v21 + 1;
      p_dst = (std::string *)operator new(v21 + 1);
      __dst.__r_.__value_.__l.__size_ = v9 + v11;
      __dst.__r_.__value_.__r.__words[2] = v22 | 0x8000000000000000;
      __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
      if (!v11) {
        goto LABEL_35;
      }
    }
    else
    {
      memset(&__dst, 0, sizeof(__dst));
      p_dst = &__dst;
      *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v9 + v11;
      if (!v11)
      {
LABEL_35:
        long long v24 = (char *)p_dst + v11;
        if (v9) {
          memmove(v24, __s, v9);
        }
        v24[v9] = 0;
        if (byte_25A0A07 >= 0) {
          int v25 = (const std::string::value_type *)&xmmword_25A09F0;
        }
        else {
          int v25 = (const std::string::value_type *)xmmword_25A09F0;
        }
        if (byte_25A0A07 >= 0) {
          std::string::size_type v26 = byte_25A0A07;
        }
        else {
          std::string::size_type v26 = *((void *)&xmmword_25A09F0 + 1);
        }
        uint64_t v27 = std::string::append(&__dst, v25, v26);
        long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
        *(void *)(a2 + 16) = *((void *)&v27->__r_.__value_.__l + 2);
        *(_OWORD *)a2 = v28;
        v27->__r_.__value_.__l.__size_ = 0;
        v27->__r_.__value_.__r.__words[2] = 0;
        v27->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__dst.__r_.__value_.__l.__data_);
        }
        return;
      }
    }
    if (v10 >= 0) {
      unint64_t v23 = &xmmword_25A09D8;
    }
    else {
      unint64_t v23 = (long long *)xmmword_25A09D8;
    }
    memmove(p_dst, v23, v11);
    goto LABEL_35;
  }
LABEL_47:
  if (v4 < 0)
  {
    unint64_t v29 = *((void *)a1 + 1);
    sub_4200((unsigned char *)a2, v5, v29);
  }
  else
  {
    *(_OWORD *)a2 = *(_OWORD *)a1;
    *(void *)(a2 + 16) = *((void *)a1 + 2);
  }
}

void sub_6FC044(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_6FC060(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v4 = a1[23];
  size_t v5 = *(char **)a1;
  if (v4 >= 0) {
    int v6 = a1;
  }
  else {
    int v6 = *(char **)a1;
  }
  __s = v6;
  if (byte_25A0A7F >= 0) {
    size_t v7 = &qword_25A0A68;
  }
  else {
    size_t v7 = (uint64_t *)qword_25A0A68;
  }
  if (byte_25A0A7F >= 0) {
    int64_t v8 = byte_25A0A7F;
  }
  else {
    int64_t v8 = qword_25A0A70;
  }
  if (v8)
  {
    if (v4 >= 0) {
      int64_t v9 = a1[23];
    }
    else {
      int64_t v9 = *((void *)a1 + 1);
    }
    if (v9 >= v8)
    {
      uint64_t v14 = v6;
      unint64_t v15 = &v6[v9];
      int v16 = *(char *)v7;
      int64_t v17 = v9;
      do
      {
        int64_t v18 = v17 - v8;
        if (v18 == -1) {
          break;
        }
        int v19 = (char *)memchr(v14, v16, v18 + 1);
        if (!v19) {
          break;
        }
        uint64_t v20 = v19;
        if (!memcmp(v19, v7, v8))
        {
          if (v20 == v15 || v20 - __s == -1) {
            break;
          }
          goto LABEL_47;
        }
        uint64_t v14 = v20 + 1;
        int64_t v17 = v15 - (v20 + 1);
      }
      while (v17 >= v8);
    }
    int v10 = byte_25A0A1F;
    if (byte_25A0A1F >= 0) {
      size_t v11 = byte_25A0A1F;
    }
    else {
      size_t v11 = *((void *)&xmmword_25A0A08 + 1);
    }
    unint64_t v12 = v9 + v11;
    if (v9 + v11 >= 0x7FFFFFFFFFFFFFF8) {
      sub_188D690();
    }
    if (v12 > 0x16)
    {
      uint64_t v21 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v12 | 7) != 0x17) {
        uint64_t v21 = v12 | 7;
      }
      uint64_t v22 = v21 + 1;
      p_dst = (std::string *)operator new(v21 + 1);
      __dst.__r_.__value_.__l.__size_ = v9 + v11;
      __dst.__r_.__value_.__r.__words[2] = v22 | 0x8000000000000000;
      __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
      if (!v11) {
        goto LABEL_35;
      }
    }
    else
    {
      memset(&__dst, 0, sizeof(__dst));
      p_dst = &__dst;
      *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v9 + v11;
      if (!v11)
      {
LABEL_35:
        long long v24 = (char *)p_dst + v11;
        if (v9) {
          memmove(v24, __s, v9);
        }
        v24[v9] = 0;
        if (byte_25A0A07 >= 0) {
          int v25 = (const std::string::value_type *)&xmmword_25A09F0;
        }
        else {
          int v25 = (const std::string::value_type *)xmmword_25A09F0;
        }
        if (byte_25A0A07 >= 0) {
          std::string::size_type v26 = byte_25A0A07;
        }
        else {
          std::string::size_type v26 = *((void *)&xmmword_25A09F0 + 1);
        }
        uint64_t v27 = std::string::append(&__dst, v25, v26);
        long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
        *(void *)(a2 + 16) = *((void *)&v27->__r_.__value_.__l + 2);
        *(_OWORD *)a2 = v28;
        v27->__r_.__value_.__l.__size_ = 0;
        v27->__r_.__value_.__r.__words[2] = 0;
        v27->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__dst.__r_.__value_.__l.__data_);
        }
        return;
      }
    }
    if (v10 >= 0) {
      unint64_t v23 = &xmmword_25A0A08;
    }
    else {
      unint64_t v23 = (long long *)xmmword_25A0A08;
    }
    memmove(p_dst, v23, v11);
    goto LABEL_35;
  }
LABEL_47:
  if (v4 < 0)
  {
    unint64_t v29 = *((void *)a1 + 1);
    sub_4200((unsigned char *)a2, v5, v29);
  }
  else
  {
    *(_OWORD *)a2 = *(_OWORD *)a1;
    *(void *)(a2 + 16) = *((void *)a1 + 2);
  }
}

void sub_6FC2D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_6FC2EC(char *a1@<X0>, uint64_t a2@<X8>)
{
  int v4 = a1[23];
  if (v4 < 0)
  {
    size_t v5 = *((void *)a1 + 1);
    if (!v5)
    {
      uint64_t v13 = *(void **)a1;
      sub_4200((unsigned char *)a2, v13, 0);
      return;
    }
  }
  else
  {
    if (!a1[23])
    {
      *(_OWORD *)a2 = *(_OWORD *)a1;
      *(void *)(a2 + 16) = *((void *)a1 + 2);
      return;
    }
    size_t v5 = *((void *)a1 + 1);
  }
  size_t v6 = a1[23];
  if (v4 >= 0) {
    size_t v7 = a1[23];
  }
  else {
    size_t v7 = v5;
  }
  int v8 = byte_25A0A4F;
  long long v9 = xmmword_25A0A38;
  if (byte_25A0A4F >= 0) {
    size_t v10 = byte_25A0A4F;
  }
  else {
    size_t v10 = *((void *)&xmmword_25A0A38 + 1);
  }
  if (v10 <= v7
    && (byte_25A0A4F >= 0 ? (size_t v11 = &xmmword_25A0A38) : (size_t v11 = (long long *)xmmword_25A0A38),
        v4 >= 0 ? (unint64_t v12 = a1) : (unint64_t v12 = *(const void **)a1),
        !memcmp(v11, v12, v10)))
  {
    HIBYTE(v41) = 0;
    LOBYTE(v40[0]) = 0;
  }
  else if (v8 < 0)
  {
    sub_4200(v40, (void *)v9, *((unint64_t *)&v9 + 1));
    size_t v6 = a1[23];
    size_t v5 = *((void *)a1 + 1);
    LOBYTE(v4) = a1[23];
  }
  else
  {
    *(_OWORD *)long long v40 = xmmword_25A0A38;
    uint64_t v41 = unk_25A0A48;
  }
  if ((v4 & 0x80u) == 0) {
    size_t v14 = v6;
  }
  else {
    size_t v14 = v5;
  }
  if (byte_25A0A67 >= 0) {
    unint64_t v15 = &xmmword_25A0A50;
  }
  else {
    unint64_t v15 = (long long *)xmmword_25A0A50;
  }
  size_t v16 = byte_25A0A67;
  if (byte_25A0A67 < 0) {
    size_t v16 = *((void *)&xmmword_25A0A50 + 1);
  }
  if (v16 > v14)
  {
LABEL_42:
    if (byte_25A0A67 < 0)
    {
      sub_4200(__p, (void *)xmmword_25A0A50, *((unint64_t *)&xmmword_25A0A50 + 1));
      size_t v6 = a1[23];
      size_t v5 = *((void *)a1 + 1);
      LOBYTE(v4) = a1[23];
    }
    else
    {
      *(_OWORD *)std::string __p = xmmword_25A0A50;
      uint64_t v39 = unk_25A0A60;
    }
  }
  else
  {
    if ((v4 & 0x80u) == 0) {
      int64_t v17 = a1;
    }
    else {
      int64_t v17 = *(char **)a1;
    }
    int64_t v18 = &v17[v14 - 1];
    int v19 = (char *)v15 - 1;
    while (v16)
    {
      int v20 = v19[v16];
      int v21 = *v18--;
      --v16;
      if (v20 != v21) {
        goto LABEL_42;
      }
    }
    HIBYTE(v39) = 0;
    LOBYTE(__p[0]) = 0;
  }
  int v22 = SHIBYTE(v41);
  if (v41 >= 0) {
    size_t v23 = HIBYTE(v41);
  }
  else {
    size_t v23 = (size_t)v40[1];
  }
  int v24 = (char)v4;
  if ((v4 & 0x80u) == 0) {
    size_t v25 = v6;
  }
  else {
    size_t v25 = v5;
  }
  unint64_t v26 = v25 + v23;
  if (v25 + v23 >= 0x7FFFFFFFFFFFFFF8) {
    sub_188D690();
  }
  if (v26 > 0x16)
  {
    uint64_t v35 = (v26 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v26 | 7) != 0x17) {
      uint64_t v35 = v26 | 7;
    }
    uint64_t v36 = v35 + 1;
    p_dst = (std::string *)operator new(v35 + 1);
    __dst.__r_.__value_.__l.__size_ = v25 + v23;
    __dst.__r_.__value_.__r.__words[2] = v36 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
    if (!v23) {
      goto LABEL_59;
    }
    goto LABEL_55;
  }
  memset(&__dst, 0, sizeof(__dst));
  p_dst = &__dst;
  *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v25 + v23;
  if (v23)
  {
LABEL_55:
    if (v22 >= 0) {
      long long v28 = v40;
    }
    else {
      long long v28 = (void **)v40[0];
    }
    memmove(p_dst, v28, v23);
  }
LABEL_59:
  unint64_t v29 = (char *)p_dst + v23;
  if (v25)
  {
    if (v24 >= 0) {
      unint64_t v30 = a1;
    }
    else {
      unint64_t v30 = *(const void **)a1;
    }
    memmove(v29, v30, v25);
  }
  v29[v25] = 0;
  if (v39 >= 0) {
    unint64_t v31 = __p;
  }
  else {
    unint64_t v31 = (void **)__p[0];
  }
  if (v39 >= 0) {
    std::string::size_type v32 = HIBYTE(v39);
  }
  else {
    std::string::size_type v32 = (std::string::size_type)__p[1];
  }
  long long v33 = std::string::append(&__dst, (const std::string::value_type *)v31, v32);
  long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  *(void *)(a2 + 16) = *((void *)&v33->__r_.__value_.__l + 2);
  *(_OWORD *)a2 = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__dst.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v39) & 0x80000000) == 0)
    {
LABEL_72:
      if ((SHIBYTE(v41) & 0x80000000) == 0) {
        return;
      }
LABEL_80:
      operator delete(v40[0]);
      return;
    }
  }
  else if ((SHIBYTE(v39) & 0x80000000) == 0)
  {
    goto LABEL_72;
  }
  operator delete(__p[0]);
  if (SHIBYTE(v41) < 0) {
    goto LABEL_80;
  }
}

void sub_6FC61C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if ((a28 & 0x80000000) == 0) {
    _Unwind_Resume(exception_object);
  }
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_6FC690(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = a2[23];
  size_t v9 = *((void *)a2 + 1);
  if ((v8 & 0x80u) == 0) {
    size_t v10 = a2[23];
  }
  else {
    size_t v10 = *((void *)a2 + 1);
  }
  uint64_t v11 = a3[23];
  int v12 = (char)v11;
  if ((v11 & 0x80u) != 0) {
    uint64_t v11 = *((void *)a3 + 1);
  }
  if (v10 != v11) {
    goto LABEL_17;
  }
  if (v12 >= 0) {
    uint64_t v13 = a3;
  }
  else {
    uint64_t v13 = *(unsigned __int8 **)a3;
  }
  if ((v8 & 0x80) != 0)
  {
    if (memcmp(*(const void **)a2, v13, v9)) {
      goto LABEL_17;
    }
  }
  else if (v8)
  {
    size_t v14 = a2;
    uint64_t v15 = v8;
    while (*v14 == *v13)
    {
      ++v14;
      ++v13;
      if (!--v15) {
        goto LABEL_73;
      }
    }
LABEL_17:
    int v16 = byte_25A0A7F;
    if (byte_25A0A7F >= 0) {
      size_t v17 = byte_25A0A7F;
    }
    else {
      size_t v17 = qword_25A0A70;
    }
    unint64_t v18 = v17 + v10;
    if (v17 + v10 >= 0x7FFFFFFFFFFFFFF8) {
      sub_188D690();
    }
    uint64_t v48 = a4;
    if (v18 > 0x16)
    {
      uint64_t v20 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v18 | 7) != 0x17) {
        uint64_t v20 = v18 | 7;
      }
      uint64_t v21 = v20 + 1;
      p_dst = (std::string *)operator new(v20 + 1);
      __dst.__r_.__value_.__l.__size_ = v17 + v10;
      __dst.__r_.__value_.__r.__words[2] = v21 | 0x8000000000000000;
      __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
      if (!v17)
      {
LABEL_31:
        size_t v23 = (char *)p_dst + v17;
        if (v10)
        {
          if ((v8 & 0x80u) == 0) {
            int v24 = a2;
          }
          else {
            int v24 = *(const void **)a2;
          }
          memmove(v23, v24, v10);
        }
        v23[v10] = 0;
        if (byte_25A0A97 >= 0) {
          size_t v25 = (const std::string::value_type *)&qword_25A0A80;
        }
        else {
          size_t v25 = (const std::string::value_type *)qword_25A0A80;
        }
        if (byte_25A0A97 >= 0) {
          std::string::size_type v26 = byte_25A0A97;
        }
        else {
          std::string::size_type v26 = unk_25A0A88;
        }
        uint64_t v27 = std::string::append(&__dst, v25, v26);
        long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
        v52.__r_.__value_.__r.__words[2] = v27->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v52.__r_.__value_.__l.__data_ = v28;
        v27->__r_.__value_.__l.__size_ = 0;
        v27->__r_.__value_.__r.__words[2] = 0;
        v27->__r_.__value_.__r.__words[0] = 0;
        sub_6FBDD4((char *)a1, (uint64_t)__p);
        if ((v50 & 0x80u) == 0) {
          unint64_t v29 = __p;
        }
        else {
          unint64_t v29 = (void **)__p[0];
        }
        if ((v50 & 0x80u) == 0) {
          std::string::size_type v30 = v50;
        }
        else {
          std::string::size_type v30 = (std::string::size_type)__p[1];
        }
        unint64_t v31 = std::string::append(&v52, (const std::string::value_type *)v29, v30);
        long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
        v53.__r_.__value_.__r.__words[2] = v31->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v53.__r_.__value_.__l.__data_ = v32;
        v31->__r_.__value_.__l.__size_ = 0;
        v31->__r_.__value_.__r.__words[2] = 0;
        v31->__r_.__value_.__r.__words[0] = 0;
        if (byte_25A0A7F >= 0) {
          long long v33 = (const std::string::value_type *)&qword_25A0A68;
        }
        else {
          long long v33 = (const std::string::value_type *)qword_25A0A68;
        }
        if (byte_25A0A7F >= 0) {
          std::string::size_type v34 = byte_25A0A7F;
        }
        else {
          std::string::size_type v34 = qword_25A0A70;
        }
        uint64_t v35 = std::string::append(&v53, v33, v34);
        long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
        v54.__r_.__value_.__r.__words[2] = v35->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v54.__r_.__value_.__l.__data_ = v36;
        v35->__r_.__value_.__l.__size_ = 0;
        v35->__r_.__value_.__r.__words[2] = 0;
        v35->__r_.__value_.__r.__words[0] = 0;
        int v37 = (char)a3[23];
        if (v37 >= 0) {
          long long v38 = (const std::string::value_type *)a3;
        }
        else {
          long long v38 = *(const std::string::value_type **)a3;
        }
        if (v37 >= 0) {
          std::string::size_type v39 = a3[23];
        }
        else {
          std::string::size_type v39 = *((void *)a3 + 1);
        }
        long long v40 = std::string::append(&v54, v38, v39);
        long long v41 = *(_OWORD *)&v40->__r_.__value_.__l.__data_;
        v55.__r_.__value_.__r.__words[2] = v40->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v55.__r_.__value_.__l.__data_ = v41;
        v40->__r_.__value_.__l.__size_ = 0;
        v40->__r_.__value_.__r.__words[2] = 0;
        v40->__r_.__value_.__r.__words[0] = 0;
        if (byte_25A0A97 >= 0) {
          uint64_t v42 = (const std::string::value_type *)&qword_25A0A80;
        }
        else {
          uint64_t v42 = (const std::string::value_type *)qword_25A0A80;
        }
        if (byte_25A0A97 >= 0) {
          std::string::size_type v43 = byte_25A0A97;
        }
        else {
          std::string::size_type v43 = unk_25A0A88;
        }
        uint64_t v44 = std::string::append(&v55, v42, v43);
        long long v45 = *(_OWORD *)&v44->__r_.__value_.__l.__data_;
        *(void *)(v48 + 16) = *((void *)&v44->__r_.__value_.__l + 2);
        *(_OWORD *)uint64_t v48 = v45;
        v44->__r_.__value_.__l.__size_ = 0;
        v44->__r_.__value_.__r.__words[2] = 0;
        v44->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0)
        {
          operator delete(v55.__r_.__value_.__l.__data_);
          if ((SHIBYTE(v54.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_68:
            if ((SHIBYTE(v53.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
              goto LABEL_69;
            }
            goto LABEL_77;
          }
        }
        else if ((SHIBYTE(v54.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
          goto LABEL_68;
        }
        operator delete(v54.__r_.__value_.__l.__data_);
        if ((SHIBYTE(v53.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_69:
          if (((char)v50 & 0x80000000) == 0) {
            goto LABEL_70;
          }
          goto LABEL_78;
        }
LABEL_77:
        operator delete(v53.__r_.__value_.__l.__data_);
        if (((char)v50 & 0x80000000) == 0)
        {
LABEL_70:
          if ((SHIBYTE(v52.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
            goto LABEL_71;
          }
          goto LABEL_79;
        }
LABEL_78:
        operator delete(__p[0]);
        if ((SHIBYTE(v52.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_71:
          if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
            return;
          }
LABEL_80:
          operator delete(__dst.__r_.__value_.__l.__data_);
          return;
        }
LABEL_79:
        operator delete(v52.__r_.__value_.__l.__data_);
        if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          return;
        }
        goto LABEL_80;
      }
    }
    else
    {
      memset(&__dst, 0, sizeof(__dst));
      p_dst = &__dst;
      *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v17 + v10;
      if (!v17) {
        goto LABEL_31;
      }
    }
    if (v16 >= 0) {
      int v22 = &qword_25A0A68;
    }
    else {
      int v22 = (uint64_t *)qword_25A0A68;
    }
    memmove(p_dst, v22, v17);
    goto LABEL_31;
  }
LABEL_73:
  if (*(char *)(a1 + 23) < 0)
  {
    std::string v46 = *(void **)a1;
    unint64_t v47 = *(void *)(a1 + 8);
    sub_4200((unsigned char *)a4, v46, v47);
  }
  else
  {
    *(_OWORD *)a4 = *(_OWORD *)a1;
    *(void *)(a4 + 16) = *(void *)(a1 + 16);
  }
}

void sub_6FCA50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  if (*(char *)(v42 - 89) < 0)
  {
    operator delete(*(void **)(v42 - 112));
    if ((a42 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a35 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((a42 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((a35 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a16 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a30);
  if ((a16 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a28 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
LABEL_11:
  operator delete(a11);
  if ((a28 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a22 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(a23);
  if ((a22 & 0x80000000) == 0) {
LABEL_7:
  }
    _Unwind_Resume(exception_object);
LABEL_13:
  operator delete(a17);
  _Unwind_Resume(exception_object);
}

void sub_6FCB3C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1 + 32;
  if (sub_6F2FD8(a1 + 32))
  {
    int v5 = *(_DWORD *)(a1 + 60);
    switch(v5)
    {
      case 3:
        sub_6FC060((char *)v4, (uint64_t)&v10);
        break;
      case 2:
        sub_6FBDD4((char *)v4, (uint64_t)&v10);
        break;
      case 0:
        if (*(char *)(a1 + 55) < 0)
        {
          uint64_t v8 = *(void **)(a1 + 32);
          unint64_t v9 = *(void *)(a1 + 40);
          sub_4200((unsigned char *)a2, v8, v9);
        }
        else
        {
          *(_OWORD *)a2 = *(_OWORD *)v4;
          *(void *)(a2 + 16) = *(void *)(v4 + 16);
        }
        return;
      default:
        sub_6FB9D4(v4, (uint64_t)&v10);
        break;
    }
    v13[0] = *(void *)v11;
    *(void *)((char *)v13 + 7) = *(void *)&v11[7];
    char v6 = v12;
    uint64_t v7 = v13[0];
    *(void *)a2 = v10;
    *(void *)(a2 + 8) = v7;
    *(void *)(a2 + 15) = *(void *)((char *)v13 + 7);
    *(unsigned char *)(a2 + 23) = v6;
    return;
  }

  sub_6FB9D4(a1 + 128, a2);
}

double sub_6FCCC0()
{
  strcpy(&byte_25A09EF, "\n\x1B\\toi=orth\\"");
  strcpy((char *)&xmmword_25A09D8, "\x1B\\toi=lhp\\"");
  byte_25A0A07 = 11;
  *(void *)&xmmword_25A0A08 = operator new(0x19uLL);
  long long v280 = xmmword_20B9250;
  *(long long *)((char *)&xmmword_25A0A08 + 8) = xmmword_20B9250;
  strcpy((char *)xmmword_25A0A08, "\x1B\\toi=x-sampa-internal\\"");
  byte_25A0A37 = 13;
  strcpy((char *)&xmmword_25A0A20, "\x1B\\tn=address\\"");
  strcpy(&byte_25A0A4F, "\t\x1B\\tn=normal\\"");
  strcpy((char *)&xmmword_25A0A38, "\x1B\\tn=nav\\"");
  byte_25A0A67 = 12;
  byte_25A0A7F = 7;
  strcpy((char *)&qword_25A0A68, "\x1B\\lang=");
  byte_25A0A97 = 1;
  LOWORD(qword_25A0A80) = 92;
  byte_25A0AAF = 4;
  strcpy((char *)&qword_25A0A98, "DEV:");
  byte_25A0AC7 = 8;
  strcpy((char *)&qword_25A0AB0, "Continue");
  byte_25A0ADF = 11;
  strcpy((char *)&qword_25A0AC8, "Start_Route");
  byte_25A0AF7 = 14;
  strcpy((char *)&qword_25A0AE0, "Continue_Route");
  byte_25A0B0F = 12;
  strcpy((char *)&qword_25A0AF8, "Resume_Route");
  byte_25A0B27 = 18;
  strcpy((char *)&xmmword_25A0B10, "Start_Route_U_Turn");
  byte_25A0B3F = 7;
  strcpy((char *)&dword_25A0B28, "_U_Turn");
  qword_25A0B50 = 0x1300000000000000;
  qmemcpy(&unk_25A0B58, "Continue_Route", 14);
  qword_25A0B40 = *(void *)"Resume_Route";
  unk_25A0B48 = 0x545F555F6574756FLL;
  unk_25A0B4F = 1852994900;
  qword_25A0B68 = 0x1500000000000000;
  strcpy(byte_25A0B70, "Left_Turn");
  unk_25A0B66 = 1415533919;
  *(_DWORD *)((char *)&qword_25A0B68 + 1) = 1852994900;
  strcpy(&byte_25A0B87, "\tRight_Turn");
  strcpy(&byte_25A0B9F, "\nLeft_Turn_At_End");
  byte_25A0BB7 = 16;
  byte_25A0BCF = 17;
  strcpy((char *)&xmmword_25A0BB8, "Right_Turn_At_End");
  byte_25A0BE7 = 15;
  strcpy((char *)&qword_25A0BD0, "Sharp_Left_Turn");
  byte_25A0BFF = 16;
  strcpy((char *)&xmmword_25A0BE8, "Sharp_Right_Turn");
  byte_25A0C17 = 16;
  strcpy((char *)&xmmword_25A0C00, "Slight_Left_Turn");
  byte_25A0C2F = 17;
  strcpy((char *)&xmmword_25A0C18, "Slight_Right_Turn");
  strcpy(&byte_25A0C47, "\tKeep_Right");
  strcpy((char *)&qword_25A0C30, "Keep_Left");
  strcpy(&byte_25A0C5F, "\nU_Turn");
  byte_25A0C77 = 6;
  byte_25A0C8F = 14;
  strcpy((char *)&qword_25A0C78, "Walking_U_Turn");
  byte_25A0CA7 = 20;
  strcpy((char *)&xmmword_25A0C90, "U_Turn_When_Possible");
  byte_25A0CBF = 20;
  strcpy((char *)&xmmword_25A0CA8, "U_Turn_At_Roundabout");
  byte_25A0CD7 = 11;
  strcpy((char *)&qword_25A0CC0, "Enter_Ferry");
  strcpy(&byte_25A0CEF, "\nChange_Ferry");
  strcpy((char *)&qword_25A0CD8, "Exit_Ferry");
  byte_25A0D07 = 12;
  byte_25A0D1F = 21;
  strcpy((char *)&xmmword_25A0D08, "Enter_Railway_Shuttle");
  byte_25A0D37 = 20;
  strcpy((char *)&xmmword_25A0D20, "Exit_Railway_Shuttle");
  strcpy((char *)&xmmword_25A0D38, "Change_Railway_Shuttle");
  strcpy((char *)&xmmword_25A0D50, "End_Of_Navigation");
  strcpy((char *)&xmmword_25A0D68, "End_Of_Navigation");
  strcpy((char *)&qword_25A0D80, "Destination");
  strcpy((char *)&xmmword_25A0D98, "Destination_On_left");
  strcpy((char *)&xmmword_25A0E70, "Waypoint_Stop_On_Left");
  strcpy((char *)&xmmword_25A0E88, "Waypoint_Stop_On_Right");
  strcpy((char *)&xmmword_25A0DB0, "Destination_On_Right");
  byte_25A0D4F = 22;
  byte_25A0D67 = 17;
  byte_25A0D7F = 17;
  byte_25A0D97 = 11;
  byte_25A0DAF = 19;
  byte_25A0DC7 = 20;
  strcpy((char *)&xmmword_25A0DF8, "First_Stop_On_Right");
  strcpy(&byte_25A0DDF, "\nFirst_Stop_On_left");
  *(void *)&v268[0] = *(void *)"First_Stop";
  strcpy((char *)&qword_25A0DC8, "First_Stop");
  byte_25A0DF7 = 18;
  byte_25A0E0F = 19;
  strcpy(&byte_25A0E27, "\tNext_Stop_On_left");
  strcpy((char *)&xmmword_25A0EB8, "Enter_Roundabout");
  strcpy((char *)&qword_25A0E58, "Waypoint_Stop");
  strcpy((char *)&qword_25A0EA0, "Roundabout_");
  *(void *)&v264[48] = *(void *)"Next_Stop";
  strcpy((char *)&qword_25A0E10, "Next_Stop");
  byte_25A0E3F = 17;
  byte_25A0E57 = 18;
  strcpy((char *)&xmmword_25A0E40, "Next_Stop_On_Right");
  byte_25A0E6F = 13;
  byte_25A0E87 = 21;
  byte_25A0E9F = 22;
  byte_25A0EB7 = 11;
  byte_25A0ECF = 16;
  qword_25A0ED0 = (uint64_t)operator new(0x20uLL);
  long long v279 = xmmword_20B91C0;
  unk_25A0ED8 = xmmword_20B91C0;
  strcpy((char *)qword_25A0ED0, "Walking_Enter_Roundabout");
  byte_25A0EFF = 16;
  strcpy((char *)&xmmword_25A0EE8, "Leave_Roundabout");
  byte_25A0F17 = 21;
  strcpy((char *)&xmmword_25A0F00, "Roundabout_First_Exit");
  byte_25A0F2F = 22;
  strcpy((char *)&xmmword_25A0F18, "Roundabout_Second_Exit");
  byte_25A0F47 = 21;
  strcpy((char *)&xmmword_25A0F30, "Roundabout_Third_Exit");
  strcpy((char *)&xmmword_25A0F48, "Roundabout_Fourth_Exit");
  HIBYTE(word_25A0F5E) = 22;
  byte_25A0F77 = 21;
  strcpy((char *)&xmmword_25A0F60, "Roundabout_Fifth_Exit");
  byte_25A0F8F = 21;
  strcpy((char *)&xmmword_25A0F78, "Roundabout_Sixth_Exit");
  qword_25A0F90 = (uint64_t)operator new(0x19uLL);
  unk_25A0F98 = xmmword_20B9250;
  strcpy((char *)qword_25A0F90, "Roundabout_Seventh_Exit");
  strcpy((char *)&xmmword_25A0FA8, "Roundabout_Eighth_Exit");
  HIBYTE(word_25A0FBE) = 22;
  byte_25A0FD7 = 21;
  strcpy((char *)&xmmword_25A0FC0, "Roundabout_Ninth_Exit");
  byte_25A0FEF = 21;
  strcpy((char *)&xmmword_25A0FD8, "Roundabout_Tenth_Exit");
  qword_25A0FF0 = (uint64_t)operator new(0x20uLL);
  unk_25A0FF8 = xmmword_20B91C0;
  strcpy((char *)qword_25A0FF0, "Roundabout_Eleventh_Exit");
  qword_25A1008 = (uint64_t)operator new(0x19uLL);
  xmmword_25A1010 = xmmword_20B9250;
  strcpy((char *)qword_25A1008, "Roundabout_Twelfth_Exit");
  qword_25A1020 = (uint64_t)operator new(0x20uLL);
  long long v276 = xmmword_20B5EB0;
  unk_25A1028 = xmmword_20B5EB0;
  strcpy((char *)qword_25A1020, "Roundabout_Thirteenth_Exit");
  qword_25A1038 = (uint64_t)operator new(0x20uLL);
  xmmword_25A1040 = xmmword_20B5EB0;
  strcpy((char *)qword_25A1038, "Roundabout_Fourteenth_Exit");
  qword_25A1050 = (uint64_t)operator new(0x20uLL);
  long long v278 = xmmword_20B8870;
  unk_25A1058 = xmmword_20B8870;
  strcpy((char *)qword_25A1050, "Roundabout_Fifteenth_Exit");
  qword_25A1068 = (uint64_t)operator new(0x20uLL);
  xmmword_25A1070 = xmmword_20B8870;
  strcpy((char *)qword_25A1068, "Roundabout_Sixteenth_Exit");
  qword_25A1080 = (uint64_t)operator new(0x20uLL);
  long long v273 = xmmword_20B91A0;
  unk_25A1088 = xmmword_20B91A0;
  strcpy((char *)qword_25A1080, "Roundabout_Seventeenth_Exit");
  qword_25A1098 = (uint64_t)operator new(0x20uLL);
  xmmword_25A10A0 = xmmword_20B5EB0;
  strcpy((char *)qword_25A1098, "Roundabout_Eighteenth_Exit");
  qword_25A10B0 = (uint64_t)operator new(0x20uLL);
  unk_25A10B8 = xmmword_20B5EB0;
  strcpy((char *)qword_25A10B0, "Roundabout_Nineteenth_Exit");
  byte_25A10DF = 8;
  strcpy((char *)&qword_25A10C8, "Off_Ramp");
  byte_25A10F7 = 16;
  strcpy((char *)&xmmword_25A10E0, "Off_Ramp_On_Left");
  byte_25A110F = 17;
  strcpy((char *)&xmmword_25A10F8, "Off_Ramp_On_Right");
  byte_25A1127 = 14;
  strcpy((char *)&qword_25A1110, "Change_Highway");
  strcpy((char *)&xmmword_25A1128, "Change_Highway_On_Left");
  HIBYTE(word_25A113E) = 22;
  qword_25A1140 = (uint64_t)operator new(0x19uLL);
  unk_25A1148 = xmmword_20B9250;
  strcpy((char *)qword_25A1140, "Change_Highway_On_Right");
  byte_25A116F = 5;
  dword_25A1158 = 1735550285;
  byte_25A115C = 101;
  byte_25A115D = 0;
  byte_25A1187 = 12;
  strcpy((char *)&qword_25A1170, "Enter_Detour");
  byte_25A119F = 11;
  strcpy((char *)&qword_25A1188, "Exit_Detour");
  byte_25A11B7 = 18;
  strcpy((char *)&xmmword_25A11A0, "Walking_Turnaround");
  qword_25A11B8 = (uint64_t)operator new(0x19uLL);
  xmmword_25A11C0 = xmmword_20B9250;
  strcpy((char *)qword_25A11B8, "Walking_Turnaround_Sign");
  byte_25A11E7 = 19;
  strcpy((char *)&xmmword_25A11D0, "Distance_Title_List");
  qword_25A11E8 = (uint64_t)operator new(0x19uLL);
  xmmword_25A11F0 = xmmword_20B9250;
  long long v270 = *(_OWORD *)"Cross_The_Street_Spoken";
  strcpy((char *)qword_25A11E8, "Cross_The_Street_Spoken");
  *(void *)&v268[1] = *(void *)"t_Spoken";
  byte_25A1217 = 19;
  strcpy((char *)&xmmword_25A1200, "Arrival_Charge_List");
  byte_25A122F = 15;
  strcpy((char *)&qword_25A1218, "Charge_At_Start");
  strcpy(&byte_25A1247, "\tPass_Street");
  strcpy((char *)&qword_25A1230, "Pass_Exit");
  byte_25A125F = 11;
  byte_25A1277 = 17;
  strcpy((char *)&xmmword_25A1260, "Pass_Intersection");
  strcpy(&byte_25A128F, "\t_PrevExitNumber");
  strcpy((char *)&qword_25A1278, "Next_Exit");
  byte_25A12A7 = 15;
  strcpy(&byte_25A12BF, "\t_PrevUTurn");
  strcpy((char *)&qword_25A12A8, "_PrevRoad");
  strcpy(&byte_25A12D7, "\nNext_");
  byte_25A12EF = 5;
  byte_25A1307 = 15;
  strcpy((char *)&qword_25A12F0, "_At_Next_Street");
  byte_25A131F = 21;
  strcpy((char *)&xmmword_25A1308, "_At_Next_Intersection");
  byte_25A1337 = 14;
  strcpy((char *)&qword_25A1320, "Charge_Station");
  byte_25A134F = 15;
  strcpy((char *)&qword_25A1338, "_Charge_Station");
  BYTE1(qword_25A1360) = 0;
  WORD1(qword_25A1360) = 25856;
  HIDWORD(qword_25A1360) = 335544320;
  strcpy((char *)&qword_25A1350, "_Charge_Station_");
  byte_25A137F = 8;
  strcpy((char *)&qword_25A1368, "_Minimum");
  byte_25A1397 = 15;
  strcpy((char *)&qword_25A1380, "ExitShield_Sign");
  byte_25A13AF = 8;
  strcpy((char *)&qword_25A1398, "Walking_");
  byte_25A13C7 = 16;
  strcpy((char *)&xmmword_25A13B0, "Walking_Continue");
  byte_25A13DF = 19;
  strcpy((char *)&xmmword_25A13C8, "Walking_Start_Route");
  qword_25A13E0 = (uint64_t)operator new(0x20uLL);
  unk_25A13E8 = xmmword_20B5EB0;
  strcpy((char *)qword_25A13E0, "Walking_Start_Route_U_Turn");
  byte_25A140F = 17;
  strcpy((char *)&xmmword_25A13F8, "Walking_Left_Turn");
  byte_25A1427 = 18;
  strcpy((char *)&xmmword_25A1410, "Walking_Right_Turn");
  qword_25A1428 = (uint64_t)operator new(0x20uLL);
  xmmword_25A1430 = xmmword_20B5EB0;
  strcpy((char *)qword_25A1428, "Walking_Turn_At_Roundabout");
  qword_25A1440 = (uint64_t)operator new(0x20uLL);
  long long v277 = xmmword_20B91B0;
  unk_25A1448 = xmmword_20B91B0;
  strcpy((char *)qword_25A1440, "Walking_U_Turn_When_Possible");
  qword_25A1458 = (uint64_t)operator new(0x28uLL);
  long long v269 = xmmword_20B9390;
  xmmword_25A1460 = xmmword_20B9390;
  strcpy((char *)qword_25A1458, "Walking_Roundabout_Exit_Continue");
  qword_25A1470 = (uint64_t)operator new(0x20uLL);
  unk_25A1478 = xmmword_20B91B0;
  strcpy((char *)qword_25A1470, "Walking_Roundabout_Exit_Left");
  qword_25A1488 = (uint64_t)operator new(0x20uLL);
  long long v275 = xmmword_20B8890;
  xmmword_25A1490 = xmmword_20B8890;
  strcpy((char *)qword_25A1488, "Walking_Roundabout_Exit_Right");
  qword_25A14A0 = (uint64_t)operator new(0x20uLL);
  unk_25A14A8 = xmmword_20B8870;
  strcpy((char *)qword_25A14A0, "Walking_End_Of_Navigation");
  long long v272 = *(_OWORD *)"nd_Of_Navigation";
  uint64_t v0 = (char *)operator new(0x20uLL);
  qword_25A14B8 = (uint64_t)v0;
  xmmword_25A14C0 = xmmword_20B8870;
  *(_OWORD *)uint64_t v0 = *(_OWORD *)"Walking_End_Of_Navigation";
  *(_OWORD *)(v0 + 9) = v272;
  v0[25] = 0;
  byte_25A14E7 = 8;
  strcpy((char *)&qword_25A14D0, "Walking_");
  qword_25A14E8 = (uint64_t)operator new(0x19uLL);
  xmmword_25A14F0 = v280;
  strcpy((char *)qword_25A14E8, "Walking_Sharp_Left_Turn");
  qword_25A1500 = (uint64_t)operator new(0x20uLL);
  unk_25A1508 = v279;
  strcpy((char *)qword_25A1500, "Walking_Sharp_Right_Turn");
  qword_25A1518 = (uint64_t)operator new(0x20uLL);
  xmmword_25A1520 = v279;
  strcpy((char *)qword_25A1518, "Walking_Slight_Left_Turn");
  qword_25A1530 = (uint64_t)operator new(0x20uLL);
  unk_25A1538 = v278;
  strcpy((char *)qword_25A1530, "Walking_Slight_Right_Turn");
  byte_25A155F = 4;
  strcpy((char *)&dword_25A1548, "Exit");
  byte_25A1577 = 4;
  strcpy((char *)&dword_25A1560, "Road");
  byte_25A158F = 7;
  strcpy((char *)&dword_25A1578, "Freeway");
  byte_25A15A7 = 12;
  strcpy((char *)&qword_25A1590, "Intersection");
  byte_25A15BF = 5;
  strcpy((char *)&dword_25A15A8, "Ferry");
  byte_25A15D7 = 11;
  strcpy((char *)&qword_25A15C0, "ShuttleName");
  byte_25A15EF = 5;
  strcpy((char *)&dword_25A15D8, "Road1");
  strcpy(&byte_25A1607, "\tName");
  strcpy((char *)&qword_25A15F0, "Signpost1");
  byte_25A161F = 4;
  byte_25A1637 = 7;
  strcpy((char *)&dword_25A1620, "Address");
  byte_25A164F = 7;
  strcpy((char *)&dword_25A1638, "Shield1");
  byte_25A1667 = 13;
  strcpy((char *)&qword_25A1650, "TowardShield1");
  byte_25A167F = 6;
  strcpy((char *)&dword_25A1668, "Right_");
  byte_25A1697 = 5;
  strcpy((char *)&dword_25A1680, "Left_");
  strcpy(&byte_25A16AF, "\tOn_Left_");
  strcpy((char *)&qword_25A1698, "On_Right_");
  byte_25A16C7 = 8;
  byte_25A16DF = 12;
  strcpy((char *)&qword_25A16C8, "ElevatorName");
  byte_25A16F7 = 13;
  strcpy((char *)&qword_25A16E0, "EscalatorName");
  strcpy(&byte_25A170F, "\nBridgeName");
  strcpy((char *)&qword_25A16F8, "StairsName");
  strcpy(&byte_25A1727, "\nTunnelName");
  strcpy(&byte_25A173F, "\nParking");
  byte_25A1757 = 7;
  strcpy(&byte_25A176F, "\t_Escalator");
  strcpy((char *)&qword_25A1758, "_Elevator");
  strcpy(&byte_25A1787, "\n_ElevatorName");
  byte_25A179F = 13;
  byte_25A17B7 = 14;
  strcpy((char *)&qword_25A17A0, "_EscalatorName");
  byte_25A17CF = 5;
  strcpy((char *)&qword_25A17B8, "_Road");
  byte_25A17E7 = 8;
  strcpy((char *)&qword_25A17D0, "_Freeway");
  byte_25A17FF = 13;
  strcpy((char *)&qword_25A17E8, "_Intersection");
  byte_25A1817 = 6;
  strcpy((char *)&dword_25A1800, "_Road1");
  byte_25A182F = 6;
  strcpy((char *)&dword_25A1818, "_Road2");
  strcpy(&byte_25A1847, "\n_Signpost2");
  strcpy((char *)&qword_25A1830, "_Signpost1");
  strcpy(&byte_25A185F, "\n_Ferry");
  byte_25A1877 = 6;
  byte_25A188F = 12;
  strcpy((char *)&qword_25A1878, "_Ferry_Ferry");
  byte_25A18A7 = 12;
  strcpy((char *)&qword_25A1890, "_ShuttleName");
  qword_25A18A8 = (uint64_t)operator new(0x20uLL);
  xmmword_25A18B0 = v277;
  strcpy((char *)qword_25A18A8, "_Railway_Shuttle_ShuttleName");
  byte_25A18D7 = 11;
  strcpy((char *)&qword_25A18C0, "_ExitNumber");
  byte_25A18EF = 5;
  dword_25A18D8 = 1769489759;
  byte_25A18DC = 116;
  byte_25A18DD = 0;
  byte_25A1907 = 7;
  strcpy((char *)&dword_25A18F0, "_StayOn");
  byte_25A191F = 7;
  strcpy((char *)&dword_25A1908, "_Stairs");
  byte_25A1937 = 5;
  strcpy((char *)&dword_25A1920, "_Ramp");
  byte_25A194F = 11;
  strcpy((char *)&qword_25A1938, "_StairsName");
  strcpy(&byte_25A1967, "\t_Down");
  strcpy((char *)&qword_25A1950, "_RampName");
  byte_25A197F = 5;
  byte_25A1997 = 3;
  dword_25A1980 = 7361887;
  byte_25A19AF = 7;
  strcpy((char *)&dword_25A1998, "_Bridge");
  byte_25A19C7 = 7;
  strcpy((char *)&dword_25A19B0, "_Tunnel");
  byte_25A19DF = 11;
  strcpy((char *)&qword_25A19C8, "_Roundabout");
  byte_25A19F7 = 6;
  strcpy((char *)&dword_25A19E0, "_Cross");
  byte_25A1A0F = 8;
  strcpy((char *)&qword_25A19F8, "_Parking");
  byte_25A1A27 = 8;
  strcpy((char *)&qword_25A1A10, "_Shield1");
  byte_25A1A3F = 14;
  strcpy((char *)&qword_25A1A28, "_TowardShield1");
  byte_25A1A57 = 8;
  strcpy((char *)&qword_25A1A40, "_Shield2");
  byte_25A1A6F = 14;
  strcpy((char *)&qword_25A1A58, "_TowardShield2");
  byte_25A1A87 = 11;
  strcpy((char *)&qword_25A1A70, "_Direction1");
  byte_25A1A9F = 11;
  strcpy((char *)&qword_25A1A88, "_Direction2");
  strcpy(&byte_25A1AB7, "\n_TowardDirection1");
  strcpy((char *)&qword_25A1AA0, "Direction1");
  byte_25A1ACF = 17;
  byte_25A1AE7 = 17;
  strcpy((char *)&xmmword_25A1AD0, "_TowardDirection2");
  byte_25A1AFF = 16;
  strcpy((char *)&xmmword_25A1AE8, "TowardDirection1");
  byte_25A1B17 = 7;
  strcpy((char *)&qword_25A1B00, "_Spoken");
  byte_25A1B2F = 5;
  strcpy((char *)&qword_25A1B18, "_Sign");
  byte_25A1B47 = 15;
  strcpy((char *)&qword_25A1B30, "_Secondary_Sign");
  byte_25A1B5F = 5;
  byte_25A1B4C = 116;
  dword_25A1B48 = 1936280671;
  byte_25A1B4D = 0;
  byte_25A1B77 = 8;
  strcpy((char *)&qword_25A1B60, "_Primary");
  qword_25A1B88 = 0xF00000000000000;
  strcpy(byte_25A1B90, "_Secondary");
  strcpy((char *)&qword_25A1B78, "_Spoken_Primary");
  strcpy(&byte_25A1BA7, "\n_Secondary");
  strcpy(&byte_25A1BBF, "\n_Spoken_Secondar");
  BYTE1(qword_25A1BD0) = 0;
  WORD1(qword_25A1BD0) = 0;
  HIDWORD(qword_25A1BD0) = 285212672;
  byte_25A1BEF = 13;
  strcpy((char *)&qword_25A1BD8, "_To_Secondary");
  BYTE1(qword_25A1C00) = 0;
  WORD1(qword_25A1C00) = 0;
  HIDWORD(qword_25A1C00) = 335544320;
  strcpy((char *)&dword_25A1BF0, "_Spoken_To_Secon");
  strcpy(&byte_25A1C1F, "\t_ValidDistance");
  strcpy((char *)&qword_25A1C08, "_Distance");
  byte_25A1C37 = 14;
  byte_25A1C4F = 6;
  strcpy((char *)&dword_25A1C38, "_Short");
  byte_25A1C67 = 1;
  word_25A1C50 = 95;
  qword_25A1C68 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_25A1C70 = v279;
  strcpy((char *)qword_25A1C68, "Concatenate_Newline_Sign");
  uint64_t v1 = (char *)operator new(0x19uLL);
  qword_25A1C80 = (uint64_t)v1;
  xmmword_25A1C88 = v280;
  *(_OWORD *)uint64_t v1 = v270;
  uint64_t v2 = *(void *)&v268[1];
  *(void *)(v1 + 15) = *(void *)&v268[1];
  v1[23] = 0;
  byte_25A1CAF = 12;
  strcpy((char *)&qword_25A1C98, "Chain_Spoken");
  byte_25A1CC7 = 15;
  strcpy((char *)&qword_25A1CB0, "Chain_To_Spoken");
  strcpy(&byte_25A1CDF, "\nThen_Spoken");
  strcpy((char *)&qword_25A1CC8, "And_Spoken");
  byte_25A1CF7 = 11;
  byte_25A1D0F = 18;
  strcpy((char *)&xmmword_25A1CF8, "Concatenate_Spoken");
  qword_25A1D10 = (uint64_t)operator new(0x28uLL);
  long long v267 = xmmword_20B9240;
  xmmword_25A1D18 = xmmword_20B9240;
  strcpy((char *)qword_25A1D10, "At_Traffic_Light_Chain_Spoken_Primary");
  qword_25A1D28 = (uint64_t)operator new(0x28uLL);
  v268[2] = xmmword_20B9260;
  *(_OWORD *)algn_25A1D30 = xmmword_20B9260;
  strcpy((char *)qword_25A1D28, "At_Stop_Sign_Chain_Spoken_Primary");
  qword_25A1D40 = (uint64_t)operator new(0x40uLL);
  xmmword_25A1D48 = xmmword_20B9A90;
  strcpy((char *)qword_25A1D40, "At_Stop_Sign_Cross_Traffic_Doesnt_Stop_Chain_Spoken_Primary");
  qword_25A1D58 = (uint64_t)operator new(0x30uLL);
  long long v266 = xmmword_20B9A40;
  unk_25A1D60 = xmmword_20B9A40;
  strcpy((char *)qword_25A1D58, "At_Next_Traffic_Light_Chain_Spoken_Primary");
  qword_25A1D70 = (uint64_t)operator new(0x28uLL);
  long long v265 = xmmword_20E12D0;
  xmmword_25A1D78 = xmmword_20E12D0;
  strcpy((char *)qword_25A1D70, "At_Next_Stop_Sign_Chain_Spoken_Primary");
  qword_25A1D88 = (uint64_t)operator new(0x28uLL);
  long long v274 = xmmword_20B9960;
  *(_OWORD *)algn_25A1D90 = xmmword_20B9960;
  strcpy((char *)qword_25A1D88, "At_Traffic_Light_Chain_Spoken_Secondary");
  qword_25A1DA0 = (uint64_t)operator new(0x28uLL);
  xmmword_25A1DA8 = xmmword_20B93A0;
  strcpy((char *)qword_25A1DA0, "At_Stop_Sign_Chain_Spoken_Secondary");
  qword_25A1DB8 = (uint64_t)operator new(0x30uLL);
  long long v272 = xmmword_20E1380;
  unk_25A1DC0 = xmmword_20E1380;
  strcpy((char *)qword_25A1DB8, "At_Next_Traffic_Light_Chain_Spoken_Secondary");
  qword_25A1DD0 = (uint64_t)operator new(0x30uLL);
  xmmword_25A1DD8 = xmmword_20B93C0;
  strcpy((char *)qword_25A1DD0, "At_Next_Stop_Sign_Chain_Spoken_Secondary");
  qword_25A1DE8 = (uint64_t)operator new(0x38uLL);
  *(_OWORD *)algn_25A1DF0 = xmmword_20B9A60;
  strcpy((char *)qword_25A1DE8, "At_Next_One_Traffic_Light_Chain_Spoken_Secondary");
  qword_25A1E00 = (uint64_t)operator new(0x30uLL);
  xmmword_25A1E08 = xmmword_20E1380;
  strcpy((char *)qword_25A1E00, "At_Next_One_Stop_Sign_Chain_Spoken_Secondary");
  qword_25A1E18 = (uint64_t)operator new(0x28uLL);
  unk_25A1E20 = xmmword_20B9960;
  strcpy((char *)qword_25A1E18, "At_Mini_Roundabout_Chain_Spoken_Primary");
  qword_25A1E30 = (uint64_t)operator new(0x30uLL);
  long long v271 = xmmword_20B93D0;
  xmmword_25A1E38 = xmmword_20B93D0;
  strcpy((char *)qword_25A1E30, "At_Mini_Roundabout_Chain_Spoken_Secondary");
  qword_25A1E48 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_25A1E50 = v275;
  strcpy((char *)qword_25A1E48, "Walking_Distance_Chain_Spoken");
  qword_25A1E60 = (uint64_t)operator new(0x20uLL);
  xmmword_25A1E68 = v275;
  strcpy((char *)qword_25A1E60, "Walking_Continue_Chain_Spoken");
  int v3 = (char *)operator new(0x19uLL);
  qword_25A1E78 = (uint64_t)v3;
  unk_25A1E80 = v280;
  *(_OWORD *)int v3 = v270;
  *(void *)(v3 + 15) = v2;
  v3[23] = 0;
  qword_25A1E90 = (uint64_t)operator new(0x28uLL);
  xmmword_25A1E98 = v269;
  strcpy((char *)qword_25A1E90, "Distance_Cross_The_Street_Spoken");
  byte_25A1EBF = 22;
  strcpy((char *)&xmmword_25A1EA8, "Walking_Continue_Cross");
  byte_25A1ED7 = 14;
  strcpy((char *)&qword_25A1EC0, "Continue_Cross");
  byte_25A1EEF = 5;
  strcpy((char *)&dword_25A1ED8, "Cross");
  byte_25A1F07 = 19;
  strcpy((char *)&xmmword_25A1EF0, "Cross_Street_Spoken");
  byte_25A1F1F = 17;
  strcpy((char *)&xmmword_25A1F08, "Cross_Road_Spoken");
  byte_25A1F37 = 20;
  strcpy((char *)&xmmword_25A1F20, "Use_Crosswalk_Spoken");
  byte_25A1F4F = 15;
  strcpy((char *)&qword_25A1F38, "Distance_Spoken");
  byte_25A1F67 = 19;
  strcpy((char *)&xmmword_25A1F50, "Distance_And_Spoken");
  byte_25A1F7F = 21;
  strcpy((char *)&xmmword_25A1F68, "Continue_Stage_Spoken");
  byte_25A1F97 = 13;
  qmemcpy(&qword_25A1F80, "ContinueStage", 13);
  int v4 = SHIBYTE(qword_25A1B88);
  if (qword_25A1B88 >= 0) {
    size_t v5 = HIBYTE(qword_25A1B88);
  }
  else {
    size_t v5 = unk_25A1B80;
  }
  unint64_t v6 = v5 + 13;
  byte_25A1F8D = 0;
  if (v5 + 13 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v6 >= 0x17)
  {
    uint64_t v8 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17) {
      uint64_t v8 = v6 | 7;
    }
    uint64_t v9 = v8 + 1;
    uint64_t v10 = operator new(v8 + 1);
    qword_25A1FA0 = v5 + 13;
    unk_25A1FA8 = v9 | 0x8000000000000000;
    qword_25A1F98 = (uint64_t)v10;
    *uint64_t v10 = *(void *)"ContinueStage";
    uint64_t v7 = (char *)v10 + 13;
    *(void *)((char *)v10 + 5) = *(void *)"nueStage";
  }
  else
  {
    BYTE1(qword_25A1FA0) = 0;
    WORD1(qword_25A1FA0) = 0;
    HIDWORD(qword_25A1FA0) = 0;
    unk_25A1FA8 = 0;
    byte_25A1FAF = v5 + 13;
    uint64_t v7 = (char *)&qword_25A1FA0 + 5;
    strcpy((char *)&qword_25A1F98, "Continue");
    if (!v5) {
      goto LABEL_15;
    }
  }
  if (v4 >= 0) {
    uint64_t v11 = &qword_25A1B78;
  }
  else {
    uint64_t v11 = (uint64_t *)qword_25A1B78;
  }
  memmove(v7, v11, v5);
LABEL_15:
  v7[v5] = 0;
  int v12 = byte_25A17CF;
  if (byte_25A17CF >= 0) {
    size_t v13 = byte_25A17CF;
  }
  else {
    size_t v13 = qword_25A17C0;
  }
  unint64_t v14 = v13 + 13;
  if (v13 + 13 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v14 >= 0x17)
  {
    uint64_t v16 = (v14 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v14 | 7) != 0x17) {
      uint64_t v16 = v14 | 7;
    }
    uint64_t v17 = v16 + 1;
    unint64_t v18 = operator new(v16 + 1);
    __dst.__r_.__value_.__l.__size_ = v13 + 13;
    __dst.__r_.__value_.__r.__words[2] = v17 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v18;
    *unint64_t v18 = qword_25A1F80;
    *(void *)((char *)v18 + 5) = *(uint64_t *)((char *)&qword_25A1F80 + 5);
    uint64_t v15 = (char *)v18 + 13;
  }
  else
  {
    *(_OWORD *)&__dst.__r_.__value_.__r.__words[1] = 0uLL;
    *(std::string::size_type *)((char *)__dst.__r_.__value_.__r.__words + 5) = *(uint64_t *)((char *)&qword_25A1F80 + 5);
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v13 + 13;
    __dst.__r_.__value_.__r.__words[0] = qword_25A1F80;
    uint64_t v15 = &__dst.__r_.__value_.__s.__data_[13];
    if (!v13) {
      goto LABEL_29;
    }
  }
  if (v12 >= 0) {
    int v19 = &qword_25A17B8;
  }
  else {
    int v19 = (uint64_t *)qword_25A17B8;
  }
  memmove(v15, v19, v13);
LABEL_29:
  v15[v13] = 0;
  if (v4 >= 0) {
    uint64_t v20 = (const std::string::value_type *)&qword_25A1B78;
  }
  else {
    uint64_t v20 = (const std::string::value_type *)qword_25A1B78;
  }
  uint64_t v21 = std::string::append(&__dst, v20, v5);
  long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  qword_25A1FC0 = v21->__r_.__value_.__r.__words[2];
  xmmword_25A1FB0 = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  byte_25A1FDF = 5;
  strcpy((char *)&dword_25A1FC8, "Merge");
  qword_25A1FE0 = (uint64_t)operator new(0x20uLL);
  v268[1] = xmmword_20B8E90;
  unk_25A1FE8 = xmmword_20B8E90;
  strcpy((char *)qword_25A1FE0, "Continue_Freeway_Spoken_Primary");
  byte_25A200F = 8;
  strcpy((char *)&qword_25A1FF8, "Starting");
  byte_25A2027 = 14;
  strcpy((char *)&qword_25A2010, "Starting_Route");
  byte_25A203F = 14;
  strcpy((char *)&qword_25A2028, "Resuming_Route");
  byte_25A2057 = 16;
  strcpy((char *)&xmmword_25A2040, "Continuing_Route");
  byte_25A206F = 9;
  word_25A2060 = 112;
  qword_25A2058 = *(void *)&v264[48];
  strcpy(&byte_25A2087, "\nEnding");
  strcpy((char *)&word_25A2078, "op");
  qword_25A2070 = *(void *)&v268[0];
  byte_25A209F = 6;
  strcpy((char *)&qword_25A20A0, "_Destination");
  byte_25A20B7 = 12;
  byte_25A20CF = 15;
  strcpy((char *)&qword_25A20B8, "_At_Destination");
  std::operator+<char>();
  qword_25A20E8 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_25A20F0 = v279;
  strcpy((char *)qword_25A20E8, "Spoken_Ending_At_Parking");
  qword_25A2100 = (uint64_t)operator new(0x20uLL);
  v268[0] = xmmword_20B9800;
  xmmword_25A2108 = xmmword_20B9800;
  strcpy((char *)qword_25A2100, "Spoken_Pre_Arrival_Destination");
  strcpy((char *)&xmmword_25A2118, "Sign_Ending_At_Parking");
  HIBYTE(word_25A212E) = 22;
  byte_25A2147 = 4;
  strcpy((char *)&dword_25A2130, "Home");
  byte_25A215F = 4;
  strcpy((char *)&dword_25A2148, "Work");
  byte_25A2177 = 8;
  strcpy((char *)&qword_25A2160, "Business");
  byte_25A218F = 4;
  strcpy((char *)&dword_25A2178, "Name");
  byte_25A21A7 = 13;
  strcpy((char *)&qword_25A2190, "Other_Contact");
  byte_25A21BF = 11;
  strcpy((char *)&qword_25A21A8, "ContactHome");
  byte_25A21D7 = 11;
  *(_DWORD *)((char *)&qword_25A21C0 + 7) = 1802661719;
  byte_25A21EF = 7;
  *(int *)((char *)&dword_25A21D8 + 3) = 1936942450;
  dword_25A21D8 = 1919181889;
  strcpy((char *)&xmmword_25A21F0, "Discoverability_Prompt");
  HIBYTE(word_25A2206) = 22;
  byte_25A221F = 6;
  dword_25A2208 = 1634878303;
  word_25A220C = 26739;
  byte_25A2237 = 8;
  qword_25A2220 = 0x697269535F6F4E5FLL;
  byte_25A224F = 9;
  strcpy((char *)&qword_25A2238, "_CityName");
  byte_25A2267 = 8;
  qword_25A2250 = 0x636972656E65475FLL;
  int v23 = byte_25A200F;
  if (byte_25A200F >= 0) {
    size_t v24 = byte_25A200F;
  }
  else {
    size_t v24 = qword_25A2000;
  }
  LODWORD(v270) = byte_25A134F;
  if (byte_25A134F >= 0) {
    size_t v25 = byte_25A134F;
  }
  else {
    size_t v25 = unk_25A1340;
  }
  qword_25A21C0 = *(void *)"ContactWork";
  byte_25A21CB = 0;
  byte_25A21DF = 0;
  byte_25A220E = 0;
  byte_25A2228 = 0;
  byte_25A2258 = 0;
  unint64_t v26 = v25 + v24;
  if (v25 + v24 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  *(void *)v264 = *(void *)"ContactWork";
  *(void *)&v264[16] = *(void *)"ContactHome";
  *(void *)&v264[32] = *(void *)"_Contact";
  *(void *)&v264[48] = *(void *)"Other_Contact";
  if (v26 <= 0x16)
  {
    uint64_t v27 = &qword_25A2268;
    qword_25A2270 = 0;
    unk_25A2278 = 0;
    qword_25A2268 = 0;
    byte_25A227F = v25 + v24;
    if (!v24) {
      goto LABEL_47;
    }
    goto LABEL_43;
  }
  uint64_t v90 = (v26 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v26 | 7) != 0x17) {
    uint64_t v90 = v26 | 7;
  }
  uint64_t v91 = v90 + 1;
  uint64_t v27 = (uint64_t *)operator new(v90 + 1);
  qword_25A2270 = v25 + v24;
  unk_25A2278 = v91 | 0x8000000000000000;
  qword_25A2268 = (uint64_t)v27;
  if (v24)
  {
LABEL_43:
    if (v23 >= 0) {
      long long v28 = &qword_25A1FF8;
    }
    else {
      long long v28 = (uint64_t *)qword_25A1FF8;
    }
    memmove(v27, v28, v24);
  }
LABEL_47:
  unint64_t v29 = (char *)v27 + v24;
  if (v25)
  {
    if ((int)v270 >= 0) {
      std::string::size_type v30 = &qword_25A1338;
    }
    else {
      std::string::size_type v30 = (uint64_t *)qword_25A1338;
    }
    memmove(v29, v30, v25);
  }
  v29[v25] = 0;
  int v31 = byte_25A20B7;
  if (byte_25A20B7 >= 0) {
    size_t v32 = byte_25A20B7;
  }
  else {
    size_t v32 = qword_25A20A8;
  }
  unint64_t v33 = v32 + v24;
  if (v32 + v24 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v33 <= 0x16)
  {
    std::string::size_type v34 = &qword_25A2280;
    qword_25A2288 = 0;
    unk_25A2290 = 0;
    qword_25A2280 = 0;
    byte_25A2297 = v32 + v24;
    if (!v24) {
      goto LABEL_62;
    }
    goto LABEL_58;
  }
  uint64_t v92 = (v33 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v33 | 7) != 0x17) {
    uint64_t v92 = v33 | 7;
  }
  uint64_t v93 = v92 + 1;
  std::string::size_type v34 = (uint64_t *)operator new(v92 + 1);
  qword_25A2288 = v32 + v24;
  unk_25A2290 = v93 | 0x8000000000000000;
  qword_25A2280 = (uint64_t)v34;
  if (v24)
  {
LABEL_58:
    if (v23 >= 0) {
      uint64_t v35 = &qword_25A1FF8;
    }
    else {
      uint64_t v35 = (uint64_t *)qword_25A1FF8;
    }
    memmove(v34, v35, v24);
  }
LABEL_62:
  long long v36 = (char *)v34 + v24;
  if (v32)
  {
    if (v31 >= 0) {
      int v37 = &qword_25A20A0;
    }
    else {
      int v37 = (uint64_t *)qword_25A20A0;
    }
    memmove(v36, v37, v32);
  }
  v36[v32] = 0;
  qword_25A2298 = (uint64_t)operator new(0x19uLL);
  unk_25A22A0 = v280;
  strcpy((char *)qword_25A2298, "{ChargeStationCityName}");
  if (v33 < 0x17)
  {
    long long v38 = &qword_25A22B0;
    qword_25A22B8 = 0;
    unk_25A22C0 = 0;
    qword_25A22B0 = 0;
    byte_25A22C7 = v32 + v24;
    if (!v24) {
      goto LABEL_73;
    }
    goto LABEL_69;
  }
  uint64_t v94 = (v33 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v33 | 7) != 0x17) {
    uint64_t v94 = v33 | 7;
  }
  uint64_t v95 = v94 + 1;
  long long v38 = (uint64_t *)operator new(v94 + 1);
  qword_25A22B8 = v32 + v24;
  unk_25A22C0 = v95 | 0x8000000000000000;
  qword_25A22B0 = (uint64_t)v38;
  if (v24)
  {
LABEL_69:
    if (v23 >= 0) {
      std::string::size_type v39 = &qword_25A1FF8;
    }
    else {
      std::string::size_type v39 = (uint64_t *)qword_25A1FF8;
    }
    memmove(v38, v39, v24);
  }
LABEL_73:
  long long v40 = (char *)v38 + v24;
  if (v32)
  {
    if (v31 >= 0) {
      long long v41 = &qword_25A20A0;
    }
    else {
      long long v41 = (uint64_t *)qword_25A20A0;
    }
    memmove(v40, v41, v32);
  }
  v40[v32] = 0;
  strcpy((char *)&xmmword_25A22C8, "{NewBatteryPercentage}");
  HIBYTE(word_25A22DE) = 22;
  qword_25A22E0 = (uint64_t)operator new(0x20uLL);
  xmmword_25A22E8 = v273;
  strcpy((char *)qword_25A22E0, "{OriginalBatteryPercentage}");
  byte_25A230F = 19;
  strcpy((char *)&xmmword_25A22F8, "_Arrival_Percentage");
  int v42 = byte_25A209F;
  if (byte_25A209F >= 0) {
    size_t v43 = byte_25A209F;
  }
  else {
    size_t v43 = qword_25A2090;
  }
  unint64_t v44 = v43 + v25;
  if (v43 + v25 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v44 <= 0x16)
  {
    memset(&__dst, 0, sizeof(__dst));
    p_dst = (char *)&__dst;
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v43 + v25;
    if (!v43) {
      goto LABEL_88;
    }
    goto LABEL_84;
  }
  uint64_t v96 = (v44 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v44 | 7) != 0x17) {
    uint64_t v96 = v44 | 7;
  }
  uint64_t v97 = v96 + 1;
  p_dst = (char *)operator new(v96 + 1);
  __dst.__r_.__value_.__l.__size_ = v43 + v25;
  __dst.__r_.__value_.__r.__words[2] = v97 | 0x8000000000000000;
  __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
  if (v43)
  {
LABEL_84:
    if (v42 >= 0) {
      std::string v46 = &qword_25A2088;
    }
    else {
      std::string v46 = (uint64_t *)qword_25A2088;
    }
    memmove(p_dst, v46, v43);
  }
LABEL_88:
  unint64_t v47 = &p_dst[v43];
  if (v25)
  {
    if ((int)v270 >= 0) {
      uint64_t v48 = &qword_25A1338;
    }
    else {
      uint64_t v48 = (uint64_t *)qword_25A1338;
    }
    memmove(v47, v48, v25);
  }
  v47[v25] = 0;
  std::string v49 = std::string::append(&__dst, "_Percentage");
  long long v50 = *(_OWORD *)&v49->__r_.__value_.__l.__data_;
  qword_25A2320 = v49->__r_.__value_.__r.__words[2];
  xmmword_25A2310 = v50;
  v49->__r_.__value_.__l.__size_ = 0;
  v49->__r_.__value_.__r.__words[2] = 0;
  v49->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  int v51 = byte_25A209F;
  if (byte_25A209F >= 0) {
    size_t v52 = byte_25A209F;
  }
  else {
    size_t v52 = qword_25A2090;
  }
  int v53 = byte_25A134F;
  if (byte_25A134F >= 0) {
    size_t v54 = byte_25A134F;
  }
  else {
    size_t v54 = unk_25A1340;
  }
  unint64_t v55 = v54 + v52;
  if (v54 + v52 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v55 <= 0x16)
  {
    memset(&v281, 0, sizeof(v281));
    uint64_t v56 = (char *)&v281;
    *((unsigned char *)&v281.__r_.__value_.__s + 23) = v54 + v52;
    if (!v52) {
      goto LABEL_108;
    }
    goto LABEL_104;
  }
  uint64_t v98 = (v55 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v55 | 7) != 0x17) {
    uint64_t v98 = v55 | 7;
  }
  uint64_t v99 = v98 + 1;
  uint64_t v56 = (char *)operator new(v98 + 1);
  v281.__r_.__value_.__l.__size_ = v54 + v52;
  v281.__r_.__value_.__r.__words[2] = v99 | 0x8000000000000000;
  v281.__r_.__value_.__r.__words[0] = (std::string::size_type)v56;
  if (v52)
  {
LABEL_104:
    if (v51 >= 0) {
      char v57 = &qword_25A2088;
    }
    else {
      char v57 = (uint64_t *)qword_25A2088;
    }
    memmove(v56, v57, v52);
  }
LABEL_108:
  uint64_t v58 = &v56[v52];
  if (v54)
  {
    if (v53 >= 0) {
      char v59 = &qword_25A1338;
    }
    else {
      char v59 = (uint64_t *)qword_25A1338;
    }
    memmove(v58, v59, v54);
  }
  v58[v54] = 0;
  if (byte_25A137F >= 0) {
    long long v60 = (const std::string::value_type *)&qword_25A1368;
  }
  else {
    long long v60 = (const std::string::value_type *)qword_25A1368;
  }
  if (byte_25A137F >= 0) {
    std::string::size_type v61 = byte_25A137F;
  }
  else {
    std::string::size_type v61 = *(void *)&byte_25A1370;
  }
  char v62 = std::string::append(&v281, v60, v61);
  long long v63 = *(_OWORD *)&v62->__r_.__value_.__l.__data_;
  __dst.__r_.__value_.__r.__words[2] = v62->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v63;
  v62->__r_.__value_.__l.__size_ = 0;
  v62->__r_.__value_.__r.__words[2] = 0;
  v62->__r_.__value_.__r.__words[0] = 0;
  uint64_t v64 = std::string::append(&__dst, "_Percentage");
  long long v65 = *(_OWORD *)&v64->__r_.__value_.__l.__data_;
  qword_25A2338 = v64->__r_.__value_.__r.__words[2];
  xmmword_25A2328 = v65;
  v64->__r_.__value_.__l.__size_ = 0;
  v64->__r_.__value_.__r.__words[2] = 0;
  v64->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__dst.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v281.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_121;
    }
  }
  else if ((SHIBYTE(v281.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_121;
  }
  operator delete(v281.__r_.__value_.__l.__data_);
LABEL_121:
  int v66 = byte_25A209F;
  if (byte_25A209F >= 0) {
    size_t v67 = byte_25A209F;
  }
  else {
    size_t v67 = qword_25A2090;
  }
  int v68 = byte_25A134F;
  if (byte_25A134F >= 0) {
    size_t v69 = byte_25A134F;
  }
  else {
    size_t v69 = unk_25A1340;
  }
  unint64_t v70 = v69 + v67;
  if (v69 + v67 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v70 <= 0x16)
  {
    memset(&__dst, 0, sizeof(__dst));
    __int16 v71 = (char *)&__dst;
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v69 + v67;
    if (!v67) {
      goto LABEL_134;
    }
    goto LABEL_130;
  }
  uint64_t v100 = (v70 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v70 | 7) != 0x17) {
    uint64_t v100 = v70 | 7;
  }
  uint64_t v101 = v100 + 1;
  __int16 v71 = (char *)operator new(v100 + 1);
  __dst.__r_.__value_.__l.__size_ = v69 + v67;
  __dst.__r_.__value_.__r.__words[2] = v101 | 0x8000000000000000;
  __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v71;
  if (v67)
  {
LABEL_130:
    if (v66 >= 0) {
      uint64_t v72 = &qword_25A2088;
    }
    else {
      uint64_t v72 = (uint64_t *)qword_25A2088;
    }
    memmove(v71, v72, v67);
  }
LABEL_134:
  uint64_t v73 = &v71[v67];
  if (v69)
  {
    if (v68 >= 0) {
      unsigned int v74 = &qword_25A1338;
    }
    else {
      unsigned int v74 = (uint64_t *)qword_25A1338;
    }
    memmove(v73, v74, v69);
  }
  v73[v69] = 0;
  int64_t v75 = std::string::append(&__dst, "_Duration");
  long long v76 = *(_OWORD *)&v75->__r_.__value_.__l.__data_;
  qword_25A2350 = v75->__r_.__value_.__r.__words[2];
  xmmword_25A2340 = v76;
  v75->__r_.__value_.__l.__size_ = 0;
  v75->__r_.__value_.__r.__words[2] = 0;
  v75->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  int v77 = byte_25A209F;
  if (byte_25A209F >= 0) {
    size_t v78 = byte_25A209F;
  }
  else {
    size_t v78 = qword_25A2090;
  }
  int v79 = byte_25A134F;
  if (byte_25A134F >= 0) {
    size_t v80 = byte_25A134F;
  }
  else {
    size_t v80 = unk_25A1340;
  }
  unint64_t v81 = v80 + v78;
  if (v80 + v78 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v81 <= 0x16)
  {
    qword_25A2360 = 0;
    unk_25A2368 = 0;
    qword_25A2358 = 0;
    unsigned int v82 = &qword_25A2358;
    byte_25A236F = v80 + v78;
    if (!v78) {
      goto LABEL_154;
    }
    goto LABEL_150;
  }
  uint64_t v102 = (v81 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v81 | 7) != 0x17) {
    uint64_t v102 = v81 | 7;
  }
  uint64_t v103 = v102 + 1;
  unsigned int v82 = (uint64_t *)operator new(v102 + 1);
  qword_25A2360 = v80 + v78;
  unk_25A2368 = v103 | 0x8000000000000000;
  qword_25A2358 = (uint64_t)v82;
  if (v78)
  {
LABEL_150:
    if (v77 >= 0) {
      int v83 = &qword_25A2088;
    }
    else {
      int v83 = (uint64_t *)qword_25A2088;
    }
    memmove(v82, v83, v78);
  }
LABEL_154:
  unsigned int v84 = (char *)v82 + v78;
  if (v80)
  {
    if (v79 >= 0) {
      unint64_t v85 = &qword_25A1338;
    }
    else {
      unint64_t v85 = (uint64_t *)qword_25A1338;
    }
    memmove(v84, v85, v80);
  }
  v84[v80] = 0;
  int v86 = byte_25A236F;
  if (byte_25A236F >= 0) {
    size_t v87 = byte_25A236F;
  }
  else {
    size_t v87 = qword_25A2360;
  }
  unint64_t v88 = v87 + 5;
  if (v87 + 5 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v88 >= 0x17)
  {
    uint64_t v104 = (v88 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v88 | 7) != 0x17) {
      uint64_t v104 = v88 | 7;
    }
    uint64_t v105 = v104 + 1;
    double v89 = (uint64_t *)operator new(v104 + 1);
    qword_25A2378 = v87 + 5;
    unk_25A2380 = v105 | 0x8000000000000000;
    qword_25A2370 = (uint64_t)v89;
  }
  else
  {
    double v89 = &qword_25A2370;
    qword_25A2378 = 0;
    unk_25A2380 = 0;
    qword_25A2370 = 0;
    byte_25A2387 = v87 + 5;
    if (!v87) {
      goto LABEL_201;
    }
  }
  if (v86 >= 0) {
    uint64_t v106 = &qword_25A2358;
  }
  else {
    uint64_t v106 = (uint64_t *)qword_25A2358;
  }
  memmove(v89, v106, v87);
LABEL_201:
  strcpy((char *)v89 + v87, "_Name");
  int v107 = byte_25A209F;
  if (byte_25A209F >= 0) {
    size_t v108 = byte_25A209F;
  }
  else {
    size_t v108 = qword_25A2090;
  }
  int v109 = byte_25A134F;
  if (byte_25A134F >= 0) {
    size_t v110 = byte_25A134F;
  }
  else {
    size_t v110 = unk_25A1340;
  }
  unint64_t v111 = v110 + v108;
  if (v110 + v108 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v111 <= 0x16)
  {
    memset(&__dst, 0, sizeof(__dst));
    uint64_t v112 = (char *)&__dst;
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v110 + v108;
    if (!v108) {
      goto LABEL_214;
    }
    goto LABEL_210;
  }
  uint64_t v122 = (v111 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v111 | 7) != 0x17) {
    uint64_t v122 = v111 | 7;
  }
  uint64_t v123 = v122 + 1;
  uint64_t v112 = (char *)operator new(v122 + 1);
  __dst.__r_.__value_.__l.__size_ = v110 + v108;
  __dst.__r_.__value_.__r.__words[2] = v123 | 0x8000000000000000;
  __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v112;
  if (v108)
  {
LABEL_210:
    if (v107 >= 0) {
      int v113 = &qword_25A2088;
    }
    else {
      int v113 = (uint64_t *)qword_25A2088;
    }
    memmove(v112, v113, v108);
  }
LABEL_214:
  uint64_t v114 = &v112[v108];
  if (v110)
  {
    if (v109 >= 0) {
      double v115 = &qword_25A1338;
    }
    else {
      double v115 = (uint64_t *)qword_25A1338;
    }
    memmove(v114, v115, v110);
  }
  v114[v110] = 0;
  uint64_t v116 = std::string::append(&__dst, "_Connector_Type");
  long long v117 = *(_OWORD *)&v116->__r_.__value_.__l.__data_;
  qword_25A2398 = v116->__r_.__value_.__r.__words[2];
  xmmword_25A2388 = v117;
  v116->__r_.__value_.__l.__size_ = 0;
  v116->__r_.__value_.__r.__words[2] = 0;
  v116->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  int v118 = SHIBYTE(qword_25A2398);
  if (qword_25A2398 >= 0) {
    size_t v119 = HIBYTE(qword_25A2398);
  }
  else {
    size_t v119 = *((void *)&xmmword_25A2388 + 1);
  }
  unint64_t v120 = v119 + 6;
  if (v119 + 6 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v120 >= 0x17)
  {
    uint64_t v124 = (v120 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v120 | 7) != 0x17) {
      uint64_t v124 = v120 | 7;
    }
    uint64_t v125 = v124 + 1;
    int v121 = (uint64_t *)operator new(v124 + 1);
    qword_25A23A8 = v119 + 6;
    unk_25A23B0 = v125 | 0x8000000000000000;
    qword_25A23A0 = (uint64_t)v121;
  }
  else
  {
    int v121 = &qword_25A23A0;
    qword_25A23A8 = 0;
    unk_25A23B0 = 0;
    qword_25A23A0 = 0;
    byte_25A23B7 = v119 + 6;
    if (!v119) {
      goto LABEL_239;
    }
  }
  if (v118 >= 0) {
    double v126 = &xmmword_25A2388;
  }
  else {
    double v126 = (long long *)xmmword_25A2388;
  }
  memmove(v121, v126, v119);
LABEL_239:
  strcpy((char *)v121 + v119, "_Power");
  int v127 = byte_25A209F;
  if (byte_25A209F >= 0) {
    size_t v128 = byte_25A209F;
  }
  else {
    size_t v128 = qword_25A2090;
  }
  int v129 = byte_25A134F;
  if (byte_25A134F >= 0) {
    size_t v130 = byte_25A134F;
  }
  else {
    size_t v130 = unk_25A1340;
  }
  unint64_t v131 = v130 + v128;
  if (v130 + v128 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v131 <= 0x16)
  {
    memset(&__dst, 0, sizeof(__dst));
    unsigned int v132 = (char *)&__dst;
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v130 + v128;
    if (!v128) {
      goto LABEL_252;
    }
    goto LABEL_248;
  }
  uint64_t v161 = (v131 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v131 | 7) != 0x17) {
    uint64_t v161 = v131 | 7;
  }
  uint64_t v162 = v161 + 1;
  unsigned int v132 = (char *)operator new(v161 + 1);
  __dst.__r_.__value_.__l.__size_ = v130 + v128;
  __dst.__r_.__value_.__r.__words[2] = v162 | 0x8000000000000000;
  __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v132;
  if (v128)
  {
LABEL_248:
    if (v127 >= 0) {
      uint64_t v133 = &qword_25A2088;
    }
    else {
      uint64_t v133 = (uint64_t *)qword_25A2088;
    }
    memmove(v132, v133, v128);
  }
LABEL_252:
  uint64_t v134 = &v132[v128];
  if (v130)
  {
    if (v129 >= 0) {
      uint64_t v135 = &qword_25A1338;
    }
    else {
      uint64_t v135 = (uint64_t *)qword_25A1338;
    }
    memmove(v134, v135, v130);
  }
  v134[v130] = 0;
  if (byte_25A1B17 >= 0) {
    int v136 = (const std::string::value_type *)&qword_25A1B00;
  }
  else {
    int v136 = (const std::string::value_type *)qword_25A1B00;
  }
  if (byte_25A1B17 >= 0) {
    std::string::size_type v137 = byte_25A1B17;
  }
  else {
    std::string::size_type v137 = unk_25A1B08;
  }
  int v138 = std::string::append(&__dst, v136, v137);
  long long v139 = *(_OWORD *)&v138->__r_.__value_.__l.__data_;
  qword_25A23C8 = v138->__r_.__value_.__r.__words[2];
  xmmword_25A23B8 = v139;
  v138->__r_.__value_.__l.__size_ = 0;
  v138->__r_.__value_.__r.__words[2] = 0;
  v138->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  int v140 = byte_25A209F;
  if (byte_25A209F >= 0) {
    size_t v141 = byte_25A209F;
  }
  else {
    size_t v141 = qword_25A2090;
  }
  int v142 = byte_25A134F;
  if (byte_25A134F >= 0) {
    size_t v143 = byte_25A134F;
  }
  else {
    size_t v143 = unk_25A1340;
  }
  unint64_t v144 = v143 + v141;
  if (v143 + v141 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v144 <= 0x16)
  {
    memset(&v281, 0, sizeof(v281));
    double v145 = (char *)&v281;
    *((unsigned char *)&v281.__r_.__value_.__s + 23) = v143 + v141;
    if (!v141) {
      goto LABEL_278;
    }
    goto LABEL_274;
  }
  uint64_t v163 = (v144 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v144 | 7) != 0x17) {
    uint64_t v163 = v144 | 7;
  }
  uint64_t v164 = v163 + 1;
  double v145 = (char *)operator new(v163 + 1);
  v281.__r_.__value_.__l.__size_ = v143 + v141;
  v281.__r_.__value_.__r.__words[2] = v164 | 0x8000000000000000;
  v281.__r_.__value_.__r.__words[0] = (std::string::size_type)v145;
  if (v141)
  {
LABEL_274:
    if (v140 >= 0) {
      double v146 = &qword_25A2088;
    }
    else {
      double v146 = (uint64_t *)qword_25A2088;
    }
    memmove(v145, v146, v141);
  }
LABEL_278:
  uint64_t v147 = &v145[v141];
  if (v143)
  {
    if (v142 >= 0) {
      uint64_t v148 = &qword_25A1338;
    }
    else {
      uint64_t v148 = (uint64_t *)qword_25A1338;
    }
    memmove(v147, v148, v143);
  }
  v147[v143] = 0;
  if (byte_25A137F >= 0) {
    double v149 = (const std::string::value_type *)&qword_25A1368;
  }
  else {
    double v149 = (const std::string::value_type *)qword_25A1368;
  }
  if (byte_25A137F >= 0) {
    std::string::size_type v150 = byte_25A137F;
  }
  else {
    std::string::size_type v150 = *(void *)&byte_25A1370;
  }
  uint64_t v151 = std::string::append(&v281, v149, v150);
  long long v152 = *(_OWORD *)&v151->__r_.__value_.__l.__data_;
  __dst.__r_.__value_.__r.__words[2] = v151->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v152;
  v151->__r_.__value_.__l.__size_ = 0;
  v151->__r_.__value_.__r.__words[2] = 0;
  v151->__r_.__value_.__r.__words[0] = 0;
  if (byte_25A1B17 >= 0) {
    double v153 = (const std::string::value_type *)&qword_25A1B00;
  }
  else {
    double v153 = (const std::string::value_type *)qword_25A1B00;
  }
  if (byte_25A1B17 >= 0) {
    std::string::size_type v154 = byte_25A1B17;
  }
  else {
    std::string::size_type v154 = unk_25A1B08;
  }
  uint64_t v155 = std::string::append(&__dst, v153, v154);
  long long v156 = *(_OWORD *)&v155->__r_.__value_.__l.__data_;
  qword_25A23E0 = v155->__r_.__value_.__r.__words[2];
  xmmword_25A23D0 = v156;
  v155->__r_.__value_.__l.__size_ = 0;
  v155->__r_.__value_.__r.__words[2] = 0;
  v155->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__dst.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v281.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_297;
    }
  }
  else if ((SHIBYTE(v281.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_297;
  }
  operator delete(v281.__r_.__value_.__l.__data_);
LABEL_297:
  byte_25A23FF = 16;
  strcpy((char *)&xmmword_25A23E8, "Use_NACS_Adapter");
  byte_25A2417 = 16;
  strcpy(byte_25A2400, "Start_Route_Sign");
  qword_25A2418 = (uint64_t)operator new(0x20uLL);
  unk_25A2420 = v276;
  strcpy((char *)qword_25A2418, "Start_Route_Spoken_Primary");
  int v157 = byte_25A0AAF;
  if (byte_25A0AAF >= 0) {
    size_t v158 = byte_25A0AAF;
  }
  else {
    size_t v158 = qword_25A0AA0;
  }
  unint64_t v159 = v158 + 27;
  if (v158 + 27 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v159 <= 0x16)
  {
    uint64_t v160 = &qword_25A2430;
    qword_25A2438 = 0;
    unk_25A2440 = 0;
    qword_25A2430 = 0;
    byte_25A2447 = v158 + 27;
LABEL_314:
    if (v157 >= 0) {
      int v167 = &qword_25A0A98;
    }
    else {
      int v167 = (uint64_t *)qword_25A0A98;
    }
    memmove(v160, v167, v158);
    goto LABEL_318;
  }
  uint64_t v165 = (v159 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v159 | 7) != 0x17) {
    uint64_t v165 = v159 | 7;
  }
  uint64_t v166 = v165 + 1;
  uint64_t v160 = (uint64_t *)operator new(v165 + 1);
  qword_25A2438 = v158 + 27;
  unk_25A2440 = v166 | 0x8000000000000000;
  qword_25A2430 = (uint64_t)v160;
  if (v158) {
    goto LABEL_314;
  }
LABEL_318:
  strcpy((char *)v160 + v158, "Turn_Around_To_Route_Spoken");
  strcpy(&byte_25A245F, "\t_Two_Lanes");
  strcpy((char *)&qword_25A2448, "_One_Lane");
  strcpy(&byte_25A2477, "\n_Three_Lanes");
  byte_25A248F = 12;
  byte_25A24A7 = 11;
  strcpy((char *)&qword_25A2490, "_Four_Lanes");
  byte_25A24BF = 11;
  strcpy((char *)&qword_25A24A8, "_Five_Lanes");
  strcpy(&byte_25A24D7, "\n_Seven_Lanes");
  strcpy((char *)&qword_25A24C0, "_Six_Lanes");
  byte_25A24EF = 12;
  byte_25A2507 = 12;
  strcpy((char *)&qword_25A24F0, "_Eight_Lanes");
  byte_25A251F = 12;
  strcpy((char *)&qword_25A2508, "_Second_Lane");
  byte_25A2537 = 11;
  strcpy((char *)&qword_25A2520, "_Third_Lane");
  byte_25A254F = 19;
  long long v270 = *(_OWORD *)"_Second_Third_Lanes";
  strcpy((char *)&xmmword_25A2538, "_Second_Third_Lanes");
  byte_25A2567 = 4;
  strcpy((char *)&dword_25A2550, "Left");
  byte_25A257F = 5;
  byte_25A256C = 116;
  dword_25A2568 = 1751607634;
  byte_25A256D = 0;
  byte_25A2597 = 6;
  strcpy((char *)&dword_25A2580, "Middle");
  BYTE1(qword_25A25A8) = 0;
  WORD1(qword_25A25A8) = 0;
  HIDWORD(qword_25A25A8) = 0x10000000;
  strcpy((char *)dword_25A2598, "Left_Second_Lane");
  BYTE1(qword_25A25C0) = 0;
  WORD1(qword_25A25C0) = 0;
  HIDWORD(qword_25A25C0) = 285212672;
  strcpy((char *)&dword_25A25B0, "Right_Second_Lan");
  qword_25A25D8 = 0xF00000000000000;
  strcpy((char *)&dword_25A25C8, "Left_Third_Lane");
  qword_25A25F0 = 0x1000000000000000;
  byte_25A25E4 = 116;
  dword_25A25E0 = 1751607634;
  dword_25A25EC = 1701732684;
  unk_25A25E5 = *(void *)"_Third_Lane";
  v168 = (char *)operator new(0x19uLL);
  qword_25A25F8 = (uint64_t)v168;
  unk_25A2600 = v280;
  *(_DWORD *)v168 = 1952867660;
  strcpy(v168 + 19, "anes");
  *(_OWORD *)(v168 + 4) = v270;
  v169 = (char *)operator new(0x20uLL);
  qword_25A2610 = (uint64_t)v169;
  xmmword_25A2618 = v279;
  *(_DWORD *)v169 = 1751607634;
  v169[4] = 116;
  strcpy(v169 + 20, "anes");
  *(_OWORD *)(v169 + 5) = v270;
  byte_25A263F = 5;
  strcpy((char *)&dword_25A2628, "_Stay");
  byte_25A2657 = 13;
  strcpy((char *)&qword_25A2640, "Continue_Sign");
  byte_25A266F = 8;
  strcpy((char *)&qword_25A2658, "Continue");
  int v170 = byte_25A1B2F;
  if (byte_25A1B2F >= 0) {
    size_t v171 = byte_25A1B2F;
  }
  else {
    size_t v171 = qword_25A1B20;
  }
  unint64_t v172 = v171 + 8;
  if (v171 + 8 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v172 >= 0x17)
  {
    uint64_t v174 = (v172 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v172 | 7) != 0x17) {
      uint64_t v174 = v172 | 7;
    }
    uint64_t v175 = v174 + 1;
    int v176 = operator new(v174 + 1);
    qword_25A2678 = v171 + 8;
    qword_25A2680 = v175 | 0x8000000000000000;
    qword_25A2670 = (uint64_t)v176;
    *int v176 = 0x65756E69746E6F43;
    uint64_t v173 = v176 + 1;
  }
  else
  {
    qword_25A2680 = 0;
    HIBYTE(qword_25A2680) = v171 + 8;
    qword_25A2670 = 0x65756E69746E6F43;
    qword_25A2678 = 0;
    uint64_t v173 = &qword_25A2678;
    if (!v171) {
      goto LABEL_332;
    }
  }
  if (v170 >= 0) {
    v177 = &qword_25A1B18;
  }
  else {
    v177 = (uint64_t *)qword_25A1B18;
  }
  memmove(v173, v177, v171);
LABEL_332:
  *((unsigned char *)v173 + v171) = 0;
  int v178 = SHIBYTE(qword_25A1B88);
  if (qword_25A1B88 >= 0) {
    size_t v179 = HIBYTE(qword_25A1B88);
  }
  else {
    size_t v179 = unk_25A1B80;
  }
  unint64_t v180 = v179 + 8;
  if (v179 + 8 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v180 >= 0x17)
  {
    uint64_t v182 = (v180 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v180 | 7) != 0x17) {
      uint64_t v182 = v180 | 7;
    }
    uint64_t v183 = v182 + 1;
    unsigned int v184 = operator new(v182 + 1);
    qword_25A2690 = v179 + 8;
    qword_25A2698 = v183 | 0x8000000000000000;
    qword_25A2688 = (uint64_t)v184;
    *unsigned int v184 = qword_25A2658;
    __int16 v181 = v184 + 1;
  }
  else
  {
    qword_25A2698 = 0;
    HIBYTE(qword_25A2698) = v179 + 8;
    qword_25A2688 = qword_25A2658;
    qword_25A2690 = 0;
    __int16 v181 = &qword_25A2690;
    if (!v179) {
      goto LABEL_346;
    }
  }
  if (v178 >= 0) {
    unsigned int v185 = &qword_25A1B78;
  }
  else {
    unsigned int v185 = (uint64_t *)qword_25A1B78;
  }
  memmove(v181, v185, v179);
LABEL_346:
  *((unsigned char *)v181 + v179) = 0;
  *((unsigned char *)&__dst.__r_.__value_.__s + 23) = 1;
  LOWORD(__dst.__r_.__value_.__l.__data_) = 83;
  HIBYTE(v284) = 2;
  strcpy((char *)&v283, "SW");
  HIBYTE(v286) = 1;
  LOWORD(v285[0]) = 87;
  HIBYTE(v288) = 2;
  strcpy((char *)&v287, "NW");
  HIBYTE(v290) = 1;
  LOWORD(v289[0]) = 78;
  HIBYTE(v292) = 2;
  strcpy((char *)&v291, "NE");
  HIBYTE(v294) = 1;
  LOWORD(v293) = 69;
  HIBYTE(v296) = 2;
  strcpy((char *)&__p, "SE");
  sub_4BDC0C(qword_25A26A0, (uint64_t)&__dst, 8uLL);
  if (SHIBYTE(v296) < 0)
  {
    operator delete((void *)__p);
    if ((SHIBYTE(v294) & 0x80000000) == 0)
    {
LABEL_348:
      if ((SHIBYTE(v292) & 0x80000000) == 0) {
        goto LABEL_349;
      }
      goto LABEL_383;
    }
  }
  else if ((SHIBYTE(v294) & 0x80000000) == 0)
  {
    goto LABEL_348;
  }
  operator delete((void *)v293);
  if ((SHIBYTE(v292) & 0x80000000) == 0)
  {
LABEL_349:
    if ((SHIBYTE(v290) & 0x80000000) == 0) {
      goto LABEL_350;
    }
    goto LABEL_384;
  }
LABEL_383:
  operator delete((void *)v291);
  if ((SHIBYTE(v290) & 0x80000000) == 0)
  {
LABEL_350:
    if ((SHIBYTE(v288) & 0x80000000) == 0) {
      goto LABEL_351;
    }
    goto LABEL_385;
  }
LABEL_384:
  operator delete(v289[0]);
  if ((SHIBYTE(v288) & 0x80000000) == 0)
  {
LABEL_351:
    if ((SHIBYTE(v286) & 0x80000000) == 0) {
      goto LABEL_352;
    }
    goto LABEL_386;
  }
LABEL_385:
  operator delete((void *)v287);
  if ((SHIBYTE(v286) & 0x80000000) == 0)
  {
LABEL_352:
    if ((SHIBYTE(v284) & 0x80000000) == 0) {
      goto LABEL_353;
    }
LABEL_387:
    operator delete((void *)v283);
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_354;
    }
    goto LABEL_388;
  }
LABEL_386:
  operator delete(v285[0]);
  if (SHIBYTE(v284) < 0) {
    goto LABEL_387;
  }
LABEL_353:
  if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    goto LABEL_354;
  }
LABEL_388:
  operator delete(__dst.__r_.__value_.__l.__data_);
LABEL_354:
  byte_25A26CF = 13;
  strcpy((char *)&qword_25A26B8, "{instruction}");
  byte_25A26E7 = 20;
  strcpy(algn_25A26D0, "{primaryInstruction}");
  strcpy((char *)&xmmword_25A26E8, "{secondaryInstruction}");
  HIBYTE(word_25A26FE) = 22;
  qword_25A2700 = (uint64_t)operator new(0x20uLL);
  unk_25A2708 = v278;
  strcpy((char *)qword_25A2700, "{andSecondaryInstruction}");
  qword_25A2718 = (uint64_t)operator new(0x20uLL);
  unk_25A2720 = v279;
  strcpy((char *)qword_25A2718, "{toSecondaryInstruction}");
  byte_25A2747 = 21;
  strcpy(byte_25A2730, "{continueInstruction}");
  qword_25A2748 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_25A2750 = v276;
  strcpy((char *)qword_25A2748, "{thenSecondaryInstruction}");
  byte_25A2777 = 14;
  strcpy((char *)&qword_25A2760, "{instruction1}");
  byte_25A278F = 14;
  strcpy((char *)&qword_25A2778, "{instruction2}");
  strcpy(&byte_25A27A7, "\n{nextDistance}");
  strcpy((char *)&qword_25A2790, "{distance}");
  byte_25A27BF = 14;
  byte_25A27D7 = 16;
  strcpy(byte_25A27C0, "{valid_distance}");
  strcpy(&byte_25A27EF, "\n{valid_distance}");
  strcpy((char *)&qword_25A27D8, "{distance}");
  byte_25A2807 = 16;
  byte_25A281F = 15;
  strcpy((char *)&qword_25A2808, "{ClimbDistance}");
  byte_25A2837 = 17;
  strcpy(byte_25A2820, "{DescentDistance}");
  byte_25A284F = 13;
  strcpy((char *)&qword_25A2838, "{nonBrkSpace}");
  byte_25A2867 = 9;
  strcpy((char *)&qword_25A2850, "{newLine}");
  byte_25A287F = 6;
  word_25A286C = -24382;
  dword_25A2868 = -1211981630;
  byte_25A286E = 0;
  byte_25A2897 = 2;
  word_25A2880 = -24382;
  byte_25A2882 = 0;
  byte_25A28AF = 1;
  word_25A2898 = 10;
  byte_25A28C7 = 1;
  word_25A28B0 = 32;
  byte_25A28DF = 2;
  strcpy((char *)&word_25A28C8, "\n\n");
  strcpy(&byte_25A28F7, "\t{TowardShield1}");
  strcpy((char *)&qword_25A28E0, "{Shield1}");
  byte_25A290F = 15;
  strcpy(&byte_25A2927, "\t{TowardShield2}");
  strcpy((char *)&qword_25A2910, "{Shield2}");
  byte_25A293F = 15;
  byte_25A2957 = 12;
  strcpy((char *)&qword_25A2940, "{Direction1}");
  byte_25A296F = 12;
  strcpy((char *)&qword_25A2958, "{Direction2}");
  byte_25A2987 = 18;
  strcpy((char *)&xmmword_25A2970, "{TowardDirection1}");
  byte_25A299F = 18;
  strcpy((char *)&xmmword_25A2988, "{TowardDirection2}");
  byte_25A29B7 = 7;
  strcpy((char *)&dword_25A29A0, "{Icon1}");
  byte_25A29D7 = 7;
  strcpy((char *)&dword_25A29C0, "{Icon2}");
  byte_25A29D8[23] = 14;
  strcpy(byte_25A29D8, "{Intersection}");
  byte_25A2A07 = 6;
  strcpy((char *)&xmmword_25A29F0, "{Road}");
  byte_25A2A1F = 7;
  strcpy((char *)&dword_25A2A08, "{Road1}");
  byte_25A2A37 = 7;
  strcpy((char *)&xmmword_25A2A20, "{Road2}");
  strcpy(&byte_25A2A4F, "\n{Freeway}");
  strcpy((char *)&qword_25A2A38, "{Elevator}");
  strcpy(&byte_25A2A67, "\t{Ferry}");
  byte_25A2A7F = 7;
  byte_25A2A97 = 13;
  strcpy((char *)&xmmword_25A2A80, "{ShuttleName}");
  byte_25A2AAF = 11;
  strcpy((char *)&qword_25A2A98, "{Signpost1}");
  byte_25A2AC7 = 11;
  strcpy((char *)&xmmword_25A2AB0, "{Signpost2}");
  byte_25A2ADF = 12;
  strcpy((char *)&xmmword_25A2AC8, "{ExitNumber}");
  strcpy(&byte_25A2AF7, "\t{Name}");
  strcpy((char *)&xmmword_25A2AE0, "{Address}");
  byte_25A2B0F = 6;
  byte_25A2B27 = 11;
  strcpy((char *)&xmmword_25A2B10, "{PlaceName}");
  byte_25A2B3F = 14;
  strcpy((char *)&xmmword_25A2B28, "{ElevatorName}");
  byte_25A2B57 = 15;
  strcpy((char *)&xmmword_25A2B40, "{EscalatorName}");
  byte_25A2B6F = 12;
  strcpy((char *)&xmmword_25A2B58, "{StairsName}");
  strcpy(&byte_25A2B87, "\n{BridgeName}");
  strcpy((char *)&xmmword_25A2B70, "{RampName}");
  byte_25A2B9F = 12;
  byte_25A2BB7 = 12;
  strcpy((char *)&xmmword_25A2BA0, "{TunnelName}");
  byte_25A2BCF = 13;
  strcpy((char *)&xmmword_25A2BB8, "{CustomLabel}");
  std::string __dst = *(std::string *)byte_25A29D8;
  long long v283 = xmmword_25A29F0;
  uint64_t v284 = unk_25A2A00;
  *(_OWORD *)v285 = *(_OWORD *)&dword_25A2A08;
  uint64_t v286 = unk_25A2A18;
  long long v287 = xmmword_25A2A20;
  uint64_t v288 = unk_25A2A30;
  *(_OWORD *)v289 = *(_OWORD *)&qword_25A2A38;
  uint64_t v290 = unk_25A2A48;
  uint64_t v292 = unk_25A2A60;
  long long v291 = xmmword_25A2A50;
  long long v293 = *(_OWORD *)&dword_25A2A68;
  uint64_t v294 = unk_25A2A78;
  uint64_t v296 = unk_25A2A90;
  long long __p = xmmword_25A2A80;
  long long v297 = *(_OWORD *)&qword_25A2A98;
  uint64_t v298 = unk_25A2AA8;
  uint64_t v300 = unk_25A2AC0;
  long long v299 = xmmword_25A2AB0;
  long long v301 = xmmword_25A2AC8;
  long long v303 = xmmword_25A2AE0;
  uint64_t v302 = unk_25A2AD8;
  uint64_t v304 = unk_25A2AF0;
  long long v305 = xmmword_25A2AF8;
  long long v307 = xmmword_25A2B10;
  uint64_t v306 = unk_25A2B08;
  uint64_t v308 = unk_25A2B20;
  long long v309 = xmmword_25A2B28;
  long long v311 = xmmword_25A2B40;
  uint64_t v310 = unk_25A2B38;
  uint64_t v312 = unk_25A2B50;
  long long v313 = xmmword_25A2B58;
  long long v315 = xmmword_25A2B70;
  uint64_t v314 = unk_25A2B68;
  uint64_t v316 = unk_25A2B80;
  long long v317 = xmmword_25A2B88;
  long long v319 = xmmword_25A2BA0;
  uint64_t v318 = unk_25A2B98;
  uint64_t v320 = unk_25A2BB0;
  uint64_t v322 = unk_25A2BC8;
  long long v321 = xmmword_25A2BB8;
  sub_4BDC0C(qword_25A2BD0, (uint64_t)&__dst, 0x15uLL);
  if (SHIBYTE(v322) < 0)
  {
    operator delete((void *)v321);
    if ((SHIBYTE(v320) & 0x80000000) == 0)
    {
LABEL_356:
      if ((SHIBYTE(v318) & 0x80000000) == 0) {
        goto LABEL_357;
      }
      goto LABEL_391;
    }
  }
  else if ((SHIBYTE(v320) & 0x80000000) == 0)
  {
    goto LABEL_356;
  }
  operator delete((void *)v319);
  if ((SHIBYTE(v318) & 0x80000000) == 0)
  {
LABEL_357:
    if ((SHIBYTE(v316) & 0x80000000) == 0) {
      goto LABEL_358;
    }
    goto LABEL_392;
  }
LABEL_391:
  operator delete((void *)v317);
  if ((SHIBYTE(v316) & 0x80000000) == 0)
  {
LABEL_358:
    if ((SHIBYTE(v314) & 0x80000000) == 0) {
      goto LABEL_359;
    }
    goto LABEL_393;
  }
LABEL_392:
  operator delete((void *)v315);
  if ((SHIBYTE(v314) & 0x80000000) == 0)
  {
LABEL_359:
    if ((SHIBYTE(v312) & 0x80000000) == 0) {
      goto LABEL_360;
    }
    goto LABEL_394;
  }
LABEL_393:
  operator delete((void *)v313);
  if ((SHIBYTE(v312) & 0x80000000) == 0)
  {
LABEL_360:
    if ((SHIBYTE(v310) & 0x80000000) == 0) {
      goto LABEL_361;
    }
    goto LABEL_395;
  }
LABEL_394:
  operator delete((void *)v311);
  if ((SHIBYTE(v310) & 0x80000000) == 0)
  {
LABEL_361:
    if ((SHIBYTE(v308) & 0x80000000) == 0) {
      goto LABEL_362;
    }
    goto LABEL_396;
  }
LABEL_395:
  operator delete((void *)v309);
  if ((SHIBYTE(v308) & 0x80000000) == 0)
  {
LABEL_362:
    if ((SHIBYTE(v306) & 0x80000000) == 0) {
      goto LABEL_363;
    }
    goto LABEL_397;
  }
LABEL_396:
  operator delete((void *)v307);
  if ((SHIBYTE(v306) & 0x80000000) == 0)
  {
LABEL_363:
    if ((SHIBYTE(v304) & 0x80000000) == 0) {
      goto LABEL_364;
    }
    goto LABEL_398;
  }
LABEL_397:
  operator delete((void *)v305);
  if ((SHIBYTE(v304) & 0x80000000) == 0)
  {
LABEL_364:
    if ((SHIBYTE(v302) & 0x80000000) == 0) {
      goto LABEL_365;
    }
    goto LABEL_399;
  }
LABEL_398:
  operator delete((void *)v303);
  if ((SHIBYTE(v302) & 0x80000000) == 0)
  {
LABEL_365:
    if ((SHIBYTE(v300) & 0x80000000) == 0) {
      goto LABEL_366;
    }
    goto LABEL_400;
  }
LABEL_399:
  operator delete((void *)v301);
  if ((SHIBYTE(v300) & 0x80000000) == 0)
  {
LABEL_366:
    if ((SHIBYTE(v298) & 0x80000000) == 0) {
      goto LABEL_367;
    }
    goto LABEL_401;
  }
LABEL_400:
  operator delete((void *)v299);
  if ((SHIBYTE(v298) & 0x80000000) == 0)
  {
LABEL_367:
    if ((SHIBYTE(v296) & 0x80000000) == 0) {
      goto LABEL_368;
    }
    goto LABEL_402;
  }
LABEL_401:
  operator delete((void *)v297);
  if ((SHIBYTE(v296) & 0x80000000) == 0)
  {
LABEL_368:
    if ((SHIBYTE(v294) & 0x80000000) == 0) {
      goto LABEL_369;
    }
    goto LABEL_403;
  }
LABEL_402:
  operator delete((void *)__p);
  if ((SHIBYTE(v294) & 0x80000000) == 0)
  {
LABEL_369:
    if ((SHIBYTE(v292) & 0x80000000) == 0) {
      goto LABEL_370;
    }
    goto LABEL_404;
  }
LABEL_403:
  operator delete((void *)v293);
  if ((SHIBYTE(v292) & 0x80000000) == 0)
  {
LABEL_370:
    if ((SHIBYTE(v290) & 0x80000000) == 0) {
      goto LABEL_371;
    }
    goto LABEL_405;
  }
LABEL_404:
  operator delete((void *)v291);
  if ((SHIBYTE(v290) & 0x80000000) == 0)
  {
LABEL_371:
    if ((SHIBYTE(v288) & 0x80000000) == 0) {
      goto LABEL_372;
    }
    goto LABEL_406;
  }
LABEL_405:
  operator delete(v289[0]);
  if ((SHIBYTE(v288) & 0x80000000) == 0)
  {
LABEL_372:
    if ((SHIBYTE(v286) & 0x80000000) == 0) {
      goto LABEL_373;
    }
    goto LABEL_407;
  }
LABEL_406:
  operator delete((void *)v287);
  if ((SHIBYTE(v286) & 0x80000000) == 0)
  {
LABEL_373:
    if ((SHIBYTE(v284) & 0x80000000) == 0) {
      goto LABEL_374;
    }
LABEL_408:
    operator delete((void *)v283);
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_375;
    }
    goto LABEL_409;
  }
LABEL_407:
  operator delete(v285[0]);
  if (SHIBYTE(v284) < 0) {
    goto LABEL_408;
  }
LABEL_374:
  if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    goto LABEL_375;
  }
LABEL_409:
  operator delete(__dst.__r_.__value_.__l.__data_);
LABEL_375:
  qword_25A2BE8 = (uint64_t)operator new(0x19uLL);
  unk_25A2BF0 = v280;
  strcpy((char *)qword_25A2BE8, "From_User_Location_List");
  byte_25A2C17 = 20;
  strcpy(byte_25A2C00, "Origin_Waypoint_List");
  qword_25A2C18 = (uint64_t)operator new(0x20uLL);
  unk_25A2C20 = v276;
  strcpy((char *)qword_25A2C18, "Intermediate_Waypoint_List");
  unk_25A2C30 = operator new(0x20uLL);
  unk_25A2C38 = v278;
  strcpy(unk_25A2C30, "Destination_Waypoint_List");
  byte_25A2C5F = 15;
  strcpy(byte_25A2C48, "{toDestination}");
  byte_25A2C77 = 13;
  strcpy((char *)&xmmword_25A2C60, "{Destination}");
  byte_25A2C8F = 7;
  strcpy(byte_25A2C78, "To_Home");
  byte_25A2CA7 = 14;
  strcpy(byte_25A2C90, "To_ContactHome");
  byte_25A2CBF = 7;
  strcpy(byte_25A2CA8, "To_Work");
  byte_25A2CD7 = 14;
  strcpy(byte_25A2CC0, "To_ContactWork");
  strcpy(&byte_25A2CEF, "\nTo_Business");
  strcpy(byte_25A2CD8, "To_Address");
  byte_25A2D07 = 11;
  byte_25A2D1F = 16;
  strcpy(byte_25A2D08, "To_Other_Contact");
  strcpy(&byte_25A2D37, "\tTo_ContactSchool");
  strcpy(byte_25A2D20, "To_School");
  byte_25A2D4F = 16;
  byte_25A2D67 = 17;
  strcpy(algn_25A2D50, "To_PersonLocation");
  qword_25A2D68 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_25A2D70 = v277;
  strcpy((char *)qword_25A2D68, "To_ContactCustomLabelAddress");
  byte_25A2D97 = 7;
  strcpy((char *)&dword_25A2D80, "At_Home");
  byte_25A2DAF = 14;
  strcpy((char *)&qword_25A2D98, "At_ContactHome");
  byte_25A2DC7 = 7;
  strcpy((char *)&dword_25A2DB0, "At_Work");
  byte_25A2DDF = 14;
  strcpy((char *)&qword_25A2DC8, "At_ContactWork");
  strcpy(&byte_25A2DF7, "\nAt_Business");
  strcpy((char *)&qword_25A2DE0, "At_Address");
  byte_25A2E0F = 11;
  byte_25A2E27 = 16;
  strcpy(algn_25A2E10, "At_Other_Contact");
  byte_25A2E3F = 4;
  strcpy((char *)&dword_25A2E28, "Home");
  byte_25A2E57 = 11;
  strcpy((char *)&qword_25A2E40 + 7, "Home");
  qword_25A2E40 = *(void *)&v264[16];
  byte_25A2E6F = 4;
  strcpy((char *)&dword_25A2E58, "Work");
  byte_25A2E87 = 11;
  strcpy((char *)&qword_25A2E70 + 7, "Work");
  qword_25A2E70 = *(void *)v264;
  byte_25A2E9F = 7;
  strcpy((char *)&dword_25A2E88, "Address");
  byte_25A2EB7 = 8;
  strcpy((char *)&qword_25A2EA0, "Business");
  byte_25A2ECF = 13;
  qword_25A2EB8 = *(void *)&v264[48];
  *(uint64_t *)((char *)&qword_25A2EB8 + 5) = *(void *)&v264[32];
  byte_25A2EC5 = 0;
  byte_25A2EE7 = 6;
  strcpy((char *)&dword_25A2ED0, "School");
  byte_25A2EFF = 13;
  strcpy((char *)&qword_25A2EE8, "ContactSchool");
  byte_25A2F17 = 14;
  strcpy((char *)&qword_25A2F00, "PersonLocation");
  qword_25A2F18 = (uint64_t)operator new(0x20uLL);
  xmmword_25A2F20 = v278;
  strcpy((char *)qword_25A2F18, "ContactCustomLabelAddress");
  if (byte_25A2C77 < 0)
  {
    sub_4200(&xmmword_25A2F30, (void *)xmmword_25A2C60, *((unint64_t *)&xmmword_25A2C60 + 1));
  }
  else
  {
    xmmword_25A2F30 = xmmword_25A2C60;
    qword_25A2F40 = unk_25A2C70;
  }
  byte_25A2F5F = 16;
  strcpy((char *)&xmmword_25A2F48, "{PrevExitNumber}");
  byte_25A2F77 = 10;
  strcpy((char *)&qword_25A2F60, "{PrevRoad}");
  qword_25A2F78 = (uint64_t)operator new(0x20uLL);
  unk_25A2F80 = v279;
  strcpy((char *)qword_25A2F78, "{RouteTotalExpectedTime}");
  byte_25A2FA7 = 18;
  strcpy(byte_25A2F90, "{ChargePercentage}");
  qword_25A2FA8 = (uint64_t)operator new(0x20uLL);
  unk_25A2FB0 = v273;
  strcpy((char *)qword_25A2FA8, "{RemainingChargePercentage}");
  byte_25A2FD7 = 16;
  strcpy(byte_25A2FC0, "{ChargeDuration}");
  byte_25A2FEF = 15;
  strcpy((char *)&qword_25A2FD8, "{ConnectorType}");
  byte_25A3007 = 19;
  strcpy(byte_25A2FF0, "{ChargeStationName}");
  byte_25A301F = 7;
  strcpy((char *)&dword_25A3008, "{Power}");
  byte_25A3037 = 13;
  strcpy((char *)&qword_25A3020, "{VehicleName}");
  byte_25A304F = 18;
  strcpy((char *)&xmmword_25A3038, "{AreaIncidentName}");
  byte_25A3067 = 14;
  strcpy((char *)&qword_25A3050, "{AreaIncident}");
  byte_25A307F = 16;
  strcpy((char *)&xmmword_25A3068, "{AffectedRegion}");
  byte_25A3097 = 21;
  strcpy(byte_25A3080, "{AreaIncidentWeblink}");
  byte_25A30AF = 20;
  strcpy((char *)&xmmword_25A3098, "{AreaIncidentAgency}");
  byte_25A30C7 = 11;
  strcpy((char *)&qword_25A30B0, "{IssueTime}");
  byte_25A30DF = 12;
  strcpy((char *)&qword_25A30C8, "{UpdateTime}");
  byte_25A30F7 = 11;
  strcpy((char *)&qword_25A30E0, "{IssueDate}");
  byte_25A310F = 12;
  strcpy((char *)&qword_25A30F8, "{UpdateDate}");
  qword_25A3110 = (uint64_t)operator new(0x20uLL);
  unk_25A3118 = v279;
  strcpy((char *)qword_25A3110, "{AreaIncidentDataSource}");
  byte_25A313F = 13;
  strcpy((char *)&qword_25A3128, "{AreaHectare}");
  byte_25A3157 = 10;
  strcpy((char *)&qword_25A3140, "{AreaAcre}");
  qword_25A3158 = (uint64_t)operator new(0x20uLL);
  unk_25A3160 = v275;
  strcpy((char *)qword_25A3158, "{WildfirePercentageContained}");
  qword_25A3170 = (uint64_t)operator new(0x28uLL);
  unk_25A3178 = v268[2];
  strcpy((char *)qword_25A3170, "{WildfireExpectedContainmentDate}");
  qword_25A3188 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_25A3190 = v277;
  strcpy((char *)qword_25A3188, "{ServerRecommendedRouteName}");
  qword_25A31A0 = (uint64_t)operator new(0x20uLL);
  unk_25A31A8 = v277;
  strcpy((char *)qword_25A31A0, "{ServerNonRecommendedRoute1}");
  qword_25A31B8 = (uint64_t)operator new(0x20uLL);
  unk_25A31C0 = v277;
  strcpy((char *)qword_25A31B8, "{ServerNonRecommendedRoute2}");
  byte_25A31E7 = 12;
  strcpy((char *)&qword_25A31D0, "{ClientDest}");
  byte_25A31FF = 6;
  strcpy((char *)&dword_25A31E8, "{Name}");
  qword_25A3200 = (uint64_t)operator new(0x20uLL);
  unk_25A3208 = v268[1];
  strcpy((char *)qword_25A3200, "ProactiveAlert_FasterRouteTitle");
  qword_25A3218 = (uint64_t)operator new(0x20uLL);
  unk_25A3220 = v276;
  strcpy((char *)qword_25A3218, "ProactiveAlert_RoadClosure");
  qword_25A3230 = (uint64_t)operator new(0x30uLL);
  unk_25A3238 = v271;
  strcpy((char *)qword_25A3230, "ProactiveAlert_UnusuallyHeavyTrafficOnTwo");
  qword_25A3248 = (uint64_t)operator new(0x28uLL);
  *(_OWORD *)algn_25A3250 = v274;
  strcpy((char *)qword_25A3248, "ProactiveAlert_FasterRouteTitle_to_Home");
  qword_25A3260 = (uint64_t)operator new(0x28uLL);
  unk_25A3268 = v274;
  strcpy((char *)qword_25A3260, "ProactiveAlert_FasterRouteTitle_to_Work");
  qword_25A3278 = (uint64_t)operator new(0x28uLL);
  unk_25A3280 = v274;
  strcpy((char *)qword_25A3278, "ProactiveAlert_FasterRouteTitle_to_Name");
  qword_25A3290 = (uint64_t)operator new(0x30uLL);
  unk_25A3298 = xmmword_20B93B0;
  strcpy((char *)qword_25A3290, "ProactiveAlert_FasterRouteTitle_to_StreetName");
  byte_25A32BF = 17;
  strcpy(byte_25A32A8, "Proactive_Driving");
  strcpy(&byte_25A32D7, "\n{RouteName}");
  strcpy((char *)&qword_25A32C0, "_RouteName");
  byte_25A32EF = 11;
  qword_25A32F0 = (uint64_t)operator new(0x28uLL);
  unk_25A32F8 = v268[2];
  strcpy((char *)qword_25A32F0, "Pass_Traffic_Light_Spoken_Primary");
  qword_25A3308 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_25A3310 = v275;
  strcpy((char *)qword_25A3308, "Pass_Stop_Sign_Spoken_Primary");
  *(void *)&algn_25A3310[16] = operator new(0x20uLL);
  *(_OWORD *)&algn_25A3310[24] = v268[0];
  strcpy(*(char **)&algn_25A3310[16], "Pass_Roundabout_Spoken_Primary");
  strcpy(&byte_25A334F, "\nBannerBody");
  strcpy(&algn_25A3310[40], "BannerHead");
  strcpy(&byte_25A3367, "\nBannerDescription");
  byte_25A337F = 17;
  strcpy(&byte_25A3397, "\n_Incident");
  strcpy((char *)&qword_25A3380, "VoiceAlert");
  strcpy(&byte_25A33AF, "\t_Area_Incident");
  byte_25A33C7 = 14;
  byte_25A33DF = 15;
  strcpy((char *)&qword_25A33C8, "_Area_Incidents");
  strcpy(&byte_25A33F7, "\t_Crash");
  strcpy((char *)&qword_25A33E0, "_Accident");
  byte_25A340F = 6;
  byte_25A3427 = 16;
  strcpy((char *)&xmmword_25A3410, "_Congestion_Zone");
  strcpy(&byte_25A343F, "\n_Environmental_Zone");
  strcpy((char *)&qword_25A3428, "_Toll_Zone");
  byte_25A3457 = 19;
  BYTE1(qword_25A3468) = 116;
  WORD1(qword_25A3468) = 0;
  HIDWORD(qword_25A3468) = 301989888;
  strcpy(byte_25A3470, "_Construction");
  strcpy((char *)&qword_25A3458, "_Incident_Accide");
  byte_25A3487 = 13;
  byte_25A349F = 7;
  strcpy((char *)&dword_25A3488, "_Hazard");
  byte_25A34B7 = 12;
  strcpy((char *)&qword_25A34A0, "_LaneClosure");
  byte_25A34CF = 12;
  strcpy((char *)&qword_25A34B8, "_LaneTrailer");
  qmemcpy(&byte_25A34E7, "\t_LaneTrailer", 13);
  strcpy((char *)&qword_25A34D0, "_Shoulder");
  qword_25A34F8 = 0x1500007200000000;
  *(void *)algn_25A34F4 = *(void *)"_Shoulder";
  strcpy((char *)&xmmword_25A3500, "_Causing_Traffic_Delay");
  HIBYTE(word_25A3516) = 22;
  byte_25A352F = 6;
  strcpy((char *)&dword_25A3518, "_Timed");
  byte_25A3547 = 12;
  strcpy((char *)&qword_25A3530, "_HasDistance");
  byte_25A355F = 8;
  strcpy((char *)&qword_25A3548, "_Closure");
  strcpy(&byte_25A3577, "\n_BadRoad");
  strcpy((char *)&qword_25A3560, "_NoReroute");
  byte_25A358F = 8;
  byte_25A35A7 = 12;
  strcpy((char *)&qword_25A3590, "_TollTrailer");
  byte_25A35BF = 12;
  strcpy((char *)&qword_25A35A8, "_BestTrailer");
  byte_25A35D7 = 8;
  strcpy((char *)&qword_25A35C0, "_Trailer");
  byte_25A35EF = 18;
  strcpy((char *)&xmmword_25A35D8, "_Secondary_Trailer");
  byte_25A3607 = 8;
  strcpy((char *)&qword_25A35F0, "_Savings");
  byte_25A361F = 8;
  strcpy((char *)&qword_25A3608, "_AltRoad");
  byte_25A3637 = 6;
  strcpy((char *)&dword_25A3620, "_Named");
  byte_25A364F = 6;
  strcpy((char *)&dword_25A3638, "_NAMED");
  byte_25A3667 = 22;
  strcpy((char *)&xmmword_25A3650, "_Named_Suggested_Route");
  qword_25A3680 = 0x1000000000000000;
  xmmword_25A3670 = xmmword_20E81D0;
  byte_25A369F = 11;
  strcpy((char *)&qword_25A3688, "_Speed_Trap");
  byte_25A36B7 = 4;
  strcpy((char *)&dword_25A36A0, "_UGI");
  byte_25A36CF = 12;
  strcpy((char *)&qword_25A36B8, "_Safer_Route");
  qword_25A36D0 = (uint64_t)operator new(0x20uLL);
  unk_25A36D8 = v268[1];
  strcpy((char *)qword_25A36D0, "BlockedRouteByBlockingIncident_");
  qword_25A36E8 = (uint64_t)operator new(0x28uLL);
  long long v270 = xmmword_20B9280;
  *(_OWORD *)algn_25A36F0 = xmmword_20B9280;
  strcpy((char *)qword_25A36E8, "BlockedRouteByManeuverRestriction_");
  qword_25A3700 = (uint64_t)operator new(0x20uLL);
  unk_25A3708 = v268[0];
  strcpy((char *)qword_25A3700, "BlockedRouteByTimeRestriction_");
  qword_25A3718 = (uint64_t)operator new(0x28uLL);
  unk_25A3720 = xmmword_20B8FD0;
  strcpy((char *)qword_25A3718, "SuggestRouteToAvoidBlockingIncident_");
  qword_25A3730 = (uint64_t)operator new(0x30uLL);
  unk_25A3738 = xmmword_20B9380;
  strcpy((char *)qword_25A3730, "SuggestRouteToAvoidBlockingManeuverRestriction_");
  qword_25A3748 = (uint64_t)operator new(0x30uLL);
  *(_OWORD *)algn_25A3750 = xmmword_20B93E0;
  strcpy((char *)qword_25A3748, "SuggestRouteToAvoidBlockingTimeRestriction_");
  byte_25A3777 = 1;
  word_25A3760 = 95;
  strcpy((char *)&xmmword_25A3778, "IncidentsCausingDelay_");
  HIBYTE(word_25A378E) = 22;
  qword_25A3790 = (uint64_t)operator new(0x19uLL);
  unk_25A3798 = v280;
  strcpy((char *)qword_25A3790, "NonVotableRoadIncident_");
  byte_25A37BF = 20;
  strcpy(byte_25A37A8, "VotableRoadIncident_");
  byte_25A37D7 = 13;
  strcpy((char *)&qword_25A37C0, "AreaIncident_");
  byte_25A37EF = 15;
  strcpy((char *)&qword_25A37D8, "CongestionZone_");
  qword_25A37F0 = (uint64_t)operator new(0x20uLL);
  unk_25A37F8 = v279;
  strcpy((char *)qword_25A37F0, "EVModifiedChargingStops_");
  byte_25A381F = 13;
  strcpy((char *)&qword_25A3808, "EVDisconnect_");
  byte_25A3837 = 12;
  strcpy((char *)&qword_25A3820, "EVReconnect_");
  qword_25A3838 = (uint64_t)operator new(0x20uLL);
  unk_25A3840 = v277;
  strcpy((char *)qword_25A3838, "EVOfflineToOnlineTransition_");
  byte_25A3867 = 13;
  strcpy((char *)&qword_25A3850, "EVOfflineSAR_");
  byte_25A387F = 21;
  strcpy((char *)&xmmword_25A3868, "EVTowingNotSupported_");
  byte_25A3897 = 18;
  strcpy(byte_25A3880, "EVInfeasibleRoute_");
  qword_25A3898 = (uint64_t)operator new(0x38uLL);
  unk_25A38A0 = xmmword_20B8DF0;
  strcpy((char *)qword_25A3898, "SuggestRouteAddingStopsBeforeEVInfeasibleOriginalStop_");
  qword_25A38B0 = (uint64_t)operator new(0x40uLL);
  unk_25A38B8 = xmmword_20B98C0;
  strcpy((char *)qword_25A38B0, "LCSuggestRouteAddingStopsBeforeEVInfeasibleOriginalStop_");
  qword_25A38C8 = (uint64_t)operator new(0x30uLL);
  *(_OWORD *)algn_25A38D0 = v272;
  strcpy((char *)qword_25A38C8, "SuggestRouteAddingStopsForEVInfeasibleRoute_");
  qmemcpy(v268, "InfeasibleRoute_ngStopsForEVInfeSuggestRouteAddi", sizeof(v268));
  qword_25A38E0 = (uint64_t)operator new(0x30uLL);
  *(_WORD *)&v264[50] = 0;
  *(_DWORD *)&v264[52] = 0;
  *(void *)&v264[56] = 0x8000000000000030;
  unk_25A38E8 = xmmword_20B9A80;
  strcpy((char *)qword_25A38E0, "LCSuggestRouteAddingStopsForEVInfeasibleRoute_");
  strcpy(v264, "InfeasibleRoute_dingStopsForEVInLCSuggestRouteAd.");
  qword_25A38F8 = (uint64_t)operator new(0x30uLL);
  unk_25A3900 = v271;
  strcpy((char *)qword_25A38F8, "SuggestRouteAddingStopsToIncreaseDestSoc_");
  int v186 = operator new(0x30uLL);
  qword_25A3910 = (uint64_t)v186;
  unk_25A3918 = v272;
  *int v186 = v268[2];
  v186[1] = v268[1];
  *(_OWORD *)((char *)v186 + 28) = v268[0];
  *((unsigned char *)v186 + 44) = 0;
  qword_25A3928 = (uint64_t)operator new(0x28uLL);
  *(_OWORD *)algn_25A3930 = v270;
  strcpy((char *)qword_25A3928, "SuggestDetourWithHigherArrivalSOC_");
  unsigned __int16 v187 = operator new(0x30uLL);
  qword_25A3940 = (uint64_t)v187;
  unk_25A3948 = *(_OWORD *)&v264[48];
  *unsigned __int16 v187 = *(_OWORD *)&v264[32];
  v187[1] = *(_OWORD *)&v264[16];
  *(_OWORD *)((char *)v187 + 30) = *(_OWORD *)v264;
  *((unsigned char *)v187 + 46) = 0;
  qword_25A3958 = (uint64_t)operator new(0x28uLL);
  unk_25A3960 = v274;
  strcpy((char *)qword_25A3958, "SuggestRouteToDestForEVInfeasibleRoute_");
  qword_25A3970 = (uint64_t)operator new(0x28uLL);
  unk_25A3978 = v267;
  strcpy((char *)qword_25A3970, "SuggestRouteRemovingStopsFromEVRoute_");
  qword_25A3988 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_25A3990 = v279;
  strcpy((char *)qword_25A3988, "OfflineToOnlineNewRoute_");
  qword_25A39A0 = (uint64_t)operator new(0x40uLL);
  unk_25A39A8 = xmmword_20B98C0;
  strcpy((char *)qword_25A39A0, "SuggestDetourWithHigherArrivalSOCForInfeasibleUserRoute_");
  byte_25A39CF = 20;
  strcpy((char *)&xmmword_25A39B8, "LPR_OFFLINE_REROUTE_");
  byte_25A39E7 = 16;
  strcpy(algn_25A39D0, "LPR_OFFLINE_SAR_");
  byte_25A39FF = 20;
  strcpy((char *)&xmmword_25A39E8, "LPR_OFFLINE_REROUTE_");
  byte_25A3A17 = 16;
  strcpy(byte_25A3A00, "LPR_OFFLINE_SAR_");
  byte_25A3A2F = 19;
  strcpy((char *)&xmmword_25A3A18, "SuggestFasterRoute_");
  qword_25A3A30 = (char *)operator new(0x20uLL);
  xmmword_25A3A38 = v278;
  strcpy(qword_25A3A30, "AreaIncidentSaferReroute_");
  byte_25A3A5F = 12;
  strcpy((char *)&qword_25A3A48, "_Remove_Stop");
  byte_25A3A77 = 13;
  strcpy((char *)&qword_25A3A60, "_Remove_Stops");
  strcpy(&byte_25A3A8F, "\t_Add_Stops");
  strcpy((char *)&qword_25A3A78, "_Add_Stop");
  strcpy(&byte_25A3AA7, "\n_Change_Route");
  byte_25A3ABF = 13;
  byte_25A3AD7 = 15;
  strcpy((char *)&qword_25A3AC0, "_Different_Stop");
  byte_25A3AEF = 16;
  strcpy((char *)&xmmword_25A3AD8, "_Different_Stops");
  byte_25A3B07 = 15;
  strcpy((char *)&qword_25A3AF0, "_EV_Remove_Stop");
  byte_25A3B1F = 16;
  strcpy((char *)&xmmword_25A3B08, "_EV_Remove_Stops");
  byte_25A3B37 = 12;
  strcpy((char *)&qword_25A3B20, "_EV_Add_Stop");
  byte_25A3B4F = 13;
  strcpy((char *)&qword_25A3B38, "_EV_Add_Stops");
  byte_25A3B67 = 15;
  strcpy((char *)&qword_25A3B50, "_EV_Low_Battery");
  byte_25A3B7F = 14;
  strcpy((char *)&qword_25A3B68, "_EV_Infeasible");
  byte_25A3B97 = 15;
  strcpy((char *)&qword_25A3B80, "_EV_Last_Chance");
  qword_25A3B98 = (uint64_t)operator new(0x20uLL);
  unk_25A3BA0 = v279;
  strcpy((char *)qword_25A3B98, "_EV_Low_Battery_Add_Stop");
  uint64_t v188 = qword_25A3A98;
  qword_25A3BB0 = (uint64_t)operator new(0x20uLL);
  unk_25A3BB8 = v278;
  strcpy((char *)qword_25A3BB0, "_EV_Low_Battery_Add_Stops");
  qword_25A3BC8 = (uint64_t)operator new(0x19uLL);
  *(_OWORD *)algn_25A3BD0 = v280;
  strcpy((char *)qword_25A3BC8, "_EV_Infeasible_Add_Stop");
  int v189 = byte_25A3AA7;
  if (byte_25A3AA7 >= 0) {
    size_t v190 = byte_25A3AA7;
  }
  else {
    size_t v190 = v188;
  }
  unint64_t v191 = v190 + 14;
  if (v190 + 14 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v191 >= 0x17)
  {
    uint64_t v194 = (v191 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v191 | 7) != 0x17) {
      uint64_t v194 = v191 | 7;
    }
    uint64_t v195 = v194 + 1;
    __int16 v196 = (char *)operator new(v194 + 1);
    qword_25A3BE8 = v190 + 14;
    unk_25A3BF0 = v195 | 0x8000000000000000;
    qword_25A3BE0 = (uint64_t)v196;
    qmemcpy(v196, "_EV_Infeasible", 14);
    v192 = v196 + 14;
  }
  else
  {
    BYTE1(qword_25A3BE8) = 0;
    WORD1(qword_25A3BE8) = 0;
    HIDWORD(qword_25A3BE8) = 0;
    unk_25A3BF0 = 0;
    byte_25A3BF7 = v190 + 14;
    strcpy((char *)&qword_25A3BE0, "_EV_Infe");
    v192 = (char *)&qword_25A3BE8 + 6;
    if (!v190)
    {
      char v193 = 1;
      goto LABEL_425;
    }
  }
  if (v189 >= 0) {
    uint64_t v197 = (uint64_t)&qword_25A3A90;
  }
  else {
    uint64_t v197 = 0x6F74535F6464415FLL;
  }
  memmove(v192, (const void *)v197, v190);
  char v193 = 0;
LABEL_425:
  v192[v190] = 0;
  v198 = (char *)operator new(0x20uLL);
  qword_25A3BF8 = (uint64_t)v198;
  unk_25A3C00 = v279;
  *(void *)v198 = qword_25A3B80;
  *(void *)(v198 + 7) = *(uint64_t *)((char *)&qword_25A3B80 + 7);
  *(void *)(v198 + 15) = qword_25A3A78;
  v198[23] = word_25A3A80;
  v198[24] = 0;
  unint64_t v199 = v190 + 15;
  if (v190 + 15 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v199 > 0x16)
  {
    uint64_t v201 = (v199 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v199 | 7) != 0x17) {
      uint64_t v201 = v199 | 7;
    }
    uint64_t v202 = v201 + 1;
    unsigned int v200 = (uint64_t *)operator new(v201 + 1);
    qword_25A3C18 = v190 + 15;
    unk_25A3C20 = v202 | 0x8000000000000000;
    qword_25A3C10 = (uint64_t)v200;
  }
  else
  {
    unsigned int v200 = &qword_25A3C10;
    qword_25A3C18 = 0;
    unk_25A3C20 = 0;
    qword_25A3C10 = 0;
    byte_25A3C27 = v190 + 15;
  }
  *unsigned int v200 = qword_25A3B80;
  *(uint64_t *)((char *)v200 + 7) = *(uint64_t *)((char *)&qword_25A3B80 + 7);
  unsigned __int16 v203 = (char *)v200 + 15;
  if ((v193 & 1) == 0)
  {
    if (v189 >= 0) {
      int v204 = &qword_25A3A90;
    }
    else {
      int v204 = (uint64_t *)qword_25A3A90;
    }
    memmove((char *)v200 + 15, v204, v190);
  }
  v203[v190] = 0;
  byte_25A3C3F = 17;
  strcpy((char *)&xmmword_25A3C28, "_EV_Forced_Detour");
  qword_25A3C40 = (uint64_t)operator new(0x20uLL);
  unk_25A3C48 = v278;
  strcpy((char *)qword_25A3C40, "_EV_Higher_Arrival_Charge");
  qword_25A3C58 = (uint64_t)operator new(0x28uLL);
  *(_OWORD *)algn_25A3C60 = xmmword_20B8FD0;
  strcpy((char *)qword_25A3C58, "_EV_Infeasible_Higher_Arrival_Charge");
  byte_25A3C87 = 16;
  strcpy(&algn_25A3C60[16], "_EV_Out_Of_Range");
  qword_25A3C88 = (uint64_t)operator new(0x20uLL);
  unk_25A3C90 = v273;
  strcpy((char *)qword_25A3C88, "_EV_Last_Chance_Take_Detour");
  strcpy(byte_25A3CA0, "_EV_Forced_Modify_Stop");
  HIBYTE(word_25A3CB6) = 22;
  qword_25A3CB8 = (uint64_t)operator new(0x19uLL);
  unk_25A3CC0 = v280;
  strcpy((char *)qword_25A3CB8, "_EV_Forced_Modify_Stops");
  byte_25A3CE7 = 19;
  strcpy(byte_25A3CD0, "_EV_Forced_Add_Stop");
  byte_25A3CFF = 20;
  strcpy((char *)&xmmword_25A3CE8, "_EV_Forced_Add_Stops");
  byte_25A3D17 = 21;
  strcpy(byte_25A3D00, "_EV_Battery_Info_Lost");
  qword_25A3D18 = (uint64_t)operator new(0x20uLL);
  unk_25A3D20 = v278;
  strcpy((char *)qword_25A3D18, "_EV_Battery_Info_Restored");
  qword_25A3D30 = (uint64_t)operator new(0x20uLL);
  unk_25A3D38 = v279;
  strcpy((char *)qword_25A3D30, "_EV_Towing_Not_Supported");
  qword_25A3D48 = (uint64_t)operator new(0x28uLL);
  *(_OWORD *)algn_25A3D50 = v269;
  strcpy((char *)qword_25A3D48, "_EV_Offline_to_Online_Transition");
  byte_25A3D77 = 15;
  strcpy((char *)&qword_25A3D60, "_EV_Offline_SAR");
  qword_25A3D78 = (uint64_t)operator new(0x20uLL);
  unk_25A3D80 = v277;
  strcpy((char *)qword_25A3D78, "_Offline_to_Online_New_Route");
  byte_25A3DA7 = 12;
  strcpy((char *)&qword_25A3D90, "BannerButton");
  byte_25A3DBF = 8;
  strcpy((char *)&qword_25A3DA8, "_Dismiss");
  byte_25A3DD7 = 3;
  word_25A3DC0 = 20319;
  byte_25A3DC2 = 75;
  byte_25A3DC3 = 0;
  byte_25A3DEF = 11;
  strcpy((char *)&qword_25A3DD8, "_Still_Here");
  byte_25A3E07 = 8;
  strcpy((char *)&qword_25A3DF0, "_Cleared");
  qmemcpy(&byte_25A3E1F, "\nBannerButton", 13);
  strcpy((char *)&qword_25A3E08, "_No_Thanks");
  uint64_t v205 = qword_25A3D98;
  qword_25A3E30 = 0x1400000000000000;
  *(void *)algn_25A3E2C = 0x7373696D7369445FLL;
  qword_25A3E48 = 0xF00000000000000;
  qword_25A3E40 = 0x4B4F5F6E6F7474;
  int v206 = byte_25A3B37;
  if (byte_25A3B37 >= 0) {
    size_t v207 = byte_25A3B37;
  }
  else {
    size_t v207 = qword_25A3B28;
  }
  unint64_t v208 = v207 + 12;
  qword_25A3E38 = *(void *)"BannerButton";
  if (v207 + 12 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v208 >= 0x17)
  {
    uint64_t v210 = (v208 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v208 | 7) != 0x17) {
      uint64_t v210 = v208 | 7;
    }
    uint64_t v211 = v210 + 1;
    double v212 = (char *)operator new(v210 + 1);
    qword_25A3E58 = v207 + 12;
    unk_25A3E60 = v211 | 0x8000000000000000;
    qword_25A3E50 = (uint64_t)v212;
    *((_DWORD *)v212 + 2) = 1852798068;
    *(void *)double v212 = *(void *)"BannerButton";
    v209 = v212 + 12;
  }
  else
  {
    BYTE5(qword_25A3E58) = 0;
    HIWORD(qword_25A3E58) = 0;
    unk_25A3E60 = 0;
    byte_25A3E67 = v207 + 12;
    strcpy((char *)&qword_25A3E50, "BannerButton");
    v209 = (char *)&qword_25A3E58 + 4;
    if (!v207) {
      goto LABEL_450;
    }
  }
  if (v206 >= 0) {
    double v213 = &qword_25A3B20;
  }
  else {
    double v213 = (uint64_t *)qword_25A3B20;
  }
  memmove(v209, v213, v207);
LABEL_450:
  v209[v207] = 0;
  int v214 = byte_25A3B4F;
  if (byte_25A3B4F >= 0) {
    size_t v215 = byte_25A3B4F;
  }
  else {
    size_t v215 = unk_25A3B40;
  }
  unint64_t v216 = v215 + 12;
  if (v215 + 12 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v216 >= 0x17)
  {
    uint64_t v218 = (v216 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v216 | 7) != 0x17) {
      uint64_t v218 = v216 | 7;
    }
    uint64_t v219 = v218 + 1;
    v220 = (char *)operator new(v218 + 1);
    qword_25A3E70 = v215 + 12;
    unk_25A3E78 = v219 | 0x8000000000000000;
    qword_25A3E68 = (uint64_t)v220;
    *(void *)v220 = qword_25A3D90;
    *((_DWORD *)v220 + 2) = qword_25A3D98;
    uint64_t v217 = v220 + 12;
  }
  else
  {
    qword_25A3E70 = 0;
    unk_25A3E78 = 0;
    byte_25A3E7F = v215 + 12;
    LODWORD(qword_25A3E70) = qword_25A3D98;
    qword_25A3E68 = qword_25A3D90;
    uint64_t v217 = (char *)&qword_25A3E70 + 4;
    if (!v215) {
      goto LABEL_464;
    }
  }
  if (v214 >= 0) {
    unint64_t v221 = &qword_25A3B38;
  }
  else {
    unint64_t v221 = (uint64_t *)qword_25A3B38;
  }
  memmove(v217, v221, v215);
LABEL_464:
  v217[v215] = 0;
  int v222 = byte_25A3B07;
  if (byte_25A3B07 >= 0) {
    size_t v223 = byte_25A3B07;
  }
  else {
    size_t v223 = unk_25A3AF8;
  }
  unint64_t v224 = v223 + 12;
  if (v223 + 12 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v224 >= 0x17)
  {
    uint64_t v226 = (v224 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v224 | 7) != 0x17) {
      uint64_t v226 = v224 | 7;
    }
    uint64_t v227 = v226 + 1;
    v228 = (char *)operator new(v226 + 1);
    qword_25A3E88 = v223 + 12;
    unk_25A3E90 = v227 | 0x8000000000000000;
    qword_25A3E80 = (uint64_t)v228;
    *(void *)v228 = qword_25A3D90;
    *((_DWORD *)v228 + 2) = qword_25A3D98;
    uint64_t v225 = v228 + 12;
  }
  else
  {
    qword_25A3E88 = 0;
    unk_25A3E90 = 0;
    byte_25A3E97 = v223 + 12;
    LODWORD(qword_25A3E88) = qword_25A3D98;
    qword_25A3E80 = qword_25A3D90;
    uint64_t v225 = (char *)&qword_25A3E88 + 4;
    if (!v223) {
      goto LABEL_478;
    }
  }
  if (v222 >= 0) {
    uint64_t v229 = &qword_25A3AF0;
  }
  else {
    uint64_t v229 = (uint64_t *)qword_25A3AF0;
  }
  memmove(v225, v229, v223);
LABEL_478:
  v225[v223] = 0;
  int v230 = byte_25A3DA7;
  if (byte_25A3DA7 >= 0) {
    size_t v231 = byte_25A3DA7;
  }
  else {
    size_t v231 = v205;
  }
  int v232 = byte_25A3B1F;
  if (byte_25A3B1F >= 0) {
    size_t v233 = byte_25A3B1F;
  }
  else {
    size_t v233 = *((void *)&xmmword_25A3B08 + 1);
  }
  unint64_t v234 = v233 + v231;
  if (v233 + v231 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v234 <= 0x16)
  {
    unint64_t v235 = &qword_25A3E98;
    qword_25A3EA0 = 0;
    unk_25A3EA8 = 0;
    qword_25A3E98 = 0;
    byte_25A3EAF = v233 + v231;
    if (!v231) {
      goto LABEL_491;
    }
    goto LABEL_487;
  }
  uint64_t v242 = (v234 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v234 | 7) != 0x17) {
    uint64_t v242 = v234 | 7;
  }
  uint64_t v243 = v242 + 1;
  unint64_t v235 = (uint64_t *)operator new(v242 + 1);
  qword_25A3EA0 = v233 + v231;
  unk_25A3EA8 = v243 | 0x8000000000000000;
  qword_25A3E98 = (uint64_t)v235;
  if (v231)
  {
LABEL_487:
    if (v230 >= 0) {
      uint64_t v236 = &qword_25A3D90;
    }
    else {
      uint64_t v236 = (uint64_t *)qword_25A3D90;
    }
    memmove(v235, v236, v231);
  }
LABEL_491:
  BOOL v237 = (char *)v235 + v231;
  if (v233)
  {
    if (v232 >= 0) {
      v238 = &xmmword_25A3B08;
    }
    else {
      v238 = (long long *)xmmword_25A3B08;
    }
    memmove(v237, v238, v233);
  }
  v237[v233] = 0;
  unint64_t v239 = v231 + 11;
  if (v231 + 11 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v239 >= 0x17)
  {
    uint64_t v244 = (v239 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v239 | 7) != 0x17) {
      uint64_t v244 = v239 | 7;
    }
    uint64_t v245 = v244 + 1;
    uint64_t v240 = (uint64_t *)operator new(v244 + 1);
    qword_25A3EB8 = v231 + 11;
    unk_25A3EC0 = v245 | 0x8000000000000000;
    qword_25A3EB0 = (uint64_t)v240;
  }
  else
  {
    uint64_t v240 = &qword_25A3EB0;
    qword_25A3EB8 = 0;
    unk_25A3EC0 = 0;
    qword_25A3EB0 = 0;
    byte_25A3EC7 = v231 + 11;
    if (!v231)
    {
      *(_DWORD *)((char *)&qword_25A3EB0 + 7) = *(_DWORD *)((char *)&qword_25A3DD8 + 7);
      qword_25A3EB0 = qword_25A3DD8;
      BYTE3(qword_25A3EB8) = 0;
      LOBYTE(v241) = 8;
      goto LABEL_512;
    }
  }
  if (v230 >= 0) {
    long long v246 = &qword_25A3D90;
  }
  else {
    long long v246 = (uint64_t *)qword_25A3D90;
  }
  memmove(v240, v246, v231);
  v247 = (char *)v240 + v231;
  int v248 = *(_DWORD *)((char *)&qword_25A3DD8 + 7);
  *(void *)v247 = qword_25A3DD8;
  *(_DWORD *)(v247 + 7) = v248;
  v247[11] = 0;
  unint64_t v241 = v231 + 8;
  if (v231 + 8 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v241 <= 0x16)
  {
LABEL_512:
    long long v249 = &qword_25A3EC8;
    qword_25A3ED0 = 0;
    unk_25A3ED8 = 0;
    qword_25A3EC8 = 0;
    byte_25A3EDF = v241;
    if (!v231) {
      goto LABEL_517;
    }
    goto LABEL_513;
  }
  uint64_t v262 = (v241 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v241 | 7) != 0x17) {
    uint64_t v262 = v241 | 7;
  }
  uint64_t v263 = v262 + 1;
  long long v249 = (uint64_t *)operator new(v262 + 1);
  qword_25A3ED0 = v231 + 8;
  unk_25A3ED8 = v263 | 0x8000000000000000;
  qword_25A3EC8 = (uint64_t)v249;
  if (v231)
  {
LABEL_513:
    if (v230 >= 0) {
      unint64_t v250 = &qword_25A3D90;
    }
    else {
      unint64_t v250 = (uint64_t *)qword_25A3D90;
    }
    memmove(v249, v250, v231);
  }
LABEL_517:
  v251 = (char *)v249 + v231;
  *(void *)v251 = qword_25A3DF0;
  v251[8] = 0;
  int v252 = byte_25A3E1F;
  if (byte_25A3E1F >= 0) {
    size_t v253 = byte_25A3E1F;
  }
  else {
    size_t v253 = qword_25A3E10;
  }
  unint64_t v254 = v253 + v231;
  if (v253 + v231 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v254 <= 0x16)
  {
    v255 = &qword_25A3EE0;
    qword_25A3EE8 = 0;
    unk_25A3EF0 = 0;
    qword_25A3EE0 = 0;
    byte_25A3EF7 = v253 + v231;
    if (!v231) {
      goto LABEL_527;
    }
    goto LABEL_523;
  }
  uint64_t v260 = (v254 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v254 | 7) != 0x17) {
    uint64_t v260 = v254 | 7;
  }
  uint64_t v261 = v260 + 1;
  v255 = (uint64_t *)operator new(v260 + 1);
  qword_25A3EE8 = v253 + v231;
  unk_25A3EF0 = v261 | 0x8000000000000000;
  qword_25A3EE0 = (uint64_t)v255;
  if (v231)
  {
LABEL_523:
    if (v230 >= 0) {
      v256 = &qword_25A3D90;
    }
    else {
      v256 = (uint64_t *)qword_25A3D90;
    }
    memmove(v255, v256, v231);
  }
LABEL_527:
  v257 = (char *)v255 + v231;
  if (v253)
  {
    if (v252 >= 0) {
      v258 = &qword_25A3E08;
    }
    else {
      v258 = (uint64_t *)qword_25A3E08;
    }
    memmove(v257, v258, v253);
  }
  v257[v253] = 0;
  strcpy(&byte_25A3F0F, "\n{newroute}");
  strcpy((char *)&qword_25A3EF8, "{roadname}");
  strcpy(&byte_25A3F27, "\n{count}");
  byte_25A3F3F = 7;
  strcpy(&byte_25A3F57, "\n{dur}");
  strcpy((char *)&qword_25A3F40, "{duration}");
  byte_25A3F6F = 5;
  qword_25A3F70 = (uint64_t)operator new(0x20uLL);
  unk_25A3F78 = v276;
  strcpy((char *)qword_25A3F70, "{PleaseProceedWithCaution}");
  byte_25A3F9F = 15;
  strcpy((char *)&qword_25A3F88, "{UserRouteName}");
  byte_25A3FB7 = 20;
  strcpy((char *)&xmmword_25A3FA0, "{SuggestedRouteName}");
  byte_25A3FCF = 18;
  strcpy(byte_25A3FB8, "Speed_Camera_Ahead");
  qword_25A3FD0 = (uint64_t)operator new(0x20uLL);
  unk_25A3FD8 = v275;
  strcpy((char *)qword_25A3FD0, "Red_Light_Camera_Ahead_Spoken");
  qword_25A3FE8 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_25A3FF0 = v275;
  strcpy((char *)qword_25A3FE8, "Stop_Sign_Camera_Ahead_Spoken");
  qword_25A4000 = (uint64_t)operator new(0x28uLL);
  unk_25A4008 = v270;
  strcpy((char *)qword_25A4000, "Speed_Camera_Ahead_Multiple_Spoken");
  qword_25A4018 = (uint64_t)operator new(0x28uLL);
  unk_25A4020 = v265;
  strcpy((char *)qword_25A4018, "Red_Light_Camera_Ahead_Multiple_Spoken");
  qword_25A4030 = (uint64_t)operator new(0x20uLL);
  unk_25A4038 = v277;
  strcpy((char *)qword_25A4030, "Camera_Ahead_Multiple_Spoken");
  qword_25A4048 = (uint64_t)operator new(0x30uLL);
  unk_25A4050 = v266;
  strcpy((char *)qword_25A4048, "Red_Light_Camera_Speed_Camera_Ahead_Spoken");
  qword_25A4060 = (char *)operator new(0x30uLL);
  strcpy(qword_25A4060, "Stop_Sign_Camera_Speed_Camera_Ahead_Spoken");
  byte_25A408F = 16;
  xmmword_25A4068 = v266;
  strcpy(byte_25A4078, "_Speed_Limit_Mph");
  byte_25A40A7 = 16;
  strcpy(algn_25A4090, "_Speed_Limit_Kph");
  byte_25A40BF = 11;
  strcpy((char *)&qword_25A40A8, "Watch_Speed");
  byte_25A40D7 = 4;
  strcpy((char *)&dword_25A40C0, "_One");
  byte_25A40EF = 4;
  strcpy((char *)&dword_25A40D8, "_Two");
  byte_25A4107 = 4;
  strcpy((char *)&dword_25A40F0, "_Few");
  byte_25A411F = 5;
  strcpy((char *)&dword_25A4108, "_Many");
  byte_25A4137 = 6;
  strcpy((char *)&dword_25A4120, "_Other");
  byte_25A414F = 4;
  strcpy((char *)&dword_25A4138, "_ONE");
  byte_25A4167 = 7;
  strcpy((char *)&dword_25A4150, "{Speed}");
  byte_25A417F = 8;
  strcpy((char *)&qword_25A4168, "Dismount");
  byte_25A4197 = 4;
  strcpy((char *)&dword_25A4180, "Walk");
  byte_25A41AF = 5;
  strcpy((char *)&dword_25A4198, "Mount");
  byte_25A41C7 = 7;
  strcpy((char *)&dword_25A41B0, "Remount");
  strcpy(&byte_25A41DF, "\t_Crosswalk");
  strcpy((char *)&qword_25A41C8, "Walk_Road");
  strcpy(&byte_25A41F7, "\n_PLURAL");
  byte_25A420F = 7;
  strcpy(&byte_25A4227, "\n{description1}");
  strcpy((char *)&qword_25A4210, "_SECONDARY");
  byte_25A423F = 14;
  byte_25A4257 = 14;
  strcpy((char *)&qword_25A4240, "{description2}");
  byte_25A426F = 21;
  strcpy((char *)&xmmword_25A4258, "TWO_ROAD_DESCRIPTIONS");
  byte_25A4287 = 17;
  strcpy((char *)&xmmword_25A4270, "{SlopePercentage}");
  byte_25A429F = 15;
  strcpy((char *)&qword_25A4288, "_Protected_Lane");
  strcpy(&byte_25A42B7, "\n_Paved_Path");
  strcpy((char *)&qword_25A42A0, "_Bike_Path");
  byte_25A42CF = 11;
  byte_25A42E7 = 15;
  strcpy((char *)&qword_25A42D0, "_Dedicated_Lane");
  byte_25A42FF = 12;
  strcpy((char *)&qword_25A42E8, "_Shared_Path");
  strcpy(&byte_25A4317, "\n_UnnamedRoad");
  strcpy((char *)&qword_25A4300, "_Bike_Lane");
  byte_25A432F = 12;
  byte_25A4347 = 5;
  strcpy((char *)&dword_25A4330, "_Path");
  byte_25A435F = 6;
  strcpy((char *)&dword_25A4348, "_Trail");
  strcpy(&byte_25A4377, "\t_Plaza");
  strcpy((char *)&qword_25A4360, "_Sidewalk");
  byte_25A438F = 6;
  byte_25A43A7 = 15;
  strcpy((char *)&qword_25A4390, "_Moving_Walkway");
  byte_25A43BF = 14;
  strcpy((char *)&qword_25A43A8, "Two_Stage_Turn");
  byte_25A43D7 = 16;
  strcpy((char *)&xmmword_25A43C0, "{OptionalPeriod}");
  byte_25A43EF = 18;
  strcpy((char *)&xmmword_25A43D8, "Advisory_Separator");
  byte_25A4407 = 6;
  strcpy((char *)&dword_25A43F0, "Period");
  byte_25A441F = 21;
  strcpy((char *)&xmmword_25A4408, "Advisory_Title_Notice");
  strcpy((char *)&xmmword_25A4420, "Advisory_Title_Notices");
  HIBYTE(word_25A4436) = 22;
  byte_25A444F = 7;
  strcpy((char *)&dword_25A4438, "_DETAIL");
  byte_25A4467 = 17;
  strcpy((char *)&xmmword_25A4450, "_LONG_REGION_LIST");
  byte_25A447F = 16;
  strcpy((char *)&xmmword_25A4468, "Advisory_Grouped");
  byte_25A4497 = 11;
  strcpy((char *)&qword_25A4480, "_Advisories");
  qword_25A4498 = (uint64_t)operator new(0x20uLL);
  unk_25A44A0 = v273;
  strcpy((char *)qword_25A4498, "Advisory_WILDFIRE_METADATA_");
  byte_25A44C7 = 8;
  strcpy((char *)&qword_25A44B0, "Advisory");
  byte_25A44DF = 13;
  strcpy((char *)&qword_25A44C8, "MPR_NUM_STOPS");
  byte_25A44F7 = 17;
  strcpy(byte_25A44E0, "EV_CHARGE_STATION");
  byte_25A450F = 11;
  strcpy((char *)&qword_25A44F8, "_NAMED_CITY");
  byte_25A4527 = 5;
  strcpy((char *)&dword_25A4510, "_Stop");
  strcpy(&byte_25A453F, "\n{StopsCount}");
  strcpy((char *)&qword_25A4528, "{CityName}");
  byte_25A4557 = 12;
  byte_25A456F = 11;
  strcpy((char *)&qword_25A4558, "_With_Other");
  byte_25A4587 = 15;
  strcpy((char *)&qword_25A4570, "{DepartureTime}");
  qword_25A4588 = (uint64_t)operator new(0x28uLL);
  *(_OWORD *)algn_25A4590 = v274;
  strcpy((char *)qword_25A4588, "Ending_Charge_Station_Port_Availability");
  qword_25A45A0 = (uint64_t)operator new(0x28uLL);
  unk_25A45A8 = v267;
  strcpy((char *)qword_25A45A0, "Ending_Charge_Station_No_Availability");
  qword_25A45B8 = (uint64_t)operator new(0x28uLL);
  unk_25A45C0 = v270;
  strcpy((char *)qword_25A45B8, "Ending_Charge_Station_No_Real_Time");
  byte_25A45E7 = 16;
  strcpy(byte_25A45D0, "{AvailablePorts}");
  byte_25A45FF = 12;
  strcpy((char *)&qword_25A45E8, "{TotalPorts}");
  byte_25A4617 = 14;
  strcpy((char *)&qword_25A4600, "{ManeuverIcon}");
  qword_25A4618 = (uint64_t)operator new(0x38uLL);
  unk_25A4620 = xmmword_20B9A60;
  strcpy((char *)qword_25A4618, "Walking_Distance_ManeuverIcon_PrimaryInstruction");
  qword_25A4630 = (uint64_t)operator new(0x20uLL);
  unk_25A4638 = v273;
  strcpy((char *)qword_25A4630, "Walking_Destination_Unnamed");
  qword_25A4648 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_25A4650 = v275;
  strcpy((char *)qword_25A4648, "TrafficDelay_Label_Title_Sign");
  qword_25A4660 = (uint64_t)operator new(0x20uLL);
  unk_25A4668 = v277;
  strcpy((char *)qword_25A4660, "Special_Guidance_Instruction");
  byte_25A468F = 2;
  strcpy((char *)&word_25A4678, "CZ");
  byte_25A46A7 = 3;
  dword_25A4690 = 5919811;
  unk_25A46BF = 3;
  dword_25A46A8 = 6243649;
  byte_25A46D7 = 0;
  byte_25A46EF = 7;
  strcpy((char *)&dword_25A46D8, "TRANSIT");
  byte_25A4707 = 7;
  strcpy((char *)&dword_25A46F0, "OFFLINE");
  qword_25A4708 = (uint64_t)operator new(0x28uLL);
  *(_OWORD *)algn_25A4710 = v265;
  strcpy((char *)qword_25A4708, "Advisory_Card_French_Climate_Law_Title");
  qword_25A4720 = (uint64_t)operator new(0x30uLL);
  unk_25A4728 = xmmword_20B93C0;
  strcpy((char *)qword_25A4720, "Advisory_Card_French_Climate_Law_Details");
  qword_25A4738 = (uint64_t)operator new(0x30uLL);
  unk_25A4740 = v271;
  strcpy((char *)qword_25A4738, "French_Climate_Law_Metadata_Weblink_Title");
  qword_25A4750 = (uint64_t)operator new(0x20uLL);
  unk_25A4758 = v277;
  strcpy((char *)qword_25A4750, "{ClimateLawLearnMoreWeblink}");
  byte_25A477F = 3;
  dword_25A4768 = 4280902;
  qword_25A4780 = (uint64_t)operator new(0x70uLL);
  unk_25A4788 = xmmword_20E81E0;
  strcpy((char *)qword_25A4780, "https://www.vie-publique.fr/loi/278460-loi-22-aout-2021-climat-et-resilience-convention-citoyenne-climat");
  return *(double *)"ut-2021-climat-et-resilience-convention-citoyenne-climat";
}

void sub_704734(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,void *a62,uint64_t a63)
{
  if (SLOBYTE(STACK[0x3B7]) < 0)
  {
    operator delete((void *)STACK[0x3A0]);
    if ((SLOBYTE(STACK[0x39F]) & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else if ((SLOBYTE(STACK[0x39F]) & 0x80000000) == 0)
  {
LABEL_3:
    if (SLOBYTE(STACK[0x387]) < 0) {
      goto LABEL_4;
    }
    goto LABEL_18;
  }
  operator delete((void *)STACK[0x388]);
  if (SLOBYTE(STACK[0x387]) < 0)
  {
LABEL_4:
    operator delete((void *)STACK[0x370]);
    if ((SLOBYTE(STACK[0x36F]) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  if ((SLOBYTE(STACK[0x36F]) & 0x80000000) == 0)
  {
LABEL_5:
    if (SLOBYTE(STACK[0x357]) < 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  operator delete((void *)STACK[0x358]);
  if (SLOBYTE(STACK[0x357]) < 0)
  {
LABEL_6:
    operator delete((void *)STACK[0x340]);
    if ((SLOBYTE(STACK[0x33F]) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  if ((SLOBYTE(STACK[0x33F]) & 0x80000000) == 0)
  {
LABEL_7:
    if (SLOBYTE(STACK[0x327]) < 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  operator delete((void *)STACK[0x328]);
  if (SLOBYTE(STACK[0x327]) < 0)
  {
LABEL_8:
    operator delete((void *)STACK[0x310]);
    if ((SLOBYTE(STACK[0x30F]) & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  if ((SLOBYTE(STACK[0x30F]) & 0x80000000) == 0)
  {
LABEL_9:
    if (SLOBYTE(STACK[0x2F7]) < 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  operator delete((void *)STACK[0x2F8]);
  if (SLOBYTE(STACK[0x2F7]) < 0)
  {
LABEL_10:
    operator delete((void *)STACK[0x2E0]);
    if ((SLOBYTE(STACK[0x2DF]) & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  if ((SLOBYTE(STACK[0x2DF]) & 0x80000000) == 0)
  {
LABEL_11:
    if (SLOBYTE(STACK[0x2C7]) < 0) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_25:
  operator delete((void *)STACK[0x2C8]);
  if (SLOBYTE(STACK[0x2C7]) < 0)
  {
LABEL_12:
    operator delete((void *)STACK[0x2B0]);
    if ((SLOBYTE(STACK[0x2AF]) & 0x80000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_27;
  }
LABEL_26:
  if ((SLOBYTE(STACK[0x2AF]) & 0x80000000) == 0)
  {
LABEL_13:
    if (SLOBYTE(STACK[0x297]) < 0) {
      goto LABEL_14;
    }
    goto LABEL_28;
  }
LABEL_27:
  operator delete((void *)STACK[0x298]);
  if (SLOBYTE(STACK[0x297]) < 0)
  {
LABEL_14:
    operator delete((void *)STACK[0x280]);
    if (SLOBYTE(STACK[0x27F]) < 0)
    {
LABEL_37:
      operator delete((void *)STACK[0x268]);
      if ((SLOBYTE(STACK[0x267]) & 0x80000000) == 0)
      {
LABEL_38:
        if (SLOBYTE(STACK[0x24F]) < 0)
        {
LABEL_39:
          operator delete((void *)STACK[0x238]);
          if ((SLOBYTE(STACK[0x237]) & 0x80000000) == 0)
          {
LABEL_40:
            if (SLOBYTE(STACK[0x21F]) < 0)
            {
LABEL_41:
              operator delete((void *)STACK[0x208]);
              if ((SLOBYTE(STACK[0x207]) & 0x80000000) == 0)
              {
LABEL_42:
                if (a72 < 0)
                {
LABEL_43:
                  operator delete(a71);
                  if (a70 < 0)
                  {
LABEL_44:
                    operator delete(a65);
                    _Unwind_Resume(a1);
                  }
LABEL_45:
                  _Unwind_Resume(a1);
                }
LABEL_35:
                if (a70 < 0) {
                  goto LABEL_44;
                }
                goto LABEL_45;
              }
LABEL_34:
              operator delete(a73);
              if (a72 < 0) {
                goto LABEL_43;
              }
              goto LABEL_35;
            }
LABEL_33:
            if ((SLOBYTE(STACK[0x207]) & 0x80000000) == 0) {
              goto LABEL_42;
            }
            goto LABEL_34;
          }
LABEL_32:
          operator delete((void *)STACK[0x220]);
          if (SLOBYTE(STACK[0x21F]) < 0) {
            goto LABEL_41;
          }
          goto LABEL_33;
        }
LABEL_31:
        if ((SLOBYTE(STACK[0x237]) & 0x80000000) == 0) {
          goto LABEL_40;
        }
        goto LABEL_32;
      }
LABEL_30:
      operator delete((void *)STACK[0x250]);
      if (SLOBYTE(STACK[0x24F]) < 0) {
        goto LABEL_39;
      }
      goto LABEL_31;
    }
LABEL_29:
    if ((SLOBYTE(STACK[0x267]) & 0x80000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_30;
  }
LABEL_28:
  if (SLOBYTE(STACK[0x27F]) < 0) {
    goto LABEL_37;
  }
  goto LABEL_29;
}

void sub_704A08(const std::string **a1, uint64_t a2)
{
  if (sub_45FB38(a1))
  {
    int v4 = a1 + 20;
    if (sub_45FB38(a1 + 20)) {
      goto LABEL_3;
    }
  }
  else
  {
    *(_DWORD *)(a2 + 16) |= 1u;
    uint64_t v12 = *(void *)(a2 + 24);
    if (!v12)
    {
      uint64_t v13 = *(void *)(a2 + 8);
      unint64_t v14 = (void *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
      if (v13) {
        unint64_t v14 = (void *)*v14;
      }
      sub_13D6A1C((uint64_t)v14);
      uint64_t v12 = v15;
      *(void *)(a2 + 24) = v15;
    }
    sub_5F4D30(a1, v12);
    int v4 = a1 + 20;
    if (sub_45FB38(a1 + 20))
    {
LABEL_3:
      size_t v5 = a1 + 40;
      if (sub_45FB38(a1 + 40)) {
        goto LABEL_4;
      }
      goto LABEL_21;
    }
  }
  *(_DWORD *)(a2 + 16) |= 2u;
  uint64_t v16 = *(void *)(a2 + 32);
  if (!v16)
  {
    uint64_t v17 = *(void *)(a2 + 8);
    unint64_t v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      unint64_t v18 = (void *)*v18;
    }
    sub_13D6A1C((uint64_t)v18);
    uint64_t v16 = v19;
    *(void *)(a2 + 32) = v19;
  }
  sub_5F4D30(v4, v16);
  size_t v5 = a1 + 40;
  if (sub_45FB38(a1 + 40))
  {
LABEL_4:
    unint64_t v6 = a1 + 60;
    if (sub_45FB38(a1 + 60)) {
      goto LABEL_5;
    }
    goto LABEL_26;
  }
LABEL_21:
  *(_DWORD *)(a2 + 16) |= 4u;
  uint64_t v20 = *(void *)(a2 + 40);
  if (!v20)
  {
    uint64_t v21 = *(void *)(a2 + 8);
    long long v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      long long v22 = (void *)*v22;
    }
    sub_13D6A1C((uint64_t)v22);
    uint64_t v20 = v23;
    *(void *)(a2 + 40) = v23;
  }
  sub_5F4D30(v5, v20);
  unint64_t v6 = a1 + 60;
  if (sub_45FB38(a1 + 60))
  {
LABEL_5:
    uint64_t v7 = a1 + 80;
    if (sub_45FB38(a1 + 80)) {
      goto LABEL_6;
    }
    goto LABEL_31;
  }
LABEL_26:
  *(_DWORD *)(a2 + 16) |= 8u;
  uint64_t v24 = *(void *)(a2 + 48);
  if (!v24)
  {
    uint64_t v25 = *(void *)(a2 + 8);
    unint64_t v26 = (void *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
    if (v25) {
      unint64_t v26 = (void *)*v26;
    }
    sub_13D6A1C((uint64_t)v26);
    uint64_t v24 = v27;
    *(void *)(a2 + 48) = v27;
  }
  sub_5F4D30(v6, v24);
  uint64_t v7 = a1 + 80;
  if (sub_45FB38(a1 + 80))
  {
LABEL_6:
    uint64_t v8 = a1 + 100;
    if (sub_45FB38(a1 + 100)) {
      goto LABEL_7;
    }
    goto LABEL_36;
  }
LABEL_31:
  *(_DWORD *)(a2 + 16) |= 0x10u;
  uint64_t v28 = *(void *)(a2 + 56);
  if (!v28)
  {
    uint64_t v29 = *(void *)(a2 + 8);
    std::string::size_type v30 = (void *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
    if (v29) {
      std::string::size_type v30 = (void *)*v30;
    }
    sub_13D6A1C((uint64_t)v30);
    uint64_t v28 = v31;
    *(void *)(a2 + 56) = v31;
  }
  sub_5F4D30(v7, v28);
  uint64_t v8 = a1 + 100;
  if (sub_45FB38(a1 + 100))
  {
LABEL_7:
    uint64_t v9 = a1 + 120;
    if (sub_45FB38(a1 + 120)) {
      goto LABEL_8;
    }
    goto LABEL_41;
  }
LABEL_36:
  *(_DWORD *)(a2 + 16) |= 0x20u;
  uint64_t v32 = *(void *)(a2 + 64);
  if (!v32)
  {
    uint64_t v33 = *(void *)(a2 + 8);
    std::string::size_type v34 = (void *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
    if (v33) {
      std::string::size_type v34 = (void *)*v34;
    }
    sub_13D6A1C((uint64_t)v34);
    uint64_t v32 = v35;
    *(void *)(a2 + 64) = v35;
  }
  sub_5F4D30(v8, v32);
  uint64_t v9 = a1 + 120;
  if (sub_45FB38(a1 + 120))
  {
LABEL_8:
    uint64_t v10 = a1 + 140;
    if (sub_45FB38(a1 + 140)) {
      goto LABEL_9;
    }
    goto LABEL_46;
  }
LABEL_41:
  *(_DWORD *)(a2 + 16) |= 0x40u;
  uint64_t v36 = *(void *)(a2 + 72);
  if (!v36)
  {
    uint64_t v37 = *(void *)(a2 + 8);
    long long v38 = (void *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
    if (v37) {
      long long v38 = (void *)*v38;
    }
    sub_13D6A1C((uint64_t)v38);
    uint64_t v36 = v39;
    *(void *)(a2 + 72) = v39;
  }
  sub_5F4D30(v9, v36);
  uint64_t v10 = a1 + 140;
  if (sub_45FB38(a1 + 140))
  {
LABEL_9:
    uint64_t v11 = a1 + 160;
    if (sub_45FB38(v11)) {
      return;
    }
    goto LABEL_51;
  }
LABEL_46:
  *(_DWORD *)(a2 + 16) |= 0x80u;
  uint64_t v40 = *(void *)(a2 + 80);
  if (!v40)
  {
    uint64_t v41 = *(void *)(a2 + 8);
    int v42 = (void *)(v41 & 0xFFFFFFFFFFFFFFFCLL);
    if (v41) {
      int v42 = (void *)*v42;
    }
    sub_13D6A1C((uint64_t)v42);
    uint64_t v40 = v43;
    *(void *)(a2 + 80) = v43;
  }
  sub_5F4D30(v10, v40);
  uint64_t v11 = a1 + 160;
  if (!sub_45FB38(v11))
  {
LABEL_51:
    *(_DWORD *)(a2 + 16) |= 0x100u;
    uint64_t v44 = *(void *)(a2 + 88);
    if (v44)
    {
      long long v45 = v11;
    }
    else
    {
      uint64_t v46 = *(void *)(a2 + 8);
      unint64_t v47 = (void *)(v46 & 0xFFFFFFFFFFFFFFFCLL);
      if (v46) {
        unint64_t v47 = (void *)*v47;
      }
      sub_13D6A1C((uint64_t)v47);
      uint64_t v44 = v48;
      *(void *)(a2 + 88) = v48;
      long long v45 = v11;
    }
    sub_5F4D30(v45, v44);
  }
}

uint64_t sub_704D98(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  char v18 = 14;
  uint64_t v16 = 0;
  strcpy((char *)v17, "RoadComplexity");
  long long __p = 0;
  uint64_t v15 = 0;
  uint64_t v8 = sub_374CDC((uint64_t)a4, (uint64_t)v17, (uint64_t *)&__p);
  int64x2_t v9 = vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
  *(int64x2_t *)(a1 + 8) = v9;
  *(int64x2_t *)(a1 + 32) = v9;
  *(int64x2_t *)(a1 + 48) = v9;
  *(int64x2_t *)(a1 + 64) = v9;
  *(void *)(a1 + 80) = 0x7FFFFFFFFFFFFFFFLL;
  sub_704EDC(a1, v8);
  uint64_t v10 = (void **)__p;
  if (__p)
  {
    uint64_t v11 = v15;
    uint64_t v12 = __p;
    if (v15 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0) {
          operator delete(*(v11 - 3));
        }
        v11 -= 3;
      }
      while (v11 != v10);
      uint64_t v12 = __p;
    }
    uint64_t v15 = v10;
    operator delete(v12);
  }
  if (v18 < 0) {
    operator delete(v17[0]);
  }
  sub_725694(a1 + 88, a4);
  *(void *)(a1 + 168) = a4;
  *(void *)(a1 + 176) = sub_3750CC(a4);
  *(void *)(a1 + 184) = a3;
  *(void *)(a1 + 192) = a2;
  return a1;
}

void sub_704EB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_704EDC(uint64_t a1, void *a2)
{
  uint64_t v25 = (char *)operator new(0x20uLL);
  long long v26 = xmmword_20B5EB0;
  strcpy(v25, "enable_complexity_analyzer");
  int v4 = sub_58070(a2, (uint64_t)&v25);
  if (v4 && (int v5 = *((_DWORD *)v4 + 12), (v5 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)a1 = v5 == 4;
    if (SHIBYTE(v26) < 0) {
      goto LABEL_6;
    }
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a1 != 0;
    if (SHIBYTE(v26) < 0) {
LABEL_6:
    }
      operator delete(v25);
  }
  uint64_t v25 = (char *)operator new(0x20uLL);
  long long v22 = xmmword_20B8890;
  long long v26 = xmmword_20B8890;
  strcpy(v25, "enable_obscured_oblique_check");
  unint64_t v6 = sub_58070(a2, (uint64_t)&v25);
  if (v6 && (int v7 = *((_DWORD *)v6 + 12), (v7 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)(a1 + 1) = v7 == 4;
    if ((SHIBYTE(v26) & 0x80000000) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 1) = *(unsigned char *)(a1 + 1) != 0;
    if ((SHIBYTE(v26) & 0x80000000) == 0) {
      goto LABEL_13;
    }
  }
  operator delete(v25);
LABEL_13:
  uint64_t v25 = (char *)operator new(0x20uLL);
  long long v26 = v22;
  strcpy(v25, "pre_junction_spacing_distance");
  sub_5C8A4(a2, (uint64_t)&v25, (uint64_t *)(a1 + 8));
  if (SHIBYTE(v26) < 0) {
    operator delete(v25);
  }
  uint64_t v25 = (char *)operator new(0x20uLL);
  long long v26 = xmmword_20B9800;
  strcpy(v25, "post_junction_spacing_distance");
  sub_5C8A4(a2, (uint64_t)&v25, (uint64_t *)(a1 + 16));
  if (SHIBYTE(v26) < 0) {
    operator delete(v25);
  }
  uint64_t v25 = (char *)operator new(0x20uLL);
  long long v26 = v22;
  strcpy(v25, "junction_complexity_threshold");
  uint64_t v8 = sub_58070(a2, (uint64_t)&v25);
  if (v8 && *((_DWORD *)v8 + 12) == 1)
  {
    *(_WORD *)(a1 + 24) = (int)*((double *)v8 + 5);
    if ((SHIBYTE(v26) & 0x80000000) == 0) {
      goto LABEL_23;
    }
  }
  else
  {
    *(_WORD *)(a1 + 24) = *(_WORD *)(a1 + 24);
    if ((SHIBYTE(v26) & 0x80000000) == 0) {
      goto LABEL_23;
    }
  }
  operator delete(v25);
LABEL_23:
  uint64_t v25 = (char *)operator new(0x28uLL);
  long long v26 = xmmword_20E12D0;
  strcpy(v25, "confusing_maneuver_proximity_threshold");
  sub_5C8A4(a2, (uint64_t)&v25, (uint64_t *)(a1 + 32));
  if (SHIBYTE(v26) < 0) {
    operator delete(v25);
  }
  v24[23] = 18;
  strcpy(v24, "type_based_spacing");
  uint64_t v9 = sub_560F4(a2, (uint64_t)v24);
  sub_54214((uint64_t)&v25, v9);
  if ((v24[23] & 0x80000000) != 0) {
    operator delete(*(void **)v24);
  }
  v24[23] = 16;
  long long v22 = *(_OWORD *)"obscured_oblique";
  strcpy(v24, "obscured_oblique");
  uint64_t v10 = (void *)sub_560F4(&v25, (uint64_t)v24);
  __p[0] = operator new(0x20uLL);
  long long v21 = xmmword_20B91B0;
  *(_OWORD *)&__p[1] = xmmword_20B91B0;
  strcpy((char *)__p[0], "same_type_grouping_threshold");
  qmemcpy(v20, "ouping_thresholdsame_type_groupi", sizeof(v20));
  sub_5C8A4(v10, (uint64_t)__p, (uint64_t *)(a1 + 40));
  if (SHIBYTE(__p[2]) < 0)
  {
    operator delete(__p[0]);
    if ((v24[23] & 0x80000000) == 0) {
      goto LABEL_29;
    }
  }
  else if ((v24[23] & 0x80000000) == 0)
  {
    goto LABEL_29;
  }
  operator delete(*(void **)v24);
LABEL_29:
  v24[23] = 16;
  *(_OWORD *)uint64_t v24 = v22;
  v24[16] = 0;
  uint64_t v11 = (void *)sub_560F4(&v25, (uint64_t)v24);
  strcpy((char *)__p, "pre_complexity_spacing");
  HIBYTE(__p[2]) = 22;
  sub_5C8A4(v11, (uint64_t)__p, (uint64_t *)(a1 + 48));
  if (SHIBYTE(__p[2]) < 0)
  {
    operator delete(__p[0]);
    if ((v24[23] & 0x80000000) == 0) {
      goto LABEL_31;
    }
  }
  else if ((v24[23] & 0x80000000) == 0)
  {
    goto LABEL_31;
  }
  operator delete(*(void **)v24);
LABEL_31:
  v24[23] = 16;
  *(_OWORD *)uint64_t v24 = v22;
  v24[16] = 0;
  uint64_t v12 = (void *)sub_560F4(&v25, (uint64_t)v24);
  __p[0] = operator new(0x19uLL);
  long long v22 = xmmword_20B9250;
  *(_OWORD *)&__p[1] = xmmword_20B9250;
  strcpy((char *)__p[0], "post_complexity_spacing");
  sub_5C8A4(v12, (uint64_t)__p, (uint64_t *)(a1 + 56));
  if (SHIBYTE(__p[2]) < 0)
  {
    operator delete(__p[0]);
    if ((v24[23] & 0x80000000) == 0) {
      goto LABEL_33;
    }
  }
  else if ((v24[23] & 0x80000000) == 0)
  {
    goto LABEL_33;
  }
  operator delete(*(void **)v24);
LABEL_33:
  v24[23] = 7;
  strcpy(v24, "default");
  uint64_t v13 = (void *)sub_560F4(&v25, (uint64_t)v24);
  unint64_t v14 = operator new(0x20uLL);
  __p[0] = v14;
  *(_OWORD *)&__p[1] = v21;
  _OWORD *v14 = v20[1];
  *(_OWORD *)((char *)v14 + 12) = v20[0];
  *((unsigned char *)v14 + 28) = 0;
  sub_5C8A4(v13, (uint64_t)__p, (uint64_t *)(a1 + 64));
  if (SHIBYTE(__p[2]) < 0)
  {
    operator delete(__p[0]);
    if ((v24[23] & 0x80000000) == 0) {
      goto LABEL_35;
    }
  }
  else if ((v24[23] & 0x80000000) == 0)
  {
    goto LABEL_35;
  }
  operator delete(*(void **)v24);
LABEL_35:
  v24[23] = 7;
  strcpy(v24, "default");
  uint64_t v15 = (void *)sub_560F4(&v25, (uint64_t)v24);
  strcpy((char *)__p, "pre_complexity_spacing");
  HIBYTE(__p[2]) = 22;
  sub_5C8A4(v15, (uint64_t)__p, (uint64_t *)(a1 + 72));
  if (SHIBYTE(__p[2]) < 0)
  {
    operator delete(__p[0]);
    if ((v24[23] & 0x80000000) == 0) {
      goto LABEL_37;
    }
  }
  else if ((v24[23] & 0x80000000) == 0)
  {
    goto LABEL_37;
  }
  operator delete(*(void **)v24);
LABEL_37:
  v24[23] = 7;
  strcpy(v24, "default");
  uint64_t v16 = (void *)sub_560F4(&v25, (uint64_t)v24);
  __p[0] = operator new(0x19uLL);
  *(_OWORD *)&__p[1] = v22;
  strcpy((char *)__p[0], "post_complexity_spacing");
  sub_5C8A4(v16, (uint64_t)__p, (uint64_t *)(a1 + 80));
  if (SHIBYTE(__p[2]) < 0)
  {
    operator delete(__p[0]);
    if ((v24[23] & 0x80000000) == 0)
    {
LABEL_39:
      uint64_t v17 = (void **)*((void *)&v26 + 1);
      if (!*((void *)&v26 + 1)) {
        goto LABEL_53;
      }
      goto LABEL_57;
    }
  }
  else if ((v24[23] & 0x80000000) == 0)
  {
    goto LABEL_39;
  }
  operator delete(*(void **)v24);
  uint64_t v17 = (void **)*((void *)&v26 + 1);
  if (!*((void *)&v26 + 1)) {
    goto LABEL_53;
  }
  do
  {
LABEL_57:
    uint64_t v19 = (void **)*v17;
    sub_55198((uint64_t)(v17 + 5));
    if (*((char *)v17 + 39) < 0) {
      operator delete(v17[2]);
    }
    operator delete(v17);
    uint64_t v17 = v19;
  }
  while (v19);
LABEL_53:
  char v18 = v25;
  uint64_t v25 = 0;
  if (v18) {
    operator delete(v18);
  }
}

void sub_7055A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v26 - 73) < 0) {
    operator delete(*(void **)(v26 - 96));
  }
  sub_5450C(v26 - 72);
  _Unwind_Resume(a1);
}

void sub_70561C(_Unwind_Exception *a1)
{
  if (*(char *)(v1 - 49) < 0)
  {
    operator delete(*(void **)(v1 - 72));
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x705614);
}

void sub_70564C(_Unwind_Exception *a1)
{
  if (*(char *)(v1 - 73) < 0)
  {
    operator delete(*(void **)(v1 - 96));
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x705614);
}

uint64_t sub_705668(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  char v18 = 14;
  uint64_t v16 = 0;
  strcpy((char *)v17, "RoadComplexity");
  long long __p = 0;
  uint64_t v15 = 0;
  uint64_t v8 = sub_374CDC((uint64_t)a4, (uint64_t)v17, (uint64_t *)&__p);
  int64x2_t v9 = vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
  *(int64x2_t *)(a1 + 8) = v9;
  *(int64x2_t *)(a1 + 32) = v9;
  *(int64x2_t *)(a1 + 48) = v9;
  *(int64x2_t *)(a1 + 64) = v9;
  *(void *)(a1 + 80) = 0x7FFFFFFFFFFFFFFFLL;
  sub_7057AC(a1, v8);
  uint64_t v10 = (void **)__p;
  if (__p)
  {
    uint64_t v11 = v15;
    uint64_t v12 = __p;
    if (v15 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0) {
          operator delete(*(v11 - 3));
        }
        v11 -= 3;
      }
      while (v11 != v10);
      uint64_t v12 = __p;
    }
    uint64_t v15 = v10;
    operator delete(v12);
  }
  if (v18 < 0) {
    operator delete(v17[0]);
  }
  sub_725694(a1 + 88, a4);
  *(void *)(a1 + 168) = a4;
  *(void *)(a1 + 176) = sub_3750CC(a4);
  *(void *)(a1 + 184) = a3;
  *(void *)(a1 + 192) = a2;
  return a1;
}

void sub_705784(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_7057AC(uint64_t a1, void *a2)
{
  uint64_t v25 = (char *)operator new(0x20uLL);
  long long v26 = xmmword_20B5EB0;
  strcpy(v25, "enable_complexity_analyzer");
  int v4 = sub_58070(a2, (uint64_t)&v25);
  if (v4 && (int v5 = *((_DWORD *)v4 + 12), (v5 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)a1 = v5 == 4;
    if (SHIBYTE(v26) < 0) {
      goto LABEL_6;
    }
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a1 != 0;
    if (SHIBYTE(v26) < 0) {
LABEL_6:
    }
      operator delete(v25);
  }
  uint64_t v25 = (char *)operator new(0x20uLL);
  long long v22 = xmmword_20B8890;
  long long v26 = xmmword_20B8890;
  strcpy(v25, "enable_obscured_oblique_check");
  unint64_t v6 = sub_58070(a2, (uint64_t)&v25);
  if (v6 && (int v7 = *((_DWORD *)v6 + 12), (v7 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)(a1 + 1) = v7 == 4;
    if ((SHIBYTE(v26) & 0x80000000) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 1) = *(unsigned char *)(a1 + 1) != 0;
    if ((SHIBYTE(v26) & 0x80000000) == 0) {
      goto LABEL_13;
    }
  }
  operator delete(v25);
LABEL_13:
  uint64_t v25 = (char *)operator new(0x20uLL);
  long long v26 = v22;
  strcpy(v25, "pre_junction_spacing_distance");
  sub_5C8A4(a2, (uint64_t)&v25, (uint64_t *)(a1 + 8));
  if (SHIBYTE(v26) < 0) {
    operator delete(v25);
  }
  uint64_t v25 = (char *)operator new(0x20uLL);
  long long v26 = xmmword_20B9800;
  strcpy(v25, "post_junction_spacing_distance");
  sub_5C8A4(a2, (uint64_t)&v25, (uint64_t *)(a1 + 16));
  if (SHIBYTE(v26) < 0) {
    operator delete(v25);
  }
  uint64_t v25 = (char *)operator new(0x20uLL);
  long long v26 = v22;
  strcpy(v25, "junction_complexity_threshold");
  uint64_t v8 = sub_58070(a2, (uint64_t)&v25);
  if (v8 && *((_DWORD *)v8 + 12) == 1)
  {
    *(_WORD *)(a1 + 24) = (int)*((double *)v8 + 5);
    if ((SHIBYTE(v26) & 0x80000000) == 0) {
      goto LABEL_23;
    }
  }
  else
  {
    *(_WORD *)(a1 + 24) = *(_WORD *)(a1 + 24);
    if ((SHIBYTE(v26) & 0x80000000) == 0) {
      goto LABEL_23;
    }
  }
  operator delete(v25);
LABEL_23:
  uint64_t v25 = (char *)operator new(0x28uLL);
  long long v26 = xmmword_20E12D0;
  strcpy(v25, "confusing_maneuver_proximity_threshold");
  sub_5C8A4(a2, (uint64_t)&v25, (uint64_t *)(a1 + 32));
  if (SHIBYTE(v26) < 0) {
    operator delete(v25);
  }
  v24[23] = 18;
  strcpy(v24, "type_based_spacing");
  uint64_t v9 = sub_560F4(a2, (uint64_t)v24);
  sub_54214((uint64_t)&v25, v9);
  if ((v24[23] & 0x80000000) != 0) {
    operator delete(*(void **)v24);
  }
  v24[23] = 16;
  long long v22 = *(_OWORD *)"obscured_oblique";
  strcpy(v24, "obscured_oblique");
  uint64_t v10 = (void *)sub_560F4(&v25, (uint64_t)v24);
  __p[0] = operator new(0x20uLL);
  long long v21 = xmmword_20B91B0;
  *(_OWORD *)&__p[1] = xmmword_20B91B0;
  strcpy((char *)__p[0], "same_type_grouping_threshold");
  qmemcpy(v20, "ouping_thresholdsame_type_groupi", sizeof(v20));
  sub_5C8A4(v10, (uint64_t)__p, (uint64_t *)(a1 + 40));
  if (SHIBYTE(__p[2]) < 0)
  {
    operator delete(__p[0]);
    if ((v24[23] & 0x80000000) == 0) {
      goto LABEL_29;
    }
  }
  else if ((v24[23] & 0x80000000) == 0)
  {
    goto LABEL_29;
  }
  operator delete(*(void **)v24);
LABEL_29:
  v24[23] = 16;
  *(_OWORD *)uint64_t v24 = v22;
  v24[16] = 0;
  uint64_t v11 = (void *)sub_560F4(&v25, (uint64_t)v24);
  strcpy((char *)__p, "pre_complexity_spacing");
  HIBYTE(__p[2]) = 22;
  sub_5C8A4(v11, (uint64_t)__p, (uint64_t *)(a1 + 48));
  if (SHIBYTE(__p[2]) < 0)
  {
    operator delete(__p[0]);
    if ((v24[23] & 0x80000000) == 0) {
      goto LABEL_31;
    }
  }
  else if ((v24[23] & 0x80000000) == 0)
  {
    goto LABEL_31;
  }
  operator delete(*(void **)v24);
LABEL_31:
  v24[23] = 16;
  *(_OWORD *)uint64_t v24 = v22;
  v24[16] = 0;
  uint64_t v12 = (void *)sub_560F4(&v25, (uint64_t)v24);
  __p[0] = operator new(0x19uLL);
  long long v22 = xmmword_20B9250;
  *(_OWORD *)&__p[1] = xmmword_20B9250;
  strcpy((char *)__p[0], "post_complexity_spacing");
  sub_5C8A4(v12, (uint64_t)__p, (uint64_t *)(a1 + 56));
  if (SHIBYTE(__p[2]) < 0)
  {
    operator delete(__p[0]);
    if ((v24[23] & 0x80000000) == 0) {
      goto LABEL_33;
    }
  }
  else if ((v24[23] & 0x80000000) == 0)
  {
    goto LABEL_33;
  }
  operator delete(*(void **)v24);
LABEL_33:
  v24[23] = 7;
  strcpy(v24, "default");
  uint64_t v13 = (void *)sub_560F4(&v25, (uint64_t)v24);
  unint64_t v14 = operator new(0x20uLL);
  __p[0] = v14;
  *(_OWORD *)&__p[1] = v21;
  _OWORD *v14 = v20[1];
  *(_OWORD *)((char *)v14 + 12) = v20[0];
  *((unsigned char *)v14 + 28) = 0;
  sub_5C8A4(v13, (uint64_t)__p, (uint64_t *)(a1 + 64));
  if (SHIBYTE(__p[2]) < 0)
  {
    operator delete(__p[0]);
    if ((v24[23] & 0x80000000) == 0) {
      goto LABEL_35;
    }
  }
  else if ((v24[23] & 0x80000000) == 0)
  {
    goto LABEL_35;
  }
  operator delete(*(void **)v24);
LABEL_35:
  v24[23] = 7;
  strcpy(v24, "default");
  uint64_t v15 = (void *)sub_560F4(&v25, (uint64_t)v24);
  strcpy((char *)__p, "pre_complexity_spacing");
  HIBYTE(__p[2]) = 22;
  sub_5C8A4(v15, (uint64_t)__p, (uint64_t *)(a1 + 72));
  if (SHIBYTE(__p[2]) < 0)
  {
    operator delete(__p[0]);
    if ((v24[23] & 0x80000000) == 0) {
      goto LABEL_37;
    }
  }
  else if ((v24[23] & 0x80000000) == 0)
  {
    goto LABEL_37;
  }
  operator delete(*(void **)v24);
LABEL_37:
  v24[23] = 7;
  strcpy(v24, "default");
  uint64_t v16 = (void *)sub_560F4(&v25, (uint64_t)v24);
  __p[0] = operator new(0x19uLL);
  *(_OWORD *)&__p[1] = v22;
  strcpy((char *)__p[0], "post_complexity_spacing");
  sub_5C8A4(v16, (uint64_t)__p, (uint64_t *)(a1 + 80));
  if (SHIBYTE(__p[2]) < 0)
  {
    operator delete(__p[0]);
    if ((v24[23] & 0x80000000) == 0)
    {
LABEL_39:
      uint64_t v17 = (void **)*((void *)&v26 + 1);
      if (!*((void *)&v26 + 1)) {
        goto LABEL_53;
      }
      goto LABEL_57;
    }
  }
  else if ((v24[23] & 0x80000000) == 0)
  {
    goto LABEL_39;
  }
  operator delete(*(void **)v24);
  uint64_t v17 = (void **)*((void *)&v26 + 1);
  if (!*((void *)&v26 + 1)) {
    goto LABEL_53;
  }
  do
  {
LABEL_57:
    uint64_t v19 = (void **)*v17;
    sub_55198((uint64_t)(v17 + 5));
    if (*((char *)v17 + 39) < 0) {
      operator delete(v17[2]);
    }
    operator delete(v17);
    uint64_t v17 = v19;
  }
  while (v19);
LABEL_53:
  char v18 = v25;
  uint64_t v25 = 0;
  if (v18) {
    operator delete(v18);
  }
}

void sub_705E78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v26 - 73) < 0) {
    operator delete(*(void **)(v26 - 96));
  }
  sub_5450C(v26 - 72);
  _Unwind_Resume(a1);
}

void sub_705EEC(_Unwind_Exception *a1)
{
  if (*(char *)(v1 - 49) < 0)
  {
    operator delete(*(void **)(v1 - 72));
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x705EE4);
}

void sub_705F1C(_Unwind_Exception *a1)
{
  if (*(char *)(v1 - 73) < 0)
  {
    operator delete(*(void **)(v1 - 96));
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x705EE4);
}

uint64_t sub_705F38(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  char v18 = 14;
  uint64_t v16 = 0;
  strcpy((char *)v17, "RoadComplexity");
  long long __p = 0;
  uint64_t v15 = 0;
  uint64_t v8 = sub_374CDC((uint64_t)a4, (uint64_t)v17, (uint64_t *)&__p);
  int64x2_t v9 = vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
  *(int64x2_t *)(a1 + 8) = v9;
  *(int64x2_t *)(a1 + 32) = v9;
  *(int64x2_t *)(a1 + 48) = v9;
  *(int64x2_t *)(a1 + 64) = v9;
  *(void *)(a1 + 80) = 0x7FFFFFFFFFFFFFFFLL;
  sub_70607C(a1, v8);
  uint64_t v10 = (void **)__p;
  if (__p)
  {
    uint64_t v11 = v15;
    uint64_t v12 = __p;
    if (v15 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0) {
          operator delete(*(v11 - 3));
        }
        v11 -= 3;
      }
      while (v11 != v10);
      uint64_t v12 = __p;
    }
    uint64_t v15 = v10;
    operator delete(v12);
  }
  if (v18 < 0) {
    operator delete(v17[0]);
  }
  sub_725694(a1 + 88, a4);
  *(void *)(a1 + 168) = a4;
  *(void *)(a1 + 176) = sub_3750CC(a4);
  *(void *)(a1 + 184) = a3;
  *(void *)(a1 + 192) = a2;
  return a1;
}

void sub_706054(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_70607C(uint64_t a1, void *a2)
{
  uint64_t v25 = (char *)operator new(0x20uLL);
  long long v26 = xmmword_20B5EB0;
  strcpy(v25, "enable_complexity_analyzer");
  int v4 = sub_58070(a2, (uint64_t)&v25);
  if (v4 && (int v5 = *((_DWORD *)v4 + 12), (v5 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)a1 = v5 == 4;
    if (SHIBYTE(v26) < 0) {
      goto LABEL_6;
    }
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a1 != 0;
    if (SHIBYTE(v26) < 0) {
LABEL_6:
    }
      operator delete(v25);
  }
  uint64_t v25 = (char *)operator new(0x20uLL);
  long long v22 = xmmword_20B8890;
  long long v26 = xmmword_20B8890;
  strcpy(v25, "enable_obscured_oblique_check");
  unint64_t v6 = sub_58070(a2, (uint64_t)&v25);
  if (v6 && (int v7 = *((_DWORD *)v6 + 12), (v7 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)(a1 + 1) = v7 == 4;
    if ((SHIBYTE(v26) & 0x80000000) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 1) = *(unsigned char *)(a1 + 1) != 0;
    if ((SHIBYTE(v26) & 0x80000000) == 0) {
      goto LABEL_13;
    }
  }
  operator delete(v25);
LABEL_13:
  uint64_t v25 = (char *)operator new(0x20uLL);
  long long v26 = v22;
  strcpy(v25, "pre_junction_spacing_distance");
  sub_5C8A4(a2, (uint64_t)&v25, (uint64_t *)(a1 + 8));
  if (SHIBYTE(v26) < 0) {
    operator delete(v25);
  }
  uint64_t v25 = (char *)operator new(0x20uLL);
  long long v26 = xmmword_20B9800;
  strcpy(v25, "post_junction_spacing_distance");
  sub_5C8A4(a2, (uint64_t)&v25, (uint64_t *)(a1 + 16));
  if (SHIBYTE(v26) < 0) {
    operator delete(v25);
  }
  uint64_t v25 = (char *)operator new(0x20uLL);
  long long v26 = v22;
  strcpy(v25, "junction_complexity_threshold");
  uint64_t v8 = sub_58070(a2, (uint64_t)&v25);
  if (v8 && *((_DWORD *)v8 + 12) == 1)
  {
    *(_WORD *)(a1 + 24) = (int)*((double *)v8 + 5);
    if ((SHIBYTE(v26) & 0x80000000) == 0) {
      goto LABEL_23;
    }
  }
  else
  {
    *(_WORD *)(a1 + 24) = *(_WORD *)(a1 + 24);
    if ((SHIBYTE(v26) & 0x80000000) == 0) {
      goto LABEL_23;
    }
  }
  operator delete(v25);
LABEL_23:
  uint64_t v25 = (char *)operator new(0x28uLL);
  long long v26 = xmmword_20E12D0;
  strcpy(v25, "confusing_maneuver_proximity_threshold");
  sub_5C8A4(a2, (uint64_t)&v25, (uint64_t *)(a1 + 32));
  if (SHIBYTE(v26) < 0) {
    operator delete(v25);
  }
  v24[23] = 18;
  strcpy(v24, "type_based_spacing");
  uint64_t v9 = sub_560F4(a2, (uint64_t)v24);
  sub_54214((uint64_t)&v25, v9);
  if ((v24[23] & 0x80000000) != 0) {
    operator delete(*(void **)v24);
  }
  v24[23] = 16;
  long long v22 = *(_OWORD *)"obscured_oblique";
  strcpy(v24, "obscured_oblique");
  uint64_t v10 = (void *)sub_560F4(&v25, (uint64_t)v24);
  __p[0] = operator new(0x20uLL);
  long long v21 = xmmword_20B91B0;
  *(_OWORD *)&__p[1] = xmmword_20B91B0;
  strcpy((char *)__p[0], "same_type_grouping_threshold");
  qmemcpy(v20, "ouping_thresholdsame_type_groupi", sizeof(v20));
  sub_5C8A4(v10, (uint64_t)__p, (uint64_t *)(a1 + 40));
  if (SHIBYTE(__p[2]) < 0)
  {
    operator delete(__p[0]);
    if ((v24[23] & 0x80000000) == 0) {
      goto LABEL_29;
    }
  }
  else if ((v24[23] & 0x80000000) == 0)
  {
    goto LABEL_29;
  }
  operator delete(*(void **)v24);
LABEL_29:
  v24[23] = 16;
  *(_OWORD *)uint64_t v24 = v22;
  v24[16] = 0;
  uint64_t v11 = (void *)sub_560F4(&v25, (uint64_t)v24);
  strcpy((char *)__p, "pre_complexity_spacing");
  HIBYTE(__p[2]) = 22;
  sub_5C8A4(v11, (uint64_t)__p, (uint64_t *)(a1 + 48));
  if (SHIBYTE(__p[2]) < 0)
  {
    operator delete(__p[0]);
    if ((v24[23] & 0x80000000) == 0) {
      goto LABEL_31;
    }
  }
  else if ((v24[23] & 0x80000000) == 0)
  {
    goto LABEL_31;
  }
  operator delete(*(void **)v24);
LABEL_31:
  v24[23] = 16;
  *(_OWORD *)uint64_t v24 = v22;
  v24[16] = 0;
  uint64_t v12 = (void *)sub_560F4(&v25, (uint64_t)v24);
  __p[0] = operator new(0x19uLL);
  long long v22 = xmmword_20B9250;
  *(_OWORD *)&__p[1] = xmmword_20B9250;
  strcpy((char *)__p[0], "post_complexity_spacing");
  sub_5C8A4(v12, (uint64_t)__p, (uint64_t *)(a1 + 56));
  if (SHIBYTE(__p[2]) < 0)
  {
    operator delete(__p[0]);
    if ((v24[23] & 0x80000000) == 0) {
      goto LABEL_33;
    }
  }
  else if ((v24[23] & 0x80000000) == 0)
  {
    goto LABEL_33;
  }
  operator delete(*(void **)v24);
LABEL_33:
  v24[23] = 7;
  strcpy(v24, "default");
  uint64_t v13 = (void *)sub_560F4(&v25, (uint64_t)v24);
  unint64_t v14 = operator new(0x20uLL);
  __p[0] = v14;
  *(_OWORD *)&__p[1] = v21;
  _OWORD *v14 = v20[1];
  *(_OWORD *)((char *)v14 + 12) = v20[0];
  *((unsigned char *)v14 + 28) = 0;
  sub_5C8A4(v13, (uint64_t)__p, (uint64_t *)(a1 + 64));
  if (SHIBYTE(__p[2]) < 0)
  {
    operator delete(__p[0]);
    if ((v24[23] & 0x80000000) == 0) {
      goto LABEL_35;
    }
  }
  else if ((v24[23] & 0x80000000) == 0)
  {
    goto LABEL_35;
  }
  operator delete(*(void **)v24);
LABEL_35:
  v24[23] = 7;
  strcpy(v24, "default");
  uint64_t v15 = (void *)sub_560F4(&v25, (uint64_t)v24);
  strcpy((char *)__p, "pre_complexity_spacing");
  HIBYTE(__p[2]) = 22;
  sub_5C8A4(v15, (uint64_t)__p, (uint64_t *)(a1 + 72));
  if (SHIBYTE(__p[2]) < 0)
  {
    operator delete(__p[0]);
    if ((v24[23] & 0x80000000) == 0) {
      goto LABEL_37;
    }
  }
  else if ((v24[23] & 0x80000000) == 0)
  {
    goto LABEL_37;
  }
  operator delete(*(void **)v24);
LABEL_37:
  v24[23] = 7;
  strcpy(v24, "default");
  uint64_t v16 = (void *)sub_560F4(&v25, (uint64_t)v24);
  __p[0] = operator new(0x19uLL);
  *(_OWORD *)&__p[1] = v22;
  strcpy((char *)__p[0], "post_complexity_spacing");
  sub_5C8A4(v16, (uint64_t)__p, (uint64_t *)(a1 + 80));
  if (SHIBYTE(__p[2]) < 0)
  {
    operator delete(__p[0]);
    if ((v24[23] & 0x80000000) == 0)
    {
LABEL_39:
      uint64_t v17 = (void **)*((void *)&v26 + 1);
      if (!*((void *)&v26 + 1)) {
        goto LABEL_53;
      }
      goto LABEL_57;
    }
  }
  else if ((v24[23] & 0x80000000) == 0)
  {
    goto LABEL_39;
  }
  operator delete(*(void **)v24);
  uint64_t v17 = (void **)*((void *)&v26 + 1);
  if (!*((void *)&v26 + 1)) {
    goto LABEL_53;
  }
  do
  {
LABEL_57:
    uint64_t v19 = (void **)*v17;
    sub_55198((uint64_t)(v17 + 5));
    if (*((char *)v17 + 39) < 0) {
      operator delete(v17[2]);
    }
    operator delete(v17);
    uint64_t v17 = v19;
  }
  while (v19);
LABEL_53:
  char v18 = v25;
  uint64_t v25 = 0;
  if (v18) {
    operator delete(v18);
  }
}

void sub_706748(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v26 - 73) < 0) {
    operator delete(*(void **)(v26 - 96));
  }
  sub_5450C(v26 - 72);
  _Unwind_Resume(a1);
}

void sub_7067BC(_Unwind_Exception *a1)
{
  if (*(char *)(v1 - 49) < 0)
  {
    operator delete(*(void **)(v1 - 72));
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x7067B4);
}

void sub_7067EC(_Unwind_Exception *a1)
{
  if (*(char *)(v1 - 73) < 0)
  {
    operator delete(*(void **)(v1 - 96));
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x7067B4);
}

unint64_t sub_706808@<X0>(void *a1@<X1>, void *a2@<X8>)
{
  unint64_t v4 = sub_46C760(a1);
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  if (v4)
  {
    if (v4 >> 61) {
      sub_2E00();
    }
    size_t v5 = v4;
    unint64_t v6 = operator new(8 * v4);
    *a2 = v6;
    a2[2] = &v6[v5];
    memset_pattern16(v6, &xmmword_20B8FC0, v5 * 8);
    a2[1] = &v6[v5];
  }
  else
  {
    unint64_t v6 = 0;
  }
  void *v6 = 0;
  unint64_t result = sub_46C760(a1);
  unint64_t v8 = result;
  if (result)
  {
    unint64_t result = sub_46C760(a1);
    if (result >= 2)
    {
      unint64_t result = sub_46CCC8(a1, 0, v9);
      v6[1] = result;
    }
    unint64_t v10 = v8 - 1;
    if (v10)
    {
      for (uint64_t i = 0; i != v10; ++i)
      {
        unint64_t result = sub_46C760(a1);
        if (i + 2 < result)
        {
          unint64_t result = sub_46CCC8(a1, i + 1, v12);
          v6[i + 2] = v6[i + 1] + result;
        }
      }
    }
  }
  return result;
}

void sub_706924(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  operator delete(v2);
  _Unwind_Resume(a1);
}

void sub_70693C(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  operator delete(v2);
  _Unwind_Resume(a1);
}

void sub_706954(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  operator delete(v2);
  _Unwind_Resume(a1);
}

void sub_70696C(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  operator delete(v2);
  _Unwind_Resume(a1);
}

void sub_706984(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  operator delete(v2);
  _Unwind_Resume(a1);
}

void sub_70699C(uint64_t a1, void *a2, void *a3, uint64_t *a4)
{
  LODWORD(v72[0]) = 151323651;
  *(_OWORD *)int64_t v75 = 0u;
  *(_OWORD *)long long v76 = 0u;
  int v77 = 1065353216;
  sub_707A84((uint64_t)v75, (unsigned __int8 *)v72, v72);
  sub_707A84((uint64_t)v75, (unsigned __int8 *)v72 + 1, (unsigned char *)v72 + 1);
  sub_707A84((uint64_t)v75, (unsigned __int8 *)v72 + 2, (unsigned char *)v72 + 2);
  sub_707A84((uint64_t)v75, (unsigned __int8 *)v72 + 3, (unsigned char *)v72 + 3);
  *(_OWORD *)uint64_t v72 = 0u;
  *(_OWORD *)long long __p = 0u;
  int v74 = 1065353216;
  int v7 = v76[0];
  if (!v76[0])
  {
    v72[0] = 0;
    goto LABEL_140;
  }
  size_t v67 = a3 + 63;
  do
  {
    int v66 = (void **)v7;
    char v71 = *((unsigned char *)v7 + 16);
    uint64_t v69 = 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v70 = 0x7FFFFFFFFFFFFFFFLL;
    unint64_t v9 = sub_46C760(a3);
    if (v9)
    {
      for (unint64_t i = 0; i != v9; ++i)
      {
        uint64_t v11 = *(void *)sub_685D1C(a2, i);
        uint64_t v12 = 72;
        if (v71 == 3) {
          uint64_t v12 = 48;
        }
        uint64_t v13 = *(void *)(a1 + v12);
        unint64_t v14 = (char **)sub_46C8EC(a3, i);
        LOBYTE(v16) = 0;
        switch(v71)
        {
          case 3:
            if (!*(unsigned char *)(a1 + 1)) {
              goto LABEL_43;
            }
            uint64_t v17 = *v14;
            char v18 = &(*v14)[-*(int *)*v14];
            unsigned int v19 = *(unsigned __int16 *)v18;
            if (v19 < 0xB) {
              goto LABEL_43;
            }
            if (*((_WORD *)v18 + 5) && v17[*((unsigned __int16 *)v18 + 5) + 1] < 0)
            {
              if (v19 < 0x71) {
                goto LABEL_43;
              }
              uint64_t v29 = *((unsigned __int16 *)v18 + 56);
              if (!v29) {
                goto LABEL_43;
              }
              LOBYTE(v16) = v17[v29] - 1 < 2;
              unint64_t v21 = (unint64_t)v72[1];
              if (v72[1]) {
                goto LABEL_47;
              }
            }
            else
            {
              if (v19 < 0x71) {
                goto LABEL_43;
              }
              uint64_t v20 = *((unsigned __int16 *)v18 + 56);
              if (!v20)
              {
                LOBYTE(v16) = 0;
                goto LABEL_46;
              }
              LOBYTE(v16) = (v17[v20] & 0xFD) == 1;
              unint64_t v21 = (unint64_t)v72[1];
              if (v72[1]) {
                goto LABEL_47;
              }
            }
            goto LABEL_66;
          case 4:
            uint64_t v24 = &(*v14)[-*(int *)*v14];
            if (*(unsigned __int16 *)v24 < 0xBu) {
              goto LABEL_43;
            }
            uint64_t v25 = *((unsigned __int16 *)v24 + 5);
            if (!v25) {
              goto LABEL_43;
            }
            int v16 = ((*v14)[v25 + 1] >> 3) & 1;
            unint64_t v21 = (unint64_t)v72[1];
            if (!v72[1]) {
              goto LABEL_66;
            }
            goto LABEL_47;
          case 5:
            long long v22 = &(*v14)[-*(int *)*v14];
            if (*(unsigned __int16 *)v22 < 0xBu) {
              goto LABEL_43;
            }
            uint64_t v23 = *((unsigned __int16 *)v22 + 5);
            if (!v23) {
              goto LABEL_43;
            }
            int v16 = ((*v14)[v23 + 1] >> 2) & 1;
            unint64_t v21 = (unint64_t)v72[1];
            if (!v72[1]) {
              goto LABEL_66;
            }
            goto LABEL_47;
          case 9:
            uint64_t v26 = &(*v14)[-*(int *)*v14];
            if (*(unsigned __int16 *)v26 >= 0xBu && (uint64_t v27 = *((unsigned __int16 *)v26 + 5)) != 0)
            {
              int v16 = ((*v14)[v27 + 3] >> 4) & 1;
              unint64_t v21 = (unint64_t)v72[1];
              if (!v72[1]) {
                goto LABEL_66;
              }
            }
            else
            {
LABEL_43:
              LOBYTE(v16) = 0;
              unint64_t v21 = (unint64_t)v72[1];
              if (!v72[1]) {
                goto LABEL_66;
              }
            }
LABEL_47:
            uint8x8_t v15 = (uint8x8_t)vcnt_s8((int8x8_t)v21);
            v15.i16[0] = vaddlv_u8(v15);
            if (v15.u32[0] > 1uLL)
            {
              unint64_t v30 = v71;
              if (v21 <= v71) {
                unint64_t v30 = v71 % v21;
              }
            }
            else
            {
              unint64_t v30 = (v21 - 1) & v71;
            }
            uint64_t v31 = (uint64_t ***)*((void *)v72[0] + v30);
            if (!v31) {
              goto LABEL_66;
            }
            uint64_t v32 = *v31;
            if (!*v31) {
              goto LABEL_67;
            }
            if (v15.u32[0] < 2uLL)
            {
              unint64_t v33 = v21 - 1;
              while (1)
              {
                uint64_t v35 = v32[1];
                if (v35 == (uint64_t *)v71)
                {
                  if (*((unsigned __int8 *)v32 + 16) == v71) {
                    goto LABEL_67;
                  }
                }
                else if (((unint64_t)v35 & v33) != v30)
                {
                  goto LABEL_66;
                }
                uint64_t v32 = (uint64_t **)*v32;
                if (!v32) {
                  goto LABEL_67;
                }
              }
            }
            break;
          default:
LABEL_46:
            unint64_t v21 = (unint64_t)v72[1];
            if (v72[1]) {
              goto LABEL_47;
            }
            goto LABEL_66;
        }
        while (1)
        {
          unint64_t v34 = (unint64_t)v32[1];
          if (v34 == v71)
          {
            if (*((unsigned __int8 *)v32 + 16) == v71) {
              goto LABEL_67;
            }
            goto LABEL_56;
          }
          if (v34 >= v21) {
            v34 %= v21;
          }
          if (v34 != v30) {
            break;
          }
LABEL_56:
          uint64_t v32 = (uint64_t **)*v32;
          if (!v32) {
            goto LABEL_67;
          }
        }
LABEL_66:
        uint64_t v32 = 0;
LABEL_67:
        uint64_t v36 = 64;
        if (v71 == 3) {
          uint64_t v36 = 40;
        }
        uint64_t v37 = *(void *)(a1 + v36);
        uint64_t v38 = sub_46CCC8(a3, i, *(double *)&v15);
        if (v16)
        {
          if (!v32)
          {
            if (v70 == 0x7FFFFFFFFFFFFFFFLL)
            {
              uint64_t v28 = v11 - v13;
              if (v11 <= v13) {
                uint64_t v28 = 0;
              }
              uint64_t v70 = v28;
            }
            else
            {
              uint64_t v69 = 0x7FFFFFFFFFFFFFFFLL;
            }
            sub_707A84((uint64_t)v72, (unsigned __int8 *)&v71, &v71);
          }
        }
        else
        {
          if (v70 != 0x7FFFFFFFFFFFFFFFLL && v69 != 0x7FFFFFFFFFFFFFFFLL && v37 + v13 + v69 < v38 + v11)
          {
            unint64_t v39 = a4[1];
            if (v39 >= a4[2])
            {
              uint64_t v40 = sub_707774(a4, &v71, &v70, &v69);
            }
            else
            {
              sub_63B5B0(a4[1], v71, &v70, &v69, 1);
              uint64_t v40 = v39 + 616;
              a4[1] = v39 + 616;
            }
            a4[1] = v40;
            uint64_t v69 = 0x7FFFFFFFFFFFFFFFLL;
            uint64_t v70 = 0x7FFFFFFFFFFFFFFFLL;
          }
          if (v32)
          {
            unint64_t v41 = v71;
            uint64_t v42 = 80;
            if (v71 == 3) {
              uint64_t v42 = 56;
            }
            uint64_t v43 = *(void *)(a1 + v42) + v11;
            if (*v67 < v43) {
              uint64_t v43 = *v67;
            }
            uint64_t v69 = v43;
            unint64_t v44 = (unint64_t)v72[1];
            if (v72[1])
            {
              uint8x8_t v45 = (uint8x8_t)vcnt_s8((int8x8_t)v72[1]);
              v45.i16[0] = vaddlv_u8(v45);
              if (v45.u32[0] > 1uLL)
              {
                unint64_t v46 = v71;
                if (v72[1] <= (void *)v71) {
                  unint64_t v46 = v71 % (unint64_t)v72[1];
                }
              }
              else
              {
                unint64_t v46 = (LODWORD(v72[1]) - 1) & (unint64_t)v71;
              }
              unint64_t v47 = (unsigned __int8 **)*((void *)v72[0] + v46);
              if (v47)
              {
                uint64_t v48 = *v47;
                if (*v47)
                {
                  unint64_t v49 = (unint64_t)v72[1] - 1;
                  if (v45.u32[0] < 2uLL)
                  {
                    while (1)
                    {
                      uint64_t v50 = *((void *)v48 + 1);
                      if (v50 == v71)
                      {
                        if (v48[16] == v71) {
                          goto LABEL_103;
                        }
                      }
                      else if ((v50 & v49) != v46)
                      {
                        goto LABEL_9;
                      }
                      uint64_t v48 = *(unsigned __int8 **)v48;
                      if (!v48) {
                        goto LABEL_9;
                      }
                    }
                  }
                  do
                  {
                    unint64_t v51 = *((void *)v48 + 1);
                    if (v51 == v71)
                    {
                      if (v48[16] == v71)
                      {
LABEL_103:
                        if (v45.u32[0] > 1uLL)
                        {
                          if (v72[1] <= (void *)v71) {
                            unint64_t v41 = v71 % (unint64_t)v72[1];
                          }
                        }
                        else
                        {
                          unint64_t v41 = v49 & v71;
                        }
                        size_t v52 = (unsigned __int8 *)*((void *)v72[0] + v41);
                        do
                        {
                          int v53 = (void **)v52;
                          size_t v52 = *(unsigned __int8 **)v52;
                        }
                        while (v52 != v48);
                        if (v53 == __p) {
                          goto LABEL_120;
                        }
                        unint64_t v54 = (unint64_t)v53[1];
                        if (v45.u32[0] > 1uLL)
                        {
                          if ((void *)v54 >= v72[1]) {
                            v54 %= (unint64_t)v72[1];
                          }
                        }
                        else
                        {
                          v54 &= v49;
                        }
                        if (v54 != v41)
                        {
LABEL_120:
                          if (!*(void *)v48) {
                            goto LABEL_121;
                          }
                          unint64_t v55 = *(void *)(*(void *)v48 + 8);
                          if (v45.u32[0] > 1uLL)
                          {
                            if ((void *)v55 >= v72[1]) {
                              v55 %= (unint64_t)v72[1];
                            }
                          }
                          else
                          {
                            v55 &= v49;
                          }
                          if (v55 != v41) {
LABEL_121:
                          }
                            *((void *)v72[0] + v41) = 0;
                        }
                        uint64_t v56 = *(unsigned __int8 **)v48;
                        if (*(void *)v48)
                        {
                          unint64_t v57 = *((void *)v56 + 1);
                          if (v45.u32[0] > 1uLL)
                          {
                            if (v57 >= v44) {
                              v57 %= v44;
                            }
                          }
                          else
                          {
                            v57 &= v49;
                          }
                          if (v57 != v41)
                          {
                            *((void *)v72[0] + v57) = v53;
                            uint64_t v56 = *(unsigned __int8 **)v48;
                          }
                        }
                        int *v53 = v56;
                        *(void *)uint64_t v48 = 0;
                        --__p[1];
                        operator delete(v48);
                        break;
                      }
                    }
                    else
                    {
                      if ((void *)v51 >= v72[1]) {
                        v51 %= (unint64_t)v72[1];
                      }
                      if (v51 != v46) {
                        break;
                      }
                    }
                    uint64_t v48 = *(unsigned __int8 **)v48;
                  }
                  while (v48);
                }
              }
            }
          }
        }
LABEL_9:
        ;
      }
    }
    if (v70 != 0x7FFFFFFFFFFFFFFFLL)
    {
      if (v69 == 0x7FFFFFFFFFFFFFFFLL) {
        uint64_t v58 = a3 + 63;
      }
      else {
        uint64_t v58 = &v69;
      }
      unint64_t v59 = a4[1];
      if (v59 >= a4[2])
      {
        uint64_t v8 = sub_707774(a4, &v71, &v70, v58);
      }
      else
      {
        sub_63B5B0(a4[1], v71, &v70, v58, 1);
        uint64_t v8 = v59 + 616;
        a4[1] = v59 + 616;
      }
      a4[1] = v8;
    }
    int v7 = *v66;
  }
  while (*v66);
  long long v60 = __p[0];
  if (__p[0])
  {
    do
    {
      std::string::size_type v61 = (void *)*v60;
      operator delete(v60);
      long long v60 = v61;
    }
    while (v61);
  }
  char v62 = v72[0];
  v72[0] = 0;
  if (v62) {
    operator delete(v62);
  }
LABEL_140:
  long long v63 = v76[0];
  if (v76[0])
  {
    do
    {
      uint64_t v64 = (void *)*v63;
      operator delete(v63);
      long long v63 = v64;
    }
    while (v64);
  }
  long long v65 = v75[0];
  v75[0] = 0;
  if (v65) {
    operator delete(v65);
  }
}

void sub_7070EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,void *__p)
{
  uint64_t v26 = __p;
  if (__p)
  {
    do
    {
      uint64_t v27 = (void *)*v26;
      operator delete(v26);
      uint64_t v26 = v27;
    }
    while (v27);
  }
  if (a23) {
    operator delete(a23);
  }
  _Unwind_Resume(exception_object);
}

void sub_707120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  *(void *)(v9 + 8) = v10;
  sub_12168((uint64_t)va);
  sub_12168((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_707140(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  sub_12168((uint64_t)va);
  sub_12168((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_7071AC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t *a5, char a6)
{
  char v21 = a6;
  uint64_t v11 = *(void *)(a3 + 1064) + 2400 * a4;
  uint64_t v12 = (void *)sub_685D1C(a2, *(void *)(v11 + 16));
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *v12 - v13;
  if (*v12 < v13) {
    uint64_t v14 = 0;
  }
  uint64_t v20 = v14;
  uint64_t v15 = *(void *)(v11 + 24);
  if (v15) {
    uint64_t v16 = *(void *)(a1 + 16) + *(void *)sub_685D1C(a2, v15 - 1);
  }
  else {
    uint64_t v16 = *(void *)(a1 + 16);
  }
  if (*(void *)(a3 + 504) < v16) {
    uint64_t v16 = *(void *)(a3 + 504);
  }
  uint64_t v19 = v16;
  unint64_t v17 = a5[1];
  if (v17 >= a5[2])
  {
    uint64_t result = sub_707D88(a5, &v21, &v20, &v19);
  }
  else
  {
    sub_63B5B0(a5[1], a6, &v20, &v19, 1);
    uint64_t result = v17 + 616;
    a5[1] = v17 + 616;
  }
  a5[1] = result;
  return result;
}

void sub_7072A4(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_7072AC(uint64_t a1, void *a2, void *a3, unint64_t a4, uint64_t *a5)
{
  uint64_t v10 = a3 + 133;
  uint64_t v11 = sub_4A5E10(a3 + 133, a4);
  uint64_t v12 = sub_46C8EC(a3, *(void *)(v11 + 16));
  sub_68F4F8(*(void *)(a1 + 176), *(unsigned int *)(v12 + 32) | ((unint64_t)*(unsigned __int16 *)(v12 + 36) << 32), __p);
  int v13 = *(_DWORD *)(v11 + 160);
  BOOL v15 = *(void *)(v11 + 2008) > 1uLL
     || *(void *)(v11 + 2000) > (unint64_t)*(unsigned __int16 *)(a1 + 24)
     || v13 == 4;
  if (v15 || (v13 & 0xFFFFFFFE) == 0x3C)
  {
    sub_7071AC(a1, a2, (uint64_t)a3, a4, a5, 1);
  }
  else if (a4)
  {
    if ((uint64_t v16 = sub_4A5E10(v10, a4 - 1),
          uint64_t v17 = *(void *)(v11 + 872),
          uint64_t v18 = *(void *)(v11 + 128),
          sub_673A90(v11))
      && (sub_673A90(v16) & 1) != 0
      || sub_673BD4(v11) && sub_673BD4(v16))
    {
      if (v17 - v18 <= *(void *)(a1 + 32))
      {
        sub_7071AC(a1, a2, (uint64_t)a3, a4, a5, 1);
        sub_7071AC(a1, a2, (uint64_t)a3, a4 - 1, a5, 1);
      }
    }
  }
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
}

void sub_707430(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_707454(uint64_t a1, void *a2)
{
  if (*(unsigned char *)a1 && *(unsigned char *)(*(void *)(a1 + 184) + 1450))
  {
    sub_706808(a2, v28);
    long long __p = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    uint64_t v4 = a2[134] - a2[133];
    if (v4)
    {
      unint64_t v5 = 0;
      uint64_t v6 = v4 / 2400;
      do
        sub_7072AC(a1, v28, a2, v5++, (uint64_t *)&__p);
      while (v6 != v5);
    }
    sub_70699C(a1, v28, a2, (uint64_t *)&__p);
    int v7 = (char *)__p;
    uint64_t v8 = v26;
    if (__p == v26)
    {
      uint64_t v11 = (long long *)__p;
    }
    else
    {
      uint64_t v9 = a1 + 88;
      do
      {
        sub_63BB70(v7[4], v9, &v29);
        uint64_t v10 = (void *)*((void *)v7 + 7);
        if (v10)
        {
          *((void *)v7 + 8) = v10;
          operator delete(v10);
        }
        *(_OWORD *)(v7 + 56) = v29;
        *((void *)v7 + 9) = v30;
        v7 += 616;
      }
      while (v7 != v8);
      uint64_t v11 = (long long *)__p;
      int v7 = v26;
    }
    sub_708010(a2 + 1251, a2[1252], v11, (long long *)v7, 0x4FCACE213F2B3885 * ((v7 - (char *)v11) >> 3));
    uint64_t v13 = a2[1251];
    uint64_t v14 = (long long *)a2[1252];
    if ((uint64_t)v14 - v13 < 1)
    {
LABEL_17:
      uint64_t v18 = 0;
      unint64_t v15 = 0;
    }
    else
    {
      unint64_t v15 = 0x4FCACE213F2B3885 * (((uint64_t)v14 - v13) >> 3);
      while (1)
      {
        uint64_t v16 = operator new(616 * v15, &std::nothrow);
        if (v16) {
          break;
        }
        BOOL v17 = v15 > 1;
        v15 >>= 1;
        if (!v17) {
          goto LABEL_17;
        }
      }
      uint64_t v18 = v16;
    }
    sub_708738(v13, v14, (uint64_t)&v29, 0x4FCACE213F2B3885 * (((uint64_t)v14 - v13) >> 3), (uint64_t)v18, v15, v12);
    if (v18) {
      operator delete(v18);
    }
    uint64_t v19 = (char *)__p;
    if (__p)
    {
      uint64_t v20 = __p;
      if (v26 != __p)
      {
        char v21 = v26 - 560;
        do
        {
          uint64_t v23 = (void *)*((void *)v21 + 62);
          if (v23)
          {
            *((void *)v21 + 63) = v23;
            operator delete(v23);
          }
          sub_510298((uint64_t)(v21 + 24));
          uint64_t v24 = *(void **)v21;
          if (*(void *)v21)
          {
            *((void *)v21 + 1) = v24;
            operator delete(v24);
          }
          long long v22 = v21 - 56;
          v21 -= 616;
        }
        while (v22 != v19);
        uint64_t v20 = __p;
      }
      uint64_t v26 = v19;
      operator delete(v20);
    }
    if (v28[0])
    {
      v28[1] = v28[0];
      operator delete(v28[0]);
    }
  }
}

void sub_7076B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (v13)
  {
    operator delete(v13);
    sub_591C10((void **)&a9);
    unint64_t v15 = __p;
    if (!__p) {
LABEL_3:
    }
      _Unwind_Resume(a1);
  }
  else
  {
    sub_591C10((void **)&a9);
    unint64_t v15 = __p;
    if (!__p) {
      goto LABEL_3;
    }
  }
  a13 = (uint64_t)v15;
  operator delete(v15);
  _Unwind_Resume(a1);
}

void sub_70771C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = nullsub_1(a2);
  uint64_t v4 = *(void **)v3;
  unint64_t v5 = *(void **)(v3 + 8);
  if (*(void **)v3 != v5)
  {
    do
    {
      sub_707454(a1, v4);
      v4 += 1541;
    }
    while (v4 != v5);
  }
}

uint64_t sub_707774(uint64_t *a1, char *a2, void *a3, uint64_t *a4)
{
  uint64_t v5 = 0x4FCACE213F2B3885 * ((a1[1] - *a1) >> 3);
  unint64_t v6 = v5 + 1;
  if ((unint64_t)(v5 + 1) > 0x6A63BD81A98EF6) {
    sub_2E00();
  }
  if (0x9F959C427E56710ALL * ((a1[2] - *a1) >> 3) > v6) {
    unint64_t v6 = 0x9F959C427E56710ALL * ((a1[2] - *a1) >> 3);
  }
  if ((unint64_t)(0x4FCACE213F2B3885 * ((a1[2] - *a1) >> 3)) >= 0x3531DEC0D4C77BLL) {
    unint64_t v10 = 0x6A63BD81A98EF6;
  }
  else {
    unint64_t v10 = v6;
  }
  if (v10)
  {
    if (v10 > 0x6A63BD81A98EF6) {
      sub_188D718();
    }
    uint64_t v11 = (char *)operator new(616 * v10);
  }
  else
  {
    uint64_t v11 = 0;
  }
  uint64_t v32 = (uint64_t)&v11[616 * v5];
  unint64_t v33 = &v11[616 * v10];
  sub_63B5B0(v32, *a2, a3, a4, 1);
  uint64_t v12 = v32 + 616;
  uint64_t v14 = (char *)*a1;
  uint64_t v13 = (char *)a1[1];
  if (v13 == (char *)*a1)
  {
    *a1 = v32;
    a1[1] = v12;
    a1[2] = (uint64_t)v33;
  }
  else
  {
    uint64_t v15 = 0;
    do
    {
      uint64_t v16 = v32 + v15;
      uint64_t v17 = v32 + v15 - 616;
      uint64_t v18 = &v13[v15];
      long long v19 = *(_OWORD *)&v13[v15 - 616];
      long long v20 = *(_OWORD *)&v13[v15 - 600];
      long long v21 = *(_OWORD *)&v13[v15 - 584];
      *(void *)(v17 + 48) = *(void *)&v13[v15 - 568];
      *(_OWORD *)(v17 + 16) = v20;
      *(_OWORD *)(v17 + 32) = v21;
      *(_OWORD *)uint64_t v17 = v19;
      uint64_t v22 = v32 + v15 - 560;
      uint64_t v23 = (uint64_t)&v13[v15 - 560];
      *(void *)uint64_t v22 = 0;
      *(_OWORD *)(v22 + 8) = 0u;
      *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
      *(void *)(v32 + v15 - 544) = *(void *)&v13[v15 - 544];
      *(void *)(v23 + 16) = 0;
      *(_OWORD *)uint64_t v23 = 0u;
      sub_571CE4(v32 + v15 - 536, (uint64_t *)&v13[v15 - 536]);
      *(void *)(v16 - 64) = 0;
      *(void *)(v16 - 56) = 0;
      *(void *)(v16 - 48) = 0;
      *(_OWORD *)(v16 - 64) = *(_OWORD *)&v13[v15 - 64];
      *(void *)(v16 - 48) = *(void *)&v13[v15 - 48];
      *((void *)v18 - 8) = 0;
      *((void *)v18 - 7) = 0;
      *((void *)v18 - 6) = 0;
      long long v24 = *(_OWORD *)&v13[v15 - 40];
      long long v25 = *(_OWORD *)&v13[v15 - 24];
      *(void *)(v16 - 8) = *(void *)&v13[v15 - 8];
      *(_OWORD *)(v16 - 24) = v25;
      *(_OWORD *)(v16 - 40) = v24;
      v15 -= 616;
    }
    while (&v13[v15] != v14);
    uint64_t v26 = (char *)*a1;
    uint64_t v13 = (char *)a1[1];
    *a1 = v32 + v15;
    a1[1] = v12;
    a1[2] = (uint64_t)v33;
    if (v13 != v26)
    {
      uint64_t v27 = v13 - 560;
      do
      {
        long long v29 = (void *)*((void *)v27 + 62);
        if (v29)
        {
          *((void *)v27 + 63) = v29;
          operator delete(v29);
        }
        sub_510298((uint64_t)(v27 + 24));
        uint64_t v30 = *(void **)v27;
        if (*(void *)v27)
        {
          *((void *)v27 + 1) = v30;
          operator delete(v30);
        }
        uint64_t v28 = v27 - 56;
        v27 -= 616;
      }
      while (v28 != v26);
      uint64_t v13 = v26;
    }
  }
  if (v13) {
    operator delete(v13);
  }
  return v32 + 616;
}

void sub_7079E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_7079FC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_7079FC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v2; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 616;
    uint64_t v4 = *(void **)(i - 64);
    if (v4)
    {
      *(void *)(i - 56) = v4;
      operator delete(v4);
    }
    sub_510298(i - 536);
    uint64_t v5 = *(void **)(i - 560);
    if (v5)
    {
      *(void *)(i - 552) = v5;
      operator delete(v5);
    }
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t **sub_707A84(uint64_t a1, unsigned __int8 *a2, unsigned char *a3)
{
  unint64_t v6 = *a2;
  unint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    uint8x8_t v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      unint64_t v3 = *a2;
      if (v7 <= v6) {
        unint64_t v3 = v6 % v7;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & v6;
    }
    uint64_t v9 = *(uint64_t ****)(*(void *)a1 + 8 * v3);
    if (v9)
    {
      unint64_t v10 = *v9;
      if (*v9)
      {
        if (v8.u32[0] < 2uLL)
        {
          while (1)
          {
            uint64_t v12 = v10[1];
            if (v12 == (uint64_t *)v6)
            {
              if (*((unsigned __int8 *)v10 + 16) == v6) {
                return v10;
              }
            }
            else if (((unint64_t)v12 & (v7 - 1)) != v3)
            {
              goto LABEL_23;
            }
            unint64_t v10 = (uint64_t **)*v10;
            if (!v10) {
              goto LABEL_23;
            }
          }
        }
        do
        {
          unint64_t v11 = (unint64_t)v10[1];
          if (v11 == v6)
          {
            if (*((unsigned __int8 *)v10 + 16) == v6) {
              return v10;
            }
          }
          else
          {
            if (v11 >= v7) {
              v11 %= v7;
            }
            if (v11 != v3) {
              break;
            }
          }
          unint64_t v10 = (uint64_t **)*v10;
        }
        while (v10);
      }
    }
  }
LABEL_23:
  uint64_t v14 = operator new(0x18uLL);
  void *v14 = 0;
  v14[1] = v6;
  *((unsigned char *)v14 + 16) = *a3;
  float v15 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v16 = *(float *)(a1 + 32);
  if (v7 && (float)(v16 * (float)v7) >= v15)
  {
    unint64_t v6 = v3;
  }
  else
  {
    BOOL v17 = 1;
    if (v7 >= 3) {
      BOOL v17 = (v7 & (v7 - 1)) != 0;
    }
    unint64_t v18 = v17 | (2 * v7);
    unint64_t v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19) {
      size_t prime = v19;
    }
    else {
      size_t prime = v18;
    }
    if (prime == 1)
    {
      size_t prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      size_t prime = std::__next_prime(prime);
      unint64_t v7 = *(void *)(a1 + 8);
    }
    if (prime > v7) {
      goto LABEL_36;
    }
    if (prime < v7)
    {
      unint64_t v21 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v7 < 3 || (uint8x8_t v22 = (uint8x8_t)vcnt_s8((int8x8_t)v7), v22.i16[0] = vaddlv_u8(v22), v22.u32[0] > 1uLL))
      {
        unint64_t v21 = std::__next_prime(v21);
      }
      else
      {
        uint64_t v23 = 1 << -(char)__clz(v21 - 1);
        if (v21 >= 2) {
          unint64_t v21 = v23;
        }
      }
      if (prime <= v21) {
        size_t prime = v21;
      }
      if (prime < v7) {
LABEL_36:
      }
        sub_B6C0(a1, prime);
    }
    unint64_t v7 = *(void *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v7 <= v6) {
        v6 %= v7;
      }
    }
    else
    {
      unint64_t v6 = (v7 - 1) & v6;
    }
  }
  uint64_t v24 = *(void *)a1;
  long long v25 = *(void **)(*(void *)a1 + 8 * v6);
  if (v25)
  {
    void *v14 = *v25;
LABEL_59:
    *long long v25 = v14;
    goto LABEL_60;
  }
  void *v14 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v14;
  *(void *)(v24 + 8 * v6) = a1 + 16;
  if (*v14)
  {
    unint64_t v26 = *(void *)(*v14 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v26 >= v7) {
        v26 %= v7;
      }
    }
    else
    {
      v26 &= v7 - 1;
    }
    long long v25 = (void *)(*(void *)a1 + 8 * v26);
    goto LABEL_59;
  }
LABEL_60:
  ++*(void *)(a1 + 24);
  return (uint64_t **)v14;
}

void sub_707D74(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_707D88(uint64_t *a1, char *a2, void *a3, uint64_t *a4)
{
  uint64_t v5 = 0x4FCACE213F2B3885 * ((a1[1] - *a1) >> 3);
  unint64_t v6 = v5 + 1;
  if ((unint64_t)(v5 + 1) > 0x6A63BD81A98EF6) {
    sub_2E00();
  }
  if (0x9F959C427E56710ALL * ((a1[2] - *a1) >> 3) > v6) {
    unint64_t v6 = 0x9F959C427E56710ALL * ((a1[2] - *a1) >> 3);
  }
  if ((unint64_t)(0x4FCACE213F2B3885 * ((a1[2] - *a1) >> 3)) >= 0x3531DEC0D4C77BLL) {
    unint64_t v10 = 0x6A63BD81A98EF6;
  }
  else {
    unint64_t v10 = v6;
  }
  if (v10)
  {
    if (v10 > 0x6A63BD81A98EF6) {
      sub_188D718();
    }
    unint64_t v11 = (char *)operator new(616 * v10);
  }
  else
  {
    unint64_t v11 = 0;
  }
  uint64_t v32 = (uint64_t)&v11[616 * v5];
  unint64_t v33 = &v11[616 * v10];
  sub_63B5B0(v32, *a2, a3, a4, 1);
  uint64_t v12 = v32 + 616;
  uint64_t v14 = (char *)*a1;
  uint64_t v13 = (char *)a1[1];
  if (v13 == (char *)*a1)
  {
    *a1 = v32;
    a1[1] = v12;
    a1[2] = (uint64_t)v33;
  }
  else
  {
    uint64_t v15 = 0;
    do
    {
      uint64_t v16 = v32 + v15;
      uint64_t v17 = v32 + v15 - 616;
      unint64_t v18 = &v13[v15];
      long long v19 = *(_OWORD *)&v13[v15 - 616];
      long long v20 = *(_OWORD *)&v13[v15 - 600];
      long long v21 = *(_OWORD *)&v13[v15 - 584];
      *(void *)(v17 + 48) = *(void *)&v13[v15 - 568];
      *(_OWORD *)(v17 + 16) = v20;
      *(_OWORD *)(v17 + 32) = v21;
      *(_OWORD *)uint64_t v17 = v19;
      uint64_t v22 = v32 + v15 - 560;
      uint64_t v23 = (uint64_t)&v13[v15 - 560];
      *(void *)uint64_t v22 = 0;
      *(_OWORD *)(v22 + 8) = 0u;
      *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
      *(void *)(v32 + v15 - 544) = *(void *)&v13[v15 - 544];
      *(void *)(v23 + 16) = 0;
      *(_OWORD *)uint64_t v23 = 0u;
      sub_571CE4(v32 + v15 - 536, (uint64_t *)&v13[v15 - 536]);
      *(void *)(v16 - 64) = 0;
      *(void *)(v16 - 56) = 0;
      *(void *)(v16 - 48) = 0;
      *(_OWORD *)(v16 - 64) = *(_OWORD *)&v13[v15 - 64];
      *(void *)(v16 - 48) = *(void *)&v13[v15 - 48];
      *((void *)v18 - 8) = 0;
      *((void *)v18 - 7) = 0;
      *((void *)v18 - 6) = 0;
      long long v24 = *(_OWORD *)&v13[v15 - 40];
      long long v25 = *(_OWORD *)&v13[v15 - 24];
      *(void *)(v16 - 8) = *(void *)&v13[v15 - 8];
      *(_OWORD *)(v16 - 24) = v25;
      *(_OWORD *)(v16 - 40) = v24;
      v15 -= 616;
    }
    while (&v13[v15] != v14);
    unint64_t v26 = (char *)*a1;
    uint64_t v13 = (char *)a1[1];
    *a1 = v32 + v15;
    a1[1] = v12;
    a1[2] = (uint64_t)v33;
    if (v13 != v26)
    {
      uint64_t v27 = v13 - 560;
      do
      {
        long long v29 = (void *)*((void *)v27 + 62);
        if (v29)
        {
          *((void *)v27 + 63) = v29;
          operator delete(v29);
        }
        sub_510298((uint64_t)(v27 + 24));
        uint64_t v30 = *(void **)v27;
        if (*(void *)v27)
        {
          *((void *)v27 + 1) = v30;
          operator delete(v30);
        }
        uint64_t v28 = v27 - 56;
        v27 -= 616;
      }
      while (v28 != v26);
      uint64_t v13 = v26;
    }
  }
  if (v13) {
    operator delete(v13);
  }
  return v32 + 616;
}

void sub_707FFC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_7079FC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_708010(uint64_t *a1, uint64_t a2, long long *a3, long long *a4, uint64_t a5)
{
  uint64_t v5 = *a1;
  uint64_t v6 = (a2 - *a1) / 616;
  uint64_t v7 = *a1 + 616 * v6;
  if (a5 >= 1)
  {
    uint64_t v9 = a3;
    uint64_t v11 = a1[2];
    unint64_t v12 = a1[1];
    if (0x4FCACE213F2B3885 * ((uint64_t)(v11 - v12) >> 3) >= a5)
    {
      uint64_t v17 = v12 - v7;
      if (0x4FCACE213F2B3885 * ((uint64_t)(v12 - v7) >> 3) >= a5)
      {
        long long v19 = (long long *)((char *)a3 + 616 * a5);
        uint64_t v21 = a1[1];
      }
      else
      {
        long long v19 = (long long *)((char *)a3 + 8 * ((uint64_t)(v12 - v7) >> 3));
        if (v19 == a4)
        {
          uint64_t v21 = a1[1];
          a1[1] = v12;
          if (v17 < 1) {
            return v7;
          }
        }
        else
        {
          uint64_t v41 = *a1 + 616 * v6;
          uint64_t v20 = 0;
          do
          {
            sub_50FFE0(v12 + v20, (long long *)((char *)v19 + v20));
            v20 += 616;
          }
          while ((long long *)((char *)v19 + v20) != a4);
          uint64_t v21 = v12 + v20;
          uint64_t v7 = v41;
          a1[1] = v21;
          if (v17 < 1) {
            return v7;
          }
        }
      }
      uint64_t v22 = 616 * a5;
      unint64_t v23 = v21 - 616 * a5;
      uint64_t v24 = v21;
      if (v23 < v12)
      {
        long long v25 = (uint64_t *)(616 * v6 + 8 * ((v21 - (v7 + v22)) >> 3) + v5 + 80);
        unint64_t v26 = v23;
        uint64_t v24 = v21;
        do
        {
          long long v27 = *((_OWORD *)v25 - 5);
          long long v28 = *((_OWORD *)v25 - 3);
          uint64_t v29 = *(v25 - 4);
          *(_OWORD *)(v24 + 16) = *((_OWORD *)v25 - 4);
          *(_OWORD *)(v24 + 32) = v28;
          *(_OWORD *)uint64_t v24 = v27;
          *(void *)(v24 + 48) = v29;
          *(void *)(v24 + 56) = 0;
          *(_OWORD *)(v24 + 64) = 0u;
          *(_OWORD *)(v24 + 56) = *(_OWORD *)(v26 + 56);
          *(void *)(v24 + 72) = *(void *)(v26 + 72);
          *(void *)(v26 + 72) = 0;
          *(_OWORD *)(v26 + 56) = 0u;
          sub_571CE4(v24 + 80, v25);
          *(void *)(v24 + 568) = 0;
          *(_OWORD *)(v24 + 552) = 0u;
          *(void *)(v24 + 552) = *(void *)(v26 + 552);
          *(void *)(v24 + 560) = *(void *)(v26 + 560);
          *(void *)(v24 + 568) = *(void *)(v26 + 568);
          *(void *)(v26 + 568) = 0;
          *(_OWORD *)(v26 + 552) = 0u;
          long long v30 = *(_OWORD *)(v26 + 576);
          long long v31 = *(_OWORD *)(v26 + 592);
          *(void *)(v24 + 608) = *(void *)(v26 + 608);
          *(_OWORD *)(v24 + 576) = v30;
          *(_OWORD *)(v24 + 592) = v31;
          v26 += 616;
          v24 += 616;
          v25 += 77;
        }
        while (v26 < v12);
      }
      a1[1] = v24;
      sub_7085FC(v7, v23, v21);
      if (v19 != v9)
      {
        uint64_t v32 = v7;
        do
        {
          sub_572D60(v32, v9);
          uint64_t v9 = (long long *)((char *)v9 + 616);
          v32 += 616;
        }
        while (v9 != v19);
      }
    }
    else
    {
      unint64_t v13 = a5 + 0x4FCACE213F2B3885 * ((uint64_t)(v12 - v5) >> 3);
      if (v13 > 0x6A63BD81A98EF6) {
        sub_2E00();
      }
      unint64_t v14 = 0x4FCACE213F2B3885 * ((v11 - v5) >> 3);
      if (2 * v14 > v13) {
        unint64_t v13 = 2 * v14;
      }
      if (v14 >= 0x3531DEC0D4C77BLL) {
        unint64_t v15 = 0x6A63BD81A98EF6;
      }
      else {
        unint64_t v15 = v13;
      }
      unint64_t v46 = a1 + 2;
      if (v15)
      {
        if (v15 > 0x6A63BD81A98EF6) {
          sub_188D718();
        }
        uint64_t v16 = (char *)operator new(616 * v15);
      }
      else
      {
        uint64_t v16 = 0;
      }
      uint64_t v33 = (uint64_t)&v16[616 * v6];
      long long __p = v16;
      uint64_t v43 = v33;
      uint64_t v44 = v33;
      uint8x8_t v45 = &v16[616 * v15];
      uint64_t v34 = 616 * a5;
      uint64_t v35 = v33 + 616 * a5;
      do
      {
        sub_50FFE0(v33, v9);
        v33 += 616;
        uint64_t v9 = (long long *)((char *)v9 + 616);
        v34 -= 616;
      }
      while (v34);
      uint64_t v44 = v35;
      uint64_t v7 = sub_708404(a1, &__p, v7);
      uint64_t v36 = v43;
      while (1)
      {
        uint64_t v37 = v44;
        if (v44 == v36) {
          break;
        }
        v44 -= 616;
        uint64_t v38 = *(void **)(v37 - 64);
        if (v38)
        {
          *(void *)(v37 - 56) = v38;
          operator delete(v38);
        }
        sub_510298(v37 - 536);
        unint64_t v39 = *(void **)(v37 - 560);
        if (v39)
        {
          *(void *)(v37 - 552) = v39;
          operator delete(v39);
        }
      }
      if (__p) {
        operator delete(__p);
      }
    }
  }
  return v7;
}

void sub_7083B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_7079FC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_7083CC(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_20AAAD0(v3 + v1, v3);
  }
  *(void *)(v2 + 8) = v3;
  _Unwind_Resume(exception_object);
}

void sub_7083EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_7079FC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_708404(uint64_t *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  uint64_t v7 = *a1;
  uint64_t v8 = v6;
  if (*a1 != a3)
  {
    uint64_t v9 = 0;
    do
    {
      uint64_t v10 = v6 + v9;
      uint64_t v11 = v6 + v9 - 616;
      uint64_t v12 = a3 + v9;
      long long v13 = *(_OWORD *)(a3 + v9 - 616);
      long long v14 = *(_OWORD *)(a3 + v9 - 600);
      long long v15 = *(_OWORD *)(a3 + v9 - 584);
      *(void *)(v11 + 48) = *(void *)(a3 + v9 - 568);
      *(_OWORD *)(v11 + 16) = v14;
      *(_OWORD *)(v11 + 32) = v15;
      *(_OWORD *)uint64_t v11 = v13;
      uint64_t v16 = v6 + v9 - 560;
      uint64_t v17 = a3 + v9 - 560;
      *(void *)uint64_t v16 = 0;
      *(_OWORD *)(v16 + 8) = 0u;
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      *(void *)(v6 + v9 - 544) = *(void *)(a3 + v9 - 544);
      *(void *)(v17 + 16) = 0;
      *(_OWORD *)uint64_t v17 = 0u;
      sub_571CE4(v6 + v9 - 536, (uint64_t *)(a3 + v9 - 536));
      *(void *)(v10 - 64) = 0;
      *(void *)(v10 - 56) = 0;
      *(void *)(v10 - 48) = 0;
      *(_OWORD *)(v10 - 64) = *(_OWORD *)(a3 + v9 - 64);
      *(void *)(v10 - 48) = *(void *)(a3 + v9 - 48);
      *(void *)(v12 - 64) = 0;
      *(void *)(v12 - 56) = 0;
      *(void *)(v12 - 48) = 0;
      long long v18 = *(_OWORD *)(a3 + v9 - 40);
      long long v19 = *(_OWORD *)(a3 + v9 - 24);
      *(void *)(v10 - 8) = *(void *)(a3 + v9 - 8);
      *(_OWORD *)(v10 - 24) = v19;
      *(_OWORD *)(v10 - 40) = v18;
      v9 -= 616;
    }
    while (a3 + v9 != v7);
    uint64_t v8 = v6 + v9;
  }
  a2[1] = v8;
  uint64_t v20 = a1[1];
  uint64_t v21 = a2[2];
  if (v20 != a3)
  {
    uint64_t v22 = a3 + 80;
    do
    {
      long long v23 = *(_OWORD *)(v22 - 80);
      long long v24 = *(_OWORD *)(v22 - 48);
      uint64_t v25 = *(void *)(v22 - 32);
      *(_OWORD *)(v21 + 16) = *(_OWORD *)(v22 - 64);
      *(_OWORD *)(v21 + 32) = v24;
      *(_OWORD *)uint64_t v21 = v23;
      *(void *)(v21 + 48) = v25;
      *(void *)(v21 + 56) = 0;
      *(_OWORD *)(v21 + 64) = 0u;
      *(_OWORD *)(v21 + 56) = *(_OWORD *)(v22 - 24);
      *(void *)(v21 + 72) = *(void *)(v22 - 8);
      *(void *)(v22 - 8) = 0;
      *(_OWORD *)(v22 - 24) = 0u;
      sub_571CE4(v21 + 80, (uint64_t *)v22);
      *(void *)(v21 + 568) = 0;
      *(_OWORD *)(v21 + 552) = 0u;
      uint64_t v26 = *(void *)(v22 + 480);
      *(void *)(v21 + 552) = *(void *)(v22 + 472);
      *(void *)(v21 + 560) = v26;
      *(void *)(v21 + 568) = *(void *)(v22 + 488);
      *(void *)(v22 + 472) = 0;
      *(void *)(v22 + 480) = 0;
      *(void *)(v22 + 488) = 0;
      long long v27 = *(_OWORD *)(v22 + 496);
      long long v28 = *(_OWORD *)(v22 + 512);
      *(void *)(v21 + 608) = *(void *)(v22 + 528);
      *(_OWORD *)(v21 + 576) = v27;
      *(_OWORD *)(v21 + 592) = v28;
      v21 += 616;
      uint64_t v29 = v22 + 536;
      v22 += 616;
    }
    while (v29 != v20);
    uint64_t v8 = a2[1];
  }
  a2[2] = v21;
  uint64_t v30 = *a1;
  *a1 = v8;
  a2[1] = v30;
  uint64_t v31 = a1[1];
  a1[1] = a2[2];
  a2[2] = v31;
  uint64_t v32 = a1[2];
  a1[2] = a2[3];
  a2[3] = v32;
  *a2 = a2[1];
  return v6;
}

uint64_t sub_7085FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 != a1)
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t v11 = a2 + v6;
      uint64_t v12 = a3 + v6;
      uint64_t v13 = a3 + v6 - 616;
      long long v14 = *(_OWORD *)(a2 + v6 - 616);
      long long v15 = *(_OWORD *)(a2 + v6 - 600);
      long long v16 = *(_OWORD *)(a2 + v6 - 584);
      *(void *)(v13 + 48) = *(void *)(a2 + v6 - 568);
      *(_OWORD *)(v13 + 16) = v15;
      *(_OWORD *)(v13 + 32) = v16;
      *(_OWORD *)uint64_t v13 = v14;
      uint64_t v17 = (void **)(a3 + v6 - 560);
      long long v18 = *v17;
      if (*v17)
      {
        *(void *)(v12 - 552) = v18;
        operator delete(v18);
        *uint64_t v17 = 0;
        *(void *)(a3 + v6 - 552) = 0;
        *(void *)(a3 + v6 - 544) = 0;
      }
      long long v19 = (void *)(v11 - 560);
      *(_OWORD *)uint64_t v17 = *(_OWORD *)(v11 - 560);
      *(void *)(v12 - 544) = *(void *)(v11 - 544);
      void *v19 = 0;
      v19[1] = 0;
      v19[2] = 0;
      sub_5729B0(v12 - 536, (uint64_t *)(v11 - 536));
      uint64_t v22 = *(void **)(v12 - 64);
      uint64_t v21 = (void *)(v12 - 64);
      uint64_t v20 = v22;
      if (v22)
      {
        *(void *)(a3 + v6 - 56) = v20;
        operator delete(v20);
        *uint64_t v21 = 0;
        v21[1] = 0;
        void v21[2] = 0;
      }
      uint64_t v7 = a2 + v6;
      *(_OWORD *)uint64_t v21 = *(_OWORD *)(a2 + v6 - 64);
      uint64_t v8 = a3 + v6;
      *(void *)(v8 - 48) = *(void *)(a2 + v6 - 48);
      *(void *)(v7 - 64) = 0;
      *(void *)(v7 - 56) = 0;
      *(void *)(v7 - 48) = 0;
      long long v9 = *(_OWORD *)(a2 + v6 - 40);
      long long v10 = *(_OWORD *)(a2 + v6 - 24);
      *(void *)(v8 - 8) = *(void *)(a2 + v6 - 8);
      *(_OWORD *)(v8 - 24) = v10;
      *(_OWORD *)(v8 - 40) = v9;
      v6 -= 616;
    }
    while (a2 + v6 != a1);
  }
  return a2;
}

void sub_708738(uint64_t a1, long long *a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, __n128 a7)
{
  if (a4 >= 2)
  {
    if (a4 == 2)
    {
      if (*((void *)a2 - 76) < *(void *)(a1 + 8))
      {
        long long v9 = (long long *)((char *)a2 - 616);
        sub_709A70((long long *)a1, v9);
      }
    }
    else if ((uint64_t)a4 <= 0)
    {
      sub_708994(a1, (uint64_t)a2);
    }
    else
    {
      uint64_t v13 = a5;
      uint64_t v14 = a4 >> 1;
      long long v15 = (long long *)(a1 + 616 * (a4 >> 1));
      if ((uint64_t)a4 <= a6)
      {
        v17.n128_f64[0] = sub_708E6C(a1, (long long *)(a1 + 616 * (a4 >> 1)), a3, a4 >> 1, a5, a7);
        unint64_t v18 = a4 - v14;
        long long v19 = (long long *)(v13 + 616 * v14);
        sub_708E6C(a1 + 616 * (a4 >> 1), a2, a3, v18, (uint64_t)v19, v17);
        sub_70926C((long long *)v13, v19, v19, (long long *)(v13 + 616 * a4), a1);
        if (v13)
        {
          unint64_t v20 = 0;
          do
          {
            uint64_t v21 = *(void **)(v13 + 552);
            if (v21)
            {
              *(void *)(v13 + 560) = v21;
              operator delete(v21);
            }
            sub_510298(v13 + 80);
            uint64_t v22 = *(void **)(v13 + 56);
            if (v22)
            {
              *(void *)(v13 + 64) = v22;
              operator delete(v22);
            }
            ++v20;
            v13 += 616;
          }
          while (v20 < a4);
        }
      }
      else
      {
        sub_708738(a1, a1 + 616 * (a4 >> 1), a3, a4 >> 1, a5, a6);
        uint64_t v16 = a4 - v14;
        sub_708738(v15, a2, a3, v16, v13, a6);
        sub_709698((long long *)a1, v15, a2, a3, v14, v16, (long long *)v13, a6);
      }
    }
  }
}

void sub_708980(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_70960C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_708994(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return;
  }
  uint64_t v3 = a1 + 616;
  if (a1 + 616 == a2) {
    return;
  }
  uint64_t v4 = 0;
  uint64_t v44 = a2;
  uint64_t v5 = a1;
  while (2)
  {
    uint64_t v6 = v3;
    if (*(void *)(v5 + 624) >= *(void *)(v5 + 8)) {
      goto LABEL_4;
    }
    uint64_t v48 = *(void *)(v3 + 48);
    long long v46 = *(_OWORD *)(v3 + 16);
    long long v47 = *(_OWORD *)(v3 + 32);
    long long v45 = *(_OWORD *)v3;
    *(_OWORD *)long long __p = *(_OWORD *)(v5 + 672);
    uint64_t v50 = *(void *)(v5 + 688);
    *(_OWORD *)(v5 + 672) = 0u;
    *(void *)(v5 + 688) = 0;
    sub_571CE4((uint64_t)v51, (uint64_t *)(v5 + 696));
    long long v52 = *(_OWORD *)(v5 + 1168);
    uint64_t v53 = *(void *)(v5 + 1184);
    *(void *)(v5 + 1184) = 0;
    *(_OWORD *)(v5 + 1168) = 0u;
    long long v7 = *(_OWORD *)(v5 + 1208);
    long long v54 = *(_OWORD *)(v5 + 1192);
    long long v55 = v7;
    uint64_t v8 = v4;
    uint64_t v56 = *(void *)(v5 + 1224);
    while (1)
    {
      uint64_t v9 = a1 + v8;
      long long v10 = (_OWORD *)(a1 + v8 + 616);
      long long v11 = *(_OWORD *)(a1 + v8 + 16);
      *long long v10 = *(_OWORD *)(a1 + v8);
      v10[1] = v11;
      _OWORD v10[2] = *(_OWORD *)(a1 + v8 + 32);
      *(void *)(a1 + v8 + 664) = *(void *)(a1 + v8 + 48);
      uint64_t v12 = *(void **)(a1 + v8 + 672);
      if (v12)
      {
        *(void *)(v9 + 680) = v12;
        operator delete(v12);
        *(_OWORD *)(v9 + 680) = 0u;
      }
      *(_OWORD *)(v9 + 672) = *(_OWORD *)(v9 + 56);
      *(void *)(v9 + 688) = *(void *)(v9 + 72);
      *(void *)(v9 + 56) = 0;
      *(void *)(v9 + 64) = 0;
      *(void *)(v9 + 72) = 0;
      *(void *)(v9 + 696) = *(void *)(v9 + 80);
      *(_DWORD *)(v9 + 704) = *(_DWORD *)(v9 + 88);
      sub_4D90B4(v9 + 712, v9 + 96);
      sub_4D90B4(v9 + 872, v9 + 256);
      uint64_t v13 = (void *)(v9 + 1032);
      uint64_t v14 = (void *)(v9 + 416);
      int v15 = *(_DWORD *)(v9 + 1064);
      if (v15 != *(_DWORD *)(v9 + 448))
      {
        if (v15 == 1)
        {
          long long v19 = *(void **)(a1 + v8 + 1040);
          if (!v19)
          {
LABEL_25:
            sub_4F38B0((void *)*(unsigned int *)(v9 + 448), (uint64_t *)(v9 + 416), (void *)(v9 + 1032));
            *(_DWORD *)(v9 + 1064) = *(_DWORD *)(v9 + 448);
            goto LABEL_26;
          }
          *(void *)(a1 + v8 + 1048) = v19;
        }
        else
        {
          if (v15 || (*(char *)(a1 + v8 + 1063) & 0x80000000) == 0) {
            goto LABEL_25;
          }
          long long v19 = *(void **)(a1 + v8 + 1040);
        }
        operator delete(v19);
        goto LABEL_25;
      }
      if (v15 == 1)
      {
        void *v13 = *v14;
        unint64_t v20 = (void *)(a1 + v8);
        uint64_t v21 = *(void **)(a1 + v8 + 1040);
        if (v21)
        {
          v20[131] = v21;
          operator delete(v21);
          *(_OWORD *)(v20 + 131) = 0u;
        }
        uint64_t v22 = v20[54];
        v20[130] = v20[53];
        v20[131] = v22;
        v20[132] = v20[55];
        v20[53] = 0;
        v20[54] = 0;
        v20[55] = 0;
      }
      else if (!v15)
      {
        void *v13 = *v14;
        uint64_t v16 = a1 + v8;
        __n128 v17 = (void **)(a1 + v8 + 1040);
        if (*(char *)(a1 + v8 + 1063) < 0) {
          operator delete(*v17);
        }
        long long v18 = *(_OWORD *)(v16 + 424);
        *(void *)(a1 + v8 + 1056) = *(void *)(v16 + 440);
        *(_OWORD *)__n128 v17 = v18;
        *(unsigned char *)(v16 + 447) = 0;
        *(unsigned char *)(v16 + 424) = 0;
      }
LABEL_26:
      uint64_t v23 = a1 + v8;
      *(void *)(a1 + v8 + 1072) = *(void *)(a1 + v8 + 456);
      long long v24 = (void **)(a1 + v8 + 1080);
      if (*(char *)(a1 + v8 + 1103) < 0) {
        operator delete(*v24);
      }
      long long v25 = *(_OWORD *)(v23 + 464);
      *(void *)(a1 + v8 + 1096) = *(void *)(v23 + 480);
      *(_OWORD *)long long v24 = v25;
      *(unsigned char *)(v23 + 487) = 0;
      *(unsigned char *)(v23 + 464) = 0;
      *(unsigned char *)(v23 + 1104) = *(unsigned char *)(v23 + 488);
      uint64_t v26 = (void **)(v23 + 1112);
      if (*(char *)(v23 + 1135) < 0) {
        operator delete(*v26);
      }
      uint64_t v27 = a1 + v8;
      long long v28 = *(_OWORD *)(a1 + v8 + 496);
      *(void *)(v23 + 1128) = *(void *)(a1 + v8 + 512);
      *(_OWORD *)uint64_t v26 = v28;
      *(unsigned char *)(v27 + 519) = 0;
      *(unsigned char *)(v27 + 496) = 0;
      *(unsigned char *)(v27 + 1136) = *(unsigned char *)(a1 + v8 + 520);
      uint64_t v29 = *(void **)(a1 + v8 + 1144);
      if (v29)
      {
        *(void *)(v27 + 1152) = v29;
        operator delete(v29);
        *(_OWORD *)(v27 + 1152) = 0u;
      }
      *(_OWORD *)(v27 + 1144) = *(_OWORD *)(v27 + 528);
      *(void *)(v27 + 1160) = *(void *)(v27 + 544);
      *(void *)(v27 + 528) = 0;
      *(void *)(v27 + 536) = 0;
      *(void *)(v27 + 544) = 0;
      uint64_t v30 = *(void **)(v27 + 1168);
      long long v31 = 0uLL;
      if (v30)
      {
        uint64_t v32 = (void *)(a1 + v8 + 1176);
        void *v32 = v30;
        operator delete(v30);
        long long v31 = 0uLL;
        *(_OWORD *)uint64_t v32 = 0u;
      }
      uint64_t v33 = (void *)(a1 + v8);
      *(void *)(v27 + 1168) = *(void *)(a1 + v8 + 552);
      v33[147] = *(void *)(a1 + v8 + 560);
      v33[148] = *(void *)(a1 + v8 + 568);
      *(_OWORD *)(a1 + v8 + 552) = v31;
      v33[71] = 0;
      uint64_t v34 = (_OWORD *)(a1 + v8 + 1192);
      long long v35 = *(_OWORD *)(a1 + v8 + 592);
      *uint64_t v34 = *(_OWORD *)(a1 + v8 + 576);
      v34[1] = v35;
      v33[153] = *(void *)(a1 + v8 + 608);
      if (!v8) {
        break;
      }
      v8 -= 616;
      if (*((uint64_t *)&v45 + 1) >= *(v33 - 76))
      {
        uint64_t v36 = a1 + v8 + 616;
        goto LABEL_38;
      }
    }
    uint64_t v36 = a1;
LABEL_38:
    *(void *)(v36 + 48) = v48;
    *(_OWORD *)(v36 + 16) = v46;
    *(_OWORD *)(v36 + 32) = v47;
    *(_OWORD *)uint64_t v36 = v45;
    unint64_t v39 = (void *)v33[7];
    uint64_t v38 = v33 + 7;
    uint64_t v37 = v39;
    if (v39)
    {
      *(void *)(v36 + 64) = v37;
      operator delete(v37);
      *uint64_t v38 = 0;
      v38[1] = 0;
      v38[2] = 0;
    }
    uint64_t v40 = v38 + 62;
    *uint64_t v38 = __p[0];
    *(void **)(v36 + 64) = __p[1];
    *(void *)(v36 + 72) = v50;
    sub_5729B0((uint64_t)(v38 + 3), v51);
    uint64_t v41 = (void *)v38[62];
    if (v41)
    {
      *(void *)(v36 + 560) = v41;
      operator delete(v41);
      void *v40 = 0;
      v38[63] = 0;
      v38[64] = 0;
    }
    void *v40 = v52;
    *(void *)(v36 + 560) = *((void *)&v52 + 1);
    *(void *)(v36 + 568) = v53;
    long long v52 = 0uLL;
    uint64_t v53 = 0;
    long long v42 = v54;
    long long v43 = v55;
    v38[69] = v56;
    *(_OWORD *)(v38 + 65) = v42;
    *(_OWORD *)(v38 + 67) = v43;
    sub_510298((uint64_t)v51);
    a2 = v44;
LABEL_4:
    uint64_t v3 = v6 + 616;
    v4 += 616;
    uint64_t v5 = v6;
    if (v6 + 616 != a2) {
      continue;
    }
    break;
  }
}

void sub_708E60(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_58CC(a1);
}

double sub_708E6C(uint64_t a1, long long *a2, uint64_t a3, unint64_t a4, uint64_t a5, __n128 a6)
{
  if (a4)
  {
    if (a4 == 2)
    {
      uint64_t v14 = (long long *)((char *)a2 - 616);
      int v15 = (void *)(a5 + 56);
      uint64_t v16 = *(void *)(a1 + 8);
      uint64_t v17 = a5 + 80;
      long long v18 = (_OWORD *)(a5 + 552);
      long long v19 = (_OWORD *)(a5 + 576);
      if (*((void *)a2 - 76) >= v16)
      {
        long long v30 = *(_OWORD *)a1;
        long long v31 = *(_OWORD *)(a1 + 16);
        long long v32 = *(_OWORD *)(a1 + 32);
        *(void *)(a5 + 48) = *(void *)(a1 + 48);
        *(_OWORD *)(a5 + 16) = v31;
        *(_OWORD *)(a5 + 32) = v32;
        *(_OWORD *)a5 = v30;
        *int v15 = 0;
        *(_OWORD *)(a5 + 64) = 0u;
        *(_OWORD *)(a5 + 56) = *(_OWORD *)(a1 + 56);
        *(void *)(a5 + 72) = *(void *)(a1 + 72);
        *(void *)(a1 + 72) = 0;
        *(_OWORD *)(a1 + 56) = 0u;
        sub_571CE4(v17, (uint64_t *)(a1 + 80));
        *(void *)(a5 + 568) = 0;
        *long long v18 = 0u;
        *long long v18 = *(_OWORD *)(a1 + 552);
        *(void *)(a5 + 568) = *(void *)(a1 + 568);
        *(void *)(a1 + 568) = 0;
        *(_OWORD *)(a1 + 552) = 0u;
        long long v33 = *(_OWORD *)(a1 + 576);
        long long v34 = *(_OWORD *)(a1 + 592);
        *(void *)(a5 + 608) = *(void *)(a1 + 608);
        _OWORD *v19 = v33;
        *(_OWORD *)(a5 + 592) = v34;
        long long v35 = *v14;
        long long v36 = *(long long *)((char *)a2 - 600);
        long long v37 = *(long long *)((char *)a2 - 584);
        *(void *)(a5 + 664) = *((void *)a2 - 71);
        *(_OWORD *)(a5 + 632) = v36;
        *(_OWORD *)(a5 + 648) = v37;
        *(_OWORD *)(a5 + 616) = v35;
        *(void *)(a5 + 672) = 0;
        *(_OWORD *)(a5 + 680) = 0u;
        *(_OWORD *)(a5 + 672) = *(a2 - 35);
        *(void *)(a5 + 688) = *((void *)a2 - 68);
        *((void *)a2 - 68) = 0;
        *(a2 - 35) = 0u;
        sub_571CE4(a5 + 696, (uint64_t *)a2 - 67);
        *(void *)(a5 + 1184) = 0;
        *(_OWORD *)(a5 + 1168) = 0u;
        *(_OWORD *)(a5 + 1168) = *(a2 - 4);
        *(void *)(a5 + 1184) = *((void *)a2 - 6);
        *((void *)a2 - 6) = 0;
        *(a2 - 4) = 0u;
        a6 = *(__n128 *)((char *)a2 - 40);
        long long v28 = *(long long *)((char *)a2 - 24);
        *(void *)(a5 + 1224) = *((void *)a2 - 1);
      }
      else
      {
        long long v20 = *v14;
        long long v21 = *(long long *)((char *)a2 - 600);
        long long v22 = *(long long *)((char *)a2 - 584);
        *(void *)(a5 + 48) = *((void *)a2 - 71);
        *(_OWORD *)(a5 + 16) = v21;
        *(_OWORD *)(a5 + 32) = v22;
        *(_OWORD *)a5 = v20;
        *int v15 = 0;
        *(_OWORD *)(a5 + 64) = 0u;
        *(_OWORD *)(a5 + 56) = *(a2 - 35);
        *(void *)(a5 + 72) = *((void *)a2 - 68);
        *((void *)a2 - 68) = 0;
        *(a2 - 35) = 0u;
        sub_571CE4(v17, (uint64_t *)a2 - 67);
        *(void *)(a5 + 568) = 0;
        *long long v18 = 0u;
        *long long v18 = *(a2 - 4);
        *(void *)(a5 + 568) = *((void *)a2 - 6);
        *((void *)a2 - 6) = 0;
        *(a2 - 4) = 0u;
        long long v23 = *(long long *)((char *)a2 - 40);
        long long v24 = *(long long *)((char *)a2 - 24);
        *(void *)(a5 + 608) = *((void *)a2 - 1);
        _OWORD *v19 = v23;
        *(_OWORD *)(a5 + 592) = v24;
        long long v25 = *(_OWORD *)a1;
        long long v26 = *(_OWORD *)(a1 + 16);
        long long v27 = *(_OWORD *)(a1 + 32);
        *(void *)(a5 + 664) = *(void *)(a1 + 48);
        *(_OWORD *)(a5 + 632) = v26;
        *(_OWORD *)(a5 + 648) = v27;
        *(_OWORD *)(a5 + 616) = v25;
        *(void *)(a5 + 672) = 0;
        *(_OWORD *)(a5 + 680) = 0u;
        *(_OWORD *)(a5 + 672) = *(_OWORD *)(a1 + 56);
        *(void *)(a5 + 688) = *(void *)(a1 + 72);
        *(void *)(a1 + 72) = 0;
        *(_OWORD *)(a1 + 56) = 0u;
        sub_571CE4(a5 + 696, (uint64_t *)(a1 + 80));
        *(void *)(a5 + 1184) = 0;
        *(_OWORD *)(a5 + 1168) = 0u;
        *(_OWORD *)(a5 + 1168) = *(_OWORD *)(a1 + 552);
        *(void *)(a5 + 1184) = *(void *)(a1 + 568);
        *(void *)(a1 + 568) = 0;
        *(_OWORD *)(a1 + 552) = 0u;
        a6 = *(__n128 *)(a1 + 576);
        long long v28 = *(_OWORD *)(a1 + 592);
        *(void *)(a5 + 1224) = *(void *)(a1 + 608);
      }
      *(__n128 *)(a5 + 1192) = a6;
      *(_OWORD *)(a5 + 1208) = v28;
    }
    else if (a4 == 1)
    {
      long long v10 = *(_OWORD *)a1;
      long long v11 = *(_OWORD *)(a1 + 32);
      uint64_t v12 = *(void *)(a1 + 48);
      *(_OWORD *)(a5 + 16) = *(_OWORD *)(a1 + 16);
      *(_OWORD *)(a5 + 32) = v11;
      *(_OWORD *)a5 = v10;
      *(void *)(a5 + 48) = v12;
      *(void *)(a5 + 56) = 0;
      *(_OWORD *)(a5 + 64) = 0u;
      *(_OWORD *)(a5 + 56) = *(_OWORD *)(a1 + 56);
      *(void *)(a5 + 72) = *(void *)(a1 + 72);
      *(void *)(a1 + 72) = 0;
      *(_OWORD *)(a1 + 56) = 0u;
      sub_571CE4(a5 + 80, (uint64_t *)(a1 + 80));
      *(void *)(a5 + 568) = 0;
      *(_OWORD *)(a5 + 552) = 0u;
      *(void *)(a5 + 552) = *(void *)(a1 + 552);
      *(void *)(a5 + 560) = *(void *)(a1 + 560);
      *(void *)(a5 + 568) = *(void *)(a1 + 568);
      *(void *)(a1 + 568) = 0;
      *(_OWORD *)(a1 + 552) = 0u;
      a6 = *(__n128 *)(a1 + 576);
      long long v13 = *(_OWORD *)(a1 + 592);
      *(void *)(a5 + 608) = *(void *)(a1 + 608);
      *(__n128 *)(a5 + 576) = a6;
      *(_OWORD *)(a5 + 592) = v13;
    }
    else if ((uint64_t)a4 > 8)
    {
      unint64_t v38 = a4 >> 1;
      uint64_t v39 = 616 * (a4 >> 1);
      sub_708738(a1, a1 + v39, a3, a4 >> 1, a5, a4 >> 1);
      sub_708738(a1 + v39, a2, a3, a4 - v38, a5 + v39, a4 - v38);
      a6.n128_u64[0] = sub_70A1FC((long long *)a1, (long long *)(a1 + v39), (long long *)(a1 + v39), a2, a5).n128_u64[0];
    }
    else
    {
      a6.n128_u64[0] = sub_709CBC((long long *)a1, a2, a5).n128_u64[0];
    }
  }
  return a6.n128_f64[0];
}

__n128 sub_70926C(long long *a1, long long *a2, long long *a3, long long *a4, uint64_t a5)
{
  uint64_t v5 = a5;
  if (a1 == a2)
  {
LABEL_25:
    while (a3 != a4)
    {
      long long v46 = *a3;
      long long v47 = a3[1];
      long long v48 = a3[2];
      *(void *)(v5 + 48) = *((void *)a3 + 6);
      *(_OWORD *)(v5 + 16) = v47;
      *(_OWORD *)(v5 + 32) = v48;
      *(_OWORD *)uint64_t v5 = v46;
      unint64_t v49 = *(void **)(v5 + 56);
      if (v49)
      {
        *(void *)(v5 + 64) = v49;
        operator delete(v49);
        *(void *)(v5 + 56) = 0;
        *(void *)(v5 + 64) = 0;
        *(void *)(v5 + 72) = 0;
      }
      *(_OWORD *)(v5 + 56) = *(long long *)((char *)a3 + 56);
      *(void *)(v5 + 72) = *((void *)a3 + 9);
      *((void *)a3 + 7) = 0;
      *((void *)a3 + 8) = 0;
      *((void *)a3 + 9) = 0;
      sub_5729B0(v5 + 80, (uint64_t *)a3 + 10);
      uint64_t v50 = *(void **)(v5 + 552);
      if (v50)
      {
        *(void *)(v5 + 560) = v50;
        operator delete(v50);
        *(void *)(v5 + 552) = 0;
        *(void *)(v5 + 560) = 0;
        *(void *)(v5 + 568) = 0;
      }
      uint64_t v44 = *((void *)a3 + 70);
      *(void *)(v5 + 552) = *((void *)a3 + 69);
      *(void *)(v5 + 560) = v44;
      *(void *)(v5 + 568) = *((void *)a3 + 71);
      *((void *)a3 + 69) = 0;
      *((void *)a3 + 70) = 0;
      *((void *)a3 + 71) = 0;
      __n128 result = (__n128)a3[36];
      long long v45 = a3[37];
      *(void *)(v5 + 608) = *((void *)a3 + 76);
      *(__n128 *)(v5 + 576) = result;
      *(_OWORD *)(v5 + 592) = v45;
      v5 += 616;
      a3 = (long long *)((char *)a3 + 616);
    }
  }
  else
  {
    uint64_t v9 = a1;
    uint64_t v10 = a5 + 576;
    while (a3 != a4)
    {
      uint64_t v14 = (_OWORD *)(v10 - 576);
      int v15 = (void **)(v10 - 520);
      if (*((void *)a3 + 1) >= *((void *)v9 + 1))
      {
        long long v23 = *v9;
        long long v24 = v9[1];
        long long v25 = v9[2];
        *(void *)(v10 - 528) = *((void *)v9 + 6);
        *(_OWORD *)(v10 - 560) = v24;
        *(_OWORD *)(v10 - 544) = v25;
        _OWORD *v14 = v23;
        long long v26 = *v15;
        if (*v15)
        {
          *(void *)(v10 - 512) = v26;
          operator delete(v26);
          *int v15 = 0;
          *(void *)(v10 - 512) = 0;
          *(void *)(v10 - 504) = 0;
        }
        *(_OWORD *)int v15 = *(long long *)((char *)v9 + 56);
        *(void *)(v10 - 504) = *((void *)v9 + 9);
        *((void *)v9 + 7) = 0;
        *((void *)v9 + 8) = 0;
        *((void *)v9 + 9) = 0;
        sub_5729B0(v10 - 496, (uint64_t *)v9 + 10);
        long long v27 = *(void **)(v10 - 24);
        if (v27)
        {
          *(void *)(v10 - 16) = v27;
          operator delete(v27);
          *(void *)(v10 - 24) = 0;
          *(void *)(v10 - 16) = 0;
          *(void *)(v10 - 8) = 0;
        }
        uint64_t v11 = *((void *)v9 + 70);
        *(void *)(v10 - 24) = *((void *)v9 + 69);
        *(void *)(v10 - 16) = v11;
        *(void *)(v10 - 8) = *((void *)v9 + 71);
        *((void *)v9 + 71) = 0;
        *(long long *)((char *)v9 + 552) = 0u;
        __n128 result = (__n128)v9[36];
        long long v13 = v9[37];
        *(void *)(v10 + 32) = *((void *)v9 + 76);
        *(__n128 *)uint64_t v10 = result;
        *(_OWORD *)(v10 + 16) = v13;
        uint64_t v9 = (long long *)((char *)v9 + 616);
        v10 += 616;
        if (v9 == a2)
        {
LABEL_23:
          uint64_t v5 = v10 - 576;
          goto LABEL_25;
        }
      }
      else
      {
        long long v16 = *a3;
        long long v17 = a3[1];
        long long v18 = a3[2];
        *(void *)(v10 - 528) = *((void *)a3 + 6);
        *(_OWORD *)(v10 - 560) = v17;
        *(_OWORD *)(v10 - 544) = v18;
        _OWORD *v14 = v16;
        long long v19 = *v15;
        if (*v15)
        {
          *(void *)(v10 - 512) = v19;
          operator delete(v19);
          *int v15 = 0;
          *(void *)(v10 - 512) = 0;
          *(void *)(v10 - 504) = 0;
        }
        *(_OWORD *)int v15 = *(long long *)((char *)a3 + 56);
        *(void *)(v10 - 504) = *((void *)a3 + 9);
        *((void *)a3 + 7) = 0;
        *((void *)a3 + 8) = 0;
        *((void *)a3 + 9) = 0;
        sub_5729B0(v10 - 496, (uint64_t *)a3 + 10);
        long long v20 = *(void **)(v10 - 24);
        if (v20)
        {
          *(void *)(v10 - 16) = v20;
          operator delete(v20);
          *(void *)(v10 - 24) = 0;
          *(void *)(v10 - 16) = 0;
          *(void *)(v10 - 8) = 0;
        }
        uint64_t v21 = *((void *)a3 + 70);
        *(void *)(v10 - 24) = *((void *)a3 + 69);
        *(void *)(v10 - 16) = v21;
        *(void *)(v10 - 8) = *((void *)a3 + 71);
        *((void *)a3 + 71) = 0;
        *(long long *)((char *)a3 + 552) = 0u;
        __n128 result = (__n128)a3[36];
        long long v22 = a3[37];
        *(void *)(v10 + 32) = *((void *)a3 + 76);
        *(__n128 *)uint64_t v10 = result;
        *(_OWORD *)(v10 + 16) = v22;
        a3 = (long long *)((char *)a3 + 616);
        v10 += 616;
        if (v9 == a2) {
          goto LABEL_23;
        }
      }
    }
    if (v9 != a2)
    {
      uint64_t v28 = 0;
      do
      {
        uint64_t v32 = (uint64_t)v9 + v28;
        uint64_t v33 = v10 + v28;
        uint64_t v34 = v10 + v28 - 576;
        long long v35 = *(long long *)((char *)v9 + v28);
        long long v36 = *(long long *)((char *)v9 + v28 + 16);
        long long v37 = *(long long *)((char *)v9 + v28 + 32);
        *(void *)(v34 + 48) = *(void *)((char *)v9 + v28 + 48);
        *(_OWORD *)(v34 + 16) = v36;
        *(_OWORD *)(v34 + 32) = v37;
        *(_OWORD *)uint64_t v34 = v35;
        unint64_t v38 = (void **)(v10 + v28 - 520);
        uint64_t v39 = *v38;
        if (*v38)
        {
          *(void *)(v33 - 512) = v39;
          operator delete(v39);
          *unint64_t v38 = 0;
          *(void *)(v10 + v28 - 512) = 0;
          *(void *)(v10 + v28 - 504) = 0;
        }
        *(_OWORD *)unint64_t v38 = *(_OWORD *)(v32 + 56);
        *(void *)(v33 - 504) = *(void *)(v32 + 72);
        *(void *)(v32 + 56) = 0;
        *(void *)(v32 + 64) = 0;
        *(void *)(v32 + 72) = 0;
        uint64_t v40 = v32 + 80;
        sub_5729B0(v33 - 496, (uint64_t *)v40);
        long long v43 = *(void **)(v33 - 24);
        long long v42 = (void *)(v33 - 24);
        uint64_t v41 = v43;
        if (v43)
        {
          *(void *)(v10 + v28 - 16) = v41;
          operator delete(v41);
          *long long v42 = 0;
          v42[1] = 0;
          _OWORD v42[2] = 0;
        }
        uint64_t v29 = *(void *)(v40 + 480);
        *long long v42 = *(void *)(v40 + 472);
        uint64_t v30 = v10 + v28;
        *(void *)(v30 - 16) = v29;
        *(void *)(v30 - 8) = *(void *)(v40 + 488);
        *(void *)(v40 + 472) = 0;
        *(void *)(v40 + 480) = 0;
        *(void *)(v40 + 488) = 0;
        __n128 result = *(__n128 *)(v40 + 496);
        long long v31 = *(_OWORD *)(v40 + 512);
        *(void *)(v30 + 32) = *(void *)(v40 + 528);
        *(__n128 *)uint64_t v30 = result;
        *(_OWORD *)(v30 + 16) = v31;
        v28 += 616;
      }
      while ((long long *)(v40 + 536) != a2);
    }
  }
  return result;
}

void *sub_70960C(void *a1)
{
  uint64_t v2 = (void *)*a1;
  *a1 = 0;
  if (v2)
  {
    uint64_t v3 = (unint64_t *)a1[1];
    if (*v3)
    {
      unint64_t v4 = 0;
      do
      {
        uint64_t v5 = (void *)v2[69];
        if (v5)
        {
          v2[70] = v5;
          operator delete(v5);
        }
        sub_510298((uint64_t)(v2 + 10));
        uint64_t v6 = (void *)v2[7];
        if (v6)
        {
          v2[8] = v6;
          operator delete(v6);
        }
        ++v4;
        v2 += 77;
      }
      while (v4 < *v3);
    }
  }
  return a1;
}

void sub_709698(long long *a1, long long *a2, long long *a3, uint64_t a4, uint64_t a5, uint64_t a6, long long *a7, uint64_t a8)
{
  if (!a6) {
    return;
  }
  while (a6 > a8 && a5 > a8)
  {
    if (!a5) {
      return;
    }
    uint64_t v11 = 0;
    uint64_t v12 = -a5;
    while (1)
    {
      long long v13 = (long long *)((char *)a1 + v11);
      if (*((void *)a2 + 1) < *(void *)((char *)a1 + v11 + 8)) {
        break;
      }
      v11 += 616;
      if (__CFADD__(v12++, 1)) {
        return;
      }
    }
    uint64_t v15 = -v12;
    if (-v12 >= a6)
    {
      if (v12 == -1)
      {
        sub_709A70((long long *)((char *)a1 + v11), a2);
        return;
      }
      if (v12 > 0) {
        uint64_t v15 = 1 - v12;
      }
      uint64_t v25 = v15 >> 1;
      long long v24 = a2;
      if (a2 != a3)
      {
        unint64_t v32 = 0x4FCACE213F2B3885 * (((char *)a3 - (char *)a2) >> 3);
        long long v24 = a2;
        do
        {
          unint64_t v33 = v32 >> 1;
          uint64_t v34 = (char *)v24 + 616 * (v32 >> 1);
          uint64_t v35 = *((void *)v34 + 1);
          long long v36 = (long long *)(v34 + 616);
          v32 += ~(v32 >> 1);
          if (v35 < *(void *)((char *)a1 + 616 * v25 + v11 + 8)) {
            long long v24 = v36;
          }
          else {
            unint64_t v32 = v33;
          }
        }
        while (v32);
      }
      long long v18 = (long long *)((char *)a1 + 616 * v25 + v11);
      uint64_t v17 = 0x4FCACE213F2B3885 * (((char *)v24 - (char *)a2) >> 3);
      if (v18 != a2)
      {
LABEL_21:
        if (v24 == a2)
        {
          long long v26 = v18;
        }
        else
        {
          uint64_t v49 = v17;
          uint64_t v50 = v25;
          uint64_t v51 = a6;
          long long v52 = a3;
          uint64_t v53 = a8;
          uint64_t v54 = a4;
          long long v55 = a7;
          sub_709A70(v18, a2);
          long long v26 = (long long *)((char *)v18 + 616);
          for (uint64_t i = (long long *)((char *)a2 + 616); i != v24; uint64_t i = (long long *)((char *)i + 616))
          {
            if (v26 == a2) {
              a2 = i;
            }
            sub_709A70(v26, i);
            long long v26 = (long long *)((char *)v26 + 616);
          }
          if (v26 != a2)
          {
            uint64_t v28 = v26;
            uint64_t v29 = a2;
            while (1)
            {
              sub_709A70(v28, v29);
              uint64_t v29 = (long long *)((char *)v29 + 616);
              BOOL v30 = (long long *)((char *)v28 + 616) == a2;
              if (v29 == v24)
              {
                if ((long long *)((char *)v28 + 616) == a2) {
                  break;
                }
                uint64_t v29 = (long long *)((char *)a2 + 616);
                v28 += 77;
                while (1)
                {
                  sub_709A70((long long *)((char *)v28 - 616), a2);
                  BOOL v30 = v28 == a2;
                  if (v29 != v24) {
                    break;
                  }
                  BOOL v31 = v28 == a2;
                  uint64_t v28 = (long long *)((char *)v28 + 616);
                  if (v31) {
                    goto LABEL_38;
                  }
                }
              }
              else
              {
                uint64_t v28 = (long long *)((char *)v28 + 616);
              }
              if (v30) {
                a2 = v29;
              }
            }
          }
LABEL_38:
          a4 = v54;
          a7 = v55;
          a3 = v52;
          a8 = v53;
          uint64_t v25 = v50;
          a6 = v51;
          uint64_t v17 = v49;
        }
        goto LABEL_51;
      }
    }
    else
    {
      if (a6 >= 0) {
        uint64_t v16 = a6;
      }
      else {
        uint64_t v16 = a6 + 1;
      }
      uint64_t v17 = v16 >> 1;
      long long v18 = a2;
      if ((char *)a2 - (char *)a1 != v11)
      {
        unint64_t v19 = 0x4FCACE213F2B3885 * (((char *)a2 - (char *)a1 - v11) >> 3);
        long long v18 = (long long *)((char *)a1 + v11);
        do
        {
          unint64_t v20 = v19 >> 1;
          uint64_t v21 = (char *)v18 + 616 * (v19 >> 1);
          uint64_t v22 = *((void *)v21 + 1);
          long long v23 = (long long *)(v21 + 616);
          v19 += ~(v19 >> 1);
          if (*((void *)a2 + 77 * v17 + 1) < v22) {
            unint64_t v19 = v20;
          }
          else {
            long long v18 = v23;
          }
        }
        while (v19);
      }
      long long v24 = (long long *)((char *)a2 + 616 * v17);
      uint64_t v25 = 0x4FCACE213F2B3885 * (((char *)v18 - (char *)a1 - v11) >> 3);
      if (v18 != a2) {
        goto LABEL_21;
      }
    }
    long long v26 = v24;
LABEL_51:
    a5 = -v25 - v12;
    uint64_t v37 = a6 - v17;
    if (v25 + v17 >= a6 - (v25 + v17) - v12)
    {
      uint64_t v44 = a4;
      uint64_t v45 = v25;
      long long v46 = a7;
      uint64_t v47 = a8;
      uint64_t v48 = v17;
      sub_709698(v26, v24, a3);
      a8 = v47;
      a4 = v44;
      a7 = v46;
      a2 = v18;
      uint64_t v37 = v48;
      a5 = v45;
      a3 = v26;
    }
    else
    {
      unint64_t v38 = (char *)a1 + v11;
      uint64_t v39 = v18;
      uint64_t v40 = a3;
      uint64_t v41 = a4;
      long long v42 = a7;
      uint64_t v43 = a8;
      sub_709698(v38, v39, v26);
      a3 = v40;
      a8 = v43;
      a4 = v41;
      a7 = v42;
      long long v13 = v26;
      a2 = v24;
    }
    a6 = v37;
    a1 = v13;
    if (!v37) {
      return;
    }
  }

  sub_70A4D8(a1, a2, a3, a4, a5, a6, a7);
}

void sub_709A70(long long *a1, long long *a2)
{
  long long v18 = *a1;
  long long v19 = a1[1];
  long long v20 = a1[2];
  uint64_t v21 = *((void *)a1 + 6);
  uint64_t v4 = (uint64_t)a1 + 56;
  *(_OWORD *)long long __p = *(long long *)((char *)a1 + 56);
  uint64_t v23 = *((void *)a1 + 9);
  *(long long *)((char *)a1 + 56) = 0u;
  *((void *)a1 + 9) = 0;
  uint64_t v5 = (uint64_t)(a1 + 5);
  sub_571CE4((uint64_t)v24, (uint64_t *)a1 + 10);
  uint64_t v6 = (void *)a1 + 69;
  long long v25 = *(long long *)((char *)a1 + 552);
  uint64_t v26 = *((void *)a1 + 71);
  *((void *)a1 + 71) = 0;
  *(long long *)((char *)a1 + 552) = 0u;
  long long v7 = a1[37];
  long long v27 = a1[36];
  long long v28 = v7;
  uint64_t v29 = *((void *)a1 + 76);
  uint64_t v8 = *((void *)a2 + 6);
  long long v9 = a2[2];
  long long v10 = *a2;
  a1[1] = a2[1];
  a1[2] = v9;
  *a1 = v10;
  *((void *)a1 + 6) = v8;
  uint64_t v11 = *(void **)v4;
  if (*(void *)v4)
  {
    *((void *)a1 + 8) = v11;
    operator delete(v11);
    *(void *)uint64_t v4 = 0;
    *(void *)(v4 + 8) = 0;
    *(void *)(v4 + 16) = 0;
  }
  *(long long *)((char *)a1 + 56) = *(long long *)((char *)a2 + 56);
  *((void *)a1 + 9) = *((void *)a2 + 9);
  *((void *)a2 + 7) = 0;
  *((void *)a2 + 8) = 0;
  *((void *)a2 + 9) = 0;
  sub_5729B0(v5, (uint64_t *)a2 + 10);
  uint64_t v12 = (void *)*((void *)a1 + 69);
  if (v12)
  {
    *((void *)a1 + 70) = v12;
    operator delete(v12);
    void *v6 = 0;
    *((void *)a1 + 70) = 0;
    *((void *)a1 + 71) = 0;
  }
  *(_OWORD *)uint64_t v6 = *(long long *)((char *)a2 + 552);
  *((void *)a1 + 71) = *((void *)a2 + 71);
  *((void *)a2 + 71) = 0;
  *(long long *)((char *)a2 + 552) = 0u;
  long long v13 = a2[36];
  long long v14 = a2[37];
  *((void *)a1 + 76) = *((void *)a2 + 76);
  a1[36] = v13;
  a1[37] = v14;
  *a2 = v18;
  a2[1] = v19;
  a2[2] = v20;
  *((void *)a2 + 6) = v21;
  uint64_t v15 = (void *)*((void *)a2 + 7);
  if (v15)
  {
    *((void *)a2 + 8) = v15;
    operator delete(v15);
  }
  *(long long *)((char *)a2 + 56) = *(_OWORD *)__p;
  *((void *)a2 + 9) = v23;
  sub_5729B0((uint64_t)(a2 + 5), v24);
  uint64_t v16 = (void *)*((void *)a2 + 69);
  if (v16)
  {
    *((void *)a2 + 70) = v16;
    operator delete(v16);
  }
  *(long long *)((char *)a2 + 552) = v25;
  *((void *)a2 + 71) = v26;
  uint64_t v26 = 0;
  long long v25 = 0uLL;
  long long v17 = v28;
  a2[36] = v27;
  a2[37] = v17;
  *((void *)a2 + 76) = v29;
  sub_510298((uint64_t)v24);
}

__n128 sub_709CBC(long long *a1, long long *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = a1;
    long long v6 = *a1;
    long long v7 = a1[2];
    uint64_t v8 = *((void *)a1 + 6);
    *(_OWORD *)(a3 + 16) = a1[1];
    *(_OWORD *)(a3 + 32) = v7;
    *(_OWORD *)a3 = v6;
    *(void *)(a3 + 48) = v8;
    *(void *)(a3 + 56) = 0;
    *(_OWORD *)(a3 + 64) = 0u;
    *(_OWORD *)(a3 + 56) = *(long long *)((char *)a1 + 56);
    *(void *)(a3 + 72) = *((void *)a1 + 9);
    *((void *)a1 + 9) = 0;
    *(long long *)((char *)a1 + 56) = 0u;
    sub_571CE4(a3 + 80, (uint64_t *)a1 + 10);
    *(void *)(a3 + 568) = 0;
    *(_OWORD *)(a3 + 552) = 0u;
    *(void *)(a3 + 552) = *((void *)v5 + 69);
    *(void *)(a3 + 560) = *((void *)v5 + 70);
    *(void *)(a3 + 568) = *((void *)v5 + 71);
    *((void *)v5 + 71) = 0;
    *(long long *)((char *)v5 + 552) = 0u;
    __n128 result = (__n128)v5[36];
    long long v10 = v5[37];
    *(void *)(a3 + 608) = *((void *)v5 + 76);
    *(__n128 *)(a3 + 576) = result;
    *(_OWORD *)(a3 + 592) = v10;
    uint64_t v11 = (long long *)((char *)v5 + 616);
    if ((long long *)((char *)v5 + 616) != a2)
    {
      uint64_t v12 = 0;
      long long v13 = (_OWORD *)a3;
      do
      {
        long long v19 = v11;
        long long v20 = (_OWORD *)((char *)v13 + 616);
        if (*((void *)v5 + 78) >= *((void *)v13 + 1))
        {
          long long v14 = *v11;
          long long v15 = v11[1];
          long long v16 = v11[2];
          *((void *)v13 + 83) = *((void *)v11 + 6);
          *(_OWORD *)((char *)v13 + 632) = v15;
          *(_OWORD *)((char *)v13 + 648) = v16;
          *long long v20 = v14;
          *((void *)v13 + 84) = 0;
          *(_OWORD *)((char *)v13 + 680) = 0u;
          v13[42] = v5[42];
          *((void *)v13 + 86) = *((void *)v5 + 86);
          *((void *)v5 + 86) = 0;
          v5[42] = 0u;
          sub_571CE4((uint64_t)v13 + 696, (uint64_t *)v5 + 87);
          *((void *)v13 + 148) = 0;
          v13[73] = 0u;
          v13[73] = v5[73];
          *((void *)v13 + 148) = *((void *)v5 + 148);
          *((void *)v5 + 148) = 0;
          v5[73] = 0u;
          long long v17 = (char *)v13 + 1192;
        }
        else
        {
          long long v21 = v13[1];
          *long long v20 = *v13;
          *(_OWORD *)((char *)v13 + 632) = v21;
          *(_OWORD *)((char *)v13 + 648) = v13[2];
          *((void *)v13 + 83) = *((void *)v13 + 6);
          v13[42] = *(_OWORD *)((char *)v13 + 56);
          *((void *)v13 + 86) = *((void *)v13 + 9);
          *(_OWORD *)((char *)v13 + 56) = 0u;
          *((void *)v13 + 9) = 0;
          sub_571CE4((uint64_t)v13 + 696, (uint64_t *)v13 + 10);
          v13[73] = *(_OWORD *)((char *)v13 + 552);
          *((void *)v13 + 148) = *((void *)v13 + 71);
          *((void *)v13 + 71) = 0;
          *(_OWORD *)((char *)v13 + 552) = 0u;
          long long v22 = v13[37];
          *(_OWORD *)((char *)v13 + 1192) = v13[36];
          *(_OWORD *)((char *)v13 + 1208) = v22;
          *((void *)v13 + 153) = *((void *)v13 + 76);
          uint64_t v23 = a3;
          if (v13 != (_OWORD *)a3)
          {
            uint64_t v24 = v12;
            while (1)
            {
              uint64_t v23 = a3 + v24;
              if (*((void *)v5 + 78) >= *(void *)(a3 + v24 - 608)) {
                goto LABEL_39;
              }
              long long v27 = *(_OWORD *)(v23 - 600);
              *(_OWORD *)uint64_t v23 = *(_OWORD *)(v23 - 616);
              *(_OWORD *)(v23 + 16) = v27;
              *(_OWORD *)(v23 + 32) = *(_OWORD *)(v23 - 584);
              *(void *)(v23 + 48) = *(void *)(v23 - 568);
              long long v28 = *(void **)(v23 + 56);
              if (v28)
              {
                *(void *)(a3 + v24 + 64) = v28;
                operator delete(v28);
              }
              uint64_t v29 = (void *)(v23 - 560);
              *(_OWORD *)(v23 + 56) = *(_OWORD *)(v23 - 560);
              uint64_t v30 = a3 + v24;
              uint64_t v31 = *(void *)(a3 + v24 - 544);
              *uint64_t v29 = 0;
              v29[1] = 0;
              v29[2] = 0;
              uint64_t v32 = *(void *)(a3 + v24 - 536);
              *(void *)(v30 + 72) = v31;
              *(void *)(v30 + 80) = v32;
              *(_DWORD *)(v30 + 88) = *(_DWORD *)(a3 + v24 - 528);
              sub_4D90B4(a3 + v24 + 96, a3 + v24 - 520);
              sub_4D90B4(v30 + 256, v30 - 360);
              unint64_t v33 = (void *)(a3 + v24 + 416);
              uint64_t v34 = (void *)(a3 + v24 - 200);
              int v35 = *(_DWORD *)(a3 + v24 + 448);
              if (v35 == *(_DWORD *)(a3 + v24 - 168))
              {
                if (v35 == 1)
                {
                  *unint64_t v33 = *v34;
                  uint64_t v39 = a3 + v24;
                  uint64_t v40 = *(void **)(a3 + v24 + 424);
                  if (v40)
                  {
                    *(void *)(v39 + 432) = v40;
                    operator delete(v40);
                  }
                  *(_OWORD *)(v39 + 424) = *(_OWORD *)(v39 - 192);
                  *(void *)(v39 + 440) = *(void *)(v39 - 176);
                  *(void *)(v39 - 184) = 0;
                  *(void *)(v39 - 176) = 0;
                  *(void *)(v39 - 192) = 0;
                }
                else if (!v35)
                {
                  *unint64_t v33 = *v34;
                  uint64_t v36 = a3 + v24;
                  uint64_t v37 = (void **)(a3 + v24 + 424);
                  if (*(char *)(a3 + v24 + 447) < 0) {
                    operator delete(*v37);
                  }
                  *(_OWORD *)uint64_t v37 = *(_OWORD *)(v36 - 192);
                  *(void *)(a3 + v24 + 440) = *(void *)(v36 - 176);
                  *(unsigned char *)(v36 - 169) = 0;
                  *(unsigned char *)(v36 - 192) = 0;
                }
                goto LABEL_30;
              }
              if (v35 != 1) {
                break;
              }
              unint64_t v38 = *(void **)(a3 + v24 + 424);
              if (v38)
              {
                *(void *)(a3 + v24 + 432) = v38;
LABEL_28:
                operator delete(v38);
              }
LABEL_29:
              sub_4F38B0((void *)*(unsigned int *)(v30 - 168), (uint64_t *)(v30 - 200), (void *)(v30 + 416));
              *(_DWORD *)(v30 + 448) = *(_DWORD *)(v30 - 168);
LABEL_30:
              uint64_t v41 = a3 + v24;
              *(void *)(a3 + v24 + 456) = *(void *)(a3 + v24 - 160);
              long long v42 = (void **)(a3 + v24 + 464);
              if (*(char *)(a3 + v24 + 487) < 0) {
                operator delete(*v42);
              }
              *(_OWORD *)long long v42 = *(_OWORD *)(v41 - 152);
              *(void *)(a3 + v24 + 480) = *(void *)(v41 - 136);
              *(unsigned char *)(v41 - 129) = 0;
              *(unsigned char *)(v41 - 152) = 0;
              *(unsigned char *)(v41 + 488) = *(unsigned char *)(v41 - 128);
              uint64_t v43 = v41 + 496;
              if (*(char *)(v41 + 519) < 0) {
                operator delete(*(void **)v43);
              }
              uint64_t v44 = a3 + v24;
              *(_OWORD *)uint64_t v43 = *(_OWORD *)(a3 + v24 - 120);
              *(void *)(v43 + 16) = *(void *)(a3 + v24 - 104);
              *(unsigned char *)(v44 - 97) = 0;
              *(unsigned char *)(v44 - 120) = 0;
              *(unsigned char *)(v44 + 520) = *(unsigned char *)(a3 + v24 - 96);
              uint64_t v45 = *(void **)(a3 + v24 + 528);
              if (v45)
              {
                *(void *)(v44 + 536) = v45;
                operator delete(v45);
              }
              *(_OWORD *)(v44 + 528) = *(_OWORD *)(v44 - 88);
              *(void *)(v44 + 544) = *(void *)(v44 - 72);
              *(void *)(v44 - 80) = 0;
              *(void *)(v44 - 72) = 0;
              *(void *)(v44 - 88) = 0;
              long long v46 = *(void **)(v44 + 552);
              if (v46)
              {
                *(void *)(a3 + v24 + 560) = v46;
                operator delete(v46);
              }
              uint64_t v25 = a3 + v24;
              *(_OWORD *)(v44 + 552) = *(_OWORD *)(a3 + v24 - 64);
              *(void *)(v25 + 568) = *(void *)(a3 + v24 - 48);
              *(void *)(v25 - 56) = 0;
              *(void *)(v25 - 48) = 0;
              *(void *)(v25 - 64) = 0;
              long long v26 = *(_OWORD *)(a3 + v24 - 24);
              *(_OWORD *)(v25 + 576) = *(_OWORD *)(a3 + v24 - 40);
              *(_OWORD *)(v25 + 592) = v26;
              *(void *)(v25 + 608) = *(void *)(a3 + v24 - 8);
              v24 -= 616;
              if (!v24)
              {
                uint64_t v23 = a3;
                goto LABEL_39;
              }
            }
            if (v35 || (*(char *)(a3 + v24 + 447) & 0x80000000) == 0) {
              goto LABEL_29;
            }
            unint64_t v38 = *(void **)(a3 + v24 + 424);
            goto LABEL_28;
          }
LABEL_39:
          long long v47 = *v19;
          long long v48 = v19[1];
          long long v49 = v19[2];
          *(void *)(v23 + 48) = *((void *)v19 + 6);
          *(_OWORD *)(v23 + 16) = v48;
          *(_OWORD *)(v23 + 32) = v49;
          *(_OWORD *)uint64_t v23 = v47;
          uint64_t v50 = *(void **)(v23 + 56);
          if (v50)
          {
            *(void *)(v23 + 64) = v50;
            operator delete(v50);
            *(void *)(v23 + 56) = 0;
            *(void *)(v23 + 64) = 0;
            *(void *)(v23 + 72) = 0;
          }
          *(_OWORD *)(v23 + 56) = v5[42];
          *(void *)(v23 + 72) = *((void *)v5 + 86);
          *((void *)v5 + 84) = 0;
          *((void *)v5 + 85) = 0;
          *((void *)v5 + 86) = 0;
          sub_5729B0(v23 + 80, (uint64_t *)v5 + 87);
          uint64_t v51 = (void *)(v23 + 552);
          long long v52 = *(void **)(v23 + 552);
          if (v52)
          {
            *(void *)(v23 + 560) = v52;
            operator delete(v52);
            *uint64_t v51 = 0;
            *(void *)(v23 + 560) = 0;
            *(void *)(v23 + 568) = 0;
          }
          *(_OWORD *)uint64_t v51 = v5[73];
          *(void *)(v23 + 568) = *((void *)v5 + 148);
          *((void *)v5 + 148) = 0;
          v5[73] = 0u;
          long long v17 = (char *)(v23 + 576);
        }
        __n128 result = *(__n128 *)((char *)v5 + 1192);
        long long v18 = *(long long *)((char *)v5 + 1208);
        *((void *)v17 + 4) = *((void *)v5 + 153);
        uint64_t v11 = (long long *)((char *)v19 + 616);
        *(__n128 *)long long v17 = result;
        *((_OWORD *)v17 + 1) = v18;
        v12 += 616;
        long long v13 = v20;
        uint64_t v5 = v19;
      }
      while ((long long *)((char *)v19 + 616) != a2);
    }
  }
  return result;
}

__n128 sub_70A1FC(long long *a1, long long *a2, long long *a3, long long *a4, uint64_t a5)
{
  if (a1 == a2)
  {
LABEL_8:
    if (a3 != a4)
    {
      uint64_t v24 = a5 + 80;
      uint64_t v25 = a3 + 5;
      do
      {
        long long v26 = *(v25 - 5);
        long long v27 = *(v25 - 3);
        uint64_t v28 = *((void *)v25 - 4);
        *(_OWORD *)(v24 - 64) = *(v25 - 4);
        *(_OWORD *)(v24 - 48) = v27;
        *(_OWORD *)(v24 - 80) = v26;
        *(void *)(v24 - 32) = v28;
        *(void *)(v24 - 24) = 0;
        *(void *)(v24 - 16) = 0;
        *(void *)(v24 - 8) = 0;
        *(_OWORD *)(v24 - 24) = *(long long *)((char *)v25 - 24);
        *(void *)(v24 - 8) = *((void *)v25 - 1);
        *((void *)v25 - 3) = 0;
        *((void *)v25 - 2) = 0;
        *((void *)v25 - 1) = 0;
        uint64_t v29 = sub_571CE4(v24, (uint64_t *)v25);
        *(void *)(v29 + 472) = 0;
        *(void *)(v29 + 480) = 0;
        *(void *)(v29 + 488) = 0;
        uint64_t v30 = *((void *)v25 + 60);
        *(void *)(v29 + 472) = *((void *)v25 + 59);
        *(void *)(v29 + 480) = v30;
        *(void *)(v29 + 488) = *((void *)v25 + 61);
        *((void *)v25 + 59) = 0;
        *((void *)v25 + 60) = 0;
        *((void *)v25 + 61) = 0;
        __n128 result = (__n128)v25[31];
        long long v31 = v25[32];
        *(void *)(v29 + 528) = *((void *)v25 + 66);
        *(__n128 *)(v29 + 496) = result;
        *(_OWORD *)(v29 + 512) = v31;
        uint64_t v24 = v29 + 616;
        uint64_t v32 = (long long *)((char *)v25 + 536);
        uint64_t v25 = (long long *)((char *)v25 + 616);
      }
      while (v32 != a4);
    }
  }
  else
  {
    uint64_t v8 = a1;
    uint64_t v9 = a5 + 576;
    while (a3 != a4)
    {
      long long v15 = (_OWORD *)(v9 - 576);
      long long v16 = (void *)(v9 - 520);
      long long v17 = (void *)(v9 - 504);
      uint64_t v18 = v9 - 496;
      long long v19 = (_OWORD *)(v9 - 24);
      if (*((void *)a3 + 1) >= *((void *)v8 + 1))
      {
        long long v10 = *v8;
        long long v11 = v8[1];
        long long v12 = v8[2];
        *(void *)(v9 - 528) = *((void *)v8 + 6);
        *(_OWORD *)(v9 - 560) = v11;
        *(_OWORD *)(v9 - 544) = v12;
        *long long v15 = v10;
        *long long v16 = 0;
        *(_OWORD *)(v9 - 512) = 0u;
        *(_OWORD *)long long v16 = *(long long *)((char *)v8 + 56);
        *long long v17 = *((void *)v8 + 9);
        *((void *)v8 + 9) = 0;
        *(long long *)((char *)v8 + 56) = 0u;
        sub_571CE4(v18, (uint64_t *)v8 + 10);
        *(void *)(v9 - 8) = 0;
        _OWORD *v19 = 0u;
        *(_OWORD *)(v9 - 24) = *(long long *)((char *)v8 + 552);
        *(void *)(v9 - 8) = *((void *)v8 + 71);
        *((void *)v8 + 71) = 0;
        *(long long *)((char *)v8 + 552) = 0u;
        __n128 result = (__n128)v8[36];
        long long v14 = v8[37];
        *(void *)(v9 + 32) = *((void *)v8 + 76);
        *(__n128 *)uint64_t v9 = result;
        *(_OWORD *)(v9 + 16) = v14;
        uint64_t v8 = (long long *)((char *)v8 + 616);
        v9 += 616;
        if (v8 == a2) {
          goto LABEL_7;
        }
      }
      else
      {
        long long v20 = *a3;
        long long v21 = a3[1];
        long long v22 = a3[2];
        *(void *)(v9 - 528) = *((void *)a3 + 6);
        *(_OWORD *)(v9 - 560) = v21;
        *(_OWORD *)(v9 - 544) = v22;
        *long long v15 = v20;
        *long long v16 = 0;
        *(_OWORD *)(v9 - 512) = 0u;
        *(_OWORD *)long long v16 = *(long long *)((char *)a3 + 56);
        *long long v17 = *((void *)a3 + 9);
        *((void *)a3 + 9) = 0;
        *(long long *)((char *)a3 + 56) = 0u;
        sub_571CE4(v18, (uint64_t *)a3 + 10);
        *(void *)(v9 - 8) = 0;
        _OWORD *v19 = 0u;
        *(_OWORD *)(v9 - 24) = *(long long *)((char *)a3 + 552);
        *(void *)(v9 - 8) = *((void *)a3 + 71);
        *((void *)a3 + 71) = 0;
        *(long long *)((char *)a3 + 552) = 0u;
        __n128 result = (__n128)a3[36];
        long long v23 = a3[37];
        *(void *)(v9 + 32) = *((void *)a3 + 76);
        *(__n128 *)uint64_t v9 = result;
        *(_OWORD *)(v9 + 16) = v23;
        a3 = (long long *)((char *)a3 + 616);
        v9 += 616;
        if (v8 == a2)
        {
LABEL_7:
          a5 = v9 - 576;
          goto LABEL_8;
        }
      }
    }
    if (v8 != a2)
    {
      uint64_t v33 = 0;
      do
      {
        uint64_t v34 = v9 + v33;
        uint64_t v35 = v9 + v33 - 576;
        uint64_t v36 = (uint64_t)v8 + v33;
        long long v37 = *(long long *)((char *)v8 + v33);
        long long v38 = *(long long *)((char *)v8 + v33 + 16);
        long long v39 = *(long long *)((char *)v8 + v33 + 32);
        *(void *)(v35 + 48) = *(void *)((char *)v8 + v33 + 48);
        *(_OWORD *)(v35 + 16) = v38;
        *(_OWORD *)(v35 + 32) = v39;
        *(_OWORD *)uint64_t v35 = v37;
        uint64_t v40 = v9 + v33 - 520;
        *(void *)uint64_t v40 = 0;
        *(_OWORD *)(v40 + 8) = 0u;
        *(_OWORD *)uint64_t v40 = *(long long *)((char *)v8 + v33 + 56);
        *(void *)(v9 + v33 - 504) = *(void *)((char *)v8 + v33 + 72);
        *(void *)(v36 + 72) = 0;
        *(_OWORD *)(v36 + 56) = 0u;
        sub_571CE4(v9 + v33 - 496, (uint64_t *)((char *)v8 + v33 + 80));
        *(void *)(v34 - 8) = 0;
        *(_OWORD *)(v34 - 24) = 0u;
        uint64_t v41 = *(void *)((char *)v8 + v33 + 560);
        *(void *)(v34 - 24) = *(void *)((char *)v8 + v33 + 552);
        *(void *)(v34 - 16) = v41;
        *(void *)(v34 - 8) = *(void *)((char *)v8 + v33 + 568);
        *(void *)(v36 + 568) = 0;
        *(_OWORD *)(v36 + 552) = 0u;
        __n128 result = *(__n128 *)((char *)v8 + v33 + 576);
        long long v42 = *(long long *)((char *)v8 + v33 + 592);
        *(void *)(v34 + 32) = *(void *)((char *)v8 + v33 + 608);
        *(__n128 *)uint64_t v34 = result;
        *(_OWORD *)(v34 + 16) = v42;
        v33 += 616;
      }
      while ((long long *)(v36 + 616) != a2);
    }
  }
  return result;
}

void sub_70A4D8(long long *a1, long long *a2, long long *a3, uint64_t a4, uint64_t a5, uint64_t a6, long long *a7)
{
  unint64_t v31 = 0;
  uint64_t v11 = (uint64_t)a7;
  if (a5 <= a6)
  {
    if (a1 != a2)
    {
      long long v19 = a1 + 5;
      uint64_t v11 = (uint64_t)a7;
      do
      {
        long long v20 = *(v19 - 5);
        long long v21 = *(v19 - 3);
        uint64_t v22 = *((void *)v19 - 4);
        *(_OWORD *)(v11 + 16) = *(v19 - 4);
        *(_OWORD *)(v11 + 32) = v21;
        *(_OWORD *)uint64_t v11 = v20;
        *(void *)(v11 + 48) = v22;
        *(void *)(v11 + 56) = 0;
        *(_OWORD *)(v11 + 64) = 0u;
        *(_OWORD *)(v11 + 56) = *(_OWORD *)((char *)v19 - 24);
        *(void *)(v11 + 72) = *((void *)v19 - 1);
        *((void *)v19 - 1) = 0;
        *(_OWORD *)((char *)v19 - 24) = 0u;
        sub_571CE4(v11 + 80, (uint64_t *)v19);
        *(void *)(v11 + 568) = 0;
        *(_OWORD *)(v11 + 552) = 0u;
        *(void *)(v11 + 552) = *((void *)v19 + 59);
        *(void *)(v11 + 560) = *((void *)v19 + 60);
        *(void *)(v11 + 568) = *((void *)v19 + 61);
        *((void *)v19 + 59) = 0;
        *((void *)v19 + 60) = 0;
        *((void *)v19 + 61) = 0;
        long long v23 = v19[31];
        long long v24 = v19[32];
        *(void *)(v11 + 608) = *((void *)v19 + 66);
        *(_OWORD *)(v11 + 576) = v23;
        *(_OWORD *)(v11 + 592) = v24;
        ++v31;
        v11 += 616;
        uint64_t v25 = (_OWORD *)((char *)v19 + 536);
        long long v19 = (_OWORD *)((char *)v19 + 616);
      }
      while (v25 != a2);
    }
    sub_70A784(a7, (long long *)v11, a2, a3, (uint64_t)a1);
  }
  else
  {
    if (a2 != a3)
    {
      long long v12 = a2 + 5;
      uint64_t v11 = (uint64_t)a7;
      do
      {
        long long v13 = *(v12 - 5);
        long long v14 = *(v12 - 3);
        uint64_t v15 = *((void *)v12 - 4);
        *(_OWORD *)(v11 + 16) = *(v12 - 4);
        *(_OWORD *)(v11 + 32) = v14;
        *(_OWORD *)uint64_t v11 = v13;
        *(void *)(v11 + 48) = v15;
        *(void *)(v11 + 56) = 0;
        *(_OWORD *)(v11 + 64) = 0u;
        *(_OWORD *)(v11 + 56) = *(long long *)((char *)v12 - 24);
        *(void *)(v11 + 72) = *((void *)v12 - 1);
        *((void *)v12 - 1) = 0;
        *(long long *)((char *)v12 - 24) = 0u;
        sub_571CE4(v11 + 80, (uint64_t *)v12);
        *(void *)(v11 + 568) = 0;
        *(_OWORD *)(v11 + 552) = 0u;
        *(void *)(v11 + 552) = *((void *)v12 + 59);
        *(void *)(v11 + 560) = *((void *)v12 + 60);
        *(void *)(v11 + 568) = *((void *)v12 + 61);
        *((void *)v12 + 59) = 0;
        *((void *)v12 + 60) = 0;
        *((void *)v12 + 61) = 0;
        long long v16 = v12[31];
        long long v17 = v12[32];
        *(void *)(v11 + 608) = *((void *)v12 + 66);
        *(_OWORD *)(v11 + 576) = v16;
        *(_OWORD *)(v11 + 592) = v17;
        ++v31;
        v11 += 616;
        uint64_t v18 = (long long *)((char *)v12 + 536);
        long long v12 = (long long *)((char *)v12 + 616);
      }
      while (v18 != a3);
    }
    sub_70A9B4(v11, (_OWORD *)v11, (uint64_t)a7, a7, (uint64_t)a2, a2, (uint64_t)a1, a1, (uint64_t)a3, (uint64_t)a3);
  }
  long long v26 = a7;
  if (a7 && v31)
  {
    for (unint64_t i = 0; i < v31; ++i)
    {
      uint64_t v28 = (void *)*((void *)v26 + 69);
      if (v28)
      {
        *((void *)v26 + 70) = v28;
        operator delete(v28);
      }
      sub_510298((uint64_t)(v26 + 5));
      uint64_t v29 = (void *)*((void *)v26 + 7);
      if (v29)
      {
        *((void *)v26 + 8) = v29;
        operator delete(v29);
      }
      long long v26 = (long long *)((char *)v26 + 616);
    }
  }
}

void sub_70A75C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_70960C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_70A770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_70960C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_70A784(long long *a1, long long *a2, long long *a3, long long *a4, uint64_t a5)
{
  if (a1 != a2)
  {
    uint64_t v5 = a5;
    uint64_t v9 = a1;
    uint64_t v10 = a5;
    while (a3 != a4)
    {
      long long v13 = (void *)(v10 + 56);
      if (*((void *)a3 + 1) >= *((void *)v9 + 1))
      {
        long long v21 = *v9;
        long long v22 = v9[1];
        long long v23 = v9[2];
        *(void *)(v10 + 48) = *((void *)v9 + 6);
        *(_OWORD *)(v10 + 16) = v22;
        *(_OWORD *)(v10 + 32) = v23;
        *(_OWORD *)uint64_t v10 = v21;
        long long v24 = *(void **)(v10 + 56);
        if (v24)
        {
          *(void *)(v10 + 64) = v24;
          operator delete(v24);
          void *v13 = 0;
          *(void *)(v10 + 64) = 0;
          *(void *)(v10 + 72) = 0;
        }
        *(_OWORD *)(v10 + 56) = *(long long *)((char *)v9 + 56);
        *(void *)(v10 + 72) = *((void *)v9 + 9);
        *((void *)v9 + 7) = 0;
        *((void *)v9 + 8) = 0;
        *((void *)v9 + 9) = 0;
        sub_5729B0(v10 + 80, (uint64_t *)v9 + 10);
        uint64_t v25 = *(void **)(v10 + 552);
        if (v25)
        {
          *(void *)(v10 + 560) = v25;
          operator delete(v25);
          *(void *)(v10 + 552) = 0;
          *(void *)(v10 + 560) = 0;
          *(void *)(v10 + 568) = 0;
        }
        *(void *)(v10 + 552) = *((void *)v9 + 69);
        *(void *)(v10 + 560) = *((void *)v9 + 70);
        *(void *)(v10 + 568) = *((void *)v9 + 71);
        *((void *)v9 + 71) = 0;
        *(long long *)((char *)v9 + 552) = 0u;
        long long v11 = v9[36];
        long long v12 = v9[37];
        *(void *)(v10 + 608) = *((void *)v9 + 76);
        *(_OWORD *)(v10 + 576) = v11;
        *(_OWORD *)(v10 + 592) = v12;
        uint64_t v9 = (long long *)((char *)v9 + 616);
        v10 += 616;
        v5 += 616;
        if (v9 == a2) {
          return;
        }
      }
      else
      {
        long long v14 = *a3;
        long long v15 = a3[1];
        long long v16 = a3[2];
        *(void *)(v10 + 48) = *((void *)a3 + 6);
        *(_OWORD *)(v10 + 16) = v15;
        *(_OWORD *)(v10 + 32) = v16;
        *(_OWORD *)uint64_t v10 = v14;
        long long v17 = *(void **)(v10 + 56);
        if (v17)
        {
          *(void *)(v10 + 64) = v17;
          operator delete(v17);
          void *v13 = 0;
          *(void *)(v10 + 64) = 0;
          *(void *)(v10 + 72) = 0;
        }
        *(_OWORD *)(v10 + 56) = *(long long *)((char *)a3 + 56);
        *(void *)(v10 + 72) = *((void *)a3 + 9);
        *((void *)a3 + 7) = 0;
        *((void *)a3 + 8) = 0;
        *((void *)a3 + 9) = 0;
        sub_5729B0(v10 + 80, (uint64_t *)a3 + 10);
        uint64_t v18 = *(void **)(v10 + 552);
        if (v18)
        {
          *(void *)(v10 + 560) = v18;
          operator delete(v18);
          *(void *)(v10 + 552) = 0;
          *(void *)(v10 + 560) = 0;
          *(void *)(v10 + 568) = 0;
        }
        *(void *)(v10 + 552) = *((void *)a3 + 69);
        *(void *)(v10 + 560) = *((void *)a3 + 70);
        *(void *)(v10 + 568) = *((void *)a3 + 71);
        *((void *)a3 + 71) = 0;
        *(long long *)((char *)a3 + 552) = 0u;
        long long v19 = a3[36];
        long long v20 = a3[37];
        *(void *)(v10 + 608) = *((void *)a3 + 76);
        *(_OWORD *)(v10 + 576) = v19;
        *(_OWORD *)(v10 + 592) = v20;
        a3 = (long long *)((char *)a3 + 616);
        v10 += 616;
        v5 += 616;
        if (v9 == a2) {
          return;
        }
      }
    }
    sub_70AC80(v9, a2, v5);
  }
}

void sub_70A9B4(uint64_t a1, _OWORD *a2, uint64_t a3, _OWORD *a4, uint64_t a5, _OWORD *a6, uint64_t a7, _OWORD *a8, uint64_t a9, uint64_t a10)
{
  if (a2 == a4) {
    return;
  }
  long long v13 = a2;
  uint64_t v14 = a10;
  uint64_t v15 = a10 - 64;
  while (a6 != a8)
  {
    long long v19 = (_OWORD *)((char *)a6 - 616);
    long long v20 = (_OWORD *)((char *)v13 - 616);
    long long v21 = (_OWORD *)(v15 - 552);
    long long v22 = (void **)(v15 - 496);
    if (*((void *)v13 - 76) >= *((void *)a6 - 76))
    {
      long long v31 = *v20;
      long long v32 = *(_OWORD *)((char *)v13 - 600);
      long long v33 = *(_OWORD *)((char *)v13 - 584);
      *(void *)(v15 - 504) = *((void *)v13 - 71);
      *(_OWORD *)(v15 - 536) = v32;
      *(_OWORD *)(v15 - 520) = v33;
      *long long v21 = v31;
      uint64_t v34 = *v22;
      if (*v22)
      {
        *(void *)(v15 - 488) = v34;
        operator delete(v34);
        *long long v22 = 0;
        *(void *)(v15 - 488) = 0;
        *(void *)(v15 - 480) = 0;
      }
      uint64_t v35 = v13 - 35;
      *(_OWORD *)long long v22 = *(v13 - 35);
      *(void *)(v15 - 480) = *((void *)v13 - 68);
      *uint64_t v35 = 0;
      v35[1] = 0;
      v35[2] = 0;
      sub_5729B0(v15 - 472, (uint64_t *)v13 - 67);
      uint64_t v29 = *(void **)v15;
      uint64_t v28 = (void *)v15;
      uint64_t v30 = v13;
      long long v19 = a6;
      long long v13 = (_OWORD *)((char *)v13 - 616);
      if (!*(void *)v15) {
        goto LABEL_4;
      }
    }
    else
    {
      long long v23 = *v19;
      long long v24 = *(_OWORD *)((char *)a6 - 600);
      long long v25 = *(_OWORD *)((char *)a6 - 584);
      *(void *)(v15 - 504) = *((void *)a6 - 71);
      *(_OWORD *)(v15 - 536) = v24;
      *(_OWORD *)(v15 - 520) = v25;
      *long long v21 = v23;
      long long v26 = *v22;
      if (*v22)
      {
        *(void *)(v15 - 488) = v26;
        operator delete(v26);
        *long long v22 = 0;
        *(void *)(v15 - 488) = 0;
        *(void *)(v15 - 480) = 0;
      }
      long long v27 = a6 - 35;
      *(_OWORD *)long long v22 = *(a6 - 35);
      *(void *)(v15 - 480) = *((void *)a6 - 68);
      void *v27 = 0;
      v27[1] = 0;
      v27[2] = 0;
      sub_5729B0(v15 - 472, (uint64_t *)a6 - 67);
      uint64_t v28 = (void *)(v14 - 64);
      uint64_t v29 = *(void **)v15;
      uint64_t v30 = a6;
      long long v20 = v13;
      if (!*(void *)v15) {
        goto LABEL_4;
      }
    }
    *(void *)(v15 + 8) = v29;
    operator delete(v29);
    void *v28 = 0;
    v28[1] = 0;
    long long v13 = v20;
    _OWORD v28[2] = 0;
LABEL_4:
    uint64_t v16 = *((void *)v30 - 7);
    void *v28 = *((void *)v30 - 8);
    v14 -= 616;
    *(void *)(v15 + 8) = v16;
    *(void *)(v15 + 16) = *((void *)v30 - 6);
    *((void *)v30 - 8) = 0;
    *((void *)v30 - 7) = 0;
    *((void *)v30 - 6) = 0;
    long long v17 = *(_OWORD *)((char *)v30 - 40);
    long long v18 = *(_OWORD *)((char *)v30 - 24);
    *(void *)(v15 + 56) = *((void *)v30 - 1);
    *(_OWORD *)(v15 + 40) = v18;
    *(_OWORD *)(v15 + 24) = v17;
    v15 -= 616;
    a6 = v19;
    if (v13 == a4) {
      return;
    }
  }
  uint64_t v36 = 0;
  do
  {
    uint64_t v41 = (char *)v13 + v36;
    uint64_t v42 = v15 + v36;
    uint64_t v43 = v15 + v36 - 552;
    long long v44 = *(_OWORD *)((char *)v13 + v36 - 616);
    long long v45 = *(_OWORD *)((char *)v13 + v36 - 600);
    long long v46 = *(_OWORD *)((char *)v13 + v36 - 584);
    *(void *)(v43 + 48) = *(void *)((char *)v13 + v36 - 568);
    *(_OWORD *)(v43 + 16) = v45;
    *(_OWORD *)(v43 + 32) = v46;
    *(_OWORD *)uint64_t v43 = v44;
    long long v47 = (void **)(v15 + v36 - 496);
    long long v48 = *v47;
    if (*v47)
    {
      *(void *)(v42 - 488) = v48;
      operator delete(v48);
      *long long v47 = 0;
      *(void *)(v15 + v36 - 488) = 0;
      *(void *)(v15 + v36 - 480) = 0;
    }
    long long v49 = v41 - 560;
    *(_OWORD *)long long v47 = *((_OWORD *)v41 - 35);
    *(void *)(v42 - 480) = *((void *)v41 - 68);
    *(void *)long long v49 = 0;
    *((void *)v49 + 1) = 0;
    *((void *)v49 + 2) = 0;
    sub_5729B0(v42 - 472, (uint64_t *)v41 - 67);
    uint64_t v50 = *(void **)v42;
    if (*(void *)v42)
    {
      *(void *)(v15 + v36 + 8) = v50;
      operator delete(v50);
      *(void *)uint64_t v42 = 0;
      *(void *)(v42 + 8) = 0;
      *(void *)(v42 + 16) = 0;
    }
    long long v37 = (char *)v13 + v36;
    uint64_t v38 = v15 + v36;
    *(_OWORD *)uint64_t v38 = *(_OWORD *)((char *)v13 + v36 - 64);
    *(void *)(v38 + 16) = *(void *)((char *)v13 + v36 - 48);
    *((void *)v37 - 8) = 0;
    *((void *)v37 - 7) = 0;
    *((void *)v37 - 6) = 0;
    long long v39 = *(_OWORD *)((char *)v13 + v36 - 40);
    long long v40 = *(_OWORD *)((char *)v13 + v36 - 24);
    *(void *)(v38 + 56) = *(void *)((char *)v13 + v36 - 8);
    *(_OWORD *)(v38 + 40) = v40;
    *(_OWORD *)(v38 + 24) = v39;
    v36 -= 616;
  }
  while ((_OWORD *)((char *)v13 + v36) != a4);
}

long long *sub_70AC80(long long *a1, long long *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a1;
  if (a1 != a2)
  {
    uint64_t v6 = a3;
    do
    {
      long long v10 = *v4;
      long long v11 = v4[1];
      long long v12 = v4[2];
      *(void *)(v6 + 48) = *((void *)v4 + 6);
      *(_OWORD *)(v6 + 16) = v11;
      *(_OWORD *)(v6 + 32) = v12;
      *(_OWORD *)uint64_t v6 = v10;
      long long v13 = *(void **)(v6 + 56);
      if (v13)
      {
        *(void *)(v6 + 64) = v13;
        operator delete(v13);
        *(void *)(v6 + 56) = 0;
        *(void *)(v6 + 64) = 0;
        *(void *)(v6 + 72) = 0;
      }
      *(_OWORD *)(v6 + 56) = *(long long *)((char *)v4 + 56);
      *(void *)(v6 + 72) = *((void *)v4 + 9);
      *((void *)v4 + 7) = 0;
      *((void *)v4 + 8) = 0;
      *((void *)v4 + 9) = 0;
      uint64_t v14 = v4 + 5;
      sub_5729B0(v6 + 80, (uint64_t *)v14);
      uint64_t v15 = *(void **)(v6 + 552);
      if (v15)
      {
        *(void *)(v6 + 560) = v15;
        operator delete(v15);
        *(void *)(v6 + 552) = 0;
        *(void *)(v6 + 560) = 0;
        *(void *)(v6 + 568) = 0;
      }
      uint64_t v7 = *((void *)v14 + 60);
      *(void *)(v6 + 552) = *((void *)v14 + 59);
      *(void *)(v6 + 560) = v7;
      *(void *)(v6 + 568) = *((void *)v14 + 61);
      *((void *)v14 + 59) = 0;
      *((void *)v14 + 60) = 0;
      *((void *)v14 + 61) = 0;
      long long v8 = v14[31];
      long long v9 = v14[32];
      *(void *)(v6 + 608) = *((void *)v14 + 66);
      *(_OWORD *)(v6 + 576) = v8;
      *(_OWORD *)(v6 + 592) = v9;
      v6 += 616;
      v3 += 616;
      uint64_t v4 = (long long *)((char *)v14 + 536);
    }
    while (v4 != a2);
    return a2;
  }
  return v4;
}

double sub_70AD90()
{
  byte_25A4827 = 1;
  word_25A4810 = 65;
  byte_25A483F = 1;
  word_25A4828 = 65;
  char v4 = 7;
  strcpy((char *)v3, "UNKNOWN");
  int v5 = 0;
  char v7 = 14;
  strcpy((char *)v6, "ROUTES_THROUGH");
  int v8 = 1;
  char v10 = 9;
  strcpy((char *)__p, "ROUTES_TO");
  int v11 = 3;
  char v13 = 11;
  strcpy((char *)v12, "ROUTES_FROM");
  int v14 = 2;
  xmmword_25A48D0 = 0u;
  *(_OWORD *)&qword_25A48E0 = 0u;
  dword_25A48F0 = 1065353216;
  sub_3A6EF0((uint64_t)&xmmword_25A48D0, (uint64_t)v3, (uint64_t)v3);
  sub_3A6EF0((uint64_t)&xmmword_25A48D0, (uint64_t)v6, (uint64_t)v6);
  sub_3A6EF0((uint64_t)&xmmword_25A48D0, (uint64_t)__p, (uint64_t)__p);
  sub_3A6EF0((uint64_t)&xmmword_25A48D0, (uint64_t)v12, (uint64_t)v12);
  if (v13 < 0)
  {
    operator delete(v12[0]);
    if ((v10 & 0x80000000) == 0)
    {
LABEL_3:
      if ((v7 & 0x80000000) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      operator delete(v6[0]);
      if ((v4 & 0x80000000) == 0) {
        goto LABEL_5;
      }
LABEL_9:
      operator delete(v3[0]);
      goto LABEL_5;
    }
  }
  else if ((v10 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p[0]);
  if (v7 < 0) {
    goto LABEL_8;
  }
LABEL_4:
  if (v4 < 0) {
    goto LABEL_9;
  }
LABEL_5:
  byte_25A4857 = 8;
  strcpy((char *)&qword_25A4840, "any_mode");
  byte_25A486F = 7;
  strcpy((char *)&dword_25A4858, "cycling");
  byte_25A4887 = 7;
  strcpy((char *)&dword_25A4870, "driving");
  byte_25A489F = 7;
  strcpy((char *)&dword_25A4888, "walking");
  qword_25A48A8 = 0;
  qword_25A48B0 = 0;
  qword_25A48A0 = 0;
  uint64_t v0 = operator new(9uLL);
  *(void *)uint64_t v0 = 0x4020C000103050DLL;
  v0[8] = 6;
  qword_25A48A0 = (uint64_t)v0;
  qword_25A48A8 = (uint64_t)(v0 + 9);
  qword_25A48B0 = (uint64_t)(v0 + 9);
  qword_25A48B8 = 0;
  qword_25A48C0 = 0;
  unk_25A48C8 = 0;
  uint64_t v1 = (char *)operator new(9uLL);
  qword_25A48C0 = (uint64_t)(v1 + 9);
  unk_25A48C8 = v1 + 9;
  double result = 1.10224369e-279;
  *(void *)uint64_t v1 = 0x604020C00010305;
  v1[8] = 13;
  qword_25A48B8 = (uint64_t)v1;
  return result;
}

void sub_70B058(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  if (qword_25A48E0) {
    sub_20AAB2C((void **)qword_25A48E0);
  }
  long long v37 = (void *)xmmword_25A48D0;
  *(void *)&xmmword_25A48D0 = 0;
  if (v37)
  {
    operator delete(v37);
    if ((a36 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a29 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_11;
    }
  }
  else if ((a36 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(__p);
  if ((a29 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a22 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_12;
  }
LABEL_11:
  operator delete(a24);
  if ((a22 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a15 & 0x80000000) == 0) {
LABEL_14:
    }
      _Unwind_Resume(exception_object);
LABEL_13:
    operator delete(a10);
    _Unwind_Resume(exception_object);
  }
LABEL_12:
  operator delete(a17);
  if ((a15 & 0x80000000) == 0) {
    goto LABEL_14;
  }
  goto LABEL_13;
}

uint64_t *sub_70B0F8(uint64_t *a1, void *a2)
{
  *a1 = sub_3750CC(a2);
  strcpy((char *)v15, "RoadDescriptionBuilder");
  HIBYTE(v15[2]) = 22;
  long long v12 = 0;
  char v13 = 0;
  uint64_t v14 = 0;
  char v4 = sub_374CDC((uint64_t)a2, (uint64_t)v15, (uint64_t *)&v12);
  sub_3CB2F0(v4, (uint64_t)__p);
  sub_70BDF0((uint64_t)(a1 + 1), __p);
  int v5 = v17;
  if (v17)
  {
    do
    {
      char v10 = *(char **)v5;
      sub_57AC8((uint64_t *)v5 + 5);
      if (v5[39] < 0) {
        operator delete(*((void **)v5 + 2));
      }
      operator delete(v5);
      int v5 = v10;
    }
    while (v10);
  }
  uint64_t v6 = __p[0];
  __p[0] = 0;
  if (v6) {
    operator delete(v6);
  }
  char v7 = (void **)v12;
  if (v12)
  {
    int v8 = v13;
    long long v9 = v12;
    if (v13 != v12)
    {
      do
      {
        if (*((char *)v8 - 1) < 0) {
          operator delete(*(v8 - 3));
        }
        v8 -= 3;
      }
      while (v8 != v7);
      long long v9 = v12;
    }
    char v13 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v15[2]) < 0) {
    operator delete(v15[0]);
  }
  return a1;
}

void sub_70B244(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_70B27C(uint64_t a1, uint64_t *a2)
{
  long long __p = 0;
  int v8 = 0;
  uint64_t v9 = 0;
  sub_70B328(a1, (uint64_t)&__p, a2);
  sub_70B860(a1, (uint64_t)&__p, a2);
  char v4 = (void **)__p;
  if (__p)
  {
    int v5 = v8;
    uint64_t v6 = __p;
    if (v8 != __p)
    {
      do
      {
        if (*((char *)v5 - 1) < 0) {
          operator delete(*(v5 - 3));
        }
        v5 -= 6;
      }
      while (v5 != v4);
      uint64_t v6 = __p;
    }
    int v8 = v4;
    operator delete(v6);
  }
}

void sub_70B314(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_28F14C((void **)va);
  _Unwind_Resume(a1);
}

void sub_70B328(uint64_t a1, uint64_t a2, void *a3)
{
  if (!*(unsigned char *)(a1 + 9)) {
    return;
  }
  if (sub_45FB38(a3)) {
    return;
  }
  uint64_t v5 = sub_6467E8(a3, 0);
  uint64_t v40 = 0x2FC962FC962FC963 * ((uint64_t)(*(void *)(v5 + 1072) - *(void *)(v5 + 1064)) >> 5) - 1;
  if (0x2FC962FC962FC963 * ((uint64_t)(*(void *)(v5 + 1072) - *(void *)(v5 + 1064)) >> 5) == 1) {
    return;
  }
  uint64_t v6 = (void *)v5;
  unint64_t v7 = 0;
  long long v39 = (void *)(v5 + 1064);
  do
  {
    uint64_t v43 = sub_51690C(v39, v7);
    unint64_t v42 = v7 + 1;
    uint64_t v9 = (void *)sub_51690C(v39, v7 + 1);
    char v10 = 0;
    int v11 = 0;
    long long __p = 0;
    uint64_t v50 = 0;
    unint64_t v51 = 0;
    unint64_t v12 = v9[5];
    unint64_t v13 = v9[3];
    BOOL v14 = v12 >= v13;
    if (v12 > v13) {
      unint64_t v13 = v9[5];
    }
    unint64_t v44 = v13;
    if (!v14)
    {
      uint64_t v15 = 0;
      while (1)
      {
        unsigned int v16 = sub_64EEB8((uint64_t)v6, v12);
        if ((v16 & 8) != 0) {
          unsigned int v18 = v16 & 0xFFFFFFE7 | 0x10;
        }
        else {
          unsigned int v18 = v16;
        }
        if (v12 == v9[3] - 1) {
          int v19 = 1;
        }
        else {
          int v19 = sub_64EEB8((uint64_t)v6, v12 + 1);
        }
        v15 += sub_46CCC8(v6, v12, v17);
        if (v18 == 1 || v18 == v19) {
          goto LABEL_13;
        }
        if (v18) {
          break;
        }
LABEL_12:
        uint64_t v15 = 0;
LABEL_13:
        if (++v12 == v44)
        {
          int v11 = (long long *)__p;
          char v10 = (long long *)v50;
          goto LABEL_59;
        }
      }
      while (1)
      {
        unsigned int v21 = __clz(__rbit32(v18));
        if (v21 > 0x10) {
          int v22 = 0;
        }
        else {
          int v22 = dword_20E8DA8[v21];
        }
        LOBYTE(v45) = v21;
        DWORD1(v45) = v22;
        *((void *)&v45 + 1) = v15;
        char v46 = 0;
        LOBYTE(v47) = 0;
        HIBYTE(v48) = 0;
        long long v23 = (char *)__p;
        long long v24 = v50;
        if (__p == v50) {
          goto LABEL_34;
        }
        while (*v23 != v21)
        {
          v23 += 48;
          if (v23 == v50) {
            goto LABEL_34;
          }
        }
        if (v23 == v50)
        {
LABEL_34:
          if ((unint64_t)v50 >= v51)
          {
            uint64_t v50 = sub_70F054((char **)&__p, (uint64_t)&v45);
            uint64_t v28 = *(char **)a2;
            unint64_t v29 = *(void *)(a2 + 8);
            if (*(void *)a2 != v29) {
              goto LABEL_44;
            }
          }
          else
          {
            long long v25 = v45;
            v50[16] = v46;
            *(_OWORD *)long long v24 = v25;
            long long v26 = v24 + 24;
            if (SHIBYTE(v48) < 0)
            {
              sub_4200(v26, (void *)v47, *((unint64_t *)&v47 + 1));
            }
            else
            {
              long long v27 = v47;
              *((void *)v24 + 5) = v48;
              *(_OWORD *)long long v26 = v27;
            }
            uint64_t v50 = v24 + 48;
            uint64_t v28 = *(char **)a2;
            unint64_t v29 = *(void *)(a2 + 8);
            if (*(void *)a2 != v29)
            {
LABEL_44:
              while (v45 != *v28)
              {
                v28 += 48;
                if (v28 == (char *)v29) {
                  goto LABEL_50;
                }
              }
            }
          }
        }
        else
        {
          *((void *)v23 + 1) += v15;
          v23[16] = 0;
          uint64_t v28 = *(char **)a2;
          unint64_t v29 = *(void *)(a2 + 8);
          if (*(void *)a2 != v29) {
            goto LABEL_44;
          }
        }
        if (v28 == (char *)v29)
        {
LABEL_50:
          if (v29 >= *(void *)(a2 + 16))
          {
            *(void *)(a2 + 8) = sub_70F054((char **)a2, (uint64_t)&v45);
            if ((SHIBYTE(v48) & 0x80000000) == 0) {
              goto LABEL_27;
            }
          }
          else
          {
            long long v30 = v45;
            *(unsigned char *)(v29 + 16) = v46;
            *(_OWORD *)unint64_t v29 = v30;
            long long v31 = (unsigned char *)(v29 + 24);
            if (SHIBYTE(v48) < 0)
            {
              sub_4200(v31, (void *)v47, *((unint64_t *)&v47 + 1));
            }
            else
            {
              long long v32 = v47;
              *(void *)(v29 + 40) = v48;
              *(_OWORD *)long long v31 = v32;
            }
            *(void *)(a2 + 8) = v29 + 48;
            *(void *)(a2 + 8) = v29 + 48;
            if ((SHIBYTE(v48) & 0x80000000) == 0) {
              goto LABEL_27;
            }
          }
        }
        else
        {
          *((void *)v28 + 1) += *((void *)&v45 + 1);
          v28[16] = 1;
          if ((SHIBYTE(v48) & 0x80000000) == 0) {
            goto LABEL_27;
          }
        }
        operator delete((void *)v47);
LABEL_27:
        v18 &= v18 - 1;
        if (!v18) {
          goto LABEL_12;
        }
      }
    }
LABEL_59:
    unint64_t v33 = 126 - 2 * __clz(0xAAAAAAAAAAAAAAABLL * (v10 - v11));
    if (v10 == v11) {
      uint64_t v34 = 0;
    }
    else {
      uint64_t v34 = v33;
    }
    sub_70D338(v11, v10, (uint64_t)&v45, v34, 1);
    double v35 = *(double *)(a1 + 16) * (double)(uint64_t)v9[109];
    if (v35 >= 0.0)
    {
      if (v35 >= 4.50359963e15) {
        goto LABEL_70;
      }
      uint64_t v36 = (uint64_t)(v35 + v35) + 1;
    }
    else
    {
      if (v35 <= -4.50359963e15) {
        goto LABEL_70;
      }
      uint64_t v36 = (uint64_t)(v35 + v35);
      if (v36 >= 1) {
        --v36;
      }
    }
    double v35 = (double)(v36 >> 1);
LABEL_70:
    *(void *)&long long v45 = (uint64_t)v35;
    long long v52 = &v45;
    sub_70BA64((uint64_t *)&__p, (void **)&v52);
    if ((void **)(v43 + 656) != &__p) {
      sub_4C02B4((void **)(v43 + 656), (long long *)__p, (long long *)v50, 0xAAAAAAAAAAAAAAABLL * ((v50 - (unsigned char *)__p) >> 4));
    }
    long long v37 = (long long *)__p;
    unint64_t v7 = v42;
    if (__p)
    {
      uint64_t v38 = v50;
      int v8 = __p;
      if (v50 != __p)
      {
        do
        {
          if (*(v38 - 1) < 0) {
            operator delete(*((void **)v38 - 3));
          }
          v38 -= 48;
        }
        while (v38 != (char *)v37);
        int v8 = __p;
      }
      uint64_t v50 = (char *)v37;
      operator delete(v8);
    }
  }
  while (v42 != v40);
}

void sub_70B7D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  sub_28F14C((void **)va);
  _Unwind_Resume(a1);
}

void sub_70B7E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  sub_28F14C((void **)va);
  _Unwind_Resume(a1);
}

void sub_70B7FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  sub_28F14C((void **)va);
  _Unwind_Resume(a1);
}

void sub_70B810(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  sub_28F14C((void **)va);
  _Unwind_Resume(a1);
}

void sub_70B824(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25)
{
  *(void *)(v25 + 8) = v26;
  if (a23 < 0) {
    operator delete(__p);
  }
  sub_28F14C(&a24);
  _Unwind_Resume(a1);
}

void sub_70B860(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  if (!*(unsigned char *)(a1 + 8)) {
    return;
  }
  double v6 = *(double *)(a1 + 24) * (double)sub_646C34(a3);
  if (v6 >= 0.0)
  {
    if (v6 < 4.50359963e15)
    {
      uint64_t v7 = (uint64_t)(v6 + v6) + 1;
LABEL_9:
      double v6 = (double)(v7 >> 1);
    }
  }
  else if (v6 > -4.50359963e15)
  {
    uint64_t v7 = (uint64_t)(v6 + v6);
    if (v7 >= 1) {
      --v7;
    }
    goto LABEL_9;
  }
  uint64_t v15 = &v16;
  uint64_t v16 = (uint64_t)v6;
  sub_70BC04((unsigned __int8 **)a2, &v15);
  int v8 = *(long long **)(a2 + 8);
  unint64_t v9 = 126 - 2 * __clz(0xAAAAAAAAAAAAAAABLL * (((uint64_t)v8 - *(void *)a2) >> 4));
  if (v8 == *(long long **)a2) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = v9;
  }
  sub_70D338(*(long long **)a2, v8, (uint64_t)&v15, v10, 1);
  uint64_t v11 = *(void *)(a2 + 8);
  unint64_t v12 = *(unsigned __int8 *)(a1 + 10);
  uint64_t v13 = *(void *)a2 + 48 * v12;
  if (0xAAAAAAAAAAAAAAABLL * ((v11 - *(void *)a2) >> 4) > v12 && v13 != v11)
  {
    while (v11 != v13)
    {
      if (*(char *)(v11 - 1) < 0) {
        operator delete(*(void **)(v11 - 24));
      }
      v11 -= 48;
    }
    *(void *)(a2 + 8) = v13;
  }
  sub_648418((void **)a3, (long long **)a2);
}

void sub_70BA64(uint64_t *a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (long long *)a1[1];
  if ((long long *)*a1 != v3)
  {
    uint64_t v5 = *a2;
    while (*(void *)(v2 + 8) >= **a2)
    {
      v2 += 48;
      if ((long long *)v2 == v3) {
        return;
      }
    }
    if ((long long *)v2 != v3)
    {
      double v6 = (long long *)(v2 + 48);
      if ((long long *)(v2 + 48) != v3)
      {
        do
        {
          if (*((void *)v6 + 1) >= *v5)
          {
            long long v8 = *v6;
            *(unsigned char *)(v2 + 16) = *((unsigned char *)v6 + 16);
            *(_OWORD *)uint64_t v2 = v8;
            unint64_t v9 = (void **)(v2 + 24);
            if (*(char *)(v2 + 47) < 0) {
              operator delete(*v9);
            }
            long long v7 = *(long long *)((char *)v6 + 24);
            *(void *)(v2 + 40) = *((void *)v6 + 5);
            *(_OWORD *)unint64_t v9 = v7;
            *((unsigned char *)v6 + 47) = 0;
            *((unsigned char *)v6 + 24) = 0;
            v2 += 48;
          }
          v6 += 3;
        }
        while (v6 != v3);
        uint64_t v3 = (long long *)a1[1];
      }
    }
    if ((long long *)v2 != v3)
    {
      while (v3 != (long long *)v2)
      {
        if (*((char *)v3 - 1) < 0) {
          operator delete(*((void **)v3 - 3));
        }
        v3 -= 3;
      }
      a1[1] = v2;
    }
  }
}

void sub_70BC04(unsigned __int8 **a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  if (*a1 != v3)
  {
    uint64_t v5 = *a2;
    while (1)
    {
      unsigned int v6 = *v2;
      BOOL v7 = v6 > 0xE;
      int v8 = (1 << v6) & 0x6100;
      BOOL v9 = v7 || v8 == 0;
      if (!v9 || *((void *)v2 + 1) < *v5) {
        break;
      }
      v2 += 48;
      if (v2 == v3) {
        return;
      }
    }
    if (v2 != v3)
    {
      uint64_t v10 = v2 + 48;
      if (v2 + 48 != v3)
      {
        do
        {
          unsigned int v12 = *v10;
          BOOL v7 = v12 > 0xE;
          int v13 = (1 << v12) & 0x6100;
          BOOL v14 = v7 || v13 == 0;
          if (v14 && *((void *)v10 + 1) >= *v5)
          {
            long long v15 = *(_OWORD *)v10;
            v2[16] = v10[16];
            *(_OWORD *)uint64_t v2 = v15;
            uint64_t v16 = (void **)(v2 + 24);
            if ((char)v2[47] < 0) {
              operator delete(*v16);
            }
            long long v11 = *(_OWORD *)(v10 + 24);
            *((void *)v2 + 5) = *((void *)v10 + 5);
            *(_OWORD *)uint64_t v16 = v11;
            v10[47] = 0;
            v10[24] = 0;
            v2 += 48;
          }
          v10 += 48;
        }
        while (v10 != v3);
        uint64_t v3 = a1[1];
      }
    }
    if (v2 != v3)
    {
      while (v3 != v2)
      {
        if ((char)*(v3 - 1) < 0) {
          operator delete(*((void **)v3 - 3));
        }
        v3 -= 48;
      }
      a1[1] = v2;
    }
  }
}

uint64_t sub_70BDF0(uint64_t a1, void *a2)
{
  long long __p = operator new(0x20uLL);
  long long v11 = xmmword_20B9800;
  strcpy((char *)__p, "enable_route_road_descriptions");
  BOOL v4 = sub_29D62C(a2, (uint64_t)&__p);
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  *(unsigned char *)a1 = v4;
  long long __p = operator new(0x20uLL);
  long long v11 = xmmword_20B8890;
  strcpy((char *)__p, "enable_step_road_descriptions");
  BOOL v5 = sub_29D62C(a2, (uint64_t)&__p);
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  *(unsigned char *)(a1 + 1) = v5;
  long long __p = operator new(0x28uLL);
  long long v11 = xmmword_20B9240;
  strcpy((char *)__p, "max_road_description_types_in_summary");
  char v6 = sub_31AB44(a2, (uint64_t)&__p);
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  *(unsigned char *)(a1 + 2) = v6;
  long long __p = operator new(0x28uLL);
  long long v11 = xmmword_20B9280;
  strcpy((char *)__p, "step_description_min_length_factor");
  double v7 = sub_5C7E8(a2, (uint64_t)&__p);
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  *(double *)(a1 + 8) = v7;
  long long __p = operator new(0x28uLL);
  long long v11 = xmmword_20B93A0;
  strcpy((char *)__p, "route_description_min_length_factor");
  double v8 = sub_5C7E8(a2, (uint64_t)&__p);
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  *(double *)(a1 + 16) = v8;
  return a1;
}

void sub_70BFEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_70C018(uint64_t *a1, void *a2)
{
  *a1 = sub_3750CC(a2);
  strcpy((char *)v15, "RoadDescriptionBuilder");
  HIBYTE(v15[2]) = 22;
  unsigned int v12 = 0;
  int v13 = 0;
  uint64_t v14 = 0;
  BOOL v4 = sub_374CDC((uint64_t)a2, (uint64_t)v15, (uint64_t *)&v12);
  sub_3CB560(v4, (uint64_t)__p);
  sub_70C780((uint64_t)(a1 + 1), __p);
  BOOL v5 = v17;
  if (v17)
  {
    do
    {
      uint64_t v10 = *(char **)v5;
      sub_57AC8((uint64_t *)v5 + 5);
      if (v5[39] < 0) {
        operator delete(*((void **)v5 + 2));
      }
      operator delete(v5);
      BOOL v5 = v10;
    }
    while (v10);
  }
  char v6 = __p[0];
  __p[0] = 0;
  if (v6) {
    operator delete(v6);
  }
  double v7 = (void **)v12;
  if (v12)
  {
    double v8 = v13;
    BOOL v9 = v12;
    if (v13 != v12)
    {
      do
      {
        if (*((char *)v8 - 1) < 0) {
          operator delete(*(v8 - 3));
        }
        v8 -= 3;
      }
      while (v8 != v7);
      BOOL v9 = v12;
    }
    int v13 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v15[2]) < 0) {
    operator delete(v15[0]);
  }
  return a1;
}

void sub_70C164(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_70C19C(uint64_t a1, uint64_t *a2)
{
  long long __p = 0;
  double v8 = 0;
  uint64_t v9 = 0;
  sub_70C248(a1, (uint64_t)&__p, a2);
  sub_70B860(a1, (uint64_t)&__p, a2);
  BOOL v4 = (void **)__p;
  if (__p)
  {
    BOOL v5 = v8;
    char v6 = __p;
    if (v8 != __p)
    {
      do
      {
        if (*((char *)v5 - 1) < 0) {
          operator delete(*(v5 - 3));
        }
        v5 -= 6;
      }
      while (v5 != v4);
      char v6 = __p;
    }
    double v8 = v4;
    operator delete(v6);
  }
}

void sub_70C234(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_28F14C((void **)va);
  _Unwind_Resume(a1);
}

void sub_70C248(uint64_t a1, uint64_t a2, void *a3)
{
  if (!*(unsigned char *)(a1 + 9)) {
    return;
  }
  if (sub_45FB38(a3)) {
    return;
  }
  uint64_t v5 = sub_6467E8(a3, 0);
  uint64_t v40 = 0x2FC962FC962FC963 * ((uint64_t)(*(void *)(v5 + 1072) - *(void *)(v5 + 1064)) >> 5) - 1;
  if (0x2FC962FC962FC963 * ((uint64_t)(*(void *)(v5 + 1072) - *(void *)(v5 + 1064)) >> 5) == 1) {
    return;
  }
  char v6 = (void *)v5;
  unint64_t v7 = 0;
  long long v39 = (void *)(v5 + 1064);
  do
  {
    uint64_t v43 = sub_51690C(v39, v7);
    unint64_t v42 = v7 + 1;
    uint64_t v9 = (void *)sub_51690C(v39, v7 + 1);
    uint64_t v10 = 0;
    long long v11 = 0;
    long long __p = 0;
    uint64_t v50 = 0;
    unint64_t v51 = 0;
    unint64_t v12 = v9[5];
    unint64_t v13 = v9[3];
    BOOL v14 = v12 >= v13;
    if (v12 > v13) {
      unint64_t v13 = v9[5];
    }
    unint64_t v44 = v13;
    if (!v14)
    {
      uint64_t v15 = 0;
      while (1)
      {
        unsigned int v16 = sub_64EEB8((uint64_t)v6, v12);
        if ((v16 & 8) != 0) {
          unsigned int v18 = v16 & 0xFFFFFFE7 | 0x10;
        }
        else {
          unsigned int v18 = v16;
        }
        if (v12 == v9[3] - 1) {
          int v19 = 1;
        }
        else {
          int v19 = sub_64EEB8((uint64_t)v6, v12 + 1);
        }
        v15 += sub_46CCC8(v6, v12, v17);
        if (v18 == 1 || v18 == v19) {
          goto LABEL_13;
        }
        if (v18) {
          break;
        }
LABEL_12:
        uint64_t v15 = 0;
LABEL_13:
        if (++v12 == v44)
        {
          long long v11 = (long long *)__p;
          uint64_t v10 = (long long *)v50;
          goto LABEL_59;
        }
      }
      while (1)
      {
        unsigned int v21 = __clz(__rbit32(v18));
        if (v21 > 0x10) {
          int v22 = 0;
        }
        else {
          int v22 = dword_20E8DA8[v21];
        }
        LOBYTE(v45) = v21;
        DWORD1(v45) = v22;
        *((void *)&v45 + 1) = v15;
        char v46 = 0;
        LOBYTE(v47) = 0;
        HIBYTE(v48) = 0;
        long long v23 = (char *)__p;
        long long v24 = v50;
        if (__p == v50) {
          goto LABEL_34;
        }
        while (*v23 != v21)
        {
          v23 += 48;
          if (v23 == v50) {
            goto LABEL_34;
          }
        }
        if (v23 == v50)
        {
LABEL_34:
          if ((unint64_t)v50 >= v51)
          {
            uint64_t v50 = sub_70F054((char **)&__p, (uint64_t)&v45);
            uint64_t v28 = *(char **)a2;
            unint64_t v29 = *(void *)(a2 + 8);
            if (*(void *)a2 != v29) {
              goto LABEL_44;
            }
          }
          else
          {
            long long v25 = v45;
            v50[16] = v46;
            *(_OWORD *)long long v24 = v25;
            uint64_t v26 = v24 + 24;
            if (SHIBYTE(v48) < 0)
            {
              sub_4200(v26, (void *)v47, *((unint64_t *)&v47 + 1));
            }
            else
            {
              long long v27 = v47;
              *((void *)v24 + 5) = v48;
              *(_OWORD *)uint64_t v26 = v27;
            }
            uint64_t v50 = v24 + 48;
            uint64_t v28 = *(char **)a2;
            unint64_t v29 = *(void *)(a2 + 8);
            if (*(void *)a2 != v29)
            {
LABEL_44:
              while (v45 != *v28)
              {
                v28 += 48;
                if (v28 == (char *)v29) {
                  goto LABEL_50;
                }
              }
            }
          }
        }
        else
        {
          *((void *)v23 + 1) += v15;
          v23[16] = 0;
          uint64_t v28 = *(char **)a2;
          unint64_t v29 = *(void *)(a2 + 8);
          if (*(void *)a2 != v29) {
            goto LABEL_44;
          }
        }
        if (v28 == (char *)v29)
        {
LABEL_50:
          if (v29 >= *(void *)(a2 + 16))
          {
            *(void *)(a2 + 8) = sub_70F054((char **)a2, (uint64_t)&v45);
            if ((SHIBYTE(v48) & 0x80000000) == 0) {
              goto LABEL_27;
            }
          }
          else
          {
            long long v30 = v45;
            *(unsigned char *)(v29 + 16) = v46;
            *(_OWORD *)unint64_t v29 = v30;
            long long v31 = (unsigned char *)(v29 + 24);
            if (SHIBYTE(v48) < 0)
            {
              sub_4200(v31, (void *)v47, *((unint64_t *)&v47 + 1));
            }
            else
            {
              long long v32 = v47;
              *(void *)(v29 + 40) = v48;
              *(_OWORD *)long long v31 = v32;
            }
            *(void *)(a2 + 8) = v29 + 48;
            *(void *)(a2 + 8) = v29 + 48;
            if ((SHIBYTE(v48) & 0x80000000) == 0) {
              goto LABEL_27;
            }
          }
        }
        else
        {
          *((void *)v28 + 1) += *((void *)&v45 + 1);
          v28[16] = 1;
          if ((SHIBYTE(v48) & 0x80000000) == 0) {
            goto LABEL_27;
          }
        }
        operator delete((void *)v47);
LABEL_27:
        v18 &= v18 - 1;
        if (!v18) {
          goto LABEL_12;
        }
      }
    }
LABEL_59:
    unint64_t v33 = 126 - 2 * __clz(0xAAAAAAAAAAAAAAABLL * (v10 - v11));
    if (v10 == v11) {
      uint64_t v34 = 0;
    }
    else {
      uint64_t v34 = v33;
    }
    sub_70D338(v11, v10, (uint64_t)&v45, v34, 1);
    double v35 = *(double *)(a1 + 16) * (double)(uint64_t)v9[109];
    if (v35 >= 0.0)
    {
      if (v35 >= 4.50359963e15) {
        goto LABEL_70;
      }
      uint64_t v36 = (uint64_t)(v35 + v35) + 1;
    }
    else
    {
      if (v35 <= -4.50359963e15) {
        goto LABEL_70;
      }
      uint64_t v36 = (uint64_t)(v35 + v35);
      if (v36 >= 1) {
        --v36;
      }
    }
    double v35 = (double)(v36 >> 1);
LABEL_70:
    *(void *)&long long v45 = (uint64_t)v35;
    long long v52 = &v45;
    sub_70BA64((uint64_t *)&__p, (void **)&v52);
    if ((void **)(v43 + 656) != &__p) {
      sub_4C02B4((void **)(v43 + 656), (long long *)__p, (long long *)v50, 0xAAAAAAAAAAAAAAABLL * ((v50 - (unsigned char *)__p) >> 4));
    }
    long long v37 = (long long *)__p;
    unint64_t v7 = v42;
    if (__p)
    {
      uint64_t v38 = v50;
      double v8 = __p;
      if (v50 != __p)
      {
        do
        {
          if (*(v38 - 1) < 0) {
            operator delete(*((void **)v38 - 3));
          }
          v38 -= 48;
        }
        while (v38 != (char *)v37);
        double v8 = __p;
      }
      uint64_t v50 = (char *)v37;
      operator delete(v8);
    }
  }
  while (v42 != v40);
}

void sub_70C6F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  sub_28F14C((void **)va);
  _Unwind_Resume(a1);
}

void sub_70C708(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  sub_28F14C((void **)va);
  _Unwind_Resume(a1);
}

void sub_70C71C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  sub_28F14C((void **)va);
  _Unwind_Resume(a1);
}

void sub_70C730(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  sub_28F14C((void **)va);
  _Unwind_Resume(a1);
}

void sub_70C744(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25)
{
  *(void *)(v25 + 8) = v26;
  if (a23 < 0) {
    operator delete(__p);
  }
  sub_28F14C(&a24);
  _Unwind_Resume(a1);
}

uint64_t sub_70C780(uint64_t a1, void *a2)
{
  long long __p = operator new(0x20uLL);
  long long v11 = xmmword_20B9800;
  strcpy((char *)__p, "enable_route_road_descriptions");
  BOOL v4 = sub_29D62C(a2, (uint64_t)&__p);
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  *(unsigned char *)a1 = v4;
  long long __p = operator new(0x20uLL);
  long long v11 = xmmword_20B8890;
  strcpy((char *)__p, "enable_step_road_descriptions");
  BOOL v5 = sub_29D62C(a2, (uint64_t)&__p);
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  *(unsigned char *)(a1 + 1) = v5;
  long long __p = operator new(0x28uLL);
  long long v11 = xmmword_20B9240;
  strcpy((char *)__p, "max_road_description_types_in_summary");
  char v6 = sub_31AB44(a2, (uint64_t)&__p);
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  *(unsigned char *)(a1 + 2) = v6;
  long long __p = operator new(0x28uLL);
  long long v11 = xmmword_20B9280;
  strcpy((char *)__p, "step_description_min_length_factor");
  double v7 = sub_5C7E8(a2, (uint64_t)&__p);
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  *(double *)(a1 + 8) = v7;
  long long __p = operator new(0x28uLL);
  long long v11 = xmmword_20B93A0;
  strcpy((char *)__p, "route_description_min_length_factor");
  double v8 = sub_5C7E8(a2, (uint64_t)&__p);
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  *(double *)(a1 + 16) = v8;
  return a1;
}

void sub_70C97C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_70C9A8(uint64_t *a1, void *a2)
{
  *a1 = sub_3750CC(a2);
  strcpy((char *)v15, "RoadDescriptionBuilder");
  HIBYTE(v15[2]) = 22;
  unint64_t v12 = 0;
  unint64_t v13 = 0;
  uint64_t v14 = 0;
  BOOL v4 = sub_374CDC((uint64_t)a2, (uint64_t)v15, (uint64_t *)&v12);
  sub_3CB5E0(v4, (uint64_t)__p);
  sub_70D110((uint64_t)(a1 + 1), __p);
  BOOL v5 = v17;
  if (v17)
  {
    do
    {
      uint64_t v10 = *(char **)v5;
      sub_57AC8((uint64_t *)v5 + 5);
      if (v5[39] < 0) {
        operator delete(*((void **)v5 + 2));
      }
      operator delete(v5);
      BOOL v5 = v10;
    }
    while (v10);
  }
  char v6 = __p[0];
  __p[0] = 0;
  if (v6) {
    operator delete(v6);
  }
  double v7 = (void **)v12;
  if (v12)
  {
    double v8 = v13;
    uint64_t v9 = v12;
    if (v13 != v12)
    {
      do
      {
        if (*((char *)v8 - 1) < 0) {
          operator delete(*(v8 - 3));
        }
        v8 -= 3;
      }
      while (v8 != v7);
      uint64_t v9 = v12;
    }
    unint64_t v13 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v15[2]) < 0) {
    operator delete(v15[0]);
  }
  return a1;
}

void sub_70CAF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_70CB2C(uint64_t a1, uint64_t *a2)
{
  long long __p = 0;
  double v8 = 0;
  uint64_t v9 = 0;
  sub_70CBD8(a1, (uint64_t)&__p, a2);
  sub_70B860(a1, (uint64_t)&__p, a2);
  BOOL v4 = (void **)__p;
  if (__p)
  {
    BOOL v5 = v8;
    char v6 = __p;
    if (v8 != __p)
    {
      do
      {
        if (*((char *)v5 - 1) < 0) {
          operator delete(*(v5 - 3));
        }
        v5 -= 6;
      }
      while (v5 != v4);
      char v6 = __p;
    }
    double v8 = v4;
    operator delete(v6);
  }
}

void sub_70CBC4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_28F14C((void **)va);
  _Unwind_Resume(a1);
}

void sub_70CBD8(uint64_t a1, uint64_t a2, void *a3)
{
  if (!*(unsigned char *)(a1 + 9)) {
    return;
  }
  if (sub_45FB38(a3)) {
    return;
  }
  uint64_t v5 = sub_6467E8(a3, 0);
  uint64_t v40 = 0x2FC962FC962FC963 * ((uint64_t)(*(void *)(v5 + 1072) - *(void *)(v5 + 1064)) >> 5) - 1;
  if (0x2FC962FC962FC963 * ((uint64_t)(*(void *)(v5 + 1072) - *(void *)(v5 + 1064)) >> 5) == 1) {
    return;
  }
  char v6 = (void *)v5;
  unint64_t v7 = 0;
  long long v39 = (void *)(v5 + 1064);
  do
  {
    uint64_t v43 = sub_51690C(v39, v7);
    unint64_t v42 = v7 + 1;
    uint64_t v9 = (void *)sub_51690C(v39, v7 + 1);
    uint64_t v10 = 0;
    long long v11 = 0;
    long long __p = 0;
    uint64_t v50 = 0;
    unint64_t v51 = 0;
    unint64_t v12 = v9[5];
    unint64_t v13 = v9[3];
    BOOL v14 = v12 >= v13;
    if (v12 > v13) {
      unint64_t v13 = v9[5];
    }
    unint64_t v44 = v13;
    if (!v14)
    {
      uint64_t v15 = 0;
      while (1)
      {
        unsigned int v16 = sub_64EEB8((uint64_t)v6, v12);
        if ((v16 & 8) != 0) {
          unsigned int v18 = v16 & 0xFFFFFFE7 | 0x10;
        }
        else {
          unsigned int v18 = v16;
        }
        if (v12 == v9[3] - 1) {
          int v19 = 1;
        }
        else {
          int v19 = sub_64EEB8((uint64_t)v6, v12 + 1);
        }
        v15 += sub_470F2C(v6, v12, v17);
        if (v18 == 1 || v18 == v19) {
          goto LABEL_13;
        }
        if (v18) {
          break;
        }
LABEL_12:
        uint64_t v15 = 0;
LABEL_13:
        if (++v12 == v44)
        {
          long long v11 = (long long *)__p;
          uint64_t v10 = (long long *)v50;
          goto LABEL_59;
        }
      }
      while (1)
      {
        unsigned int v21 = __clz(__rbit32(v18));
        if (v21 > 0x10) {
          int v22 = 0;
        }
        else {
          int v22 = dword_20E8DA8[v21];
        }
        LOBYTE(v45) = v21;
        DWORD1(v45) = v22;
        *((void *)&v45 + 1) = v15;
        char v46 = 0;
        LOBYTE(v47) = 0;
        HIBYTE(v48) = 0;
        long long v23 = (char *)__p;
        long long v24 = v50;
        if (__p == v50) {
          goto LABEL_34;
        }
        while (*v23 != v21)
        {
          v23 += 48;
          if (v23 == v50) {
            goto LABEL_34;
          }
        }
        if (v23 == v50)
        {
LABEL_34:
          if ((unint64_t)v50 >= v51)
          {
            uint64_t v50 = sub_70F054((char **)&__p, (uint64_t)&v45);
            uint64_t v28 = *(char **)a2;
            unint64_t v29 = *(void *)(a2 + 8);
            if (*(void *)a2 != v29) {
              goto LABEL_44;
            }
          }
          else
          {
            long long v25 = v45;
            v50[16] = v46;
            *(_OWORD *)long long v24 = v25;
            uint64_t v26 = v24 + 24;
            if (SHIBYTE(v48) < 0)
            {
              sub_4200(v26, (void *)v47, *((unint64_t *)&v47 + 1));
            }
            else
            {
              long long v27 = v47;
              *((void *)v24 + 5) = v48;
              *(_OWORD *)uint64_t v26 = v27;
            }
            uint64_t v50 = v24 + 48;
            uint64_t v28 = *(char **)a2;
            unint64_t v29 = *(void *)(a2 + 8);
            if (*(void *)a2 != v29)
            {
LABEL_44:
              while (v45 != *v28)
              {
                v28 += 48;
                if (v28 == (char *)v29) {
                  goto LABEL_50;
                }
              }
            }
          }
        }
        else
        {
          *((void *)v23 + 1) += v15;
          v23[16] = 0;
          uint64_t v28 = *(char **)a2;
          unint64_t v29 = *(void *)(a2 + 8);
          if (*(void *)a2 != v29) {
            goto LABEL_44;
          }
        }
        if (v28 == (char *)v29)
        {
LABEL_50:
          if (v29 >= *(void *)(a2 + 16))
          {
            *(void *)(a2 + 8) = sub_70F054((char **)a2, (uint64_t)&v45);
            if ((SHIBYTE(v48) & 0x80000000) == 0) {
              goto LABEL_27;
            }
          }
          else
          {
            long long v30 = v45;
            *(unsigned char *)(v29 + 16) = v46;
            *(_OWORD *)unint64_t v29 = v30;
            long long v31 = (unsigned char *)(v29 + 24);
            if (SHIBYTE(v48) < 0)
            {
              sub_4200(v31, (void *)v47, *((unint64_t *)&v47 + 1));
            }
            else
            {
              long long v32 = v47;
              *(void *)(v29 + 40) = v48;
              *(_OWORD *)long long v31 = v32;
            }
            *(void *)(a2 + 8) = v29 + 48;
            *(void *)(a2 + 8) = v29 + 48;
            if ((SHIBYTE(v48) & 0x80000000) == 0) {
              goto LABEL_27;
            }
          }
        }
        else
        {
          *((void *)v28 + 1) += *((void *)&v45 + 1);
          v28[16] = 1;
          if ((SHIBYTE(v48) & 0x80000000) == 0) {
            goto LABEL_27;
          }
        }
        operator delete((void *)v47);
LABEL_27:
        v18 &= v18 - 1;
        if (!v18) {
          goto LABEL_12;
        }
      }
    }
LABEL_59:
    unint64_t v33 = 126 - 2 * __clz(0xAAAAAAAAAAAAAAABLL * (v10 - v11));
    if (v10 == v11) {
      uint64_t v34 = 0;
    }
    else {
      uint64_t v34 = v33;
    }
    sub_70D338(v11, v10, (uint64_t)&v45, v34, 1);
    double v35 = *(double *)(a1 + 16) * (double)(uint64_t)v9[109];
    if (v35 >= 0.0)
    {
      if (v35 >= 4.50359963e15) {
        goto LABEL_70;
      }
      uint64_t v36 = (uint64_t)(v35 + v35) + 1;
    }
    else
    {
      if (v35 <= -4.50359963e15) {
        goto LABEL_70;
      }
      uint64_t v36 = (uint64_t)(v35 + v35);
      if (v36 >= 1) {
        --v36;
      }
    }
    double v35 = (double)(v36 >> 1);
LABEL_70:
    *(void *)&long long v45 = (uint64_t)v35;
    long long v52 = &v45;
    sub_70BA64((uint64_t *)&__p, (void **)&v52);
    if ((void **)(v43 + 656) != &__p) {
      sub_4C02B4((void **)(v43 + 656), (long long *)__p, (long long *)v50, 0xAAAAAAAAAAAAAAABLL * ((v50 - (unsigned char *)__p) >> 4));
    }
    long long v37 = (long long *)__p;
    unint64_t v7 = v42;
    if (__p)
    {
      uint64_t v38 = v50;
      double v8 = __p;
      if (v50 != __p)
      {
        do
        {
          if (*(v38 - 1) < 0) {
            operator delete(*((void **)v38 - 3));
          }
          v38 -= 48;
        }
        while (v38 != (char *)v37);
        double v8 = __p;
      }
      uint64_t v50 = (char *)v37;
      operator delete(v8);
    }
  }
  while (v42 != v40);
}

void sub_70D084(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  sub_28F14C((void **)va);
  _Unwind_Resume(a1);
}

void sub_70D098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  sub_28F14C((void **)va);
  _Unwind_Resume(a1);
}

void sub_70D0AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  sub_28F14C((void **)va);
  _Unwind_Resume(a1);
}

void sub_70D0C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  sub_28F14C((void **)va);
  _Unwind_Resume(a1);
}

void sub_70D0D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25)
{
  *(void *)(v25 + 8) = v26;
  if (a23 < 0) {
    operator delete(__p);
  }
  sub_28F14C(&a24);
  _Unwind_Resume(a1);
}

uint64_t sub_70D110(uint64_t a1, void *a2)
{
  long long __p = operator new(0x20uLL);
  long long v11 = xmmword_20B9800;
  strcpy((char *)__p, "enable_route_road_descriptions");
  BOOL v4 = sub_29D62C(a2, (uint64_t)&__p);
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  *(unsigned char *)a1 = v4;
  long long __p = operator new(0x20uLL);
  long long v11 = xmmword_20B8890;
  strcpy((char *)__p, "enable_step_road_descriptions");
  BOOL v5 = sub_29D62C(a2, (uint64_t)&__p);
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  *(unsigned char *)(a1 + 1) = v5;
  long long __p = operator new(0x28uLL);
  long long v11 = xmmword_20B9240;
  strcpy((char *)__p, "max_road_description_types_in_summary");
  char v6 = sub_31AB44(a2, (uint64_t)&__p);
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  *(unsigned char *)(a1 + 2) = v6;
  long long __p = operator new(0x28uLL);
  long long v11 = xmmword_20B9280;
  strcpy((char *)__p, "step_description_min_length_factor");
  double v7 = sub_5C7E8(a2, (uint64_t)&__p);
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  *(double *)(a1 + 8) = v7;
  long long __p = operator new(0x28uLL);
  long long v11 = xmmword_20B93A0;
  strcpy((char *)__p, "route_description_min_length_factor");
  double v8 = sub_5C7E8(a2, (uint64_t)&__p);
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
  *(double *)(a1 + 16) = v8;
  return a1;
}

void sub_70D30C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_70D338(long long *a1, long long *a2, uint64_t a3, uint64_t a4, char a5)
{
uint64_t sub_70DA6C(long long *a1, long long *a2, long long *a3)
{
  uint64_t v3 = *((void *)a2 + 1);
  uint64_t v4 = *((void *)a3 + 1);
  if (v3 <= *((void *)a1 + 1))
  {
    if (v4 <= v3) {
      return 0;
    }
    long long v26 = *a2;
    char v31 = *((unsigned char *)a2 + 16);
    uint64_t v12 = *((void *)a2 + 3);
    *(void *)&long long v36 = *((void *)a2 + 4);
    *(void *)((char *)&v36 + 7) = *(void *)((char *)a2 + 39);
    char v13 = *((unsigned char *)a2 + 47);
    *((void *)a2 + 3) = 0;
    *((void *)a2 + 5) = 0;
    *((void *)a2 + 4) = 0;
    long long v14 = *a3;
    *((unsigned char *)a2 + 16) = *((unsigned char *)a3 + 16);
    *a2 = v14;
    uint64_t v15 = *((void *)a3 + 5);
    *(long long *)((char *)a2 + 24) = *(long long *)((char *)a3 + 24);
    *((void *)a2 + 5) = v15;
    *a3 = v26;
    *((unsigned char *)a3 + 16) = v31;
    *((void *)a3 + 3) = v12;
    *((void *)a3 + 4) = v36;
    *(void *)((char *)a3 + 39) = *(void *)((char *)&v36 + 7);
    *((unsigned char *)a3 + 47) = v13;
    if (*((void *)a2 + 1) > *((void *)a1 + 1))
    {
      long long v27 = *a1;
      char v32 = *((unsigned char *)a1 + 16);
      uint64_t v16 = *((void *)a1 + 3);
      *(void *)&long long v37 = *((void *)a1 + 4);
      *(void *)((char *)&v37 + 7) = *(void *)((char *)a1 + 39);
      char v17 = *((unsigned char *)a1 + 47);
      *((void *)a1 + 4) = 0;
      *((void *)a1 + 5) = 0;
      *((void *)a1 + 3) = 0;
      long long v18 = *a2;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      *a1 = v18;
      uint64_t v19 = *((void *)a2 + 5);
      *(long long *)((char *)a1 + 24) = *(long long *)((char *)a2 + 24);
      *((void *)a1 + 5) = v19;
      *a2 = v27;
      *((unsigned char *)a2 + 16) = v32;
      *((void *)a2 + 3) = v16;
      *((void *)a2 + 4) = v37;
      *(void *)((char *)a2 + 39) = *(void *)((char *)&v37 + 7);
      uint64_t result = 2;
      *((unsigned char *)a2 + 47) = v17;
      return result;
    }
  }
  else
  {
    char v5 = (void *)a1 + 3;
    char v6 = a1 + 2;
    if (v4 > v3)
    {
      long long v25 = *a1;
      char v30 = *((unsigned char *)a1 + 16);
      uint64_t v7 = *((void *)a1 + 3);
      *(void *)&long long v35 = *v6;
      *(void *)((char *)&v35 + 7) = *(void *)((char *)a1 + 39);
      char v8 = *((unsigned char *)a1 + 47);
      *((void *)a1 + 4) = 0;
      *((void *)a1 + 5) = 0;
      *char v5 = 0;
      long long v9 = *a3;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a3 + 16);
      *a1 = v9;
      uint64_t v10 = *((void *)a3 + 5);
      *(_OWORD *)char v5 = *(long long *)((char *)a3 + 24);
      *((void *)a1 + 5) = v10;
      *a3 = v25;
      *((unsigned char *)a3 + 16) = v30;
      *((void *)a3 + 3) = v7;
      *((void *)a3 + 4) = v35;
      *(void *)((char *)a3 + 39) = *(void *)((char *)&v35 + 7);
      uint64_t result = 1;
LABEL_9:
      *((unsigned char *)a3 + 47) = v8;
      return result;
    }
    long long v28 = *a1;
    char v33 = *((unsigned char *)a1 + 16);
    uint64_t v20 = *((void *)a1 + 3);
    *(void *)&long long v38 = *v6;
    *(void *)((char *)&v38 + 7) = *(void *)((char *)a1 + 39);
    char v8 = *((unsigned char *)a1 + 47);
    *((void *)a1 + 4) = 0;
    *((void *)a1 + 5) = 0;
    *char v5 = 0;
    long long v21 = *a2;
    *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
    *a1 = v21;
    uint64_t v22 = *((void *)a2 + 5);
    *(_OWORD *)char v5 = *(long long *)((char *)a2 + 24);
    *((void *)a1 + 5) = v22;
    *a2 = v28;
    *((unsigned char *)a2 + 16) = v33;
    *((void *)a2 + 3) = v20;
    *((void *)a2 + 4) = v38;
    *(void *)((char *)a2 + 39) = *(void *)((char *)&v38 + 7);
    *((unsigned char *)a2 + 47) = v8;
    if (*((void *)a3 + 1) > *((void *)a2 + 1))
    {
      long long v29 = *a2;
      char v34 = *((unsigned char *)a2 + 16);
      *(void *)&long long v39 = *((void *)a2 + 4);
      *(void *)((char *)&v39 + 7) = *(void *)((char *)a2 + 39);
      *((void *)a2 + 4) = 0;
      *((void *)a2 + 5) = 0;
      *((void *)a2 + 3) = 0;
      char v23 = *((unsigned char *)a3 + 16);
      *a2 = *a3;
      *((unsigned char *)a2 + 16) = v23;
      uint64_t v24 = *((void *)a3 + 5);
      *(long long *)((char *)a2 + 24) = *(long long *)((char *)a3 + 24);
      *((void *)a2 + 5) = v24;
      *a3 = v29;
      *((unsigned char *)a3 + 16) = v34;
      *((void *)a3 + 3) = v20;
      *((void *)a3 + 4) = v39;
      *(void *)((char *)a3 + 39) = *(void *)((char *)&v39 + 7);
      uint64_t result = 2;
      goto LABEL_9;
    }
  }
  return 1;
}

long long *sub_70DD74(long long *a1, long long *a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *((void *)a1 + 1);
  char v4 = *((unsigned char *)a1 + 16);
  char v6 = (uint64_t *)a1 + 3;
  uint64_t v5 = *((void *)a1 + 3);
  *(void *)long long v27 = *((void *)a1 + 4);
  *(void *)&v27[7] = *(void *)((char *)a1 + 39);
  char v7 = *((unsigned char *)a1 + 47);
  *((void *)a1 + 4) = 0;
  *((void *)a1 + 5) = 0;
  *((void *)a1 + 3) = 0;
  if (v2 <= *((void *)a2 - 5))
  {
    long long v11 = a1 + 3;
    do
    {
      long long v9 = v11;
      if (v11 >= a2) {
        break;
      }
      uint64_t v12 = *((void *)v11 + 1);
      v11 += 3;
    }
    while (v2 <= v12);
  }
  else
  {
    char v8 = a1;
    do
    {
      long long v9 = v8 + 3;
      uint64_t v10 = *((void *)v8 + 7);
      v8 += 3;
    }
    while (v2 <= v10);
  }
  if (v9 >= a2)
  {
    char v13 = a2;
  }
  else
  {
    do
    {
      char v13 = a2 - 3;
      uint64_t v14 = *((void *)a2 - 5);
      a2 -= 3;
    }
    while (v2 > v14);
  }
  while (v9 < v13)
  {
    char v26 = *((unsigned char *)v9 + 16);
    long long v25 = *v9;
    uint64_t v15 = *((void *)v9 + 3);
    *(void *)&long long v28 = *((void *)v9 + 4);
    *(void *)((char *)&v28 + 7) = *(void *)((char *)v9 + 39);
    char v16 = *((unsigned char *)v9 + 47);
    *((void *)v9 + 4) = 0;
    *((void *)v9 + 5) = 0;
    *((void *)v9 + 3) = 0;
    long long v17 = *v13;
    *((unsigned char *)v9 + 16) = *((unsigned char *)v13 + 16);
    long long *v9 = v17;
    long long v18 = *(long long *)((char *)v13 + 24);
    *((void *)v9 + 5) = *((void *)v13 + 5);
    *(long long *)((char *)v9 + 24) = v18;
    *((unsigned char *)v13 + 16) = v26;
    long long *v13 = v25;
    *((void *)v13 + 3) = v15;
    *((void *)v13 + 4) = v28;
    *(void *)((char *)v13 + 39) = *(void *)((char *)&v28 + 7);
    *((unsigned char *)v13 + 47) = v16;
    do
    {
      uint64_t v19 = *((void *)v9 + 7);
      v9 += 3;
    }
    while (v2 <= v19);
    do
    {
      uint64_t v20 = *((void *)v13 - 5);
      v13 -= 3;
    }
    while (v2 > v20);
  }
  if (v9 - 3 == a1)
  {
    int v23 = *((char *)v9 - 1);
    *((void *)v9 - 6) = v3;
    *((void *)v9 - 5) = v2;
    *((unsigned char *)v9 - 32) = v4;
    if (v23 < 0) {
      operator delete(*((void **)v9 - 3));
    }
  }
  else
  {
    long long v21 = *(v9 - 3);
    *((unsigned char *)a1 + 16) = *((unsigned char *)v9 - 32);
    *a1 = v21;
    if (*((char *)a1 + 47) < 0) {
      operator delete((void *)*v6);
    }
    long long v22 = *(long long *)((char *)v9 - 24);
    v6[2] = *((void *)v9 - 1);
    *(_OWORD *)char v6 = v22;
    *((unsigned char *)v9 - 1) = 0;
    *((void *)v9 - 6) = v3;
    *((void *)v9 - 5) = v2;
    *((unsigned char *)v9 - 32) = v4;
  }
  *((void *)v9 - 3) = v5;
  *(void *)((char *)v9 - 9) = *(void *)&v27[7];
  *((void *)v9 - 2) = *(void *)v27;
  *((unsigned char *)v9 - 1) = v7;
  return v9;
}

long long *sub_70DF90(long long *a1, unint64_t a2)
{
  uint64_t v2 = 0;
  uint64_t v3 = *(void *)a1;
  uint64_t v4 = *((void *)a1 + 1);
  char v5 = *((unsigned char *)a1 + 16);
  char v7 = (uint64_t *)a1 + 3;
  uint64_t v6 = *((void *)a1 + 3);
  *(void *)long long v28 = *((void *)a1 + 4);
  *(void *)&v28[7] = *(void *)((char *)a1 + 39);
  char v8 = *((unsigned char *)a1 + 47);
  *((void *)a1 + 4) = 0;
  *((void *)a1 + 5) = 0;
  *((void *)a1 + 3) = 0;
  do
  {
    uint64_t v9 = *((void *)&a1[v2 + 3] + 1);
    v2 += 3;
  }
  while (v9 > v4);
  uint64_t v10 = (uint64_t *)&a1[v2];
  if (v2 == 3)
  {
    while ((unint64_t)v10 < a2)
    {
      unint64_t v11 = a2 - 48;
      uint64_t v13 = *(void *)(a2 - 40);
      a2 -= 48;
      if (v13 > v4) {
        goto LABEL_9;
      }
    }
    unint64_t v11 = a2;
  }
  else
  {
    do
    {
      unint64_t v11 = a2 - 48;
      uint64_t v12 = *(void *)(a2 - 40);
      a2 -= 48;
    }
    while (v12 <= v4);
  }
LABEL_9:
  uint64_t v14 = (long long *)v10;
  if ((unint64_t)v10 < v11)
  {
    unint64_t v15 = v11;
    do
    {
      long long v26 = *v14;
      char v27 = *((unsigned char *)v14 + 16);
      *(void *)((char *)&v29 + 7) = *(void *)((char *)v14 + 39);
      uint64_t v16 = *((void *)v14 + 3);
      *(void *)&long long v29 = *((void *)v14 + 4);
      char v17 = *((unsigned char *)v14 + 47);
      *((void *)v14 + 3) = 0;
      *((void *)v14 + 4) = 0;
      *((void *)v14 + 5) = 0;
      char v18 = *(unsigned char *)(v15 + 16);
      long long *v14 = *(_OWORD *)v15;
      *((unsigned char *)v14 + 16) = v18;
      long long v19 = *(_OWORD *)(v15 + 24);
      *((void *)v14 + 5) = *(void *)(v15 + 40);
      *(long long *)((char *)v14 + 24) = v19;
      *(unsigned char *)(v15 + 16) = v27;
      *(_OWORD *)unint64_t v15 = v26;
      *(void *)(v15 + 24) = v16;
      *(void *)(v15 + 32) = v29;
      *(void *)(v15 + 39) = *(void *)((char *)&v29 + 7);
      *(unsigned char *)(v15 + 47) = v17;
      do
      {
        uint64_t v20 = *((void *)v14 + 7);
        v14 += 3;
      }
      while (v20 > v4);
      do
      {
        uint64_t v21 = *(void *)(v15 - 40);
        v15 -= 48;
      }
      while (v21 <= v4);
    }
    while ((unint64_t)v14 < v15);
  }
  if (v14 - 3 == a1)
  {
    int v24 = *((char *)v14 - 1);
    *((void *)v14 - 6) = v3;
    *((void *)v14 - 5) = v4;
    *((unsigned char *)v14 - 32) = v5;
    if (v24 < 0) {
      operator delete(*((void **)v14 - 3));
    }
  }
  else
  {
    long long v22 = *(v14 - 3);
    *((unsigned char *)a1 + 16) = *((unsigned char *)v14 - 32);
    *a1 = v22;
    if (*((char *)a1 + 47) < 0) {
      operator delete((void *)*v7);
    }
    long long v23 = *(long long *)((char *)v14 - 24);
    v7[2] = *((void *)v14 - 1);
    *(_OWORD *)char v7 = v23;
    *((unsigned char *)v14 - 1) = 0;
    *((void *)v14 - 6) = v3;
    *((void *)v14 - 5) = v4;
    *((unsigned char *)v14 - 32) = v5;
  }
  *((void *)v14 - 3) = v6;
  *(void *)((char *)v14 - 9) = *(void *)&v28[7];
  *((void *)v14 - 2) = *(void *)v28;
  *((unsigned char *)v14 - 1) = v8;
  return v14 - 3;
}

BOOL sub_70E1B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (a2 - a1) >> 4;
  BOOL result = 1;
  switch(0xAAAAAAAAAAAAAAABLL * v4)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      if (*(void *)(a2 - 40) > *(void *)(a1 + 8))
      {
        long long v23 = *(_OWORD *)a1;
        char v25 = *(unsigned char *)(a1 + 16);
        uint64_t v6 = *(void *)(a1 + 24);
        *(void *)&long long v22 = *(void *)(a1 + 32);
        *(void *)((char *)&v22 + 7) = *(void *)(a1 + 39);
        char v7 = *(unsigned char *)(a1 + 47);
        *(void *)(a1 + 32) = 0;
        *(void *)(a1 + 40) = 0;
        *(void *)(a1 + 24) = 0;
        long long v8 = *(_OWORD *)(a2 - 48);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 - 32);
        *(_OWORD *)a1 = v8;
        uint64_t v9 = *(void *)(a2 - 8);
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 - 24);
        *(void *)(a1 + 40) = v9;
        *(_OWORD *)(a2 - 48) = v23;
        *(unsigned char *)(a2 - 32) = v25;
        *(void *)(a2 - 24) = v6;
        *(void *)(a2 - 16) = v22;
        *(void *)(a2 - 9) = *(void *)((char *)&v22 + 7);
        *(unsigned char *)(a2 - 1) = v7;
      }
      return result;
    case 3uLL:
      sub_70DA6C((long long *)a1, (long long *)(a1 + 48), (long long *)(a2 - 48));
      return 1;
    case 4uLL:
      sub_70E484(a1, a1 + 48, a1 + 96, (long long *)(a2 - 48));
      return 1;
    case 5uLL:
      sub_70E69C(a1, a1 + 48, a1 + 96, a1 + 144, (long long *)(a2 - 48));
      return 1;
    default:
      uint64_t v10 = a1 + 96;
      sub_70DA6C((long long *)a1, (long long *)(a1 + 48), (long long *)(a1 + 96));
      uint64_t v11 = a1 + 144;
      if (a1 + 144 == a2) {
        return 1;
      }
      uint64_t v12 = 0;
      int v13 = 0;
      break;
  }
  while (1)
  {
    uint64_t v15 = *(void *)(v11 + 8);
    if (v15 > *(void *)(v10 + 8))
    {
      uint64_t v16 = *(void *)v11;
      char v17 = *(unsigned char *)(v11 + 16);
      uint64_t v18 = *(void *)(v11 + 24);
      *(void *)int v24 = *(void *)(v11 + 32);
      *(void *)&v24[7] = *(void *)(v11 + 39);
      char v19 = *(unsigned char *)(v11 + 47);
      *(void *)(v11 + 32) = 0;
      *(void *)(v11 + 40) = 0;
      uint64_t v20 = v12;
      *(void *)(v11 + 24) = 0;
      do
      {
        uint64_t v21 = a1 + v20;
        *(_OWORD *)(v21 + 144) = *(_OWORD *)(a1 + v20 + 96);
        *(unsigned char *)(v21 + 160) = *(unsigned char *)(a1 + v20 + 112);
        *(_OWORD *)(v21 + 168) = *(_OWORD *)(a1 + v20 + 120);
        *(void *)(v21 + 184) = *(void *)(a1 + v20 + 136);
        *(unsigned char *)(v21 + 143) = 0;
        *(unsigned char *)(v21 + 120) = 0;
        if (v20 == -96)
        {
          uint64_t v14 = a1;
          goto LABEL_7;
        }
        v20 -= 48;
      }
      while (v15 > *(void *)(v21 + 56));
      uint64_t v14 = a1 + v20 + 144;
LABEL_7:
      *(void *)uint64_t v14 = v16;
      *(void *)(v14 + 8) = v15;
      *(unsigned char *)(v14 + 16) = v17;
      *(void *)(v21 + 120) = v18;
      *(void *)(v14 + 32) = *(void *)v24;
      *(void *)(v14 + 39) = *(void *)&v24[7];
      *(unsigned char *)(v14 + 47) = v19;
      if (++v13 == 8) {
        return v11 + 48 == a2;
      }
    }
    uint64_t v10 = v11;
    v12 += 48;
    v11 += 48;
    if (v11 == a2) {
      return 1;
    }
  }
}

uint64_t sub_70E484(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4)
{
  uint64_t result = sub_70DA6C((long long *)a1, (long long *)a2, (long long *)a3);
  if (*((void *)a4 + 1) > *(void *)(a3 + 8))
  {
    long long v21 = *(_OWORD *)a3;
    char v24 = *(unsigned char *)(a3 + 16);
    uint64_t v9 = *(void *)(a3 + 24);
    *(void *)&long long v27 = *(void *)(a3 + 32);
    *(void *)((char *)&v27 + 7) = *(void *)(a3 + 39);
    char v10 = *(unsigned char *)(a3 + 47);
    *(void *)(a3 + 24) = 0;
    *(void *)(a3 + 40) = 0;
    *(void *)(a3 + 32) = 0;
    long long v11 = *a4;
    *(unsigned char *)(a3 + 16) = *((unsigned char *)a4 + 16);
    *(_OWORD *)a3 = v11;
    uint64_t v12 = *((void *)a4 + 5);
    *(_OWORD *)(a3 + 24) = *(long long *)((char *)a4 + 24);
    *(void *)(a3 + 40) = v12;
    *a4 = v21;
    *((unsigned char *)a4 + 16) = v24;
    *((void *)a4 + 3) = v9;
    *((void *)a4 + 4) = v27;
    *(void *)((char *)a4 + 39) = *(void *)((char *)&v27 + 7);
    *((unsigned char *)a4 + 47) = v10;
    if (*(void *)(a3 + 8) > *(void *)(a2 + 8))
    {
      long long v22 = *(_OWORD *)a2;
      char v25 = *(unsigned char *)(a2 + 16);
      uint64_t v13 = *(void *)(a2 + 24);
      *(void *)&long long v28 = *(void *)(a2 + 32);
      *(void *)((char *)&v28 + 7) = *(void *)(a2 + 39);
      char v14 = *(unsigned char *)(a2 + 47);
      *(void *)(a2 + 24) = 0;
      *(void *)(a2 + 40) = 0;
      *(void *)(a2 + 32) = 0;
      long long v15 = *(_OWORD *)a3;
      *(unsigned char *)(a2 + 16) = *(unsigned char *)(a3 + 16);
      *(_OWORD *)a2 = v15;
      uint64_t v16 = *(void *)(a3 + 40);
      *(_OWORD *)(a2 + 24) = *(_OWORD *)(a3 + 24);
      *(void *)(a2 + 40) = v16;
      *(_OWORD *)a3 = v22;
      *(unsigned char *)(a3 + 16) = v25;
      *(void *)(a3 + 24) = v13;
      *(void *)(a3 + 32) = v28;
      *(void *)(a3 + 39) = *(void *)((char *)&v28 + 7);
      *(unsigned char *)(a3 + 47) = v14;
      if (*(void *)(a2 + 8) > *(void *)(a1 + 8))
      {
        long long v23 = *(_OWORD *)a1;
        char v26 = *(unsigned char *)(a1 + 16);
        uint64_t v17 = *(void *)(a1 + 24);
        *(void *)&long long v29 = *(void *)(a1 + 32);
        *(void *)((char *)&v29 + 7) = *(void *)(a1 + 39);
        char v18 = *(unsigned char *)(a1 + 47);
        *(void *)(a1 + 32) = 0;
        *(void *)(a1 + 40) = 0;
        *(void *)(a1 + 24) = 0;
        long long v19 = *(_OWORD *)a2;
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        *(_OWORD *)a1 = v19;
        uint64_t v20 = *(void *)(a2 + 40);
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(void *)(a1 + 40) = v20;
        *(_OWORD *)a2 = v23;
        *(unsigned char *)(a2 + 16) = v26;
        *(void *)(a2 + 24) = v17;
        *(void *)(a2 + 32) = v29;
        *(void *)(a2 + 39) = *(void *)((char *)&v29 + 7);
        *(unsigned char *)(a2 + 47) = v18;
      }
    }
  }
  return result;
}

uint64_t sub_70E69C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5)
{
  uint64_t result = sub_70E484(a1, a2, a3, (long long *)a4);
  if (*((void *)a5 + 1) > *(void *)(a4 + 8))
  {
    long long v27 = *(_OWORD *)a4;
    char v31 = *(unsigned char *)(a4 + 16);
    uint64_t v11 = *(void *)(a4 + 24);
    *(void *)&long long v35 = *(void *)(a4 + 32);
    *(void *)((char *)&v35 + 7) = *(void *)(a4 + 39);
    char v12 = *(unsigned char *)(a4 + 47);
    *(void *)(a4 + 24) = 0;
    *(void *)(a4 + 40) = 0;
    *(void *)(a4 + 32) = 0;
    long long v13 = *a5;
    *(unsigned char *)(a4 + 16) = *((unsigned char *)a5 + 16);
    *(_OWORD *)a4 = v13;
    uint64_t v14 = *((void *)a5 + 5);
    *(_OWORD *)(a4 + 24) = *(long long *)((char *)a5 + 24);
    *(void *)(a4 + 40) = v14;
    *a5 = v27;
    *((unsigned char *)a5 + 16) = v31;
    *((void *)a5 + 3) = v11;
    *((void *)a5 + 4) = v35;
    *(void *)((char *)a5 + 39) = *(void *)((char *)&v35 + 7);
    *((unsigned char *)a5 + 47) = v12;
    if (*(void *)(a4 + 8) > *(void *)(a3 + 8))
    {
      long long v28 = *(_OWORD *)a3;
      char v32 = *(unsigned char *)(a3 + 16);
      uint64_t v15 = *(void *)(a3 + 24);
      *(void *)&long long v36 = *(void *)(a3 + 32);
      *(void *)((char *)&v36 + 7) = *(void *)(a3 + 39);
      char v16 = *(unsigned char *)(a3 + 47);
      *(void *)(a3 + 24) = 0;
      *(void *)(a3 + 40) = 0;
      *(void *)(a3 + 32) = 0;
      long long v17 = *(_OWORD *)a4;
      *(unsigned char *)(a3 + 16) = *(unsigned char *)(a4 + 16);
      *(_OWORD *)a3 = v17;
      uint64_t v18 = *(void *)(a4 + 40);
      *(_OWORD *)(a3 + 24) = *(_OWORD *)(a4 + 24);
      *(void *)(a3 + 40) = v18;
      *(_OWORD *)a4 = v28;
      *(unsigned char *)(a4 + 16) = v32;
      *(void *)(a4 + 24) = v15;
      *(void *)(a4 + 32) = v36;
      *(void *)(a4 + 39) = *(void *)((char *)&v36 + 7);
      *(unsigned char *)(a4 + 47) = v16;
      if (*(void *)(a3 + 8) > *(void *)(a2 + 8))
      {
        long long v29 = *(_OWORD *)a2;
        char v33 = *(unsigned char *)(a2 + 16);
        uint64_t v19 = *(void *)(a2 + 24);
        *(void *)&long long v37 = *(void *)(a2 + 32);
        *(void *)((char *)&v37 + 7) = *(void *)(a2 + 39);
        char v20 = *(unsigned char *)(a2 + 47);
        *(void *)(a2 + 24) = 0;
        *(void *)(a2 + 40) = 0;
        *(void *)(a2 + 32) = 0;
        long long v21 = *(_OWORD *)a3;
        *(unsigned char *)(a2 + 16) = *(unsigned char *)(a3 + 16);
        *(_OWORD *)a2 = v21;
        uint64_t v22 = *(void *)(a3 + 40);
        *(_OWORD *)(a2 + 24) = *(_OWORD *)(a3 + 24);
        *(void *)(a2 + 40) = v22;
        *(_OWORD *)a3 = v29;
        *(unsigned char *)(a3 + 16) = v33;
        *(void *)(a3 + 24) = v19;
        *(void *)(a3 + 32) = v37;
        *(void *)(a3 + 39) = *(void *)((char *)&v37 + 7);
        *(unsigned char *)(a3 + 47) = v20;
        if (*(void *)(a2 + 8) > *(void *)(a1 + 8))
        {
          long long v30 = *(_OWORD *)a1;
          char v34 = *(unsigned char *)(a1 + 16);
          uint64_t v23 = *(void *)(a1 + 24);
          *(void *)&long long v38 = *(void *)(a1 + 32);
          *(void *)((char *)&v38 + 7) = *(void *)(a1 + 39);
          char v24 = *(unsigned char *)(a1 + 47);
          *(void *)(a1 + 32) = 0;
          *(void *)(a1 + 40) = 0;
          *(void *)(a1 + 24) = 0;
          long long v25 = *(_OWORD *)a2;
          *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
          *(_OWORD *)a1 = v25;
          uint64_t v26 = *(void *)(a2 + 40);
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
          *(void *)(a1 + 40) = v26;
          *(_OWORD *)a2 = v30;
          *(unsigned char *)(a2 + 16) = v34;
          *(void *)(a2 + 24) = v23;
          *(void *)(a2 + 32) = v38;
          *(void *)(a2 + 39) = *(void *)((char *)&v38 + 7);
          *(unsigned char *)(a2 + 47) = v24;
        }
      }
    }
  }
  return result;
}

uint64_t sub_70E954(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == (long long *)a2) {
    return a3;
  }
  uint64_t v5 = a2;
  uint64_t v7 = a2 - (void)a1;
  uint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a2 - (uint64_t)a1) >> 4);
  if (a2 - (uint64_t)a1 >= 49 && (unint64_t)v7 >= 0x60)
  {
    int64_t v40 = (unint64_t)(v8 - 2) >> 1;
    int64_t v41 = v40;
    do
    {
      if (v40 >= v41)
      {
        uint64_t v42 = (2 * v41) | 1;
        uint64_t v43 = &a1[3 * v42];
        if (2 * v41 + 2 < v8)
        {
          uint64_t v44 = *((void *)&a1[3 * v42] + 1);
          uint64_t v45 = *((void *)v43 + 7);
          v43 += 3 * (v44 > v45);
          if (v44 > v45) {
            uint64_t v42 = 2 * v41 + 2;
          }
        }
        uint64_t v46 = *((void *)&a1[3 * v41] + 1);
        if (*((void *)v43 + 1) <= v46)
        {
          long long v47 = &a1[3 * v41];
          uint64_t v48 = *(void *)v47;
          char v49 = *((unsigned char *)v47 + 16);
          uint64_t v50 = *((void *)v47 + 3);
          *(void *)long long v64 = *((void *)v47 + 4);
          *(void *)&v64[7] = *(void *)((char *)v47 + 39);
          char v51 = *((unsigned char *)v47 + 47);
          *((void *)v47 + 4) = 0;
          *((void *)v47 + 5) = 0;
          *((void *)v47 + 3) = 0;
          do
          {
            char v52 = v47;
            long long v47 = v43;
            long long v53 = *v43;
            *((unsigned char *)v52 + 16) = *((unsigned char *)v43 + 16);
            long long *v52 = v53;
            long long v54 = *(long long *)((char *)v43 + 24);
            *((void *)v52 + 5) = *((void *)v43 + 5);
            *(long long *)((char *)v52 + 24) = v54;
            *((unsigned char *)v43 + 47) = 0;
            *((unsigned char *)v43 + 24) = 0;
            if (v40 < v42) {
              break;
            }
            uint64_t v55 = (2 * v42) | 1;
            uint64_t v43 = &a1[3 * v55];
            uint64_t v56 = 2 * v42 + 2;
            if (v56 < v8)
            {
              uint64_t v57 = *((void *)&a1[3 * v55] + 1);
              uint64_t v58 = *((void *)v43 + 7);
              v43 += 3 * (v57 > v58);
              if (v57 > v58) {
                uint64_t v55 = v56;
              }
            }
            uint64_t v42 = v55;
          }
          while (*((void *)v43 + 1) <= v46);
          *(void *)long long v47 = v48;
          *((void *)v47 + 1) = v46;
          *((unsigned char *)v47 + 16) = v49;
          *((void *)v47 + 3) = v50;
          *((void *)v47 + 4) = *(void *)v64;
          *(void *)((char *)v47 + 39) = *(void *)&v64[7];
          *((unsigned char *)v47 + 47) = v51;
        }
      }
      BOOL v38 = v41-- <= 0;
    }
    while (!v38);
  }
  uint64_t v9 = v5;
  if (v5 != a3)
  {
    char v10 = (long long *)((char *)a1 + 24);
    uint64_t v11 = a1 + 2;
    if (v7 < 96)
    {
      uint64_t v12 = v5;
      do
      {
        if (*(void *)(v12 + 8) > *((void *)a1 + 1))
        {
          long long v61 = *(_OWORD *)v12;
          char v65 = *(unsigned char *)(v12 + 16);
          uint64_t v13 = *(void *)(v12 + 24);
          *(void *)&long long v59 = *(void *)(v12 + 32);
          *(void *)((char *)&v59 + 7) = *(void *)(v12 + 39);
          char v14 = *(unsigned char *)(v12 + 47);
          *(void *)(v12 + 32) = 0;
          *(void *)(v12 + 40) = 0;
          *(void *)(v12 + 24) = 0;
          long long v15 = *a1;
          *(unsigned char *)(v12 + 16) = *((unsigned char *)a1 + 16);
          *(_OWORD *)uint64_t v12 = v15;
          uint64_t v16 = *((void *)a1 + 5);
          *(_OWORD *)(v12 + 24) = *v10;
          *(void *)(v12 + 40) = v16;
          *a1 = v61;
          *((unsigned char *)a1 + 16) = v65;
          *((void *)a1 + 3) = v13;
          *uint64_t v11 = v59;
          *(void *)((char *)a1 + 39) = *(void *)((char *)&v59 + 7);
          *((unsigned char *)a1 + 47) = v14;
        }
        v12 += 48;
      }
      while (v12 != a3);
LABEL_28:
      uint64_t v9 = a3;
      goto LABEL_29;
    }
    uint64_t v17 = v5;
    while (1)
    {
      if (*(void *)(v17 + 8) > *((void *)a1 + 1))
      {
        long long v62 = *(_OWORD *)v17;
        char v66 = *(unsigned char *)(v17 + 16);
        uint64_t v18 = *(void *)(v17 + 24);
        *(void *)&long long v60 = *(void *)(v17 + 32);
        *(void *)((char *)&v60 + 7) = *(void *)(v17 + 39);
        char v19 = *(unsigned char *)(v17 + 47);
        *(void *)(v17 + 32) = 0;
        *(void *)(v17 + 40) = 0;
        *(void *)(v17 + 24) = 0;
        long long v20 = *a1;
        *(unsigned char *)(v17 + 16) = *((unsigned char *)a1 + 16);
        *(_OWORD *)uint64_t v17 = v20;
        uint64_t v21 = *((void *)a1 + 5);
        *(_OWORD *)(v17 + 24) = *v10;
        *(void *)(v17 + 40) = v21;
        *a1 = v62;
        *((unsigned char *)a1 + 16) = v66;
        *((void *)a1 + 3) = v18;
        *uint64_t v11 = v60;
        *(void *)((char *)a1 + 39) = *(void *)((char *)&v60 + 7);
        *((unsigned char *)a1 + 47) = v19;
        if ((unint64_t)v8 < 3)
        {
          uint64_t v24 = (uint64_t)(a1 + 3);
          int64_t v25 = 1;
          uint64_t v26 = *((void *)a1 + 1);
          if (*((void *)a1 + 7) <= v26) {
            goto LABEL_21;
          }
        }
        else
        {
          uint64_t v22 = *((void *)a1 + 7);
          uint64_t v23 = *((void *)a1 + 13);
          uint64_t v24 = (uint64_t)&a1[3 * (v22 > v23) + 3];
          if (v22 <= v23) {
            int64_t v25 = 1;
          }
          else {
            int64_t v25 = 2;
          }
          uint64_t v26 = *((void *)a1 + 1);
          if (*(void *)(v24 + 8) <= v26)
          {
LABEL_21:
            uint64_t v27 = *(void *)a1;
            char v28 = *((unsigned char *)a1 + 16);
            *(void *)long long v63 = *v11;
            *(void *)&v63[7] = *(void *)((char *)a1 + 39);
            *((void *)a1 + 4) = 0;
            *((void *)a1 + 5) = 0;
            *(void *)char v10 = 0;
            uint64_t v29 = (uint64_t)a1;
            do
            {
              uint64_t v30 = v29;
              uint64_t v29 = v24;
              long long v31 = *(_OWORD *)v24;
              *(unsigned char *)(v30 + 16) = *(unsigned char *)(v24 + 16);
              *(_OWORD *)uint64_t v30 = v31;
              long long v32 = *(_OWORD *)(v24 + 24);
              *(void *)(v30 + 40) = *(void *)(v24 + 40);
              *(_OWORD *)(v30 + 24) = v32;
              *(unsigned char *)(v24 + 47) = 0;
              *(unsigned char *)(v24 + 24) = 0;
              if ((uint64_t)((unint64_t)(v8 - 2) >> 1) < v25) {
                break;
              }
              uint64_t v33 = (2 * v25) | 1;
              uint64_t v24 = (uint64_t)&a1[3 * v33];
              uint64_t v34 = 2 * v25 + 2;
              if (v34 < v8)
              {
                uint64_t v35 = *((void *)&a1[3 * v33] + 1);
                uint64_t v36 = *(void *)(v24 + 56);
                v24 += 48 * (v35 > v36);
                if (v35 > v36) {
                  uint64_t v33 = v34;
                }
              }
              int64_t v25 = v33;
            }
            while (*(void *)(v24 + 8) <= v26);
            *(void *)uint64_t v29 = v27;
            *(void *)(v29 + 8) = v26;
            *(unsigned char *)(v29 + 16) = v28;
            *(void *)(v29 + 24) = v18;
            *(void *)(v29 + 32) = *(void *)v63;
            *(void *)(v29 + 39) = *(void *)&v63[7];
            *(unsigned char *)(v29 + 47) = v19;
          }
        }
      }
      v17 += 48;
      if (v17 == a3) {
        goto LABEL_28;
      }
    }
  }
LABEL_29:
  if (v7 >= 49)
  {
    unint64_t v37 = v7 / 0x30uLL;
    do
    {
      sub_70EDF8((uint64_t *)a1, v5, a4, v37);
      v5 -= 48;
      BOOL v38 = v37-- > 2;
    }
    while (v38);
  }
  return v9;
}

__n128 sub_70EDF8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 >= 2)
  {
    uint64_t v4 = 0;
    __n128 v29 = *(__n128 *)a1;
    char v30 = *((unsigned char *)a1 + 16);
    uint64_t v5 = a1[3];
    *(void *)long long v31 = a1[4];
    *(void *)&v31[7] = *(uint64_t *)((char *)a1 + 39);
    char v6 = *((unsigned char *)a1 + 47);
    a1[4] = 0;
    a1[5] = 0;
    uint64_t v7 = a1;
    a1[3] = 0;
    do
    {
      uint64_t v10 = v4 + 1;
      uint64_t v11 = &v7[6 * v4 + 6];
      uint64_t v12 = (2 * v4) | 1;
      uint64_t v13 = 2 * v4 + 2;
      if (v13 < a4)
      {
        uint64_t v14 = v7[6 * v10 + 1];
        uint64_t v15 = v11[7];
        v11 += 6 * (v14 > v15);
        if (v14 > v15) {
          uint64_t v12 = v13;
        }
      }
      __n128 v8 = *(__n128 *)v11;
      *((unsigned char *)v7 + 16) = *((unsigned char *)v11 + 16);
      *(__n128 *)uint64_t v7 = v8;
      long long v9 = *(_OWORD *)(v11 + 3);
      v7[5] = v11[5];
      *(_OWORD *)(v7 + 3) = v9;
      *((unsigned char *)v11 + 47) = 0;
      *((unsigned char *)v11 + 24) = 0;
      uint64_t v7 = v11;
      uint64_t v4 = v12;
    }
    while (v12 <= (uint64_t)((unint64_t)(a4 - 2) >> 1));
    uint64_t v16 = (__n128 *)(a2 - 48);
    if (v11 == (uint64_t *)(a2 - 48))
    {
      __n128 result = v29;
      *(__n128 *)uint64_t v11 = v29;
      *((unsigned char *)v11 + 16) = v30;
      v11[3] = v5;
      v11[4] = *(void *)v31;
      *(uint64_t *)((char *)v11 + 39) = *(void *)&v31[7];
      *((unsigned char *)v11 + 47) = v6;
    }
    else
    {
      __n128 v17 = *v16;
      *((unsigned char *)v11 + 16) = *(unsigned char *)(a2 - 32);
      *(__n128 *)uint64_t v11 = v17;
      long long v18 = *(_OWORD *)(a2 - 24);
      v11[5] = *(void *)(a2 - 8);
      *(_OWORD *)(v11 + 3) = v18;
      __n128 result = v29;
      *uint64_t v16 = v29;
      *(unsigned char *)(a2 - 32) = v30;
      *(void *)(a2 - 24) = v5;
      *(void *)(a2 - 16) = *(void *)v31;
      *(void *)(a2 - 9) = *(void *)&v31[7];
      *(unsigned char *)(a2 - 1) = v6;
      uint64_t v20 = (char *)v11 - (char *)a1 + 48;
      if (v20 >= 49)
      {
        unint64_t v21 = (v20 / 0x30uLL - 2) >> 1;
        uint64_t v22 = v11[1];
        if (a1[6 * v21 + 1] > v22)
        {
          uint64_t v23 = *v11;
          char v24 = *((unsigned char *)v11 + 16);
          uint64_t v25 = v11[3];
          *(void *)&v32[7] = *(uint64_t *)((char *)v11 + 39);
          *(void *)long long v32 = v11[4];
          char v26 = *((unsigned char *)v11 + 47);
          v11[3] = 0;
          v11[4] = 0;
          v11[5] = 0;
          do
          {
            uint64_t v27 = v11;
            uint64_t v11 = &a1[6 * v21];
            __n128 v28 = *(__n128 *)v11;
            *((unsigned char *)v27 + 16) = *((unsigned char *)v11 + 16);
            *(__n128 *)uint64_t v27 = v28;
            __n128 result = *(__n128 *)(v11 + 3);
            v27[5] = v11[5];
            *(__n128 *)(v27 + 3) = result;
            *((unsigned char *)v11 + 47) = 0;
            *((unsigned char *)v11 + 24) = 0;
            if (!v21) {
              break;
            }
            unint64_t v21 = (v21 - 1) >> 1;
          }
          while (a1[6 * v21 + 1] > v22);
          *uint64_t v11 = v23;
          v11[1] = v22;
          *((unsigned char *)v11 + 16) = v24;
          v11[3] = v25;
          v11[4] = *(void *)v32;
          *(uint64_t *)((char *)v11 + 39) = *(void *)&v32[7];
          *((unsigned char *)v11 + 47) = v26;
        }
      }
    }
  }
  return result;
}

char *sub_70F054(char **a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  unint64_t v5 = 0xAAAAAAAAAAAAAAABLL * ((v4 - *a1) >> 4);
  unint64_t v6 = v5 + 1;
  if (v5 + 1 > 0x555555555555555) {
    sub_2E00();
  }
  if (0x5555555555555556 * ((a1[2] - v3) >> 4) > v6) {
    unint64_t v6 = 0x5555555555555556 * ((a1[2] - v3) >> 4);
  }
  if (0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 4) >= 0x2AAAAAAAAAAAAAALL) {
    unint64_t v8 = 0x555555555555555;
  }
  else {
    unint64_t v8 = v6;
  }
  if (v8)
  {
    if (v8 > 0x555555555555555) {
      sub_188D718();
    }
    long long v9 = (char *)operator new(48 * v8);
  }
  else
  {
    long long v9 = 0;
  }
  uint64_t v10 = &v9[48 * v5];
  long long v18 = v10;
  char v19 = v10;
  uint64_t v20 = &v9[48 * v8];
  *(_OWORD *)uint64_t v10 = *(_OWORD *)a2;
  v10[16] = *(unsigned char *)(a2 + 16);
  uint64_t v11 = v10 + 24;
  if (*(char *)(a2 + 47) < 0)
  {
    sub_4200(v11, *(void **)(a2 + 24), *(void *)(a2 + 32));
    uint64_t v3 = *a1;
    uint64_t v4 = a1[1];
    uint64_t v10 = v18;
    uint64_t v12 = v19 + 48;
    if (v4 == *a1)
    {
LABEL_17:
      uint64_t v15 = v3;
      goto LABEL_18;
    }
  }
  else
  {
    *(_OWORD *)uint64_t v11 = *(_OWORD *)(a2 + 24);
    *((void *)v10 + 5) = *(void *)(a2 + 40);
    uint64_t v12 = v10 + 48;
    if (v4 == v3) {
      goto LABEL_17;
    }
  }
  do
  {
    long long v13 = *((_OWORD *)v4 - 3);
    *(v10 - 32) = *(v4 - 32);
    *((_OWORD *)v10 - 3) = v13;
    long long v14 = *(_OWORD *)(v4 - 24);
    *((void *)v10 - 1) = *((void *)v4 - 1);
    *(_OWORD *)(v10 - 24) = v14;
    v10 -= 48;
    *((void *)v4 - 2) = 0;
    *((void *)v4 - 1) = 0;
    *((void *)v4 - 3) = 0;
    v4 -= 48;
  }
  while (v4 != v3);
  uint64_t v15 = *a1;
  uint64_t v3 = a1[1];
LABEL_18:
  *a1 = v10;
  a1[1] = v12;
  a1[2] = v20;
  if (v3 == v15)
  {
    if (v3) {
LABEL_20:
    }
      operator delete(v3);
  }
  else
  {
    do
    {
      __n128 v17 = v3 - 48;
      if (*(v3 - 1) < 0) {
        operator delete(*((void **)v3 - 3));
      }
      v3 -= 48;
    }
    while (v17 != v15);
    uint64_t v3 = v15;
    if (v15) {
      goto LABEL_20;
    }
  }
  return v12;
}

void sub_70F23C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_29078C((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_70F250()
{
  byte_25A490F = 1;
  word_25A48F8 = 65;
  byte_25A4927 = 1;
  word_25A4910 = 65;
  char v4 = 7;
  strcpy((char *)v3, "UNKNOWN");
  int v5 = 0;
  char v7 = 14;
  strcpy((char *)v6, "ROUTES_THROUGH");
  int v8 = 1;
  char v10 = 9;
  strcpy((char *)__p, "ROUTES_TO");
  int v11 = 3;
  char v13 = 11;
  strcpy((char *)v12, "ROUTES_FROM");
  int v14 = 2;
  xmmword_25A49B8 = 0u;
  *(_OWORD *)&qword_25A49C8 = 0u;
  dword_25A49D8 = 1065353216;
  sub_3A6EF0((uint64_t)&xmmword_25A49B8, (uint64_t)v3, (uint64_t)v3);
  sub_3A6EF0((uint64_t)&xmmword_25A49B8, (uint64_t)v6, (uint64_t)v6);
  sub_3A6EF0((uint64_t)&xmmword_25A49B8, (uint64_t)__p, (uint64_t)__p);
  sub_3A6EF0((uint64_t)&xmmword_25A49B8, (uint64_t)v12, (uint64_t)v12);
  if (v13 < 0)
  {
    operator delete(v12[0]);
    if ((v10 & 0x80000000) == 0)
    {
LABEL_3:
      if ((v7 & 0x80000000) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      operator delete(v6[0]);
      if ((v4 & 0x80000000) == 0) {
        goto LABEL_5;
      }
LABEL_9:
      operator delete(v3[0]);
      goto LABEL_5;
    }
  }
  else if ((v10 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p[0]);
  if (v7 < 0) {
    goto LABEL_8;
  }
LABEL_4:
  if (v4 < 0) {
    goto LABEL_9;
  }
LABEL_5:
  byte_25A493F = 8;
  strcpy((char *)&qword_25A4928, "any_mode");
  byte_25A4957 = 7;
  strcpy((char *)&dword_25A4940, "cycling");
  byte_25A496F = 7;
  strcpy((char *)&dword_25A4958, "driving");
  byte_25A4987 = 7;
  strcpy((char *)&dword_25A4970, "walking");
  qword_25A4990 = 0;
  qword_25A4998 = 0;
  qword_25A4988 = 0;
  uint64_t v0 = operator new(9uLL);
  *(void *)uint64_t v0 = 0x4020C000103050DLL;
  v0[8] = 6;
  qword_25A4988 = (uint64_t)v0;
  qword_25A4990 = (uint64_t)(v0 + 9);
  qword_25A4998 = (uint64_t)(v0 + 9);
  qword_25A49A0 = 0;
  qword_25A49A8 = 0;
  unk_25A49B0 = 0;
  uint64_t v1 = (char *)operator new(9uLL);
  qword_25A49A8 = (uint64_t)(v1 + 9);
  unk_25A49B0 = v1 + 9;
  double result = 1.10224369e-279;
  *(void *)uint64_t v1 = 0x604020C00010305;
  v1[8] = 13;
  qword_25A49A0 = (uint64_t)v1;
  return result;
}

void sub_70F518(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  if (qword_25A49C8) {
    sub_20AAB70((void **)qword_25A49C8);
  }
  unint64_t v37 = (void *)xmmword_25A49B8;
  *(void *)&xmmword_25A49B8 = 0;
  if (v37)
  {
    operator delete(v37);
    if ((a36 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a29 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_11;
    }
  }
  else if ((a36 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(__p);
  if ((a29 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a22 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_12;
  }
LABEL_11:
  operator delete(a24);
  if ((a22 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a15 & 0x80000000) == 0) {
LABEL_14:
    }
      _Unwind_Resume(exception_object);
LABEL_13:
    operator delete(a10);
    _Unwind_Resume(exception_object);
  }
LABEL_12:
  operator delete(a17);
  if ((a15 & 0x80000000) == 0) {
    goto LABEL_14;
  }
  goto LABEL_13;
}

void *sub_70F5B8(void *a1, uint64_t *a2, uint64_t a3)
{
  *a1 = 0;
  a1[1] = 0;
  sub_688A04(a2, 0, *(_DWORD *)(a3 + 968), (uint64_t *)&v8);
  long long v4 = v8;
  long long v8 = 0uLL;
  int v5 = (std::__shared_weak_count *)a1[1];
  *(_OWORD *)a1 = v4;
  if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  unint64_t v6 = (std::__shared_weak_count *)*((void *)&v8 + 1);
  if (!*((void *)&v8 + 1)
    || atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v8 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
  std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_70F6AC(_Unwind_Exception *a1)
{
  sub_14A84(v1);
  _Unwind_Resume(a1);
}

void sub_70F6C4(unsigned char *a1@<X1>, int a2@<W2>, uint64_t a3@<X8>)
{
  if (a1[16])
  {
    if ((byte_25A81F8[23] & 0x80000000) == 0)
    {
      std::string __dst = *(std::string *)byte_25A81F8;
      if (!a2) {
        goto LABEL_9;
      }
LABEL_6:
      if (byte_25A8227 < 0)
      {
        sub_4200(__p, (void *)xmmword_25A8210, *((unint64_t *)&xmmword_25A8210 + 1));
      }
      else
      {
        *(_OWORD *)long long __p = xmmword_25A8210;
        uint64_t v9 = unk_25A8220;
      }
      goto LABEL_11;
    }
    sub_4200(&__dst, *(void **)byte_25A81F8, *(unint64_t *)&byte_25A81F8[8]);
    if (a2) {
      goto LABEL_6;
    }
  }
  else
  {
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = 0;
    __dst.__r_.__value_.__s.__data_[0] = 0;
    if (a2) {
      goto LABEL_6;
    }
  }
LABEL_9:
  HIBYTE(v9) = 0;
  LOBYTE(__p[0]) = 0;
LABEL_11:
  if (v9 >= 0) {
    unint64_t v6 = __p;
  }
  else {
    unint64_t v6 = (void **)__p[0];
  }
  if (v9 >= 0) {
    std::string::size_type v7 = HIBYTE(v9);
  }
  else {
    std::string::size_type v7 = (std::string::size_type)__p[1];
  }
  std::string::append(&__dst, (const std::string::value_type *)v6, v7);
  if (SHIBYTE(v9) < 0) {
    operator delete(__p[0]);
  }
  switch(*a1)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 9:
    case 0xA:
    case 0xB:
    case 0xC:
    case 0xE:
    case 0xF:
    case 0x10:
      std::operator+<char>();
      break;
    case 8:
      *(unsigned char *)(a3 + 23) = 15;
      strcpy((char *)a3, "PEDESTRIAN_PATH");
      break;
    case 0xD:
      *(unsigned char *)(a3 + 23) = 6;
      strcpy((char *)a3, "STAIRS");
      break;
    default:
      *(void *)a3 = 0;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      break;
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
}

void sub_70F918(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if ((a21 & 0x80000000) == 0) {
    _Unwind_Resume(exception_object);
  }
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_70F9AC(uint64_t *a1@<X0>, void *a2@<X1>, std::string *a3@<X8>)
{
  uint64_t v4 = a2[1];
  if (*a2 == v4)
  {
    a3->__r_.__value_.__r.__words[0] = 0;
    a3->__r_.__value_.__l.__size_ = 0;
    a3->__r_.__value_.__r.__words[2] = 0;
    return;
  }
  int v5 = a2;
  unint64_t v6 = a1;
  if (0xAAAAAAAAAAAAAAABLL * ((v4 - *a2) >> 4) == 2)
  {
    long long v8 = sub_8D7730(*a1, (uint64_t)&xmmword_25A8258);
    if (*((char *)v8 + 23) < 0)
    {
      sub_4200(a3, (void *)*v8, v8[1]);
      uint64_t v7 = v5[1] - *v5;
      if (!v7) {
        return;
      }
    }
    else
    {
      long long v9 = *(_OWORD *)v8;
      a3->__r_.__value_.__r.__words[2] = v8[2];
      *(_OWORD *)&a3->__r_.__value_.__l.__data_ = v9;
      uint64_t v7 = v5[1] - *v5;
      if (!v7) {
        return;
      }
    }
LABEL_13:
    unint64_t v10 = 0;
    unint64_t v11 = 0xAAAAAAAAAAAAAAABLL * (v7 >> 4);
    unint64_t v34 = v11;
    uint64_t v35 = v6;
    while (1)
    {
      uint64_t v12 = (unsigned char *)sub_70FDD4(v5, v10);
      sub_70F6C4(v12, v10 != 0, (uint64_t)v40);
      char v13 = sub_8D7730(*v6, (uint64_t)v40);
      if (*((char *)v13 + 23) < 0)
      {
        sub_4200(__dst, (void *)*v13, v13[1]);
      }
      else
      {
        long long v14 = *(_OWORD *)v13;
        uint64_t v39 = v13[2];
        *(_OWORD *)std::string __dst = v14;
      }
      if (v10 == 1)
      {
        if ((byte_25A8257 & 0x80000000) == 0)
        {
          *(_OWORD *)long long __p = xmmword_25A8240;
          uint64_t v15 = unk_25A8250;
          goto LABEL_23;
        }
        uint64_t v16 = (unint64_t *)&xmmword_25A8240 + 1;
        __n128 v17 = &xmmword_25A8240;
      }
      else
      {
        if ((byte_25A823F & 0x80000000) == 0)
        {
          *(_OWORD *)long long __p = xmmword_25A8228;
          uint64_t v15 = unk_25A8238;
LABEL_23:
          uint64_t v37 = v15;
          goto LABEL_27;
        }
        uint64_t v16 = (unint64_t *)&xmmword_25A8228 + 1;
        __n128 v17 = &xmmword_25A8228;
      }
      sub_4200(__p, *(void **)v17, *v16);
LABEL_27:
      uint64_t size = HIBYTE(a3->__r_.__value_.__r.__words[2]);
      if ((size & 0x80u) == 0) {
        char v19 = a3;
      }
      else {
        char v19 = (std::string *)a3->__r_.__value_.__r.__words[0];
      }
      char v20 = HIBYTE(v37);
      if (v37 >= 0) {
        unint64_t v21 = __p;
      }
      else {
        unint64_t v21 = (void **)__p[0];
      }
      if (v37 >= 0) {
        int64_t v22 = HIBYTE(v37);
      }
      else {
        int64_t v22 = (int64_t)__p[1];
      }
      if (!v22)
      {
        std::string::size_type v30 = 0;
        goto LABEL_48;
      }
      if ((size & 0x80u) != 0) {
        uint64_t size = a3->__r_.__value_.__l.__size_;
      }
      if (size >= v22)
      {
        uint64_t v23 = v5;
        char v24 = (char *)v19 + size;
        int v25 = *(char *)v21;
        char v26 = v19;
        do
        {
          uint64_t v27 = size - v22;
          if (v27 == -1) {
            break;
          }
          __n128 v28 = (char *)memchr(v26, v25, v27 + 1);
          if (!v28) {
            break;
          }
          __n128 v29 = v28;
          if (!memcmp(v28, v21, v22))
          {
            int v5 = v23;
            if (v29 != v24)
            {
              std::string::size_type v30 = v29 - (char *)v19;
              BOOL v33 = v29 - (char *)v19 == -1;
              unint64_t v11 = v34;
              unint64_t v6 = v35;
              if (!v33)
              {
LABEL_48:
                if (v39 >= 0) {
                  long long v31 = __dst;
                }
                else {
                  long long v31 = (void **)__dst[0];
                }
                if (v39 >= 0) {
                  std::string::size_type v32 = HIBYTE(v39);
                }
                else {
                  std::string::size_type v32 = (std::string::size_type)__dst[1];
                }
                std::string::replace(a3, v30, v22, (const std::string::value_type *)v31, v32);
                char v20 = HIBYTE(v37);
              }
              goto LABEL_55;
            }
LABEL_46:
            unint64_t v11 = v34;
            unint64_t v6 = v35;
            goto LABEL_55;
          }
          char v26 = (std::string *)(v29 + 1);
          uint64_t size = v24 - (v29 + 1);
        }
        while (size >= v22);
        int v5 = v23;
        goto LABEL_46;
      }
LABEL_55:
      if (v20 < 0)
      {
        operator delete(__p[0]);
        if ((SHIBYTE(v39) & 0x80000000) == 0)
        {
LABEL_57:
          if (v41 < 0) {
            goto LABEL_61;
          }
          goto LABEL_14;
        }
      }
      else if ((SHIBYTE(v39) & 0x80000000) == 0)
      {
        goto LABEL_57;
      }
      operator delete(__dst[0]);
      if (v41 < 0) {
LABEL_61:
      }
        operator delete(v40[0]);
LABEL_14:
      if (++v10 == v11) {
        return;
      }
    }
  }
  if ((byte_25A823F & 0x80000000) == 0)
  {
    *(_OWORD *)&a3->__r_.__value_.__l.__data_ = xmmword_25A8228;
    a3->__r_.__value_.__r.__words[2] = unk_25A8238;
    uint64_t v7 = a2[1] - *a2;
    if (!v7) {
      return;
    }
    goto LABEL_13;
  }
  sub_4200(a3, (void *)xmmword_25A8228, *((unint64_t *)&xmmword_25A8228 + 1));
  uint64_t v7 = v5[1] - *v5;
  if (v7) {
    goto LABEL_13;
  }
}

void sub_70FD28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a23 < 0)
  {
    operator delete(__p);
    if ((a29 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v29 + 23) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a29 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a24);
  if ((*(char *)(v29 + 23) & 0x80000000) == 0) {
LABEL_4:
  }
    _Unwind_Resume(exception_object);
LABEL_7:
  operator delete(*(void **)v29);
  _Unwind_Resume(exception_object);
}

uint64_t sub_70FDD4(void *a1, unint64_t a2)
{
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1[1] - *a1) >> 4) <= a2)
  {
    exception = __cxa_allocate_exception(0x40uLL);
    std::to_string(&v16, a2);
    unint64_t v6 = std::string::insert(&v16, 0, "Out-of-bounds access in Vector::at with index=");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v17.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    long long v8 = std::string::append(&v17, ",size=");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v18.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v18.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v15, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1[1] - *a1) >> 4));
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      unint64_t v10 = &v15;
    }
    else {
      unint64_t v10 = (std::string *)v15.__r_.__value_.__r.__words[0];
    }
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v15.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v15.__r_.__value_.__l.__size_;
    }
    uint64_t v12 = std::string::append(&v18, (const std::string::value_type *)v10, size);
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    std::string::size_type v20 = v12->__r_.__value_.__r.__words[2];
    long long v19 = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    long long v14 = (void *)sub_2F404((uint64_t)exception, &v19);
  }
  return *a1 + 48 * a2;
}

void sub_70FF24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 41) < 0) {
    operator delete(*(void **)(v33 - 64));
  }
  if (a14 < 0)
  {
    operator delete(a9);
    if ((a33 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a26 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_10;
    }
  }
  else if ((a33 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(a28);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_7;
  }
LABEL_10:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0) {
LABEL_11:
  }
    _Unwind_Resume(a1);
LABEL_7:
  operator delete(__p);
  goto LABEL_11;
}

double sub_710004()
{
  strcpy(&byte_25A49F7, "\n\x1B\\toi=orth\\"");
  strcpy((char *)&qword_25A49E0, "\x1B\\toi=lhp\\"");
  byte_25A4A0F = 11;
  qword_25A4A10 = (uint64_t)operator new(0x19uLL);
  long long v280 = xmmword_20B9250;
  unk_25A4A18 = xmmword_20B9250;
  strcpy((char *)qword_25A4A10, "\x1B\\toi=x-sampa-internal\\"");
  byte_25A4A3F = 13;
  strcpy((char *)&qword_25A4A28, "\x1B\\tn=address\\"");
  strcpy(&byte_25A4A57, "\t\x1B\\tn=normal\\"");
  strcpy((char *)&qword_25A4A40, "\x1B\\tn=nav\\"");
  byte_25A4A6F = 12;
  byte_25A4A87 = 7;
  strcpy((char *)&dword_25A4A70, "\x1B\\lang=");
  byte_25A4A9F = 1;
  word_25A4A88 = 92;
  byte_25A4AB7 = 4;
  strcpy((char *)&qword_25A4AA0, "DEV:");
  byte_25A4ACF = 8;
  strcpy((char *)&qword_25A4AB8, "Continue");
  byte_25A4AE7 = 11;
  strcpy((char *)&qword_25A4AD0, "Start_Route");
  byte_25A4AFF = 14;
  strcpy((char *)&qword_25A4AE8, "Continue_Route");
  byte_25A4B17 = 12;
  strcpy((char *)&qword_25A4B00, "Resume_Route");
  byte_25A4B2F = 18;
  strcpy((char *)&xmmword_25A4B18, "Start_Route_U_Turn");
  byte_25A4B47 = 7;
  strcpy((char *)&dword_25A4B30, "_U_Turn");
  qword_25A4B58 = 0x1300000000000000;
  qmemcpy(&unk_25A4B60, "Continue_Route", 14);
  dword_25A4B50 = 1702131055;
  qword_25A4B48 = *(void *)"Resume_Route";
  *(int *)((char *)&dword_25A4B54 + 3) = 1852994900;
  dword_25A4B54 = 1415533919;
  qword_25A4B70 = 0x1500000000000000;
  strcpy(byte_25A4B78, "Left_Turn");
  unk_25A4B6E = 1415533919;
  *(_DWORD *)((char *)&qword_25A4B70 + 1) = 1852994900;
  strcpy(&byte_25A4B8F, "\tRight_Turn");
  strcpy(&byte_25A4BA7, "\nLeft_Turn_At_End");
  byte_25A4BBF = 16;
  byte_25A4BD7 = 17;
  strcpy((char *)&xmmword_25A4BC0, "Right_Turn_At_End");
  byte_25A4BEF = 15;
  strcpy((char *)&qword_25A4BD8, "Sharp_Left_Turn");
  byte_25A4C07 = 16;
  strcpy((char *)&xmmword_25A4BF0, "Sharp_Right_Turn");
  byte_25A4C1F = 16;
  strcpy((char *)&xmmword_25A4C08, "Slight_Left_Turn");
  byte_25A4C37 = 17;
  strcpy((char *)&xmmword_25A4C20, "Slight_Right_Turn");
  strcpy(&byte_25A4C4F, "\tKeep_Right");
  strcpy((char *)&qword_25A4C38, "Keep_Left");
  strcpy(&byte_25A4C67, "\nU_Turn");
  byte_25A4C7F = 6;
  byte_25A4C97 = 14;
  strcpy((char *)&qword_25A4C80, "Walking_U_Turn");
  byte_25A4CAF = 20;
  strcpy((char *)&xmmword_25A4C98, "U_Turn_When_Possible");
  byte_25A4CC7 = 20;
  strcpy((char *)&xmmword_25A4CB0, "U_Turn_At_Roundabout");
  byte_25A4CDF = 11;
  strcpy((char *)&qword_25A4CC8, "Enter_Ferry");
  strcpy(&byte_25A4CF7, "\nChange_Ferry");
  strcpy((char *)&qword_25A4CE0, "Exit_Ferry");
  strcpy((char *)&xmmword_25A4D10, "Enter_Railway_Shuttle");
  strcpy((char *)&xmmword_25A4D28, "Exit_Railway_Shuttle");
  strcpy((char *)&xmmword_25A4D40, "Change_Railway_Shuttle");
  strcpy((char *)&xmmword_25A4D58, "End_Of_Navigation");
  strcpy((char *)&xmmword_25A4D70, "End_Of_Navigation");
  strcpy((char *)&qword_25A4D88, "Destination");
  strcpy((char *)&xmmword_25A4DA0, "Destination_On_left");
  strcpy((char *)&xmmword_25A4DB8, "Destination_On_Right");
  strcpy((char *)&xmmword_25A4E00, "First_Stop_On_Right");
  strcpy((char *)&xmmword_25A4E48, "Next_Stop_On_Right");
  byte_25A4D0F = 12;
  byte_25A4D27 = 21;
  byte_25A4D3F = 20;
  strcpy((char *)&xmmword_25A4E78, "Waypoint_Stop_On_Left");
  byte_25A4D57 = 22;
  byte_25A4D6F = 17;
  byte_25A4D87 = 17;
  byte_25A4D9F = 11;
  byte_25A4DB7 = 19;
  byte_25A4DCF = 20;
  strcpy(&byte_25A4DE7, "\nFirst_Stop_On_left");
  *(void *)&v268[0] = *(void *)"First_Stop";
  strcpy((char *)&qword_25A4DD0, "First_Stop");
  byte_25A4DFF = 18;
  byte_25A4E17 = 19;
  strcpy(&byte_25A4E2F, "\tNext_Stop_On_left");
  strcpy((char *)&qword_25A4E60, "Waypoint_Stop");
  strcpy((char *)&xmmword_25A4E90, "Waypoint_Stop_On_Right");
  strcpy((char *)&qword_25A4EA8, "Roundabout_");
  *(void *)&v264[48] = *(void *)"Next_Stop";
  strcpy((char *)&qword_25A4E18, "Next_Stop");
  byte_25A4E47 = 17;
  byte_25A4E5F = 18;
  byte_25A4E77 = 13;
  byte_25A4E8F = 21;
  byte_25A4EA7 = 22;
  byte_25A4EBF = 11;
  byte_25A4ED7 = 16;
  strcpy((char *)&xmmword_25A4EC0, "Enter_Roundabout");
  qword_25A4ED8 = (uint64_t)operator new(0x20uLL);
  long long v279 = xmmword_20B91C0;
  xmmword_25A4EE0 = xmmword_20B91C0;
  strcpy((char *)qword_25A4ED8, "Walking_Enter_Roundabout");
  byte_25A4F07 = 16;
  strcpy((char *)&xmmword_25A4EF0, "Leave_Roundabout");
  byte_25A4F1F = 21;
  strcpy((char *)&xmmword_25A4F08, "Roundabout_First_Exit");
  byte_25A4F37 = 22;
  strcpy((char *)&xmmword_25A4F20, "Roundabout_Second_Exit");
  byte_25A4F4F = 21;
  strcpy((char *)&xmmword_25A4F38, "Roundabout_Third_Exit");
  strcpy((char *)&xmmword_25A4F50, "Roundabout_Fourth_Exit");
  HIBYTE(word_25A4F66) = 22;
  byte_25A4F7F = 21;
  strcpy((char *)&xmmword_25A4F68, "Roundabout_Fifth_Exit");
  byte_25A4F97 = 21;
  strcpy((char *)&xmmword_25A4F80, "Roundabout_Sixth_Exit");
  qword_25A4F98 = (uint64_t)operator new(0x19uLL);
  xmmword_25A4FA0 = xmmword_20B9250;
  strcpy((char *)qword_25A4F98, "Roundabout_Seventh_Exit");
  strcpy((char *)&xmmword_25A4FB0, "Roundabout_Eighth_Exit");
  HIBYTE(word_25A4FC6) = 22;
  byte_25A4FDF = 21;
  strcpy((char *)&xmmword_25A4FC8, "Roundabout_Ninth_Exit");
  byte_25A4FF7 = 21;
  strcpy((char *)&xmmword_25A4FE0, "Roundabout_Tenth_Exit");
  qword_25A4FF8 = (uint64_t)operator new(0x20uLL);
  xmmword_25A5000 = xmmword_20B91C0;
  strcpy((char *)qword_25A4FF8, "Roundabout_Eleventh_Exit");
  qword_25A5010 = (uint64_t)operator new(0x19uLL);
  unk_25A5018 = xmmword_20B9250;
  strcpy((char *)qword_25A5010, "Roundabout_Twelfth_Exit");
  qword_25A5028 = (uint64_t)operator new(0x20uLL);
  long long v276 = xmmword_20B5EB0;
  xmmword_25A5030 = xmmword_20B5EB0;
  strcpy((char *)qword_25A5028, "Roundabout_Thirteenth_Exit");
  qword_25A5040 = (uint64_t)operator new(0x20uLL);
  unk_25A5048 = xmmword_20B5EB0;
  strcpy((char *)qword_25A5040, "Roundabout_Fourteenth_Exit");
  qword_25A5058 = (uint64_t)operator new(0x20uLL);
  long long v278 = xmmword_20B8870;
  xmmword_25A5060 = xmmword_20B8870;
  strcpy((char *)qword_25A5058, "Roundabout_Fifteenth_Exit");
  qword_25A5070 = (uint64_t)operator new(0x20uLL);
  unk_25A5078 = xmmword_20B8870;
  strcpy((char *)qword_25A5070, "Roundabout_Sixteenth_Exit");
  qword_25A5088 = (uint64_t)operator new(0x20uLL);
  long long v273 = xmmword_20B91A0;
  xmmword_25A5090 = xmmword_20B91A0;
  strcpy((char *)qword_25A5088, "Roundabout_Seventeenth_Exit");
  qword_25A50A0 = (uint64_t)operator new(0x20uLL);
  unk_25A50A8 = xmmword_20B5EB0;
  strcpy((char *)qword_25A50A0, "Roundabout_Eighteenth_Exit");
  qword_25A50B8 = (uint64_t)operator new(0x20uLL);
  xmmword_25A50C0 = xmmword_20B5EB0;
  strcpy((char *)qword_25A50B8, "Roundabout_Nineteenth_Exit");
  byte_25A50E7 = 8;
  strcpy((char *)&qword_25A50D0, "Off_Ramp");
  byte_25A50FF = 16;
  strcpy((char *)&xmmword_25A50E8, "Off_Ramp_On_Left");
  byte_25A5117 = 17;
  strcpy((char *)&xmmword_25A5100, "Off_Ramp_On_Right");
  byte_25A512F = 14;
  strcpy((char *)&qword_25A5118, "Change_Highway");
  strcpy((char *)&xmmword_25A5130, "Change_Highway_On_Left");
  HIBYTE(word_25A5146) = 22;
  qword_25A5148 = (uint64_t)operator new(0x19uLL);
  xmmword_25A5150 = xmmword_20B9250;
  strcpy((char *)qword_25A5148, "Change_Highway_On_Right");
  byte_25A5177 = 5;
  dword_25A5160 = 1735550285;
  byte_25A5164 = 101;
  byte_25A5165 = 0;
  byte_25A518F = 12;
  strcpy((char *)&qword_25A5178, "Enter_Detour");
  byte_25A51A7 = 11;
  strcpy((char *)&qword_25A5190, "Exit_Detour");
  byte_25A51BF = 18;
  strcpy((char *)&xmmword_25A51A8, "Walking_Turnaround");
  qword_25A51C0 = (uint64_t)operator new(0x19uLL);
  unk_25A51C8 = xmmword_20B9250;
  strcpy((char *)qword_25A51C0, "Walking_Turnaround_Sign");
  byte_25A51EF = 19;
  strcpy((char *)&xmmword_25A51D8, "Distance_Title_List");
  qword_25A51F0 = (uint64_t)operator new(0x19uLL);
  unk_25A51F8 = xmmword_20B9250;
  long long v270 = *(_OWORD *)"Cross_The_Street_Spoken";
  strcpy((char *)qword_25A51F0, "Cross_The_Street_Spoken");
  *(void *)&v268[1] = *(void *)"t_Spoken";
  byte_25A521F = 19;
  strcpy((char *)&xmmword_25A5208, "Arrival_Charge_List");
  byte_25A5237 = 15;
  strcpy((char *)&qword_25A5220, "Charge_At_Start");
  strcpy(&byte_25A524F, "\tPass_Street");
  strcpy((char *)&qword_25A5238, "Pass_Exit");
  byte_25A5267 = 11;
  byte_25A527F = 17;
  strcpy((char *)&xmmword_25A5268, "Pass_Intersection");
  strcpy(&byte_25A5297, "\t_PrevExitNumber");
  strcpy((char *)&qword_25A5280, "Next_Exit");
  byte_25A52AF = 15;
  strcpy(&byte_25A52C7, "\t_PrevUTurn");
  strcpy((char *)&qword_25A52B0, "_PrevRoad");
  strcpy(&byte_25A52DF, "\nNext_");
  byte_25A52F7 = 5;
  byte_25A530F = 15;
  strcpy((char *)&qword_25A52F8, "_At_Next_Street");
  byte_25A5327 = 21;
  strcpy((char *)&xmmword_25A5310, "_At_Next_Intersection");
  byte_25A533F = 14;
  strcpy((char *)&qword_25A5328, "Charge_Station");
  byte_25A5357 = 15;
  strcpy((char *)&qword_25A5340, "_Charge_Station");
  BYTE1(qword_25A5368) = 0;
  WORD1(qword_25A5368) = 25856;
  HIDWORD(qword_25A5368) = 335544320;
  strcpy((char *)&qword_25A5358, "_Charge_Station_");
  byte_25A5387 = 8;
  strcpy((char *)&qword_25A5370, "_Minimum");
  byte_25A539F = 15;
  strcpy((char *)&qword_25A5388, "ExitShield_Sign");
  byte_25A53B7 = 8;
  strcpy((char *)&qword_25A53A0, "Walking_");
  byte_25A53CF = 16;
  strcpy((char *)&xmmword_25A53B8, "Walking_Continue");
  byte_25A53E7 = 19;
  strcpy((char *)&xmmword_25A53D0, "Walking_Start_Route");
  qword_25A53E8 = (uint64_t)operator new(0x20uLL);
  xmmword_25A53F0 = xmmword_20B5EB0;
  strcpy((char *)qword_25A53E8, "Walking_Start_Route_U_Turn");
  byte_25A5417 = 17;
  strcpy((char *)&xmmword_25A5400, "Walking_Left_Turn");
  byte_25A542F = 18;
  strcpy((char *)&xmmword_25A5418, "Walking_Right_Turn");
  qword_25A5430 = (uint64_t)operator new(0x20uLL);
  unk_25A5438 = xmmword_20B5EB0;
  strcpy((char *)qword_25A5430, "Walking_Turn_At_Roundabout");
  qword_25A5448 = (uint64_t)operator new(0x20uLL);
  long long v277 = xmmword_20B91B0;
  xmmword_25A5450 = xmmword_20B91B0;
  strcpy((char *)qword_25A5448, "Walking_U_Turn_When_Possible");
  qword_25A5460 = (uint64_t)operator new(0x28uLL);
  long long v269 = xmmword_20B9390;
  unk_25A5468 = xmmword_20B9390;
  strcpy((char *)qword_25A5460, "Walking_Roundabout_Exit_Continue");
  qword_25A5478 = (uint64_t)operator new(0x20uLL);
  xmmword_25A5480 = xmmword_20B91B0;
  strcpy((char *)qword_25A5478, "Walking_Roundabout_Exit_Left");
  qword_25A5490 = (uint64_t)operator new(0x20uLL);
  long long v275 = xmmword_20B8890;
  unk_25A5498 = xmmword_20B8890;
  strcpy((char *)qword_25A5490, "Walking_Roundabout_Exit_Right");
  qword_25A54A8 = (uint64_t)operator new(0x20uLL);
  xmmword_25A54B0 = xmmword_20B8870;
  strcpy((char *)qword_25A54A8, "Walking_End_Of_Navigation");
  long long v272 = *(_OWORD *)"nd_Of_Navigation";
  uint64_t v0 = (char *)operator new(0x20uLL);
  qword_25A54C0 = (uint64_t)v0;
  unk_25A54C8 = xmmword_20B8870;
  *(_OWORD *)uint64_t v0 = *(_OWORD *)"Walking_End_Of_Navigation";
  *(_OWORD *)(v0 + 9) = v272;
  v0[25] = 0;
  byte_25A54EF = 8;
  strcpy((char *)&qword_25A54D8, "Walking_");
  qword_25A54F0 = (uint64_t)operator new(0x19uLL);
  unk_25A54F8 = v280;
  strcpy((char *)qword_25A54F0, "Walking_Sharp_Left_Turn");
  qword_25A5508 = (uint64_t)operator new(0x20uLL);
  xmmword_25A5510 = v279;
  strcpy((char *)qword_25A5508, "Walking_Sharp_Right_Turn");
  qword_25A5520 = (uint64_t)operator new(0x20uLL);
  unk_25A5528 = v279;
  strcpy((char *)qword_25A5520, "Walking_Slight_Left_Turn");
  qword_25A5538 = (uint64_t)operator new(0x20uLL);
  xmmword_25A5540 = v278;
  strcpy((char *)qword_25A5538, "Walking_Slight_Right_Turn");
  byte_25A5567 = 4;
  strcpy((char *)&dword_25A5550, "Exit");
  byte_25A557F = 4;
  strcpy((char *)&dword_25A5568, "Road");
  byte_25A5597 = 7;
  strcpy((char *)&dword_25A5580, "Freeway");
  byte_25A55AF = 12;
  strcpy((char *)&qword_25A5598, "Intersection");
  byte_25A55C7 = 5;
  strcpy((char *)&dword_25A55B0, "Ferry");
  byte_25A55DF = 11;
  strcpy((char *)&qword_25A55C8, "ShuttleName");
  byte_25A55F7 = 5;
  strcpy((char *)&dword_25A55E0, "Road1");
  strcpy(&byte_25A560F, "\tName");
  strcpy((char *)&qword_25A55F8, "Signpost1");
  byte_25A5627 = 4;
  byte_25A563F = 7;
  strcpy((char *)&dword_25A5628, "Address");
  byte_25A5657 = 7;
  strcpy((char *)&dword_25A5640, "Shield1");
  byte_25A566F = 13;
  strcpy((char *)&qword_25A5658, "TowardShield1");
  byte_25A5687 = 6;
  strcpy((char *)&dword_25A5670, "Right_");
  byte_25A569F = 5;
  byte_25A568C = 95;
  dword_25A5688 = 1952867660;
  byte_25A568D = 0;
  strcpy(&byte_25A56B7, "\tOn_Left_");
  strcpy((char *)&qword_25A56A0, "On_Right_");
  byte_25A56CF = 8;
  byte_25A56E7 = 12;
  strcpy((char *)&qword_25A56D0, "ElevatorName");
  byte_25A56FF = 13;
  strcpy((char *)&qword_25A56E8, "EscalatorName");
  strcpy(&byte_25A5717, "\nBridgeName");
  strcpy((char *)&qword_25A5700, "StairsName");
  strcpy(&byte_25A572F, "\nTunnelName");
  strcpy(&byte_25A5747, "\nParking");
  byte_25A575F = 7;
  strcpy(&byte_25A5777, "\t_Escalator");
  strcpy((char *)&qword_25A5760, "_Elevator");
  strcpy(&byte_25A578F, "\n_ElevatorName");
  byte_25A57A7 = 13;
  byte_25A57BF = 14;
  strcpy((char *)&qword_25A57A8, "_EscalatorName");
  byte_25A57D7 = 5;
  strcpy((char *)&qword_25A57C0, "_Road");
  byte_25A57EF = 8;
  strcpy((char *)&qword_25A57D8, "_Freeway");
  byte_25A5807 = 13;
  strcpy((char *)&qword_25A57F0, "_Intersection");
  byte_25A581F = 6;
  strcpy((char *)&dword_25A5808, "_Road1");
  byte_25A5837 = 6;
  strcpy((char *)&dword_25A5820, "_Road2");
  strcpy(&byte_25A584F, "\n_Signpost2");
  strcpy((char *)&qword_25A5838, "_Signpost1");
  strcpy(&byte_25A5867, "\n_Ferry");
  byte_25A587F = 6;
  byte_25A5897 = 12;
  strcpy((char *)&qword_25A5880, "_Ferry_Ferry");
  byte_25A58AF = 12;
  strcpy((char *)&qword_25A5898, "_ShuttleName");
  qword_25A58B0 = (uint64_t)operator new(0x20uLL);
  unk_25A58B8 = v277;
  strcpy((char *)qword_25A58B0, "_Railway_Shuttle_ShuttleName");
  byte_25A58DF = 11;
  strcpy((char *)&qword_25A58C8, "_ExitNumber");
  byte_25A58F7 = 5;
  dword_25A58E0 = 1769489759;
  byte_25A58E4 = 116;
  byte_25A58E5 = 0;
  byte_25A590F = 7;
  strcpy((char *)&dword_25A58F8, "_StayOn");
  byte_25A5927 = 7;
  strcpy((char *)&dword_25A5910, "_Stairs");
  byte_25A593F = 5;
  strcpy((char *)&dword_25A5928, "_Ramp");
  byte_25A5957 = 11;
  strcpy((char *)&qword_25A5940, "_StairsName");
  strcpy(&byte_25A596F, "\t_Down");
  strcpy((char *)&qword_25A5958, "_RampName");
  byte_25A5987 = 5;
  byte_25A599F = 3;
  dword_25A5988 = 7361887;
  byte_25A59B7 = 7;
  strcpy((char *)&dword_25A59A0, "_Bridge");
  byte_25A59CF = 7;
  strcpy((char *)&dword_25A59B8, "_Tunnel");
  byte_25A59E7 = 11;
  strcpy((char *)&qword_25A59D0, "_Roundabout");
  byte_25A59FF = 6;
  strcpy((char *)&dword_25A59E8, "_Cross");
  byte_25A5A17 = 8;
  strcpy((char *)&qword_25A5A00, "_Parking");
  byte_25A5A2F = 8;
  strcpy((char *)&qword_25A5A18, "_Shield1");
  byte_25A5A47 = 14;
  strcpy((char *)&qword_25A5A30, "_TowardShield1");
  byte_25A5A5F = 8;
  strcpy((char *)&qword_25A5A48, "_Shield2");
  byte_25A5A77 = 14;
  strcpy((char *)&qword_25A5A60, "_TowardShield2");
  byte_25A5A8F = 11;
  strcpy((char *)&qword_25A5A78, "_Direction1");
  byte_25A5AA7 = 11;
  strcpy((char *)&qword_25A5A90, "_Direction2");
  strcpy(&byte_25A5ABF, "\n_TowardDirection1");
  strcpy((char *)&qword_25A5AA8, "Direction1");
  byte_25A5AD7 = 17;
  byte_25A5AEF = 17;
  strcpy((char *)&xmmword_25A5AD8, "_TowardDirection2");
  byte_25A5B07 = 16;
  strcpy((char *)&xmmword_25A5AF0, "TowardDirection1");
  byte_25A5B1F = 7;
  strcpy((char *)&qword_25A5B08, "_Spoken");
  byte_25A5B37 = 5;
  strcpy((char *)&qword_25A5B20, "_Sign");
  byte_25A5B4F = 15;
  strcpy((char *)&qword_25A5B38, "_Secondary_Sign");
  byte_25A5B67 = 5;
  byte_25A5B54 = 116;
  dword_25A5B50 = 1936280671;
  byte_25A5B55 = 0;
  byte_25A5B7F = 8;
  strcpy((char *)&qword_25A5B68, "_Primary");
  qword_25A5B90 = 0xF00000000000000;
  strcpy(byte_25A5B98, "_Secondary");
  strcpy((char *)&qword_25A5B80, "_Spoken_Primary");
  strcpy(&byte_25A5BAF, "\n_Secondary");
  strcpy(&byte_25A5BC7, "\n_Spoken_Secondar");
  BYTE1(qword_25A5BD8) = 0;
  WORD1(qword_25A5BD8) = 0;
  HIDWORD(qword_25A5BD8) = 285212672;
  byte_25A5BF7 = 13;
  strcpy((char *)&qword_25A5BE0, "_To_Secondary");
  BYTE1(qword_25A5C08) = 0;
  WORD1(qword_25A5C08) = 0;
  HIDWORD(qword_25A5C08) = 335544320;
  strcpy((char *)&dword_25A5BF8, "_Spoken_To_Secon");
  strcpy(&byte_25A5C27, "\t_ValidDistance");
  strcpy((char *)&qword_25A5C10, "_Distance");
  byte_25A5C3F = 14;
  byte_25A5C57 = 6;
  strcpy((char *)&dword_25A5C40, "_Short");
  byte_25A5C6F = 1;
  word_25A5C58 = 95;
  qword_25A5C70 = (uint64_t)operator new(0x20uLL);
  unk_25A5C78 = v279;
  strcpy((char *)qword_25A5C70, "Concatenate_Newline_Sign");
  uint64_t v1 = (char *)operator new(0x19uLL);
  qword_25A5C88 = (uint64_t)v1;
  xmmword_25A5C90 = v280;
  *(_OWORD *)uint64_t v1 = v270;
  uint64_t v2 = *(void *)&v268[1];
  *(void *)(v1 + 15) = *(void *)&v268[1];
  v1[23] = 0;
  byte_25A5CB7 = 12;
  strcpy((char *)&qword_25A5CA0, "Chain_Spoken");
  byte_25A5CCF = 15;
  strcpy((char *)&qword_25A5CB8, "Chain_To_Spoken");
  strcpy(&byte_25A5CE7, "\nThen_Spoken");
  strcpy((char *)&qword_25A5CD0, "And_Spoken");
  byte_25A5CFF = 11;
  byte_25A5D17 = 18;
  strcpy((char *)&xmmword_25A5D00, "Concatenate_Spoken");
  qword_25A5D18 = (uint64_t)operator new(0x28uLL);
  long long v267 = xmmword_20B9240;
  xmmword_25A5D20 = xmmword_20B9240;
  strcpy((char *)qword_25A5D18, "At_Traffic_Light_Chain_Spoken_Primary");
  qword_25A5D30 = (uint64_t)operator new(0x28uLL);
  v268[2] = xmmword_20B9260;
  unk_25A5D38 = xmmword_20B9260;
  strcpy((char *)qword_25A5D30, "At_Stop_Sign_Chain_Spoken_Primary");
  qword_25A5D48 = (uint64_t)operator new(0x40uLL);
  xmmword_25A5D50 = xmmword_20B9A90;
  strcpy((char *)qword_25A5D48, "At_Stop_Sign_Cross_Traffic_Doesnt_Stop_Chain_Spoken_Primary");
  qword_25A5D60 = (uint64_t)operator new(0x30uLL);
  long long v266 = xmmword_20B9A40;
  unk_25A5D68 = xmmword_20B9A40;
  strcpy((char *)qword_25A5D60, "At_Next_Traffic_Light_Chain_Spoken_Primary");
  qword_25A5D78 = (uint64_t)operator new(0x28uLL);
  long long v265 = xmmword_20E12D0;
  xmmword_25A5D80 = xmmword_20E12D0;
  strcpy((char *)qword_25A5D78, "At_Next_Stop_Sign_Chain_Spoken_Primary");
  qword_25A5D90 = (uint64_t)operator new(0x28uLL);
  long long v274 = xmmword_20B9960;
  unk_25A5D98 = xmmword_20B9960;
  strcpy((char *)qword_25A5D90, "At_Traffic_Light_Chain_Spoken_Secondary");
  qword_25A5DA8 = (uint64_t)operator new(0x28uLL);
  xmmword_25A5DB0 = xmmword_20B93A0;
  strcpy((char *)qword_25A5DA8, "At_Stop_Sign_Chain_Spoken_Secondary");
  qword_25A5DC0 = (uint64_t)operator new(0x30uLL);
  long long v272 = xmmword_20E1380;
  unk_25A5DC8 = xmmword_20E1380;
  strcpy((char *)qword_25A5DC0, "At_Next_Traffic_Light_Chain_Spoken_Secondary");
  qword_25A5DD8 = (uint64_t)operator new(0x30uLL);
  xmmword_25A5DE0 = xmmword_20B93C0;
  strcpy((char *)qword_25A5DD8, "At_Next_Stop_Sign_Chain_Spoken_Secondary");
  qword_25A5DF0 = (uint64_t)operator new(0x38uLL);
  unk_25A5DF8 = xmmword_20B9A60;
  strcpy((char *)qword_25A5DF0, "At_Next_One_Traffic_Light_Chain_Spoken_Secondary");
  qword_25A5E08 = (uint64_t)operator new(0x30uLL);
  xmmword_25A5E10 = xmmword_20E1380;
  strcpy((char *)qword_25A5E08, "At_Next_One_Stop_Sign_Chain_Spoken_Secondary");
  qword_25A5E20 = (uint64_t)operator new(0x28uLL);
  unk_25A5E28 = xmmword_20B9960;
  strcpy((char *)qword_25A5E20, "At_Mini_Roundabout_Chain_Spoken_Primary");
  qword_25A5E38 = (uint64_t)operator new(0x30uLL);
  long long v271 = xmmword_20B93D0;
  xmmword_25A5E40 = xmmword_20B93D0;
  strcpy((char *)qword_25A5E38, "At_Mini_Roundabout_Chain_Spoken_Secondary");
  qword_25A5E50 = (uint64_t)operator new(0x20uLL);
  unk_25A5E58 = v275;
  strcpy((char *)qword_25A5E50, "Walking_Distance_Chain_Spoken");
  qword_25A5E68 = (uint64_t)operator new(0x20uLL);
  xmmword_25A5E70 = v275;
  strcpy((char *)qword_25A5E68, "Walking_Continue_Chain_Spoken");
  uint64_t v3 = (char *)operator new(0x19uLL);
  qword_25A5E80 = (uint64_t)v3;
  unk_25A5E88 = v280;
  *(_OWORD *)uint64_t v3 = v270;
  *(void *)(v3 + 15) = v2;
  v3[23] = 0;
  qword_25A5E98 = (uint64_t)operator new(0x28uLL);
  xmmword_25A5EA0 = v269;
  strcpy((char *)qword_25A5E98, "Distance_Cross_The_Street_Spoken");
  byte_25A5EC7 = 22;
  strcpy((char *)&xmmword_25A5EB0, "Walking_Continue_Cross");
  byte_25A5EDF = 14;
  strcpy((char *)&qword_25A5EC8, "Continue_Cross");
  byte_25A5EF7 = 5;
  strcpy((char *)&dword_25A5EE0, "Cross");
  byte_25A5F0F = 19;
  strcpy((char *)&xmmword_25A5EF8, "Cross_Street_Spoken");
  byte_25A5F27 = 17;
  strcpy((char *)&xmmword_25A5F10, "Cross_Road_Spoken");
  byte_25A5F3F = 20;
  strcpy((char *)&xmmword_25A5F28, "Use_Crosswalk_Spoken");
  byte_25A5F57 = 15;
  strcpy((char *)&qword_25A5F40, "Distance_Spoken");
  byte_25A5F6F = 19;
  strcpy((char *)&xmmword_25A5F58, "Distance_And_Spoken");
  byte_25A5F87 = 21;
  strcpy((char *)&xmmword_25A5F70, "Continue_Stage_Spoken");
  byte_25A5F9F = 13;
  qmemcpy(&qword_25A5F88, "ContinueStage", 13);
  int v4 = SHIBYTE(qword_25A5B90);
  if (qword_25A5B90 >= 0) {
    size_t v5 = HIBYTE(qword_25A5B90);
  }
  else {
    size_t v5 = unk_25A5B88;
  }
  unint64_t v6 = v5 + 13;
  byte_25A5F95 = 0;
  if (v5 + 13 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v6 >= 0x17)
  {
    uint64_t v8 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17) {
      uint64_t v8 = v6 | 7;
    }
    uint64_t v9 = v8 + 1;
    unint64_t v10 = operator new(v8 + 1);
    qword_25A5FA8 = v5 + 13;
    unk_25A5FB0 = v9 | 0x8000000000000000;
    qword_25A5FA0 = (uint64_t)v10;
    *unint64_t v10 = *(void *)"ContinueStage";
    long long v7 = (char *)v10 + 13;
    *(void *)((char *)v10 + 5) = *(void *)"nueStage";
  }
  else
  {
    BYTE1(qword_25A5FA8) = 0;
    WORD1(qword_25A5FA8) = 0;
    HIDWORD(qword_25A5FA8) = 0;
    unk_25A5FB0 = 0;
    byte_25A5FB7 = v5 + 13;
    long long v7 = (char *)&qword_25A5FA8 + 5;
    strcpy((char *)&qword_25A5FA0, "Continue");
    if (!v5) {
      goto LABEL_15;
    }
  }
  if (v4 >= 0) {
    unint64_t v11 = &qword_25A5B80;
  }
  else {
    unint64_t v11 = (uint64_t *)qword_25A5B80;
  }
  memmove(v7, v11, v5);
LABEL_15:
  v7[v5] = 0;
  int v12 = byte_25A57D7;
  if (byte_25A57D7 >= 0) {
    size_t v13 = byte_25A57D7;
  }
  else {
    size_t v13 = qword_25A57C8;
  }
  unint64_t v14 = v13 + 13;
  if (v13 + 13 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v14 >= 0x17)
  {
    uint64_t v16 = (v14 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v14 | 7) != 0x17) {
      uint64_t v16 = v14 | 7;
    }
    uint64_t v17 = v16 + 1;
    std::string v18 = operator new(v16 + 1);
    __dst.__r_.__value_.__l.__size_ = v13 + 13;
    __dst.__r_.__value_.__r.__words[2] = v17 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v18;
    *std::string v18 = qword_25A5F88;
    *(void *)((char *)v18 + 5) = *(uint64_t *)((char *)&qword_25A5F88 + 5);
    std::string v15 = (char *)v18 + 13;
  }
  else
  {
    *(_OWORD *)&__dst.__r_.__value_.__r.__words[1] = 0uLL;
    *(std::string::size_type *)((char *)__dst.__r_.__value_.__r.__words + 5) = *(uint64_t *)((char *)&qword_25A5F88 + 5);
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v13 + 13;
    __dst.__r_.__value_.__r.__words[0] = qword_25A5F88;
    std::string v15 = &__dst.__r_.__value_.__s.__data_[13];
    if (!v13) {
      goto LABEL_29;
    }
  }
  if (v12 >= 0) {
    long long v19 = &qword_25A57C0;
  }
  else {
    long long v19 = (uint64_t *)qword_25A57C0;
  }
  memmove(v15, v19, v13);
LABEL_29:
  v15[v13] = 0;
  if (v4 >= 0) {
    std::string::size_type v20 = (const std::string::value_type *)&qword_25A5B80;
  }
  else {
    std::string::size_type v20 = (const std::string::value_type *)qword_25A5B80;
  }
  unint64_t v21 = std::string::append(&__dst, v20, v5);
  long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  qword_25A5FC8 = v21->__r_.__value_.__r.__words[2];
  xmmword_25A5FB8 = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  byte_25A5FE7 = 5;
  strcpy((char *)&dword_25A5FD0, "Merge");
  qword_25A5FE8 = (uint64_t)operator new(0x20uLL);
  v268[1] = xmmword_20B8E90;
  *(_OWORD *)algn_25A5FF0 = xmmword_20B8E90;
  strcpy((char *)qword_25A5FE8, "Continue_Freeway_Spoken_Primary");
  byte_25A6017 = 8;
  strcpy((char *)&qword_25A6000, "Starting");
  byte_25A602F = 14;
  strcpy((char *)&qword_25A6018, "Starting_Route");
  byte_25A6047 = 14;
  strcpy((char *)&qword_25A6030, "Resuming_Route");
  byte_25A605F = 16;
  strcpy((char *)&xmmword_25A6048, "Continuing_Route");
  byte_25A6077 = 9;
  word_25A6068 = 112;
  qword_25A6060 = *(void *)&v264[48];
  strcpy(&byte_25A608F, "\nEnding");
  strcpy((char *)&word_25A6080, "op");
  qword_25A6078 = *(void *)&v268[0];
  byte_25A60A7 = 6;
  strcpy((char *)&qword_25A60A8, "_Destination");
  byte_25A60BF = 12;
  byte_25A60D7 = 15;
  strcpy((char *)&qword_25A60C0, "_At_Destination");
  std::operator+<char>();
  qword_25A60F0 = (uint64_t)operator new(0x20uLL);
  unk_25A60F8 = v279;
  strcpy((char *)qword_25A60F0, "Spoken_Ending_At_Parking");
  qword_25A6108 = (uint64_t)operator new(0x20uLL);
  v268[0] = xmmword_20B9800;
  xmmword_25A6110 = xmmword_20B9800;
  strcpy((char *)qword_25A6108, "Spoken_Pre_Arrival_Destination");
  strcpy((char *)&xmmword_25A6120, "Sign_Ending_At_Parking");
  HIBYTE(word_25A6136) = 22;
  byte_25A614F = 4;
  strcpy((char *)&dword_25A6138, "Home");
  byte_25A6167 = 4;
  strcpy((char *)&dword_25A6150, "Work");
  byte_25A617F = 8;
  strcpy((char *)&qword_25A6168, "Business");
  byte_25A6197 = 4;
  strcpy((char *)&dword_25A6180, "Name");
  byte_25A61AF = 13;
  strcpy((char *)&qword_25A6198, "Other_Contact");
  byte_25A61C7 = 11;
  strcpy((char *)&qword_25A61B0, "ContactHome");
  byte_25A61DF = 11;
  *(_DWORD *)((char *)&qword_25A61C8 + 7) = 1802661719;
  byte_25A61F7 = 7;
  *(int *)((char *)&dword_25A61E0 + 3) = 1936942450;
  dword_25A61E0 = 1919181889;
  strcpy((char *)&xmmword_25A61F8, "Discoverability_Prompt");
  HIBYTE(word_25A620E) = 22;
  byte_25A6227 = 6;
  dword_25A6210 = 1634878303;
  word_25A6214 = 26739;
  byte_25A623F = 8;
  qword_25A6228 = 0x697269535F6F4E5FLL;
  byte_25A6257 = 9;
  strcpy((char *)&qword_25A6240, "_CityName");
  byte_25A626F = 8;
  qword_25A6258 = 0x636972656E65475FLL;
  int v23 = byte_25A6017;
  if (byte_25A6017 >= 0) {
    size_t v24 = byte_25A6017;
  }
  else {
    size_t v24 = qword_25A6008;
  }
  LODWORD(v270) = byte_25A5357;
  if (byte_25A5357 >= 0) {
    size_t v25 = byte_25A5357;
  }
  else {
    size_t v25 = unk_25A5348;
  }
  qword_25A61C8 = *(void *)"ContactWork";
  byte_25A61D3 = 0;
  byte_25A61E7 = 0;
  byte_25A6216 = 0;
  byte_25A6230 = 0;
  byte_25A6260 = 0;
  unint64_t v26 = v25 + v24;
  if (v25 + v24 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  *(void *)v264 = *(void *)"ContactWork";
  *(void *)&v264[16] = *(void *)"ContactHome";
  *(void *)&v264[32] = *(void *)"_Contact";
  *(void *)&v264[48] = *(void *)"Other_Contact";
  if (v26 <= 0x16)
  {
    uint64_t v27 = &qword_25A6270;
    qword_25A6278 = 0;
    unk_25A6280 = 0;
    qword_25A6270 = 0;
    byte_25A6287 = v25 + v24;
    if (!v24) {
      goto LABEL_47;
    }
    goto LABEL_43;
  }
  uint64_t v90 = (v26 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v26 | 7) != 0x17) {
    uint64_t v90 = v26 | 7;
  }
  uint64_t v91 = v90 + 1;
  uint64_t v27 = (uint64_t *)operator new(v90 + 1);
  qword_25A6278 = v25 + v24;
  unk_25A6280 = v91 | 0x8000000000000000;
  qword_25A6270 = (uint64_t)v27;
  if (v24)
  {
LABEL_43:
    if (v23 >= 0) {
      __n128 v28 = &qword_25A6000;
    }
    else {
      __n128 v28 = (uint64_t *)qword_25A6000;
    }
    memmove(v27, v28, v24);
  }
LABEL_47:
  uint64_t v29 = (char *)v27 + v24;
  if (v25)
  {
    if ((int)v270 >= 0) {
      std::string::size_type v30 = &qword_25A5340;
    }
    else {
      std::string::size_type v30 = (uint64_t *)qword_25A5340;
    }
    memmove(v29, v30, v25);
  }
  v29[v25] = 0;
  int v31 = byte_25A60BF;
  if (byte_25A60BF >= 0) {
    size_t v32 = byte_25A60BF;
  }
  else {
    size_t v32 = qword_25A60B0;
  }
  unint64_t v33 = v32 + v24;
  if (v32 + v24 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v33 <= 0x16)
  {
    unint64_t v34 = &qword_25A6288;
    qword_25A6290 = 0;
    unk_25A6298 = 0;
    qword_25A6288 = 0;
    byte_25A629F = v32 + v24;
    if (!v24) {
      goto LABEL_62;
    }
    goto LABEL_58;
  }
  uint64_t v92 = (v33 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v33 | 7) != 0x17) {
    uint64_t v92 = v33 | 7;
  }
  uint64_t v93 = v92 + 1;
  unint64_t v34 = (uint64_t *)operator new(v92 + 1);
  qword_25A6290 = v32 + v24;
  unk_25A6298 = v93 | 0x8000000000000000;
  qword_25A6288 = (uint64_t)v34;
  if (v24)
  {
LABEL_58:
    if (v23 >= 0) {
      uint64_t v35 = &qword_25A6000;
    }
    else {
      uint64_t v35 = (uint64_t *)qword_25A6000;
    }
    memmove(v34, v35, v24);
  }
LABEL_62:
  uint64_t v36 = (char *)v34 + v24;
  if (v32)
  {
    if (v31 >= 0) {
      uint64_t v37 = &qword_25A60A8;
    }
    else {
      uint64_t v37 = (uint64_t *)qword_25A60A8;
    }
    memmove(v36, v37, v32);
  }
  v36[v32] = 0;
  qword_25A62A0 = (uint64_t)operator new(0x19uLL);
  unk_25A62A8 = v280;
  strcpy((char *)qword_25A62A0, "{ChargeStationCityName}");
  if (v33 < 0x17)
  {
    BOOL v38 = &qword_25A62B8;
    qword_25A62C0 = 0;
    unk_25A62C8 = 0;
    qword_25A62B8 = 0;
    byte_25A62CF = v32 + v24;
    if (!v24) {
      goto LABEL_73;
    }
    goto LABEL_69;
  }
  uint64_t v94 = (v33 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v33 | 7) != 0x17) {
    uint64_t v94 = v33 | 7;
  }
  uint64_t v95 = v94 + 1;
  BOOL v38 = (uint64_t *)operator new(v94 + 1);
  qword_25A62C0 = v32 + v24;
  unk_25A62C8 = v95 | 0x8000000000000000;
  qword_25A62B8 = (uint64_t)v38;
  if (v24)
  {
LABEL_69:
    if (v23 >= 0) {
      uint64_t v39 = &qword_25A6000;
    }
    else {
      uint64_t v39 = (uint64_t *)qword_25A6000;
    }
    memmove(v38, v39, v24);
  }
LABEL_73:
  int64_t v40 = (char *)v38 + v24;
  if (v32)
  {
    if (v31 >= 0) {
      char v41 = &qword_25A60A8;
    }
    else {
      char v41 = (uint64_t *)qword_25A60A8;
    }
    memmove(v40, v41, v32);
  }
  v40[v32] = 0;
  strcpy((char *)&xmmword_25A62D0, "{NewBatteryPercentage}");
  HIBYTE(word_25A62E6) = 22;
  qword_25A62E8 = (uint64_t)operator new(0x20uLL);
  xmmword_25A62F0 = v273;
  strcpy((char *)qword_25A62E8, "{OriginalBatteryPercentage}");
  byte_25A6317 = 19;
  strcpy((char *)&xmmword_25A6300, "_Arrival_Percentage");
  int v42 = byte_25A60A7;
  if (byte_25A60A7 >= 0) {
    size_t v43 = byte_25A60A7;
  }
  else {
    size_t v43 = qword_25A6098;
  }
  unint64_t v44 = v43 + v25;
  if (v43 + v25 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v44 <= 0x16)
  {
    memset(&__dst, 0, sizeof(__dst));
    p_dst = (char *)&__dst;
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v43 + v25;
    if (!v43) {
      goto LABEL_88;
    }
    goto LABEL_84;
  }
  uint64_t v96 = (v44 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v44 | 7) != 0x17) {
    uint64_t v96 = v44 | 7;
  }
  uint64_t v97 = v96 + 1;
  p_dst = (char *)operator new(v96 + 1);
  __dst.__r_.__value_.__l.__size_ = v43 + v25;
  __dst.__r_.__value_.__r.__words[2] = v97 | 0x8000000000000000;
  __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
  if (v43)
  {
LABEL_84:
    if (v42 >= 0) {
      uint64_t v46 = &qword_25A6090;
    }
    else {
      uint64_t v46 = (uint64_t *)qword_25A6090;
    }
    memmove(p_dst, v46, v43);
  }
LABEL_88:
  long long v47 = &p_dst[v43];
  if (v25)
  {
    if ((int)v270 >= 0) {
      uint64_t v48 = &qword_25A5340;
    }
    else {
      uint64_t v48 = (uint64_t *)qword_25A5340;
    }
    memmove(v47, v48, v25);
  }
  v47[v25] = 0;
  char v49 = std::string::append(&__dst, "_Percentage");
  long long v50 = *(_OWORD *)&v49->__r_.__value_.__l.__data_;
  qword_25A6328 = v49->__r_.__value_.__r.__words[2];
  xmmword_25A6318 = v50;
  v49->__r_.__value_.__l.__size_ = 0;
  v49->__r_.__value_.__r.__words[2] = 0;
  v49->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  int v51 = byte_25A60A7;
  if (byte_25A60A7 >= 0) {
    size_t v52 = byte_25A60A7;
  }
  else {
    size_t v52 = qword_25A6098;
  }
  int v53 = byte_25A5357;
  if (byte_25A5357 >= 0) {
    size_t v54 = byte_25A5357;
  }
  else {
    size_t v54 = unk_25A5348;
  }
  unint64_t v55 = v54 + v52;
  if (v54 + v52 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v55 <= 0x16)
  {
    memset(&v281, 0, sizeof(v281));
    uint64_t v56 = (char *)&v281;
    *((unsigned char *)&v281.__r_.__value_.__s + 23) = v54 + v52;
    if (!v52) {
      goto LABEL_108;
    }
    goto LABEL_104;
  }
  uint64_t v98 = (v55 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v55 | 7) != 0x17) {
    uint64_t v98 = v55 | 7;
  }
  uint64_t v99 = v98 + 1;
  uint64_t v56 = (char *)operator new(v98 + 1);
  v281.__r_.__value_.__l.__size_ = v54 + v52;
  v281.__r_.__value_.__r.__words[2] = v99 | 0x8000000000000000;
  v281.__r_.__value_.__r.__words[0] = (std::string::size_type)v56;
  if (v52)
  {
LABEL_104:
    if (v51 >= 0) {
      uint64_t v57 = &qword_25A6090;
    }
    else {
      uint64_t v57 = (uint64_t *)qword_25A6090;
    }
    memmove(v56, v57, v52);
  }
LABEL_108:
  uint64_t v58 = &v56[v52];
  if (v54)
  {
    if (v53 >= 0) {
      long long v59 = &qword_25A5340;
    }
    else {
      long long v59 = (uint64_t *)qword_25A5340;
    }
    memmove(v58, v59, v54);
  }
  v58[v54] = 0;
  if (byte_25A5387 >= 0) {
    long long v60 = (const std::string::value_type *)&qword_25A5370;
  }
  else {
    long long v60 = (const std::string::value_type *)qword_25A5370;
  }
  if (byte_25A5387 >= 0) {
    std::string::size_type v61 = byte_25A5387;
  }
  else {
    std::string::size_type v61 = *(void *)&byte_25A5378;
  }
  long long v62 = std::string::append(&v281, v60, v61);
  long long v63 = *(_OWORD *)&v62->__r_.__value_.__l.__data_;
  __dst.__r_.__value_.__r.__words[2] = v62->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v63;
  v62->__r_.__value_.__l.__size_ = 0;
  v62->__r_.__value_.__r.__words[2] = 0;
  v62->__r_.__value_.__r.__words[0] = 0;
  long long v64 = std::string::append(&__dst, "_Percentage");
  long long v65 = *(_OWORD *)&v64->__r_.__value_.__l.__data_;
  qword_25A6340 = v64->__r_.__value_.__r.__words[2];
  xmmword_25A6330 = v65;
  v64->__r_.__value_.__l.__size_ = 0;
  v64->__r_.__value_.__r.__words[2] = 0;
  v64->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__dst.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v281.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_121;
    }
  }
  else if ((SHIBYTE(v281.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_121;
  }
  operator delete(v281.__r_.__value_.__l.__data_);
LABEL_121:
  int v66 = byte_25A60A7;
  if (byte_25A60A7 >= 0) {
    size_t v67 = byte_25A60A7;
  }
  else {
    size_t v67 = qword_25A6098;
  }
  int v68 = byte_25A5357;
  if (byte_25A5357 >= 0) {
    size_t v69 = byte_25A5357;
  }
  else {
    size_t v69 = unk_25A5348;
  }
  unint64_t v70 = v69 + v67;
  if (v69 + v67 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v70 <= 0x16)
  {
    memset(&__dst, 0, sizeof(__dst));
    char v71 = (char *)&__dst;
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v69 + v67;
    if (!v67) {
      goto LABEL_134;
    }
    goto LABEL_130;
  }
  uint64_t v100 = (v70 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v70 | 7) != 0x17) {
    uint64_t v100 = v70 | 7;
  }
  uint64_t v101 = v100 + 1;
  char v71 = (char *)operator new(v100 + 1);
  __dst.__r_.__value_.__l.__size_ = v69 + v67;
  __dst.__r_.__value_.__r.__words[2] = v101 | 0x8000000000000000;
  __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v71;
  if (v67)
  {
LABEL_130:
    if (v66 >= 0) {
      uint64_t v72 = &qword_25A6090;
    }
    else {
      uint64_t v72 = (uint64_t *)qword_25A6090;
    }
    memmove(v71, v72, v67);
  }
LABEL_134:
  uint64_t v73 = &v71[v67];
  if (v69)
  {
    if (v68 >= 0) {
      int v74 = &qword_25A5340;
    }
    else {
      int v74 = (uint64_t *)qword_25A5340;
    }
    memmove(v73, v74, v69);
  }
  v73[v69] = 0;
  int64_t v75 = std::string::append(&__dst, "_Duration");
  long long v76 = *(_OWORD *)&v75->__r_.__value_.__l.__data_;
  qword_25A6358 = v75->__r_.__value_.__r.__words[2];
  xmmword_25A6348 = v76;
  v75->__r_.__value_.__l.__size_ = 0;
  v75->__r_.__value_.__r.__words[2] = 0;
  v75->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  int v77 = byte_25A60A7;
  if (byte_25A60A7 >= 0) {
    size_t v78 = byte_25A60A7;
  }
  else {
    size_t v78 = qword_25A6098;
  }
  int v79 = byte_25A5357;
  if (byte_25A5357 >= 0) {
    size_t v80 = byte_25A5357;
  }
  else {
    size_t v80 = unk_25A5348;
  }
  unint64_t v81 = v80 + v78;
  if (v80 + v78 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v81 <= 0x16)
  {
    qword_25A6368 = 0;
    unk_25A6370 = 0;
    qword_25A6360 = 0;
    unsigned int v82 = &qword_25A6360;
    byte_25A6377 = v80 + v78;
    if (!v78) {
      goto LABEL_154;
    }
    goto LABEL_150;
  }
  uint64_t v102 = (v81 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v81 | 7) != 0x17) {
    uint64_t v102 = v81 | 7;
  }
  uint64_t v103 = v102 + 1;
  unsigned int v82 = (uint64_t *)operator new(v102 + 1);
  qword_25A6368 = v80 + v78;
  unk_25A6370 = v103 | 0x8000000000000000;
  qword_25A6360 = (uint64_t)v82;
  if (v78)
  {
LABEL_150:
    if (v77 >= 0) {
      int v83 = &qword_25A6090;
    }
    else {
      int v83 = (uint64_t *)qword_25A6090;
    }
    memmove(v82, v83, v78);
  }
LABEL_154:
  unsigned int v84 = (char *)v82 + v78;
  if (v80)
  {
    if (v79 >= 0) {
      unint64_t v85 = &qword_25A5340;
    }
    else {
      unint64_t v85 = (uint64_t *)qword_25A5340;
    }
    memmove(v84, v85, v80);
  }
  v84[v80] = 0;
  int v86 = byte_25A6377;
  if (byte_25A6377 >= 0) {
    size_t v87 = byte_25A6377;
  }
  else {
    size_t v87 = qword_25A6368;
  }
  unint64_t v88 = v87 + 5;
  if (v87 + 5 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v88 >= 0x17)
  {
    uint64_t v104 = (v88 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v88 | 7) != 0x17) {
      uint64_t v104 = v88 | 7;
    }
    uint64_t v105 = v104 + 1;
    double v89 = (uint64_t *)operator new(v104 + 1);
    qword_25A6380 = v87 + 5;
    unk_25A6388 = v105 | 0x8000000000000000;
    qword_25A6378 = (uint64_t)v89;
  }
  else
  {
    double v89 = &qword_25A6378;
    qword_25A6380 = 0;
    unk_25A6388 = 0;
    qword_25A6378 = 0;
    byte_25A638F = v87 + 5;
    if (!v87) {
      goto LABEL_201;
    }
  }
  if (v86 >= 0) {
    uint64_t v106 = &qword_25A6360;
  }
  else {
    uint64_t v106 = (uint64_t *)qword_25A6360;
  }
  memmove(v89, v106, v87);
LABEL_201:
  strcpy((char *)v89 + v87, "_Name");
  int v107 = byte_25A60A7;
  if (byte_25A60A7 >= 0) {
    size_t v108 = byte_25A60A7;
  }
  else {
    size_t v108 = qword_25A6098;
  }
  int v109 = byte_25A5357;
  if (byte_25A5357 >= 0) {
    size_t v110 = byte_25A5357;
  }
  else {
    size_t v110 = unk_25A5348;
  }
  unint64_t v111 = v110 + v108;
  if (v110 + v108 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v111 <= 0x16)
  {
    memset(&__dst, 0, sizeof(__dst));
    uint64_t v112 = (char *)&__dst;
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v110 + v108;
    if (!v108) {
      goto LABEL_214;
    }
    goto LABEL_210;
  }
  uint64_t v122 = (v111 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v111 | 7) != 0x17) {
    uint64_t v122 = v111 | 7;
  }
  uint64_t v123 = v122 + 1;
  uint64_t v112 = (char *)operator new(v122 + 1);
  __dst.__r_.__value_.__l.__size_ = v110 + v108;
  __dst.__r_.__value_.__r.__words[2] = v123 | 0x8000000000000000;
  __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v112;
  if (v108)
  {
LABEL_210:
    if (v107 >= 0) {
      int v113 = &qword_25A6090;
    }
    else {
      int v113 = (uint64_t *)qword_25A6090;
    }
    memmove(v112, v113, v108);
  }
LABEL_214:
  uint64_t v114 = &v112[v108];
  if (v110)
  {
    if (v109 >= 0) {
      double v115 = &qword_25A5340;
    }
    else {
      double v115 = (uint64_t *)qword_25A5340;
    }
    memmove(v114, v115, v110);
  }
  v114[v110] = 0;
  uint64_t v116 = std::string::append(&__dst, "_Connector_Type");
  long long v117 = *(_OWORD *)&v116->__r_.__value_.__l.__data_;
  qword_25A63A0 = v116->__r_.__value_.__r.__words[2];
  xmmword_25A6390 = v117;
  v116->__r_.__value_.__l.__size_ = 0;
  v116->__r_.__value_.__r.__words[2] = 0;
  v116->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  int v118 = SHIBYTE(qword_25A63A0);
  if (qword_25A63A0 >= 0) {
    size_t v119 = HIBYTE(qword_25A63A0);
  }
  else {
    size_t v119 = *((void *)&xmmword_25A6390 + 1);
  }
  unint64_t v120 = v119 + 6;
  if (v119 + 6 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v120 >= 0x17)
  {
    uint64_t v124 = (v120 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v120 | 7) != 0x17) {
      uint64_t v124 = v120 | 7;
    }
    uint64_t v125 = v124 + 1;
    int v121 = (uint64_t *)operator new(v124 + 1);
    qword_25A63B0 = v119 + 6;
    unk_25A63B8 = v125 | 0x8000000000000000;
    qword_25A63A8 = (uint64_t)v121;
  }
  else
  {
    int v121 = &qword_25A63A8;
    qword_25A63B0 = 0;
    unk_25A63B8 = 0;
    qword_25A63A8 = 0;
    byte_25A63BF = v119 + 6;
    if (!v119) {
      goto LABEL_239;
    }
  }
  if (v118 >= 0) {
    double v126 = &xmmword_25A6390;
  }
  else {
    double v126 = (long long *)xmmword_25A6390;
  }
  memmove(v121, v126, v119);
LABEL_239:
  strcpy((char *)v121 + v119, "_Power");
  int v127 = byte_25A60A7;
  if (byte_25A60A7 >= 0) {
    size_t v128 = byte_25A60A7;
  }
  else {
    size_t v128 = qword_25A6098;
  }
  int v129 = byte_25A5357;
  if (byte_25A5357 >= 0) {
    size_t v130 = byte_25A5357;
  }
  else {
    size_t v130 = unk_25A5348;
  }
  unint64_t v131 = v130 + v128;
  if (v130 + v128 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v131 <= 0x16)
  {
    memset(&__dst, 0, sizeof(__dst));
    unsigned int v132 = (char *)&__dst;
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v130 + v128;
    if (!v128) {
      goto LABEL_252;
    }
    goto LABEL_248;
  }
  uint64_t v161 = (v131 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v131 | 7) != 0x17) {
    uint64_t v161 = v131 | 7;
  }
  uint64_t v162 = v161 + 1;
  unsigned int v132 = (char *)operator new(v161 + 1);
  __dst.__r_.__value_.__l.__size_ = v130 + v128;
  __dst.__r_.__value_.__r.__words[2] = v162 | 0x8000000000000000;
  __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v132;
  if (v128)
  {
LABEL_248:
    if (v127 >= 0) {
      uint64_t v133 = &qword_25A6090;
    }
    else {
      uint64_t v133 = (uint64_t *)qword_25A6090;
    }
    memmove(v132, v133, v128);
  }
LABEL_252:
  uint64_t v134 = &v132[v128];
  if (v130)
  {
    if (v129 >= 0) {
      uint64_t v135 = &qword_25A5340;
    }
    else {
      uint64_t v135 = (uint64_t *)qword_25A5340;
    }
    memmove(v134, v135, v130);
  }
  v134[v130] = 0;
  if (byte_25A5B1F >= 0) {
    int v136 = (const std::string::value_type *)&qword_25A5B08;
  }
  else {
    int v136 = (const std::string::value_type *)qword_25A5B08;
  }
  if (byte_25A5B1F >= 0) {
    std::string::size_type v137 = byte_25A5B1F;
  }
  else {
    std::string::size_type v137 = unk_25A5B10;
  }
  int v138 = std::string::append(&__dst, v136, v137);
  long long v139 = *(_OWORD *)&v138->__r_.__value_.__l.__data_;
  qword_25A63D0 = v138->__r_.__value_.__r.__words[2];
  xmmword_25A63C0 = v139;
  v138->__r_.__value_.__l.__size_ = 0;
  v138->__r_.__value_.__r.__words[2] = 0;
  v138->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  int v140 = byte_25A60A7;
  if (byte_25A60A7 >= 0) {
    size_t v141 = byte_25A60A7;
  }
  else {
    size_t v141 = qword_25A6098;
  }
  int v142 = byte_25A5357;
  if (byte_25A5357 >= 0) {
    size_t v143 = byte_25A5357;
  }
  else {
    size_t v143 = unk_25A5348;
  }
  unint64_t v144 = v143 + v141;
  if (v143 + v141 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v144 <= 0x16)
  {
    memset(&v281, 0, sizeof(v281));
    double v145 = (char *)&v281;
    *((unsigned char *)&v281.__r_.__value_.__s + 23) = v143 + v141;
    if (!v141) {
      goto LABEL_278;
    }
    goto LABEL_274;
  }
  uint64_t v163 = (v144 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v144 | 7) != 0x17) {
    uint64_t v163 = v144 | 7;
  }
  uint64_t v164 = v163 + 1;
  double v145 = (char *)operator new(v163 + 1);
  v281.__r_.__value_.__l.__size_ = v143 + v141;
  v281.__r_.__value_.__r.__words[2] = v164 | 0x8000000000000000;
  v281.__r_.__value_.__r.__words[0] = (std::string::size_type)v145;
  if (v141)
  {
LABEL_274:
    if (v140 >= 0) {
      double v146 = &qword_25A6090;
    }
    else {
      double v146 = (uint64_t *)qword_25A6090;
    }
    memmove(v145, v146, v141);
  }
LABEL_278:
  uint64_t v147 = &v145[v141];
  if (v143)
  {
    if (v142 >= 0) {
      uint64_t v148 = &qword_25A5340;
    }
    else {
      uint64_t v148 = (uint64_t *)qword_25A5340;
    }
    memmove(v147, v148, v143);
  }
  v147[v143] = 0;
  if (byte_25A5387 >= 0) {
    double v149 = (const std::string::value_type *)&qword_25A5370;
  }
  else {
    double v149 = (const std::string::value_type *)qword_25A5370;
  }
  if (byte_25A5387 >= 0) {
    std::string::size_type v150 = byte_25A5387;
  }
  else {
    std::string::size_type v150 = *(void *)&byte_25A5378;
  }
  uint64_t v151 = std::string::append(&v281, v149, v150);
  long long v152 = *(_OWORD *)&v151->__r_.__value_.__l.__data_;
  __dst.__r_.__value_.__r.__words[2] = v151->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v152;
  v151->__r_.__value_.__l.__size_ = 0;
  v151->__r_.__value_.__r.__words[2] = 0;
  v151->__r_.__value_.__r.__words[0] = 0;
  if (byte_25A5B1F >= 0) {
    double v153 = (const std::string::value_type *)&qword_25A5B08;
  }
  else {
    double v153 = (const std::string::value_type *)qword_25A5B08;
  }
  if (byte_25A5B1F >= 0) {
    std::string::size_type v154 = byte_25A5B1F;
  }
  else {
    std::string::size_type v154 = unk_25A5B10;
  }
  uint64_t v155 = std::string::append(&__dst, v153, v154);
  long long v156 = *(_OWORD *)&v155->__r_.__value_.__l.__data_;
  qword_25A63E8 = v155->__r_.__value_.__r.__words[2];
  xmmword_25A63D8 = v156;
  v155->__r_.__value_.__l.__size_ = 0;
  v155->__r_.__value_.__r.__words[2] = 0;
  v155->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__dst.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v281.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_297;
    }
  }
  else if ((SHIBYTE(v281.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_297;
  }
  operator delete(v281.__r_.__value_.__l.__data_);
LABEL_297:
  byte_25A6407 = 16;
  strcpy((char *)&xmmword_25A63F0, "Use_NACS_Adapter");
  byte_25A641F = 16;
  strcpy(byte_25A6408, "Start_Route_Sign");
  qword_25A6420 = (uint64_t)operator new(0x20uLL);
  unk_25A6428 = v276;
  strcpy((char *)qword_25A6420, "Start_Route_Spoken_Primary");
  int v157 = byte_25A4AB7;
  if (byte_25A4AB7 >= 0) {
    size_t v158 = byte_25A4AB7;
  }
  else {
    size_t v158 = qword_25A4AA8;
  }
  unint64_t v159 = v158 + 27;
  if (v158 + 27 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v159 <= 0x16)
  {
    uint64_t v160 = &qword_25A6438;
    qword_25A6440 = 0;
    unk_25A6448 = 0;
    qword_25A6438 = 0;
    byte_25A644F = v158 + 27;
LABEL_314:
    if (v157 >= 0) {
      int v167 = &qword_25A4AA0;
    }
    else {
      int v167 = (uint64_t *)qword_25A4AA0;
    }
    memmove(v160, v167, v158);
    goto LABEL_318;
  }
  uint64_t v165 = (v159 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v159 | 7) != 0x17) {
    uint64_t v165 = v159 | 7;
  }
  uint64_t v166 = v165 + 1;
  uint64_t v160 = (uint64_t *)operator new(v165 + 1);
  qword_25A6440 = v158 + 27;
  unk_25A6448 = v166 | 0x8000000000000000;
  qword_25A6438 = (uint64_t)v160;
  if (v158) {
    goto LABEL_314;
  }
LABEL_318:
  strcpy((char *)v160 + v158, "Turn_Around_To_Route_Spoken");
  strcpy(&byte_25A6467, "\t_Two_Lanes");
  strcpy((char *)&qword_25A6450, "_One_Lane");
  strcpy(&byte_25A647F, "\n_Three_Lanes");
  byte_25A6497 = 12;
  byte_25A64AF = 11;
  strcpy((char *)&qword_25A6498, "_Four_Lanes");
  byte_25A64C7 = 11;
  strcpy((char *)&qword_25A64B0, "_Five_Lanes");
  strcpy(&byte_25A64DF, "\n_Seven_Lanes");
  strcpy((char *)&qword_25A64C8, "_Six_Lanes");
  byte_25A64F7 = 12;
  byte_25A650F = 12;
  strcpy((char *)&qword_25A64F8, "_Eight_Lanes");
  byte_25A6527 = 12;
  strcpy((char *)&qword_25A6510, "_Second_Lane");
  byte_25A653F = 11;
  strcpy((char *)&qword_25A6528, "_Third_Lane");
  byte_25A6557 = 19;
  long long v270 = *(_OWORD *)"_Second_Third_Lanes";
  strcpy((char *)&xmmword_25A6540, "_Second_Third_Lanes");
  byte_25A656F = 4;
  strcpy((char *)&dword_25A6558, "Left");
  byte_25A6587 = 5;
  byte_25A6574 = 116;
  dword_25A6570 = 1751607634;
  byte_25A6575 = 0;
  byte_25A659F = 6;
  strcpy((char *)&dword_25A6588, "Middle");
  BYTE1(qword_25A65B0) = 0;
  WORD1(qword_25A65B0) = 0;
  HIDWORD(qword_25A65B0) = 0x10000000;
  strcpy((char *)dword_25A65A0, "Left_Second_Lane");
  BYTE1(qword_25A65C8) = 0;
  WORD1(qword_25A65C8) = 0;
  HIDWORD(qword_25A65C8) = 285212672;
  strcpy((char *)&dword_25A65B8, "Right_Second_Lan");
  qword_25A65E0 = 0xF00000000000000;
  strcpy((char *)&dword_25A65D0, "Left_Third_Lane");
  qword_25A65F8 = 0x1000000000000000;
  byte_25A65EC = 116;
  dword_25A65E8 = 1751607634;
  dword_25A65F4 = 1701732684;
  unk_25A65ED = *(void *)"_Third_Lane";
  v168 = (char *)operator new(0x19uLL);
  qword_25A6600 = (uint64_t)v168;
  unk_25A6608 = v280;
  *(_DWORD *)v168 = 1952867660;
  strcpy(v168 + 19, "anes");
  *(_OWORD *)(v168 + 4) = v270;
  v169 = (char *)operator new(0x20uLL);
  qword_25A6618 = (uint64_t)v169;
  xmmword_25A6620 = v279;
  *(_DWORD *)v169 = 1751607634;
  v169[4] = 116;
  strcpy(v169 + 20, "anes");
  *(_OWORD *)(v169 + 5) = v270;
  byte_25A6647 = 5;
  strcpy((char *)&dword_25A6630, "_Stay");
  byte_25A665F = 13;
  strcpy((char *)&qword_25A6648, "Continue_Sign");
  byte_25A6677 = 8;
  strcpy((char *)&qword_25A6660, "Continue");
  int v170 = byte_25A5B37;
  if (byte_25A5B37 >= 0) {
    size_t v171 = byte_25A5B37;
  }
  else {
    size_t v171 = qword_25A5B28;
  }
  unint64_t v172 = v171 + 8;
  if (v171 + 8 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v172 >= 0x17)
  {
    uint64_t v174 = (v172 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v172 | 7) != 0x17) {
      uint64_t v174 = v172 | 7;
    }
    uint64_t v175 = v174 + 1;
    int v176 = operator new(v174 + 1);
    qword_25A6680 = v171 + 8;
    qword_25A6688 = v175 | 0x8000000000000000;
    qword_25A6678 = (uint64_t)v176;
    *int v176 = 0x65756E69746E6F43;
    uint64_t v173 = v176 + 1;
  }
  else
  {
    qword_25A6688 = 0;
    HIBYTE(qword_25A6688) = v171 + 8;
    qword_25A6678 = 0x65756E69746E6F43;
    qword_25A6680 = 0;
    uint64_t v173 = &qword_25A6680;
    if (!v171) {
      goto LABEL_332;
    }
  }
  if (v170 >= 0) {
    v177 = &qword_25A5B20;
  }
  else {
    v177 = (uint64_t *)qword_25A5B20;
  }
  memmove(v173, v177, v171);
LABEL_332:
  *((unsigned char *)v173 + v171) = 0;
  int v178 = SHIBYTE(qword_25A5B90);
  if (qword_25A5B90 >= 0) {
    size_t v179 = HIBYTE(qword_25A5B90);
  }
  else {
    size_t v179 = unk_25A5B88;
  }
  unint64_t v180 = v179 + 8;
  if (v179 + 8 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v180 >= 0x17)
  {
    uint64_t v182 = (v180 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v180 | 7) != 0x17) {
      uint64_t v182 = v180 | 7;
    }
    uint64_t v183 = v182 + 1;
    unsigned int v184 = operator new(v182 + 1);
    qword_25A6698 = v179 + 8;
    qword_25A66A0 = v183 | 0x8000000000000000;
    qword_25A6690 = (uint64_t)v184;
    *unsigned int v184 = qword_25A6660;
    __int16 v181 = v184 + 1;
  }
  else
  {
    qword_25A66A0 = 0;
    HIBYTE(qword_25A66A0) = v179 + 8;
    qword_25A6690 = qword_25A6660;
    qword_25A6698 = 0;
    __int16 v181 = &qword_25A6698;
    if (!v179) {
      goto LABEL_346;
    }
  }
  if (v178 >= 0) {
    unsigned int v185 = &qword_25A5B80;
  }
  else {
    unsigned int v185 = (uint64_t *)qword_25A5B80;
  }
  memmove(v181, v185, v179);
LABEL_346:
  *((unsigned char *)v181 + v179) = 0;
  *((unsigned char *)&__dst.__r_.__value_.__s + 23) = 1;
  LOWORD(__dst.__r_.__value_.__l.__data_) = 83;
  HIBYTE(v284) = 2;
  strcpy((char *)&v283, "SW");
  HIBYTE(v286) = 1;
  LOWORD(v285[0]) = 87;
  HIBYTE(v288) = 2;
  strcpy((char *)&v287, "NW");
  HIBYTE(v290) = 1;
  LOWORD(v289[0]) = 78;
  HIBYTE(v292) = 2;
  strcpy((char *)&v291, "NE");
  HIBYTE(v294) = 1;
  LOWORD(v293) = 69;
  HIBYTE(v296) = 2;
  strcpy((char *)&__p, "SE");
  sub_4BDC0C(qword_25A66A8, (uint64_t)&__dst, 8uLL);
  if (SHIBYTE(v296) < 0)
  {
    operator delete((void *)__p);
    if ((SHIBYTE(v294) & 0x80000000) == 0)
    {
LABEL_348:
      if ((SHIBYTE(v292) & 0x80000000) == 0) {
        goto LABEL_349;
      }
      goto LABEL_383;
    }
  }
  else if ((SHIBYTE(v294) & 0x80000000) == 0)
  {
    goto LABEL_348;
  }
  operator delete((void *)v293);
  if ((SHIBYTE(v292) & 0x80000000) == 0)
  {
LABEL_349:
    if ((SHIBYTE(v290) & 0x80000000) == 0) {
      goto LABEL_350;
    }
    goto LABEL_384;
  }
LABEL_383:
  operator delete((void *)v291);
  if ((SHIBYTE(v290) & 0x80000000) == 0)
  {
LABEL_350:
    if ((SHIBYTE(v288) & 0x80000000) == 0) {
      goto LABEL_351;
    }
    goto LABEL_385;
  }
LABEL_384:
  operator delete(v289[0]);
  if ((SHIBYTE(v288) & 0x80000000) == 0)
  {
LABEL_351:
    if ((SHIBYTE(v286) & 0x80000000) == 0) {
      goto LABEL_352;
    }
    goto LABEL_386;
  }
LABEL_385:
  operator delete((void *)v287);
  if ((SHIBYTE(v286) & 0x80000000) == 0)
  {
LABEL_352:
    if ((SHIBYTE(v284) & 0x80000000) == 0) {
      goto LABEL_353;
    }
LABEL_387:
    operator delete((void *)v283);
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_354;
    }
    goto LABEL_388;
  }
LABEL_386:
  operator delete(v285[0]);
  if (SHIBYTE(v284) < 0) {
    goto LABEL_387;
  }
LABEL_353:
  if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    goto LABEL_354;
  }
LABEL_388:
  operator delete(__dst.__r_.__value_.__l.__data_);
LABEL_354:
  byte_25A66D7 = 13;
  strcpy((char *)&qword_25A66C0, "{instruction}");
  byte_25A66EF = 20;
  strcpy(byte_25A66D8, "{primaryInstruction}");
  strcpy((char *)&xmmword_25A66F0, "{secondaryInstruction}");
  HIBYTE(word_25A6706) = 22;
  qword_25A6708 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_25A6710 = v278;
  strcpy((char *)qword_25A6708, "{andSecondaryInstruction}");
  qword_25A6720 = (uint64_t)operator new(0x20uLL);
  unk_25A6728 = v279;
  strcpy((char *)qword_25A6720, "{toSecondaryInstruction}");
  byte_25A674F = 21;
  strcpy(byte_25A6738, "{continueInstruction}");
  qword_25A6750 = (uint64_t)operator new(0x20uLL);
  unk_25A6758 = v276;
  strcpy((char *)qword_25A6750, "{thenSecondaryInstruction}");
  byte_25A677F = 14;
  strcpy((char *)&qword_25A6768, "{instruction1}");
  byte_25A6797 = 14;
  strcpy((char *)&qword_25A6780, "{instruction2}");
  strcpy(&byte_25A67AF, "\n{nextDistance}");
  strcpy((char *)&qword_25A6798, "{distance}");
  byte_25A67C7 = 14;
  byte_25A67DF = 16;
  strcpy(byte_25A67C8, "{valid_distance}");
  strcpy(&byte_25A67F7, "\n{valid_distance}");
  strcpy((char *)&qword_25A67E0, "{distance}");
  byte_25A680F = 16;
  byte_25A6827 = 15;
  strcpy((char *)&qword_25A6810, "{ClimbDistance}");
  byte_25A683F = 17;
  strcpy(byte_25A6828, "{DescentDistance}");
  byte_25A6857 = 13;
  strcpy((char *)&qword_25A6840, "{nonBrkSpace}");
  byte_25A686F = 9;
  strcpy((char *)&qword_25A6858, "{newLine}");
  byte_25A6887 = 6;
  word_25A6874 = -24382;
  dword_25A6870 = -1211981630;
  byte_25A6876 = 0;
  byte_25A689F = 2;
  word_25A6888 = -24382;
  byte_25A688A = 0;
  byte_25A68B7 = 1;
  word_25A68A0 = 10;
  byte_25A68CF = 1;
  word_25A68B8 = 32;
  byte_25A68E7 = 2;
  strcpy((char *)&word_25A68D0, "\n\n");
  strcpy(&byte_25A68FF, "\t{TowardShield1}");
  strcpy((char *)&qword_25A68E8, "{Shield1}");
  byte_25A6917 = 15;
  strcpy(&byte_25A692F, "\t{TowardShield2}");
  strcpy((char *)&qword_25A6918, "{Shield2}");
  byte_25A6947 = 15;
  byte_25A695F = 12;
  strcpy((char *)&qword_25A6948, "{Direction1}");
  byte_25A6977 = 12;
  strcpy((char *)&qword_25A6960, "{Direction2}");
  byte_25A698F = 18;
  strcpy((char *)&xmmword_25A6978, "{TowardDirection1}");
  byte_25A69A7 = 18;
  strcpy((char *)&xmmword_25A6990, "{TowardDirection2}");
  byte_25A69BF = 7;
  strcpy((char *)&dword_25A69A8, "{Icon1}");
  byte_25A69D7 = 7;
  strcpy((char *)&dword_25A69C0, "{Icon2}");
  byte_25A69D8[23] = 14;
  strcpy(byte_25A69D8, "{Intersection}");
  byte_25A6A07 = 6;
  strcpy((char *)&xmmword_25A69F0, "{Road}");
  byte_25A6A1F = 7;
  strcpy((char *)&dword_25A6A08, "{Road1}");
  byte_25A6A37 = 7;
  strcpy((char *)&xmmword_25A6A20, "{Road2}");
  strcpy(&byte_25A6A4F, "\n{Freeway}");
  strcpy((char *)&qword_25A6A38, "{Elevator}");
  strcpy(&byte_25A6A67, "\t{Ferry}");
  byte_25A6A7F = 7;
  byte_25A6A97 = 13;
  strcpy((char *)&xmmword_25A6A80, "{ShuttleName}");
  byte_25A6AAF = 11;
  strcpy((char *)&qword_25A6A98, "{Signpost1}");
  byte_25A6AC7 = 11;
  strcpy((char *)&xmmword_25A6AB0, "{Signpost2}");
  byte_25A6ADF = 12;
  strcpy((char *)&xmmword_25A6AC8, "{ExitNumber}");
  strcpy(&byte_25A6AF7, "\t{Name}");
  strcpy((char *)&xmmword_25A6AE0, "{Address}");
  byte_25A6B0F = 6;
  byte_25A6B27 = 11;
  strcpy((char *)&xmmword_25A6B10, "{PlaceName}");
  byte_25A6B3F = 14;
  strcpy((char *)&xmmword_25A6B28, "{ElevatorName}");
  byte_25A6B57 = 15;
  strcpy((char *)&xmmword_25A6B40, "{EscalatorName}");
  byte_25A6B6F = 12;
  strcpy((char *)&xmmword_25A6B58, "{StairsName}");
  strcpy(&byte_25A6B87, "\n{BridgeName}");
  strcpy((char *)&xmmword_25A6B70, "{RampName}");
  byte_25A6B9F = 12;
  byte_25A6BB7 = 12;
  strcpy((char *)&xmmword_25A6BA0, "{TunnelName}");
  byte_25A6BCF = 13;
  strcpy((char *)&xmmword_25A6BB8, "{CustomLabel}");
  std::string __dst = *(std::string *)byte_25A69D8;
  long long v283 = xmmword_25A69F0;
  uint64_t v284 = unk_25A6A00;
  *(_OWORD *)v285 = *(_OWORD *)&dword_25A6A08;
  uint64_t v286 = unk_25A6A18;
  long long v287 = xmmword_25A6A20;
  uint64_t v288 = unk_25A6A30;
  *(_OWORD *)v289 = *(_OWORD *)&qword_25A6A38;
  uint64_t v290 = unk_25A6A48;
  uint64_t v292 = unk_25A6A60;
  long long v291 = xmmword_25A6A50;
  long long v293 = *(_OWORD *)&dword_25A6A68;
  uint64_t v294 = unk_25A6A78;
  uint64_t v296 = unk_25A6A90;
  long long __p = xmmword_25A6A80;
  long long v297 = *(_OWORD *)&qword_25A6A98;
  uint64_t v298 = unk_25A6AA8;
  uint64_t v300 = unk_25A6AC0;
  long long v299 = xmmword_25A6AB0;
  long long v301 = xmmword_25A6AC8;
  long long v303 = xmmword_25A6AE0;
  uint64_t v302 = unk_25A6AD8;
  uint64_t v304 = unk_25A6AF0;
  long long v305 = xmmword_25A6AF8;
  long long v307 = xmmword_25A6B10;
  uint64_t v306 = unk_25A6B08;
  uint64_t v308 = unk_25A6B20;
  long long v309 = xmmword_25A6B28;
  long long v311 = xmmword_25A6B40;
  uint64_t v310 = unk_25A6B38;
  uint64_t v312 = unk_25A6B50;
  long long v313 = xmmword_25A6B58;
  long long v315 = xmmword_25A6B70;
  uint64_t v314 = unk_25A6B68;
  uint64_t v316 = unk_25A6B80;
  long long v317 = xmmword_25A6B88;
  long long v319 = xmmword_25A6BA0;
  uint64_t v318 = unk_25A6B98;
  uint64_t v320 = unk_25A6BB0;
  uint64_t v322 = unk_25A6BC8;
  long long v321 = xmmword_25A6BB8;
  sub_4BDC0C(qword_25A6BD0, (uint64_t)&__dst, 0x15uLL);
  if (SHIBYTE(v322) < 0)
  {
    operator delete((void *)v321);
    if ((SHIBYTE(v320) & 0x80000000) == 0)
    {
LABEL_356:
      if ((SHIBYTE(v318) & 0x80000000) == 0) {
        goto LABEL_357;
      }
      goto LABEL_391;
    }
  }
  else if ((SHIBYTE(v320) & 0x80000000) == 0)
  {
    goto LABEL_356;
  }
  operator delete((void *)v319);
  if ((SHIBYTE(v318) & 0x80000000) == 0)
  {
LABEL_357:
    if ((SHIBYTE(v316) & 0x80000000) == 0) {
      goto LABEL_358;
    }
    goto LABEL_392;
  }
LABEL_391:
  operator delete((void *)v317);
  if ((SHIBYTE(v316) & 0x80000000) == 0)
  {
LABEL_358:
    if ((SHIBYTE(v314) & 0x80000000) == 0) {
      goto LABEL_359;
    }
    goto LABEL_393;
  }
LABEL_392:
  operator delete((void *)v315);
  if ((SHIBYTE(v314) & 0x80000000) == 0)
  {
LABEL_359:
    if ((SHIBYTE(v312) & 0x80000000) == 0) {
      goto LABEL_360;
    }
    goto LABEL_394;
  }
LABEL_393:
  operator delete((void *)v313);
  if ((SHIBYTE(v312) & 0x80000000) == 0)
  {
LABEL_360:
    if ((SHIBYTE(v310) & 0x80000000) == 0) {
      goto LABEL_361;
    }
    goto LABEL_395;
  }
LABEL_394:
  operator delete((void *)v311);
  if ((SHIBYTE(v310) & 0x80000000) == 0)
  {
LABEL_361:
    if ((SHIBYTE(v308) & 0x80000000) == 0) {
      goto LABEL_362;
    }
    goto LABEL_396;
  }
LABEL_395:
  operator delete((void *)v309);
  if ((SHIBYTE(v308) & 0x80000000) == 0)
  {
LABEL_362:
    if ((SHIBYTE(v306) & 0x80000000) == 0) {
      goto LABEL_363;
    }
    goto LABEL_397;
  }
LABEL_396:
  operator delete((void *)v307);
  if ((SHIBYTE(v306) & 0x80000000) == 0)
  {
LABEL_363:
    if ((SHIBYTE(v304) & 0x80000000) == 0) {
      goto LABEL_364;
    }
    goto LABEL_398;
  }
LABEL_397:
  operator delete((void *)v305);
  if ((SHIBYTE(v304) & 0x80000000) == 0)
  {
LABEL_364:
    if ((SHIBYTE(v302) & 0x80000000) == 0) {
      goto LABEL_365;
    }
    goto LABEL_399;
  }
LABEL_398:
  operator delete((void *)v303);
  if ((SHIBYTE(v302) & 0x80000000) == 0)
  {
LABEL_365:
    if ((SHIBYTE(v300) & 0x80000000) == 0) {
      goto LABEL_366;
    }
    goto LABEL_400;
  }
LABEL_399:
  operator delete((void *)v301);
  if ((SHIBYTE(v300) & 0x80000000) == 0)
  {
LABEL_366:
    if ((SHIBYTE(v298) & 0x80000000) == 0) {
      goto LABEL_367;
    }
    goto LABEL_401;
  }
LABEL_400:
  operator delete((void *)v299);
  if ((SHIBYTE(v298) & 0x80000000) == 0)
  {
LABEL_367:
    if ((SHIBYTE(v296) & 0x80000000) == 0) {
      goto LABEL_368;
    }
    goto LABEL_402;
  }
LABEL_401:
  operator delete((void *)v297);
  if ((SHIBYTE(v296) & 0x80000000) == 0)
  {
LABEL_368:
    if ((SHIBYTE(v294) & 0x80000000) == 0) {
      goto LABEL_369;
    }
    goto LABEL_403;
  }
LABEL_402:
  operator delete((void *)__p);
  if ((SHIBYTE(v294) & 0x80000000) == 0)
  {
LABEL_369:
    if ((SHIBYTE(v292) & 0x80000000) == 0) {
      goto LABEL_370;
    }
    goto LABEL_404;
  }
LABEL_403:
  operator delete((void *)v293);
  if ((SHIBYTE(v292) & 0x80000000) == 0)
  {
LABEL_370:
    if ((SHIBYTE(v290) & 0x80000000) == 0) {
      goto LABEL_371;
    }
    goto LABEL_405;
  }
LABEL_404:
  operator delete((void *)v291);
  if ((SHIBYTE(v290) & 0x80000000) == 0)
  {
LABEL_371:
    if ((SHIBYTE(v288) & 0x80000000) == 0) {
      goto LABEL_372;
    }
    goto LABEL_406;
  }
LABEL_405:
  operator delete(v289[0]);
  if ((SHIBYTE(v288) & 0x80000000) == 0)
  {
LABEL_372:
    if ((SHIBYTE(v286) & 0x80000000) == 0) {
      goto LABEL_373;
    }
    goto LABEL_407;
  }
LABEL_406:
  operator delete((void *)v287);
  if ((SHIBYTE(v286) & 0x80000000) == 0)
  {
LABEL_373:
    if ((SHIBYTE(v284) & 0x80000000) == 0) {
      goto LABEL_374;
    }
LABEL_408:
    operator delete((void *)v283);
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_375;
    }
    goto LABEL_409;
  }
LABEL_407:
  operator delete(v285[0]);
  if (SHIBYTE(v284) < 0) {
    goto LABEL_408;
  }
LABEL_374:
  if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    goto LABEL_375;
  }
LABEL_409:
  operator delete(__dst.__r_.__value_.__l.__data_);
LABEL_375:
  qword_25A6BE8 = (uint64_t)operator new(0x19uLL);
  unk_25A6BF0 = v280;
  strcpy((char *)qword_25A6BE8, "From_User_Location_List");
  byte_25A6C17 = 20;
  strcpy(byte_25A6C00, "Origin_Waypoint_List");
  qword_25A6C18 = (uint64_t)operator new(0x20uLL);
  unk_25A6C20 = v276;
  strcpy((char *)qword_25A6C18, "Intermediate_Waypoint_List");
  unk_25A6C30 = operator new(0x20uLL);
  unk_25A6C38 = v278;
  strcpy(unk_25A6C30, "Destination_Waypoint_List");
  byte_25A6C5F = 15;
  strcpy(byte_25A6C48, "{toDestination}");
  byte_25A6C77 = 13;
  strcpy((char *)&xmmword_25A6C60, "{Destination}");
  byte_25A6C8F = 7;
  strcpy(byte_25A6C78, "To_Home");
  byte_25A6CA7 = 14;
  strcpy(byte_25A6C90, "To_ContactHome");
  byte_25A6CBF = 7;
  strcpy(byte_25A6CA8, "To_Work");
  byte_25A6CD7 = 14;
  strcpy(byte_25A6CC0, "To_ContactWork");
  strcpy(&byte_25A6CEF, "\nTo_Business");
  strcpy(byte_25A6CD8, "To_Address");
  byte_25A6D07 = 11;
  byte_25A6D1F = 16;
  strcpy(byte_25A6D08, "To_Other_Contact");
  strcpy(&byte_25A6D37, "\tTo_ContactSchool");
  strcpy(byte_25A6D20, "To_School");
  byte_25A6D4F = 16;
  byte_25A6D67 = 17;
  strcpy(algn_25A6D50, "To_PersonLocation");
  qword_25A6D68 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_25A6D70 = v277;
  strcpy((char *)qword_25A6D68, "To_ContactCustomLabelAddress");
  byte_25A6D97 = 7;
  strcpy((char *)&dword_25A6D80, "At_Home");
  byte_25A6DAF = 14;
  strcpy((char *)&qword_25A6D98, "At_ContactHome");
  byte_25A6DC7 = 7;
  strcpy((char *)&dword_25A6DB0, "At_Work");
  byte_25A6DDF = 14;
  strcpy((char *)&qword_25A6DC8, "At_ContactWork");
  strcpy(&byte_25A6DF7, "\nAt_Business");
  strcpy((char *)&qword_25A6DE0, "At_Address");
  byte_25A6E0F = 11;
  byte_25A6E27 = 16;
  strcpy(algn_25A6E10, "At_Other_Contact");
  byte_25A6E3F = 4;
  strcpy((char *)&dword_25A6E28, "Home");
  byte_25A6E57 = 11;
  strcpy((char *)&qword_25A6E40 + 7, "Home");
  qword_25A6E40 = *(void *)&v264[16];
  byte_25A6E6F = 4;
  strcpy((char *)&dword_25A6E58, "Work");
  byte_25A6E87 = 11;
  strcpy((char *)&qword_25A6E70 + 7, "Work");
  qword_25A6E70 = *(void *)v264;
  byte_25A6E9F = 7;
  strcpy((char *)&dword_25A6E88, "Address");
  byte_25A6EB7 = 8;
  strcpy((char *)&qword_25A6EA0, "Business");
  byte_25A6ECF = 13;
  qword_25A6EB8 = *(void *)&v264[48];
  *(uint64_t *)((char *)&qword_25A6EB8 + 5) = *(void *)&v264[32];
  byte_25A6EC5 = 0;
  byte_25A6EE7 = 6;
  strcpy((char *)&dword_25A6ED0, "School");
  byte_25A6EFF = 13;
  strcpy((char *)&qword_25A6EE8, "ContactSchool");
  byte_25A6F17 = 14;
  strcpy((char *)&qword_25A6F00, "PersonLocation");
  qword_25A6F18 = (uint64_t)operator new(0x20uLL);
  xmmword_25A6F20 = v278;
  strcpy((char *)qword_25A6F18, "ContactCustomLabelAddress");
  if (byte_25A6C77 < 0)
  {
    sub_4200(&xmmword_25A6F30, (void *)xmmword_25A6C60, *((unint64_t *)&xmmword_25A6C60 + 1));
  }
  else
  {
    xmmword_25A6F30 = xmmword_25A6C60;
    qword_25A6F40 = unk_25A6C70;
  }
  byte_25A6F5F = 16;
  strcpy((char *)&xmmword_25A6F48, "{PrevExitNumber}");
  byte_25A6F77 = 10;
  strcpy((char *)&qword_25A6F60, "{PrevRoad}");
  qword_25A6F78 = (uint64_t)operator new(0x20uLL);
  unk_25A6F80 = v279;
  strcpy((char *)qword_25A6F78, "{RouteTotalExpectedTime}");
  byte_25A6FA7 = 18;
  strcpy(byte_25A6F90, "{ChargePercentage}");
  qword_25A6FA8 = (uint64_t)operator new(0x20uLL);
  unk_25A6FB0 = v273;
  strcpy((char *)qword_25A6FA8, "{RemainingChargePercentage}");
  byte_25A6FD7 = 16;
  strcpy(byte_25A6FC0, "{ChargeDuration}");
  byte_25A6FEF = 15;
  strcpy((char *)&qword_25A6FD8, "{ConnectorType}");
  byte_25A7007 = 19;
  strcpy(byte_25A6FF0, "{ChargeStationName}");
  byte_25A701F = 7;
  strcpy((char *)&dword_25A7008, "{Power}");
  byte_25A7037 = 13;
  strcpy((char *)&qword_25A7020, "{VehicleName}");
  byte_25A704F = 18;
  strcpy((char *)&xmmword_25A7038, "{AreaIncidentName}");
  byte_25A7067 = 14;
  strcpy((char *)&qword_25A7050, "{AreaIncident}");
  byte_25A707F = 16;
  strcpy((char *)&xmmword_25A7068, "{AffectedRegion}");
  byte_25A7097 = 21;
  strcpy(byte_25A7080, "{AreaIncidentWeblink}");
  byte_25A70AF = 20;
  strcpy((char *)&xmmword_25A7098, "{AreaIncidentAgency}");
  byte_25A70C7 = 11;
  strcpy((char *)&qword_25A70B0, "{IssueTime}");
  byte_25A70DF = 12;
  strcpy((char *)&qword_25A70C8, "{UpdateTime}");
  byte_25A70F7 = 11;
  strcpy((char *)&qword_25A70E0, "{IssueDate}");
  byte_25A710F = 12;
  strcpy((char *)&qword_25A70F8, "{UpdateDate}");
  qword_25A7110 = (uint64_t)operator new(0x20uLL);
  unk_25A7118 = v279;
  strcpy((char *)qword_25A7110, "{AreaIncidentDataSource}");
  byte_25A713F = 13;
  strcpy((char *)&qword_25A7128, "{AreaHectare}");
  byte_25A7157 = 10;
  strcpy((char *)&qword_25A7140, "{AreaAcre}");
  qword_25A7158 = (uint64_t)operator new(0x20uLL);
  unk_25A7160 = v275;
  strcpy((char *)qword_25A7158, "{WildfirePercentageContained}");
  qword_25A7170 = (uint64_t)operator new(0x28uLL);
  unk_25A7178 = v268[2];
  strcpy((char *)qword_25A7170, "{WildfireExpectedContainmentDate}");
  qword_25A7188 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_25A7190 = v277;
  strcpy((char *)qword_25A7188, "{ServerRecommendedRouteName}");
  qword_25A71A0 = (uint64_t)operator new(0x20uLL);
  unk_25A71A8 = v277;
  strcpy((char *)qword_25A71A0, "{ServerNonRecommendedRoute1}");
  qword_25A71B8 = (uint64_t)operator new(0x20uLL);
  unk_25A71C0 = v277;
  strcpy((char *)qword_25A71B8, "{ServerNonRecommendedRoute2}");
  byte_25A71E7 = 12;
  strcpy((char *)&qword_25A71D0, "{ClientDest}");
  byte_25A71FF = 6;
  strcpy((char *)&dword_25A71E8, "{Name}");
  qword_25A7200 = (uint64_t)operator new(0x20uLL);
  unk_25A7208 = v268[1];
  strcpy((char *)qword_25A7200, "ProactiveAlert_FasterRouteTitle");
  qword_25A7218 = (uint64_t)operator new(0x20uLL);
  unk_25A7220 = v276;
  strcpy((char *)qword_25A7218, "ProactiveAlert_RoadClosure");
  qword_25A7230 = (uint64_t)operator new(0x30uLL);
  unk_25A7238 = v271;
  strcpy((char *)qword_25A7230, "ProactiveAlert_UnusuallyHeavyTrafficOnTwo");
  qword_25A7248 = (uint64_t)operator new(0x28uLL);
  *(_OWORD *)algn_25A7250 = v274;
  strcpy((char *)qword_25A7248, "ProactiveAlert_FasterRouteTitle_to_Home");
  qword_25A7260 = (uint64_t)operator new(0x28uLL);
  unk_25A7268 = v274;
  strcpy((char *)qword_25A7260, "ProactiveAlert_FasterRouteTitle_to_Work");
  qword_25A7278 = (uint64_t)operator new(0x28uLL);
  unk_25A7280 = v274;
  strcpy((char *)qword_25A7278, "ProactiveAlert_FasterRouteTitle_to_Name");
  qword_25A7290 = (uint64_t)operator new(0x30uLL);
  unk_25A7298 = xmmword_20B93B0;
  strcpy((char *)qword_25A7290, "ProactiveAlert_FasterRouteTitle_to_StreetName");
  byte_25A72BF = 17;
  strcpy(byte_25A72A8, "Proactive_Driving");
  strcpy(&byte_25A72D7, "\n{RouteName}");
  strcpy((char *)&qword_25A72C0, "_RouteName");
  byte_25A72EF = 11;
  qword_25A72F0 = (uint64_t)operator new(0x28uLL);
  unk_25A72F8 = v268[2];
  strcpy((char *)qword_25A72F0, "Pass_Traffic_Light_Spoken_Primary");
  qword_25A7308 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_25A7310 = v275;
  strcpy((char *)qword_25A7308, "Pass_Stop_Sign_Spoken_Primary");
  *(void *)&algn_25A7310[16] = operator new(0x20uLL);
  *(_OWORD *)&algn_25A7310[24] = v268[0];
  strcpy(*(char **)&algn_25A7310[16], "Pass_Roundabout_Spoken_Primary");
  strcpy(&byte_25A734F, "\nBannerBody");
  strcpy(&algn_25A7310[40], "BannerHead");
  strcpy(&byte_25A7367, "\nBannerDescription");
  byte_25A737F = 17;
  strcpy(&byte_25A7397, "\n_Incident");
  strcpy((char *)&qword_25A7380, "VoiceAlert");
  strcpy(&byte_25A73AF, "\t_Area_Incident");
  byte_25A73C7 = 14;
  byte_25A73DF = 15;
  strcpy((char *)&qword_25A73C8, "_Area_Incidents");
  strcpy(&byte_25A73F7, "\t_Crash");
  strcpy((char *)&qword_25A73E0, "_Accident");
  byte_25A740F = 6;
  byte_25A7427 = 16;
  strcpy((char *)&xmmword_25A7410, "_Congestion_Zone");
  strcpy(&byte_25A743F, "\n_Environmental_Zone");
  strcpy((char *)&qword_25A7428, "_Toll_Zone");
  byte_25A7457 = 19;
  BYTE1(qword_25A7468) = 116;
  WORD1(qword_25A7468) = 0;
  HIDWORD(qword_25A7468) = 301989888;
  strcpy(byte_25A7470, "_Construction");
  strcpy((char *)&qword_25A7458, "_Incident_Accide");
  byte_25A7487 = 13;
  byte_25A749F = 7;
  strcpy((char *)&dword_25A7488, "_Hazard");
  byte_25A74B7 = 12;
  strcpy((char *)&qword_25A74A0, "_LaneClosure");
  byte_25A74CF = 12;
  strcpy((char *)&qword_25A74B8, "_LaneTrailer");
  qmemcpy(&byte_25A74E7, "\t_LaneTrailer", 13);
  strcpy((char *)&qword_25A74D0, "_Shoulder");
  qword_25A74F8 = 0x1500007200000000;
  *(void *)algn_25A74F4 = *(void *)"_Shoulder";
  strcpy((char *)&xmmword_25A7500, "_Causing_Traffic_Delay");
  HIBYTE(word_25A7516) = 22;
  byte_25A752F = 6;
  strcpy((char *)&dword_25A7518, "_Timed");
  byte_25A7547 = 12;
  strcpy((char *)&qword_25A7530, "_HasDistance");
  byte_25A755F = 8;
  strcpy((char *)&qword_25A7548, "_Closure");
  strcpy(&byte_25A7577, "\n_BadRoad");
  strcpy((char *)&qword_25A7560, "_NoReroute");
  byte_25A758F = 8;
  byte_25A75A7 = 12;
  strcpy((char *)&qword_25A7590, "_TollTrailer");
  byte_25A75BF = 12;
  strcpy((char *)&qword_25A75A8, "_BestTrailer");
  byte_25A75D7 = 8;
  strcpy((char *)&qword_25A75C0, "_Trailer");
  byte_25A75EF = 18;
  strcpy((char *)&xmmword_25A75D8, "_Secondary_Trailer");
  byte_25A7607 = 8;
  strcpy((char *)&qword_25A75F0, "_Savings");
  byte_25A761F = 8;
  strcpy((char *)&qword_25A7608, "_AltRoad");
  byte_25A7637 = 6;
  strcpy((char *)&dword_25A7620, "_Named");
  byte_25A764F = 6;
  strcpy((char *)&dword_25A7638, "_NAMED");
  byte_25A7667 = 22;
  strcpy((char *)&xmmword_25A7650, "_Named_Suggested_Route");
  qword_25A7680 = 0x1000000000000000;
  xmmword_25A7670 = xmmword_20E81D0;
  byte_25A769F = 11;
  strcpy((char *)&qword_25A7688, "_Speed_Trap");
  byte_25A76B7 = 4;
  strcpy((char *)&dword_25A76A0, "_UGI");
  byte_25A76CF = 12;
  strcpy((char *)&qword_25A76B8, "_Safer_Route");
  qword_25A76D0 = (uint64_t)operator new(0x20uLL);
  unk_25A76D8 = v268[1];
  strcpy((char *)qword_25A76D0, "BlockedRouteByBlockingIncident_");
  qword_25A76E8 = (uint64_t)operator new(0x28uLL);
  long long v270 = xmmword_20B9280;
  *(_OWORD *)algn_25A76F0 = xmmword_20B9280;
  strcpy((char *)qword_25A76E8, "BlockedRouteByManeuverRestriction_");
  qword_25A7700 = (uint64_t)operator new(0x20uLL);
  unk_25A7708 = v268[0];
  strcpy((char *)qword_25A7700, "BlockedRouteByTimeRestriction_");
  qword_25A7718 = (uint64_t)operator new(0x28uLL);
  unk_25A7720 = xmmword_20B8FD0;
  strcpy((char *)qword_25A7718, "SuggestRouteToAvoidBlockingIncident_");
  qword_25A7730 = (uint64_t)operator new(0x30uLL);
  unk_25A7738 = xmmword_20B9380;
  strcpy((char *)qword_25A7730, "SuggestRouteToAvoidBlockingManeuverRestriction_");
  qword_25A7748 = (uint64_t)operator new(0x30uLL);
  *(_OWORD *)algn_25A7750 = xmmword_20B93E0;
  strcpy((char *)qword_25A7748, "SuggestRouteToAvoidBlockingTimeRestriction_");
  byte_25A7777 = 1;
  word_25A7760 = 95;
  strcpy((char *)&xmmword_25A7778, "IncidentsCausingDelay_");
  HIBYTE(word_25A778E) = 22;
  qword_25A7790 = (uint64_t)operator new(0x19uLL);
  unk_25A7798 = v280;
  strcpy((char *)qword_25A7790, "NonVotableRoadIncident_");
  byte_25A77BF = 20;
  strcpy(byte_25A77A8, "VotableRoadIncident_");
  byte_25A77D7 = 13;
  strcpy((char *)&qword_25A77C0, "AreaIncident_");
  byte_25A77EF = 15;
  strcpy((char *)&qword_25A77D8, "CongestionZone_");
  qword_25A77F0 = (uint64_t)operator new(0x20uLL);
  unk_25A77F8 = v279;
  strcpy((char *)qword_25A77F0, "EVModifiedChargingStops_");
  byte_25A781F = 13;
  strcpy((char *)&qword_25A7808, "EVDisconnect_");
  byte_25A7837 = 12;
  strcpy((char *)&qword_25A7820, "EVReconnect_");
  qword_25A7838 = (uint64_t)operator new(0x20uLL);
  unk_25A7840 = v277;
  strcpy((char *)qword_25A7838, "EVOfflineToOnlineTransition_");
  byte_25A7867 = 13;
  strcpy((char *)&qword_25A7850, "EVOfflineSAR_");
  byte_25A787F = 21;
  strcpy((char *)&xmmword_25A7868, "EVTowingNotSupported_");
  byte_25A7897 = 18;
  strcpy(byte_25A7880, "EVInfeasibleRoute_");
  qword_25A7898 = (uint64_t)operator new(0x38uLL);
  unk_25A78A0 = xmmword_20B8DF0;
  strcpy((char *)qword_25A7898, "SuggestRouteAddingStopsBeforeEVInfeasibleOriginalStop_");
  qword_25A78B0 = (uint64_t)operator new(0x40uLL);
  unk_25A78B8 = xmmword_20B98C0;
  strcpy((char *)qword_25A78B0, "LCSuggestRouteAddingStopsBeforeEVInfeasibleOriginalStop_");
  qword_25A78C8 = (uint64_t)operator new(0x30uLL);
  *(_OWORD *)algn_25A78D0 = v272;
  strcpy((char *)qword_25A78C8, "SuggestRouteAddingStopsForEVInfeasibleRoute_");
  qmemcpy(v268, "InfeasibleRoute_ngStopsForEVInfeSuggestRouteAddi", sizeof(v268));
  qword_25A78E0 = (uint64_t)operator new(0x30uLL);
  *(_WORD *)&v264[50] = 0;
  *(_DWORD *)&v264[52] = 0;
  *(void *)&v264[56] = 0x8000000000000030;
  unk_25A78E8 = xmmword_20B9A80;
  strcpy((char *)qword_25A78E0, "LCSuggestRouteAddingStopsForEVInfeasibleRoute_");
  strcpy(v264, "InfeasibleRoute_dingStopsForEVInLCSuggestRouteAd.");
  qword_25A78F8 = (uint64_t)operator new(0x30uLL);
  unk_25A7900 = v271;
  strcpy((char *)qword_25A78F8, "SuggestRouteAddingStopsToIncreaseDestSoc_");
  int v186 = operator new(0x30uLL);
  qword_25A7910 = (uint64_t)v186;
  unk_25A7918 = v272;
  *int v186 = v268[2];
  v186[1] = v268[1];
  *(_OWORD *)((char *)v186 + 28) = v268[0];
  *((unsigned char *)v186 + 44) = 0;
  qword_25A7928 = (uint64_t)operator new(0x28uLL);
  *(_OWORD *)algn_25A7930 = v270;
  strcpy((char *)qword_25A7928, "SuggestDetourWithHigherArrivalSOC_");
  unsigned __int16 v187 = operator new(0x30uLL);
  qword_25A7940 = (uint64_t)v187;
  unk_25A7948 = *(_OWORD *)&v264[48];
  *unsigned __int16 v187 = *(_OWORD *)&v264[32];
  v187[1] = *(_OWORD *)&v264[16];
  *(_OWORD *)((char *)v187 + 30) = *(_OWORD *)v264;
  *((unsigned char *)v187 + 46) = 0;
  qword_25A7958 = (uint64_t)operator new(0x28uLL);
  unk_25A7960 = v274;
  strcpy((char *)qword_25A7958, "SuggestRouteToDestForEVInfeasibleRoute_");
  qword_25A7970 = (uint64_t)operator new(0x28uLL);
  unk_25A7978 = v267;
  strcpy((char *)qword_25A7970, "SuggestRouteRemovingStopsFromEVRoute_");
  qword_25A7988 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_25A7990 = v279;
  strcpy((char *)qword_25A7988, "OfflineToOnlineNewRoute_");
  qword_25A79A0 = (uint64_t)operator new(0x40uLL);
  unk_25A79A8 = xmmword_20B98C0;
  strcpy((char *)qword_25A79A0, "SuggestDetourWithHigherArrivalSOCForInfeasibleUserRoute_");
  byte_25A79CF = 20;
  strcpy((char *)&xmmword_25A79B8, "LPR_OFFLINE_REROUTE_");
  byte_25A79E7 = 16;
  strcpy(algn_25A79D0, "LPR_OFFLINE_SAR_");
  byte_25A79FF = 20;
  strcpy((char *)&xmmword_25A79E8, "LPR_OFFLINE_REROUTE_");
  byte_25A7A17 = 16;
  strcpy(byte_25A7A00, "LPR_OFFLINE_SAR_");
  byte_25A7A2F = 19;
  strcpy((char *)&xmmword_25A7A18, "SuggestFasterRoute_");
  qword_25A7A30 = (char *)operator new(0x20uLL);
  xmmword_25A7A38 = v278;
  strcpy(qword_25A7A30, "AreaIncidentSaferReroute_");
  byte_25A7A5F = 12;
  strcpy((char *)&qword_25A7A48, "_Remove_Stop");
  byte_25A7A77 = 13;
  strcpy((char *)&qword_25A7A60, "_Remove_Stops");
  strcpy(&byte_25A7A8F, "\t_Add_Stops");
  strcpy((char *)&qword_25A7A78, "_Add_Stop");
  strcpy(&byte_25A7AA7, "\n_Change_Route");
  byte_25A7ABF = 13;
  byte_25A7AD7 = 15;
  strcpy((char *)&qword_25A7AC0, "_Different_Stop");
  byte_25A7AEF = 16;
  strcpy((char *)&xmmword_25A7AD8, "_Different_Stops");
  byte_25A7B07 = 15;
  strcpy((char *)&qword_25A7AF0, "_EV_Remove_Stop");
  byte_25A7B1F = 16;
  strcpy((char *)&xmmword_25A7B08, "_EV_Remove_Stops");
  byte_25A7B37 = 12;
  strcpy((char *)&qword_25A7B20, "_EV_Add_Stop");
  byte_25A7B4F = 13;
  strcpy((char *)&qword_25A7B38, "_EV_Add_Stops");
  byte_25A7B67 = 15;
  strcpy((char *)&qword_25A7B50, "_EV_Low_Battery");
  byte_25A7B7F = 14;
  strcpy((char *)&qword_25A7B68, "_EV_Infeasible");
  byte_25A7B97 = 15;
  strcpy((char *)&qword_25A7B80, "_EV_Last_Chance");
  qword_25A7B98 = (uint64_t)operator new(0x20uLL);
  unk_25A7BA0 = v279;
  strcpy((char *)qword_25A7B98, "_EV_Low_Battery_Add_Stop");
  uint64_t v188 = qword_25A7A98;
  qword_25A7BB0 = (uint64_t)operator new(0x20uLL);
  unk_25A7BB8 = v278;
  strcpy((char *)qword_25A7BB0, "_EV_Low_Battery_Add_Stops");
  qword_25A7BC8 = (uint64_t)operator new(0x19uLL);
  *(_OWORD *)algn_25A7BD0 = v280;
  strcpy((char *)qword_25A7BC8, "_EV_Infeasible_Add_Stop");
  int v189 = byte_25A7AA7;
  if (byte_25A7AA7 >= 0) {
    size_t v190 = byte_25A7AA7;
  }
  else {
    size_t v190 = v188;
  }
  unint64_t v191 = v190 + 14;
  if (v190 + 14 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v191 >= 0x17)
  {
    uint64_t v194 = (v191 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v191 | 7) != 0x17) {
      uint64_t v194 = v191 | 7;
    }
    uint64_t v195 = v194 + 1;
    __int16 v196 = (char *)operator new(v194 + 1);
    qword_25A7BE8 = v190 + 14;
    unk_25A7BF0 = v195 | 0x8000000000000000;
    qword_25A7BE0 = (uint64_t)v196;
    qmemcpy(v196, "_EV_Infeasible", 14);
    v192 = v196 + 14;
  }
  else
  {
    BYTE1(qword_25A7BE8) = 0;
    WORD1(qword_25A7BE8) = 0;
    HIDWORD(qword_25A7BE8) = 0;
    unk_25A7BF0 = 0;
    byte_25A7BF7 = v190 + 14;
    strcpy((char *)&qword_25A7BE0, "_EV_Infe");
    v192 = (char *)&qword_25A7BE8 + 6;
    if (!v190)
    {
      char v193 = 1;
      goto LABEL_425;
    }
  }
  if (v189 >= 0) {
    uint64_t v197 = (uint64_t)&qword_25A7A90;
  }
  else {
    uint64_t v197 = 0x6F74535F6464415FLL;
  }
  memmove(v192, (const void *)v197, v190);
  char v193 = 0;
LABEL_425:
  v192[v190] = 0;
  v198 = (char *)operator new(0x20uLL);
  qword_25A7BF8 = (uint64_t)v198;
  unk_25A7C00 = v279;
  *(void *)v198 = qword_25A7B80;
  *(void *)(v198 + 7) = *(uint64_t *)((char *)&qword_25A7B80 + 7);
  *(void *)(v198 + 15) = qword_25A7A78;
  v198[23] = word_25A7A80;
  v198[24] = 0;
  unint64_t v199 = v190 + 15;
  if (v190 + 15 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v199 > 0x16)
  {
    uint64_t v201 = (v199 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v199 | 7) != 0x17) {
      uint64_t v201 = v199 | 7;
    }
    uint64_t v202 = v201 + 1;
    unsigned int v200 = (uint64_t *)operator new(v201 + 1);
    qword_25A7C18 = v190 + 15;
    unk_25A7C20 = v202 | 0x8000000000000000;
    qword_25A7C10 = (uint64_t)v200;
  }
  else
  {
    unsigned int v200 = &qword_25A7C10;
    qword_25A7C18 = 0;
    unk_25A7C20 = 0;
    qword_25A7C10 = 0;
    byte_25A7C27 = v190 + 15;
  }
  *unsigned int v200 = qword_25A7B80;
  *(uint64_t *)((char *)v200 + 7) = *(uint64_t *)((char *)&qword_25A7B80 + 7);
  unsigned __int16 v203 = (char *)v200 + 15;
  if ((v193 & 1) == 0)
  {
    if (v189 >= 0) {
      int v204 = &qword_25A7A90;
    }
    else {
      int v204 = (uint64_t *)qword_25A7A90;
    }
    memmove((char *)v200 + 15, v204, v190);
  }
  v203[v190] = 0;
  byte_25A7C3F = 17;
  strcpy((char *)&xmmword_25A7C28, "_EV_Forced_Detour");
  qword_25A7C40 = (uint64_t)operator new(0x20uLL);
  unk_25A7C48 = v278;
  strcpy((char *)qword_25A7C40, "_EV_Higher_Arrival_Charge");
  qword_25A7C58 = (uint64_t)operator new(0x28uLL);
  *(_OWORD *)algn_25A7C60 = xmmword_20B8FD0;
  strcpy((char *)qword_25A7C58, "_EV_Infeasible_Higher_Arrival_Charge");
  byte_25A7C87 = 16;
  strcpy(&algn_25A7C60[16], "_EV_Out_Of_Range");
  qword_25A7C88 = (uint64_t)operator new(0x20uLL);
  unk_25A7C90 = v273;
  strcpy((char *)qword_25A7C88, "_EV_Last_Chance_Take_Detour");
  strcpy(byte_25A7CA0, "_EV_Forced_Modify_Stop");
  HIBYTE(word_25A7CB6) = 22;
  qword_25A7CB8 = (uint64_t)operator new(0x19uLL);
  unk_25A7CC0 = v280;
  strcpy((char *)qword_25A7CB8, "_EV_Forced_Modify_Stops");
  byte_25A7CE7 = 19;
  strcpy(byte_25A7CD0, "_EV_Forced_Add_Stop");
  byte_25A7CFF = 20;
  strcpy((char *)&xmmword_25A7CE8, "_EV_Forced_Add_Stops");
  byte_25A7D17 = 21;
  strcpy(byte_25A7D00, "_EV_Battery_Info_Lost");
  qword_25A7D18 = (uint64_t)operator new(0x20uLL);
  unk_25A7D20 = v278;
  strcpy((char *)qword_25A7D18, "_EV_Battery_Info_Restored");
  qword_25A7D30 = (uint64_t)operator new(0x20uLL);
  unk_25A7D38 = v279;
  strcpy((char *)qword_25A7D30, "_EV_Towing_Not_Supported");
  qword_25A7D48 = (uint64_t)operator new(0x28uLL);
  *(_OWORD *)algn_25A7D50 = v269;
  strcpy((char *)qword_25A7D48, "_EV_Offline_to_Online_Transition");
  byte_25A7D77 = 15;
  strcpy((char *)&qword_25A7D60, "_EV_Offline_SAR");
  qword_25A7D78 = (uint64_t)operator new(0x20uLL);
  unk_25A7D80 = v277;
  strcpy((char *)qword_25A7D78, "_Offline_to_Online_New_Route");
  byte_25A7DA7 = 12;
  strcpy((char *)&qword_25A7D90, "BannerButton");
  byte_25A7DBF = 8;
  strcpy((char *)&qword_25A7DA8, "_Dismiss");
  byte_25A7DD7 = 3;
  word_25A7DC0 = 20319;
  byte_25A7DC2 = 75;
  byte_25A7DC3 = 0;
  byte_25A7DEF = 11;
  strcpy((char *)&qword_25A7DD8, "_Still_Here");
  byte_25A7E07 = 8;
  strcpy((char *)&qword_25A7DF0, "_Cleared");
  qmemcpy(&byte_25A7E1F, "\nBannerButton", 13);
  strcpy((char *)&qword_25A7E08, "_No_Thanks");
  uint64_t v205 = qword_25A7D98;
  qword_25A7E30 = 0x1400000000000000;
  *(void *)algn_25A7E2C = 0x7373696D7369445FLL;
  qword_25A7E48 = 0xF00000000000000;
  qword_25A7E40 = 0x4B4F5F6E6F7474;
  int v206 = byte_25A7B37;
  if (byte_25A7B37 >= 0) {
    size_t v207 = byte_25A7B37;
  }
  else {
    size_t v207 = qword_25A7B28;
  }
  unint64_t v208 = v207 + 12;
  qword_25A7E38 = *(void *)"BannerButton";
  if (v207 + 12 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v208 >= 0x17)
  {
    uint64_t v210 = (v208 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v208 | 7) != 0x17) {
      uint64_t v210 = v208 | 7;
    }
    uint64_t v211 = v210 + 1;
    double v212 = (char *)operator new(v210 + 1);
    qword_25A7E58 = v207 + 12;
    unk_25A7E60 = v211 | 0x8000000000000000;
    qword_25A7E50 = (uint64_t)v212;
    *((_DWORD *)v212 + 2) = 1852798068;
    *(void *)double v212 = *(void *)"BannerButton";
    v209 = v212 + 12;
  }
  else
  {
    BYTE5(qword_25A7E58) = 0;
    HIWORD(qword_25A7E58) = 0;
    unk_25A7E60 = 0;
    byte_25A7E67 = v207 + 12;
    strcpy((char *)&qword_25A7E50, "BannerButton");
    v209 = (char *)&qword_25A7E58 + 4;
    if (!v207) {
      goto LABEL_450;
    }
  }
  if (v206 >= 0) {
    double v213 = &qword_25A7B20;
  }
  else {
    double v213 = (uint64_t *)qword_25A7B20;
  }
  memmove(v209, v213, v207);
LABEL_450:
  v209[v207] = 0;
  int v214 = byte_25A7B4F;
  if (byte_25A7B4F >= 0) {
    size_t v215 = byte_25A7B4F;
  }
  else {
    size_t v215 = unk_25A7B40;
  }
  unint64_t v216 = v215 + 12;
  if (v215 + 12 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v216 >= 0x17)
  {
    uint64_t v218 = (v216 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v216 | 7) != 0x17) {
      uint64_t v218 = v216 | 7;
    }
    uint64_t v219 = v218 + 1;
    v220 = (char *)operator new(v218 + 1);
    qword_25A7E70 = v215 + 12;
    unk_25A7E78 = v219 | 0x8000000000000000;
    qword_25A7E68 = (uint64_t)v220;
    *(void *)v220 = qword_25A7D90;
    *((_DWORD *)v220 + 2) = qword_25A7D98;
    uint64_t v217 = v220 + 12;
  }
  else
  {
    qword_25A7E70 = 0;
    unk_25A7E78 = 0;
    byte_25A7E7F = v215 + 12;
    LODWORD(qword_25A7E70) = qword_25A7D98;
    qword_25A7E68 = qword_25A7D90;
    uint64_t v217 = (char *)&qword_25A7E70 + 4;
    if (!v215) {
      goto LABEL_464;
    }
  }
  if (v214 >= 0) {
    unint64_t v221 = &qword_25A7B38;
  }
  else {
    unint64_t v221 = (uint64_t *)qword_25A7B38;
  }
  memmove(v217, v221, v215);
LABEL_464:
  v217[v215] = 0;
  int v222 = byte_25A7B07;
  if (byte_25A7B07 >= 0) {
    size_t v223 = byte_25A7B07;
  }
  else {
    size_t v223 = unk_25A7AF8;
  }
  unint64_t v224 = v223 + 12;
  if (v223 + 12 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v224 >= 0x17)
  {
    uint64_t v226 = (v224 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v224 | 7) != 0x17) {
      uint64_t v226 = v224 | 7;
    }
    uint64_t v227 = v226 + 1;
    v228 = (char *)operator new(v226 + 1);
    qword_25A7E88 = v223 + 12;
    unk_25A7E90 = v227 | 0x8000000000000000;
    qword_25A7E80 = (uint64_t)v228;
    *(void *)v228 = qword_25A7D90;
    *((_DWORD *)v228 + 2) = qword_25A7D98;
    uint64_t v225 = v228 + 12;
  }
  else
  {
    qword_25A7E88 = 0;
    unk_25A7E90 = 0;
    byte_25A7E97 = v223 + 12;
    LODWORD(qword_25A7E88) = qword_25A7D98;
    qword_25A7E80 = qword_25A7D90;
    uint64_t v225 = (char *)&qword_25A7E88 + 4;
    if (!v223) {
      goto LABEL_478;
    }
  }
  if (v222 >= 0) {
    uint64_t v229 = &qword_25A7AF0;
  }
  else {
    uint64_t v229 = (uint64_t *)qword_25A7AF0;
  }
  memmove(v225, v229, v223);
LABEL_478:
  v225[v223] = 0;
  int v230 = byte_25A7DA7;
  if (byte_25A7DA7 >= 0) {
    size_t v231 = byte_25A7DA7;
  }
  else {
    size_t v231 = v205;
  }
  int v232 = byte_25A7B1F;
  if (byte_25A7B1F >= 0) {
    size_t v233 = byte_25A7B1F;
  }
  else {
    size_t v233 = *((void *)&xmmword_25A7B08 + 1);
  }
  unint64_t v234 = v233 + v231;
  if (v233 + v231 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v234 <= 0x16)
  {
    unint64_t v235 = &qword_25A7E98;
    qword_25A7EA0 = 0;
    unk_25A7EA8 = 0;
    qword_25A7E98 = 0;
    byte_25A7EAF = v233 + v231;
    if (!v231) {
      goto LABEL_491;
    }
    goto LABEL_487;
  }
  uint64_t v242 = (v234 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v234 | 7) != 0x17) {
    uint64_t v242 = v234 | 7;
  }
  uint64_t v243 = v242 + 1;
  unint64_t v235 = (uint64_t *)operator new(v242 + 1);
  qword_25A7EA0 = v233 + v231;
  unk_25A7EA8 = v243 | 0x8000000000000000;
  qword_25A7E98 = (uint64_t)v235;
  if (v231)
  {
LABEL_487:
    if (v230 >= 0) {
      uint64_t v236 = &qword_25A7D90;
    }
    else {
      uint64_t v236 = (uint64_t *)qword_25A7D90;
    }
    memmove(v235, v236, v231);
  }
LABEL_491:
  BOOL v237 = (char *)v235 + v231;
  if (v233)
  {
    if (v232 >= 0) {
      v238 = &xmmword_25A7B08;
    }
    else {
      v238 = (long long *)xmmword_25A7B08;
    }
    memmove(v237, v238, v233);
  }
  v237[v233] = 0;
  unint64_t v239 = v231 + 11;
  if (v231 + 11 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v239 >= 0x17)
  {
    uint64_t v244 = (v239 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v239 | 7) != 0x17) {
      uint64_t v244 = v239 | 7;
    }
    uint64_t v245 = v244 + 1;
    uint64_t v240 = (uint64_t *)operator new(v244 + 1);
    qword_25A7EB8 = v231 + 11;
    unk_25A7EC0 = v245 | 0x8000000000000000;
    qword_25A7EB0 = (uint64_t)v240;
  }
  else
  {
    uint64_t v240 = &qword_25A7EB0;
    qword_25A7EB8 = 0;
    unk_25A7EC0 = 0;
    qword_25A7EB0 = 0;
    byte_25A7EC7 = v231 + 11;
    if (!v231)
    {
      *(_DWORD *)((char *)&qword_25A7EB0 + 7) = *(_DWORD *)((char *)&qword_25A7DD8 + 7);
      qword_25A7EB0 = qword_25A7DD8;
      BYTE3(qword_25A7EB8) = 0;
      LOBYTE(v241) = 8;
      goto LABEL_512;
    }
  }
  if (v230 >= 0) {
    long long v246 = &qword_25A7D90;
  }
  else {
    long long v246 = (uint64_t *)qword_25A7D90;
  }
  memmove(v240, v246, v231);
  v247 = (char *)v240 + v231;
  int v248 = *(_DWORD *)((char *)&qword_25A7DD8 + 7);
  *(void *)v247 = qword_25A7DD8;
  *(_DWORD *)(v247 + 7) = v248;
  v247[11] = 0;
  unint64_t v241 = v231 + 8;
  if (v231 + 8 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v241 <= 0x16)
  {
LABEL_512:
    long long v249 = &qword_25A7EC8;
    qword_25A7ED0 = 0;
    unk_25A7ED8 = 0;
    qword_25A7EC8 = 0;
    byte_25A7EDF = v241;
    if (!v231) {
      goto LABEL_517;
    }
    goto LABEL_513;
  }
  uint64_t v262 = (v241 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v241 | 7) != 0x17) {
    uint64_t v262 = v241 | 7;
  }
  uint64_t v263 = v262 + 1;
  long long v249 = (uint64_t *)operator new(v262 + 1);
  qword_25A7ED0 = v231 + 8;
  unk_25A7ED8 = v263 | 0x8000000000000000;
  qword_25A7EC8 = (uint64_t)v249;
  if (v231)
  {
LABEL_513:
    if (v230 >= 0) {
      unint64_t v250 = &qword_25A7D90;
    }
    else {
      unint64_t v250 = (uint64_t *)qword_25A7D90;
    }
    memmove(v249, v250, v231);
  }
LABEL_517:
  v251 = (char *)v249 + v231;
  *(void *)v251 = qword_25A7DF0;
  v251[8] = 0;
  int v252 = byte_25A7E1F;
  if (byte_25A7E1F >= 0) {
    size_t v253 = byte_25A7E1F;
  }
  else {
    size_t v253 = qword_25A7E10;
  }
  unint64_t v254 = v253 + v231;
  if (v253 + v231 > 0x7FFFFFFFFFFFFFF7) {
    sub_188D690();
  }
  if (v254 <= 0x16)
  {
    v255 = &qword_25A7EE0;
    qword_25A7EE8 = 0;
    unk_25A7EF0 = 0;
    qword_25A7EE0 = 0;
    byte_25A7EF7 = v253 + v231;
    if (!v231) {
      goto LABEL_527;
    }
    goto LABEL_523;
  }
  uint64_t v260 = (v254 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v254 | 7) != 0x17) {
    uint64_t v260 = v254 | 7;
  }
  uint64_t v261 = v260 + 1;
  v255 = (uint64_t *)operator new(v260 + 1);
  qword_25A7EE8 = v253 + v231;
  unk_25A7EF0 = v261 | 0x8000000000000000;
  qword_25A7EE0 = (uint64_t)v255;
  if (v231)
  {
LABEL_523:
    if (v230 >= 0) {
      v256 = &qword_25A7D90;
    }
    else {
      v256 = (uint64_t *)qword_25A7D90;
    }
    memmove(v255, v256, v231);
  }
LABEL_527:
  v257 = (char *)v255 + v231;
  if (v253)
  {
    if (v252 >= 0) {
      v258 = &qword_25A7E08;
    }
    else {
      v258 = (uint64_t *)qword_25A7E08;
    }
    memmove(v257, v258, v253);
  }
  v257[v253] = 0;
  strcpy(&byte_25A7F0F, "\n{newroute}");
  strcpy((char *)&qword_25A7EF8, "{roadname}");
  strcpy(&byte_25A7F27, "\n{count}");
  byte_25A7F3F = 7;
  strcpy(&byte_25A7F57, "\n{dur}");
  strcpy((char *)&qword_25A7F40, "{duration}");
  byte_25A7F6F = 5;
  qword_25A7F70 = (uint64_t)operator new(0x20uLL);
  unk_25A7F78 = v276;
  strcpy((char *)qword_25A7F70, "{PleaseProceedWithCaution}");
  byte_25A7F9F = 15;
  strcpy((char *)&qword_25A7F88, "{UserRouteName}");
  byte_25A7FB7 = 20;
  strcpy((char *)&xmmword_25A7FA0, "{SuggestedRouteName}");
  byte_25A7FCF = 18;
  strcpy(byte_25A7FB8, "Speed_Camera_Ahead");
  qword_25A7FD0 = (uint64_t)operator new(0x20uLL);
  unk_25A7FD8 = v275;
  strcpy((char *)qword_25A7FD0, "Red_Light_Camera_Ahead_Spoken");
  qword_25A7FE8 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_25A7FF0 = v275;
  strcpy((char *)qword_25A7FE8, "Stop_Sign_Camera_Ahead_Spoken");
  qword_25A8000 = (uint64_t)operator new(0x28uLL);
  unk_25A8008 = v270;
  strcpy((char *)qword_25A8000, "Speed_Camera_Ahead_Multiple_Spoken");
  qword_25A8018 = (uint64_t)operator new(0x28uLL);
  unk_25A8020 = v265;
  strcpy((char *)qword_25A8018, "Red_Light_Camera_Ahead_Multiple_Spoken");
  qword_25A8030 = (uint64_t)operator new(0x20uLL);
  unk_25A8038 = v277;
  strcpy((char *)qword_25A8030, "Camera_Ahead_Multiple_Spoken");
  qword_25A8048 = (uint64_t)operator new(0x30uLL);
  unk_25A8050 = v266;
  strcpy((char *)qword_25A8048, "Red_Light_Camera_Speed_Camera_Ahead_Spoken");
  qword_25A8060 = (char *)operator new(0x30uLL);
  strcpy(qword_25A8060, "Stop_Sign_Camera_Speed_Camera_Ahead_Spoken");
  byte_25A808F = 16;
  xmmword_25A8068 = v266;
  strcpy(byte_25A8078, "_Speed_Limit_Mph");
  byte_25A80A7 = 16;
  strcpy(algn_25A8090, "_Speed_Limit_Kph");
  byte_25A80BF = 11;
  strcpy((char *)&qword_25A80A8, "Watch_Speed");
  byte_25A80D7 = 4;
  strcpy((char *)&dword_25A80C0, "_One");
  byte_25A80EF = 4;
  strcpy((char *)&dword_25A80D8, "_Two");
  byte_25A8107 = 4;
  strcpy((char *)&dword_25A80F0, "_Few");
  byte_25A811F = 5;
  strcpy((char *)&dword_25A8108, "_Many");
  byte_25A8137 = 6;
  strcpy((char *)&dword_25A8120, "_Other");
  byte_25A814F = 4;
  strcpy((char *)&dword_25A8138, "_ONE");
  byte_25A8167 = 7;
  strcpy((char *)&dword_25A8150, "{Speed}");
  byte_25A817F = 8;
  strcpy((char *)&qword_25A8168, "Dismount");
  byte_25A8197 = 4;
  strcpy((char *)&dword_25A8180, "Walk");
  byte_25A81AF = 5;
  strcpy((char *)&dword_25A8198, "Mount");
  byte_25A81C7 = 7;
  strcpy((char *)&dword_25A81B0, "Remount");
  strcpy(&byte_25A81DF, "\t_Crosswalk");
  strcpy((char *)&qword_25A81C8, "Walk_Road");
  strcpy(&byte_25A81F7, "\n_PLURAL");
  byte_25A81F8[23] = 7;
  strcpy(&byte_25A8227, "\n{description1}");
  strcpy((char *)&xmmword_25A8210, "_SECONDARY");
  byte_25A823F = 14;
  byte_25A8257 = 14;
  strcpy((char *)&xmmword_25A8240, "{description2}");
  byte_25A826F = 21;
  strcpy((char *)&xmmword_25A8258, "TWO_ROAD_DESCRIPTIONS");
  byte_25A8287 = 17;
  strcpy((char *)&xmmword_25A8270, "{SlopePercentage}");
  byte_25A829F = 15;
  strcpy((char *)&qword_25A8288, "_Protected_Lane");
  strcpy(&byte_25A82B7, "\n_Paved_Path");
  strcpy((char *)&qword_25A82A0, "_Bike_Path");
  byte_25A82CF = 11;
  byte_25A82E7 = 15;
  strcpy((char *)&qword_25A82D0, "_Dedicated_Lane");
  byte_25A82FF = 12;
  strcpy((char *)&qword_25A82E8, "_Shared_Path");
  strcpy(&byte_25A8317, "\n_UnnamedRoad");
  strcpy((char *)&qword_25A8300, "_Bike_Lane");
  byte_25A832F = 12;
  byte_25A8347 = 5;
  strcpy((char *)&dword_25A8330, "_Path");
  byte_25A835F = 6;
  strcpy((char *)&dword_25A8348, "_Trail");
  strcpy(&byte_25A8377, "\t_Plaza");
  strcpy((char *)&qword_25A8360, "_Sidewalk");
  byte_25A838F = 6;
  byte_25A83A7 = 15;
  strcpy((char *)&qword_25A8390, "_Moving_Walkway");
  byte_25A83BF = 14;
  strcpy((char *)&qword_25A83A8, "Two_Stage_Turn");
  byte_25A83D7 = 16;
  strcpy((char *)&xmmword_25A83C0, "{OptionalPeriod}");
  byte_25A83EF = 18;
  strcpy((char *)&xmmword_25A83D8, "Advisory_Separator");
  byte_25A8407 = 6;
  strcpy((char *)&dword_25A83F0, "Period");
  byte_25A841F = 21;
  strcpy((char *)&xmmword_25A8408, "Advisory_Title_Notice");
  strcpy((char *)&xmmword_25A8420, "Advisory_Title_Notices");
  HIBYTE(word_25A8436) = 22;
  byte_25A844F = 7;
  strcpy((char *)&dword_25A8438, "_DETAIL");
  byte_25A8467 = 17;
  strcpy((char *)&xmmword_25A8450, "_LONG_REGION_LIST");
  byte_25A847F = 16;
  strcpy((char *)&xmmword_25A8468, "Advisory_Grouped");
  byte_25A8497 = 11;
  strcpy((char *)&qword_25A8480, "_Advisories");
  qword_25A8498 = (uint64_t)operator new(0x20uLL);
  unk_25A84A0 = v273;
  strcpy((char *)qword_25A8498, "Advisory_WILDFIRE_METADATA_");
  byte_25A84C7 = 8;
  strcpy((char *)&qword_25A84B0, "Advisory");
  byte_25A84DF = 13;
  strcpy((char *)&qword_25A84C8, "MPR_NUM_STOPS");
  byte_25A84F7 = 17;
  strcpy(byte_25A84E0, "EV_CHARGE_STATION");
  byte_25A850F = 11;
  strcpy((char *)&qword_25A84F8, "_NAMED_CITY");
  byte_25A8527 = 5;
  strcpy((char *)&dword_25A8510, "_Stop");
  strcpy(&byte_25A853F, "\n{StopsCount}");
  strcpy((char *)&qword_25A8528, "{CityName}");
  byte_25A8557 = 12;
  byte_25A856F = 11;
  strcpy((char *)&qword_25A8558, "_With_Other");
  byte_25A8587 = 15;
  strcpy((char *)&qword_25A8570, "{DepartureTime}");
  qword_25A8588 = (uint64_t)operator new(0x28uLL);
  *(_OWORD *)algn_25A8590 = v274;
  strcpy((char *)qword_25A8588, "Ending_Charge_Station_Port_Availability");
  qword_25A85A0 = (uint64_t)operator new(0x28uLL);
  unk_25A85A8 = v267;
  strcpy((char *)qword_25A85A0, "Ending_Charge_Station_No_Availability");
  qword_25A85B8 = (uint64_t)operator new(0x28uLL);
  unk_25A85C0 = v270;
  strcpy((char *)qword_25A85B8, "Ending_Charge_Station_No_Real_Time");
  byte_25A85E7 = 16;
  strcpy(byte_25A85D0, "{AvailablePorts}");
  byte_25A85FF = 12;
  strcpy((char *)&qword_25A85E8, "{TotalPorts}");
  byte_25A8617 = 14;
  strcpy((char *)&qword_25A8600, "{ManeuverIcon}");
  qword_25A8618 = (uint64_t)operator new(0x38uLL);
  unk_25A8620 = xmmword_20B9A60;
  strcpy((char *)qword_25A8618, "Walking_Distance_ManeuverIcon_PrimaryInstruction");
  qword_25A8630 = (uint64_t)operator new(0x20uLL);
  unk_25A8638 = v273;
  strcpy((char *)qword_25A8630, "Walking_Destination_Unnamed");
  qword_25A8648 = (uint64_t)operator new(0x20uLL);
  *(_OWORD *)algn_25A8650 = v275;
  strcpy((char *)qword_25A8648, "TrafficDelay_Label_Title_Sign");
  qword_25A8660 = (uint64_t)operator new(0x20uLL);
  unk_25A8668 = v277;
  strcpy((char *)qword_25A8660, "Special_Guidance_Instruction");
  byte_25A868F = 2;
  strcpy((char *)&word_25A8678, "CZ");
  byte_25A86A7 = 3;
  dword_25A8690 = 5919811;
  unk_25A86BF = 3;
  dword_25A86A8 = 6243649;
  byte_25A86D7 = 0;
  byte_25A86EF = 7;
  strcpy((char *)&dword_25A86D8, "TRANSIT");
  byte_25A8707 = 7;
  strcpy((char *)&dword_25A86F0, "OFFLINE");
  qword_25A8708 = (uint64_t)operator new(0x28uLL);
  *(_OWORD *)algn_25A8710 = v265;
  strcpy((char *)qword_25A8708, "Advisory_Card_French_Climate_Law_Title");
  qword_25A8720 = (uint64_t)operator new(0x30uLL);
  unk_25A8728 = xmmword_20B93C0;
  strcpy((char *)qword_25A8720, "Advisory_Card_French_Climate_Law_Details");
  qword_25A8738 = (uint64_t)operator new(0x30uLL);
  unk_25A8740 = v271;
  strcpy((char *)qword_25A8738, "French_Climate_Law_Metadata_Weblink_Title");
  qword_25A8750 = (uint64_t)operator new(0x20uLL);
  unk_25A8758 = v277;
  strcpy((char *)qword_25A8750, "{ClimateLawLearnMoreWeblink}");
  byte_25A877F = 3;
  dword_25A8768 = 4280902;
  qword_25A8780 = (uint64_t)operator new(0x70uLL);
  unk_25A8788 = xmmword_20E81E0;
  strcpy((char *)qword_25A8780, "https://www.vie-publique.fr/loi/278460-loi-22-aout-2021-climat-et-resilience-convention-citoyenne-climat");
  double result = *(double *)"ut-2021-climat-et-resilience-convention-citoyenne-climat";
  byte_25A87AF = 1;
  word_25A8798 = 65;
  byte_25A87C7 = 1;
  word_25A87B0 = 65;
  return result;
}

void sub_717AD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,void *a62,uint64_t a63)
{
  if (SLOBYTE(STACK[0x3B7]) < 0)
  {
    operator delete((void *)STACK[0x3A0]);
    if ((SLOBYTE(STACK[0x39F]) & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else if ((SLOBYTE(STACK[0x39F]) & 0x80000000) == 0)
  {
LABEL_3:
    if (SLOBYTE(STACK[0x387]) < 0) {
      goto LABEL_4;
    }
    goto LABEL_18;
  }
  operator delete((void *)STACK[0x388]);
  if (SLOBYTE(STACK[0x387]) < 0)
  {
LABEL_4:
    operator delete((void *)STACK[0x370]);
    if ((SLOBYTE(STACK[0x36F]) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  if ((SLOBYTE(STACK[0x36F]) & 0x80000000) == 0)
  {
LABEL_5:
    if (SLOBYTE(STACK[0x357]) < 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  operator delete((void *)STACK[0x358]);
  if (SLOBYTE(STACK[0x357]) < 0)
  {
LABEL_6:
    operator delete((void *)STACK[0x340]);
    if ((SLOBYTE(STACK[0x33F]) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  if ((SLOBYTE(STACK[0x33F]) & 0x80000000) == 0)
  {
LABEL_7:
    if (SLOBYTE(STACK[0x327]) < 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  operator delete((void *)STACK[0x328]);
  if (SLOBYTE(STACK[0x327]) < 0)
  {
LABEL_8:
    operator delete((void *)STACK[0x310]);
    if ((SLOBYTE(STACK[0x30F]) & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  if ((SLOBYTE(STACK[0x30F]) & 0x80000000) == 0)
  {
LABEL_9:
    if (SLOBYTE(STACK[0x2F7]) < 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  operator delete((void *)STACK[0x2F8]);
  if (SLOBYTE(STACK[0x2F7]) < 0)
  {
LABEL_10:
    operator delete((void *)STACK[0x2E0]);
    if ((SLOBYTE(STACK[0x2DF]) & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  if ((SLOBYTE(STACK[0x2DF]) & 0x80000000) == 0)
  {
LABEL_11:
    if (SLOBYTE(STACK[0x2C7]) < 0) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_25:
  operator delete((void *)STACK[0x2C8]);
  if (SLOBYTE(STACK[0x2C7]) < 0)
  {
LABEL_12:
    operator delete((void *)STACK[0x2B0]);
    if ((SLOBYTE(STACK[0x2AF]) & 0x80000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_27;
  }
LABEL_26:
  if ((SLOBYTE(STACK[0x2AF]) & 0x80000000) == 0)
  {
LABEL_13:
    if (SLOBYTE(STACK[0x297]) < 0) {
      goto LABEL_14;
    }
    goto LABEL_28;
  }
LABEL_27:
  operator delete((void *)STACK[0x298]);
  if (SLOBYTE(STACK[0x297]) < 0)
  {
LABEL_14:
    operator delete((void *)STACK[0x280]);
    if (SLOBYTE(STACK[0x27F]) < 0)
    {
LABEL_37:
      operator delete((void *)STACK[0x268]);
      if ((SLOBYTE(STACK[0x267]) & 0x80000000) == 0)
      {
LABEL_38:
        if (SLOBYTE(STACK[0x24F]) < 0)
        {
LABEL_39:
          operator delete((void *)STACK[0x238]);
          if ((SLOBYTE(STACK[0x237]) & 0x80000000) == 0)
          {
LABEL_40:
            if (SLOBYTE(STACK[0x21F]) < 0)
            {
LABEL_41:
              operator delete((void *)STACK[0x208]);
              if ((SLOBYTE(STACK[0x207]) & 0x80000000) == 0)
              {
LABEL_42:
                if (a72 < 0)
                {
LABEL_43:
                  operator delete(a71);
                  if (a70 < 0)
                  {
LABEL_44:
                    operator delete(a65);
                    _Unwind_Resume(a1);
                  }
LABEL_45:
                  _Unwind_Resume(a1);
                }
LABEL_35:
                if (a70 < 0) {
                  goto LABEL_44;
                }
                goto LABEL_45;
              }
LABEL_34:
              operator delete(a73);
              if (a72 < 0) {
                goto LABEL_43;
              }
              goto LABEL_35;
            }
LABEL_33:
            if ((SLOBYTE(STACK[0x207]) & 0x80000000) == 0) {
              goto LABEL_42;
            }
            goto LABEL_34;
          }
LABEL_32:
          operator delete((void *)STACK[0x220]);
          if (SLOBYTE(STACK[0x21F]) < 0) {
            goto LABEL_41;
          }
          goto LABEL_33;
        }
LABEL_31:
        if ((SLOBYTE(STACK[0x237]) & 0x80000000) == 0) {
          goto LABEL_40;
        }
        goto LABEL_32;
      }
LABEL_30:
      operator delete((void *)STACK[0x250]);
      if (SLOBYTE(STACK[0x24F]) < 0) {
        goto LABEL_39;
      }
      goto LABEL_31;
    }
LABEL_29:
    if ((SLOBYTE(STACK[0x267]) & 0x80000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_30;
  }
LABEL_28:
  if (SLOBYTE(STACK[0x27F]) < 0) {
    goto LABEL_37;
  }
  goto LABEL_29;
}

void sub_717DA4(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
  sub_717FEC(a1, a2, &v27);
  size_t v5 = v27;
  unint64_t v6 = v28;
  if (v27 != v28)
  {
    long long v7 = (uint64_t *)((char *)v27 + 8);
    do
    {
      uint64_t v9 = 0;
      unint64_t v10 = 0;
      if (*(int *)v7 <= 1) {
        int v11 = 1;
      }
      else {
        int v11 = *(_DWORD *)v7;
      }
      uint64_t v12 = *a2;
      unint64_t v13 = -1 - 0x5555555555555555 * ((a2[1] - *a2) >> 2);
      uint64_t v14 = v7[1];
      if (v14 + 1 < v13) {
        unint64_t v13 = v14 + 1;
      }
      size_t v25 = 0;
      unint64_t v26 = 0;
      uint64_t v15 = (v11 - 1);
      size_t v24 = 0;
      if (v13 != v15)
      {
        uint64_t v16 = (const void *)(v12 + 12 * v15);
        int64_t v17 = 12 * v13 - 12 * v15;
        if (0xAAAAAAAAAAAAAAABLL * (v17 >> 2) >= 0x1555555555555556) {
          sub_2E00();
        }
        uint64_t v9 = (char *)operator new(12 * v13 - 12 * v15);
        size_t v24 = v9;
        size_t v25 = v9;
        unint64_t v10 = &v9[4 * (v17 >> 2)];
        unint64_t v26 = v10;
        memmove(v9, v16, v17);
        size_t v25 = v10;
      }
      if (0xAAAAAAAAAAAAAAABLL * ((v10 - v9) >> 2) >= 2)
      {
        sub_718D30(a1, (unint64_t *)v7 - 1, (uint64_t *)&v24, a3, &__p);
        std::string v18 = __p;
        if (__p != v23)
        {
          sub_718F24((uint64_t)a4, v7, (const void **)&__p);
          std::string v18 = __p;
        }
        if (v18)
        {
          int v23 = v18;
          operator delete(v18);
        }
        uint64_t v9 = v24;
      }
      if (v9)
      {
        size_t v25 = v9;
        operator delete(v9);
      }
      uint64_t v8 = v7 + 2;
      v7 += 3;
    }
    while (v8 != v6);
    size_t v5 = v27;
  }
  if (v5) {
    operator delete(v5);
  }
}

void sub_717F54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void sub_717F68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void **a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, void *a18)
{
  if (__p)
  {
    operator delete(__p);
    long long v19 = a15;
    if (!a15)
    {
LABEL_3:
      std::string::size_type v20 = a18;
      if (!a18) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else
  {
    long long v19 = a15;
    if (!a15) {
      goto LABEL_3;
    }
  }
  operator delete(v19);
  std::string::size_type v20 = a18;
  if (!a18)
  {
LABEL_4:
    sub_38358(a9);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(v20);
  sub_38358(a9);
  _Unwind_Resume(a1);
}

void sub_717FEC(uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  v155[0] = 0;
  v155[1] = 0;
  uint64_t v156 = 0;
  *(void *)&long long v153 = 0xFFFFFFFF00000000;
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[1] - *a2) >> 2);
  int v157 = 0;
  size_t v158 = 0;
  unint64_t v159 = 0;
  sub_71A408(&v151, v4, (uint64_t)&v157);
  if (v157)
  {
    size_t v158 = v157;
    operator delete(v157);
  }
  uint64_t v5 = a2[1] - *a2;
  if (v5)
  {
    uint64_t v6 = 0;
    unint64_t v142 = 0xAAAAAAAAAAAAAAABLL * (v5 >> 2);
    uint64_t v7 = v3 + 16;
    do
    {
      uint64_t v8 = (_DWORD *)(*a2 + 12 * v6);
      std::string::size_type v150 = (char *)v151 + 24 * v6;
      *((void *)v150 + 1) = *(void *)v150;
      unint64_t v144 = v8;
      sub_518C8(*v8 >> 17, v8[1] >> 17);
      uint64_t v148 = v6;
      unsigned int v10 = v9 | 0x40000000;
      do
      {
        LODWORD(v160) = v10;
        v161[0] = 1;
        int v157 = v161;
        size_t v158 = (int *)&v160;
        unint64_t v12 = *(void *)(v3 + 3856) + 1;
        *(void *)(v3 + 3856) = v12;
        if (!*(void *)v3)
        {
LABEL_6:
          sub_2A7768(&v157);
          goto LABEL_7;
        }
        if (*(_DWORD *)(v3 + 2800) == v10)
        {
          unsigned int v13 = 116;
          goto LABEL_18;
        }
        if (*(_DWORD *)(v3 + 2824) == v10)
        {
          unsigned int v13 = 117;
          goto LABEL_18;
        }
        if (*(_DWORD *)(v3 + 2848) == v10)
        {
          unsigned int v13 = 118;
          goto LABEL_18;
        }
        if (*(_DWORD *)(v3 + 2872) == v10)
        {
          unsigned int v13 = 119;
LABEL_18:
          ++*(void *)(v3 + 3864);
          uint64_t v14 = v7 + 24 * v13;
          *(void *)(v14 + 8) = v12;
          uint64_t v15 = *(unsigned int **)(v14 + 16);
          if (!v15) {
            goto LABEL_6;
          }
          goto LABEL_19;
        }
        unint64_t v19 = *(void *)(v3 + 2856);
        unint64_t v20 = *(void *)(v3 + 2832);
        unint64_t v21 = *(void *)(v3 + 2808);
        unint64_t v22 = *(void *)(v3 + 2880);
        uint64_t v15 = (unsigned int *)sub_2AB884(*(void *)v3, 29, v10, 1);
        if (v21 >= v12) {
          unint64_t v23 = v12;
        }
        else {
          unint64_t v23 = v21;
        }
        int v24 = 116;
        if (v21 >= v12) {
          int v24 = 0;
        }
        if (v20 < v23)
        {
          unint64_t v23 = v20;
          int v24 = 117;
        }
        if (v19 < v23)
        {
          int v24 = 118;
          unint64_t v23 = v19;
        }
        BOOL v11 = v22 >= v23;
        unsigned int v25 = 119;
        if (v11) {
          unsigned int v25 = v24;
        }
        uint64_t v26 = v7 + 24 * v25;
        *(_DWORD *)uint64_t v26 = v160;
        unint64_t v12 = *(void *)(v3 + 3856);
        *(void *)(v26 + 8) = v12;
        *(void *)(v26 + 16) = v15;
        if (!v15) {
          goto LABEL_6;
        }
LABEL_19:
        uint64_t v16 = (unsigned __int16 *)((char *)v15 + *v15 - *(unsigned int *)((char *)v15 + *v15));
        if (*v16 < 5u || !v16[2]) {
          goto LABEL_7;
        }
        LODWORD(v160) = v10;
        v161[0] = 1;
        int v157 = v161;
        size_t v158 = (int *)&v160;
        unint64_t v17 = v12 + 1;
        *(void *)(v3 + 3856) = v17;
        if (!*(void *)v3) {
          goto LABEL_93;
        }
        if (*(_DWORD *)(v3 + 2800) == v10)
        {
          unsigned int v18 = 116;
          goto LABEL_44;
        }
        if (*(_DWORD *)(v3 + 2824) == v10)
        {
          unsigned int v18 = 117;
          goto LABEL_44;
        }
        if (*(_DWORD *)(v3 + 2848) == v10)
        {
          unsigned int v18 = 118;
          goto LABEL_44;
        }
        if (*(_DWORD *)(v3 + 2872) == v10)
        {
          unsigned int v18 = 119;
LABEL_44:
          ++*(void *)(v3 + 3864);
          uint64_t v27 = v7 + 24 * v18;
          *(void *)(v27 + 8) = v17;
          __n128 v28 = *(unsigned int **)(v27 + 16);
          if (!v28) {
            goto LABEL_93;
          }
          goto LABEL_45;
        }
        unint64_t v63 = *(void *)(v3 + 2856);
        unint64_t v64 = *(void *)(v3 + 2832);
        unint64_t v65 = *(void *)(v3 + 2808);
        unint64_t v66 = *(void *)(v3 + 2880);
        __n128 v28 = (unsigned int *)sub_2AB884(*(void *)v3, 29, v10, 1);
        if (v65 >= v17) {
          unint64_t v67 = v17;
        }
        else {
          unint64_t v67 = v65;
        }
        int v68 = 116;
        if (v65 >= v17) {
          int v68 = 0;
        }
        if (v64 < v67)
        {
          unint64_t v67 = v64;
          int v68 = 117;
        }
        if (v63 < v67)
        {
          int v68 = 118;
          unint64_t v67 = v63;
        }
        BOOL v11 = v66 >= v67;
        unsigned int v69 = 119;
        if (v11) {
          unsigned int v69 = v68;
        }
        uint64_t v70 = v7 + 24 * v69;
        *(_DWORD *)uint64_t v70 = v160;
        *(void *)(v70 + 8) = *(void *)(v3 + 3856);
        *(void *)(v70 + 16) = v28;
        if (!v28)
        {
LABEL_93:
          sub_2A7768(&v157);
LABEL_94:
          int64_t v40 = 0;
          goto LABEL_95;
        }
LABEL_45:
        uint64_t v29 = (int *)((char *)v28 + *v28);
        std::string::size_type v30 = (unsigned __int16 *)((char *)v29 - *v29);
        if (*v30 < 5u) {
          goto LABEL_94;
        }
        uint64_t v31 = v30[2];
        if (!v31) {
          goto LABEL_94;
        }
        size_t v32 = (int *)((char *)v29 + v31 + *(unsigned int *)((char *)v29 + v31));
        unint64_t v33 = (unsigned __int16 *)((char *)v32 - *v32);
        if (*v33 < 7u) {
          goto LABEL_94;
        }
        uint64_t v34 = v33[3];
        if (!v34) {
          goto LABEL_94;
        }
        uint64_t v35 = (unsigned int *)((char *)v32 + v34 + *(unsigned int *)((char *)v32 + v34));
        uint64_t v36 = *v35;
        if (!v36) {
          goto LABEL_94;
        }
        uint64_t v37 = 8 * v36;
        BOOL v38 = (int *)operator new(8 * v36);
        int v157 = v38;
        size_t v158 = v38;
        unint64_t v159 = &v38[2 * v36];
        uint64_t v39 = (uint64_t *)(v35 + 1);
        do
        {
          uint64_t v160 = *v39;
          BOOL v38 = (int *)(sub_2A8034((unint64_t *)&v157, v38, &v160) + 8);
          ++v39;
          v37 -= 8;
        }
        while (v37);
        int64_t v40 = (unint64_t *)v157;
        double v145 = v158;
        if (v157 != v158)
        {
          long long __p = v157;
          char v41 = (unint64_t **)v150;
          while (2)
          {
            if (!sub_2A5F28(*a1, *v40)) {
              goto LABEL_56;
            }
            unint64_t v44 = v41[1];
            unint64_t v43 = (unint64_t)v41[2];
            if ((unint64_t)v44 < v43)
            {
              *unint64_t v44 = *v40;
              uint64_t v42 = (uint64_t)(v44 + 1);
              goto LABEL_55;
            }
            uint64_t v45 = *v41;
            uint64_t v46 = (char *)v44 - (char *)*v41;
            uint64_t v47 = v46 >> 3;
            unint64_t v48 = (v46 >> 3) + 1;
            if (v48 >> 61) {
              sub_2E00();
            }
            uint64_t v49 = v43 - (void)v45;
            if (v49 >> 2 > v48) {
              unint64_t v48 = v49 >> 2;
            }
            if ((unint64_t)v49 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v50 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v50 = v48;
            }
            if (v50)
            {
              if (v50 >> 61) {
                sub_188D718();
              }
              unint64_t v51 = v50;
              size_t v52 = operator new(8 * v50);
              unint64_t v50 = v51;
              int v53 = (unint64_t *)&v52[8 * v47];
              unint64_t *v53 = *v40;
              uint64_t v42 = (uint64_t)(v53 + 1);
              if (v44 != v45)
              {
LABEL_68:
                unint64_t v54 = (char *)(v44 - 1) - (char *)v45;
                if (v54 < 0x58) {
                  goto LABEL_208;
                }
                if ((unint64_t)((char *)v44 - &v52[v46]) < 0x20) {
                  goto LABEL_208;
                }
                uint64_t v55 = (v54 >> 3) + 1;
                uint64_t v56 = 8 * (v55 & 0x3FFFFFFFFFFFFFFCLL);
                uint64_t v57 = &v44[v56 / 0xFFFFFFFFFFFFFFF8];
                int v53 = (unint64_t *)((char *)v53 - v56);
                uint64_t v58 = &v52[8 * v47 - 16];
                long long v59 = v44 - 2;
                uint64_t v60 = v55 & 0x3FFFFFFFFFFFFFFCLL;
                do
                {
                  long long v61 = *(_OWORD *)v59;
                  *(v58 - 1) = *((_OWORD *)v59 - 1);
                  *uint64_t v58 = v61;
                  v58 -= 2;
                  v59 -= 4;
                  v60 -= 4;
                }
                while (v60);
                unint64_t v44 = v57;
                if (v55 != (v55 & 0x3FFFFFFFFFFFFFFCLL))
                {
LABEL_208:
                  do
                  {
                    unint64_t v62 = *--v44;
                    *--int v53 = v62;
                  }
                  while (v44 != v45);
                }
                unint64_t v44 = *(unint64_t **)v150;
                *(void *)std::string::size_type v150 = v53;
                *((void *)v150 + 1) = v42;
                *((void *)v150 + 2) = &v52[8 * v50];
                if (v44) {
LABEL_79:
                }
                  operator delete(v44);
LABEL_55:
                *((void *)v150 + 1) = v42;
                char v41 = (unint64_t **)v150;
LABEL_56:
                if (++v40 == (unint64_t *)v145)
                {
                  int64_t v40 = (unint64_t *)__p;
                  goto LABEL_95;
                }
                continue;
              }
            }
            else
            {
              size_t v52 = 0;
              int v53 = (unint64_t *)(8 * v47);
              *(void *)(8 * v47) = *v40;
              uint64_t v42 = 8 * v47 + 8;
              if (v44 != v45) {
                goto LABEL_68;
              }
            }
            break;
          }
          *(void *)std::string::size_type v150 = v53;
          *((void *)v150 + 1) = v42;
          *((void *)v150 + 2) = &v52[8 * v50];
          if (v44) {
            goto LABEL_79;
          }
          goto LABEL_55;
        }
LABEL_95:
        LODWORD(v160) = v10;
        v161[0] = 1;
        int v157 = v161;
        size_t v158 = (int *)&v160;
        unint64_t v71 = *(void *)(v3 + 3856) + 1;
        *(void *)(v3 + 3856) = v71;
        if (!*(void *)v3) {
          goto LABEL_154;
        }
        if (*(_DWORD *)(v3 + 2800) == v10)
        {
          unsigned int v72 = 116;
          goto LABEL_104;
        }
        if (*(_DWORD *)(v3 + 2824) == v10)
        {
          unsigned int v72 = 117;
          goto LABEL_104;
        }
        if (*(_DWORD *)(v3 + 2848) == v10)
        {
          unsigned int v72 = 118;
          goto LABEL_104;
        }
        if (*(_DWORD *)(v3 + 2872) == v10)
        {
          unsigned int v72 = 119;
LABEL_104:
          ++*(void *)(v3 + 3864);
          uint64_t v73 = v7 + 24 * v72;
          *(void *)(v73 + 8) = v71;
          int v74 = *(unsigned int **)(v73 + 16);
          if (v74) {
            goto LABEL_105;
          }
          goto LABEL_154;
        }
        unint64_t v109 = *(void *)(v3 + 2856);
        unint64_t v110 = *(void *)(v3 + 2832);
        unint64_t v111 = *(void *)(v3 + 2808);
        unint64_t v147 = *(void *)(v3 + 2880);
        int v74 = (unsigned int *)sub_2AB884(*(void *)v3, 29, v10, 1);
        if (v111 >= v71) {
          unint64_t v112 = v71;
        }
        else {
          unint64_t v112 = v111;
        }
        int v113 = 116;
        if (v111 >= v71) {
          int v113 = 0;
        }
        if (v110 < v112)
        {
          unint64_t v112 = v110;
          int v113 = 117;
        }
        if (v109 < v112)
        {
          int v113 = 118;
          unint64_t v112 = v109;
        }
        BOOL v11 = v147 >= v112;
        unsigned int v114 = 119;
        if (v11) {
          unsigned int v114 = v113;
        }
        uint64_t v115 = v7 + 24 * v114;
        *(_DWORD *)uint64_t v115 = v160;
        *(void *)(v115 + 8) = *(void *)(v3 + 3856);
        *(void *)(v115 + 16) = v74;
        if (v74)
        {
LABEL_105:
          int64_t v75 = (int *)((char *)v74 + *v74);
          long long v76 = (unsigned __int16 *)((char *)v75 - *v75);
          if (*v76 >= 5u)
          {
            uint64_t v77 = v76[2];
            if (v77)
            {
              size_t v78 = (int *)((char *)v75 + v77 + *(unsigned int *)((char *)v75 + v77));
              int v79 = (unsigned __int16 *)((char *)v78 - *v78);
              if (*v79 >= 9u)
              {
                uint64_t v80 = v79[4];
                if (v80)
                {
                  unint64_t v81 = (unsigned int *)((char *)v78 + v80 + *(unsigned int *)((char *)v78 + v80));
                  uint64_t v82 = *v81;
                  if (v82)
                  {
                    uint64_t v83 = 8 * v82;
                    unsigned int v84 = (int *)operator new(8 * v82);
                    int v157 = v84;
                    size_t v158 = v84;
                    unint64_t v159 = &v84[2 * v82];
                    unint64_t v85 = (uint64_t *)(v81 + 1);
                    do
                    {
                      uint64_t v160 = *v85;
                      unsigned int v84 = (int *)(sub_2A8034((unint64_t *)&v157, v84, &v160) + 8);
                      ++v85;
                      v83 -= 8;
                    }
                    while (v83);
                    __pa = v157;
                    double v146 = v158;
                    int v86 = v150;
                    if (v157 != v158)
                    {
                      size_t v87 = (int **)v157;
                      while (2)
                      {
                        int v157 = *v87;
                        if (!sub_2A5F28(*a1, (unint64_t)v157)
                          || !sub_71A67C(v3, (unint64_t *)&v157, v144))
                        {
                          goto LABEL_114;
                        }
                        double v89 = (char *)v86[1];
                        unint64_t v88 = v86[2];
                        if ((unint64_t)v89 < v88)
                        {
                          *(void *)double v89 = *v87;
                          uint64_t v90 = (uint64_t)(v89 + 8);
                          goto LABEL_140;
                        }
                        uint64_t v91 = (char *)*v86;
                        uint64_t v92 = (uint64_t)&v89[-*v86];
                        uint64_t v93 = v92 >> 3;
                        unint64_t v94 = (v92 >> 3) + 1;
                        if (v94 >> 61) {
                          sub_2E00();
                        }
                        uint64_t v95 = v88 - (void)v91;
                        if (v95 >> 2 > v94) {
                          unint64_t v94 = v95 >> 2;
                        }
                        if ((unint64_t)v95 >= 0x7FFFFFFFFFFFFFF8) {
                          unint64_t v96 = 0x1FFFFFFFFFFFFFFFLL;
                        }
                        else {
                          unint64_t v96 = v94;
                        }
                        if (v96)
                        {
                          if (v96 >> 61) {
                            sub_188D718();
                          }
                          unint64_t v97 = v96;
                          uint64_t v98 = operator new(8 * v96);
                          unint64_t v96 = v97;
                          uint64_t v99 = (int **)&v98[8 * v93];
                          *uint64_t v99 = *v87;
                          uint64_t v90 = (uint64_t)(v99 + 1);
                          if (v89 != v91)
                          {
LABEL_128:
                            unint64_t v100 = v89 - 8 - v91;
                            if (v100 < 0x58) {
                              goto LABEL_209;
                            }
                            if ((unint64_t)(v89 - &v98[v92]) < 0x20) {
                              goto LABEL_209;
                            }
                            uint64_t v101 = (v100 >> 3) + 1;
                            uint64_t v102 = 8 * (v101 & 0x3FFFFFFFFFFFFFFCLL);
                            uint64_t v103 = &v89[-v102];
                            uint64_t v99 = (int **)((char *)v99 - v102);
                            uint64_t v104 = &v98[8 * v93 - 16];
                            uint64_t v105 = v89 - 16;
                            uint64_t v106 = v101 & 0x3FFFFFFFFFFFFFFCLL;
                            do
                            {
                              long long v107 = *(_OWORD *)v105;
                              *(v104 - 1) = *((_OWORD *)v105 - 1);
                              *uint64_t v104 = v107;
                              v104 -= 2;
                              v105 -= 32;
                              v106 -= 4;
                            }
                            while (v106);
                            double v89 = v103;
                            if (v101 != (v101 & 0x3FFFFFFFFFFFFFFCLL))
                            {
LABEL_209:
                              do
                              {
                                size_t v108 = (int *)*((void *)v89 - 1);
                                v89 -= 8;
                                *--uint64_t v99 = v108;
                              }
                              while (v89 != v91);
                            }
                            double v89 = *(char **)v150;
                            *(void *)std::string::size_type v150 = v99;
                            *((void *)v150 + 1) = v90;
                            *((void *)v150 + 2) = &v98[8 * v96];
                            if (v89) {
LABEL_139:
                            }
                              operator delete(v89);
LABEL_140:
                            *((void *)v150 + 1) = v90;
                            int v86 = v150;
LABEL_114:
                            if (++v87 == (int **)v146) {
                              goto LABEL_157;
                            }
                            continue;
                          }
                        }
                        else
                        {
                          uint64_t v98 = 0;
                          uint64_t v99 = (int **)(8 * v93);
                          *(void *)(8 * v93) = *v87;
                          uint64_t v90 = 8 * v93 + 8;
                          if (v89 != v91) {
                            goto LABEL_128;
                          }
                        }
                        break;
                      }
                      *(void *)std::string::size_type v150 = v99;
                      *((void *)v150 + 1) = v90;
                      *((void *)v150 + 2) = &v98[8 * v96];
                      if (v89) {
                        goto LABEL_139;
                      }
                      goto LABEL_140;
                    }
LABEL_157:
                    if (__pa) {
                      operator delete(__pa);
                    }
                  }
                }
              }
            }
          }
          goto LABEL_155;
        }
LABEL_154:
        sub_2A7768(&v157);
LABEL_155:
        if (v40) {
          operator delete(v40);
        }
LABEL_7:
        BOOL v11 = v10 >= 4;
        v10 >>= 2;
      }
      while (v11);
      sub_71A55C((int8x16_t **)v150);
      uint64_t v116 = (char *)v151 + 24 * v148;
      long long v117 = *(int8x16_t **)v116;
      int v118 = (int8x16_t *)*((void *)v116 + 1);
      unint64_t v119 = 126 - 2 * __clz(((uint64_t)v118->i64 - *(void *)v116) >> 3);
      if (v118 == v117) {
        uint64_t v120 = 0;
      }
      else {
        uint64_t v120 = v119;
      }
      sub_2A875C(v117, v118, (uint64_t)&v157, v120, 1);
      uint64_t v6 = v148 + 1;
    }
    while (v148 + 1 != v142);
  }
  uint64_t v122 = (unint64_t **)v151;
  int v121 = v152;
  unint64_t v123 = 0xAAAAAAAAAAAAAAABLL * (((char *)v152 - (unsigned char *)v151) >> 3);
  if (v123 >= 2)
  {
    do
    {
      uint64_t v125 = -2;
      uint64_t v126 = 1;
      while (!sub_2A6064(v3, v126 - 1, v126, (uint64_t *)&v151)
           && !sub_2A6064(v3, v125 - 0x5555555555555555 * (((char *)v152 - (unsigned char *)v151) >> 3) + 1, v125 - 0x5555555555555555 * (((char *)v152 - (unsigned char *)v151) >> 3), (uint64_t *)&v151))
      {
        ++v126;
        --v125;
        if (v123 == v126)
        {
          uint64_t v122 = (unint64_t **)v151;
          int v121 = v152;
          goto LABEL_175;
        }
      }
      uint64_t v122 = (unint64_t **)v151;
      int v121 = v152;
      unint64_t v124 = 0xAAAAAAAAAAAAAAABLL * (((char *)v152 - (unsigned char *)v151) >> 3);
      if (v124 <= 1) {
        unint64_t v123 = 1;
      }
      else {
        unint64_t v123 = 0xAAAAAAAAAAAAAAABLL * (((char *)v152 - (unsigned char *)v151) >> 3);
      }
    }
    while (v124 >= 2);
  }
LABEL_175:
  if (v122 == v121) {
    goto LABEL_188;
  }
  int v127 = v122;
  while (*v127 == v127[1])
  {
    v127 += 3;
    if (v127 == v121) {
      goto LABEL_188;
    }
  }
  if (v127 == v121)
  {
LABEL_188:
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    if (!v122) {
      goto LABEL_196;
    }
    goto LABEL_189;
  }
  unint64_t v128 = 0;
  long long v153 = **v127;
  uint64_t v129 = (unsigned __int128)(((char *)v121 - (char *)v122) * (__int128)0x2AAAAAAAAAAAAAABLL) >> 64;
  uint64_t v130 = (v129 >> 2) + ((unint64_t)v129 >> 63);
  while (1)
  {
    unint64_t v131 = (void *)sub_719014(&v151, v128);
    if (v131[1] - *v131 == 8)
    {
      unsigned int v132 = (void **)sub_719014(&v151, v128);
      uint64_t v133 = *v132;
      if (**v132 != (void)v153 || v128 == -1 - 0x5555555555555555 * (((char *)v152 - (unsigned char *)v151) >> 3))
      {
        unint64_t v154 = v128;
        sub_3B5710((char **)v155, &v153);
        *(void *)&long long v153 = *v133;
        *((void *)&v153 + 1) = v128;
        unint64_t v154 = 0;
      }
      goto LABEL_183;
    }
    if (v128 == -1 - 0x5555555555555555 * (((char *)v152 - (unsigned char *)v151) >> 3)) {
      break;
    }
LABEL_183:
    if (v130 == ++v128) {
      goto LABEL_200;
    }
  }
  unint64_t v154 = v128 + 1;
  sub_3B5710((char **)v155, &v153);
LABEL_200:
  *(_OWORD *)a3 = *(_OWORD *)v155;
  a3[2] = v156;
  v155[1] = 0;
  uint64_t v156 = 0;
  v155[0] = 0;
  uint64_t v122 = (unint64_t **)v151;
  if (v151)
  {
LABEL_189:
    uint64_t v134 = v152;
    uint64_t v135 = v122;
    if (v152 != v122)
    {
      int v136 = v152;
      do
      {
        int v138 = *(v136 - 3);
        v136 -= 3;
        std::string::size_type v137 = v138;
        if (v138)
        {
          *(v134 - 2) = v137;
          operator delete(v137);
        }
        uint64_t v134 = v136;
      }
      while (v136 != v122);
      uint64_t v135 = v151;
    }
    long long v152 = v122;
    operator delete(v135);
  }
LABEL_196:
  if (v155[0])
  {
    v155[1] = v155[0];
    operator delete(v155[0]);
  }
}

void sub_718C5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26)
{
  if (__p)
  {
    a26 = (uint64_t)__p;
    operator delete(__p);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_718D30(uint64_t *a1@<X0>, unint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  sub_719244(a1, a2, a3, (uint64_t)&v18);
  if (*(unsigned char *)(a4 + 24))
  {
    sub_719244(a1, a2, (uint64_t *)a4, (uint64_t)__p);
    int v9 = 1;
    BYTE8(v21) = 1;
    *(_OWORD *)unint64_t v20 = *(_OWORD *)__p;
    *(void *)&long long v21 = v17;
  }
  else
  {
    int v9 = 0;
    *(_OWORD *)unint64_t v20 = 0u;
    long long v21 = 0u;
  }
  if (0xAAAAAAAAAAAAAAABLL * ((v19 - (unsigned char *)v18) >> 2) > 1)
  {
    sub_2A67A4(*a1, *a2, (uint64_t)__p);
    unsigned int v10 = (char *)__p[0];
    if (__p[0] == __p[1])
    {
      *a5 = 0;
      a5[1] = 0;
      a5[2] = 0;
      if (!v10)
      {
LABEL_17:
        int v9 = BYTE8(v21);
        goto LABEL_18;
      }
    }
    else
    {
      sub_719338((double *)a1, (uint64_t *)__p, &v18, (uint64_t)v20, a5);
      unsigned int v10 = (char *)__p[0];
      if (!__p[0]) {
        goto LABEL_17;
      }
    }
    BOOL v11 = __p[1];
    unint64_t v12 = v10;
    if (__p[1] != v10)
    {
      unsigned int v13 = (char *)__p[1];
      do
      {
        uint64_t v15 = (void *)*((void *)v13 - 3);
        v13 -= 24;
        uint64_t v14 = v15;
        if (v15)
        {
          *(v11 - 2) = v14;
          operator delete(v14);
        }
        BOOL v11 = v13;
      }
      while (v13 != v10);
      unint64_t v12 = (char *)__p[0];
    }
    __p[1] = v10;
    operator delete(v12);
    goto LABEL_17;
  }
  *a5 = 0;
  a5[1] = 0;
  a5[2] = 0;
LABEL_18:
  if (v9 && v20[0])
  {
    v20[1] = v20[0];
    operator delete(v20[0]);
  }
  if (v18)
  {
    unint64_t v19 = v18;
    operator delete(v18);
  }
}

void sub_718EC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, uint64_t a17, char a18)
{
  if (a18 && __p)
  {
    a16 = (uint64_t)__p;
    operator delete(__p);
  }
  if (a12)
  {
    a13 = (uint64_t)a12;
    operator delete(a12);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void *sub_718F24(uint64_t a1, uint64_t *a2, const void **a3)
{
  unint64_t v4 = *(void **)(a1 + 8);
  if ((unint64_t)v4 >= *(void *)(a1 + 16))
  {
    BOOL v11 = sub_71A1CC((void **)a1, a2, (uint64_t)a3);
  }
  else
  {
    uint64_t v5 = *a2;
    v4[1] = 0;
    *unint64_t v4 = v5;
    v4[2] = 0;
    v4[3] = 0;
    uint64_t v7 = *a3;
    uint64_t v6 = a3[1];
    int64_t v8 = v6 - (unsigned char *)*a3;
    if (v6 != *a3)
    {
      if (0xAAAAAAAAAAAAAAABLL * (v8 >> 2) >= 0x1555555555555556) {
        sub_2E00();
      }
      int v9 = (char *)operator new(v8);
      v4[1] = v9;
      v4[2] = v9;
      unsigned int v10 = &v9[4 * (v8 >> 2)];
      v4[3] = v10;
      memcpy(v9, v7, v8);
      v4[2] = v10;
    }
    BOOL v11 = v4 + 4;
    *(void *)(a1 + 8) = v4 + 4;
  }
  *(void *)(a1 + 8) = v11;
  return v11 - 4;
}

void sub_718FF4(_Unwind_Exception *exception_object)
{
  uint64_t v5 = *v2;
  if (*v2)
  {
    *(void *)(v3 + 16) = v5;
    operator delete(v5);
  }
  *(void *)(v1 + 8) = v3;
  _Unwind_Resume(exception_object);
}

uint64_t sub_719014(void *a1, unint64_t a2)
{
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1[1] - *a1) >> 3) <= a2)
  {
    exception = __cxa_allocate_exception(0x40uLL);
    std::to_string(&v16, a2);
    uint64_t v6 = std::string::insert(&v16, 0, "Out-of-bounds access in Vector::at with index=");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v17.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    int64_t v8 = std::string::append(&v17, ",size=");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v18.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v18.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v15, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1[1] - *a1) >> 3));
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      unsigned int v10 = &v15;
    }
    else {
      unsigned int v10 = (std::string *)v15.__r_.__value_.__r.__words[0];
    }
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v15.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v15.__r_.__value_.__l.__size_;
    }
    unint64_t v12 = std::string::append(&v18, (const std::string::value_type *)v10, size);
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    std::string::size_type v20 = v12->__r_.__value_.__r.__words[2];
    long long v19 = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    uint64_t v14 = (void *)sub_2F404((uint64_t)exception, &v19);
  }
  return *a1 + 24 * a2;
}

void sub_719164(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 41) < 0) {
    operator delete(*(void **)(v33 - 64));
  }
  if (a14 < 0)
  {
    operator delete(a9);
    if ((a33 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a26 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_10;
    }
  }
  else if ((a33 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(a28);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_7;
  }
LABEL_10:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0) {
LABEL_11:
  }
    _Unwind_Resume(a1);
LABEL_7:
  operator delete(__p);
  goto LABEL_11;
}

void sub_719244(uint64_t *a1@<X0>, unint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  sub_2A65AC(*a1, *a2, &__p);
  sub_719898((uint64_t)&__p, a3, a4);
  uint64_t v6 = (void **)__p;
  if (__p)
  {
    long long v7 = v18;
    int64_t v8 = __p;
    if (v18 != __p)
    {
      long long v9 = v18;
      do
      {
        unint64_t v12 = (char *)*(v9 - 3);
        v9 -= 3;
        BOOL v11 = v12;
        if (v12)
        {
          long long v13 = (char *)*(v7 - 2);
          unsigned int v10 = v11;
          if (v13 != v11)
          {
            uint64_t v14 = (char *)*(v7 - 2);
            do
            {
              std::string v16 = (void *)*((void *)v14 - 3);
              v14 -= 24;
              std::string v15 = v16;
              if (v16)
              {
                *((void *)v13 - 2) = v15;
                operator delete(v15);
              }
              long long v13 = v14;
            }
            while (v14 != v11);
            unsigned int v10 = *v9;
          }
          *(v7 - 2) = v11;
          operator delete(v10);
        }
        long long v7 = v9;
      }
      while (v9 != v6);
      int64_t v8 = __p;
    }
    std::string v18 = v6;
    operator delete(v8);
  }
}

void sub_719324(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_4CBF8((void ***)va);
  _Unwind_Resume(a1);
}

void sub_719338(double *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  sub_4D4C4(&__p, a2);
  long long v9 = (_DWORD *)*a3;
  uint64_t v10 = a3[1];
  unsigned int v11 = *(_DWORD *)(v10 - 12) - *(_DWORD *)*a3;
  if (v11)
  {
    unsigned int v13 = *(_DWORD *)(v10 - 8);
    unsigned int v12 = v9[1];
  }
  else
  {
    unsigned int v12 = v9[1];
    unsigned int v13 = *(_DWORD *)(v10 - 8);
    double i = 0.0;
    if (v12 == v13) {
      goto LABEL_11;
    }
  }
  double v15 = -(double)-v11;
  if (v11 < -v11) {
    double v15 = (double)v11;
  }
  for (double i = (atan2((double)v13 - (double)v12, v15) + 1.57079633) * 180.0 / 3.14159265; i >= 180.0; double i = i + -360.0)
    ;
  for (; i < -180.0; double i = i + 360.0)
    ;
LABEL_11:
  double v54 = i;
  std::string v16 = __p;
  std::string v17 = v56;
  if (__p == v56)
  {
    uint64_t v57 = &v54;
    uint64_t v58 = a1;
    goto LABEL_42;
  }
  do
  {
    std::string v18 = (_DWORD *)*v16;
    uint64_t v19 = v16[1];
    unsigned int v20 = *(_DWORD *)(v19 - 12) - *(_DWORD *)*v16;
    if (v20)
    {
      unsigned int v22 = *(_DWORD *)(v19 - 8);
      unsigned int v21 = v18[1];
    }
    else
    {
      unsigned int v21 = v18[1];
      unsigned int v22 = *(_DWORD *)(v19 - 8);
      double j = 0.0;
      if (v21 == v22) {
        goto LABEL_25;
      }
    }
    double v24 = -(double)-v20;
    if (v20 < -v20) {
      double v24 = (double)v20;
    }
    for (double j = (atan2((double)v22 - (double)v21, v24) + 1.57079633) * 180.0 / 3.14159265; j >= 180.0; double j = j + -360.0)
      ;
    while (j < -180.0)
      double j = j + 360.0;
LABEL_25:
    double v25 = j + 180.0;
    double v26 = v25 + -360.0;
    if (v25 <= 360.0) {
      double v26 = v25;
    }
    sub_440F0(v54, v26);
    if (v27 < a1[1])
    {
      __n128 v28 = (_DWORD *)*v16;
      uint64_t v29 = v16[1];
      unint64_t v30 = v29 - 12;
      if (*v16 != v29 && v30 > (unint64_t)v28)
      {
        size_t v32 = v28 + 3;
        do
        {
          int v33 = *(v32 - 1);
          uint64_t v34 = *(void *)(v32 - 3);
          int v35 = *(_DWORD *)(v30 + 8);
          *(void *)(v32 - 3) = *(void *)v30;
          *(v32 - 1) = v35;
          *(void *)unint64_t v30 = v34;
          *(_DWORD *)(v30 + 8) = v33;
          v30 -= 12;
          BOOL v36 = (unint64_t)v32 >= v30;
          v32 += 3;
        }
        while (!v36);
      }
    }
    v16 += 3;
  }
  while (v16 != v17);
  std::string v16 = __p;
  uint64_t v37 = v56;
  uint64_t v57 = &v54;
  uint64_t v58 = a1;
  long long v59 = a3;
  uint64_t v60 = a4;
  if (__p == v56)
  {
LABEL_40:
    std::string v16 = v37;
  }
  else
  {
    while (!sub_71AA84((uint64_t)&v57, v16))
    {
      v16 += 3;
      if (v16 == v37) {
        goto LABEL_40;
      }
    }
    if (v16 != v37)
    {
      for (k = v16 + 3; k != v37; k += 3)
      {
        if (!sub_71AA84((uint64_t)&v57, k))
        {
          int v53 = (_DWORD *)*v16;
          if (*v16)
          {
            v16[1] = v53;
            operator delete(v53);
            *std::string v16 = 0;
            v16[1] = 0;
            v16[2] = 0;
          }
          *(_OWORD *)std::string v16 = *(_OWORD *)k;
          v16[2] = k[2];
          void *k = 0;
          k[1] = 0;
          k[2] = 0;
          v16 += 3;
        }
      }
    }
  }
LABEL_42:
  BOOL v38 = v56;
  if (v16 != v56)
  {
    uint64_t v39 = v56;
    do
    {
      char v41 = (void *)*(v39 - 3);
      v39 -= 3;
      int64_t v40 = v41;
      if (v41)
      {
        *(v38 - 2) = v40;
        operator delete(v40);
      }
      BOOL v38 = v39;
    }
    while (v39 != v16);
    uint64_t v56 = v16;
  }
  if (__p == v16)
  {
    *a5 = 0;
    a5[1] = 0;
    a5[2] = 0;
    if (v16) {
      goto LABEL_53;
    }
  }
  else
  {
    uint64_t v57 = a1;
    uint64_t v58 = (double *)a3;
    sub_71AC04((uint64_t)__p, (uint64_t)v16, (uint64_t)&v57, 126 - 2 * __clz(0xAAAAAAAAAAAAAAABLL * (((char *)v16 - (unsigned char *)__p) >> 3)), 1);
    std::string v16 = __p;
    a5[1] = 0;
    a5[2] = 0;
    *a5 = 0;
    unint64_t v43 = (_DWORD *)*v16;
    uint64_t v42 = v16[1];
    int64_t v44 = v42 - *v16;
    if (v42 != *v16)
    {
      if (0xAAAAAAAAAAAAAAABLL * (v44 >> 2) >= 0x1555555555555556) {
        sub_2E00();
      }
      uint64_t v45 = (char *)operator new(v44);
      *a5 = v45;
      uint64_t v46 = &v45[4 * (v44 >> 2)];
      a5[2] = v46;
      memcpy(v45, v43, v44);
      a5[1] = v46;
    }
LABEL_53:
    uint64_t v47 = v56;
    unint64_t v48 = v16;
    if (v56 != v16)
    {
      uint64_t v49 = v56;
      do
      {
        unint64_t v51 = (void *)*(v49 - 3);
        v49 -= 3;
        unint64_t v50 = v51;
        if (v51)
        {
          *(v47 - 2) = v50;
          operator delete(v50);
        }
        uint64_t v47 = v49;
      }
      while (v49 != v16);
      unint64_t v48 = __p;
    }
    uint64_t v56 = v16;
    operator delete(v48);
  }
}

void sub_719854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_36094((void **)va);
  _Unwind_Resume(a1);
}

void sub_719898(uint64_t a1@<X1>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = (a2[1] - *a2) >> 2;
  int v43 = 0x7FFFFFFF;
  uint64_t v42 = -1;
  unint64_t v7 = 0xAAAAAAAAAAAAAAABLL * v6;
  long long __p = 0;
  int64_t v40 = 0;
  uint64_t v41 = 0;
  unint64_t v8 = 1;
  while (v7 != v8)
  {
    uint64_t v9 = sub_413C0(a2, v8 - 1);
    uint64_t v10 = sub_413C0(a2, v8++);
    if (sub_3BDC0(v9, v10, a1, &__p))
    {
      int v11 = *((_DWORD *)__p + 2);
      uint64_t v42 = *(void *)__p;
      int v43 = v11;
      unint64_t v12 = v8 - 1;
      goto LABEL_6;
    }
  }
  unint64_t v12 = 0;
LABEL_6:
  unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 2) - 2;
  if (v12 + 1 < v13) {
    unint64_t v14 = v12 + 1;
  }
  else {
    unint64_t v14 = 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 2) - 2;
  }
  if (v13 <= v12 + 1)
  {
LABEL_12:
    int v17 = 0x7FFFFFFF;
    int v18 = -1;
    int v19 = -1;
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
    unint64_t v20 = v7 - v12 + 2;
    if (v7 - v12 != -2) {
      goto LABEL_16;
    }
  }
  else
  {
    while (1)
    {
      uint64_t v15 = sub_413C0(a2, v13);
      uint64_t v16 = sub_413C0(a2, v13 + 1);
      if (sub_3BDC0(v15, v16, a1, &__p)) {
        break;
      }
      if (v14 == --v13) {
        goto LABEL_12;
      }
    }
    int v18 = *(v40 - 3);
    int v19 = *(v40 - 2);
    int v17 = *(v40 - 1);
    unint64_t v7 = v13 + 1;
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
    unint64_t v22 = v13 + 1 - v12;
    unint64_t v20 = v22 + 2;
    if (v22 != -2)
    {
LABEL_16:
      if (v20 > 0x1555555555555555) {
        goto LABEL_48;
      }
      unint64_t v23 = (char *)operator new(12 * v20);
      *(void *)a3 = v23;
      *(void *)(a3 + 8) = v23;
      *(void *)(a3 + 16) = &v23[12 * v20];
      uint64_t v21 = *a2;
      int64_t v44 = (char **)a3;
      if (v7 == v12) {
        goto LABEL_20;
      }
      goto LABEL_18;
    }
  }
  uint64_t v21 = *a2;
  int64_t v44 = (char **)a3;
  if (v7 != v12)
  {
LABEL_18:
    double v24 = (uint64_t *)(v21 + 12 * v12);
    uint64_t v25 = -12 * v12 + 12 * v7;
    do
    {
      sub_3BDEE8(&v44, v24);
      double v24 = (uint64_t *)((char *)v24 + 12);
      v25 -= 12;
    }
    while (v25);
  }
LABEL_20:
  if (v42 != -1 || HIDWORD(v42) != -1) {
    sub_719C64((unint64_t *)a3, *(void *)a3, (unint64_t)&v42);
  }
  if (v18 != -1 || v19 != -1)
  {
    __n128 v28 = *(char **)(a3 + 8);
    unint64_t v27 = *(void *)(a3 + 16);
    if ((unint64_t)v28 < v27)
    {
      *(_DWORD *)__n128 v28 = v18;
      *((_DWORD *)v28 + 1) = v19;
      uint64_t v29 = v28 + 12;
      *((_DWORD *)v28 + 2) = v17;
LABEL_44:
      *(void *)(a3 + 8) = v29;
      goto LABEL_45;
    }
    unint64_t v30 = *(char **)a3;
    unint64_t v31 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v28[-*(void *)a3] >> 2);
    unint64_t v32 = v31 + 1;
    if (v31 + 1 <= 0x1555555555555555)
    {
      unint64_t v33 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v27 - (void)v30) >> 2);
      if (2 * v33 > v32) {
        unint64_t v32 = 2 * v33;
      }
      if (v33 >= 0xAAAAAAAAAAAAAAALL) {
        unint64_t v34 = 0x1555555555555555;
      }
      else {
        unint64_t v34 = v32;
      }
      if (v34)
      {
        if (v34 > 0x1555555555555555) {
          sub_188D718();
        }
        int v35 = (char *)operator new(12 * v34);
      }
      else
      {
        int v35 = 0;
      }
      BOOL v36 = (int *)&v35[12 * v31];
      *BOOL v36 = v18;
      v36[1] = v19;
      int v36[2] = v17;
      uint64_t v29 = (char *)(v36 + 3);
      if (v28 != v30)
      {
        do
        {
          uint64_t v37 = *(void *)(v28 - 12);
          v28 -= 12;
          int v38 = *((_DWORD *)v28 + 2);
          *(void *)(v36 - 3) = v37;
          v36 -= 3;
          int v36[2] = v38;
        }
        while (v28 != v30);
        __n128 v28 = *(char **)a3;
      }
      *(void *)a3 = v36;
      *(void *)(a3 + 8) = v29;
      *(void *)(a3 + 16) = &v35[12 * v34];
      if (v28) {
        operator delete(v28);
      }
      goto LABEL_44;
    }
LABEL_48:
    sub_2E00();
  }
LABEL_45:
  if (__p)
  {
    int64_t v40 = __p;
    operator delete(__p);
  }
}

void sub_719BE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  unint64_t v12 = *(void **)v10;
  if (*(void *)v10)
  {
    *(void *)(v10 + 8) = v12;
    operator delete(v12);
    unint64_t v13 = __p;
    if (!__p) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    unint64_t v13 = __p;
    if (!__p) {
      goto LABEL_3;
    }
  }
  operator delete(v13);
  _Unwind_Resume(exception_object);
}

char *sub_719C64(unint64_t *a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3 = a3;
  uint64_t v6 = (_DWORD *)*a1;
  unint64_t v5 = a1[1];
  uint64_t v7 = (uint64_t)(a2 - *a1) / 12;
  unint64_t v8 = (char *)(*a1 + 12 * v7);
  unint64_t v9 = a1[2];
  if (v5 < v9)
  {
    if (v8 == (char *)v5)
    {
      uint64_t v21 = *(void *)a3;
      *((_DWORD *)v8 + 2) = *(_DWORD *)(a3 + 8);
      *(void *)unint64_t v8 = v21;
      a1[1] = (unint64_t)(v8 + 12);
    }
    else
    {
      uint64_t v10 = v8 + 12;
      unint64_t v11 = v5 - 12;
      unint64_t v12 = a1[1];
      if (v5 >= 0xC)
      {
        do
        {
          uint64_t v13 = *(void *)v11;
          *(_DWORD *)(v12 + 8) = *(_DWORD *)(v11 + 8);
          *(void *)unint64_t v12 = v13;
          v12 += 12;
          v11 += 12;
        }
        while (v11 < v5);
      }
      a1[1] = v12;
      if ((_DWORD *)v5 != v10) {
        memmove(v8 + 12, v8, v5 - (void)v10);
      }
      if ((unint64_t)v8 <= v3) {
        v3 += 12 * (a1[1] > v3);
      }
      uint64_t v14 = *(void *)v3;
      *((_DWORD *)v8 + 2) = *(_DWORD *)(v3 + 8);
      *(void *)unint64_t v8 = v14;
    }
    return v8;
  }
  unint64_t v15 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - (void)v6) >> 2) + 1;
  if (v15 > 0x1555555555555555) {
    sub_2E00();
  }
  unint64_t v16 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v9 - (void)v6) >> 2);
  if (2 * v16 > v15) {
    unint64_t v15 = 2 * v16;
  }
  if (v16 >= 0xAAAAAAAAAAAAAAALL) {
    unint64_t v17 = 0x1555555555555555;
  }
  else {
    unint64_t v17 = v15;
  }
  if (v17)
  {
    if (v17 > 0x1555555555555555) {
      sub_188D718();
    }
    int v18 = (char *)operator new(12 * v17);
    unint64_t v19 = (unint64_t)&v18[12 * v7];
    unint64_t v20 = &v18[12 * v17];
    if ((char *)v19 != v20) {
      goto LABEL_33;
    }
    goto LABEL_22;
  }
  int v18 = 0;
  unint64_t v19 = 12 * v7;
  unint64_t v20 = 0;
  if (!v19)
  {
LABEL_22:
    int64_t v22 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v19 - (void)v18) >> 2);
    if (v19 <= (unint64_t)v18)
    {
      if ((char *)v19 == v18) {
        unint64_t v24 = 1;
      }
      else {
        unint64_t v24 = 0x5555555555555556 * ((uint64_t)(v19 - (void)v18) >> 2);
      }
      if (v24 > 0x1555555555555555) {
        sub_188D718();
      }
      uint64_t v25 = (char *)operator new(12 * v24);
      unint64_t v19 = (unint64_t)&v25[12 * (v24 >> 2)];
      unint64_t v20 = &v25[12 * v24];
      if (v18) {
        operator delete(v18);
      }
    }
    else
    {
      if (v22 >= -1) {
        uint64_t v23 = v22 + 1;
      }
      else {
        uint64_t v23 = v22 + 2;
      }
      unint64_t v20 = (char *)v19;
      v19 -= 12 * (v23 >> 1);
    }
  }
LABEL_33:
  uint64_t v26 = *(void *)v3;
  *(_DWORD *)(v19 + 8) = *(_DWORD *)(v3 + 8);
  *(void *)unint64_t v19 = v26;
  unint64_t v27 = (char *)*a1;
  unint64_t v28 = v19;
  if ((char *)*a1 != v8)
  {
    uint64_t v29 = v8;
    unint64_t v28 = v19;
    do
    {
      uint64_t v30 = *(void *)(v29 - 12);
      v29 -= 12;
      int v31 = *((_DWORD *)v29 + 2);
      *(void *)(v28 - 12) = v30;
      v28 -= 12;
      *(_DWORD *)(v28 + 8) = v31;
    }
    while (v29 != v27);
  }
  unint64_t v32 = (char *)a1[1];
  int64_t v33 = v32 - v8;
  if (v32 != v8) {
    memmove((void *)(v19 + 12), v8, v32 - v8);
  }
  unint64_t v34 = (_DWORD *)*a1;
  *a1 = v28;
  a1[1] = v19 + 12 + v33;
  a1[2] = (unint64_t)v20;
  if (v34) {
    operator delete(v34);
  }
  return (char *)v19;
}

void sub_719F1C(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

long double sub_719F34(uint64_t a1, void *a2, uint64_t a3)
{
  unint64_t v5 = (_DWORD *)*a2;
  uint64_t v6 = (_DWORD *)a2[1];
  int v31 = 0;
  unint64_t v32 = 0;
  uint64_t v30 = 0;
  if (v6 != v5)
  {
    if ((0xAAAAAAAAAAAAAAABLL * (v6 - v5)) >> 60) {
      sub_2E00();
    }
    uint64_t v7 = (char *)operator new(0xAAAAAAAAAAAAAAB0 * (v6 - v5));
    uint64_t v30 = v7;
    int v31 = v7;
    unint64_t v32 = &v7[0xAAAAAAAAAAAAAAB0 * (v6 - v5)];
    do
    {
      LODWORD(v8) = *v5;
      LODWORD(v9) = v5[1];
      *(double *)unint64_t v20 = (double)v8;
      *(double *)&v20[1] = (double)v9;
      uint64_t v7 = sub_478E8(&v30, v7, v20) + 16;
      v5 += 3;
    }
    while (v5 != v6);
  }
  unint64_t v11 = *(_DWORD **)a3;
  uint64_t v10 = *(_DWORD **)(a3 + 8);
  unint64_t v28 = 0;
  uint64_t v29 = 0;
  unint64_t v27 = 0;
  if (v10 != v11)
  {
    if ((0xAAAAAAAAAAAAAAABLL * (v10 - v11)) >> 60) {
      sub_2E00();
    }
    unint64_t v12 = (char *)operator new(0xAAAAAAAAAAAAAAB0 * (v10 - v11));
    unint64_t v27 = v12;
    unint64_t v28 = v12;
    uint64_t v29 = &v12[0xAAAAAAAAAAAAAAB0 * (v10 - v11)];
    do
    {
      LODWORD(v13) = *v11;
      LODWORD(v14) = v11[1];
      *(double *)unint64_t v20 = (double)v13;
      *(double *)&v20[1] = (double)v14;
      unint64_t v12 = sub_478E8((char **)&v27, v12, v20) + 16;
      v11 += 3;
    }
    while (v11 != v10);
  }
  sub_3BF0C((uint64_t)v20, &v30, (char **)&v27, 0);
  sub_3C270((uint64_t *)v20);
  double v15 = v26;
  unsigned int v16 = *(_DWORD *)(*a2 + 4);
  if (__p) {
    operator delete(__p);
  }
  if (v23)
  {
    unint64_t v24 = v23;
    operator delete(v23);
  }
  if (v21)
  {
    int64_t v22 = v21;
    operator delete(v21);
  }
  if (v20[0])
  {
    v20[1] = v20[0];
    operator delete(v20[0]);
  }
  if (v27)
  {
    unint64_t v28 = v27;
    operator delete(v27);
  }
  if (v30)
  {
    int v31 = v30;
    operator delete(v30);
  }
  long double v17 = exp((double)v16 * -6.28318531 / 4294967300.0 + 3.14159265);
  long double v18 = atan((v17 - 1.0 / v17) * 0.5);
  return v15 * (0.00932288077 / (1.0 / cos(v18 * 57.2957795 / 180.0 * 3.14159265)));
}

void sub_71A17C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *__p,uint64_t a28)
{
  sub_3BF98((uint64_t)&a10);
  if (__p)
  {
    a28 = (uint64_t)__p;
    operator delete(__p);
  }
  uint64_t v30 = *(void **)(v28 - 120);
  if (v30)
  {
    *(void *)(v28 - 112) = v30;
    operator delete(v30);
  }
  _Unwind_Resume(a1);
}

void *sub_71A1CC(void **a1, void *a2, uint64_t a3)
{
  unint64_t v5 = (char *)*a1;
  unint64_t v4 = (char *)a1[1];
  uint64_t v6 = (v4 - (unsigned char *)*a1) >> 5;
  unint64_t v7 = v6 + 1;
  if ((unint64_t)(v6 + 1) >> 59) {
    sub_2E00();
  }
  uint64_t v10 = (unsigned char *)a1[2] - v5;
  if (v10 >> 4 > v7) {
    unint64_t v7 = v10 >> 4;
  }
  if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFE0) {
    unint64_t v11 = 0x7FFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v11 = v7;
  }
  if (v11)
  {
    if (v11 >> 59) {
      sub_188D718();
    }
    unint64_t v12 = (char *)operator new(32 * v11);
  }
  else
  {
    unint64_t v12 = 0;
  }
  unint64_t v13 = &v12[32 * v6];
  unint64_t v14 = &v12[32 * v11];
  uint64_t v28 = v14;
  *(void *)unint64_t v13 = *a2;
  *((void *)v13 + 1) = 0;
  *((void *)v13 + 2) = 0;
  double v15 = (char **)(v13 + 16);
  *((void *)v13 + 3) = 0;
  unsigned int v16 = *(const void **)a3;
  int64_t v17 = *(void *)(a3 + 8) - *(void *)a3;
  if (v17)
  {
    unint64_t v27 = &v12[32 * v11];
    if (0xAAAAAAAAAAAAAAABLL * (v17 >> 2) >= 0x1555555555555556) {
      sub_2E00();
    }
    long double v18 = (char *)operator new(v17);
    *((void *)v13 + 1) = v18;
    *double v15 = v18;
    unint64_t v19 = &v18[4 * (v17 >> 2)];
    *((void *)v13 + 3) = v19;
    memcpy(v18, v16, v17);
    *double v15 = v19;
    unint64_t v14 = v27;
  }
  unint64_t v20 = v13 + 32;
  if (v4 == v5)
  {
    *a1 = v13;
    a1[1] = v20;
    a1[2] = v14;
  }
  else
  {
    uint64_t v21 = 0;
    do
    {
      int64_t v22 = &v13[v21];
      uint64_t v23 = &v4[v21];
      *((void *)v22 - 4) = *(void *)&v4[v21 - 32];
      *((void *)v22 - 2) = 0;
      *((void *)v22 - 1) = 0;
      *(_OWORD *)(v22 - 24) = *(_OWORD *)&v4[v21 - 24];
      *((void *)v22 - 1) = *(void *)&v4[v21 - 8];
      *((void *)v23 - 3) = 0;
      *((void *)v23 - 2) = 0;
      *((void *)v23 - 1) = 0;
      v21 -= 32;
    }
    while (&v4[v21] != v5);
    unint64_t v24 = (char *)*a1;
    unint64_t v4 = (char *)a1[1];
    unint64_t v20 = v13 + 32;
    *a1 = &v13[v21];
    a1[1] = v13 + 32;
    a1[2] = v28;
    if (v4 != v24)
    {
      do
      {
        uint64_t v25 = (void *)*((void *)v4 - 3);
        if (v25)
        {
          *((void *)v4 - 2) = v25;
          operator delete(v25);
        }
        v4 -= 32;
      }
      while (v4 != v24);
      unint64_t v4 = v24;
    }
  }
  if (v4) {
    operator delete(v4);
  }
  return v20;
}

void sub_71A3E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  unint64_t v5 = *v2;
  if (*v2)
  {
    void *v3 = v5;
    operator delete(v5);
  }
  sub_38800((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_71A408(void *a1, unint64_t a2, uint64_t a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    if (a2 >= 0xAAAAAAAAAAAAAABLL) {
      sub_2E00();
    }
    uint64_t v6 = 3 * a2;
    unint64_t v7 = operator new(24 * a2);
    unint64_t v8 = v7;
    *a1 = v7;
    a1[1] = v7;
    unint64_t v9 = &v7[v6];
    a1[2] = &v7[v6];
    uint64_t v10 = *(const void **)a3;
    int64_t v11 = *(void *)(a3 + 8) - *(void *)a3;
    if (v11)
    {
      if (v11 < 0)
      {
        *unint64_t v7 = 0;
        v7[1] = 0;
        v7[2] = 0;
        sub_2E00();
      }
      uint64_t v12 = 24 * a2;
      do
      {
        void *v8 = 0;
        v8[1] = 0;
        void v8[2] = 0;
        unint64_t v13 = (char *)operator new(v11);
        void *v8 = v13;
        v8[1] = v13;
        unint64_t v14 = &v13[8 * (v11 >> 3)];
        void v8[2] = v14;
        memcpy(v13, v10, v11);
        v8[1] = v14;
        v8 += 3;
        v12 -= 24;
      }
      while (v12);
    }
    else
    {
      bzero(v7, 24 * ((v6 * 8 - 24) / 0x18uLL) + 24);
    }
    a1[1] = v9;
  }
  return a1;
}

void sub_71A52C(_Unwind_Exception *exception_object)
{
  unint64_t v4 = *(void **)v2;
  if (*(void *)v2)
  {
    *(void *)(v2 + 8) = v4;
    operator delete(v4);
    *(void *)(v1 + 8) = v2;
    _Unwind_Resume(exception_object);
  }
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(exception_object);
}

void sub_71A55C(int8x16_t **a1)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  unint64_t v4 = 126 - 2 * __clz(((char *)v3 - (char *)v2) >> 3);
  if (v3 == v2) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = v4;
  }
  sub_2A875C(v2, v3, (uint64_t)&v14, v5, 1);
  uint64_t v6 = a1[1];
  if (*a1 != v6)
  {
    unint64_t v7 = &(*a1)[-1].i32[2];
    do
    {
      if (v7 + 4 == (__int32 *)v6) {
        return;
      }
      __int32 v8 = v7[2];
      v7 += 2;
      LODWORD(v9) = v7[2];
    }
    while (v8 != v9 || v7[1] != v7[3]);
    int64_t v11 = (int8x16_t *)(v7 + 4);
    if (v7 + 4 == (__int32 *)v6)
    {
      uint64_t v12 = (int8x16_t *)(v7 + 2);
      if (v7 + 2 == (__int32 *)v6) {
        return;
      }
      goto LABEL_22;
    }
    do
    {
      if (v9 != v11->i32[0] || v7[1] != v11->i32[1])
      {
        uint64_t v9 = v11->i64[0];
        *((void *)v7 + 1) = v11->i64[0];
        v7 += 2;
      }
      int64_t v11 = (int8x16_t *)((char *)v11 + 8);
    }
    while (v11 != v6);
    uint64_t v12 = (int8x16_t *)(v7 + 2);
    if (v7 + 2 != (__int32 *)a1[1]) {
LABEL_22:
    }
      a1[1] = v12;
  }
}

uint64_t sub_71A67C(uint64_t a1, unint64_t *a2, _DWORD *a3)
{
  sub_71A860(a1, *a2, (uint64_t)v35);
  if (!sub_34554(v35, a3)) {
    return 0;
  }
  sub_2A65AC(a1, *a2, &__p);
  uint64_t v9 = (void **)__p;
  uint64_t v10 = v34;
  if (__p == v34)
  {
    uint64_t v22 = 0;
    uint64_t v23 = __p;
    if (!__p) {
      return v22;
    }
  }
  else
  {
    unsigned int v11 = a3[1];
    LODWORD(v6) = *a3;
    double v12 = (double)v6;
    unint64_t v13 = (void **)__p;
    while (1)
    {
      char v14 = *v13;
      double v15 = v13[1];
      if (*v13 != v15)
      {
        int v16 = 0;
        do
        {
          int64_t v17 = (_DWORD *)v14[1];
          long double v18 = (_DWORD *)(*v14 + 12);
          if ((_DWORD *)*v14 != v17 && v18 != v17)
          {
            do
            {
              unsigned int v20 = *(v18 - 2);
              unsigned int v21 = v18[1];
              if (v20 >= v11)
              {
                if (v21 < v11)
                {
LABEL_20:
                  LODWORD(v7) = *v18;
                  LODWORD(v8) = *(v18 - 3);
                  double v8 = (double)*(unint64_t *)&v8;
                  double v7 = ((double)v11 - (double)v20)
                     / ((double)v21 - (double)v20)
                     * ((double)*(unint64_t *)&v7 - v8)
                     + v8;
                  if (v7 < v12) {
                    v16 ^= 1u;
                  }
                }
              }
              else if (v21 >= v11)
              {
                goto LABEL_20;
              }
              v18 += 3;
            }
            while (v18 != v17);
          }
          v14 += 3;
        }
        while (v14 != v15);
        if (v16) {
          break;
        }
      }
      v13 += 3;
      if (v13 == v34)
      {
        uint64_t v22 = 0;
        if (!__p) {
          return v22;
        }
        goto LABEL_28;
      }
    }
    uint64_t v22 = 1;
    if (!__p) {
      return v22;
    }
LABEL_28:
    unint64_t v24 = v34;
    do
    {
      unint64_t v27 = (char *)*(v24 - 3);
      v24 -= 3;
      double v26 = v27;
      if (v27)
      {
        uint64_t v28 = (char *)*(v10 - 2);
        uint64_t v25 = v26;
        if (v28 != v26)
        {
          uint64_t v29 = (char *)*(v10 - 2);
          do
          {
            int v31 = (void *)*((void *)v29 - 3);
            v29 -= 24;
            uint64_t v30 = v31;
            if (v31)
            {
              *((void *)v28 - 2) = v30;
              operator delete(v30);
            }
            uint64_t v28 = v29;
          }
          while (v29 != v26);
          uint64_t v25 = *v24;
        }
        *(v10 - 2) = v26;
        operator delete(v25);
      }
      uint64_t v10 = v24;
    }
    while (v24 != v9);
    uint64_t v23 = __p;
  }
  unint64_t v34 = v9;
  operator delete(v23);
  return v22;
}

uint64_t sub_71A860@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v26 = a2;
  uint64_t v5 = sub_2A75D8(a1, a2, 1);
  if (!v5
    || (unint64_t v6 = &v5[-*(int *)v5], *(unsigned __int16 *)v6 < 5u)
    || (uint64_t v7 = *((unsigned __int16 *)v6 + 2)) == 0
    || (v8 = &v5[v7 + *(unsigned int *)&v5[v7]], uint64_t v9 = &v8[-*(int *)v8], *(unsigned __int16 *)v9 < 5u)
    || !*((_WORD *)v9 + 2)
    || (uint64_t v10 = &v8[*((unsigned __int16 *)v9 + 2) + *(unsigned int *)&v8[*((unsigned __int16 *)v9 + 2)]],
        *(_DWORD *)v10 <= HIDWORD(a2)))
  {
    exception = __cxa_allocate_exception(0x40uLL);
    sub_2A746C((unsigned int *)&v26, &v22);
    int64_t v17 = std::string::insert(&v22, 0, "Referenced polygon ");
    long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
    v23.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v18;
    v17->__r_.__value_.__l.__size_ = 0;
    v17->__r_.__value_.__r.__words[2] = 0;
    v17->__r_.__value_.__r.__words[0] = 0;
    unint64_t v19 = std::string::append(&v23, " does not exist.");
    long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
    std::string::size_type v25 = v19->__r_.__value_.__r.__words[2];
    long long v24 = v20;
    v19->__r_.__value_.__l.__size_ = 0;
    v19->__r_.__value_.__r.__words[2] = 0;
    v19->__r_.__value_.__r.__words[0] = 0;
    unsigned int v21 = (void *)sub_2F404((uint64_t)exception, &v24);
  }
  unsigned int v11 = &v10[4 * HIDWORD(a2) + 4 + *(unsigned int *)&v10[4 * HIDWORD(a2) + 4]];
  uint64_t v12 = (uint64_t)&v11[*(unsigned __int16 *)&v11[-*(int *)v11 + 6]];
  LODWORD(v13) = *(_DWORD *)(v12 + 4);
  if (v13 >= 0xFFFFFFFE) {
    uint64_t v13 = 4294967294;
  }
  else {
    uint64_t v13 = v13;
  }
  *(void *)&long long v24 = *(unsigned int *)v12 | (unint64_t)(v13 << 32);
  DWORD2(v24) = 0x7FFFFFFF;
  uint64_t v14 = *(unsigned int *)(v12 + 8);
  LODWORD(v12) = *(_DWORD *)(v12 + 12);
  if (v12 >= 0xFFFFFFFE) {
    uint64_t v12 = 4294967294;
  }
  else {
    uint64_t v12 = v12;
  }
  v23.__r_.__value_.__r.__words[0] = v14 | (v12 << 32);
  LODWORD(v23.__r_.__value_.__r.__words[1]) = 0x7FFFFFFF;
  return sub_3392C(a3, (unsigned int *)&v24, (unsigned int *)&v23);
}

void sub_71AA04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(a1);
}

BOOL sub_71AA84(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = (_DWORD *)*a2;
  uint64_t v6 = a2[1];
  unsigned int v7 = *(_DWORD *)(v6 - 12) - *(_DWORD *)*a2;
  if (v7)
  {
    unsigned int v9 = *(_DWORD *)(v6 - 8);
    unsigned int v8 = v5[1];
  }
  else
  {
    unsigned int v8 = v5[1];
    unsigned int v9 = *(_DWORD *)(v6 - 8);
    double i = 0.0;
    if (v8 == v9) {
      goto LABEL_11;
    }
  }
  double v11 = -(double)-v7;
  if (v7 < -v7) {
    double v11 = (double)v7;
  }
  for (double i = (atan2((double)v9 - (double)v8, v11) + 1.57079633) * 180.0 / 3.14159265; i >= 180.0; double i = i + -360.0)
    ;
  for (; i < -180.0; double i = i + 360.0)
    ;
LABEL_11:
  sub_440F0(i, **(double **)a1);
  BOOL result = 1;
  if (v13 <= *(double *)(v4 + 8) && sub_719F34(v12, *(void **)(a1 + 16), (uint64_t)a2) <= *(double *)(v4 + 16))
  {
    uint64_t v15 = *(void *)(a1 + 24);
    if (!*(unsigned char *)(v15 + 24) || sub_719F34(v14, (void *)v15, (uint64_t)a2) <= *(double *)(v4 + 16)) {
      return 0;
    }
  }
  return result;
}

void sub_71AC04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v11 = a1;
  while (2)
  {
    uint64_t v12 = a2 - 24;
    uint64_t v124 = a2 - 72;
    uint64_t v126 = a2 - 48;
    unint64_t v13 = v11;
    unint64_t v129 = a2;
    while (1)
    {
      while (1)
      {
        unint64_t v11 = v13;
        uint64_t v14 = a2 - v13;
        unint64_t v15 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2 - v13) >> 3);
        if (v6 || !v5)
        {
          switch(v15)
          {
            case 0uLL:
            case 1uLL:
              return;
            case 2uLL:
              double v61 = sub_719F34(a1, *(void **)(a3 + 8), v12);
              if (v61 < sub_719F34(v62, *(void **)(a3 + 8), v11))
              {
                uint64_t v63 = *(void *)(v11 + 16);
                long long v64 = *(_OWORD *)v11;
                *(void *)(v11 + 8) = 0;
                *(void *)(v11 + 16) = 0;
                *(void *)unint64_t v11 = 0;
                *(_OWORD *)unint64_t v11 = *(_OWORD *)(a2 - 24);
                *(void *)(v11 + 16) = *(void *)(a2 - 8);
                *(_OWORD *)(a2 - 24) = v64;
                *(void *)(a2 - 8) = v63;
              }
              break;
            case 3uLL:
              sub_71BAD0(v11, v11 + 24, v12, a3);
              break;
            case 4uLL:
              sub_71BF58(v11, v11 + 24, v11 + 48, v12, a3);
              break;
            case 5uLL:
              sub_71B94C(v11, v11 + 24, v11 + 48, v11 + 72, v12, a3);
              break;
            default:
              JUMPOUT(0);
          }
          return;
        }
        if (v14 <= 575)
        {
          if (a5)
          {
            if (v11 != a2)
            {
              uint64_t v65 = v11 + 24;
              if (v11 + 24 != a2)
              {
                uint64_t v66 = 0;
                uint64_t v67 = v11;
                do
                {
                  uint64_t v70 = v65;
                  double v71 = sub_719F34(a1, *(void **)(a3 + 8), v65);
                  if (v71 < sub_719F34(v72, *(void **)(a3 + 8), v67))
                  {
                    a1 = 0;
                    long long v131 = *(_OWORD *)v70;
                    uint64_t v132 = *(void *)(v67 + 40);
                    *(void *)uint64_t v70 = 0;
                    *(void *)(v70 + 8) = 0;
                    *(void *)(v70 + 16) = 0;
                    uint64_t v73 = v66;
                    do
                    {
                      int v74 = (uint64_t *)(v11 + v73);
                      if (a1)
                      {
                        v74[4] = a1;
                        operator delete((void *)a1);
                        v74[3] = 0;
                        v74[4] = 0;
                        v74[5] = 0;
                      }
                      *(_OWORD *)(v74 + 3) = *(_OWORD *)v74;
                      v74[5] = v74[2];
                      v74[1] = 0;
                      v74[2] = 0;
                      *int v74 = 0;
                      if (!v73)
                      {
                        int v68 = (void *)(v11 + 8);
                        unsigned int v69 = (void *)v11;
                        goto LABEL_83;
                      }
                      double v75 = sub_719F34(a1, *(void **)(a3 + 8), (uint64_t)&v131);
                      long double v77 = sub_719F34(v76, *(void **)(a3 + 8), v11 + v73 - 24);
                      a1 = *v74;
                      v73 -= 24;
                    }
                    while (v75 < v77);
                    uint64_t v78 = v11 + v73;
                    int v68 = (void *)(v11 + v73 + 32);
                    unsigned int v69 = (void *)(v78 + 24);
                    if (a1)
                    {
                      *(void *)(v78 + 32) = a1;
                      operator delete((void *)a1);
                      void *v69 = 0;
                      v69[1] = 0;
                      v69[2] = 0;
                    }
LABEL_83:
                    void *v69 = v131;
                    *int v68 = *((void *)&v131 + 1);
                    v69[2] = v132;
                    a2 = v129;
                  }
                  uint64_t v65 = v70 + 24;
                  v66 += 24;
                  uint64_t v67 = v70;
                }
                while (v70 + 24 != a2);
              }
            }
          }
          else if (v11 != a2)
          {
            uint64_t v114 = v11 + 24;
            if (v11 + 24 != a2)
            {
              uint64_t v115 = v11 - 24;
              do
              {
                unint64_t v116 = v114;
                double v117 = sub_719F34(a1, *(void **)(a3 + 8), v114);
                if (v117 < sub_719F34(v118, *(void **)(a3 + 8), v11))
                {
                  a1 = 0;
                  long long v131 = *(_OWORD *)v116;
                  uint64_t v132 = *(void *)(v11 + 40);
                  *(void *)unint64_t v116 = 0;
                  *(void *)(v116 + 8) = 0;
                  *(void *)(v116 + 16) = 0;
                  uint64_t v119 = v115;
                  do
                  {
                    if (a1)
                    {
                      *(void *)(v119 + 56) = a1;
                      operator delete((void *)a1);
                      *(void *)(v119 + 48) = 0;
                      *(void *)(v119 + 56) = 0;
                      *(void *)(v119 + 64) = 0;
                    }
                    *(_OWORD *)(v119 + 48) = *(_OWORD *)(v119 + 24);
                    *(void *)(v119 + 64) = *(void *)(v119 + 40);
                    *(void *)(v119 + 32) = 0;
                    *(void *)(v119 + 40) = 0;
                    *(void *)(v119 + 24) = 0;
                    double v120 = sub_719F34(a1, *(void **)(a3 + 8), (uint64_t)&v131);
                    long double v122 = sub_719F34(v121, *(void **)(a3 + 8), v119);
                    a1 = *(void *)(v119 + 24);
                    v119 -= 24;
                  }
                  while (v120 < v122);
                  if (a1)
                  {
                    *(void *)(v119 + 56) = a1;
                    operator delete((void *)a1);
                    *(void *)(v119 + 48) = 0;
                    *(void *)(v119 + 56) = 0;
                    *(void *)(v119 + 64) = 0;
                  }
                  *(_OWORD *)(v119 + 48) = v131;
                  *(void *)(v119 + 64) = v132;
                }
                uint64_t v114 = v116 + 24;
                v115 += 24;
                unint64_t v11 = v116;
              }
              while (v116 + 24 != a2);
            }
          }
          return;
        }
        if (!a4)
        {
          if (v11 != a2)
          {
            int64_t v79 = (v15 - 2) >> 1;
            int64_t v127 = v79;
            do
            {
              int64_t v80 = v79;
              if (v127 >= v79)
              {
                uint64_t v81 = (2 * v79) | 1;
                uint64_t v82 = v11 + 24 * v81;
                if (2 * v79 + 2 < (uint64_t)v15)
                {
                  double v83 = sub_719F34(a1, *(void **)(a3 + 8), v11 + 24 * v81);
                  if (v83 < sub_719F34(v84, *(void **)(a3 + 8), v82 + 24))
                  {
                    v82 += 24;
                    uint64_t v81 = 2 * v80 + 2;
                  }
                }
                uint64_t v85 = v11 + 24 * v80;
                double v86 = sub_719F34(a1, *(void **)(a3 + 8), v82);
                if (v86 >= sub_719F34(v87, *(void **)(a3 + 8), v85))
                {
                  a1 = 0;
                  long long v131 = *(_OWORD *)v85;
                  uint64_t v132 = *(void *)(v85 + 16);
                  *(void *)uint64_t v85 = 0;
                  *(void *)(v85 + 8) = 0;
                  *(void *)(v85 + 16) = 0;
                  while (1)
                  {
                    unint64_t v88 = (uint64_t *)v82;
                    if (a1)
                    {
                      *(void *)(v85 + 8) = a1;
                      operator delete((void *)a1);
                      *(void *)uint64_t v85 = 0;
                      *(void *)(v85 + 8) = 0;
                      *(void *)(v85 + 16) = 0;
                    }
                    *(_OWORD *)uint64_t v85 = *(_OWORD *)v82;
                    *(void *)(v85 + 16) = *(void *)(v82 + 16);
                    *(void *)uint64_t v82 = 0;
                    *(void *)(v82 + 8) = 0;
                    *(void *)(v82 + 16) = 0;
                    if (v127 < v81) {
                      break;
                    }
                    uint64_t v89 = (2 * v81) | 1;
                    uint64_t v82 = v11 + 24 * v89;
                    uint64_t v81 = 2 * v81 + 2;
                    if (v81 < (uint64_t)v15)
                    {
                      double v90 = sub_719F34(a1, *(void **)(a3 + 8), v11 + 24 * v89);
                      if (v90 >= sub_719F34(v91, *(void **)(a3 + 8), v82 + 24)) {
                        uint64_t v81 = v89;
                      }
                      else {
                        v82 += 24;
                      }
                    }
                    else
                    {
                      uint64_t v81 = v89;
                    }
                    double v92 = sub_719F34(a1, *(void **)(a3 + 8), v82);
                    long double v94 = sub_719F34(v93, *(void **)(a3 + 8), (uint64_t)&v131);
                    a1 = *v88;
                    uint64_t v85 = (uint64_t)v88;
                    if (v92 < v94)
                    {
                      if (a1)
                      {
                        v88[1] = a1;
                        operator delete((void *)a1);
                        uint64_t *v88 = 0;
                        v88[1] = 0;
                        v88[2] = 0;
                      }
                      break;
                    }
                  }
                  *(_OWORD *)unint64_t v88 = v131;
                  v88[2] = v132;
                }
              }
              int64_t v79 = v80 - 1;
            }
            while (v80);
            int64_t v95 = v14 / 0x18uLL;
            unint64_t v96 = v129;
            do
            {
              unint64_t v130 = v96;
              uint64_t v98 = 0;
              uint64_t v125 = *(void *)(v11 + 8);
              uint64_t v128 = *(void *)v11;
              uint64_t v123 = *(void *)(v11 + 16);
              *(void *)(v11 + 8) = 0;
              *(void *)(v11 + 16) = 0;
              uint64_t v99 = (uint64_t *)v11;
              *(void *)unint64_t v11 = 0;
              do
              {
                uint64_t v100 = (uint64_t)&v99[3 * v98 + 3];
                uint64_t v101 = 2 * v98;
                uint64_t v98 = (2 * v98) | 1;
                uint64_t v102 = v101 + 2;
                if (v101 + 2 < v95)
                {
                  double v103 = sub_719F34(a1, *(void **)(a3 + 8), v100);
                  if (v103 < sub_719F34(v104, *(void **)(a3 + 8), v100 + 24))
                  {
                    v100 += 24;
                    uint64_t v98 = v102;
                  }
                }
                a1 = *v99;
                if (*v99)
                {
                  v99[1] = a1;
                  operator delete((void *)a1);
                  *uint64_t v99 = 0;
                  v99[1] = 0;
                  v99[2] = 0;
                }
                *(_OWORD *)uint64_t v99 = *(_OWORD *)v100;
                v99[2] = *(void *)(v100 + 16);
                *(void *)uint64_t v100 = 0;
                *(void *)(v100 + 8) = 0;
                *(void *)(v100 + 16) = 0;
                uint64_t v99 = (uint64_t *)v100;
              }
              while (v98 <= (uint64_t)((unint64_t)(v95 - 2) >> 1));
              unint64_t v96 = v130 - 24;
              if (v100 == v130 - 24)
              {
                *(void *)uint64_t v100 = v128;
                *(void *)(v100 + 8) = v125;
                *(void *)(v100 + 16) = v123;
              }
              else
              {
                *(_OWORD *)uint64_t v100 = *(_OWORD *)(v130 - 24);
                *(void *)(v100 + 16) = *(void *)(v130 - 8);
                *(void *)(v130 - 24) = v128;
                *(void *)(v130 - 16) = v125;
                *(void *)(v130 - 8) = v123;
                uint64_t v105 = v100 - v11 + 24;
                if (v105 >= 25)
                {
                  unint64_t v106 = (v105 / 0x18uLL - 2) >> 1;
                  uint64_t v107 = v11 + 24 * v106;
                  double v108 = sub_719F34(a1, *(void **)(a3 + 8), v107);
                  if (v108 < sub_719F34(v109, *(void **)(a3 + 8), v100))
                  {
                    a1 = 0;
                    long long v131 = *(_OWORD *)v100;
                    uint64_t v132 = *(void *)(v100 + 16);
                    *(void *)uint64_t v100 = 0;
                    *(void *)(v100 + 8) = 0;
                    *(void *)(v100 + 16) = 0;
                    while (1)
                    {
                      unint64_t v110 = (uint64_t *)v107;
                      if (a1)
                      {
                        *(void *)(v100 + 8) = a1;
                        operator delete((void *)a1);
                        *(void *)uint64_t v100 = 0;
                        *(void *)(v100 + 8) = 0;
                        *(void *)(v100 + 16) = 0;
                      }
                      *(_OWORD *)uint64_t v100 = *(_OWORD *)v107;
                      *(void *)(v100 + 16) = *(void *)(v107 + 16);
                      *(void *)uint64_t v107 = 0;
                      *(void *)(v107 + 8) = 0;
                      *(void *)(v107 + 16) = 0;
                      if (!v106) {
                        break;
                      }
                      unint64_t v106 = (v106 - 1) >> 1;
                      uint64_t v107 = v11 + 24 * v106;
                      double v111 = sub_719F34(a1, *(void **)(a3 + 8), v107);
                      long double v113 = sub_719F34(v112, *(void **)(a3 + 8), (uint64_t)&v131);
                      a1 = *v110;
                      uint64_t v100 = (uint64_t)v110;
                      if (v111 >= v113)
                      {
                        if (a1)
                        {
                          v110[1] = a1;
                          operator delete((void *)a1);
                          *unint64_t v110 = 0;
                          v110[1] = 0;
                          v110[2] = 0;
                        }
                        break;
                      }
                    }
                    *(_OWORD *)unint64_t v110 = v131;
                    v110[2] = v132;
                  }
                }
              }
            }
            while (v95-- > 2);
          }
          return;
        }
        uint64_t v16 = v11 + 24 * (v15 >> 1);
        if ((unint64_t)v14 < 0xC01) {
          break;
        }
        sub_71BAD0(v11, v11 + 24 * (v15 >> 1), v12, a3);
        uint64_t v17 = 24 * (v15 >> 1);
        sub_71BAD0(v11 + 24, v17 + v11 - 24, v126, a3);
        sub_71BAD0(v11 + 48, v11 + 24 + v17, v124, a3);
        sub_71BAD0(v17 + v11 - 24, v16, v11 + 24 + v17, a3);
        uint64_t v18 = *(void *)(v11 + 16);
        long long v19 = *(_OWORD *)v11;
        *(void *)(v11 + 8) = 0;
        *(void *)(v11 + 16) = 0;
        *(void *)unint64_t v11 = 0;
        *(_OWORD *)unint64_t v11 = *(_OWORD *)v16;
        *(void *)(v11 + 16) = *(void *)(v16 + 16);
        *(_OWORD *)uint64_t v16 = v19;
        *(void *)(v16 + 16) = v18;
        --a4;
        if (a5) {
          goto LABEL_14;
        }
LABEL_12:
        double v21 = sub_719F34(v20, *(void **)(a3 + 8), v11 - 24);
        if (v21 < sub_719F34(v22, *(void **)(a3 + 8), v11)) {
          goto LABEL_14;
        }
        long long v131 = *(_OWORD *)v11;
        uint64_t v132 = *(void *)(v11 + 16);
        *(void *)unint64_t v11 = 0;
        *(void *)(v11 + 8) = 0;
        *(void *)(v11 + 16) = 0;
        double v42 = sub_719F34(v20, *(void **)(a3 + 8), (uint64_t)&v131);
        double v45 = sub_719F34(v43, *(void **)(a3 + 8), v12);
        a2 = v129;
        if (v42 < v45)
        {
          unint64_t v13 = v11;
          do
          {
            double v46 = sub_719F34(v44, *(void **)(a3 + 8), (uint64_t)&v131);
            v13 += 24;
          }
          while (v46 >= sub_719F34(v47, *(void **)(a3 + 8), v13));
        }
        else
        {
          unint64_t v48 = v11 + 24;
          do
          {
            unint64_t v13 = v48;
            if (v48 >= v129) {
              break;
            }
            double v49 = sub_719F34(v44, *(void **)(a3 + 8), (uint64_t)&v131);
            long double v51 = sub_719F34(v50, *(void **)(a3 + 8), v13);
            unint64_t v48 = v13 + 24;
          }
          while (v49 >= v51);
        }
        unint64_t v52 = v129;
        if (v13 < v129)
        {
          unint64_t v52 = v129;
          do
          {
            double v53 = sub_719F34(v44, *(void **)(a3 + 8), (uint64_t)&v131);
            v52 -= 24;
          }
          while (v53 < sub_719F34(v54, *(void **)(a3 + 8), v52));
        }
        while (v13 < v52)
        {
          uint64_t v55 = *(void *)(v13 + 16);
          long long v56 = *(_OWORD *)v13;
          *(void *)(v13 + 8) = 0;
          *(void *)(v13 + 16) = 0;
          *(void *)unint64_t v13 = 0;
          *(_OWORD *)unint64_t v13 = *(_OWORD *)v52;
          *(void *)(v13 + 16) = *(void *)(v52 + 16);
          *(_OWORD *)unint64_t v52 = v56;
          *(void *)(v52 + 16) = v55;
          do
          {
            double v57 = sub_719F34(v44, *(void **)(a3 + 8), (uint64_t)&v131);
            v13 += 24;
          }
          while (v57 >= sub_719F34(v58, *(void **)(a3 + 8), v13));
          do
          {
            double v59 = sub_719F34(v44, *(void **)(a3 + 8), (uint64_t)&v131);
            v52 -= 24;
          }
          while (v59 < sub_719F34(v60, *(void **)(a3 + 8), v52));
        }
        a1 = *(void *)v11;
        BOOL v5 = v13 - 24 >= v11;
        BOOL v6 = v13 - 24 == v11;
        if (v13 - 24 == v11)
        {
          if (!a1) {
            goto LABEL_62;
          }
          *(void *)(v13 - 16) = a1;
          operator delete((void *)a1);
        }
        else
        {
          if (a1)
          {
            *(void *)(v11 + 8) = a1;
            operator delete((void *)a1);
            *(void *)unint64_t v11 = 0;
            *(void *)(v11 + 8) = 0;
            *(void *)(v11 + 16) = 0;
          }
          *(_OWORD *)unint64_t v11 = *(_OWORD *)(v13 - 24);
          *(void *)(v11 + 16) = *(void *)(v13 - 8);
        }
        *(void *)(v13 - 24) = 0;
        *(void *)(v13 - 16) = 0;
        *(void *)(v13 - 8) = 0;
LABEL_62:
        a5 = 0;
        *(_OWORD *)(v13 - 24) = v131;
        *(void *)(v13 - 8) = v132;
      }
      sub_71BAD0(v11 + 24 * (v15 >> 1), v11, v12, a3);
      --a4;
      if ((a5 & 1) == 0) {
        goto LABEL_12;
      }
LABEL_14:
      uint64_t v23 = 0;
      long long v131 = *(_OWORD *)v11;
      uint64_t v132 = *(void *)(v11 + 16);
      *(void *)unint64_t v11 = 0;
      *(void *)(v11 + 8) = 0;
      *(void *)(v11 + 16) = 0;
      do
      {
        double v24 = sub_719F34(v20, *(void **)(a3 + 8), v11 + v23 + 24);
        v23 += 24;
      }
      while (v24 < sub_719F34(v25, *(void **)(a3 + 8), (uint64_t)&v131));
      unint64_t v26 = v11 + v23;
      unint64_t v27 = v129;
      if (v23 == 24)
      {
        unint64_t v27 = v129;
        do
        {
          if (v26 >= v27) {
            break;
          }
          v27 -= 24;
          double v30 = sub_719F34(v20, *(void **)(a3 + 8), v27);
        }
        while (v30 >= sub_719F34(v31, *(void **)(a3 + 8), (uint64_t)&v131));
      }
      else
      {
        do
        {
          v27 -= 24;
          double v28 = sub_719F34(v20, *(void **)(a3 + 8), v27);
        }
        while (v28 >= sub_719F34(v29, *(void **)(a3 + 8), (uint64_t)&v131));
      }
      unint64_t v13 = v11 + v23;
      if (v26 >= v27)
      {
        a2 = v129;
        uint64_t v39 = (void *)(v26 - 24);
        int64_t v40 = *(void **)v11;
        if (v26 - 24 != v11) {
          goto LABEL_29;
        }
      }
      else
      {
        unint64_t v32 = v27;
        a2 = v129;
        do
        {
          uint64_t v33 = *(void *)(v13 + 16);
          long long v34 = *(_OWORD *)v13;
          *(void *)(v13 + 8) = 0;
          *(void *)(v13 + 16) = 0;
          *(void *)unint64_t v13 = 0;
          *(_OWORD *)unint64_t v13 = *(_OWORD *)v32;
          *(void *)(v13 + 16) = *(void *)(v32 + 16);
          *(_OWORD *)unint64_t v32 = v34;
          *(void *)(v32 + 16) = v33;
          do
          {
            v13 += 24;
            double v35 = sub_719F34(v20, *(void **)(a3 + 8), v13);
          }
          while (v35 < sub_719F34(v36, *(void **)(a3 + 8), (uint64_t)&v131));
          do
          {
            v32 -= 24;
            double v37 = sub_719F34(v20, *(void **)(a3 + 8), v32);
          }
          while (v37 >= sub_719F34(v38, *(void **)(a3 + 8), (uint64_t)&v131));
        }
        while (v13 < v32);
        uint64_t v39 = (void *)(v13 - 24);
        int64_t v40 = *(void **)v11;
        if (v13 - 24 != v11)
        {
LABEL_29:
          if (v40)
          {
            *(void *)(v11 + 8) = v40;
            operator delete(v40);
            *(void *)unint64_t v11 = 0;
            *(void *)(v11 + 8) = 0;
            *(void *)(v11 + 16) = 0;
          }
          *(_OWORD *)unint64_t v11 = *(_OWORD *)(v13 - 24);
          *(void *)(v11 + 16) = *(void *)(v13 - 8);
          goto LABEL_35;
        }
      }
      if (!v40) {
        goto LABEL_36;
      }
      *(void *)(v13 - 16) = v40;
      operator delete(v40);
LABEL_35:
      void *v39 = 0;
      v39[1] = 0;
      v39[2] = 0;
LABEL_36:
      *(_OWORD *)(v13 - 24) = v131;
      *(void *)(v13 - 8) = v132;
      if (v26 < v27) {
        goto LABEL_39;
      }
      BOOL v41 = sub_71BC80(v11, (uint64_t)v39, a3);
      a1 = sub_71BC80(v13, a2, a3);
      if (a1) {
        break;
      }
      if (!v41)
      {
LABEL_39:
        a1 = sub_71AC04(v11, v39, a3, a4, a5 & 1);
        a5 = 0;
      }
    }
    a2 = (uint64_t)v39;
    if (!v41) {
      continue;
    }
    break;
  }
}

void sub_71B8D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_71B94C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_71BF58(a1, a2, a3, a4, a6);
  double v13 = sub_719F34(v12, *(void **)(a6 + 8), a5);
  if (v13 < sub_719F34(v14, *(void **)(a6 + 8), a4))
  {
    uint64_t v16 = *(void *)(a4 + 16);
    long long v17 = *(_OWORD *)a4;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    *(void *)a4 = 0;
    *(_OWORD *)a4 = *(_OWORD *)a5;
    *(void *)(a4 + 16) = *(void *)(a5 + 16);
    *(_OWORD *)a5 = v17;
    *(void *)(a5 + 16) = v16;
    double v18 = sub_719F34(v15, *(void **)(a6 + 8), a4);
    if (v18 < sub_719F34(v19, *(void **)(a6 + 8), a3))
    {
      uint64_t v21 = *(void *)(a3 + 16);
      long long v22 = *(_OWORD *)a3;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)a3 = 0;
      *(_OWORD *)a3 = *(_OWORD *)a4;
      *(void *)(a3 + 16) = *(void *)(a4 + 16);
      *(_OWORD *)a4 = v22;
      *(void *)(a4 + 16) = v21;
      double v23 = sub_719F34(v20, *(void **)(a6 + 8), a3);
      if (v23 < sub_719F34(v24, *(void **)(a6 + 8), a2))
      {
        uint64_t v26 = *(void *)(a2 + 16);
        long long v27 = *(_OWORD *)a2;
        *(void *)(a2 + 8) = 0;
        *(void *)(a2 + 16) = 0;
        *(void *)a2 = 0;
        *(_OWORD *)a2 = *(_OWORD *)a3;
        *(void *)(a2 + 16) = *(void *)(a3 + 16);
        *(_OWORD *)a3 = v27;
        *(void *)(a3 + 16) = v26;
        double v28 = sub_719F34(v25, *(void **)(a6 + 8), a2);
        if (v28 < sub_719F34(v29, *(void **)(a6 + 8), a1))
        {
          uint64_t v30 = *(void *)(a1 + 16);
          long long v31 = *(_OWORD *)a1;
          *(void *)(a1 + 8) = 0;
          *(void *)(a1 + 16) = 0;
          *(void *)a1 = 0;
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(_OWORD *)a2 = v31;
          *(void *)(a2 + 16) = v30;
        }
      }
    }
  }
}

void sub_71BAD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  double v8 = sub_719F34(a1, *(void **)(a4 + 8), a2);
  double v10 = sub_719F34(v9, *(void **)(a4 + 8), a1);
  double v12 = sub_719F34(v11, *(void **)(a4 + 8), a3);
  double v15 = sub_719F34(v13, *(void **)(a4 + 8), a2);
  if (v8 >= v10)
  {
    if (v12 < v15)
    {
      uint64_t v19 = *(void *)(a2 + 16);
      long long v20 = *(_OWORD *)a2;
      *(void *)(a2 + 8) = 0;
      *(void *)(a2 + 16) = 0;
      *(void *)a2 = 0;
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(void *)(a2 + 16) = *(void *)(a3 + 16);
      *(_OWORD *)a3 = v20;
      *(void *)(a3 + 16) = v19;
      double v21 = sub_719F34(v14, *(void **)(a4 + 8), a2);
      if (v21 < sub_719F34(v22, *(void **)(a4 + 8), a1))
      {
        uint64_t v23 = *(void *)(a1 + 16);
        long long v24 = *(_OWORD *)a1;
        *(void *)(a1 + 8) = 0;
        *(void *)(a1 + 16) = 0;
        *(void *)a1 = 0;
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(_OWORD *)a2 = v24;
        *(void *)(a2 + 16) = v23;
      }
    }
  }
  else
  {
    uint64_t v17 = *(void *)a1;
    uint64_t v16 = *(void *)(a1 + 8);
    uint64_t v18 = *(void *)(a1 + 16);
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 0;
    if (v12 < v15)
    {
      *(_OWORD *)a1 = *(_OWORD *)a3;
      *(void *)(a1 + 16) = *(void *)(a3 + 16);
      *(void *)a3 = v17;
      *(void *)(a3 + 8) = v16;
LABEL_10:
      *(void *)(a3 + 16) = v18;
      return;
    }
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)a2 = v17;
    *(void *)(a2 + 8) = v16;
    *(void *)(a2 + 16) = v18;
    double v25 = sub_719F34(v14, *(void **)(a4 + 8), a3);
    if (v25 < sub_719F34(v26, *(void **)(a4 + 8), a2))
    {
      uint64_t v18 = *(void *)(a2 + 16);
      long long v27 = *(_OWORD *)a2;
      *(void *)(a2 + 8) = 0;
      *(void *)(a2 + 16) = 0;
      *(void *)a2 = 0;
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(void *)(a2 + 16) = *(void *)(a3 + 16);
      *(_OWORD *)a3 = v27;
      goto LABEL_10;
    }
  }
}

BOOL sub_71BC80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (a2 - a1) >> 3;
  BOOL result = 1;
  switch(0xAAAAAAAAAAAAAAABLL * v6)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      double v8 = sub_719F34(1, *(void **)(a3 + 8), a2 - 24);
      if (v8 >= sub_719F34(v9, *(void **)(a3 + 8), a1)) {
        return 1;
      }
      uint64_t v10 = *(void *)(a1 + 16);
      long long v11 = *(_OWORD *)a1;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      *(void *)a1 = 0;
      *(_OWORD *)a1 = *(_OWORD *)(a2 - 24);
      *(void *)(a1 + 16) = *(void *)(a2 - 8);
      *(_OWORD *)(a2 - 24) = v11;
      *(void *)(a2 - 8) = v10;
      return 1;
    case 3uLL:
      sub_71BAD0(a1, a1 + 24, a2 - 24, a3);
      return 1;
    case 4uLL:
      sub_71BF58(a1, a1 + 24, a1 + 48, a2 - 24, a3);
      return 1;
    case 5uLL:
      sub_71B94C(a1, a1 + 24, a1 + 48, a1 + 72, a2 - 24, a3);
      return 1;
    default:
      uint64_t v12 = a1 + 48;
      sub_71BAD0(a1, a1 + 24, a1 + 48, a3);
      uint64_t v14 = a1 + 72;
      if (a1 + 72 == a2) {
        return 1;
      }
      uint64_t v15 = 0;
      int v16 = 0;
      break;
  }
  while (1)
  {
    double v20 = sub_719F34((uint64_t)v13, *(void **)(a3 + 8), v14);
    if (v20 < sub_719F34(v21, *(void **)(a3 + 8), v12))
    {
      uint64_t v13 = 0;
      long long v29 = *(_OWORD *)v14;
      uint64_t v30 = *(void *)(v14 + 16);
      *(void *)(v14 + 8) = 0;
      *(void *)(v14 + 16) = 0;
      *(void *)uint64_t v14 = 0;
      uint64_t v22 = v15;
      do
      {
        uint64_t v23 = a1 + v22;
        long long v24 = (void *)(a1 + v22 + 72);
        if (v13)
        {
          *(void *)(v23 + 80) = v13;
          operator delete(v13);
          *long long v24 = 0;
          *(void *)(a1 + v22 + 80) = 0;
          *(void *)(a1 + v22 + 88) = 0;
        }
        *(_OWORD *)long long v24 = *(_OWORD *)(v23 + 48);
        *(void *)(v23 + 88) = *(void *)(v23 + 64);
        *(void *)(v23 + 48) = 0;
        *(void *)(v23 + 56) = 0;
        *(void *)(v23 + 64) = 0;
        if (v22 == -48)
        {
          uint64_t v17 = (void *)(a1 + 8);
          uint64_t v18 = (void *)a1;
          goto LABEL_7;
        }
        double v25 = sub_719F34((uint64_t)v13, *(void **)(a3 + 8), (uint64_t)&v29);
        long double v27 = sub_719F34(v26, *(void **)(a3 + 8), a1 + v22 + 24);
        uint64_t v13 = *(void **)(v23 + 48);
        v22 -= 24;
      }
      while (v25 < v27);
      uint64_t v28 = a1 + v22;
      uint64_t v17 = (void *)(a1 + v22 + 80);
      uint64_t v18 = (void *)(v28 + 72);
      if (v13)
      {
        *(void *)(v28 + 80) = v13;
        operator delete(v13);
        *uint64_t v18 = 0;
        v18[1] = 0;
        void v18[2] = 0;
      }
LABEL_7:
      uint64_t v19 = *((void *)&v29 + 1);
      *uint64_t v18 = v29;
      *uint64_t v17 = v19;
      void v18[2] = v30;
      if (++v16 == 8) {
        return v14 + 24 == a2;
      }
    }
    uint64_t v12 = v14;
    v15 += 24;
    v14 += 24;
    if (v14 == a2) {
      return 1;
    }
  }
}

void sub_71BF28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_71BF58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_71BAD0(a1, a2, a3, a5);
  double v11 = sub_719F34(v10, *(void **)(a5 + 8), a4);
  if (v11 < sub_719F34(v12, *(void **)(a5 + 8), a3))
  {
    uint64_t v14 = *(void *)(a3 + 16);
    long long v15 = *(_OWORD *)a3;
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
    *(void *)a3 = 0;
    *(_OWORD *)a3 = *(_OWORD *)a4;
    *(void *)(a3 + 16) = *(void *)(a4 + 16);
    *(_OWORD *)a4 = v15;
    *(void *)(a4 + 16) = v14;
    double v16 = sub_719F34(v13, *(void **)(a5 + 8), a3);
    if (v16 < sub_719F34(v17, *(void **)(a5 + 8), a2))
    {
      uint64_t v19 = *(void *)(a2 + 16);
      long long v20 = *(_OWORD *)a2;
      *(void *)(a2 + 8) = 0;
      *(void *)(a2 + 16) = 0;
      *(void *)a2 = 0;
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(void *)(a2 + 16) = *(void *)(a3 + 16);
      *(_OWORD *)a3 = v20;
      *(void *)(a3 + 16) = v19;
      double v21 = sub_719F34(v18, *(void **)(a5 + 8), a2);
      if (v21 < sub_719F34(v22, *(void **)(a5 + 8), a1))
      {
        uint64_t v23 = *(void *)(a1 + 16);
        long long v24 = *(_OWORD *)a1;
        *(void *)(a1 + 8) = 0;
        *(void *)(a1 + 16) = 0;
        *(void *)a1 = 0;
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(_OWORD *)a2 = v24;
        *(void *)(a2 + 16) = v23;
      }
    }
  }
}

void sub_71C08C()
{
  byte_25A87DF = 1;
  word_25A87C8 = 65;
}

uint64_t *sub_71C0A8(uint64_t *a1, void *a2)
{
  *a1 = (uint64_t)a2;
  a1[1] = sub_3766F8(a2);
  a1[2] = sub_3750CC((void *)*a1);
  uint64_t v3 = *a1;
  char v6 = 0;
  LOBYTE(__p) = 0;
  sub_71D144((uint64_t)(a1 + 3), v3, &__p);
  if (v6 < 0) {
    operator delete((void *)__p);
  }
  return a1;
}

void sub_71C12C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_71C148(uint64_t a1, uint64_t a2, void *a3)
{
  sub_71C1C8(a1, a2, a3);
  uint64_t v4 = a3[133];
  uint64_t v5 = a3[134];
  if (v4 != v5)
  {
    char v6 = a3 + 1445;
    do
    {
      int v7 = *(_DWORD *)(v4 + 160);
      if (v7 != 17 && v7 != 85) {
        *(_DWORD *)(v4 + 1860) = *(_DWORD *)sub_66AF3C(v6, *(void *)(v4 + 16));
      }
      v4 += 2400;
    }
    while (v4 != v5);
  }
}

void sub_71C1C8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3;
  unint64_t v5 = sub_46C760(a3);
  if (v5)
  {
    unint64_t v6 = v5;
    unint64_t v7 = 0;
    unint64_t v8 = 0;
    uint64_t v85 = a1;
    double v86 = (void **)(v3 + 1445);
    uint64_t v9 = v3 + 133;
    unint64_t v84 = v5;
    while (1)
    {
      do
        uint64_t v10 = sub_51690C(v9, v7++);
      while (v8 >= *(void *)(v10 + 24));
      double v11 = (int **)sub_46C8EC(v3, v8);
      sub_71C928((uint64_t *)a1, v11);
      uint64_t v12 = (char *)*v11;
      uint64_t v13 = (unsigned __int16 *)((char *)*v11 - **v11);
      unsigned int v14 = *v13;
      --v7;
      if (v14 >= 0x2F && v13[23])
      {
        unsigned int v15 = v12[v13[23]];
        BOOL v47 = v15 > 0x1A;
        int v16 = (1 << v15) & 0x4810001;
        if (!v47 && v16 != 0)
        {
          int v18 = 0;
          uint64_t v19 = (int *)v3[1446];
          unint64_t v20 = v3[1447];
          if ((unint64_t)v19 >= v20) {
            goto LABEL_35;
          }
          goto LABEL_3;
        }
      }
      if (*((unsigned char *)v11 + 38))
      {
        if (v14 < 0xB) {
          goto LABEL_76;
        }
        if (!v13[5]) {
          goto LABEL_27;
        }
        int v21 = *(_DWORD *)&v12[v13[5]];
        if ((v21 & 0x20) == 0) {
          goto LABEL_27;
        }
      }
      else
      {
        if (v14 < 0xB) {
          goto LABEL_76;
        }
        if (!v13[5] || (int v21 = *(_DWORD *)&v12[v13[5]], (v21 & 0x10) == 0))
        {
LABEL_27:
          if (v14 < 0x2F) {
            goto LABEL_44;
          }
          LODWORD(v22) = v13[23];
          if (!v13[23]) {
            goto LABEL_44;
          }
          goto LABEL_29;
        }
      }
      if (v14 >= 0x2F && (uint64_t v22 = v13[23]) != 0)
      {
        int v18 = 1;
        if ((v21 & 4) != 0 || v12[v22] == 23) {
          goto LABEL_34;
        }
LABEL_29:
        unsigned int v23 = v12[v22];
        BOOL v47 = v23 > 0x2F;
        uint64_t v24 = (1 << v23) & 0xE2E040048000;
        if (!v47 && v24 != 0)
        {
          int v18 = 3;
LABEL_34:
          uint64_t v19 = (int *)v3[1446];
          unint64_t v20 = v3[1447];
          if ((unint64_t)v19 >= v20) {
            goto LABEL_35;
          }
          goto LABEL_3;
        }
LABEL_44:
        if (!*(unsigned char *)(a1 + 80)) {
          goto LABEL_76;
        }
        if (*((unsigned char *)v11 + 38))
        {
          if (v14 < 0x11) {
            goto LABEL_76;
          }
          unsigned int v34 = v13[8];
          if (!v34) {
            goto LABEL_76;
          }
        }
        else
        {
          if (v14 < 0xF) {
            goto LABEL_76;
          }
          unsigned int v34 = v13[7];
          if (!v34) {
            goto LABEL_76;
          }
        }
        unsigned int v45 = v12[v34];
        double v46 = (double)v45;
        if (!v45) {
          double v46 = -1.0;
        }
        BOOL v47 = v46 < 0.0 || ((*(void *)&v46 & 0x7FFFFFFFFFFFFFFFuLL) - 0x10000000000000) >> 53 > 0x3FE;
        BOOL v48 = !v47 || *(void *)&v46 == 0;
        if (!v48 || v46 <= 0.0)
        {
LABEL_76:
          double v50 = sub_71CAC8(a1, a2, v3, v7, v8);
          BOOL v53 = *(uint64_t *)&v50 > -1 && ((*(void *)&v50 & 0x7FFFFFFFFFFFFFFFuLL) - 0x10000000000000) >> 53 < 0x3FF
             || (unint64_t)(*(void *)&v50 - 1) < 0xFFFFFFFFFFFFFLL
             || (*(void *)&v50 & 0x7FFFFFFFFFFFFFFFLL) == 0;
          int v18 = 3;
          if (!v53 || v50 <= 0.0) {
            goto LABEL_93;
          }
          if (v50 > *(double *)(a1 + 32))
          {
            int v18 = 0;
            uint64_t v19 = (int *)v3[1446];
            unint64_t v54 = v3[1447];
            if ((unint64_t)v19 < v54) {
              goto LABEL_3;
            }
            goto LABEL_94;
          }
          if (v50 <= *(double *)(a1 + 40))
          {
            if (v50 <= *(double *)(a1 + 48)) {
              int v18 = 3;
            }
            else {
              int v18 = 2;
            }
            uint64_t v19 = (int *)v3[1446];
            unint64_t v54 = v3[1447];
            if ((unint64_t)v19 < v54) {
              goto LABEL_3;
            }
          }
          else
          {
            int v18 = 1;
LABEL_93:
            uint64_t v19 = (int *)v3[1446];
            unint64_t v54 = v3[1447];
            if ((unint64_t)v19 < v54) {
              goto LABEL_3;
            }
          }
LABEL_94:
          uint64_t v55 = v3;
          uint64_t v26 = (int *)*v86;
          uint64_t v56 = (char *)v19 - (unsigned char *)*v86;
          uint64_t v57 = v56 >> 2;
          unint64_t v58 = (v56 >> 2) + 1;
          if (v58 >> 62) {
            goto LABEL_147;
          }
          uint64_t v59 = v54 - (void)v26;
          if (v59 >> 1 > v58) {
            unint64_t v58 = v59 >> 1;
          }
          if ((unint64_t)v59 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v58 = 0x3FFFFFFFFFFFFFFFLL;
          }
          unint64_t v87 = v58;
          if (v58)
          {
            if (v58 >> 62) {
              goto LABEL_148;
            }
            long long v31 = operator new(4 * v58);
            unint64_t v32 = (int *)&v31[4 * v57];
            int *v32 = v18;
            uint64_t v33 = (uint64_t)(v32 + 1);
            if (v19 == v26)
            {
LABEL_105:
              uint64_t v3 = v55;
              a1 = v85;
              goto LABEL_136;
            }
          }
          else
          {
            long long v31 = 0;
            unint64_t v32 = (int *)(4 * v57);
            *(_DWORD *)(4 * v57) = v18;
            uint64_t v33 = 4 * v57 + 4;
            if (v19 == v26) {
              goto LABEL_105;
            }
          }
          unint64_t v60 = (char *)(v19 - 1) - (char *)v26;
          if (v60 < 0x2C)
          {
            uint64_t v3 = v55;
            a1 = v85;
            do
            {
LABEL_110:
              int v69 = *--v19;
              *--unint64_t v32 = v69;
            }
            while (v19 != v26);
            goto LABEL_136;
          }
          unint64_t v61 = (char *)v19 - &v31[v56];
          uint64_t v3 = v55;
          a1 = v85;
          if (v61 < 0x20) {
            goto LABEL_110;
          }
          uint64_t v62 = (v60 >> 2) + 1;
          uint64_t v63 = 4 * (v62 & 0x7FFFFFFFFFFFFFF8);
          long long v64 = &v19[v63 / 0xFFFFFFFFFFFFFFFCLL];
          unint64_t v32 = (int *)((char *)v32 - v63);
          uint64_t v65 = &v31[4 * v57 - 16];
          uint64_t v66 = v19 - 4;
          uint64_t v67 = v62 & 0x7FFFFFFFFFFFFFF8;
          do
          {
            long long v68 = *(_OWORD *)v66;
            *(v65 - 1) = *((_OWORD *)v66 - 1);
            *uint64_t v65 = v68;
            v65 -= 2;
            v66 -= 8;
            v67 -= 8;
          }
          while (v67);
          uint64_t v19 = v64;
          if (v62 != (v62 & 0x7FFFFFFFFFFFFFF8)) {
            goto LABEL_110;
          }
          goto LABEL_136;
        }
        if (v46 <= *(double *)(a1 + 56))
        {
          if (v46 <= *(double *)(a1 + 64))
          {
            if (v46 <= *(double *)(a1 + 72))
            {
              int v18 = 3;
              uint64_t v19 = (int *)v3[1446];
              unint64_t v49 = v3[1447];
              if ((unint64_t)v19 < v49) {
                goto LABEL_3;
              }
            }
            else
            {
              int v18 = 2;
              uint64_t v19 = (int *)v3[1446];
              unint64_t v49 = v3[1447];
              if ((unint64_t)v19 < v49) {
                goto LABEL_3;
              }
            }
          }
          else
          {
            int v18 = 1;
            uint64_t v19 = (int *)v3[1446];
            unint64_t v49 = v3[1447];
            if ((unint64_t)v19 < v49) {
              goto LABEL_3;
            }
          }
        }
        else
        {
          int v18 = 0;
          uint64_t v19 = (int *)v3[1446];
          unint64_t v49 = v3[1447];
          if ((unint64_t)v19 < v49) {
            goto LABEL_3;
          }
        }
        uint64_t v26 = (int *)*v86;
        uint64_t v70 = (char *)v19 - (unsigned char *)*v86;
        uint64_t v71 = v70 >> 2;
        unint64_t v72 = (v70 >> 2) + 1;
        if (v72 >> 62) {
LABEL_147:
        }
          sub_2E00();
        uint64_t v73 = v49 - (void)v26;
        if (v73 >> 1 > v72) {
          unint64_t v72 = v73 >> 1;
        }
        if ((unint64_t)v73 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v72 = 0x3FFFFFFFFFFFFFFFLL;
        }
        unint64_t v87 = v72;
        if (v72)
        {
          if (v72 >> 62) {
LABEL_148:
          }
            sub_188D718();
          long long v31 = operator new(4 * v72);
          unint64_t v32 = (int *)&v31[4 * v71];
          int *v32 = v18;
          uint64_t v33 = (uint64_t)(v32 + 1);
          if (v19 == v26)
          {
LABEL_135:
            a1 = v85;
            goto LABEL_136;
          }
        }
        else
        {
          long long v31 = 0;
          unint64_t v32 = (int *)(4 * v71);
          *(_DWORD *)(4 * v71) = v18;
          uint64_t v33 = 4 * v71 + 4;
          if (v19 == v26) {
            goto LABEL_135;
          }
        }
        unint64_t v74 = (char *)(v19 - 1) - (char *)v26;
        if (v74 < 0x2C)
        {
          a1 = v85;
          do
          {
LABEL_144:
            int v83 = *--v19;
            *--unint64_t v32 = v83;
          }
          while (v19 != v26);
          goto LABEL_136;
        }
        unint64_t v75 = (char *)v19 - &v31[v70];
        a1 = v85;
        if (v75 < 0x20) {
          goto LABEL_144;
        }
        uint64_t v76 = (v74 >> 2) + 1;
        uint64_t v77 = 4 * (v76 & 0x7FFFFFFFFFFFFFF8);
        uint64_t v78 = &v19[v77 / 0xFFFFFFFFFFFFFFFCLL];
        unint64_t v32 = (int *)((char *)v32 - v77);
        int64_t v79 = &v31[4 * v71 - 16];
        int64_t v80 = v19 - 4;
        uint64_t v81 = v76 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          long long v82 = *(_OWORD *)v80;
          *(v79 - 1) = *((_OWORD *)v80 - 1);
          *int64_t v79 = v82;
          v79 -= 2;
          v80 -= 8;
          v81 -= 8;
        }
        while (v81);
        uint64_t v19 = v78;
        if (v76 != (v76 & 0x7FFFFFFFFFFFFFF8)) {
          goto LABEL_144;
        }
LABEL_136:
        v3[1445] = v32;
        v3[1446] = v33;
        v3[1447] = &v31[4 * v87];
        if (v26) {
          operator delete(v26);
        }
        unint64_t v6 = v84;
        v3[1446] = v33;
        if (++v8 == v84) {
          return;
        }
      }
      else
      {
        if ((v21 & 4) == 0) {
          goto LABEL_27;
        }
        int v18 = 1;
        uint64_t v19 = (int *)v3[1446];
        unint64_t v20 = v3[1447];
        if ((unint64_t)v19 >= v20)
        {
LABEL_35:
          uint64_t v26 = (int *)*v86;
          uint64_t v27 = (char *)v19 - (unsigned char *)*v86;
          uint64_t v28 = v27 >> 2;
          unint64_t v29 = (v27 >> 2) + 1;
          if (v29 >> 62) {
            goto LABEL_147;
          }
          uint64_t v30 = v20 - (void)v26;
          if (v30 >> 1 > v29) {
            unint64_t v29 = v30 >> 1;
          }
          if ((unint64_t)v30 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v29 = 0x3FFFFFFFFFFFFFFFLL;
          }
          unint64_t v87 = v29;
          if (v29)
          {
            if (v29 >> 62) {
              goto LABEL_148;
            }
            long long v31 = operator new(4 * v29);
            unint64_t v32 = (int *)&v31[4 * v28];
            int *v32 = v18;
            uint64_t v33 = (uint64_t)(v32 + 1);
            if (v19 == v26) {
              goto LABEL_135;
            }
          }
          else
          {
            long long v31 = 0;
            unint64_t v32 = (int *)(4 * v28);
            *(_DWORD *)(4 * v28) = v18;
            uint64_t v33 = 4 * v28 + 4;
            if (v19 == v26) {
              goto LABEL_135;
            }
          }
          unint64_t v35 = (char *)(v19 - 1) - (char *)v26;
          if (v35 < 0x2C)
          {
            a1 = v85;
            do
            {
LABEL_56:
              int v44 = *--v19;
              *--unint64_t v32 = v44;
            }
            while (v19 != v26);
            goto LABEL_136;
          }
          unint64_t v36 = (char *)v19 - &v31[v27];
          a1 = v85;
          if (v36 < 0x20) {
            goto LABEL_56;
          }
          uint64_t v37 = (v35 >> 2) + 1;
          uint64_t v38 = 4 * (v37 & 0x7FFFFFFFFFFFFFF8);
          uint64_t v39 = &v19[v38 / 0xFFFFFFFFFFFFFFFCLL];
          unint64_t v32 = (int *)((char *)v32 - v38);
          int64_t v40 = &v31[4 * v28 - 16];
          BOOL v41 = v19 - 4;
          uint64_t v42 = v37 & 0x7FFFFFFFFFFFFFF8;
          do
          {
            long long v43 = *(_OWORD *)v41;
            *(v40 - 1) = *((_OWORD *)v41 - 1);
            _OWORD *v40 = v43;
            v40 -= 2;
            v41 -= 8;
            v42 -= 8;
          }
          while (v42);
          uint64_t v19 = v39;
          if (v37 != (v37 & 0x7FFFFFFFFFFFFFF8)) {
            goto LABEL_56;
          }
          goto LABEL_136;
        }
LABEL_3:
        int *v19 = v18;
        v3[1446] = v19 + 1;
        if (++v8 == v6) {
          return;
        }
      }
    }
  }
}

void sub_71C928(uint64_t *a1, void *a2)
{
  uint64_t v3 = (unsigned __int16 *)(*a2 - *(int *)*a2);
  if (*v3 >= 0xDu && (uint64_t v4 = v3[6]) != 0) {
    uint64_t v5 = 4 * *(unsigned __int16 *)(*a2 + v4);
  }
  else {
    uint64_t v5 = 0;
  }
  unint64_t v6 = sub_290DEC(a1[2] + 3896, 1u, 0);
  unint64_t v7 = &v6[-*(int *)v6];
  if (*(unsigned __int16 *)v7 < 0xBu)
  {
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = *((unsigned __int16 *)v7 + 5);
    if (v8) {
      v8 += (uint64_t)&v6[*(unsigned int *)&v6[v8]];
    }
  }
  uint64_t v9 = (int *)(v8 + v5 + 4 + *(unsigned int *)(v8 + v5 + 4));
  uint64_t v10 = (unsigned __int16 *)((char *)v9 - *v9);
  if (*v10 < 5u || (uint64_t v11 = v10[2]) == 0)
  {
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = 0;
    __dst.__r_.__value_.__s.__data_[0] = 0;
    goto LABEL_21;
  }
  uint64_t v12 = (unsigned int *)((char *)v9 + v11);
  uint64_t v13 = *v12;
  unsigned int v15 = (char *)v12 + v13 + 4;
  std::string::size_type v14 = *(unsigned int *)((char *)v12 + v13);
  if (v14 >= 0x17)
  {
    if ((v14 | 7) == 0x17) {
      uint64_t v17 = (v14 & 0xFFFFFFF8) + 8;
    }
    else {
      uint64_t v17 = v14 | 7;
    }
    p_dst = (std::string *)operator new(v17 + 1);
    __dst.__r_.__value_.__l.__size_ = v14;
    __dst.__r_.__value_.__r.__words[2] = v17 - 0x7FFFFFFFFFFFFFFFLL;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
  }
  else
  {
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = *(unsigned int *)((char *)v12 + v13);
    p_dst = &__dst;
    if (!v14) {
      goto LABEL_20;
    }
  }
  memcpy(p_dst, v15, v14);
LABEL_20:
  p_dst->__r_.__value_.__s.__data_[v14] = 0;
LABEL_21:
  sub_71CEAC((uint64_t)(a1 + 3), *a1, &__dst);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
}

void sub_71CAAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_71CAC8(uint64_t a1, uint64_t a2, void *a3, unint64_t a4, unint64_t a5)
{
  uint64_t v9 = sub_4A5E10(a3 + 133, a4);
  uint64_t v11 = sub_46CCC8(a3, a5, v10);
  uint64_t v13 = *(void *)(a1 + 24);
  if (v11 > v13) {
    goto LABEL_7;
  }
  uint64_t v14 = *(void *)(v9 + 872);
  if (v14 >= v13)
  {
    if ((int)a5 < *(_DWORD *)(v9 + 40)) {
      goto LABEL_7;
    }
    uint64_t v21 = 0;
    int v22 = 0;
    unsigned int v23 = (void *)(a2 + 552);
    int64_t v24 = (int)a5;
    while (1)
    {
      uint64_t v25 = sub_46CCC8(a3, v24, v12);
      int v26 = *(_DWORD *)sub_71CC9C(v23, v24);
      uint64_t v27 = v25 + v21;
      uint64_t v28 = *(void *)(a1 + 24);
      if (v25 + v21 > v28) {
        break;
      }
      v22 += v26;
      v21 += v25;
      if (v24-- <= *(int *)(v9 + 40)) {
        goto LABEL_22;
      }
    }
    double v30 = (double)(v28 - v21) / (double)v25 * (double)v26;
    if (v30 >= 0.0)
    {
      if (v30 < 4.50359963e15)
      {
        uint64_t v31 = (uint64_t)(v30 + v30) + 1;
LABEL_20:
        double v30 = (double)(v31 >> 1);
      }
    }
    else if (v30 > -4.50359963e15)
    {
      uint64_t v31 = (uint64_t)(v30 + v30);
      if (v31 >= 1) {
        --v31;
      }
      goto LABEL_20;
    }
    v22 += (int)v30;
    uint64_t v27 = *(void *)(a1 + 24);
LABEL_22:
    if (v27 && v22)
    {
      double v16 = (double)v27 * 0.1;
      double v17 = (double)v22;
      return v16 / v17 * 3.6;
    }
LABEL_7:
    uint64_t v18 = *(void *)(a1 + 8);
    uint64_t v19 = sub_46C8EC(a3, a5);
    return sub_32A35C(v18, *(void *)(v19 + 32), 0);
  }
  if (!v14) {
    goto LABEL_7;
  }
  int v15 = *(_DWORD *)(v9 + 884);
  if (!v15) {
    goto LABEL_7;
  }
  double v16 = (double)v14 * 0.1;
  double v17 = (double)v15;
  return v16 / v17 * 3.6;
}

uint64_t sub_71CC9C(void *a1, unint64_t a2)
{
  if (a2 >= (uint64_t)(a1[1] - *a1) >> 2)
  {
    exception = __cxa_allocate_exception(0x40uLL);
    std::to_string(&v16, a2);
    unint64_t v6 = std::string::insert(&v16, 0, "Out-of-bounds access in Vector::at with index=");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v17.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    uint64_t v8 = std::string::append(&v17, ",size=");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v18.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v18.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v15, (uint64_t)(a1[1] - *a1) >> 2);
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      double v10 = &v15;
    }
    else {
      double v10 = (std::string *)v15.__r_.__value_.__r.__words[0];
    }
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v15.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v15.__r_.__value_.__l.__size_;
    }
    double v12 = std::string::append(&v18, (const std::string::value_type *)v10, size);
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    std::string::size_type v20 = v12->__r_.__value_.__r.__words[2];
    long long v19 = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    uint64_t v14 = (void *)sub_2F404((uint64_t)exception, &v19);
  }
  return *a1 + 4 * a2;
}

void sub_71CDCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 41) < 0) {
    operator delete(*(void **)(v33 - 64));
  }
  if (a14 < 0)
  {
    operator delete(a9);
    if ((a33 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a26 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_10;
    }
  }
  else if ((a33 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(a28);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_7;
  }
LABEL_10:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0) {
LABEL_11:
  }
    _Unwind_Resume(a1);
LABEL_7:
  operator delete(__p);
  goto LABEL_11;
}

void sub_71CEAC(uint64_t a1, uint64_t a2, std::string *__str)
{
  unint64_t v6 = (std::string *)(a1 + 64);
  size_t v7 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  size_t size = __str->__r_.__value_.__l.__size_;
  if ((v7 & 0x80u) == 0) {
    size_t v9 = v7;
  }
  else {
    size_t v9 = size;
  }
  uint64_t v10 = *(unsigned __int8 *)(a1 + 87);
  int v11 = (char)v10;
  if ((v10 & 0x80u) != 0) {
    uint64_t v10 = *(void *)(a1 + 72);
  }
  if (v9 == v10)
  {
    if (v11 >= 0) {
      double v12 = (unsigned __int8 *)(a1 + 64);
    }
    else {
      double v12 = (unsigned __int8 *)v6->__r_.__value_.__r.__words[0];
    }
    if ((v7 & 0x80) != 0)
    {
      if (!memcmp(__str->__r_.__value_.__l.__data_, v12, size)) {
        return;
      }
    }
    else
    {
      if (!v7) {
        return;
      }
      for (double i = __str; i->__r_.__value_.__s.__data_[0] == *v12; double i = (std::string *)((char *)i + 1))
      {
        ++v12;
        if (!--v7) {
          return;
        }
      }
    }
  }
  std::string::operator=(v6, __str);
  unsigned int v23 = operator new(0x30uLL);
  long long v24 = xmmword_20B93C0;
  strcpy((char *)v23, "routing/guidance/RoadTypeCalculator.json");
  if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200(&__dst, __str->__r_.__value_.__l.__data_, __str->__r_.__value_.__l.__size_);
  }
  else
  {
    long long __dst = *(_OWORD *)&__str->__r_.__value_.__l.__data_;
    std::string::size_type v28 = __str->__r_.__value_.__r.__words[2];
  }
  sub_28C774(&__p, (uint64_t)&__dst, 1uLL);
  uint64_t v14 = sub_374CDC(a2, (uint64_t)&v23, (uint64_t *)&__p);
  sub_54214((uint64_t)v25, (uint64_t)v14);
  std::string v15 = (void **)__p;
  if (__p)
  {
    std::string v16 = v22;
    std::string v17 = __p;
    if (v22 != __p)
    {
      do
      {
        if (*((char *)v16 - 1) < 0) {
          operator delete(*(v16 - 3));
        }
        v16 -= 3;
      }
      while (v16 != v15);
      std::string v17 = __p;
    }
    int v22 = v15;
    operator delete(v17);
  }
  if (SHIBYTE(v28) < 0)
  {
    operator delete((void *)__dst);
    if ((SHIBYTE(v24) & 0x80000000) == 0) {
      goto LABEL_30;
    }
LABEL_38:
    operator delete(v23);
    goto LABEL_30;
  }
  if (SHIBYTE(v24) < 0) {
    goto LABEL_38;
  }
LABEL_30:
  sub_71D3D8(a1, v25);
  std::string v18 = v26;
  if (v26)
  {
    do
    {
      std::string::size_type v20 = (void **)*v18;
      sub_55198((uint64_t)(v18 + 5));
      if (*((char *)v18 + 39) < 0) {
        operator delete(v18[2]);
      }
      operator delete(v18);
      std::string v18 = v20;
    }
    while (v20);
  }
  long long v19 = v25[0];
  v25[0] = 0;
  if (v19) {
    operator delete(v19);
  }
}

void sub_71D0EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_71D144(uint64_t a1, uint64_t a2, long long *a3)
{
  *(_OWORD *)(a1 + 41) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  if (*((char *)a3 + 23) < 0)
  {
    sub_4200((unsigned char *)(a1 + 64), *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v6 = *a3;
    *(void *)(a1 + 80) = *((void *)a3 + 2);
    *(_OWORD *)(a1 + 64) = v6;
  }
  std::string v17 = operator new(0x30uLL);
  long long v18 = xmmword_20B93C0;
  strcpy((char *)v17, "routing/guidance/RoadTypeCalculator.json");
  if (*((char *)a3 + 23) < 0)
  {
    sub_4200(&__dst, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long __dst = *a3;
    uint64_t v22 = *((void *)a3 + 2);
  }
  sub_28C774(&__p, (uint64_t)&__dst, 1uLL);
  size_t v7 = sub_374CDC(a2, (uint64_t)&v17, (uint64_t *)&__p);
  sub_54214((uint64_t)v19, (uint64_t)v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    size_t v9 = v16;
    uint64_t v10 = __p;
    if (v16 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    std::string v16 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v22) < 0)
  {
    operator delete((void *)__dst);
    if ((SHIBYTE(v18) & 0x80000000) == 0) {
      goto LABEL_17;
    }
  }
  else if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    goto LABEL_17;
  }
  operator delete(v17);
LABEL_17:
  sub_71D3D8(a1, v19);
  int v11 = v20;
  if (v20)
  {
    do
    {
      uint64_t v14 = (void **)*v11;
      sub_55198((uint64_t)(v11 + 5));
      if (*((char *)v11 + 39) < 0) {
        operator delete(v11[2]);
      }
      operator delete(v11);
      int v11 = v14;
    }
    while (v14);
  }
  double v12 = v19[0];
  v19[0] = 0;
  if (v12) {
    operator delete(v12);
  }
  return a1;
}

void sub_71D33C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if (a18 < 0)
  {
    operator delete(__p);
    if ((*(char *)(v19 + 87) & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((*(char *)(v19 + 87) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*v20);
  _Unwind_Resume(exception_object);
}

void sub_71D3D8(uint64_t a1, void *a2)
{
  long long __p = operator new(0x28uLL);
  long long v7 = xmmword_20B9390;
  strcpy((char *)__p, "freeflow_speed_lookback_distance");
  sub_5C8A4(a2, (uint64_t)&__p, (uint64_t *)a1);
  if (SHIBYTE(v7) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x20uLL);
  long long v7 = xmmword_20B5EB0;
  strcpy((char *)__p, "min_freeflow_speed_freeway");
  sub_5D63C(a2, (uint64_t)&__p, (uint64_t *)(a1 + 8));
  if (SHIBYTE(v7) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x28uLL);
  long long v7 = xmmword_20B9260;
  strcpy((char *)__p, "min_freeflow_speed_major_arterial");
  sub_5D63C(a2, (uint64_t)&__p, (uint64_t *)(a1 + 16));
  if (SHIBYTE(v7) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x28uLL);
  long long v7 = xmmword_20B9260;
  strcpy((char *)__p, "min_freeflow_speed_minor_arterial");
  sub_5D63C(a2, (uint64_t)&__p, (uint64_t *)(a1 + 24));
  if (SHIBYTE(v7) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x28uLL);
  long long v7 = xmmword_20B93A0;
  strcpy((char *)__p, "enable_speed_limit_based_road_types");
  uint64_t v4 = sub_58070(a2, (uint64_t)&__p);
  if (v4 && (int v5 = *((_DWORD *)v4 + 12), (v5 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)(a1 + 56) = v5 == 4;
    if ((SHIBYTE(v7) & 0x80000000) == 0) {
      goto LABEL_15;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a1 + 56) != 0;
    if ((SHIBYTE(v7) & 0x80000000) == 0) {
      goto LABEL_15;
    }
  }
  operator delete(__p);
LABEL_15:
  long long __p = operator new(0x19uLL);
  long long v7 = xmmword_20B9250;
  strcpy((char *)__p, "min_speed_limit_freeway");
  sub_5D63C(a2, (uint64_t)&__p, (uint64_t *)(a1 + 32));
  if (SHIBYTE(v7) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x20uLL);
  long long v7 = xmmword_20B9800;
  strcpy((char *)__p, "min_speed_limit_major_arterial");
  sub_5D63C(a2, (uint64_t)&__p, (uint64_t *)(a1 + 40));
  if (SHIBYTE(v7) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x20uLL);
  long long v7 = xmmword_20B9800;
  strcpy((char *)__p, "min_speed_limit_minor_arterial");
  sub_5D63C(a2, (uint64_t)&__p, (uint64_t *)(a1 + 48));
  if (SHIBYTE(v7) < 0) {
    operator delete(__p);
  }
}

void sub_71D6E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_71D718(uint64_t *a1, void *a2)
{
  *a1 = (uint64_t)a2;
  a1[1] = sub_3766F8(a2);
  a1[2] = sub_3750CC((void *)*a1);
  uint64_t v3 = *a1;
  char v6 = 0;
  LOBYTE(__p) = 0;
  sub_71E584((uint64_t)(a1 + 3), v3, &__p);
  if (v6 < 0) {
    operator delete((void *)__p);
  }
  return a1;
}

void sub_71D79C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_71D7B8(uint64_t a1, uint64_t a2, void *a3)
{
  sub_71D838(a1, a2, a3);
  uint64_t v4 = a3[133];
  uint64_t v5 = a3[134];
  if (v4 != v5)
  {
    char v6 = a3 + 1445;
    do
    {
      int v7 = *(_DWORD *)(v4 + 160);
      if (v7 != 17 && v7 != 85) {
        *(_DWORD *)(v4 + 1860) = *(_DWORD *)sub_66AF3C(v6, *(void *)(v4 + 16));
      }
      v4 += 2400;
    }
    while (v4 != v5);
  }
}

void sub_71D838(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3;
  unint64_t v5 = sub_46C760(a3);
  if (v5)
  {
    unint64_t v6 = v5;
    unint64_t v7 = 0;
    unint64_t v8 = 0;
    uint64_t v85 = a1;
    double v86 = (void **)(v3 + 1445);
    size_t v9 = v3 + 133;
    unint64_t v84 = v5;
    while (1)
    {
      do
        uint64_t v10 = sub_51690C(v9, v7++);
      while (v8 >= *(void *)(v10 + 24));
      int v11 = (int **)sub_46C8EC(v3, v8);
      sub_71E14C((uint64_t *)a1, v11);
      double v12 = (char *)*v11;
      long long v13 = (unsigned __int16 *)((char *)*v11 - **v11);
      unsigned int v14 = *v13;
      --v7;
      if (v14 >= 0x2F && v13[23])
      {
        unsigned int v15 = v12[v13[23]];
        BOOL v47 = v15 > 0x1A;
        int v16 = (1 << v15) & 0x4810001;
        if (!v47 && v16 != 0)
        {
          int v18 = 0;
          uint64_t v19 = (int *)v3[1446];
          unint64_t v20 = v3[1447];
          if ((unint64_t)v19 >= v20) {
            goto LABEL_35;
          }
          goto LABEL_3;
        }
      }
      if (*((unsigned char *)v11 + 38))
      {
        if (v14 < 0xB) {
          goto LABEL_76;
        }
        if (!v13[5]) {
          goto LABEL_27;
        }
        int v21 = *(_DWORD *)&v12[v13[5]];
        if ((v21 & 0x20) == 0) {
          goto LABEL_27;
        }
      }
      else
      {
        if (v14 < 0xB) {
          goto LABEL_76;
        }
        if (!v13[5] || (int v21 = *(_DWORD *)&v12[v13[5]], (v21 & 0x10) == 0))
        {
LABEL_27:
          if (v14 < 0x2F) {
            goto LABEL_44;
          }
          LODWORD(v22) = v13[23];
          if (!v13[23]) {
            goto LABEL_44;
          }
          goto LABEL_29;
        }
      }
      if (v14 >= 0x2F && (uint64_t v22 = v13[23]) != 0)
      {
        int v18 = 1;
        if ((v21 & 4) != 0 || v12[v22] == 23) {
          goto LABEL_34;
        }
LABEL_29:
        unsigned int v23 = v12[v22];
        BOOL v47 = v23 > 0x2F;
        uint64_t v24 = (1 << v23) & 0xE2E040048000;
        if (!v47 && v24 != 0)
        {
          int v18 = 3;
LABEL_34:
          uint64_t v19 = (int *)v3[1446];
          unint64_t v20 = v3[1447];
          if ((unint64_t)v19 >= v20) {
            goto LABEL_35;
          }
          goto LABEL_3;
        }
LABEL_44:
        if (!*(unsigned char *)(a1 + 80)) {
          goto LABEL_76;
        }
        if (*((unsigned char *)v11 + 38))
        {
          if (v14 < 0x11) {
            goto LABEL_76;
          }
          unsigned int v34 = v13[8];
          if (!v34) {
            goto LABEL_76;
          }
        }
        else
        {
          if (v14 < 0xF) {
            goto LABEL_76;
          }
          unsigned int v34 = v13[7];
          if (!v34) {
            goto LABEL_76;
          }
        }
        unsigned int v45 = v12[v34];
        double v46 = (double)v45;
        if (!v45) {
          double v46 = -1.0;
        }
        BOOL v47 = v46 < 0.0 || ((*(void *)&v46 & 0x7FFFFFFFFFFFFFFFuLL) - 0x10000000000000) >> 53 > 0x3FE;
        BOOL v48 = !v47 || *(void *)&v46 == 0;
        if (!v48 || v46 <= 0.0)
        {
LABEL_76:
          double v50 = sub_71CAC8(a1, a2, v3, v7, v8);
          BOOL v53 = *(uint64_t *)&v50 > -1 && ((*(void *)&v50 & 0x7FFFFFFFFFFFFFFFuLL) - 0x10000000000000) >> 53 < 0x3FF
             || (unint64_t)(*(void *)&v50 - 1) < 0xFFFFFFFFFFFFFLL
             || (*(void *)&v50 & 0x7FFFFFFFFFFFFFFFLL) == 0;
          int v18 = 3;
          if (!v53 || v50 <= 0.0) {
            goto LABEL_93;
          }
          if (v50 > *(double *)(a1 + 32))
          {
            int v18 = 0;
            uint64_t v19 = (int *)v3[1446];
            unint64_t v54 = v3[1447];
            if ((unint64_t)v19 < v54) {
              goto LABEL_3;
            }
            goto LABEL_94;
          }
          if (v50 <= *(double *)(a1 + 40))
          {
            if (v50 <= *(double *)(a1 + 48)) {
              int v18 = 3;
            }
            else {
              int v18 = 2;
            }
            uint64_t v19 = (int *)v3[1446];
            unint64_t v54 = v3[1447];
            if ((unint64_t)v19 < v54) {
              goto LABEL_3;
            }
          }
          else
          {
            int v18 = 1;
LABEL_93:
            uint64_t v19 = (int *)v3[1446];
            unint64_t v54 = v3[1447];
            if ((unint64_t)v19 < v54) {
              goto LABEL_3;
            }
          }
LABEL_94:
          uint64_t v55 = v3;
          int v26 = (int *)*v86;
          uint64_t v56 = (char *)v19 - (unsigned char *)*v86;
          uint64_t v57 = v56 >> 2;
          unint64_t v58 = (v56 >> 2) + 1;
          if (v58 >> 62) {
            goto LABEL_147;
          }
          uint64_t v59 = v54 - (void)v26;
          if (v59 >> 1 > v58) {
            unint64_t v58 = v59 >> 1;
          }
          if ((unint64_t)v59 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v58 = 0x3FFFFFFFFFFFFFFFLL;
          }
          unint64_t v87 = v58;
          if (v58)
          {
            if (v58 >> 62) {
              goto LABEL_148;
            }
            uint64_t v31 = operator new(4 * v58);
            unint64_t v32 = (int *)&v31[4 * v57];
            int *v32 = v18;
            uint64_t v33 = (uint64_t)(v32 + 1);
            if (v19 == v26)
            {
LABEL_105:
              uint64_t v3 = v55;
              a1 = v85;
              goto LABEL_136;
            }
          }
          else
          {
            uint64_t v31 = 0;
            unint64_t v32 = (int *)(4 * v57);
            *(_DWORD *)(4 * v57) = v18;
            uint64_t v33 = 4 * v57 + 4;
            if (v19 == v26) {
              goto LABEL_105;
            }
          }
          unint64_t v60 = (char *)(v19 - 1) - (char *)v26;
          if (v60 < 0x2C)
          {
            uint64_t v3 = v55;
            a1 = v85;
            do
            {
LABEL_110:
              int v69 = *--v19;
              *--unint64_t v32 = v69;
            }
            while (v19 != v26);
            goto LABEL_136;
          }
          unint64_t v61 = (char *)v19 - &v31[v56];
          uint64_t v3 = v55;
          a1 = v85;
          if (v61 < 0x20) {
            goto LABEL_110;
          }
          uint64_t v62 = (v60 >> 2) + 1;
          uint64_t v63 = 4 * (v62 & 0x7FFFFFFFFFFFFFF8);
          long long v64 = &v19[v63 / 0xFFFFFFFFFFFFFFFCLL];
          unint64_t v32 = (int *)((char *)v32 - v63);
          uint64_t v65 = &v31[4 * v57 - 16];
          uint64_t v66 = v19 - 4;
          uint64_t v67 = v62 & 0x7FFFFFFFFFFFFFF8;
          do
          {
            long long v68 = *(_OWORD *)v66;
            *(v65 - 1) = *((_OWORD *)v66 - 1);
            *uint64_t v65 = v68;
            v65 -= 2;
            v66 -= 8;
            v67 -= 8;
          }
          while (v67);
          uint64_t v19 = v64;
          if (v62 != (v62 & 0x7FFFFFFFFFFFFFF8)) {
            goto LABEL_110;
          }
          goto LABEL_136;
        }
        if (v46 <= *(double *)(a1 + 56))
        {
          if (v46 <= *(double *)(a1 + 64))
          {
            if (v46 <= *(double *)(a1 + 72))
            {
              int v18 = 3;
              uint64_t v19 = (int *)v3[1446];
              unint64_t v49 = v3[1447];
              if ((unint64_t)v19 < v49) {
                goto LABEL_3;
              }
            }
            else
            {
              int v18 = 2;
              uint64_t v19 = (int *)v3[1446];
              unint64_t v49 = v3[1447];
              if ((unint64_t)v19 < v49) {
                goto LABEL_3;
              }
            }
          }
          else
          {
            int v18 = 1;
            uint64_t v19 = (int *)v3[1446];
            unint64_t v49 = v3[1447];
            if ((unint64_t)v19 < v49) {
              goto LABEL_3;
            }
          }
        }
        else
        {
          int v18 = 0;
          uint64_t v19 = (int *)v3[1446];
          unint64_t v49 = v3[1447];
          if ((unint64_t)v19 < v49) {
            goto LABEL_3;
          }
        }
        int v26 = (int *)*v86;
        uint64_t v70 = (char *)v19 - (unsigned char *)*v86;
        uint64_t v71 = v70 >> 2;
        unint64_t v72 = (v70 >> 2) + 1;
        if (v72 >> 62) {
LABEL_147:
        }
          sub_2E00();
        uint64_t v73 = v49 - (void)v26;
        if (v73 >> 1 > v72) {
          unint64_t v72 = v73 >> 1;
        }
        if ((unint64_t)v73 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v72 = 0x3FFFFFFFFFFFFFFFLL;
        }
        unint64_t v87 = v72;
        if (v72)
        {
          if (v72 >> 62) {
LABEL_148:
          }
            sub_188D718();
          uint64_t v31 = operator new(4 * v72);
          unint64_t v32 = (int *)&v31[4 * v71];
          int *v32 = v18;
          uint64_t v33 = (uint64_t)(v32 + 1);
          if (v19 == v26)
          {
LABEL_135:
            a1 = v85;
            goto LABEL_136;
          }
        }
        else
        {
          uint64_t v31 = 0;
          unint64_t v32 = (int *)(4 * v71);
          *(_DWORD *)(4 * v71) = v18;
          uint64_t v33 = 4 * v71 + 4;
          if (v19 == v26) {
            goto LABEL_135;
          }
        }
        unint64_t v74 = (char *)(v19 - 1) - (char *)v26;
        if (v74 < 0x2C)
        {
          a1 = v85;
          do
          {
LABEL_144:
            int v83 = *--v19;
            *--unint64_t v32 = v83;
          }
          while (v19 != v26);
          goto LABEL_136;
        }
        unint64_t v75 = (char *)v19 - &v31[v70];
        a1 = v85;
        if (v75 < 0x20) {
          goto LABEL_144;
        }
        uint64_t v76 = (v74 >> 2) + 1;
        uint64_t v77 = 4 * (v76 & 0x7FFFFFFFFFFFFFF8);
        uint64_t v78 = &v19[v77 / 0xFFFFFFFFFFFFFFFCLL];
        unint64_t v32 = (int *)((char *)v32 - v77);
        int64_t v79 = &v31[4 * v71 - 16];
        int64_t v80 = v19 - 4;
        uint64_t v81 = v76 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          long long v82 = *(_OWORD *)v80;
          *(v79 - 1) = *((_OWORD *)v80 - 1);
          *int64_t v79 = v82;
          v79 -= 2;
          v80 -= 8;
          v81 -= 8;
        }
        while (v81);
        uint64_t v19 = v78;
        if (v76 != (v76 & 0x7FFFFFFFFFFFFFF8)) {
          goto LABEL_144;
        }
LABEL_136:
        v3[1445] = v32;
        v3[1446] = v33;
        v3[1447] = &v31[4 * v87];
        if (v26) {
          operator delete(v26);
        }
        unint64_t v6 = v84;
        v3[1446] = v33;
        if (++v8 == v84) {
          return;
        }
      }
      else
      {
        if ((v21 & 4) == 0) {
          goto LABEL_27;
        }
        int v18 = 1;
        uint64_t v19 = (int *)v3[1446];
        unint64_t v20 = v3[1447];
        if ((unint64_t)v19 >= v20)
        {
LABEL_35:
          int v26 = (int *)*v86;
          uint64_t v27 = (char *)v19 - (unsigned char *)*v86;
          uint64_t v28 = v27 >> 2;
          unint64_t v29 = (v27 >> 2) + 1;
          if (v29 >> 62) {
            goto LABEL_147;
          }
          uint64_t v30 = v20 - (void)v26;
          if (v30 >> 1 > v29) {
            unint64_t v29 = v30 >> 1;
          }
          if ((unint64_t)v30 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v29 = 0x3FFFFFFFFFFFFFFFLL;
          }
          unint64_t v87 = v29;
          if (v29)
          {
            if (v29 >> 62) {
              goto LABEL_148;
            }
            uint64_t v31 = operator new(4 * v29);
            unint64_t v32 = (int *)&v31[4 * v28];
            int *v32 = v18;
            uint64_t v33 = (uint64_t)(v32 + 1);
            if (v19 == v26) {
              goto LABEL_135;
            }
          }
          else
          {
            uint64_t v31 = 0;
            unint64_t v32 = (int *)(4 * v28);
            *(_DWORD *)(4 * v28) = v18;
            uint64_t v33 = 4 * v28 + 4;
            if (v19 == v26) {
              goto LABEL_135;
            }
          }
          unint64_t v35 = (char *)(v19 - 1) - (char *)v26;
          if (v35 < 0x2C)
          {
            a1 = v85;
            do
            {
LABEL_56:
              int v44 = *--v19;
              *--unint64_t v32 = v44;
            }
            while (v19 != v26);
            goto LABEL_136;
          }
          unint64_t v36 = (char *)v19 - &v31[v27];
          a1 = v85;
          if (v36 < 0x20) {
            goto LABEL_56;
          }
          uint64_t v37 = (v35 >> 2) + 1;
          uint64_t v38 = 4 * (v37 & 0x7FFFFFFFFFFFFFF8);
          uint64_t v39 = &v19[v38 / 0xFFFFFFFFFFFFFFFCLL];
          unint64_t v32 = (int *)((char *)v32 - v38);
          int64_t v40 = &v31[4 * v28 - 16];
          BOOL v41 = v19 - 4;
          uint64_t v42 = v37 & 0x7FFFFFFFFFFFFFF8;
          do
          {
            long long v43 = *(_OWORD *)v41;
            *(v40 - 1) = *((_OWORD *)v41 - 1);
            _OWORD *v40 = v43;
            v40 -= 2;
            v41 -= 8;
            v42 -= 8;
          }
          while (v42);
          uint64_t v19 = v39;
          if (v37 != (v37 & 0x7FFFFFFFFFFFFFF8)) {
            goto LABEL_56;
          }
          goto LABEL_136;
        }
LABEL_3:
        int *v19 = v18;
        v3[1446] = v19 + 1;
        if (++v8 == v6) {
          return;
        }
      }
    }
  }
}

uint64_t sub_71DF98(uint64_t a1, int **a2)
{
  uint64_t v2 = (char *)*a2;
  uint64_t v3 = (unsigned __int16 *)((char *)*a2 - **a2);
  unsigned int v4 = *v3;
  if (v4 >= 0x2F && v3[23])
  {
    unsigned int v5 = v2[v3[23]];
    BOOL v18 = v5 > 0x1A;
    int v6 = (1 << v5) & 0x4810001;
    if (!v18 && v6 != 0) {
      return 0;
    }
  }
  if (*((unsigned char *)a2 + 38))
  {
    if (v4 >= 0xB)
    {
      if (!v3[5]) {
        goto LABEL_22;
      }
      int v9 = *(_DWORD *)&v2[v3[5]];
      if ((v9 & 0x20) == 0) {
        goto LABEL_22;
      }
      goto LABEL_16;
    }
    return 3;
  }
  if (v4 < 0xB) {
    return 3;
  }
  if (!v3[5]) {
    goto LABEL_22;
  }
  int v9 = *(_DWORD *)&v2[v3[5]];
  if ((v9 & 0x10) == 0) {
    goto LABEL_22;
  }
LABEL_16:
  if (v4 < 0x2F || (uint64_t v10 = v3[23]) == 0)
  {
    if ((v9 & 4) != 0) {
      return 1;
    }
LABEL_22:
    if (v4 < 0x2F) {
      goto LABEL_29;
    }
    LODWORD(v10) = v3[23];
    if (!v3[23]) {
      goto LABEL_29;
    }
    goto LABEL_24;
  }
  uint64_t v11 = 1;
  if ((v9 & 4) != 0 || v2[v10] == 23) {
    return v11;
  }
LABEL_24:
  unsigned int v12 = v2[v10];
  BOOL v18 = v12 > 0x2F;
  uint64_t v13 = (1 << v12) & 0xE2E040048000;
  if (!v18 && v13 != 0) {
    return 3;
  }
LABEL_29:
  if (!*(unsigned char *)(a1 + 80)) {
    return 3;
  }
  if (*((unsigned char *)a2 + 38))
  {
    if (v4 < 0x11) {
      return 3;
    }
    unsigned int v15 = v3[8];
    if (!v3[8]) {
      return 3;
    }
  }
  else
  {
    if (v4 < 0xF) {
      return 3;
    }
    unsigned int v15 = v3[7];
    if (!v3[7]) {
      return 3;
    }
  }
  unsigned int v16 = v2[v15];
  double v17 = (double)v16;
  if (!v16) {
    double v17 = -1.0;
  }
  BOOL v18 = v17 < 0.0 || ((*(void *)&v17 & 0x7FFFFFFFFFFFFFFFuLL) - 0x10000000000000) >> 53 > 0x3FE;
  BOOL v19 = !v18 || *(void *)&v17 == 0;
  uint64_t v11 = 3;
  if (v19 && v17 > 0.0)
  {
    if (v17 > *(double *)(a1 + 56)) {
      return 0;
    }
    if (v17 > *(double *)(a1 + 64)) {
      return 1;
    }
    if (v17 > *(double *)(a1 + 72)) {
      return 2;
    }
  }
  return v11;
}

void sub_71E14C(uint64_t *a1, void *a2)
{
  uint64_t v3 = (unsigned __int16 *)(*a2 - *(int *)*a2);
  if (*v3 >= 0xDu && (uint64_t v4 = v3[6]) != 0) {
    uint64_t v5 = 4 * *(unsigned __int16 *)(*a2 + v4);
  }
  else {
    uint64_t v5 = 0;
  }
  int v6 = sub_290DEC(a1[2] + 3896, 1u, 0);
  unint64_t v7 = &v6[-*(int *)v6];
  if (*(unsigned __int16 *)v7 < 0xBu)
  {
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = *((unsigned __int16 *)v7 + 5);
    if (v8) {
      v8 += (uint64_t)&v6[*(unsigned int *)&v6[v8]];
    }
  }
  int v9 = (int *)(v8 + v5 + 4 + *(unsigned int *)(v8 + v5 + 4));
  uint64_t v10 = (unsigned __int16 *)((char *)v9 - *v9);
  if (*v10 < 5u || (uint64_t v11 = v10[2]) == 0)
  {
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = 0;
    __dst.__r_.__value_.__s.__data_[0] = 0;
    goto LABEL_21;
  }
  unsigned int v12 = (unsigned int *)((char *)v9 + v11);
  uint64_t v13 = *v12;
  unsigned int v15 = (char *)v12 + v13 + 4;
  std::string::size_type v14 = *(unsigned int *)((char *)v12 + v13);
  if (v14 >= 0x17)
  {
    if ((v14 | 7) == 0x17) {
      uint64_t v17 = (v14 & 0xFFFFFFF8) + 8;
    }
    else {
      uint64_t v17 = v14 | 7;
    }
    p_dst = (std::string *)operator new(v17 + 1);
    __dst.__r_.__value_.__l.__size_ = v14;
    __dst.__r_.__value_.__r.__words[2] = v17 - 0x7FFFFFFFFFFFFFFFLL;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
  }
  else
  {
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = *(unsigned int *)((char *)v12 + v13);
    p_dst = &__dst;
    if (!v14) {
      goto LABEL_20;
    }
  }
  memcpy(p_dst, v15, v14);
LABEL_20:
  p_dst->__r_.__value_.__s.__data_[v14] = 0;
LABEL_21:
  sub_71E2EC((uint64_t)(a1 + 3), *a1, &__dst);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
}

void sub_71E2D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_71E2EC(uint64_t a1, uint64_t a2, std::string *__str)
{
  int v6 = (std::string *)(a1 + 64);
  size_t v7 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  size_t size = __str->__r_.__value_.__l.__size_;
  if ((v7 & 0x80u) == 0) {
    size_t v9 = v7;
  }
  else {
    size_t v9 = size;
  }
  uint64_t v10 = *(unsigned __int8 *)(a1 + 87);
  int v11 = (char)v10;
  if ((v10 & 0x80u) != 0) {
    uint64_t v10 = *(void *)(a1 + 72);
  }
  if (v9 == v10)
  {
    if (v11 >= 0) {
      unsigned int v12 = (unsigned __int8 *)(a1 + 64);
    }
    else {
      unsigned int v12 = (unsigned __int8 *)v6->__r_.__value_.__r.__words[0];
    }
    if ((v7 & 0x80) != 0)
    {
      if (!memcmp(__str->__r_.__value_.__l.__data_, v12, size)) {
        return;
      }
    }
    else
    {
      if (!v7) {
        return;
      }
      for (double i = __str; i->__r_.__value_.__s.__data_[0] == *v12; double i = (std::string *)((char *)i + 1))
      {
        ++v12;
        if (!--v7) {
          return;
        }
      }
    }
  }
  std::string::operator=(v6, __str);
  unsigned int v23 = operator new(0x30uLL);
  long long v24 = xmmword_20B93C0;
  strcpy((char *)v23, "routing/guidance/RoadTypeCalculator.json");
  if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200(&__dst, __str->__r_.__value_.__l.__data_, __str->__r_.__value_.__l.__size_);
  }
  else
  {
    long long __dst = *(_OWORD *)&__str->__r_.__value_.__l.__data_;
    std::string::size_type v28 = __str->__r_.__value_.__r.__words[2];
  }
  sub_28C774(&__p, (uint64_t)&__dst, 1uLL);
  std::string::size_type v14 = sub_374CDC(a2, (uint64_t)&v23, (uint64_t *)&__p);
  sub_54214((uint64_t)v25, (uint64_t)v14);
  unsigned int v15 = (void **)__p;
  if (__p)
  {
    unsigned int v16 = v22;
    uint64_t v17 = __p;
    if (v22 != __p)
    {
      do
      {
        if (*((char *)v16 - 1) < 0) {
          operator delete(*(v16 - 3));
        }
        v16 -= 3;
      }
      while (v16 != v15);
      uint64_t v17 = __p;
    }
    uint64_t v22 = v15;
    operator delete(v17);
  }
  if (SHIBYTE(v28) < 0)
  {
    operator delete((void *)__dst);
    if ((SHIBYTE(v24) & 0x80000000) == 0) {
      goto LABEL_30;
    }
LABEL_38:
    operator delete(v23);
    goto LABEL_30;
  }
  if (SHIBYTE(v24) < 0) {
    goto LABEL_38;
  }
LABEL_30:
  sub_71E818(a1, v25);
  BOOL v18 = v26;
  if (v26)
  {
    do
    {
      unint64_t v20 = (void **)*v18;
      sub_55198((uint64_t)(v18 + 5));
      if (*((char *)v18 + 39) < 0) {
        operator delete(v18[2]);
      }
      operator delete(v18);
      BOOL v18 = v20;
    }
    while (v20);
  }
  BOOL v19 = v25[0];
  v25[0] = 0;
  if (v19) {
    operator delete(v19);
  }
}

void sub_71E52C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_71E584(uint64_t a1, uint64_t a2, long long *a3)
{
  *(_OWORD *)(a1 + 41) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  if (*((char *)a3 + 23) < 0)
  {
    sub_4200((unsigned char *)(a1 + 64), *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v6 = *a3;
    *(void *)(a1 + 80) = *((void *)a3 + 2);
    *(_OWORD *)(a1 + 64) = v6;
  }
  uint64_t v17 = operator new(0x30uLL);
  long long v18 = xmmword_20B93C0;
  strcpy((char *)v17, "routing/guidance/RoadTypeCalculator.json");
  if (*((char *)a3 + 23) < 0)
  {
    sub_4200(&__dst, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long __dst = *a3;
    uint64_t v22 = *((void *)a3 + 2);
  }
  sub_28C774(&__p, (uint64_t)&__dst, 1uLL);
  size_t v7 = sub_374CDC(a2, (uint64_t)&v17, (uint64_t *)&__p);
  sub_54214((uint64_t)v19, (uint64_t)v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    size_t v9 = v16;
    uint64_t v10 = __p;
    if (v16 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    unsigned int v16 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v22) < 0)
  {
    operator delete((void *)__dst);
    if ((SHIBYTE(v18) & 0x80000000) == 0) {
      goto LABEL_17;
    }
  }
  else if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    goto LABEL_17;
  }
  operator delete(v17);
LABEL_17:
  sub_71E818(a1, v19);
  int v11 = v20;
  if (v20)
  {
    do
    {
      std::string::size_type v14 = (void **)*v11;
      sub_55198((uint64_t)(v11 + 5));
      if (*((char *)v11 + 39) < 0) {
        operator delete(v11[2]);
      }
      operator delete(v11);
      int v11 = v14;
    }
    while (v14);
  }
  unsigned int v12 = v19[0];
  v19[0] = 0;
  if (v12) {
    operator delete(v12);
  }
  return a1;
}

void sub_71E77C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if (a18 < 0)
  {
    operator delete(__p);
    if ((*(char *)(v19 + 87) & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((*(char *)(v19 + 87) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*v20);
  _Unwind_Resume(exception_object);
}

void sub_71E818(uint64_t a1, void *a2)
{
  long long __p = operator new(0x28uLL);
  long long v7 = xmmword_20B9390;
  strcpy((char *)__p, "freeflow_speed_lookback_distance");
  sub_5C8A4(a2, (uint64_t)&__p, (uint64_t *)a1);
  if (SHIBYTE(v7) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x20uLL);
  long long v7 = xmmword_20B5EB0;
  strcpy((char *)__p, "min_freeflow_speed_freeway");
  sub_5D63C(a2, (uint64_t)&__p, (uint64_t *)(a1 + 8));
  if (SHIBYTE(v7) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x28uLL);
  long long v7 = xmmword_20B9260;
  strcpy((char *)__p, "min_freeflow_speed_major_arterial");
  sub_5D63C(a2, (uint64_t)&__p, (uint64_t *)(a1 + 16));
  if (SHIBYTE(v7) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x28uLL);
  long long v7 = xmmword_20B9260;
  strcpy((char *)__p, "min_freeflow_speed_minor_arterial");
  sub_5D63C(a2, (uint64_t)&__p, (uint64_t *)(a1 + 24));
  if (SHIBYTE(v7) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x28uLL);
  long long v7 = xmmword_20B93A0;
  strcpy((char *)__p, "enable_speed_limit_based_road_types");
  uint64_t v4 = sub_58070(a2, (uint64_t)&__p);
  if (v4 && (int v5 = *((_DWORD *)v4 + 12), (v5 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)(a1 + 56) = v5 == 4;
    if ((SHIBYTE(v7) & 0x80000000) == 0) {
      goto LABEL_15;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a1 + 56) != 0;
    if ((SHIBYTE(v7) & 0x80000000) == 0) {
      goto LABEL_15;
    }
  }
  operator delete(__p);
LABEL_15:
  long long __p = operator new(0x19uLL);
  long long v7 = xmmword_20B9250;
  strcpy((char *)__p, "min_speed_limit_freeway");
  sub_5D63C(a2, (uint64_t)&__p, (uint64_t *)(a1 + 32));
  if (SHIBYTE(v7) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x20uLL);
  long long v7 = xmmword_20B9800;
  strcpy((char *)__p, "min_speed_limit_major_arterial");
  sub_5D63C(a2, (uint64_t)&__p, (uint64_t *)(a1 + 40));
  if (SHIBYTE(v7) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x20uLL);
  long long v7 = xmmword_20B9800;
  strcpy((char *)__p, "min_speed_limit_minor_arterial");
  sub_5D63C(a2, (uint64_t)&__p, (uint64_t *)(a1 + 48));
  if (SHIBYTE(v7) < 0) {
    operator delete(__p);
  }
}

void sub_71EB20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_71EB58(uint64_t *a1, void *a2)
{
  *a1 = (uint64_t)a2;
  a1[1] = sub_3766F8(a2);
  a1[2] = sub_3750CC((void *)*a1);
  uint64_t v3 = *a1;
  char v6 = 0;
  LOBYTE(__p) = 0;
  sub_71F820((uint64_t)(a1 + 3), v3, &__p);
  if (v6 < 0) {
    operator delete((void *)__p);
  }
  return a1;
}

void sub_71EBDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_71EBF8(uint64_t a1, uint64_t a2, void *a3)
{
  sub_71EC78(a1, a2, a3);
  uint64_t v4 = a3[133];
  uint64_t v5 = a3[134];
  if (v4 != v5)
  {
    char v6 = a3 + 1445;
    do
    {
      int v7 = *(_DWORD *)(v4 + 160);
      if (v7 != 17 && v7 != 85) {
        *(_DWORD *)(v4 + 1860) = *(_DWORD *)sub_66AF3C(v6, *(void *)(v4 + 16));
      }
      v4 += 2400;
    }
    while (v4 != v5);
  }
}

void sub_71EC78(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3;
  unint64_t v5 = sub_470ADC(a3);
  if (v5)
  {
    unint64_t v6 = v5;
    unint64_t v7 = 0;
    unint64_t v8 = 0;
    uint64_t v72 = a1;
    uint64_t v73 = (void **)(v3 + 1445);
    size_t v9 = v3 + 133;
    unint64_t v71 = v5;
    int v69 = v3;
    while (1)
    {
      do
        uint64_t v10 = sub_51690C(v9, v7++);
      while (v8 >= *(void *)(v10 + 24));
      uint64_t v11 = sub_470B40(v3, v8);
      sub_71F1FC((uint64_t *)a1, v11);
      unsigned int v12 = *(int **)(v11 + 8);
      uint64_t v13 = (unsigned __int16 *)((char *)v12 - *v12);
      unsigned int v14 = *v13;
      --v7;
      if (v14 >= 0x2F && v13[23])
      {
        unsigned int v15 = *((unsigned __int8 *)v12 + v13[23]);
        BOOL v16 = v15 > 0x1A;
        int v17 = (1 << v15) & 0x4810001;
        if (!v16 && v17 != 0)
        {
          int v19 = 0;
          unint64_t v20 = (int *)v3[1446];
          unint64_t v21 = v3[1447];
          if ((unint64_t)v20 >= v21) {
            goto LABEL_35;
          }
          goto LABEL_3;
        }
      }
      if (*(unsigned char *)(v11 + 46))
      {
        if (v14 < 0xB) {
          goto LABEL_45;
        }
        if (!v13[5]) {
          goto LABEL_27;
        }
        int v22 = *(int *)((char *)v12 + v13[5]);
        if ((v22 & 0x20) == 0) {
          goto LABEL_27;
        }
      }
      else
      {
        if (v14 < 0xB) {
          goto LABEL_45;
        }
        if (!v13[5] || (int v22 = *(int *)((char *)v12 + v13[5]), (v22 & 0x10) == 0))
        {
LABEL_27:
          if (v14 < 0x2F) {
            goto LABEL_45;
          }
          LODWORD(v23) = v13[23];
          if (!v13[23]) {
            goto LABEL_45;
          }
          goto LABEL_29;
        }
      }
      if (v14 >= 0x2F && (uint64_t v23 = v13[23]) != 0)
      {
        int v19 = 1;
        if ((v22 & 4) != 0 || *((unsigned char *)v12 + v23) == 23) {
          goto LABEL_34;
        }
LABEL_29:
        unsigned int v24 = *((unsigned __int8 *)v12 + v23);
        BOOL v16 = v24 > 0x2F;
        uint64_t v25 = (1 << v24) & 0xE2E040048000;
        if (!v16 && v25 != 0)
        {
          int v19 = 3;
LABEL_34:
          unint64_t v20 = (int *)v3[1446];
          unint64_t v21 = v3[1447];
          if ((unint64_t)v20 >= v21) {
            goto LABEL_35;
          }
          goto LABEL_3;
        }
LABEL_45:
        double v36 = sub_71F39C(a1, a2, v3, v7, v8);
        BOOL v39 = *(uint64_t *)&v36 > -1 && ((*(void *)&v36 & 0x7FFFFFFFFFFFFFFFuLL) - 0x10000000000000) >> 53 < 0x3FF
           || (unint64_t)(*(void *)&v36 - 1) < 0xFFFFFFFFFFFFFLL
           || (*(void *)&v36 & 0x7FFFFFFFFFFFFFFFLL) == 0;
        int v19 = 3;
        if (!v39 || v36 <= 0.0) {
          goto LABEL_62;
        }
        if (v36 <= *(double *)(a1 + 32))
        {
          if (v36 <= *(double *)(a1 + 40))
          {
            if (v36 <= *(double *)(a1 + 48)) {
              int v19 = 3;
            }
            else {
              int v19 = 2;
            }
            unint64_t v20 = (int *)v3[1446];
            unint64_t v40 = v3[1447];
            if ((unint64_t)v20 < v40) {
              goto LABEL_3;
            }
            goto LABEL_63;
          }
          int v19 = 1;
LABEL_62:
          unint64_t v20 = (int *)v3[1446];
          unint64_t v40 = v3[1447];
          if ((unint64_t)v20 < v40) {
            goto LABEL_3;
          }
          goto LABEL_63;
        }
        int v19 = 0;
        unint64_t v20 = (int *)v3[1446];
        unint64_t v40 = v3[1447];
        if ((unint64_t)v20 < v40) {
          goto LABEL_3;
        }
LABEL_63:
        uint64_t v27 = (int *)*v73;
        uint64_t v41 = (char *)v20 - (unsigned char *)*v73;
        uint64_t v42 = v41 >> 2;
        unint64_t v43 = (v41 >> 2) + 1;
        if (v43 >> 62) {
LABEL_102:
        }
          sub_2E00();
        uint64_t v44 = v40 - (void)v27;
        if (v44 >> 1 > v43) {
          unint64_t v43 = v44 >> 1;
        }
        if ((unint64_t)v44 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v43 = 0x3FFFFFFFFFFFFFFFLL;
        }
        if (v43)
        {
          if (v43 >> 62) {
LABEL_103:
          }
            sub_188D718();
          unint64_t v45 = v43;
          double v46 = operator new(4 * v43);
          BOOL v47 = (int *)&v46[4 * v42];
          *BOOL v47 = v19;
          uint64_t v34 = (uint64_t)(v47 + 1);
          if (v20 == v27)
          {
LABEL_74:
            a1 = v72;
            unint64_t v50 = v45;
            uint64_t v3 = v69;
            v69[1445] = v47;
            v69[1446] = v34;
            v69[1447] = &v46[4 * v50];
            if (!v27) {
              goto LABEL_83;
            }
            goto LABEL_82;
          }
        }
        else
        {
          unint64_t v45 = 0;
          double v46 = 0;
          BOOL v47 = (int *)(4 * v42);
          *(_DWORD *)(4 * v42) = v19;
          uint64_t v34 = 4 * v42 + 4;
          if (v20 == v27) {
            goto LABEL_74;
          }
        }
        unint64_t v48 = (char *)(v20 - 1) - (char *)v27;
        unint64_t v49 = v45;
        if (v48 < 0x2C)
        {
          a1 = v72;
          uint64_t v3 = v69;
          do
          {
LABEL_80:
            int v59 = *--v20;
            *--BOOL v47 = v59;
          }
          while (v20 != v27);
          goto LABEL_81;
        }
        unint64_t v51 = (char *)v20 - &v46[v41];
        a1 = v72;
        uint64_t v3 = v69;
        if (v51 < 0x20) {
          goto LABEL_80;
        }
        uint64_t v52 = (v48 >> 2) + 1;
        uint64_t v53 = 4 * (v52 & 0x7FFFFFFFFFFFFFF8);
        unint64_t v54 = &v20[v53 / 0xFFFFFFFFFFFFFFFCLL];
        BOOL v47 = (int *)((char *)v47 - v53);
        uint64_t v55 = &v46[4 * v42 - 16];
        uint64_t v56 = v20 - 4;
        uint64_t v57 = v52 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          long long v58 = *(_OWORD *)v56;
          *(v55 - 1) = *((_OWORD *)v56 - 1);
          *uint64_t v55 = v58;
          v55 -= 2;
          v56 -= 8;
          v57 -= 8;
        }
        while (v57);
        unint64_t v20 = v54;
        if (v52 != (v52 & 0x7FFFFFFFFFFFFFF8)) {
          goto LABEL_80;
        }
LABEL_81:
        v3[1445] = v47;
        v3[1446] = v34;
        v3[1447] = &v46[4 * v49];
        if (v27) {
          goto LABEL_82;
        }
LABEL_83:
        unint64_t v6 = v71;
        v3[1446] = v34;
        if (++v8 == v71) {
          return;
        }
      }
      else
      {
        if ((v22 & 4) == 0) {
          goto LABEL_27;
        }
        int v19 = 1;
        unint64_t v20 = (int *)v3[1446];
        unint64_t v21 = v3[1447];
        if ((unint64_t)v20 >= v21)
        {
LABEL_35:
          uint64_t v27 = (int *)*v73;
          uint64_t v28 = (char *)v20 - (unsigned char *)*v73;
          uint64_t v29 = v28 >> 2;
          unint64_t v30 = (v28 >> 2) + 1;
          if (v30 >> 62) {
            goto LABEL_102;
          }
          uint64_t v31 = v21 - (void)v27;
          if (v31 >> 1 > v30) {
            unint64_t v30 = v31 >> 1;
          }
          if ((unint64_t)v31 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v30 = 0x3FFFFFFFFFFFFFFFLL;
          }
          unint64_t v70 = v30;
          if (v30)
          {
            if (v30 >> 62) {
              goto LABEL_103;
            }
            unint64_t v32 = operator new(4 * v30);
            uint64_t v33 = (int *)&v32[4 * v29];
            *uint64_t v33 = v19;
            uint64_t v34 = (uint64_t)(v33 + 1);
            if (v20 != v27)
            {
LABEL_43:
              unint64_t v35 = (char *)(v20 - 1) - (char *)v27;
              if (v35 < 0x2C)
              {
                a1 = v72;
                goto LABEL_96;
              }
              unint64_t v60 = (char *)v20 - &v32[v28];
              a1 = v72;
              if (v60 < 0x20) {
                goto LABEL_106;
              }
              uint64_t v61 = (v35 >> 2) + 1;
              uint64_t v62 = 4 * (v61 & 0x7FFFFFFFFFFFFFF8);
              uint64_t v63 = &v20[v62 / 0xFFFFFFFFFFFFFFFCLL];
              uint64_t v33 = (int *)((char *)v33 - v62);
              long long v64 = &v32[4 * v29 - 16];
              uint64_t v65 = v20 - 4;
              uint64_t v66 = v61 & 0x7FFFFFFFFFFFFFF8;
              do
              {
                long long v67 = *(_OWORD *)v65;
                *(v64 - 1) = *((_OWORD *)v65 - 1);
                *long long v64 = v67;
                v64 -= 2;
                v65 -= 8;
                v66 -= 8;
              }
              while (v66);
              unint64_t v20 = v63;
              if (v61 != (v61 & 0x7FFFFFFFFFFFFFF8))
              {
LABEL_106:
                do
                {
LABEL_96:
                  int v68 = *--v20;
                  *--uint64_t v33 = v68;
                }
                while (v20 != v27);
              }
LABEL_97:
              v3[1445] = v33;
              v3[1446] = v34;
              v3[1447] = &v32[4 * v70];
              if (!v27) {
                goto LABEL_83;
              }
LABEL_82:
              operator delete(v27);
              goto LABEL_83;
            }
          }
          else
          {
            unint64_t v32 = 0;
            uint64_t v33 = (int *)(4 * v29);
            *(_DWORD *)(4 * v29) = v19;
            uint64_t v34 = 4 * v29 + 4;
            if (v20 != v27) {
              goto LABEL_43;
            }
          }
          a1 = v72;
          goto LABEL_97;
        }
LABEL_3:
        *unint64_t v20 = v19;
        v3[1446] = v20 + 1;
        if (++v8 == v6) {
          return;
        }
      }
    }
  }
}

void sub_71F1FC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(int **)(a2 + 8);
  uint64_t v4 = (unsigned __int16 *)((char *)v3 - *v3);
  if (*v4 >= 0xDu && (uint64_t v5 = v4[6]) != 0) {
    uint64_t v6 = 4 * *(unsigned __int16 *)((char *)v3 + v5);
  }
  else {
    uint64_t v6 = 0;
  }
  unint64_t v7 = sub_290DEC(a1[2] + 3896, 1u, 0);
  unint64_t v8 = &v7[-*(int *)v7];
  if (*(unsigned __int16 *)v8 < 0xBu)
  {
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v9 = *((unsigned __int16 *)v8 + 5);
    if (v9) {
      v9 += (uint64_t)&v7[*(unsigned int *)&v7[v9]];
    }
  }
  uint64_t v10 = (int *)(v9 + v6 + 4 + *(unsigned int *)(v9 + v6 + 4));
  uint64_t v11 = (unsigned __int16 *)((char *)v10 - *v10);
  if (*v11 < 5u || (uint64_t v12 = v11[2]) == 0)
  {
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = 0;
    __dst.__r_.__value_.__s.__data_[0] = 0;
    goto LABEL_21;
  }
  uint64_t v13 = (unsigned int *)((char *)v10 + v12);
  uint64_t v14 = *v13;
  BOOL v16 = (char *)v13 + v14 + 4;
  std::string::size_type v15 = *(unsigned int *)((char *)v13 + v14);
  if (v15 >= 0x17)
  {
    if ((v15 | 7) == 0x17) {
      uint64_t v18 = (v15 & 0xFFFFFFF8) + 8;
    }
    else {
      uint64_t v18 = v15 | 7;
    }
    p_dst = (std::string *)operator new(v18 + 1);
    __dst.__r_.__value_.__l.__size_ = v15;
    __dst.__r_.__value_.__r.__words[2] = v18 - 0x7FFFFFFFFFFFFFFFLL;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
  }
  else
  {
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = *(unsigned int *)((char *)v13 + v14);
    p_dst = &__dst;
    if (!v15) {
      goto LABEL_20;
    }
  }
  memcpy(p_dst, v16, v15);
LABEL_20:
  p_dst->__r_.__value_.__s.__data_[v15] = 0;
LABEL_21:
  sub_71F588((uint64_t)(a1 + 3), *a1, &__dst);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
}

void sub_71F380(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_71F39C(uint64_t a1, uint64_t a2, void *a3, unint64_t a4, unint64_t a5)
{
  uint64_t v9 = sub_4A5E10(a3 + 133, a4);
  uint64_t v11 = sub_470F2C(a3, a5, v10);
  uint64_t v13 = *(void *)(a1 + 24);
  if (v11 > v13) {
    goto LABEL_7;
  }
  uint64_t v14 = *(void *)(v9 + 872);
  if (v14 >= v13)
  {
    if ((int)a5 < *(_DWORD *)(v9 + 40)) {
      goto LABEL_7;
    }
    uint64_t v21 = 0;
    int v22 = 0;
    uint64_t v23 = (void *)(a2 + 552);
    int64_t v24 = (int)a5;
    while (1)
    {
      uint64_t v25 = sub_470F2C(a3, v24, v12);
      int v26 = *(_DWORD *)sub_71CC9C(v23, v24);
      uint64_t v27 = v25 + v21;
      uint64_t v28 = *(void *)(a1 + 24);
      if (v25 + v21 > v28) {
        break;
      }
      v22 += v26;
      v21 += v25;
      if (v24-- <= *(int *)(v9 + 40)) {
        goto LABEL_22;
      }
    }
    double v30 = (double)(v28 - v21) / (double)v25 * (double)v26;
    if (v30 >= 0.0)
    {
      if (v30 < 4.50359963e15)
      {
        uint64_t v31 = (uint64_t)(v30 + v30) + 1;
LABEL_20:
        double v30 = (double)(v31 >> 1);
      }
    }
    else if (v30 > -4.50359963e15)
    {
      uint64_t v31 = (uint64_t)(v30 + v30);
      if (v31 >= 1) {
        --v31;
      }
      goto LABEL_20;
    }
    v22 += (int)v30;
    uint64_t v27 = *(void *)(a1 + 24);
LABEL_22:
    if (v27 && v22)
    {
      double v16 = (double)v27 * 0.1;
      double v17 = (double)v22;
      return v16 / v17 * 3.6;
    }
LABEL_7:
    uint64_t v18 = *(void *)(a1 + 8);
    int v19 = (unsigned int *)sub_470B40(a3, a5);
    return sub_32A35C(v18, (((unint64_t)(v19[1] & 0x20000000) << 19) | ((unint64_t)(unsigned __int16)v19[1] << 32) | *v19) ^ 0x1000000000000, 0);
  }
  if (!v14) {
    goto LABEL_7;
  }
  int v15 = *(_DWORD *)(v9 + 884);
  if (!v15) {
    goto LABEL_7;
  }
  double v16 = (double)v14 * 0.1;
  double v17 = (double)v15;
  return v16 / v17 * 3.6;
}

void sub_71F588(uint64_t a1, uint64_t a2, std::string *__str)
{
  uint64_t v6 = (std::string *)(a1 + 64);
  size_t v7 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  size_t size = __str->__r_.__value_.__l.__size_;
  if ((v7 & 0x80u) == 0) {
    size_t v9 = v7;
  }
  else {
    size_t v9 = size;
  }
  uint64_t v10 = *(unsigned __int8 *)(a1 + 87);
  int v11 = (char)v10;
  if ((v10 & 0x80u) != 0) {
    uint64_t v10 = *(void *)(a1 + 72);
  }
  if (v9 == v10)
  {
    if (v11 >= 0) {
      double v12 = (unsigned __int8 *)(a1 + 64);
    }
    else {
      double v12 = (unsigned __int8 *)v6->__r_.__value_.__r.__words[0];
    }
    if ((v7 & 0x80) != 0)
    {
      if (!memcmp(__str->__r_.__value_.__l.__data_, v12, size)) {
        return;
      }
    }
    else
    {
      if (!v7) {
        return;
      }
      for (double i = __str; i->__r_.__value_.__s.__data_[0] == *v12; double i = (std::string *)((char *)i + 1))
      {
        ++v12;
        if (!--v7) {
          return;
        }
      }
    }
  }
  std::string::operator=(v6, __str);
  uint64_t v23 = operator new(0x30uLL);
  long long v24 = xmmword_20B93C0;
  strcpy((char *)v23, "routing/guidance/RoadTypeCalculator.json");
  if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200(&__dst, __str->__r_.__value_.__l.__data_, __str->__r_.__value_.__l.__size_);
  }
  else
  {
    long long __dst = *(_OWORD *)&__str->__r_.__value_.__l.__data_;
    std::string::size_type v28 = __str->__r_.__value_.__r.__words[2];
  }
  sub_28C774(&__p, (uint64_t)&__dst, 1uLL);
  uint64_t v14 = sub_374CDC(a2, (uint64_t)&v23, (uint64_t *)&__p);
  sub_54214((uint64_t)v25, (uint64_t)v14);
  int v15 = (void **)__p;
  if (__p)
  {
    double v16 = v22;
    double v17 = __p;
    if (v22 != __p)
    {
      do
      {
        if (*((char *)v16 - 1) < 0) {
          operator delete(*(v16 - 3));
        }
        v16 -= 3;
      }
      while (v16 != v15);
      double v17 = __p;
    }
    int v22 = v15;
    operator delete(v17);
  }
  if (SHIBYTE(v28) < 0)
  {
    operator delete((void *)__dst);
    if ((SHIBYTE(v24) & 0x80000000) == 0) {
      goto LABEL_30;
    }
LABEL_38:
    operator delete(v23);
    goto LABEL_30;
  }
  if (SHIBYTE(v24) < 0) {
    goto LABEL_38;
  }
LABEL_30:
  sub_71FAB4(a1, v25);
  uint64_t v18 = v26;
  if (v26)
  {
    do
    {
      unint64_t v20 = (void **)*v18;
      sub_55198((uint64_t)(v18 + 5));
      if (*((char *)v18 + 39) < 0) {
        operator delete(v18[2]);
      }
      operator delete(v18);
      uint64_t v18 = v20;
    }
    while (v20);
  }
  int v19 = v25[0];
  v25[0] = 0;
  if (v19) {
    operator delete(v19);
  }
}

void sub_71F7C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_71F820(uint64_t a1, uint64_t a2, long long *a3)
{
  *(_OWORD *)(a1 + 41) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  if (*((char *)a3 + 23) < 0)
  {
    sub_4200((unsigned char *)(a1 + 64), *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v6 = *a3;
    *(void *)(a1 + 80) = *((void *)a3 + 2);
    *(_OWORD *)(a1 + 64) = v6;
  }
  double v17 = operator new(0x30uLL);
  long long v18 = xmmword_20B93C0;
  strcpy((char *)v17, "routing/guidance/RoadTypeCalculator.json");
  if (*((char *)a3 + 23) < 0)
  {
    sub_4200(&__dst, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long __dst = *a3;
    uint64_t v22 = *((void *)a3 + 2);
  }
  sub_28C774(&__p, (uint64_t)&__dst, 1uLL);
  size_t v7 = sub_374CDC(a2, (uint64_t)&v17, (uint64_t *)&__p);
  sub_54214((uint64_t)v19, (uint64_t)v7);
  unint64_t v8 = (void **)__p;
  if (__p)
  {
    size_t v9 = v16;
    uint64_t v10 = __p;
    if (v16 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      uint64_t v10 = __p;
    }
    double v16 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v22) < 0)
  {
    operator delete((void *)__dst);
    if ((SHIBYTE(v18) & 0x80000000) == 0) {
      goto LABEL_17;
    }
  }
  else if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    goto LABEL_17;
  }
  operator delete(v17);
LABEL_17:
  sub_71FAB4(a1, v19);
  int v11 = v20;
  if (v20)
  {
    do
    {
      uint64_t v14 = (void **)*v11;
      sub_55198((uint64_t)(v11 + 5));
      if (*((char *)v11 + 39) < 0) {
        operator delete(v11[2]);
      }
      operator delete(v11);
      int v11 = v14;
    }
    while (v14);
  }
  double v12 = v19[0];
  v19[0] = 0;
  if (v12) {
    operator delete(v12);
  }
  return a1;
}

void sub_71FA18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if (a18 < 0)
  {
    operator delete(__p);
    if ((*(char *)(v19 + 87) & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((*(char *)(v19 + 87) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*v20);
  _Unwind_Resume(exception_object);
}

void sub_71FAB4(uint64_t a1, void *a2)
{
  long long __p = operator new(0x28uLL);
  long long v7 = xmmword_20B9390;
  strcpy((char *)__p, "freeflow_speed_lookback_distance");
  sub_5C8A4(a2, (uint64_t)&__p, (uint64_t *)a1);
  if (SHIBYTE(v7) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x20uLL);
  long long v7 = xmmword_20B5EB0;
  strcpy((char *)__p, "min_freeflow_speed_freeway");
  sub_5D63C(a2, (uint64_t)&__p, (uint64_t *)(a1 + 8));
  if (SHIBYTE(v7) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x28uLL);
  long long v7 = xmmword_20B9260;
  strcpy((char *)__p, "min_freeflow_speed_major_arterial");
  sub_5D63C(a2, (uint64_t)&__p, (uint64_t *)(a1 + 16));
  if (SHIBYTE(v7) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x28uLL);
  long long v7 = xmmword_20B9260;
  strcpy((char *)__p, "min_freeflow_speed_minor_arterial");
  sub_5D63C(a2, (uint64_t)&__p, (uint64_t *)(a1 + 24));
  if (SHIBYTE(v7) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x28uLL);
  long long v7 = xmmword_20B93A0;
  strcpy((char *)__p, "enable_speed_limit_based_road_types");
  uint64_t v4 = sub_58070(a2, (uint64_t)&__p);
  if (v4 && (int v5 = *((_DWORD *)v4 + 12), (v5 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)(a1 + 56) = v5 == 4;
    if ((SHIBYTE(v7) & 0x80000000) == 0) {
      goto LABEL_15;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a1 + 56) != 0;
    if ((SHIBYTE(v7) & 0x80000000) == 0) {
      goto LABEL_15;
    }
  }
  operator delete(__p);
LABEL_15:
  long long __p = operator new(0x19uLL);
  long long v7 = xmmword_20B9250;
  strcpy((char *)__p, "min_speed_limit_freeway");
  sub_5D63C(a2, (uint64_t)&__p, (uint64_t *)(a1 + 32));
  if (SHIBYTE(v7) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x20uLL);
  long long v7 = xmmword_20B9800;
  strcpy((char *)__p, "min_speed_limit_major_arterial");
  sub_5D63C(a2, (uint64_t)&__p, (uint64_t *)(a1 + 40));
  if (SHIBYTE(v7) < 0) {
    operator delete(__p);
  }
  long long __p = operator new(0x20uLL);
  long long v7 = xmmword_20B9800;
  strcpy((char *)__p, "min_speed_limit_minor_arterial");
  sub_5D63C(a2, (uint64_t)&__p, (uint64_t *)(a1 + 48));
  if (SHIBYTE(v7) < 0) {
    operator delete(__p);
  }
}

void sub_71FDBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_71FDF4()
{
  byte_25A87F7 = 1;
  word_25A87E0 = 65;
  byte_25A880F = 1;
  word_25A87F8 = 65;
  char v4 = 7;
  strcpy((char *)v3, "UNKNOWN");
  int v5 = 0;
  char v7 = 14;
  strcpy((char *)v6, "ROUTES_THROUGH");
  int v8 = 1;
  char v10 = 9;
  strcpy((char *)__p, "ROUTES_TO");
  int v11 = 3;
  char v13 = 11;
  strcpy((char *)v12, "ROUTES_FROM");
  int v14 = 2;
  xmmword_25A8840 = 0u;
  *(_OWORD *)&qword_25A8850 = 0u;
  dword_25A8860 = 1065353216;
  sub_3A6EF0((uint64_t)&xmmword_25A8840, (uint64_t)v3, (uint64_t)v3);
  sub_3A6EF0((uint64_t)&xmmword_25A8840, (uint64_t)v6, (uint64_t)v6);
  sub_3A6EF0((uint64_t)&xmmword_25A8840, (uint64_t)__p, (uint64_t)__p);
  sub_3A6EF0((uint64_t)&xmmword_25A8840, (uint64_t)v12, (uint64_t)v12);
  if (v13 < 0)
  {
    operator delete(v12[0]);
    if ((v10 & 0x80000000) == 0)
    {
LABEL_3:
      if ((v7 & 0x80000000) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      operator delete(v6[0]);
      if ((v4 & 0x80000000) == 0) {
        goto LABEL_5;
      }
LABEL_9:
      operator delete(v3[0]);
      goto LABEL_5;
    }
  }
  else if ((v10 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p[0]);
  if (v7 < 0) {
    goto LABEL_8;
  }
LABEL_4:
  if (v4 < 0) {
    goto LABEL_9;
  }
LABEL_5:
  qword_25A8818 = 0;
  qword_25A8820 = 0;
  qword_25A8810 = 0;
  uint64_t v0 = operator new(9uLL);
  *(void *)uint64_t v0 = 0x4020C000103050DLL;
  v0[8] = 6;
  qword_25A8810 = (uint64_t)v0;
  qword_25A8818 = (uint64_t)(v0 + 9);
  qword_25A8820 = (uint64_t)(v0 + 9);
  qword_25A8828 = 0;
  qword_25A8830 = 0;
  unk_25A8838 = 0;
  uint64_t v1 = (char *)operator new(9uLL);
  qword_25A8830 = (uint64_t)(v1 + 9);
  unk_25A8838 = v1 + 9;
  double result = 1.10224369e-279;
  *(void *)uint64_t v1 = 0x604020C00010305;
  v1[8] = 13;
  qword_25A8828 = (uint64_t)v1;
  return result;
}

void sub_720030(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  if (qword_25A8850) {
    sub_20AABB4((void **)qword_25A8850);
  }
  uint64_t v37 = (void *)xmmword_25A8840;
  *(void *)&xmmword_25A8840 = 0;
  if (v37)
  {
    operator delete(v37);
    if ((a36 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a29 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_11;
    }
  }
  else if ((a36 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(__p);
  if ((a29 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a22 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_12;
  }
LABEL_11:
  operator delete(a24);
  if ((a22 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a15 & 0x80000000) == 0) {
LABEL_14:
    }
      _Unwind_Resume(exception_object);
LABEL_13:
    operator delete(a10);
    _Unwind_Resume(exception_object);
  }
LABEL_12:
  operator delete(a17);
  if ((a15 & 0x80000000) == 0) {
    goto LABEL_14;
  }
  goto LABEL_13;
}

uint64_t sub_7200D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = a4;
  HIBYTE(v14[2]) = 21;
  strcpy((char *)v14, "RouteAlertPrioritizer");
  long long __p = 0;
  double v12 = 0;
  uint64_t v13 = 0;
  int v5 = sub_374CDC(a2, (uint64_t)v14, (uint64_t *)&__p);
  int64x2_t v6 = vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
  *(int64x2_t *)(a1 + 24) = v6;
  *(void *)(a1 + 40) = 0x8000000080000000;
  *(int64x2_t *)(a1 + 48) = v6;
  *(unsigned char *)(a1 + 65) = 0;
  *(void *)(a1 + 72) = 0;
  sub_722674(a1 + 24, v5);
  char v7 = (void **)__p;
  if (__p)
  {
    int v8 = v12;
    size_t v9 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v8 - 1) < 0) {
          operator delete(*(v8 - 3));
        }
        v8 -= 3;
      }
      while (v8 != v7);
      size_t v9 = __p;
    }
    double v12 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v14[2]) < 0) {
    operator delete(v14[0]);
  }
  return a1;
}

void sub_7201E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

BOOL sub_720210@<W0>(void *a1@<X1>, void *a2@<X2>, void *a3@<X8>)
{
  BOOL result = sub_45FB38(a1);
  if (!result)
  {
    BOOL result = sub_45FB38(a2);
    if (!result)
    {
      sub_45FB28(a1, 0);
      sub_6467E8(a2, 0);
      sub_7202B0();
    }
  }
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  return result;
}

void sub_7202B0()
{
  uint64_t v0 = __chkstk_darwin();
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  *char v4 = 0;
  v4[1] = 0;
  v4[2] = 0;
  sub_76EB40(v6, *(uint64_t **)v0, *(void *)(v0 + 8));
  nullsub_1(*(void *)(v3 + 8));
  sub_76EB44((uint64_t)v6, v2, (uint64_t *)&v5);
  sub_7206E4(v3, (uint64_t)v2);
}

void sub_7205E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  int v11 = va_arg(va1, void *);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  if (*(unsigned char *)(v9 + 3696)) {
    sub_55BCE8((uint64_t)&STACK[0x2B28]);
  }
  if (*(unsigned char *)(v8 + 1976)) {
    sub_55BCE8((uint64_t)&STACK[0x32E8]);
  }
  sub_50E790((void **)va);
  sub_5ADD5C((uint64_t *)va1);
  sub_56FC8C(v7);
  _Unwind_Resume(a1);
}

void sub_7206B4(_Unwind_Exception *a1)
{
  sub_56FC8C(v1);
  _Unwind_Resume(a1);
}

void sub_7206C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  sub_5ADD5C((uint64_t *)va);
  sub_56FC8C(v10);
  _Unwind_Resume(a1);
}

void sub_7206E4(uint64_t a1, uint64_t a2)
{
}

void sub_720904(_Unwind_Exception *a1)
{
  if (LOBYTE(STACK[0xC20]))
  {
    sub_3A6B94((uint64_t)&STACK[0x7C0]);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_720950(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (sub_DAFB88(*(void *)(a1 + 16)))
  {
    uint64_t v6 = *(void *)a1;
    HIBYTE(v44[2]) = 9;
    strcpy((char *)v44, "EVRouting");
    long long __p = 0;
    uint64_t v42 = 0;
    uint64_t v43 = 0;
    char v7 = sub_374CDC(v6, (uint64_t)v44, (uint64_t *)&__p);
    uint64_t v8 = (void **)__p;
    if (__p)
    {
      uint64_t v9 = v42;
      char v10 = __p;
      if (v42 != __p)
      {
        do
        {
          if (*((char *)v9 - 1) < 0) {
            operator delete(*(v9 - 3));
          }
          v9 -= 3;
        }
        while (v9 != v8);
        char v10 = __p;
      }
      uint64_t v42 = v8;
      operator delete(v10);
    }
    if (SHIBYTE(v44[2]) < 0) {
      operator delete(v44[0]);
    }
    v44[0] = operator new(0x28uLL);
    *(_OWORD *)&v44[1] = xmmword_20B9260;
    strcpy((char *)v44[0], "enable_car_play_connection_status");
    BOOL v11 = sub_29D62C(v7, (uint64_t)v44);
    if (SHIBYTE(v44[2]) < 0) {
      operator delete(v44[0]);
    }
    v44[0] = operator new(0x28uLL);
    *(_OWORD *)&v44[1] = xmmword_20B9390;
    strcpy((char *)v44[0], "enable_intents_connection_status");
    BOOL v12 = sub_29D62C(v7, (uint64_t)v44);
    if (SHIBYTE(v44[2]) < 0) {
      operator delete(v44[0]);
    }
    v44[0] = operator new(0x20uLL);
    *(_OWORD *)&v44[1] = xmmword_20B8E90;
    strcpy((char *)v44[0], "enable_vehicle_connection_stats");
    BOOL v13 = sub_29D62C(v7, (uint64_t)v44);
    if (SHIBYTE(v44[2]) < 0)
    {
      operator delete(v44[0]);
      if (v11 && v12) {
        goto LABEL_21;
      }
    }
    else if (v11 && v12)
    {
LABEL_21:
      BOOL v14 = sub_DAFFD0(*(void *)(a1 + 16)) == 1;
      goto LABEL_24;
    }
    BOOL v14 = 0;
LABEL_24:
    int v15 = sub_DAFFD0(*(void *)(a1 + 16));
    v44[0] = operator new(0x20uLL);
    *(_OWORD *)&v44[1] = xmmword_20B91A0;
    strcpy((char *)v44[0], "ev_info_staleness_limit_min");
    int v16 = sub_5D2EC(v7, v44);
    if (SHIBYTE(v44[2]) < 0)
    {
      operator delete(v44[0]);
      uint64_t v17 = *(void *)(a1 + 8);
      if (*(_DWORD *)(v17 + 1396) == 0x7FFFFFFF) {
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v17 = *(void *)(a1 + 8);
      if (*(_DWORD *)(v17 + 1396) == 0x7FFFFFFF) {
        goto LABEL_42;
      }
    }
    if (*(_DWORD *)(sub_486CB4(v17) + 152) != 0x7FFFFFFF)
    {
      uint64_t v18 = sub_486CB4(v17);
      if (*(unsigned char *)(*(void *)(a1 + 8) + 1522) != 7
        && 10 * (*(_DWORD *)(v17 + 1396) - *(_DWORD *)(v18 + 152)) > *(_DWORD *)(a1 + 44)
        && sub_DAFB88(*(void *)(a1 + 16))
        && sub_DAFBE4(*(void *)(a1 + 16))
        && (int)sub_46CABC(*(void *)(a1 + 16)) > v16
        && sub_5B9B2C(*(void *)(a1 + 8)))
      {
        if (v15 == 2 && v13)
        {
          unint64_t v20 = sub_69510();
          sub_29AEBC(*(void *)(a1 + 16));
          sub_491B8C(*(void *)(a1 + 16));
          sub_68E9C((uint64_t)v20);
          sub_6912C((uint64_t)v20);
          sub_69134((uint64_t)v20);
        }
        if (v14)
        {
LABEL_47:
          uint64_t v21 = nullsub_1(*(void *)(a1 + 8));
          if (*(unsigned char *)(a1 + 65))
          {
            uint64_t v22 = v21;
            if (sub_DAFB88(*(void *)(a1 + 16))
              && sub_DAFBF8(*(void *)(a1 + 16))
              && sub_5B9B34(*(void *)(a1 + 8))
              && sub_5B9B38(*(void *)(a1 + 8)))
            {
              if (sub_DAFF00(*(void *)(a1 + 16)))
              {
                if (sub_723EC(1u))
                {
                  sub_6BAC((uint64_t)v44);
                  sub_188FC78(v44, (uint64_t)"Vehicle is towing.", 18);
                  std::stringbuf::str();
                  sub_7246C((uint64_t *)&__p, 1u);
                  if (SHIBYTE(v43) < 0) {
                    operator delete(__p);
                  }
                  sub_111ECAC((uint64_t)v44);
                }
                sub_50EC80((uint64_t)v44);
                goto LABEL_59;
              }
              sub_3B6008((uint64_t)&__p, *(void *)a1);
              uint64_t v23 = nullsub_1(&__p);
              unint64_t v24 = sub_3B6094(&__p, a2, *(void *)(a1 + 16), v22);
              uint64_t v26 = v25;
              double v27 = 0.0;
              if (v24 != 0x7FFFFFFF && HIDWORD(v24) != 0x7FFFFFFF && v25 && v25 != 0x7FFFFFFF) {
                double v27 = (double)((int)v24 - HIDWORD(v24)) / 1000.0 / ((double)(int)v25 / 1000.0);
              }
              BOOL v28 = !sub_DAFBE4(*(void *)(a1 + 16)) || (int)sub_46CABC(*(void *)(a1 + 16)) > v16;
              char v29 = (v26 & 0xFF00000000) != 0 || v28;
              char v30 = sub_63A048(*(void *)(a1 + 16));
              if ((v29 & 1) == 0)
              {
                char v31 = (v26 & 0xFF0000000000) != 0 ? 1 : v30;
                if ((v31 & 1) == 0 && v27 < -*(double *)(v23 + 32))
                {
                  unint64_t v32 = sub_69510();
                  sub_68EE4((uint64_t)v32);
                  std::operator+<char>();
                  if (sub_723EC(1u))
                  {
                    sub_6BAC((uint64_t)v44);
                    sub_188FC78(v44, (uint64_t)"Vehicle is potentially towing. Vehicle consumption was underestimated by ", 73);
                    uint64_t v33 = (void *)std::ostream::operator<<();
                    uint64_t v34 = sub_188FC78(v33, (uint64_t)"%,", 2);
                    if ((v40 & 0x80u) == 0) {
                      unint64_t v35 = v39;
                    }
                    else {
                      unint64_t v35 = (void **)v39[0];
                    }
                    if ((v40 & 0x80u) == 0) {
                      uint64_t v36 = v40;
                    }
                    else {
                      uint64_t v36 = (uint64_t)v39[1];
                    }
                    sub_188FC78(v34, (uint64_t)v35, v36);
                    std::stringbuf::str();
                    sub_7246C((uint64_t *)&v37, 1u);
                    if (v38 < 0) {
                      operator delete(v37);
                    }
                    sub_111ECAC((uint64_t)v44);
                  }
                  sub_50EC80((uint64_t)v44);
                  a3[1976] = 1;
                  sub_571ACC((uint64_t)a3, (uint64_t)v44);
                  sub_55BCE8((uint64_t)v44);
                  if ((char)v40 < 0) {
                    operator delete(v39[0]);
                  }
                  return;
                }
              }
              if (sub_723EC(2u))
              {
                sub_6BAC((uint64_t)v44);
                sub_188FC78(v44, (uint64_t)"Consumption prediction error= ", 30);
                std::ostream::operator<<();
                std::stringbuf::str();
                sub_7246C((uint64_t *)v39, 2u);
                if ((char)v40 < 0) {
                  operator delete(v39[0]);
                }
                sub_111ECAC((uint64_t)v44);
              }
            }
          }
          bzero(a3, 0x7C0uLL);
          return;
        }
        sub_50EF38((uint64_t)v44);
LABEL_59:
        a3[1976] = 1;
        sub_571ACC((uint64_t)a3, (uint64_t)v44);
        sub_55BCE8((uint64_t)v44);
        return;
      }
    }
LABEL_42:
    if (v14
      || !sub_5B9B30(*(void *)(a1 + 8))
      || !sub_DAFB88(*(void *)(a1 + 16))
      || !sub_DAFBE4(*(void *)(a1 + 16))
      || (int)sub_46CABC(*(void *)(a1 + 16)) > v16)
    {
      goto LABEL_47;
    }
    sub_50F1F0((uint64_t)v44);
    goto LABEL_59;
  }

  bzero(a3, 0x7C0uLL);
}

void sub_721094(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_111ECAC((uint64_t)&a32);
  if (a21 < 0)
  {
    operator delete(a16);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_7211CC(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  *a5 = 0;
  a5[1] = 0;
  a5[2] = 0;
  uint64_t v10 = *(void *)(a4 + 504);
  unint64_t v44 = 0;
  uint64_t v45 = v10;
  uint64_t v42 = 0;
  uint64_t v43 = 0;
  uint64_t v11 = *a2;
  uint64_t v12 = a2[1];
  if (*a2 != v12)
  {
    do
    {
      if (sub_72254C(a1, v11, &v45))
      {
        uint64_t v18 = v43;
        if ((unint64_t)v43 >= v44)
        {
          uint64_t v17 = (char *)sub_5A73FC((uint64_t *)&v42, v11);
        }
        else
        {
          sub_4BE9F4((uint64_t)v43, v11);
          uint64_t v17 = v18 + 1120;
        }
        uint64_t v43 = v17;
      }
      v11 += 1120;
    }
    while (v11 != v12);
    uint64_t v19 = (char *)v42;
    unint64_t v20 = v43;
    while (v19 != v20)
    {
      if (sub_605454((uint64_t)v19)) {
        sub_50F4A8((uint64_t)v19, (uint64_t)v46);
      }
      else {
        sub_50E7EC((uint64_t)v19, (uint64_t)v46);
      }
      unint64_t v22 = a5[1];
      if (v22 >= a5[2])
      {
        uint64_t v21 = sub_722A50(a5, (uint64_t)v46);
      }
      else
      {
        sub_55BBD8(a5[1], (uint64_t)v46);
        uint64_t v21 = v22 + 1976;
        a5[1] = v22 + 1976;
      }
      a5[1] = v21;
      sub_55BCE8((uint64_t)v46);
      v19 += 1120;
    }
  }
  long long __p = 0;
  unsigned __int8 v40 = 0;
  unint64_t v41 = 0;
  uint64_t v13 = *a3;
  uint64_t v14 = a3[1];
  if (*a3 != v14)
  {
    do
    {
      if (*(unsigned char *)(v13 + 128))
      {
        uint64_t v24 = *(void *)(v13 + 32);
        uint64_t v25 = a1[3];
        if (v24 >= v25 && v45 >= v25 + v24 && v24 <= a1[4] && !sub_5B9B20(a1[1], (unsigned __int8 *)(v13 + 8)))
        {
          uint64_t v26 = v40;
          if ((unint64_t)v40 >= v41)
          {
            uint64_t v23 = (char *)sub_53DE68((uint64_t *)&__p, v13);
          }
          else
          {
            sub_4BD34C((uint64_t)v40, v13);
            uint64_t v23 = v26 + 168;
          }
          unsigned __int8 v40 = v23;
        }
      }
      v13 += 168;
    }
    while (v13 != v14);
    double v27 = (char *)__p;
    BOOL v28 = v40;
    while (v27 != v28)
    {
      sub_50F780((uint64_t)v27, (uint64_t)v46);
      unint64_t v30 = a5[1];
      if (v30 >= a5[2])
      {
        uint64_t v29 = sub_722A50(a5, (uint64_t)v46);
      }
      else
      {
        sub_55BBD8(a5[1], (uint64_t)v46);
        uint64_t v29 = v30 + 1976;
        a5[1] = v30 + 1976;
      }
      a5[1] = v29;
      sub_55BCE8((uint64_t)v46);
      v27 += 168;
    }
  }
  sub_722020((uint64_t)a1, a2, (uint64_t *)(a4 + 10032), &v45, v46);
  if (v47)
  {
    unint64_t v15 = a5[1];
    if (v15 >= a5[2])
    {
      unint64_t v16 = sub_722A50(a5, (uint64_t)v46);
    }
    else
    {
      sub_55BBD8(a5[1], (uint64_t)v46);
      unint64_t v16 = v15 + 1976;
      a5[1] = v15 + 1976;
    }
    a5[1] = v16;
  }
  else
  {
    unint64_t v16 = a5[1];
  }
  unint64_t v31 = 126 - 2 * __clz(0xF6AC0C6FEF6AC0C7 * ((uint64_t)(v16 - *a5) >> 3));
  if (v16 == *a5) {
    uint64_t v32 = 0;
  }
  else {
    uint64_t v32 = v31;
  }
  sub_722FE0(*a5, v16, v32, 1);
  if (v47) {
    sub_55BCE8((uint64_t)v46);
  }
  uint64_t v33 = (char *)__p;
  if (__p)
  {
    uint64_t v34 = v40;
    unint64_t v35 = __p;
    if (v40 != __p)
    {
      do
        uint64_t v34 = (char *)sub_4BCFD0((uint64_t)(v34 - 168));
      while (v34 != v33);
      unint64_t v35 = __p;
    }
    unsigned __int8 v40 = v33;
    operator delete(v35);
  }
  uint64_t v36 = (char *)v42;
  if (v42)
  {
    uint64_t v37 = v43;
    char v38 = v42;
    if (v43 != v42)
    {
      do
        uint64_t v37 = (char *)sub_3A6B94((uint64_t)(v37 - 1120));
      while (v37 != v36);
      char v38 = v42;
    }
    uint64_t v43 = v36;
    operator delete(v38);
  }
}

void sub_721548(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  if (LOBYTE(STACK[0x7F0])) {
    sub_55BCE8((uint64_t)&a16);
  }
  sub_4B1DB4(&a9);
  sub_50E790(&a12);
  sub_56FC8C(v16);
  _Unwind_Resume(a1);
}

void sub_72160C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_50E790((void **)va);
  sub_56FC8C(v4);
  _Unwind_Resume(a1);
}

uint64_t sub_72162C(uint64_t a1)
{
  if ((*(char *)(a1 + 1711) & 0x80000000) == 0)
  {
    sub_4BCED0(a1 + 152);
    if ((*(char *)(a1 + 135) & 0x80000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    operator delete(*(void **)(a1 + 112));
    if ((*(char *)(a1 + 63) & 0x80000000) == 0) {
      return a1;
    }
    goto LABEL_7;
  }
  operator delete(*(void **)(a1 + 1688));
  sub_4BCED0(a1 + 152);
  if (*(char *)(a1 + 135) < 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((*(char *)(a1 + 63) & 0x80000000) == 0) {
    return a1;
  }
LABEL_7:
  operator delete(*(void **)(a1 + 40));
  return a1;
}

void sub_7216B0(uint64_t a1, uint64_t a2)
{
  sub_3DCBBC(v4);
  sub_3DCBC0(v4, a2, &v3);
}

void sub_721D54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40)
{
  uint64_t v42 = *(void **)(v40 - 144);
  if (v42)
  {
    *(void *)(v40 - 136) = v42;
    operator delete(v42);
  }
  if (a19)
  {
    operator delete(a19);
    if (a32 < 0)
    {
LABEL_5:
      operator delete(__p);
      _Unwind_Resume(exception_object);
    }
  }
  else if (a32 < 0)
  {
    goto LABEL_5;
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_721DF4(uint64_t result)
{
  if (!*(unsigned char *)(result + 8))
  {
    exception = __cxa_allocate_exception(8uLL);
    void *exception = &off_2439078;
  }
  return result;
}

uint64_t sub_721E50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_46B058();
  int v5 = v4;
  unint64_t v7 = v6;
  if (v4)
  {
    for (uint64_t i = 0; ; i += sub_46CCC8(v5, v7++, v18))
    {
      sub_46B060();
      uint64_t v10 = v9;
      unint64_t v12 = v11;
      unint64_t v13 = sub_46C760(v5);
      unint64_t v14 = v13;
      if (v10)
      {
        unint64_t v15 = sub_46C760(v10);
        if (v7 >= v14 || v12 >= v15)
        {
          if (v7 < v14 == v12 < v15) {
            return 0x7FFFFFFFFFFFFFFFLL;
          }
        }
        else
        {
          uint64_t v16 = sub_46C8EC(v5, v7);
          if (v16 == sub_46C8EC(v10, v12)) {
            return 0x7FFFFFFFFFFFFFFFLL;
          }
        }
      }
      else if (v7 >= v13)
      {
        return 0x7FFFFFFFFFFFFFFFLL;
      }
      unint64_t v17 = *(void *)(sub_46C8EC(v5, v7) + 32);
      if (__PAIR64__(*(unsigned __int16 *)(a3 + 4), *(_DWORD *)a3) == __PAIR64__(WORD2(v17), v17)
        && (HIWORD(v17) & 1) != (*(unsigned char *)(a3 + 6) == 0))
      {
        break;
      }
    }
  }
  else
  {
    sub_46B060();
    if (v19)
    {
      unint64_t v21 = v20;
      uint64_t i = 0;
      while (v21 < sub_46C760(v19))
      {
        unint64_t v23 = *(void *)(sub_46C8EC(0, v7) + 32);
        if (__PAIR64__(*(unsigned __int16 *)(a3 + 4), *(_DWORD *)a3) == __PAIR64__(WORD2(v23), v23)
          && (HIWORD(v23) & 1) != (*(unsigned char *)(a3 + 6) == 0))
        {
          return i;
        }
        i += sub_46CCC8(0, v7++, v24);
        sub_46B060();
        unint64_t v21 = v22;
        if (!v19) {
          return 0x7FFFFFFFFFFFFFFFLL;
        }
      }
    }
    return 0x7FFFFFFFFFFFFFFFLL;
  }
  return i;
}

void sub_722020(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, unsigned char *a5@<X8>)
{
  sub_722198(a1, a3, (uint64_t)v15);
  sub_7222E8(a1, (uint64_t)v15, a2, *a4, (uint64_t)&__p);
  uint64_t v9 = __p;
  if (__p == v13)
  {
    bzero(a5, 0x7C0uLL);
    if (!v9) {
      goto LABEL_9;
    }
  }
  else
  {
    sub_50EAC4(v15, (uint64_t *)&__p, (uint64_t)v14);
    a5[1976] = 1;
    sub_571ACC((uint64_t)a5, (uint64_t)v14);
    sub_55BCE8((uint64_t)v14);
    uint64_t v9 = __p;
    if (!__p) {
      goto LABEL_9;
    }
  }
  uint64_t v10 = (uint64_t)v13;
  unint64_t v11 = v9;
  if (v13 != v9)
  {
    do
      uint64_t v10 = sub_3A6B94(v10 - 1120);
    while ((void *)v10 != v9);
    unint64_t v11 = __p;
  }
  unint64_t v13 = v9;
  operator delete(v11);
LABEL_9:
  if (v19)
  {
    unint64_t v20 = v19;
    operator delete(v19);
  }
  sub_510298((uint64_t)&v18);
  if (v16)
  {
    unint64_t v17 = v16;
    operator delete(v16);
  }
}

void sub_722164(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
}

void sub_722180(_Unwind_Exception *a1)
{
}

double sub_722198@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  if (v5 != v6)
  {
    while (*(_DWORD *)(v5 + 80) < *(_DWORD *)(a1 + 40))
    {
      v5 += 616;
      if (v5 == v6) {
        goto LABEL_9;
      }
    }
  }
  if (v5 == v6)
  {
LABEL_9:
    bzero((void *)a3, 0x268uLL);
    int64x2_t v8 = vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
    *(void *)(a3 + 56) = 0;
    *(int64x2_t *)(a3 + 8) = v8;
    *(void *)(a3 + 24) = -1;
    *(void *)(a3 + 32) = -1;
    *(int64x2_t *)(a3 + 40) = v8;
    *(void *)(a3 + 64) = 0;
    *(void *)(a3 + 72) = 0;
    *(void *)(a3 + 80) = 0x8000000080000000;
    sub_5F3B34(a3 + 96);
    sub_5F3B34(a3 + 256);
    *(_DWORD *)(a3 + 448) = -1;
    *(_DWORD *)(a3 + 456) = -1;
    *(_DWORD *)(a3 + 459) = -1;
    *(void *)(a3 + 463) = 0;
    *(void *)(a3 + 479) = 0;
    *(void *)(a3 + 471) = 0;
    *(_WORD *)(a3 + 487) = 0;
    *(void *)(a3 + 504) = 0;
    *(void *)(a3 + 512) = 0;
    *(void *)(a3 + 496) = 0;
    *(unsigned char *)(a3 + 520) = 0;
    double result = 0.0;
    *(_OWORD *)(a3 + 528) = 0u;
    *(_OWORD *)(a3 + 544) = 0u;
    *(_OWORD *)(a3 + 560) = 0u;
    *(unsigned char *)(a3 + 576) = 1;
    *(_OWORD *)(a3 + 584) = 0u;
    *(_OWORD *)(a3 + 600) = 0u;
  }
  else
  {
    sub_50FFE0(a3, (long long *)v5);
  }
  return result;
}

void sub_7222B8(_Unwind_Exception *a1)
{
  uint64_t v4 = v2;
  sub_4D4B58(v4);
  uint64_t v6 = *v3;
  if (*v3)
  {
    *(void *)(v1 + 64) = v6;
    operator delete(v6);
  }
  _Unwind_Resume(a1);
}

double sub_7222E8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v29 = a4;
  if (*(unsigned char *)(a1 + 64)
    && *a3 != a3[1]
    && sub_63BCA0(a2)
    && (uint64_t v10 = *(void *)(a2 + 8), v10 >= *(void *)(a1 + 48))
    && v10 <= *(void *)(a1 + 56))
  {
    v27[0] = 0;
    v27[1] = 0;
    BOOL v28 = 0;
    uint64_t v11 = *a3;
    uint64_t v12 = a3[1];
    if (*a3 != v12)
    {
      while (*(unsigned char *)(*(void *)(a1 + 8) + 1516) || !sub_72254C((void *)a1, v11, &v29))
      {
        unsigned int v14 = *(_DWORD *)(v11 + 88);
        BOOL v18 = v14 > 5;
        int v15 = (1 << v14) & 0x33;
        BOOL v16 = v18 || v15 == 0;
        if (!v16 && *(unsigned char *)(v11 + 432))
        {
          uint64_t v17 = *(void *)(v11 + 424);
          BOOL v18 = v17 >= *(void *)(a2 + 8) && v17 <= *(void *)(a2 + 16);
          if (v18)
          {
            uint64_t v19 = *(void *)(a1 + 8);
            sub_60506C((char *)v11, (uint64_t)__p);
            BOOL v20 = sub_5B9B18(v19, (uint64_t)__p);
            if (v26 < 0) {
              operator delete(__p[0]);
            }
            if (!v20)
            {
              unint64_t v21 = (char *)v27[1];
              if (v27[1] >= v28)
              {
                unint64_t v13 = (void *)sub_5A73FC((uint64_t *)v27, v11);
              }
              else
              {
                sub_4BE9F4((uint64_t)v27[1], v11);
                unint64_t v13 = v21 + 1120;
              }
              v27[1] = v13;
            }
          }
        }
        v11 += 1120;
        if (v11 == v12)
        {
          if (v27[0] != v27[1])
          {
            double result = (double)(uint64_t)(*(void *)sub_721DF4((uint64_t)v27[1] - 696) - *(void *)(a2 + 8))
                   / (double)(uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8));
            if (result >= *(double *)(a1 + 72))
            {
              double result = *(double *)v27;
              *(_OWORD *)a5 = *(_OWORD *)v27;
              *(void *)(a5 + 16) = v28;
              return result;
            }
          }
          break;
        }
      }
    }
    *(void *)a5 = 0;
    *(void *)(a5 + 8) = 0;
    *(void *)(a5 + 16) = 0;
    unint64_t v22 = v27[0];
    if (v27[0])
    {
      unint64_t v23 = v27[1];
      double v24 = v27[0];
      if (v27[1] != v27[0])
      {
        do
          unint64_t v23 = (void *)sub_3A6B94((uint64_t)v23 - 1120);
        while (v23 != v22);
        double v24 = v27[0];
      }
      v27[1] = v22;
      operator delete(v24);
    }
  }
  else
  {
    *(void *)a5 = 0;
    *(void *)(a5 + 8) = 0;
    *(void *)(a5 + 16) = 0;
  }
  return result;
}

void sub_7224F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17)
{
}

BOOL sub_72254C(void *a1, uint64_t a2, void *a3)
{
  BOOL result = sub_358888(a2);
  if (result)
  {
    BOOL v7 = sub_605454(a2);
    uint64_t v8 = a1[1];
    uint64_t v9 = (unsigned __int8 *)(a2 + 40);
    if (v7)
    {
      if (sub_5B9B1C(v8, v9)) {
        return 0;
      }
    }
    else if (sub_5B9B14(v8, v9))
    {
      return 0;
    }
    if (!*(unsigned char *)(a2 + 432))
    {
      exception = __cxa_allocate_exception(8uLL);
      void *exception = &off_2439078;
    }
    uint64_t v10 = *(void *)(a2 + 424);
    uint64_t v11 = a1[3];
    if (v10 >= v11) {
      return *a3 >= v11 + v10 && v10 <= a1[4];
    }
    else {
      return 0;
    }
  }
  return result;
}

void sub_722674(uint64_t a1, void *a2)
{
  __p[0] = operator new(0x20uLL);
  *(_OWORD *)&__p[1] = xmmword_20B5EB0;
  strcpy((char *)__p[0], "min_distance_from_endpoint");
  sub_5C8A4(a2, (uint64_t)__p, (uint64_t *)a1);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  strcpy((char *)__p, "max_distance_from_user");
  HIBYTE(__p[2]) = 22;
  sub_5C8A4(a2, (uint64_t)__p, (uint64_t *)(a1 + 8));
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  strcpy((char *)__p, "min_traffic_delay_time");
  HIBYTE(__p[2]) = 22;
  sub_5D498(a2, (uint64_t)__p, (_DWORD *)(a1 + 16));
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  __p[0] = operator new(0x28uLL);
  *(_OWORD *)&__p[1] = xmmword_20B9280;
  strcpy((char *)__p[0], "ev_disconnect_suppression_time_min");
  *(_DWORD *)(a1 + 20) = sub_5D2EC(a2, __p);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  __p[0] = operator new(0x28uLL);
  *(_OWORD *)&__p[1] = xmmword_20B8FD0;
  strcpy((char *)__p[0], "min_user_distance_from_traffic_delay");
  sub_5C8A4(a2, (uint64_t)__p, (uint64_t *)(a1 + 24));
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  __p[0] = operator new(0x28uLL);
  *(_OWORD *)&__p[1] = xmmword_20B8FD0;
  strcpy((char *)__p[0], "max_user_distance_from_traffic_delay");
  sub_5C8A4(a2, (uint64_t)__p, (uint64_t *)(a1 + 32));
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  __p[0] = operator new(0x30uLL);
  *(_OWORD *)&__p[1] = xmmword_20B93D0;
  strcpy((char *)__p[0], "detect_traffic_delays_caused_by_incidents");
  uint64_t v4 = sub_58070(a2, (uint64_t)__p);
  if (v4 && (int v5 = *((_DWORD *)v4 + 12), (v5 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)(a1 + 40) = v5 == 4;
    if (SHIBYTE(__p[2]) < 0) {
      goto LABEL_18;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a1 + 40) != 0;
    if (SHIBYTE(__p[2]) < 0) {
LABEL_18:
    }
      operator delete(__p[0]);
  }
  __p[0] = operator new(0x28uLL);
  *(_OWORD *)&__p[1] = xmmword_20B9260;
  strcpy((char *)__p[0], "enable_towing_not_supported_alert");
  uint64_t v6 = sub_58070(a2, (uint64_t)__p);
  if (v6 && (int v7 = *((_DWORD *)v6 + 12), (v7 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)(a1 + 41) = v7 == 4;
    if (SHIBYTE(__p[2]) < 0) {
      goto LABEL_24;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 41) = *(unsigned char *)(a1 + 41) != 0;
    if (SHIBYTE(__p[2]) < 0) {
LABEL_24:
    }
      operator delete(__p[0]);
  }
  __p[0] = operator new(0x38uLL);
  *(_OWORD *)&__p[1] = xmmword_20B9A10;
  strcpy((char *)__p[0], "incident_causing_traffic_delay_min_position_ratio");
  uint64_t v8 = sub_58070(a2, (uint64_t)__p);
  uint64_t v9 = (void *)(a1 + 48);
  if (v8)
  {
    uint64_t v9 = v8 + 5;
    if (*((_DWORD *)v8 + 12) != 1) {
      uint64_t v9 = (void *)(a1 + 48);
    }
  }
  *(void *)(a1 + 48) = *v9;
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
}

void sub_722A14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_722A50(uint64_t *a1, uint64_t a2)
{
  unint64_t v3 = 0xF6AC0C6FEF6AC0C7 * ((a1[1] - *a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0x212A7E720212A7) {
    sub_2E00();
  }
  if (0xED5818DFDED5818ELL * ((a1[2] - *a1) >> 3) > v4) {
    unint64_t v4 = 0xED5818DFDED5818ELL * ((a1[2] - *a1) >> 3);
  }
  if (0xF6AC0C6FEF6AC0C7 * ((a1[2] - *a1) >> 3) >= 0x10953F39010953) {
    unint64_t v6 = 0x212A7E720212A7;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0x212A7E720212A7) {
      sub_188D718();
    }
    int v7 = (char *)operator new(1976 * v6);
  }
  else
  {
    int v7 = 0;
  }
  uint64_t v14 = (uint64_t)&v7[1976 * v3];
  int v15 = &v7[1976 * v6];
  sub_55BBD8(v14, a2);
  uint64_t v8 = v14;
  uint64_t v9 = v14 + 1976;
  uint64_t v11 = (char *)*a1;
  uint64_t v10 = (char *)a1[1];
  if (v10 == (char *)*a1)
  {
    *a1 = v14;
    a1[1] = v9;
    a1[2] = (uint64_t)v15;
  }
  else
  {
    do
    {
      v10 -= 1976;
      uint64_t v8 = sub_571ACC(v8 - 1976, (uint64_t)v10);
    }
    while (v10 != v11);
    uint64_t v12 = (char *)*a1;
    uint64_t v10 = (char *)a1[1];
    *a1 = v8;
    a1[1] = v9;
    a1[2] = (uint64_t)v15;
    if (v10 != v12)
    {
      do
      {
        v10 -= 1976;
        sub_55BCE8((uint64_t)v10);
      }
      while (v10 != v12);
      uint64_t v10 = v12;
    }
  }
  if (v10) {
    operator delete(v10);
  }
  return v14 + 1976;
}

void sub_722BD0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_722BE4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_722BE4(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 1976;
    sub_55BCE8(i - 1976);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_722C38(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *a1;
  uint64_t v6 = (a2 - *a1) / 1976;
  uint64_t v7 = *a1 + 1976 * v6;
  if (a5 < 1) {
    return v7;
  }
  uint64_t v9 = a3;
  uint64_t v11 = a1[2];
  unint64_t v12 = a1[1];
  if ((uint64_t)(0xF6AC0C6FEF6AC0C7 * ((uint64_t)(v11 - v12) >> 3)) >= a5)
  {
    if ((uint64_t)(0xF6AC0C6FEF6AC0C7 * ((uint64_t)(v12 - v7) >> 3)) >= a5)
    {
      uint64_t v18 = a3 + 1976 * a5;
      uint64_t v20 = a1[1];
    }
    else
    {
      uint64_t v18 = a3 + 8 * ((uint64_t)(v12 - v7) >> 3);
      if (v18 == a4)
      {
        uint64_t v20 = a1[1];
        a1[1] = v12;
        if ((uint64_t)(v12 - v7) < 1) {
          return v7;
        }
      }
      else
      {
        uint64_t v19 = 0;
        do
        {
          sub_55BBD8(v12 + v19, v18 + v19);
          v19 += 1976;
        }
        while (v18 + v19 != a4);
        uint64_t v20 = v12 + v19;
        a1[1] = v12 + v19;
        if ((uint64_t)(v12 - v7) < 1) {
          return v7;
        }
      }
    }
    uint64_t v21 = v7 + 1976 * a5;
    unint64_t v22 = v20 - 1976 * a5;
    uint64_t v23 = v20;
    if (v22 < v12)
    {
      uint64_t v23 = v20;
      do
      {
        uint64_t v24 = sub_571ACC(v23, v22);
        v22 += 1976;
        uint64_t v23 = v24 + 1976;
      }
      while (v22 < v12);
    }
    a1[1] = v23;
    if (v20 != v21)
    {
      uint64_t v25 = v20 - 1976;
      uint64_t v26 = 8 * ((v20 - v21) >> 3);
      do
      {
        sub_5726A4(v25, 1976 * v6 + v5 - 1976 + v26);
        v25 -= 1976;
        v26 -= 1976;
      }
      while (v26);
    }
    if (v18 != v9)
    {
      uint64_t v27 = v7;
      do
      {
        sub_572C48(v27, v9);
        v9 += 1976;
        v27 += 1976;
      }
      while (v9 != v18);
    }
    return v7;
  }
  unint64_t v13 = a5 - 0x953F39010953F39 * ((uint64_t)(v12 - v5) >> 3);
  if (v13 > 0x212A7E720212A7) {
    sub_2E00();
  }
  unint64_t v14 = 0xF6AC0C6FEF6AC0C7 * ((v11 - v5) >> 3);
  if (2 * v14 > v13) {
    unint64_t v13 = 2 * v14;
  }
  if (v14 >= 0x10953F39010953) {
    unint64_t v15 = 0x212A7E720212A7;
  }
  else {
    unint64_t v15 = v13;
  }
  if (v15)
  {
    if (v15 > 0x212A7E720212A7) {
      sub_188D718();
    }
    BOOL v16 = (char *)operator new(1976 * v15);
  }
  else
  {
    BOOL v16 = 0;
  }
  uint64_t v29 = (uint64_t)&v16[1976 * v6];
  uint64_t v38 = v29;
  BOOL v39 = &v16[1976 * v15];
  uint64_t v30 = 1976 * a5;
  uint64_t v31 = v29 + 1976 * a5;
  do
  {
    sub_55BBD8(v29, v9);
    v29 += 1976;
    v9 += 1976;
    v30 -= 1976;
  }
  while (v30);
  uint64_t v28 = v38;
  uint64_t v32 = *a1;
  uint64_t v33 = v38;
  if (*a1 != v7)
  {
    uint64_t v34 = v7;
    uint64_t v33 = v38;
    do
    {
      v33 -= 1976;
      v34 -= 1976;
      sub_571ACC(v33, v34);
    }
    while (v34 != v32);
  }
  uint64_t v35 = a1[1];
  if (v35 != v7)
  {
    do
    {
      sub_571ACC(v31, v7);
      v7 += 1976;
      v31 += 1976;
    }
    while (v7 != v35);
    uint64_t v7 = a1[1];
  }
  uint64_t v36 = (void *)*a1;
  *a1 = v33;
  a1[1] = v31;
  a1[2] = (uint64_t)v39;
  while ((void *)v7 != v36)
  {
    v7 -= 1976;
    sub_55BCE8(v7);
  }
  if (v36) {
    operator delete(v36);
  }
  return v28;
}

void sub_722FC8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_722BE4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_722FE0(uint64_t result, unint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7 = a2;
  uint64_t v8 = result;
  unint64_t v26 = a2;
  unint64_t v27 = result;
LABEL_2:
  uint64_t v9 = 1 - a3;
  while (1)
  {
    uint64_t v10 = v7 - v8;
    unint64_t v11 = 0xF6AC0C6FEF6AC0C7 * ((v7 - v8) >> 3);
    if (!(!v5 & v4)) {
      break;
    }
    if (v10 <= 47423)
    {
      if (a4) {
        return sub_72350C(v8, v7);
      }
      else {
        return sub_72364C(v8, v7);
      }
    }
    if (v9 == 1) {
      return sub_72375C(v8, v7, v7);
    }
    unint64_t v12 = v11 >> 1;
    uint64_t v13 = v7 - 1976;
    if ((unint64_t)v10 >= 0x3DC01)
    {
      sub_723AAC(v8, v8 + 1976 * (v11 >> 1), v13);
      uint64_t v14 = 1976 * v12;
      uint64_t v15 = 1976 * v12 - 1976;
      unint64_t v16 = v26;
      sub_723AAC(v27 + 1976, v27 + v15, v26 - 3952);
      sub_723AAC(v27 + 3952, v27 + v14 + 1976, v16 - 5928);
      sub_723AAC(v27 + v15, v27 + v14, v27 + v14 + 1976);
      unint64_t v25 = v27 + v14;
      sub_7232E0((uint64_t *)&v27, (uint64_t *)&v25);
      if (a4) {
        goto LABEL_15;
      }
    }
    else
    {
      sub_723AAC(v8 + 1976 * (v11 >> 1), v8, v13);
      if (a4)
      {
LABEL_15:
        uint64_t v7 = v26;
        unint64_t v20 = sub_723E88(v27, v26);
        if ((v22 & 1) == 0) {
          goto LABEL_21;
        }
        goto LABEL_16;
      }
    }
    uint64_t v17 = v27;
    uint64_t v18 = sub_50E2E4(v27 - 1976);
    uint64_t v19 = sub_50E2E4(v17);
    uint64_t v7 = v26;
    if (v18 >= v19)
    {
      BOOL result = sub_723C58(v27, v26);
      uint64_t v8 = result;
      goto LABEL_23;
    }
    unint64_t v20 = sub_723E88(v27, v26);
    if ((v21 & 1) == 0) {
      goto LABEL_21;
    }
LABEL_16:
    int v23 = sub_7240B8(v27, v20);
    uint64_t v8 = v20 + 1976;
    BOOL result = sub_7240B8(v20 + 1976, v7);
    if (result)
    {
      if (v23) {
        return result;
      }
      unint64_t v26 = v20;
      uint64_t v8 = v27;
      uint64_t v7 = v20;
      ++v9;
    }
    else
    {
      if (!v23)
      {
LABEL_21:
        BOOL result = sub_722FE0(v27, v20, -v9, a4 & 1);
        uint64_t v8 = v20 + 1976;
LABEL_23:
        a4 = 0;
        unint64_t v27 = v8;
        a3 = -v9;
        goto LABEL_2;
      }
      unint64_t v27 = v20 + 1976;
      ++v9;
    }
  }
  switch(v11)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      unint64_t v26 = v7 - 1976;
      uint64_t v24 = sub_50E2E4(v7 - 1976);
      BOOL result = sub_50E2E4(v8);
      if (v24 < result) {
        BOOL result = sub_7232E0((uint64_t *)&v27, (uint64_t *)&v26);
      }
      break;
    case 3uLL:
      unint64_t v26 = v7 - 1976;
      BOOL result = sub_723AAC(v8, v8 + 1976, v7 - 1976);
      break;
    case 4uLL:
      unint64_t v26 = v7 - 1976;
      BOOL result = sub_72439C(v8, v8 + 1976, v8 + 3952, v7 - 1976);
      break;
    case 5uLL:
      unint64_t v26 = v7 - 1976;
      BOOL result = sub_72336C(v8, v8 + 1976, v8 + 3952, v8 + 5928, v7 - 1976);
      break;
    default:
      JUMPOUT(0);
  }
  return result;
}

uint64_t sub_7232E0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  sub_571ACC((uint64_t)v5, *a1);
  sub_5726A4(v2, v3);
  sub_5726A4(v3, (uint64_t)v5);
  return sub_55BCE8((uint64_t)v5);
}

uint64_t sub_72336C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_72439C(a1, a2, a3, a4);
  uint64_t v10 = sub_50E2E4(a5);
  uint64_t result = sub_50E2E4(a4);
  if (v10 < result)
  {
    sub_571ACC((uint64_t)v15, a4);
    sub_5726A4(a4, a5);
    sub_5726A4(a5, (uint64_t)v15);
    sub_55BCE8((uint64_t)v15);
    uint64_t v12 = sub_50E2E4(a4);
    uint64_t result = sub_50E2E4(a3);
    if (v12 < result)
    {
      sub_571ACC((uint64_t)v15, a3);
      sub_5726A4(a3, a4);
      sub_5726A4(a4, (uint64_t)v15);
      sub_55BCE8((uint64_t)v15);
      uint64_t v13 = sub_50E2E4(a3);
      uint64_t result = sub_50E2E4(a2);
      if (v13 < result)
      {
        sub_571ACC((uint64_t)v15, a2);
        sub_5726A4(a2, a3);
        sub_5726A4(a3, (uint64_t)v15);
        sub_55BCE8((uint64_t)v15);
        uint64_t v14 = sub_50E2E4(a2);
        uint64_t result = sub_50E2E4(a1);
        if (v14 < result)
        {
          sub_571ACC((uint64_t)v15, a1);
          sub_5726A4(a1, a2);
          sub_5726A4(a2, (uint64_t)v15);
          return sub_55BCE8((uint64_t)v15);
        }
      }
    }
  }
  return result;
}

uint64_t sub_72350C(uint64_t result, uint64_t a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result + 1976;
    if (result + 1976 != a2)
    {
      uint64_t v5 = 0;
      uint64_t v6 = result;
      do
      {
        uint64_t v8 = v4;
        uint64_t v9 = sub_50E2E4(v4);
        uint64_t result = sub_50E2E4(v6);
        if (v9 < result)
        {
          sub_571ACC((uint64_t)v13, v8);
          uint64_t v10 = v5;
          do
          {
            sub_5726A4(v3 + v10 + 1976, v3 + v10);
            if (!v10)
            {
              uint64_t v7 = v3;
              goto LABEL_5;
            }
            uint64_t v11 = sub_50E2E4((uint64_t)v13);
            uint64_t v12 = sub_50E2E4(v3 + v10 - 1976);
            v10 -= 1976;
          }
          while (v11 < v12);
          uint64_t v7 = v3 + v10 + 1976;
LABEL_5:
          sub_5726A4(v7, (uint64_t)v13);
          uint64_t result = sub_55BCE8((uint64_t)v13);
        }
        uint64_t v4 = v8 + 1976;
        v5 += 1976;
        uint64_t v6 = v8;
      }
      while (v8 + 1976 != a2);
    }
  }
  return result;
}

void sub_723638(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_72364C(uint64_t result, uint64_t a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result + 1976;
    while (v4 != a2)
    {
      uint64_t v5 = v4;
      uint64_t v6 = sub_50E2E4(v4);
      uint64_t result = sub_50E2E4(v3);
      if (v6 < result)
      {
        sub_571ACC((uint64_t)v8, v5);
        do
        {
          sub_5726A4(v3 + 1976, v3);
          uint64_t v7 = sub_50E2E4((uint64_t)v8);
          v3 -= 1976;
        }
        while (v7 < sub_50E2E4(v3));
        sub_5726A4(v3 + 1976, (uint64_t)v8);
        uint64_t result = sub_55BCE8((uint64_t)v8);
      }
      uint64_t v4 = v5 + 1976;
      uint64_t v3 = v5;
    }
  }
  return result;
}

void sub_723748(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_72375C(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result != a2)
  {
    uint64_t v4 = a2;
    uint64_t v5 = result;
    uint64_t v6 = a2 - result;
    uint64_t v7 = (a2 - result) / 1976;
    if (a2 - result >= 1977)
    {
      unint64_t v8 = (unint64_t)(v7 - 2) >> 1;
      unint64_t v9 = v8 + 1;
      uint64_t v10 = result + 1976 * v8;
      do
      {
        uint64_t result = sub_7244E8(v5, v7, v10);
        v10 -= 1976;
        --v9;
      }
      while (v9);
    }
    if (v4 != a3)
    {
      uint64_t v11 = v4;
      do
      {
        uint64_t v12 = sub_50E2E4(v11);
        uint64_t result = sub_50E2E4(v5);
        if (v12 < result)
        {
          sub_571ACC((uint64_t)v29, v11);
          sub_5726A4(v11, v5);
          sub_5726A4(v5, (uint64_t)v29);
          sub_55BCE8((uint64_t)v29);
          uint64_t result = sub_7244E8(v5, v7, v5);
        }
        v11 += 1976;
      }
      while (v11 != a3);
    }
    if (v6 >= 1977)
    {
      int64_t v13 = v6 / 0x7B8uLL;
      do
      {
        uint64_t v27 = v4;
        sub_571ACC((uint64_t)v28, v5);
        uint64_t v15 = 0;
        uint64_t v16 = v5;
        do
        {
          uint64_t v17 = v16 + 1976 * v15 + 1976;
          uint64_t v18 = (2 * v15) | 1;
          uint64_t v19 = 2 * v15 + 2;
          if (v19 < v13)
          {
            uint64_t v20 = sub_50E2E4(v16 + 1976 * v15 + 1976);
            if (v20 < sub_50E2E4(v17 + 1976))
            {
              v17 += 1976;
              uint64_t v18 = v19;
            }
          }
          sub_5726A4(v16, v17);
          uint64_t v16 = v17;
          uint64_t v15 = v18;
        }
        while (v18 <= (uint64_t)((unint64_t)(v13 - 2) >> 1));
        uint64_t v4 = v27 - 1976;
        if (v17 == v27 - 1976)
        {
          sub_5726A4(v17, (uint64_t)v28);
        }
        else
        {
          sub_5726A4(v17, v27 - 1976);
          sub_5726A4(v4, (uint64_t)v28);
          uint64_t v21 = v17 - v5 + 1976;
          if (v21 >= 1977)
          {
            unint64_t v22 = (v21 / 0x7B8uLL - 2) >> 1;
            uint64_t v23 = v5 + 1976 * v22;
            uint64_t v24 = sub_50E2E4(v23);
            if (v24 < sub_50E2E4(v17))
            {
              sub_571ACC((uint64_t)v29, v17);
              do
              {
                uint64_t v25 = v23;
                sub_5726A4(v17, v23);
                if (!v22) {
                  break;
                }
                unint64_t v22 = (v22 - 1) >> 1;
                uint64_t v23 = v5 + 1976 * v22;
                uint64_t v26 = sub_50E2E4(v23);
                uint64_t v17 = v25;
              }
              while (v26 < sub_50E2E4((uint64_t)v29));
              sub_5726A4(v25, (uint64_t)v29);
              sub_55BCE8((uint64_t)v29);
            }
          }
        }
        uint64_t result = sub_55BCE8((uint64_t)v28);
      }
      while (v13-- > 2);
    }
  }
  return result;
}

void sub_723A64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_55BCE8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_723A7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_55BCE8((uint64_t)&STACK[0x7C8]);
  sub_55BCE8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_723A98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_55BCE8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_723AAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_50E2E4(a2);
  uint64_t v7 = sub_50E2E4(a1);
  uint64_t v8 = sub_50E2E4(a3);
  uint64_t result = sub_50E2E4(a2);
  if (v6 < v7)
  {
    if (v8 >= result)
    {
      sub_571ACC((uint64_t)v14, a1);
      sub_5726A4(a1, a2);
      sub_5726A4(a2, (uint64_t)v14);
      sub_55BCE8((uint64_t)v14);
      uint64_t v13 = sub_50E2E4(a3);
      uint64_t result = sub_50E2E4(a2);
      if (v13 >= result) {
        return result;
      }
      sub_571ACC((uint64_t)v14, a2);
      uint64_t v10 = a2;
    }
    else
    {
      sub_571ACC((uint64_t)v14, a1);
      uint64_t v10 = a1;
    }
    sub_5726A4(v10, a3);
    uint64_t v12 = a3;
    goto LABEL_10;
  }
  if (v8 < result)
  {
    sub_571ACC((uint64_t)v14, a2);
    sub_5726A4(a2, a3);
    sub_5726A4(a3, (uint64_t)v14);
    sub_55BCE8((uint64_t)v14);
    uint64_t v11 = sub_50E2E4(a2);
    uint64_t result = sub_50E2E4(a1);
    if (v11 < result)
    {
      sub_571ACC((uint64_t)v14, a1);
      sub_5726A4(a1, a2);
      uint64_t v12 = a2;
LABEL_10:
      sub_5726A4(v12, (uint64_t)v14);
      return sub_55BCE8((uint64_t)v14);
    }
  }
  return result;
}

unint64_t sub_723C58(uint64_t a1, unint64_t a2)
{
  sub_571ACC((uint64_t)v14, a1);
  uint64_t v4 = sub_50E2E4((uint64_t)v14);
  if (v4 >= sub_50E2E4(a2 - 1976))
  {
    unint64_t v7 = a1 + 1976;
    do
    {
      unint64_t v5 = v7;
      if (v7 >= a2) {
        break;
      }
      uint64_t v8 = sub_50E2E4((uint64_t)v14);
      uint64_t v9 = sub_50E2E4(v5);
      unint64_t v7 = v5 + 1976;
    }
    while (v8 >= v9);
  }
  else
  {
    unint64_t v5 = a1;
    do
    {
      uint64_t v6 = sub_50E2E4((uint64_t)v14);
      v5 += 1976;
    }
    while (v6 >= sub_50E2E4(v5));
  }
  if (v5 < a2)
  {
    do
    {
      uint64_t v10 = sub_50E2E4((uint64_t)v14);
      a2 -= 1976;
    }
    while (v10 < sub_50E2E4(a2));
  }
  while (v5 < a2)
  {
    sub_571ACC((uint64_t)v15, v5);
    sub_5726A4(v5, a2);
    sub_5726A4(a2, (uint64_t)v15);
    sub_55BCE8((uint64_t)v15);
    do
    {
      uint64_t v11 = sub_50E2E4((uint64_t)v14);
      v5 += 1976;
    }
    while (v11 >= sub_50E2E4(v5));
    do
    {
      uint64_t v12 = sub_50E2E4((uint64_t)v14);
      a2 -= 1976;
    }
    while (v12 < sub_50E2E4(a2));
  }
  if (v5 - 1976 != a1) {
    sub_5726A4(a1, v5 - 1976);
  }
  sub_5726A4(v5 - 1976, (uint64_t)v14);
  sub_55BCE8((uint64_t)v14);
  return v5;
}

void sub_723E10(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_55BCE8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_723E24(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_55BCE8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_723E38(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_55BCE8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_723E4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_55BCE8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_723E60(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_55BCE8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_723E74(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_55BCE8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_723E88(uint64_t a1, unint64_t a2)
{
  sub_571ACC((uint64_t)v15, a1);
  uint64_t v4 = 0;
  do
  {
    uint64_t v5 = sub_50E2E4(a1 + v4 + 1976);
    v4 += 1976;
  }
  while (v5 < sub_50E2E4((uint64_t)v15));
  unint64_t v6 = a1 + v4;
  if (v4 == 1976)
  {
    do
    {
      if (v6 >= a2) {
        break;
      }
      a2 -= 1976;
      uint64_t v8 = sub_50E2E4(a2);
    }
    while (v8 >= sub_50E2E4((uint64_t)v15));
  }
  else
  {
    do
    {
      a2 -= 1976;
      uint64_t v7 = sub_50E2E4(a2);
    }
    while (v7 >= sub_50E2E4((uint64_t)v15));
  }
  if (v6 >= a2)
  {
    uint64_t v13 = v6 - 1976;
    if (v6 - 1976 == a1) {
      goto LABEL_18;
    }
LABEL_17:
    sub_5726A4(a1, v13);
    goto LABEL_18;
  }
  unint64_t v9 = a1 + v4;
  unint64_t v10 = a2;
  do
  {
    sub_571ACC((uint64_t)v16, v9);
    sub_5726A4(v9, v10);
    sub_5726A4(v10, (uint64_t)v16);
    sub_55BCE8((uint64_t)v16);
    do
    {
      v9 += 1976;
      uint64_t v11 = sub_50E2E4(v9);
    }
    while (v11 < sub_50E2E4((uint64_t)v15));
    do
    {
      v10 -= 1976;
      uint64_t v12 = sub_50E2E4(v10);
    }
    while (v12 >= sub_50E2E4((uint64_t)v15));
  }
  while (v9 < v10);
  uint64_t v13 = v9 - 1976;
  if (v13 != a1) {
    goto LABEL_17;
  }
LABEL_18:
  sub_5726A4(v13, (uint64_t)v15);
  sub_55BCE8((uint64_t)v15);
  return v13;
}

void sub_724054(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_55BCE8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_724068(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_55BCE8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_72407C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_55BCE8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_724090(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_55BCE8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_7240A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_55BCE8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_7240B8(uint64_t a1, uint64_t a2)
{
  BOOL v4 = 1;
  switch(0xF6AC0C6FEF6AC0C7 * ((a2 - a1) >> 3))
  {
    case 0uLL:
    case 1uLL:
      return v4;
    case 2uLL:
      uint64_t v5 = a2 - 1976;
      uint64_t v6 = sub_50E2E4(a2 - 1976);
      if (v6 < sub_50E2E4(a1))
      {
        sub_571ACC((uint64_t)v18, a1);
        sub_5726A4(a1, v5);
        sub_5726A4(v5, (uint64_t)v18);
        sub_55BCE8((uint64_t)v18);
      }
      return 1;
    case 3uLL:
      sub_723AAC(a1, a1 + 1976, a2 - 1976);
      return v4;
    case 4uLL:
      sub_72439C(a1, a1 + 1976, a1 + 3952, a2 - 1976);
      return v4;
    case 5uLL:
      sub_72336C(a1, a1 + 1976, a1 + 3952, a1 + 5928, a2 - 1976);
      return v4;
    default:
      uint64_t v7 = a1 + 3952;
      sub_723AAC(a1, a1 + 1976, a1 + 3952);
      uint64_t v8 = a1 + 5928;
      if (a1 + 5928 == a2) {
        return 1;
      }
      uint64_t v9 = 0;
      int v10 = 0;
      uint64_t v11 = a1 + 5928;
      break;
  }
  while (1)
  {
    uint64_t v12 = sub_50E2E4(v11);
    if (v12 < sub_50E2E4(v7)) {
      break;
    }
LABEL_6:
    uint64_t v7 = v11;
    v9 += 1976;
    v11 += 1976;
    if (v11 == a2) {
      return 1;
    }
  }
  sub_571ACC((uint64_t)v18, v11);
  uint64_t v13 = v9;
  while (1)
  {
    sub_5726A4(v8 + v13, a1 + v13 + 3952);
    if (v13 == -3952) {
      break;
    }
    uint64_t v14 = sub_50E2E4((uint64_t)v18);
    uint64_t v15 = sub_50E2E4(a1 + v13 + 1976);
    v13 -= 1976;
    if (v14 >= v15)
    {
      uint64_t v16 = v8 + v13;
      goto LABEL_13;
    }
  }
  uint64_t v16 = a1;
LABEL_13:
  sub_5726A4(v16, (uint64_t)v18);
  if (++v10 != 8)
  {
    sub_55BCE8((uint64_t)v18);
    goto LABEL_6;
  }
  BOOL v4 = v11 + 1976 == a2;
  sub_55BCE8((uint64_t)v18);
  return v4;
}

void sub_724370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_72439C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_723AAC(a1, a2, a3);
  uint64_t v8 = sub_50E2E4(a4);
  uint64_t result = sub_50E2E4(a3);
  if (v8 < result)
  {
    sub_571ACC((uint64_t)v12, a3);
    sub_5726A4(a3, a4);
    sub_5726A4(a4, (uint64_t)v12);
    sub_55BCE8((uint64_t)v12);
    uint64_t v10 = sub_50E2E4(a3);
    uint64_t result = sub_50E2E4(a2);
    if (v10 < result)
    {
      sub_571ACC((uint64_t)v12, a2);
      sub_5726A4(a2, a3);
      sub_5726A4(a3, (uint64_t)v12);
      sub_55BCE8((uint64_t)v12);
      uint64_t v11 = sub_50E2E4(a2);
      uint64_t result = sub_50E2E4(a1);
      if (v11 < result)
      {
        sub_571ACC((uint64_t)v12, a1);
        sub_5726A4(a1, a2);
        sub_5726A4(a2, (uint64_t)v12);
        return sub_55BCE8((uint64_t)v12);
      }
    }
  }
  return result;
}

uint64_t sub_7244E8(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = a2 - 2;
  if (a2 >= 2)
  {
    uint64_t v4 = a3;
    uint64_t v5 = result;
    int64_t v6 = v3 >> 1;
    if ((uint64_t)(v3 >> 1) >= (uint64_t)(0xF6AC0C6FEF6AC0C7 * ((a3 - result) >> 3)))
    {
      int64_t v8 = (0xED5818DFDED5818ELL * ((a3 - result) >> 3)) | 1;
      uint64_t v9 = result + 1976 * v8;
      int64_t v10 = 0xED5818DFDED5818ELL * ((a3 - result) >> 3) + 2;
      if (v10 < a2)
      {
        uint64_t v11 = sub_50E2E4(result + 1976 * v8);
        if (v11 < sub_50E2E4(v9 + 1976))
        {
          v9 += 1976;
          int64_t v8 = v10;
        }
      }
      uint64_t v12 = sub_50E2E4(v9);
      uint64_t result = sub_50E2E4(v4);
      if (v12 >= result)
      {
        sub_571ACC((uint64_t)v17, v4);
        do
        {
          uint64_t v13 = v9;
          sub_5726A4(v4, v9);
          if (v6 < v8) {
            break;
          }
          uint64_t v14 = (2 * v8) | 1;
          uint64_t v9 = v5 + 1976 * v14;
          int64_t v8 = 2 * v8 + 2;
          if (v8 >= a2)
          {
            int64_t v8 = v14;
          }
          else
          {
            uint64_t v15 = sub_50E2E4(v5 + 1976 * v14);
            if (v15 >= sub_50E2E4(v9 + 1976)) {
              int64_t v8 = v14;
            }
            else {
              v9 += 1976;
            }
          }
          uint64_t v16 = sub_50E2E4(v9);
          uint64_t v4 = v13;
        }
        while (v16 >= sub_50E2E4((uint64_t)v17));
        sub_5726A4(v13, (uint64_t)v17);
        return sub_55BCE8((uint64_t)v17);
      }
    }
  }
  return result;
}

void sub_724698(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_55BCE8((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_7246AC()
{
  byte_25A887F = 1;
  word_25A8868 = 65;
  byte_25A8897 = 1;
  word_25A8880 = 65;
  char v4 = 7;
  strcpy((char *)v3, "UNKNOWN");
  int v5 = 0;
  char v7 = 14;
  strcpy((char *)v6, "ROUTES_THROUGH");
  int v8 = 1;
  char v10 = 9;
  strcpy((char *)__p, "ROUTES_TO");
  int v11 = 3;
  char v13 = 11;
  strcpy((char *)v12, "ROUTES_FROM");
  int v14 = 2;
  xmmword_25A8928 = 0u;
  *(_OWORD *)&qword_25A8938 = 0u;
  dword_25A8948 = 1065353216;
  sub_3A6EF0((uint64_t)&xmmword_25A8928, (uint64_t)v3, (uint64_t)v3);
  sub_3A6EF0((uint64_t)&xmmword_25A8928, (uint64_t)v6, (uint64_t)v6);
  sub_3A6EF0((uint64_t)&xmmword_25A8928, (uint64_t)__p, (uint64_t)__p);
  sub_3A6EF0((uint64_t)&xmmword_25A8928, (uint64_t)v12, (uint64_t)v12);
  if (v13 < 0)
  {
    operator delete(v12[0]);
    if ((v10 & 0x80000000) == 0)
    {
LABEL_3:
      if ((v7 & 0x80000000) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      operator delete(v6[0]);
      if ((v4 & 0x80000000) == 0) {
        goto LABEL_5;
      }
LABEL_9:
      operator delete(v3[0]);
      goto LABEL_5;
    }
  }
  else if ((v10 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p[0]);
  if (v7 < 0) {
    goto LABEL_8;
  }
LABEL_4:
  if (v4 < 0) {
    goto LABEL_9;
  }
LABEL_5:
  byte_25A88AF = 8;
  strcpy((char *)&qword_25A8898, "any_mode");
  byte_25A88C7 = 7;
  strcpy((char *)&dword_25A88B0, "cycling");
  byte_25A88DF = 7;
  strcpy((char *)&dword_25A88C8, "driving");
  byte_25A88F7 = 7;
  strcpy((char *)&dword_25A88E0, "walking");
  qword_25A8900 = 0;
  qword_25A8908 = 0;
  qword_25A88F8 = 0;
  uint64_t v0 = operator new(9uLL);
  *(void *)uint64_t v0 = 0x4020C000103050DLL;
  v0[8] = 6;
  qword_25A88F8 = (uint64_t)v0;
  qword_25A8900 = (uint64_t)(v0 + 9);
  qword_25A8908 = (uint64_t)(v0 + 9);
  qword_25A8910 = 0;
  qword_25A8918 = 0;
  unk_25A8920 = 0;
  uint64_t v1 = (char *)operator new(9uLL);
  qword_25A8918 = (uint64_t)(v1 + 9);
  unk_25A8920 = v1 + 9;
  double result = 1.10224369e-279;
  *(void *)uint64_t v1 = 0x604020C00010305;
  v1[8] = 13;
  qword_25A8910 = (uint64_t)v1;
  return result;
}

void sub_724974(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  if (qword_25A8938) {
    sub_20AABF8((void **)qword_25A8938);
  }
  uint64_t v37 = (void *)xmmword_25A8928;
  *(void *)&xmmword_25A8928 = 0;
  if (v37)
  {
    operator delete(v37);
    if ((a36 & 0x80000000) == 0)
    {
LABEL_5:
      if ((a29 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_11;
    }
  }
  else if ((a36 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(__p);
  if ((a29 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a22 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_12;
  }
LABEL_11:
  operator delete(a24);
  if ((a22 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a15 & 0x80000000) == 0) {
LABEL_14:
    }
      _Unwind_Resume(exception_object);
LABEL_13:
    operator delete(a10);
    _Unwind_Resume(exception_object);
  }
LABEL_12:
  operator delete(a17);
  if ((a15 & 0x80000000) == 0) {
    goto LABEL_14;
  }
  goto LABEL_13;
}

uint64_t sub_724A14(uint64_t a1, uint64_t a2)
{
  *(void *)&long long v3 = -1;
  *((void *)&v3 + 1) = -1;
  *(void *)(a1 + 68) = -1;
  *(_DWORD *)(a1 + 76) = -1;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v3;
  HIBYTE(v36[2]) = 16;
  strcpy((char *)v36, "RouteCameraInput");
  long long __p = 0;
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  char v4 = sub_374CDC(a2, (uint64_t)v36, (uint64_t *)&__p);
  sub_54214((uint64_t)v37, (uint64_t)v4);
  int v5 = (void **)__p;
  if (__p)
  {
    int64_t v6 = v34;
    char v7 = __p;
    if (v34 != __p)
    {
      do
      {
        if (*((char *)v6 - 1) < 0) {
          operator delete(*(v6 - 3));
        }
        v6 -= 3;
      }
      while (v6 != v5);
      char v7 = __p;
    }
    uint64_t v34 = v5;
    operator delete(v7);
  }
  if (SHIBYTE(v36[2]) < 0) {
    operator delete(v36[0]);
  }
  v36[0] = (char *)operator new(0x19uLL);
  *(_OWORD *)&v36[1] = xmmword_20B9250;
  strcpy(v36[0], "bridge_camera_input_key");
  int v8 = sub_58070(v37, (uint64_t)v36);
  if (v8 && *((_DWORD *)v8 + 12) == 1)
  {
    *(_DWORD *)a1 = *((double *)v8 + 5);
    if (SHIBYTE(v36[2]) < 0) {
      goto LABEL_16;
    }
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a1;
    if (SHIBYTE(v36[2]) < 0) {
LABEL_16:
    }
      operator delete(v36[0]);
  }
  v36[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v36[1] = xmmword_20B8870;
  strcpy(v36[0], "bridge_camera_input_value");
  uint64_t v9 = sub_58070(v37, (uint64_t)v36);
  if (v9 && *((_DWORD *)v9 + 12) == 1)
  {
    *(_DWORD *)(a1 + 4) = *((double *)v9 + 5);
    if (SHIBYTE(v36[2]) < 0) {
      goto LABEL_22;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 4) = *(_DWORD *)(a1 + 4);
    if (SHIBYTE(v36[2]) < 0) {
LABEL_22:
    }
      operator delete(v36[0]);
  }
  v36[0] = (char *)operator new(0x19uLL);
  *(_OWORD *)&v36[1] = xmmword_20B9250;
  strcpy(v36[0], "tunnel_camera_input_key");
  char v10 = sub_58070(v37, (uint64_t)v36);
  if (v10 && *((_DWORD *)v10 + 12) == 1)
  {
    *(_DWORD *)(a1 + 8) = *((double *)v10 + 5);
    if (SHIBYTE(v36[2]) < 0) {
      goto LABEL_28;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 8);
    if (SHIBYTE(v36[2]) < 0) {
LABEL_28:
    }
      operator delete(v36[0]);
  }
  v36[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v36[1] = xmmword_20B8870;
  strcpy(v36[0], "tunnel_camera_input_value");
  int v11 = sub_58070(v37, (uint64_t)v36);
  if (v11 && *((_DWORD *)v11 + 12) == 1)
  {
    *(_DWORD *)(a1 + 12) = *((double *)v11 + 5);
    if (SHIBYTE(v36[2]) < 0) {
      goto LABEL_34;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 12) = *(_DWORD *)(a1 + 12);
    if (SHIBYTE(v36[2]) < 0) {
LABEL_34:
    }
      operator delete(v36[0]);
  }
  v36[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v36[1] = xmmword_20B8890;
  strcpy(v36[0], "urban_canyon_camera_input_key");
  uint64_t v12 = sub_58070(v37, (uint64_t)v36);
  if (v12 && *((_DWORD *)v12 + 12) == 1)
  {
    *(_DWORD *)(a1 + 16) = *((double *)v12 + 5);
    if (SHIBYTE(v36[2]) < 0) {
      goto LABEL_40;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 16) = *(_DWORD *)(a1 + 16);
    if (SHIBYTE(v36[2]) < 0) {
LABEL_40:
    }
      operator delete(v36[0]);
  }
  v36[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v36[1] = xmmword_20B8E90;
  strcpy(v36[0], "urban_canyon_camera_input_value");
  char v13 = sub_58070(v37, (uint64_t)v36);
  if (v13 && *((_DWORD *)v13 + 12) == 1)
  {
    *(_DWORD *)(a1 + 20) = *((double *)v13 + 5);
    if (SHIBYTE(v36[2]) < 0) {
      goto LABEL_46;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 20);
    if (SHIBYTE(v36[2]) < 0) {
LABEL_46:
    }
      operator delete(v36[0]);
  }
  v36[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v36[1] = xmmword_20B9260;
  strcpy(v36[0], "complex_overpass_camera_input_key");
  int v14 = sub_58070(v37, (uint64_t)v36);
  if (v14 && *((_DWORD *)v14 + 12) == 1)
  {
    *(_DWORD *)(a1 + 24) = *((double *)v14 + 5);
    if (SHIBYTE(v36[2]) < 0) {
      goto LABEL_52;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 24) = *(_DWORD *)(a1 + 24);
    if (SHIBYTE(v36[2]) < 0) {
LABEL_52:
    }
      operator delete(v36[0]);
  }
  v36[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v36[1] = xmmword_20B93A0;
  strcpy(v36[0], "complex_overpass_camera_input_value");
  uint64_t v15 = sub_58070(v37, (uint64_t)v36);
  if (v15 && *((_DWORD *)v15 + 12) == 1)
  {
    *(_DWORD *)(a1 + 28) = *((double *)v15 + 5);
    if (SHIBYTE(v36[2]) < 0) {
      goto LABEL_58;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 28) = *(_DWORD *)(a1 + 28);
    if (SHIBYTE(v36[2]) < 0) {
LABEL_58:
    }
      operator delete(v36[0]);
  }
  v36[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v36[1] = xmmword_20B9240;
  strcpy(v36[0], "complex_intersection_camera_input_key");
  uint64_t v16 = sub_58070(v37, (uint64_t)v36);
  if (v16 && *((_DWORD *)v16 + 12) == 1)
  {
    *(_DWORD *)(a1 + 32) = *((double *)v16 + 5);
    if (SHIBYTE(v36[2]) < 0) {
      goto LABEL_64;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 32) = *(_DWORD *)(a1 + 32);
    if (SHIBYTE(v36[2]) < 0) {
LABEL_64:
    }
      operator delete(v36[0]);
  }
  v36[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v36[1] = xmmword_20B9960;
  strcpy(v36[0], "complex_intersection_camera_input_value");
  uint64_t v17 = sub_58070(v37, (uint64_t)v36);
  if (v17 && *((_DWORD *)v17 + 12) == 1)
  {
    *(_DWORD *)(a1 + 36) = *((double *)v17 + 5);
    if (SHIBYTE(v36[2]) < 0) {
      goto LABEL_70;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 36) = *(_DWORD *)(a1 + 36);
    if (SHIBYTE(v36[2]) < 0) {
LABEL_70:
    }
      operator delete(v36[0]);
  }
  v36[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v36[1] = xmmword_20B8870;
  strcpy(v36[0], "occluded_camera_input_key");
  uint64_t v18 = sub_58070(v37, (uint64_t)v36);
  if (v18 && *((_DWORD *)v18 + 12) == 1)
  {
    *(_DWORD *)(a1 + 40) = *((double *)v18 + 5);
    if (SHIBYTE(v36[2]) < 0) {
      goto LABEL_76;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 40) = *(_DWORD *)(a1 + 40);
    if (SHIBYTE(v36[2]) < 0) {
LABEL_76:
    }
      operator delete(v36[0]);
  }
  v36[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v36[1] = xmmword_20B91A0;
  strcpy(v36[0], "occluded_camera_input_value");
  uint64_t v19 = sub_58070(v37, (uint64_t)v36);
  if (v19 && *((_DWORD *)v19 + 12) == 1)
  {
    *(_DWORD *)(a1 + 44) = *((double *)v19 + 5);
    if (SHIBYTE(v36[2]) < 0) {
      goto LABEL_82;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 44) = *(_DWORD *)(a1 + 44);
    if (SHIBYTE(v36[2]) < 0) {
LABEL_82:
    }
      operator delete(v36[0]);
  }
  v36[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v36[1] = xmmword_20E12D0;
  strcpy(v36[0], "windshield_camera_style_attributes_key");
  uint64_t v20 = sub_58070(v37, (uint64_t)v36);
  if (v20 && *((_DWORD *)v20 + 12) == 1)
  {
    *(_DWORD *)(a1 + 48) = *((double *)v20 + 5);
    if (SHIBYTE(v36[2]) < 0) {
      goto LABEL_88;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 48) = *(_DWORD *)(a1 + 48);
    if (SHIBYTE(v36[2]) < 0) {
LABEL_88:
    }
      operator delete(v36[0]);
  }
  v36[0] = (char *)operator new(0x38uLL);
  *(_OWORD *)&v36[1] = xmmword_20B9AC0;
  strcpy(v36[0], "windshield_camera_style_attributes_bifurcation_value");
  uint64_t v21 = sub_58070(v37, (uint64_t)v36);
  if (v21 && *((_DWORD *)v21 + 12) == 1)
  {
    *(_DWORD *)(a1 + 52) = *((double *)v21 + 5);
    if (SHIBYTE(v36[2]) < 0) {
      goto LABEL_94;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 52) = *(_DWORD *)(a1 + 52);
    if (SHIBYTE(v36[2]) < 0) {
LABEL_94:
    }
      operator delete(v36[0]);
  }
  v36[0] = (char *)operator new(0x40uLL);
  *(_OWORD *)&v36[1] = xmmword_20B9A70;
  strcpy(v36[0], "windshield_camera_style_attributes_bifurcation_left_value");
  unint64_t v22 = sub_58070(v37, (uint64_t)v36);
  if (v22 && *((_DWORD *)v22 + 12) == 1)
  {
    *(_DWORD *)(a1 + 56) = *((double *)v22 + 5);
    if (SHIBYTE(v36[2]) < 0) {
      goto LABEL_100;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 56) = *(_DWORD *)(a1 + 56);
    if (SHIBYTE(v36[2]) < 0) {
LABEL_100:
    }
      operator delete(v36[0]);
  }
  v36[0] = (char *)operator new(0x40uLL);
  *(_OWORD *)&v36[1] = xmmword_20B9A30;
  strcpy(v36[0], "windshield_camera_style_attributes_bifurcation_right_value");
  uint64_t v23 = sub_58070(v37, (uint64_t)v36);
  if (v23 && *((_DWORD *)v23 + 12) == 1)
  {
    *(_DWORD *)(a1 + 60) = *((double *)v23 + 5);
    if (SHIBYTE(v36[2]) < 0) {
      goto LABEL_106;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 60) = *(_DWORD *)(a1 + 60);
    if (SHIBYTE(v36[2]) < 0) {
LABEL_106:
    }
      operator delete(v36[0]);
  }
  v36[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v36[1] = xmmword_20B93E0;
  strcpy(v36[0], "differentiate_between_bifurcation_direction");
  uint64_t v24 = sub_58070(v37, (uint64_t)v36);
  if (v24 && (int v25 = *((_DWORD *)v24 + 12), (v25 & 0xFFFFFFFE) == 4))
  {
    *(unsigned char *)(a1 + 64) = v25 == 4;
    if (SHIBYTE(v36[2]) < 0) {
      goto LABEL_112;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a1 + 64) != 0;
    if (SHIBYTE(v36[2]) < 0) {
LABEL_112:
    }
      operator delete(v36[0]);
  }
  v36[0] = (char *)operator new(0x30uLL);
  *(_OWORD *)&v36[1] = xmmword_20B9380;
  strcpy(v36[0], "default_windshield_camera_style_attribute_value");
  uint64_t v26 = sub_58070(v37, (uint64_t)v36);
  if (v26 && *((_DWORD *)v26 + 12) == 1)
  {
    *(_DWORD *)(a1 + 68) = *((double *)v26 + 5);
    if (SHIBYTE(v36[2]) < 0) {
      goto LABEL_118;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 68) = *(_DWORD *)(a1 + 68);
    if (SHIBYTE(v36[2]) < 0) {
LABEL_118:
    }
      operator delete(v36[0]);
  }
  v36[0] = (char *)operator new(0x20uLL);
  *(_OWORD *)&v36[1] = xmmword_20B9800;
  strcpy(v36[0], "traffic_delay_camera_input_key");
  uint64_t v27 = sub_58070(v37, (uint64_t)v36);
  if (v27 && *((_DWORD *)v27 + 12) == 1)
  {
    *(_DWORD *)(a1 + 72) = *((double *)v27 + 5);
    if (SHIBYTE(v36[2]) < 0) {
      goto LABEL_124;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 72) = *(_DWORD *)(a1 + 72);
    if (SHIBYTE(v36[2]) < 0) {
LABEL_124:
    }
      operator delete(v36[0]);
  }
  v36[0] = (char *)operator new(0x28uLL);
  *(_OWORD *)&v36[1] = xmmword_20B9390;
  strcpy(v36[0], "traffic_delay_camera_input_value");
  uint64_t v28 = sub_58070(v37, (uint64_t)v36);
  if (v28 && *((_DWORD *)v28 + 12) == 1)
  {
    *(_DWORD *)(a1 + 76) = *((double *)v28 + 5);
    if ((SHIBYTE(v36[2]) & 0x80000000) == 0) {
      goto LABEL_131;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 76) = *(_DWORD *)(a1 + 76);
    if ((SHIBYTE(v36[2]) & 0x80000000) == 0) {
      goto LABEL_131;
    }
  }
  operator delete(v36[0]);
LABEL_131:
  uint64_t v29 = v38;
  if (v38)
  {
    do
    {
      uint64_t v32 = (void **)*v29;
      sub_55198((uint64_t)(v29 + 5));
      if (*((char *)v29 + 39) < 0) {
        operator delete(v29[2]);
      }
      operator delete(v29);
      uint64_t v29 = v32;
    }
    while (v32);
  }
  uint64_t v30 = (void *)v37[0];
  v37[0] = 0;
  if (v30) {
    operator delete(v30);
  }
  return a1;
}

void sub_725560(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  sub_5450C(v22 - 72);
  _Unwind_Resume(a1);
}

void sub_725668()
{
}

void sub_725670(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x725660);
}

void sub_725698()
{
  unk_25A8967 = 16641;
  word_25A8950 = 65;
  byte_25A897F = 1;
  byte_25A8969 = 0;
}

void sub_7256C0(uint64_t a1, void *a2, uint64_t a3, long long *a4)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = sub_3750CC(a2);
  uint64_t v7 = *(void *)a1;
  char v20 = 13;
  uint64_t v18 = 0;
  strcpy((char *)v19, "RouteGuidance");
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  int v8 = sub_374CDC(v7, (uint64_t)v19, (uint64_t *)&v16);
  sub_3CB2F0(v8, (uint64_t)__p);
  *(void *)(a1 + 16) = 0x7FFFFFFFFFFFFFFFLL;
  *(_DWORD *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 28) = 0;
  sub_72BC48(a1 + 16, __p);
  uint64_t v9 = v22;
  if (v22)
  {
    do
    {
      int v14 = *(char **)v9;
      sub_57AC8((uint64_t *)v9 + 5);
      if (v9[39] < 0) {
        operator delete(*((void **)v9 + 2));
      }
      operator delete(v9);
      uint64_t v9 = v14;
    }
    while (v14);
  }
  char v10 = __p[0];
  __p[0] = 0;
  if (v10) {
    operator delete(v10);
  }
  int v11 = (void **)v16;
  if (v16)
  {
    uint64_t v12 = v17;
    char v13 = v16;
    if (v17 != v16)
    {
      do
      {
        if (*((char *)v12 - 1) < 0) {
          operator delete(*(v12 - 3));
        }
        v12 -= 3;
      }
      while (v12 != v11);
      char v13 = v16;
    }
    uint64_t v17 = v11;
    operator delete(v13);
  }
  if (v20 < 0) {
    operator delete(v19[0]);
  }
  sub_4BBDC0(a1 + 32, a3);
  if (*((char *)a4 + 23) < 0)
  {
    sub_4200((unsigned char *)(a1 + 1568), *(void **)a4, *((void *)a4 + 1));
  }
  else
  {
    long long v15 = *a4;
    *(void *)(a1 + 1584) = *((void *)a4 + 2);
    *(_OWORD *)(a1 + 1568) = v15;
  }
  operator new();
}

void sub_725DC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  sub_4BCED0(v19);
  _Unwind_Resume(a1);
}

void sub_726388()
{
}

uint64_t *sub_7263B4(uint64_t *result)
{
  uint64_t v1 = *result;
  *double result = 0;
  if (v1)
  {
    if (*(char *)(v1 + 31) < 0) {
      operator delete(*(void **)(v1 + 8));
    }
    operator delete();
  }
  return result;
}

uint64_t *sub_72640C(uint64_t *result)
{
  uint64_t v1 = *result;
  *double result = 0;
  if (v1)
  {
    if (*(char *)(v1 + 31) < 0) {
      operator delete(*(void **)(v1 + 8));
    }
    operator delete();
  }
  return result;
}

uint64_t *sub_726464(uint64_t *result)
{
  uint64_t v1 = *result;
  *double result = 0;
  if (v1)
  {
    sub_4BCED0(v1 + 152);
    operator delete();
  }
  return result;
}

uint64_t *sub_7264B4(uint64_t *result)
{
  uint64_t v1 = *result;
  *double result = 0;
  if (v1)
  {
    uint64_t v2 = *(std::__shared_weak_count **)(v1 + 1712);
    if (v2)
    {
      if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
    sub_4BCED0(v1 + 168);
    operator delete();
  }
  return result;
}

uint64_t *sub_726554(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    sub_E6E3BC();
    operator delete();
  }
  return a1;
}

void **sub_72659C(void **a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    sub_5ADD5C(v2);
    operator delete();
  }
  return a1;
}

uint64_t *sub_7265E4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    nullsub_1(v2);
    operator delete();
  }
  return a1;
}

uint64_t *sub_72662C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    sub_68D2B0(v2);
    operator delete();
  }
  return a1;
}

uint64_t *sub_726674(uint64_t *result)
{
  uint64_t v1 = *result;
  *double result = 0;
  if (v1)
  {
    nullsub_1(v1 + 8272);
    sub_670F0C((void *)(v1 + 2040));
    if (*(char *)(v1 + 1927) < 0) {
      operator delete(*(void **)(v1 + 1904));
    }
    operator delete();
  }
  return result;
}

uint64_t *sub_7266E0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    sub_5CD594(v2);
    operator delete();
  }
  return a1;
}

uint64_t *sub_726728(uint64_t *result)
{
  uint64_t v1 = *result;
  *double result = 0;
  if (v1)
  {
    uint64_t v2 = *(std::__shared_weak_count **)(v1 + 3896);
    if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
    long long v3 = *(std::__shared_weak_count **)(v1 + 24);
    if (v3)
    {
      if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    operator delete();
  }
  return result;
}

uint64_t *sub_726808(uint64_t *result)
{
  uint64_t v1 = *result;
  *double result = 0;
  if (v1)
  {
    uint64_t v2 = *(std::__shared_weak_count **)(v1 + 24);
    if (v2)
    {
      if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
    operator delete();
  }
  return result;
}

uint64_t *sub_7268A0(uint64_t *result)
{
  uint64_t v1 = *result;
  *double result = 0;
  if (v1)
  {
    if (*(char *)(v1 + 1711) < 0)
    {
      operator delete(*(void **)(v1 + 1688));
      sub_4BCED0(v1 + 152);
      if ((*(char *)(v1 + 135) & 0x80000000) == 0)
      {
LABEL_4:
        if ((*(char *)(v1 + 63) & 0x80000000) == 0) {
          goto LABEL_5;
        }
LABEL_9:
        operator delete(*(void **)(v1 + 40));
LABEL_5:
        operator delete();
      }
    }
    else
    {
      sub_4BCED0(v1 + 152);
      if ((*(char *)(v1 + 135) & 0x80000000) == 0) {
        goto LABEL_4;
      }
    }
    operator delete(*(void **)(v1 + 112));
    if ((*(char *)(v1 + 63) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_9;
  }
  return result;
}

void **sub_72693C(void **a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    sub_738128(v2);
    operator delete();
  }
  return a1;
}

uint64_t *sub_726984(uint64_t *result)
{
  uint64_t v1 = *result;
  *double result = 0;
  if (v1)
  {
    uint64_t v2 = *(void *)(v1 + 48);
    if (v2)
    {
      sub_4AA6AC(v1 + 48, v2);
      operator delete(*(void **)(v1 + 48));
    }
    operator delete();
  }
  return result;
}

uint64_t sub_7269F4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 1800);
  *(void *)(a1 + 1800) = 0;
  if (v2) {
    sub_7385FC(a1 + 1800, v2);
  }
  uint64_t v3 = *(void *)(a1 + 1792);
  *(void *)(a1 + 1792) = 0;
  if (v3)
  {
    if (*(char *)(v3 + 31) < 0) {
      operator delete(*(void **)(v3 + 8));
    }
    operator delete();
  }
  uint64_t v4 = *(void *)(a1 + 1784);
  *(void *)(a1 + 1784) = 0;
  if (v4) {
    sub_738504(a1 + 1784, v4);
  }
  uint64_t v5 = *(void *)(a1 + 1776);
  *(void *)(a1 + 1776) = 0;
  if (v5)
  {
    if (*(char *)(v5 + 31) < 0) {
      operator delete(*(void **)(v5 + 8));
    }
    operator delete();
  }
  uint64_t v6 = *(void *)(a1 + 1768);
  *(void *)(a1 + 1768) = 0;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  uint64_t v7 = *(void *)(a1 + 1760);
  *(void *)(a1 + 1760) = 0;
  if (v7)
  {
    sub_4BCED0(v7 + 152);
    operator delete();
  }
  uint64_t v8 = *(void *)(a1 + 1752);
  *(void *)(a1 + 1752) = 0;
  if (v8) {
    operator delete();
  }
  uint64_t v9 = *(void *)(a1 + 1744);
  *(void *)(a1 + 1744) = 0;
  if (v9)
  {
    char v10 = *(std::__shared_weak_count **)(v9 + 1712);
    if (v10 && !atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
    sub_4BCED0(v9 + 168);
    operator delete();
  }
  uint64_t v11 = *(void *)(a1 + 1736);
  *(void *)(a1 + 1736) = 0;
  if (v11) {
    operator delete();
  }
  uint64_t v12 = *(void *)(a1 + 1728);
  *(void *)(a1 + 1728) = 0;
  if (v12) {
    operator delete();
  }
  uint64_t v13 = *(void *)(a1 + 1720);
  *(void *)(a1 + 1720) = 0;
  if (v13)
  {
    sub_E6E3BC();
    operator delete();
  }
  int v14 = *(void **)(a1 + 1712);
  *(void *)(a1 + 1712) = 0;
  if (v14)
  {
    sub_5ADD5C(v14);
    operator delete();
  }
  uint64_t v15 = *(void *)(a1 + 1704);
  *(void *)(a1 + 1704) = 0;
  if (v15) {
    operator delete();
  }
  uint64_t v16 = *(void *)(a1 + 1696);
  *(void *)(a1 + 1696) = 0;
  if (v16)
  {
    nullsub_1(v16);
    operator delete();
  }
  uint64_t v17 = *(void *)(a1 + 1688);
  *(void *)(a1 + 1688) = 0;
  if (v17) {
    operator delete();
  }
  uint64_t v18 = *(void *)(a1 + 1680);
  *(void *)(a1 + 1680) = 0;
  if (v18)
  {
    sub_68D2B0(v18);
    operator delete();
  }
  uint64_t v19 = *(void *)(a1 + 1672);
  *(void *)(a1 + 1672) = 0;
  if (v19)
  {
    nullsub_1(v19 + 8272);
    sub_670F0C((void *)(v19 + 2040));
    if (*(char *)(v19 + 1927) < 0) {
      operator delete(*(void **)(v19 + 1904));
    }
    operator delete();
  }
  uint64_t v20 = *(void *)(a1 + 1664);
  *(void *)(a1 + 1664) = 0;
  if (v20) {
    operator delete();
  }
  uint64_t v21 = *(void *)(a1 + 1656);
  *(void *)(a1 + 1656) = 0;
  if (v21) {
    operator delete();
  }
  uint64_t v22 = *(void *)(a1 + 1648);
  *(void *)(a1 + 1648) = 0;
  if (v22)
  {
    sub_5CD594(v22);
    operator delete();
  }
  uint64_t v23 = *(void *)(a1 + 1640);
  *(void *)(a1 + 1640) = 0;
  if (v23)
  {
    uint64_t v24 = *(std::__shared_weak_count **)(v23 + 3896);
    if (v24 && !atomic_fetch_add(&v24->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
    int v25 = *(std::__shared_weak_count **)(v23 + 24);
    if (v25 && !atomic_fetch_add(&v25->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
    operator delete();
  }
  uint64_t v26 = *(void *)(a1 + 1632);
  *(void *)(a1 + 1632) = 0;
  if (v26)
  {
    uint64_t v27 = *(std::__shared_weak_count **)(v26 + 24);
    if (v27 && !atomic_fetch_add(&v27->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
    operator delete();
  }
  uint64_t v28 = *(void *)(a1 + 1624);
  *(void *)(a1 + 1624) = 0;
  if (v28)
  {
    if (*(char *)(v28 + 1711) < 0)
    {
      operator delete(*(void **)(v28 + 1688));
      sub_4BCED0(v28 + 152);
      if ((*(char *)(v28 + 135) & 0x80000000) == 0)
      {
LABEL_66:
        if ((*(char *)(v28 + 63) & 0x80000000) == 0) {
          goto LABEL_67;
        }
LABEL_83:
        operator delete(*(void **)(v28 + 40));
LABEL_67:
        operator delete();
      }
    }
    else
    {
      sub_4BCED0(v28 + 152);
      if ((*(char *)(v28 + 135) & 0x80000000) == 0) {
        goto LABEL_66;
      }
    }
    operator delete(*(void **)(v28 + 112));
    if ((*(char *)(v28 + 63) & 0x80000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_83;
  }
  uint64_t v29 = *(void *)(a1 + 1616);
  *(void *)(a1 + 1616) = 0;
  if (v29) {
    (*(void (**)(uint64_t))(*(void *)v29 + 8))(v29);
  }
  uint64_t v30 = *(void **)(a1 + 1608);
  *(void *)(a1 + 1608) = 0;
  if (v30)
  {
    sub_738128(v30);
    operator delete();
  }
  uint64_t v31 = *(void *)(a1 + 1600);
  *(void *)(a1 + 1600) = 0;
  if (v31) {
    operator delete();
  }
  uint64_t v32 = *(void *)(a1 + 1592);
  *(void *)(a1 + 1592) = 0;
  if (v32)
  {
    uint64_t v33 = *(void *)(v32 + 48);
    if (v33)
    {
      sub_4AA6AC(v32 + 48, v33);
      operator delete(*(void **)(v32 + 48));
    }
    operator delete();
  }
  if (*(char *)(a1 + 1591) < 0) {
    operator delete(*(void **)(a1 + 1568));
  }
  sub_4BCED0(a1 + 32);
  return a1;
}

uint64_t sub_726FC0()
{
  uint64_t v0 = __chkstk_darwin();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = (void **)v0;
  uint64_t v9 = v8;
  uint64_t result = sub_725D0((uint64_t)v33);
  char *v9 = 0;
  v9[1] = 0;
  v9[2] = 0;
  uint64_t v11 = *v6;
  uint64_t v12 = v6[1];
  if (*v6 != v12)
  {
    while (1)
    {
      uint64_t result = sub_460618(v11);
      if (!result) {
        break;
      }
      uint64_t result = sub_45FB38(v11);
      if (result) {
        break;
      }
      v11 += 15;
      if (v11 == v12)
      {
        uint64_t v13 = sub_374EF4(*v7);
        sub_727538();
        int v14 = *v9;
        if (*v9)
        {
          uint64_t v15 = (uint64_t)v9[1];
          uint64_t v16 = *v9;
          if ((uint64_t *)v15 != v14)
          {
            do
              uint64_t v15 = sub_574D4C(v15 - 7560);
            while ((uint64_t *)v15 != v14);
            uint64_t v16 = *v9;
          }
          v9[1] = v14;
          operator delete(v16);
          char *v9 = 0;
          v9[1] = 0;
          v9[2] = 0;
        }
        *(_OWORD *)uint64_t v9 = v43;
        v9[2] = v44;
        nullsub_1(v9);
        sub_725A0((uint64_t)v33);
        sub_4AF50C((uint64_t)&v43, *v7, v13, (uint64_t)(v7 + 4));
        sub_4AF56C(&v43, v9);
        v7[244] = (void *)(round(sub_72688((uint64_t)v33)) + (double)(unint64_t)v7[244]);
        sub_725A0((uint64_t)v33);
        sub_7B90B4((uint64_t)v7[220], (uint64_t)(v7 + 156), (uint64_t *)v9);
        v7[245] = (void *)(round(sub_72688((uint64_t)v33)) + (double)(unint64_t)v7[245]);
        sub_725A0((uint64_t)v33);
        sub_79ACA0(v7[219], (uint64_t *)v9);
        v7[246] = (void *)(round(sub_72688((uint64_t)v33)) + (double)(unint64_t)v7[246]);
        sub_729658((uint64_t)v7, (char ***)v9);
        sub_725A0((uint64_t)v33);
        sub_62B9C4((int)v30, (int)*v7, 3, *((unsigned __int8 *)v7 + 1557), (std::string *)(v7 + 196));
        if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F6C30, memory_order_acquire) & 1) == 0
          && __cxa_guard_acquire(&qword_24F6C30))
        {
          sub_737844((uint64_t)&unk_24F6A48);
        }
        int v17 = *(unsigned __int8 *)(v2 + 8);
        uint64_t v18 = *(void **)v2;
        sub_5B98B8((uint64_t)v42, (uint64_t)(v7 + 4));
        if (v17) {
          uint64_t v19 = v18;
        }
        else {
          uint64_t v19 = &unk_24F6A48;
        }
        sub_573F00(v34, (uint64_t)*v7, (uint64_t)v42, (uint64_t)v19, (uint64_t)v30);
        int64_t v20 = (char *)v6[1] - (char *)*v6;
        if (v20)
        {
          uint64_t v21 = 0;
          uint64_t v22 = 0;
          uint64_t v23 = v20 / 120;
          do
          {
            sub_573F78((uint64_t)v34, (uint64_t)&(*v6)[v22], v4, &(*v9)[v21]);
            v22 += 15;
            v21 += 945;
            --v23;
          }
          while (v23);
        }
        v7[251] = (void *)(round(sub_72688((uint64_t)v33)) + (double)(unint64_t)v7[251]);
        int v24 = *((unsigned __int8 *)v7 + 1437);
        sub_725A0((uint64_t)v33);
        if (v24)
        {
          sub_528304((uint64_t)v7[221], (uint64_t *)v9);
          int v25 = *v9;
          uint64_t v26 = v9[1];
          if (*v9 != v26 && *((unsigned char *)v7 + 1546))
          {
LABEL_20:
            if (*((unsigned char *)v7 + 25)) {
              sub_6036F0((uint64_t)v7[207], (uint64_t)v25);
            }
            while (1)
            {
              v25 += 945;
              if (v25 == v26) {
                break;
              }
              if (*((unsigned char *)v7 + 1546)) {
                goto LABEL_20;
              }
            }
          }
          double v27 = round(sub_72688((uint64_t)v33));
          uint64_t v28 = (unint64_t *)(v7 + 247);
        }
        else
        {
          sub_528304((uint64_t)v7[202], (uint64_t *)v9);
          double v27 = round(sub_72688((uint64_t)v33));
          uint64_t v28 = (unint64_t *)(v7 + 248);
        }
        unint64_t *v28 = (unint64_t)(v27 + (double)*v28);
        if (v41 < 0) {
          operator delete(__p);
        }
        sub_4BCED0((uint64_t)&v39);
        sub_4F2894((uint64_t)&v38);
        uint64_t v29 = v37;
        if (v37 && !atomic_fetch_add(&v37->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
          std::__shared_weak_count::__release_weak(v29);
        }
        if (v35)
        {
          uint64_t v36 = v35;
          operator delete(v35);
        }
        sub_7379DC((uint64_t)v42);
        if (v32 < 0) {
          operator delete(v31);
        }
        return sub_737ADC((uint64_t)&v43);
      }
    }
  }
  return result;
}

void sub_727464(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_24F6C30);
  if (SLOBYTE(STACK[0x787]) < 0) {
    operator delete((void *)STACK[0x770]);
  }
  sub_737ADC((uint64_t)&STACK[0x28D0]);
  sub_574530(v1);
  _Unwind_Resume(a1);
}

void sub_727524(_Unwind_Exception *a1)
{
  sub_574530(v1);
  _Unwind_Resume(a1);
}

void sub_727538()
{
  uint64_t v0 = __chkstk_darwin();
  char v236 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = v0;
  uint64_t v8 = v7;
  sub_725D0((uint64_t)v254);
  *(void *)uint64_t v8 = 0;
  *(void *)(v8 + 8) = 0;
  *(void *)(v8 + 16) = 0;
  sub_72B438((char **)v8, 0xEEEEEEEEEEEEEEEFLL * ((uint64_t)(v5[1] - *v5) >> 3));
  char v10 = *v3;
  uint64_t v9 = v3[1];
  uint64_t v245 = v8;
  uint64_t v246 = v6;
  BOOL v237 = v3;
  if (*v3 != v9)
  {
    while (*((_DWORD *)v10 + 26) != 1)
    {
      v10 += 47;
      if (v10 == v9) {
        goto LABEL_6;
      }
    }
  }
  if (v10 == v9)
  {
LABEL_6:
    if (atomic_load_explicit((atomic_uchar *volatile)&qword_24F7190, memory_order_acquire))
    {
      char v10 = &qword_24F7018;
    }
    else
    {
      if (__cxa_guard_acquire(&qword_24F7190))
      {
        sub_737C74((uint64_t)&qword_24F7018);
        __cxa_guard_release(&qword_24F7190);
      }
      char v10 = &qword_24F7018;
    }
  }
  uint64_t v235 = (uint64_t)v10;
  sub_EE7318((uint64_t)v249, *(void *)v6);
  uint64_t v11 = (void *)*v5;
  unint64_t v234 = (void *)v5[1];
  if ((void *)*v5 != v234)
  {
    int v238 = 0;
    uint64_t v244 = v6 + 1000;
    while (2)
    {
      ++*(_DWORD *)(v6 + 2024);
      *(_DWORD *)(v6 + 2028) += sub_45FC7C(v11);
      sub_649664((uint64_t)v293, (uint64_t)v11);
      unint64_t v241 = v11;
      int v13 = sub_45FE24((uint64_t)v11);
      sub_6478F0((uint64_t)v293, v13);
      char v14 = sub_45FE1C((uint64_t)v11);
      sub_6478E8((uint64_t)v293, v14);
      uint64_t v15 = (char **)nullsub_1(v293);
      unint64_t v16 = sub_45FC7C(v11);
      sub_72B560(v15, v16);
      uint64_t v17 = *(void *)(v6 + 1640);
      uint64_t v18 = nullsub_1(v293);
      int64_t v20 = *(void **)v18;
      uint64_t v19 = *(void **)(v18 + 8);
      if (*(void **)v18 != v19)
      {
        do
        {
          sub_7394F0(v17, v20);
          v20 += 1541;
        }
        while (v20 != v19);
      }
      uint64_t v21 = *(unsigned __int8 *)(v6 + 1554);
      unint64_t v22 = sub_646938(v293);
      if (v22)
      {
        for (uint64_t i = 0; i != v22; ++i)
        {
          uint64_t v24 = sub_6467E8(v293, i);
          sub_72B9FC(v6, v241, i, v3, v21, v24);
        }
      }
      int v25 = *(void **)v6;
      uint64_t v26 = (uint64_t *)nullsub_1(v293);
      uint64_t v28 = *v26;
      uint64_t v27 = v26[1];
      if (*v26 != v27)
      {
        do
        {
          sub_739FC0(v28, v25);
          v28 += 12328;
        }
        while (v28 != v27);
      }
      uint64_t v29 = (uint64_t *)nullsub_1(v293);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      uint64_t v242 = v30;
      while (v31 != v30)
      {
        uint64_t v32 = *(void *)(v31 + 536) - *(void *)(v31 + 528);
        unint64_t v33 = v32 >> 2;
        uint64_t v34 = *(unsigned char **)(v31 + 1144);
        uint64_t v35 = *(char **)(v31 + 1136);
        unint64_t v36 = (v34 - v35) >> 2;
        unint64_t v37 = (v32 >> 2) - v36;
        if (v32 >> 2 <= v36)
        {
          if (v32 >> 2 >= v36) {
            goto LABEL_45;
          }
          unint64_t v51 = &v35[4 * v33];
          goto LABEL_36;
        }
        uint64_t v38 = *(void *)(v31 + 1152);
        if (v37 <= (v38 - (uint64_t)v34) >> 2)
        {
          memset_pattern16(*(void **)(v31 + 1144), &unk_20B8FB0, 4 * v37);
          unint64_t v51 = &v34[4 * v37];
LABEL_36:
          *(void *)(v31 + 1144) = v51;
          goto LABEL_45;
        }
        if (v32 < 0) {
          sub_2E00();
        }
        unint64_t v39 = v38 - (void)v35;
        unint64_t v40 = (v38 - (uint64_t)v35) >> 1;
        if (v40 > v33) {
          unint64_t v33 = v40;
        }
        BOOL v41 = v39 >= 0x7FFFFFFFFFFFFFFCLL;
        unint64_t v42 = 0x3FFFFFFFFFFFFFFFLL;
        if (!v41) {
          unint64_t v42 = v33;
        }
        if (v42 >> 62) {
          sub_188D718();
        }
        unint64_t v43 = v42;
        unint64_t v44 = (char *)operator new(4 * v42);
        size_t v45 = 4 * v37;
        double v46 = v44;
        char v47 = &v44[4 * v36];
        size_t v239 = v45;
        memset_pattern16(v47, &unk_20B8FB0, v45);
        if (v34 == v35)
        {
          unint64_t v49 = v47;
          size_t v50 = v239;
          goto LABEL_43;
        }
        unint64_t v48 = v34 - 4 - v35;
        if (v48 < 0x2C)
        {
          unint64_t v49 = v47;
          size_t v50 = v239;
          do
          {
LABEL_42:
            int v59 = *((_DWORD *)v34 - 1);
            v34 -= 4;
            *((_DWORD *)v49 - 1) = v59;
            v49 -= 4;
          }
          while (v34 != v35);
          goto LABEL_43;
        }
        unint64_t v49 = v47;
        size_t v50 = v239;
        if ((unint64_t)(v35 - v46) < 0x20) {
          goto LABEL_42;
        }
        uint64_t v52 = (v48 >> 2) + 1;
        uint64_t v53 = 4 * (v52 & 0x7FFFFFFFFFFFFFF8);
        unint64_t v54 = &v34[-v53];
        unint64_t v49 = &v47[-v53];
        uint64_t v55 = &v46[4 * v36 - 16];
        uint64_t v56 = (long long *)(v34 - 16);
        uint64_t v57 = v52 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          long long v58 = *v56;
          *((_OWORD *)v55 - 1) = *(v56 - 1);
          *(_OWORD *)uint64_t v55 = v58;
          v55 -= 32;
          v56 -= 2;
          v57 -= 8;
        }
        while (v57);
        uint64_t v34 = v54;
        if (v52 != (v52 & 0x7FFFFFFFFFFFFFF8)) {
          goto LABEL_42;
        }
LABEL_43:
        *(void *)(v31 + 1136) = v49;
        *(void *)(v31 + 1144) = &v47[v50];
        *(void *)(v31 + 1152) = &v46[4 * v43];
        if (v35) {
          operator delete(v35);
        }
LABEL_45:
        int v60 = sub_46CF04(v31);
        uint64_t v61 = *(void *)(v31 + 1144) - *(void *)(v31 + 1136);
        uint64_t v6 = v246;
        if (v61)
        {
          unint64_t v62 = 0;
          int v63 = *(_DWORD *)(v31 + 768);
          uint64_t v64 = v61 >> 2;
          int v65 = v63 / 10 + v60;
          BOOL v66 = v63 < 0;
          int v67 = v63 % 10;
          if (v66) {
            char v68 = -5;
          }
          else {
            char v68 = 5;
          }
          int v69 = v65 + (((103 * (char)(v68 + v67)) >> 15) & 1) + ((103 * (char)(v68 + v67)) >> 10);
          do
          {
            int v70 = sub_46CF88((void *)v31, v62, 0);
            unint64_t v71 = (_DWORD *)sub_5BBCD0((void *)(v31 + 1136), v62);
            if (v70 < 0) {
              char v72 = -5;
            }
            else {
              char v72 = 5;
            }
            int v73 = 103 * (char)(v72 + v70 % 10);
            v69 += v70 / 10 + ((v73 >> 15) & 1) + (v73 >> 10);
            *unint64_t v71 = v69;
            ++v62;
          }
          while (v64 != v62);
        }
        v31 += 12328;
        uint64_t v30 = v242;
      }
      sub_725A0((uint64_t)v254);
      unint64_t v74 = *(uint64_t **)(v6 + 1728);
      unint64_t v75 = (uint64_t *)nullsub_1(v293);
      uint64_t v76 = *v75;
      uint64_t v77 = v75[1];
      if (*v75 != v77)
      {
        do
        {
          sub_480438(*v74, v76);
          v76 += 12328;
        }
        while (v76 != v77);
      }
      *(void *)(v6 + 2000) = (unint64_t)(round(sub_72688((uint64_t)v254))
                                                + (double)*(unint64_t *)(v6 + 2000));
      sub_725A0((uint64_t)v254);
      uint64_t v78 = *(void *)v6;
      v247 = "showSOS";
      *(void *)&long long v248 = 7;
      int64_t v79 = sub_377A30(v78, (char **)&v247);
      if (*((char *)v79 + 23) < 0)
      {
        sub_4200(__p, (void *)*v79, v79[1]);
      }
      else
      {
        long long v80 = *(_OWORD *)v79;
        uint64_t v256 = v79[2];
        *(_OWORD *)long long __p = v80;
      }
      uint64_t v81 = *(void *)(v6 + 1800);
      int v82 = SHIBYTE(v256);
      unint64_t v84 = (void **)__p[0];
      int v83 = (int *)__p[1];
      uint64_t v85 = __p;
      if (v256 >= 0) {
        int v83 = (int *)HIBYTE(v256);
      }
      else {
        uint64_t v85 = (void **)__p[0];
      }
      if (v83 == (int *)((char *)&def_332C + 1))
      {
        __darwin_ct_rune_t v98 = *(char *)v85;
        unint64_t v97 = v241;
        __toupper(49);
        __toupper(v98);
      }
      else
      {
        if (v83 != dword_4) {
          goto LABEL_76;
        }
        __darwin_ct_rune_t v86 = *(char *)v85;
        __darwin_ct_rune_t v87 = __toupper(116);
        if (v87 != __toupper(v86)) {
          goto LABEL_76;
        }
        unint64_t v88 = __p;
        if (v82 < 0) {
          unint64_t v88 = v84;
        }
        __darwin_ct_rune_t v89 = *((char *)v88 + 1);
        __darwin_ct_rune_t v90 = __toupper(114);
        if (v90 != __toupper(v89)) {
          goto LABEL_76;
        }
        uint64_t v91 = __p;
        if (v82 < 0) {
          uint64_t v91 = v84;
        }
        __darwin_ct_rune_t v92 = *((char *)v91 + 2);
        __darwin_ct_rune_t v93 = __toupper(117);
        if (v93 != __toupper(v92)) {
          goto LABEL_76;
        }
        long double v94 = __p;
        if (v82 < 0) {
          long double v94 = v84;
        }
        __darwin_ct_rune_t v95 = *((char *)v94 + 3);
        __darwin_ct_rune_t v96 = __toupper(101);
        if (v96 == __toupper(v95)) {
          unint64_t v97 = v241;
        }
        else {
LABEL_76:
        }
          unint64_t v97 = v241;
      }
      nullsub_1(v81);
      *(void *)(v6 + 1864) = (unint64_t)(round(sub_72688((uint64_t)v254))
                                                + (double)*(unint64_t *)(v6 + 1864));
      if (SHIBYTE(v256) < 0) {
        operator delete(__p[0]);
      }
      sub_78A338(*(void *)(v6 + 1744), (uint64_t)v293);
      sub_725A0((uint64_t)v254);
      sub_822C34(*(void ***)(v6 + 1792), v97, v293);
      *(void *)(v6 + 1848) = (unint64_t)(round(sub_72688((uint64_t)v254))
                                                + (double)*(unint64_t *)(v6 + 1848));
      nullsub_1(*(void *)(v6 + 1720));
      uint64_t v99 = (uint64_t *)nullsub_1(v293);
      uint64_t v100 = *v99;
      uint64_t v101 = v99[1];
      if (*v99 != v101)
      {
        do
        {
          uint64_t v115 = *(void *)(v100 + 1064);
          uint64_t v116 = *(void *)(v100 + 1072);
          if (v115 == v116)
          {
LABEL_92:
            *(unsigned char *)(v100 + 1056) = 2;
          }
          else
          {
            while (1)
            {
              int v117 = *(unsigned __int8 *)(v115 + 328);
              if (v117 != 4 && v117 != 2) {
                break;
              }
              v115 += 2400;
              if (v115 == v116) {
                goto LABEL_92;
              }
            }
          }
          v100 += 12328;
        }
        while (v100 != v101);
      }
      uint64_t v102 = (uint64_t *)nullsub_1(v293);
      uint64_t v103 = *v102;
      uint64_t v104 = v102[1];
      if (*v102 != v104)
      {
        int v105 = v238;
        do
        {
          unint64_t v106 = *(char **)(v103 + 1064);
          uint64_t v107 = *(char **)(v103 + 1072);
          if (v106 != v107)
          {
            unint64_t v108 = v107 - v106 - 2400;
            if (v108 >= 0x960)
            {
              unint64_t v111 = v108 / 0x960 + 1;
              int v109 = v105 + (v111 & 0xFFFFFFFE);
              unint64_t v110 = &v106[2400 * (v111 & 0x3FFFFFFFFFFFFELL)];
              int v112 = v105;
              uint64_t v113 = v111 & 0x3FFFFFFFFFFFFELL;
              uint64_t v114 = *(_DWORD **)(v103 + 1064);
              do
              {
                *uint64_t v114 = v112;
                v114[600] = v112 + 1;
                v114 += 1200;
                v112 += 2;
                v113 -= 2;
              }
              while (v113);
              if (v111 == (v111 & 0x3FFFFFFFFFFFFELL)) {
                goto LABEL_83;
              }
            }
            else
            {
              int v109 = v105;
              unint64_t v110 = *(char **)(v103 + 1064);
            }
            do
            {
              *(_DWORD *)unint64_t v110 = v109++;
              v110 += 2400;
            }
            while (v110 != v107);
          }
LABEL_83:
          v105 -= 1775253149 * ((unint64_t)(v107 - v106) >> 5);
          v103 += 12328;
        }
        while (v103 != v104);
      }
      int v240 = sub_6498C0(v293);
      if (!*(unsigned char *)(v6 + 1512)
        || (uint64_t v119 = nullsub_1(v293), v120 = *(void **)v119, v243 = *(void **)(v119 + 8), *(void **)v119 == v243))
      {
LABEL_104:
        uint64_t v8 = v245;
        unint64_t v121 = sub_646938(v293);
        if (v121)
        {
          for (uint64_t j = 0; j != v121; ++j)
          {
            uint64_t v123 = sub_6467E8(v293, j);
            uint64_t v124 = *(void *)(v123 + 1064);
            uint64_t v125 = *(void *)(v123 + 1072);
            if (v124 != v125)
            {
              unint64_t v126 = v125 - v124 - 2400;
              if (v126 >= 0x960)
              {
                unint64_t v128 = v126 / 0x960 + 1;
                uint64_t v127 = v124 + 2400 * (v128 & 0x3FFFFFFFFFFFFELL);
                uint64_t v129 = v128 & 0x3FFFFFFFFFFFFELL;
                do
                {
                  *(void *)(v124 + 8) = j;
                  *(void *)(v124 + 2408) = j;
                  v124 += 4800;
                  v129 -= 2;
                }
                while (v129);
                if (v128 == (v128 & 0x3FFFFFFFFFFFFELL)) {
                  continue;
                }
              }
              else
              {
                uint64_t v127 = *(void *)(v123 + 1064);
              }
              do
              {
                *(void *)(v127 + 8) = j;
                v127 += 2400;
              }
              while (v127 != v125);
            }
          }
        }
        int v157 = *(void **)v6;
        uint64_t v158 = nullsub_1(v293);
        uint64_t v160 = *(int64x2_t **)v158;
        unint64_t v159 = *(int64x2_t **)(v158 + 8);
        if (*(int64x2_t **)v158 != v159)
        {
          do
          {
            sub_73A360(v160, v157, v244);
            uint64_t v160 = (int64x2_t *)((char *)v160 + 12328);
          }
          while (v160 != v159);
        }
        sub_725A0((uint64_t)v254);
        sub_831D90(*(void *)(v6 + 1776), (uint64_t)v293, v244);
        *(void *)(v6 + 1856) = (unint64_t)(round(sub_72688((uint64_t)v254))
                                                  + (double)*(unint64_t *)(v6 + 1856));
        sub_725A0((uint64_t)v254);
        sub_7CF610(*(void *)(v6 + 1784), (uint64_t)v293);
        *(void *)(v6 + 1880) = (unint64_t)(round(sub_72688((uint64_t)v254))
                                                  + (double)*(unint64_t *)(v6 + 1880));
        uint64_t v161 = sub_7CF97C(*(void *)(v6 + 1784));
        *(unsigned char *)(v6 + 2048) |= v162;
        *(unsigned char *)(v6 + 2049) |= v163;
        *(_DWORD *)(v6 + 2040) += v161;
        *(_DWORD *)(v6 + 2044) += HIDWORD(v161);
        if ((v236 & 1) == 0)
        {
          sub_725A0((uint64_t)v254);
          nullsub_1(*(void *)(v6 + 1672));
          *(void *)(v6 + 1888) = (unint64_t)(round(sub_72688((uint64_t)v254))
                                                    + (double)*(unint64_t *)(v6 + 1888));
        }
        j_nullsub_1(v293);
        sub_65565C(*(void *)(v6 + 1664), (uint64_t)v293);
        uint64_t v164 = (uint64_t *)nullsub_1(v293);
        uint64_t v166 = *v164;
        uint64_t v167 = v164[1];
        if (*v164 != v167)
        {
          do
          {
            sub_72B05C(v6, v166, v165);
            v166 += 12328;
          }
          while (v166 != v167);
        }
        sub_4A59EC(*(unsigned char **)(v6 + 1592), (uint64_t)v293);
        sub_725A0((uint64_t)v254);
        uint64_t v168 = *(void *)(v6 + 1712);
        char v257 = 0;
        char v258 = 0;
        long long v269 = 0u;
        long long v270 = 0u;
        long long v271 = 0u;
        v268[0] = 0;
        *(void *)((char *)v268 + 5) = 0;
        long long v259 = 0u;
        long long v260 = 0u;
        long long v261 = 0u;
        long long v262 = 0u;
        long long v263 = 0u;
        long long v264 = 0u;
        long long v265 = 0u;
        long long v266 = 0u;
        int v267 = 0;
        uint64_t v272 = 0x3FF0000000000000;
        uint64_t v274 = 0;
        uint64_t v275 = 0;
        uint64_t v273 = 0;
        char v276 = 5;
        long long v277 = 0u;
        long long v278 = 0u;
        long long v279 = 0u;
        int v280 = 0x7FFFFFFF;
        uint64_t v285 = 0;
        uint64_t v286 = 0;
        long long v281 = 0u;
        long long v282 = 0u;
        long long v283 = 0u;
        memset(v284, 0, sizeof(v284));
        uint64_t v287 = -1;
        int v288 = 0x7FFFFFFF;
        uint64_t v289 = 0;
        uint64_t v290 = -1;
        int v291 = -1;
        char v292 = 0;
        sub_77931C(v168, (uint64_t)v293, (uint64_t)__p);
        sub_4BCC2C((uint64_t)__p);
        v169 = (uint64_t *)nullsub_1(v293);
        uint64_t v170 = *v169;
        uint64_t v171 = v169[1];
LABEL_155:
        if (v170 == v171)
        {
          *(void *)(v6 + 1872) = (unint64_t)(round(sub_72688((uint64_t)v254))
                                                    + (double)*(unint64_t *)(v6 + 1872));
          sub_725A0((uint64_t)v254);
          nullsub_1(*(void *)(v6 + 1696));
          uint64_t v3 = v237;
          *(void *)(v6 + 1896) = (unint64_t)(round(sub_72688((uint64_t)v254))
                                                    + (double)*(unint64_t *)(v6 + 1896));
          sub_725A0((uint64_t)v254);
          sub_512CF4(*(void *)(v6 + 1608), (uint64_t)v293);
          *(void *)(v6 + 1912) = (unint64_t)(round(sub_72688((uint64_t)v254))
                                                    + (double)*(unint64_t *)(v6 + 1912));
          sub_725A0((uint64_t)v254);
          sub_5BEC44(*(void *)(v6 + 1632), (uint64_t)v293);
          *(void *)(v6 + 1920) = (unint64_t)(round(sub_72688((uint64_t)v254))
                                                    + (double)*(unint64_t *)(v6 + 1920));
          sub_725A0((uint64_t)v254);
          sub_795AD0(*(char **)(v6 + 1736), (uint64_t)v293);
          *(void *)(v6 + 1936) = (unint64_t)(round(sub_72688((uint64_t)v254))
                                                    + (double)*(unint64_t *)(v6 + 1936));
          sub_725A0((uint64_t)v254);
          nullsub_1(*(void *)(v6 + 1688));
          *(void *)(v6 + 2016) = (unint64_t)(round(sub_72688((uint64_t)v254))
                                                    + (double)*(unint64_t *)(v6 + 2016));
          sub_725A0((uint64_t)v254);
          nullsub_1(*(void *)(v6 + 1624));
          *(void *)(v6 + 1904) = (unint64_t)(round(sub_72688((uint64_t)v254))
                                                    + (double)*(unint64_t *)(v6 + 1904));
          sub_725A0((uint64_t)v254);
          sub_5CEBE8(*(void *)(v6 + 1648), (uint64_t)v293);
          *(void *)(v6 + 1928) = (unint64_t)(round(sub_72688((uint64_t)v254))
                                                    + (double)*(unint64_t *)(v6 + 1928));
          sub_725A0((uint64_t)v254);
          sub_70B27C(*(void *)(v6 + 1704), v293);
          *(void *)(v6 + 1944) = (unint64_t)(round(sub_72688((uint64_t)v254))
                                                    + (double)*(unint64_t *)(v6 + 1944));
          sub_725A0((uint64_t)v254);
          sub_4AB9C4(*(void *)(v6 + 1600), v235, v293);
          *(void *)(v6 + 1992) = (unint64_t)(round(sub_72688((uint64_t)v254))
                                                    + (double)*(unint64_t *)(v6 + 1992));
          sub_725A0((uint64_t)v254);
          sub_77958C(*(uint64_t **)(v6 + 1712), (uint64_t)v293, (uint64_t *)__p);
          sub_648B6C((uint64_t)v293, (uint64_t *)__p);
          int v214 = (char *)__p[0];
          if (!__p[0]) {
            goto LABEL_255;
          }
          size_t v215 = (char *)__p[1];
          unint64_t v216 = __p[0];
          if (__p[1] == __p[0]) {
            goto LABEL_254;
          }
          uint64_t v217 = 0;
          while (2)
          {
            uint64_t v218 = &v215[v217];
            if (v215[v217 - 8])
            {
              sub_3A6CB8((uint64_t)(v218 - 440));
              *(v218 - 8) = 0;
            }
            *((void *)v218 - 60) = off_2438EC8;
            if (*(v218 - 449) < 0) {
              operator delete(*(void **)&v215[v217 - 472]);
            }
            uint64_t v219 = (void **)&v215[v217];
            v220 = &v215[v217 - 488];
            if (*v220) {
              char *v220 = 0;
            }
            if ((*((char *)v219 - 505) & 0x80000000) == 0)
            {
              unint64_t v221 = (void **)&v215[v217];
              if ((v215[v217 - 537] & 0x80000000) == 0) {
                goto LABEL_239;
              }
LABEL_248:
              operator delete(*(v221 - 70));
              if (*((char *)v221 - 561) < 0) {
                goto LABEL_249;
              }
LABEL_240:
              int v222 = (void **)&v215[v217];
              if ((v215[v217 - 601] & 0x80000000) == 0) {
                goto LABEL_241;
              }
LABEL_250:
              operator delete(*(v222 - 78));
              if (*((char *)v222 - 633) < 0) {
                goto LABEL_251;
              }
LABEL_242:
              size_t v223 = (void **)&v215[v217];
              if ((v215[v217 - 657] & 0x80000000) == 0) {
                goto LABEL_243;
              }
LABEL_252:
              operator delete(*(v223 - 85));
              unint64_t v224 = (char *)(v223 - 86);
              if (!*((unsigned char *)v223 - 688)) {
                goto LABEL_245;
              }
LABEL_244:
              *unint64_t v224 = 0;
              goto LABEL_245;
            }
            operator delete(*(void **)&v215[v217 - 528]);
            unint64_t v221 = (void **)&v215[v217];
            if (v215[v217 - 537] < 0) {
              goto LABEL_248;
            }
LABEL_239:
            if ((*((char *)v221 - 561) & 0x80000000) == 0) {
              goto LABEL_240;
            }
LABEL_249:
            operator delete(*(void **)&v215[v217 - 584]);
            int v222 = (void **)&v215[v217];
            if (v215[v217 - 601] < 0) {
              goto LABEL_250;
            }
LABEL_241:
            if ((*((char *)v222 - 633) & 0x80000000) == 0) {
              goto LABEL_242;
            }
LABEL_251:
            operator delete(*(v219 - 82));
            size_t v223 = (void **)&v215[v217];
            if (v215[v217 - 657] < 0) {
              goto LABEL_252;
            }
LABEL_243:
            unint64_t v224 = (char *)(v223 - 86);
            if (*((unsigned char *)v223 - 688)) {
              goto LABEL_244;
            }
LABEL_245:
            sub_29D95C((uint64_t)(v218 - 1120));
            v217 -= 1120;
            uint64_t v8 = v245;
            if (&v215[v217] != v214) {
              continue;
            }
            break;
          }
          unint64_t v216 = __p[0];
          uint64_t v3 = v237;
LABEL_254:
          __p[1] = v214;
          operator delete(v216);
LABEL_255:
          *(void *)(v6 + 1872) = (unint64_t)(round(sub_72688((uint64_t)v254))
                                                    + (double)*(unint64_t *)(v6 + 1872));
          uint64_t v225 = (void *)nullsub_1(v293);
          if (*v225 != v225[1])
          {
            uint64_t v226 = *(void *)nullsub_1(v293);
            int v227 = sub_46CF04(v226);
            int v228 = sub_46CF0C((unsigned int *)v226, 0);
            int v229 = sub_46CF0C((unsigned int *)v226, 1);
            uint64_t v230 = *(void *)(v226 + 504);
            v247 = (void *)0x8000000080000000;
            long long v248 = xmmword_20E8160;
            LODWORD(v248) = 0x7FFFFFFF;
            sub_EE731C((uint64_t)v249, v227, v228, v229, v230, (int *)&v247, (uint64_t)__p);
            sub_6478F8((uint64_t)v293, (__n128 *)__p);
          }
          uint64_t v231 = sub_45FE5C((uint64_t)v241);
          uint64_t v232 = *(unsigned __int8 *)(v231 + 23);
          if ((v232 & 0x80u) != 0) {
            uint64_t v232 = *(void *)(v231 + 8);
          }
          if (v232
            && (sub_45FE5C((uint64_t)v241),
                std::operator+<char>(),
                sub_5F3D48((uint64_t)__p, (uint64_t)&v247),
                sub_647AEC(v293, (uint64_t)__p),
                sub_4D4B58((uint64_t)__p),
                SHIBYTE(v248) < 0))
          {
            operator delete(v247);
            unint64_t v233 = *(void *)(v8 + 8);
            if (v233 < *(void *)(v8 + 16)) {
              goto LABEL_10;
            }
LABEL_262:
            uint64_t v12 = sub_73A9CC((uint64_t *)v8, (uint64_t)v293);
          }
          else
          {
            unint64_t v233 = *(void *)(v8 + 8);
            if (v233 >= *(void *)(v8 + 16)) {
              goto LABEL_262;
            }
LABEL_10:
            uint64_t v12 = sub_738BB0(v233, (uint64_t)v293) + 7560;
          }
          v238 += v240;
          *(void *)(v8 + 8) = v12;
          sub_574D4C((uint64_t)v293);
          uint64_t v11 = v241 + 15;
          if (v241 + 15 == v234) {
            goto LABEL_266;
          }
          continue;
        }
        uint64_t v172 = *(void *)(v170 + 7352);
        uint64_t v173 = *(void *)(v170 + 7360);
        if (v172 == v173) {
          goto LABEL_157;
        }
        while (!sub_35876C(v172, 3) || sub_3587DC(v172, 3))
        {
          v172 += 1120;
          if (v172 == v173)
          {
            uint64_t v174 = v173;
            goto LABEL_203;
          }
        }
        if (v172 == v173 || v172 + 1120 == v173)
        {
LABEL_157:
          uint64_t v174 = v172;
        }
        else
        {
          uint64_t v174 = v172;
          do
          {
            if (!sub_35876C(v172 + 1120, 3) || sub_3587DC(v172 + 1120, 3))
            {
              sub_301388((char **)v174, v172 + 1120);
              if (*(unsigned char *)(v172 + 1552))
              {
                uint64_t v187 = *(void *)(v172 + 1544);
                if (!*(unsigned char *)(v174 + 432)) {
                  *(unsigned char *)(v174 + 432) = 1;
                }
                *(void *)(v174 + 424) = v187;
              }
              else if (*(unsigned char *)(v174 + 432))
              {
                *(unsigned char *)(v174 + 432) = 0;
              }
              uint64_t v188 = (void **)(v174 + 440);
              if (*(char *)(v174 + 463) < 0) {
                operator delete(*v188);
              }
              long long v189 = *(_OWORD *)(v172 + 1560);
              *(void *)(v174 + 456) = *(void *)(v172 + 1576);
              *(_OWORD *)uint64_t v188 = v189;
              *(unsigned char *)(v172 + 1583) = 0;
              *(unsigned char *)(v172 + 1560) = 0;
              size_t v190 = (void **)(v174 + 464);
              if (*(char *)(v174 + 487) < 0) {
                operator delete(*v190);
              }
              long long v191 = *(_OWORD *)(v172 + 1584);
              *(void *)(v174 + 480) = *(void *)(v172 + 1600);
              *(_OWORD *)size_t v190 = v191;
              *(unsigned char *)(v172 + 1607) = 0;
              *(unsigned char *)(v172 + 1584) = 0;
              *(void *)(v174 + 488) = *(void *)(v172 + 1608);
              v192 = (void **)(v174 + 496);
              if (*(char *)(v174 + 519) < 0) {
                operator delete(*v192);
              }
              long long v193 = *(_OWORD *)(v172 + 1616);
              *(void *)(v174 + 512) = *(void *)(v172 + 1632);
              *(_OWORD *)v192 = v193;
              *(unsigned char *)(v172 + 1639) = 0;
              *(unsigned char *)(v172 + 1616) = 0;
              *(void *)(v174 + 520) = *(void *)(v172 + 1640);
              *(_DWORD *)(v174 + 528) = *(_DWORD *)(v172 + 1648);
              uint64_t v194 = (void **)(v174 + 536);
              if (*(char *)(v174 + 559) < 0) {
                operator delete(*v194);
              }
              long long v195 = *(_OWORD *)(v172 + 1656);
              *(void *)(v174 + 552) = *(void *)(v172 + 1672);
              *(_OWORD *)uint64_t v194 = v195;
              *(unsigned char *)(v172 + 1679) = 0;
              *(unsigned char *)(v172 + 1656) = 0;
              __int16 v196 = (void **)(v174 + 560);
              if (*(char *)(v174 + 583) < 0) {
                operator delete(*v196);
              }
              long long v197 = *(_OWORD *)(v172 + 1680);
              *(void *)(v174 + 576) = *(void *)(v172 + 1696);
              *(_OWORD *)__int16 v196 = v197;
              *(unsigned char *)(v172 + 1703) = 0;
              *(unsigned char *)(v172 + 1680) = 0;
              *(_DWORD *)(v174 + 584) = *(_DWORD *)(v172 + 1704);
              v198 = (void **)(v174 + 592);
              if (*(char *)(v174 + 615) < 0) {
                operator delete(*v198);
              }
              long long v199 = *(_OWORD *)(v172 + 1712);
              *(void *)(v174 + 608) = *(void *)(v172 + 1728);
              *(_OWORD *)v198 = v199;
              *(unsigned char *)(v172 + 1735) = 0;
              *(unsigned char *)(v172 + 1712) = 0;
              char v200 = *(unsigned char *)(v172 + 1740);
              if (v200)
              {
                *(_DWORD *)(v174 + 616) = *(_DWORD *)(v172 + 1736);
                char v200 = 1;
              }
              *(unsigned char *)(v174 + 620) = v200;
              if (*(unsigned char *)(v172 + 1752))
              {
                uint64_t v201 = *(void *)(v172 + 1744);
                if (!*(unsigned char *)(v174 + 632)) {
                  *(unsigned char *)(v174 + 632) = 1;
                }
                *(void *)(v174 + 624) = v201;
              }
              else if (*(unsigned char *)(v174 + 632))
              {
                *(unsigned char *)(v174 + 632) = 0;
              }
              uint64_t v202 = (void **)(v174 + 648);
              if (*(char *)(v174 + 671) < 0) {
                operator delete(*v202);
              }
              long long v203 = *(_OWORD *)(v172 + 1768);
              *(void *)(v174 + 664) = *(void *)(v172 + 1784);
              *(_OWORD *)uint64_t v202 = v203;
              *(unsigned char *)(v172 + 1791) = 0;
              *(unsigned char *)(v172 + 1768) = 0;
              *(_WORD *)(v174 + 672) = *(_WORD *)(v172 + 1792);
              uint64_t v204 = v174 + 680;
              if (*(unsigned char *)(v172 + 2232))
              {
                if (*(unsigned char *)(v174 + 1112))
                {
                  sub_4C2350(v204, v172 + 1800);
                }
                else
                {
                  *(unsigned char *)(v174 + 680) = *(unsigned char *)(v172 + 1800);
                  *(void *)(v174 + 688) = 0;
                  *(_OWORD *)(v174 + 696) = 0u;
                  *(_OWORD *)(v174 + 688) = *(_OWORD *)(v172 + 1808);
                  *(void *)(v174 + 704) = *(void *)(v172 + 1824);
                  *(void *)(v172 + 1824) = 0;
                  *(_OWORD *)(v172 + 1808) = 0u;
                  *(void *)(v174 + 728) = 0;
                  *(_OWORD *)(v174 + 712) = 0u;
                  *(void *)(v174 + 712) = *(void *)(v172 + 1832);
                  *(void *)(v174 + 720) = *(void *)(v172 + 1840);
                  *(void *)(v174 + 728) = *(void *)(v172 + 1848);
                  *(void *)(v172 + 1848) = 0;
                  *(_OWORD *)(v172 + 1832) = 0u;
                  *(_DWORD *)(v174 + 736) = *(_DWORD *)(v172 + 1856);
                  *(_OWORD *)(v174 + 752) = 0u;
                  *(void *)(v174 + 744) = 0;
                  *(void *)(v174 + 744) = *(void *)(v172 + 1864);
                  *(void *)(v174 + 752) = *(void *)(v172 + 1872);
                  *(void *)(v174 + 760) = *(void *)(v172 + 1880);
                  *(void *)(v172 + 1880) = 0;
                  *(_OWORD *)(v172 + 1864) = 0u;
                  *(void *)(v174 + 784) = 0;
                  *(_OWORD *)(v174 + 768) = 0u;
                  *(_OWORD *)(v174 + 768) = *(_OWORD *)(v172 + 1888);
                  *(void *)(v174 + 784) = *(void *)(v172 + 1904);
                  *(void *)(v172 + 1904) = 0;
                  *(_OWORD *)(v172 + 1888) = 0u;
                  long long v175 = *(_OWORD *)(v172 + 1912);
                  *(void *)(v174 + 808) = *(void *)(v172 + 1928);
                  *(_OWORD *)(v174 + 792) = v175;
                  *(void *)(v172 + 1912) = 0;
                  *(_OWORD *)(v172 + 1920) = 0u;
                  long long v176 = *(_OWORD *)(v172 + 1952);
                  *(_OWORD *)(v174 + 816) = *(_OWORD *)(v172 + 1936);
                  *(_OWORD *)(v174 + 832) = v176;
                  long long v177 = *(_OWORD *)(v172 + 1968);
                  *(void *)(v174 + 864) = *(void *)(v172 + 1984);
                  *(_OWORD *)(v174 + 848) = v177;
                  *(_OWORD *)(v172 + 1976) = 0u;
                  *(void *)(v172 + 1968) = 0;
                  long long v178 = *(_OWORD *)(v172 + 1992);
                  *(void *)(v174 + 888) = *(void *)(v172 + 2008);
                  *(_OWORD *)(v174 + 872) = v178;
                  *(void *)(v172 + 2008) = 0;
                  *(_OWORD *)(v172 + 1992) = 0u;
                  long long v179 = *(_OWORD *)(v172 + 2016);
                  *(void *)(v174 + 912) = *(void *)(v172 + 2032);
                  *(_OWORD *)(v174 + 896) = v179;
                  *(void *)(v172 + 2032) = 0;
                  *(_OWORD *)(v172 + 2016) = 0u;
                  *(unsigned char *)(v174 + 920) = *(unsigned char *)(v172 + 2040);
                  long long v180 = *(_OWORD *)(v172 + 2048);
                  *(void *)(v174 + 944) = *(void *)(v172 + 2064);
                  *(_OWORD *)(v174 + 928) = v180;
                  *(_OWORD *)(v172 + 2056) = 0u;
                  *(void *)(v172 + 2048) = 0;
                  long long v181 = *(_OWORD *)(v172 + 2072);
                  *(void *)(v174 + 968) = *(void *)(v172 + 2088);
                  *(_OWORD *)(v174 + 952) = v181;
                  *(_OWORD *)(v172 + 2080) = 0u;
                  *(void *)(v172 + 2072) = 0;
                  long long v182 = *(_OWORD *)(v172 + 2096);
                  *(void *)(v174 + 992) = *(void *)(v172 + 2112);
                  *(_OWORD *)(v174 + 976) = v182;
                  *(_OWORD *)(v172 + 2104) = 0u;
                  *(void *)(v172 + 2096) = 0;
                  *(unsigned char *)(v174 + 1000) = *(unsigned char *)(v172 + 2120);
                  long long v183 = *(_OWORD *)(v172 + 2128);
                  *(void *)(v174 + 1024) = *(void *)(v172 + 2144);
                  *(_OWORD *)(v174 + 1008) = v183;
                  *(_OWORD *)(v172 + 2136) = 0u;
                  *(void *)(v172 + 2128) = 0;
                  long long v184 = *(_OWORD *)(v172 + 2152);
                  *(void *)(v174 + 1048) = *(void *)(v172 + 2168);
                  *(_OWORD *)(v174 + 1032) = v184;
                  *(_OWORD *)(v172 + 2160) = 0u;
                  *(void *)(v172 + 2152) = 0;
                  long long v185 = *(_OWORD *)(v172 + 2176);
                  *(void *)(v174 + 1072) = *(void *)(v172 + 2192);
                  *(_OWORD *)(v174 + 1056) = v185;
                  *(_OWORD *)(v172 + 2184) = 0u;
                  *(void *)(v172 + 2176) = 0;
                  *(_WORD *)(v174 + 1080) = *(_WORD *)(v172 + 2200);
                  *(_WORD *)(v174 + 1082) = *(_WORD *)(v172 + 2202);
                  *(void *)(v174 + 1088) = 0;
                  *(_OWORD *)(v174 + 1096) = 0u;
                  *(_OWORD *)(v174 + 1088) = *(_OWORD *)(v172 + 2208);
                  *(void *)(v174 + 1104) = *(void *)(v172 + 2224);
                  *(void *)(v172 + 2224) = 0;
                  *(_OWORD *)(v172 + 2208) = 0u;
                  *(unsigned char *)(v174 + 1112) = 1;
                }
              }
              else if (*(unsigned char *)(v174 + 1112))
              {
                sub_3A6CB8(v204);
                *(unsigned char *)(v174 + 1112) = 0;
              }
              v174 += 1120;
            }
            uint64_t v186 = v172 + 2240;
            v172 += 1120;
          }
          while (v186 != v173);
        }
LABEL_203:
        uint64_t v205 = *(void *)(v170 + 7360);
        if (v174 == v205) {
          goto LABEL_154;
        }
        uint64_t v206 = 0;
        while (1)
        {
          uint64_t v207 = v205 + v206;
          if (*(unsigned char *)(v205 + v206 - 8))
          {
            sub_3A6CB8(v207 - 440);
            *(unsigned char *)(v207 - 8) = 0;
          }
          *(void *)(v207 - 480) = off_2438EC8;
          if (*(char *)(v207 - 449) < 0) {
            operator delete(*(void **)(v205 + v206 - 472));
          }
          uint64_t v208 = v205 + v206;
          v209 = (unsigned char *)(v205 + v206 - 488);
          if (*v209) {
            unsigned char *v209 = 0;
          }
          if (*(char *)(v208 - 505) < 0)
          {
            operator delete(*(void **)(v205 + v206 - 528));
            uint64_t v210 = v205 + v206;
            if ((*(char *)(v205 + v206 - 537) & 0x80000000) == 0)
            {
LABEL_213:
              if ((*(char *)(v210 - 561) & 0x80000000) == 0) {
                goto LABEL_214;
              }
              goto LABEL_223;
            }
          }
          else
          {
            uint64_t v210 = v205 + v206;
            if ((*(char *)(v205 + v206 - 537) & 0x80000000) == 0) {
              goto LABEL_213;
            }
          }
          operator delete(*(void **)(v210 - 560));
          if ((*(char *)(v210 - 561) & 0x80000000) == 0)
          {
LABEL_214:
            uint64_t v211 = v205 + v206;
            if ((*(char *)(v205 + v206 - 601) & 0x80000000) == 0) {
              goto LABEL_215;
            }
            goto LABEL_224;
          }
LABEL_223:
          operator delete(*(void **)(v205 + v206 - 584));
          uint64_t v211 = v205 + v206;
          if ((*(char *)(v205 + v206 - 601) & 0x80000000) == 0)
          {
LABEL_215:
            if ((*(char *)(v211 - 633) & 0x80000000) == 0) {
              goto LABEL_216;
            }
            goto LABEL_225;
          }
LABEL_224:
          operator delete(*(void **)(v211 - 624));
          if ((*(char *)(v211 - 633) & 0x80000000) == 0)
          {
LABEL_216:
            uint64_t v212 = v205 + v206;
            if (*(char *)(v205 + v206 - 657) < 0) {
              goto LABEL_226;
            }
            goto LABEL_217;
          }
LABEL_225:
          operator delete(*(void **)(v208 - 656));
          uint64_t v212 = v205 + v206;
          if (*(char *)(v205 + v206 - 657) < 0)
          {
LABEL_226:
            operator delete(*(void **)(v212 - 680));
            double v213 = (unsigned char *)(v212 - 688);
            uint64_t v6 = v246;
            if (!*(unsigned char *)(v212 - 688)) {
              goto LABEL_219;
            }
LABEL_218:
            *double v213 = 0;
            goto LABEL_219;
          }
LABEL_217:
          double v213 = (unsigned char *)(v212 - 688);
          uint64_t v6 = v246;
          if (*(unsigned char *)(v212 - 688)) {
            goto LABEL_218;
          }
LABEL_219:
          sub_29D95C(v207 - 1120);
          v206 -= 1120;
          uint64_t v8 = v245;
          if (v205 + v206 == v174)
          {
            *(void *)(v170 + 7360) = v174;
LABEL_154:
            v170 += 12328;
            goto LABEL_155;
          }
        }
      }
      break;
    }
    while (1)
    {
      if (sub_46C760(v120))
      {
        unint64_t v130 = *(int **)(sub_40EFE8((uint64_t)v120) + 8);
        long long v131 = (unsigned __int16 *)((char *)v130 - *v130);
        if (*v131 >= 0x11u && (uint64_t v132 = v131[8]) != 0) {
          int v133 = (*(unsigned __int16 *)((char *)v130 + v132) >> 3) & 1;
        }
        else {
          LOBYTE(v133) = 0;
        }
        unint64_t v134 = sub_46C760(v120);
        if (v134) {
          break;
        }
      }
LABEL_115:
      v120 += 1541;
      uint64_t v6 = v246;
      if (v120 == v243) {
        goto LABEL_104;
      }
    }
    uint64_t v135 = 0;
    unint64_t v136 = 0;
    std::string::size_type v137 = (void **)(v120 + 1507);
    while (1)
    {
      int v138 = *(int **)(sub_46C8EC(v120, v136) + 8);
      int v140 = (unsigned __int16 *)((char *)v138 - *v138);
      if (*v140 >= 0x11u && (uint64_t v141 = v140[8]) != 0)
      {
        BOOL v142 = (*(_WORD *)((unsigned char *)v138 + v141) & 8) == 0;
        if ((((v133 == 0) ^ v142) & 1) == 0)
        {
          LOBYTE(v133) = v142;
          size_t v143 = (unsigned char *)v120[1508];
          unint64_t v144 = v120[1509];
          if ((unint64_t)v143 >= v144) {
            goto LABEL_130;
          }
          goto LABEL_127;
        }
      }
      else if (!(_BYTE)v133)
      {
        LOBYTE(v133) = 1;
        size_t v143 = (unsigned char *)v120[1508];
        unint64_t v144 = v120[1509];
        if ((unint64_t)v143 >= v144)
        {
LABEL_130:
          double v146 = *v137;
          uint64_t v147 = (v143 - (unsigned char *)*v137) >> 4;
          unint64_t v148 = v147 + 1;
          if ((unint64_t)(v147 + 1) >> 60) {
            sub_2E00();
          }
          uint64_t v149 = v144 - (void)v146;
          if (v149 >> 3 > v148) {
            unint64_t v148 = v149 >> 3;
          }
          if ((unint64_t)v149 >= 0x7FFFFFFFFFFFFFF0) {
            unint64_t v150 = 0xFFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v150 = v148;
          }
          if (v150 >> 60) {
            sub_188D718();
          }
          uint64_t v151 = (char *)operator new(16 * v150);
          long long v152 = &v151[16 * v147];
          *(void *)long long v152 = v135;
          v152[8] = v133;
          if (v143 == v146)
          {
            uint64_t v156 = &v151[16 * v150];
            v120[1507] = v152;
            double v145 = v152 + 16;
            v120[1508] = v152 + 16;
            v120[1509] = v156;
            if (v146) {
              goto LABEL_141;
            }
          }
          else
          {
            long long v153 = &v151[16 * v147];
            do
            {
              unint64_t v154 = v153 - 16;
              long long v139 = *((_OWORD *)v143 - 1);
              *((_OWORD *)v153 - 1) = v139;
              v143 -= 16;
              v153 -= 16;
            }
            while (v143 != v146);
            uint64_t v155 = &v151[16 * v150];
            v120[1507] = v154;
            double v145 = v152 + 16;
            v120[1508] = v152 + 16;
            v120[1509] = v155;
            if (v146) {
LABEL_141:
            }
              operator delete(v146);
          }
LABEL_142:
          v120[1508] = v145;
          goto LABEL_143;
        }
LABEL_127:
        *(void *)size_t v143 = v135;
        v143[8] = v133;
        double v145 = v143 + 16;
        goto LABEL_142;
      }
LABEL_143:
      v135 += sub_46CCC8(v120, v136++, *(double *)&v139);
      if (v136 == v134) {
        goto LABEL_115;
      }
    }
  }
  int v238 = 0;
LABEL_266:
  *(_DWORD *)(v6 + 2036) = 0;
  *(_DWORD *)(v6 + 2032) = v238;
  sub_725A0((uint64_t)v254);
  sub_5BEE74(*(void *)(v6 + 1632), (uint64_t *)v8);
  *(void *)(v6 + 1920) = (unint64_t)(round(sub_72688((uint64_t)v254)) + (double)*(unint64_t *)(v6 + 1920));
  if (v252)
  {
    size_t v253 = v252;
    operator delete(v252);
  }
  if (v250)
  {
    v251 = v250;
    operator delete(v250);
  }
}