unsigned char *sub_1256D58(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unsigned char *v4;
  int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unsigned char *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t vars8;

  v4 = (unsigned char *)__dst;
  v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    v7 = *(int *)(a1 + 32);
    *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    v10 = *(int *)(a1 + 36);
    *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    v13 = *(void *)(a1 + 40);
    *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    v16 = *(int *)(a1 + 48);
    *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    v19 = *(void *)(a1 + 24);
    *v4 = 42;
    v20 = *(_DWORD *)(v19 + 20);
    v4[1] = v20;
    if (v20 > 0x7F) {
      v21 = sub_188A9CC(v20, v4 + 1);
    }
    else {
      v21 = v4 + 2;
    }
    v4 = sub_1252124(v19, (unint64_t)v21, a3);
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    v22 = *(int *)(a1 + 52);
    *v4 = 48;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  v25 = *(void *)(a1 + 8);
  if ((v25 & 1) == 0) {
    return v4;
  }
  v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v27 + 31) < 0)
  {
    v28 = *(void **)(v27 + 8);
    v29 = *(void *)(v27 + 16);
  }
  else
  {
    v28 = (void *)(v27 + 8);
    LODWORD(v29) = *(unsigned __int8 *)(v27 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v29)
  {
    v30 = (int)v29;
    memcpy(v4, v28, (int)v29);
    v4 += v30;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v28, v29, v4);
}

uint64_t sub_12570E0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x3F) == 0)
  {
    uint64_t result = 0;
    goto LABEL_29;
  }
  if (v2)
  {
    unint64_t v4 = sub_1252740(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_11:
  if ((v2 & 4) != 0)
  {
    int v7 = *(_DWORD *)(a1 + 36);
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v8;
    if ((v2 & 8) == 0)
    {
LABEL_13:
      if ((v2 & 0x10) == 0) {
        goto LABEL_14;
      }
      goto LABEL_21;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_13;
  }
  result += ((9 * (__clz(*(void *)(a1 + 40) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_14:
    if ((v2 & 0x20) == 0) {
      goto LABEL_29;
    }
    goto LABEL_25;
  }
LABEL_21:
  int v9 = *(_DWORD *)(a1 + 48);
  if (v9 < 0) {
    uint64_t v10 = 11;
  }
  else {
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v10;
  if ((v2 & 0x20) != 0)
  {
LABEL_25:
    int v11 = *(_DWORD *)(a1 + 52);
    if (v11 < 0) {
      uint64_t v12 = 11;
    }
    else {
      uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v12;
  }
LABEL_29:
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v14 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    result += v15;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_1257280(std::string *result, uint64_t a2)
{
  v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v8 = (void *)*v8;
        }
        sub_125BD04((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        int v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        int v9 = &off_252EFE0;
      }
      uint64_t result = sub_125298C(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_23;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_24;
    }
LABEL_23:
    HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_25;
    }
LABEL_24:
    v3[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0)
      {
LABEL_9:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_10;
      }
LABEL_8:
      HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
      goto LABEL_9;
    }
LABEL_25:
    LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_1257398(uint64_t a1)
{
  return (*(unsigned char *)(a1 + 16) & 1) == 0 || (~*(_DWORD *)(*(void *)(a1 + 24) + 16) & 7) == 0;
}

void *sub_12573C4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "als.Nr5GCellTower");
}

uint64_t sub_12573D4(uint64_t a1)
{
  v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_252F180)
  {
    uint64_t v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_1251B30(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12574A0(uint64_t a1)
{
  sub_12573D4(a1);

  operator delete();
}

uint64_t sub_12574D8(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_1251BDC(*(void *)(result + 32));
  }
LABEL_7:
  if ((v2 & 0xC) != 0) {
    *(void *)(v1 + 40) = 0;
  }
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_1257578(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v33 + 1);
    unsigned int v9 = **(unsigned char **)v33;
    if ((char)**(unsigned char **)v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v33 + 2);
      }
    }
    *(void *)v33 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 <= 0x14) {
      break;
    }
    if (v12 == 21)
    {
      if (v9 != 168) {
        goto LABEL_36;
      }
      v5 |= 4u;
      v24 = (char *)(v8 + 1);
      int v25 = *v8;
      if (((char)*v8 & 0x80000000) == 0) {
        goto LABEL_35;
      }
      int v26 = *v24;
      int v25 = v25 + (v26 << 7) - 128;
      if ((v26 & 0x80000000) == 0)
      {
        v24 = (char *)(v8 + 2);
LABEL_35:
        *(void *)v33 = v24;
        *(_DWORD *)(a1 + 40) = v25;
        goto LABEL_44;
      }
      uint64_t v31 = sub_188C0D0((uint64_t)v8, v25);
      *(void *)v33 = v31;
      *(_DWORD *)(a1 + 40) = v32;
      if (!v31) {
        goto LABEL_53;
      }
    }
    else
    {
      if (v12 != 22 || v9 != 176) {
        goto LABEL_36;
      }
      v5 |= 8u;
      v18 = (char *)(v8 + 1);
      int v19 = *v8;
      if (((char)*v8 & 0x80000000) == 0) {
        goto LABEL_26;
      }
      int v20 = *v18;
      int v19 = v19 + (v20 << 7) - 128;
      if ((v20 & 0x80000000) == 0)
      {
        v18 = (char *)(v8 + 2);
LABEL_26:
        *(void *)v33 = v18;
        *(_DWORD *)(a1 + 44) = v19;
        goto LABEL_44;
      }
      uint64_t v29 = sub_188C0D0((uint64_t)v8, v19);
      *(void *)v33 = v29;
      *(_DWORD *)(a1 + 44) = v30;
      if (!v29) {
        goto LABEL_53;
      }
    }
LABEL_44:
    if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1)
  {
    if (v9 != 10) {
      goto LABEL_36;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 8);
    v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      v22 = (uint64_t *)*v22;
    }
    v23 = (std::string *)sub_1880F84((void *)(a1 + 24), v22);
    v17 = (void *)sub_188C244(v23, *(char **)v33, (uint64_t)a3);
LABEL_43:
    *(void *)v33 = v17;
    if (!v17) {
      goto LABEL_53;
    }
    goto LABEL_44;
  }
  if (v12 == 2 && v9 == 18)
  {
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v14 = *(void *)(a1 + 32);
    if (!v14)
    {
      uint64_t v15 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v15 = (void *)*v15;
      }
      sub_125BD04((uint64_t)v15);
      uint64_t v14 = v16;
      *(void *)(a1 + 32) = v16;
      uint64_t v8 = *(unsigned __int8 **)v33;
    }
    v17 = sub_1252FD4(a3, v14, v8);
    goto LABEL_43;
  }
LABEL_36:
  if (v9) {
    BOOL v27 = (v9 & 7) == 4;
  }
  else {
    BOOL v27 = 1;
  }
  if (!v27)
  {
    if (*v7)
    {
      v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(unsigned __int8 **)v33;
    }
    v17 = sub_1885AC0(v9, v28, (char *)v8, a3);
    goto LABEL_43;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_53:
  *(void *)v33 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v33;
}

unsigned char *sub_1257818(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_18;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  *uint64_t v4 = 18;
  unsigned int v8 = *(_DWORD *)(v7 + 20);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  uint64_t v4 = sub_1252124(v7, (unint64_t)v9, a3);
  if ((v6 & 4) != 0)
  {
LABEL_12:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 40);
    *(_WORD *)uint64_t v4 = 424;
    v4[2] = v10;
    if (v10 > 0x7F)
    {
      v4[2] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[3] = v10 >> 7;
      v4 += 4;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_18:
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 44);
    *(_WORD *)uint64_t v4 = 432;
    v4[2] = v13;
    if (v13 > 0x7F)
    {
      v4[2] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[3] = v13 >> 7;
      v4 += 4;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_1257A58(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v3 = 0;
  }
  if ((v2 & 0xE) != 0)
  {
    if ((v2 & 2) != 0)
    {
      unint64_t v9 = sub_1252740(*(void *)(a1 + 32));
      v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v2 & 4) == 0)
      {
LABEL_9:
        if ((v2 & 8) == 0) {
          goto LABEL_11;
        }
        goto LABEL_10;
      }
    }
    else if ((v2 & 4) == 0)
    {
      goto LABEL_9;
    }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v2 & 8) != 0) {
LABEL_10:
    }
      v3 += ((9 * (__clz(*(_DWORD *)(a1 + 44) | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_11:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v10 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_1257B94(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_23;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    unint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      unsigned int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unsigned int v12 = (void *)*v12;
      }
      sub_125BD04((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      unsigned int v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      unsigned int v13 = &off_252EFE0;
    }
    uint64_t result = sub_125298C(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
      goto LABEL_7;
    }
LABEL_23:
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_1257CB4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  return (v1 & 1) != 0 && ((v1 & 2) == 0 || (~*(_DWORD *)(*(void *)(a1 + 32) + 16) & 7) == 0);
}

void *sub_1257CE4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "als.WirelessAP");
}

uint64_t sub_1257CF4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1257DAC(uint64_t a1)
{
  sub_1257CF4(a1);

  operator delete();
}

uint64_t sub_1257DE4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1257E60(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)uint64_t v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v16 = (uint64_t *)*v16;
      }
      v17 = (void *)(a1 + 24);
LABEL_27:
      int v19 = (std::string *)sub_1880F84(v17, v16);
      unsigned int v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      unsigned int v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v20;
    }
    unsigned int v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)uint64_t v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)uint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_1258008(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_12580F4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_12581D0()
{
  return 1;
}

void *sub_12581D8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "als.Meta");
}

double sub_12581E8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)a1 = off_24A0420;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = a2;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = a2;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = a2;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = a2;
  *(void *)(a1 + 208) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(void *)(a1 + 248) = 0x100000000;
  return result;
}

uint64_t sub_1258264(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 208);
  if (*(uint64_t **)(a1 + 208) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_252F1D8)
  {
    uint64_t v6 = *(void *)(a1 + 216);
    if (v6)
    {
      sub_1257CF4(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1889DA8(a1 + 192);
  sub_125CA24((void *)(a1 + 168));
  sub_125C9A4((void *)(a1 + 144));
  sub_125C924((void *)(a1 + 120));
  sub_125C8A4((void *)(a1 + 96));
  sub_125C824((void *)(a1 + 72));
  sub_125C7A4((void *)(a1 + 48));
  sub_125C724((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_125838C(uint64_t a1)
{
  sub_1258264(a1);

  operator delete();
}

uint64_t sub_12583C4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      double result = sub_1252B80(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      double result = sub_12574D8(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 80);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(v1 + 88) + 8);
    do
    {
      uint64_t v10 = *v9++;
      double result = sub_1253988(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 80) = 0;
  }
  uint64_t v11 = *(unsigned int *)(v1 + 104);
  if ((int)v11 >= 1)
  {
    uint64_t v12 = (uint64_t *)(*(void *)(v1 + 112) + 8);
    do
    {
      uint64_t v13 = *v12++;
      double result = sub_1254874(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(v1 + 104) = 0;
  }
  uint64_t v14 = *(unsigned int *)(v1 + 128);
  if ((int)v14 >= 1)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(v1 + 136) + 8);
    do
    {
      uint64_t v16 = *v15++;
      double result = sub_12552B8(v16);
      --v14;
    }
    while (v14);
    *(_DWORD *)(v1 + 128) = 0;
  }
  uint64_t v17 = *(unsigned int *)(v1 + 152);
  if ((int)v17 >= 1)
  {
    uint64_t v18 = (uint64_t *)(*(void *)(v1 + 160) + 8);
    do
    {
      uint64_t v19 = *v18++;
      double result = sub_1255E10(v19);
      --v17;
    }
    while (v17);
    *(_DWORD *)(v1 + 152) = 0;
  }
  uint64_t v20 = *(unsigned int *)(v1 + 176);
  if ((int)v20 >= 1)
  {
    uint64_t v21 = (uint64_t *)(*(void *)(v1 + 184) + 8);
    do
    {
      uint64_t v22 = *v21++;
      double result = sub_1256970(v22);
      --v20;
    }
    while (v20);
    *(_DWORD *)(v1 + 176) = 0;
  }
  *(_DWORD *)(v1 + 192) = 0;
  int v23 = *(_DWORD *)(v1 + 16);
  if ((v23 & 3) != 0)
  {
    if ((v23 & 1) == 0) {
      goto LABEL_33;
    }
    unint64_t v24 = *(void *)(v1 + 208) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v24 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v24 = 0;
      *(unsigned char *)(v24 + 23) = 0;
LABEL_33:
      if ((v23 & 2) == 0) {
        goto LABEL_35;
      }
      goto LABEL_34;
    }
    **(unsigned char **)unint64_t v24 = 0;
    *(void *)(v24 + 8) = 0;
    if ((v23 & 2) != 0) {
LABEL_34:
    }
      double result = sub_1257DE4(*(void *)(v1 + 216));
  }
LABEL_35:
  if ((v23 & 0xFC) != 0)
  {
    *(void *)(v1 + 224) = 0;
    *(void *)(v1 + 232) = 0;
    *(void *)(v1 + 240) = 0;
  }
  if ((v23 & 0x300) != 0) {
    *(void *)(v1 + 248) = 0x100000000;
  }
  char v26 = *(unsigned char *)(v1 + 8);
  uint64_t v25 = v1 + 8;
  *(_DWORD *)(v25 + 8) = 0;
  if (v26)
  {
    return sub_188B4AC((uint64_t *)v25);
  }
  return result;
}

uint64_t sub_12585A4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v116 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v116, a3[11].i32[1]))
  {
    int v115 = 0;
    goto LABEL_3;
  }
  int v115 = 0;
  v113 = (uint64_t *)(a1 + 144);
  v114 = (uint64_t *)(a1 + 168);
  v111 = (uint64_t *)(a1 + 8);
  v112 = (uint64_t *)(a1 + 120);
  while (2)
  {
    uint64_t v6 = (char *)(*(void *)v116 + 1);
    unsigned int v7 = **(unsigned char **)v116;
    if ((char)**(unsigned char **)v116 < 0)
    {
      int v8 = *v6;
      unsigned int v9 = v7 + (v8 << 7);
      unsigned int v7 = v9 - 128;
      if (v8 < 0)
      {
        uint64_t v6 = (char *)sub_188C180(*(uint64_t *)v116, v9 - 128);
        unsigned int v7 = v10;
      }
      else
      {
        uint64_t v6 = (char *)(*(void *)v116 + 2);
      }
    }
    *(void *)v116 = v6;
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 10) {
          goto LABEL_170;
        }
        uint64_t v11 = v6 - 1;
        while (1)
        {
          uint64_t v12 = (unsigned __int8 *)(v11 + 1);
          *(void *)v116 = v11 + 1;
          uint64_t v13 = *(_DWORD **)(a1 + 40);
          if (v13 && (uint64_t v14 = *(int *)(a1 + 32), (int)v14 < *v13))
          {
            *(_DWORD *)(a1 + 32) = v14 + 1;
            uint64_t v15 = *(void *)&v13[2 * v14 + 2];
          }
          else
          {
            sub_125BD88(*(void *)(a1 + 24));
            uint64_t v15 = sub_188CDC8(a1 + 24, v16);
            uint64_t v12 = *(unsigned __int8 **)v116;
          }
          uint64_t v11 = sub_12590C0(a3, v15, v12);
          *(void *)v116 = v11;
          if (!v11) {
            goto LABEL_187;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *v11 != 10) {
            goto LABEL_178;
          }
        }
      case 2u:
        if (v7 != 18) {
          goto LABEL_170;
        }
        uint64_t v17 = v6 - 1;
        while (1)
        {
          uint64_t v18 = (unsigned __int8 *)(v17 + 1);
          *(void *)v116 = v17 + 1;
          uint64_t v19 = *(_DWORD **)(a1 + 64);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 56), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 56) = v20 + 1;
            uint64_t v21 = *(void *)&v19[2 * v20 + 2];
          }
          else
          {
            uint64_t v22 = sub_125C090(*(void *)(a1 + 48));
            uint64_t v21 = sub_188CDC8(a1 + 48, (uint64_t)v22);
            uint64_t v18 = *(unsigned __int8 **)v116;
          }
          uint64_t v17 = (char *)sub_1259150(a3, v21, v18);
          *(void *)v116 = v17;
          if (!v17) {
            goto LABEL_187;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 18) {
            goto LABEL_178;
          }
        }
      case 3u:
        if (v7 != 24) {
          goto LABEL_170;
        }
        v115 |= 4u;
        unint64_t v24 = v6 + 1;
        LODWORD(v23) = *v6;
        if ((v23 & 0x80) == 0) {
          goto LABEL_34;
        }
        int v25 = *v24;
        uint64_t v23 = v23 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          uint64_t v93 = sub_188C138((uint64_t)v6, v23);
          *(void *)v116 = v93;
          *(_DWORD *)(a1 + 224) = v94;
          if (!v93) {
            goto LABEL_187;
          }
        }
        else
        {
          unint64_t v24 = v6 + 2;
LABEL_34:
          *(void *)v116 = v24;
          *(_DWORD *)(a1 + 224) = v23;
        }
        goto LABEL_178;
      case 4u:
        if (v7 != 32) {
          goto LABEL_170;
        }
        v115 |= 8u;
        BOOL v27 = v6 + 1;
        LODWORD(v26) = *v6;
        if ((v26 & 0x80) == 0) {
          goto LABEL_39;
        }
        int v28 = *v27;
        uint64_t v26 = v26 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          uint64_t v95 = sub_188C138((uint64_t)v6, v26);
          *(void *)v116 = v95;
          *(_DWORD *)(a1 + 228) = v96;
          if (!v95) {
            goto LABEL_187;
          }
        }
        else
        {
          BOOL v27 = v6 + 2;
LABEL_39:
          *(void *)v116 = v27;
          *(_DWORD *)(a1 + 228) = v26;
        }
        goto LABEL_178;
      case 5u:
        if (v7 != 42) {
          goto LABEL_170;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v29 = *(void *)(a1 + 8);
        int v30 = (uint64_t *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
        if (v29) {
          int v30 = (uint64_t *)*v30;
        }
        uint64_t v31 = (std::string *)sub_1880F84((void *)(a1 + 208), v30);
        uint64_t v32 = (uint64_t)sub_188C244(v31, *(char **)v116, (uint64_t)a3);
        goto LABEL_177;
      case 0x15u:
        if (v7 != 170) {
          goto LABEL_170;
        }
        v33 = v6 - 2;
        while (1)
        {
          v34 = (unsigned __int8 *)(v33 + 2);
          *(void *)v116 = v33 + 2;
          v35 = *(_DWORD **)(a1 + 88);
          if (v35 && (uint64_t v36 = *(int *)(a1 + 80), (int)v36 < *v35))
          {
            *(_DWORD *)(a1 + 80) = v36 + 1;
            uint64_t v37 = *(void *)&v35[2 * v36 + 2];
          }
          else
          {
            sub_125BE08(*(void *)(a1 + 72));
            uint64_t v37 = sub_188CDC8(a1 + 72, v38);
            v34 = *(unsigned __int8 **)v116;
          }
          v33 = sub_12591E0(a3, v37, v34);
          *(void *)v116 = v33;
          if (!v33) {
            goto LABEL_187;
          }
          if (*(void *)a3 <= (unint64_t)v33 || *(_WORD *)v33 != 426) {
            goto LABEL_178;
          }
        }
      case 0x16u:
        if (v7 != 178) {
          goto LABEL_170;
        }
        v39 = v6 - 2;
        while (1)
        {
          v40 = (unsigned __int8 *)(v39 + 2);
          *(void *)v116 = v39 + 2;
          v41 = *(_DWORD **)(a1 + 112);
          if (v41 && (uint64_t v42 = *(int *)(a1 + 104), (int)v42 < *v41))
          {
            *(_DWORD *)(a1 + 104) = v42 + 1;
            uint64_t v43 = *(void *)&v41[2 * v42 + 2];
          }
          else
          {
            uint64_t v44 = sub_125BE88(*(void *)(a1 + 96));
            uint64_t v43 = sub_188CDC8(a1 + 96, v44);
            v40 = *(unsigned __int8 **)v116;
          }
          v39 = (char *)sub_1259270(a3, v43, v40);
          *(void *)v116 = v39;
          if (!v39) {
            goto LABEL_187;
          }
          if (*(void *)a3 <= (unint64_t)v39 || *(_WORD *)v39 != 434) {
            goto LABEL_178;
          }
        }
      case 0x17u:
        if (v7 != 184) {
          goto LABEL_170;
        }
        v115 |= 0x20u;
        v46 = v6 + 1;
        LODWORD(v45) = *v6;
        if ((v45 & 0x80) == 0) {
          goto LABEL_68;
        }
        int v47 = *v46;
        uint64_t v45 = v45 + (v47 << 7) - 128;
        if (v47 < 0)
        {
          uint64_t v97 = sub_188C138((uint64_t)v6, v45);
          *(void *)v116 = v97;
          *(_DWORD *)(a1 + 236) = v98;
          if (!v97) {
            goto LABEL_187;
          }
        }
        else
        {
          v46 = v6 + 2;
LABEL_68:
          *(void *)v116 = v46;
          *(_DWORD *)(a1 + 236) = v45;
        }
        goto LABEL_178;
      case 0x18u:
        if (v7 != 192) {
          goto LABEL_170;
        }
        v115 |= 0x40u;
        v49 = v6 + 1;
        LODWORD(v48) = *v6;
        if ((v48 & 0x80) == 0) {
          goto LABEL_73;
        }
        int v50 = *v49;
        uint64_t v48 = v48 + (v50 << 7) - 128;
        if (v50 < 0)
        {
          uint64_t v99 = sub_188C138((uint64_t)v6, v48);
          *(void *)v116 = v99;
          *(_DWORD *)(a1 + 240) = v100;
          if (!v99) {
            goto LABEL_187;
          }
        }
        else
        {
          v49 = v6 + 2;
LABEL_73:
          *(void *)v116 = v49;
          *(_DWORD *)(a1 + 240) = v48;
        }
        goto LABEL_178;
      case 0x19u:
        if (v7 != 202) {
          goto LABEL_170;
        }
        v51 = v6 - 2;
        while (1)
        {
          v52 = (unsigned __int8 *)(v51 + 2);
          *(void *)v116 = v51 + 2;
          v53 = *(_DWORD **)(a1 + 136);
          if (v53 && (uint64_t v54 = *(int *)(a1 + 128), (int)v54 < *v53))
          {
            *(_DWORD *)(a1 + 128) = v54 + 1;
            uint64_t v55 = *(void *)&v53[2 * v54 + 2];
          }
          else
          {
            sub_125BF10(*v112);
            uint64_t v55 = sub_188CDC8((uint64_t)v112, v56);
            v52 = *(unsigned __int8 **)v116;
          }
          v51 = sub_1259300(a3, v55, v52);
          *(void *)v116 = v51;
          if (!v51) {
            goto LABEL_187;
          }
          if (*(void *)a3 <= (unint64_t)v51 || *(_WORD *)v51 != 458) {
            goto LABEL_178;
          }
        }
      case 0x1Au:
        if (v7 != 208) {
          goto LABEL_170;
        }
        v115 |= 0x80u;
        v58 = v6 + 1;
        LODWORD(v57) = *v6;
        if ((v57 & 0x80) == 0) {
          goto LABEL_88;
        }
        int v59 = *v58;
        uint64_t v57 = v57 + (v59 << 7) - 128;
        if (v59 < 0)
        {
          uint64_t v101 = sub_188C138((uint64_t)v6, v57);
          *(void *)v116 = v101;
          *(_DWORD *)(a1 + 244) = v102;
          if (!v101) {
            goto LABEL_187;
          }
        }
        else
        {
          v58 = v6 + 2;
LABEL_88:
          *(void *)v116 = v58;
          *(_DWORD *)(a1 + 244) = v57;
        }
        goto LABEL_178;
      case 0x1Bu:
        if (v7 != 218) {
          goto LABEL_170;
        }
        v60 = v6 - 2;
        while (1)
        {
          v61 = (unsigned __int8 *)(v60 + 2);
          *(void *)v116 = v60 + 2;
          v62 = *(_DWORD **)(a1 + 160);
          if (v62 && (uint64_t v63 = *(int *)(a1 + 152), (int)v63 < *v62))
          {
            *(_DWORD *)(a1 + 152) = v63 + 1;
            uint64_t v64 = *(void *)&v62[2 * v63 + 2];
          }
          else
          {
            sub_125BF90(*v113);
            uint64_t v64 = sub_188CDC8((uint64_t)v113, v65);
            v61 = *(unsigned __int8 **)v116;
          }
          v60 = sub_1259390(a3, v64, v61);
          *(void *)v116 = v60;
          if (!v60) {
            goto LABEL_187;
          }
          if (*(void *)a3 <= (unint64_t)v60 || *(_WORD *)v60 != 474) {
            goto LABEL_178;
          }
        }
      case 0x1Cu:
        if (v7 != 224) {
          goto LABEL_170;
        }
        v115 |= 0x100u;
        v67 = v6 + 1;
        LODWORD(v66) = *v6;
        if ((v66 & 0x80) == 0) {
          goto LABEL_103;
        }
        int v68 = *v67;
        uint64_t v66 = v66 + (v68 << 7) - 128;
        if (v68 < 0)
        {
          uint64_t v103 = sub_188C138((uint64_t)v6, v66);
          *(void *)v116 = v103;
          *(_DWORD *)(a1 + 248) = v104;
          if (!v103) {
            goto LABEL_187;
          }
        }
        else
        {
          v67 = v6 + 2;
LABEL_103:
          *(void *)v116 = v67;
          *(_DWORD *)(a1 + 248) = v66;
        }
        goto LABEL_178;
      case 0x1Du:
        if (v7 != 234) {
          goto LABEL_170;
        }
        v69 = v6 - 2;
        while (1)
        {
          v70 = (unsigned __int8 *)(v69 + 2);
          *(void *)v116 = v69 + 2;
          v71 = *(_DWORD **)(a1 + 184);
          if (v71 && (uint64_t v72 = *(int *)(a1 + 176), (int)v72 < *v71))
          {
            *(_DWORD *)(a1 + 176) = v72 + 1;
            uint64_t v73 = *(void *)&v71[2 * v72 + 2];
          }
          else
          {
            sub_125C010(*v114);
            uint64_t v73 = sub_188CDC8((uint64_t)v114, v74);
            v70 = *(unsigned __int8 **)v116;
          }
          v69 = sub_1259420(a3, v73, v70);
          *(void *)v116 = v69;
          if (!v69) {
            goto LABEL_187;
          }
          if (*(void *)a3 <= (unint64_t)v69 || *(_WORD *)v69 != 490) {
            goto LABEL_178;
          }
        }
      case 0x1Eu:
        if (v7 != 240) {
          goto LABEL_170;
        }
        v115 |= 0x10u;
        v76 = v6 + 1;
        LODWORD(v75) = *v6;
        if ((v75 & 0x80) == 0) {
          goto LABEL_118;
        }
        int v77 = *v76;
        uint64_t v75 = v75 + (v77 << 7) - 128;
        if (v77 < 0)
        {
          uint64_t v105 = sub_188C138((uint64_t)v6, v75);
          *(void *)v116 = v105;
          *(_DWORD *)(a1 + 232) = v106;
          if (!v105) {
            goto LABEL_187;
          }
        }
        else
        {
          v76 = v6 + 2;
LABEL_118:
          *(void *)v116 = v76;
          *(_DWORD *)(a1 + 232) = v75;
        }
        goto LABEL_178;
      case 0x1Fu:
        if (v7 == 248)
        {
          uint64_t v78 = (uint64_t)(v6 - 2);
          while (1)
          {
            *(void *)v116 = v78 + 2;
            unint64_t v79 = *(unsigned __int8 *)(v78 + 2);
            v80 = (char *)(v78 + 3);
            if (*(char *)(v78 + 2) < 0)
            {
              int v81 = *v80;
              int v82 = v79 + (v81 << 7);
              unint64_t v79 = (v82 - 128);
              if (v81 < 0)
              {
                *(void *)v116 = sub_188C138(v78 + 2, (v82 - 128));
                if (!*(void *)v116) {
                  goto LABEL_187;
                }
                unint64_t v79 = v85;
                goto LABEL_125;
              }
              v80 = (char *)(v78 + 4);
            }
            *(void *)v116 = v80;
LABEL_125:
            if ((v79 - 1) > 1)
            {
              if (*v111) {
                v86 = (std::string *)((*v111 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                v86 = (std::string *)sub_188DBD8(v111);
              }
              sub_188C020(31, v79, v86);
            }
            else
            {
              uint64_t v83 = *(unsigned int *)(a1 + 192);
              if (v83 == *(_DWORD *)(a1 + 196))
              {
                int v84 = v83 + 1;
                sub_188C80C((unsigned int *)(a1 + 192), v83 + 1);
                *(_DWORD *)(*(void *)(a1 + 200) + 4 * v83) = v79;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 200) + 4 * v83) = v79;
                int v84 = v83 + 1;
              }
              *(_DWORD *)(a1 + 192) = v84;
            }
            uint64_t v78 = *(void *)v116;
            if (*(void *)a3 <= *(void *)v116 || **(_WORD **)v116 != 504) {
              goto LABEL_178;
            }
          }
        }
        if (v7 == 250)
        {
          *(void *)&long long v117 = a1 + 192;
          *((void *)&v117 + 1) = sub_1251B20;
          uint64_t v118 = a1 + 8;
          int v119 = 31;
          uint64_t v32 = (uint64_t)sub_1112E88((uint64_t)a3, v6, &v117);
LABEL_177:
          *(void *)v116 = v32;
          if (!v32) {
            goto LABEL_187;
          }
LABEL_178:
          if (sub_11947B8((uint64_t)a3, (char **)v116, a3[11].i32[1])) {
            goto LABEL_3;
          }
          continue;
        }
LABEL_170:
        if (v7) {
          BOOL v108 = (v7 & 7) == 4;
        }
        else {
          BOOL v108 = 1;
        }
        if (!v108)
        {
          if (*v111)
          {
            v109 = (std::string *)((*v111 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            v109 = (std::string *)sub_188DBD8(v111);
            uint64_t v6 = *(char **)v116;
          }
          uint64_t v32 = (uint64_t)sub_1885AC0(v7, v109, v6, a3);
          goto LABEL_177;
        }
        if (v6) {
          a3[10].i32[0] = v7 - 1;
        }
        else {
LABEL_187:
        }
          *(void *)v116 = 0;
LABEL_3:
        *(_DWORD *)(a1 + 16) |= v115;
        return *(void *)v116;
      case 0x20u:
        if ((_BYTE)v7) {
          goto LABEL_170;
        }
        v87 = v6 + 1;
        unint64_t v88 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_143;
        }
        int v89 = *v87;
        int v90 = v88 + (v89 << 7);
        unint64_t v88 = (v90 - 128);
        if (v89 < 0)
        {
          *(void *)v116 = sub_188C138((uint64_t)v6, (v90 - 128));
          if (!*(void *)v116) {
            goto LABEL_187;
          }
          unint64_t v88 = v107;
        }
        else
        {
          v87 = v6 + 2;
LABEL_143:
          *(void *)v116 = v87;
        }
        if ((v88 - 1) > 1)
        {
          if (*v111) {
            v110 = (std::string *)((*v111 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v110 = (std::string *)sub_188DBD8(v111);
          }
          sub_188C020(32, v88, v110);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x200u;
          *(_DWORD *)(a1 + 252) = v88;
        }
        goto LABEL_178;
      case 0x21u:
        if (v7 != 10) {
          goto LABEL_170;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        v91 = *(void **)(a1 + 216);
        if (!v91)
        {
          v92 = (void *)(*v111 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v111) {
            v92 = (void *)*v92;
          }
          v91 = sub_125C118((uint64_t)v92);
          *(void *)(a1 + 216) = v91;
          uint64_t v6 = *(char **)v116;
        }
        uint64_t v32 = sub_12594B0(a3, (uint64_t)v91, (unsigned __int8 *)v6);
        goto LABEL_177;
      default:
        goto LABEL_170;
    }
  }
}

char *sub_12590C0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  double result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    double result = sub_1252BEC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1259150(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1257578(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12591E0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12539FC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1259270(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1254918(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1259300(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1255324(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1259390(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1255E7C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1259420(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12569DC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12594B0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1257E60(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1259540(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_1253064(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 56);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = sub_1257818(v13, v15, a3);
    }
  }
  int v16 = *(_DWORD *)(a1 + 16);
  if ((v16 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v17 = *(int *)(a1 + 224);
    *__dst = 24;
    __dst[1] = v17;
    if (v17 > 0x7F)
    {
      __dst[1] = v17 | 0x80;
      unint64_t v18 = v17 >> 7;
      __dst[2] = v17 >> 7;
      __dst += 3;
      if (v17 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v19 = v18 >> 14;
          v18 >>= 7;
          *__dst++ = v18;
        }
        while (v19);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v16 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v20 = *(int *)(a1 + 228);
    *__dst = 32;
    __dst[1] = v20;
    if (v20 > 0x7F)
    {
      __dst[1] = v20 | 0x80;
      unint64_t v21 = v20 >> 7;
      __dst[2] = v20 >> 7;
      __dst += 3;
      if (v20 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v22 = v21 >> 14;
          v21 >>= 7;
          *__dst++ = v21;
        }
        while (v22);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if (v16) {
    __dst = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 208) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v23 = *(_DWORD *)(a1 + 80);
  if (v23)
  {
    for (int k = 0; k != v23; ++k)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v25 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      *(_WORD *)__dst = 426;
      unsigned int v26 = *(_DWORD *)(v25 + 20);
      __dst[2] = v26;
      if (v26 > 0x7F) {
        BOOL v27 = sub_188A9CC(v26, __dst + 2);
      }
      else {
        BOOL v27 = __dst + 3;
      }
      __dst = sub_1253E8C(v25, (unint64_t)v27, a3);
    }
  }
  int v28 = *(_DWORD *)(a1 + 104);
  if (v28)
  {
    for (int m = 0; m != v28; ++m)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v30 = *(void *)(*(void *)(a1 + 112) + 8 * m + 8);
      *(_WORD *)__dst = 434;
      unsigned int v31 = *(_DWORD *)(v30 + 20);
      __dst[2] = v31;
      if (v31 > 0x7F) {
        uint64_t v32 = sub_188A9CC(v31, __dst + 2);
      }
      else {
        uint64_t v32 = __dst + 3;
      }
      __dst = sub_1254C24(v30, v32, a3);
    }
  }
  if ((v16 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v33 = *(int *)(a1 + 236);
    *(_WORD *)__dst = 440;
    __dst[2] = v33;
    if (v33 > 0x7F)
    {
      __dst[2] = v33 | 0x80;
      unint64_t v34 = v33 >> 7;
      __dst[3] = v33 >> 7;
      __dst += 4;
      if (v33 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v35 = v34 >> 14;
          v34 >>= 7;
          *__dst++ = v34;
        }
        while (v35);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  if ((v16 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v36 = *(int *)(a1 + 240);
    *(_WORD *)__dst = 448;
    __dst[2] = v36;
    if (v36 > 0x7F)
    {
      __dst[2] = v36 | 0x80;
      unint64_t v37 = v36 >> 7;
      __dst[3] = v36 >> 7;
      __dst += 4;
      if (v36 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v38 = v37 >> 14;
          v37 >>= 7;
          *__dst++ = v37;
        }
        while (v38);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  int v39 = *(_DWORD *)(a1 + 128);
  if (v39)
  {
    for (int n = 0; n != v39; ++n)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v41 = *(void *)(*(void *)(a1 + 136) + 8 * n + 8);
      *(_WORD *)__dst = 458;
      unsigned int v42 = *(_DWORD *)(v41 + 20);
      __dst[2] = v42;
      if (v42 > 0x7F) {
        uint64_t v43 = sub_188A9CC(v42, __dst + 2);
      }
      else {
        uint64_t v43 = __dst + 3;
      }
      __dst = sub_12556F8(v41, (unint64_t)v43, a3);
    }
  }
  if ((v16 & 0x80) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v44 = *(int *)(a1 + 244);
    *(_WORD *)__dst = 464;
    __dst[2] = v44;
    if (v44 > 0x7F)
    {
      __dst[2] = v44 | 0x80;
      unint64_t v45 = v44 >> 7;
      __dst[3] = v44 >> 7;
      __dst += 4;
      if (v44 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v46 = v45 >> 14;
          v45 >>= 7;
          *__dst++ = v45;
        }
        while (v46);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  int v47 = *(_DWORD *)(a1 + 152);
  if (v47)
  {
    for (iint i = 0; ii != v47; ++ii)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v49 = *(void *)(*(void *)(a1 + 160) + 8 * ii + 8);
      *(_WORD *)__dst = 474;
      unsigned int v50 = *(_DWORD *)(v49 + 20);
      __dst[2] = v50;
      if (v50 > 0x7F) {
        v51 = sub_188A9CC(v50, __dst + 2);
      }
      else {
        v51 = __dst + 3;
      }
      __dst = sub_1256264(v49, (unint64_t)v51, a3);
    }
  }
  if ((v16 & 0x100) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v52 = *(int *)(a1 + 248);
    *(_WORD *)__dst = 480;
    __dst[2] = v52;
    if (v52 > 0x7F)
    {
      __dst[2] = v52 | 0x80;
      unint64_t v53 = v52 >> 7;
      __dst[3] = v52 >> 7;
      __dst += 4;
      if (v52 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v54 = v53 >> 14;
          v53 >>= 7;
          *__dst++ = v53;
        }
        while (v54);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  int v55 = *(_DWORD *)(a1 + 176);
  if (v55)
  {
    for (jint j = 0; jj != v55; ++jj)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v57 = *(void *)(*(void *)(a1 + 184) + 8 * jj + 8);
      *(_WORD *)__dst = 490;
      unsigned int v58 = *(_DWORD *)(v57 + 20);
      __dst[2] = v58;
      if (v58 > 0x7F) {
        int v59 = sub_188A9CC(v58, __dst + 2);
      }
      else {
        int v59 = __dst + 3;
      }
      __dst = sub_1256D58(v57, (unint64_t)v59, a3);
    }
  }
  if ((v16 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v60 = *(int *)(a1 + 232);
    *(_WORD *)__dst = 496;
    __dst[2] = v60;
    if (v60 > 0x7F)
    {
      __dst[2] = v60 | 0x80;
      unint64_t v61 = v60 >> 7;
      __dst[3] = v60 >> 7;
      __dst += 4;
      if (v60 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v62 = v61 >> 14;
          v61 >>= 7;
          *__dst++ = v61;
        }
        while (v62);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  uint64_t v63 = *(unsigned int *)(a1 + 192);
  if ((int)v63 >= 1)
  {
    for (kint k = 0; kk != v63; ++kk)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v65 = *(int *)(*(void *)(a1 + 200) + 4 * kk);
      *(_WORD *)__dst = 504;
      __dst[2] = v65;
      if (v65 > 0x7F)
      {
        __dst[2] = v65 | 0x80;
        unint64_t v66 = v65 >> 7;
        __dst[3] = v65 >> 7;
        __dst += 4;
        if (v65 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v67 = v66 >> 14;
            v66 >>= 7;
            *__dst++ = v66;
          }
          while (v67);
        }
      }
      else
      {
        __dst += 3;
      }
    }
  }
  if ((v16 & 0x200) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v68 = *(int *)(a1 + 252);
    *(_WORD *)__dst = 640;
    __dst[2] = v68;
    if (v68 > 0x7F)
    {
      __dst[2] = v68 | 0x80;
      unint64_t v69 = v68 >> 7;
      __dst[3] = v68 >> 7;
      __dst += 4;
      if (v68 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v70 = v69 >> 14;
          v69 >>= 7;
          *__dst++ = v69;
        }
        while (v70);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  if ((v16 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v71 = *(void *)(a1 + 216);
    *(_WORD *)__dst = 650;
    unsigned int v72 = *(_DWORD *)(v71 + 20);
    __dst[2] = v72;
    if (v72 > 0x7F) {
      uint64_t v73 = sub_188A9CC(v72, __dst + 2);
    }
    else {
      uint64_t v73 = __dst + 3;
    }
    __dst = sub_1258008(v71, v73, a3);
  }
  uint64_t v74 = *(void *)(a1 + 8);
  if ((v74 & 1) == 0) {
    return __dst;
  }
  unint64_t v76 = v74 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v76 + 31) < 0)
  {
    int v77 = *(void **)(v76 + 8);
    uint64_t v78 = *(void *)(v76 + 16);
  }
  else
  {
    int v77 = (void *)(v76 + 8);
    LODWORD(v78) = *(unsigned __int8 *)(v76 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v78)
  {
    uint64_t v79 = (int)v78;
    memcpy(__dst, v77, (int)v78);
    __dst += v79;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v77, v78, __dst);
}

uint64_t sub_1259EA0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1253558(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1257A58(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + 2 * v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    unint64_t v18 = (uint64_t *)(v17 + 8);
  }
  else {
    unint64_t v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_1254388(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *(int *)(a1 + 104);
  uint64_t v23 = v16 + 2 * v22;
  uint64_t v24 = *(void *)(a1 + 112);
  if (v24) {
    uint64_t v25 = (uint64_t *)(v24 + 8);
  }
  else {
    uint64_t v25 = 0;
  }
  if (v22)
  {
    uint64_t v26 = 8 * v22;
    do
    {
      uint64_t v27 = *v25++;
      uint64_t v28 = sub_1254EC8(v27);
      v23 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6);
      v26 -= 8;
    }
    while (v26);
  }
  uint64_t v29 = *(int *)(a1 + 128);
  uint64_t v30 = v23 + 2 * v29;
  uint64_t v31 = *(void *)(a1 + 136);
  if (v31) {
    uint64_t v32 = (uint64_t *)(v31 + 8);
  }
  else {
    uint64_t v32 = 0;
  }
  if (v29)
  {
    uint64_t v33 = 8 * v29;
    do
    {
      uint64_t v34 = *v32++;
      uint64_t v35 = sub_1255AFC(v34);
      v30 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6);
      v33 -= 8;
    }
    while (v33);
  }
  uint64_t v36 = *(int *)(a1 + 152);
  uint64_t v37 = v30 + 2 * v36;
  uint64_t v38 = *(void *)(a1 + 160);
  if (v38) {
    int v39 = (uint64_t *)(v38 + 8);
  }
  else {
    int v39 = 0;
  }
  if (v36)
  {
    uint64_t v40 = 8 * v36;
    do
    {
      uint64_t v41 = *v39++;
      uint64_t v42 = sub_1256668(v41);
      v37 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6);
      v40 -= 8;
    }
    while (v40);
  }
  uint64_t v43 = *(int *)(a1 + 176);
  uint64_t v44 = v37 + 2 * v43;
  uint64_t v45 = *(void *)(a1 + 184);
  if (v45) {
    unint64_t v46 = (uint64_t *)(v45 + 8);
  }
  else {
    unint64_t v46 = 0;
  }
  if (v43)
  {
    uint64_t v47 = 8 * v43;
    do
    {
      uint64_t v48 = *v46++;
      uint64_t v49 = sub_12570E0(v48);
      v44 += v49 + ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6);
      v47 -= 8;
    }
    while (v47);
  }
  uint64_t v50 = *(unsigned int *)(a1 + 192);
  if (v50)
  {
    int v51 = 0;
    uint64_t v52 = 0;
    do
    {
      int v53 = *(_DWORD *)(*(void *)(a1 + 200) + 4 * v51);
      if (v53 < 0) {
        uint64_t v54 = 10;
      }
      else {
        uint64_t v54 = (9 * (__clz(v53 | 1) ^ 0x1F) + 73) >> 6;
      }
      v52 += v54;
      ++v51;
    }
    while (v50 != v51);
  }
  else
  {
    uint64_t v52 = 0;
  }
  uint64_t v55 = v44 + 2 * v50 + v52;
  int v56 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v56) {
    goto LABEL_91;
  }
  if (v56)
  {
    unint64_t v57 = *(void *)(a1 + 208) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v58 = *(unsigned __int8 *)(v57 + 23);
    uint64_t v59 = *(void *)(v57 + 8);
    if ((v58 & 0x80u) == 0) {
      uint64_t v59 = v58;
    }
    v55 += v59 + ((9 * (__clz(v59 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v56 & 2) == 0)
    {
LABEL_56:
      if ((v56 & 4) == 0) {
        goto LABEL_57;
      }
      goto LABEL_67;
    }
  }
  else if ((v56 & 2) == 0)
  {
    goto LABEL_56;
  }
  uint64_t v60 = sub_12580F4(*(void *)(a1 + 216));
  v55 += v60 + ((9 * (__clz(v60 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v56 & 4) == 0)
  {
LABEL_57:
    if ((v56 & 8) == 0) {
      goto LABEL_58;
    }
    goto LABEL_71;
  }
LABEL_67:
  int v61 = *(_DWORD *)(a1 + 224);
  if (v61 < 0) {
    uint64_t v62 = 10;
  }
  else {
    uint64_t v62 = (9 * (__clz(v61 | 1) ^ 0x1F) + 73) >> 6;
  }
  v55 += v62 + 1;
  if ((v56 & 8) == 0)
  {
LABEL_58:
    if ((v56 & 0x10) == 0) {
      goto LABEL_59;
    }
    goto LABEL_75;
  }
LABEL_71:
  int v63 = *(_DWORD *)(a1 + 228);
  if (v63 < 0) {
    uint64_t v64 = 10;
  }
  else {
    uint64_t v64 = (9 * (__clz(v63 | 1) ^ 0x1F) + 73) >> 6;
  }
  v55 += v64 + 1;
  if ((v56 & 0x10) == 0)
  {
LABEL_59:
    if ((v56 & 0x20) == 0) {
      goto LABEL_60;
    }
LABEL_79:
    int v67 = *(_DWORD *)(a1 + 236);
    if (v67 < 0) {
      uint64_t v68 = 12;
    }
    else {
      uint64_t v68 = ((9 * (__clz(v67 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    v55 += v68;
    if ((v56 & 0x40) == 0)
    {
LABEL_61:
      if ((v56 & 0x80) == 0) {
        goto LABEL_91;
      }
      goto LABEL_87;
    }
    goto LABEL_83;
  }
LABEL_75:
  int v65 = *(_DWORD *)(a1 + 232);
  if (v65 < 0) {
    uint64_t v66 = 12;
  }
  else {
    uint64_t v66 = ((9 * (__clz(v65 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  v55 += v66;
  if ((v56 & 0x20) != 0) {
    goto LABEL_79;
  }
LABEL_60:
  if ((v56 & 0x40) == 0) {
    goto LABEL_61;
  }
LABEL_83:
  int v69 = *(_DWORD *)(a1 + 240);
  if (v69 < 0) {
    uint64_t v70 = 12;
  }
  else {
    uint64_t v70 = ((9 * (__clz(v69 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  v55 += v70;
  if ((v56 & 0x80) != 0)
  {
LABEL_87:
    int v71 = *(_DWORD *)(a1 + 244);
    if (v71 < 0) {
      uint64_t v72 = 12;
    }
    else {
      uint64_t v72 = ((9 * (__clz(v71 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    v55 += v72;
  }
LABEL_91:
  if ((v56 & 0x300) != 0)
  {
    if ((v56 & 0x100) != 0)
    {
      int v73 = *(_DWORD *)(a1 + 248);
      if (v73 < 0) {
        uint64_t v74 = 12;
      }
      else {
        uint64_t v74 = ((9 * (__clz(v73 | 1) ^ 0x1F) + 73) >> 6) + 2;
      }
      v55 += v74;
    }
    if ((v56 & 0x200) != 0)
    {
      int v75 = *(_DWORD *)(a1 + 252);
      if (v75 < 0) {
        uint64_t v76 = 12;
      }
      else {
        uint64_t v76 = ((9 * (__clz(v75 | 1) ^ 0x1F) + 73) >> 6) + 2;
      }
      v55 += v76;
    }
  }
  uint64_t v77 = *(void *)(a1 + 8);
  if (v77)
  {
    unint64_t v79 = v77 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v79 + 31) < 0) {
      uint64_t v80 = *(void *)(v79 + 16);
    }
    else {
      uint64_t v80 = *(unsigned __int8 *)(v79 + 31);
    }
    v55 += v80;
  }
  *(_DWORD *)(a1 + 20) = v55;
  return v55;
}

void sub_125A3D4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_125CAA4((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_125CB30((std::string *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_125CBBC((uint64_t *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    unint64_t v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 104);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_125CC48((uint64_t *)(a1 + 96), v21, v20, v19, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v22 = *(_DWORD *)(a1 + 104) + v19;
    *(_DWORD *)(a1 + 104) = v22;
    uint64_t v23 = *(int **)(a1 + 112);
    if (*v23 < v22) {
      int *v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 128);
  if (v24)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    uint64_t v26 = (std::string **)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_125CCD4((uint64_t *)(a1 + 120), v26, v25, v24, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v27 = *(_DWORD *)(a1 + 128) + v24;
    *(_DWORD *)(a1 + 128) = v27;
    uint64_t v28 = *(int **)(a1 + 136);
    if (*v28 < v27) {
      int *v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 152);
  if (v29)
  {
    uint64_t v30 = (uint64_t *)(*(void *)(a2 + 160) + 8);
    uint64_t v31 = (std::string **)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_125CD50((uint64_t *)(a1 + 144), v31, v30, v29, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v32 = *(_DWORD *)(a1 + 152) + v29;
    *(_DWORD *)(a1 + 152) = v32;
    uint64_t v33 = *(int **)(a1 + 160);
    if (*v33 < v32) {
      int *v33 = v32;
    }
  }
  int v34 = *(_DWORD *)(a2 + 176);
  if (v34)
  {
    uint64_t v35 = (uint64_t *)(*(void *)(a2 + 184) + 8);
    uint64_t v36 = (std::string **)sub_188CCE4(a1 + 168, *(_DWORD *)(a2 + 176));
    sub_125CDCC((uint64_t *)(a1 + 168), v36, v35, v34, **(_DWORD **)(a1 + 184) - *(_DWORD *)(a1 + 176));
    int v37 = *(_DWORD *)(a1 + 176) + v34;
    *(_DWORD *)(a1 + 176) = v37;
    uint64_t v38 = *(int **)(a1 + 184);
    if (*v38 < v37) {
      *uint64_t v38 = v37;
    }
  }
  int v39 = *(_DWORD *)(a2 + 192);
  if (v39)
  {
    uint64_t v40 = *(int *)(a1 + 192);
    sub_188C80C((unsigned int *)(a1 + 192), v40 + v39);
    uint64_t v41 = *(void *)(a1 + 200);
    *(_DWORD *)(a1 + 192) += *(_DWORD *)(a2 + 192);
    memcpy((void *)(v41 + 4 * v40), *(const void **)(a2 + 200), 4 * *(int *)(a2 + 192));
  }
  int v42 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v42)
  {
    if (v42)
    {
      uint64_t v44 = (long long *)(*(void *)(a2 + 208) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v45 = *(void *)(a1 + 8);
      unint64_t v46 = (uint64_t *)(v45 & 0xFFFFFFFFFFFFFFFCLL);
      if (v45) {
        unint64_t v46 = (uint64_t *)*v46;
      }
      sub_1881DF4((std::string **)(a1 + 208), v44, v46);
      if ((v42 & 2) == 0)
      {
LABEL_27:
        if ((v42 & 4) == 0) {
          goto LABEL_28;
        }
        goto LABEL_56;
      }
    }
    else if ((v42 & 2) == 0)
    {
      goto LABEL_27;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v47 = *(std::string **)(a1 + 216);
    if (!v47)
    {
      uint64_t v48 = *(void *)(a1 + 8);
      uint64_t v49 = (void *)(v48 & 0xFFFFFFFFFFFFFFFCLL);
      if (v48) {
        uint64_t v49 = (void *)*v49;
      }
      uint64_t v47 = (std::string *)sub_125C118((uint64_t)v49);
      *(void *)(a1 + 216) = v47;
    }
    if (*(void *)(a2 + 216)) {
      uint64_t v50 = *(uint64_t (****)())(a2 + 216);
    }
    else {
      uint64_t v50 = &off_252F1B0;
    }
    sub_11EC100(v47, (uint64_t)v50);
    if ((v42 & 4) == 0)
    {
LABEL_28:
      if ((v42 & 8) == 0) {
        goto LABEL_29;
      }
      goto LABEL_57;
    }
LABEL_56:
    *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
    if ((v42 & 8) == 0)
    {
LABEL_29:
      if ((v42 & 0x10) == 0) {
        goto LABEL_30;
      }
      goto LABEL_58;
    }
LABEL_57:
    *(_DWORD *)(a1 + 228) = *(_DWORD *)(a2 + 228);
    if ((v42 & 0x10) == 0)
    {
LABEL_30:
      if ((v42 & 0x20) == 0) {
        goto LABEL_31;
      }
      goto LABEL_59;
    }
LABEL_58:
    *(_DWORD *)(a1 + 232) = *(_DWORD *)(a2 + 232);
    if ((v42 & 0x20) == 0)
    {
LABEL_31:
      if ((v42 & 0x40) == 0) {
        goto LABEL_32;
      }
      goto LABEL_60;
    }
LABEL_59:
    *(_DWORD *)(a1 + 236) = *(_DWORD *)(a2 + 236);
    if ((v42 & 0x40) == 0)
    {
LABEL_32:
      if ((v42 & 0x80) == 0)
      {
LABEL_34:
        *(_DWORD *)(a1 + 16) |= v42;
        goto LABEL_35;
      }
LABEL_33:
      *(_DWORD *)(a1 + 244) = *(_DWORD *)(a2 + 244);
      goto LABEL_34;
    }
LABEL_60:
    *(_DWORD *)(a1 + 240) = *(_DWORD *)(a2 + 240);
    if ((v42 & 0x80) == 0) {
      goto LABEL_34;
    }
    goto LABEL_33;
  }
LABEL_35:
  if ((v42 & 0x300) != 0)
  {
    if ((v42 & 0x100) != 0) {
      *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
    }
    if ((v42 & 0x200) != 0) {
      *(_DWORD *)(a1 + 252) = *(_DWORD *)(a2 + 252);
    }
    *(_DWORD *)(a1 + 16) |= v42;
  }
  uint64_t v43 = *(void *)(a2 + 8);
  if (v43)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v43 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_125A86C(uint64_t a1)
{
  if (!sub_125A8F8(a1 + 24)
    || !sub_125A960(a1 + 48)
    || !sub_125A9C0(a1 + 72)
    || !sub_125AA1C(a1 + 96)
    || !sub_125A9C0(a1 + 120)
    || !sub_125A8F8(a1 + 144))
  {
    return 0;
  }

  return sub_125A9C0(a1 + 168);
}

uint64_t sub_125A8F8(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v2 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    int v5 = *(_DWORD *)(v4 + 16);
    if ((~v5 & 0x1E) != 0 || (v5 & 1) != 0 && (~*(_DWORD *)(*(void *)(v4 + 24) + 16) & 7) != 0) {
      break;
    }
    if (--v2 <= 1) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_125A960(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v2 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    int v5 = *(_DWORD *)(v4 + 16);
    if ((v5 & 1) == 0 || (v5 & 2) != 0 && (~*(_DWORD *)(*(void *)(v4 + 32) + 16) & 7) != 0) {
      break;
    }
    if (--v2 <= 1) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_125A9C0(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v2 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if ((*(unsigned char *)(v4 + 16) & 1) != 0 && (~*(_DWORD *)(*(void *)(v4 + 24) + 16) & 7) != 0) {
      break;
    }
    if (--v2 <= 1) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_125AA1C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v2 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if ((*(unsigned char *)(v4 + 16) & 2) != 0 && (~*(_DWORD *)(*(void *)(v4 + 32) + 16) & 7) != 0) {
      break;
    }
    if (--v2 <= 1) {
      return 1;
    }
  }
  return 0;
}

void *sub_125AA78@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "als.LocationRequest");
}

uint64_t sub_125AA88(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_252F2D8)
  {
    uint64_t v6 = *(void *)(a1 + 40);
    if (v6)
    {
      sub_1257CF4(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_125AB48(uint64_t a1)
{
  sub_125AA88(a1);

  operator delete();
}

uint64_t sub_125AB80(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    uint64_t result = sub_1257DE4(*(void *)(result + 40));
  }
  if ((v2 & 0xFE) != 0)
  {
    *(void *)(v1 + 48) = 0;
    *(void *)(v1 + 56) = 0;
    *(_DWORD *)(v1 + 72) = 0;
    *(void *)(v1 + 64) = 0;
    *(void *)(v1 + 76) = 0x100000001;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 76) = 1;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_125AC04(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v68 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v68, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v68 + 1;
    unsigned int v9 = *v68;
    if (*v68 < 0)
    {
      int v10 = *v8;
      unsigned int v11 = v9 + (v10 << 7);
      unsigned int v9 = v11 - 128;
      if (v10 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v68, v11 - 128);
        unsigned int v9 = v12;
      }
      else
      {
        uint64_t v8 = v68 + 2;
      }
    }
    uint64_t v68 = v8;
    switch(v9 >> 3)
    {
      case 0x15u:
        if (v9 != 168) {
          goto LABEL_107;
        }
        uint64_t v13 = v8 + 1;
        unint64_t v14 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        int v16 = v14 + (v15 << 7);
        unint64_t v14 = (v16 - 128);
        if (v15 < 0)
        {
          uint64_t v68 = (char *)sub_188C138((uint64_t)v8, (v16 - 128));
          if (!v68) {
            goto LABEL_129;
          }
          unint64_t v14 = v53;
        }
        else
        {
          uint64_t v13 = v8 + 2;
LABEL_13:
          uint64_t v68 = v13;
        }
        if (sub_1251ADC(v14))
        {
          *(_DWORD *)(a1 + 16) |= 0x80u;
          *(_DWORD *)(a1 + 80) = v14;
          goto LABEL_115;
        }
        if (*v7) {
          int v51 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          int v51 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v52 = 21;
        goto LABEL_88;
      case 0x16u:
      case 0x17u:
      case 0x18u:
      case 0x19u:
      case 0x1Au:
      case 0x1Bu:
      case 0x1Cu:
      case 0x1Du:
      case 0x1Eu:
        goto LABEL_107;
      case 0x1Fu:
        if (v9 != 248) {
          goto LABEL_107;
        }
        uint64_t v20 = v8 + 1;
        unint64_t v14 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_26;
        }
        int v21 = *v20;
        int v22 = v14 + (v21 << 7);
        unint64_t v14 = (v22 - 128);
        if (v21 < 0)
        {
          uint64_t v68 = (char *)sub_188C138((uint64_t)v8, (v22 - 128));
          if (!v68) {
            goto LABEL_129;
          }
          unint64_t v14 = v54;
        }
        else
        {
          uint64_t v20 = v8 + 2;
LABEL_26:
          uint64_t v68 = v20;
        }
        if (v14 <= 4 && ((1 << v14) & 0x16) != 0)
        {
          *(_DWORD *)(a1 + 16) |= 0x100u;
          *(_DWORD *)(a1 + 84) = v14;
          goto LABEL_115;
        }
        if (*v7) {
          int v51 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          int v51 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v52 = 31;
        goto LABEL_88;
      case 0x20u:
        if ((_BYTE)v9) {
          goto LABEL_107;
        }
        v5 |= 0x20u;
        uint64_t v25 = v8 + 1;
        LODWORD(v24) = *v8;
        if ((v24 & 0x80) == 0) {
          goto LABEL_36;
        }
        int v26 = *v25;
        uint64_t v24 = v24 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v55 = (char *)sub_188C138((uint64_t)v8, v24);
          uint64_t v68 = v55;
          *(_DWORD *)(a1 + 72) = v56;
          if (!v55) {
            goto LABEL_129;
          }
        }
        else
        {
          uint64_t v25 = v8 + 2;
LABEL_36:
          uint64_t v68 = v25;
          *(_DWORD *)(a1 + 72) = v24;
        }
        goto LABEL_115;
      case 0x21u:
        if (v9 == 8)
        {
          int v27 = v8 - 2;
          while (1)
          {
            uint64_t v68 = v27 + 2;
            unint64_t v28 = v27[2];
            int v29 = v27 + 3;
            if (v27[2] < 0)
            {
              int v30 = *v29;
              int v31 = v28 + (v30 << 7);
              unint64_t v28 = (v31 - 128);
              if (v30 < 0)
              {
                uint64_t v68 = (char *)sub_188C138((uint64_t)(v27 + 2), (v31 - 128));
                if (!v68) {
                  goto LABEL_129;
                }
                unint64_t v28 = v34;
                goto LABEL_43;
              }
              int v29 = v27 + 4;
            }
            uint64_t v68 = v29;
LABEL_43:
            if ((v28 - 1) > 1)
            {
              if (*v7) {
                uint64_t v35 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(33, v28, v35);
            }
            else
            {
              uint64_t v32 = *(unsigned int *)(a1 + 24);
              if (v32 == *(_DWORD *)(a1 + 28))
              {
                int v33 = v32 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v32 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v32) = v28;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v32) = v28;
                int v33 = v32 + 1;
              }
              *(_DWORD *)(a1 + 24) = v33;
            }
            int v27 = v68;
            if (*(void *)a3 <= (unint64_t)v68 || *(_WORD *)v68 != 648) {
              goto LABEL_115;
            }
          }
        }
        if (v9 == 10)
        {
          *(void *)&long long v69 = a1 + 24;
          *((void *)&v69 + 1) = sub_1251B20;
          uint64_t v70 = a1 + 8;
          int v71 = 33;
          uint64_t v41 = sub_1112E88((uint64_t)a3, v8, &v69);
LABEL_114:
          uint64_t v68 = v41;
          if (!v41) {
            goto LABEL_129;
          }
LABEL_115:
          if (sub_11947B8((uint64_t)a3, &v68, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_107:
        if (v9) {
          BOOL v66 = (v9 & 7) == 4;
        }
        else {
          BOOL v66 = 1;
        }
        if (!v66)
        {
          if (*v7)
          {
            int v67 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v67 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v68;
          }
          uint64_t v41 = (char *)sub_1885AC0(v9, v67, v8, a3);
          goto LABEL_114;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_129:
        }
          uint64_t v68 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v68;
      case 0x22u:
        if (v9 != 16) {
          goto LABEL_107;
        }
        uint64_t v36 = v8 + 1;
        unint64_t v14 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_61;
        }
        int v37 = *v36;
        int v38 = v14 + (v37 << 7);
        unint64_t v14 = (v38 - 128);
        if (v37 < 0)
        {
          uint64_t v68 = (char *)sub_188C138((uint64_t)v8, (v38 - 128));
          if (!v68) {
            goto LABEL_129;
          }
          unint64_t v14 = v57;
        }
        else
        {
          uint64_t v36 = v8 + 2;
LABEL_61:
          uint64_t v68 = v36;
        }
        if ((v14 - 1) > 1)
        {
          if (*v7) {
            int v51 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v51 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v52 = 34;
LABEL_88:
          sub_188C020(v52, v14, v51);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x40u;
          *(_DWORD *)(a1 + 76) = v14;
        }
        goto LABEL_115;
      case 0x23u:
        if (v9 != 26) {
          goto LABEL_107;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        int v39 = *(void **)(a1 + 40);
        if (!v39)
        {
          uint64_t v40 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v40 = (void *)*v40;
          }
          int v39 = sub_125C118((uint64_t)v40);
          *(void *)(a1 + 40) = v39;
          uint64_t v8 = v68;
        }
        uint64_t v41 = (char *)sub_12594B0(a3, (uint64_t)v39, (unsigned __int8 *)v8);
        goto LABEL_114;
      default:
        switch(v9 >> 3)
        {
          case 1u:
            if (v9 != 8) {
              goto LABEL_107;
            }
            v5 |= 2u;
            int v17 = v8 + 1;
            uint64_t v18 = *v8;
            if ((*v8 & 0x80000000) == 0) {
              goto LABEL_21;
            }
            int v19 = *v17;
            uint64_t v18 = v18 + (v19 << 7) - 128;
            if (v19 < 0)
            {
              uint64_t v58 = (char *)sub_188C138((uint64_t)v8, v18);
              uint64_t v68 = v58;
              *(void *)(a1 + 48) = v59;
              if (!v58) {
                goto LABEL_129;
              }
            }
            else
            {
              int v17 = v8 + 2;
LABEL_21:
              uint64_t v68 = v17;
              *(void *)(a1 + 48) = v18;
            }
            goto LABEL_115;
          case 2u:
            if (v9 != 16) {
              goto LABEL_107;
            }
            v5 |= 4u;
            int v42 = v8 + 1;
            uint64_t v43 = *v8;
            if ((*v8 & 0x80000000) == 0) {
              goto LABEL_74;
            }
            int v44 = *v42;
            uint64_t v43 = v43 + (v44 << 7) - 128;
            if (v44 < 0)
            {
              uint64_t v60 = (char *)sub_188C138((uint64_t)v8, v43);
              uint64_t v68 = v60;
              *(void *)(a1 + 56) = v61;
              if (!v60) {
                goto LABEL_129;
              }
            }
            else
            {
              int v42 = v8 + 2;
LABEL_74:
              uint64_t v68 = v42;
              *(void *)(a1 + 56) = v43;
            }
            goto LABEL_115;
          case 3u:
            if (v9 != 24) {
              goto LABEL_107;
            }
            v5 |= 8u;
            uint64_t v45 = v8 + 1;
            uint64_t v46 = *v8;
            if ((*v8 & 0x80000000) == 0) {
              goto LABEL_79;
            }
            int v47 = *v45;
            uint64_t v46 = v46 + (v47 << 7) - 128;
            if (v47 < 0)
            {
              uint64_t v62 = (char *)sub_188C138((uint64_t)v8, v46);
              uint64_t v68 = v62;
              *(unsigned char *)(a1 + 64) = v63 != 0;
              if (!v62) {
                goto LABEL_129;
              }
            }
            else
            {
              uint64_t v45 = v8 + 2;
LABEL_79:
              uint64_t v68 = v45;
              *(unsigned char *)(a1 + 64) = v46 != 0;
            }
            goto LABEL_115;
          case 4u:
            if (v9 != 32) {
              goto LABEL_107;
            }
            v5 |= 0x10u;
            uint64_t v49 = v8 + 1;
            LODWORD(v48) = *v8;
            if ((v48 & 0x80) == 0) {
              goto LABEL_84;
            }
            int v50 = *v49;
            uint64_t v48 = v48 + (v50 << 7) - 128;
            if (v50 < 0)
            {
              uint64_t v64 = (char *)sub_188C138((uint64_t)v8, v48);
              uint64_t v68 = v64;
              *(_DWORD *)(a1 + 68) = v65;
              if (!v64) {
                goto LABEL_129;
              }
            }
            else
            {
              uint64_t v49 = v8 + 2;
LABEL_84:
              uint64_t v68 = v49;
              *(_DWORD *)(a1 + 68) = v48;
            }
            break;
          default:
            goto LABEL_107;
        }
        goto LABEL_115;
    }
  }
}

unsigned char *sub_125B324(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 48);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 56);
    *char v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v13 = *(unsigned char *)(a1 + 64);
    *char v4 = 24;
    v4[1] = v13;
    v4 += 2;
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v14 = *(int *)(a1 + 68);
    *char v4 = 32;
    v4[1] = v14;
    if (v14 > 0x7F)
    {
      v4[1] = v14 | 0x80;
      unint64_t v15 = v14 >> 7;
      v4[2] = v14 >> 7;
      v4 += 3;
      if (v14 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v16 = v15 >> 14;
          v15 >>= 7;
          *v4++ = v15;
        }
        while (v16);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v17 = *(int *)(a1 + 80);
    *(_WORD *)char v4 = 424;
    v4[2] = v17;
    if (v17 > 0x7F)
    {
      v4[2] = v17 | 0x80;
      unint64_t v18 = v17 >> 7;
      v4[3] = v17 >> 7;
      v4 += 4;
      if (v17 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v19 = v18 >> 14;
          v18 >>= 7;
          *v4++ = v18;
        }
        while (v19);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v20 = *(int *)(a1 + 84);
    *(_WORD *)char v4 = 504;
    v4[2] = v20;
    if (v20 > 0x7F)
    {
      v4[2] = v20 | 0x80;
      unint64_t v21 = v20 >> 7;
      v4[3] = v20 >> 7;
      v4 += 4;
      if (v20 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v22 = v21 >> 14;
          v21 >>= 7;
          *v4++ = v21;
        }
        while (v22);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v23 = *(int *)(a1 + 72);
    *(_WORD *)char v4 = 640;
    v4[2] = v23;
    if (v23 > 0x7F)
    {
      v4[2] = v23 | 0x80;
      unint64_t v24 = v23 >> 7;
      v4[3] = v23 >> 7;
      v4 += 4;
      if (v23 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v25 = v24 >> 14;
          v24 >>= 7;
          *v4++ = v24;
        }
        while (v25);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v26 = *(unsigned int *)(a1 + 24);
  if ((int)v26 >= 1)
  {
    for (uint64_t i = 0; i != v26; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v28 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *(_WORD *)char v4 = 648;
      v4[2] = v28;
      if (v28 > 0x7F)
      {
        v4[2] = v28 | 0x80;
        unint64_t v29 = v28 >> 7;
        v4[3] = v28 >> 7;
        v4 += 4;
        if (v28 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v30 = v29 >> 14;
            v29 >>= 7;
            *v4++ = v29;
          }
          while (v30);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v31 = *(int *)(a1 + 76);
    *(_WORD *)char v4 = 656;
    v4[2] = v31;
    if (v31 > 0x7F)
    {
      v4[2] = v31 | 0x80;
      unint64_t v32 = v31 >> 7;
      v4[3] = v31 >> 7;
      v4 += 4;
      if (v31 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v33 = v32 >> 14;
          v32 >>= 7;
          *v4++ = v32;
        }
        while (v33);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v34 = *(void *)(a1 + 40);
    *(_WORD *)char v4 = 666;
    unsigned int v35 = *(_DWORD *)(v34 + 20);
    v4[2] = v35;
    if (v35 > 0x7F) {
      uint64_t v36 = sub_188A9CC(v35, v4 + 2);
    }
    else {
      uint64_t v36 = v4 + 3;
    }
    char v4 = sub_1258008(v34, v36, a3);
  }
  uint64_t v37 = *(void *)(a1 + 8);
  if ((v37 & 1) == 0) {
    return v4;
  }
  unint64_t v39 = v37 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v39 + 31) < 0)
  {
    uint64_t v40 = *(void **)(v39 + 8);
    uint64_t v41 = *(void *)(v39 + 16);
  }
  else
  {
    uint64_t v40 = (void *)(v39 + 8);
    LODWORD(v41) = *(unsigned __int8 *)(v39 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v41)
  {
    uint64_t v42 = (int)v41;
    memcpy(v4, v40, (int)v41);
    v4 += v42;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v40, v41, v4);
}

unint64_t sub_125B884(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 2) == 0)
  {
    unint64_t v2 = 0;
    if ((v1 & 4) == 0) {
      return v2;
    }
    goto LABEL_5;
  }
  unint64_t v2 = ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v1 & 4) != 0) {
LABEL_5:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
  return v2;
}

uint64_t sub_125B8E4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((~v2 & 6) != 0) {
    unint64_t v3 = sub_125B884(a1);
  }
  else {
    unint64_t v3 = ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6)
  }
       + ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6)
       + 2;
  uint64_t v4 = *(unsigned int *)(a1 + 24);
  if (v4)
  {
    int v5 = 0;
    uint64_t v6 = 0;
    do
    {
      int v7 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v5);
      if (v7 < 0) {
        uint64_t v8 = 10;
      }
      else {
        uint64_t v8 = (9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6;
      }
      v6 += v8;
      ++v5;
    }
    while (v4 != v5);
  }
  else
  {
    uint64_t v6 = 0;
  }
  uint64_t v9 = v3 + 2 * v4 + v6;
  if (v2)
  {
    uint64_t v10 = sub_12580F4(*(void *)(a1 + 40));
    v9 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  if ((v2 & 0xF8) == 0) {
    goto LABEL_21;
  }
  if ((v2 & 8) != 0) {
    v9 += 2;
  }
  if ((v2 & 0x10) != 0)
  {
    int v11 = *(_DWORD *)(a1 + 68);
    if (v11 < 0) {
      uint64_t v12 = 11;
    }
    else {
      uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v9 += v12;
    if ((v2 & 0x20) == 0)
    {
LABEL_19:
      if ((v2 & 0x40) == 0) {
        goto LABEL_20;
      }
      goto LABEL_31;
    }
  }
  else if ((v2 & 0x20) == 0)
  {
    goto LABEL_19;
  }
  int v13 = *(_DWORD *)(a1 + 72);
  if (v13 < 0) {
    uint64_t v14 = 12;
  }
  else {
    uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  v9 += v14;
  if ((v2 & 0x40) != 0)
  {
LABEL_31:
    int v15 = *(_DWORD *)(a1 + 76);
    if (v15 < 0) {
      uint64_t v16 = 12;
    }
    else {
      uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    v9 += v16;
    if ((v2 & 0x80) != 0) {
      goto LABEL_35;
    }
LABEL_21:
    if ((v2 & 0x100) == 0) {
      goto LABEL_43;
    }
    goto LABEL_39;
  }
LABEL_20:
  if ((v2 & 0x80) == 0) {
    goto LABEL_21;
  }
LABEL_35:
  int v17 = *(_DWORD *)(a1 + 80);
  if (v17 < 0) {
    uint64_t v18 = 12;
  }
  else {
    uint64_t v18 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  v9 += v18;
  if ((v2 & 0x100) != 0)
  {
LABEL_39:
    int v19 = *(_DWORD *)(a1 + 84);
    if (v19 < 0) {
      uint64_t v20 = 12;
    }
    else {
      uint64_t v20 = ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    v9 += v20;
  }
LABEL_43:
  uint64_t v21 = *(void *)(a1 + 8);
  if (v21)
  {
    unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v23 + 31) < 0) {
      uint64_t v24 = *(void *)(v23 + 16);
    }
    else {
      uint64_t v24 = *(unsigned __int8 *)(v23 + 31);
    }
    v9 += v24;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

std::string *sub_125BB4C(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v8)
  {
    if (v8)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      int v11 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
      if (!v11)
      {
        std::string::size_type v12 = v3->__r_.__value_.__l.__size_;
        int v13 = (void *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          int v13 = (void *)*v13;
        }
        int v11 = (std::string *)sub_125C118((uint64_t)v13);
        v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v11;
      }
      if (*(void *)(a2 + 40)) {
        uint64_t v14 = *(uint64_t (****)())(a2 + 40);
      }
      else {
        uint64_t v14 = &off_252F1B0;
      }
      uint64_t result = sub_11EC100(v11, (uint64_t)v14);
      if ((v8 & 2) == 0)
      {
LABEL_6:
        if ((v8 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_29;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_6;
    }
    v3[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
    if ((v8 & 4) == 0)
    {
LABEL_7:
      if ((v8 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_30;
    }
LABEL_29:
    v3[2].__r_.__value_.__l.__size_ = *(void *)(a2 + 56);
    if ((v8 & 8) == 0)
    {
LABEL_8:
      if ((v8 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_31;
    }
LABEL_30:
    v3[2].__r_.__value_.__s.__data_[16] = *(unsigned char *)(a2 + 64);
    if ((v8 & 0x10) == 0)
    {
LABEL_9:
      if ((v8 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_32;
    }
LABEL_31:
    HIDWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 68);
    if ((v8 & 0x20) == 0)
    {
LABEL_10:
      if ((v8 & 0x40) == 0) {
        goto LABEL_11;
      }
      goto LABEL_33;
    }
LABEL_32:
    LODWORD(v3[3].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 72);
    if ((v8 & 0x40) == 0)
    {
LABEL_11:
      if ((v8 & 0x80) == 0)
      {
LABEL_13:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v8;
        goto LABEL_14;
      }
LABEL_12:
      LODWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 80);
      goto LABEL_13;
    }
LABEL_33:
    HIDWORD(v3[3].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 76);
    if ((v8 & 0x80) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_14:
  if ((v8 & 0x100) != 0)
  {
    int v9 = *(_DWORD *)(a2 + 84);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x100u;
    HIDWORD(v3[3].__r_.__value_.__r.__words[1]) = v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_125BCE0(uint64_t a1)
{
  return (~*(_DWORD *)(a1 + 16) & 6) == 0;
}

void *sub_125BCF4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "als.NearbyRequest");
}

double sub_125BD04(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_249FFA0;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(void *)(v2 + 64) = 0;
  return result;
}

double sub_125BD88(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24A0020;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 48) = 0;
  return result;
}

double sub_125BE08(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24A00A0;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  return result;
}

uint64_t sub_125BE88(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A0120;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

double sub_125BF10(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24A01A0;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 48) = 0;
  return result;
}

double sub_125BF90(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24A0220;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 48) = 0;
  return result;
}

double sub_125C010(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24A02A0;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 48) = 0;
  return result;
}

void *sub_125C090(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24A0320;
  result[2] = 0;
  result[4] = 0;
  result[5] = 0;
  result[3] = &qword_2550250;
  return result;
}

void *sub_125C118(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24A03A0;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

double sub_125C19C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  return sub_12581E8(v2, a1, 0);
}

double sub_125C1FC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24A04A0;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = a1;
  *(_OWORD *)(v2 + 40) = 0u;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_DWORD *)(v2 + 72) = 0;
  *(void *)&double result = 0x100000001;
  *(void *)(v2 + 76) = 0x100000001;
  *(_DWORD *)(v2 + 84) = 1;
  return result;
}

void sub_125C2BC()
{
}

double sub_125C314(uint64_t a1, uint64_t a2)
{
  return sub_125BD04(a2);
}

uint64_t sub_125C31C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_125C324()
{
}

double sub_125C378(uint64_t a1, uint64_t a2)
{
  return sub_125BD88(a2);
}

uint64_t sub_125C380(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_125C388()
{
}

double sub_125C3DC(uint64_t a1, uint64_t a2)
{
  return sub_125BE08(a2);
}

uint64_t sub_125C3E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_125C3EC()
{
}

uint64_t sub_125C448(uint64_t a1, uint64_t a2)
{
  return sub_125BE88(a2);
}

uint64_t sub_125C450(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_125C458()
{
}

double sub_125C4AC(uint64_t a1, uint64_t a2)
{
  return sub_125BF10(a2);
}

uint64_t sub_125C4B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_125C4BC()
{
}

double sub_125C510(uint64_t a1, uint64_t a2)
{
  return sub_125BF90(a2);
}

uint64_t sub_125C518(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_125C520()
{
}

double sub_125C574(uint64_t a1, uint64_t a2)
{
  return sub_125C010(a2);
}

uint64_t sub_125C57C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_125C584()
{
}

void *sub_125C5E0(uint64_t a1, uint64_t a2)
{
  return sub_125C090(a2);
}

uint64_t sub_125C5E8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_125C5F0()
{
}

void *sub_125C648(uint64_t a1, uint64_t a2)
{
  return sub_125C118(a2);
}

uint64_t sub_125C650(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_125C658()
{
}

double sub_125C69C(uint64_t a1, uint64_t a2)
{
  return sub_125C19C(a2);
}

uint64_t sub_125C6A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_125C6AC()
{
}

double sub_125C714(uint64_t a1, uint64_t a2)
{
  return sub_125C1FC(a2);
}

uint64_t sub_125C71C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_125C724(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1252A90(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_125C7A4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12573D4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_125C824(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1253898(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_125C8A4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1254770(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_125C924(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12551C8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_125C9A4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1255D20(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_125CA24(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1256880(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_125CAA4(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_125BD88(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_125CB20(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_125CB20(uint64_t a1, std::string *a2)
{
  return sub_1253728(a2, a1);
}

std::string *sub_125CB30(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      double result = (std::string *)sub_125C090(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = sub_125CBAC(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_125CBAC(uint64_t a1, std::string *a2)
{
  return sub_1257B94(a2, a1);
}

void sub_125CBBC(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_125BE08(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_125CC38(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_125CC38(uint64_t a1, std::string *a2)
{
  return sub_12545E4(a2, a1);
}

uint64_t *sub_125CC48(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      double result = (uint64_t *)sub_125BE88(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = (uint64_t *)sub_125CCC4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_125CCC4(uint64_t a1, std::string *a2)
{
  return sub_125505C(a2, a1);
}

void sub_125CCD4(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_125BF10(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_125CB20(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_125CD50(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_125BF90(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_125CB20(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_125CDCC(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_125C010(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_125CE48(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_125CE48(uint64_t a1, std::string *a2)
{
  return sub_1257280(a2, a1);
}

uint64_t sub_125CE58(_DWORD *a1, int a2, uint64_t a3, unsigned char *a4)
{
  if (*(char *)(a3 + 23) < 0)
  {
    int64_t v4 = *(void *)(a3 + 8);
    if (v4 > 127) {
      goto LABEL_21;
    }
  }
  else
  {
    int64_t v4 = *(unsigned __int8 *)(a3 + 23);
  }
  unsigned int v5 = 8 * a2;
  uint64_t v6 = 1;
  uint64_t v7 = 2;
  uint64_t v8 = 3;
  uint64_t v9 = 4;
  if ((8 * a2) >> 28) {
    uint64_t v9 = 5;
  }
  if (v5 >= 0x200000) {
    uint64_t v8 = v9;
  }
  if (v5 >= 0x4000) {
    uint64_t v7 = v8;
  }
  if (v5 >= 0x80) {
    uint64_t v6 = v7;
  }
  if ((uint64_t)(*(void *)a1 + ~(unint64_t)&a4[v6] + 16) >= v4)
  {
    unsigned int v10 = v5 | 2;
    *a4 = v5 | 2;
    if ((v5 | 2) > 0x7F)
    {
      *a4 = v5 | 0x82;
      unsigned int v12 = v5 >> 7;
      a4[1] = v12;
      uint64_t v11 = a4 + 2;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v11 - 1) |= 0x80u;
          unsigned int v13 = v12 >> 14;
          v12 >>= 7;
          *v11++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      uint64_t v11 = a4 + 1;
    }
    *uint64_t v11 = v4;
    uint64_t v14 = v11 + 1;
    if (*(char *)(a3 + 23) >= 0) {
      int v15 = (const void *)a3;
    }
    else {
      int v15 = *(const void **)a3;
    }
    memcpy(v14, v15, v4);
    return (uint64_t)v14 + v4;
  }
LABEL_21:

  return sub_188A868(a1, a2, a3, a4);
}

uint64_t sub_125CF74(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15B2CFC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_125D004(int a1)
{
  int v1 = a1 + 1;
  uint64_t result = 1;
  switch(v1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 44:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
      return result;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

BOOL sub_125D158(int a1)
{
  return (a1 + 1) < 0xB;
}

BOOL sub_125D168(unsigned int a1)
{
  return a1 < 0x3D;
}

BOOL sub_125D174(unsigned int a1)
{
  return a1 < 0xA;
}

BOOL sub_125D180(unsigned int a1)
{
  return a1 < 4;
}

uint64_t sub_125D18C(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  unsigned int v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_125D244(uint64_t a1)
{
  sub_125D18C(a1);

  operator delete();
}

uint64_t sub_125D27C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_125D2F8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)uint64_t v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        int v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v16 = (uint64_t *)*v16;
      }
      int v17 = (void *)(a1 + 24);
LABEL_27:
      int v19 = (std::string *)sub_1880F84(v17, v16);
      uint64_t v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      unsigned int v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v20;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)uint64_t v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)uint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_125D4A0(uint64_t a1, char *__dst, void *a3)
{
  int64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    int64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_125D58C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_125D668()
{
  return 1;
}

void *sub_125D670@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.UserCredentials");
}

uint64_t sub_125D680(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_252F358)
  {
    uint64_t v5 = *(void **)(a1 + 40);
    if (v5)
    {
      sub_12600D4(v5);
      operator delete();
    }
    unint64_t v6 = *(void **)(a1 + 48);
    if (v6)
    {
      sub_1264A50(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_125D758(uint64_t a1)
{
  sub_125D680(a1);

  operator delete();
}

uint64_t sub_125D790(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_125D814(*(void *)(result + 40));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_125D9E0(*(void *)(v1 + 48));
    }
  }
  if ((v2 & 0xC) != 0) {
    *(void *)(v1 + 56) = 0xFFFFFFFF00000000;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_125D814(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_126E6C0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 32) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 48);
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = (unsigned char **)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = (uint64_t)sub_125F964(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 104);
  if ((int)v9 >= 1)
  {
    unsigned int v10 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_126F520(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 104) = 0;
  }
  int v12 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v12) {
    goto LABEL_23;
  }
  if (v12)
  {
    unint64_t v17 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v17 + 23) < 0)
    {
      **(unsigned char **)unint64_t v17 = 0;
      *(void *)(v17 + 8) = 0;
      if ((v12 & 2) != 0) {
        goto LABEL_39;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v17 = 0;
      *(unsigned char *)(v17 + 23) = 0;
      if ((v12 & 2) != 0) {
        goto LABEL_39;
      }
    }
LABEL_16:
    if ((v12 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_40;
  }
  if ((v12 & 2) == 0) {
    goto LABEL_16;
  }
LABEL_39:
  uint64_t result = sub_1260340(*(void *)(a1 + 128));
  if ((v12 & 4) == 0)
  {
LABEL_17:
    if ((v12 & 8) == 0) {
      goto LABEL_18;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = (uint64_t)sub_1260464(*(unsigned char **)(a1 + 136));
  if ((v12 & 8) == 0)
  {
LABEL_18:
    if ((v12 & 0x10) == 0) {
      goto LABEL_19;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = sub_12604D4(*(void *)(a1 + 144));
  if ((v12 & 0x10) == 0)
  {
LABEL_19:
    if ((v12 & 0x20) == 0) {
      goto LABEL_20;
    }
LABEL_43:
    uint64_t result = sub_12606A8(*(void *)(a1 + 160));
    if ((v12 & 0x40) == 0)
    {
LABEL_21:
      if ((v12 & 0x80) == 0) {
        goto LABEL_23;
      }
      goto LABEL_22;
    }
    goto LABEL_44;
  }
LABEL_42:
  uint64_t result = (uint64_t)sub_12605AC(*(void *)(a1 + 152));
  if ((v12 & 0x20) != 0) {
    goto LABEL_43;
  }
LABEL_20:
  if ((v12 & 0x40) == 0) {
    goto LABEL_21;
  }
LABEL_44:
  uint64_t result = sub_12606D0(*(void *)(a1 + 168));
  if ((v12 & 0x80) != 0) {
LABEL_22:
  }
    uint64_t result = sub_12608F0(*(void *)(a1 + 176));
LABEL_23:
  if ((v12 & 0x300) != 0)
  {
    if ((v12 & 0x100) != 0) {
      uint64_t result = sub_12609DC(*(void *)(a1 + 184));
    }
    if ((v12 & 0x200) != 0)
    {
      uint64_t v13 = *(void *)(a1 + 192);
      char v14 = *(unsigned char *)(v13 + 8);
      uint64_t result = v13 + 8;
      *(unsigned char *)(result + 18) = 0;
      *(_WORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v14) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
  }
  if ((v12 & 0xC00) != 0)
  {
    *(unsigned char *)(a1 + 204) = 0;
    *(_DWORD *)(a1 + 200) = 0;
  }
  char v16 = *(unsigned char *)(a1 + 8);
  uint64_t v15 = a1 + 8;
  *(_DWORD *)(v15 + 8) = 0;
  if (v16)
  {
    return sub_188B4AC((uint64_t *)v15);
  }
  return result;
}

uint64_t sub_125D9E0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_127178C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_1627DF0(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 80);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(v1 + 88) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_162D688(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 80) = 0;
  }
  uint64_t v11 = *(unsigned int *)(v1 + 104);
  if ((int)v11 >= 1)
  {
    int v12 = (uint64_t *)(*(void *)(v1 + 112) + 8);
    do
    {
      uint64_t v13 = *v12++;
      uint64_t result = sub_126C990(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(v1 + 104) = 0;
  }
  uint64_t v14 = *(unsigned int *)(v1 + 128);
  if ((int)v14 >= 1)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(v1 + 136) + 8);
    do
    {
      uint64_t v16 = *v15++;
      uint64_t result = sub_126B908(v16);
      --v14;
    }
    while (v14);
    *(_DWORD *)(v1 + 128) = 0;
  }
  uint64_t v17 = *(unsigned int *)(v1 + 152);
  if ((int)v17 >= 1)
  {
    uint64_t v18 = (uint64_t *)(*(void *)(v1 + 160) + 8);
    do
    {
      uint64_t v19 = *v18++;
      uint64_t result = sub_12636AC(v19);
      --v17;
    }
    while (v17);
    *(_DWORD *)(v1 + 152) = 0;
  }
  int v20 = *(_DWORD *)(v1 + 16);
  if (!(_BYTE)v20) {
    goto LABEL_35;
  }
  if (v20)
  {
    unint64_t v23 = *(void *)(v1 + 168) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v23 + 23) < 0)
    {
      **(unsigned char **)unint64_t v23 = 0;
      *(void *)(v23 + 8) = 0;
      if ((v20 & 2) != 0) {
        goto LABEL_65;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v23 = 0;
      *(unsigned char *)(v23 + 23) = 0;
      if ((v20 & 2) != 0) {
        goto LABEL_65;
      }
    }
LABEL_28:
    if ((v20 & 4) == 0) {
      goto LABEL_29;
    }
LABEL_69:
    unint64_t v25 = *(void *)(v1 + 184) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v25 + 23) < 0)
    {
      **(unsigned char **)unint64_t v25 = 0;
      *(void *)(v25 + 8) = 0;
      if ((v20 & 8) != 0) {
        goto LABEL_73;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v25 = 0;
      *(unsigned char *)(v25 + 23) = 0;
      if ((v20 & 8) != 0) {
        goto LABEL_73;
      }
    }
LABEL_30:
    if ((v20 & 0x10) == 0) {
      goto LABEL_31;
    }
    goto LABEL_74;
  }
  if ((v20 & 2) == 0) {
    goto LABEL_28;
  }
LABEL_65:
  unint64_t v24 = *(void *)(v1 + 176) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v24 + 23) < 0)
  {
    **(unsigned char **)unint64_t v24 = 0;
    *(void *)(v24 + 8) = 0;
    if ((v20 & 4) != 0) {
      goto LABEL_69;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v24 = 0;
    *(unsigned char *)(v24 + 23) = 0;
    if ((v20 & 4) != 0) {
      goto LABEL_69;
    }
  }
LABEL_29:
  if ((v20 & 8) == 0) {
    goto LABEL_30;
  }
LABEL_73:
  uint64_t result = sub_15B9F6C(*(void *)(v1 + 192));
  if ((v20 & 0x10) == 0)
  {
LABEL_31:
    if ((v20 & 0x20) == 0) {
      goto LABEL_32;
    }
LABEL_75:
    uint64_t result = (uint64_t)sub_12605AC(*(void *)(v1 + 208));
    if ((v20 & 0x40) == 0)
    {
LABEL_33:
      if ((v20 & 0x80) == 0) {
        goto LABEL_35;
      }
      goto LABEL_34;
    }
    goto LABEL_76;
  }
LABEL_74:
  uint64_t result = sub_144D38C(*(void *)(v1 + 200));
  if ((v20 & 0x20) != 0) {
    goto LABEL_75;
  }
LABEL_32:
  if ((v20 & 0x40) == 0) {
    goto LABEL_33;
  }
LABEL_76:
  uint64_t result = sub_12606D0(*(void *)(v1 + 216));
  if ((v20 & 0x80) != 0) {
LABEL_34:
  }
    uint64_t result = sub_175FE78(*(void *)(v1 + 224));
LABEL_35:
  if ((v20 & 0xFF00) == 0) {
    goto LABEL_45;
  }
  if ((v20 & 0x100) != 0)
  {
    uint64_t result = sub_1264DA0(*(void *)(v1 + 232));
    if ((v20 & 0x200) == 0)
    {
LABEL_38:
      if ((v20 & 0x400) == 0) {
        goto LABEL_39;
      }
      goto LABEL_58;
    }
  }
  else if ((v20 & 0x200) == 0)
  {
    goto LABEL_38;
  }
  uint64_t result = sub_1700B04(*(void *)(v1 + 240));
  if ((v20 & 0x400) == 0)
  {
LABEL_39:
    if ((v20 & 0x800) == 0) {
      goto LABEL_40;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t result = sub_12636AC(*(void *)(v1 + 248));
  if ((v20 & 0x800) == 0)
  {
LABEL_40:
    if ((v20 & 0x1000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_60;
  }
LABEL_59:
  uint64_t result = sub_130726C(*(void *)(v1 + 256));
  if ((v20 & 0x1000) == 0)
  {
LABEL_41:
    if ((v20 & 0x2000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t result = sub_1264E20(*(void *)(v1 + 264));
  if ((v20 & 0x2000) == 0)
  {
LABEL_42:
    if ((v20 & 0x4000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t result = sub_1479B94(*(void *)(v1 + 272));
  if ((v20 & 0x4000) == 0)
  {
LABEL_43:
    if ((v20 & 0x8000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_44;
  }
LABEL_62:
  uint64_t result = sub_1264F08(*(void *)(v1 + 280));
  if ((v20 & 0x8000) != 0) {
LABEL_44:
  }
    uint64_t result = sub_1264F70(*(void *)(v1 + 288));
LABEL_45:
  if ((v20 & 0x10000) != 0) {
    uint64_t result = sub_1264FD4(*(void *)(v1 + 296));
  }
  if ((v20 & 0x3E0000) != 0)
  {
    *(void *)(v1 + 304) = 0;
    *(void *)(v1 + 312) = 0;
    *(void *)(v1 + 320) = 0;
    *(void *)(v1 + 328) = 0xFFFFFFFF00000000;
  }
  char v22 = *(unsigned char *)(v1 + 8);
  uint64_t v21 = v1 + 8;
  *(_DWORD *)(v21 + 8) = 0;
  if (v22)
  {
    return sub_188B4AC((uint64_t *)v21);
  }
  return result;
}

char *sub_125DCC8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v42 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v42, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v42 + 1;
    unsigned int v9 = *v42;
    if (*v42 < 0)
    {
      int v10 = *v8;
      unsigned int v11 = v9 + (v10 << 7);
      unsigned int v9 = v11 - 128;
      if (v10 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v42, v11 - 128);
        unsigned int v9 = v12;
      }
      else
      {
        uint64_t v8 = v42 + 2;
      }
    }
    uint64_t v42 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_59;
        }
        v5 |= 4u;
        uint64_t v13 = v8 + 1;
        int v14 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        int v14 = v14 + (v15 << 7) - 128;
        if ((v15 & 0x80000000) == 0)
        {
          uint64_t v13 = v8 + 2;
LABEL_13:
          uint64_t v42 = v13;
          *(_DWORD *)(a1 + 56) = v14;
          goto LABEL_67;
        }
        uint64_t v36 = (char *)sub_188C0D0((uint64_t)v8, v14);
        uint64_t v42 = v36;
        *(_DWORD *)(a1 + 56) = v37;
        if (!v36) {
          goto LABEL_76;
        }
        goto LABEL_67;
      case 2u:
        if (v9 == 16)
        {
          uint64_t v16 = v8 - 1;
          while (1)
          {
            uint64_t v42 = v16 + 1;
            unint64_t v17 = v16[1];
            uint64_t v18 = v16 + 2;
            if (v16[1] < 0)
            {
              int v19 = *v18;
              int v20 = v17 + (v19 << 7);
              unint64_t v17 = (v20 - 128);
              if (v19 < 0)
              {
                uint64_t v42 = (char *)sub_188C138((uint64_t)(v16 + 1), (v20 - 128));
                if (!v42) {
                  goto LABEL_76;
                }
                unint64_t v17 = v23;
                goto LABEL_20;
              }
              uint64_t v18 = v16 + 3;
            }
            uint64_t v42 = v18;
LABEL_20:
            if (v17 > 0x3C)
            {
              if (*v7) {
                unint64_t v24 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                unint64_t v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(2, v17, v24);
            }
            else
            {
              uint64_t v21 = *(unsigned int *)(a1 + 24);
              if (v21 == *(_DWORD *)(a1 + 28))
              {
                int v22 = v21 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v21 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v21) = v17;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v21) = v17;
                int v22 = v21 + 1;
              }
              *(_DWORD *)(a1 + 24) = v22;
            }
            uint64_t v16 = v42;
            if (*(void *)a3 <= (unint64_t)v42 || *v42 != 16) {
              goto LABEL_67;
            }
          }
        }
        if (v9 == 18)
        {
          *(void *)&long long v43 = a1 + 24;
          *((void *)&v43 + 1) = sub_125D168;
          uint64_t v44 = a1 + 8;
          int v45 = 2;
          unint64_t v32 = sub_1112E88((uint64_t)a3, v8, &v43);
LABEL_66:
          uint64_t v42 = v32;
          if (!v32) {
            goto LABEL_76;
          }
LABEL_67:
          if (sub_11947B8((uint64_t)a3, &v42, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_59:
        if (v9) {
          BOOL v39 = (v9 & 7) == 4;
        }
        else {
          BOOL v39 = 1;
        }
        if (!v39)
        {
          if (*v7)
          {
            uint64_t v40 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v40 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v42;
          }
          unint64_t v32 = (char *)sub_1885AC0(v9, v40, v8, a3);
          goto LABEL_66;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_76:
        }
          uint64_t v42 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v42;
      case 3u:
        if (v9 != 24) {
          goto LABEL_59;
        }
        unint64_t v25 = v8 + 1;
        unint64_t v26 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v27 = *v25;
        int v28 = v26 + (v27 << 7);
        unint64_t v26 = (v28 - 128);
        if (v27 < 0)
        {
          uint64_t v42 = (char *)sub_188C138((uint64_t)v8, (v28 - 128));
          if (!v42) {
            goto LABEL_76;
          }
          unint64_t v26 = v38;
        }
        else
        {
          unint64_t v25 = v8 + 2;
LABEL_38:
          uint64_t v42 = v25;
        }
        if (sub_125D004(v26))
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 60) = v26;
        }
        else
        {
          if (*v7) {
            uint64_t v41 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v41 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(3, v26, v41);
        }
        goto LABEL_67;
      case 4u:
        if (v9 != 34) {
          goto LABEL_59;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v29 = *(void *)(a1 + 40);
        if (!v29)
        {
          unint64_t v30 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v30 = (void *)*v30;
          }
          sub_1283668((uint64_t)v30);
          uint64_t v29 = v31;
          *(void *)(a1 + 40) = v31;
          uint64_t v8 = v42;
        }
        unint64_t v32 = (char *)sub_125E118(a3, v29, (unsigned __int8 *)v8);
        goto LABEL_66;
      case 5u:
        if (v9 != 42) {
          goto LABEL_59;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v33 = *(void *)(a1 + 48);
        if (!v33)
        {
          uint64_t v34 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v34 = (void *)*v34;
          }
          sub_12838C0((uint64_t)v34);
          uint64_t v33 = v35;
          *(void *)(a1 + 48) = v35;
          uint64_t v8 = v42;
        }
        unint64_t v32 = (char *)sub_125E1A8(a3, v33, (unsigned __int8 *)v8);
        goto LABEL_66;
      default:
        goto LABEL_59;
    }
  }
}

uint64_t sub_125E118(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1260A54(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_125E1A8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12651F8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_125E238(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 56);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v10 = *(unsigned int *)(a1 + 24);
  if ((int)v10 >= 1)
  {
    for (uint64_t i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v12 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *uint64_t v4 = 16;
      v4[1] = v12;
      if (v12 > 0x7F)
      {
        v4[1] = v12 | 0x80;
        unint64_t v13 = v12 >> 7;
        v4[2] = v12 >> 7;
        v4 += 3;
        if (v12 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v14 = v13 >> 14;
            v13 >>= 7;
            *v4++ = v13;
          }
          while (v14);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v15 = *(int *)(a1 + 60);
    *uint64_t v4 = 24;
    v4[1] = v15;
    if (v15 > 0x7F)
    {
      v4[1] = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      v4[2] = v15 >> 7;
      v4 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *v4++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v18 = *(void *)(a1 + 40);
    *uint64_t v4 = 34;
    unsigned int v19 = *(_DWORD *)(v18 + 20);
    v4[1] = v19;
    if (v19 > 0x7F) {
      int v20 = sub_188A9CC(v19, v4 + 1);
    }
    else {
      int v20 = v4 + 2;
    }
    uint64_t v4 = sub_1261970(v18, v20, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v21 = *(void *)(a1 + 48);
    *uint64_t v4 = 42;
    unsigned int v22 = *(_DWORD *)(v21 + 20);
    v4[1] = v22;
    if (v22 > 0x7F) {
      unint64_t v23 = sub_188A9CC(v22, v4 + 1);
    }
    else {
      unint64_t v23 = v4 + 2;
    }
    uint64_t v4 = sub_126664C(v21, (unint64_t)v23, a3);
  }
  uint64_t v24 = *(void *)(a1 + 8);
  if ((v24 & 1) == 0) {
    return v4;
  }
  unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v26 + 31) < 0)
  {
    int v27 = *(void **)(v26 + 8);
    uint64_t v28 = *(void *)(v26 + 16);
  }
  else
  {
    int v27 = (void *)(v26 + 8);
    LODWORD(v28) = *(unsigned __int8 *)(v26 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v28)
  {
    uint64_t v29 = (int)v28;
    memcpy(v4, v27, (int)v28);
    v4 += v29;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v27, v28, v4);
}

uint64_t sub_125E558(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v3);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v4 += v6;
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v7 = v4 + v2;
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0xF) != 0)
  {
    if (v8)
    {
      uint64_t v9 = sub_1262078(*(void *)(a1 + 40));
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v8 & 2) == 0)
      {
LABEL_12:
        if ((v8 & 4) == 0) {
          goto LABEL_13;
        }
        goto LABEL_17;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_12;
    }
    uint64_t v10 = sub_1267260(*(void *)(a1 + 48));
    v7 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 4) == 0)
    {
LABEL_13:
      if ((v8 & 8) == 0) {
        goto LABEL_22;
      }
      goto LABEL_18;
    }
LABEL_17:
    v7 += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 8) == 0) {
      goto LABEL_22;
    }
LABEL_18:
    int v11 = *(_DWORD *)(a1 + 60);
    if (v11 < 0) {
      uint64_t v12 = 11;
    }
    else {
      uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v7 += v12;
  }
LABEL_22:
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v7 += v16;
  }
  *(_DWORD *)(a1 + 20) = v7;
  return v7;
}

void sub_125E6E4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188C80C((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((v8 & 0xF) != 0)
  {
    if (v8)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v10 = *(void *)(a1 + 40);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (void *)*v12;
        }
        sub_1283668((uint64_t)v12);
        *(void *)(a1 + 40) = v10;
      }
      if (*(void *)(a2 + 40)) {
        uint64_t v13 = *(uint64_t (****)())(a2 + 40);
      }
      else {
        uint64_t v13 = &off_252F3D8;
      }
      sub_125E860(v10, (uint64_t)v13);
      if ((v8 & 2) == 0)
      {
LABEL_6:
        if ((v8 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_30;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_6;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v14 = *(void *)(a1 + 48);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      sub_12838C0((uint64_t)v16);
      *(void *)(a1 + 48) = v14;
    }
    if (*(void *)(a2 + 48)) {
      unint64_t v17 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      unint64_t v17 = &off_252F538;
    }
    sub_125EDA4(v14, (uint64_t)v17);
    if ((v8 & 4) == 0)
    {
LABEL_7:
      if ((v8 & 8) == 0)
      {
LABEL_9:
        *(_DWORD *)(a1 + 16) |= v8;
        goto LABEL_10;
      }
LABEL_8:
      *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
      goto LABEL_9;
    }
LABEL_30:
    *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
    if ((v8 & 8) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_125E860(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    int v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C29B4((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (const std::string **)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_188FB98(a1 + 48, v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_12C2A40((uint64_t *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    uint64_t v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 104);
  if (v19)
  {
    int v20 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_12C2ACC((std::string *)(a1 + 96), v21, v20, v19, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v22 = *(_DWORD *)(a1 + 104) + v19;
    *(_DWORD *)(a1 + 104) = v22;
    unint64_t v23 = *(int **)(a1 + 112);
    if (*v23 < v22) {
      int *v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v24) {
    goto LABEL_82;
  }
  if (v24)
  {
    unint64_t v25 = (long long *)(*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v26 = *(void *)(a1 + 8);
    int v27 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
    if (v26) {
      int v27 = (uint64_t *)*v27;
    }
    sub_1881DF4((std::string **)(a1 + 120), v25, v27);
    if ((v24 & 2) == 0)
    {
LABEL_16:
      if ((v24 & 4) == 0) {
        goto LABEL_17;
      }
      goto LABEL_34;
    }
  }
  else if ((v24 & 2) == 0)
  {
    goto LABEL_16;
  }
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v28 = *(void *)(a1 + 128);
  if (!v28)
  {
    uint64_t v29 = *(void *)(a1 + 8);
    unint64_t v30 = (void *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
    if (v29) {
      unint64_t v30 = (void *)*v30;
    }
    uint64_t v28 = sub_1284178((uint64_t)v30);
    *(void *)(a1 + 128) = v28;
  }
  if (*(void *)(a2 + 128)) {
    uint64_t v31 = *(uint64_t (****)())(a2 + 128);
  }
  else {
    uint64_t v31 = &off_252F928;
  }
  sub_1262494(v28, (uint64_t)v31);
  if ((v24 & 4) == 0)
  {
LABEL_17:
    if ((v24 & 8) == 0) {
      goto LABEL_18;
    }
    goto LABEL_42;
  }
LABEL_34:
  *(_DWORD *)(a1 + 16) |= 4u;
  unint64_t v32 = *(void **)(a1 + 136);
  if (!v32)
  {
    uint64_t v33 = *(void *)(a1 + 8);
    uint64_t v34 = (void *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
    if (v33) {
      uint64_t v34 = (void *)*v34;
    }
    unint64_t v32 = sub_1284080((uint64_t)v34);
    *(void *)(a1 + 136) = v32;
  }
  if (*(void *)(a2 + 136)) {
    uint64_t v35 = *(uint64_t (****)())(a2 + 136);
  }
  else {
    uint64_t v35 = &off_252F900;
  }
  sub_12626AC((uint64_t)v32, (uint64_t)v35);
  if ((v24 & 8) == 0)
  {
LABEL_18:
    if ((v24 & 0x10) == 0) {
      goto LABEL_19;
    }
    goto LABEL_50;
  }
LABEL_42:
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v36 = *(void *)(a1 + 144);
  if (!v36)
  {
    uint64_t v37 = *(void *)(a1 + 8);
    unint64_t v38 = (void *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
    if (v37) {
      unint64_t v38 = (void *)*v38;
    }
    sub_1284228((uint64_t)v38);
    *(void *)(a1 + 144) = v36;
  }
  if (*(void *)(a2 + 144)) {
    BOOL v39 = *(uint64_t (****)())(a2 + 144);
  }
  else {
    BOOL v39 = &off_252F988;
  }
  sub_12627A8(v36, (uint64_t)v39);
  if ((v24 & 0x10) == 0)
  {
LABEL_19:
    if ((v24 & 0x20) == 0) {
      goto LABEL_20;
    }
LABEL_58:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v44 = *(std::string **)(a1 + 160);
    if (!v44)
    {
      uint64_t v45 = *(void *)(a1 + 8);
      uint64_t v46 = (void *)(v45 & 0xFFFFFFFFFFFFFFFCLL);
      if (v45) {
        uint64_t v46 = (void *)*v46;
      }
      uint64_t v44 = (std::string *)sub_128481C((uint64_t)v46);
      *(void *)(a1 + 160) = v44;
    }
    if (*(void *)(a2 + 160)) {
      int v47 = *(void *(****)(void *))(a2 + 160);
    }
    else {
      int v47 = &off_252FBA8;
    }
    sub_117EF50(v44, (uint64_t)v47);
    if ((v24 & 0x40) == 0)
    {
LABEL_21:
      if ((v24 & 0x80) == 0) {
        goto LABEL_82;
      }
      goto LABEL_74;
    }
    goto LABEL_66;
  }
LABEL_50:
  *(_DWORD *)(a1 + 16) |= 0x10u;
  uint64_t v40 = *(void *)(a1 + 152);
  if (!v40)
  {
    uint64_t v41 = *(void *)(a1 + 8);
    uint64_t v42 = (void *)(v41 & 0xFFFFFFFFFFFFFFFCLL);
    if (v41) {
      uint64_t v42 = (void *)*v42;
    }
    uint64_t v40 = sub_1283F94((uint64_t)v42);
    *(void *)(a1 + 152) = v40;
  }
  if (*(void *)(a2 + 152)) {
    long long v43 = *(uint64_t (****)())(a2 + 152);
  }
  else {
    long long v43 = &off_252F8A0;
  }
  sub_12629B8(v40, (uint64_t)v43);
  if ((v24 & 0x20) != 0) {
    goto LABEL_58;
  }
LABEL_20:
  if ((v24 & 0x40) == 0) {
    goto LABEL_21;
  }
LABEL_66:
  *(_DWORD *)(a1 + 16) |= 0x40u;
  uint64_t v48 = *(void *)(a1 + 168);
  if (!v48)
  {
    uint64_t v49 = *(void *)(a1 + 8);
    int v50 = (void *)(v49 & 0xFFFFFFFFFFFFFFFCLL);
    if (v49) {
      int v50 = (void *)*v50;
    }
    sub_1284584((uint64_t)v50);
    *(void *)(a1 + 168) = v48;
  }
  if (*(void *)(a2 + 168)) {
    int v51 = *(uint64_t (****)())(a2 + 168);
  }
  else {
    int v51 = &off_252FA30;
  }
  sub_1262BAC(v48, (uint64_t)v51);
  if ((v24 & 0x80) != 0)
  {
LABEL_74:
    *(_DWORD *)(a1 + 16) |= 0x80u;
    int v52 = *(std::string **)(a1 + 176);
    if (!v52)
    {
      uint64_t v53 = *(void *)(a1 + 8);
      unint64_t v54 = (void *)(v53 & 0xFFFFFFFFFFFFFFFCLL);
      if (v53) {
        unint64_t v54 = (void *)*v54;
      }
      int v52 = (std::string *)sub_12837C0((uint64_t)v54);
      *(void *)(a1 + 176) = v52;
    }
    if (*(void *)(a2 + 176)) {
      uint64_t v55 = *(uint64_t (****)(uint64_t))(a2 + 176);
    }
    else {
      uint64_t v55 = &off_252F4E0;
    }
    sub_1263010(v52, (uint64_t)v55);
  }
LABEL_82:
  if ((v24 & 0xF00) == 0) {
    goto LABEL_89;
  }
  if ((v24 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x100u;
    unint64_t v57 = *(std::string **)(a1 + 184);
    if (!v57)
    {
      uint64_t v58 = *(void *)(a1 + 8);
      uint64_t v59 = (void *)(v58 & 0xFFFFFFFFFFFFFFFCLL);
      if (v58) {
        uint64_t v59 = (void *)*v59;
      }
      unint64_t v57 = (std::string *)sub_1283848((uint64_t)v59);
      *(void *)(a1 + 184) = v57;
    }
    if (*(void *)(a2 + 184)) {
      uint64_t v60 = *(uint64_t (****)())(a2 + 184);
    }
    else {
      uint64_t v60 = &off_252F518;
    }
    sub_126315C(v57, (uint64_t)v60);
    if ((v24 & 0x200) == 0)
    {
LABEL_85:
      if ((v24 & 0x400) == 0) {
        goto LABEL_86;
      }
LABEL_109:
      *(_DWORD *)(a1 + 200) = *(_DWORD *)(a2 + 200);
      if ((v24 & 0x800) == 0) {
        goto LABEL_88;
      }
      goto LABEL_87;
    }
  }
  else if ((v24 & 0x200) == 0)
  {
    goto LABEL_85;
  }
  *(_DWORD *)(a1 + 16) |= 0x200u;
  uint64_t v61 = *(std::string **)(a1 + 192);
  if (!v61)
  {
    uint64_t v62 = *(void *)(a1 + 8);
    uint64_t v63 = (void *)(v62 & 0xFFFFFFFFFFFFFFFCLL);
    if (v62) {
      uint64_t v63 = (void *)*v63;
    }
    uint64_t v61 = (std::string *)sub_1283A10((uint64_t)v63);
    *(void *)(a1 + 192) = v61;
  }
  if (*(void *)(a2 + 192)) {
    uint64_t v64 = *(void *(****)(void *))(a2 + 192);
  }
  else {
    uint64_t v64 = &off_252F708;
  }
  sub_1263204(v61, (uint64_t)v64);
  if ((v24 & 0x400) != 0) {
    goto LABEL_109;
  }
LABEL_86:
  if ((v24 & 0x800) != 0) {
LABEL_87:
  }
    *(unsigned char *)(a1 + 204) = *(unsigned char *)(a2 + 204);
LABEL_88:
  *(_DWORD *)(a1 + 16) |= v24;
LABEL_89:
  uint64_t v56 = *(void *)(a2 + 8);
  if (v56)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v56 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_125EDA4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    int v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C2B58((std::string *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C2BE4((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_12C2C70((uint64_t *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    uint64_t v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 104);
  if (v19)
  {
    int v20 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_12C2CFC((std::string *)(a1 + 96), v21, v20, v19, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v22 = *(_DWORD *)(a1 + 104) + v19;
    *(_DWORD *)(a1 + 104) = v22;
    unint64_t v23 = *(int **)(a1 + 112);
    if (*v23 < v22) {
      int *v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 128);
  if (v24)
  {
    unint64_t v25 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    uint64_t v26 = (uint64_t *)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_12C2D88((uint64_t *)(a1 + 120), v26, v25, v24, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v27 = *(_DWORD *)(a1 + 128) + v24;
    *(_DWORD *)(a1 + 128) = v27;
    uint64_t v28 = *(int **)(a1 + 136);
    if (*v28 < v27) {
      int *v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 152);
  if (v29)
  {
    unint64_t v30 = (uint64_t *)(*(void *)(a2 + 160) + 8);
    uint64_t v31 = (uint64_t *)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_12C2E14((uint64_t *)(a1 + 144), v31, v30, v29, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v32 = *(_DWORD *)(a1 + 152) + v29;
    *(_DWORD *)(a1 + 152) = v32;
    uint64_t v33 = *(int **)(a1 + 160);
    if (*v33 < v32) {
      int *v33 = v32;
    }
  }
  int v34 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v34) {
    goto LABEL_78;
  }
  if (v34)
  {
    uint64_t v35 = (long long *)(*(void *)(a2 + 168) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v36 = *(void *)(a1 + 8);
    uint64_t v37 = (uint64_t *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
    if (v36) {
      uint64_t v37 = (uint64_t *)*v37;
    }
    sub_1881DF4((std::string **)(a1 + 168), v35, v37);
    if ((v34 & 2) == 0)
    {
LABEL_22:
      if ((v34 & 4) == 0) {
        goto LABEL_23;
      }
      goto LABEL_35;
    }
  }
  else if ((v34 & 2) == 0)
  {
    goto LABEL_22;
  }
  unint64_t v38 = (long long *)(*(void *)(a2 + 176) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v39 = *(void *)(a1 + 8);
  uint64_t v40 = (uint64_t *)(v39 & 0xFFFFFFFFFFFFFFFCLL);
  if (v39) {
    uint64_t v40 = (uint64_t *)*v40;
  }
  sub_1881DF4((std::string **)(a1 + 176), v38, v40);
  if ((v34 & 4) == 0)
  {
LABEL_23:
    if ((v34 & 8) == 0) {
      goto LABEL_24;
    }
    goto LABEL_38;
  }
LABEL_35:
  uint64_t v41 = (long long *)(*(void *)(a2 + 184) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v42 = *(void *)(a1 + 8);
  long long v43 = (uint64_t *)(v42 & 0xFFFFFFFFFFFFFFFCLL);
  if (v42) {
    long long v43 = (uint64_t *)*v43;
  }
  sub_1881DF4((std::string **)(a1 + 184), v41, v43);
  if ((v34 & 8) == 0)
  {
LABEL_24:
    if ((v34 & 0x10) == 0) {
      goto LABEL_25;
    }
    goto LABEL_46;
  }
LABEL_38:
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v44 = *(std::string **)(a1 + 192);
  if (!v44)
  {
    uint64_t v45 = *(void *)(a1 + 8);
    uint64_t v46 = (void *)(v45 & 0xFFFFFFFFFFFFFFFCLL);
    if (v45) {
      uint64_t v46 = (void *)*v46;
    }
    uint64_t v44 = (std::string *)sub_15C2014((uint64_t)v46);
    *(void *)(a1 + 192) = v44;
  }
  if (*(void *)(a2 + 192)) {
    int v47 = *(uint64_t (****)())(a2 + 192);
  }
  else {
    int v47 = &off_253F530;
  }
  sub_1113E40(v44, (uint64_t)v47);
  if ((v34 & 0x10) == 0)
  {
LABEL_25:
    if ((v34 & 0x20) == 0) {
      goto LABEL_26;
    }
LABEL_54:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v52 = *(void *)(a1 + 208);
    if (!v52)
    {
      uint64_t v53 = *(void *)(a1 + 8);
      unint64_t v54 = (void *)(v53 & 0xFFFFFFFFFFFFFFFCLL);
      if (v53) {
        unint64_t v54 = (void *)*v54;
      }
      uint64_t v52 = sub_1283F94((uint64_t)v54);
      *(void *)(a1 + 208) = v52;
    }
    if (*(void *)(a2 + 208)) {
      uint64_t v55 = *(uint64_t (****)())(a2 + 208);
    }
    else {
      uint64_t v55 = &off_252F8A0;
    }
    sub_12629B8(v52, (uint64_t)v55);
    if ((v34 & 0x40) == 0)
    {
LABEL_27:
      if ((v34 & 0x80) == 0) {
        goto LABEL_78;
      }
      goto LABEL_70;
    }
    goto LABEL_62;
  }
LABEL_46:
  *(_DWORD *)(a1 + 16) |= 0x10u;
  uint64_t v48 = *(void *)(a1 + 200);
  if (!v48)
  {
    uint64_t v49 = *(void *)(a1 + 8);
    int v50 = (void *)(v49 & 0xFFFFFFFFFFFFFFFCLL);
    if (v49) {
      int v50 = (void *)*v50;
    }
    uint64_t v48 = sub_147818C((uint64_t)v50);
    *(void *)(a1 + 200) = v48;
  }
  if (*(void *)(a2 + 200)) {
    int v51 = *(uint64_t (****)())(a2 + 200);
  }
  else {
    int v51 = &off_2538EE0;
  }
  sub_144F19C(v48, (uint64_t)v51);
  if ((v34 & 0x20) != 0) {
    goto LABEL_54;
  }
LABEL_26:
  if ((v34 & 0x40) == 0) {
    goto LABEL_27;
  }
LABEL_62:
  *(_DWORD *)(a1 + 16) |= 0x40u;
  uint64_t v56 = *(void *)(a1 + 216);
  if (!v56)
  {
    uint64_t v57 = *(void *)(a1 + 8);
    uint64_t v58 = (void *)(v57 & 0xFFFFFFFFFFFFFFFCLL);
    if (v57) {
      uint64_t v58 = (void *)*v58;
    }
    sub_1284584((uint64_t)v58);
    *(void *)(a1 + 216) = v56;
  }
  if (*(void *)(a2 + 216)) {
    uint64_t v59 = *(uint64_t (****)())(a2 + 216);
  }
  else {
    uint64_t v59 = &off_252FA30;
  }
  sub_1262BAC(v56, (uint64_t)v59);
  if ((v34 & 0x80) != 0)
  {
LABEL_70:
    *(_DWORD *)(a1 + 16) |= 0x80u;
    uint64_t v60 = *(void *)(a1 + 224);
    if (!v60)
    {
      uint64_t v61 = *(void *)(a1 + 8);
      uint64_t v62 = (void *)(v61 & 0xFFFFFFFFFFFFFFFCLL);
      if (v61) {
        uint64_t v62 = (void *)*v62;
      }
      uint64_t v60 = sub_178CDA8((uint64_t)v62);
      *(void *)(a1 + 224) = v60;
    }
    if (*(void *)(a2 + 224)) {
      uint64_t v63 = *(uint64_t (****)())(a2 + 224);
    }
    else {
      uint64_t v63 = &off_25486C0;
    }
    sub_1760D4C(v60, (uint64_t)v63);
  }
LABEL_78:
  if ((v34 & 0xFF00) == 0) {
    goto LABEL_152;
  }
  if ((v34 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x100u;
    uint64_t v64 = *(std::string **)(a1 + 232);
    if (!v64)
    {
      uint64_t v65 = *(void *)(a1 + 8);
      BOOL v66 = (void *)(v65 & 0xFFFFFFFFFFFFFFFCLL);
      if (v65) {
        BOOL v66 = (void *)*v66;
      }
      uint64_t v64 = (std::string *)sub_1283D90((uint64_t)v66);
      *(void *)(a1 + 232) = v64;
    }
    if (*(void *)(a2 + 232)) {
      int v67 = *(uint64_t (****)(uint64_t))(a2 + 232);
    }
    else {
      int v67 = &off_252F7F8;
    }
    sub_126792C(v64, (uint64_t)v67);
    if ((v34 & 0x200) == 0)
    {
LABEL_81:
      if ((v34 & 0x400) == 0) {
        goto LABEL_82;
      }
      goto LABEL_104;
    }
  }
  else if ((v34 & 0x200) == 0)
  {
    goto LABEL_81;
  }
  *(_DWORD *)(a1 + 16) |= 0x200u;
  uint64_t v68 = *(std::string **)(a1 + 240);
  if (!v68)
  {
    uint64_t v69 = *(void *)(a1 + 8);
    uint64_t v70 = (void *)(v69 & 0xFFFFFFFFFFFFFFFCLL);
    if (v69) {
      uint64_t v70 = (void *)*v70;
    }
    sub_1791234((uint64_t)v70);
    *(void *)(a1 + 240) = v68;
  }
  if (*(void *)(a2 + 240)) {
    int v71 = *(uint64_t (****)())(a2 + 240);
  }
  else {
    int v71 = &off_25496B0;
  }
  sub_1701678(v68, (uint64_t)v71);
  if ((v34 & 0x400) == 0)
  {
LABEL_82:
    if ((v34 & 0x800) == 0) {
      goto LABEL_83;
    }
    goto LABEL_112;
  }
LABEL_104:
  *(_DWORD *)(a1 + 16) |= 0x400u;
  uint64_t v72 = *(void **)(a1 + 248);
  if (!v72)
  {
    uint64_t v73 = *(void *)(a1 + 8);
    uint64_t v74 = (void *)(v73 & 0xFFFFFFFFFFFFFFFCLL);
    if (v73) {
      uint64_t v74 = (void *)*v74;
    }
    uint64_t v72 = sub_1283738((uint64_t)v74);
    *(void *)(a1 + 248) = v72;
  }
  if (*(void *)(a2 + 248)) {
    int v75 = *(uint64_t (****)())(a2 + 248);
  }
  else {
    int v75 = &off_252F4A8;
  }
  sub_1263D3C((uint64_t)v72, (uint64_t)v75);
  if ((v34 & 0x800) == 0)
  {
LABEL_83:
    if ((v34 & 0x1000) == 0) {
      goto LABEL_84;
    }
    goto LABEL_120;
  }
LABEL_112:
  *(_DWORD *)(a1 + 16) |= 0x800u;
  uint64_t v76 = *(void *)(a1 + 256);
  if (!v76)
  {
    uint64_t v77 = *(void *)(a1 + 8);
    uint64_t v78 = (void *)(v77 & 0xFFFFFFFFFFFFFFFCLL);
    if (v77) {
      uint64_t v78 = (void *)*v78;
    }
    uint64_t v76 = sub_130BE18((uint64_t)v78);
    *(void *)(a1 + 256) = v76;
  }
  if (*(void *)(a2 + 256)) {
    unint64_t v79 = *(uint64_t (****)())(a2 + 256);
  }
  else {
    unint64_t v79 = &off_2532528;
  }
  sub_1308194(v76, (uint64_t)v79);
  if ((v34 & 0x1000) == 0)
  {
LABEL_84:
    if ((v34 & 0x2000) == 0) {
      goto LABEL_85;
    }
    goto LABEL_128;
  }
LABEL_120:
  *(_DWORD *)(a1 + 16) |= 0x1000u;
  uint64_t v80 = *(std::string **)(a1 + 264);
  if (!v80)
  {
    uint64_t v81 = *(void *)(a1 + 8);
    int v82 = (void *)(v81 & 0xFFFFFFFFFFFFFFFCLL);
    if (v81) {
      int v82 = (void *)*v82;
    }
    uint64_t v80 = (std::string *)sub_1283BA0((uint64_t)v82);
    *(void *)(a1 + 264) = v80;
  }
  if (*(void *)(a2 + 264)) {
    uint64_t v83 = *(uint64_t (****)(uint64_t))(a2 + 264);
  }
  else {
    uint64_t v83 = &off_252F770;
  }
  sub_1267A24(v80, (uint64_t)v83);
  if ((v34 & 0x2000) == 0)
  {
LABEL_85:
    if ((v34 & 0x4000) == 0) {
      goto LABEL_86;
    }
    goto LABEL_136;
  }
LABEL_128:
  *(_DWORD *)(a1 + 16) |= 0x2000u;
  int v84 = *(std::string **)(a1 + 272);
  if (!v84)
  {
    uint64_t v85 = *(void *)(a1 + 8);
    v86 = (void *)(v85 & 0xFFFFFFFFFFFFFFFCLL);
    if (v85) {
      v86 = (void *)*v86;
    }
    int v84 = (std::string *)sub_1479E98((uint64_t)v86);
    *(void *)(a1 + 272) = v84;
  }
  if (*(void *)(a2 + 272)) {
    v87 = *(uint64_t (****)())(a2 + 272);
  }
  else {
    v87 = &off_2539C90;
  }
  sub_12329D0(v84, (uint64_t)v87);
  if ((v34 & 0x4000) == 0)
  {
LABEL_86:
    if ((v34 & 0x8000) == 0) {
      goto LABEL_152;
    }
    goto LABEL_144;
  }
LABEL_136:
  *(_DWORD *)(a1 + 16) |= 0x4000u;
  unint64_t v88 = *(void **)(a1 + 280);
  if (!v88)
  {
    uint64_t v89 = *(void *)(a1 + 8);
    int v90 = (void *)(v89 & 0xFFFFFFFFFFFFFFFCLL);
    if (v89) {
      int v90 = (void *)*v90;
    }
    unint64_t v88 = sub_1284F78((uint64_t)v90);
    *(void *)(a1 + 280) = v88;
  }
  if (*(void *)(a2 + 280)) {
    v91 = *(uint64_t (****)())(a2 + 280);
  }
  else {
    v91 = &off_252FF30;
  }
  sub_1267B68((uint64_t)v88, (uint64_t)v91);
  if ((v34 & 0x8000) != 0)
  {
LABEL_144:
    *(_DWORD *)(a1 + 16) |= 0x8000u;
    v92 = *(std::string **)(a1 + 288);
    if (!v92)
    {
      uint64_t v93 = *(void *)(a1 + 8);
      int v94 = (void *)(v93 & 0xFFFFFFFFFFFFFFFCLL);
      if (v93) {
        int v94 = (void *)*v94;
      }
      sub_1283A8C((uint64_t)v94);
      *(void *)(a1 + 288) = v92;
    }
    if (*(void *)(a2 + 288)) {
      uint64_t v95 = *(uint64_t (****)(uint64_t))(a2 + 288);
    }
    else {
      uint64_t v95 = &off_252F728;
    }
    sub_1267C50(v92, (uint64_t)v95);
  }
LABEL_152:
  if ((v34 & 0x3F0000) == 0) {
    goto LABEL_161;
  }
  if ((v34 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x10000u;
    uint64_t v97 = *(void *)(a1 + 296);
    if (!v97)
    {
      uint64_t v98 = *(void *)(a1 + 8);
      uint64_t v99 = (void *)(v98 & 0xFFFFFFFFFFFFFFFCLL);
      if (v98) {
        uint64_t v99 = (void *)*v99;
      }
      sub_1283984((uint64_t)v99);
      *(void *)(a1 + 296) = v97;
    }
    if (*(void *)(a2 + 296)) {
      int v100 = *(uint64_t (****)())(a2 + 296);
    }
    else {
      int v100 = &off_252F688;
    }
    sub_1267D9C(v97, (uint64_t)v100);
    if ((v34 & 0x20000) == 0)
    {
LABEL_155:
      if ((v34 & 0x40000) == 0) {
        goto LABEL_156;
      }
      goto LABEL_174;
    }
  }
  else if ((v34 & 0x20000) == 0)
  {
    goto LABEL_155;
  }
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  if ((v34 & 0x40000) == 0)
  {
LABEL_156:
    if ((v34 & 0x80000) == 0) {
      goto LABEL_157;
    }
    goto LABEL_175;
  }
LABEL_174:
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  if ((v34 & 0x80000) == 0)
  {
LABEL_157:
    if ((v34 & 0x100000) == 0) {
      goto LABEL_158;
    }
LABEL_176:
    *(_DWORD *)(a1 + 328) = *(_DWORD *)(a2 + 328);
    if ((v34 & 0x200000) == 0) {
      goto LABEL_160;
    }
    goto LABEL_159;
  }
LABEL_175:
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  if ((v34 & 0x100000) != 0) {
    goto LABEL_176;
  }
LABEL_158:
  if ((v34 & 0x200000) != 0) {
LABEL_159:
  }
    *(_DWORD *)(a1 + 332) = *(_DWORD *)(a2 + 332);
LABEL_160:
  *(_DWORD *)(a1 + 16) |= v34;
LABEL_161:
  uint64_t v96 = *(void *)(a2 + 8);
  if (v96)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v96 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_125F5E8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_125F634(*(void *)(a1 + 40));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_125F6C8(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_125F634(uint64_t a1)
{
  uint64_t result = sub_11C2A6C(a1 + 72);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 16);
    if ((v3 & 2) != 0)
    {
      uint64_t result = sub_1263268(*(void *)(a1 + 128));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 16);
    }
    if ((v3 & 4) != 0)
    {
      uint64_t result = sub_12632C0(*(void *)(a1 + 136));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 16);
    }
    if ((v3 & 8) != 0)
    {
      uint64_t result = sub_126330C(*(void *)(a1 + 144));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 16);
    }
    if ((v3 & 0x10) != 0)
    {
      uint64_t result = sub_1263380(*(void *)(a1 + 152));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 16);
    }
    if ((v3 & 0x40) == 0) {
      return 1;
    }
    uint64_t result = sub_12633EC(*(void *)(a1 + 168));
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_125F6C8(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_162BBCC(*(void *)(*(void *)(a1 + 64) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v5 = *(unsigned int *)(a1 + 80);
  while ((int)v5 >= 1)
  {
    uint64_t v6 = v5 - 1;
    char v7 = sub_16320B4(*(void *)(*(void *)(a1 + 88) + 8 * v5));
    uint64_t v5 = v6;
    if ((v7 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v8 = *(unsigned int *)(a1 + 128);
  while ((int)v8 >= 1)
  {
    uint64_t v9 = v8 - 1;
    char v10 = sub_126C298(*(void *)(*(void *)(a1 + 136) + 8 * v8));
    uint64_t v8 = v9;
    if ((v10 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v11 = *(unsigned int *)(a1 + 152);
  while ((int)v11 >= 1)
  {
    uint64_t v12 = v11 - 1;
    char v13 = sub_1263EB8(*(void *)(*(void *)(a1 + 160) + 8 * v11));
    uint64_t v11 = v12;
    if ((v13 & 1) == 0) {
      return 0;
    }
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 8) != 0)
  {
    uint64_t result = sub_15BA3C8(*(void *)(a1 + 192));
    if (!result) {
      return result;
    }
    int v15 = *(_DWORD *)(a1 + 16);
  }
  if ((v15 & 0x10) != 0)
  {
    uint64_t result = sub_144F8A4(*(void *)(a1 + 200));
    if (!result) {
      return result;
    }
    int v15 = *(_DWORD *)(a1 + 16);
  }
  if ((v15 & 0x20) != 0)
  {
    uint64_t result = sub_1263380(*(void *)(a1 + 208));
    if (!result) {
      return result;
    }
    int v15 = *(_DWORD *)(a1 + 16);
  }
  if ((v15 & 0x40) != 0)
  {
    uint64_t result = sub_12633EC(*(void *)(a1 + 216));
    if (!result) {
      return result;
    }
    int v15 = *(_DWORD *)(a1 + 16);
  }
  if ((v15 & 0x80) != 0)
  {
    uint64_t result = sub_17612D4(*(void *)(a1 + 224));
    if (!result) {
      return result;
    }
    int v15 = *(_DWORD *)(a1 + 16);
  }
  if ((v15 & 0x400) != 0)
  {
    uint64_t result = sub_1263EB8(*(void *)(a1 + 248));
    if (!result) {
      return result;
    }
    int v15 = *(_DWORD *)(a1 + 16);
  }
  if ((v15 & 0x800) != 0)
  {
    uint64_t result = sub_13085E8(*(void *)(a1 + 256));
    if (!result) {
      return result;
    }
    int v15 = *(_DWORD *)(a1 + 16);
  }
  if ((v15 & 0x4000) != 0)
  {
    uint64_t v16 = *(void *)(a1 + 280);
    if (*(unsigned char *)(v16 + 16))
    {
      uint64_t result = sub_12813B0(*(void *)(v16 + 24));
      if (!result) {
        return result;
      }
      int v15 = *(_DWORD *)(a1 + 16);
    }
  }
  if ((v15 & 0x10000) == 0) {
    return 1;
  }
  uint64_t result = sub_12680E8(*(void *)(a1 + 296));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_125F850@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.Problem");
}

uint64_t sub_125F860(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_252F398 && *(void *)(a1 + 32))
  {
    sub_15B0994();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_125F92C(uint64_t a1)
{
  sub_125F860(a1);

  operator delete();
}

unsigned char *sub_125F964(unsigned char *result)
{
  uint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *((void *)result + 3) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_15B09D0(*((void *)result + 4));
  }
LABEL_7:
  if ((v2 & 0x1C) != 0)
  {
    *((void *)v1 + 5) = 0;
    *((void *)v1 + 6) = 0;
    *((void *)v1 + 7) = 0;
  }
  char v5 = v1[8];
  char v4 = v1 + 8;
  *((_DWORD *)v4 + 2) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_125FA08(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v24 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v24 + 1);
    unsigned int v9 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v24, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v24 + 2);
      }
    }
    *(void *)int v24 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_26;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        char v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          char v13 = (uint64_t *)*v13;
        }
        int v14 = (std::string *)sub_1880F84((void *)(a1 + 24), v13);
        int v15 = (void *)sub_188C244(v14, *(char **)v24, (uint64_t)a3);
        goto LABEL_33;
      case 2u:
        if (v9 != 17) {
          goto LABEL_26;
        }
        uint64_t v17 = *(void *)v8;
        uint64_t v16 = v8 + 8;
        v5 |= 4u;
        *(void *)(a1 + 40) = v17;
        goto LABEL_25;
      case 3u:
        if (v9 != 26) {
          goto LABEL_26;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 32);
        if (!v18)
        {
          int v19 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v19 = (void *)*v19;
          }
          uint64_t v18 = sub_15C1918((uint64_t)v19);
          *(void *)(a1 + 32) = v18;
          uint64_t v8 = *(unsigned __int8 **)v24;
        }
        int v15 = sub_1198F14(a3, v18, v8);
        goto LABEL_33;
      case 4u:
        if (v9 != 33) {
          goto LABEL_26;
        }
        uint64_t v20 = *(void *)v8;
        uint64_t v16 = v8 + 8;
        v5 |= 8u;
        *(void *)(a1 + 48) = v20;
        goto LABEL_25;
      case 5u:
        if (v9 != 41) {
          goto LABEL_26;
        }
        uint64_t v21 = *(void *)v8;
        uint64_t v16 = v8 + 8;
        v5 |= 0x10u;
        *(void *)(a1 + 56) = v21;
LABEL_25:
        *(void *)int v24 = v16;
        goto LABEL_34;
      default:
LABEL_26:
        if (v9) {
          BOOL v22 = (v9 & 7) == 4;
        }
        else {
          BOOL v22 = 1;
        }
        if (!v22)
        {
          if (*v7)
          {
            unint64_t v23 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v24;
          }
          int v15 = sub_1885AC0(v9, v23, (char *)v8, a3);
LABEL_33:
          *(void *)int v24 = v15;
          if (!v15) {
            goto LABEL_39;
          }
LABEL_34:
          if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_39:
        }
          *(void *)int v24 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v24;
    }
  }
}

unsigned char *sub_125FC64(uint64_t a1, unsigned char *__dst, void *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 40);
  *char v4 = 17;
  *(void *)(v4 + 1) = v7;
  v4 += 9;
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_11:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v8 = *(void *)(a1 + 32);
  *char v4 = 26;
  unsigned int v9 = *(_DWORD *)(v8 + 44);
  v4[1] = v9;
  if (v9 > 0x7F) {
    unsigned int v10 = sub_188A9CC(v9, v4 + 1);
  }
  else {
    unsigned int v10 = v4 + 2;
  }
  char v4 = sub_15B0C0C(v8, v10, a3);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_23;
    }
    goto LABEL_20;
  }
LABEL_17:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v11 = *(void *)(a1 + 48);
  *char v4 = 33;
  *(void *)(v4 + 1) = v11;
  v4 += 9;
  if ((v6 & 0x10) != 0)
  {
LABEL_20:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v12 = *(void *)(a1 + 56);
    *char v4 = 41;
    *(void *)(v4 + 1) = v12;
    v4 += 9;
  }
LABEL_23:
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_125FE5C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x1F) == 0)
  {
    uint64_t result = 0;
    goto LABEL_17;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v7 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      uint64_t v7 = v6;
    }
    uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
  }
  uint64_t v8 = sub_15B0D90(*(void *)(a1 + 32));
  v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  uint64_t v9 = v3 + 9;
  if ((v2 & 4) == 0) {
    uint64_t v9 = v3;
  }
  if ((v2 & 8) != 0) {
    v9 += 9;
  }
  if ((v2 & 0x10) != 0) {
    uint64_t result = v9 + 9;
  }
  else {
    uint64_t result = v9;
  }
LABEL_17:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v11 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    result += v12;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_125FF68(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_24;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void *)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_15C1918((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_253F1A0;
    }
    sub_15B0E24(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_25;
    }
LABEL_24:
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      goto LABEL_8;
    }
LABEL_25:
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1260098(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 32));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_12600C4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.ProblemCorrections.PhotoWithMetadata");
}

void *sub_12600D4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1260184((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_12C1FB4(a1 + 12);
  sub_12C1F34(a1 + 9);
  sub_1889DE8(a1 + 6);
  sub_12C1EB4(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_1260184(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 120);
  uint64_t result = (void ***)(a1 + 120);
  if (v3 != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_252F3D8)
  {
    uint64_t v4 = *(void *)(a1 + 128);
    if (v4)
    {
      sub_126FAB0(v4);
      operator delete();
    }
    uint64_t v5 = *(void *)(a1 + 136);
    if (v5)
    {
      sub_126EF50(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 144);
    if (v6)
    {
      sub_12705EC(v6);
      operator delete();
    }
    uint64_t v7 = *(void **)(a1 + 152);
    if (v7)
    {
      sub_126DC88(v7);
      operator delete();
    }
    uint64_t v8 = *(void **)(a1 + 160);
    if (v8)
    {
      sub_12780EC(v8);
      operator delete();
    }
    uint64_t v9 = *(void *)(a1 + 168);
    if (v9)
    {
      sub_1274708(v9);
      operator delete();
    }
    uint64_t v10 = *(void *)(a1 + 176);
    if (v10)
    {
      sub_1263F14(v10);
      operator delete();
    }
    uint64_t v11 = *(void *)(a1 + 184);
    if (v11)
    {
      sub_126453C(v11);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 192);
    if (result)
    {
      sub_1269120(result);
      operator delete();
    }
  }
  return result;
}

void sub_1260308(void *a1)
{
  sub_12600D4(a1);

  operator delete();
}

uint64_t sub_1260340(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1272680(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 0xF) == 0) {
    goto LABEL_11;
  }
  if (v5)
  {
    unint64_t v8 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_21;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_21;
      }
    }
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
  if ((v5 & 2) == 0) {
    goto LABEL_8;
  }
LABEL_21:
  unint64_t v9 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v9 + 23) < 0)
  {
    **(unsigned char **)unint64_t v9 = 0;
    *(void *)(v9 + 8) = 0;
    if ((v5 & 4) != 0) {
      goto LABEL_25;
    }
LABEL_9:
    if ((v5 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  *(unsigned char *)unint64_t v9 = 0;
  *(unsigned char *)(v9 + 23) = 0;
  if ((v5 & 4) == 0) {
    goto LABEL_9;
  }
LABEL_25:
  uint64_t result = (uint64_t)sub_15B16B4(*(unsigned char **)(v1 + 64));
  if ((v5 & 8) != 0) {
LABEL_10:
  }
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(v1 + 72));
LABEL_11:
  if ((v5 & 0x30) != 0)
  {
    *(unsigned char *)(v1 + 88) = 0;
    *(void *)(v1 + 80) = 0;
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

unsigned char *sub_1260464(unsigned char *result)
{
  uint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_15B09D0(*((void *)result + 3));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_15B09D0(*((void *)v1 + 4));
    }
  }
  char v4 = v1[8];
  uint64_t v3 = v1 + 8;
  *((_DWORD *)v3 + 2) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_12604D4(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_18;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_18;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_19:
    uint64_t result = sub_13F04AC(*(void *)(v1 + 40));
    if ((v2 & 8) == 0)
    {
LABEL_6:
      if ((v2 & 0x10) == 0) {
        goto LABEL_8;
      }
      goto LABEL_7;
    }
    goto LABEL_20;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_18:
  uint64_t result = sub_1464034(*(void *)(result + 32));
  if ((v2 & 4) != 0) {
    goto LABEL_19;
  }
LABEL_5:
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_20:
  uint64_t result = sub_182B368(*(void *)(v1 + 48));
  if ((v2 & 0x10) != 0) {
LABEL_7:
  }
    uint64_t result = sub_182E7F4(*(void *)(v1 + 56));
LABEL_8:
  if ((v2 & 0x60) != 0) {
    *(void *)(v1 + 64) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

unsigned char *sub_12605AC(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if (v3)
  {
    unint64_t v6 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_16;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_16;
      }
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_20:
    uint64_t result = sub_15B09D0(*(void *)(a1 + 64));
    if ((v3 & 8) == 0)
    {
LABEL_6:
      if ((v3 & 0x10) == 0) {
        goto LABEL_8;
      }
      goto LABEL_7;
    }
    goto LABEL_21;
  }
  if ((v3 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_16:
  unint64_t v7 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v7 + 23) < 0)
  {
    **(unsigned char **)unint64_t v7 = 0;
    *(void *)(v7 + 8) = 0;
    if ((v3 & 4) != 0) {
      goto LABEL_20;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    if ((v3 & 4) != 0) {
      goto LABEL_20;
    }
  }
LABEL_5:
  if ((v3 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_21:
  uint64_t result = sub_15B16B4(*(unsigned char **)(a1 + 72));
  if ((v3 & 0x10) != 0) {
LABEL_7:
  }
    uint64_t result = sub_179212C(*(unsigned char **)(a1 + 80));
LABEL_8:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 80) = 0;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_12606A8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_12606D0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1627DF0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    unint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_162D688(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 80);
  if ((int)v8 >= 1)
  {
    unint64_t v9 = (unsigned char **)(*(void *)(v1 + 88) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = (uint64_t)sub_1273654(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 80) = 0;
  }
  uint64_t v11 = *(unsigned int *)(v1 + 104);
  if ((int)v11 >= 1)
  {
    uint64_t v12 = (uint64_t *)(*(void *)(v1 + 112) + 8);
    do
    {
      uint64_t v13 = *v12++;
      uint64_t result = sub_1338118(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(v1 + 104) = 0;
  }
  uint64_t v14 = *(unsigned int *)(v1 + 128);
  if ((int)v14 >= 1)
  {
    unint64_t v15 = (uint64_t *)(*(void *)(v1 + 136) + 8);
    do
    {
      uint64_t v16 = *v15++;
      uint64_t result = sub_12779F4(v16);
      --v14;
    }
    while (v14);
    *(_DWORD *)(v1 + 128) = 0;
  }
  uint64_t v17 = *(unsigned int *)(v1 + 152);
  if ((int)v17 >= 1)
  {
    uint64_t v18 = (unsigned char **)(*(void *)(v1 + 160) + 8);
    do
    {
      int v19 = *v18++;
      uint64_t result = (uint64_t)sub_1276378(v19);
      --v17;
    }
    while (v17);
    *(_DWORD *)(v1 + 152) = 0;
  }
  int v20 = *(_DWORD *)(v1 + 16);
  if ((v20 & 0x1F) == 0) {
    goto LABEL_32;
  }
  if ((v20 & 1) == 0)
  {
    if ((v20 & 2) == 0) {
      goto LABEL_28;
    }
LABEL_42:
    unint64_t v24 = *(void *)(v1 + 176) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v24 + 23) < 0)
    {
      **(unsigned char **)unint64_t v24 = 0;
      *(void *)(v24 + 8) = 0;
      if ((v20 & 4) != 0) {
        goto LABEL_46;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v24 = 0;
      *(unsigned char *)(v24 + 23) = 0;
      if ((v20 & 4) != 0) {
        goto LABEL_46;
      }
    }
LABEL_29:
    if ((v20 & 8) == 0) {
      goto LABEL_30;
    }
    goto LABEL_50;
  }
  unint64_t v23 = *(void *)(v1 + 168) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v23 + 23) < 0)
  {
    **(unsigned char **)unint64_t v23 = 0;
    *(void *)(v23 + 8) = 0;
    if ((v20 & 2) != 0) {
      goto LABEL_42;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v23 = 0;
    *(unsigned char *)(v23 + 23) = 0;
    if ((v20 & 2) != 0) {
      goto LABEL_42;
    }
  }
LABEL_28:
  if ((v20 & 4) == 0) {
    goto LABEL_29;
  }
LABEL_46:
  unint64_t v25 = *(void *)(v1 + 184) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v25 + 23) < 0)
  {
    **(unsigned char **)unint64_t v25 = 0;
    *(void *)(v25 + 8) = 0;
    if ((v20 & 8) != 0) {
      goto LABEL_50;
    }
LABEL_30:
    if ((v20 & 0x10) == 0) {
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  *(unsigned char *)unint64_t v25 = 0;
  *(unsigned char *)(v25 + 23) = 0;
  if ((v20 & 8) == 0) {
    goto LABEL_30;
  }
LABEL_50:
  uint64_t result = sub_12748A4(*(void *)(v1 + 192));
  if ((v20 & 0x10) != 0) {
LABEL_31:
  }
    uint64_t result = sub_12748A4(*(void *)(v1 + 200));
LABEL_32:
  if ((v20 & 0xE0) != 0)
  {
    *(void *)(v1 + 208) = 0;
    *(void *)(v1 + 216) = 0;
  }
  char v22 = *(unsigned char *)(v1 + 8);
  uint64_t v21 = v1 + 8;
  *(_DWORD *)(v21 + 216) = 0;
  *(_DWORD *)(v21 + 8) = 0;
  if (v22)
  {
    return sub_188B4AC((uint64_t *)v21);
  }
  return result;
}

uint64_t sub_12608F0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0) {
    goto LABEL_22;
  }
  if ((v1 & 1) == 0)
  {
    if ((v1 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_11:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      if ((v1 & 4) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
      if ((v1 & 4) != 0) {
        goto LABEL_15;
      }
    }
LABEL_5:
    if ((v1 & 8) == 0) {
      goto LABEL_22;
    }
LABEL_19:
    unint64_t v5 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
    goto LABEL_22;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v2 + 23) < 0)
  {
    **(unsigned char **)unint64_t v2 = 0;
    *(void *)(v2 + 8) = 0;
    if ((v1 & 2) != 0) {
      goto LABEL_11;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    if ((v1 & 2) != 0) {
      goto LABEL_11;
    }
  }
LABEL_4:
  if ((v1 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_15:
  unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v4 + 23) < 0)
  {
    **(unsigned char **)unint64_t v4 = 0;
    *(void *)(v4 + 8) = 0;
    if ((v1 & 8) == 0) {
      goto LABEL_22;
    }
    goto LABEL_19;
  }
  *(unsigned char *)unint64_t v4 = 0;
  *(unsigned char *)(v4 + 23) = 0;
  if ((v1 & 8) != 0) {
    goto LABEL_19;
  }
LABEL_22:
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v7) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_12609DC(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_1700B04(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

uint64_t sub_1260A38(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(unsigned char *)(result + 18) = 0;
  *(_WORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1260A54(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v75 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v75, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  uint64_t v8 = (uint64_t **)(a1 + 48);
  while (2)
  {
    unint64_t v9 = (unsigned __int8 *)(*(void *)v75 + 1);
    unsigned int v10 = **(unsigned char **)v75;
    if ((char)**(unsigned char **)v75 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        unint64_t v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v75, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        unint64_t v9 = (unsigned __int8 *)(*(void *)v75 + 2);
      }
    }
    *(void *)int v75 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_121;
        }
        uint64_t v13 = v9 - 1;
        while (1)
        {
          uint64_t v14 = v13 + 1;
          *(void *)int v75 = v13 + 1;
          unint64_t v15 = *(_DWORD **)(a1 + 40);
          if (v15 && (uint64_t v16 = *(int *)(a1 + 32), (int)v16 < *v15))
          {
            *(_DWORD *)(a1 + 32) = v16 + 1;
            uint64_t v17 = *(void *)&v15[2 * v16 + 2];
          }
          else
          {
            uint64_t v18 = sub_1283FF0(*(void *)(a1 + 24));
            uint64_t v17 = sub_188CDC8(a1 + 24, v18);
            uint64_t v14 = *(unsigned __int8 **)v75;
          }
          uint64_t v13 = (unsigned __int8 *)sub_12612B0(a3, v17, v14);
          *(void *)int v75 = v13;
          if (!v13) {
            goto LABEL_142;
          }
          if (*(void *)a3 <= (unint64_t)v13 || *v13 != 10) {
            goto LABEL_129;
          }
        }
      case 2u:
        if (v10 != 18) {
          goto LABEL_121;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 128);
        if (!v19)
        {
          int v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v20 = (void *)*v20;
          }
          uint64_t v19 = sub_1284178((uint64_t)v20);
          *(void *)(a1 + 128) = v19;
          unint64_t v9 = *(unsigned __int8 **)v75;
        }
        uint64_t v21 = sub_1261340(a3, v19, v9);
        goto LABEL_128;
      case 3u:
        if (v10 != 26) {
          goto LABEL_121;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        char v22 = *(void **)(a1 + 136);
        if (!v22)
        {
          unint64_t v23 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v23 = (void *)*v23;
          }
          char v22 = sub_1284080((uint64_t)v23);
          *(void *)(a1 + 136) = v22;
          unint64_t v9 = *(unsigned __int8 **)v75;
        }
        uint64_t v21 = (uint64_t)sub_12613D0(a3, (uint64_t)v22, v9);
        goto LABEL_128;
      case 4u:
        if (v10 != 34) {
          goto LABEL_121;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v24 = *(void *)(a1 + 144);
        if (!v24)
        {
          unint64_t v25 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v25 = (void *)*v25;
          }
          sub_1284228((uint64_t)v25);
          uint64_t v24 = v26;
          *(void *)(a1 + 144) = v26;
          unint64_t v9 = *(unsigned __int8 **)v75;
        }
        uint64_t v21 = sub_1261460(a3, v24, v9);
        goto LABEL_128;
      case 5u:
        if (v10 != 42) {
          goto LABEL_121;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v27 = *(void *)(a1 + 152);
        if (!v27)
        {
          uint64_t v28 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v28 = (void *)*v28;
          }
          uint64_t v27 = sub_1283F94((uint64_t)v28);
          *(void *)(a1 + 152) = v27;
          unint64_t v9 = *(unsigned __int8 **)v75;
        }
        uint64_t v21 = sub_12614F0(a3, v27, v9);
        goto LABEL_128;
      case 6u:
        if (v10 != 50) {
          goto LABEL_121;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v29 = *(void *)(a1 + 8);
        unint64_t v30 = (uint64_t *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
        if (v29) {
          unint64_t v30 = (uint64_t *)*v30;
        }
        uint64_t v31 = (std::string *)sub_1880F84((void *)(a1 + 120), v30);
        uint64_t v21 = (uint64_t)sub_188C244(v31, *(char **)v75, (uint64_t)a3);
        goto LABEL_128;
      case 7u:
        if (v10 != 58) {
          goto LABEL_121;
        }
        int v32 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          uint64_t v33 = (char *)(v32 + 1);
          *(void *)int v75 = v32 + 1;
          int v34 = *(_DWORD **)(a1 + 64);
          if (v34 && (uint64_t v35 = *(int *)(a1 + 56), (int)v35 < *v34))
          {
            *(_DWORD *)(a1 + 56) = v35 + 1;
            uint64_t v36 = *(std::string **)&v34[2 * v35 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            *unint64_t v38 = v37;
            v38[1] = sub_3A6EDC;
            *uint64_t v37 = 0;
            v37[1] = 0;
            v37[2] = 0;
            uint64_t v36 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v37);
            uint64_t v33 = *(char **)v75;
          }
          int v32 = sub_188C244(v36, v33, (uint64_t)a3);
          *(void *)int v75 = v32;
          if (!v32) {
            goto LABEL_142;
          }
          if (*(void *)a3 <= (unint64_t)v32 || *v32 != 58) {
            goto LABEL_129;
          }
        }
      case 8u:
        if (v10 != 66) {
          goto LABEL_121;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v39 = *(void *)(a1 + 160);
        if (!v39)
        {
          uint64_t v40 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v40 = (void *)*v40;
          }
          uint64_t v39 = sub_128481C((uint64_t)v40);
          *(void *)(a1 + 160) = v39;
          unint64_t v9 = *(unsigned __int8 **)v75;
        }
        uint64_t v21 = (uint64_t)sub_1261580(a3, v39, v9);
        goto LABEL_128;
      case 9u:
        if (v10 != 74) {
          goto LABEL_121;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v41 = *(void *)(a1 + 168);
        if (!v41)
        {
          uint64_t v42 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v42 = (void *)*v42;
          }
          sub_1284584((uint64_t)v42);
          uint64_t v41 = v43;
          *(void *)(a1 + 168) = v43;
          unint64_t v9 = *(unsigned __int8 **)v75;
        }
        uint64_t v21 = sub_1261610(a3, v41, v9);
        goto LABEL_128;
      case 0xAu:
        if (v10 != 82) {
          goto LABEL_121;
        }
        uint64_t v44 = v9 - 1;
        while (1)
        {
          uint64_t v45 = v44 + 1;
          *(void *)int v75 = v44 + 1;
          uint64_t v46 = *(_DWORD **)(a1 + 88);
          if (v46 && (uint64_t v47 = *(int *)(a1 + 80), (int)v47 < *v46))
          {
            *(_DWORD *)(a1 + 80) = v47 + 1;
            uint64_t v48 = *(void *)&v46[2 * v47 + 2];
          }
          else
          {
            sub_12835E0(*(void *)(a1 + 72));
            uint64_t v48 = sub_188CDC8(a1 + 72, v49);
            uint64_t v45 = *(unsigned __int8 **)v75;
          }
          uint64_t v44 = (unsigned __int8 *)sub_12616A0(a3, v48, v45);
          *(void *)int v75 = v44;
          if (!v44) {
            goto LABEL_142;
          }
          if (*(void *)a3 <= (unint64_t)v44 || *v44 != 82) {
            goto LABEL_129;
          }
        }
      case 0xBu:
        if (v10 != 90) {
          goto LABEL_121;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        int v50 = *(void **)(a1 + 176);
        if (!v50)
        {
          int v51 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v51 = (void *)*v51;
          }
          int v50 = sub_12837C0((uint64_t)v51);
          *(void *)(a1 + 176) = v50;
          unint64_t v9 = *(unsigned __int8 **)v75;
        }
        uint64_t v21 = sub_1261730(a3, (uint64_t)v50, v9);
        goto LABEL_128;
      case 0xCu:
        if (v10 != 98) {
          goto LABEL_121;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        uint64_t v52 = *(void **)(a1 + 184);
        if (!v52)
        {
          uint64_t v53 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v53 = (void *)*v53;
          }
          uint64_t v52 = sub_1283848((uint64_t)v53);
          *(void *)(a1 + 184) = v52;
          unint64_t v9 = *(unsigned __int8 **)v75;
        }
        uint64_t v21 = (uint64_t)sub_12617C0(a3, (uint64_t)v52, v9);
        goto LABEL_128;
      case 0xDu:
        if (v10 != 104) {
          goto LABEL_121;
        }
        unint64_t v54 = (char *)(v9 + 1);
        unint64_t v55 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_97;
        }
        int v56 = *v54;
        int v57 = v55 + (v56 << 7);
        unint64_t v55 = (v57 - 128);
        if (v56 < 0)
        {
          *(void *)int v75 = sub_188C138((uint64_t)v9, (v57 - 128));
          if (!*(void *)v75) {
            goto LABEL_142;
          }
          unint64_t v55 = v71;
        }
        else
        {
          unint64_t v54 = (char *)(v9 + 2);
LABEL_97:
          *(void *)int v75 = v54;
        }
        if (v55 > 3)
        {
          if (*v7) {
            uint64_t v74 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v74 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(13, v55, v74);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x400u;
          *(_DWORD *)(a1 + 200) = v55;
        }
        goto LABEL_129;
      case 0xEu:
        if (v10 != 112) {
          goto LABEL_121;
        }
        v5 |= 0x800u;
        uint64_t v58 = (char *)(v9 + 1);
        uint64_t v59 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_104;
        }
        int v60 = *v58;
        uint64_t v59 = v59 + (v60 << 7) - 128;
        if (v60 < 0)
        {
          uint64_t v72 = sub_188C138((uint64_t)v9, v59);
          *(void *)int v75 = v72;
          *(unsigned char *)(a1 + 204) = v73 != 0;
          if (!v72) {
            goto LABEL_142;
          }
        }
        else
        {
          uint64_t v58 = (char *)(v9 + 2);
LABEL_104:
          *(void *)int v75 = v58;
          *(unsigned char *)(a1 + 204) = v59 != 0;
        }
        goto LABEL_129;
      case 0xFu:
        if (v10 != 122) {
          goto LABEL_121;
        }
        uint64_t v61 = (char *)(v9 - 1);
        while (1)
        {
          uint64_t v62 = (unsigned __int8 *)(v61 + 1);
          *(void *)int v75 = v61 + 1;
          uint64_t v63 = *(_DWORD **)(a1 + 112);
          if (v63 && (uint64_t v64 = *(int *)(a1 + 104), (int)v64 < *v63))
          {
            *(_DWORD *)(a1 + 104) = v64 + 1;
            uint64_t v65 = *(void *)&v63[2 * v64 + 2];
          }
          else
          {
            BOOL v66 = sub_12840FC(*(void *)(a1 + 96));
            uint64_t v65 = sub_188CDC8(a1 + 96, (uint64_t)v66);
            uint64_t v62 = *(unsigned __int8 **)v75;
          }
          uint64_t v61 = sub_1261850(a3, v65, v62);
          *(void *)int v75 = v61;
          if (!v61) {
            goto LABEL_142;
          }
          if (*(void *)a3 <= (unint64_t)v61 || *v61 != 122) {
            goto LABEL_129;
          }
        }
      case 0x10u:
        if (v10 != 130) {
          goto LABEL_121;
        }
        *(_DWORD *)(a1 + 16) |= 0x200u;
        uint64_t v67 = *(void *)(a1 + 192);
        if (!v67)
        {
          uint64_t v68 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v68 = (void *)*v68;
          }
          uint64_t v67 = sub_1283A10((uint64_t)v68);
          *(void *)(a1 + 192) = v67;
          unint64_t v9 = *(unsigned __int8 **)v75;
        }
        uint64_t v21 = (uint64_t)sub_12618E0(a3, v67, v9);
        goto LABEL_128;
      default:
LABEL_121:
        if (v10) {
          BOOL v69 = (v10 & 7) == 4;
        }
        else {
          BOOL v69 = 1;
        }
        if (!v69)
        {
          if (*v7)
          {
            uint64_t v70 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v70 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v9 = *(unsigned __int8 **)v75;
          }
          uint64_t v21 = (uint64_t)sub_1885AC0(v10, v70, (char *)v9, a3);
LABEL_128:
          *(void *)int v75 = v21;
          if (!v21) {
            goto LABEL_142;
          }
LABEL_129:
          if (sub_11947B8((uint64_t)a3, (char **)v75, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_142:
        }
          *(void *)int v75 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v75;
    }
  }
}

uint64_t sub_12612B0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_126E788(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1261340(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_126FBFC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12613D0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_126F058(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1261460(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_127078C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12614F0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_126DE24(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1261580(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1278198(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1261610(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1274998(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12616A0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_125FA08(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1261730(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_126402C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12617C0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_126462C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1261850(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_126F548(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12618E0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12691CC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1261970(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_126EAC0(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if ((v11 & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v18 = *(void *)(a1 + 128);
    *__dst = 18;
    unsigned int v19 = *(_DWORD *)(v18 + 20);
    __dst[1] = v19;
    if (v19 > 0x7F) {
      int v20 = sub_188A9CC(v19, __dst + 1);
    }
    else {
      int v20 = __dst + 2;
    }
    __dst = sub_1270080(v18, v20, a3);
    if ((v11 & 4) == 0)
    {
LABEL_11:
      if ((v11 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_60;
    }
  }
  else if ((v11 & 4) == 0)
  {
    goto LABEL_11;
  }
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v24 = *(void *)(a1 + 136);
  *__dst = 26;
  unsigned int v25 = *(_DWORD *)(v24 + 20);
  __dst[1] = v25;
  if (v25 > 0x7F) {
    uint64_t v26 = sub_188A9CC(v25, __dst + 1);
  }
  else {
    uint64_t v26 = __dst + 2;
  }
  __dst = sub_126F20C(v24, (unint64_t)v26, a3);
  if ((v11 & 8) == 0)
  {
LABEL_12:
    if ((v11 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_72;
  }
LABEL_60:
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v35 = *(void *)(a1 + 144);
  *__dst = 34;
  unsigned int v36 = *(_DWORD *)(v35 + 20);
  __dst[1] = v36;
  if (v36 > 0x7F) {
    uint64_t v37 = sub_188A9CC(v36, __dst + 1);
  }
  else {
    uint64_t v37 = __dst + 2;
  }
  __dst = sub_1270B40(v35, (unint64_t)v37, a3);
  if ((v11 & 0x10) == 0)
  {
LABEL_13:
    if ((v11 & 1) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_72:
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v41 = *(void *)(a1 + 152);
  *__dst = 42;
  unsigned int v42 = *(_DWORD *)(v41 + 44);
  __dst[1] = v42;
  if (v42 > 0x7F) {
    uint64_t v43 = sub_188A9CC(v42, __dst + 1);
  }
  else {
    uint64_t v43 = __dst + 2;
  }
  __dst = sub_126E168(v41, v43, a3);
  if (v11) {
LABEL_14:
  }
    __dst = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL), __dst);
LABEL_15:
  uint64_t v12 = *(unsigned int *)(a1 + 56);
  if ((int)v12 >= 1)
  {
    uint64_t v13 = 0;
    uint64_t v14 = 8 * v12;
    do
    {
      __dst = (char *)sub_125CE58(a3, 7, *(void *)(*(void *)(a1 + 64) + v13 + 8), __dst);
      v13 += 8;
    }
    while (v14 != v13);
  }
  if ((v11 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v15 = *(void *)(a1 + 160);
    *__dst = 66;
    unsigned int v16 = *(_DWORD *)(v15 + 20);
    __dst[1] = v16;
    if (v16 > 0x7F) {
      uint64_t v17 = sub_188A9CC(v16, __dst + 1);
    }
    else {
      uint64_t v17 = __dst + 2;
    }
    __dst = sub_12783EC(v15, (unint64_t)v17, a3);
  }
  if ((v11 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v21 = *(void *)(a1 + 168);
    *__dst = 74;
    unsigned int v22 = *(_DWORD *)(v21 + 20);
    __dst[1] = v22;
    if (v22 > 0x7F) {
      unint64_t v23 = sub_188A9CC(v22, __dst + 1);
    }
    else {
      unint64_t v23 = __dst + 2;
    }
    __dst = sub_1275440(v21, v23, a3);
  }
  int v27 = *(_DWORD *)(a1 + 80);
  if (v27)
  {
    for (int j = 0; j != v27; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v29 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *__dst = 82;
      unsigned int v30 = *(_DWORD *)(v29 + 20);
      __dst[1] = v30;
      if (v30 > 0x7F) {
        uint64_t v31 = sub_188A9CC(v30, __dst + 1);
      }
      else {
        uint64_t v31 = __dst + 2;
      }
      __dst = sub_125FC64(v29, v31, a3);
    }
  }
  if ((v11 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v32 = *(void *)(a1 + 176);
    *__dst = 90;
    unsigned int v33 = *(_DWORD *)(v32 + 20);
    __dst[1] = v33;
    if (v33 > 0x7F) {
      int v34 = sub_188A9CC(v33, __dst + 1);
    }
    else {
      int v34 = __dst + 2;
    }
    __dst = sub_126427C(v32, v34, a3);
    if ((v11 & 0x100) == 0)
    {
LABEL_52:
      if ((v11 & 0x400) == 0) {
        goto LABEL_87;
      }
      goto LABEL_78;
    }
  }
  else if ((v11 & 0x100) == 0)
  {
    goto LABEL_52;
  }
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v38 = *(void *)(a1 + 184);
  *__dst = 98;
  unsigned int v39 = *(_DWORD *)(v38 + 20);
  __dst[1] = v39;
  if (v39 > 0x7F) {
    uint64_t v40 = sub_188A9CC(v39, __dst + 1);
  }
  else {
    uint64_t v40 = __dst + 2;
  }
  __dst = sub_1264814(v38, (unint64_t)v40, a3);
  if ((v11 & 0x400) != 0)
  {
LABEL_78:
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v44 = *(int *)(a1 + 200);
    *__dst = 104;
    __dst[1] = v44;
    if (v44 > 0x7F)
    {
      __dst[1] = v44 | 0x80;
      unint64_t v45 = v44 >> 7;
      __dst[2] = v44 >> 7;
      __dst += 3;
      if (v44 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v46 = v45 >> 14;
          v45 >>= 7;
          *__dst++ = v45;
        }
        while (v46);
      }
    }
    else
    {
      __dst += 2;
    }
  }
LABEL_87:
  if ((v11 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v47 = *(unsigned char *)(a1 + 204);
    *__dst = 112;
    __dst[1] = v47;
    __dst += 2;
  }
  int v48 = *(_DWORD *)(a1 + 104);
  if (v48)
  {
    for (int k = 0; k != v48; ++k)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v50 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      *__dst = 122;
      unsigned int v51 = *(_DWORD *)(v50 + 20);
      __dst[1] = v51;
      if (v51 > 0x7F) {
        uint64_t v52 = sub_188A9CC(v51, __dst + 1);
      }
      else {
        uint64_t v52 = __dst + 2;
      }
      __dst = sub_126F800(v50, (unint64_t)v52, a3);
    }
  }
  if ((v11 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v53 = *(void *)(a1 + 192);
    *(_WORD *)__dst = 386;
    unsigned int v54 = *(_DWORD *)(v53 + 20);
    __dst[2] = v54;
    if (v54 > 0x7F) {
      unint64_t v55 = sub_188A9CC(v54, __dst + 2);
    }
    else {
      unint64_t v55 = __dst + 3;
    }
    __dst = sub_1269450(v53, (unint64_t)v55, a3);
  }
  uint64_t v56 = *(void *)(a1 + 8);
  if ((v56 & 1) == 0) {
    return __dst;
  }
  unint64_t v58 = v56 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v58 + 31) < 0)
  {
    uint64_t v59 = *(void **)(v58 + 8);
    uint64_t v60 = *(void *)(v58 + 16);
  }
  else
  {
    uint64_t v59 = (void *)(v58 + 8);
    LODWORD(v60) = *(unsigned __int8 *)(v58 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v60)
  {
    uint64_t v61 = (int)v60;
    memcpy(__dst, v59, (int)v60);
    __dst += v61;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v59, v60, __dst);
}

uint64_t sub_1262078(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    unint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    unint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_126EC90(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  if ((int)v8 >= 1)
  {
    unsigned int v10 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v9 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      --v8;
    }
    while (v8);
  }
  uint64_t v14 = *(int *)(a1 + 80);
  uint64_t v15 = v9 + v14;
  uint64_t v16 = *(void *)(a1 + 88);
  if (v16) {
    uint64_t v17 = (uint64_t *)(v16 + 8);
  }
  else {
    uint64_t v17 = 0;
  }
  if (v14)
  {
    uint64_t v18 = 8 * v14;
    do
    {
      uint64_t v19 = *v17++;
      uint64_t v20 = sub_125FE5C(v19);
      v15 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6);
      v18 -= 8;
    }
    while (v18);
  }
  uint64_t v21 = *(int *)(a1 + 104);
  uint64_t v22 = v15 + v21;
  uint64_t v23 = *(void *)(a1 + 112);
  if (v23) {
    uint64_t v24 = (uint64_t *)(v23 + 8);
  }
  else {
    uint64_t v24 = 0;
  }
  if (v21)
  {
    uint64_t v25 = 8 * v21;
    do
    {
      uint64_t v26 = *v24++;
      uint64_t v27 = sub_126F998(v26);
      v22 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6);
      v25 -= 8;
    }
    while (v25);
  }
  int v28 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v28) {
    goto LABEL_36;
  }
  if (v28)
  {
    unint64_t v35 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v36 = *(unsigned __int8 *)(v35 + 23);
    uint64_t v37 = *(void *)(v35 + 8);
    if ((v36 & 0x80u) == 0) {
      uint64_t v37 = v36;
    }
    v22 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v28 & 2) == 0)
    {
LABEL_29:
      if ((v28 & 4) == 0) {
        goto LABEL_30;
      }
      goto LABEL_52;
    }
  }
  else if ((v28 & 2) == 0)
  {
    goto LABEL_29;
  }
  uint64_t v38 = sub_1270390(*(void *)(a1 + 128));
  v22 += v38 + ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v28 & 4) == 0)
  {
LABEL_30:
    if ((v28 & 8) == 0) {
      goto LABEL_31;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t v39 = sub_126F38C(*(void *)(a1 + 136));
  v22 += v39 + ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v28 & 8) == 0)
  {
LABEL_31:
    if ((v28 & 0x10) == 0) {
      goto LABEL_32;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t v40 = sub_1270EB8(*(void *)(a1 + 144));
  v22 += v40 + ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v28 & 0x10) == 0)
  {
LABEL_32:
    if ((v28 & 0x20) == 0) {
      goto LABEL_33;
    }
LABEL_55:
    uint64_t v42 = sub_127860C(*(void *)(a1 + 160));
    v22 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v28 & 0x40) == 0)
    {
LABEL_34:
      if ((v28 & 0x80) == 0) {
        goto LABEL_36;
      }
      goto LABEL_35;
    }
    goto LABEL_56;
  }
LABEL_54:
  uint64_t v41 = sub_126E400(*(void *)(a1 + 152));
  v22 += v41 + ((9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v28 & 0x20) != 0) {
    goto LABEL_55;
  }
LABEL_33:
  if ((v28 & 0x40) == 0) {
    goto LABEL_34;
  }
LABEL_56:
  uint64_t v43 = sub_1275B34(*(void *)(a1 + 168));
  v22 += v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v28 & 0x80) != 0)
  {
LABEL_35:
    uint64_t v29 = sub_12643B8(*(void *)(a1 + 176));
    v22 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_36:
  if ((v28 & 0xF00) == 0) {
    goto LABEL_46;
  }
  if ((v28 & 0x100) == 0)
  {
    if ((v28 & 0x200) == 0) {
      goto LABEL_39;
    }
LABEL_59:
    uint64_t v45 = sub_12695B0(*(void *)(a1 + 192));
    v22 += v45 + ((9 * (__clz(v45 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v28 & 0x400) == 0) {
      goto LABEL_44;
    }
    goto LABEL_40;
  }
  uint64_t v44 = sub_1264924(*(void *)(a1 + 184));
  v22 += v44 + ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v28 & 0x200) != 0) {
    goto LABEL_59;
  }
LABEL_39:
  if ((v28 & 0x400) == 0) {
    goto LABEL_44;
  }
LABEL_40:
  int v30 = *(_DWORD *)(a1 + 200);
  uint64_t v31 = ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v30 >= 0) {
    uint64_t v32 = v31;
  }
  else {
    uint64_t v32 = 11;
  }
  v22 += v32;
LABEL_44:
  if ((v28 & 0x800) != 0) {
    v22 += 2;
  }
LABEL_46:
  uint64_t v33 = *(void *)(a1 + 8);
  if (v33)
  {
    unint64_t v46 = v33 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v46 + 31) < 0) {
      uint64_t v47 = *(void *)(v46 + 16);
    }
    else {
      uint64_t v47 = *(unsigned __int8 *)(v46 + 31);
    }
    v22 += v47;
  }
  *(_DWORD *)(a1 + 20) = v22;
  return v22;
}

void sub_1262494(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C2FA8((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0x3F) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 48), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_23;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    uint64_t v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    sub_1881DF4((std::string **)(a1 + 56), v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_31;
    }
LABEL_23:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v17 = *(void *)(a1 + 64);
    if (!v17)
    {
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v19 = (void *)*v19;
      }
      uint64_t v17 = sub_15C19EC((uint64_t)v19);
      *(void *)(a1 + 64) = v17;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v20 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      uint64_t v20 = &off_253F208;
    }
    sub_15B1E3C(v17, (uint64_t)v20);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_39;
    }
LABEL_31:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v21 = *(void *)(a1 + 72);
    if (!v21)
    {
      uint64_t v22 = *(void *)(a1 + 8);
      uint64_t v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        uint64_t v23 = (void *)*v23;
      }
      uint64_t v21 = sub_15C1918((uint64_t)v23);
      *(void *)(a1 + 72) = v21;
    }
    if (*(void *)(a2 + 72)) {
      uint64_t v24 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      uint64_t v24 = &off_253F1A0;
    }
    sub_15B0E24(v21, (uint64_t)v24);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0)
      {
LABEL_12:
        *(_DWORD *)(a1 + 16) |= v9;
        goto LABEL_13;
      }
LABEL_11:
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      goto LABEL_12;
    }
LABEL_39:
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    if ((v9 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_13:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_12626AC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v5 = *(void *)(a1 + 24);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        int v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          int v7 = (void *)*v7;
        }
        uint64_t v5 = sub_15C1918((uint64_t)v7);
        *(void *)(a1 + 24) = v5;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v8 = &off_253F1A0;
      }
      sub_15B0E24(v5, (uint64_t)v8);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v9 = *(void *)(a1 + 32);
      if (!v9)
      {
        uint64_t v10 = *(void *)(a1 + 8);
        uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          uint64_t v11 = (void *)*v11;
        }
        uint64_t v9 = sub_15C1918((uint64_t)v11);
        *(void *)(a1 + 32) = v9;
      }
      if (*(void *)(a2 + 32)) {
        uint64_t v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        uint64_t v12 = &off_253F1A0;
      }
      sub_15B0E24(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_12627A8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x7F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      int v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_26;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void *)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      sub_1478F54((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_2539528;
    }
    sub_146945C(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_34;
    }
LABEL_26:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v14 = *(void *)(a1 + 40);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      sub_147937C((uint64_t)v16);
      *(void *)(a1 + 40) = v14;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v17 = &off_25398D0;
    }
    sub_13F17EC(v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_42;
    }
LABEL_34:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v18 = *(void *)(a1 + 48);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        uint64_t v20 = (void *)*v20;
      }
      uint64_t v18 = sub_1836E54((uint64_t)v20);
      *(void *)(a1 + 48) = v18;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v21 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v21 = &off_254CA18;
    }
    sub_182C88C(v18, (uint64_t)v21);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_50;
    }
LABEL_42:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v22 = *(void *)(a1 + 56);
    if (!v22)
    {
      uint64_t v23 = *(void *)(a1 + 8);
      uint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        uint64_t v24 = (void *)*v24;
      }
      uint64_t v22 = sub_1836F0C((uint64_t)v24);
      *(void *)(a1 + 56) = v22;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v25 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v25 = &off_254CB28;
    }
    sub_182FC60(v22, (uint64_t)v25);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0)
      {
LABEL_10:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_11;
      }
LABEL_9:
      *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
      goto LABEL_10;
    }
LABEL_50:
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_12629B8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      int v7 = (std::string **)(a1 + 48);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_20;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v11 = *(void *)(a1 + 8);
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 56), v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_28;
    }
LABEL_20:
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v13 = *(void *)(a1 + 64);
    if (!v13)
    {
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (void *)*v15;
      }
      uint64_t v13 = sub_15C1918((uint64_t)v15);
      *(void *)(a1 + 64) = v13;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v16 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      uint64_t v16 = &off_253F1A0;
    }
    sub_15B0E24(v13, (uint64_t)v16);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_36;
    }
LABEL_28:
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v17 = *(void *)(a1 + 72);
    if (!v17)
    {
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v19 = (void *)*v19;
      }
      uint64_t v17 = sub_15C19EC((uint64_t)v19);
      *(void *)(a1 + 72) = v17;
    }
    if (*(void *)(a2 + 72)) {
      uint64_t v20 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      uint64_t v20 = &off_253F208;
    }
    sub_15B1E3C(v17, (uint64_t)v20);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0)
      {
LABEL_9:
        *(_DWORD *)(a1 + 40) |= v4;
        goto LABEL_10;
      }
LABEL_8:
      *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
      goto LABEL_9;
    }
LABEL_36:
    *(_DWORD *)(a1 + 40) |= 0x10u;
    uint64_t v21 = *(void **)(a1 + 80);
    if (!v21)
    {
      uint64_t v22 = *(void *)(a1 + 8);
      uint64_t v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        uint64_t v23 = (void *)*v23;
      }
      uint64_t v21 = sub_18302C8((uint64_t)v23);
      *(void *)(a1 + 80) = v21;
    }
    if (*(void *)(a2 + 80)) {
      uint64_t v24 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      uint64_t v24 = &off_2549800;
    }
    sub_1792730((uint64_t)v21, (uint64_t)v24);
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_1262BAC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C2BE4((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C2C70((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_12C312C((uint64_t *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    uint64_t v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 104);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v21 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_12C31B8((uint64_t *)(a1 + 96), v21, v20, v19, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v22 = *(_DWORD *)(a1 + 104) + v19;
    *(_DWORD *)(a1 + 104) = v22;
    uint64_t v23 = *(int **)(a1 + 112);
    if (*v23 < v22) {
      int *v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 128);
  if (v24)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    uint64_t v26 = (std::string **)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_12C3244((std::string *)(a1 + 120), v26, v25, v24, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v27 = *(_DWORD *)(a1 + 128) + v24;
    *(_DWORD *)(a1 + 128) = v27;
    int v28 = *(int **)(a1 + 136);
    if (*v28 < v27) {
      int *v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 152);
  if (v29)
  {
    int v30 = (uint64_t *)(*(void *)(a2 + 160) + 8);
    uint64_t v31 = (uint64_t *)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_12C32D0((uint64_t *)(a1 + 144), v31, v30, v29, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v32 = *(_DWORD *)(a1 + 152) + v29;
    *(_DWORD *)(a1 + 152) = v32;
    uint64_t v33 = *(int **)(a1 + 160);
    if (*v33 < v32) {
      int *v33 = v32;
    }
  }
  int v34 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v34)
  {
    if (v34)
    {
      unint64_t v35 = (long long *)(*(void *)(a2 + 168) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v36 = *(void *)(a1 + 8);
      uint64_t v37 = (uint64_t *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
      if (v36) {
        uint64_t v37 = (uint64_t *)*v37;
      }
      sub_1881DF4((std::string **)(a1 + 168), v35, v37);
      if ((v34 & 2) == 0)
      {
LABEL_22:
        if ((v34 & 4) == 0) {
          goto LABEL_33;
        }
        goto LABEL_30;
      }
    }
    else if ((v34 & 2) == 0)
    {
      goto LABEL_22;
    }
    uint64_t v38 = (long long *)(*(void *)(a2 + 176) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v39 = *(void *)(a1 + 8);
    uint64_t v40 = (uint64_t *)(v39 & 0xFFFFFFFFFFFFFFFCLL);
    if (v39) {
      uint64_t v40 = (uint64_t *)*v40;
    }
    sub_1881DF4((std::string **)(a1 + 176), v38, v40);
    if ((v34 & 4) == 0)
    {
LABEL_33:
      if ((v34 & 8) != 0)
      {
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v46 = *(void *)(a1 + 192);
        if (!v46)
        {
          uint64_t v47 = *(void *)(a1 + 8);
          int v48 = (void *)(v47 & 0xFFFFFFFFFFFFFFFCLL);
          if (v47) {
            int v48 = (void *)*v48;
          }
          uint64_t v46 = sub_12846F4((uint64_t)v48);
          *(void *)(a1 + 192) = v46;
        }
        if (*(void *)(a2 + 192)) {
          uint64_t v49 = *(uint64_t (****)())(a2 + 192);
        }
        else {
          uint64_t v49 = &off_252FB60;
        }
        sub_1275F68(v46, (uint64_t)v49);
        if ((v34 & 0x10) == 0)
        {
LABEL_35:
          if ((v34 & 0x20) == 0) {
            goto LABEL_36;
          }
          goto LABEL_62;
        }
      }
      else if ((v34 & 0x10) == 0)
      {
        goto LABEL_35;
      }
      *(_DWORD *)(a1 + 16) |= 0x10u;
      uint64_t v50 = *(void *)(a1 + 200);
      if (!v50)
      {
        uint64_t v51 = *(void *)(a1 + 8);
        uint64_t v52 = (void *)(v51 & 0xFFFFFFFFFFFFFFFCLL);
        if (v51) {
          uint64_t v52 = (void *)*v52;
        }
        uint64_t v50 = sub_12846F4((uint64_t)v52);
        *(void *)(a1 + 200) = v50;
      }
      if (*(void *)(a2 + 200)) {
        uint64_t v53 = *(uint64_t (****)())(a2 + 200);
      }
      else {
        uint64_t v53 = &off_252FB60;
      }
      sub_1275F68(v50, (uint64_t)v53);
      if ((v34 & 0x20) == 0)
      {
LABEL_36:
        if ((v34 & 0x40) == 0) {
          goto LABEL_37;
        }
        goto LABEL_63;
      }
LABEL_62:
      *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
      if ((v34 & 0x40) == 0)
      {
LABEL_37:
        if ((v34 & 0x80) == 0)
        {
LABEL_39:
          *(_DWORD *)(a1 + 16) |= v34;
          goto LABEL_40;
        }
LABEL_38:
        *(void *)(a1 + 216) = *(void *)(a2 + 216);
        goto LABEL_39;
      }
LABEL_63:
      *(_DWORD *)(a1 + 212) = *(_DWORD *)(a2 + 212);
      if ((v34 & 0x80) == 0) {
        goto LABEL_39;
      }
      goto LABEL_38;
    }
LABEL_30:
    uint64_t v41 = (long long *)(*(void *)(a2 + 184) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v42 = *(void *)(a1 + 8);
    uint64_t v43 = (uint64_t *)(v42 & 0xFFFFFFFFFFFFFFFCLL);
    if (v42) {
      uint64_t v43 = (uint64_t *)*v43;
    }
    sub_1881DF4((std::string **)(a1 + 184), v41, v43);
    goto LABEL_33;
  }
LABEL_40:
  if ((v34 & 0x100) != 0)
  {
    int v44 = *(_DWORD *)(a2 + 224);
    *(_DWORD *)(a1 + 16) |= 0x100u;
    *(_DWORD *)(a1 + 224) = v44;
  }
  uint64_t v45 = *(void *)(a2 + 8);
  if (v45)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v45 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_1263010(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) == 0) {
    goto LABEL_19;
  }
  if (v4)
  {
    uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    uint64_t v6 = (std::string **)&result[1];
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    uint64_t v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    uint64_t result = sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_13;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  int v9 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
  std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
  uint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
  if (v10) {
    uint64_t v11 = (uint64_t *)*v11;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v9, v11);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_19;
    }
    goto LABEL_16;
  }
LABEL_13:
  int v12 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
  std::string::size_type v13 = v3->__r_.__value_.__l.__size_;
  int v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
  if (v13) {
    int v14 = (uint64_t *)*v14;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v12, v14);
  if ((v4 & 8) != 0)
  {
LABEL_16:
    uint64_t v15 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::size_type v16 = v3->__r_.__value_.__l.__size_;
    int v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
    if (v16) {
      int v17 = (uint64_t *)*v17;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2], v15, v17);
  }
LABEL_19:
  uint64_t v18 = *(void *)(a2 + 8);
  if (v18)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v18 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_126315C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  if (*(unsigned char *)(a2 + 16))
  {
    int v4 = *(uint64_t (****)())(a2 + 24);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    data = (std::string *)result[1].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      int v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        int v7 = (void *)*v7;
      }
      sub_1791234((uint64_t)v7);
      v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      int v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      uint64_t v8 = v4;
    }
    else {
      uint64_t v8 = &off_25496B0;
    }
    uint64_t result = sub_1701678(data, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_1263204(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_7;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_10:
    result[1].__r_.__value_.__s.__data_[1] = *(unsigned char *)(a2 + 25);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  result[1].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 24);
  if ((v2 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v2 & 4) != 0) {
LABEL_5:
  }
    result[1].__r_.__value_.__s.__data_[2] = *(unsigned char *)(a2 + 26);
LABEL_6:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_7:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1263268(uint64_t a1)
{
  uint64_t result = sub_1270578(a1 + 24);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 16);
    if ((v3 & 4) != 0)
    {
      uint64_t result = sub_15B1FC0(*(void *)(a1 + 64));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 16);
    }
    if ((v3 & 8) == 0) {
      return 1;
    }
    uint64_t result = sub_15B0F18(*(void *)(a1 + 72));
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_12632C0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_15B0F18(*(void *)(a1 + 24));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 32));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_126330C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_146A1C8(*(void *)(a1 + 32));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_13F1C1C(*(void *)(a1 + 40));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) != 0)
  {
    uint64_t result = sub_182D83C(*(void *)(a1 + 48));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x10) == 0) {
    return 1;
  }
  uint64_t result = sub_18300B0(*(void *)(a1 + 56));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_1263380(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if ((v3 & 4) != 0)
    {
      uint64_t result = sub_15B0F18(*(void *)(a1 + 64));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 8) != 0)
    {
      uint64_t result = sub_15B1FC0(*(void *)(a1 + 72));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x10) == 0) {
      return 1;
    }
    uint64_t result = sub_1792864(*(void *)(a1 + 80));
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_12633EC(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_162BBCC(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v5 = *(unsigned int *)(a1 + 56);
  while ((int)v5 >= 1)
  {
    uint64_t v6 = v5 - 1;
    char v7 = sub_16320B4(*(void *)(*(void *)(a1 + 64) + 8 * v5));
    uint64_t v5 = v6;
    if ((v7 & 1) == 0) {
      return 0;
    }
  }
  uint64_t result = sub_1276150(a1 + 72);
  if (result)
  {
    uint64_t v9 = *(unsigned int *)(a1 + 104);
    while ((int)v9 >= 1)
    {
      uint64_t v10 = v9 - 1;
      char v11 = sub_133A164(*(void *)(*(void *)(a1 + 112) + 8 * v9));
      uint64_t v9 = v10;
      if ((v11 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v12 = *(unsigned int *)(a1 + 152);
    while ((int)v12 >= 1)
    {
      uint64_t v13 = v12 - 1;
      char v14 = sub_1276EC8(*(void *)(*(void *)(a1 + 160) + 8 * v12));
      uint64_t v12 = v13;
      if ((v14 & 1) == 0) {
        return 0;
      }
    }
    int v15 = *(_DWORD *)(a1 + 16);
    if ((v15 & 8) != 0)
    {
      uint64_t result = sub_12761C0(*(void *)(a1 + 192));
      if (!result) {
        return result;
      }
      int v15 = *(_DWORD *)(a1 + 16);
    }
    if ((v15 & 0x10) == 0) {
      return 1;
    }
    uint64_t result = sub_12761C0(*(void *)(a1 + 200));
    if (result) {
      return 1;
    }
  }
  return result;
}

__n128 sub_12634E8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)a2 = v2;
  *(void *)(a2 + 8) = v3;
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v5;
  uint64_t v6 = a1[4];
  uint64_t v7 = a1[5];
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  *(void *)(a2 + 32) = v6;
  *(void *)(a2 + 40) = v7;
  uint64_t v8 = a1[6];
  uint64_t v9 = a1[7];
  __n128 result = *(__n128 *)(a2 + 48);
  *((__n128 *)a1 + 3) = result;
  *(void *)(a2 + 48) = v8;
  *(void *)(a2 + 56) = v9;
  uint64_t v11 = a1[8];
  a1[8] = *(void *)(a2 + 64);
  *(void *)(a2 + 64) = v11;
  LODWORD(v11) = *((_DWORD *)a1 + 18);
  *((_DWORD *)a1 + 18) = *(_DWORD *)(a2 + 72);
  *(_DWORD *)(a2 + 72) = v11;
  LOBYTE(v11) = *((unsigned char *)a1 + 76);
  *((unsigned char *)a1 + 76) = *(unsigned char *)(a2 + 76);
  *(unsigned char *)(a2 + 76) = v11;
  return result;
}

void *sub_126355C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.ProblemCorrections");
}

uint64_t sub_126356C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if ((uint64_t (***)())a1 != &off_252F4A8)
  {
    uint64_t v6 = *(void *)(a1 + 40);
    if (v6)
    {
      sub_182B32C(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 48);
    if (v7)
    {
      sub_182E7B8(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1263674(uint64_t a1)
{
  sub_126356C(a1);

  operator delete();
}

uint64_t sub_12636AC(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_7;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_15:
  unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_19;
    }
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  *(unsigned char *)unint64_t v6 = 0;
  *(unsigned char *)(v6 + 23) = 0;
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_19:
  __n128 result = sub_182B368(*(void *)(result + 40));
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    __n128 result = sub_182E7F4(*(void *)(v1 + 48));
LABEL_7:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_126378C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
    return *(void *)v23;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v23 + 1);
    unsigned int v8 = **(unsigned char **)v23;
    if ((char)**(unsigned char **)v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v23 + 2);
      }
    }
    *(void *)uint64_t v23 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v11 = *(void *)(a1 + 40);
        if (!v11)
        {
          uint64_t v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v12 = (void *)*v12;
          }
          uint64_t v11 = sub_1836E54((uint64_t)v12);
          *(void *)(a1 + 40) = v11;
          uint64_t v7 = *(unsigned __int8 **)v23;
        }
        uint64_t v13 = sub_11798C8(a3, v11, v7);
        goto LABEL_37;
      case 2u:
        if (v8 != 18) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v14 = *(void *)(a1 + 48);
        if (!v14)
        {
          int v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v15 = (void *)*v15;
          }
          uint64_t v14 = sub_1836F0C((uint64_t)v15);
          *(void *)(a1 + 48) = v14;
          uint64_t v7 = *(unsigned __int8 **)v23;
        }
        uint64_t v13 = sub_1179958(a3, v14, v7);
        goto LABEL_37;
      case 3u:
        if (v8 != 26) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v16 = *(void *)(a1 + 8);
        int v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          int v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 24);
        goto LABEL_29;
      case 4u:
        if (v8 != 34) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 8);
        int v17 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          int v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 32);
LABEL_29:
        uint64_t v20 = (std::string *)sub_1880F84(v18, v17);
        uint64_t v13 = (uint64_t)sub_188C244(v20, *(char **)v23, (uint64_t)a3);
        goto LABEL_37;
      default:
LABEL_30:
        if (v8) {
          BOOL v21 = (v8 & 7) == 4;
        }
        else {
          BOOL v21 = 1;
        }
        if (!v21)
        {
          if (*v6)
          {
            int v22 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = *(unsigned __int8 **)v23;
          }
          uint64_t v13 = (uint64_t)sub_1885AC0(v8, v22, (char *)v7, a3);
LABEL_37:
          *(void *)uint64_t v23 = v13;
          if (!v13) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
            return *(void *)v23;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v23;
    }
  }
}

char *sub_1263A04(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v9 = *(void *)(a1 + 40);
    *char v4 = 10;
    unsigned int v10 = *(_DWORD *)(v9 + 44);
    v4[1] = v10;
    if (v10 > 0x7F) {
      uint64_t v11 = sub_188A9CC(v10, v4 + 1);
    }
    else {
      uint64_t v11 = v4 + 2;
    }
    char v4 = sub_182BE50(v9, v11, a3);
    if ((v6 & 8) == 0)
    {
LABEL_3:
      if ((v6 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v12 = *(void *)(a1 + 48);
  *char v4 = 18;
  unsigned int v13 = *(_DWORD *)(v12 + 44);
  v4[1] = v13;
  if (v13 > 0x7F) {
    uint64_t v14 = sub_188A9CC(v13, v4 + 1);
  }
  else {
    uint64_t v14 = v4 + 2;
  }
  char v4 = sub_182F28C(v12, v14, a3);
  if ((v6 & 1) == 0)
  {
LABEL_4:
    if ((v6 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_20:
  char v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 2) != 0) {
LABEL_5:
  }
    char v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_6:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1263BD4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_15;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  uint64_t v13 = sub_182C500(*(void *)(a1 + 40));
  v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0)
  {
LABEL_14:
    uint64_t v10 = sub_182F8B4(*(void *)(a1 + 48));
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_15:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v14 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v3 += v15;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_1263D3C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) == 0) {
    goto LABEL_29;
  }
  if (v4)
  {
    uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v6 = (std::string **)(a1 + 24);
    uint64_t v7 = *(void *)(a1 + 8);
    uint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
    if (v7) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_13;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v9 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
  if (v10) {
    uint64_t v11 = (uint64_t *)*v11;
  }
  sub_1881DF4((std::string **)(a1 + 32), v9, v11);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_29;
    }
    goto LABEL_21;
  }
LABEL_13:
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v12 = *(void *)(a1 + 40);
  if (!v12)
  {
    uint64_t v13 = *(void *)(a1 + 8);
    unint64_t v14 = (void *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
    if (v13) {
      unint64_t v14 = (void *)*v14;
    }
    uint64_t v12 = sub_1836E54((uint64_t)v14);
    *(void *)(a1 + 40) = v12;
  }
  if (*(void *)(a2 + 40)) {
    uint64_t v15 = *(uint64_t (****)())(a2 + 40);
  }
  else {
    uint64_t v15 = &off_254CA18;
  }
  sub_182C88C(v12, (uint64_t)v15);
  if ((v4 & 8) != 0)
  {
LABEL_21:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v16 = *(void *)(a1 + 48);
    if (!v16)
    {
      uint64_t v17 = *(void *)(a1 + 8);
      uint64_t v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        uint64_t v18 = (void *)*v18;
      }
      uint64_t v16 = sub_1836F0C((uint64_t)v18);
      *(void *)(a1 + 48) = v16;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v19 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v19 = &off_254CB28;
    }
    sub_182FC60(v16, (uint64_t)v19);
  }
LABEL_29:
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1263EB8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_182D83C(*(void *)(a1 + 40));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) == 0) {
    return 1;
  }
  uint64_t result = sub_18300B0(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1263F04@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.PlaceInfo");
}

uint64_t sub_1263F14(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_13;
    }
  }
  else if (v4)
  {
    goto LABEL_13;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_13:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1263FF4(uint64_t a1)
{
  sub_1263F14(a1);

  operator delete();
}

uint64_t sub_126402C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)BOOL v21 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v21, a3[11].i32[1])) {
    return *(void *)v21;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (char *)(*(void *)v21 + 1);
    unsigned int v8 = **(unsigned char **)v21;
    if ((char)**(unsigned char **)v21 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v21, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v21 + 2);
      }
    }
    *(void *)BOOL v21 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 24);
        goto LABEL_25;
      case 2u:
        if (v8 != 18) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 32);
        goto LABEL_25;
      case 3u:
        if (v8 != 26) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 40);
        goto LABEL_25;
      case 4u:
        if (v8 != 34) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 48);
LABEL_25:
        uint64_t v17 = (std::string *)sub_1880F84(v13, v12);
        uint64_t v18 = (void *)sub_188C244(v17, *(char **)v21, (uint64_t)a3);
        goto LABEL_26;
      default:
LABEL_29:
        if (v8) {
          BOOL v19 = (v8 & 7) == 4;
        }
        else {
          BOOL v19 = 1;
        }
        if (!v19)
        {
          if (*v6)
          {
            uint64_t v20 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v20 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = *(char **)v21;
          }
          uint64_t v18 = sub_1885AC0(v8, v20, v7, a3);
LABEL_26:
          *(void *)BOOL v21 = v18;
          if (!v18) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, (char **)v21, a3[11].i32[1])) {
            return *(void *)v21;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v21;
    }
  }
}

char *sub_126427C(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_10:
  int v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) != 0) {
LABEL_5:
  }
    int v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_6:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_12643B8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_17;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) == 0)
  {
    if ((v1 & 8) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  unint64_t v14 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
  uint64_t v16 = *(void *)(v14 + 8);
  if ((v15 & 0x80u) == 0) {
    uint64_t v16 = v15;
  }
  v2 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 8) != 0)
  {
LABEL_14:
    unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_17:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v17 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v2 += v18;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1264524()
{
  return 1;
}

void *sub_126452C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.CorrectedGroundModeImagery");
}

uint64_t sub_126453C(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_252F518 && *(void *)(a1 + 24))
  {
    sub_178F1F4();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12645F4(uint64_t a1)
{
  sub_126453C(a1);

  operator delete();
}

char *sub_126462C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v17 = a2;
  if (sub_11947B8((uint64_t)a3, &v17, a3[11].i32[1])) {
    return v17;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v6 = v17 + 1;
    unsigned int v7 = *v17;
    if (*v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        unint64_t v6 = (char *)sub_188C180((uint64_t)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        unint64_t v6 = v17 + 2;
      }
    }
    unint64_t v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13)
    {
      unint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        unint64_t v14 = (void *)*v14;
      }
      sub_1791234((uint64_t)v14);
      uint64_t v13 = v15;
      *(void *)(a1 + 24) = v15;
      unint64_t v6 = v17;
    }
    uint64_t v12 = sub_1264784(a3, v13, (unsigned __int8 *)v6);
LABEL_20:
    unint64_t v17 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v17, a3[11].i32[1])) {
      return v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v6 = v17;
    }
    uint64_t v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v17;
  }
  return 0;
}

char *sub_1264784(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_178F230(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1264814(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *uint64_t v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_178F4EC(v6, (unint64_t)v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1264924(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_178F82C(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

uint64_t sub_12649AC()
{
  return 1;
}

void *sub_12649B4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.CorrectedGroundModePlacecardLocation");
}

double sub_12649C4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)a1 = off_24A09A8;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = a2;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = a2;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = &qword_2550250;
  *(void *)(a1 + 176) = &qword_2550250;
  *(void *)(a1 + 184) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_DWORD *)(a1 + 332) = -1;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 316) = 0u;
  return result;
}

void *sub_1264A50(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1264B1C((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_12C22B4(a1 + 18);
  sub_12C2234(a1 + 15);
  sub_12C21B4(a1 + 12);
  sub_12C2134(a1 + 9);
  sub_12C20B4(a1 + 6);
  sub_12C2034(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_1264B1C(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 168);
  uint64_t v2 = (void ***)(a1 + 168);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 176) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 176));
  }
  double result = (void ***)(a1 + 184);
  if (*(uint64_t **)(a1 + 184) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_252F538)
  {
    if (*(void *)(a1 + 192))
    {
      sub_15B9F30();
      operator delete();
    }
    if (*(void *)(a1 + 200))
    {
      sub_144D350();
      operator delete();
    }
    unint64_t v5 = *(void **)(a1 + 208);
    if (v5)
    {
      sub_126DC88(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 216);
    if (v6)
    {
      sub_1274708(v6);
      operator delete();
    }
    if (*(void *)(a1 + 224))
    {
      sub_1762C7C();
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 232);
    if (v7)
    {
      sub_126C2F4(v7);
      operator delete();
    }
    if (*(void *)(a1 + 240))
    {
      sub_178F1F4();
      operator delete();
    }
    uint64_t v8 = *(void *)(a1 + 248);
    if (v8)
    {
      sub_126356C(v8);
      operator delete();
    }
    if (*(void *)(a1 + 256))
    {
      sub_1307230();
      operator delete();
    }
    uint64_t v9 = *(void *)(a1 + 264);
    if (v9)
    {
      sub_126A71C(v9);
      operator delete();
    }
    if (*(void *)(a1 + 272))
    {
      sub_1479B58();
      operator delete();
    }
    uint64_t v10 = *(void *)(a1 + 280);
    if (v10)
    {
      sub_128140C(v10);
      operator delete();
    }
    uint64_t v11 = *(void *)(a1 + 288);
    if (v11)
    {
      sub_126962C(v11);
      operator delete();
    }
    double result = *(void ****)(a1 + 296);
    if (result)
    {
      sub_1268144(result);
      operator delete();
    }
  }
  return result;
}

void sub_1264D68(void *a1)
{
  sub_1264A50(a1);

  operator delete();
}

uint64_t sub_1264DA0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(void *)(result + 32) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1264E20(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_126A318(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if (v5)
    {
      unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v6 + 23) < 0)
      {
        **(unsigned char **)unint64_t v6 = 0;
        *(void *)(v6 + 8) = 0;
        if ((v5 & 2) == 0) {
          goto LABEL_15;
        }
        goto LABEL_10;
      }
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
    if ((v5 & 2) == 0) {
      goto LABEL_15;
    }
LABEL_10:
    unint64_t v7 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
    }
  }
LABEL_15:
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = v1 + 8;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

uint64_t sub_1264F08(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    uint64_t result = sub_1280CE0(*(void *)(result + 24));
  }
  if ((v2 & 6) != 0) {
    *(void *)(v1 + 32) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_1264F70(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 0xFE) != 0)
  {
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
    *(void *)(a1 + 45) = 0;
  }
  if ((v1 & 0x300) != 0)
  {
    *(_DWORD *)(a1 + 64) = 0;
    *(void *)(a1 + 56) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v4) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1264FD4(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) == 0)
    {
      if ((v2 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_15:
      unint64_t v4 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v4 + 23) < 0)
      {
        **(unsigned char **)unint64_t v4 = 0;
        *(void *)(v4 + 8) = 0;
        if ((v2 & 4) != 0) {
          goto LABEL_19;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v4 = 0;
        *(unsigned char *)(v4 + 23) = 0;
        if ((v2 & 4) != 0) {
          goto LABEL_19;
        }
      }
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_6;
      }
LABEL_23:
      unint64_t v6 = *(void *)(result + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v6 + 23) < 0)
      {
        **(unsigned char **)unint64_t v6 = 0;
        *(void *)(v6 + 8) = 0;
        if ((v2 & 0x10) != 0) {
          goto LABEL_27;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v6 = 0;
        *(unsigned char *)(v6 + 23) = 0;
        if ((v2 & 0x10) != 0) {
          goto LABEL_27;
        }
      }
LABEL_7:
      if ((v2 & 0x20) == 0) {
        goto LABEL_8;
      }
LABEL_31:
      unint64_t v8 = *(void *)(result + 64) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v8 + 23) < 0)
      {
        **(unsigned char **)unint64_t v8 = 0;
        *(void *)(v8 + 8) = 0;
        if ((v2 & 0x40) != 0) {
          goto LABEL_35;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v8 = 0;
        *(unsigned char *)(v8 + 23) = 0;
        if ((v2 & 0x40) != 0) {
          goto LABEL_35;
        }
      }
LABEL_9:
      if ((v2 & 0x80) == 0) {
        goto LABEL_42;
      }
LABEL_39:
      unint64_t v10 = *(void *)(result + 80) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v10 + 23) < 0)
      {
        **(unsigned char **)unint64_t v10 = 0;
        *(void *)(v10 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v10 = 0;
        *(unsigned char *)(v10 + 23) = 0;
      }
      goto LABEL_42;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_19:
    unint64_t v5 = *(void *)(result + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_23;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_23;
      }
    }
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_27:
    unint64_t v7 = *(void *)(result + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      if ((v2 & 0x20) != 0) {
        goto LABEL_31;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
      if ((v2 & 0x20) != 0) {
        goto LABEL_31;
      }
    }
LABEL_8:
    if ((v2 & 0x40) == 0) {
      goto LABEL_9;
    }
LABEL_35:
    unint64_t v9 = *(void *)(result + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)unint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
      if ((v2 & 0x80) == 0) {
        goto LABEL_42;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
      if ((v2 & 0x80) == 0) {
        goto LABEL_42;
      }
    }
    goto LABEL_39;
  }
LABEL_42:
  if ((v2 & 0x300) != 0)
  {
    if ((v2 & 0x100) != 0) {
      uint64_t result = (uint64_t)sub_16CD894(*(void *)(result + 88));
    }
    if ((v2 & 0x200) != 0) {
      uint64_t result = sub_15B043C(*(void *)(v1 + 96));
    }
  }
  if ((v2 & 0x3C00) != 0)
  {
    *(void *)(v1 + 104) = 0;
    *(void *)(v1 + 112) = 0;
    *(void *)(v1 + 120) = 0;
  }
  char v12 = *(unsigned char *)(v1 + 8);
  uint64_t v11 = v1 + 8;
  *(_DWORD *)(v11 + 8) = 0;
  if (v12)
  {
    return sub_188B4AC((uint64_t *)v11);
  }
  return result;
}

uint64_t sub_12651F8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v107 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v107, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v106 = (uint64_t *)(a1 + 8);
  while (2)
  {
    unint64_t v7 = (unsigned __int8 *)(*(void *)v107 + 1);
    unsigned int v8 = **(unsigned char **)v107;
    if ((char)**(unsigned char **)v107 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        unint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v107, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (unsigned __int8 *)(*(void *)v107 + 2);
      }
    }
    *(void *)unint64_t v107 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_189;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v11 = *(void **)(a1 + 192);
        if (!v11)
        {
          char v12 = (void *)(*v106 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v106) {
            char v12 = (void *)*v12;
          }
          uint64_t v11 = sub_15C2014((uint64_t)v12);
          *(void *)(a1 + 192) = v11;
          unint64_t v7 = *(unsigned __int8 **)v107;
        }
        uint64_t v13 = (uint64_t)sub_11EAA5C(a3, (uint64_t)v11, v7);
        goto LABEL_196;
      case 2u:
        if (v8 != 16) {
          goto LABEL_189;
        }
        uint64_t v14 = (char *)(v7 + 1);
        unint64_t v15 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v16 = *v14;
        int v17 = v15 + (v16 << 7);
        unint64_t v15 = (v17 - 128);
        if (v16 < 0)
        {
          *(void *)unint64_t v107 = sub_188C138((uint64_t)v7, (v17 - 128));
          if (!*(void *)v107) {
            goto LABEL_215;
          }
          unint64_t v15 = v100;
        }
        else
        {
          uint64_t v14 = (char *)(v7 + 2);
LABEL_19:
          *(void *)unint64_t v107 = v14;
        }
        if ((v15 + 1) > 0xA)
        {
          if (*v106) {
            uint64_t v105 = (std::string *)((*v106 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v105 = (std::string *)sub_188DBD8(v106);
          }
          sub_188C020(2, v15, v105);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x200000u;
          *(_DWORD *)(a1 + 332) = v15;
        }
        goto LABEL_197;
      case 3u:
        if (v8 != 26) {
          goto LABEL_189;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v18 = *(void *)(a1 + 200);
        if (!v18)
        {
          BOOL v19 = (void *)(*v106 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v106) {
            BOOL v19 = (void *)*v19;
          }
          uint64_t v18 = sub_147818C((uint64_t)v19);
          *(void *)(a1 + 200) = v18;
          unint64_t v7 = *(unsigned __int8 **)v107;
        }
        uint64_t v13 = sub_1265E6C(a3, v18, v7);
        goto LABEL_196;
      case 4u:
        if (v8 != 34) {
          goto LABEL_189;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v20 = *(void *)(a1 + 208);
        if (!v20)
        {
          BOOL v21 = (void *)(*v106 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v106) {
            BOOL v21 = (void *)*v21;
          }
          uint64_t v20 = sub_1283F94((uint64_t)v21);
          *(void *)(a1 + 208) = v20;
          unint64_t v7 = *(unsigned __int8 **)v107;
        }
        uint64_t v13 = sub_12614F0(a3, v20, v7);
        goto LABEL_196;
      case 5u:
        if (v8 != 42) {
          goto LABEL_189;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v22 = *(void *)(a1 + 216);
        if (!v22)
        {
          uint64_t v23 = (void *)(*v106 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v106) {
            uint64_t v23 = (void *)*v23;
          }
          sub_1284584((uint64_t)v23);
          uint64_t v22 = v24;
          *(void *)(a1 + 216) = v24;
          unint64_t v7 = *(unsigned __int8 **)v107;
        }
        uint64_t v13 = sub_1261610(a3, v22, v7);
        goto LABEL_196;
      case 6u:
        if (v8 != 50) {
          goto LABEL_189;
        }
        uint64_t v25 = (char *)(v7 - 1);
        while (1)
        {
          uint64_t v26 = (unsigned __int8 *)(v25 + 1);
          *(void *)unint64_t v107 = v25 + 1;
          int v27 = *(_DWORD **)(a1 + 40);
          if (v27 && (uint64_t v28 = *(int *)(a1 + 32), (int)v28 < *v27))
          {
            *(_DWORD *)(a1 + 32) = v28 + 1;
            uint64_t v29 = *(void *)&v27[2 * v28 + 2];
          }
          else
          {
            int v30 = sub_1284334(*(void *)(a1 + 24));
            uint64_t v29 = sub_188CDC8(a1 + 24, (uint64_t)v30);
            uint64_t v26 = *(unsigned __int8 **)v107;
          }
          uint64_t v25 = sub_1265EFC(a3, v29, v26);
          *(void *)unint64_t v107 = v25;
          if (!v25) {
            goto LABEL_215;
          }
          if (*(void *)a3 <= (unint64_t)v25 || *v25 != 50) {
            goto LABEL_197;
          }
        }
      case 7u:
        if (v8 != 58) {
          goto LABEL_189;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v31 = *(void *)(a1 + 8);
        int v32 = (uint64_t *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
        if (v31) {
          int v32 = (uint64_t *)*v32;
        }
        uint64_t v33 = (void *)(a1 + 168);
        goto LABEL_128;
      case 8u:
        if (v8 != 66) {
          goto LABEL_189;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v34 = *(void *)(a1 + 224);
        if (!v34)
        {
          unint64_t v35 = (void *)(*v106 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v106) {
            unint64_t v35 = (void *)*v35;
          }
          uint64_t v34 = sub_178CDA8((uint64_t)v35);
          *(void *)(a1 + 224) = v34;
          unint64_t v7 = *(unsigned __int8 **)v107;
        }
        uint64_t v13 = sub_1265F8C(a3, v34, v7);
        goto LABEL_196;
      case 9u:
        if (v8 != 74) {
          goto LABEL_189;
        }
        uint64_t v36 = v7 - 1;
        while (1)
        {
          uint64_t v37 = v36 + 1;
          *(void *)unint64_t v107 = v36 + 1;
          uint64_t v38 = *(_DWORD **)(a1 + 64);
          if (v38 && (uint64_t v39 = *(int *)(a1 + 56), (int)v39 < *v38))
          {
            *(_DWORD *)(a1 + 56) = v39 + 1;
            uint64_t v40 = *(void *)&v38[2 * v39 + 2];
          }
          else
          {
            uint64_t v41 = sub_16332DC(*(void *)(a1 + 48));
            uint64_t v40 = sub_188CDC8(a1 + 48, v41);
            uint64_t v37 = *(unsigned __int8 **)v107;
          }
          uint64_t v36 = (unsigned __int8 *)sub_118D0CC(a3, v40, v37);
          *(void *)unint64_t v107 = v36;
          if (!v36) {
            goto LABEL_215;
          }
          if (*(void *)a3 <= (unint64_t)v36 || *v36 != 74) {
            goto LABEL_197;
          }
        }
      case 0xAu:
        if (v8 != 82) {
          goto LABEL_189;
        }
        uint64_t v42 = (char *)(v7 - 1);
        while (1)
        {
          uint64_t v43 = (unsigned __int8 *)(v42 + 1);
          *(void *)unint64_t v107 = v42 + 1;
          int v44 = *(_DWORD **)(a1 + 88);
          if (v44 && (uint64_t v45 = *(int *)(a1 + 80), (int)v45 < *v44))
          {
            *(_DWORD *)(a1 + 80) = v45 + 1;
            uint64_t v46 = *(void *)&v44[2 * v45 + 2];
          }
          else
          {
            uint64_t v47 = sub_1633394(*(void *)(a1 + 72));
            uint64_t v46 = sub_188CDC8(a1 + 72, v47);
            uint64_t v43 = *(unsigned __int8 **)v107;
          }
          uint64_t v42 = sub_126601C(a3, v46, v43);
          *(void *)unint64_t v107 = v42;
          if (!v42) {
            goto LABEL_215;
          }
          if (*(void *)a3 <= (unint64_t)v42 || *v42 != 82) {
            goto LABEL_197;
          }
        }
      case 0xBu:
        if (v8 != 88) {
          goto LABEL_189;
        }
        v5 |= 0x20000u;
        int v48 = (char *)(v7 + 1);
        uint64_t v49 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_84;
        }
        int v50 = *v48;
        uint64_t v49 = v49 + (v50 << 7) - 128;
        if (v50 < 0)
        {
          uint64_t v101 = sub_188C138((uint64_t)v7, v49);
          *(void *)unint64_t v107 = v101;
          *(void *)(a1 + 304) = v102;
          if (!v101) {
            goto LABEL_215;
          }
        }
        else
        {
          int v48 = (char *)(v7 + 2);
LABEL_84:
          *(void *)unint64_t v107 = v48;
          *(void *)(a1 + 304) = v49;
        }
        goto LABEL_197;
      case 0xCu:
        if (v8 != 98) {
          goto LABEL_189;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v51 = *(void *)(a1 + 8);
        int v32 = (uint64_t *)(v51 & 0xFFFFFFFFFFFFFFFCLL);
        if (v51) {
          int v32 = (uint64_t *)*v32;
        }
        uint64_t v33 = (void *)(a1 + 176);
        goto LABEL_128;
      case 0xDu:
        if (v8 != 105) {
          goto LABEL_189;
        }
        v5 |= 0x40000u;
        *(void *)(a1 + 312) = *(void *)v7;
        *(void *)unint64_t v107 = v7 + 8;
        goto LABEL_197;
      case 0xEu:
        if (v8 != 114) {
          goto LABEL_189;
        }
        uint64_t v52 = (char *)(v7 - 1);
        while (1)
        {
          uint64_t v53 = (unsigned __int8 *)(v52 + 1);
          *(void *)unint64_t v107 = v52 + 1;
          unsigned int v54 = *(_DWORD **)(a1 + 112);
          if (v54 && (uint64_t v55 = *(int *)(a1 + 104), (int)v55 < *v54))
          {
            *(_DWORD *)(a1 + 104) = v55 + 1;
            uint64_t v56 = *(void *)&v54[2 * v55 + 2];
          }
          else
          {
            int v57 = sub_1283E18(*(void *)(a1 + 96));
            uint64_t v56 = sub_188CDC8(a1 + 96, (uint64_t)v57);
            uint64_t v53 = *(unsigned __int8 **)v107;
          }
          uint64_t v52 = sub_12660AC(a3, v56, v53);
          *(void *)unint64_t v107 = v52;
          if (!v52) {
            goto LABEL_215;
          }
          if (*(void *)a3 <= (unint64_t)v52 || *v52 != 114) {
            goto LABEL_197;
          }
        }
      case 0xFu:
        if (v8 != 120) {
          goto LABEL_189;
        }
        v5 |= 0x80000u;
        unint64_t v58 = (char *)(v7 + 1);
        uint64_t v59 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_105;
        }
        int v60 = *v58;
        uint64_t v59 = v59 + (v60 << 7) - 128;
        if (v60 < 0)
        {
          uint64_t v103 = sub_188C138((uint64_t)v7, v59);
          *(void *)unint64_t v107 = v103;
          *(void *)(a1 + 320) = v104;
          if (!v103) {
            goto LABEL_215;
          }
        }
        else
        {
          unint64_t v58 = (char *)(v7 + 2);
LABEL_105:
          *(void *)unint64_t v107 = v58;
          *(void *)(a1 + 320) = v59;
        }
        goto LABEL_197;
      case 0x10u:
        if (v8 != 130) {
          goto LABEL_189;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        uint64_t v61 = *(void **)(a1 + 232);
        if (!v61)
        {
          uint64_t v62 = (void *)(*v106 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v106) {
            uint64_t v62 = (void *)*v62;
          }
          uint64_t v61 = sub_1283D90((uint64_t)v62);
          *(void *)(a1 + 232) = v61;
          unint64_t v7 = *(unsigned __int8 **)v107;
        }
        uint64_t v13 = sub_126613C(a3, (uint64_t)v61, v7);
        goto LABEL_196;
      case 0x11u:
        if (v8 != 138) {
          goto LABEL_189;
        }
        *(_DWORD *)(a1 + 16) |= 0x200u;
        uint64_t v63 = *(void *)(a1 + 240);
        if (!v63)
        {
          uint64_t v64 = (void *)(*v106 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v106) {
            uint64_t v64 = (void *)*v64;
          }
          sub_1791234((uint64_t)v64);
          uint64_t v63 = v65;
          *(void *)(a1 + 240) = v65;
          unint64_t v7 = *(unsigned __int8 **)v107;
        }
        uint64_t v13 = (uint64_t)sub_1264784(a3, v63, v7);
        goto LABEL_196;
      case 0x12u:
        if (v8 != 146) {
          goto LABEL_189;
        }
        *(_DWORD *)(a1 + 16) |= 0x400u;
        BOOL v66 = *(void **)(a1 + 248);
        if (!v66)
        {
          uint64_t v67 = (void *)(*v106 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v106) {
            uint64_t v67 = (void *)*v67;
          }
          BOOL v66 = sub_1283738((uint64_t)v67);
          *(void *)(a1 + 248) = v66;
          unint64_t v7 = *(unsigned __int8 **)v107;
        }
        uint64_t v13 = sub_12661CC(a3, (uint64_t)v66, v7);
        goto LABEL_196;
      case 0x13u:
        if (v8 != 154) {
          goto LABEL_189;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v68 = *(void *)(a1 + 8);
        int v32 = (uint64_t *)(v68 & 0xFFFFFFFFFFFFFFFCLL);
        if (v68) {
          int v32 = (uint64_t *)*v32;
        }
        uint64_t v33 = (void *)(a1 + 184);
LABEL_128:
        BOOL v69 = (std::string *)sub_1880F84(v33, v32);
        uint64_t v13 = (uint64_t)sub_188C244(v69, *(char **)v107, (uint64_t)a3);
        goto LABEL_196;
      case 0x14u:
        if (v8 != 160) {
          goto LABEL_189;
        }
        uint64_t v70 = (char *)(v7 + 1);
        LODWORD(v71) = *v7;
        if ((char)*v7 < 0)
        {
          uint64_t v71 = v71 + (*v70 << 7) - 128;
          if (*v70 < 0) {
            uint64_t v70 = (char *)sub_188C138((uint64_t)v7, v71);
          }
          else {
            uint64_t v70 = (char *)(v7 + 2);
          }
        }
        v5 |= 0x100000u;
        *(void *)unint64_t v107 = v70;
        *(_DWORD *)(a1 + 328) = -(v71 & 1) ^ (v71 >> 1);
        if (!v70) {
          goto LABEL_215;
        }
        goto LABEL_197;
      case 0x15u:
        if (v8 != 170) {
          goto LABEL_189;
        }
        *(_DWORD *)(a1 + 16) |= 0x800u;
        uint64_t v72 = *(void *)(a1 + 256);
        if (!v72)
        {
          uint64_t v73 = (void *)(*v106 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v106) {
            uint64_t v73 = (void *)*v73;
          }
          uint64_t v72 = sub_130BE18((uint64_t)v73);
          *(void *)(a1 + 256) = v72;
          unint64_t v7 = *(unsigned __int8 **)v107;
        }
        uint64_t v13 = sub_126625C(a3, v72, v7);
        goto LABEL_196;
      case 0x16u:
        if (v8 != 178) {
          goto LABEL_189;
        }
        uint64_t v74 = v7 - 2;
        while (1)
        {
          int v75 = v74 + 2;
          *(void *)unint64_t v107 = v74 + 2;
          uint64_t v76 = *(_DWORD **)(a1 + 136);
          if (v76 && (uint64_t v77 = *(int *)(a1 + 128), (int)v77 < *v76))
          {
            *(_DWORD *)(a1 + 128) = v77 + 1;
            uint64_t v78 = *(void *)&v76[2 * v77 + 2];
          }
          else
          {
            unint64_t v79 = sub_1283CE8(*(void *)(a1 + 120));
            uint64_t v78 = sub_188CDC8(a1 + 120, (uint64_t)v79);
            int v75 = *(unsigned __int8 **)v107;
          }
          uint64_t v74 = (unsigned __int8 *)sub_12662EC(a3, v78, v75);
          *(void *)unint64_t v107 = v74;
          if (!v74) {
            goto LABEL_215;
          }
          if (*(void *)a3 <= (unint64_t)v74 || *(_WORD *)v74 != 434) {
            goto LABEL_197;
          }
        }
      case 0x17u:
        if (v8 != 186) {
          goto LABEL_189;
        }
        *(_DWORD *)(a1 + 16) |= 0x1000u;
        uint64_t v80 = *(void **)(a1 + 264);
        if (!v80)
        {
          uint64_t v81 = (void *)(*v106 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v106) {
            uint64_t v81 = (void *)*v81;
          }
          uint64_t v80 = sub_1283BA0((uint64_t)v81);
          *(void *)(a1 + 264) = v80;
          unint64_t v7 = *(unsigned __int8 **)v107;
        }
        uint64_t v13 = sub_126637C(a3, (uint64_t)v80, v7);
        goto LABEL_196;
      case 0x18u:
        if (v8 != 194) {
          goto LABEL_189;
        }
        int v82 = v7 - 2;
        while (1)
        {
          uint64_t v83 = v82 + 2;
          *(void *)unint64_t v107 = v82 + 2;
          int v84 = *(_DWORD **)(a1 + 160);
          if (v84 && (uint64_t v85 = *(int *)(a1 + 152), (int)v85 < *v84))
          {
            *(_DWORD *)(a1 + 152) = v85 + 1;
            uint64_t v86 = *(void *)&v84[2 * v85 + 2];
          }
          else
          {
            v87 = sub_1283738(*(void *)(a1 + 144));
            uint64_t v86 = sub_188CDC8(a1 + 144, (uint64_t)v87);
            uint64_t v83 = *(unsigned __int8 **)v107;
          }
          int v82 = (unsigned __int8 *)sub_12661CC(a3, v86, v83);
          *(void *)unint64_t v107 = v82;
          if (!v82) {
            goto LABEL_215;
          }
          if (*(void *)a3 <= (unint64_t)v82 || *(_WORD *)v82 != 450) {
            goto LABEL_197;
          }
        }
      case 0x19u:
        if (v8 != 202) {
          goto LABEL_189;
        }
        *(_DWORD *)(a1 + 16) |= 0x2000u;
        unint64_t v88 = *(void **)(a1 + 272);
        if (!v88)
        {
          uint64_t v89 = (void *)(*v106 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v106) {
            uint64_t v89 = (void *)*v89;
          }
          unint64_t v88 = sub_1479E98((uint64_t)v89);
          *(void *)(a1 + 272) = v88;
          unint64_t v7 = *(unsigned __int8 **)v107;
        }
        uint64_t v13 = sub_126640C(a3, (uint64_t)v88, v7);
        goto LABEL_196;
      case 0x1Au:
        if (v8 != 210) {
          goto LABEL_189;
        }
        *(_DWORD *)(a1 + 16) |= 0x4000u;
        int v90 = *(void **)(a1 + 280);
        if (!v90)
        {
          v91 = (void *)(*v106 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v106) {
            v91 = (void *)*v91;
          }
          int v90 = sub_1284F78((uint64_t)v91);
          *(void *)(a1 + 280) = v90;
          unint64_t v7 = *(unsigned __int8 **)v107;
        }
        uint64_t v13 = (uint64_t)sub_126649C(a3, (uint64_t)v90, v7);
        goto LABEL_196;
      case 0x1Bu:
        if (v8 != 218) {
          goto LABEL_189;
        }
        *(_DWORD *)(a1 + 16) |= 0x8000u;
        uint64_t v92 = *(void *)(a1 + 288);
        if (!v92)
        {
          uint64_t v93 = (void *)(*v106 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v106) {
            uint64_t v93 = (void *)*v93;
          }
          sub_1283A8C((uint64_t)v93);
          uint64_t v92 = v94;
          *(void *)(a1 + 288) = v94;
          unint64_t v7 = *(unsigned __int8 **)v107;
        }
        uint64_t v13 = sub_126652C(a3, v92, v7);
        goto LABEL_196;
      case 0x1Cu:
        if (v8 != 226) {
          goto LABEL_189;
        }
        *(_DWORD *)(a1 + 16) |= 0x10000u;
        uint64_t v95 = *(void *)(a1 + 296);
        if (!v95)
        {
          uint64_t v96 = (void *)(*v106 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v106) {
            uint64_t v96 = (void *)*v96;
          }
          sub_1283984((uint64_t)v96);
          uint64_t v95 = v97;
          *(void *)(a1 + 296) = v97;
          unint64_t v7 = *(unsigned __int8 **)v107;
        }
        uint64_t v13 = sub_12665BC(a3, v95, v7);
        goto LABEL_196;
      default:
LABEL_189:
        if (v8) {
          BOOL v98 = (v8 & 7) == 4;
        }
        else {
          BOOL v98 = 1;
        }
        if (!v98)
        {
          if (*v106)
          {
            uint64_t v99 = (std::string *)((*v106 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v99 = (std::string *)sub_188DBD8(v106);
            unint64_t v7 = *(unsigned __int8 **)v107;
          }
          uint64_t v13 = (uint64_t)sub_1885AC0(v8, v99, (char *)v7, a3);
LABEL_196:
          *(void *)unint64_t v107 = v13;
          if (!v13) {
            goto LABEL_215;
          }
LABEL_197:
          if (sub_11947B8((uint64_t)a3, (char **)v107, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v7) {
          a3[10].i32[0] = v8 - 1;
        }
        else {
LABEL_215:
        }
          *(void *)unint64_t v107 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v107;
    }
  }
}

uint64_t sub_1265E6C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_144D678(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1265EFC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_127181C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1265F8C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1762D48(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_126601C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_162DBCC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12660AC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_126CB14(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_126613C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_126C3E4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12661CC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_126378C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_126625C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1307474(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12662EC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_126B9E8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_126637C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_126A818(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_126640C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1479BD8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_126649C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12814FC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_126652C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1269704(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12665BC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1268330(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_126664C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 192);
    *unint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    unint64_t v4 = sub_15BA180(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 0x200000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 332);
    *unint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 200);
    *unint64_t v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 44);
    v4[1] = v14;
    if (v14 > 0x7F) {
      unint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      unint64_t v15 = v4 + 2;
    }
    unint64_t v4 = sub_144E240(v13, v15, a3);
    if ((v6 & 0x20) == 0)
    {
LABEL_17:
      if ((v6 & 0x40) == 0) {
        goto LABEL_37;
      }
      goto LABEL_31;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_17;
  }
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 208);
  *unint64_t v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 44);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  unint64_t v4 = sub_126E168(v16, v18, a3);
  if ((v6 & 0x40) != 0)
  {
LABEL_31:
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v19 = *(void *)(a1 + 216);
    *unint64_t v4 = 42;
    unsigned int v20 = *(_DWORD *)(v19 + 20);
    v4[1] = v20;
    if (v20 > 0x7F) {
      BOOL v21 = sub_188A9CC(v20, v4 + 1);
    }
    else {
      BOOL v21 = v4 + 2;
    }
    unint64_t v4 = sub_1275440(v19, v21, a3);
  }
LABEL_37:
  int v22 = *(_DWORD *)(a1 + 32);
  if (v22)
  {
    for (int i = 0; i != v22; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v24 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *unint64_t v4 = 50;
      unsigned int v25 = *(_DWORD *)(v24 + 20);
      v4[1] = v25;
      if (v25 > 0x7F) {
        uint64_t v26 = sub_188A9CC(v25, v4 + 1);
      }
      else {
        uint64_t v26 = v4 + 2;
      }
      unint64_t v4 = sub_1271B94(v24, (unint64_t)v26, a3);
    }
  }
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v27 = *(void *)(a1 + 224);
    *unint64_t v4 = 66;
    unsigned int v28 = *(_DWORD *)(v27 + 44);
    v4[1] = v28;
    if (v28 > 0x7F) {
      uint64_t v29 = sub_188A9CC(v28, v4 + 1);
    }
    else {
      uint64_t v29 = v4 + 2;
    }
    unint64_t v4 = sub_1763540(v27, v29, a3);
  }
  int v30 = *(_DWORD *)(a1 + 56);
  if (v30)
  {
    for (int j = 0; j != v30; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v32 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *unint64_t v4 = 74;
      unsigned int v33 = *(_DWORD *)(v32 + 44);
      v4[1] = v33;
      if (v33 > 0x7F) {
        uint64_t v34 = sub_188A9CC(v33, v4 + 1);
      }
      else {
        uint64_t v34 = v4 + 2;
      }
      unint64_t v4 = sub_162962C(v32, v34, a3);
    }
  }
  int v35 = *(_DWORD *)(a1 + 80);
  if (v35)
  {
    for (int k = 0; k != v35; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v37 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      *unint64_t v4 = 82;
      unsigned int v38 = *(_DWORD *)(v37 + 44);
      v4[1] = v38;
      if (v38 > 0x7F) {
        uint64_t v39 = sub_188A9CC(v38, v4 + 1);
      }
      else {
        uint64_t v39 = v4 + 2;
      }
      unint64_t v4 = sub_162F61C(v37, v39, a3);
    }
  }
  if ((v6 & 0x20000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v40 = *(void *)(a1 + 304);
    *unint64_t v4 = 88;
    v4[1] = v40;
    if (v40 > 0x7F)
    {
      v4[1] = v40 | 0x80;
      unint64_t v41 = v40 >> 7;
      v4[2] = v40 >> 7;
      v4 += 3;
      if (v40 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v42 = v41 >> 14;
          v41 >>= 7;
          *v4++ = v41;
        }
        while (v42);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0) {
    unint64_t v4 = sub_117A0AC(a3, 12, (const void **)(*(void *)(a1 + 176) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x40000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v43 = *(void *)(a1 + 312);
    *unint64_t v4 = 105;
    *(void *)(v4 + 1) = v43;
    v4 += 9;
  }
  int v44 = *(_DWORD *)(a1 + 104);
  if (v44)
  {
    for (int m = 0; m != v44; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v46 = *(void *)(*(void *)(a1 + 112) + 8 * m + 8);
      *unint64_t v4 = 114;
      unsigned int v47 = *(_DWORD *)(v46 + 20);
      v4[1] = v47;
      if (v47 > 0x7F) {
        int v48 = sub_188A9CC(v47, v4 + 1);
      }
      else {
        int v48 = v4 + 2;
      }
      unint64_t v4 = sub_126CDF4(v46, (unint64_t)v48, a3);
    }
  }
  if ((v6 & 0x80000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v49 = *(void *)(a1 + 320);
    *unint64_t v4 = 120;
    v4[1] = v49;
    if (v49 > 0x7F)
    {
      v4[1] = v49 | 0x80;
      unint64_t v50 = v49 >> 7;
      v4[2] = v49 >> 7;
      v4 += 3;
      if (v49 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v51 = v50 >> 14;
          v50 >>= 7;
          *v4++ = v50;
        }
        while (v51);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v52 = *(void *)(a1 + 232);
    *(_WORD *)unint64_t v4 = 386;
    unsigned int v53 = *(_DWORD *)(v52 + 20);
    v4[2] = v53;
    if (v53 > 0x7F) {
      unsigned int v54 = sub_188A9CC(v53, v4 + 2);
    }
    else {
      unsigned int v54 = v4 + 3;
    }
    unint64_t v4 = sub_126C608(v52, (unint64_t)v54, a3);
    if ((v6 & 0x200) == 0)
    {
LABEL_100:
      if ((v6 & 0x400) == 0) {
        goto LABEL_101;
      }
      goto LABEL_116;
    }
  }
  else if ((v6 & 0x200) == 0)
  {
    goto LABEL_100;
  }
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v55 = *(void *)(a1 + 240);
  *(_WORD *)unint64_t v4 = 394;
  unsigned int v56 = *(_DWORD *)(v55 + 20);
  v4[2] = v56;
  if (v56 > 0x7F) {
    int v57 = sub_188A9CC(v56, v4 + 2);
  }
  else {
    int v57 = v4 + 3;
  }
  unint64_t v4 = sub_178F4EC(v55, (unint64_t)v57, a3);
  if ((v6 & 0x400) == 0)
  {
LABEL_101:
    if ((v6 & 4) == 0) {
      goto LABEL_102;
    }
    goto LABEL_122;
  }
LABEL_116:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v58 = *(void *)(a1 + 248);
  *(_WORD *)unint64_t v4 = 402;
  unsigned int v59 = *(_DWORD *)(v58 + 20);
  v4[2] = v59;
  if (v59 > 0x7F) {
    int v60 = sub_188A9CC(v59, v4 + 2);
  }
  else {
    int v60 = v4 + 3;
  }
  unint64_t v4 = sub_1263A04(v58, (unint64_t)v60, a3);
  if ((v6 & 4) == 0)
  {
LABEL_102:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_129;
    }
    goto LABEL_123;
  }
LABEL_122:
  unint64_t v4 = sub_117A0AC(a3, 19, (const void **)(*(void *)(a1 + 184) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x100000) == 0) {
    goto LABEL_129;
  }
LABEL_123:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v61 = *(_DWORD *)(a1 + 328);
  *(_WORD *)unint64_t v4 = 416;
  unsigned int v62 = (2 * v61) ^ (v61 >> 31);
  v4[2] = (2 * v61) ^ (v61 >> 31);
  if (v62 > 0x7F)
  {
    v4[2] = v62 | 0x80;
    unsigned int v63 = v62 >> 7;
    v4[3] = v62 >> 7;
    v4 += 4;
    if (v62 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unsigned int v64 = v63 >> 14;
        v63 >>= 7;
        *v4++ = v63;
      }
      while (v64);
    }
  }
  else
  {
    v4 += 3;
  }
LABEL_129:
  if ((v6 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v65 = *(void *)(a1 + 256);
    *(_WORD *)unint64_t v4 = 426;
    unsigned int v66 = *(_DWORD *)(v65 + 44);
    v4[2] = v66;
    if (v66 > 0x7F) {
      uint64_t v67 = sub_188A9CC(v66, v4 + 2);
    }
    else {
      uint64_t v67 = v4 + 3;
    }
    unint64_t v4 = sub_1307A10(v65, v67, a3);
  }
  int v68 = *(_DWORD *)(a1 + 128);
  if (v68)
  {
    for (int n = 0; n != v68; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v70 = *(void *)(*(void *)(a1 + 136) + 8 * n + 8);
      *(_WORD *)unint64_t v4 = 434;
      unsigned int v71 = *(_DWORD *)(v70 + 20);
      v4[2] = v71;
      if (v71 > 0x7F) {
        uint64_t v72 = sub_188A9CC(v71, v4 + 2);
      }
      else {
        uint64_t v72 = v4 + 3;
      }
      unint64_t v4 = sub_126BD48(v70, v72, a3);
    }
  }
  if ((v6 & 0x1000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v73 = *(void *)(a1 + 264);
    *(_WORD *)unint64_t v4 = 442;
    unsigned int v74 = *(_DWORD *)(v73 + 20);
    v4[2] = v74;
    if (v74 > 0x7F) {
      int v75 = sub_188A9CC(v74, v4 + 2);
    }
    else {
      int v75 = v4 + 3;
    }
    unint64_t v4 = sub_126AAF0(v73, v75, a3);
  }
  int v76 = *(_DWORD *)(a1 + 152);
  if (v76)
  {
    for (iint i = 0; ii != v76; ++ii)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v78 = *(void *)(*(void *)(a1 + 160) + 8 * ii + 8);
      *(_WORD *)unint64_t v4 = 450;
      unsigned int v79 = *(_DWORD *)(v78 + 20);
      v4[2] = v79;
      if (v79 > 0x7F) {
        uint64_t v80 = sub_188A9CC(v79, v4 + 2);
      }
      else {
        uint64_t v80 = v4 + 3;
      }
      unint64_t v4 = sub_1263A04(v78, (unint64_t)v80, a3);
    }
  }
  if ((v6 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v81 = *(void *)(a1 + 272);
    *(_WORD *)unint64_t v4 = 458;
    unsigned int v82 = *(_DWORD *)(v81 + 20);
    v4[2] = v82;
    if (v82 > 0x7F) {
      uint64_t v83 = sub_188A9CC(v82, v4 + 2);
    }
    else {
      uint64_t v83 = v4 + 3;
    }
    unint64_t v4 = sub_1479D30(v81, v83, a3);
    if ((v6 & 0x4000) == 0)
    {
LABEL_161:
      if ((v6 & 0x8000) == 0) {
        goto LABEL_162;
      }
      goto LABEL_176;
    }
  }
  else if ((v6 & 0x4000) == 0)
  {
    goto LABEL_161;
  }
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v84 = *(void *)(a1 + 280);
  *(_WORD *)unint64_t v4 = 466;
  unsigned int v85 = *(_DWORD *)(v84 + 20);
  v4[2] = v85;
  if (v85 > 0x7F) {
    uint64_t v86 = sub_188A9CC(v85, v4 + 2);
  }
  else {
    uint64_t v86 = v4 + 3;
  }
  unint64_t v4 = sub_128183C(v84, (unint64_t)v86, a3);
  if ((v6 & 0x8000) == 0)
  {
LABEL_162:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_188;
    }
    goto LABEL_182;
  }
LABEL_176:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v87 = *(void *)(a1 + 288);
  *(_WORD *)unint64_t v4 = 474;
  unsigned int v88 = *(_DWORD *)(v87 + 20);
  v4[2] = v88;
  if (v88 > 0x7F) {
    uint64_t v89 = sub_188A9CC(v88, v4 + 2);
  }
  else {
    uint64_t v89 = v4 + 3;
  }
  unint64_t v4 = sub_1269CA0(v87, (unint64_t)v89, a3);
  if ((v6 & 0x10000) != 0)
  {
LABEL_182:
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v90 = *(void *)(a1 + 296);
    *(_WORD *)unint64_t v4 = 482;
    unsigned int v91 = *(_DWORD *)(v90 + 20);
    v4[2] = v91;
    if (v91 > 0x7F) {
      uint64_t v92 = sub_188A9CC(v91, v4 + 2);
    }
    else {
      uint64_t v92 = v4 + 3;
    }
    unint64_t v4 = sub_1268960(v90, (unint64_t)v92, a3);
  }
LABEL_188:
  uint64_t v93 = *(void *)(a1 + 8);
  if ((v93 & 1) == 0) {
    return v4;
  }
  unint64_t v95 = v93 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v95 + 31) < 0)
  {
    uint64_t v96 = *(void **)(v95 + 8);
    uint64_t v97 = *(void *)(v95 + 16);
  }
  else
  {
    uint64_t v96 = (void *)(v95 + 8);
    LODWORD(v97) = *(unsigned __int8 *)(v95 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v97)
  {
    uint64_t v98 = (int)v97;
    memcpy(v4, v96, (int)v97);
    v4 += v98;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v96, v97, v4);
}

uint64_t sub_1267260(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    unint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    unint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1271DD4(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_162A6E8(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    uint64_t v18 = (uint64_t *)(v17 + 8);
  }
  else {
    uint64_t v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_1630810(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *(int *)(a1 + 104);
  uint64_t v23 = v16 + v22;
  uint64_t v24 = *(void *)(a1 + 112);
  if (v24) {
    unsigned int v25 = (uint64_t *)(v24 + 8);
  }
  else {
    unsigned int v25 = 0;
  }
  if (v22)
  {
    uint64_t v26 = 8 * v22;
    do
    {
      uint64_t v27 = *v25++;
      uint64_t v28 = sub_126CF74(v27);
      v23 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6);
      v26 -= 8;
    }
    while (v26);
  }
  uint64_t v29 = *(int *)(a1 + 128);
  uint64_t v30 = v23 + 2 * v29;
  uint64_t v31 = *(void *)(a1 + 136);
  if (v31) {
    uint64_t v32 = (uint64_t *)(v31 + 8);
  }
  else {
    uint64_t v32 = 0;
  }
  if (v29)
  {
    uint64_t v33 = 8 * v29;
    do
    {
      uint64_t v34 = *v32++;
      uint64_t v35 = sub_126BF78(v34);
      v30 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6);
      v33 -= 8;
    }
    while (v33);
  }
  uint64_t v36 = *(int *)(a1 + 152);
  uint64_t v37 = v30 + 2 * v36;
  uint64_t v38 = *(void *)(a1 + 160);
  if (v38) {
    uint64_t v39 = (uint64_t *)(v38 + 8);
  }
  else {
    uint64_t v39 = 0;
  }
  if (v36)
  {
    uint64_t v40 = 8 * v36;
    do
    {
      uint64_t v41 = *v39++;
      uint64_t v42 = sub_1263BD4(v41);
      v37 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6);
      v40 -= 8;
    }
    while (v40);
  }
  int v43 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v43) {
    goto LABEL_49;
  }
  if (v43)
  {
    unint64_t v52 = *(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v53 = *(unsigned __int8 *)(v52 + 23);
    uint64_t v54 = *(void *)(v52 + 8);
    if ((v53 & 0x80u) == 0) {
      uint64_t v54 = v53;
    }
    v37 += v54 + ((9 * (__clz(v54 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v43 & 2) == 0)
    {
LABEL_42:
      if ((v43 & 4) == 0) {
        goto LABEL_43;
      }
      goto LABEL_81;
    }
  }
  else if ((v43 & 2) == 0)
  {
    goto LABEL_42;
  }
  unint64_t v55 = *(void *)(a1 + 176) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v56 = *(unsigned __int8 *)(v55 + 23);
  uint64_t v57 = *(void *)(v55 + 8);
  if ((v56 & 0x80u) == 0) {
    uint64_t v57 = v56;
  }
  v37 += v57 + ((9 * (__clz(v57 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v43 & 4) == 0)
  {
LABEL_43:
    if ((v43 & 8) == 0) {
      goto LABEL_44;
    }
    goto LABEL_84;
  }
LABEL_81:
  unint64_t v58 = *(void *)(a1 + 184) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v59 = *(unsigned __int8 *)(v58 + 23);
  uint64_t v60 = *(void *)(v58 + 8);
  if ((v59 & 0x80u) == 0) {
    uint64_t v60 = v59;
  }
  v37 += v60 + ((9 * (__clz(v60 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v43 & 8) == 0)
  {
LABEL_44:
    if ((v43 & 0x10) == 0) {
      goto LABEL_45;
    }
    goto LABEL_85;
  }
LABEL_84:
  unint64_t v61 = sub_15BA324(*(void *)(a1 + 192));
  v37 += v61 + ((9 * (__clz(v61 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v43 & 0x10) == 0)
  {
LABEL_45:
    if ((v43 & 0x20) == 0) {
      goto LABEL_46;
    }
LABEL_86:
    uint64_t v63 = sub_126E400(*(void *)(a1 + 208));
    v37 += v63 + ((9 * (__clz(v63 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v43 & 0x40) == 0)
    {
LABEL_47:
      if ((v43 & 0x80) == 0) {
        goto LABEL_49;
      }
      goto LABEL_48;
    }
    goto LABEL_87;
  }
LABEL_85:
  uint64_t v62 = sub_144EC20(*(void *)(a1 + 200));
  v37 += v62 + ((9 * (__clz(v62 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v43 & 0x20) != 0) {
    goto LABEL_86;
  }
LABEL_46:
  if ((v43 & 0x40) == 0) {
    goto LABEL_47;
  }
LABEL_87:
  uint64_t v64 = sub_1275B34(*(void *)(a1 + 216));
  v37 += v64 + ((9 * (__clz(v64 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v43 & 0x80) != 0)
  {
LABEL_48:
    uint64_t v44 = sub_1763C40(*(void *)(a1 + 224));
    v37 += v44 + ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_49:
  if ((v43 & 0xFF00) == 0) {
    goto LABEL_59;
  }
  if ((v43 & 0x100) != 0)
  {
    uint64_t v65 = sub_126C770(*(void *)(a1 + 232));
    v37 += v65 + ((9 * (__clz(v65 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v43 & 0x200) == 0)
    {
LABEL_52:
      if ((v43 & 0x400) == 0) {
        goto LABEL_53;
      }
      goto LABEL_91;
    }
  }
  else if ((v43 & 0x200) == 0)
  {
    goto LABEL_52;
  }
  uint64_t v66 = sub_178F82C(*(void *)(a1 + 240));
  v37 += v66 + ((9 * (__clz(v66 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v43 & 0x400) == 0)
  {
LABEL_53:
    if ((v43 & 0x800) == 0) {
      goto LABEL_54;
    }
    goto LABEL_92;
  }
LABEL_91:
  uint64_t v67 = sub_1263BD4(*(void *)(a1 + 248));
  v37 += v67 + ((9 * (__clz(v67 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v43 & 0x800) == 0)
  {
LABEL_54:
    if ((v43 & 0x1000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_93;
  }
LABEL_92:
  uint64_t v68 = sub_1307F1C(*(void *)(a1 + 256));
  v37 += v68 + ((9 * (__clz(v68 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v43 & 0x1000) == 0)
  {
LABEL_55:
    if ((v43 & 0x2000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_94;
  }
LABEL_93:
  uint64_t v69 = sub_126AC78(*(void *)(a1 + 264));
  v37 += v69 + ((9 * (__clz(v69 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v43 & 0x2000) == 0)
  {
LABEL_56:
    if ((v43 & 0x4000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_95;
  }
LABEL_94:
  uint64_t v70 = sub_1479DFC(*(void *)(a1 + 272));
  v37 += v70 + ((9 * (__clz(v70 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v43 & 0x4000) == 0)
  {
LABEL_57:
    if ((v43 & 0x8000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_58;
  }
LABEL_95:
  uint64_t v71 = sub_1281A44(*(void *)(a1 + 280));
  v37 += v71 + ((9 * (__clz(v71 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v43 & 0x8000) != 0)
  {
LABEL_58:
    uint64_t v45 = sub_126A094(*(void *)(a1 + 288));
    v37 += v45 + ((9 * (__clz(v45 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_59:
  if ((v43 & 0x3F0000) == 0) {
    goto LABEL_73;
  }
  if ((v43 & 0x10000) != 0)
  {
    uint64_t v46 = sub_1268D7C(*(void *)(a1 + 296));
    v37 += v46 + ((9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  if ((v43 & 0x20000) != 0) {
    v37 += ((9 * (__clz(*(void *)(a1 + 304) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if ((v43 & 0x40000) != 0) {
    v37 += 9;
  }
  if ((v43 & 0x80000) == 0)
  {
    if ((v43 & 0x100000) == 0) {
      goto LABEL_68;
    }
LABEL_98:
    v37 += ((9 * (__clz((2 * *(_DWORD *)(a1 + 328)) ^ (*(int *)(a1 + 328) >> 31) | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v43 & 0x200000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_69;
  }
  v37 += ((9 * (__clz(*(void *)(a1 + 320) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v43 & 0x100000) != 0) {
    goto LABEL_98;
  }
LABEL_68:
  if ((v43 & 0x200000) == 0) {
    goto LABEL_73;
  }
LABEL_69:
  int v47 = *(_DWORD *)(a1 + 332);
  uint64_t v48 = ((9 * (__clz(v47 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v47 >= 0) {
    uint64_t v49 = v48;
  }
  else {
    uint64_t v49 = 11;
  }
  v37 += v49;
LABEL_73:
  uint64_t v50 = *(void *)(a1 + 8);
  if (v50)
  {
    unint64_t v72 = v50 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v72 + 31) < 0) {
      uint64_t v73 = *(void *)(v72 + 16);
    }
    else {
      uint64_t v73 = *(unsigned __int8 *)(v72 + 31);
    }
    v37 += v73;
  }
  *(_DWORD *)(a1 + 20) = v37;
  return v37;
}

std::string *sub_126792C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        v3[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_1267A24(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_12C2EA0(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      uint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v12 = (uint64_t *)*v12;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v10, v12);
    }
    if ((v9 & 2) != 0)
    {
      uint64_t v13 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
      uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (uint64_t *)*v15;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v13, v15);
    }
  }
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

void sub_1267B68(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(void **)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = sub_1284EF0((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        int v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        int v9 = &off_252FF00;
      }
      sub_128126C((uint64_t)v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          *(_DWORD *)(a1 + 16) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_1267C50(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      int v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        int v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_26;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    v3[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_27;
    }
LABEL_26:
    v3[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_28;
    }
LABEL_27:
    v3[2].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 48);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_29;
    }
LABEL_28:
    v3[2].__r_.__value_.__s.__data_[1] = *(unsigned char *)(a2 + 49);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_30;
    }
LABEL_29:
    v3[2].__r_.__value_.__s.__data_[2] = *(unsigned char *)(a2 + 50);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      v3[2].__r_.__value_.__s.__data_[4] = *(unsigned char *)(a2 + 52);
      goto LABEL_11;
    }
LABEL_30:
    v3[2].__r_.__value_.__s.__data_[3] = *(unsigned char *)(a2 + 51);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v4 & 0x300) != 0)
  {
    if ((v4 & 0x100) != 0) {
      v3[2].__r_.__value_.__l.__size_ = *(void *)(a2 + 56);
    }
    if ((v4 & 0x200) != 0) {
      LODWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
  }
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

void sub_1267D9C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v4) {
    goto LABEL_35;
  }
  if (v4)
  {
    uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v6 = (std::string **)(a1 + 24);
    uint64_t v7 = *(void *)(a1 + 8);
    uint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
    if (v7) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_17;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  int v9 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v10 = *(void *)(a1 + 8);
  std::string::size_type v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
  if (v10) {
    std::string::size_type v11 = (uint64_t *)*v11;
  }
  sub_1881DF4((std::string **)(a1 + 32), v9, v11);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_17:
  uint64_t v12 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v13 = *(void *)(a1 + 8);
  std::string::size_type v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
  if (v13) {
    std::string::size_type v14 = (uint64_t *)*v14;
  }
  sub_1881DF4((std::string **)(a1 + 40), v12, v14);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_20:
  uint64_t v15 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v16 = *(void *)(a1 + 8);
  uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
  if (v16) {
    uint64_t v17 = (uint64_t *)*v17;
  }
  sub_1881DF4((std::string **)(a1 + 48), v15, v17);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_23:
  uint64_t v18 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x10u;
  uint64_t v19 = *(void *)(a1 + 8);
  uint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
  if (v19) {
    uint64_t v20 = (uint64_t *)*v20;
  }
  sub_1881DF4((std::string **)(a1 + 56), v18, v20);
  if ((v4 & 0x20) == 0)
  {
LABEL_8:
    if ((v4 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_29;
  }
LABEL_26:
  uint64_t v21 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x20u;
  uint64_t v22 = *(void *)(a1 + 8);
  uint64_t v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
  if (v22) {
    uint64_t v23 = (uint64_t *)*v23;
  }
  sub_1881DF4((std::string **)(a1 + 64), v21, v23);
  if ((v4 & 0x40) == 0)
  {
LABEL_9:
    if ((v4 & 0x80) == 0) {
      goto LABEL_35;
    }
    goto LABEL_32;
  }
LABEL_29:
  uint64_t v24 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x40u;
  uint64_t v25 = *(void *)(a1 + 8);
  uint64_t v26 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
  if (v25) {
    uint64_t v26 = (uint64_t *)*v26;
  }
  sub_1881DF4((std::string **)(a1 + 72), v24, v26);
  if ((v4 & 0x80) != 0)
  {
LABEL_32:
    uint64_t v27 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 0x80u;
    uint64_t v28 = *(void *)(a1 + 8);
    uint64_t v29 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
    if (v28) {
      uint64_t v29 = (uint64_t *)*v29;
    }
    sub_1881DF4((std::string **)(a1 + 80), v27, v29);
  }
LABEL_35:
  if ((v4 & 0x3F00) == 0) {
    goto LABEL_44;
  }
  if ((v4 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x100u;
    uint64_t v31 = *(void *)(a1 + 88);
    if (!v31)
    {
      uint64_t v32 = *(void *)(a1 + 8);
      uint64_t v33 = (void *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
      if (v32) {
        uint64_t v33 = (void *)*v33;
      }
      uint64_t v31 = sub_185089C((uint64_t)v33);
      *(void *)(a1 + 88) = v31;
    }
    if (*(void *)(a2 + 88)) {
      uint64_t v34 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      uint64_t v34 = &off_254D2B0;
    }
    sub_16CE3CC(v31, (uint64_t)v34);
    if ((v4 & 0x200) == 0)
    {
LABEL_38:
      if ((v4 & 0x400) == 0) {
        goto LABEL_39;
      }
      goto LABEL_64;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_38;
  }
  *(_DWORD *)(a1 + 16) |= 0x200u;
  uint64_t v35 = *(void *)(a1 + 96);
  if (!v35)
  {
    uint64_t v36 = *(void *)(a1 + 8);
    uint64_t v37 = (void *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
    if (v36) {
      uint64_t v37 = (void *)*v37;
    }
    uint64_t v35 = sub_15C1CB4((uint64_t)v37);
    *(void *)(a1 + 96) = v35;
  }
  if (*(void *)(a2 + 96)) {
    uint64_t v38 = *(uint64_t (****)())(a2 + 96);
  }
  else {
    uint64_t v38 = &off_253F2E8;
  }
  sub_15B04F0(v35, (uint64_t)v38);
  if ((v4 & 0x400) == 0)
  {
LABEL_39:
    if ((v4 & 0x800) == 0) {
      goto LABEL_40;
    }
    goto LABEL_65;
  }
LABEL_64:
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  if ((v4 & 0x800) == 0)
  {
LABEL_40:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_41;
    }
LABEL_66:
    *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
    if ((v4 & 0x2000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_42;
  }
LABEL_65:
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  if ((v4 & 0x1000) != 0) {
    goto LABEL_66;
  }
LABEL_41:
  if ((v4 & 0x2000) != 0) {
LABEL_42:
  }
    *(_DWORD *)(a1 + 124) = *(_DWORD *)(a2 + 124);
LABEL_43:
  *(_DWORD *)(a1 + 16) |= v4;
LABEL_44:
  uint64_t v30 = *(void *)(a2 + 8);
  if (v30)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v30 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_12680BC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_12813B0(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_12680E8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x100) != 0)
  {
    uint64_t result = sub_16CE508(*(void *)(a1 + 88));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x200) == 0) {
    return 1;
  }
  uint64_t result = sub_15B06D8(*(void *)(a1 + 96));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1268134@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.ProblemContext");
}

void *sub_1268144(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_12681C8((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_12681C8(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 24);
  uint64_t v2 = (void ***)(a1 + 24);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 72));
  }
  uint64_t result = (void ***)(a1 + 80);
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_252F688)
  {
    if (*(void *)(a1 + 88))
    {
      sub_184B078();
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 96);
    if (result)
    {
      sub_15B3DFC(result);
      operator delete();
    }
  }
  return result;
}

void sub_12682F8(void *a1)
{
  sub_1268144(a1);

  operator delete();
}

uint64_t sub_1268330(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v46 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v46, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v46 + 1);
    unsigned int v9 = **(unsigned char **)v46;
    if ((char)**(unsigned char **)v46 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v46, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v46 + 2);
      }
    }
    *(void *)uint64_t v46 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_76;
        }
        v5 |= 0x400u;
        uint64_t v12 = (char *)(v8 + 1);
        uint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)uint64_t v46 = v12;
          *(void *)(a1 + 104) = v13;
          goto LABEL_62;
        }
        uint64_t v40 = sub_188C138((uint64_t)v8, v13);
        *(void *)uint64_t v46 = v40;
        *(void *)(a1 + 104) = v41;
        if (v40) {
          goto LABEL_62;
        }
        goto LABEL_96;
      case 2u:
        if (v9 != 18) {
          goto LABEL_76;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        uint64_t v15 = *(void *)(a1 + 88);
        if (!v15)
        {
          uint64_t v16 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v16 = (void *)*v16;
          }
          uint64_t v15 = sub_185089C((uint64_t)v16);
          *(void *)(a1 + 88) = v15;
          uint64_t v8 = *(unsigned __int8 **)v46;
        }
        uint64_t v17 = sub_12688D0(a3, v15, v8);
        goto LABEL_61;
      case 3u:
        if (v9 != 26) {
          goto LABEL_76;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v19 = (uint64_t *)*v19;
        }
        uint64_t v20 = (void *)(a1 + 24);
        goto LABEL_60;
      case 4u:
        if (v9 != 34) {
          goto LABEL_76;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v21 = *(void *)(a1 + 8);
        uint64_t v19 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          uint64_t v19 = (uint64_t *)*v19;
        }
        uint64_t v20 = (void *)(a1 + 32);
        goto LABEL_60;
      case 5u:
        if (v9 != 42) {
          goto LABEL_76;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v22 = *(void *)(a1 + 8);
        uint64_t v19 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          uint64_t v19 = (uint64_t *)*v19;
        }
        uint64_t v20 = (void *)(a1 + 40);
        goto LABEL_60;
      case 6u:
        if (v9 != 50) {
          goto LABEL_76;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v23 = *(void *)(a1 + 8);
        uint64_t v19 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
        if (v23) {
          uint64_t v19 = (uint64_t *)*v19;
        }
        uint64_t v20 = (void *)(a1 + 48);
        goto LABEL_60;
      case 7u:
        if (v9 != 58) {
          goto LABEL_76;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v24 = *(void *)(a1 + 8);
        uint64_t v19 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
        if (v24) {
          uint64_t v19 = (uint64_t *)*v19;
        }
        uint64_t v20 = (void *)(a1 + 56);
        goto LABEL_60;
      case 8u:
        if (v9 != 66) {
          goto LABEL_76;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v25 = *(void *)(a1 + 8);
        uint64_t v19 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
        if (v25) {
          uint64_t v19 = (uint64_t *)*v19;
        }
        uint64_t v20 = (void *)(a1 + 64);
        goto LABEL_60;
      case 9u:
        if (v9 != 73) {
          goto LABEL_76;
        }
        v5 |= 0x800u;
        *(void *)(a1 + 112) = *(void *)v8;
        *(void *)uint64_t v46 = v8 + 8;
        goto LABEL_62;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_76;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v26 = *(void *)(a1 + 8);
        uint64_t v19 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
        if (v26) {
          uint64_t v19 = (uint64_t *)*v19;
        }
        uint64_t v20 = (void *)(a1 + 72);
        goto LABEL_60;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_76;
        }
        *(_DWORD *)(a1 + 16) |= 0x200u;
        uint64_t v27 = *(void *)(a1 + 96);
        if (!v27)
        {
          uint64_t v28 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v28 = (void *)*v28;
          }
          uint64_t v27 = sub_15C1CB4((uint64_t)v28);
          *(void *)(a1 + 96) = v27;
          uint64_t v8 = *(unsigned __int8 **)v46;
        }
        uint64_t v17 = sub_11B3E48(a3, v27, v8);
        goto LABEL_61;
      case 0xCu:
        if (v9 != 98) {
          goto LABEL_76;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v29 = *(void *)(a1 + 8);
        uint64_t v19 = (uint64_t *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
        if (v29) {
          uint64_t v19 = (uint64_t *)*v19;
        }
        uint64_t v20 = (void *)(a1 + 80);
LABEL_60:
        uint64_t v30 = (std::string *)sub_1880F84(v20, v19);
        uint64_t v17 = (void *)sub_188C244(v30, *(char **)v46, (uint64_t)a3);
        goto LABEL_61;
      case 0xDu:
        if (v9 != 104) {
          goto LABEL_76;
        }
        v5 |= 0x1000u;
        uint64_t v31 = (char *)(v8 + 1);
        uint64_t v32 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_68;
        }
        int v33 = *v31;
        uint64_t v32 = v32 + (v33 << 7) - 128;
        if (v33 < 0)
        {
          uint64_t v42 = sub_188C138((uint64_t)v8, v32);
          *(void *)uint64_t v46 = v42;
          *(unsigned char *)(a1 + 120) = v43 != 0;
          if (!v42) {
            goto LABEL_96;
          }
        }
        else
        {
          uint64_t v31 = (char *)(v8 + 2);
LABEL_68:
          *(void *)uint64_t v46 = v31;
          *(unsigned char *)(a1 + 120) = v32 != 0;
        }
        goto LABEL_62;
      case 0xEu:
        if (v9 != 112) {
          goto LABEL_76;
        }
        uint64_t v34 = (char *)(v8 + 1);
        unint64_t v35 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_73;
        }
        int v36 = *v34;
        int v37 = v35 + (v36 << 7);
        unint64_t v35 = (v37 - 128);
        if (v36 < 0)
        {
          *(void *)uint64_t v46 = sub_188C138((uint64_t)v8, (v37 - 128));
          if (!*(void *)v46) {
            goto LABEL_96;
          }
          unint64_t v35 = v44;
        }
        else
        {
          uint64_t v34 = (char *)(v8 + 2);
LABEL_73:
          *(void *)uint64_t v46 = v34;
        }
        if (v35 > 5)
        {
          if (*v7) {
            uint64_t v45 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v45 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(14, v35, v45);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x2000u;
          *(_DWORD *)(a1 + 124) = v35;
        }
        goto LABEL_62;
      default:
LABEL_76:
        if (v9) {
          BOOL v38 = (v9 & 7) == 4;
        }
        else {
          BOOL v38 = 1;
        }
        if (!v38)
        {
          if (*v7)
          {
            uint64_t v39 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v39 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v46;
          }
          uint64_t v17 = sub_1885AC0(v9, v39, (char *)v8, a3);
LABEL_61:
          *(void *)uint64_t v46 = v17;
          if (!v17) {
            goto LABEL_96;
          }
LABEL_62:
          if (sub_11947B8((uint64_t)a3, (char **)v46, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_96:
        }
          *(void *)uint64_t v46 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v46;
    }
  }
}

char *sub_12688D0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_184B0B4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1268960(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x400) != 0)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 104);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 88);
    *int v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    int v4 = sub_184B3AC(v10, v12, a3);
    if ((v6 & 1) == 0)
    {
LABEL_10:
      if ((v6 & 2) == 0) {
        goto LABEL_11;
      }
      goto LABEL_29;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_10;
  }
  int v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 2) == 0)
  {
LABEL_11:
    if ((v6 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_30;
  }
LABEL_29:
  int v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_12:
    if ((v6 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_31;
  }
LABEL_30:
  int v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_13:
    if ((v6 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_32;
  }
LABEL_31:
  int v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_14:
    if ((v6 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_33;
  }
LABEL_32:
  int v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0)
  {
LABEL_15:
    if ((v6 & 0x800) == 0) {
      goto LABEL_16;
    }
    goto LABEL_34;
  }
LABEL_33:
  int v4 = sub_117A0AC(a3, 8, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x800) == 0)
  {
LABEL_16:
    if ((v6 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_37;
  }
LABEL_34:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 112);
  *int v4 = 73;
  *(void *)(v4 + 1) = v13;
  v4 += 9;
  if ((v6 & 0x40) == 0)
  {
LABEL_17:
    if ((v6 & 0x200) == 0) {
      goto LABEL_18;
    }
    goto LABEL_38;
  }
LABEL_37:
  int v4 = sub_117A0AC(a3, 10, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x200) == 0)
  {
LABEL_18:
    if ((v6 & 0x80) == 0) {
      goto LABEL_19;
    }
    goto LABEL_44;
  }
LABEL_38:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v14 = *(void *)(a1 + 96);
  *int v4 = 90;
  unsigned int v15 = *(_DWORD *)(v14 + 44);
  v4[1] = v15;
  if (v15 > 0x7F) {
    uint64_t v16 = sub_188A9CC(v15, v4 + 1);
  }
  else {
    uint64_t v16 = v4 + 2;
  }
  int v4 = sub_15B43E4(v14, v16, a3);
  if ((v6 & 0x80) == 0)
  {
LABEL_19:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_45;
  }
LABEL_44:
  int v4 = sub_117A0AC(a3, 12, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x1000) == 0)
  {
LABEL_20:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_48;
  }
LABEL_45:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v17 = *(unsigned char *)(a1 + 120);
  *int v4 = 104;
  v4[1] = v17;
  v4 += 2;
  if ((v6 & 0x2000) != 0)
  {
LABEL_48:
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v18 = *(int *)(a1 + 124);
    *int v4 = 112;
    v4[1] = v18;
    if (v18 > 0x7F)
    {
      v4[1] = v18 | 0x80;
      unint64_t v19 = v18 >> 7;
      v4[2] = v18 >> 7;
      v4 += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v20 = v19 >> 14;
          v19 >>= 7;
          *v4++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_54:
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return v4;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    uint64_t v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    uint64_t v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(v4, v24, (int)v25);
    v4 += v26;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v24, v25, v4);
}

uint64_t sub_1268D7C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_21;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    unint64_t v19 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
    uint64_t v21 = *(void *)(v19 + 8);
    if ((v20 & 0x80u) == 0) {
      uint64_t v21 = v20;
    }
    v3 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_44;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  unint64_t v22 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
  uint64_t v24 = *(void *)(v22 + 8);
  if ((v23 & 0x80u) == 0) {
    uint64_t v24 = v23;
  }
  v3 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_47;
  }
LABEL_44:
  unint64_t v25 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v26 = *(unsigned __int8 *)(v25 + 23);
  uint64_t v27 = *(void *)(v25 + 8);
  if ((v26 & 0x80u) == 0) {
    uint64_t v27 = v26;
  }
  v3 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_16:
    if ((v2 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_50;
  }
LABEL_47:
  unint64_t v28 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v29 = *(unsigned __int8 *)(v28 + 23);
  uint64_t v30 = *(void *)(v28 + 8);
  if ((v29 & 0x80u) == 0) {
    uint64_t v30 = v29;
  }
  v3 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_17:
    if ((v2 & 0x80) == 0) {
      goto LABEL_21;
    }
    goto LABEL_18;
  }
LABEL_50:
  unint64_t v31 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v32 = *(unsigned __int8 *)(v31 + 23);
  uint64_t v33 = *(void *)(v31 + 8);
  if ((v32 & 0x80u) == 0) {
    uint64_t v33 = v32;
  }
  v3 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x80) != 0)
  {
LABEL_18:
    unint64_t v10 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
    uint64_t v12 = *(void *)(v10 + 8);
    if ((v11 & 0x80u) == 0) {
      uint64_t v12 = v11;
    }
    v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_21:
  if ((v2 & 0x3F00) == 0) {
    goto LABEL_36;
  }
  if ((v2 & 0x100) == 0)
  {
    if ((v2 & 0x200) == 0) {
      goto LABEL_24;
    }
LABEL_55:
    uint64_t v35 = sub_15B4924(*(void *)(a1 + 96));
    v3 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 0x400) == 0) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  uint64_t v34 = sub_184B568(*(void *)(a1 + 88));
  v3 += v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x200) != 0) {
    goto LABEL_55;
  }
LABEL_24:
  if ((v2 & 0x400) != 0) {
LABEL_25:
  }
    v3 += ((9 * (__clz(*(void *)(a1 + 104) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_26:
  uint64_t v13 = v3 + 9;
  if ((v2 & 0x800) == 0) {
    uint64_t v13 = v3;
  }
  if ((v2 & 0x1000) != 0) {
    uint64_t v3 = v13 + 2;
  }
  else {
    uint64_t v3 = v13;
  }
  if ((v2 & 0x2000) != 0)
  {
    int v14 = *(_DWORD *)(a1 + 124);
    uint64_t v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v14 >= 0) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = 11;
    }
    v3 += v16;
  }
LABEL_36:
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v36 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v36 + 31) < 0) {
      uint64_t v37 = *(void *)(v36 + 16);
    }
    else {
      uint64_t v37 = *(unsigned __int8 *)(v36 + 31);
    }
    v3 += v37;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void *sub_1269110@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.MerchantLookupContext");
}

void *sub_1269120(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1269194(void *a1)
{
  sub_1269120(a1);

  operator delete();
}

char *sub_12691CC(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v31 + 1;
    unsigned int v9 = *v31;
    if (*v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v31 + 2;
      }
    }
    unint64_t v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      uint64_t v16 = v8 + 1;
      uint64_t v17 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_26;
      }
      int v18 = *v16;
      uint64_t v17 = v17 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        uint64_t v16 = v8 + 2;
LABEL_26:
        unint64_t v31 = v16;
        *(unsigned char *)(a1 + 26) = v17 != 0;
        goto LABEL_36;
      }
      unint64_t v25 = (char *)sub_188C138((uint64_t)v8, v17);
      unint64_t v31 = v25;
      *(unsigned char *)(a1 + 26) = v26 != 0;
      if (!v25) {
        goto LABEL_47;
      }
      goto LABEL_36;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    unint64_t v19 = v8 + 1;
    uint64_t v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    uint64_t v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      unint64_t v19 = v8 + 2;
LABEL_31:
      unint64_t v31 = v19;
      *(unsigned char *)(a1 + 25) = v20 != 0;
      goto LABEL_36;
    }
    uint64_t v27 = (char *)sub_188C138((uint64_t)v8, v20);
    unint64_t v31 = v27;
    *(unsigned char *)(a1 + 25) = v28 != 0;
    if (!v27) {
      goto LABEL_47;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 8)
  {
    v5 |= 1u;
    unint64_t v22 = v8 + 1;
    uint64_t v23 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v24 = *v22;
    uint64_t v23 = v23 + (v24 << 7) - 128;
    if ((v24 & 0x80000000) == 0)
    {
      unint64_t v22 = v8 + 2;
LABEL_35:
      unint64_t v31 = v22;
      *(unsigned char *)(a1 + 24) = v23 != 0;
      goto LABEL_36;
    }
    uint64_t v29 = (char *)sub_188C138((uint64_t)v8, v23);
    unint64_t v31 = v29;
    *(unsigned char *)(a1 + 24) = v30 != 0;
    if (!v29) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v31;
    }
    unint64_t v31 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v31) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  unint64_t v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v31;
}

unsigned char *sub_1269450(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 24);
    *unint64_t v4 = 8;
    v4[1] = v7;
    v4 += 2;
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_14;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v8 = *(unsigned char *)(a1 + 25);
  *unint64_t v4 = 16;
  v4[1] = v8;
  v4 += 2;
  if ((v6 & 4) != 0)
  {
LABEL_11:
    if (*(void *)a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v9 = *(unsigned char *)(a1 + 26);
    *unint64_t v4 = 24;
    v4[1] = v9;
    v4 += 2;
  }
LABEL_14:
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_12695B0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  uint64_t v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 4) != 0) {
    v2 += 2;
  }
  if ((v1 & 7) != 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_1269614()
{
  return 1;
}

void *sub_126961C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.MerchantLookupCorrections");
}

uint64_t sub_126962C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  int v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12696CC(uint64_t a1)
{
  sub_126962C(a1);

  operator delete();
}

uint64_t sub_1269704(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v64 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v64, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    char v8 = (char *)(*(void *)v64 + 1);
    unsigned int v9 = **(unsigned char **)v64;
    if ((char)**(unsigned char **)v64 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        char v8 = (char *)sub_188C180(*(uint64_t *)v64, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = (char *)(*(void *)v64 + 2);
      }
    }
    *(void *)uint64_t v64 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_60;
        }
        v5 |= 2u;
        unint64_t v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v12 = v8 + 2;
LABEL_13:
          *(void *)uint64_t v64 = v12;
          *(void *)(a1 + 32) = v13;
          goto LABEL_68;
        }
        uint64_t v46 = sub_188C138((uint64_t)v8, v13);
        *(void *)uint64_t v64 = v46;
        *(void *)(a1 + 32) = v47;
        if (v46) {
          goto LABEL_68;
        }
        goto LABEL_95;
      case 2u:
        if (v9 != 16) {
          goto LABEL_60;
        }
        v5 |= 4u;
        uint64_t v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v48 = sub_188C138((uint64_t)v8, v16);
          *(void *)uint64_t v64 = v48;
          *(void *)(a1 + 40) = v49;
          if (!v48) {
            goto LABEL_95;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_18:
          *(void *)uint64_t v64 = v15;
          *(void *)(a1 + 40) = v16;
        }
        goto LABEL_68;
      case 3u:
        if (v9 != 24) {
          goto LABEL_60;
        }
        v5 |= 8u;
        int v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v50 = sub_188C138((uint64_t)v8, v19);
          *(void *)uint64_t v64 = v50;
          *(unsigned char *)(a1 + 48) = v51 != 0;
          if (!v50) {
            goto LABEL_95;
          }
        }
        else
        {
          int v18 = v8 + 2;
LABEL_23:
          *(void *)uint64_t v64 = v18;
          *(unsigned char *)(a1 + 48) = v19 != 0;
        }
        goto LABEL_68;
      case 4u:
        if (v9 != 32) {
          goto LABEL_60;
        }
        v5 |= 0x10u;
        int v21 = v8 + 1;
        uint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v52 = sub_188C138((uint64_t)v8, v22);
          *(void *)uint64_t v64 = v52;
          *(unsigned char *)(a1 + 49) = v53 != 0;
          if (!v52) {
            goto LABEL_95;
          }
        }
        else
        {
          int v21 = v8 + 2;
LABEL_28:
          *(void *)uint64_t v64 = v21;
          *(unsigned char *)(a1 + 49) = v22 != 0;
        }
        goto LABEL_68;
      case 5u:
        if (v9 != 40) {
          goto LABEL_60;
        }
        v5 |= 0x20u;
        int v24 = v8 + 1;
        uint64_t v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        uint64_t v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v54 = sub_188C138((uint64_t)v8, v25);
          *(void *)uint64_t v64 = v54;
          *(unsigned char *)(a1 + 50) = v55 != 0;
          if (!v54) {
            goto LABEL_95;
          }
        }
        else
        {
          int v24 = v8 + 2;
LABEL_33:
          *(void *)uint64_t v64 = v24;
          *(unsigned char *)(a1 + 50) = v25 != 0;
        }
        goto LABEL_68;
      case 6u:
        if (v9 != 48) {
          goto LABEL_60;
        }
        v5 |= 0x100u;
        uint64_t v27 = v8 + 1;
        uint64_t v28 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v29 = *v27;
        uint64_t v28 = v28 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          uint64_t v56 = sub_188C138((uint64_t)v8, v28);
          *(void *)uint64_t v64 = v56;
          *(void *)(a1 + 56) = v57;
          if (!v56) {
            goto LABEL_95;
          }
        }
        else
        {
          uint64_t v27 = v8 + 2;
LABEL_38:
          *(void *)uint64_t v64 = v27;
          *(void *)(a1 + 56) = v28;
        }
        goto LABEL_68;
      case 7u:
        if (v9 != 56) {
          goto LABEL_60;
        }
        v5 |= 0x40u;
        uint64_t v30 = v8 + 1;
        uint64_t v31 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v32 = *v30;
        uint64_t v31 = v31 + (v32 << 7) - 128;
        if (v32 < 0)
        {
          uint64_t v58 = sub_188C138((uint64_t)v8, v31);
          *(void *)uint64_t v64 = v58;
          *(unsigned char *)(a1 + 51) = v59 != 0;
          if (!v58) {
            goto LABEL_95;
          }
        }
        else
        {
          uint64_t v30 = v8 + 2;
LABEL_43:
          *(void *)uint64_t v64 = v30;
          *(unsigned char *)(a1 + 51) = v31 != 0;
        }
        goto LABEL_68;
      case 8u:
        if (v9 != 66) {
          goto LABEL_60;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v33 = *(void *)(a1 + 8);
        uint64_t v34 = (uint64_t *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
        if (v33) {
          uint64_t v34 = (uint64_t *)*v34;
        }
        uint64_t v35 = (std::string *)sub_1880F84((void *)(a1 + 24), v34);
        unint64_t v36 = (void *)sub_188C244(v35, *(char **)v64, (uint64_t)a3);
        goto LABEL_67;
      case 9u:
        if (v9 != 72) {
          goto LABEL_60;
        }
        v5 |= 0x80u;
        uint64_t v37 = v8 + 1;
        uint64_t v38 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_52;
        }
        int v39 = *v37;
        uint64_t v38 = v38 + (v39 << 7) - 128;
        if (v39 < 0)
        {
          uint64_t v60 = sub_188C138((uint64_t)v8, v38);
          *(void *)uint64_t v64 = v60;
          *(unsigned char *)(a1 + 52) = v61 != 0;
          if (!v60) {
            goto LABEL_95;
          }
        }
        else
        {
          uint64_t v37 = v8 + 2;
LABEL_52:
          *(void *)uint64_t v64 = v37;
          *(unsigned char *)(a1 + 52) = v38 != 0;
        }
        goto LABEL_68;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_60;
        }
        uint64_t v40 = v8 + 1;
        unint64_t v41 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_57;
        }
        int v42 = *v40;
        int v43 = v41 + (v42 << 7);
        unint64_t v41 = (v43 - 128);
        if (v42 < 0)
        {
          *(void *)uint64_t v64 = sub_188C138((uint64_t)v8, (v43 - 128));
          if (!*(void *)v64) {
            goto LABEL_95;
          }
          unint64_t v41 = v62;
        }
        else
        {
          uint64_t v40 = v8 + 2;
LABEL_57:
          *(void *)uint64_t v64 = v40;
        }
        if (sub_129EB9C(v41))
        {
          *(_DWORD *)(a1 + 16) |= 0x200u;
          *(_DWORD *)(a1 + 64) = v41;
        }
        else
        {
          if (*v7) {
            uint64_t v63 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v63 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(10, v41, v63);
        }
        goto LABEL_68;
      default:
LABEL_60:
        if (v9) {
          BOOL v44 = (v9 & 7) == 4;
        }
        else {
          BOOL v44 = 1;
        }
        if (!v44)
        {
          if (*v7)
          {
            uint64_t v45 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v45 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v8 = *(char **)v64;
          }
          unint64_t v36 = sub_1885AC0(v9, v45, v8, a3);
LABEL_67:
          *(void *)uint64_t v64 = v36;
          if (!v36) {
            goto LABEL_95;
          }
LABEL_68:
          if (sub_11947B8((uint64_t)a3, (char **)v64, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_95:
        }
          *(void *)uint64_t v64 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v64;
    }
  }
}

unsigned char *sub_1269CA0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 32);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 40);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v13 = *(unsigned char *)(a1 + 48);
    *uint64_t v4 = 24;
    v4[1] = v13;
    v4 += 2;
    if ((v6 & 0x10) == 0)
    {
LABEL_17:
      if ((v6 & 0x20) == 0) {
        goto LABEL_18;
      }
      goto LABEL_26;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_17;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v14 = *(unsigned char *)(a1 + 49);
  *uint64_t v4 = 32;
  v4[1] = v14;
  v4 += 2;
  if ((v6 & 0x20) == 0)
  {
LABEL_18:
    if ((v6 & 0x100) == 0) {
      goto LABEL_35;
    }
    goto LABEL_29;
  }
LABEL_26:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v15 = *(unsigned char *)(a1 + 50);
  *uint64_t v4 = 40;
  v4[1] = v15;
  v4 += 2;
  if ((v6 & 0x100) != 0)
  {
LABEL_29:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(void *)(a1 + 56);
    *uint64_t v4 = 48;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_35:
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v19 = *(unsigned char *)(a1 + 51);
    *uint64_t v4 = 56;
    v4[1] = v19;
    v4 += 2;
    if ((v6 & 1) == 0)
    {
LABEL_37:
      if ((v6 & 0x80) == 0) {
        goto LABEL_38;
      }
      goto LABEL_44;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_37;
  }
  uint64_t v4 = sub_117A0AC(a3, 8, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x80) == 0)
  {
LABEL_38:
    if ((v6 & 0x200) == 0) {
      goto LABEL_53;
    }
    goto LABEL_47;
  }
LABEL_44:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v20 = *(unsigned char *)(a1 + 52);
  *uint64_t v4 = 72;
  v4[1] = v20;
  v4 += 2;
  if ((v6 & 0x200) != 0)
  {
LABEL_47:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v21 = *(int *)(a1 + 64);
    *uint64_t v4 = 80;
    v4[1] = v21;
    if (v21 > 0x7F)
    {
      v4[1] = v21 | 0x80;
      unint64_t v22 = v21 >> 7;
      v4[2] = v21 >> 7;
      v4 += 3;
      if (v21 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v23 = v22 >> 14;
          v22 >>= 7;
          *v4++ = v22;
        }
        while (v23);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_53:
  uint64_t v24 = *(void *)(a1 + 8);
  if ((v24 & 1) == 0) {
    return v4;
  }
  unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v26 + 31) < 0)
  {
    uint64_t v27 = *(void **)(v26 + 8);
    uint64_t v28 = *(void *)(v26 + 16);
  }
  else
  {
    uint64_t v27 = (void *)(v26 + 8);
    LODWORD(v28) = *(unsigned __int8 *)(v26 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v28)
  {
    uint64_t v29 = (int)v28;
    memcpy(v4, v27, (int)v28);
    v4 += v29;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v27, v28, v4);
}

uint64_t sub_126A094(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v1)
  {
    uint64_t v2 = 0;
    goto LABEL_22;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_10;
    }
  }
  v2 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_10:
  if ((v1 & 4) != 0) {
    v2 += ((9 * (__clz(*(void *)(a1 + 40) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if ((v1 & 8) != 0) {
    v2 += 2;
  }
  if ((v1 & 0x10) != 0) {
    v2 += 2;
  }
  if ((v1 & 0x20) != 0) {
    v2 += 2;
  }
  if ((v1 & 0x40) != 0) {
    v2 += 2;
  }
  if ((v1 & 0x80) != 0) {
    v2 += 2;
  }
LABEL_22:
  if ((v1 & 0x300) != 0)
  {
    if ((v1 & 0x100) != 0) {
      v2 += ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    if ((v1 & 0x200) != 0)
    {
      int v6 = *(_DWORD *)(a1 + 64);
      if (v6 < 0) {
        uint64_t v7 = 11;
      }
      else {
        uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v7;
    }
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_126A210()
{
  return 1;
}

void *sub_126A218@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.NavigationSettings");
}

uint64_t sub_126A228(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_126A2E0(uint64_t a1)
{
  sub_126A228(a1);

  operator delete();
}

uint64_t sub_126A318(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_126A394(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)char v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)char v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v16 = (uint64_t *)*v16;
        }
        unint64_t v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      unint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        unint64_t v16 = (uint64_t *)*v16;
      }
      unint64_t v17 = (void *)(a1 + 24);
LABEL_27:
      char v19 = (std::string *)sub_1880F84(v17, v16);
      char v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      char v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      char v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v20;
    }
    char v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)char v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)char v20 = 0;
  return *(void *)v20;
}

char *sub_126A53C(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_126A628(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_126A704()
{
  return 1;
}

void *sub_126A70C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.CurrentEnvironmentManifestURLs.ManifestURL");
}

uint64_t sub_126A71C(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_12C2334((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_126A7E0(uint64_t a1)
{
  sub_126A71C(a1);

  operator delete();
}

uint64_t sub_126A818(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v27 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    return *(void *)v27;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v27 + 1);
    unsigned int v8 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v27 + 2);
      }
    }
    *(void *)uint64_t v27 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 == 26)
      {
        unint64_t v16 = v7 - 1;
        while (1)
        {
          unint64_t v17 = (unsigned __int8 *)(v16 + 1);
          *(void *)uint64_t v27 = v16 + 1;
          uint64_t v18 = *(_DWORD **)(a1 + 40);
          if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
          {
            *(_DWORD *)(a1 + 32) = v19 + 1;
            uint64_t v20 = *(void *)&v18[2 * v19 + 2];
          }
          else
          {
            unint64_t v21 = sub_1283B1C(*(void *)(a1 + 24));
            uint64_t v20 = sub_188CDC8(a1 + 24, (uint64_t)v21);
            unint64_t v17 = *(unsigned __int8 **)v27;
          }
          unint64_t v16 = (char *)sub_126AA60(a3, v20, v17);
          *(void *)uint64_t v27 = v16;
          if (!v16) {
            goto LABEL_45;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
            goto LABEL_40;
          }
        }
      }
    }
    else if (v11 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v22 = *(void *)(a1 + 8);
        unint64_t v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          unint64_t v23 = (uint64_t *)*v23;
        }
        uint64_t v24 = (void *)(a1 + 56);
        goto LABEL_38;
      }
    }
    else if (v11 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v25 = *(void *)(a1 + 8);
      unint64_t v23 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
      if (v25) {
        unint64_t v23 = (uint64_t *)*v23;
      }
      uint64_t v24 = (void *)(a1 + 48);
LABEL_38:
      unint64_t v26 = (std::string *)sub_1880F84(v24, v23);
      uint64_t v15 = (void *)sub_188C244(v26, *(char **)v27, (uint64_t)a3);
      goto LABEL_39;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      char v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      char v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v27;
    }
    uint64_t v15 = sub_1885AC0(v8, v14, v7, a3);
LABEL_39:
    *(void *)uint64_t v27 = v15;
    if (!v15) {
      goto LABEL_45;
    }
LABEL_40:
    if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
      return *(void *)v27;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v27;
  }
LABEL_45:
  *(void *)uint64_t v27 = 0;
  return *(void *)v27;
}

uint64_t sub_126AA60(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_126A394(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_126AAF0(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v7 = *(_DWORD *)(a1 + 32);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 26;
      unsigned int v10 = *(_DWORD *)(v9 + 20);
      v4[1] = v10;
      if (v10 > 0x7F) {
        unsigned int v11 = sub_188A9CC(v10, v4 + 1);
      }
      else {
        unsigned int v11 = v4 + 2;
      }
      uint64_t v4 = sub_126A53C(v9, v11, a3);
    }
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*a3 - (void)v4 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    v4 += v17;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_126AC78(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_126A628(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      unint64_t v12 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
      uint64_t v14 = *(void *)(v12 + 8);
      if ((v13 & 0x80u) == 0) {
        uint64_t v14 = v13;
      }
      v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v2 += v18;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_126ADBC()
{
  return 1;
}

void *sub_126ADC4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.CurrentEnvironmentManifestURLs");
}

void *sub_126ADD4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DE8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_126AE50(void *a1)
{
  sub_126ADD4(a1);

  operator delete();
}

uint64_t sub_126AE88(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(_DWORD *)(a1 + 56) = 0;
    *(void *)(a1 + 48) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_126AEF0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v38 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v38, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (uint64_t **)(a1 + 24);
  int v8 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v9 = (char *)(*(void *)v38 + 1);
    unsigned int v10 = **(unsigned char **)v38;
    if ((char)**(unsigned char **)v38 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if (*v9 < 0)
      {
        unint64_t v9 = (char *)sub_188C180(*(uint64_t *)v38, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        unint64_t v9 = (char *)(*(void *)v38 + 2);
      }
    }
    *(void *)uint64_t v38 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 8) {
          goto LABEL_38;
        }
        uint64_t v13 = v9 + 1;
        unint64_t v14 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        int v16 = v14 + (v15 << 7);
        unint64_t v14 = (v16 - 128);
        if (v15 < 0)
        {
          *(void *)uint64_t v38 = sub_188C138((uint64_t)v9, (v16 - 128));
          if (!*(void *)v38) {
            goto LABEL_60;
          }
          unint64_t v14 = v32;
        }
        else
        {
          uint64_t v13 = v9 + 2;
LABEL_13:
          *(void *)uint64_t v38 = v13;
        }
        if (v14 > 8)
        {
          if (*v8) {
            uint64_t v37 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v14, v37);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 1u;
          *(_DWORD *)(a1 + 48) = v14;
        }
        goto LABEL_45;
      case 2u:
        if (v10 != 18) {
          goto LABEL_38;
        }
        unint64_t v17 = v9 - 1;
        while (1)
        {
          uint64_t v18 = (char *)(v17 + 1);
          *(void *)uint64_t v38 = v17 + 1;
          uint64_t v19 = *(_DWORD **)(a1 + 40);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 32), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 32) = v20 + 1;
            unint64_t v21 = *(std::string **)&v19[2 * v20 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            void *v23 = v22;
            v23[1] = sub_3A6EDC;
            void *v22 = 0;
            v22[1] = 0;
            v22[2] = 0;
            unint64_t v21 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v22);
            uint64_t v18 = *(char **)v38;
          }
          unint64_t v17 = sub_188C244(v21, v18, (uint64_t)a3);
          *(void *)uint64_t v38 = v17;
          if (!v17) {
            goto LABEL_60;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 18) {
            goto LABEL_45;
          }
        }
      case 3u:
        if (v10 != 24) {
          goto LABEL_38;
        }
        v5 |= 2u;
        uint64_t v24 = v9 + 1;
        int v25 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_32;
        }
        int v26 = *v24;
        int v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v33 = sub_188C0D0((uint64_t)v9, v25);
          *(void *)uint64_t v38 = v33;
          *(_DWORD *)(a1 + 52) = v34;
          if (!v33) {
            goto LABEL_60;
          }
        }
        else
        {
          uint64_t v24 = v9 + 2;
LABEL_32:
          *(void *)uint64_t v38 = v24;
          *(_DWORD *)(a1 + 52) = v25;
        }
        goto LABEL_45;
      case 4u:
        if (v10 != 32) {
          goto LABEL_38;
        }
        v5 |= 4u;
        uint64_t v27 = v9 + 1;
        int v28 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_37;
        }
        int v29 = *v27;
        int v28 = v28 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          uint64_t v35 = sub_188C0D0((uint64_t)v9, v28);
          *(void *)uint64_t v38 = v35;
          *(_DWORD *)(a1 + 56) = v36;
          if (!v35) {
            goto LABEL_60;
          }
        }
        else
        {
          uint64_t v27 = v9 + 2;
LABEL_37:
          *(void *)uint64_t v38 = v27;
          *(_DWORD *)(a1 + 56) = v28;
        }
        goto LABEL_45;
      default:
LABEL_38:
        if (v10) {
          BOOL v30 = (v10 & 7) == 4;
        }
        else {
          BOOL v30 = 1;
        }
        if (!v30)
        {
          if (*v8)
          {
            uint64_t v31 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v9 = *(char **)v38;
          }
          *(void *)uint64_t v38 = sub_1885AC0(v10, v31, v9, a3);
          if (!*(void *)v38) {
            goto LABEL_60;
          }
LABEL_45:
          if (sub_11947B8((uint64_t)a3, (char **)v38, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_60:
        }
          *(void *)uint64_t v38 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v38;
    }
  }
}

char *sub_126B294(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 48);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v10 = *(unsigned int *)(a1 + 32);
  if ((int)v10 >= 1)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 8 * v10;
    do
    {
      uint64_t v13 = *(void **)(*(void *)(a1 + 40) + v11 + 8);
      if (*((char *)v13 + 23) < 0)
      {
        int64_t v14 = v13[1];
        if (v14 > 127) {
          goto LABEL_19;
        }
      }
      else
      {
        int64_t v14 = *((unsigned __int8 *)v13 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v14)
      {
        *char v4 = 18;
        v4[1] = v14;
        if (*((char *)v13 + 23) < 0) {
          uint64_t v13 = (void *)*v13;
        }
        int v15 = v4 + 2;
        memcpy(v15, v13, v14);
        char v4 = &v15[v14];
        goto LABEL_17;
      }
LABEL_19:
      char v4 = (char *)sub_188A868(a3, 2, (uint64_t)v13, v4);
LABEL_17:
      v11 += 8;
    }
    while (v12 != v11);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 52);
    *char v4 = 24;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 56);
    *char v4 = 32;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return v4;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    int v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    int v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(v4, v25, (int)v26);
    v4 += v27;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v25, v26, v4);
}

uint64_t sub_126B574(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  int v7 = *(_DWORD *)(a1 + 16);
  if ((v7 & 7) != 0)
  {
    if (v7)
    {
      int v10 = *(_DWORD *)(a1 + 48);
      if (v10 < 0) {
        uint64_t v11 = 11;
      }
      else {
        uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v3 += v11;
      if ((v7 & 2) == 0)
      {
LABEL_11:
        if ((v7 & 4) == 0) {
          goto LABEL_13;
        }
        goto LABEL_12;
      }
    }
    else if ((v7 & 2) == 0)
    {
      goto LABEL_11;
    }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 52) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v7 & 4) != 0) {
LABEL_12:
    }
      v3 += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_13:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v12 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_126B6A8(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_126B7C0()
{
  return 1;
}

void *sub_126B7C8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.SuggestionList.SuggestionEntry");
}

uint64_t sub_126B7D8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_252F7B0)
  {
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_182B32C(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 64);
    if (v7)
    {
      sub_182E7B8(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_12C23B4((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_126B8D0(uint64_t a1)
{
  sub_126B7D8(a1);

  operator delete();
}

uint64_t sub_126B908(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_126AE88(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 7) == 0) {
    goto LABEL_10;
  }
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
  unint64_t v8 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v8 + 23) < 0)
  {
    **(unsigned char **)unint64_t v8 = 0;
    *(void *)(v8 + 8) = 0;
    if ((v5 & 2) != 0) {
      goto LABEL_18;
    }
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  *(unsigned char *)unint64_t v8 = 0;
  *(unsigned char *)(v8 + 23) = 0;
  if ((v5 & 2) == 0) {
    goto LABEL_8;
  }
LABEL_18:
  uint64_t result = sub_182B368(*(void *)(v1 + 56));
  if ((v5 & 4) != 0) {
LABEL_9:
  }
    uint64_t result = sub_182E7F4(*(void *)(v1 + 64));
LABEL_10:
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_126B9E8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v27 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    return *(void *)v27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    char v7 = (unsigned __int8 *)(*(void *)v27 + 1);
    unsigned int v8 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        char v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = (unsigned __int8 *)(*(void *)v27 + 2);
      }
    }
    *(void *)uint64_t v27 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (std::string *)sub_1880F84((void *)(a1 + 48), v12);
        uint64_t v14 = (uint64_t)sub_188C244(v13, *(char **)v27, (uint64_t)a3);
        goto LABEL_42;
      case 2u:
        if (v8 != 18) {
          goto LABEL_35;
        }
        int v15 = v7 - 1;
        while (1)
        {
          unsigned int v16 = v15 + 1;
          *(void *)uint64_t v27 = v15 + 1;
          unsigned int v17 = *(_DWORD **)(a1 + 40);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 32) = v18 + 1;
            uint64_t v19 = *(void *)&v17[2 * v18 + 2];
          }
          else
          {
            uint64_t v20 = sub_1283C44(*(void *)(a1 + 24));
            uint64_t v19 = sub_188CDC8(a1 + 24, v20);
            unsigned int v16 = *(unsigned __int8 **)v27;
          }
          int v15 = (unsigned __int8 *)sub_126BCB8(a3, v19, v16);
          *(void *)uint64_t v27 = v15;
          if (!v15) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
            goto LABEL_43;
          }
        }
      case 3u:
        if (v8 != 26) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v21 = *(void *)(a1 + 56);
        if (!v21)
        {
          uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v22 = (void *)*v22;
          }
          uint64_t v21 = sub_1836E54((uint64_t)v22);
          *(void *)(a1 + 56) = v21;
          char v7 = *(unsigned __int8 **)v27;
        }
        uint64_t v14 = sub_11798C8(a3, v21, v7);
        goto LABEL_42;
      case 4u:
        if (v8 != 34) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v23 = *(void *)(a1 + 64);
        if (!v23)
        {
          unint64_t v24 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v24 = (void *)*v24;
          }
          uint64_t v23 = sub_1836F0C((uint64_t)v24);
          *(void *)(a1 + 64) = v23;
          char v7 = *(unsigned __int8 **)v27;
        }
        uint64_t v14 = sub_1179958(a3, v23, v7);
        goto LABEL_42;
      default:
LABEL_35:
        if (v8) {
          BOOL v25 = (v8 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          if (*v6)
          {
            uint64_t v26 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v7 = *(unsigned __int8 **)v27;
          }
          uint64_t v14 = (uint64_t)sub_1885AC0(v8, v26, (char *)v7, a3);
LABEL_42:
          *(void *)uint64_t v27 = v14;
          if (!v14) {
            return 0;
          }
LABEL_43:
          if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
            return *(void *)v27;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v27;
    }
  }
}

uint64_t sub_126BCB8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_126AEF0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_126BD48(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v7 = *(_DWORD *)(a1 + 32);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v10 = *(_DWORD *)(v9 + 20);
      v4[1] = v10;
      if (v10 > 0x7F) {
        uint64_t v11 = sub_188A9CC(v10, v4 + 1);
      }
      else {
        uint64_t v11 = v4 + 2;
      }
      uint64_t v4 = sub_126B294(v9, (unint64_t)v11, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v12 = *(void *)(a1 + 56);
    *uint64_t v4 = 26;
    unsigned int v13 = *(_DWORD *)(v12 + 44);
    v4[1] = v13;
    if (v13 > 0x7F) {
      uint64_t v14 = sub_188A9CC(v13, v4 + 1);
    }
    else {
      uint64_t v14 = v4 + 2;
    }
    uint64_t v4 = sub_182BE50(v12, v14, a3);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v15 = *(void *)(a1 + 64);
    *uint64_t v4 = 34;
    unsigned int v16 = *(_DWORD *)(v15 + 44);
    v4[1] = v16;
    if (v16 > 0x7F) {
      unsigned int v17 = sub_188A9CC(v16, v4 + 1);
    }
    else {
      unsigned int v17 = v4 + 2;
    }
    uint64_t v4 = sub_182F28C(v15, v17, a3);
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_126BF78(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_126B574(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      unint64_t v12 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
      uint64_t v14 = *(void *)(v12 + 8);
      if ((v13 & 0x80u) == 0) {
        uint64_t v14 = v13;
      }
      v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v8 & 2) == 0)
      {
LABEL_12:
        if ((v8 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_13;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_12;
    }
    uint64_t v15 = sub_182C500(*(void *)(a1 + 56));
    v2 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 4) != 0)
    {
LABEL_13:
      uint64_t v9 = sub_182F8B4(*(void *)(a1 + 64));
      v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
LABEL_14:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v16 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v2 += v17;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_126C0E4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C2F1C((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      uint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v11 = *(void *)(a1 + 8);
      unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (uint64_t *)*v12;
      }
      sub_1881DF4((std::string **)(a1 + 48), v10, v12);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_28;
        }
        goto LABEL_20;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v13 = *(void *)(a1 + 56);
    if (!v13)
    {
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (void *)*v15;
      }
      uint64_t v13 = sub_1836E54((uint64_t)v15);
      *(void *)(a1 + 56) = v13;
    }
    if (*(void *)(a2 + 56)) {
      unint64_t v16 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      unint64_t v16 = &off_254CA18;
    }
    sub_182C88C(v13, (uint64_t)v16);
    if ((v9 & 4) != 0)
    {
LABEL_20:
      *(_DWORD *)(a1 + 16) |= 4u;
      uint64_t v17 = *(void *)(a1 + 64);
      if (!v17)
      {
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v19 = (void *)*v19;
        }
        uint64_t v17 = sub_1836F0C((uint64_t)v19);
        *(void *)(a1 + 64) = v17;
      }
      if (*(void *)(a2 + 64)) {
        unint64_t v20 = *(uint64_t (****)())(a2 + 64);
      }
      else {
        unint64_t v20 = &off_254CB28;
      }
      sub_182FC60(v17, (uint64_t)v20);
    }
  }
LABEL_28:
  uint64_t v21 = *(void *)(a2 + 8);
  if (v21)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v21 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_126C298(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_182D83C(*(void *)(a1 + 56));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) == 0) {
    return 1;
  }
  uint64_t result = sub_18300B0(*(void *)(a1 + 64));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_126C2E4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.SuggestionList");
}

uint64_t sub_126C2F4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_126C3AC(uint64_t a1)
{
  sub_126C2F4(a1);

  operator delete();
}

uint64_t sub_126C3E4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v27 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = (char *)(*(void *)v27 + 1);
    unsigned int v9 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180(*(uint64_t *)v27, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (char *)(*(void *)v27 + 2);
      }
    }
    *(void *)uint64_t v27 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v17 = *(void *)(a1 + 8);
      uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        uint64_t v18 = (uint64_t *)*v18;
      }
      uint64_t v19 = (void *)(a1 + 32);
LABEL_29:
      uint64_t v21 = (std::string *)sub_1880F84(v19, v18);
      unint64_t v16 = (void *)sub_188C244(v21, *(char **)v27, (uint64_t)a3);
LABEL_30:
      *(void *)uint64_t v27 = v16;
      if (!v16) {
        goto LABEL_43;
      }
      goto LABEL_36;
    }
    if (v12 == 2) {
      break;
    }
    if (v12 != 1 || v9 != 8) {
      goto LABEL_14;
    }
    v5 |= 4u;
    uint64_t v22 = v8 + 1;
    uint64_t v23 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v24 = *v22;
    uint64_t v23 = v23 + (v24 << 7) - 128;
    if ((v24 & 0x80000000) == 0)
    {
      uint64_t v22 = v8 + 2;
LABEL_35:
      *(void *)uint64_t v27 = v22;
      *(void *)(a1 + 40) = v23;
      goto LABEL_36;
    }
    uint64_t v25 = sub_188C138((uint64_t)v8, v23);
    *(void *)uint64_t v27 = v25;
    *(void *)(a1 + 40) = v26;
    if (!v25) {
      goto LABEL_43;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v20 = *(void *)(a1 + 8);
    uint64_t v18 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    uint64_t v19 = (void *)(a1 + 24);
    goto LABEL_29;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = *(char **)v27;
    }
    unint64_t v16 = sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_43:
  *(void *)uint64_t v27 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v27;
}

unsigned char *sub_126C608(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 40);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_126C770(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_14;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0) {
    v2 += ((9 * (__clz(*(void *)(a1 + 40) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
LABEL_14:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_126C870()
{
  return 1;
}

void *sub_126C878@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.TransitLineTileInfo");
}

uint64_t sub_126C888(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_252F828)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_126D210(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_126D754(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_126C958(uint64_t a1)
{
  sub_126C888(a1);

  operator delete();
}

uint64_t sub_126C990(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_126CA00(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_126CAB8(*(void *)(v1 + 32));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_126CA00(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0) {
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    goto LABEL_17;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  *(unsigned char *)unint64_t v3 = 0;
  *(unsigned char *)(v3 + 23) = 0;
  if ((v1 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_17:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_126CAB8(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_15BCE48(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_126CB14(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    return v19;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void **)(a1 + 32);
    if (!v15)
    {
      unint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unint64_t v16 = (void *)*v16;
      }
      uint64_t v15 = sub_1283F1C((uint64_t)v16);
      *(void *)(a1 + 32) = v15;
      uint64_t v7 = v19;
    }
    uint64_t v14 = sub_126CD64(a3, (uint64_t)v15, (unsigned __int8 *)v7);
LABEL_31:
    uint64_t v19 = v14;
    if (!v14) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      return v19;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void **)(a1 + 24);
    if (!v17)
    {
      uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v18 = (void *)*v18;
      }
      uint64_t v17 = sub_1283E94((uint64_t)v18);
      *(void *)(a1 + 24) = v17;
      uint64_t v7 = v19;
    }
    uint64_t v14 = (char *)sub_126CCD4(a3, (uint64_t)v17, (unsigned __int8 *)v7);
    goto LABEL_31;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v19;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_31;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v19;
  }
  return 0;
}

uint64_t sub_126CCD4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_126D314(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_126CD64(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_126D844(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_126CDF4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  unint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *unint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    unint64_t v4 = sub_126D504(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    *unint64_t v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      BOOL v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      BOOL v12 = v4 + 2;
    }
    unint64_t v4 = sub_126DA2C(v10, (unint64_t)v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_126CF74(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_126D61C(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_126DB3C(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v3 += v9;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_126D04C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v7 = (void *)*v7;
        }
        data = (std::string *)sub_1283E94((uint64_t)v7);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(uint64_t (****)(uint64_t))(a2 + 24);
      }
      else {
        unint64_t v8 = &off_252F850;
      }
      uint64_t result = sub_11D2930(data, (uint64_t)v8);
    }
    if ((v4 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      uint64_t v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
      if (!v9)
      {
        std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
        unsigned int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          unsigned int v11 = (void *)*v11;
        }
        uint64_t v9 = (std::string *)sub_1283F1C((uint64_t)v11);
        v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
      }
      if (*(void *)(a2 + 32)) {
        BOOL v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        BOOL v12 = &off_252F880;
      }
      uint64_t result = sub_126D150(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_126D150(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  if (*(unsigned char *)(a2 + 16))
  {
    int v4 = *(uint64_t (****)())(a2 + 24);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    data = (std::string *)result[1].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v7 = (void *)*v7;
      }
      sub_15C2398((uint64_t)v7);
      v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      int v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      unint64_t v8 = v4;
    }
    else {
      unint64_t v8 = &off_253F630;
    }
    uint64_t result = sub_15BE464(data, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_126D1F8()
{
  return 1;
}

void *sub_126D200@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.AuxiliaryControl");
}

uint64_t sub_126D210(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_126D2DC(uint64_t a1)
{
  sub_126D210(a1);

  operator delete();
}

uint64_t sub_126D314(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v22 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
    return *(void *)v22;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v22 + 1);
    unsigned int v8 = **(unsigned char **)v22;
    if ((char)**(unsigned char **)v22 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v22, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v22 + 2);
      }
    }
    *(void *)uint64_t v22 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 == 26)
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 40);
        goto LABEL_32;
      }
    }
    else if (v11 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 32);
        goto LABEL_32;
      }
    }
    else if (v11 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v20 = *(void *)(a1 + 8);
      uint64_t v17 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        uint64_t v17 = (uint64_t *)*v17;
      }
      uint64_t v18 = (void *)(a1 + 24);
LABEL_32:
      uint64_t v21 = (std::string *)sub_1880F84(v18, v17);
      unint64_t v15 = (void *)sub_188C244(v21, *(char **)v22, (uint64_t)a3);
      goto LABEL_33;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v22;
    }
    unint64_t v15 = sub_1885AC0(v8, v14, v7, a3);
LABEL_33:
    *(void *)uint64_t v22 = v15;
    if (!v15) {
      goto LABEL_39;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
      return *(void *)v22;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v22;
  }
LABEL_39:
  *(void *)uint64_t v22 = 0;
  return *(void *)v22;
}

char *sub_126D504(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    int v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_5:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_126D61C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_16;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v9 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_16:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_126D73C()
{
  return 1;
}

void *sub_126D744@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.WatchAuxiliaryControl");
}

uint64_t sub_126D754(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_252F880 && *(void *)(a1 + 24))
  {
    sub_15BCE0C();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_126D80C(uint64_t a1)
{
  sub_126D754(a1);

  operator delete();
}

char *sub_126D844(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v17 = a2;
  if (sub_11947B8((uint64_t)a3, &v17, a3[11].i32[1])) {
    return v17;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v6 = v17 + 1;
    unsigned int v7 = *v17;
    if (*v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        unint64_t v6 = (char *)sub_188C180((uint64_t)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        unint64_t v6 = v17 + 2;
      }
    }
    uint64_t v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13)
    {
      unint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        unint64_t v14 = (void *)*v14;
      }
      sub_15C2398((uint64_t)v14);
      uint64_t v13 = v15;
      *(void *)(a1 + 24) = v15;
      unint64_t v6 = v17;
    }
    uint64_t v12 = (char *)sub_126D99C(a3, v13, (unsigned __int8 *)v6);
LABEL_20:
    uint64_t v17 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v17, a3[11].i32[1])) {
      return v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v6 = v17;
    }
    uint64_t v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v17;
  }
  return 0;
}

uint64_t sub_126D99C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15BCF88(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_126DA2C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *uint64_t v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_15BDA28(v6, (unint64_t)v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_126DB3C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_15BE0C0(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

uint64_t sub_126DBC4()
{
  return 1;
}

void *sub_126DBCC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.CarPlayAuxiliaryControl");
}

uint64_t sub_126DBDC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = &off_24A0FA8;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = &qword_2550250;
  *(void *)(a1 + 56) = &qword_2550250;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 64) = 0;
  *(_DWORD *)(a1 + 88) = 0;
  return a1;
}

void sub_126DC58(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_126DC88(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_126DD14((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_126DD14(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 48);
  uint64_t v2 = (void ***)(a1 + 48);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  uint64_t result = (void ***)(a1 + 56);
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_252F8A0)
  {
    if (*(void *)(a1 + 64))
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t v5 = *(void *)(a1 + 72);
    if (v5)
    {
      sub_15B1678(v5);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 80);
    if (result)
    {
      sub_17920F0();
      operator delete();
    }
  }
  return result;
}

void sub_126DDEC(void *a1)
{
  sub_126DC88(a1);

  operator delete();
}

uint64_t sub_126DE24(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = (unsigned __int8 *)(*(void *)v26 + 1);
    unsigned int v9 = **(unsigned char **)v26;
    if ((char)**(unsigned char **)v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unsigned int v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = (unsigned __int8 *)(*(void *)v26 + 2);
      }
    }
    *(void *)uint64_t v26 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 48);
        goto LABEL_37;
      case 2u:
        if (v9 != 18) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v15 = *(void *)(a1 + 64);
        if (!v15)
        {
          uint64_t v16 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v16 = (void *)*v16;
          }
          uint64_t v15 = sub_15C1918((uint64_t)v16);
          *(void *)(a1 + 64) = v15;
          unsigned int v8 = *(unsigned __int8 **)v26;
        }
        uint64_t v17 = sub_1198F14(a3, v15, v8);
        goto LABEL_38;
      case 3u:
        if (v9 != 29) {
          goto LABEL_41;
        }
        v5 |= 0x20u;
        *(_DWORD *)(a1 + 88) = *(_DWORD *)v8;
        *(void *)uint64_t v26 = v8 + 4;
        goto LABEL_39;
      case 4u:
        if (v9 != 34) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v18 = *(void *)(a1 + 72);
        if (!v18)
        {
          uint64_t v19 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v19 = (void *)*v19;
          }
          uint64_t v18 = sub_15C19EC((uint64_t)v19);
          *(void *)(a1 + 72) = v18;
          unsigned int v8 = *(unsigned __int8 **)v26;
        }
        uint64_t v17 = sub_11E1C60(a3, v18, v8);
        goto LABEL_38;
      case 5u:
        if (v9 != 42) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v20 = *(void **)(a1 + 80);
        if (!v20)
        {
          uint64_t v21 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v21 = (void *)*v21;
          }
          uint64_t v20 = sub_18302C8((uint64_t)v21);
          *(void *)(a1 + 80) = v20;
          unsigned int v8 = *(unsigned __int8 **)v26;
        }
        uint64_t v17 = sub_120FE50(a3, (uint64_t)v20, v8);
        goto LABEL_38;
      case 6u:
        if (v9 != 50) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v22 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 56);
LABEL_37:
        uint64_t v23 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v17 = (void *)sub_188C244(v23, *(char **)v26, (uint64_t)a3);
        goto LABEL_38;
      default:
LABEL_41:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (v9 - 800 > 0x31F)
          {
            if (*v7)
            {
              uint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              unsigned int v8 = *(unsigned __int8 **)v26;
            }
            uint64_t v17 = sub_1885AC0(v9, v25, (char *)v8, a3);
          }
          else
          {
            uint64_t v17 = sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_252F8A0, (uint64_t *)(a1 + 8), a3);
          }
LABEL_38:
          *(void *)uint64_t v26 = v17;
          if (!v17) {
            goto LABEL_53;
          }
LABEL_39:
          if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_53:
        }
          *(void *)uint64_t v26 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v26;
    }
  }
}

unsigned char *sub_126E168(uint64_t a1, unsigned char *a2, void *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v9 = *(void *)(a1 + 64);
  *uint64_t v4 = 18;
  unsigned int v10 = *(_DWORD *)(v9 + 44);
  v4[1] = v10;
  if (v10 > 0x7F) {
    unsigned int v11 = sub_188A9CC(v10, v4 + 1);
  }
  else {
    unsigned int v11 = v4 + 2;
  }
  uint64_t v4 = sub_15B0C0C(v9, v11, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }
LABEL_19:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v12 = *(_DWORD *)(a1 + 88);
  *uint64_t v4 = 29;
  *(_DWORD *)(v4 + 1) = v12;
  v4 += 5;
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_28;
  }
LABEL_22:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 72);
  *uint64_t v4 = 34;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  uint64_t v4 = sub_15B1A68(v13, (unint64_t)v15, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_28:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 80);
  *uint64_t v4 = 42;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  uint64_t v4 = sub_1792424(v16, (unint64_t)v18, a3);
  if ((v6 & 2) != 0) {
LABEL_7:
  }
    uint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_8:
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 100, 200, v4, a3);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v19 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v19 + 31) < 0)
  {
    uint64_t v20 = *(void **)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
  }
  else
  {
    uint64_t v20 = (void *)(v19 + 8);
    LODWORD(v21) = *(unsigned __int8 *)(v19 + 31);
  }
  if (*a3 - (void)v4 >= (int)v21)
  {
    uint64_t v22 = (int)v21;
    memcpy(v4, v20, (int)v21);
    v4 += v22;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v20, v21, v4);
}

uint64_t sub_126E400(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = v2;
  int v4 = *(_DWORD *)(a1 + 40);
  if ((v4 & 0x3F) == 0) {
    goto LABEL_10;
  }
  if (v4)
  {
    unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    uint64_t v3 = v2 + v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_18;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  unint64_t v11 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
  uint64_t v13 = *(void *)(v11 + 8);
  if ((v12 & 0x80u) == 0) {
    uint64_t v13 = v12;
  }
  v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t v14 = sub_15B0D90(*(void *)(a1 + 64));
  v3 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_19:
  uint64_t v15 = sub_15B1D1C(*(void *)(a1 + 72));
  v3 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 0x10) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_1792638(*(void *)(a1 + 80));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v4 & 0x20) != 0) {
    v3 += 5;
  }
LABEL_10:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v16 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v3 += v17;
  }
  *(_DWORD *)(a1 + 44) = v3;
  return v3;
}

void *sub_126E5AC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.MapLocation");
}

uint64_t sub_126E5BC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_126E688(uint64_t a1)
{
  sub_126E5BC(a1);

  operator delete();
}

uint64_t sub_126E6C0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) != 0)
  {
    if ((v1 & 1) == 0)
    {
      if ((v1 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_10:
      unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v3 + 23) < 0)
      {
        **(unsigned char **)unint64_t v3 = 0;
        *(void *)(v3 + 8) = 0;
        if ((v1 & 4) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v3 = 0;
        *(unsigned char *)(v3 + 23) = 0;
        if ((v1 & 4) == 0) {
          goto LABEL_17;
        }
      }
      goto LABEL_14;
    }
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
  }
LABEL_17:
  if ((v1 & 0x18) != 0)
  {
    *(unsigned char *)(a1 + 52) = 0;
    *(_DWORD *)(a1 + 48) = 0;
  }
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_126E788(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (char *)(*(void *)v32 + 1);
    unsigned int v9 = **(unsigned char **)v32;
    if ((char)**(unsigned char **)v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180(*(uint64_t *)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (char *)(*(void *)v32 + 2);
      }
    }
    *(void *)unint64_t v32 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_34;
        }
        uint64_t v12 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          *(void *)unint64_t v32 = sub_188C138((uint64_t)v8, (v15 - 128));
          if (!*(void *)v32) {
            goto LABEL_55;
          }
          unint64_t v13 = v28;
        }
        else
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          *(void *)unint64_t v32 = v12;
        }
        if (v13 > 0xB)
        {
          if (*v7) {
            uint64_t v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v13, v31);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 48) = v13;
        }
        goto LABEL_42;
      case 2u:
        if (v9 != 18) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 24);
        goto LABEL_28;
      case 3u:
        if (v9 != 26) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 32);
        goto LABEL_28;
      case 4u:
        if (v9 != 34) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v20 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
        if (v20) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 40);
LABEL_28:
        uint64_t v21 = (std::string *)sub_1880F84(v18, v17);
        uint64_t v22 = (void *)sub_188C244(v21, *(char **)v32, (uint64_t)a3);
        goto LABEL_41;
      case 5u:
        if (v9 != 40) {
          goto LABEL_34;
        }
        v5 |= 0x10u;
        uint64_t v23 = v8 + 1;
        uint64_t v24 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v25 = *v23;
        uint64_t v24 = v24 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          uint64_t v29 = sub_188C138((uint64_t)v8, v24);
          *(void *)unint64_t v32 = v29;
          *(unsigned char *)(a1 + 52) = v30 != 0;
          if (!v29) {
            goto LABEL_55;
          }
        }
        else
        {
          uint64_t v23 = v8 + 2;
LABEL_33:
          *(void *)unint64_t v32 = v23;
          *(unsigned char *)(a1 + 52) = v24 != 0;
        }
        goto LABEL_42;
      default:
LABEL_34:
        if (v9) {
          BOOL v26 = (v9 & 7) == 4;
        }
        else {
          BOOL v26 = 1;
        }
        if (!v26)
        {
          if (*v7)
          {
            uint64_t v27 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(char **)v32;
          }
          uint64_t v22 = sub_1885AC0(v9, v27, v8, a3);
LABEL_41:
          *(void *)unint64_t v32 = v22;
          if (!v22) {
            goto LABEL_55;
          }
LABEL_42:
          if (sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_55:
        }
          *(void *)unint64_t v32 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v32;
    }
  }
}

unsigned char *sub_126EAC0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 48);
    *unint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_11:
    if ((v6 & 0x10) == 0) {
      goto LABEL_19;
    }
    goto LABEL_16;
  }
LABEL_15:
  unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0) {
    goto LABEL_19;
  }
LABEL_16:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v10 = *(unsigned char *)(a1 + 52);
  *unint64_t v4 = 40;
  v4[1] = v10;
  v4 += 2;
LABEL_19:
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_126EC90(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x1F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_25;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v10 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
    uint64_t v12 = *(void *)(v10 + 8);
    if ((v11 & 0x80u) == 0) {
      uint64_t v12 = v11;
    }
    v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0) {
      goto LABEL_22;
    }
    goto LABEL_18;
  }
  if ((v1 & 8) != 0)
  {
LABEL_18:
    int v13 = *(_DWORD *)(a1 + 48);
    if (v13 < 0) {
      uint64_t v14 = 11;
    }
    else {
      uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v14;
  }
LABEL_22:
  if ((v1 & 0x10) != 0) {
    uint64_t v3 = v2 + 2;
  }
  else {
    uint64_t v3 = v2;
  }
LABEL_25:
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v3 += v18;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_126EDF8(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      unint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_19;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    unint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_22;
    }
LABEL_19:
    int v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      v3[2].__r_.__value_.__s.__data_[4] = *(unsigned char *)(a2 + 52);
      goto LABEL_8;
    }
LABEL_22:
    LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_126EF38()
{
  return 1;
}

void *sub_126EF40@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.CorrectedField");
}

uint64_t sub_126EF50(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_252F900)
  {
    if (*(void *)(a1 + 24))
    {
      sub_15B0994();
      operator delete();
    }
    if (*(void *)(a1 + 32))
    {
      sub_15B0994();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_126F020(uint64_t a1)
{
  sub_126EF50(a1);

  operator delete();
}

char *sub_126F058(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v18 = a2;
  if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
    return v18;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = v18 + 1;
    unsigned int v8 = *v18;
    if (*v18 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180((uint64_t)v18, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = v18 + 2;
      }
    }
    uint64_t v18 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 32);
        if (!v15)
        {
          uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v16 = (void *)*v16;
          }
          uint64_t v15 = sub_15C1918((uint64_t)v16);
          *(void *)(a1 + 32) = v15;
LABEL_29:
          unint64_t v7 = v18;
        }
LABEL_30:
        std::string::size_type v14 = sub_1198F14(a3, v15, (unsigned __int8 *)v7);
        goto LABEL_31;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v15 = *(void *)(a1 + 24);
      if (!v15)
      {
        unint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          unint64_t v17 = (void *)*v17;
        }
        uint64_t v15 = sub_15C1918((uint64_t)v17);
        *(void *)(a1 + 24) = v15;
        goto LABEL_29;
      }
      goto LABEL_30;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      int v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = v18;
    }
    std::string::size_type v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
LABEL_31:
    uint64_t v18 = v14;
    if (!v14) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
      return v18;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v18;
  }
  return 0;
}

char *sub_126F20C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *int v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    int v4 = sub_15B0C0C(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    *int v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    int v4 = sub_15B0C0C(v10, v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_126F38C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_15B0D90(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_15B0D90(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v3 += v9;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void *sub_126F464@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.CorrectedCoordinate");
}

void *sub_126F474(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_126F4E8(void *a1)
{
  sub_126F474(a1);

  operator delete();
}

uint64_t sub_126F520(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(_WORD *)(a1 + 28) = 0;
    *(_DWORD *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_126F548(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v8 = v32 + 1;
    unsigned int v9 = *v32;
    if (*v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v32 + 2;
      }
    }
    unint64_t v32 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      uint64_t v16 = v8 + 1;
      uint64_t v17 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_26;
      }
      int v18 = *v16;
      uint64_t v17 = v17 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        uint64_t v16 = v8 + 2;
LABEL_26:
        unint64_t v32 = v16;
        *(unsigned char *)(a1 + 29) = v17 != 0;
        goto LABEL_38;
      }
      BOOL v26 = (char *)sub_188C138((uint64_t)v8, v17);
      unint64_t v32 = v26;
      *(unsigned char *)(a1 + 29) = v27 != 0;
      if (!v26) {
        goto LABEL_53;
      }
      goto LABEL_38;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v19 = v8 + 1;
    uint64_t v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    uint64_t v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_31:
      unint64_t v32 = v19;
      *(unsigned char *)(a1 + 28) = v20 != 0;
      goto LABEL_38;
    }
    unint64_t v28 = (char *)sub_188C138((uint64_t)v8, v20);
    unint64_t v32 = v28;
    *(unsigned char *)(a1 + 28) = v29 != 0;
    if (!v28) {
      goto LABEL_53;
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 8)
  {
    uint64_t v22 = v8 + 1;
    unint64_t v23 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v24 = *v22;
    int v25 = v23 + (v24 << 7);
    unint64_t v23 = (v25 - 128);
    if (v24 < 0)
    {
      unint64_t v32 = (char *)sub_188C138((uint64_t)v8, (v25 - 128));
      if (!v32) {
        goto LABEL_53;
      }
      unint64_t v23 = v30;
    }
    else
    {
      uint64_t v22 = v8 + 2;
LABEL_35:
      unint64_t v32 = v22;
    }
    if (v23 > 1)
    {
      if (*v7) {
        uint64_t v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v23, v31);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_DWORD *)(a1 + 24) = v23;
    }
    goto LABEL_38;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      unint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v8 = v32;
    }
    unint64_t v32 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v32) {
      goto LABEL_53;
    }
    goto LABEL_38;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_53:
  unint64_t v32 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v32;
}

unsigned char *sub_126F800(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 28);
    *uint64_t v4 = 16;
    v4[1] = v10;
    v4 += 2;
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v11 = *(unsigned char *)(a1 + 29);
    *uint64_t v4 = 24;
    v4[1] = v11;
    v4 += 2;
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    unint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    unint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    v4 += v17;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_126F998(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) != 0)
  {
    if (v1)
    {
      int v4 = *(_DWORD *)(a1 + 24);
      if (v4 < 0) {
        uint64_t v2 = 11;
      }
      else {
        uint64_t v2 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += 2;
    }
    if ((v1 & 4) != 0) {
      uint64_t v3 = v2 + 2;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v3 += v8;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_126FA34(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_7;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_10:
    result[1].__r_.__value_.__s.__data_[4] = *(unsigned char *)(a2 + 28);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  LODWORD(result[1].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 24);
  if ((v2 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v2 & 4) != 0) {
LABEL_5:
  }
    result[1].__r_.__value_.__s.__data_[5] = *(unsigned char *)(a2 + 29);
LABEL_6:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_7:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_126FA98()
{
  return 1;
}

void *sub_126FAA0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.CorrectedFlag");
}

uint64_t sub_126FAB0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if ((uint64_t (***)())a1 != &off_252F928)
  {
    uint64_t v6 = *(void *)(a1 + 64);
    if (v6)
    {
      sub_15B1678(v6);
      operator delete();
    }
    if (*(void *)(a1 + 72))
    {
      sub_15B0994();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  sub_12C2434((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_126FBC4(uint64_t a1)
{
  sub_126FAB0(a1);

  operator delete();
}

uint64_t sub_126FBFC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v40 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v40, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v40 + 1);
    unsigned int v9 = **(unsigned char **)v40;
    if ((char)**(unsigned char **)v40 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v40, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v40 + 2);
      }
    }
    *(void *)uint64_t v40 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_50;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 48);
        goto LABEL_17;
      case 2u:
        if (v9 != 18) {
          goto LABEL_50;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 56);
LABEL_17:
        uint64_t v16 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v17 = (void *)sub_188C244(v16, *(char **)v40, (uint64_t)a3);
        goto LABEL_57;
      case 3u:
        if (v9 != 26) {
          goto LABEL_50;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v18 = *(void *)(a1 + 64);
        if (!v18)
        {
          uint64_t v19 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v19 = (void *)*v19;
          }
          uint64_t v18 = sub_15C19EC((uint64_t)v19);
          *(void *)(a1 + 64) = v18;
          uint64_t v8 = *(unsigned __int8 **)v40;
        }
        uint64_t v17 = sub_11E1C60(a3, v18, v8);
        goto LABEL_57;
      case 4u:
        if (v9 != 34) {
          goto LABEL_50;
        }
        uint64_t v20 = (char *)(v8 - 1);
        while (1)
        {
          int v21 = (unsigned __int8 *)(v20 + 1);
          *(void *)uint64_t v40 = v20 + 1;
          uint64_t v22 = *(_DWORD **)(a1 + 40);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 32), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 32) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            uint64_t v25 = sub_1284448(*(void *)(a1 + 24));
            uint64_t v24 = sub_188CDC8(a1 + 24, v25);
            int v21 = *(unsigned __int8 **)v40;
          }
          uint64_t v20 = sub_126FFF0(a3, v24, v21);
          *(void *)uint64_t v40 = v20;
          if (!v20) {
            goto LABEL_67;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 34) {
            goto LABEL_58;
          }
        }
      case 5u:
        if (v9 != 42) {
          goto LABEL_50;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v26 = *(void *)(a1 + 72);
        if (!v26)
        {
          uint64_t v27 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v27 = (void *)*v27;
          }
          uint64_t v26 = sub_15C1918((uint64_t)v27);
          *(void *)(a1 + 72) = v26;
          uint64_t v8 = *(unsigned __int8 **)v40;
        }
        uint64_t v17 = sub_1198F14(a3, v26, v8);
        goto LABEL_57;
      case 6u:
        if (v9 != 48) {
          goto LABEL_50;
        }
        v5 |= 0x10u;
        unint64_t v28 = (char *)(v8 + 1);
        uint64_t v29 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_44;
        }
        int v30 = *v28;
        uint64_t v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          uint64_t v36 = sub_188C138((uint64_t)v8, v29);
          *(void *)uint64_t v40 = v36;
          *(void *)(a1 + 80) = v37;
          if (!v36) {
            goto LABEL_67;
          }
        }
        else
        {
          unint64_t v28 = (char *)(v8 + 2);
LABEL_44:
          *(void *)uint64_t v40 = v28;
          *(void *)(a1 + 80) = v29;
        }
        goto LABEL_58;
      case 7u:
        if (v9 != 56) {
          goto LABEL_50;
        }
        v5 |= 0x20u;
        uint64_t v31 = (char *)(v8 + 1);
        uint64_t v32 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_49;
        }
        int v33 = *v31;
        uint64_t v32 = v32 + (v33 << 7) - 128;
        if (v33 < 0)
        {
          uint64_t v38 = sub_188C138((uint64_t)v8, v32);
          *(void *)uint64_t v40 = v38;
          *(unsigned char *)(a1 + 88) = v39 != 0;
          if (!v38) {
            goto LABEL_67;
          }
        }
        else
        {
          uint64_t v31 = (char *)(v8 + 2);
LABEL_49:
          *(void *)uint64_t v40 = v31;
          *(unsigned char *)(a1 + 88) = v32 != 0;
        }
        goto LABEL_58;
      default:
LABEL_50:
        if (v9) {
          BOOL v34 = (v9 & 7) == 4;
        }
        else {
          BOOL v34 = 1;
        }
        if (!v34)
        {
          if (*v7)
          {
            uint64_t v35 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v40;
          }
          uint64_t v17 = sub_1885AC0(v9, v35, (char *)v8, a3);
LABEL_57:
          *(void *)uint64_t v40 = v17;
          if (!v17) {
            goto LABEL_67;
          }
LABEL_58:
          if (sub_11947B8((uint64_t)a3, (char **)v40, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_67:
        }
          *(void *)uint64_t v40 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v40;
    }
  }
}

char *sub_126FFF0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1272718(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1270080(uint64_t a1, unsigned char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_7;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0) {
    goto LABEL_13;
  }
LABEL_7:
  if (*a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 64);
  *int v4 = 26;
  unsigned int v8 = *(_DWORD *)(v7 + 20);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  int v4 = sub_15B1A68(v7, (unint64_t)v9, a3);
LABEL_13:
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *int v4 = 34;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        unint64_t v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        unint64_t v14 = v4 + 2;
      }
      int v4 = sub_1272CB8(v12, (unint64_t)v14, a3);
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v15 = *(void *)(a1 + 72);
    *int v4 = 42;
    unsigned int v16 = *(_DWORD *)(v15 + 44);
    v4[1] = v16;
    if (v16 > 0x7F) {
      uint64_t v17 = sub_188A9CC(v16, v4 + 1);
    }
    else {
      uint64_t v17 = v4 + 2;
    }
    int v4 = sub_15B0C0C(v15, v17, a3);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v18 = *(void *)(a1 + 80);
    *int v4 = 48;
    v4[1] = v18;
    if (v18 > 0x7F)
    {
      v4[1] = v18 | 0x80;
      unint64_t v19 = v18 >> 7;
      v4[2] = v18 >> 7;
      v4 += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v20 = v19 >> 14;
          v19 >>= 7;
          *v4++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v21 = *(unsigned char *)(a1 + 88);
    *int v4 = 56;
    v4[1] = v21;
    v4 += 2;
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return v4;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    uint64_t v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    uint64_t v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if (*a3 - (void)v4 >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(v4, v25, (int)v26);
    v4 += v27;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v25, v26, v4);
}

uint64_t sub_1270390(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    int v4 = (uint64_t *)(v3 + 8);
  }
  else {
    int v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1273164(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0x3F) == 0) {
    goto LABEL_18;
  }
  if (v8)
  {
    unint64_t v11 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
    uint64_t v13 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      uint64_t v13 = v12;
    }
    v2 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_26;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  unint64_t v14 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
  uint64_t v16 = *(void *)(v14 + 8);
  if ((v15 & 0x80u) == 0) {
    uint64_t v16 = v15;
  }
  v2 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v17 = sub_15B1D1C(*(void *)(a1 + 64));
  v2 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) == 0)
  {
LABEL_14:
    if ((v8 & 0x10) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_27:
  uint64_t v18 = sub_15B0D90(*(void *)(a1 + 72));
  v2 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x10) != 0) {
LABEL_15:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 80) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_16:
  if ((v8 & 0x20) != 0) {
    v2 += 2;
  }
LABEL_18:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v19 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v2 += v20;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1270578(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 >= 1)
  {
    do
    {
      uint64_t v2 = v1--;
      uint64_t v3 = *(void *)(*(void *)(a1 + 16) + 8 * v1 + 8);
      uint64_t v4 = *(unsigned int *)(v3 + 32);
      uint64_t v5 = *(void *)(v3 + 40);
      while ((int)v4 >= 1)
      {
        uint64_t v6 = *(void *)(v5 + 8 * v4--);
        if ((~*(_DWORD *)(v6 + 16) & 3) != 0) {
          return 0;
        }
      }
    }
    while (v2 >= 2);
  }
  return 1;
}

void *sub_12705DC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.CorrectedLabel");
}

void *sub_12705EC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1270670((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_1270670(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 24);
  uint64_t result = (void ***)(a1 + 24);
  if (v3 != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_252F988)
  {
    if (*(void *)(a1 + 32))
    {
      sub_1463FF8();
      operator delete();
    }
    if (*(void *)(a1 + 40))
    {
      sub_146E3A8();
      operator delete();
    }
    uint64_t v4 = *(void *)(a1 + 48);
    if (v4)
    {
      sub_182B32C(v4);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 56);
    if (result)
    {
      sub_182E7B8(result);
      operator delete();
    }
  }
  return result;
}

void sub_1270754(void *a1)
{
  sub_12705EC(a1);

  operator delete();
}

uint64_t sub_127078C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v38 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v38, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = (unsigned __int8 *)(*(void *)v38 + 1);
    unsigned int v9 = **(unsigned char **)v38;
    if ((char)**(unsigned char **)v38 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        int v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v38, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (unsigned __int8 *)(*(void *)v38 + 2);
      }
    }
    *(void *)uint64_t v38 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v12 = *(void *)(a1 + 32);
        if (!v12)
        {
          uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v13 = (void *)*v13;
          }
          sub_1478F54((uint64_t)v13);
          uint64_t v12 = v14;
          *(void *)(a1 + 32) = v14;
          int v8 = *(unsigned __int8 **)v38;
        }
        uint64_t v15 = sub_11793D8(a3, v12, v8);
        goto LABEL_54;
      case 2u:
        if (v9 != 18) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 40);
        if (!v16)
        {
          uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v17 = (void *)*v17;
          }
          sub_147937C((uint64_t)v17);
          uint64_t v16 = v18;
          *(void *)(a1 + 40) = v18;
          int v8 = *(unsigned __int8 **)v38;
        }
        uint64_t v15 = sub_1179468(a3, v16, v8);
        goto LABEL_54;
      case 3u:
        if (v9 != 24) {
          goto LABEL_47;
        }
        v5 |= 0x20u;
        unint64_t v19 = (char *)(v8 + 1);
        int v20 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v21 = *v19;
        int v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v34 = sub_188C0D0((uint64_t)v8, v20);
          *(void *)uint64_t v38 = v34;
          *(_DWORD *)(a1 + 64) = v35;
          if (!v34) {
            goto LABEL_64;
          }
        }
        else
        {
          unint64_t v19 = (char *)(v8 + 2);
LABEL_25:
          *(void *)uint64_t v38 = v19;
          *(_DWORD *)(a1 + 64) = v20;
        }
        goto LABEL_55;
      case 4u:
        if (v9 != 32) {
          goto LABEL_47;
        }
        v5 |= 0x40u;
        uint64_t v22 = (char *)(v8 + 1);
        int v23 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v24 = *v22;
        int v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v36 = sub_188C0D0((uint64_t)v8, v23);
          *(void *)uint64_t v38 = v36;
          *(_DWORD *)(a1 + 68) = v37;
          if (!v36) {
            goto LABEL_64;
          }
        }
        else
        {
          uint64_t v22 = (char *)(v8 + 2);
LABEL_30:
          *(void *)uint64_t v38 = v22;
          *(_DWORD *)(a1 + 68) = v23;
        }
        goto LABEL_55;
      case 5u:
        if (v9 != 42) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v25 = *(void *)(a1 + 8);
        uint64_t v26 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
        if (v25) {
          uint64_t v26 = (uint64_t *)*v26;
        }
        uint64_t v27 = (std::string *)sub_1880F84((void *)(a1 + 24), v26);
        uint64_t v15 = (uint64_t)sub_188C244(v27, *(char **)v38, (uint64_t)a3);
        goto LABEL_54;
      case 6u:
        if (v9 != 50) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v28 = *(void *)(a1 + 48);
        if (!v28)
        {
          uint64_t v29 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v29 = (void *)*v29;
          }
          uint64_t v28 = sub_1836E54((uint64_t)v29);
          *(void *)(a1 + 48) = v28;
          int v8 = *(unsigned __int8 **)v38;
        }
        uint64_t v15 = sub_11798C8(a3, v28, v8);
        goto LABEL_54;
      case 7u:
        if (v9 != 58) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v30 = *(void *)(a1 + 56);
        if (!v30)
        {
          uint64_t v31 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v31 = (void *)*v31;
          }
          uint64_t v30 = sub_1836F0C((uint64_t)v31);
          *(void *)(a1 + 56) = v30;
          int v8 = *(unsigned __int8 **)v38;
        }
        uint64_t v15 = sub_1179958(a3, v30, v8);
        goto LABEL_54;
      default:
LABEL_47:
        if (v9) {
          BOOL v32 = (v9 & 7) == 4;
        }
        else {
          BOOL v32 = 1;
        }
        if (!v32)
        {
          if (*v7)
          {
            int v33 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = *(unsigned __int8 **)v38;
          }
          uint64_t v15 = (uint64_t)sub_1885AC0(v9, v33, (char *)v8, a3);
LABEL_54:
          *(void *)uint64_t v38 = v15;
          if (!v15) {
            goto LABEL_64;
          }
LABEL_55:
          if (sub_11947B8((uint64_t)a3, (char **)v38, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_64:
        }
          *(void *)uint64_t v38 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v38;
    }
  }
}

char *sub_1270B40(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 28);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_1466BF0(v7, v9, a3);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 0x20) == 0) {
        goto LABEL_23;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 40);
  *uint64_t v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  uint64_t v4 = sub_146ECEC(v10, (unint64_t)v12, a3);
  if ((v6 & 0x20) != 0)
  {
LABEL_17:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 64);
    *uint64_t v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_23:
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 68);
    *uint64_t v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 8) == 0)
    {
LABEL_32:
      if ((v6 & 0x10) == 0) {
        goto LABEL_47;
      }
      goto LABEL_41;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_32;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 48);
  *uint64_t v4 = 50;
  unsigned int v20 = *(_DWORD *)(v19 + 44);
  v4[1] = v20;
  if (v20 > 0x7F) {
    int v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    int v21 = v4 + 2;
  }
  uint64_t v4 = sub_182BE50(v19, v21, a3);
  if ((v6 & 0x10) != 0)
  {
LABEL_41:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v22 = *(void *)(a1 + 56);
    *uint64_t v4 = 58;
    unsigned int v23 = *(_DWORD *)(v22 + 44);
    v4[1] = v23;
    if (v23 > 0x7F) {
      int v24 = sub_188A9CC(v23, v4 + 1);
    }
    else {
      int v24 = v4 + 2;
    }
    uint64_t v4 = sub_182F28C(v22, v24, a3);
  }
LABEL_47:
  uint64_t v25 = *(void *)(a1 + 8);
  if ((v25 & 1) == 0) {
    return v4;
  }
  unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v27 + 31) < 0)
  {
    uint64_t v28 = *(void **)(v27 + 8);
    uint64_t v29 = *(void *)(v27 + 16);
  }
  else
  {
    uint64_t v28 = (void *)(v27 + 8);
    LODWORD(v29) = *(unsigned __int8 *)(v27 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v29)
  {
    uint64_t v30 = (int)v29;
    memcpy(v4, v28, (int)v29);
    v4 += v30;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v28, v29, v4);
}

uint64_t sub_1270EB8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x7F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_16;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_1468738(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    uint64_t v10 = sub_146F320(*(void *)(a1 + 40));
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_12:
      if ((v2 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_20;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v11 = sub_182C500(*(void *)(a1 + 48));
  v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_13:
    if ((v2 & 0x20) == 0) {
      goto LABEL_14;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t v12 = sub_182F8B4(*(void *)(a1 + 56));
  v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_14:
    if ((v2 & 0x40) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_21:
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 64) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x40) != 0) {
LABEL_15:
  }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 68) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_16:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v13 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v3 += v14;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void *sub_1271098@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.CorrectedSearch");
}

void *sub_12710A8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_127111C(void *a1)
{
  sub_12710A8(a1);

  operator delete();
}

uint64_t sub_1271154(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_127117C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v31 + 1;
    unsigned int v9 = *v31;
    if (*v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v31 + 2;
      }
    }
    uint64_t v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      unsigned int v16 = v8 + 1;
      int v17 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_26;
      }
      int v18 = *v16;
      int v17 = v17 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        unsigned int v16 = v8 + 2;
LABEL_26:
        uint64_t v31 = v16;
        *(_DWORD *)(a1 + 32) = v17;
        goto LABEL_36;
      }
      uint64_t v25 = (char *)sub_188C0D0((uint64_t)v8, v17);
      uint64_t v31 = v25;
      *(_DWORD *)(a1 + 32) = v26;
      if (!v25) {
        goto LABEL_47;
      }
      goto LABEL_36;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v19 = v8 + 1;
    int v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    int v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_31:
      uint64_t v31 = v19;
      *(_DWORD *)(a1 + 28) = v20;
      goto LABEL_36;
    }
    unint64_t v27 = (char *)sub_188C0D0((uint64_t)v8, v20);
    uint64_t v31 = v27;
    *(_DWORD *)(a1 + 28) = v28;
    if (!v27) {
      goto LABEL_47;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v22 = v8 + 1;
    int v23 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v24 = *v22;
    int v23 = v23 + (v24 << 7) - 128;
    if ((v24 & 0x80000000) == 0)
    {
      uint64_t v22 = v8 + 2;
LABEL_35:
      uint64_t v31 = v22;
      *(_DWORD *)(a1 + 24) = v23;
      goto LABEL_36;
    }
    uint64_t v29 = (char *)sub_188C0D0((uint64_t)v8, v23);
    uint64_t v31 = v29;
    *(_DWORD *)(a1 + 24) = v30;
    if (!v29) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      unsigned int v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v31;
    }
    uint64_t v31 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v31) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  uint64_t v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v31;
}

unsigned char *sub_12713D0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    *unint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    *unint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 32);
    *unint64_t v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_12715F0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_10;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) != 0) {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_12716BC()
{
  return 1;
}

void *sub_12716C4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.VisibleTileSet.VisibleTileKey");
}

void *sub_12716D4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C24B4(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1271754(void *a1)
{
  sub_12716D4(a1);

  operator delete();
}

uint64_t sub_127178C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1271154(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if ((*(unsigned char *)(v1 + 16) & 3) != 0) {
    *(void *)(v1 + 48) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_127181C(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = v33 + 1;
    unsigned int v9 = *v33;
    if (*v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v33 + 2;
      }
    }
    int v33 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 == 26)
      {
        uint64_t v16 = v8 - 1;
        while (1)
        {
          int v17 = (unsigned __int8 *)(v16 + 1);
          int v33 = v16 + 1;
          unint64_t v18 = *(_DWORD **)(a1 + 40);
          if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
          {
            *(_DWORD *)(a1 + 32) = v19 + 1;
            uint64_t v20 = *(void *)&v18[2 * v19 + 2];
          }
          else
          {
            uint64_t v21 = sub_12842B8(*(void *)(a1 + 24));
            uint64_t v20 = sub_188CDC8(a1 + 24, v21);
            int v17 = (unsigned __int8 *)v33;
          }
          uint64_t v16 = sub_1271B04(a3, v20, v17);
          int v33 = v16;
          if (!v16) {
            goto LABEL_56;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
            goto LABEL_43;
          }
        }
      }
      goto LABEL_14;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v22 = v8 + 1;
    int v23 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_36;
    }
    int v24 = *v22;
    int v23 = v23 + (v24 << 7) - 128;
    if ((v24 & 0x80000000) == 0)
    {
      uint64_t v22 = v8 + 2;
LABEL_36:
      int v33 = v22;
      *(_DWORD *)(a1 + 52) = v23;
      goto LABEL_43;
    }
    uint64_t v29 = (char *)sub_188C0D0((uint64_t)v8, v23);
    int v33 = v29;
    *(_DWORD *)(a1 + 52) = v30;
    if (!v29) {
      goto LABEL_56;
    }
LABEL_43:
    if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 8)
  {
    uint64_t v25 = v8 + 1;
    unint64_t v26 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_40;
    }
    int v27 = *v25;
    int v28 = v26 + (v27 << 7);
    unint64_t v26 = (v28 - 128);
    if (v27 < 0)
    {
      int v33 = (char *)sub_188C138((uint64_t)v8, (v28 - 128));
      if (!v33) {
        goto LABEL_56;
      }
      unint64_t v26 = v31;
    }
    else
    {
      uint64_t v25 = v8 + 2;
LABEL_40:
      int v33 = v25;
    }
    if (sub_1271AEC(v26))
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_DWORD *)(a1 + 48) = v26;
    }
    else
    {
      if (*v7) {
        BOOL v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        BOOL v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v26, v32);
    }
    goto LABEL_43;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      unsigned int v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v8 = v33;
    }
    int v33 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v33) {
      goto LABEL_56;
    }
    goto LABEL_43;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_56:
  int v33 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v33;
}

BOOL sub_1271AEC(unsigned int a1)
{
  return a1 - 11 < 0x6D || a1 < 9;
}

char *sub_1271B04(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_127117C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1271B94(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 48);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 52);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        int v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        int v17 = v4 + 2;
      }
      uint64_t v4 = sub_12713D0(v15, (unint64_t)v17, a3);
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_1271DD4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12715F0(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      int v9 = *(_DWORD *)(a1 + 48);
      if (v9 < 0) {
        uint64_t v10 = 11;
      }
      else {
        uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v10;
    }
    if ((v8 & 2) != 0) {
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 52) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1271EEC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_12C3034((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9) {
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    }
    if ((v9 & 2) != 0) {
      HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1271FEC()
{
  return 1;
}

void *sub_1271FF4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.VisibleTileSet");
}

void *sub_1272004(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1272078(void *a1)
{
  sub_1272004(a1);

  operator delete();
}

uint64_t sub_12720B0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_12720D4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    unsigned int v16 = v8 + 1;
    LODWORD(v15) = *v8;
    if ((v15 & 0x80) == 0) {
      goto LABEL_25;
    }
    int v17 = *v16;
    uint64_t v15 = v15 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      unsigned int v16 = v8 + 2;
LABEL_25:
      uint64_t v25 = v16;
      *(_DWORD *)(a1 + 28) = v15;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C138((uint64_t)v8, v15);
    uint64_t v25 = v21;
    *(_DWORD *)(a1 + 28) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v19 = v8 + 1;
    LODWORD(v18) = *v8;
    if ((v18 & 0x80) == 0) {
      goto LABEL_29;
    }
    int v20 = *v19;
    uint64_t v18 = v18 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_29:
      uint64_t v25 = v19;
      *(_DWORD *)(a1 + 24) = v18;
      goto LABEL_30;
    }
    uint64_t v23 = (char *)sub_188C138((uint64_t)v8, v18);
    uint64_t v25 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_12722BC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 28);
    *int v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unsigned int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unsigned int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1272460(_DWORD *a1)
{
  int v2 = a1[4];
  if (v2)
  {
    int v4 = a1[6];
    if (v4 < 0)
    {
      uint64_t result = 11;
      if ((v2 & 2) == 0) {
        return result;
      }
    }
    else
    {
      uint64_t result = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v2 & 2) == 0) {
        return result;
      }
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      return result;
    }
  }
  int v5 = a1[7];
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
  return result;
}

uint64_t sub_12724E0(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 16) & 3) != 0)
  {
    uint64_t result = sub_1272460((_DWORD *)a1);
  }
  else
  {
    int v2 = *(_DWORD *)(a1 + 24);
    if (v2 < 0) {
      uint64_t v3 = 12;
    }
    else {
      uint64_t v3 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    int v5 = *(_DWORD *)(a1 + 28);
    if (v5 < 0) {
      uint64_t v6 = 10;
    }
    else {
      uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
    }
    uint64_t result = v3 + v6;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

BOOL sub_12725A4(uint64_t a1)
{
  return (~*(_DWORD *)(a1 + 16) & 3) == 0;
}

void *sub_12725B8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeatureHandle.FeatureHandleStyleAttribute");
}

void *sub_12725C8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C2534(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1272648(void *a1)
{
  sub_12725C8(a1);

  operator delete();
}

uint64_t sub_1272680(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_12720B0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if ((*(unsigned char *)(v1 + 16) & 0x7F) != 0)
  {
    *(void *)(v1 + 48) = 0;
    *(void *)(v1 + 56) = 0;
    *(_DWORD *)(v1 + 72) = 0;
    *(void *)(v1 + 64) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_1272718(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v56 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v56, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = v56 + 1;
    unsigned int v9 = *v56;
    if (*v56 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v56, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v56 + 2;
      }
    }
    uint64_t v56 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_58;
        }
        v5 |= 1u;
        unint64_t v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v12 = v8 + 2;
LABEL_13:
          uint64_t v56 = v12;
          *(_DWORD *)(a1 + 48) = v13;
          goto LABEL_65;
        }
        int v42 = (char *)sub_188C0D0((uint64_t)v8, v13);
        uint64_t v56 = v42;
        *(_DWORD *)(a1 + 48) = v43;
        if (v42) {
          goto LABEL_65;
        }
        goto LABEL_93;
      case 2u:
        if (v9 != 16) {
          goto LABEL_58;
        }
        v5 |= 2u;
        unint64_t v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          BOOL v44 = (char *)sub_188C0D0((uint64_t)v8, v16);
          uint64_t v56 = v44;
          *(_DWORD *)(a1 + 52) = v45;
          if (!v44) {
            goto LABEL_93;
          }
        }
        else
        {
          unint64_t v15 = v8 + 2;
LABEL_18:
          uint64_t v56 = v15;
          *(_DWORD *)(a1 + 52) = v16;
        }
        goto LABEL_65;
      case 3u:
        if (v9 != 24) {
          goto LABEL_58;
        }
        v5 |= 4u;
        uint64_t v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v46 = (char *)sub_188C0D0((uint64_t)v8, v19);
          uint64_t v56 = v46;
          *(_DWORD *)(a1 + 56) = v47;
          if (!v46) {
            goto LABEL_93;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          uint64_t v56 = v18;
          *(_DWORD *)(a1 + 56) = v19;
        }
        goto LABEL_65;
      case 4u:
        if (v9 != 32) {
          goto LABEL_58;
        }
        v5 |= 8u;
        uint64_t v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v48 = (char *)sub_188C0D0((uint64_t)v8, v22);
          uint64_t v56 = v48;
          *(_DWORD *)(a1 + 60) = v49;
          if (!v48) {
            goto LABEL_93;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_28:
          uint64_t v56 = v21;
          *(_DWORD *)(a1 + 60) = v22;
        }
        goto LABEL_65;
      case 5u:
        if (v9 != 40) {
          goto LABEL_58;
        }
        int v24 = v8 + 1;
        unint64_t v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        int v27 = v25 + (v26 << 7);
        unint64_t v25 = (v27 - 128);
        if (v26 < 0)
        {
          uint64_t v56 = (char *)sub_188C138((uint64_t)v8, (v27 - 128));
          if (!v56) {
            goto LABEL_93;
          }
          unint64_t v25 = v50;
        }
        else
        {
          int v24 = v8 + 2;
LABEL_33:
          uint64_t v56 = v24;
        }
        if (sub_1271AEC(v25))
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 64) = v25;
          goto LABEL_65;
        }
        if (*v7) {
          uint64_t v54 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v54 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v55 = 5;
        goto LABEL_87;
      case 6u:
        if (v9 != 48) {
          goto LABEL_58;
        }
        v5 |= 0x20u;
        int v28 = v8 + 1;
        int v29 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_40;
        }
        int v30 = *v28;
        int v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          uint64_t v51 = (char *)sub_188C0D0((uint64_t)v8, v29);
          uint64_t v56 = v51;
          *(_DWORD *)(a1 + 68) = v52;
          if (!v51) {
            goto LABEL_93;
          }
        }
        else
        {
          int v28 = v8 + 2;
LABEL_40:
          uint64_t v56 = v28;
          *(_DWORD *)(a1 + 68) = v29;
        }
        goto LABEL_65;
      case 7u:
        if (v9 != 56) {
          goto LABEL_58;
        }
        unint64_t v31 = v8 + 1;
        unint64_t v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_45;
        }
        int v32 = *v31;
        int v33 = v25 + (v32 << 7);
        unint64_t v25 = (v33 - 128);
        if (v32 < 0)
        {
          uint64_t v56 = (char *)sub_188C138((uint64_t)v8, (v33 - 128));
          if (!v56) {
            goto LABEL_93;
          }
          unint64_t v25 = v53;
        }
        else
        {
          unint64_t v31 = v8 + 2;
LABEL_45:
          uint64_t v56 = v31;
        }
        if (v25 > 8)
        {
          if (*v7) {
            uint64_t v54 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v54 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v55 = 7;
LABEL_87:
          sub_188C020(v55, v25, v54);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x40u;
          *(_DWORD *)(a1 + 72) = v25;
        }
        goto LABEL_65;
      case 8u:
        if (v9 != 66) {
          goto LABEL_58;
        }
        uint64_t v34 = v8 - 1;
        while (1)
        {
          int v35 = (unsigned __int8 *)(v34 + 1);
          uint64_t v56 = v34 + 1;
          uint64_t v36 = *(_DWORD **)(a1 + 40);
          if (v36 && (uint64_t v37 = *(int *)(a1 + 32), (int)v37 < *v36))
          {
            *(_DWORD *)(a1 + 32) = v37 + 1;
            uint64_t v38 = *(void *)&v36[2 * v37 + 2];
          }
          else
          {
            uint64_t v39 = sub_12843D0(*(void *)(a1 + 24));
            uint64_t v38 = sub_188CDC8(a1 + 24, (uint64_t)v39);
            int v35 = (unsigned __int8 *)v56;
          }
          uint64_t v34 = sub_1272C28(a3, v38, v35);
          uint64_t v56 = v34;
          if (!v34) {
            goto LABEL_93;
          }
          if (*(void *)a3 <= (unint64_t)v34 || *v34 != 66) {
            goto LABEL_65;
          }
        }
      default:
LABEL_58:
        if (v9) {
          BOOL v40 = (v9 & 7) == 4;
        }
        else {
          BOOL v40 = 1;
        }
        if (!v40)
        {
          if (*v7)
          {
            unint64_t v41 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v41 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = v56;
          }
          uint64_t v56 = (char *)sub_1885AC0(v9, v41, v8, a3);
          if (!v56) {
            goto LABEL_93;
          }
LABEL_65:
          if (sub_11947B8((uint64_t)a3, &v56, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_93:
        }
          uint64_t v56 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v56;
    }
  }
}

char *sub_1272C28(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12720D4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1272CB8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 48);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 52);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 56);
    *uint64_t v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 60);
    *uint64_t v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(int *)(a1 + 64);
    *uint64_t v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v22 = *(_DWORD *)(a1 + 68);
    *uint64_t v4 = 48;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unsigned int v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v25 = *(int *)(a1 + 72);
    *uint64_t v4 = 56;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unint64_t v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v28 = *(_DWORD *)(a1 + 32);
  if (v28)
  {
    for (int i = 0; i != v28; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v30 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 66;
      unsigned int v31 = *(_DWORD *)(v30 + 20);
      v4[1] = v31;
      if (v31 > 0x7F) {
        int v32 = sub_188A9CC(v31, v4 + 1);
      }
      else {
        int v32 = v4 + 2;
      }
      uint64_t v4 = sub_12722BC(v30, (unint64_t)v32, a3);
    }
  }
  uint64_t v33 = *(void *)(a1 + 8);
  if ((v33 & 1) == 0) {
    return v4;
  }
  unint64_t v35 = v33 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v35 + 31) < 0)
  {
    uint64_t v36 = *(void **)(v35 + 8);
    uint64_t v37 = *(void *)(v35 + 16);
  }
  else
  {
    uint64_t v36 = (void *)(v35 + 8);
    LODWORD(v37) = *(unsigned __int8 *)(v35 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v37)
  {
    uint64_t v38 = (int)v37;
    memcpy(v4, v36, (int)v37);
    v4 += v38;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v36, v37, v4);
}

uint64_t sub_1273164(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12724E0(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0x7F) == 0) {
    goto LABEL_31;
  }
  if (v8)
  {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_20;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 52) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_21;
  }
LABEL_20:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) == 0)
  {
LABEL_14:
    if ((v8 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_22;
  }
LABEL_21:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 60) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x10) == 0)
  {
LABEL_15:
    if ((v8 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_26;
  }
LABEL_22:
  int v9 = *(_DWORD *)(a1 + 64);
  if (v9 < 0) {
    uint64_t v10 = 11;
  }
  else {
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v10;
  if ((v8 & 0x20) == 0)
  {
LABEL_16:
    if ((v8 & 0x40) == 0) {
      goto LABEL_31;
    }
    goto LABEL_27;
  }
LABEL_26:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 68) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x40) == 0) {
    goto LABEL_31;
  }
LABEL_27:
  int v11 = *(_DWORD *)(a1 + 72);
  if (v11 < 0) {
    uint64_t v12 = 11;
  }
  else {
    uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v12;
LABEL_31:
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v2 += v16;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_127336C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_12C30B0(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0x7F) != 0)
  {
    if (v9)
    {
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_20;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_21;
    }
LABEL_20:
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_22;
    }
LABEL_21:
    HIDWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 60);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0) {
        goto LABEL_11;
      }
      goto LABEL_23;
    }
LABEL_22:
    LODWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
    if ((v9 & 0x20) == 0)
    {
LABEL_11:
      if ((v9 & 0x40) == 0)
      {
LABEL_13:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
        goto LABEL_14;
      }
LABEL_12:
      LODWORD(v3[3].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 72);
      goto LABEL_13;
    }
LABEL_23:
    HIDWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 68);
    if ((v9 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_14:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_12734C4(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  do
  {
    int v2 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8 * v1--);
  }
  while ((~*(_DWORD *)(v3 + 16) & 3) == 0);
  return v2 < 1;
}

void *sub_12734FC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeatureHandle");
}

uint64_t sub_127350C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_16;
    }
  }
  else if (v4)
  {
    goto LABEL_16;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if ((uint64_t (***)())a1 != &off_252F9D0 && *(void *)(a1 + 56))
  {
    sub_15B0994();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_16:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_127361C(uint64_t a1)
{
  sub_127350C(a1);

  operator delete();
}

unsigned char *sub_1273654(unsigned char *result)
{
  uint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_20:
    unint64_t v6 = *((void *)result + 4) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_24;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_24;
      }
    }
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_28;
  }
  unint64_t v5 = *((void *)result + 3) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_20;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_20;
    }
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_24:
  unint64_t v7 = *((void *)result + 5) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v7 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    if ((v2 & 8) != 0) {
      goto LABEL_28;
    }
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  **(unsigned char **)unint64_t v7 = 0;
  *(void *)(v7 + 8) = 0;
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_28:
  unint64_t v8 = *((void *)result + 6) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v8 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v8 = 0;
    *(unsigned char *)(v8 + 23) = 0;
    if ((v2 & 0x10) == 0) {
      goto LABEL_8;
    }
LABEL_7:
    uint64_t result = sub_15B09D0(*((void *)result + 7));
    goto LABEL_8;
  }
  **(unsigned char **)unint64_t v8 = 0;
  *(void *)(v8 + 8) = 0;
  if ((v2 & 0x10) != 0) {
    goto LABEL_7;
  }
LABEL_8:
  if ((v2 & 0xE0) != 0)
  {
    *((_DWORD *)v1 + 18) = 0;
    *((void *)v1 + 8) = 0;
  }
  if ((v2 & 0x700) != 0)
  {
    *(void *)(v1 + 76) = 0;
    *(void *)(v1 + 84) = 0x100000000;
  }
  char v4 = v1[8];
  uint64_t v3 = v1 + 8;
  *((_DWORD *)v3 + 2) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_12737B0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v55 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v55, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (unsigned __int8 *)(*(void *)v55 + 1);
    unsigned int v9 = **(unsigned char **)v55;
    if ((char)**(unsigned char **)v55 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v55, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (unsigned __int8 *)(*(void *)v55 + 2);
      }
    }
    *(void *)int v55 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_69;
        }
        uint64_t v12 = (char *)(v8 + 1);
        unint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          *(void *)int v55 = sub_188C138((uint64_t)v8, (v15 - 128));
          if (!*(void *)v55) {
            goto LABEL_100;
          }
          unint64_t v13 = v43;
        }
        else
        {
          uint64_t v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)int v55 = v12;
        }
        if ((v13 - 1) <= 2)
        {
          *(_DWORD *)(a1 + 16) |= 0x400u;
          *(_DWORD *)(a1 + 88) = v13;
          goto LABEL_62;
        }
        if (*v7) {
          unint64_t v53 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unint64_t v53 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v54 = 1;
        goto LABEL_94;
      case 2u:
        if (v9 != 16) {
          goto LABEL_69;
        }
        v5 |= 0x20u;
        uint64_t v16 = (char *)(v8 + 1);
        int v17 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v18 = *v16;
        int v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v44 = sub_188C0D0((uint64_t)v8, v17);
          *(void *)int v55 = v44;
          *(_DWORD *)(a1 + 64) = v45;
          if (!v44) {
            goto LABEL_100;
          }
        }
        else
        {
          uint64_t v16 = (char *)(v8 + 2);
LABEL_20:
          *(void *)int v55 = v16;
          *(_DWORD *)(a1 + 64) = v17;
        }
        goto LABEL_62;
      case 3u:
        if (v9 != 26) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v19 = *(void *)(a1 + 8);
        unint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          unint64_t v20 = (uint64_t *)*v20;
        }
        unint64_t v21 = (void *)(a1 + 24);
        goto LABEL_60;
      case 4u:
        if (v9 != 32) {
          goto LABEL_69;
        }
        v5 |= 0x40u;
        unsigned int v22 = (char *)(v8 + 1);
        int v23 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_29;
        }
        int v24 = *v22;
        int v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v46 = sub_188C0D0((uint64_t)v8, v23);
          *(void *)int v55 = v46;
          *(_DWORD *)(a1 + 68) = v47;
          if (!v46) {
            goto LABEL_100;
          }
        }
        else
        {
          unsigned int v22 = (char *)(v8 + 2);
LABEL_29:
          *(void *)int v55 = v22;
          *(_DWORD *)(a1 + 68) = v23;
        }
        goto LABEL_62;
      case 5u:
        if (v9 != 42) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v25 = *(void *)(a1 + 56);
        if (!v25)
        {
          unint64_t v26 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v26 = (void *)*v26;
          }
          uint64_t v25 = sub_15C1918((uint64_t)v26);
          *(void *)(a1 + 56) = v25;
          unint64_t v8 = *(unsigned __int8 **)v55;
        }
        unint64_t v27 = sub_1198F14(a3, v25, v8);
        goto LABEL_61;
      case 7u:
        if (v9 != 56) {
          goto LABEL_69;
        }
        v5 |= 0x80u;
        int v28 = (char *)(v8 + 1);
        int v29 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_40;
        }
        int v30 = *v28;
        int v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          uint64_t v48 = sub_188C0D0((uint64_t)v8, v29);
          *(void *)int v55 = v48;
          *(_DWORD *)(a1 + 72) = v49;
          if (!v48) {
            goto LABEL_100;
          }
        }
        else
        {
          int v28 = (char *)(v8 + 2);
LABEL_40:
          *(void *)int v55 = v28;
          *(_DWORD *)(a1 + 72) = v29;
        }
        goto LABEL_62;
      case 8u:
        if (v9 != 66) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v31 = *(void *)(a1 + 8);
        unint64_t v20 = (uint64_t *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
        if (v31) {
          unint64_t v20 = (uint64_t *)*v20;
        }
        unint64_t v21 = (void *)(a1 + 32);
        goto LABEL_60;
      case 9u:
        if (v9 != 72) {
          goto LABEL_69;
        }
        int v32 = (char *)(v8 + 1);
        unint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_49;
        }
        int v33 = *v32;
        int v34 = v13 + (v33 << 7);
        unint64_t v13 = (v34 - 128);
        if (v33 < 0)
        {
          *(void *)int v55 = sub_188C138((uint64_t)v8, (v34 - 128));
          if (!*(void *)v55) {
            goto LABEL_100;
          }
          unint64_t v13 = v50;
        }
        else
        {
          int v32 = (char *)(v8 + 2);
LABEL_49:
          *(void *)int v55 = v32;
        }
        if (sub_136FC18())
        {
          *(_DWORD *)(a1 + 16) |= 0x100u;
          *(_DWORD *)(a1 + 76) = v13;
        }
        else
        {
          if (*v7) {
            unint64_t v53 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v53 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v54 = 9;
LABEL_94:
          sub_188C020(v54, v13, v53);
        }
        goto LABEL_62;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v35 = *(void *)(a1 + 8);
        unint64_t v20 = (uint64_t *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
        if (v35) {
          unint64_t v20 = (uint64_t *)*v20;
        }
        unint64_t v21 = (void *)(a1 + 40);
        goto LABEL_60;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v36 = *(void *)(a1 + 8);
        unint64_t v20 = (uint64_t *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
        if (v36) {
          unint64_t v20 = (uint64_t *)*v20;
        }
        unint64_t v21 = (void *)(a1 + 48);
LABEL_60:
        uint64_t v37 = (std::string *)sub_1880F84(v21, v20);
        unint64_t v27 = (void *)sub_188C244(v37, *(char **)v55, (uint64_t)a3);
        goto LABEL_61;
      case 0xCu:
        if (v9 != 96) {
          goto LABEL_69;
        }
        v5 |= 0x200u;
        uint64_t v38 = (char *)(v8 + 1);
        uint64_t v39 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_68;
        }
        int v40 = *v38;
        uint64_t v39 = v39 + (v40 << 7) - 128;
        if (v40 < 0)
        {
          uint64_t v51 = sub_188C138((uint64_t)v8, v39);
          *(void *)int v55 = v51;
          *(void *)(a1 + 80) = v52;
          if (!v51) {
            goto LABEL_100;
          }
        }
        else
        {
          uint64_t v38 = (char *)(v8 + 2);
LABEL_68:
          *(void *)int v55 = v38;
          *(void *)(a1 + 80) = v39;
        }
        goto LABEL_62;
      default:
LABEL_69:
        if (v9) {
          BOOL v41 = (v9 & 7) == 4;
        }
        else {
          BOOL v41 = 1;
        }
        if (!v41)
        {
          if (*v7)
          {
            int v42 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v42 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(unsigned __int8 **)v55;
          }
          unint64_t v27 = sub_1885AC0(v9, v42, (char *)v8, a3);
LABEL_61:
          *(void *)int v55 = v27;
          if (!v27) {
            goto LABEL_100;
          }
LABEL_62:
          if (sub_11947B8((uint64_t)a3, (char **)v55, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_100:
        }
          *(void *)int v55 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v55;
    }
  }
}

char *sub_1273D38(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 88);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 64);
    *char v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    char v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 68);
    *char v4 = 32;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 56);
    *char v4 = 42;
    unsigned int v17 = *(_DWORD *)(v16 + 44);
    v4[1] = v17;
    if (v17 > 0x7F) {
      int v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      int v18 = v4 + 2;
    }
    char v4 = sub_15B0C0C(v16, v18, a3);
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 72);
    *char v4 = 56;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0) {
    char v4 = sub_117A0AC(a3, 8, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v22 = *(int *)(a1 + 76);
    *char v4 = 72;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unint64_t v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    char v4 = sub_117A0AC(a3, 10, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 8) == 0)
    {
LABEL_49:
      if ((v6 & 0x200) == 0) {
        goto LABEL_59;
      }
      goto LABEL_53;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_49;
  }
  char v4 = sub_117A0AC(a3, 11, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x200) == 0) {
    goto LABEL_59;
  }
LABEL_53:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v25 = *(void *)(a1 + 80);
  *char v4 = 96;
  v4[1] = v25;
  if (v25 > 0x7F)
  {
    v4[1] = v25 | 0x80;
    unint64_t v26 = v25 >> 7;
    v4[2] = v25 >> 7;
    v4 += 3;
    if (v25 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v27 = v26 >> 14;
        v26 >>= 7;
        *v4++ = v26;
      }
      while (v27);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_59:
  uint64_t v28 = *(void *)(a1 + 8);
  if ((v28 & 1) == 0) {
    return v4;
  }
  unint64_t v30 = v28 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v30 + 31) < 0)
  {
    uint64_t v31 = *(void **)(v30 + 8);
    uint64_t v32 = *(void *)(v30 + 16);
  }
  else
  {
    uint64_t v31 = (void *)(v30 + 8);
    LODWORD(v32) = *(unsigned __int8 *)(v30 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v32)
  {
    uint64_t v33 = (int)v32;
    memcpy(v4, v31, (int)v32);
    v4 += v33;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v31, v32, v4);
}

uint64_t sub_12741C8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_19;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    unint64_t v10 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
    uint64_t v12 = *(void *)(v10 + 8);
    if ((v11 & 0x80u) == 0) {
      uint64_t v12 = v11;
    }
    v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_30;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  unint64_t v13 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
  uint64_t v15 = *(void *)(v13 + 8);
  if ((v14 & 0x80u) == 0) {
    uint64_t v15 = v14;
  }
  v3 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t v16 = sub_15B0D90(*(void *)(a1 + 56));
  v3 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_16:
    if ((v2 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_32;
  }
LABEL_31:
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 64) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_17:
    if ((v2 & 0x80) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
LABEL_32:
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 68) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x80) != 0) {
LABEL_18:
  }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 72) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_19:
  if ((v2 & 0x700) == 0) {
    goto LABEL_43;
  }
  if ((v2 & 0x100) != 0)
  {
    int v17 = *(_DWORD *)(a1 + 76);
    if (v17 < 0) {
      uint64_t v18 = 11;
    }
    else {
      uint64_t v18 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v18;
    if ((v2 & 0x200) == 0)
    {
LABEL_22:
      if ((v2 & 0x400) == 0) {
        goto LABEL_43;
      }
      goto LABEL_39;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_22;
  }
  v3 += ((9 * (__clz(*(void *)(a1 + 80) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v2 & 0x400) == 0) {
    goto LABEL_43;
  }
LABEL_39:
  int v19 = *(_DWORD *)(a1 + 88);
  if (v19 < 0) {
    uint64_t v20 = 11;
  }
  else {
    uint64_t v20 = ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v20;
LABEL_43:
  uint64_t v21 = *(void *)(a1 + 8);
  if (v21)
  {
    unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v23 + 31) < 0) {
      uint64_t v24 = *(void *)(v23 + 16);
    }
    else {
      uint64_t v24 = *(unsigned __int8 *)(v23 + 31);
    }
    v3 += v24;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_12744B0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      unint64_t v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_28;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    unint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v11 = *(void *)(a1 + 8);
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 32), v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_31;
    }
LABEL_28:
    unint64_t v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v14 = *(void *)(a1 + 8);
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    sub_1881DF4((std::string **)(a1 + 40), v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_34;
    }
LABEL_31:
    uint64_t v16 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v17 = *(void *)(a1 + 8);
    uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    sub_1881DF4((std::string **)(a1 + 48), v16, v18);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_42;
    }
LABEL_34:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v19 = *(void *)(a1 + 56);
    if (!v19)
    {
      uint64_t v20 = *(void *)(a1 + 8);
      uint64_t v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        uint64_t v21 = (void *)*v21;
      }
      uint64_t v19 = sub_15C1918((uint64_t)v21);
      *(void *)(a1 + 56) = v19;
    }
    if (*(void *)(a2 + 56)) {
      unint64_t v22 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      unint64_t v22 = &off_253F1A0;
    }
    sub_15B0E24(v19, (uint64_t)v22);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_43;
    }
LABEL_42:
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
      goto LABEL_11;
    }
LABEL_43:
    *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v4 & 0x700) == 0) {
    goto LABEL_18;
  }
  if ((v4 & 0x100) == 0)
  {
    if ((v4 & 0x200) == 0) {
      goto LABEL_15;
    }
LABEL_46:
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    if ((v4 & 0x400) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  if ((v4 & 0x200) != 0) {
    goto LABEL_46;
  }
LABEL_15:
  if ((v4 & 0x400) != 0) {
LABEL_16:
  }
    *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
LABEL_17:
  *(_DWORD *)(a1 + 16) |= v4;
LABEL_18:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_12746CC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x10) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 56));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_12746F8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.DirectionsEvent");
}

uint64_t sub_1274708(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_16;
    }
  }
  else if (v4)
  {
    goto LABEL_16;
  }
  uint64_t v5 = (void ***)(a1 + 168);
  if (*(uint64_t **)(a1 + 168) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 176) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 176));
  }
  if (*(uint64_t **)(a1 + 184) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 184));
  }
  if ((uint64_t (***)())a1 != &off_252FA30)
  {
    uint64_t v6 = *(void **)(a1 + 192);
    if (v6)
    {
      sub_1276F10(v6);
      operator delete();
    }
    unint64_t v7 = *(void **)(a1 + 200);
    if (v7)
    {
      sub_1276F10(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_16:
  sub_12C2734((void *)(a1 + 144));
  sub_12C26B4((void *)(a1 + 120));
  sub_12C2634((void *)(a1 + 96));
  sub_12C25B4((void *)(a1 + 72));
  sub_12C2134((void *)(a1 + 48));
  sub_12C20B4((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_127486C(uint64_t a1)
{
  sub_1274708(a1);

  operator delete();
}

uint64_t sub_12748A4(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_16;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_16;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_20:
    uint64_t result = sub_175FE78(*(void *)(result + 40));
    if ((v2 & 8) == 0)
    {
LABEL_6:
      if ((v2 & 0x10) == 0) {
        goto LABEL_8;
      }
      goto LABEL_7;
    }
    goto LABEL_21;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_16:
  unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_20;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_20;
    }
  }
LABEL_5:
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_21:
  uint64_t result = sub_1318B10(*(void *)(v1 + 48));
  if ((v2 & 0x10) != 0) {
LABEL_7:
  }
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(v1 + 56));
LABEL_8:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 56) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_1274998(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v80 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v80, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v79 = (uint64_t *)(a1 + 8);
  while (2)
  {
    unint64_t v7 = (unsigned __int8 *)(*(void *)v80 + 1);
    unsigned int v8 = **(unsigned char **)v80;
    if ((char)**(unsigned char **)v80 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        unint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v80, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (unsigned __int8 *)(*(void *)v80 + 2);
      }
    }
    *(void *)uint64_t v80 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_114;
        }
        uint64_t v11 = v7 - 1;
        while (1)
        {
          uint64_t v12 = v11 + 1;
          *(void *)uint64_t v80 = v11 + 1;
          unint64_t v13 = *(_DWORD **)(a1 + 40);
          if (v13 && (uint64_t v14 = *(int *)(a1 + 32), (int)v14 < *v13))
          {
            *(_DWORD *)(a1 + 32) = v14 + 1;
            uint64_t v15 = *(void *)&v13[2 * v14 + 2];
          }
          else
          {
            uint64_t v16 = sub_16332DC(*(void *)(a1 + 24));
            uint64_t v15 = sub_188CDC8(a1 + 24, v16);
            uint64_t v12 = *(unsigned __int8 **)v80;
          }
          uint64_t v11 = (unsigned __int8 *)sub_118D0CC(a3, v15, v12);
          *(void *)uint64_t v80 = v11;
          if (!v11) {
            goto LABEL_135;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *v11 != 10) {
            goto LABEL_122;
          }
        }
      case 2u:
        if (v8 != 18) {
          goto LABEL_114;
        }
        uint64_t v17 = (char *)(v7 - 1);
        while (1)
        {
          uint64_t v18 = (unsigned __int8 *)(v17 + 1);
          *(void *)uint64_t v80 = v17 + 1;
          uint64_t v19 = *(_DWORD **)(a1 + 64);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 56), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 56) = v20 + 1;
            uint64_t v21 = *(void *)&v19[2 * v20 + 2];
          }
          else
          {
            uint64_t v22 = sub_1633394(*(void *)(a1 + 48));
            uint64_t v21 = sub_188CDC8(a1 + 48, v22);
            uint64_t v18 = *(unsigned __int8 **)v80;
          }
          uint64_t v17 = sub_126601C(a3, v21, v18);
          *(void *)uint64_t v80 = v17;
          if (!v17) {
            goto LABEL_135;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 18) {
            goto LABEL_122;
          }
        }
      case 3u:
        if (v8 != 26) {
          goto LABEL_114;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v23 = *(void *)(a1 + 8);
        uint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
        if (v23) {
          uint64_t v24 = (uint64_t *)*v24;
        }
        unint64_t v25 = (void *)(a1 + 168);
        goto LABEL_56;
      case 4u:
        if (v8 != 34) {
          goto LABEL_114;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v26 = *(void *)(a1 + 8);
        uint64_t v24 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
        if (v26) {
          uint64_t v24 = (uint64_t *)*v24;
        }
        unint64_t v25 = (void *)(a1 + 176);
        goto LABEL_56;
      case 5u:
        if (v8 != 42) {
          goto LABEL_114;
        }
        unint64_t v27 = v7 - 1;
        while (1)
        {
          uint64_t v28 = v27 + 1;
          *(void *)uint64_t v80 = v27 + 1;
          int v29 = *(_DWORD **)(a1 + 88);
          if (v29 && (uint64_t v30 = *(int *)(a1 + 80), (int)v30 < *v29))
          {
            *(_DWORD *)(a1 + 80) = v30 + 1;
            uint64_t v31 = *(void *)&v29[2 * v30 + 2];
          }
          else
          {
            sub_12844E8(*(void *)(a1 + 72));
            uint64_t v31 = sub_188CDC8(a1 + 72, v32);
            uint64_t v28 = *(unsigned __int8 **)v80;
          }
          unint64_t v27 = (unsigned __int8 *)sub_1275170(a3, v31, v28);
          *(void *)uint64_t v80 = v27;
          if (!v27) {
            goto LABEL_135;
          }
          if (*(void *)a3 <= (unint64_t)v27 || *v27 != 42) {
            goto LABEL_122;
          }
        }
      case 6u:
        if (v8 != 48) {
          goto LABEL_114;
        }
        v5 |= 0x20u;
        uint64_t v33 = (char *)(v7 + 1);
        int v34 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_51;
        }
        int v35 = *v33;
        int v34 = v34 + (v35 << 7) - 128;
        if (v35 < 0)
        {
          uint64_t v71 = sub_188C0D0((uint64_t)v7, v34);
          *(void *)uint64_t v80 = v71;
          *(_DWORD *)(a1 + 208) = v72;
          if (!v71) {
            goto LABEL_135;
          }
        }
        else
        {
          uint64_t v33 = (char *)(v7 + 2);
LABEL_51:
          *(void *)uint64_t v80 = v33;
          *(_DWORD *)(a1 + 208) = v34;
        }
        goto LABEL_122;
      case 7u:
        if (v8 != 58) {
          goto LABEL_114;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v36 = *(void *)(a1 + 8);
        uint64_t v24 = (uint64_t *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
        if (v36) {
          uint64_t v24 = (uint64_t *)*v24;
        }
        unint64_t v25 = (void *)(a1 + 184);
LABEL_56:
        uint64_t v37 = (std::string *)sub_1880F84(v25, v24);
        uint64_t v38 = (uint64_t)sub_188C244(v37, *(char **)v80, (uint64_t)a3);
        goto LABEL_121;
      case 8u:
        if (v8 != 64) {
          goto LABEL_114;
        }
        v5 |= 0x40u;
        uint64_t v39 = (char *)(v7 + 1);
        int v40 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_61;
        }
        int v41 = *v39;
        int v40 = v40 + (v41 << 7) - 128;
        if (v41 < 0)
        {
          uint64_t v73 = sub_188C0D0((uint64_t)v7, v40);
          *(void *)uint64_t v80 = v73;
          *(_DWORD *)(a1 + 212) = v74;
          if (!v73) {
            goto LABEL_135;
          }
        }
        else
        {
          uint64_t v39 = (char *)(v7 + 2);
LABEL_61:
          *(void *)uint64_t v80 = v39;
          *(_DWORD *)(a1 + 212) = v40;
        }
        goto LABEL_122;
      case 9u:
        if (v8 != 72) {
          goto LABEL_114;
        }
        v5 |= 0x80u;
        int v42 = (char *)(v7 + 1);
        uint64_t v43 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_66;
        }
        int v44 = *v42;
        uint64_t v43 = v43 + (v44 << 7) - 128;
        if (v44 < 0)
        {
          uint64_t v75 = sub_188C138((uint64_t)v7, v43);
          *(void *)uint64_t v80 = v75;
          *(void *)(a1 + 216) = v76;
          if (!v75) {
            goto LABEL_135;
          }
        }
        else
        {
          int v42 = (char *)(v7 + 2);
LABEL_66:
          *(void *)uint64_t v80 = v42;
          *(void *)(a1 + 216) = v43;
        }
        goto LABEL_122;
      case 0xAu:
        if (v8 != 82) {
          goto LABEL_114;
        }
        int v45 = v7 - 1;
        while (1)
        {
          uint64_t v46 = v45 + 1;
          *(void *)uint64_t v80 = v45 + 1;
          int v47 = *(_DWORD **)(a1 + 112);
          if (v47 && (uint64_t v48 = *(int *)(a1 + 104), (int)v48 < *v47))
          {
            *(_DWORD *)(a1 + 104) = v48 + 1;
            uint64_t v49 = *(void *)&v47[2 * v48 + 2];
          }
          else
          {
            uint64_t v50 = sub_134E188(*(void *)(a1 + 96));
            uint64_t v49 = sub_188CDC8(a1 + 96, v50);
            uint64_t v46 = *(unsigned __int8 **)v80;
          }
          int v45 = (unsigned __int8 *)sub_1275200(a3, v49, v46);
          *(void *)uint64_t v80 = v45;
          if (!v45) {
            goto LABEL_135;
          }
          if (*(void *)a3 <= (unint64_t)v45 || *v45 != 82) {
            goto LABEL_122;
          }
        }
      case 0xBu:
        if (v8 != 90) {
          goto LABEL_114;
        }
        uint64_t v51 = (char *)(v7 - 1);
        while (1)
        {
          uint64_t v52 = (unsigned __int8 *)(v51 + 1);
          *(void *)uint64_t v80 = v51 + 1;
          unint64_t v53 = *(_DWORD **)(a1 + 136);
          if (v53 && (uint64_t v54 = *(int *)(a1 + 128), (int)v54 < *v53))
          {
            *(_DWORD *)(a1 + 128) = v54 + 1;
            uint64_t v55 = *(void *)&v53[2 * v54 + 2];
          }
          else
          {
            uint64_t v56 = sub_1284784(*(void *)(a1 + 120));
            uint64_t v55 = sub_188CDC8(a1 + 120, (uint64_t)v56);
            uint64_t v52 = *(unsigned __int8 **)v80;
          }
          uint64_t v51 = sub_1275290(a3, v55, v52);
          *(void *)uint64_t v80 = v51;
          if (!v51) {
            goto LABEL_135;
          }
          if (*(void *)a3 <= (unint64_t)v51 || *v51 != 90) {
            goto LABEL_122;
          }
        }
      case 0xDu:
        if (v8 != 104) {
          goto LABEL_114;
        }
        v5 |= 0x100u;
        uint64_t v57 = (char *)(v7 + 1);
        int v58 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_91;
        }
        int v59 = *v57;
        int v58 = v58 + (v59 << 7) - 128;
        if (v59 < 0)
        {
          uint64_t v77 = sub_188C0D0((uint64_t)v7, v58);
          *(void *)uint64_t v80 = v77;
          *(_DWORD *)(a1 + 224) = v78;
          if (!v77) {
            goto LABEL_135;
          }
        }
        else
        {
          uint64_t v57 = (char *)(v7 + 2);
LABEL_91:
          *(void *)uint64_t v80 = v57;
          *(_DWORD *)(a1 + 224) = v58;
        }
        goto LABEL_122;
      case 0xEu:
        if (v8 != 114) {
          goto LABEL_114;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v60 = *(void *)(a1 + 192);
        if (v60) {
          goto LABEL_103;
        }
        uint64_t v61 = (void *)(*v79 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v79) {
          uint64_t v61 = (void *)*v61;
        }
        uint64_t v60 = sub_12846F4((uint64_t)v61);
        *(void *)(a1 + 192) = v60;
        goto LABEL_102;
      case 0xFu:
        if (v8 != 122) {
          goto LABEL_114;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v60 = *(void *)(a1 + 200);
        if (v60) {
          goto LABEL_103;
        }
        unint64_t v62 = (void *)(*v79 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v79) {
          unint64_t v62 = (void *)*v62;
        }
        uint64_t v60 = sub_12846F4((uint64_t)v62);
        *(void *)(a1 + 200) = v60;
LABEL_102:
        unint64_t v7 = *(unsigned __int8 **)v80;
LABEL_103:
        uint64_t v38 = sub_1275320(a3, v60, v7);
        goto LABEL_121;
      case 0x10u:
        if (v8 != 130) {
          goto LABEL_114;
        }
        uint64_t v63 = v7 - 2;
        while (1)
        {
          uint64_t v64 = v63 + 2;
          *(void *)uint64_t v80 = v63 + 2;
          uint64_t v65 = *(_DWORD **)(a1 + 160);
          if (v65 && (uint64_t v66 = *(int *)(a1 + 152), (int)v66 < *v65))
          {
            *(_DWORD *)(a1 + 152) = v66 + 1;
            uint64_t v67 = *(void *)&v65[2 * v66 + 2];
          }
          else
          {
            uint64_t v68 = sub_1284668(*(void *)(a1 + 144));
            uint64_t v67 = sub_188CDC8(a1 + 144, (uint64_t)v68);
            uint64_t v64 = *(unsigned __int8 **)v80;
          }
          uint64_t v63 = (unsigned __int8 *)sub_12753B0(a3, v67, v64);
          *(void *)uint64_t v80 = v63;
          if (!v63) {
            goto LABEL_135;
          }
          if (*(void *)a3 <= (unint64_t)v63 || *(_WORD *)v63 != 386) {
            goto LABEL_122;
          }
        }
      default:
LABEL_114:
        if (v8) {
          BOOL v69 = (v8 & 7) == 4;
        }
        else {
          BOOL v69 = 1;
        }
        if (!v69)
        {
          if (*v79)
          {
            uint64_t v70 = (std::string *)((*v79 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v70 = (std::string *)sub_188DBD8(v79);
            unint64_t v7 = *(unsigned __int8 **)v80;
          }
          uint64_t v38 = (uint64_t)sub_1885AC0(v8, v70, (char *)v7, a3);
LABEL_121:
          *(void *)uint64_t v80 = v38;
          if (!v38) {
            goto LABEL_135;
          }
LABEL_122:
          if (sub_11947B8((uint64_t)a3, (char **)v80, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v7) {
          a3[10].i32[0] = v8 - 1;
        }
        else {
LABEL_135:
        }
          *(void *)uint64_t v80 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v80;
    }
  }
}

uint64_t sub_1275170(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12737B0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1275200(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13382C8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1275290(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1277A1C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1275320(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12770A4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12753B0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12764BC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1275440(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_162962C(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 56);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 44);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = sub_162F61C(v13, v15, a3);
    }
  }
  int v16 = *(_DWORD *)(a1 + 16);
  if (v16) {
    __dst = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v16 & 2) != 0) {
    __dst = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 176) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v17 = *(_DWORD *)(a1 + 80);
  if (v17)
  {
    for (int k = 0; k != v17; ++k)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v19 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      *__dst = 42;
      unsigned int v20 = *(_DWORD *)(v19 + 20);
      __dst[1] = v20;
      if (v20 > 0x7F) {
        uint64_t v21 = sub_188A9CC(v20, __dst + 1);
      }
      else {
        uint64_t v21 = __dst + 2;
      }
      __dst = sub_1273D38(v19, (unint64_t)v21, a3);
    }
  }
  if ((v16 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v22 = *(_DWORD *)(a1 + 208);
    *__dst = 48;
    __dst[1] = v22;
    if (v22 > 0x7F)
    {
      __dst[1] = v22 | 0x80;
      unsigned int v23 = v22 >> 7;
      __dst[2] = v22 >> 7;
      __dst += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v24 = v23 >> 14;
          v23 >>= 7;
          *__dst++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v16 & 4) != 0) {
    __dst = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 184) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v16 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v25 = *(_DWORD *)(a1 + 212);
    *__dst = 64;
    __dst[1] = v25;
    if (v25 > 0x7F)
    {
      __dst[1] = v25 | 0x80;
      unsigned int v26 = v25 >> 7;
      __dst[2] = v25 >> 7;
      __dst += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v27 = v26 >> 14;
          v26 >>= 7;
          *__dst++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v16 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v28 = *(void *)(a1 + 216);
    *__dst = 72;
    __dst[1] = v28;
    if (v28 > 0x7F)
    {
      __dst[1] = v28 | 0x80;
      unint64_t v29 = v28 >> 7;
      __dst[2] = v28 >> 7;
      __dst += 3;
      if (v28 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v30 = v29 >> 14;
          v29 >>= 7;
          *__dst++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  int v31 = *(_DWORD *)(a1 + 104);
  if (v31)
  {
    for (int m = 0; m != v31; ++m)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v33 = *(void *)(*(void *)(a1 + 112) + 8 * m + 8);
      *__dst = 82;
      unsigned int v34 = *(_DWORD *)(v33 + 44);
      __dst[1] = v34;
      if (v34 > 0x7F) {
        int v35 = sub_188A9CC(v34, __dst + 1);
      }
      else {
        int v35 = __dst + 2;
      }
      __dst = sub_13390DC(v33, v35, a3);
    }
  }
  int v36 = *(_DWORD *)(a1 + 128);
  if (v36)
  {
    for (int n = 0; n != v36; ++n)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v38 = *(void *)(*(void *)(a1 + 136) + 8 * n + 8);
      *__dst = 90;
      unsigned int v39 = *(_DWORD *)(v38 + 20);
      __dst[1] = v39;
      if (v39 > 0x7F) {
        int v40 = sub_188A9CC(v39, __dst + 1);
      }
      else {
        int v40 = __dst + 2;
      }
      __dst = sub_1277CF8(v38, (unint64_t)v40, a3);
    }
  }
  if ((v16 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v41 = *(_DWORD *)(a1 + 224);
    *__dst = 104;
    __dst[1] = v41;
    if (v41 > 0x7F)
    {
      __dst[1] = v41 | 0x80;
      unsigned int v42 = v41 >> 7;
      __dst[2] = v41 >> 7;
      __dst += 3;
      if (v41 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v43 = v42 >> 14;
          v42 >>= 7;
          *__dst++ = v42;
        }
        while (v43);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v16 & 8) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v44 = *(void *)(a1 + 192);
    *__dst = 114;
    unsigned int v45 = *(_DWORD *)(v44 + 20);
    __dst[1] = v45;
    if (v45 > 0x7F) {
      uint64_t v46 = sub_188A9CC(v45, __dst + 1);
    }
    else {
      uint64_t v46 = __dst + 2;
    }
    __dst = sub_12774A4(v44, v46, a3);
  }
  if ((v16 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v47 = *(void *)(a1 + 200);
    *__dst = 122;
    unsigned int v48 = *(_DWORD *)(v47 + 20);
    __dst[1] = v48;
    if (v48 > 0x7F) {
      uint64_t v49 = sub_188A9CC(v48, __dst + 1);
    }
    else {
      uint64_t v49 = __dst + 2;
    }
    __dst = sub_12774A4(v47, v49, a3);
  }
  int v50 = *(_DWORD *)(a1 + 152);
  if (v50)
  {
    for (iint i = 0; ii != v50; ++ii)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v52 = *(void *)(*(void *)(a1 + 160) + 8 * ii + 8);
      *(_WORD *)__dst = 386;
      unsigned int v53 = *(_DWORD *)(v52 + 20);
      __dst[2] = v53;
      if (v53 > 0x7F) {
        uint64_t v54 = sub_188A9CC(v53, __dst + 2);
      }
      else {
        uint64_t v54 = __dst + 3;
      }
      __dst = sub_1276838(v52, (unint64_t)v54, a3);
    }
  }
  uint64_t v55 = *(void *)(a1 + 8);
  if ((v55 & 1) == 0) {
    return __dst;
  }
  unint64_t v57 = v55 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v57 + 31) < 0)
  {
    int v58 = *(void **)(v57 + 8);
    uint64_t v59 = *(void *)(v57 + 16);
  }
  else
  {
    int v58 = (void *)(v57 + 8);
    LODWORD(v59) = *(unsigned __int8 *)(v57 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v59)
  {
    uint64_t v60 = (int)v59;
    memcpy(__dst, v58, (int)v59);
    __dst += v60;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v58, v59, __dst);
}

uint64_t sub_1275B34(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    char v4 = (uint64_t *)(v3 + 8);
  }
  else {
    char v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_162A6E8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1630810(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    uint64_t v18 = (uint64_t *)(v17 + 8);
  }
  else {
    uint64_t v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_12741C8(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *(int *)(a1 + 104);
  uint64_t v23 = v16 + v22;
  uint64_t v24 = *(void *)(a1 + 112);
  if (v24) {
    unsigned int v25 = (uint64_t *)(v24 + 8);
  }
  else {
    unsigned int v25 = 0;
  }
  if (v22)
  {
    uint64_t v26 = 8 * v22;
    do
    {
      uint64_t v27 = *v25++;
      uint64_t v28 = sub_13398D0(v27);
      v23 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6);
      v26 -= 8;
    }
    while (v26);
  }
  uint64_t v29 = *(int *)(a1 + 128);
  uint64_t v30 = v23 + v29;
  uint64_t v31 = *(void *)(a1 + 136);
  if (v31) {
    uint64_t v32 = (uint64_t *)(v31 + 8);
  }
  else {
    uint64_t v32 = 0;
  }
  if (v29)
  {
    uint64_t v33 = 8 * v29;
    do
    {
      uint64_t v34 = *v32++;
      uint64_t v35 = sub_1277F44(v34);
      v30 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6);
      v33 -= 8;
    }
    while (v33);
  }
  uint64_t v36 = *(int *)(a1 + 152);
  uint64_t v37 = v30 + 2 * v36;
  uint64_t v38 = *(void *)(a1 + 160);
  if (v38) {
    unsigned int v39 = (uint64_t *)(v38 + 8);
  }
  else {
    unsigned int v39 = 0;
  }
  if (v36)
  {
    uint64_t v40 = 8 * v36;
    do
    {
      uint64_t v41 = *v39++;
      uint64_t v42 = sub_1276AE4(v41);
      v37 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6);
      v40 -= 8;
    }
    while (v40);
  }
  int v43 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v43) {
    goto LABEL_49;
  }
  if (v43)
  {
    unint64_t v46 = *(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v47 = *(unsigned __int8 *)(v46 + 23);
    uint64_t v48 = *(void *)(v46 + 8);
    if ((v47 & 0x80u) == 0) {
      uint64_t v48 = v47;
    }
    v37 += v48 + ((9 * (__clz(v48 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v43 & 2) == 0)
    {
LABEL_42:
      if ((v43 & 4) == 0) {
        goto LABEL_43;
      }
      goto LABEL_59;
    }
  }
  else if ((v43 & 2) == 0)
  {
    goto LABEL_42;
  }
  unint64_t v49 = *(void *)(a1 + 176) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v50 = *(unsigned __int8 *)(v49 + 23);
  uint64_t v51 = *(void *)(v49 + 8);
  if ((v50 & 0x80u) == 0) {
    uint64_t v51 = v50;
  }
  v37 += v51 + ((9 * (__clz(v51 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v43 & 4) == 0)
  {
LABEL_43:
    if ((v43 & 8) == 0) {
      goto LABEL_44;
    }
    goto LABEL_62;
  }
LABEL_59:
  unint64_t v52 = *(void *)(a1 + 184) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v53 = *(unsigned __int8 *)(v52 + 23);
  uint64_t v54 = *(void *)(v52 + 8);
  if ((v53 & 0x80u) == 0) {
    uint64_t v54 = v53;
  }
  v37 += v54 + ((9 * (__clz(v54 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v43 & 8) == 0)
  {
LABEL_44:
    if ((v43 & 0x10) == 0) {
      goto LABEL_45;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t v55 = sub_127775C(*(void *)(a1 + 192));
  v37 += v55 + ((9 * (__clz(v55 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v43 & 0x10) == 0)
  {
LABEL_45:
    if ((v43 & 0x20) == 0) {
      goto LABEL_46;
    }
LABEL_64:
    v37 += ((9 * (__clz(*(_DWORD *)(a1 + 208) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v43 & 0x40) == 0)
    {
LABEL_47:
      if ((v43 & 0x80) == 0) {
        goto LABEL_49;
      }
      goto LABEL_48;
    }
    goto LABEL_65;
  }
LABEL_63:
  uint64_t v56 = sub_127775C(*(void *)(a1 + 200));
  v37 += v56 + ((9 * (__clz(v56 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v43 & 0x20) != 0) {
    goto LABEL_64;
  }
LABEL_46:
  if ((v43 & 0x40) == 0) {
    goto LABEL_47;
  }
LABEL_65:
  v37 += ((9 * (__clz(*(_DWORD *)(a1 + 212) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v43 & 0x80) != 0) {
LABEL_48:
  }
    v37 += ((9 * (__clz(*(void *)(a1 + 216) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_49:
  if ((v43 & 0x100) != 0) {
    v37 += ((9 * (__clz(*(_DWORD *)(a1 + 224) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v44 = *(void *)(a1 + 8);
  if (v44)
  {
    unint64_t v57 = v44 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v57 + 31) < 0) {
      uint64_t v58 = *(void *)(v57 + 16);
    }
    else {
      uint64_t v58 = *(unsigned __int8 *)(v57 + 31);
    }
    v37 += v58;
  }
  *(_DWORD *)(a1 + 20) = v37;
  return v37;
}

void sub_1275F68(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_20;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v11 = *(void *)(a1 + 8);
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 32), v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_28;
    }
LABEL_20:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v13 = *(void *)(a1 + 40);
    if (!v13)
    {
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (void *)*v15;
      }
      uint64_t v13 = sub_178CDA8((uint64_t)v15);
      *(void *)(a1 + 40) = v13;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v16 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v16 = &off_25486C0;
    }
    sub_1760D4C(v13, (uint64_t)v16);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_36;
    }
LABEL_28:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v17 = *(void *)(a1 + 48);
    if (!v17)
    {
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v19 = (void *)*v19;
      }
      uint64_t v17 = sub_131BDDC((uint64_t)v19);
      *(void *)(a1 + 48) = v17;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v20 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v20 = &off_2532BC8;
    }
    sub_131AB94(v17, (uint64_t)v20);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0)
      {
LABEL_9:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_10;
      }
LABEL_8:
      *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
      goto LABEL_9;
    }
LABEL_36:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v21 = *(void *)(a1 + 56);
    if (!v21)
    {
      uint64_t v22 = *(void *)(a1 + 8);
      uint64_t v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        uint64_t v23 = (void *)*v23;
      }
      uint64_t v21 = sub_15C1918((uint64_t)v23);
      *(void *)(a1 + 56) = v21;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v24 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v24 = &off_253F1A0;
    }
    sub_15B0E24(v21, (uint64_t)v24);
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1276150(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if ((*(unsigned char *)(v5 + 16) & 0x10) != 0)
    {
      uint64_t result = sub_15B0F18(*(void *)(v5 + 56));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_12761C0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_17612D4(*(void *)(a1 + 40));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) != 0)
  {
    uint64_t result = sub_131B154(*(void *)(a1 + 48));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x10) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 56));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1276220@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.DirectionsProblem");
}

uint64_t sub_1276230(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_16;
    }
  }
  else if (v4)
  {
    goto LABEL_16;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if ((uint64_t (***)())a1 != &off_252FB18)
  {
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_125F860(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_16:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1276340(uint64_t a1)
{
  sub_1276230(a1);

  operator delete();
}

unsigned char *sub_1276378(unsigned char *result)
{
  uint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_18:
    unint64_t v6 = *((void *)result + 4) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_22;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_22;
      }
    }
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_26;
  }
  unint64_t v5 = *((void *)result + 3) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_18;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_18;
    }
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_22:
  unint64_t v7 = *((void *)result + 5) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v7 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    if ((v2 & 8) != 0) {
      goto LABEL_26;
    }
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  **(unsigned char **)unint64_t v7 = 0;
  *(void *)(v7 + 8) = 0;
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_26:
  unint64_t v8 = *((void *)result + 6) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v8 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v8 = 0;
    *(unsigned char *)(v8 + 23) = 0;
    if ((v2 & 0x10) == 0) {
      goto LABEL_8;
    }
LABEL_7:
    uint64_t result = sub_125F964(*((unsigned char **)result + 7));
    goto LABEL_8;
  }
  **(unsigned char **)unint64_t v8 = 0;
  *(void *)(v8 + 8) = 0;
  if ((v2 & 0x10) != 0) {
    goto LABEL_7;
  }
LABEL_8:
  if ((v2 & 0x60) != 0) {
    *((void *)v1 + 8) = 0;
  }
  char v4 = v1[8];
  uint64_t v3 = v1 + 8;
  *((_DWORD *)v3 + 2) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_12764BC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v35 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (unsigned __int8 *)(*(void *)v35 + 1);
    unsigned int v9 = **(unsigned char **)v35;
    if ((char)**(unsigned char **)v35 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v35, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (unsigned __int8 *)(*(void *)v35 + 2);
      }
    }
    *(void *)uint64_t v35 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_45;
        }
        v5 |= 0x20u;
        uint64_t v12 = (char *)(v8 + 1);
        int v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)uint64_t v35 = v12;
          *(_DWORD *)(a1 + 64) = v13;
          goto LABEL_43;
        }
        uint64_t v31 = sub_188C0D0((uint64_t)v8, v13);
        *(void *)uint64_t v35 = v31;
        *(_DWORD *)(a1 + 64) = v32;
        if (v31) {
          goto LABEL_43;
        }
        goto LABEL_59;
      case 2u:
        if (v9 != 18) {
          goto LABEL_45;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 24);
        goto LABEL_41;
      case 3u:
        if (v9 != 26) {
          goto LABEL_45;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v18 = *(void *)(a1 + 56);
        if (!v18)
        {
          uint64_t v19 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v19 = (void *)*v19;
          }
          sub_12835E0((uint64_t)v19);
          uint64_t v18 = v20;
          *(void *)(a1 + 56) = v20;
          unint64_t v8 = *(unsigned __int8 **)v35;
        }
        uint64_t v21 = sub_12616A0(a3, v18, v8);
        goto LABEL_42;
      case 4u:
        if (v9 != 32) {
          goto LABEL_45;
        }
        v5 |= 0x40u;
        uint64_t v22 = (char *)(v8 + 1);
        int v23 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v24 = *v22;
        int v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v33 = sub_188C0D0((uint64_t)v8, v23);
          *(void *)uint64_t v35 = v33;
          *(_DWORD *)(a1 + 68) = v34;
          if (!v33) {
            goto LABEL_59;
          }
        }
        else
        {
          uint64_t v22 = (char *)(v8 + 2);
LABEL_28:
          *(void *)uint64_t v35 = v22;
          *(_DWORD *)(a1 + 68) = v23;
        }
        goto LABEL_43;
      case 5u:
        if (v9 != 42) {
          goto LABEL_45;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v25 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
        if (v25) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
        goto LABEL_41;
      case 6u:
        if (v9 != 50) {
          goto LABEL_45;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v26 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
        if (v26) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 40);
        goto LABEL_41;
      case 7u:
        if (v9 != 58) {
          goto LABEL_45;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v27 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
        if (v27) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 48);
LABEL_41:
        uint64_t v28 = (std::string *)sub_1880F84(v17, v16);
        uint64_t v21 = (uint64_t)sub_188C244(v28, *(char **)v35, (uint64_t)a3);
        goto LABEL_42;
      default:
LABEL_45:
        if (v9) {
          BOOL v29 = (v9 & 7) == 4;
        }
        else {
          BOOL v29 = 1;
        }
        if (!v29)
        {
          if (*v7)
          {
            uint64_t v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(unsigned __int8 **)v35;
          }
          uint64_t v21 = (uint64_t)sub_1885AC0(v9, v30, (char *)v8, a3);
LABEL_42:
          *(void *)uint64_t v35 = v21;
          if (!v21) {
            goto LABEL_59;
          }
LABEL_43:
          if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_59:
        }
          *(void *)uint64_t v35 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v35;
    }
  }
}

unsigned char *sub_1276838(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 64);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 0x10) == 0)
    {
LABEL_10:
      if ((v6 & 0x40) == 0) {
        goto LABEL_25;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 56);
  *char v4 = 26;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  char v4 = sub_125FC64(v10, v12, a3);
  if ((v6 & 0x40) != 0)
  {
LABEL_19:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 68);
    *char v4 = 32;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_25:
  if ((v6 & 2) != 0)
  {
    char v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 4) == 0)
    {
LABEL_27:
      if ((v6 & 8) == 0) {
        goto LABEL_29;
      }
      goto LABEL_28;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_27;
  }
  char v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) != 0) {
LABEL_28:
  }
    char v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_29:
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_1276AE4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x7F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_18;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    unint64_t v12 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
    uint64_t v14 = *(void *)(v12 + 8);
    if ((v13 & 0x80u) == 0) {
      uint64_t v14 = v13;
    }
    v3 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_26;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  unint64_t v15 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
  uint64_t v17 = *(void *)(v15 + 8);
  if ((v16 & 0x80u) == 0) {
    uint64_t v17 = v16;
  }
  v3 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v18 = sub_125FE5C(*(void *)(a1 + 56));
  v3 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_16:
    if ((v2 & 0x40) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
LABEL_27:
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 64) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x40) != 0) {
LABEL_17:
  }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 68) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_18:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v19 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v3 += v20;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_1276D00(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x7F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      unint64_t v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_21;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v11 = *(void *)(a1 + 8);
    unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      unint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 32), v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_24;
    }
LABEL_21:
    uint64_t v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v14 = *(void *)(a1 + 8);
    unint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      unint64_t v15 = (uint64_t *)*v15;
    }
    sub_1881DF4((std::string **)(a1 + 40), v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_27;
    }
LABEL_24:
    uint64_t v16 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v17 = *(void *)(a1 + 8);
    uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    sub_1881DF4((std::string **)(a1 + 48), v16, v18);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_35;
    }
LABEL_27:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v19 = *(void *)(a1 + 56);
    if (!v19)
    {
      uint64_t v20 = *(void *)(a1 + 8);
      uint64_t v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        uint64_t v21 = (void *)*v21;
      }
      sub_12835E0((uint64_t)v21);
      *(void *)(a1 + 56) = v19;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v22 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v22 = &off_252F398;
    }
    sub_125FF68(v19, (uint64_t)v22);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0)
      {
LABEL_10:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_11;
      }
LABEL_9:
      *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
      goto LABEL_10;
    }
LABEL_35:
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1276EC8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x10) == 0) {
    return 1;
  }
  uint64_t v1 = *(void *)(a1 + 56);
  if ((*(unsigned char *)(v1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(v1 + 32));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1276F00@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.InstructionCorrection");
}

void *sub_1276F10(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1276F94((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_1276F94(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 24);
  uint64_t v2 = (void ***)(a1 + 24);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  uint64_t result = (void ***)(a1 + 32);
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_252FB60)
  {
    if (*(void *)(a1 + 40))
    {
      sub_1762C7C();
      operator delete();
    }
    if (*(void *)(a1 + 48))
    {
      sub_1318AD4();
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 56);
    if (result)
    {
      sub_15B0994();
      operator delete();
    }
  }
  return result;
}

void sub_127706C(void *a1)
{
  sub_1276F10(a1);

  operator delete();
}

uint64_t sub_12770A4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v31 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    return *(void *)v31;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v7 = (unsigned __int8 *)(*(void *)v31 + 1);
    unsigned int v8 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        unint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v31, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (unsigned __int8 *)(*(void *)v31 + 2);
      }
    }
    *(void *)uint64_t v31 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_43;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 24);
        goto LABEL_17;
      case 2u:
        if (v8 != 18) {
          goto LABEL_43;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 32);
LABEL_17:
        unint64_t v15 = (std::string *)sub_1880F84(v13, v12);
        uint64_t v16 = (uint64_t)sub_188C244(v15, *(char **)v31, (uint64_t)a3);
        goto LABEL_50;
      case 3u:
        if (v8 != 26) {
          goto LABEL_43;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v17 = *(void *)(a1 + 40);
        if (!v17)
        {
          uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v18 = (void *)*v18;
          }
          uint64_t v17 = sub_178CDA8((uint64_t)v18);
          *(void *)(a1 + 40) = v17;
          unint64_t v7 = *(unsigned __int8 **)v31;
        }
        uint64_t v16 = sub_1265F8C(a3, v17, v7);
        goto LABEL_50;
      case 4u:
        if (v8 != 34) {
          goto LABEL_43;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v19 = *(void *)(a1 + 48);
        if (!v19)
        {
          uint64_t v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v20 = (void *)*v20;
          }
          uint64_t v19 = sub_131BDDC((uint64_t)v20);
          *(void *)(a1 + 48) = v19;
          unint64_t v7 = *(unsigned __int8 **)v31;
        }
        uint64_t v16 = sub_1277414(a3, v19, v7);
        goto LABEL_50;
      case 5u:
        if (v8 != 42) {
          goto LABEL_43;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v21 = *(void *)(a1 + 56);
        if (!v21)
        {
          uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v22 = (void *)*v22;
          }
          uint64_t v21 = sub_15C1918((uint64_t)v22);
          *(void *)(a1 + 56) = v21;
          unint64_t v7 = *(unsigned __int8 **)v31;
        }
        uint64_t v16 = (uint64_t)sub_1198F14(a3, v21, v7);
        goto LABEL_50;
      case 6u:
        if (v8 != 48) {
          goto LABEL_43;
        }
        int v23 = (char *)(v7 + 1);
        unint64_t v24 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_40;
        }
        int v25 = *v23;
        int v26 = v24 + (v25 << 7);
        unint64_t v24 = (v26 - 128);
        if (v25 < 0)
        {
          *(void *)uint64_t v31 = sub_188C138((uint64_t)v7, (v26 - 128));
          if (!*(void *)v31) {
            return 0;
          }
          unint64_t v24 = v29;
        }
        else
        {
          int v23 = (char *)(v7 + 2);
LABEL_40:
          *(void *)uint64_t v31 = v23;
        }
        if (v24 > 3)
        {
          if (*v6) {
            uint64_t v30 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(6, v24, v30);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 64) = v24;
        }
        goto LABEL_51;
      default:
LABEL_43:
        if (v8) {
          BOOL v27 = (v8 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (*v6)
          {
            uint64_t v28 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v7 = *(unsigned __int8 **)v31;
          }
          uint64_t v16 = (uint64_t)sub_1885AC0(v8, v28, (char *)v7, a3);
LABEL_50:
          *(void *)uint64_t v31 = v16;
          if (!v16) {
            return 0;
          }
LABEL_51:
          if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
            return *(void *)v31;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v31;
    }
  }
}

uint64_t sub_1277414(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1318CBC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12774A4(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_10:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 40);
  *int v4 = 26;
  unsigned int v8 = *(_DWORD *)(v7 + 44);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  int v4 = sub_1763540(v7, v9, a3);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_16:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 48);
  *int v4 = 34;
  unsigned int v11 = *(_DWORD *)(v10 + 44);
  v4[1] = v11;
  if (v11 > 0x7F) {
    unint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    unint64_t v12 = v4 + 2;
  }
  int v4 = sub_1319D58(v10, v12, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_34;
    }
    goto LABEL_28;
  }
LABEL_22:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 56);
  *int v4 = 42;
  unsigned int v14 = *(_DWORD *)(v13 + 44);
  v4[1] = v14;
  if (v14 > 0x7F) {
    unint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    unint64_t v15 = v4 + 2;
  }
  int v4 = sub_15B0C0C(v13, v15, a3);
  if ((v6 & 0x20) != 0)
  {
LABEL_28:
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 64);
    *int v4 = 48;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_34:
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_127775C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x3F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_24;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    uint64_t v10 = sub_1763C40(*(void *)(a1 + 40));
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_19;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  uint64_t v11 = sub_131A6A8(*(void *)(a1 + 48));
  v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_24;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v12 = sub_15B0D90(*(void *)(a1 + 56));
  v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0) {
    goto LABEL_24;
  }
LABEL_20:
  int v13 = *(_DWORD *)(a1 + 64);
  if (v13 < 0) {
    uint64_t v14 = 11;
  }
  else {
    uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v14;
LABEL_24:
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v3 += v18;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void *sub_1277930@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.UserSearchInput");
}

void *sub_1277940(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12779BC(void *a1)
{
  sub_1277940(a1);

  operator delete();
}

uint64_t sub_12779F4(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 40) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1277A1C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v33 + 1;
    unsigned int v9 = *v33;
    if (*v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v33 + 2;
      }
    }
    uint64_t v33 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 5) {
      break;
    }
    if (v12 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 2u;
      uint64_t v23 = v8 + 1;
      int v24 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_41;
      }
      int v25 = *v23;
      int v24 = v24 + (v25 << 7) - 128;
      if ((v25 & 0x80000000) == 0)
      {
        uint64_t v23 = v8 + 2;
LABEL_41:
        uint64_t v33 = v23;
        *(_DWORD *)(a1 + 44) = v24;
        goto LABEL_46;
      }
      unint64_t v29 = (char *)sub_188C0D0((uint64_t)v8, v24);
      uint64_t v33 = v29;
      *(_DWORD *)(a1 + 44) = v30;
      if (!v29) {
        goto LABEL_57;
      }
    }
    else
    {
      if (v12 != 2 || v9 != 16) {
        goto LABEL_14;
      }
      v5 |= 1u;
      int v26 = v8 + 1;
      int v27 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_45;
      }
      int v28 = *v26;
      int v27 = v27 + (v28 << 7) - 128;
      if ((v28 & 0x80000000) == 0)
      {
        int v26 = v8 + 2;
LABEL_45:
        uint64_t v33 = v26;
        *(_DWORD *)(a1 + 40) = v27;
        goto LABEL_46;
      }
      uint64_t v31 = (char *)sub_188C0D0((uint64_t)v8, v27);
      uint64_t v33 = v31;
      *(_DWORD *)(a1 + 40) = v32;
      if (!v31) {
        goto LABEL_57;
      }
    }
LABEL_46:
    if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 40)
  {
    unint64_t v17 = v8 - 1;
    while (1)
    {
      uint64_t v33 = v17 + 1;
      int v18 = v17[1];
      if (v17[1] < 0)
      {
        int v19 = v18 + (v17[2] << 7);
        int v18 = v19 - 128;
        if (v17[2] < 0)
        {
          unint64_t v17 = (char *)sub_188C0D0((uint64_t)(v17 + 1), v19 - 128);
          int v18 = v20;
        }
        else
        {
          v17 += 3;
        }
      }
      else
      {
        v17 += 2;
      }
      uint64_t v33 = v17;
      uint64_t v21 = *(unsigned int *)(a1 + 24);
      if (v21 == *(_DWORD *)(a1 + 28))
      {
        int v22 = v21 + 1;
        sub_188C80C((unsigned int *)(a1 + 24), v21 + 1);
        *(_DWORD *)(*(void *)(a1 + 32) + 4 * v21) = v18;
        unint64_t v17 = v33;
      }
      else
      {
        *(_DWORD *)(*(void *)(a1 + 32) + 4 * v21) = v18;
        int v22 = v21 + 1;
      }
      *(_DWORD *)(a1 + 24) = v22;
      if (!v17) {
        goto LABEL_57;
      }
      if (*(void *)a3 <= (unint64_t)v17 || *v17 != 40) {
        goto LABEL_46;
      }
    }
  }
  if (v9 == 42)
  {
    unint64_t v16 = sub_188C2CC((unsigned int *)(a1 + 24), (unsigned __int8 *)v8, (uint64_t)a3);
    goto LABEL_21;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v33;
    }
    unint64_t v16 = sub_1885AC0(v9, v15, v8, a3);
LABEL_21:
    uint64_t v33 = (char *)v16;
    if (!v16) {
      goto LABEL_57;
    }
    goto LABEL_46;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_57:
  uint64_t v33 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v33;
}

unsigned char *sub_1277CF8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 40);
    *unint64_t v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 44);
    *unint64_t v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(unsigned int *)(a1 + 24);
  if ((int)v13 >= 1)
  {
    for (uint64_t i = 0; i != v13; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v15 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * i);
      *unint64_t v4 = 40;
      v4[1] = v15;
      if (v15 > 0x7F)
      {
        v4[1] = v15 | 0x80;
        unsigned int v16 = v15 >> 7;
        v4[2] = v15 >> 7;
        v4 += 3;
        if (v15 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v17 = v16 >> 14;
            v16 >>= 7;
            *v4++ = v16;
          }
          while (v17);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_1277F44(uint64_t a1)
{
  uint64_t result = sub_188D4F0((unsigned int *)(a1 + 24)) + *(unsigned int *)(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 3) != 0)
  {
    if (v3) {
      result += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v3 & 2) != 0) {
      result += ((9 * (__clz(*(_DWORD *)(a1 + 44) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_1278000(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    unint64_t v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8) {
      LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    }
    if ((v8 & 2) != 0) {
      HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v8;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12780D4()
{
  return 1;
}

void *sub_12780DC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.SuggestedRouteIndex");
}

void *sub_12780EC(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1278160(void *a1)
{
  sub_12780EC(a1);

  operator delete();
}

char *sub_1278198(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v31 + 1;
    unsigned int v9 = *v31;
    if (*v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v31 + 2;
      }
    }
    uint64_t v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      unsigned int v16 = v8 + 1;
      int v17 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_26;
      }
      int v18 = *v16;
      int v17 = v17 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        unsigned int v16 = v8 + 2;
LABEL_26:
        uint64_t v31 = v16;
        *(_DWORD *)(a1 + 32) = v17;
        goto LABEL_36;
      }
      int v25 = (char *)sub_188C0D0((uint64_t)v8, v17);
      uint64_t v31 = v25;
      *(_DWORD *)(a1 + 32) = v26;
      if (!v25) {
        goto LABEL_47;
      }
      goto LABEL_36;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    int v19 = v8 + 1;
    int v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    int v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      int v19 = v8 + 2;
LABEL_31:
      uint64_t v31 = v19;
      *(_DWORD *)(a1 + 28) = v20;
      goto LABEL_36;
    }
    int v27 = (char *)sub_188C0D0((uint64_t)v8, v20);
    uint64_t v31 = v27;
    *(_DWORD *)(a1 + 28) = v28;
    if (!v27) {
      goto LABEL_47;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v22 = v8 + 1;
    int v23 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v24 = *v22;
    int v23 = v23 + (v24 << 7) - 128;
    if ((v24 & 0x80000000) == 0)
    {
      uint64_t v22 = v8 + 2;
LABEL_35:
      uint64_t v31 = v22;
      *(_DWORD *)(a1 + 24) = v23;
      goto LABEL_36;
    }
    unint64_t v29 = (char *)sub_188C0D0((uint64_t)v8, v23);
    uint64_t v31 = v29;
    *(_DWORD *)(a1 + 24) = v30;
    if (!v29) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      unsigned int v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v31;
    }
    uint64_t v31 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v31) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  uint64_t v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v31;
}

unsigned char *sub_12783EC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    *int v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 32);
    *int v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_127860C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_10;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) != 0) {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_12786D8()
{
  return 1;
}

void *sub_12786E0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.PlaceProblem");
}

void *sub_12786F0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1278764(void *a1)
{
  sub_12786F0(a1);

  operator delete();
}

uint64_t sub_127879C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(void *)(result + 16) = 0x100000000;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_12787BC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v40 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v40, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = v40 + 1;
    unsigned int v9 = *v40;
    if (*v40 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v40, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v40 + 2;
      }
    }
    uint64_t v40 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_36;
        }
        v5 |= 1u;
        unsigned int v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unsigned int v12 = v8 + 2;
LABEL_13:
          uint64_t v40 = v12;
          *(unsigned char *)(a1 + 24) = v13 != 0;
          goto LABEL_43;
        }
        int v30 = (char *)sub_188C138((uint64_t)v8, v13);
        uint64_t v40 = v30;
        *(unsigned char *)(a1 + 24) = v31 != 0;
        if (v30) {
          goto LABEL_43;
        }
        goto LABEL_62;
      case 2u:
        if (v9 != 16) {
          goto LABEL_36;
        }
        v5 |= 2u;
        unsigned int v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          int v32 = (char *)sub_188C138((uint64_t)v8, v16);
          uint64_t v40 = v32;
          *(unsigned char *)(a1 + 25) = v33 != 0;
          if (!v32) {
            goto LABEL_62;
          }
        }
        else
        {
          unsigned int v15 = v8 + 2;
LABEL_18:
          uint64_t v40 = v15;
          *(unsigned char *)(a1 + 25) = v16 != 0;
        }
        goto LABEL_43;
      case 3u:
        if (v9 != 24) {
          goto LABEL_36;
        }
        v5 |= 4u;
        unint64_t v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          int v34 = (char *)sub_188C138((uint64_t)v8, v19);
          uint64_t v40 = v34;
          *(unsigned char *)(a1 + 26) = v35 != 0;
          if (!v34) {
            goto LABEL_62;
          }
        }
        else
        {
          unint64_t v18 = v8 + 2;
LABEL_23:
          uint64_t v40 = v18;
          *(unsigned char *)(a1 + 26) = v19 != 0;
        }
        goto LABEL_43;
      case 4u:
        if (v9 != 32) {
          goto LABEL_36;
        }
        v5 |= 8u;
        uint64_t v21 = v8 + 1;
        uint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v36 = (char *)sub_188C138((uint64_t)v8, v22);
          uint64_t v40 = v36;
          *(unsigned char *)(a1 + 27) = v37 != 0;
          if (!v36) {
            goto LABEL_62;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_28:
          uint64_t v40 = v21;
          *(unsigned char *)(a1 + 27) = v22 != 0;
        }
        goto LABEL_43;
      case 5u:
        if (v9 != 40) {
          goto LABEL_36;
        }
        int v24 = v8 + 1;
        unint64_t v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        int v27 = v25 + (v26 << 7);
        unint64_t v25 = (v27 - 128);
        if (v26 < 0)
        {
          uint64_t v40 = (char *)sub_188C138((uint64_t)v8, (v27 - 128));
          if (!v40) {
            goto LABEL_62;
          }
          unint64_t v25 = v38;
        }
        else
        {
          int v24 = v8 + 2;
LABEL_33:
          uint64_t v40 = v24;
        }
        if (sub_145C85C(v25))
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 28) = v25;
        }
        else
        {
          if (*v7) {
            unsigned int v39 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unsigned int v39 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(5, v25, v39);
        }
        goto LABEL_43;
      default:
LABEL_36:
        if (v9) {
          BOOL v28 = (v9 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if (*v7)
          {
            unint64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = v40;
          }
          uint64_t v40 = (char *)sub_1885AC0(v9, v29, v8, a3);
          if (!v40) {
            goto LABEL_62;
          }
LABEL_43:
          if (sub_11947B8((uint64_t)a3, &v40, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_62:
        }
          uint64_t v40 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v40;
    }
  }
}

unsigned char *sub_1278B7C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 24);
    *int v4 = 8;
    v4[1] = v7;
    v4 += 2;
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v8 = *(unsigned char *)(a1 + 25);
  *int v4 = 16;
  v4[1] = v8;
  v4 += 2;
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_13:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v9 = *(unsigned char *)(a1 + 26);
  *int v4 = 24;
  v4[1] = v9;
  v4 += 2;
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_25;
    }
    goto LABEL_19;
  }
LABEL_16:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v10 = *(unsigned char *)(a1 + 27);
  *int v4 = 32;
  v4[1] = v10;
  v4 += 2;
  if ((v6 & 0x10) != 0)
  {
LABEL_19:
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v11 = *(int *)(a1 + 28);
    *int v4 = 40;
    v4[1] = v11;
    if (v11 > 0x7F)
    {
      v4[1] = v11 | 0x80;
      unint64_t v12 = v11 >> 7;
      v4[2] = v11 >> 7;
      v4 += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v13 = v12 >> 14;
          v12 >>= 7;
          *v4++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_25:
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_1278D98(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x1F) != 0)
  {
    uint64_t v2 = 2 * (v1 & 1);
    if ((v1 & 2) != 0) {
      v2 += 2;
    }
    if ((v1 & 4) != 0) {
      v2 += 2;
    }
    if ((v1 & 8) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x10) != 0)
    {
      int v3 = *(_DWORD *)(a1 + 28);
      uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v3 >= 0) {
        uint64_t v5 = v4;
      }
      else {
        uint64_t v5 = 11;
      }
      v2 += v5;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1278E44(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_9;
  }
  if (v2)
  {
    result[1].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 24);
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_13;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  result[1].__r_.__value_.__s.__data_[1] = *(unsigned char *)(a2 + 25);
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_14:
    result[1].__r_.__value_.__s.__data_[3] = *(unsigned char *)(a2 + 27);
    if ((v2 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_13:
  result[1].__r_.__value_.__s.__data_[2] = *(unsigned char *)(a2 + 26);
  if ((v2 & 8) != 0) {
    goto LABEL_14;
  }
LABEL_6:
  if ((v2 & 0x10) != 0) {
LABEL_7:
  }
    HIDWORD(result[1].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 28);
LABEL_8:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_9:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1278EC8()
{
  return 1;
}

void *sub_1278ED0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.ClientCapabilities");
}

uint64_t sub_1278EE0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = &off_24A1828;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = &qword_2550250;
  *(void *)(a1 + 56) = &qword_2550250;
  *(void *)(a1 + 64) = &qword_2550250;
  *(void *)(a1 + 72) = &qword_2550250;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_DWORD *)(a1 + 128) = 0;
  return a1;
}

void sub_1278F64(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1278F94(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1279020((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_1279020(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 48);
  uint64_t v2 = (void ***)(a1 + 48);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  uint64_t result = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_252FBF0)
  {
    uint64_t v5 = *(void *)(a1 + 80);
    if (v5)
    {
      sub_125D680(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 88);
    if (v6)
    {
      sub_125D18C(v6);
      operator delete();
    }
    if (*(void *)(a1 + 96))
    {
      sub_184BFE0();
      operator delete();
    }
    if (*(void *)(a1 + 104))
    {
      sub_184DD50();
      operator delete();
    }
    char v7 = *(void **)(a1 + 112);
    if (v7)
    {
      sub_12786F0(v7);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 120);
    if (result)
    {
      sub_15C4DB0();
      operator delete();
    }
  }
  return result;
}

void sub_1279180(void *a1)
{
  sub_1278F94(a1);

  operator delete();
}

uint64_t sub_12791B8(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v3) {
    goto LABEL_11;
  }
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_25:
    unint64_t v9 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)unint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
      if ((v3 & 4) != 0) {
        goto LABEL_29;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
      if ((v3 & 4) != 0) {
        goto LABEL_29;
      }
    }
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_33:
    unint64_t v11 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v11 + 23) < 0)
    {
      **(unsigned char **)unint64_t v11 = 0;
      *(void *)(v11 + 8) = 0;
      if ((v3 & 0x10) != 0) {
        goto LABEL_37;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v11 = 0;
      *(unsigned char *)(v11 + 23) = 0;
      if ((v3 & 0x10) != 0) {
        goto LABEL_37;
      }
    }
LABEL_7:
    if ((v3 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_38:
    uint64_t result = sub_125D27C(*(void *)(a1 + 88));
    if ((v3 & 0x40) == 0)
    {
LABEL_9:
      if ((v3 & 0x80) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_39;
  }
  unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v8 + 23) < 0)
  {
    **(unsigned char **)unint64_t v8 = 0;
    *(void *)(v8 + 8) = 0;
    if ((v3 & 2) != 0) {
      goto LABEL_25;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v8 = 0;
    *(unsigned char *)(v8 + 23) = 0;
    if ((v3 & 2) != 0) {
      goto LABEL_25;
    }
  }
LABEL_4:
  if ((v3 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_29:
  unint64_t v10 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v10 + 23) < 0)
  {
    **(unsigned char **)unint64_t v10 = 0;
    *(void *)(v10 + 8) = 0;
    if ((v3 & 8) != 0) {
      goto LABEL_33;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v10 = 0;
    *(unsigned char *)(v10 + 23) = 0;
    if ((v3 & 8) != 0) {
      goto LABEL_33;
    }
  }
LABEL_6:
  if ((v3 & 0x10) == 0) {
    goto LABEL_7;
  }
LABEL_37:
  uint64_t result = sub_125D790(*(void *)(a1 + 80));
  if ((v3 & 0x20) != 0) {
    goto LABEL_38;
  }
LABEL_8:
  if ((v3 & 0x40) == 0) {
    goto LABEL_9;
  }
LABEL_39:
  uint64_t result = sub_182A644(*(void *)(a1 + 96));
  if ((v3 & 0x80) != 0) {
LABEL_10:
  }
    uint64_t result = sub_182A88C(*(void *)(a1 + 104));
LABEL_11:
  if ((v3 & 0x300) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      uint64_t v4 = *(void *)(a1 + 112);
      char v5 = *(unsigned char *)(v4 + 8);
      uint64_t result = v4 + 8;
      *(void *)(result + 16) = 0x100000000;
      *(_DWORD *)(result + 8) = 0;
      if (v5) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v3 & 0x200) != 0) {
      uint64_t result = sub_15C4DEC(*(void *)(a1 + 120));
    }
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(_DWORD *)(v6 + 120) = 0;
  *(_DWORD *)(v6 + 32) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_1279364(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v42 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v42, a3[11].i32[1])) {
    return *(void *)v42;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    char v7 = (unsigned __int8 *)(*(void *)v42 + 1);
    unsigned int v8 = **(unsigned char **)v42;
    if ((char)**(unsigned char **)v42 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        char v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v42, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = (unsigned __int8 *)(*(void *)v42 + 2);
      }
    }
    *(void *)uint64_t v42 = v7;
    unsigned int v11 = v8 >> 3;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v12 = *(void *)(a1 + 80);
        if (!v12)
        {
          unint64_t v13 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v13 = (void *)*v13;
          }
          uint64_t v12 = sub_1283534((uint64_t)v13);
          *(void *)(a1 + 80) = v12;
          char v7 = *(unsigned __int8 **)v42;
        }
        uint64_t v14 = (uint64_t)sub_12798AC(a3, v12, v7);
        goto LABEL_64;
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 7u:
      case 8u:
        goto LABEL_74;
      case 6u:
        if (v8 != 50) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        int v17 = *(void **)(a1 + 88);
        if (!v17)
        {
          uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v18 = (void *)*v18;
          }
          int v17 = sub_12834B0((uint64_t)v18);
          *(void *)(a1 + 88) = v17;
          char v7 = *(unsigned __int8 **)v42;
        }
        uint64_t v14 = sub_127993C(a3, (uint64_t)v17, v7);
        goto LABEL_64;
      case 9u:
        if (v8 != 74) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 40) |= 0x40u;
        uint64_t v19 = *(void *)(a1 + 96);
        if (!v19)
        {
          int v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v20 = (void *)*v20;
          }
          sub_1850970((uint64_t)v20);
          uint64_t v19 = v21;
          *(void *)(a1 + 96) = v21;
          char v7 = *(unsigned __int8 **)v42;
        }
        uint64_t v14 = sub_12799CC(a3, v19, v7);
        goto LABEL_64;
      case 0xAu:
        if (v8 != 82) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 40) |= 0x80u;
        uint64_t v22 = *(void *)(a1 + 104);
        if (!v22)
        {
          int v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v23 = (void *)*v23;
          }
          uint64_t v22 = sub_1850A04((uint64_t)v23);
          *(void *)(a1 + 104) = v22;
          char v7 = *(unsigned __int8 **)v42;
        }
        uint64_t v14 = sub_1279A5C(a3, v22, v7);
        goto LABEL_64;
      case 0xBu:
        if (v8 != 90) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v24 = *(void *)(a1 + 8);
        unint64_t v25 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
        if (v24) {
          unint64_t v25 = (uint64_t *)*v25;
        }
        int v26 = (void *)(a1 + 48);
        goto LABEL_63;
      case 0xCu:
        if (v8 != 98) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v27 = *(void *)(a1 + 8);
        unint64_t v25 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
        if (v27) {
          unint64_t v25 = (uint64_t *)*v25;
        }
        int v26 = (void *)(a1 + 56);
        goto LABEL_63;
      case 0xDu:
        if (v8 != 106) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v28 = *(void *)(a1 + 8);
        unint64_t v25 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
        if (v28) {
          unint64_t v25 = (uint64_t *)*v25;
        }
        int v26 = (void *)(a1 + 64);
        goto LABEL_63;
      case 0xEu:
        if (v8 != 114) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 40) |= 0x100u;
        uint64_t v29 = *(void *)(a1 + 112);
        if (!v29)
        {
          int v30 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v30 = (void *)*v30;
          }
          sub_1284898((uint64_t)v30);
          uint64_t v29 = v31;
          *(void *)(a1 + 112) = v31;
          char v7 = *(unsigned __int8 **)v42;
        }
        uint64_t v14 = (uint64_t)sub_1279AEC(a3, v29, v7);
        goto LABEL_64;
      case 0xFu:
        if (v8 != 122) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v32 = *(void *)(a1 + 8);
        unint64_t v25 = (uint64_t *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
        if (v32) {
          unint64_t v25 = (uint64_t *)*v25;
        }
        int v26 = (void *)(a1 + 72);
LABEL_63:
        uint64_t v33 = (std::string *)sub_1880F84(v26, v25);
        uint64_t v14 = (uint64_t)sub_188C244(v33, *(char **)v42, (uint64_t)a3);
        goto LABEL_64;
      default:
        if (v11 == 201)
        {
          if (v8 != 72) {
            goto LABEL_74;
          }
          int v34 = (char *)(v7 + 1);
          unint64_t v35 = *v7;
          if ((char)*v7 < 0)
          {
            int v36 = *v34;
            int v37 = v35 + (v36 << 7);
            unint64_t v35 = (v37 - 128);
            if (v36 < 0)
            {
              *(void *)uint64_t v42 = sub_188C138((uint64_t)v7, (v37 - 128));
              if (!*(void *)v42) {
                return 0;
              }
              unint64_t v35 = v40;
              goto LABEL_72;
            }
            int v34 = (char *)(v7 + 2);
          }
          *(void *)uint64_t v42 = v34;
LABEL_72:
          if (v35 > 2)
          {
            if (*v6) {
              uint64_t v41 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              uint64_t v41 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            }
            sub_188C020(201, v35, v41);
          }
          else
          {
            *(_DWORD *)(a1 + 40) |= 0x400u;
            *(_DWORD *)(a1 + 128) = v35;
          }
LABEL_65:
          if (sub_11947B8((uint64_t)a3, (char **)v42, a3[11].i32[1])) {
            return *(void *)v42;
          }
          continue;
        }
        if (v11 == 202 && v8 == 82)
        {
          *(_DWORD *)(a1 + 40) |= 0x200u;
          uint64_t v15 = *(void *)(a1 + 120);
          if (!v15)
          {
            unint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v6) {
              unint64_t v16 = (void *)*v16;
            }
            uint64_t v15 = sub_15C6344((uint64_t)v16);
            *(void *)(a1 + 120) = v15;
            char v7 = *(unsigned __int8 **)v42;
          }
          uint64_t v14 = sub_1279B7C(a3, v15, v7);
LABEL_64:
          *(void *)uint64_t v42 = v14;
          if (!v14) {
            return 0;
          }
          goto LABEL_65;
        }
LABEL_74:
        if (v8) {
          BOOL v38 = (v8 & 7) == 4;
        }
        else {
          BOOL v38 = 1;
        }
        if (!v38)
        {
          if (v8 - 800 > 0x31F)
          {
            if (*v6)
            {
              unsigned int v39 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              unsigned int v39 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              char v7 = *(unsigned __int8 **)v42;
            }
            uint64_t v14 = (uint64_t)sub_1885AC0(v8, v39, (char *)v7, a3);
          }
          else
          {
            uint64_t v14 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v8, (char *)v7, (uint64_t)&off_252FBF0, (uint64_t *)(a1 + 8), a3);
          }
          goto LABEL_64;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v42;
    }
  }
}

char *sub_12798AC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_125DCC8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_127993C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_125D2F8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12799CC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_184C01C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1279A5C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = (uint64_t)sub_184DD8C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1279AEC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12787BC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1279B7C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15C4E44(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1279C0C(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v8 = *(void *)(a1 + 80);
    *uint64_t v4 = 10;
    unsigned int v9 = *(_DWORD *)(v8 + 20);
    v4[1] = v9;
    if (v9 > 0x7F) {
      unsigned int v10 = sub_188A9CC(v9, v4 + 1);
    }
    else {
      unsigned int v10 = v4 + 2;
    }
    uint64_t v4 = sub_125E238(v8, (unint64_t)v10, a3);
    if ((v6 & 0x20) == 0)
    {
LABEL_3:
      if ((v6 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_41;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 88);
  *uint64_t v4 = 50;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  uint64_t v4 = sub_125D4A0(v16, v18, a3);
  if ((v6 & 0x40) == 0)
  {
LABEL_4:
    if ((v6 & 0x80) == 0) {
      goto LABEL_5;
    }
    goto LABEL_47;
  }
LABEL_41:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v21 = *(void *)(a1 + 96);
  *uint64_t v4 = 74;
  unsigned int v22 = *(_DWORD *)(v21 + 20);
  v4[1] = v22;
  if (v22 > 0x7F) {
    int v23 = sub_188A9CC(v22, v4 + 1);
  }
  else {
    int v23 = v4 + 2;
  }
  uint64_t v4 = sub_184C838(v21, v23, a3);
  if ((v6 & 0x80) == 0)
  {
LABEL_5:
    if ((v6 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_53;
  }
LABEL_47:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v24 = *(void *)(a1 + 104);
  *uint64_t v4 = 82;
  unsigned int v25 = *(_DWORD *)(v24 + 44);
  v4[1] = v25;
  if (v25 > 0x7F) {
    int v26 = sub_188A9CC(v25, v4 + 1);
  }
  else {
    int v26 = v4 + 2;
  }
  uint64_t v4 = sub_184F13C(v24, v26, a3);
  if ((v6 & 1) == 0)
  {
LABEL_6:
    if ((v6 & 2) == 0) {
      goto LABEL_7;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t v4 = sub_117A0AC(a3, 11, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 2) == 0)
  {
LABEL_7:
    if ((v6 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t v4 = sub_117A0AC(a3, 12, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_8:
    if ((v6 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t v4 = sub_117A0AC(a3, 13, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x100) == 0)
  {
LABEL_9:
    if ((v6 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_56:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v27 = *(void *)(a1 + 112);
  *uint64_t v4 = 114;
  unsigned int v28 = *(_DWORD *)(v27 + 20);
  v4[1] = v28;
  if (v28 > 0x7F) {
    uint64_t v29 = sub_188A9CC(v28, v4 + 1);
  }
  else {
    uint64_t v29 = v4 + 2;
  }
  uint64_t v4 = sub_1278B7C(v27, (unint64_t)v29, a3);
  if ((v6 & 8) != 0) {
LABEL_10:
  }
    uint64_t v4 = sub_117A0AC(a3, 15, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_11:
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 100, 200, v4, a3);
  }
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 128);
    *(_WORD *)uint64_t v4 = 3272;
    v4[2] = v7;
    if (v7 > 0x7F)
    {
      v4[2] = v7 | 0x80;
      unint64_t v11 = v7 >> 7;
      v4[3] = v7 >> 7;
      v4 += 4;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 120);
    *(_WORD *)uint64_t v4 = 3282;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[2] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 2);
    }
    else {
      uint64_t v15 = v4 + 3;
    }
    uint64_t v4 = sub_15C50E8(v13, (unint64_t)v15, a3);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v30 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v30 + 31) < 0)
  {
    uint64_t v31 = *(void **)(v30 + 8);
    uint64_t v32 = *(void *)(v30 + 16);
  }
  else
  {
    uint64_t v31 = (void *)(v30 + 8);
    LODWORD(v32) = *(unsigned __int8 *)(v30 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v32)
  {
    uint64_t v33 = (int)v32;
    memcpy(v4, v31, (int)v32);
    v4 += v33;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v31, v32, v4);
}

uint64_t sub_127A060(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = v2;
  int v4 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v4) {
    goto LABEL_11;
  }
  if (v4)
  {
    unint64_t v6 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    uint64_t v3 = v2 + v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_22;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  unint64_t v9 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
  uint64_t v11 = *(void *)(v9 + 8);
  if ((v10 & 0x80u) == 0) {
    uint64_t v11 = v10;
  }
  v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_25;
  }
LABEL_22:
  unint64_t v12 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  uint64_t v14 = *(void *)(v12 + 8);
  if ((v13 & 0x80u) == 0) {
    uint64_t v14 = v13;
  }
  v3 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_28;
  }
LABEL_25:
  unint64_t v15 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
  uint64_t v17 = *(void *)(v15 + 8);
  if ((v16 & 0x80u) == 0) {
    uint64_t v17 = v16;
  }
  v3 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_29:
    uint64_t v19 = sub_125D58C(*(void *)(a1 + 88));
    v3 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_30;
  }
LABEL_28:
  uint64_t v18 = sub_125E558(*(void *)(a1 + 80));
  v3 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 0x20) != 0) {
    goto LABEL_29;
  }
LABEL_8:
  if ((v4 & 0x40) == 0) {
    goto LABEL_9;
  }
LABEL_30:
  uint64_t v20 = sub_184CE90(*(void *)(a1 + 96));
  v3 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 0x80) != 0)
  {
LABEL_10:
    uint64_t v5 = sub_184FEFC(*(void *)(a1 + 104));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_11:
  if ((v4 & 0x700) == 0) {
    goto LABEL_38;
  }
  if ((v4 & 0x100) != 0)
  {
    uint64_t v21 = sub_1278D98(*(void *)(a1 + 112));
    v3 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v4 & 0x200) == 0)
    {
LABEL_14:
      if ((v4 & 0x400) == 0) {
        goto LABEL_38;
      }
      goto LABEL_34;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_14;
  }
  uint64_t v22 = sub_15C52D0(*(void *)(a1 + 120));
  v3 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v4 & 0x400) == 0) {
    goto LABEL_38;
  }
LABEL_34:
  int v23 = *(_DWORD *)(a1 + 128);
  if (v23 < 0) {
    uint64_t v24 = 12;
  }
  else {
    uint64_t v24 = ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  v3 += v24;
LABEL_38:
  uint64_t v25 = *(void *)(a1 + 8);
  if (v25)
  {
    unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v27 + 31) < 0) {
      uint64_t v28 = *(void *)(v27 + 16);
    }
    else {
      uint64_t v28 = *(unsigned __int8 *)(v27 + 31);
    }
    v3 += v28;
  }
  *(_DWORD *)(a1 + 44) = v3;
  return v3;
}

void sub_127A36C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if (!(_BYTE)v4) {
    goto LABEL_55;
  }
  if (v4)
  {
    uint64_t v5 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 1u;
    unint64_t v6 = (std::string **)(a1 + 48);
    uint64_t v7 = *(void *)(a1 + 8);
    uint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
    if (v7) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_17;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  unint64_t v9 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 2u;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
  if (v10) {
    uint64_t v11 = (uint64_t *)*v11;
  }
  sub_1881DF4((std::string **)(a1 + 56), v9, v11);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_17:
  unint64_t v12 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
  if (v13) {
    uint64_t v14 = (uint64_t *)*v14;
  }
  sub_1881DF4((std::string **)(a1 + 64), v12, v14);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_20:
  unint64_t v15 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 8u;
  uint64_t v16 = *(void *)(a1 + 8);
  uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
  if (v16) {
    uint64_t v17 = (uint64_t *)*v17;
  }
  sub_1881DF4((std::string **)(a1 + 72), v15, v17);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_31;
  }
LABEL_23:
  *(_DWORD *)(a1 + 40) |= 0x10u;
  uint64_t v18 = *(void *)(a1 + 80);
  if (!v18)
  {
    uint64_t v19 = *(void *)(a1 + 8);
    uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
    if (v19) {
      uint64_t v20 = (void *)*v20;
    }
    uint64_t v18 = sub_1283534((uint64_t)v20);
    *(void *)(a1 + 80) = v18;
  }
  if (*(void *)(a2 + 80)) {
    uint64_t v21 = *(uint64_t (****)())(a2 + 80);
  }
  else {
    uint64_t v21 = &off_252F358;
  }
  sub_125E6E4(v18, (uint64_t)v21);
  if ((v4 & 0x20) == 0)
  {
LABEL_8:
    if ((v4 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_39;
  }
LABEL_31:
  *(_DWORD *)(a1 + 40) |= 0x20u;
  uint64_t v22 = *(std::string **)(a1 + 88);
  if (!v22)
  {
    uint64_t v23 = *(void *)(a1 + 8);
    uint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      uint64_t v24 = (void *)*v24;
    }
    uint64_t v22 = (std::string *)sub_12834B0((uint64_t)v24);
    *(void *)(a1 + 88) = v22;
  }
  if (*(void *)(a2 + 88)) {
    uint64_t v25 = *(uint64_t (****)(uint64_t))(a2 + 88);
  }
  else {
    uint64_t v25 = &off_252F330;
  }
  sub_11EC100(v22, (uint64_t)v25);
  if ((v4 & 0x40) == 0)
  {
LABEL_9:
    if ((v4 & 0x80) == 0) {
      goto LABEL_55;
    }
    goto LABEL_47;
  }
LABEL_39:
  *(_DWORD *)(a1 + 40) |= 0x40u;
  uint64_t v26 = *(void *)(a1 + 96);
  if (!v26)
  {
    uint64_t v27 = *(void *)(a1 + 8);
    uint64_t v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
    if (v27) {
      uint64_t v28 = (void *)*v28;
    }
    sub_1850970((uint64_t)v28);
    *(void *)(a1 + 96) = v26;
  }
  if (*(void *)(a2 + 96)) {
    uint64_t v29 = *(uint64_t (****)())(a2 + 96);
  }
  else {
    uint64_t v29 = &off_254D310;
  }
  sub_182CCB8(v26, (uint64_t)v29);
  if ((v4 & 0x80) != 0)
  {
LABEL_47:
    *(_DWORD *)(a1 + 40) |= 0x80u;
    uint64_t v30 = *(void *)(a1 + 104);
    if (!v30)
    {
      uint64_t v31 = *(void *)(a1 + 8);
      uint64_t v32 = (void *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
      if (v31) {
        uint64_t v32 = (void *)*v32;
      }
      uint64_t v30 = sub_1850A04((uint64_t)v32);
      *(void *)(a1 + 104) = v30;
    }
    if (*(void *)(a2 + 104)) {
      uint64_t v33 = *(uint64_t (****)())(a2 + 104);
    }
    else {
      uint64_t v33 = &off_254D3B0;
    }
    sub_182D0C4(v30, (uint64_t)v33);
  }
LABEL_55:
  if ((v4 & 0x700) == 0) {
    goto LABEL_61;
  }
  if ((v4 & 0x100) == 0)
  {
    if ((v4 & 0x200) == 0) {
      goto LABEL_58;
    }
LABEL_73:
    *(_DWORD *)(a1 + 40) |= 0x200u;
    unsigned int v39 = *(std::string **)(a1 + 120);
    if (!v39)
    {
      uint64_t v40 = *(void *)(a1 + 8);
      uint64_t v41 = (void *)(v40 & 0xFFFFFFFFFFFFFFFCLL);
      if (v40) {
        uint64_t v41 = (void *)*v41;
      }
      unsigned int v39 = (std::string *)sub_15C6344((uint64_t)v41);
      *(void *)(a1 + 120) = v39;
    }
    if (*(void *)(a2 + 120)) {
      uint64_t v42 = *(uint64_t (****)())(a2 + 120);
    }
    else {
      uint64_t v42 = &off_253F8C0;
    }
    sub_121627C(v39, (uint64_t)v42);
    if ((v4 & 0x400) == 0) {
      goto LABEL_60;
    }
    goto LABEL_59;
  }
  *(_DWORD *)(a1 + 40) |= 0x100u;
  unint64_t v35 = *(std::string **)(a1 + 112);
  if (!v35)
  {
    uint64_t v36 = *(void *)(a1 + 8);
    int v37 = (void *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
    if (v36) {
      int v37 = (void *)*v37;
    }
    sub_1284898((uint64_t)v37);
    *(void *)(a1 + 112) = v35;
  }
  if (*(void *)(a2 + 112)) {
    BOOL v38 = *(void *(****)(void *))(a2 + 112);
  }
  else {
    BOOL v38 = &off_252FBD0;
  }
  sub_1278E44(v35, (uint64_t)v38);
  if ((v4 & 0x200) != 0) {
    goto LABEL_73;
  }
LABEL_58:
  if ((v4 & 0x400) != 0) {
LABEL_59:
  }
    *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
LABEL_60:
  *(_DWORD *)(a1 + 40) |= v4;
LABEL_61:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v34 = *(void *)(a2 + 8);
  if (v34)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v34 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_127A6C8(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if ((v3 & 0x10) != 0)
    {
      uint64_t result = sub_125F5E8(*(void *)(a1 + 80));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x40) != 0)
    {
      uint64_t result = sub_182D93C(*(void *)(a1 + 96));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x80) == 0) {
      return 1;
    }
    uint64_t result = sub_182D9C8(*(void *)(a1 + 104));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_127A734@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.ProblemRequest");
}

uint64_t sub_127A744(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_127A7E4(uint64_t a1)
{
  sub_127A744(a1);

  operator delete();
}

uint64_t sub_127A81C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 6) != 0)
  {
    *(unsigned char *)(a1 + 36) = 0;
    *(_DWORD *)(a1 + 32) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v4) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_127A870(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v31 + 1);
    unsigned int v9 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v31 + 2);
      }
    }
    *(void *)uint64_t v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 != 3) {
      break;
    }
    if (v9 != 24) {
      goto LABEL_14;
    }
    v5 |= 4u;
    uint64_t v17 = v8 + 1;
    uint64_t v18 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v19 = *v17;
    uint64_t v18 = v18 + (v19 << 7) - 128;
    if ((v19 & 0x80000000) == 0)
    {
      uint64_t v17 = v8 + 2;
LABEL_25:
      *(void *)uint64_t v31 = v17;
      *(unsigned char *)(a1 + 36) = v18 != 0;
      goto LABEL_38;
    }
    uint64_t v27 = sub_188C138((uint64_t)v8, v18);
    *(void *)uint64_t v31 = v27;
    *(unsigned char *)(a1 + 36) = v28 != 0;
    if (!v27) {
      goto LABEL_51;
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 2)
  {
    if (v9 == 18)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v20 = *(void *)(a1 + 8);
      uint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        uint64_t v21 = (uint64_t *)*v21;
      }
      uint64_t v22 = (std::string *)sub_1880F84((void *)(a1 + 24), v21);
      uint64_t v16 = (void *)sub_188C244(v22, *(char **)v31, (uint64_t)a3);
LABEL_30:
      *(void *)uint64_t v31 = v16;
      if (!v16) {
        goto LABEL_51;
      }
      goto LABEL_38;
    }
  }
  else if (v12 == 1 && v9 == 8)
  {
    uint64_t v23 = v8 + 1;
    unint64_t v24 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v25 = *v23;
    int v26 = v24 + (v25 << 7);
    unint64_t v24 = (v26 - 128);
    if (v25 < 0)
    {
      *(void *)uint64_t v31 = sub_188C138((uint64_t)v8, (v26 - 128));
      if (!*(void *)v31) {
        goto LABEL_51;
      }
      unint64_t v24 = v29;
    }
    else
    {
      uint64_t v23 = v8 + 2;
LABEL_35:
      *(void *)uint64_t v31 = v23;
    }
    if (sub_13E78E4(v24))
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v24;
    }
    else
    {
      if (*v7) {
        uint64_t v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v24, v30);
    }
    goto LABEL_38;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      unint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(char **)v31;
    }
    uint64_t v16 = sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_51:
  *(void *)uint64_t v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v31;
}

unsigned char *sub_127AB08(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    char v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 36);
    *char v4 = 24;
    v4[1] = v10;
    v4 += 2;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    BOOL v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    BOOL v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_127AC88(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_16;
  }
  if (v1)
  {
    unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    int v7 = *(_DWORD *)(a1 + 32);
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v8;
  }
LABEL_13:
  if ((v1 & 4) != 0) {
    uint64_t v3 = v2 + 2;
  }
  else {
    uint64_t v3 = v2;
  }
LABEL_16:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v3 += v12;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_127AD60(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      int v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        v3[1].__r_.__value_.__s.__data_[12] = *(unsigned char *)(a2 + 36);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_127AE30()
{
  return 1;
}

void *sub_127AE38@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.ProblemResponse");
}

void *sub_127AE48(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_127AED4((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DE8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_127AED4(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 48);
  uint64_t result = (void ***)(a1 + 48);
  if (v3 != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_252FCA0)
  {
    uint64_t v4 = *(void *)(a1 + 56);
    if (v4)
    {
      sub_125D18C(v4);
      operator delete();
    }
    uint64_t v5 = *(void **)(a1 + 64);
    if (v5)
    {
      sub_12786F0(v5);
      operator delete();
    }
    if (*(void *)(a1 + 72))
    {
      sub_184BFE0();
      operator delete();
    }
    if (*(void *)(a1 + 80))
    {
      sub_1306600();
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 88);
    if (result)
    {
      sub_1479B58();
      operator delete();
    }
  }
  return result;
}

void sub_127AFD8(void *a1)
{
  sub_127AE48(a1);

  operator delete();
}

uint64_t sub_127B010(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 0x3F) == 0) {
    goto LABEL_17;
  }
  if (v3)
  {
    unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_13;
    }
LABEL_11:
    uint64_t v5 = *(void *)(a1 + 64);
    char v6 = *(unsigned char *)(v5 + 8);
    uint64_t result = v5 + 8;
    *(void *)(result + 16) = 0x100000000;
    *(_DWORD *)(result + 8) = 0;
    if (v6) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
    goto LABEL_13;
  }
  if ((v3 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  uint64_t result = sub_125D27C(*(void *)(a1 + 56));
  if ((v3 & 4) != 0) {
    goto LABEL_11;
  }
LABEL_13:
  if ((v3 & 8) != 0)
  {
    uint64_t result = sub_182A644(*(void *)(a1 + 72));
    if ((v3 & 0x10) == 0)
    {
LABEL_15:
      if ((v3 & 0x20) == 0) {
        goto LABEL_17;
      }
      goto LABEL_16;
    }
  }
  else if ((v3 & 0x10) == 0)
  {
    goto LABEL_15;
  }
  uint64_t result = sub_130663C(*(void *)(a1 + 80));
  if ((v3 & 0x20) != 0) {
LABEL_16:
  }
    uint64_t result = sub_1479B94(*(void *)(a1 + 88));
LABEL_17:
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(unsigned char *)(v7 + 88) = 0;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_127B110(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v43 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v43, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  char v8 = (uint64_t **)(a1 + 24);
  while (2)
  {
    uint64_t v9 = (unsigned __int8 *)(*(void *)v43 + 1);
    unsigned int v10 = **(unsigned char **)v43;
    if ((char)**(unsigned char **)v43 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        uint64_t v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v43, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        uint64_t v9 = (unsigned __int8 *)(*(void *)v43 + 2);
      }
    }
    *(void *)int v43 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_60;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        unint64_t v13 = *(void **)(a1 + 56);
        if (!v13)
        {
          BOOL v14 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            BOOL v14 = (void *)*v14;
          }
          unint64_t v13 = sub_12834B0((uint64_t)v14);
          *(void *)(a1 + 56) = v13;
          uint64_t v9 = *(unsigned __int8 **)v43;
        }
        uint64_t v15 = sub_127993C(a3, (uint64_t)v13, v9);
        goto LABEL_67;
      case 2u:
        if (v10 != 18) {
          goto LABEL_60;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (std::string *)sub_1880F84((void *)(a1 + 48), v17);
        uint64_t v15 = (uint64_t)sub_188C244(v18, *(char **)v43, (uint64_t)a3);
        goto LABEL_67;
      case 3u:
        if (v10 != 26) {
          goto LABEL_60;
        }
        int v19 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          uint64_t v20 = (char *)(v19 + 1);
          *(void *)int v43 = v19 + 1;
          uint64_t v21 = *(_DWORD **)(a1 + 40);
          if (v21 && (uint64_t v22 = *(int *)(a1 + 32), (int)v22 < *v21))
          {
            *(_DWORD *)(a1 + 32) = v22 + 1;
            uint64_t v23 = *(std::string **)&v21[2 * v22 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            *int v25 = v24;
            v25[1] = sub_3A6EDC;
            void *v24 = 0;
            v24[1] = 0;
            int v24[2] = 0;
            uint64_t v23 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v24);
            uint64_t v20 = *(char **)v43;
          }
          int v19 = sub_188C244(v23, v20, (uint64_t)a3);
          *(void *)int v43 = v19;
          if (!v19) {
            goto LABEL_75;
          }
          if (*(void *)a3 <= (unint64_t)v19 || *v19 != 26) {
            goto LABEL_68;
          }
        }
      case 4u:
        if (v10 != 34) {
          goto LABEL_60;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v26 = *(void *)(a1 + 64);
        if (!v26)
        {
          uint64_t v27 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v27 = (void *)*v27;
          }
          sub_1284898((uint64_t)v27);
          uint64_t v26 = v28;
          *(void *)(a1 + 64) = v28;
          uint64_t v9 = *(unsigned __int8 **)v43;
        }
        uint64_t v15 = (uint64_t)sub_1279AEC(a3, v26, v9);
        goto LABEL_67;
      case 5u:
        if (v10 != 42) {
          goto LABEL_60;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v29 = *(void *)(a1 + 72);
        if (!v29)
        {
          uint64_t v30 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v30 = (void *)*v30;
          }
          sub_1850970((uint64_t)v30);
          uint64_t v29 = v31;
          *(void *)(a1 + 72) = v31;
          uint64_t v9 = *(unsigned __int8 **)v43;
        }
        uint64_t v15 = sub_12799CC(a3, v29, v9);
        goto LABEL_67;
      case 6u:
        if (v10 != 50) {
          goto LABEL_60;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v32 = *(void **)(a1 + 80);
        if (!v32)
        {
          uint64_t v33 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v33 = (void *)*v33;
          }
          uint64_t v32 = sub_130BD74((uint64_t)v33);
          *(void *)(a1 + 80) = v32;
          uint64_t v9 = *(unsigned __int8 **)v43;
        }
        uint64_t v15 = (uint64_t)sub_127B5B0(a3, (uint64_t)v32, v9);
        goto LABEL_67;
      case 7u:
        if (v10 != 58) {
          goto LABEL_60;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v34 = *(void **)(a1 + 88);
        if (!v34)
        {
          unint64_t v35 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v35 = (void *)*v35;
          }
          uint64_t v34 = sub_1479E98((uint64_t)v35);
          *(void *)(a1 + 88) = v34;
          uint64_t v9 = *(unsigned __int8 **)v43;
        }
        uint64_t v15 = sub_126640C(a3, (uint64_t)v34, v9);
        goto LABEL_67;
      case 8u:
        if (v10 != 64) {
          goto LABEL_60;
        }
        v5 |= 0x40u;
        uint64_t v36 = (char *)(v9 + 1);
        uint64_t v37 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_59;
        }
        int v38 = *v36;
        uint64_t v37 = v37 + (v38 << 7) - 128;
        if (v38 < 0)
        {
          uint64_t v41 = sub_188C138((uint64_t)v9, v37);
          *(void *)int v43 = v41;
          *(unsigned char *)(a1 + 96) = v42 != 0;
          if (!v41) {
            goto LABEL_75;
          }
        }
        else
        {
          uint64_t v36 = (char *)(v9 + 2);
LABEL_59:
          *(void *)int v43 = v36;
          *(unsigned char *)(a1 + 96) = v37 != 0;
        }
        goto LABEL_68;
      default:
LABEL_60:
        if (v10) {
          BOOL v39 = (v10 & 7) == 4;
        }
        else {
          BOOL v39 = 1;
        }
        if (!v39)
        {
          if (*v7)
          {
            uint64_t v40 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v40 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v9 = *(unsigned __int8 **)v43;
          }
          uint64_t v15 = (uint64_t)sub_1885AC0(v10, v40, (char *)v9, a3);
LABEL_67:
          *(void *)int v43 = v15;
          if (!v15) {
            goto LABEL_75;
          }
LABEL_68:
          if (sub_11947B8((uint64_t)a3, (char **)v43, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_75:
        }
          *(void *)int v43 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v43;
    }
  }
}

char *sub_127B5B0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13066F4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_127B640(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  unint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 56);
    *unint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      uint64_t v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      uint64_t v9 = v4 + 2;
    }
    unint64_t v4 = sub_125D4A0(v7, v9, a3);
  }
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(unsigned int *)(a1 + 32);
  if ((int)v10 >= 1)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 8 * v10;
    do
    {
      unint64_t v13 = *(void **)(*(void *)(a1 + 40) + v11 + 8);
      if (*((char *)v13 + 23) < 0)
      {
        int64_t v14 = v13[1];
        if (v14 > 127) {
          goto LABEL_21;
        }
      }
      else
      {
        int64_t v14 = *((unsigned __int8 *)v13 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v14)
      {
        *unint64_t v4 = 26;
        v4[1] = v14;
        if (*((char *)v13 + 23) < 0) {
          unint64_t v13 = (void *)*v13;
        }
        uint64_t v15 = v4 + 2;
        memcpy(v15, v13, v14);
        unint64_t v4 = &v15[v14];
        goto LABEL_19;
      }
LABEL_21:
      unint64_t v4 = (char *)sub_188A868(a3, 3, (uint64_t)v13, v4);
LABEL_19:
      v11 += 8;
    }
    while (v12 != v11);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 64);
    *unint64_t v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      uint64_t v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      uint64_t v18 = v4 + 2;
    }
    unint64_t v4 = sub_1278B7C(v16, (unint64_t)v18, a3);
    if ((v6 & 8) == 0)
    {
LABEL_24:
      if ((v6 & 0x10) == 0) {
        goto LABEL_25;
      }
      goto LABEL_40;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_24;
  }
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 72);
  *unint64_t v4 = 42;
  unsigned int v20 = *(_DWORD *)(v19 + 20);
  v4[1] = v20;
  if (v20 > 0x7F) {
    uint64_t v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    uint64_t v21 = v4 + 2;
  }
  unint64_t v4 = sub_184C838(v19, v21, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_25:
    if ((v6 & 0x20) == 0) {
      goto LABEL_26;
    }
    goto LABEL_46;
  }
LABEL_40:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v22 = *(void *)(a1 + 80);
  *unint64_t v4 = 50;
  unsigned int v23 = *(_DWORD *)(v22 + 20);
  v4[1] = v23;
  if (v23 > 0x7F) {
    unint64_t v24 = sub_188A9CC(v23, v4 + 1);
  }
  else {
    unint64_t v24 = v4 + 2;
  }
  unint64_t v4 = sub_1306AB4(v22, v24, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_26:
    if ((v6 & 0x40) == 0) {
      goto LABEL_55;
    }
    goto LABEL_52;
  }
LABEL_46:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v25 = *(void *)(a1 + 88);
  *unint64_t v4 = 58;
  unsigned int v26 = *(_DWORD *)(v25 + 20);
  v4[1] = v26;
  if (v26 > 0x7F) {
    uint64_t v27 = sub_188A9CC(v26, v4 + 1);
  }
  else {
    uint64_t v27 = v4 + 2;
  }
  unint64_t v4 = sub_1479D30(v25, v27, a3);
  if ((v6 & 0x40) != 0)
  {
LABEL_52:
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v28 = *(unsigned char *)(a1 + 96);
    *unint64_t v4 = 64;
    v4[1] = v28;
    v4 += 2;
  }
LABEL_55:
  uint64_t v29 = *(void *)(a1 + 8);
  if ((v29 & 1) == 0) {
    return v4;
  }
  unint64_t v31 = v29 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v31 + 31) < 0)
  {
    uint64_t v32 = *(void **)(v31 + 8);
    uint64_t v33 = *(void *)(v31 + 16);
  }
  else
  {
    uint64_t v32 = (void *)(v31 + 8);
    LODWORD(v33) = *(unsigned __int8 *)(v31 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v33)
  {
    uint64_t v34 = (int)v33;
    memcpy(v4, v32, (int)v33);
    v4 += v34;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v32, v33, v4);
}

uint64_t sub_127BA0C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    int v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0x7F) != 0)
  {
    if (v8)
    {
      unint64_t v12 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
      uint64_t v14 = *(void *)(v12 + 8);
      if ((v13 & 0x80u) == 0) {
        uint64_t v14 = v13;
      }
      v4 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v8 & 2) == 0)
      {
LABEL_11:
        if ((v8 & 4) == 0) {
          goto LABEL_12;
        }
        goto LABEL_24;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_11;
    }
    uint64_t v15 = sub_125D58C(*(void *)(a1 + 56));
    v4 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 4) == 0)
    {
LABEL_12:
      if ((v8 & 8) == 0) {
        goto LABEL_13;
      }
      goto LABEL_25;
    }
LABEL_24:
    uint64_t v16 = sub_1278D98(*(void *)(a1 + 64));
    v4 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 8) == 0)
    {
LABEL_13:
      if ((v8 & 0x10) == 0) {
        goto LABEL_14;
      }
      goto LABEL_26;
    }
LABEL_25:
    uint64_t v17 = sub_184CE90(*(void *)(a1 + 72));
    v4 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 0x10) == 0)
    {
LABEL_14:
      if ((v8 & 0x20) == 0) {
        goto LABEL_16;
      }
      goto LABEL_15;
    }
LABEL_26:
    uint64_t v18 = sub_1306CE4(*(void *)(a1 + 80));
    v4 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 0x20) == 0)
    {
LABEL_16:
      if ((v8 & 0x40) != 0) {
        v4 += 2;
      }
      goto LABEL_18;
    }
LABEL_15:
    uint64_t v9 = sub_1479DFC(*(void *)(a1 + 88));
    v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_16;
  }
LABEL_18:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v19 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v4 += v20;
  }
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_127BC2C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(a1 + 24, v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0x7F) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 48), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_29;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v14 = *(std::string **)(a1 + 56);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = (std::string *)sub_12834B0((uint64_t)v16);
      *(void *)(a1 + 56) = v14;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v17 = *(uint64_t (****)(uint64_t))(a2 + 56);
    }
    else {
      uint64_t v17 = &off_252F330;
    }
    sub_11EC100(v14, (uint64_t)v17);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_37;
    }
LABEL_29:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v18 = *(std::string **)(a1 + 64);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        uint64_t v20 = (void *)*v20;
      }
      sub_1284898((uint64_t)v20);
      *(void *)(a1 + 64) = v18;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v21 = *(void *(****)(void *))(a2 + 64);
    }
    else {
      uint64_t v21 = &off_252FBD0;
    }
    sub_1278E44(v18, (uint64_t)v21);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_45;
    }
LABEL_37:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v22 = *(void *)(a1 + 72);
    if (!v22)
    {
      uint64_t v23 = *(void *)(a1 + 8);
      unint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        unint64_t v24 = (void *)*v24;
      }
      sub_1850970((uint64_t)v24);
      *(void *)(a1 + 72) = v22;
    }
    if (*(void *)(a2 + 72)) {
      uint64_t v25 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      uint64_t v25 = &off_254D310;
    }
    sub_182CCB8(v22, (uint64_t)v25);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0) {
        goto LABEL_11;
      }
      goto LABEL_53;
    }
LABEL_45:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    unsigned int v26 = *(void **)(a1 + 80);
    if (!v26)
    {
      uint64_t v27 = *(void *)(a1 + 8);
      char v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
      if (v27) {
        char v28 = (void *)*v28;
      }
      unsigned int v26 = sub_130BD74((uint64_t)v28);
      *(void *)(a1 + 80) = v26;
    }
    if (*(void *)(a2 + 80)) {
      uint64_t v29 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      uint64_t v29 = &off_25324D8;
    }
    sub_1306E18((uint64_t)v26, (uint64_t)v29);
    if ((v9 & 0x20) == 0)
    {
LABEL_11:
      if ((v9 & 0x40) == 0)
      {
LABEL_13:
        *(_DWORD *)(a1 + 16) |= v9;
        goto LABEL_14;
      }
LABEL_12:
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      goto LABEL_13;
    }
LABEL_53:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v30 = *(std::string **)(a1 + 88);
    if (!v30)
    {
      uint64_t v31 = *(void *)(a1 + 8);
      uint64_t v32 = (void *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
      if (v31) {
        uint64_t v32 = (void *)*v32;
      }
      uint64_t v30 = (std::string *)sub_1479E98((uint64_t)v32);
      *(void *)(a1 + 88) = v30;
    }
    if (*(void *)(a2 + 88)) {
      uint64_t v33 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      uint64_t v33 = &off_2539C90;
    }
    sub_12329D0(v30, (uint64_t)v33);
    if ((v9 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_14:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_127BEEC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 8) != 0)
  {
    uint64_t result = sub_182D93C(*(void *)(a1 + 72));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x10) == 0) {
    return 1;
  }
  uint64_t result = sub_1306FA0(*(void *)(a1 + 80));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_127BF38@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.ProblemStatusRequest");
}

void *sub_127BF48(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C27B4(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_127BFC8(void *a1)
{
  sub_127BF48(a1);

  operator delete();
}

uint64_t sub_127C000(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_127FF54(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 40) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_127C084(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v26 + 2;
      }
    }
    unsigned int v26 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        uint64_t v14 = v7 - 1;
        while (1)
        {
          uint64_t v15 = (unsigned __int8 *)(v14 + 1);
          unsigned int v26 = v14 + 1;
          uint64_t v16 = *(_DWORD **)(a1 + 40);
          if (v16 && (uint64_t v17 = *(int *)(a1 + 32), (int)v17 < *v16))
          {
            *(_DWORD *)(a1 + 32) = v17 + 1;
            uint64_t v18 = *(void *)&v16[2 * v17 + 2];
          }
          else
          {
            sub_1284E5C(*(void *)(a1 + 24));
            uint64_t v18 = sub_188CDC8(a1 + 24, v19);
            uint64_t v15 = (unsigned __int8 *)v26;
          }
          uint64_t v14 = (char *)sub_127C2E0(a3, v18, v15);
          unsigned int v26 = v14;
          if (!v14) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
            goto LABEL_37;
          }
        }
      }
    }
    else if (v8 >> 3 == 1 && v8 == 8)
    {
      uint64_t v20 = v7 + 1;
      unint64_t v21 = *v7;
      if ((*v7 & 0x80000000) == 0) {
        goto LABEL_34;
      }
      int v22 = *v20;
      int v23 = v21 + (v22 << 7);
      unint64_t v21 = (v23 - 128);
      if (v22 < 0)
      {
        unsigned int v26 = (char *)sub_188C138((uint64_t)v7, (v23 - 128));
        if (!v26) {
          return 0;
        }
        unint64_t v21 = v24;
      }
      else
      {
        uint64_t v20 = v7 + 2;
LABEL_34:
        unsigned int v26 = v20;
      }
      if (sub_13E78E4(v21))
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 48) = v21;
      }
      else
      {
        if (*v6) {
          uint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v21, v25);
      }
      goto LABEL_37;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v26;
    }
    unsigned int v26 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v26) {
      return 0;
    }
LABEL_37:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      return v26;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v26;
  }
  return 0;
}

uint64_t sub_127C2E0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1280024(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_127C370(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 48);
    *uint64_t v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        uint64_t v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        uint64_t v13 = v4 + 2;
      }
      uint64_t v4 = sub_1280540(v11, v13, a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_127C534(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1280810(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    int v8 = *(_DWORD *)(a1 + 48);
    if (v8 < 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v9;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v2 += v13;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_127C61C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C335C((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v9 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 16) |= 1u;
    *(_DWORD *)(a1 + 48) = v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_127C708(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_1280B60(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_127C760@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.ProblemStatusResponse");
}

uint64_t sub_127C770(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  char v5 = (void ***)(a1 + 96);
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 104) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 104));
  }
  if ((uint64_t (***)())a1 != &off_252FD40)
  {
    uint64_t v6 = *(void *)(a1 + 112);
    if (v6)
    {
      sub_15B1678(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_12C28B4((void *)(a1 + 72));
  sub_1889DE8((void *)(a1 + 48));
  sub_12C2834((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_127C878(uint64_t a1)
{
  sub_127C770(a1);

  operator delete();
}

uint64_t sub_127C8B0(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_144D38C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 32) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 48);
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    int v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_175FE78(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  int v9 = *(_DWORD *)(a1 + 16);
  if ((v9 & 7) == 0) {
    goto LABEL_14;
  }
  if ((v9 & 1) == 0)
  {
    if ((v9 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_24;
  }
  unint64_t v12 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v12 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v12 = 0;
    *(unsigned char *)(v12 + 23) = 0;
    if ((v9 & 2) != 0) {
      goto LABEL_24;
    }
LABEL_12:
    if ((v9 & 4) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  **(unsigned char **)unint64_t v12 = 0;
  *(void *)(v12 + 8) = 0;
  if ((v9 & 2) == 0) {
    goto LABEL_12;
  }
LABEL_24:
  unint64_t v13 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v13 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v13 = 0;
    *(unsigned char *)(v13 + 23) = 0;
    if ((v9 & 4) == 0) {
      goto LABEL_14;
    }
LABEL_13:
    uint64_t result = (uint64_t)sub_15B16B4(*(unsigned char **)(a1 + 112));
    goto LABEL_14;
  }
  **(unsigned char **)unint64_t v13 = 0;
  *(void *)(v13 + 8) = 0;
  if ((v9 & 4) != 0) {
    goto LABEL_13;
  }
LABEL_14:
  if ((v9 & 0x38) != 0)
  {
    *(void *)(a1 + 120) = 0;
    *(void *)(a1 + 128) = 0;
    *(_DWORD *)(a1 + 136) = 0;
  }
  char v11 = *(unsigned char *)(a1 + 8);
  uint64_t v10 = a1 + 8;
  *(_DWORD *)(v10 + 8) = 0;
  if (v11)
  {
    return sub_188B4AC((uint64_t *)v10);
  }
  return result;
}

uint64_t sub_127C9F4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v53 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v53, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  uint64_t v8 = (uint64_t **)(a1 + 48);
  while (2)
  {
    int v9 = (unsigned __int8 *)(*(void *)v53 + 1);
    unsigned int v10 = **(unsigned char **)v53;
    if ((char)**(unsigned char **)v53 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        int v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v53, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        int v9 = (unsigned __int8 *)(*(void *)v53 + 2);
      }
    }
    *(void *)uint64_t v53 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 9) {
          goto LABEL_70;
        }
        v5 |= 8u;
        *(void *)(a1 + 120) = *(void *)v9;
        *(void *)uint64_t v53 = v9 + 8;
        goto LABEL_78;
      case 2u:
        if (v10 != 18) {
          goto LABEL_70;
        }
        unint64_t v13 = v9 - 1;
        while (1)
        {
          uint64_t v14 = v13 + 1;
          *(void *)uint64_t v53 = v13 + 1;
          uint64_t v15 = *(_DWORD **)(a1 + 40);
          if (v15 && (uint64_t v16 = *(int *)(a1 + 32), (int)v16 < *v15))
          {
            *(_DWORD *)(a1 + 32) = v16 + 1;
            uint64_t v17 = *(void *)&v15[2 * v16 + 2];
          }
          else
          {
            uint64_t v18 = sub_147818C(*(void *)(a1 + 24));
            uint64_t v17 = sub_188CDC8(a1 + 24, v18);
            uint64_t v14 = *(unsigned __int8 **)v53;
          }
          unint64_t v13 = (unsigned __int8 *)sub_1265E6C(a3, v17, v14);
          *(void *)uint64_t v53 = v13;
          if (!v13) {
            goto LABEL_91;
          }
          if (*(void *)a3 <= (unint64_t)v13 || *v13 != 18) {
            goto LABEL_78;
          }
        }
      case 3u:
        if (v10 != 26) {
          goto LABEL_70;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v19 = *(void *)(a1 + 112);
        if (!v19)
        {
          uint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v20 = (void *)*v20;
          }
          uint64_t v19 = sub_15C19EC((uint64_t)v20);
          *(void *)(a1 + 112) = v19;
          int v9 = *(unsigned __int8 **)v53;
        }
        unint64_t v21 = sub_11E1C60(a3, v19, v9);
        goto LABEL_77;
      case 4u:
        if (v10 != 34) {
          goto LABEL_70;
        }
        int v22 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          int v23 = (char *)(v22 + 1);
          *(void *)uint64_t v53 = v22 + 1;
          unint64_t v24 = *(_DWORD **)(a1 + 64);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 56), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 56) = v25 + 1;
            unsigned int v26 = *(std::string **)&v24[2 * v25 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            void *v28 = v27;
            v28[1] = sub_3A6EDC;
            *uint64_t v27 = 0;
            v27[1] = 0;
            int v27[2] = 0;
            unsigned int v26 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v27);
            int v23 = *(char **)v53;
          }
          int v22 = sub_188C244(v26, v23, (uint64_t)a3);
          *(void *)uint64_t v53 = v22;
          if (!v22) {
            goto LABEL_91;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 34) {
            goto LABEL_78;
          }
        }
      case 5u:
        if (v10 != 42) {
          goto LABEL_70;
        }
        uint64_t v29 = v9 - 1;
        while (1)
        {
          uint64_t v30 = v29 + 1;
          *(void *)uint64_t v53 = v29 + 1;
          uint64_t v31 = *(_DWORD **)(a1 + 88);
          if (v31 && (uint64_t v32 = *(int *)(a1 + 80), (int)v32 < *v31))
          {
            *(_DWORD *)(a1 + 80) = v32 + 1;
            uint64_t v33 = *(void *)&v31[2 * v32 + 2];
          }
          else
          {
            uint64_t v34 = sub_178CDA8(*(void *)(a1 + 72));
            uint64_t v33 = sub_188CDC8(a1 + 72, v34);
            uint64_t v30 = *(unsigned __int8 **)v53;
          }
          uint64_t v29 = (unsigned __int8 *)sub_1265F8C(a3, v33, v30);
          *(void *)uint64_t v53 = v29;
          if (!v29) {
            goto LABEL_91;
          }
          if (*(void *)a3 <= (unint64_t)v29 || *v29 != 42) {
            goto LABEL_78;
          }
        }
      case 6u:
        if (v10 != 48) {
          goto LABEL_70;
        }
        v5 |= 0x10u;
        unint64_t v35 = (char *)(v9 + 1);
        uint64_t v36 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_53;
        }
        int v37 = *v35;
        uint64_t v36 = v36 + (v37 << 7) - 128;
        if (v37 < 0)
        {
          uint64_t v49 = sub_188C138((uint64_t)v9, v36);
          *(void *)uint64_t v53 = v49;
          *(void *)(a1 + 128) = v50;
          if (!v49) {
            goto LABEL_91;
          }
        }
        else
        {
          unint64_t v35 = (char *)(v9 + 2);
LABEL_53:
          *(void *)uint64_t v53 = v35;
          *(void *)(a1 + 128) = v36;
        }
        goto LABEL_78;
      case 7u:
        if (v10 != 58) {
          goto LABEL_70;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v38 = *(void *)(a1 + 8);
        BOOL v39 = (uint64_t *)(v38 & 0xFFFFFFFFFFFFFFFCLL);
        if (v38) {
          BOOL v39 = (uint64_t *)*v39;
        }
        uint64_t v40 = (void *)(a1 + 96);
        goto LABEL_62;
      case 8u:
        if (v10 != 66) {
          goto LABEL_70;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v41 = *(void *)(a1 + 8);
        BOOL v39 = (uint64_t *)(v41 & 0xFFFFFFFFFFFFFFFCLL);
        if (v41) {
          BOOL v39 = (uint64_t *)*v39;
        }
        uint64_t v40 = (void *)(a1 + 104);
LABEL_62:
        uint64_t v42 = (std::string *)sub_1880F84(v40, v39);
        unint64_t v21 = (void *)sub_188C244(v42, *(char **)v53, (uint64_t)a3);
        goto LABEL_77;
      case 9u:
        if (v10 != 72) {
          goto LABEL_70;
        }
        int v43 = (char *)(v9 + 1);
        unint64_t v44 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_67;
        }
        int v45 = *v43;
        int v46 = v44 + (v45 << 7);
        unint64_t v44 = (v46 - 128);
        if (v45 < 0)
        {
          *(void *)uint64_t v53 = sub_188C138((uint64_t)v9, (v46 - 128));
          if (!*(void *)v53) {
            goto LABEL_91;
          }
          unint64_t v44 = v51;
        }
        else
        {
          int v43 = (char *)(v9 + 2);
LABEL_67:
          *(void *)uint64_t v53 = v43;
        }
        if (v44 > 5)
        {
          if (*v7) {
            unint64_t v52 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v52 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(9, v44, v52);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 136) = v44;
        }
        goto LABEL_78;
      default:
LABEL_70:
        if (v10) {
          BOOL v47 = (v10 & 7) == 4;
        }
        else {
          BOOL v47 = 1;
        }
        if (!v47)
        {
          if (*v7)
          {
            uint64_t v48 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v48 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v9 = *(unsigned __int8 **)v53;
          }
          unint64_t v21 = sub_1885AC0(v10, v48, (char *)v9, a3);
LABEL_77:
          *(void *)uint64_t v53 = v21;
          if (!v21) {
            goto LABEL_91;
          }
LABEL_78:
          if (sub_11947B8((uint64_t)a3, (char **)v53, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_91:
        }
          *(void *)uint64_t v53 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v53;
    }
  }
}

char *sub_127CF6C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 120);
    *uint64_t v4 = 9;
    *(void *)(v4 + 1) = v7;
    v4 += 9;
  }
  int v8 = *(_DWORD *)(a1 + 32);
  if (v8)
  {
    for (int i = 0; i != v8; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v11 = *(_DWORD *)(v10 + 44);
      v4[1] = v11;
      if (v11 > 0x7F) {
        unsigned int v12 = sub_188A9CC(v11, v4 + 1);
      }
      else {
        unsigned int v12 = v4 + 2;
      }
      uint64_t v4 = sub_144E240(v10, v12, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 112);
    *uint64_t v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    uint64_t v4 = sub_15B1A68(v13, (unint64_t)v15, a3);
  }
  uint64_t v16 = *(unsigned int *)(a1 + 56);
  if ((int)v16 >= 1)
  {
    uint64_t v17 = 0;
    uint64_t v18 = 8 * v16;
    do
    {
      uint64_t v19 = *(void **)(*(void *)(a1 + 64) + v17 + 8);
      if (*((char *)v19 + 23) < 0)
      {
        int64_t v20 = v19[1];
        if (v20 > 127) {
          goto LABEL_31;
        }
      }
      else
      {
        int64_t v20 = *((unsigned __int8 *)v19 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v20)
      {
        *uint64_t v4 = 34;
        v4[1] = v20;
        if (*((char *)v19 + 23) < 0) {
          uint64_t v19 = (void *)*v19;
        }
        unint64_t v21 = v4 + 2;
        memcpy(v21, v19, v20);
        uint64_t v4 = &v21[v20];
        goto LABEL_29;
      }
LABEL_31:
      uint64_t v4 = (char *)sub_188A868(a3, 4, (uint64_t)v19, v4);
LABEL_29:
      v17 += 8;
    }
    while (v18 != v17);
  }
  int v22 = *(_DWORD *)(a1 + 80);
  if (v22)
  {
    for (int j = 0; j != v22; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v24 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *uint64_t v4 = 42;
      unsigned int v25 = *(_DWORD *)(v24 + 44);
      v4[1] = v25;
      if (v25 > 0x7F) {
        unsigned int v26 = sub_188A9CC(v25, v4 + 1);
      }
      else {
        unsigned int v26 = v4 + 2;
      }
      uint64_t v4 = sub_1763540(v24, v26, a3);
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v27 = *(void *)(a1 + 128);
    *uint64_t v4 = 48;
    v4[1] = v27;
    if (v27 > 0x7F)
    {
      v4[1] = v27 | 0x80;
      unint64_t v28 = v27 >> 7;
      v4[2] = v27 >> 7;
      v4 += 3;
      if (v27 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v29 = v28 >> 14;
          v28 >>= 7;
          *v4++ = v28;
        }
        while (v29);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_49:
      if ((v6 & 0x20) == 0) {
        goto LABEL_59;
      }
      goto LABEL_53;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_49;
  }
  uint64_t v4 = sub_117A0AC(a3, 8, (const void **)(*(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0) {
    goto LABEL_59;
  }
LABEL_53:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v30 = *(int *)(a1 + 136);
  *uint64_t v4 = 72;
  v4[1] = v30;
  if (v30 > 0x7F)
  {
    v4[1] = v30 | 0x80;
    unint64_t v31 = v30 >> 7;
    v4[2] = v30 >> 7;
    v4 += 3;
    if (v30 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v32 = v31 >> 14;
        v31 >>= 7;
        *v4++ = v31;
      }
      while (v32);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_59:
  uint64_t v33 = *(void *)(a1 + 8);
  if ((v33 & 1) == 0) {
    return v4;
  }
  unint64_t v35 = v33 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v35 + 31) < 0)
  {
    uint64_t v36 = *(void **)(v35 + 8);
    uint64_t v37 = *(void *)(v35 + 16);
  }
  else
  {
    uint64_t v36 = (void *)(v35 + 8);
    LODWORD(v37) = *(unsigned __int8 *)(v35 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v37)
  {
    uint64_t v38 = (int)v37;
    memcpy(v4, v36, (int)v37);
    v4 += v38;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v36, v37, v4);
}

uint64_t sub_127D3C0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_144EC20(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  if ((int)v8 >= 1)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v9 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      --v8;
    }
    while (v8);
  }
  uint64_t v14 = *(int *)(a1 + 80);
  uint64_t v15 = v9 + v14;
  uint64_t v16 = *(void *)(a1 + 88);
  if (v16) {
    uint64_t v17 = (uint64_t *)(v16 + 8);
  }
  else {
    uint64_t v17 = 0;
  }
  if (v14)
  {
    uint64_t v18 = 8 * v14;
    do
    {
      uint64_t v19 = *v17++;
      uint64_t v20 = sub_1763C40(v19);
      v15 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6);
      v18 -= 8;
    }
    while (v18);
  }
  int v21 = *(_DWORD *)(a1 + 16);
  if ((v21 & 0x3F) != 0)
  {
    if (v21)
    {
      unint64_t v28 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v29 = *(unsigned __int8 *)(v28 + 23);
      uint64_t v30 = *(void *)(v28 + 8);
      if ((v29 & 0x80u) == 0) {
        uint64_t v30 = v29;
      }
      v15 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v21 & 2) == 0)
      {
LABEL_23:
        if ((v21 & 4) == 0)
        {
LABEL_25:
          if ((v21 & 8) != 0) {
            v15 += 9;
          }
          if ((v21 & 0x10) != 0) {
            v15 += ((9 * (__clz(*(void *)(a1 + 128) | 1) ^ 0x3F) + 73) >> 6) + 1;
          }
          if ((v21 & 0x20) != 0)
          {
            int v23 = *(_DWORD *)(a1 + 136);
            uint64_t v24 = ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
            if (v23 >= 0) {
              uint64_t v25 = v24;
            }
            else {
              uint64_t v25 = 11;
            }
            v15 += v25;
          }
          goto LABEL_34;
        }
LABEL_24:
        uint64_t v22 = sub_15B1D1C(*(void *)(a1 + 112));
        v15 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
        goto LABEL_25;
      }
    }
    else if ((v21 & 2) == 0)
    {
      goto LABEL_23;
    }
    unint64_t v31 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v32 = *(unsigned __int8 *)(v31 + 23);
    uint64_t v33 = *(void *)(v31 + 8);
    if ((v32 & 0x80u) == 0) {
      uint64_t v33 = v32;
    }
    v15 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v21 & 4) == 0) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
LABEL_34:
  uint64_t v26 = *(void *)(a1 + 8);
  if (v26)
  {
    unint64_t v34 = v26 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v34 + 31) < 0) {
      uint64_t v35 = *(void *)(v34 + 16);
    }
    else {
      uint64_t v35 = *(unsigned __int8 *)(v34 + 31);
    }
    v15 += v35;
  }
  *(_DWORD *)(a1 + 20) = v15;
  return v15;
}

void sub_127D64C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C33E8((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (const std::string **)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_188FB98(a1 + 48, v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_12C3474((uint64_t *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    uint64_t v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 16);
  if ((v19 & 0x3F) != 0)
  {
    if (v19)
    {
      int v21 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v22 = *(void *)(a1 + 8);
      int v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        int v23 = (uint64_t *)*v23;
      }
      sub_1881DF4((std::string **)(a1 + 96), v21, v23);
      if ((v19 & 2) == 0)
      {
LABEL_13:
        if ((v19 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_29;
      }
    }
    else if ((v19 & 2) == 0)
    {
      goto LABEL_13;
    }
    uint64_t v24 = (long long *)(*(void *)(a2 + 104) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v25 = *(void *)(a1 + 8);
    uint64_t v26 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
    if (v25) {
      uint64_t v26 = (uint64_t *)*v26;
    }
    sub_1881DF4((std::string **)(a1 + 104), v24, v26);
    if ((v19 & 4) == 0)
    {
LABEL_14:
      if ((v19 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_37;
    }
LABEL_29:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v27 = *(void *)(a1 + 112);
    if (!v27)
    {
      uint64_t v28 = *(void *)(a1 + 8);
      uint64_t v29 = (void *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
      if (v28) {
        uint64_t v29 = (void *)*v29;
      }
      uint64_t v27 = sub_15C19EC((uint64_t)v29);
      *(void *)(a1 + 112) = v27;
    }
    if (*(void *)(a2 + 112)) {
      uint64_t v30 = *(uint64_t (****)())(a2 + 112);
    }
    else {
      uint64_t v30 = &off_253F208;
    }
    sub_15B1E3C(v27, (uint64_t)v30);
    if ((v19 & 8) == 0)
    {
LABEL_15:
      if ((v19 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_38;
    }
LABEL_37:
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    if ((v19 & 0x10) == 0)
    {
LABEL_16:
      if ((v19 & 0x20) == 0)
      {
LABEL_18:
        *(_DWORD *)(a1 + 16) |= v19;
        goto LABEL_19;
      }
LABEL_17:
      *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
      goto LABEL_18;
    }
LABEL_38:
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    if ((v19 & 0x20) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
LABEL_19:
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_127D8EC(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_144F8A4(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v5 = *(unsigned int *)(a1 + 80);
  while ((int)v5 >= 1)
  {
    uint64_t v6 = v5 - 1;
    char v7 = sub_17612D4(*(void *)(*(void *)(a1 + 88) + 8 * v5));
    uint64_t v5 = v6;
    if ((v7 & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 4) == 0) {
    return 1;
  }
  BOOL result = sub_15B1FC0(*(void *)(a1 + 112));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_127D978@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.ProblemStatus.Resolution");
}

uint64_t sub_127D988(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_127DA40(uint64_t a1)
{
  sub_127D988(a1);

  operator delete();
}

uint64_t sub_127DA78(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_127DAF4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)uint64_t v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        int v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v16 = (uint64_t *)*v16;
      }
      int v17 = (void *)(a1 + 24);
LABEL_27:
      int v19 = (std::string *)sub_1880F84(v17, v16);
      int v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v7 = *(char **)v20;
    }
    int v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)uint64_t v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)uint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_127DC9C(uint64_t a1, char *__dst, void *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    char v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_127DD88(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_127DE64()
{
  return 1;
}

void *sub_127DE6C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.ProblemStatus.Notification");
}

uint64_t sub_127DE7C(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_252FDF8 && *(void *)(a1 + 32))
  {
    sub_15B0994();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_127DF48(uint64_t a1)
{
  sub_127DE7C(a1);

  operator delete();
}

unsigned char *sub_127DF80(unsigned char *result)
{
  int v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *((void *)result + 3) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_15B09D0(*((void *)result + 4));
  }
LABEL_7:
  char v5 = v1[8];
  uint64_t v4 = v1 + 8;
  *((_DWORD *)v4 + 2) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_127E014(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v20 + 2);
      }
    }
    *(void *)uint64_t v20 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 32);
    if (!v15)
    {
      uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v15 = sub_15C1918((uint64_t)v16);
      *(void *)(a1 + 32) = v15;
      uint64_t v7 = *(unsigned __int8 **)v20;
    }
    int v14 = sub_1198F14(a3, v15, v7);
LABEL_29:
    *(void *)uint64_t v20 = v14;
    if (!v14) {
      goto LABEL_35;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void *)(a1 + 8);
    uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    int v19 = (std::string *)sub_1880F84((void *)(a1 + 24), v18);
    int v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
    goto LABEL_29;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v20;
    }
    int v14 = sub_1885AC0(v8, v13, (char *)v7, a3);
    goto LABEL_29;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_35:
  *(void *)uint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_127E1D4(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    *uint64_t v4 = 18;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_15B0C0C(v7, v9, a3);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_127E304(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_10;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_15B0D90(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_127E3E8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 32));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_127E414@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.ProblemStatus.Details.UpdatedLabel");
}

uint64_t sub_127E424(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_127E4C4(uint64_t a1)
{
  sub_127E424(a1);

  operator delete();
}

uint64_t sub_127E4FC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_127E544(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)uint64_t v24 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v19 = *(void *)(a1 + 8);
    uint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
    if (v19) {
      uint64_t v20 = (uint64_t *)*v20;
    }
    int v21 = (std::string *)sub_1880F84((void *)(a1 + 24), v20);
    uint64_t v14 = (void *)sub_188C244(v21, *(char **)v24, (uint64_t)a3);
LABEL_30:
    *(void *)uint64_t v24 = v14;
    if (!v14) {
      goto LABEL_42;
    }
LABEL_31:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 == 16)
  {
    uint64_t v15 = v7 + 1;
    unint64_t v16 = *v7;
    if (*v7 < 0)
    {
      int v17 = *v15;
      int v18 = v16 + (v17 << 7);
      unint64_t v16 = (v18 - 128);
      if (v17 < 0)
      {
        *(void *)uint64_t v24 = sub_188C138((uint64_t)v7, (v18 - 128));
        if (!*(void *)v24) {
          goto LABEL_42;
        }
        unint64_t v16 = v22;
        goto LABEL_25;
      }
      uint64_t v15 = v7 + 2;
    }
    *(void *)uint64_t v24 = v15;
LABEL_25:
    if (v16 > 1)
    {
      if (*v6) {
        int v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        int v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v16, v23);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v16;
    }
    goto LABEL_31;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v24;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_30;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_42:
  *(void *)uint64_t v24 = 0;
  return *(void *)v24;
}

unsigned char *sub_127E754(uint64_t a1, unsigned char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    *unint64_t v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_127E89C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_13;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    int v6 = *(_DWORD *)(a1 + 32);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v7;
  }
LABEL_13:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_127E968()
{
  return 1;
}

void *sub_127E970@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.ProblemStatus.Details.Button");
}

void *sub_127E980(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_127EA10((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_12C28B4(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_127EA10(uint64_t a1)
{
  unint64_t v3 = *(uint64_t **)(a1 + 48);
  uint64_t v2 = (void ***)(a1 + 48);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  uint64_t result = (void ***)(a1 + 56);
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_252FE48)
  {
    uint64_t v5 = *(void *)(a1 + 64);
    if (v5)
    {
      sub_15B1678(v5);
      operator delete();
    }
    if (*(void *)(a1 + 72))
    {
      sub_178F1F4();
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 80);
    if (v6)
    {
      sub_127DE7C(v6);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 88);
    if (result)
    {
      sub_127E424((uint64_t)result);
      operator delete();
    }
  }
  return result;
}

void sub_127EB08(void *a1)
{
  sub_127E980(a1);

  operator delete();
}

uint64_t sub_127EB40(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_175FE78(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 0x3F) == 0) {
    goto LABEL_13;
  }
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_8;
    }
LABEL_23:
    unint64_t v9 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)unint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
      if ((v5 & 4) != 0) {
        goto LABEL_27;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
      if ((v5 & 4) != 0) {
        goto LABEL_27;
      }
    }
LABEL_9:
    if ((v5 & 8) == 0) {
      goto LABEL_10;
    }
LABEL_28:
    uint64_t result = sub_1700B04(*(void *)(v1 + 72));
    if ((v5 & 0x10) == 0)
    {
LABEL_11:
      if ((v5 & 0x20) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_29;
  }
  unint64_t v8 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v8 + 23) < 0)
  {
    **(unsigned char **)unint64_t v8 = 0;
    *(void *)(v8 + 8) = 0;
    if ((v5 & 2) != 0) {
      goto LABEL_23;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v8 = 0;
    *(unsigned char *)(v8 + 23) = 0;
    if ((v5 & 2) != 0) {
      goto LABEL_23;
    }
  }
LABEL_8:
  if ((v5 & 4) == 0) {
    goto LABEL_9;
  }
LABEL_27:
  uint64_t result = (uint64_t)sub_15B16B4(*(unsigned char **)(v1 + 64));
  if ((v5 & 8) != 0) {
    goto LABEL_28;
  }
LABEL_10:
  if ((v5 & 0x10) == 0) {
    goto LABEL_11;
  }
LABEL_29:
  uint64_t result = (uint64_t)sub_127DF80(*(unsigned char **)(v1 + 80));
  if ((v5 & 0x20) != 0) {
LABEL_12:
  }
    uint64_t result = sub_127E4FC(*(void *)(v1 + 88));
LABEL_13:
  if ((v5 & 0xC0) != 0) {
    *(void *)(v1 + 96) = 0;
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 96) = 1;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_127EC88(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v49 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v49, a3[11].i32[1])) {
    return *(void *)v49;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    char v7 = (unsigned __int8 *)(*(void *)v49 + 1);
    unsigned int v8 = **(unsigned char **)v49;
    if ((char)**(unsigned char **)v49 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        char v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v49, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = (unsigned __int8 *)(*(void *)v49 + 2);
      }
    }
    *(void *)uint64_t v49 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_73;
        }
        uint64_t v11 = (char *)(v7 + 1);
        unint64_t v12 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          *(void *)uint64_t v49 = sub_188C138((uint64_t)v7, (v14 - 128));
          if (!*(void *)v49) {
            return 0;
          }
          unint64_t v12 = v44;
        }
        else
        {
          uint64_t v11 = (char *)(v7 + 2);
LABEL_13:
          *(void *)uint64_t v49 = v11;
        }
        if ((v12 - 1) <= 5)
        {
          *(_DWORD *)(a1 + 16) |= 0x100u;
          *(_DWORD *)(a1 + 104) = v12;
          goto LABEL_81;
        }
        if (*v6) {
          BOOL v47 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          BOOL v47 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v48 = 1;
        goto LABEL_98;
      case 2u:
        if (v8 != 18) {
          goto LABEL_73;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v16 = (uint64_t *)*v16;
        }
        int v17 = (void *)(a1 + 48);
        goto LABEL_24;
      case 3u:
        if (v8 != 26) {
          goto LABEL_73;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 8);
        unint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          unint64_t v16 = (uint64_t *)*v16;
        }
        int v17 = (void *)(a1 + 56);
LABEL_24:
        uint64_t v19 = (std::string *)sub_1880F84(v17, v16);
        uint64_t v20 = (uint64_t)sub_188C244(v19, *(char **)v49, (uint64_t)a3);
        goto LABEL_80;
      case 4u:
        if (v8 != 34) {
          goto LABEL_73;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v21 = *(void *)(a1 + 64);
        if (!v21)
        {
          unint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v22 = (void *)*v22;
          }
          uint64_t v21 = sub_15C19EC((uint64_t)v22);
          *(void *)(a1 + 64) = v21;
          char v7 = *(unsigned __int8 **)v49;
        }
        uint64_t v20 = (uint64_t)sub_11E1C60(a3, v21, v7);
        goto LABEL_80;
      case 5u:
        if (v8 != 42) {
          goto LABEL_73;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v23 = *(void *)(a1 + 72);
        if (!v23)
        {
          uint64_t v24 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v24 = (void *)*v24;
          }
          sub_1791234((uint64_t)v24);
          uint64_t v23 = v25;
          *(void *)(a1 + 72) = v25;
          char v7 = *(unsigned __int8 **)v49;
        }
        uint64_t v20 = (uint64_t)sub_1264784(a3, v23, v7);
        goto LABEL_80;
      case 6u:
        if (v8 != 50) {
          goto LABEL_73;
        }
        uint64_t v26 = v7 - 1;
        while (1)
        {
          uint64_t v27 = v26 + 1;
          *(void *)uint64_t v49 = v26 + 1;
          uint64_t v28 = *(_DWORD **)(a1 + 40);
          if (v28 && (uint64_t v29 = *(int *)(a1 + 32), (int)v29 < *v28))
          {
            *(_DWORD *)(a1 + 32) = v29 + 1;
            uint64_t v30 = *(void *)&v28[2 * v29 + 2];
          }
          else
          {
            uint64_t v31 = sub_178CDA8(*(void *)(a1 + 24));
            uint64_t v30 = sub_188CDC8(a1 + 24, v31);
            uint64_t v27 = *(unsigned __int8 **)v49;
          }
          uint64_t v26 = (unsigned __int8 *)sub_1265F8C(a3, v30, v27);
          *(void *)uint64_t v49 = v26;
          if (!v26) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v26 || *v26 != 50) {
            goto LABEL_81;
          }
        }
      case 7u:
        if (v8 != 58) {
          goto LABEL_73;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v32 = *(void **)(a1 + 80);
        if (!v32)
        {
          uint64_t v33 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v33 = (void *)*v33;
          }
          uint64_t v32 = sub_1284C98((uint64_t)v33);
          *(void *)(a1 + 80) = v32;
          char v7 = *(unsigned __int8 **)v49;
        }
        uint64_t v20 = sub_127F22C(a3, (uint64_t)v32, v7);
        goto LABEL_80;
      case 8u:
        if (v8 != 64) {
          goto LABEL_73;
        }
        unint64_t v34 = (char *)(v7 + 1);
        unint64_t v12 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_57;
        }
        int v35 = *v34;
        int v36 = v12 + (v35 << 7);
        unint64_t v12 = (v36 - 128);
        if (v35 < 0)
        {
          *(void *)uint64_t v49 = sub_188C138((uint64_t)v7, (v36 - 128));
          if (!*(void *)v49) {
            return 0;
          }
          unint64_t v12 = v45;
        }
        else
        {
          unint64_t v34 = (char *)(v7 + 2);
LABEL_57:
          *(void *)uint64_t v49 = v34;
        }
        if (sub_138DE04(v12))
        {
          *(_DWORD *)(a1 + 16) |= 0x40u;
          *(_DWORD *)(a1 + 96) = v12;
          goto LABEL_81;
        }
        if (*v6) {
          BOOL v47 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          BOOL v47 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v48 = 8;
        goto LABEL_98;
      case 9u:
        if (v8 != 72) {
          goto LABEL_73;
        }
        uint64_t v37 = (char *)(v7 + 1);
        unint64_t v12 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_64;
        }
        int v38 = *v37;
        int v39 = v12 + (v38 << 7);
        unint64_t v12 = (v39 - 128);
        if (v38 < 0)
        {
          *(void *)uint64_t v49 = sub_188C138((uint64_t)v7, (v39 - 128));
          if (!*(void *)v49) {
            return 0;
          }
          unint64_t v12 = v46;
        }
        else
        {
          uint64_t v37 = (char *)(v7 + 2);
LABEL_64:
          *(void *)uint64_t v49 = v37;
        }
        if (sub_1369B8C(v12))
        {
          *(_DWORD *)(a1 + 16) |= 0x80u;
          *(_DWORD *)(a1 + 100) = v12;
        }
        else
        {
          if (*v6) {
            BOOL v47 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            BOOL v47 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v48 = 9;
LABEL_98:
          sub_188C020(v48, v12, v47);
        }
        goto LABEL_81;
      case 0xAu:
        if (v8 != 82) {
          goto LABEL_73;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v40 = *(void *)(a1 + 88);
        if (!v40)
        {
          uint64_t v41 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v41 = (void *)*v41;
          }
          uint64_t v40 = sub_1284D1C((uint64_t)v41);
          *(void *)(a1 + 88) = v40;
          char v7 = *(unsigned __int8 **)v49;
        }
        uint64_t v20 = sub_127F2BC(a3, v40, v7);
        goto LABEL_80;
      default:
LABEL_73:
        if (v8) {
          BOOL v42 = (v8 & 7) == 4;
        }
        else {
          BOOL v42 = 1;
        }
        if (!v42)
        {
          if (*v6)
          {
            int v43 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v43 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v7 = *(unsigned __int8 **)v49;
          }
          uint64_t v20 = (uint64_t)sub_1885AC0(v8, v43, (char *)v7, a3);
LABEL_80:
          *(void *)uint64_t v49 = v20;
          if (!v20) {
            return 0;
          }
LABEL_81:
          if (sub_11947B8((uint64_t)a3, (char **)v49, a3[11].i32[1])) {
            return *(void *)v49;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v49;
    }
  }
}

uint64_t sub_127F22C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_127E014(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_127F2BC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_127E544(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_127F34C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 104);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_11:
    if ((v6 & 8) == 0) {
      goto LABEL_27;
    }
    goto LABEL_21;
  }
LABEL_15:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 64);
  *uint64_t v4 = 34;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    unint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    unint64_t v12 = v4 + 2;
  }
  uint64_t v4 = sub_15B1A68(v10, (unint64_t)v12, a3);
  if ((v6 & 8) != 0)
  {
LABEL_21:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 72);
    *uint64_t v4 = 42;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    uint64_t v4 = sub_178F4EC(v13, (unint64_t)v15, a3);
  }
LABEL_27:
  int v16 = *(_DWORD *)(a1 + 32);
  if (v16)
  {
    for (int i = 0; i != v16; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 50;
      unsigned int v19 = *(_DWORD *)(v18 + 44);
      v4[1] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, v4 + 1);
      }
      else {
        uint64_t v20 = v4 + 2;
      }
      uint64_t v4 = sub_1763540(v18, v20, a3);
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v21 = *(void *)(a1 + 80);
    *uint64_t v4 = 58;
    unsigned int v22 = *(_DWORD *)(v21 + 20);
    v4[1] = v22;
    if (v22 > 0x7F) {
      uint64_t v23 = sub_188A9CC(v22, v4 + 1);
    }
    else {
      uint64_t v23 = v4 + 2;
    }
    uint64_t v4 = sub_127E1D4(v21, v23, a3);
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v24 = *(int *)(a1 + 96);
    *uint64_t v4 = 64;
    v4[1] = v24;
    if (v24 > 0x7F)
    {
      v4[1] = v24 | 0x80;
      unint64_t v25 = v24 >> 7;
      v4[2] = v24 >> 7;
      v4 += 3;
      if (v24 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v26 = v25 >> 14;
          v25 >>= 7;
          *v4++ = v25;
        }
        while (v26);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v27 = *(int *)(a1 + 100);
    *uint64_t v4 = 72;
    v4[1] = v27;
    if (v27 > 0x7F)
    {
      v4[1] = v27 | 0x80;
      unint64_t v28 = v27 >> 7;
      v4[2] = v27 >> 7;
      v4 += 3;
      if (v27 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v29 = v28 >> 14;
          v28 >>= 7;
          *v4++ = v28;
        }
        while (v29);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v30 = *(void *)(a1 + 88);
    *uint64_t v4 = 82;
    unsigned int v31 = *(_DWORD *)(v30 + 20);
    v4[1] = v31;
    if (v31 > 0x7F) {
      uint64_t v32 = sub_188A9CC(v31, v4 + 1);
    }
    else {
      uint64_t v32 = v4 + 2;
    }
    uint64_t v4 = sub_127E754(v30, v32, a3);
  }
  uint64_t v33 = *(void *)(a1 + 8);
  if ((v33 & 1) == 0) {
    return v4;
  }
  unint64_t v35 = v33 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v35 + 31) < 0)
  {
    int v36 = *(void **)(v35 + 8);
    uint64_t v37 = *(void *)(v35 + 16);
  }
  else
  {
    int v36 = (void *)(v35 + 8);
    LODWORD(v37) = *(unsigned __int8 *)(v35 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v37)
  {
    uint64_t v38 = (int)v37;
    memcpy(v4, v36, (int)v37);
    v4 += v38;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v36, v37, v4);
}

uint64_t sub_127F7E8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1763C40(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v8) {
    goto LABEL_18;
  }
  if (v8)
  {
    unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_26;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  unint64_t v12 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  uint64_t v14 = *(void *)(v12 + 8);
  if ((v13 & 0x80u) == 0) {
    uint64_t v14 = v13;
  }
  v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v15 = sub_15B1D1C(*(void *)(a1 + 64));
  v2 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) == 0)
  {
LABEL_14:
    if ((v8 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t v16 = sub_178F82C(*(void *)(a1 + 72));
  v2 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x10) == 0)
  {
LABEL_15:
    if ((v8 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t v17 = sub_127E304(*(void *)(a1 + 80));
  v2 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x20) == 0)
  {
LABEL_16:
    if ((v8 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t v18 = sub_127E89C(*(void *)(a1 + 88));
  v2 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x40) != 0)
  {
LABEL_30:
    int v19 = *(_DWORD *)(a1 + 96);
    if (v19 < 0) {
      uint64_t v20 = 11;
    }
    else {
      uint64_t v20 = ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v20;
    if ((v8 & 0x80) != 0) {
      goto LABEL_34;
    }
LABEL_18:
    if ((v8 & 0x100) == 0) {
      goto LABEL_42;
    }
    goto LABEL_38;
  }
LABEL_17:
  if ((v8 & 0x80) == 0) {
    goto LABEL_18;
  }
LABEL_34:
  int v21 = *(_DWORD *)(a1 + 100);
  if (v21 < 0) {
    uint64_t v22 = 11;
  }
  else {
    uint64_t v22 = ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v22;
  if ((v8 & 0x100) != 0)
  {
LABEL_38:
    int v23 = *(_DWORD *)(a1 + 104);
    if (v23 < 0) {
      uint64_t v24 = 11;
    }
    else {
      uint64_t v24 = ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v24;
  }
LABEL_42:
  uint64_t v25 = *(void *)(a1 + 8);
  if (v25)
  {
    unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v27 + 31) < 0) {
      uint64_t v28 = *(void *)(v27 + 16);
    }
    else {
      uint64_t v28 = *(unsigned __int8 *)(v27 + 31);
    }
    v2 += v28;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_127FAAC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C3474((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v9)
  {
    if (v9)
    {
      unint64_t v12 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v13 = *(void *)(a1 + 8);
      uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
      if (v13) {
        uint64_t v14 = (uint64_t *)*v14;
      }
      sub_1881DF4((std::string **)(a1 + 48), v12, v14);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_27;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    uint64_t v15 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v16 = *(void *)(a1 + 8);
    uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
    if (v16) {
      uint64_t v17 = (uint64_t *)*v17;
    }
    sub_1881DF4((std::string **)(a1 + 56), v15, v17);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_35;
    }
LABEL_27:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v18 = *(void *)(a1 + 64);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        uint64_t v20 = (void *)*v20;
      }
      uint64_t v18 = sub_15C19EC((uint64_t)v20);
      *(void *)(a1 + 64) = v18;
    }
    if (*(void *)(a2 + 64)) {
      int v21 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      int v21 = &off_253F208;
    }
    sub_15B1E3C(v18, (uint64_t)v21);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_43;
    }
LABEL_35:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v22 = *(std::string **)(a1 + 72);
    if (!v22)
    {
      uint64_t v23 = *(void *)(a1 + 8);
      uint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        uint64_t v24 = (void *)*v24;
      }
      sub_1791234((uint64_t)v24);
      *(void *)(a1 + 72) = v22;
    }
    if (*(void *)(a2 + 72)) {
      uint64_t v25 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      uint64_t v25 = &off_25496B0;
    }
    sub_1701678(v22, (uint64_t)v25);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0) {
        goto LABEL_11;
      }
      goto LABEL_51;
    }
LABEL_43:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    unint64_t v26 = *(void **)(a1 + 80);
    if (!v26)
    {
      uint64_t v27 = *(void *)(a1 + 8);
      uint64_t v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
      if (v27) {
        uint64_t v28 = (void *)*v28;
      }
      unint64_t v26 = sub_1284C98((uint64_t)v28);
      *(void *)(a1 + 80) = v26;
    }
    if (*(void *)(a2 + 80)) {
      unint64_t v29 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      unint64_t v29 = &off_252FDF8;
    }
    sub_11FD018((uint64_t)v26, (uint64_t)v29);
    if ((v9 & 0x20) == 0)
    {
LABEL_11:
      if ((v9 & 0x40) == 0) {
        goto LABEL_12;
      }
      goto LABEL_59;
    }
LABEL_51:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v30 = *(std::string **)(a1 + 88);
    if (!v30)
    {
      uint64_t v31 = *(void *)(a1 + 8);
      uint64_t v32 = (void *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
      if (v31) {
        uint64_t v32 = (void *)*v32;
      }
      uint64_t v30 = (std::string *)sub_1284D1C((uint64_t)v32);
      *(void *)(a1 + 88) = v30;
    }
    if (*(void *)(a2 + 88)) {
      uint64_t v33 = *(uint64_t (****)(uint64_t))(a2 + 88);
    }
    else {
      uint64_t v33 = &off_252FE20;
    }
    sub_119E644(v30, (uint64_t)v33);
    if ((v9 & 0x40) == 0)
    {
LABEL_12:
      if ((v9 & 0x80) == 0)
      {
LABEL_14:
        *(_DWORD *)(a1 + 16) |= v9;
        goto LABEL_15;
      }
LABEL_13:
      *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
      goto LABEL_14;
    }
LABEL_59:
    *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
    if ((v9 & 0x80) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_15:
  if ((v9 & 0x100) != 0)
  {
    int v10 = *(_DWORD *)(a2 + 104);
    *(_DWORD *)(a1 + 16) |= 0x100u;
    *(_DWORD *)(a1 + 104) = v10;
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_127FD7C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_17612D4(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    uint64_t result = sub_15B1FC0(*(void *)(a1 + 64));
    if (!result) {
      return result;
    }
    int v6 = *(_DWORD *)(a1 + 16);
  }
  if ((v6 & 0x10) == 0) {
    return 1;
  }
  uint64_t v7 = *(void *)(a1 + 80);
  if ((*(unsigned char *)(v7 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(v7 + 32));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_127FE00@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.ProblemStatus.Details");
}

uint64_t sub_127FE10(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_252FEB8)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_127C770(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 40);
    if (v7)
    {
      sub_127D988(v7);
      operator delete();
    }
    int v8 = *(void **)(a1 + 48);
    if (v8)
    {
      sub_127E980(v8);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_127FF1C(uint64_t a1)
{
  sub_127FE10(a1);

  operator delete();
}

uint64_t sub_127FF54(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_7;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_17:
    uint64_t result = sub_127C8B0(*(void *)(result + 32));
    if ((v2 & 4) == 0)
    {
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    goto LABEL_18;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_17;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_17;
    }
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_18:
  uint64_t result = sub_127DA78(*(void *)(v1 + 40));
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    uint64_t result = sub_127EB40(*(void *)(v1 + 48));
LABEL_7:
  if ((v2 & 0x30) != 0)
  {
    *(void *)(v1 + 56) = 0;
    *(_DWORD *)(v1 + 64) = 1;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_1280024(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = (unsigned __int8 *)(*(void *)v31 + 1);
    unsigned int v9 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        int v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (unsigned __int8 *)(*(void *)v31 + 2);
      }
    }
    *(void *)uint64_t v31 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (std::string *)sub_1880F84((void *)(a1 + 24), v13);
        uint64_t v15 = (uint64_t)sub_188C244(v14, *(char **)v31, (uint64_t)a3);
        goto LABEL_47;
      case 2u:
        if (v9 != 17) {
          goto LABEL_40;
        }
        v5 |= 0x10u;
        *(void *)(a1 + 56) = *(void *)v8;
        *(void *)uint64_t v31 = v8 + 8;
        goto LABEL_48;
      case 3u:
        if (v9 != 24) {
          goto LABEL_40;
        }
        uint64_t v16 = (char *)(v8 + 1);
        unint64_t v17 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v18 = *v16;
        int v19 = v17 + (v18 << 7);
        unint64_t v17 = (v19 - 128);
        if (v18 < 0)
        {
          *(void *)uint64_t v31 = sub_188C138((uint64_t)v8, (v19 - 128));
          if (!*(void *)v31) {
            goto LABEL_59;
          }
          unint64_t v17 = v29;
        }
        else
        {
          uint64_t v16 = (char *)(v8 + 2);
LABEL_19:
          *(void *)uint64_t v31 = v16;
        }
        if ((v17 - 1) > 4)
        {
          if (*v7) {
            uint64_t v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(3, v17, v30);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 64) = v17;
        }
        goto LABEL_48;
      case 4u:
        if (v9 != 34) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v20 = *(void *)(a1 + 32);
        if (!v20)
        {
          int v21 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v21 = (void *)*v21;
          }
          uint64_t v20 = sub_1284B50((uint64_t)v21);
          *(void *)(a1 + 32) = v20;
          int v8 = *(unsigned __int8 **)v31;
        }
        uint64_t v15 = sub_1280390(a3, v20, v8);
        goto LABEL_47;
      case 5u:
        if (v9 != 42) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v22 = *(void **)(a1 + 40);
        if (!v22)
        {
          uint64_t v23 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v23 = (void *)*v23;
          }
          uint64_t v22 = sub_1284C14((uint64_t)v23);
          *(void *)(a1 + 40) = v22;
          int v8 = *(unsigned __int8 **)v31;
        }
        uint64_t v15 = sub_1280420(a3, (uint64_t)v22, v8);
        goto LABEL_47;
      case 6u:
        if (v9 != 50) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v24 = *(void *)(a1 + 48);
        if (!v24)
        {
          uint64_t v25 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v25 = (void *)*v25;
          }
          sub_1284DA4((uint64_t)v25);
          uint64_t v24 = v26;
          *(void *)(a1 + 48) = v26;
          int v8 = *(unsigned __int8 **)v31;
        }
        uint64_t v15 = sub_12804B0(a3, v24, v8);
        goto LABEL_47;
      default:
LABEL_40:
        if (v9) {
          BOOL v27 = (v9 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (*v7)
          {
            uint64_t v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = *(unsigned __int8 **)v31;
          }
          uint64_t v15 = (uint64_t)sub_1885AC0(v9, v28, (char *)v8, a3);
LABEL_47:
          *(void *)uint64_t v31 = v15;
          if (!v15) {
            goto LABEL_59;
          }
LABEL_48:
          if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_59:
        }
          *(void *)uint64_t v31 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v31;
    }
  }
}

uint64_t sub_1280390(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_127C9F4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1280420(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_127DAF4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12804B0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_127EC88(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1280540(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 0x10) == 0)
    {
LABEL_3:
      if ((v6 & 0x20) == 0) {
        goto LABEL_15;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 56);
  *char v4 = 17;
  *(void *)(v4 + 1) = v7;
  v4 += 9;
  if ((v6 & 0x20) != 0)
  {
LABEL_9:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v8 = *(int *)(a1 + 64);
    *char v4 = 24;
    v4[1] = v8;
    if (v8 > 0x7F)
    {
      v4[1] = v8 | 0x80;
      unint64_t v9 = v8 >> 7;
      v4[2] = v8 >> 7;
      v4 += 3;
      if (v8 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v10 = v9 >> 14;
          v9 >>= 7;
          *v4++ = v9;
        }
        while (v10);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_15:
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v11 = *(void *)(a1 + 32);
    *char v4 = 34;
    unsigned int v12 = *(_DWORD *)(v11 + 20);
    v4[1] = v12;
    if (v12 > 0x7F) {
      uint64_t v13 = sub_188A9CC(v12, v4 + 1);
    }
    else {
      uint64_t v13 = v4 + 2;
    }
    char v4 = sub_127CF6C(v11, (unint64_t)v13, a3);
    if ((v6 & 4) == 0)
    {
LABEL_17:
      if ((v6 & 8) == 0) {
        goto LABEL_37;
      }
      goto LABEL_31;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_17;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v14 = *(void *)(a1 + 40);
  *char v4 = 42;
  unsigned int v15 = *(_DWORD *)(v14 + 20);
  v4[1] = v15;
  if (v15 > 0x7F) {
    uint64_t v16 = sub_188A9CC(v15, v4 + 1);
  }
  else {
    uint64_t v16 = v4 + 2;
  }
  char v4 = sub_127DC9C(v14, v16, a3);
  if ((v6 & 8) != 0)
  {
LABEL_31:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v17 = *(void *)(a1 + 48);
    *char v4 = 50;
    unsigned int v18 = *(_DWORD *)(v17 + 20);
    v4[1] = v18;
    if (v18 > 0x7F) {
      int v19 = sub_188A9CC(v18, v4 + 1);
    }
    else {
      int v19 = v4 + 2;
    }
    char v4 = sub_127F34C(v17, (unint64_t)v19, a3);
  }
LABEL_37:
  uint64_t v20 = *(void *)(a1 + 8);
  if ((v20 & 1) == 0) {
    return v4;
  }
  unint64_t v22 = v20 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v22 + 31) < 0)
  {
    uint64_t v23 = *(void **)(v22 + 8);
    uint64_t v24 = *(void *)(v22 + 16);
  }
  else
  {
    uint64_t v23 = (void *)(v22 + 8);
    LODWORD(v24) = *(unsigned __int8 *)(v22 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v24)
  {
    uint64_t v25 = (int)v24;
    memcpy(v4, v23, (int)v24);
    v4 += v25;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v23, v24, v4);
}

uint64_t sub_1280810(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x3F) == 0)
  {
    uint64_t result = 0;
    goto LABEL_21;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v8 = sub_127D3C0(*(void *)(a1 + 32));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  uint64_t v7 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    uint64_t v7 = v6;
  }
  uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v14 = sub_127DD88(*(void *)(a1 + 40));
  v3 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0)
  {
LABEL_12:
    uint64_t v9 = sub_127F7E8(*(void *)(a1 + 48));
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_13:
  if ((v2 & 0x10) != 0) {
    uint64_t result = v3 + 9;
  }
  else {
    uint64_t result = v3;
  }
  if ((v2 & 0x20) != 0)
  {
    int v10 = *(_DWORD *)(a1 + 64);
    uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v10 >= 0) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 11;
    }
    result += v12;
  }
LABEL_21:
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    result += v16;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_12809A0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_25;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void *)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_1284B50((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_252FD40;
    }
    sub_127D64C(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_33;
    }
LABEL_25:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v14 = *(std::string **)(a1 + 40);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = (std::string *)sub_1284C14((uint64_t)v16);
      *(void *)(a1 + 40) = v14;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v17 = *(uint64_t (****)(uint64_t))(a2 + 40);
    }
    else {
      uint64_t v17 = &off_252FDD0;
    }
    sub_11EC100(v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_41;
    }
LABEL_33:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v18 = *(void *)(a1 + 48);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        uint64_t v20 = (void *)*v20;
      }
      sub_1284DA4((uint64_t)v20);
      *(void *)(a1 + 48) = v18;
    }
    if (*(void *)(a2 + 48)) {
      int v21 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      int v21 = &off_252FE48;
    }
    sub_127FAAC(v18, (uint64_t)v21);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0)
      {
LABEL_9:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_10;
      }
LABEL_8:
      *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
      goto LABEL_9;
    }
LABEL_41:
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1280B60(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_127D8EC(*(void *)(a1 + 32));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) == 0) {
    return 1;
  }
  uint64_t result = sub_127FD7C(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1280BAC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.ProblemStatus");
}

uint64_t sub_1280BBC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_252FF00)
  {
    if (*(void *)(a1 + 32))
    {
      sub_15B8F7C();
      operator delete();
    }
    if (*(void *)(a1 + 40))
    {
      sub_16C8084();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1280CA8(uint64_t a1)
{
  sub_1280BBC(a1);

  operator delete();
}

uint64_t sub_1280CE0(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_14;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_14;
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  *(unsigned char *)unint64_t v5 = 0;
  *(unsigned char *)(v5 + 23) = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_14:
  uint64_t result = sub_15B8FB8(*(void *)(result + 32));
  if ((v2 & 4) != 0) {
LABEL_5:
  }
    uint64_t result = (uint64_t)sub_16C80C0(*(void *)(v1 + 40));
LABEL_6:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_1280D8C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
    return *(void *)v23;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v23 + 1);
    unsigned int v8 = **(unsigned char **)v23;
    if ((char)**(unsigned char **)v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v23 + 2);
      }
    }
    *(void *)uint64_t v23 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 4u;
      uint64_t v16 = *(void **)(a1 + 40);
      if (!v16)
      {
        uint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v17 = (void *)*v17;
        }
        uint64_t v16 = sub_1786B58((uint64_t)v17);
        *(void *)(a1 + 40) = v16;
        uint64_t v7 = *(unsigned __int8 **)v23;
      }
      uint64_t v15 = sub_119BB18(a3, (uint64_t)v16, v7);
      goto LABEL_36;
    }
    if (v11 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v18 = *(void *)(a1 + 8);
    uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (uint64_t *)*v19;
    }
    uint64_t v20 = (std::string *)sub_1880F84((void *)(a1 + 24), v19);
    uint64_t v15 = (uint64_t)sub_188C244(v20, *(char **)v23, (uint64_t)a3);
LABEL_36:
    *(void *)uint64_t v23 = v15;
    if (!v15) {
      goto LABEL_42;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
      return *(void *)v23;
    }
  }
  if (v11 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v21 = *(void *)(a1 + 32);
    if (!v21)
    {
      unint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unint64_t v22 = (void *)*v22;
      }
      uint64_t v21 = sub_15C1EF4((uint64_t)v22);
      *(void *)(a1 + 32) = v21;
      uint64_t v7 = *(unsigned __int8 **)v23;
    }
    uint64_t v15 = sub_1198E84(a3, v21, v7);
    goto LABEL_36;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v23;
    }
    uint64_t v15 = (uint64_t)sub_1885AC0(v8, v14, (char *)v7, a3);
    goto LABEL_36;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v23;
  }
LABEL_42:
  *(void *)uint64_t v23 = 0;
  return *(void *)v23;
}

char *sub_1280FA4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_15B9320(v7, v9, a3);
    if ((v6 & 1) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_18;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_3;
  }
  char v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0) {
    goto LABEL_18;
  }
LABEL_12:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 40);
  *char v4 = 26;
  unsigned int v11 = *(_DWORD *)(v10 + 44);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  char v4 = sub_16C82D8(v10, v12, a3);
LABEL_18:
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1281150(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_12;
  }
  if (v2)
  {
    unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    uint64_t v7 = sub_15B956C(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    uint64_t v8 = sub_16C83C8(*(void *)(a1 + 40));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v3 += v12;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_128126C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) == 0) {
    goto LABEL_25;
  }
  if (v4)
  {
    uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v6 = (std::string **)(a1 + 24);
    uint64_t v7 = *(void *)(a1 + 8);
    uint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
    if (v7) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v9 = *(std::string **)(a1 + 32);
  if (!v9)
  {
    uint64_t v10 = *(void *)(a1 + 8);
    unint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      unint64_t v11 = (void *)*v11;
    }
    uint64_t v9 = (std::string *)sub_15C1EF4((uint64_t)v11);
    *(void *)(a1 + 32) = v9;
  }
  if (*(void *)(a2 + 32)) {
    uint64_t v12 = *(uint64_t (****)())(a2 + 32);
  }
  else {
    uint64_t v12 = &off_253F4C8;
  }
  sub_15B9698(v9, (uint64_t)v12);
  if ((v4 & 4) != 0)
  {
LABEL_17:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v13 = *(void **)(a1 + 40);
    if (!v13)
    {
      uint64_t v14 = *(void *)(a1 + 8);
      unint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        unint64_t v15 = (void *)*v15;
      }
      uint64_t v13 = sub_1786B58((uint64_t)v15);
      *(void *)(a1 + 40) = v13;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v16 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v16 = &off_2544B60;
    }
    sub_16C1200((uint64_t)v13, (uint64_t)v16);
  }
LABEL_25:
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_12813B0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_15B9824(*(void *)(a1 + 32));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) == 0) {
    return 1;
  }
  uint64_t result = sub_16C8468(*(void *)(a1 + 40));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_12813FC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.Address");
}

uint64_t sub_128140C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_252FF30)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_1280BBC(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12814C4(uint64_t a1)
{
  sub_128140C(a1);

  operator delete();
}

char *sub_12814FC(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v29 = a2;
  if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
    return v29;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v29 + 1;
    unsigned int v8 = *v29;
    if (*v29 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v29, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v29 + 2;
      }
    }
    unint64_t v29 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v16 = *(void **)(a1 + 24);
      if (!v16)
      {
        uint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v17 = (void *)*v17;
        }
        uint64_t v16 = sub_1284EF0((uint64_t)v17);
        *(void *)(a1 + 24) = v16;
        uint64_t v7 = v29;
      }
      unint64_t v15 = (char *)sub_12817AC(a3, (uint64_t)v16, (unsigned __int8 *)v7);
LABEL_27:
      unint64_t v29 = v15;
      if (!v15) {
        return 0;
      }
      goto LABEL_42;
    }
    if (v11 != 2) {
      break;
    }
    if (v8 != 16) {
      goto LABEL_14;
    }
    uint64_t v18 = v7 + 1;
    unint64_t v19 = *v7;
    if (*v7 < 0)
    {
      int v20 = *v18;
      int v21 = v19 + (v20 << 7);
      unint64_t v19 = (v21 - 128);
      if (v20 < 0)
      {
        unint64_t v29 = (char *)sub_188C138((uint64_t)v7, (v21 - 128));
        if (!v29) {
          return 0;
        }
        unint64_t v19 = v25;
        goto LABEL_34;
      }
      uint64_t v18 = v7 + 2;
    }
    unint64_t v29 = v18;
LABEL_34:
    if (v19 > 3)
    {
      if (*v6) {
        BOOL v27 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        BOOL v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      int v28 = 2;
      goto LABEL_54;
    }
    *(_DWORD *)(a1 + 16) |= 4u;
    *(_DWORD *)(a1 + 36) = v19;
LABEL_42:
    if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
      return v29;
    }
  }
  if (v11 == 1 && v8 == 8)
  {
    unint64_t v22 = v7 + 1;
    unint64_t v19 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_39;
    }
    int v23 = *v22;
    int v24 = v19 + (v23 << 7);
    unint64_t v19 = (v24 - 128);
    if (v23 < 0)
    {
      unint64_t v29 = (char *)sub_188C138((uint64_t)v7, (v24 - 128));
      if (!v29) {
        return 0;
      }
      unint64_t v19 = v26;
    }
    else
    {
      unint64_t v22 = v7 + 2;
LABEL_39:
      unint64_t v29 = v22;
    }
    if (v19 <= 9)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v19;
      goto LABEL_42;
    }
    if (*v6) {
      BOOL v27 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else {
      BOOL v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
    }
    int v28 = 1;
LABEL_54:
    sub_188C020(v28, v19, v27);
    goto LABEL_42;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v29;
    }
    unint64_t v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_27;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v29;
  }
  return 0;
}

uint64_t sub_12817AC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1280D8C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_128183C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 36);
    *int v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 24);
    *int v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      unint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      unint64_t v15 = v4 + 2;
    }
    int v4 = sub_1280FA4(v13, (unint64_t)v15, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    unint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    unint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_1281A44(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t result = 0;
    goto LABEL_16;
  }
  if (v2)
  {
    uint64_t v4 = sub_1281150(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_11:
  if ((v2 & 4) != 0)
  {
    int v7 = *(_DWORD *)(a1 + 36);
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v8;
  }
LABEL_16:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    result += v11;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void *sub_1281B48@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.PersonalizedMaps");
}

uint64_t sub_1281B58(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = (uint64_t)sub_145A858(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

void *sub_1281BE8(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = &off_24A1E28;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = a2;
  a1[7] = 0;
  a1[8] = 0;
  a1[9] = &qword_2550250;
  a1[10] = &qword_2550250;
  a1[11] = &qword_2550250;
  a1[12] = &qword_2550250;
  a1[13] = &qword_2550250;
  a1[14] = &qword_2550250;
  a1[15] = 0;
  a1[16] = 0;
  a1[17] = 0;
  return a1;
}

void sub_1281C70(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1281CA0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1281D38((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_12C2934(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_1281D38(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 72);
  uint64_t v2 = (void ***)(a1 + 72);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(uint64_t **)(a1 + 88) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 88));
  }
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 96));
  }
  if (*(uint64_t **)(a1 + 104) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 104));
  }
  uint64_t result = (void ***)(a1 + 112);
  if (*(uint64_t **)(a1 + 112) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_252FF58)
  {
    uint64_t v5 = *(void *)(a1 + 120);
    if (v5)
    {
      sub_125D18C(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 128);
    if (v6)
    {
      sub_15B3DFC(v6);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 136);
    if (result)
    {
      sub_15C4DB0();
      operator delete();
    }
  }
  return result;
}

void sub_1281E60(void *a1)
{
  sub_1281CA0(a1);

  operator delete();
}

uint64_t sub_1281E98(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_125D790(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v6) {
    goto LABEL_15;
  }
  if (v6)
  {
    unint64_t v9 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)unint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_25;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_25;
      }
    }
LABEL_8:
    if ((v6 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_29:
    unint64_t v11 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v11 + 23) < 0)
    {
      **(unsigned char **)unint64_t v11 = 0;
      *(void *)(v11 + 8) = 0;
      if ((v6 & 8) != 0) {
        goto LABEL_33;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v11 = 0;
      *(unsigned char *)(v11 + 23) = 0;
      if ((v6 & 8) != 0) {
        goto LABEL_33;
      }
    }
LABEL_10:
    if ((v6 & 0x10) == 0) {
      goto LABEL_11;
    }
LABEL_37:
    unint64_t v13 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v13 + 23) < 0)
    {
      **(unsigned char **)unint64_t v13 = 0;
      *(void *)(v13 + 8) = 0;
      if ((v6 & 0x20) != 0) {
        goto LABEL_41;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v13 = 0;
      *(unsigned char *)(v13 + 23) = 0;
      if ((v6 & 0x20) != 0) {
        goto LABEL_41;
      }
    }
LABEL_12:
    if ((v6 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_45;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_8;
  }
LABEL_25:
  unint64_t v10 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v10 + 23) < 0)
  {
    **(unsigned char **)unint64_t v10 = 0;
    *(void *)(v10 + 8) = 0;
    if ((v6 & 4) != 0) {
      goto LABEL_29;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v10 = 0;
    *(unsigned char *)(v10 + 23) = 0;
    if ((v6 & 4) != 0) {
      goto LABEL_29;
    }
  }
LABEL_9:
  if ((v6 & 8) == 0) {
    goto LABEL_10;
  }
LABEL_33:
  unint64_t v12 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v12 + 23) < 0)
  {
    **(unsigned char **)unint64_t v12 = 0;
    *(void *)(v12 + 8) = 0;
    if ((v6 & 0x10) != 0) {
      goto LABEL_37;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v12 = 0;
    *(unsigned char *)(v12 + 23) = 0;
    if ((v6 & 0x10) != 0) {
      goto LABEL_37;
    }
  }
LABEL_11:
  if ((v6 & 0x20) == 0) {
    goto LABEL_12;
  }
LABEL_41:
  unint64_t v14 = *(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v14 + 23) < 0)
  {
    **(unsigned char **)unint64_t v14 = 0;
    *(void *)(v14 + 8) = 0;
    if ((v6 & 0x40) != 0) {
      goto LABEL_45;
    }
LABEL_13:
    if ((v6 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  *(unsigned char *)unint64_t v14 = 0;
  *(unsigned char *)(v14 + 23) = 0;
  if ((v6 & 0x40) == 0) {
    goto LABEL_13;
  }
LABEL_45:
  uint64_t result = sub_125D27C(*(void *)(a1 + 120));
  if ((v6 & 0x80) != 0) {
LABEL_14:
  }
    uint64_t result = sub_15B043C(*(void *)(a1 + 128));
LABEL_15:
  if ((v6 & 0x100) != 0) {
    uint64_t result = sub_15C4DEC(*(void *)(a1 + 136));
  }
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 32) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_1282090(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v35 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
    return *(void *)v35;
  }
  int v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v35 + 1);
    unsigned int v8 = **(unsigned char **)v35;
    if ((char)**(unsigned char **)v35 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v35, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v35 + 2);
      }
    }
    *(void *)unint64_t v35 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_66;
        }
        unint64_t v11 = (char *)(v7 - 1);
        while (1)
        {
          unint64_t v12 = (unsigned __int8 *)(v11 + 1);
          *(void *)unint64_t v35 = v11 + 1;
          unint64_t v13 = *(_DWORD **)(a1 + 64);
          if (v13 && (uint64_t v14 = *(int *)(a1 + 56), (int)v14 < *v13))
          {
            *(_DWORD *)(a1 + 56) = v14 + 1;
            uint64_t v15 = *(void *)&v13[2 * v14 + 2];
          }
          else
          {
            uint64_t v16 = sub_1283534(*(void *)(a1 + 48));
            uint64_t v15 = sub_188CDC8(a1 + 48, v16);
            unint64_t v12 = *(unsigned __int8 **)v35;
          }
          unint64_t v11 = sub_12798AC(a3, v15, v12);
          *(void *)unint64_t v35 = v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *v11 != 10) {
            goto LABEL_58;
          }
        }
      case 2u:
        if (v8 != 18) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v20 = *(void *)(a1 + 8);
        uint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
        if (v20) {
          uint64_t v21 = (uint64_t *)*v21;
        }
        unint64_t v22 = (void *)(a1 + 72);
        goto LABEL_56;
      case 3u:
        if (v8 != 26) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v23 = *(void *)(a1 + 8);
        uint64_t v21 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
        if (v23) {
          uint64_t v21 = (uint64_t *)*v21;
        }
        unint64_t v22 = (void *)(a1 + 80);
        goto LABEL_56;
      case 4u:
        if (v8 != 34) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v24 = *(void *)(a1 + 8);
        uint64_t v21 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
        if (v24) {
          uint64_t v21 = (uint64_t *)*v21;
        }
        unint64_t v22 = (void *)(a1 + 88);
        goto LABEL_56;
      case 5u:
        if (v8 != 42) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v25 = *(void *)(a1 + 8);
        uint64_t v21 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
        if (v25) {
          uint64_t v21 = (uint64_t *)*v21;
        }
        unint64_t v22 = (void *)(a1 + 96);
        goto LABEL_56;
      case 6u:
        if (v8 != 50) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 40) |= 0x40u;
        unint64_t v26 = *(void **)(a1 + 120);
        if (!v26)
        {
          BOOL v27 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            BOOL v27 = (void *)*v27;
          }
          unint64_t v26 = sub_12834B0((uint64_t)v27);
          *(void *)(a1 + 120) = v26;
          uint64_t v7 = *(unsigned __int8 **)v35;
        }
        uint64_t v19 = sub_127993C(a3, (uint64_t)v26, v7);
        goto LABEL_57;
      case 7u:
        if (v8 != 58) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v28 = *(void *)(a1 + 8);
        uint64_t v21 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
        if (v28) {
          uint64_t v21 = (uint64_t *)*v21;
        }
        unint64_t v22 = (void *)(a1 + 104);
        goto LABEL_56;
      case 8u:
        if (v8 != 66) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        uint64_t v29 = *(void *)(a1 + 8);
        uint64_t v21 = (uint64_t *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
        if (v29) {
          uint64_t v21 = (uint64_t *)*v21;
        }
        unint64_t v22 = (void *)(a1 + 112);
LABEL_56:
        uint64_t v30 = (std::string *)sub_1880F84(v22, v21);
        uint64_t v19 = (uint64_t)sub_188C244(v30, *(char **)v35, (uint64_t)a3);
        goto LABEL_57;
      case 9u:
        if (v8 != 74) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 40) |= 0x80u;
        uint64_t v31 = *(void *)(a1 + 128);
        if (!v31)
        {
          uint64_t v32 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v32 = (void *)*v32;
          }
          uint64_t v31 = sub_15C1CB4((uint64_t)v32);
          *(void *)(a1 + 128) = v31;
          uint64_t v7 = *(unsigned __int8 **)v35;
        }
        uint64_t v19 = (uint64_t)sub_11B3E48(a3, v31, v7);
        goto LABEL_57;
      default:
        if (v8 >> 3 == 201 && v8 == 74)
        {
          *(_DWORD *)(a1 + 40) |= 0x100u;
          uint64_t v17 = *(void *)(a1 + 136);
          if (!v17)
          {
            unint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v6) {
              unint64_t v18 = (void *)*v18;
            }
            uint64_t v17 = sub_15C6344((uint64_t)v18);
            *(void *)(a1 + 136) = v17;
            uint64_t v7 = *(unsigned __int8 **)v35;
          }
          uint64_t v19 = sub_1279B7C(a3, v17, v7);
          goto LABEL_57;
        }
LABEL_66:
        if (v8) {
          BOOL v33 = (v8 & 7) == 4;
        }
        else {
          BOOL v33 = 1;
        }
        if (!v33)
        {
          if (v8 - 800 > 0x31F)
          {
            if (*v6)
            {
              unint64_t v34 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              unint64_t v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v7 = *(unsigned __int8 **)v35;
            }
            uint64_t v19 = (uint64_t)sub_1885AC0(v8, v34, (char *)v7, a3);
          }
          else
          {
            uint64_t v19 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v8, (char *)v7, (uint64_t)&off_252FF58, (uint64_t *)(a1 + 8), a3);
          }
LABEL_57:
          *(void *)unint64_t v35 = v19;
          if (!v19) {
            return 0;
          }
LABEL_58:
          if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
            return *(void *)v35;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v35;
    }
  }
}

char *sub_1282528(uint64_t a1, char *a2, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_125E238(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 40);
  if (v11)
  {
    a2 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v11 & 2) == 0)
    {
LABEL_11:
      if ((v11 & 4) == 0) {
        goto LABEL_12;
      }
      goto LABEL_20;
    }
  }
  else if ((v11 & 2) == 0)
  {
    goto LABEL_11;
  }
  a2 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), a2);
  if ((v11 & 4) == 0)
  {
LABEL_12:
    if ((v11 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_21;
  }
LABEL_20:
  a2 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL), a2);
  if ((v11 & 8) == 0)
  {
LABEL_13:
    if ((v11 & 0x40) == 0) {
      goto LABEL_14;
    }
    goto LABEL_22;
  }
LABEL_21:
  a2 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), a2);
  if ((v11 & 0x40) == 0)
  {
LABEL_14:
    if ((v11 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_28;
  }
LABEL_22:
  if (*a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  uint64_t v12 = *(void *)(a1 + 120);
  *a2 = 50;
  unsigned int v13 = *(_DWORD *)(v12 + 20);
  a2[1] = v13;
  if (v13 > 0x7F) {
    uint64_t v14 = sub_188A9CC(v13, a2 + 1);
  }
  else {
    uint64_t v14 = a2 + 2;
  }
  a2 = sub_125D4A0(v12, v14, a3);
  if ((v11 & 0x10) == 0)
  {
LABEL_15:
    if ((v11 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_29;
  }
LABEL_28:
  a2 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL), a2);
  if ((v11 & 0x20) == 0)
  {
LABEL_16:
    if ((v11 & 0x80) == 0) {
      goto LABEL_36;
    }
    goto LABEL_30;
  }
LABEL_29:
  a2 = sub_117A0AC(a3, 8, (const void **)(*(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL), a2);
  if ((v11 & 0x80) == 0) {
    goto LABEL_36;
  }
LABEL_30:
  if (*a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  uint64_t v15 = *(void *)(a1 + 128);
  *a2 = 74;
  unsigned int v16 = *(_DWORD *)(v15 + 44);
  a2[1] = v16;
  if (v16 > 0x7F) {
    uint64_t v17 = sub_188A9CC(v16, a2 + 1);
  }
  else {
    uint64_t v17 = a2 + 2;
  }
  a2 = sub_15B43E4(v15, v17, a3);
LABEL_36:
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 100, 200, a2, a3);
  }
  if ((v11 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v18 = *(void *)(a1 + 136);
    *(_WORD *)a2 = 3274;
    unsigned int v19 = *(_DWORD *)(v18 + 20);
    a2[2] = v19;
    if (v19 > 0x7F) {
      uint64_t v20 = sub_188A9CC(v19, a2 + 2);
    }
    else {
      uint64_t v20 = a2 + 3;
    }
    a2 = sub_15C50E8(v18, (unint64_t)v20, a3);
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return a2;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    uint64_t v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    uint64_t v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if ((uint64_t)(*a3 - (void)a2) >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(a2, v24, (int)v25);
    a2 += v26;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v24, v25, a2);
}

uint64_t sub_12828A0(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_125E558(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v10) {
    goto LABEL_17;
  }
  if (v10)
  {
    unint64_t v15 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
    uint64_t v17 = *(void *)(v15 + 8);
    if ((v16 & 0x80u) == 0) {
      uint64_t v17 = v16;
    }
    v4 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 2) == 0)
    {
LABEL_10:
      if ((v10 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_27;
    }
  }
  else if ((v10 & 2) == 0)
  {
    goto LABEL_10;
  }
  unint64_t v18 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
  uint64_t v20 = *(void *)(v18 + 8);
  if ((v19 & 0x80u) == 0) {
    uint64_t v20 = v19;
  }
  v4 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 4) == 0)
  {
LABEL_11:
    if ((v10 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_30;
  }
LABEL_27:
  unint64_t v21 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v22 = *(unsigned __int8 *)(v21 + 23);
  uint64_t v23 = *(void *)(v21 + 8);
  if ((v22 & 0x80u) == 0) {
    uint64_t v23 = v22;
  }
  v4 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 8) == 0)
  {
LABEL_12:
    if ((v10 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_33;
  }
LABEL_30:
  unint64_t v24 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v25 = *(unsigned __int8 *)(v24 + 23);
  uint64_t v26 = *(void *)(v24 + 8);
  if ((v25 & 0x80u) == 0) {
    uint64_t v26 = v25;
  }
  v4 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 0x10) == 0)
  {
LABEL_13:
    if ((v10 & 0x20) == 0) {
      goto LABEL_14;
    }
LABEL_36:
    unint64_t v30 = *(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v31 = *(unsigned __int8 *)(v30 + 23);
    uint64_t v32 = *(void *)(v30 + 8);
    if ((v31 & 0x80u) == 0) {
      uint64_t v32 = v31;
    }
    v4 += v32 + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 0x40) == 0)
    {
LABEL_15:
      if ((v10 & 0x80) == 0) {
        goto LABEL_17;
      }
      goto LABEL_16;
    }
    goto LABEL_39;
  }
LABEL_33:
  unint64_t v27 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v28 = *(unsigned __int8 *)(v27 + 23);
  uint64_t v29 = *(void *)(v27 + 8);
  if ((v28 & 0x80u) == 0) {
    uint64_t v29 = v28;
  }
  v4 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 0x20) != 0) {
    goto LABEL_36;
  }
LABEL_14:
  if ((v10 & 0x40) == 0) {
    goto LABEL_15;
  }
LABEL_39:
  uint64_t v33 = sub_125D58C(*(void *)(a1 + 120));
  v4 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 0x80) != 0)
  {
LABEL_16:
    uint64_t v11 = sub_15B4924(*(void *)(a1 + 128));
    v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_17:
  if ((v10 & 0x100) != 0)
  {
    uint64_t v12 = sub_15C52D0(*(void *)(a1 + 136));
    v4 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v34 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v34 + 31) < 0) {
      uint64_t v35 = *(void *)(v34 + 16);
    }
    else {
      uint64_t v35 = *(unsigned __int8 *)(v34 + 31);
    }
    v4 += v35;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_1282BA8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C3500((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if (!(_BYTE)v9) {
    goto LABEL_13;
  }
  if (v9)
  {
    int v10 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v11 = *(void *)(a1 + 8);
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 72), v10, v12);
    if ((v9 & 2) == 0)
    {
LABEL_7:
      if ((v9 & 4) == 0) {
        goto LABEL_8;
      }
      goto LABEL_21;
    }
  }
  else if ((v9 & 2) == 0)
  {
    goto LABEL_7;
  }
  uint64_t v13 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 2u;
  uint64_t v14 = *(void *)(a1 + 8);
  unint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
  if (v14) {
    unint64_t v15 = (uint64_t *)*v15;
  }
  sub_1881DF4((std::string **)(a1 + 80), v13, v15);
  if ((v9 & 4) == 0)
  {
LABEL_8:
    if ((v9 & 8) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_21:
  uint64_t v16 = (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v17 = *(void *)(a1 + 8);
  unint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
  if (v17) {
    unint64_t v18 = (uint64_t *)*v18;
  }
  sub_1881DF4((std::string **)(a1 + 88), v16, v18);
  if ((v9 & 8) == 0)
  {
LABEL_9:
    if ((v9 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_24:
  uint64_t v19 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 8u;
  uint64_t v20 = *(void *)(a1 + 8);
  unint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
  if (v20) {
    unint64_t v21 = (uint64_t *)*v21;
  }
  sub_1881DF4((std::string **)(a1 + 96), v19, v21);
  if ((v9 & 0x10) == 0)
  {
LABEL_10:
    if ((v9 & 0x20) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_27:
  uint64_t v22 = (long long *)(*(void *)(a2 + 104) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 0x10u;
  uint64_t v23 = *(void *)(a1 + 8);
  unint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
  if (v23) {
    unint64_t v24 = (uint64_t *)*v24;
  }
  sub_1881DF4((std::string **)(a1 + 104), v22, v24);
  if ((v9 & 0x20) == 0)
  {
LABEL_11:
    if ((v9 & 0x40) == 0) {
      goto LABEL_12;
    }
    goto LABEL_33;
  }
LABEL_30:
  uint64_t v25 = (long long *)(*(void *)(a2 + 112) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 0x20u;
  uint64_t v26 = *(void *)(a1 + 8);
  unint64_t v27 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
  if (v26) {
    unint64_t v27 = (uint64_t *)*v27;
  }
  sub_1881DF4((std::string **)(a1 + 112), v25, v27);
  if ((v9 & 0x40) != 0)
  {
LABEL_33:
    *(_DWORD *)(a1 + 40) |= 0x40u;
    uint64_t v28 = *(std::string **)(a1 + 120);
    if (!v28)
    {
      uint64_t v29 = *(void *)(a1 + 8);
      unint64_t v30 = (void *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
      if (v29) {
        unint64_t v30 = (void *)*v30;
      }
      uint64_t v28 = (std::string *)sub_12834B0((uint64_t)v30);
      *(void *)(a1 + 120) = v28;
    }
    if (*(void *)(a2 + 120)) {
      uint64_t v31 = *(uint64_t (****)(uint64_t))(a2 + 120);
    }
    else {
      uint64_t v31 = &off_252F330;
    }
    sub_11EC100(v28, (uint64_t)v31);
    if ((v9 & 0x80) != 0) {
      goto LABEL_41;
    }
LABEL_13:
    if ((v9 & 0x100) == 0) {
      goto LABEL_57;
    }
    goto LABEL_49;
  }
LABEL_12:
  if ((v9 & 0x80) == 0) {
    goto LABEL_13;
  }
LABEL_41:
  *(_DWORD *)(a1 + 40) |= 0x80u;
  uint64_t v32 = *(void *)(a1 + 128);
  if (!v32)
  {
    uint64_t v33 = *(void *)(a1 + 8);
    unint64_t v34 = (void *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
    if (v33) {
      unint64_t v34 = (void *)*v34;
    }
    uint64_t v32 = sub_15C1CB4((uint64_t)v34);
    *(void *)(a1 + 128) = v32;
  }
  if (*(void *)(a2 + 128)) {
    uint64_t v35 = *(uint64_t (****)())(a2 + 128);
  }
  else {
    uint64_t v35 = &off_253F2E8;
  }
  sub_15B04F0(v32, (uint64_t)v35);
  if ((v9 & 0x100) != 0)
  {
LABEL_49:
    *(_DWORD *)(a1 + 40) |= 0x100u;
    int v36 = *(std::string **)(a1 + 136);
    if (!v36)
    {
      uint64_t v37 = *(void *)(a1 + 8);
      uint64_t v38 = (void *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
      if (v37) {
        uint64_t v38 = (void *)*v38;
      }
      int v36 = (std::string *)sub_15C6344((uint64_t)v38);
      *(void *)(a1 + 136) = v36;
    }
    if (*(void *)(a2 + 136)) {
      int v39 = *(uint64_t (****)())(a2 + 136);
    }
    else {
      int v39 = &off_253F8C0;
    }
    sub_121627C(v36, (uint64_t)v39);
  }
LABEL_57:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v40 = *(void *)(a2 + 8);
  if (v40)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v40 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1282ED0(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_125F5E8(*(void *)(*(void *)(a1 + 64) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    if ((*(unsigned char *)(a1 + 40) & 0x80) == 0) {
      return 1;
    }
    uint64_t result = sub_15B06D8(*(void *)(a1 + 128));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_1282F40@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.ProblemCollectionRequest");
}

uint64_t sub_1282F50(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  char v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1282FF0(uint64_t a1)
{
  sub_1282F50(a1);

  operator delete();
}

uint64_t sub_1283028(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1283070(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)unint64_t v24 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
    uint64_t v14 = (void *)sub_188C244(v17, *(char **)v24, (uint64_t)a3);
LABEL_24:
    *(void *)unint64_t v24 = v14;
    if (!v14) {
      goto LABEL_43;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 >> 3 == 1 && v8 == 8)
  {
    unint64_t v18 = v7 + 1;
    unint64_t v19 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v21 = v19 + (v20 << 7);
    unint64_t v19 = (v21 - 128);
    if (v20 < 0)
    {
      *(void *)unint64_t v24 = sub_188C138((uint64_t)v7, (v21 - 128));
      if (!*(void *)v24) {
        goto LABEL_43;
      }
      unint64_t v19 = v22;
    }
    else
    {
      unint64_t v18 = v7 + 2;
LABEL_29:
      *(void *)unint64_t v24 = v18;
    }
    if (sub_13E78E4(v19))
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v19;
    }
    else
    {
      if (*v6) {
        uint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v19, v23);
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v24;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_24;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_43:
  *(void *)unint64_t v24 = 0;
  return *(void *)v24;
}

unsigned char *sub_1283284(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_12833CC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_13;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    int v6 = *(_DWORD *)(a1 + 32);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v7;
  }
LABEL_13:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1283498()
{
  return 1;
}

void *sub_12834A0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.ProblemCollectionResponse");
}

void *sub_12834B0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24A0628;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

uint64_t sub_1283534(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24A06A8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(void *)(result + 32) = a1;
  *(_DWORD *)(result + 56) = 0;
  *(_DWORD *)(result + 60) = -1;
  return result;
}

double sub_12835E0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24A0728;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  return result;
}

double sub_1283668(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = &off_24A07A8;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = 0;
  *(void *)(v2 + 88) = 0;
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = 0;
  *(void *)(v2 + 112) = 0;
  *(void *)(v2 + 120) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  *(_OWORD *)(v2 + 189) = 0u;
  return result;
}

void *sub_1283738(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_24A0828;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = 0;
  result[6] = 0;
  return result;
}

void *sub_12837C0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_24A08A8;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  result[6] = &qword_2550250;
  return result;
}

void *sub_1283848(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_24A0928;
  result[2] = 0;
  result[3] = 0;
  return result;
}

double sub_12838C0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  return sub_12649C4(v2, a1, 0);
}

double sub_1283984(uint64_t a1)
{
  if (!a1)
  {
    sub_12C358C();
  }
  *(void *)uint64_t v3 = &off_24A0A28;
  *(void *)(v3 + 8) = a1;
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = &qword_2550250;
  *(void *)(v3 + 32) = &qword_2550250;
  *(void *)(v3 + 40) = &qword_2550250;
  *(void *)(v3 + 48) = &qword_2550250;
  *(void *)(v3 + 56) = &qword_2550250;
  *(void *)(v3 + 64) = &qword_2550250;
  *(void *)(v3 + 72) = &qword_2550250;
  *(void *)(v3 + 80) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  return result;
}

uint64_t sub_1283A10(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24A0AA8;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 23) = 0;
  return result;
}

double sub_1283A8C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24A0B28;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_DWORD *)(v2 + 64) = 0;
  return result;
}

void *sub_1283B1C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_24A0BA8;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

void *sub_1283BA0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = &off_24A0C28;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  return result;
}

uint64_t sub_1283C44(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24A0CA8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

void *sub_1283CE8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_24A0D28;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[7] = 0;
  result[8] = 0;
  result[6] = &qword_2550250;
  return result;
}

void *sub_1283D90(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24A0DA8;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = 0;
  return result;
}

void *sub_1283E18(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24A0E28;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

void *sub_1283E94(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24A0EA8;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  return result;
}

void *sub_1283F1C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24A0F28;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_1283F94(uint64_t a1)
{
  if (!a1)
  {
    sub_12C3600();
  }

  return sub_126DBDC(v3, a1, 0);
}

uint64_t sub_1283FF0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24A1028;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(void *)(result + 40) = &qword_2550250;
  *(_DWORD *)(result + 48) = 0;
  *(unsigned char *)(result + 52) = 0;
  return result;
}

void *sub_1284080(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A10A8;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

void *sub_12840FC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24A1128;
  result[2] = 0;
  *(void *)((char *)result + 22) = 0;
  return result;
}

uint64_t sub_1284178(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24A11A8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(void *)(result + 56) = &qword_2550250;
  *(void *)(result + 72) = 0;
  *(void *)(result + 80) = 0;
  *(void *)(result + 64) = 0;
  *(unsigned char *)(result + 88) = 0;
  return result;
}

double sub_1284228(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24A1228;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(void *)(v2 + 64) = 0;
  return result;
}

uint64_t sub_12842B8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24A12A8;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_1284334(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_24A1328;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

void *sub_12843D0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A13A8;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_1284448(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24A1428;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(_OWORD *)(result + 60) = 0u;
  return result;
}

double sub_12844E8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24A14A8;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  *(void *)(v2 + 32) = &qword_2550250;
  *(void *)(v2 + 40) = &qword_2550250;
  *(void *)(v2 + 48) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_DWORD *)(v2 + 88) = 1;
  return result;
}

double sub_1284584(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = &off_24A1528;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = 0;
  *(void *)(v2 + 88) = 0;
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = 0;
  *(void *)(v2 + 112) = 0;
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = 0;
  *(void *)(v2 + 136) = 0;
  *(void *)(v2 + 144) = a1;
  *(void *)(v2 + 152) = 0;
  *(void *)(v2 + 160) = 0;
  *(void *)(v2 + 168) = &qword_2550250;
  *(void *)(v2 + 176) = &qword_2550250;
  *(void *)(v2 + 184) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 192) = 0u;
  *(_OWORD *)(v2 + 208) = 0u;
  *(_DWORD *)(v2 + 224) = 0;
  return result;
}

void *sub_1284668(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_24A15A8;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  result[6] = &qword_2550250;
  result[7] = 0;
  result[8] = 0;
  return result;
}

uint64_t sub_12846F4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A1628;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

void *sub_1284784(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_24A16A8;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[4] = a1;
  result[5] = 0;
  return result;
}

uint64_t sub_128481C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24A1728;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_1284898(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24A17A8;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = xmmword_213B3E0;
  return result;
}

uint64_t sub_1284918(uint64_t a1)
{
  if (!a1)
  {
    sub_12C366C();
  }

  return sub_1278EE0(v3, a1, 0);
}

uint64_t sub_1284974(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24A18A8;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(_DWORD *)(result + 32) = 0;
  *(unsigned char *)(result + 36) = 0;
  return result;
}

double sub_1284A00(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = &off_24A1928;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 81) = 0u;
  return result;
}

uint64_t sub_1284AB4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24A19A8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_1284B50(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24A1A28;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = 0;
  *(void *)(result + 96) = &qword_2550250;
  *(void *)(result + 104) = &qword_2550250;
  *(void *)(result + 120) = 0;
  *(void *)(result + 128) = 0;
  *(void *)(result + 112) = 0;
  *(_DWORD *)(result + 136) = 0;
  return result;
}

void *sub_1284C14(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24A1AA8;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

void *sub_1284C98(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24A1B28;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

uint64_t sub_1284D1C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24A1BA8;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_1284DA4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = &off_24A1C28;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = &qword_2550250;
  *(void *)(v2 + 56) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(void *)(v2 + 96) = 0;
  *(_DWORD *)(v2 + 104) = 1;
  return result;
}

double sub_1284E5C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24A1CA8;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_DWORD *)(v2 + 64) = 1;
  return result;
}

void *sub_1284EF0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_24A1D28;
  result[2] = 0;
  result[4] = 0;
  result[5] = 0;
  result[3] = &qword_2550250;
  return result;
}

void *sub_1284F78(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_24A1DA8;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

void *sub_1284FF4(uint64_t a1)
{
  if (!a1)
  {
    sub_12C36D8();
  }

  return sub_1281BE8(v3, a1, 0);
}

uint64_t sub_1285050(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24A1EA8;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

BOOL sub_12850D8(unsigned int a1)
{
  return a1 < 8;
}

uint64_t sub_12850E4(unsigned int a1)
{
  return (a1 < 0x20) & (0xFFF03FFF >> a1);
}

BOOL sub_12850FC(unsigned int a1)
{
  return a1 < 0x1F;
}

void *sub_1285108(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_128517C(void *a1)
{
  sub_1285108(a1);

  operator delete();
}

uint64_t sub_12851B4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_12851DC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v31 + 1;
    unsigned int v9 = *v31;
    if (*v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v31 + 2;
      }
    }
    uint64_t v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      uint64_t v16 = v8 + 1;
      int v17 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_26;
      }
      int v18 = *v16;
      int v17 = v17 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        uint64_t v16 = v8 + 2;
LABEL_26:
        uint64_t v31 = v16;
        *(_DWORD *)(a1 + 32) = v17;
        goto LABEL_36;
      }
      uint64_t v25 = (char *)sub_188C0D0((uint64_t)v8, v17);
      uint64_t v31 = v25;
      *(_DWORD *)(a1 + 32) = v26;
      if (!v25) {
        goto LABEL_47;
      }
      goto LABEL_36;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    unint64_t v19 = v8 + 1;
    int v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    int v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      unint64_t v19 = v8 + 2;
LABEL_31:
      uint64_t v31 = v19;
      *(_DWORD *)(a1 + 28) = v20;
      goto LABEL_36;
    }
    unint64_t v27 = (char *)sub_188C0D0((uint64_t)v8, v20);
    uint64_t v31 = v27;
    *(_DWORD *)(a1 + 28) = v28;
    if (!v27) {
      goto LABEL_47;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 8)
  {
    v5 |= 1u;
    unint64_t v22 = v8 + 1;
    int v23 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v24 = *v22;
    int v23 = v23 + (v24 << 7) - 128;
    if ((v24 & 0x80000000) == 0)
    {
      unint64_t v22 = v8 + 2;
LABEL_35:
      uint64_t v31 = v22;
      *(_DWORD *)(a1 + 24) = v23;
      goto LABEL_36;
    }
    uint64_t v29 = (char *)sub_188C0D0((uint64_t)v8, v23);
    uint64_t v31 = v29;
    *(_DWORD *)(a1 + 24) = v30;
    if (!v29) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v31;
    }
    uint64_t v31 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v31) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  uint64_t v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v31;
}

unsigned char *sub_1285430(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 32);
    *uint64_t v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    unint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    unint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_1285650(_DWORD *a1)
{
  int v2 = a1[4];
  if (v2)
  {
    uint64_t result = ((9 * (__clz(a1[6] | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t result = 0;
  if ((v2 & 2) != 0) {
LABEL_5:
  }
    result += ((9 * (__clz(a1[7] | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_6:
  if ((v2 & 4) != 0) {
    result += ((9 * (__clz(a1[8] | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  return result;
}

uint64_t sub_12856E0(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 16) & 7) != 0)
  {
    uint64_t result = sub_1285650((_DWORD *)a1);
  }
  else
  {
    uint32x2_t v2 = vshr_n_u32((uint32x2_t)vmla_s32((int32x2_t)0x4900000049, (int32x2_t)veor_s8((int8x8_t)vclz_s32((int32x2_t)(*(void *)(a1 + 28) | 0x100000001)), (int8x8_t)0x1F0000001FLL), (int32x2_t)0x900000009), 6uLL);
    uint64_t result = v2.i32[0] + ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + v2.i32[1] + 3;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

BOOL sub_128579C(uint64_t a1)
{
  return (~*(_DWORD *)(a1 + 16) & 7) == 0;
}

void *sub_12857B0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Problem.VisibleTileSet.VisibleTileKey");
}

void *sub_12857C0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C3744(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1285840(void *a1)
{
  sub_12857C0(a1);

  operator delete();
}

uint64_t sub_1285878(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_12851B4(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if ((*(unsigned char *)(v1 + 16) & 3) != 0) {
    *(void *)(v1 + 48) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_1285908(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = v33 + 1;
    unsigned int v9 = *v33;
    if (*v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v33 + 2;
      }
    }
    uint64_t v33 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 == 26)
      {
        uint64_t v16 = v8 - 1;
        while (1)
        {
          int v17 = (unsigned __int8 *)(v16 + 1);
          uint64_t v33 = v16 + 1;
          unint64_t v18 = *(_DWORD **)(a1 + 40);
          if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
          {
            *(_DWORD *)(a1 + 32) = v19 + 1;
            uint64_t v20 = *(void *)&v18[2 * v19 + 2];
          }
          else
          {
            uint64_t v21 = sub_128DAF0(*(void *)(a1 + 24));
            uint64_t v20 = sub_188CDC8(a1 + 24, v21);
            int v17 = (unsigned __int8 *)v33;
          }
          uint64_t v16 = sub_1285BD8(a3, v20, v17);
          uint64_t v33 = v16;
          if (!v16) {
            goto LABEL_56;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
            goto LABEL_43;
          }
        }
      }
      goto LABEL_14;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    unint64_t v22 = v8 + 1;
    int v23 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_36;
    }
    int v24 = *v22;
    int v23 = v23 + (v24 << 7) - 128;
    if ((v24 & 0x80000000) == 0)
    {
      unint64_t v22 = v8 + 2;
LABEL_36:
      uint64_t v33 = v22;
      *(_DWORD *)(a1 + 52) = v23;
      goto LABEL_43;
    }
    uint64_t v29 = (char *)sub_188C0D0((uint64_t)v8, v23);
    uint64_t v33 = v29;
    *(_DWORD *)(a1 + 52) = v30;
    if (!v29) {
      goto LABEL_56;
    }
LABEL_43:
    if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 8)
  {
    uint64_t v25 = v8 + 1;
    unint64_t v26 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_40;
    }
    int v27 = *v25;
    int v28 = v26 + (v27 << 7);
    unint64_t v26 = (v28 - 128);
    if (v27 < 0)
    {
      uint64_t v33 = (char *)sub_188C138((uint64_t)v8, (v28 - 128));
      if (!v33) {
        goto LABEL_56;
      }
      unint64_t v26 = v31;
    }
    else
    {
      uint64_t v25 = v8 + 2;
LABEL_40:
      uint64_t v33 = v25;
    }
    if (sub_1271AEC(v26))
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_DWORD *)(a1 + 48) = v26;
    }
    else
    {
      if (*v7) {
        uint64_t v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v26, v32);
    }
    goto LABEL_43;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      unsigned int v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v8 = v33;
    }
    uint64_t v33 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v33) {
      goto LABEL_56;
    }
    goto LABEL_43;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_56:
  uint64_t v33 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v33;
}

char *sub_1285BD8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12851DC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1285C68(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 48);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 52);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        int v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        int v17 = v4 + 2;
      }
      uint64_t v4 = sub_1285430(v15, (unint64_t)v17, a3);
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_1285EA8(_DWORD *a1)
{
  int v1 = a1[4];
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      return v2;
    }
    goto LABEL_6;
  }
  int v3 = a1[12];
  if (v3 < 0)
  {
    uint64_t v2 = 11;
    if ((v1 & 2) == 0) {
      return v2;
    }
    goto LABEL_6;
  }
  uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0) {
LABEL_6:
  }
    v2 += ((9 * (__clz(a1[13] | 1) ^ 0x1F) + 73) >> 6) + 1;
  return v2;
}

uint64_t sub_1285F1C(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 16) & 3) != 0)
  {
    uint64_t v6 = sub_1285EA8((_DWORD *)a1);
  }
  else
  {
    uint64_t v2 = 12;
    int v3 = *(_DWORD *)(a1 + 48);
    BOOL v4 = v3 >= 0;
    uint64_t v5 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v4) {
      uint64_t v2 = v5;
    }
    uint64_t v6 = v2 + ((9 * (__clz(*(_DWORD *)(a1 + 52) | 1) ^ 0x1F) + 73) >> 6);
  }
  uint64_t v7 = *(int *)(a1 + 32);
  uint64_t v8 = v6 + v7;
  uint64_t v9 = *(void *)(a1 + 40);
  if (v9) {
    unsigned int v10 = (uint64_t *)(v9 + 8);
  }
  else {
    unsigned int v10 = 0;
  }
  if (v7)
  {
    uint64_t v11 = 8 * v7;
    do
    {
      uint64_t v12 = *v10++;
      uint64_t v13 = sub_12856E0(v12);
      v8 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      v11 -= 8;
    }
    while (v11);
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v8 += v17;
  }
  *(_DWORD *)(a1 + 20) = v8;
  return v8;
}

std::string *sub_128602C(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_12C3AC4((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9) {
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    }
    if ((v9 & 2) != 0) {
      HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_128612C(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 16) & 3) != 0) {
    return 0;
  }
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  do
  {
    BOOL result = (int)v1 < 1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v4 = *(void *)(v2 + 8 * v1--);
  }
  while ((~*(_DWORD *)(v4 + 16) & 7) == 0);
  return result;
}

void *sub_1286174@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Problem.VisibleTileSet");
}

uint64_t sub_1286184(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1286250(uint64_t a1)
{
  sub_1286184(a1);

  operator delete();
}

uint64_t sub_1286288(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0) {
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    goto LABEL_17;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  *(unsigned char *)unint64_t v3 = 0;
  *(unsigned char *)(v3 + 23) = 0;
  if ((v1 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_17:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(unsigned char *)(result + 40) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1286344(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v26 + 1);
    unsigned int v9 = **(unsigned char **)v26;
    if ((char)**(unsigned char **)v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v26 + 2);
      }
    }
    *(void *)unint64_t v26 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_27;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 24);
        goto LABEL_21;
      case 2u:
        if (v9 != 18) {
          goto LABEL_27;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 32);
        goto LABEL_21;
      case 3u:
        if (v9 != 26) {
          goto LABEL_27;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 40);
LABEL_21:
        uint64_t v17 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v18 = (void *)sub_188C244(v17, *(char **)v26, (uint64_t)a3);
        goto LABEL_34;
      case 4u:
        if (v9 != 32) {
          goto LABEL_27;
        }
        v5 |= 8u;
        uint64_t v19 = v8 + 1;
        uint64_t v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_26;
        }
        int v21 = *v19;
        uint64_t v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v24 = sub_188C138((uint64_t)v8, v20);
          *(void *)unint64_t v26 = v24;
          *(unsigned char *)(a1 + 48) = v25 != 0;
          if (!v24) {
            goto LABEL_42;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_26:
          *(void *)unint64_t v26 = v19;
          *(unsigned char *)(a1 + 48) = v20 != 0;
        }
        goto LABEL_35;
      default:
LABEL_27:
        if (v9) {
          BOOL v22 = (v9 & 7) == 4;
        }
        else {
          BOOL v22 = 1;
        }
        if (!v22)
        {
          if (*v7)
          {
            uint64_t v23 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v26;
          }
          uint64_t v18 = sub_1885AC0(v9, v23, v8, a3);
LABEL_34:
          *(void *)unint64_t v26 = v18;
          if (!v18) {
            goto LABEL_42;
          }
LABEL_35:
          if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_42:
        }
          *(void *)unint64_t v26 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v26;
    }
  }
}

unsigned char *sub_12865D8(uint64_t a1, unsigned char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0) {
    goto LABEL_12;
  }
LABEL_9:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v7 = *(unsigned char *)(a1 + 48);
  *unint64_t v4 = 32;
  v4[1] = v7;
  v4 += 2;
LABEL_12:
  uint64_t v8 = *(void *)(a1 + 8);
  if ((v8 & 1) == 0) {
    return v4;
  }
  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v10 + 31) < 0)
  {
    unsigned int v11 = *(void **)(v10 + 8);
    uint64_t v12 = *(void *)(v10 + 16);
  }
  else
  {
    unsigned int v11 = (void *)(v10 + 8);
    LODWORD(v12) = *(unsigned __int8 *)(v10 + 31);
  }
  if (*a3 - (void)v4 >= (int)v12)
  {
    uint64_t v13 = (int)v12;
    memcpy(v4, v11, (int)v12);
    v4 += v13;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v11, v12, v4);
}

uint64_t sub_128672C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v2 = 0;
  }
  if ((v1 & 0xE) != 0)
  {
    if ((v1 & 2) != 0)
    {
      unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
      uint64_t v8 = *(void *)(v6 + 8);
      if ((v7 & 0x80u) == 0) {
        uint64_t v8 = v7;
      }
      v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v1 & 4) != 0)
    {
      unint64_t v9 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v1 & 8) != 0) {
      v2 += 2;
    }
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_128684C(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      unint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_18;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      v3[2].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 48);
      goto LABEL_7;
    }
LABEL_18:
    uint64_t v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v13, v15);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_128697C(uint64_t a1)
{
  return *(_DWORD *)(a1 + 16) & 1;
}

void *sub_1286988@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Problem.CorrectedField");
}

void *sub_1286998(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1286A0C(void *a1)
{
  sub_1286998(a1);

  operator delete();
}

uint64_t sub_1286A44(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0xF) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1286A68(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v34 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v34 + 1;
    unsigned int v9 = *v34;
    if (*v34 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v34, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v34 + 2;
      }
    }
    unint64_t v34 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_29;
        }
        v5 |= 1u;
        uint64_t v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          unint64_t v34 = v12;
          *(_DWORD *)(a1 + 24) = v13;
          goto LABEL_36;
        }
        unint64_t v26 = (char *)sub_188C0D0((uint64_t)v8, v13);
        unint64_t v34 = v26;
        *(_DWORD *)(a1 + 24) = v27;
        if (v26) {
          goto LABEL_36;
        }
        goto LABEL_49;
      case 2u:
        if (v9 != 16) {
          goto LABEL_29;
        }
        v5 |= 2u;
        uint64_t v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          int v28 = (char *)sub_188C0D0((uint64_t)v8, v16);
          unint64_t v34 = v28;
          *(_DWORD *)(a1 + 28) = v29;
          if (!v28) {
            goto LABEL_49;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_18:
          unint64_t v34 = v15;
          *(_DWORD *)(a1 + 28) = v16;
        }
        goto LABEL_36;
      case 3u:
        if (v9 != 24) {
          goto LABEL_29;
        }
        v5 |= 4u;
        uint64_t v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          int v30 = (char *)sub_188C0D0((uint64_t)v8, v19);
          unint64_t v34 = v30;
          *(_DWORD *)(a1 + 32) = v31;
          if (!v30) {
            goto LABEL_49;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          unint64_t v34 = v18;
          *(_DWORD *)(a1 + 32) = v19;
        }
        goto LABEL_36;
      case 4u:
        if (v9 != 32) {
          goto LABEL_29;
        }
        v5 |= 8u;
        int v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v32 = (char *)sub_188C0D0((uint64_t)v8, v22);
          unint64_t v34 = v32;
          *(_DWORD *)(a1 + 36) = v33;
          if (!v32) {
            goto LABEL_49;
          }
        }
        else
        {
          int v21 = v8 + 2;
LABEL_28:
          unint64_t v34 = v21;
          *(_DWORD *)(a1 + 36) = v22;
        }
        goto LABEL_36;
      default:
LABEL_29:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            uint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v34;
          }
          unint64_t v34 = (char *)sub_1885AC0(v9, v25, v8, a3);
          if (!v34) {
            goto LABEL_49;
          }
LABEL_36:
          if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_49:
        }
          unint64_t v34 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v34;
    }
  }
}

unsigned char *sub_1286D40(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    *int v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 32);
    *int v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 36);
    *int v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_1286FDC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_11;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) == 0)
  {
    if ((v1 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 8) != 0) {
LABEL_10:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_11:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_12870D8()
{
  return 1;
}

void *sub_12870E0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Problem.FeatureHandle");
}

uint64_t sub_12870F0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_16;
    }
  }
  else if (v4)
  {
    goto LABEL_16;
  }
  unint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if ((uint64_t (***)())a1 != &off_2530010 && *(void *)(a1 + 56))
  {
    sub_15B0994();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_16:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1287200(uint64_t a1)
{
  sub_12870F0(a1);

  operator delete();
}

unsigned char *sub_1287238(unsigned char *result)
{
  int v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_20:
    unint64_t v6 = *((void *)result + 4) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_24;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_24;
      }
    }
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_28;
  }
  unint64_t v5 = *((void *)result + 3) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_20;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_20;
    }
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_24:
  unint64_t v7 = *((void *)result + 5) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v7 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    if ((v2 & 8) != 0) {
      goto LABEL_28;
    }
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  **(unsigned char **)unint64_t v7 = 0;
  *(void *)(v7 + 8) = 0;
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_28:
  unint64_t v8 = *((void *)result + 6) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v8 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v8 = 0;
    *(unsigned char *)(v8 + 23) = 0;
    if ((v2 & 0x10) == 0) {
      goto LABEL_8;
    }
LABEL_7:
    uint64_t result = sub_15B09D0(*((void *)result + 7));
    goto LABEL_8;
  }
  **(unsigned char **)unint64_t v8 = 0;
  *(void *)(v8 + 8) = 0;
  if ((v2 & 0x10) != 0) {
    goto LABEL_7;
  }
LABEL_8:
  if ((v2 & 0xE0) != 0)
  {
    *((_DWORD *)v1 + 18) = 0;
    *((void *)v1 + 8) = 0;
  }
  if ((v2 & 0x700) != 0)
  {
    *(void *)(v1 + 76) = 0;
    *(void *)(v1 + 84) = 0x100000000;
  }
  char v4 = v1[8];
  uint64_t v3 = v1 + 8;
  *((_DWORD *)v3 + 2) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_1287394(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v55 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v55, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (unsigned __int8 *)(*(void *)v55 + 1);
    unsigned int v9 = **(unsigned char **)v55;
    if ((char)**(unsigned char **)v55 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v55, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (unsigned __int8 *)(*(void *)v55 + 2);
      }
    }
    *(void *)uint64_t v55 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_69;
        }
        unsigned int v12 = (char *)(v8 + 1);
        unint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          *(void *)uint64_t v55 = sub_188C138((uint64_t)v8, (v15 - 128));
          if (!*(void *)v55) {
            goto LABEL_100;
          }
          unint64_t v13 = v43;
        }
        else
        {
          unsigned int v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)uint64_t v55 = v12;
        }
        if ((v13 - 1) <= 2)
        {
          *(_DWORD *)(a1 + 16) |= 0x400u;
          *(_DWORD *)(a1 + 88) = v13;
          goto LABEL_62;
        }
        if (*v7) {
          uint64_t v53 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v53 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v54 = 1;
        goto LABEL_94;
      case 2u:
        if (v9 != 16) {
          goto LABEL_69;
        }
        v5 |= 0x20u;
        unsigned int v16 = (char *)(v8 + 1);
        int v17 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v18 = *v16;
        int v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v44 = sub_188C0D0((uint64_t)v8, v17);
          *(void *)uint64_t v55 = v44;
          *(_DWORD *)(a1 + 64) = v45;
          if (!v44) {
            goto LABEL_100;
          }
        }
        else
        {
          unsigned int v16 = (char *)(v8 + 2);
LABEL_20:
          *(void *)uint64_t v55 = v16;
          *(_DWORD *)(a1 + 64) = v17;
        }
        goto LABEL_62;
      case 3u:
        if (v9 != 26) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v19 = *(void *)(a1 + 8);
        int v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          int v20 = (uint64_t *)*v20;
        }
        unint64_t v21 = (void *)(a1 + 24);
        goto LABEL_60;
      case 4u:
        if (v9 != 32) {
          goto LABEL_69;
        }
        v5 |= 0x40u;
        int v22 = (char *)(v8 + 1);
        int v23 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_29;
        }
        int v24 = *v22;
        int v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v46 = sub_188C0D0((uint64_t)v8, v23);
          *(void *)uint64_t v55 = v46;
          *(_DWORD *)(a1 + 68) = v47;
          if (!v46) {
            goto LABEL_100;
          }
        }
        else
        {
          int v22 = (char *)(v8 + 2);
LABEL_29:
          *(void *)uint64_t v55 = v22;
          *(_DWORD *)(a1 + 68) = v23;
        }
        goto LABEL_62;
      case 5u:
        if (v9 != 42) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v25 = *(void *)(a1 + 56);
        if (!v25)
        {
          unint64_t v26 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v26 = (void *)*v26;
          }
          uint64_t v25 = sub_15C1918((uint64_t)v26);
          *(void *)(a1 + 56) = v25;
          unint64_t v8 = *(unsigned __int8 **)v55;
        }
        int v27 = sub_1198F14(a3, v25, v8);
        goto LABEL_61;
      case 7u:
        if (v9 != 56) {
          goto LABEL_69;
        }
        v5 |= 0x80u;
        int v28 = (char *)(v8 + 1);
        int v29 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_40;
        }
        int v30 = *v28;
        int v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          uint64_t v48 = sub_188C0D0((uint64_t)v8, v29);
          *(void *)uint64_t v55 = v48;
          *(_DWORD *)(a1 + 72) = v49;
          if (!v48) {
            goto LABEL_100;
          }
        }
        else
        {
          int v28 = (char *)(v8 + 2);
LABEL_40:
          *(void *)uint64_t v55 = v28;
          *(_DWORD *)(a1 + 72) = v29;
        }
        goto LABEL_62;
      case 8u:
        if (v9 != 66) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v31 = *(void *)(a1 + 8);
        int v20 = (uint64_t *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
        if (v31) {
          int v20 = (uint64_t *)*v20;
        }
        unint64_t v21 = (void *)(a1 + 32);
        goto LABEL_60;
      case 9u:
        if (v9 != 72) {
          goto LABEL_69;
        }
        uint64_t v32 = (char *)(v8 + 1);
        unint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_49;
        }
        int v33 = *v32;
        int v34 = v13 + (v33 << 7);
        unint64_t v13 = (v34 - 128);
        if (v33 < 0)
        {
          *(void *)uint64_t v55 = sub_188C138((uint64_t)v8, (v34 - 128));
          if (!*(void *)v55) {
            goto LABEL_100;
          }
          unint64_t v13 = v50;
        }
        else
        {
          uint64_t v32 = (char *)(v8 + 2);
LABEL_49:
          *(void *)uint64_t v55 = v32;
        }
        if (sub_136FC18())
        {
          *(_DWORD *)(a1 + 16) |= 0x100u;
          *(_DWORD *)(a1 + 76) = v13;
        }
        else
        {
          if (*v7) {
            uint64_t v53 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v53 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v54 = 9;
LABEL_94:
          sub_188C020(v54, v13, v53);
        }
        goto LABEL_62;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v35 = *(void *)(a1 + 8);
        int v20 = (uint64_t *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
        if (v35) {
          int v20 = (uint64_t *)*v20;
        }
        unint64_t v21 = (void *)(a1 + 40);
        goto LABEL_60;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v36 = *(void *)(a1 + 8);
        int v20 = (uint64_t *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
        if (v36) {
          int v20 = (uint64_t *)*v20;
        }
        unint64_t v21 = (void *)(a1 + 48);
LABEL_60:
        uint64_t v37 = (std::string *)sub_1880F84(v21, v20);
        int v27 = (void *)sub_188C244(v37, *(char **)v55, (uint64_t)a3);
        goto LABEL_61;
      case 0xCu:
        if (v9 != 96) {
          goto LABEL_69;
        }
        v5 |= 0x200u;
        uint64_t v38 = (char *)(v8 + 1);
        uint64_t v39 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_68;
        }
        int v40 = *v38;
        uint64_t v39 = v39 + (v40 << 7) - 128;
        if (v40 < 0)
        {
          uint64_t v51 = sub_188C138((uint64_t)v8, v39);
          *(void *)uint64_t v55 = v51;
          *(void *)(a1 + 80) = v52;
          if (!v51) {
            goto LABEL_100;
          }
        }
        else
        {
          uint64_t v38 = (char *)(v8 + 2);
LABEL_68:
          *(void *)uint64_t v55 = v38;
          *(void *)(a1 + 80) = v39;
        }
        goto LABEL_62;
      default:
LABEL_69:
        if (v9) {
          BOOL v41 = (v9 & 7) == 4;
        }
        else {
          BOOL v41 = 1;
        }
        if (!v41)
        {
          if (*v7)
          {
            BOOL v42 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            BOOL v42 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(unsigned __int8 **)v55;
          }
          int v27 = sub_1885AC0(v9, v42, (char *)v8, a3);
LABEL_61:
          *(void *)uint64_t v55 = v27;
          if (!v27) {
            goto LABEL_100;
          }
LABEL_62:
          if (sub_11947B8((uint64_t)a3, (char **)v55, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_100:
        }
          *(void *)uint64_t v55 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v55;
    }
  }
}

char *sub_128791C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 88);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 64);
    *char v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    char v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 68);
    *char v4 = 32;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 56);
    *char v4 = 42;
    unsigned int v17 = *(_DWORD *)(v16 + 44);
    v4[1] = v17;
    if (v17 > 0x7F) {
      int v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      int v18 = v4 + 2;
    }
    char v4 = sub_15B0C0C(v16, v18, a3);
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 72);
    *char v4 = 56;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0) {
    char v4 = sub_117A0AC(a3, 8, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v22 = *(int *)(a1 + 76);
    *char v4 = 72;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unint64_t v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    char v4 = sub_117A0AC(a3, 10, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 8) == 0)
    {
LABEL_49:
      if ((v6 & 0x200) == 0) {
        goto LABEL_59;
      }
      goto LABEL_53;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_49;
  }
  char v4 = sub_117A0AC(a3, 11, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x200) == 0) {
    goto LABEL_59;
  }
LABEL_53:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v25 = *(void *)(a1 + 80);
  *char v4 = 96;
  v4[1] = v25;
  if (v25 > 0x7F)
  {
    v4[1] = v25 | 0x80;
    unint64_t v26 = v25 >> 7;
    v4[2] = v25 >> 7;
    v4 += 3;
    if (v25 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v27 = v26 >> 14;
        v26 >>= 7;
        *v4++ = v26;
      }
      while (v27);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_59:
  uint64_t v28 = *(void *)(a1 + 8);
  if ((v28 & 1) == 0) {
    return v4;
  }
  unint64_t v30 = v28 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v30 + 31) < 0)
  {
    uint64_t v31 = *(void **)(v30 + 8);
    uint64_t v32 = *(void *)(v30 + 16);
  }
  else
  {
    uint64_t v31 = (void *)(v30 + 8);
    LODWORD(v32) = *(unsigned __int8 *)(v30 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v32)
  {
    uint64_t v33 = (int)v32;
    memcpy(v4, v31, (int)v32);
    v4 += v33;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v31, v32, v4);
}

uint64_t sub_1287DAC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_19;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    unint64_t v10 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
    uint64_t v12 = *(void *)(v10 + 8);
    if ((v11 & 0x80u) == 0) {
      uint64_t v12 = v11;
    }
    v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_30;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  unint64_t v13 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
  uint64_t v15 = *(void *)(v13 + 8);
  if ((v14 & 0x80u) == 0) {
    uint64_t v15 = v14;
  }
  v3 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t v16 = sub_15B0D90(*(void *)(a1 + 56));
  v3 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_16:
    if ((v2 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_32;
  }
LABEL_31:
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 64) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_17:
    if ((v2 & 0x80) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
LABEL_32:
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 68) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x80) != 0) {
LABEL_18:
  }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 72) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_19:
  if ((v2 & 0x700) == 0) {
    goto LABEL_43;
  }
  if ((v2 & 0x100) != 0)
  {
    int v17 = *(_DWORD *)(a1 + 76);
    if (v17 < 0) {
      uint64_t v18 = 11;
    }
    else {
      uint64_t v18 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v18;
    if ((v2 & 0x200) == 0)
    {
LABEL_22:
      if ((v2 & 0x400) == 0) {
        goto LABEL_43;
      }
      goto LABEL_39;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_22;
  }
  v3 += ((9 * (__clz(*(void *)(a1 + 80) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v2 & 0x400) == 0) {
    goto LABEL_43;
  }
LABEL_39:
  int v19 = *(_DWORD *)(a1 + 88);
  if (v19 < 0) {
    uint64_t v20 = 11;
  }
  else {
    uint64_t v20 = ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v20;
LABEL_43:
  uint64_t v21 = *(void *)(a1 + 8);
  if (v21)
  {
    unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v23 + 31) < 0) {
      uint64_t v24 = *(void *)(v23 + 16);
    }
    else {
      uint64_t v24 = *(unsigned __int8 *)(v23 + 31);
    }
    v3 += v24;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_1288094(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x10) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 56));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_12880C0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Problem.DirectionsProblem.DirectionsEvent");
}

uint64_t sub_12880D0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 96);
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 104) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 104));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_12C37C4((void *)(a1 + 72));
  sub_12C2134((void *)(a1 + 48));
  sub_12C20B4((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12881AC(uint64_t a1)
{
  sub_12880D0(a1);

  operator delete();
}

uint64_t sub_12881E4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1627DF0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_162D688(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 80);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (unsigned char **)(*(void *)(v1 + 88) + 8);
    do
    {
      unint64_t v10 = *v9++;
      uint64_t result = (uint64_t)sub_1287238(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 80) = 0;
  }
  int v11 = *(_DWORD *)(v1 + 16);
  if ((v11 & 3) != 0)
  {
    if (v11)
    {
      unint64_t v12 = *(void *)(v1 + 96) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v12 + 23) < 0)
      {
        **(unsigned char **)unint64_t v12 = 0;
        *(void *)(v12 + 8) = 0;
        if ((v11 & 2) == 0) {
          goto LABEL_23;
        }
        goto LABEL_18;
      }
      *(unsigned char *)unint64_t v12 = 0;
      *(unsigned char *)(v12 + 23) = 0;
    }
    if ((v11 & 2) == 0) {
      goto LABEL_23;
    }
LABEL_18:
    unint64_t v13 = *(void *)(v1 + 104) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v13 + 23) < 0)
    {
      **(unsigned char **)unint64_t v13 = 0;
      *(void *)(v13 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v13 = 0;
      *(unsigned char *)(v13 + 23) = 0;
    }
  }
LABEL_23:
  if ((v11 & 0x1C) != 0)
  {
    *(void *)(v1 + 112) = 0;
    *(void *)(v1 + 120) = 0;
  }
  char v15 = *(unsigned char *)(v1 + 8);
  uint64_t v14 = v1 + 8;
  *(_DWORD *)(v14 + 8) = 0;
  if (v15)
  {
    return sub_188B4AC((uint64_t *)v14);
  }
  return result;
}

uint64_t sub_1288328(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v53 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v53, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v53 + 1);
    unsigned int v9 = **(unsigned char **)v53;
    if ((char)**(unsigned char **)v53 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v53, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v53 + 2);
      }
    }
    *(void *)uint64_t v53 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_63;
        }
        unint64_t v12 = v8 - 1;
        while (1)
        {
          unint64_t v13 = (unsigned __int8 *)(v12 + 1);
          *(void *)uint64_t v53 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 40);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 32), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 32) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_16332DC(*(void *)(a1 + 24));
            uint64_t v16 = sub_188CDC8(a1 + 24, v17);
            unint64_t v13 = *(unsigned __int8 **)v53;
          }
          unint64_t v12 = (char *)sub_118D0CC(a3, v16, v13);
          *(void *)uint64_t v53 = v12;
          if (!v12) {
            goto LABEL_82;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_71;
          }
        }
      case 2u:
        if (v9 != 18) {
          goto LABEL_63;
        }
        uint64_t v18 = v8 - 1;
        while (1)
        {
          int v19 = (unsigned __int8 *)(v18 + 1);
          *(void *)uint64_t v53 = v18 + 1;
          uint64_t v20 = *(_DWORD **)(a1 + 64);
          if (v20 && (uint64_t v21 = *(int *)(a1 + 56), (int)v21 < *v20))
          {
            *(_DWORD *)(a1 + 56) = v21 + 1;
            uint64_t v22 = *(void *)&v20[2 * v21 + 2];
          }
          else
          {
            uint64_t v23 = sub_1633394(*(void *)(a1 + 48));
            uint64_t v22 = sub_188CDC8(a1 + 48, v23);
            int v19 = *(unsigned __int8 **)v53;
          }
          uint64_t v18 = sub_126601C(a3, v22, v19);
          *(void *)uint64_t v53 = v18;
          if (!v18) {
            goto LABEL_82;
          }
          if (*(void *)a3 <= (unint64_t)v18 || *v18 != 18) {
            goto LABEL_71;
          }
        }
      case 3u:
        if (v9 != 26) {
          goto LABEL_63;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v24 = *(void *)(a1 + 8);
        unint64_t v25 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
        if (v24) {
          unint64_t v25 = (uint64_t *)*v25;
        }
        unint64_t v26 = (void *)(a1 + 96);
        goto LABEL_52;
      case 4u:
        if (v9 != 34) {
          goto LABEL_63;
        }
        unint64_t v27 = v8 - 1;
        while (1)
        {
          uint64_t v28 = (unsigned __int8 *)(v27 + 1);
          *(void *)uint64_t v53 = v27 + 1;
          int v29 = *(_DWORD **)(a1 + 88);
          if (v29 && (uint64_t v30 = *(int *)(a1 + 80), (int)v30 < *v29))
          {
            *(_DWORD *)(a1 + 80) = v30 + 1;
            uint64_t v31 = *(void *)&v29[2 * v30 + 2];
          }
          else
          {
            sub_128DD0C(*(void *)(a1 + 72));
            uint64_t v31 = sub_188CDC8(a1 + 72, v32);
            uint64_t v28 = *(unsigned __int8 **)v53;
          }
          unint64_t v27 = (char *)sub_12887F4(a3, v31, v28);
          *(void *)uint64_t v53 = v27;
          if (!v27) {
            goto LABEL_82;
          }
          if (*(void *)a3 <= (unint64_t)v27 || *v27 != 34) {
            goto LABEL_71;
          }
        }
      case 5u:
        if (v9 != 40) {
          goto LABEL_63;
        }
        v5 |= 4u;
        uint64_t v33 = v8 + 1;
        int v34 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_47;
        }
        int v35 = *v33;
        int v34 = v34 + (v35 << 7) - 128;
        if (v35 < 0)
        {
          uint64_t v47 = sub_188C0D0((uint64_t)v8, v34);
          *(void *)uint64_t v53 = v47;
          *(_DWORD *)(a1 + 112) = v48;
          if (!v47) {
            goto LABEL_82;
          }
        }
        else
        {
          uint64_t v33 = v8 + 2;
LABEL_47:
          *(void *)uint64_t v53 = v33;
          *(_DWORD *)(a1 + 112) = v34;
        }
        goto LABEL_71;
      case 6u:
        if (v9 != 50) {
          goto LABEL_63;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v36 = *(void *)(a1 + 8);
        unint64_t v25 = (uint64_t *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
        if (v36) {
          unint64_t v25 = (uint64_t *)*v25;
        }
        unint64_t v26 = (void *)(a1 + 104);
LABEL_52:
        uint64_t v37 = (std::string *)sub_1880F84(v26, v25);
        uint64_t v38 = (void *)sub_188C244(v37, *(char **)v53, (uint64_t)a3);
        goto LABEL_70;
      case 7u:
        if (v9 != 56) {
          goto LABEL_63;
        }
        v5 |= 8u;
        uint64_t v39 = v8 + 1;
        int v40 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_57;
        }
        int v41 = *v39;
        int v40 = v40 + (v41 << 7) - 128;
        if (v41 < 0)
        {
          uint64_t v49 = sub_188C0D0((uint64_t)v8, v40);
          *(void *)uint64_t v53 = v49;
          *(_DWORD *)(a1 + 116) = v50;
          if (!v49) {
            goto LABEL_82;
          }
        }
        else
        {
          uint64_t v39 = v8 + 2;
LABEL_57:
          *(void *)uint64_t v53 = v39;
          *(_DWORD *)(a1 + 116) = v40;
        }
        goto LABEL_71;
      case 8u:
        if (v9 != 64) {
          goto LABEL_63;
        }
        v5 |= 0x10u;
        BOOL v42 = v8 + 1;
        uint64_t v43 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_62;
        }
        int v44 = *v42;
        uint64_t v43 = v43 + (v44 << 7) - 128;
        if (v44 < 0)
        {
          uint64_t v51 = sub_188C138((uint64_t)v8, v43);
          *(void *)uint64_t v53 = v51;
          *(void *)(a1 + 120) = v52;
          if (!v51) {
            goto LABEL_82;
          }
        }
        else
        {
          BOOL v42 = v8 + 2;
LABEL_62:
          *(void *)uint64_t v53 = v42;
          *(void *)(a1 + 120) = v43;
        }
        goto LABEL_71;
      default:
LABEL_63:
        if (v9) {
          BOOL v45 = (v9 & 7) == 4;
        }
        else {
          BOOL v45 = 1;
        }
        if (!v45)
        {
          if (*v7)
          {
            uint64_t v46 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v46 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v53;
          }
          uint64_t v38 = sub_1885AC0(v9, v46, v8, a3);
LABEL_70:
          *(void *)uint64_t v53 = v38;
          if (!v38) {
            goto LABEL_82;
          }
LABEL_71:
          if (sub_11947B8((uint64_t)a3, (char **)v53, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_82:
        }
          *(void *)uint64_t v53 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v53;
    }
  }
}

uint64_t sub_12887F4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1287394(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1288884(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_162962C(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 56);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 44);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = sub_162F61C(v13, v15, a3);
    }
  }
  int v16 = *(_DWORD *)(a1 + 16);
  if (v16) {
    __dst = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v17 = *(_DWORD *)(a1 + 80);
  if (v17)
  {
    for (int k = 0; k != v17; ++k)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v19 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      *__dst = 34;
      unsigned int v20 = *(_DWORD *)(v19 + 20);
      __dst[1] = v20;
      if (v20 > 0x7F) {
        uint64_t v21 = sub_188A9CC(v20, __dst + 1);
      }
      else {
        uint64_t v21 = __dst + 2;
      }
      __dst = sub_128791C(v19, (unint64_t)v21, a3);
    }
  }
  if ((v16 & 4) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v22 = *(_DWORD *)(a1 + 112);
    *__dst = 40;
    __dst[1] = v22;
    if (v22 > 0x7F)
    {
      __dst[1] = v22 | 0x80;
      unsigned int v23 = v22 >> 7;
      __dst[2] = v22 >> 7;
      __dst += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v24 = v23 >> 14;
          v23 >>= 7;
          *__dst++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v16 & 2) != 0) {
    __dst = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v16 & 8) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v25 = *(_DWORD *)(a1 + 116);
    *__dst = 56;
    __dst[1] = v25;
    if (v25 > 0x7F)
    {
      __dst[1] = v25 | 0x80;
      unsigned int v26 = v25 >> 7;
      __dst[2] = v25 >> 7;
      __dst += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v27 = v26 >> 14;
          v26 >>= 7;
          *__dst++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v16 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v28 = *(void *)(a1 + 120);
    *__dst = 64;
    __dst[1] = v28;
    if (v28 > 0x7F)
    {
      __dst[1] = v28 | 0x80;
      unint64_t v29 = v28 >> 7;
      __dst[2] = v28 >> 7;
      __dst += 3;
      if (v28 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v30 = v29 >> 14;
          v29 >>= 7;
          *__dst++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  uint64_t v31 = *(void *)(a1 + 8);
  if ((v31 & 1) == 0) {
    return __dst;
  }
  unint64_t v33 = v31 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v33 + 31) < 0)
  {
    int v34 = *(void **)(v33 + 8);
    uint64_t v35 = *(void *)(v33 + 16);
  }
  else
  {
    int v34 = (void *)(v33 + 8);
    LODWORD(v35) = *(unsigned __int8 *)(v33 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v35)
  {
    uint64_t v36 = (int)v35;
    memcpy(__dst, v34, (int)v35);
    __dst += v36;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v34, v35, __dst);
}

uint64_t sub_1288C88(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_162A6E8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1630810(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    uint64_t v18 = (uint64_t *)(v17 + 8);
  }
  else {
    uint64_t v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_1287DAC(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  int v22 = *(_DWORD *)(a1 + 16);
  if ((v22 & 0x1F) == 0) {
    goto LABEL_28;
  }
  if (v22)
  {
    unint64_t v25 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v26 = *(unsigned __int8 *)(v25 + 23);
    uint64_t v27 = *(void *)(v25 + 8);
    if ((v26 & 0x80u) == 0) {
      uint64_t v27 = v26;
    }
    v16 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v22 & 2) == 0)
    {
LABEL_24:
      if ((v22 & 4) == 0) {
        goto LABEL_25;
      }
LABEL_36:
      v16 += ((9 * (__clz(*(_DWORD *)(a1 + 112) | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v22 & 8) == 0)
      {
LABEL_26:
        if ((v22 & 0x10) == 0) {
          goto LABEL_28;
        }
        goto LABEL_27;
      }
      goto LABEL_37;
    }
  }
  else if ((v22 & 2) == 0)
  {
    goto LABEL_24;
  }
  unint64_t v28 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v29 = *(unsigned __int8 *)(v28 + 23);
  uint64_t v30 = *(void *)(v28 + 8);
  if ((v29 & 0x80u) == 0) {
    uint64_t v30 = v29;
  }
  v16 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v22 & 4) != 0) {
    goto LABEL_36;
  }
LABEL_25:
  if ((v22 & 8) == 0) {
    goto LABEL_26;
  }
LABEL_37:
  v16 += ((9 * (__clz(*(_DWORD *)(a1 + 116) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v22 & 0x10) != 0) {
LABEL_27:
  }
    v16 += ((9 * (__clz(*(void *)(a1 + 120) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_28:
  uint64_t v23 = *(void *)(a1 + 8);
  if (v23)
  {
    unint64_t v31 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v31 + 31) < 0) {
      uint64_t v32 = *(void *)(v31 + 16);
    }
    else {
      uint64_t v32 = *(unsigned __int8 *)(v31 + 31);
    }
    v16 += v32;
  }
  *(_DWORD *)(a1 + 20) = v16;
  return v16;
}

void sub_1288EF4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C2BE4((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C2C70((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_12C3B40((uint64_t *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    uint64_t v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 16);
  if ((v19 & 0x1F) != 0)
  {
    if (v19)
    {
      uint64_t v21 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v22 = *(void *)(a1 + 8);
      uint64_t v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        uint64_t v23 = (uint64_t *)*v23;
      }
      sub_1881DF4((std::string **)(a1 + 96), v21, v23);
      if ((v19 & 2) == 0)
      {
LABEL_13:
        if ((v19 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_28;
      }
    }
    else if ((v19 & 2) == 0)
    {
      goto LABEL_13;
    }
    unsigned int v24 = (long long *)(*(void *)(a2 + 104) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v25 = *(void *)(a1 + 8);
    uint64_t v26 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
    if (v25) {
      uint64_t v26 = (uint64_t *)*v26;
    }
    sub_1881DF4((std::string **)(a1 + 104), v24, v26);
    if ((v19 & 4) == 0)
    {
LABEL_14:
      if ((v19 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_29;
    }
LABEL_28:
    *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
    if ((v19 & 8) == 0)
    {
LABEL_15:
      if ((v19 & 0x10) == 0)
      {
LABEL_17:
        *(_DWORD *)(a1 + 16) |= v19;
        goto LABEL_18;
      }
LABEL_16:
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      goto LABEL_17;
    }
LABEL_29:
    *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
    if ((v19 & 0x10) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_18:
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1289144(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_162BBCC(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v5 = *(unsigned int *)(a1 + 56);
  while ((int)v5 >= 1)
  {
    uint64_t v6 = v5 - 1;
    char v7 = sub_16320B4(*(void *)(*(void *)(a1 + 64) + 8 * v5));
    uint64_t v5 = v6;
    if ((v7 & 1) == 0) {
      return 0;
    }
  }

  return sub_1276150(a1 + 72);
}

void *sub_12891D4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Problem.DirectionsProblem");
}

double sub_12891E4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)a1 = off_24A2228;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = a2;
  *(void *)(a1 + 40) = a2;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = a2;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = a2;
  *(void *)(a1 + 120) = a2;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = a2;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = a2;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = &qword_2550250;
  *(void *)(a1 + 200) = &qword_2550250;
  *(void *)(a1 + 208) = &qword_2550250;
  *(void *)(a1 + 216) = &qword_2550250;
  *(void *)(a1 + 224) = &qword_2550250;
  *(void *)(a1 + 232) = &qword_2550250;
  *(void *)(a1 + 240) = &qword_2550250;
  *(void *)(a1 + 248) = &qword_2550250;
  *(void *)(a1 + 256) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  *(_OWORD *)(a1 + 296) = 0u;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 328) = 0u;
  *(void *)(a1 + 344) = 0;
  return result;
}

void *sub_1289270(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1289344((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_12C39C4(a1 + 21);
  sub_12C3944(a1 + 18);
  sub_12C38C4(a1 + 15);
  sub_1889DA8((uint64_t)(a1 + 13));
  sub_1889DA8((uint64_t)(a1 + 11));
  sub_1889DE8(a1 + 8);
  sub_12C3844(a1 + 5);
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_1289344(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 192);
  uint64_t v2 = (void ***)(a1 + 192);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 200) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 200));
  }
  if (*(uint64_t **)(a1 + 208) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 208));
  }
  if (*(uint64_t **)(a1 + 216) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 216));
  }
  if (*(uint64_t **)(a1 + 224) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 224));
  }
  if (*(uint64_t **)(a1 + 232) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 232));
  }
  if (*(uint64_t **)(a1 + 240) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 240));
  }
  double result = (void ***)(a1 + 248);
  if (*(uint64_t **)(a1 + 248) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if (*(uint64_t **)(a1 + 256) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 256));
  }
  if ((uint64_t (***)())a1 != &off_2530070)
  {
    if (*(void *)(a1 + 264))
    {
      sub_144D350();
      operator delete();
    }
    if (*(void *)(a1 + 272))
    {
      sub_15B9F30();
      operator delete();
    }
    if (*(void *)(a1 + 280))
    {
      sub_144D350();
      operator delete();
    }
    uint64_t v5 = *(void *)(a1 + 288);
    if (v5)
    {
      sub_15B1678(v5);
      operator delete();
    }
    if (*(void *)(a1 + 296))
    {
      sub_15B0994();
      operator delete();
    }
    if (*(void *)(a1 + 304))
    {
      sub_15B0994();
      operator delete();
    }
    if (*(void *)(a1 + 312))
    {
      sub_1463FF8();
      operator delete();
    }
    if (*(void *)(a1 + 320))
    {
      sub_146E3A8();
      operator delete();
    }
    double result = *(void ****)(a1 + 328);
    if (result)
    {
      sub_15B1678(result);
      operator delete();
    }
  }
  return result;
}

void sub_1289568(void *a1)
{
  sub_1289270(a1);

  operator delete();
}

uint64_t sub_12895A0(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  uint64_t v2 = *(unsigned int *)(a1 + 48);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_1285878(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 48) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 64);
  *(_DWORD *)(a1 + 88) = 0;
  *(_DWORD *)(a1 + 104) = 0;
  uint64_t v6 = *(unsigned int *)(a1 + 128);
  if ((int)v6 >= 1)
  {
    char v7 = (uint64_t *)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_1286288(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 128) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 152);
  if ((int)v9 >= 1)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a1 + 160) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_1286A44(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 152) = 0;
  }
  uint64_t v12 = *(unsigned int *)(a1 + 176);
  if ((int)v12 >= 1)
  {
    uint64_t v13 = (uint64_t *)(*(void *)(a1 + 184) + 8);
    do
    {
      uint64_t v14 = *v13++;
      uint64_t result = sub_12881E4(v14);
      --v12;
    }
    while (v12);
    *(_DWORD *)(a1 + 176) = 0;
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v15)
  {
    if ((v15 & 1) == 0)
    {
      if ((v15 & 2) == 0) {
        goto LABEL_20;
      }
LABEL_31:
      unint64_t v17 = *(void *)(a1 + 200) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v17 + 23) < 0)
      {
        **(unsigned char **)unint64_t v17 = 0;
        *(void *)(v17 + 8) = 0;
        if ((v15 & 4) != 0) {
          goto LABEL_35;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v17 = 0;
        *(unsigned char *)(v17 + 23) = 0;
        if ((v15 & 4) != 0) {
          goto LABEL_35;
        }
      }
LABEL_21:
      if ((v15 & 8) == 0) {
        goto LABEL_22;
      }
LABEL_39:
      unint64_t v19 = *(void *)(a1 + 216) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v19 + 23) < 0)
      {
        **(unsigned char **)unint64_t v19 = 0;
        *(void *)(v19 + 8) = 0;
        if ((v15 & 0x10) != 0) {
          goto LABEL_43;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v19 = 0;
        *(unsigned char *)(v19 + 23) = 0;
        if ((v15 & 0x10) != 0) {
          goto LABEL_43;
        }
      }
LABEL_23:
      if ((v15 & 0x20) == 0) {
        goto LABEL_24;
      }
LABEL_47:
      unint64_t v21 = *(void *)(a1 + 232) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v21 + 23) < 0)
      {
        **(unsigned char **)unint64_t v21 = 0;
        *(void *)(v21 + 8) = 0;
        if ((v15 & 0x40) != 0) {
          goto LABEL_51;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v21 = 0;
        *(unsigned char *)(v21 + 23) = 0;
        if ((v15 & 0x40) != 0) {
          goto LABEL_51;
        }
      }
LABEL_25:
      if ((v15 & 0x80) == 0) {
        goto LABEL_58;
      }
LABEL_55:
      unint64_t v23 = *(void *)(a1 + 248) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v23 + 23) < 0)
      {
        **(unsigned char **)unint64_t v23 = 0;
        *(void *)(v23 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v23 = 0;
        *(unsigned char *)(v23 + 23) = 0;
      }
      goto LABEL_58;
    }
    unint64_t v16 = *(void *)(a1 + 192) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v16 + 23) < 0)
    {
      **(unsigned char **)unint64_t v16 = 0;
      *(void *)(v16 + 8) = 0;
      if ((v15 & 2) != 0) {
        goto LABEL_31;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v16 = 0;
      *(unsigned char *)(v16 + 23) = 0;
      if ((v15 & 2) != 0) {
        goto LABEL_31;
      }
    }
LABEL_20:
    if ((v15 & 4) == 0) {
      goto LABEL_21;
    }
LABEL_35:
    unint64_t v18 = *(void *)(a1 + 208) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v18 + 23) < 0)
    {
      **(unsigned char **)unint64_t v18 = 0;
      *(void *)(v18 + 8) = 0;
      if ((v15 & 8) != 0) {
        goto LABEL_39;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v18 = 0;
      *(unsigned char *)(v18 + 23) = 0;
      if ((v15 & 8) != 0) {
        goto LABEL_39;
      }
    }
LABEL_22:
    if ((v15 & 0x10) == 0) {
      goto LABEL_23;
    }
LABEL_43:
    unint64_t v20 = *(void *)(a1 + 224) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v20 + 23) < 0)
    {
      **(unsigned char **)unint64_t v20 = 0;
      *(void *)(v20 + 8) = 0;
      if ((v15 & 0x20) != 0) {
        goto LABEL_47;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v20 = 0;
      *(unsigned char *)(v20 + 23) = 0;
      if ((v15 & 0x20) != 0) {
        goto LABEL_47;
      }
    }
LABEL_24:
    if ((v15 & 0x40) == 0) {
      goto LABEL_25;
    }
LABEL_51:
    unint64_t v22 = *(void *)(a1 + 240) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v22 + 23) < 0)
    {
      **(unsigned char **)unint64_t v22 = 0;
      *(void *)(v22 + 8) = 0;
      if ((v15 & 0x80) == 0) {
        goto LABEL_58;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v22 = 0;
      *(unsigned char *)(v22 + 23) = 0;
      if ((v15 & 0x80) == 0) {
        goto LABEL_58;
      }
    }
    goto LABEL_55;
  }
LABEL_58:
  if ((v15 & 0xFF00) == 0) {
    goto LABEL_68;
  }
  if ((v15 & 0x100) != 0)
  {
    unint64_t v26 = *(void *)(a1 + 256) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v26 + 23) < 0)
    {
      **(unsigned char **)unint64_t v26 = 0;
      *(void *)(v26 + 8) = 0;
      if ((v15 & 0x200) != 0) {
        goto LABEL_83;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v26 = 0;
      *(unsigned char *)(v26 + 23) = 0;
      if ((v15 & 0x200) != 0) {
        goto LABEL_83;
      }
    }
LABEL_61:
    if ((v15 & 0x400) == 0) {
      goto LABEL_62;
    }
    goto LABEL_84;
  }
  if ((v15 & 0x200) == 0) {
    goto LABEL_61;
  }
LABEL_83:
  uint64_t result = sub_144D38C(*(void *)(a1 + 264));
  if ((v15 & 0x400) == 0)
  {
LABEL_62:
    if ((v15 & 0x800) == 0) {
      goto LABEL_63;
    }
    goto LABEL_85;
  }
LABEL_84:
  uint64_t result = sub_15B9F6C(*(void *)(a1 + 272));
  if ((v15 & 0x800) == 0)
  {
LABEL_63:
    if ((v15 & 0x1000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_86;
  }
LABEL_85:
  uint64_t result = sub_144D38C(*(void *)(a1 + 280));
  if ((v15 & 0x1000) == 0)
  {
LABEL_64:
    if ((v15 & 0x2000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_87;
  }
LABEL_86:
  uint64_t result = (uint64_t)sub_15B16B4(*(unsigned char **)(a1 + 288));
  if ((v15 & 0x2000) == 0)
  {
LABEL_65:
    if ((v15 & 0x4000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_88;
  }
LABEL_87:
  uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 296));
  if ((v15 & 0x4000) == 0)
  {
LABEL_66:
    if ((v15 & 0x8000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_67;
  }
LABEL_88:
  uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 304));
  if ((v15 & 0x8000) != 0) {
LABEL_67:
  }
    uint64_t result = sub_1464034(*(void *)(a1 + 312));
LABEL_68:
  if ((v15 & 0x30000) != 0)
  {
    if ((v15 & 0x10000) != 0) {
      uint64_t result = sub_13F04AC(*(void *)(a1 + 320));
    }
    if ((v15 & 0x20000) != 0) {
      uint64_t result = (uint64_t)sub_15B16B4(*(unsigned char **)(a1 + 328));
    }
  }
  if ((v15 & 0x3C0000) != 0)
  {
    *(void *)(a1 + 336) = 0;
    *(void *)(a1 + 344) = 0;
  }
  char v25 = *(unsigned char *)(a1 + 8);
  uint64_t v24 = a1 + 8;
  *(_DWORD *)(v24 + 8) = 0;
  if (v25)
  {
    return sub_188B4AC((uint64_t *)v24);
  }
  return result;
}

uint64_t sub_128992C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v125 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v125, a3[11].i32[1]))
  {
    int v121 = 0;
    goto LABEL_3;
  }
  int v121 = 0;
  v120 = (uint64_t *)(a1 + 8);
  v123 = (uint64_t *)(a1 + 144);
  v124 = (uint64_t *)(a1 + 168);
  v122 = (uint64_t *)(a1 + 120);
  uint64_t v6 = (uint64_t **)(a1 + 64);
  while (2)
  {
    char v7 = (unsigned __int8 *)(*(void *)v125 + 1);
    unsigned int v8 = **(unsigned char **)v125;
    if ((char)**(unsigned char **)v125 < 0)
    {
      int v9 = (char)*v7;
      unsigned int v10 = v8 + (v9 << 7);
      unsigned int v8 = v10 - 128;
      if (v9 < 0)
      {
        char v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v125, v10 - 128);
        unsigned int v8 = v11;
      }
      else
      {
        char v7 = (unsigned __int8 *)(*(void *)v125 + 2);
      }
    }
    *(void *)v125 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 0x200u;
        uint64_t v12 = *(void *)(a1 + 264);
        if (v12) {
          goto LABEL_47;
        }
        uint64_t v13 = (void *)(*v120 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v120) {
          uint64_t v13 = (void *)*v13;
        }
        uint64_t v12 = sub_147818C((uint64_t)v13);
        *(void *)(a1 + 264) = v12;
        goto LABEL_46;
      case 2u:
        if (v8 != 18) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 0x400u;
        uint64_t v14 = *(void **)(a1 + 272);
        if (!v14)
        {
          int v15 = (void *)(*v120 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v120) {
            int v15 = (void *)*v15;
          }
          uint64_t v14 = sub_15C2014((uint64_t)v15);
          *(void *)(a1 + 272) = v14;
          char v7 = *(unsigned __int8 **)v125;
        }
        uint64_t v16 = (uint64_t)sub_11EAA5C(a3, (uint64_t)v14, v7);
        goto LABEL_235;
      case 3u:
        if (v8 == 24)
        {
          uint64_t v17 = (uint64_t)(v7 - 1);
          while (1)
          {
            *(void *)v125 = v17 + 1;
            unint64_t v18 = *(unsigned __int8 *)(v17 + 1);
            unint64_t v19 = (char *)(v17 + 2);
            if (*(char *)(v17 + 1) < 0)
            {
              int v20 = *v19;
              int v21 = v18 + (v20 << 7);
              unint64_t v18 = (v21 - 128);
              if (v20 < 0)
              {
                *(void *)v125 = sub_188C138(v17 + 1, (v21 - 128));
                if (!*(void *)v125) {
                  goto LABEL_265;
                }
                unint64_t v18 = v24;
                goto LABEL_27;
              }
              unint64_t v19 = (char *)(v17 + 3);
            }
            *(void *)v125 = v19;
LABEL_27:
            if (v18 > 0x1E)
            {
              if (*v120) {
                char v25 = (std::string *)((*v120 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                char v25 = (std::string *)sub_188DBD8(v120);
              }
              sub_188C020(3, v18, v25);
            }
            else
            {
              uint64_t v22 = *(unsigned int *)(a1 + 24);
              if (v22 == *(_DWORD *)(a1 + 28))
              {
                int v23 = v22 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v22 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v22) = v18;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v22) = v18;
                int v23 = v22 + 1;
              }
              *(_DWORD *)(a1 + 24) = v23;
            }
            uint64_t v17 = *(void *)v125;
            if (*(void *)a3 <= *(void *)v125 || **(unsigned char **)v125 != 24) {
              goto LABEL_236;
            }
          }
        }
        if (v8 != 26) {
          goto LABEL_251;
        }
        *(void *)&long long v126 = a1 + 24;
        *((void *)&v126 + 1) = sub_12850FC;
        uint64_t v127 = a1 + 8;
        int v116 = 3;
        goto LABEL_250;
      case 4u:
        if (v8 != 34) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 0x800u;
        uint64_t v12 = *(void *)(a1 + 280);
        if (!v12)
        {
          unint64_t v26 = (void *)(*v120 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v120) {
            unint64_t v26 = (void *)*v26;
          }
          uint64_t v12 = sub_147818C((uint64_t)v26);
          *(void *)(a1 + 280) = v12;
LABEL_46:
          char v7 = *(unsigned __int8 **)v125;
        }
LABEL_47:
        uint64_t v16 = sub_1265E6C(a3, v12, v7);
        goto LABEL_235;
      case 5u:
        if (v8 != 42) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v27 = *(void *)(a1 + 8);
        unint64_t v28 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
        if (v27) {
          unint64_t v28 = (uint64_t *)*v28;
        }
        uint64_t v29 = (void *)(a1 + 192);
        goto LABEL_234;
      case 6u:
        if (v8 != 50) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v30 = *(void *)(a1 + 8);
        unint64_t v28 = (uint64_t *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
        if (v30) {
          unint64_t v28 = (uint64_t *)*v28;
        }
        uint64_t v29 = (void *)(a1 + 200);
        goto LABEL_234;
      case 7u:
        if (v8 != 58) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 0x1000u;
        uint64_t v31 = *(void *)(a1 + 288);
        if (v31) {
          goto LABEL_199;
        }
        uint64_t v32 = (void *)(*v120 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v120) {
          uint64_t v32 = (void *)*v32;
        }
        uint64_t v31 = sub_15C19EC((uint64_t)v32);
        *(void *)(a1 + 288) = v31;
        goto LABEL_198;
      case 8u:
        if (v8 != 69) {
          goto LABEL_251;
        }
        v121 |= 0x40000u;
        *(_DWORD *)(a1 + 336) = *(_DWORD *)v7;
        *(void *)v125 = v7 + 4;
        goto LABEL_236;
      case 9u:
        if (v8 != 74) {
          goto LABEL_251;
        }
        unint64_t v33 = (char *)(v7 - 1);
        while (1)
        {
          int v34 = (unsigned __int8 *)(v33 + 1);
          *(void *)v125 = v33 + 1;
          uint64_t v35 = *(_DWORD **)(a1 + 56);
          if (v35 && (uint64_t v36 = *(int *)(a1 + 48), (int)v36 < *v35))
          {
            *(_DWORD *)(a1 + 48) = v36 + 1;
            uint64_t v37 = *(void *)&v35[2 * v36 + 2];
          }
          else
          {
            uint64_t v38 = sub_128DB6C(*(void *)(a1 + 40));
            uint64_t v37 = sub_188CDC8(a1 + 40, (uint64_t)v38);
            int v34 = *(unsigned __int8 **)v125;
          }
          unint64_t v33 = sub_128A860(a3, v37, v34);
          *(void *)v125 = v33;
          if (!v33) {
            goto LABEL_265;
          }
          if (*(void *)a3 <= (unint64_t)v33 || *v33 != 74) {
            goto LABEL_236;
          }
        }
      case 0xAu:
        if (v8 != 82) {
          goto LABEL_251;
        }
        uint64_t v39 = (const std::string::value_type *)(v7 - 1);
        while (1)
        {
          int v40 = (char *)(v39 + 1);
          *(void *)v125 = v39 + 1;
          int v41 = *(_DWORD **)(a1 + 80);
          if (v41 && (uint64_t v42 = *(int *)(a1 + 72), (int)v42 < *v41))
          {
            *(_DWORD *)(a1 + 72) = v42 + 1;
            uint64_t v43 = *(std::string **)&v41[2 * v42 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            *BOOL v45 = v44;
            v45[1] = sub_3A6EDC;
            *int v44 = 0;
            v44[1] = 0;
            v44[2] = 0;
            uint64_t v43 = (std::string *)sub_188CDC8(a1 + 64, (uint64_t)v44);
            int v40 = *(char **)v125;
          }
          uint64_t v39 = sub_188C244(v43, v40, (uint64_t)a3);
          *(void *)v125 = v39;
          if (!v39) {
            goto LABEL_265;
          }
          if (*(void *)a3 <= (unint64_t)v39 || *v39 != 82) {
            goto LABEL_236;
          }
        }
      case 0xBu:
        if (v8 != 90) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v46 = *(void *)(a1 + 8);
        unint64_t v28 = (uint64_t *)(v46 & 0xFFFFFFFFFFFFFFFCLL);
        if (v46) {
          unint64_t v28 = (uint64_t *)*v28;
        }
        uint64_t v29 = (void *)(a1 + 208);
        goto LABEL_234;
      case 0xCu:
        if (v8 != 98) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 0x2000u;
        uint64_t v47 = *(void *)(a1 + 296);
        if (v47) {
          goto LABEL_153;
        }
        int v48 = (void *)(*v120 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v120) {
          int v48 = (void *)*v48;
        }
        uint64_t v47 = sub_15C1918((uint64_t)v48);
        *(void *)(a1 + 296) = v47;
        goto LABEL_152;
      case 0xDu:
        if (v8 == 104)
        {
          uint64_t v49 = (uint64_t)(v7 - 1);
          while (1)
          {
            *(void *)v125 = v49 + 1;
            unint64_t v50 = *(unsigned __int8 *)(v49 + 1);
            uint64_t v51 = (char *)(v49 + 2);
            if (*(char *)(v49 + 1) < 0)
            {
              int v52 = *v51;
              int v53 = v50 + (v52 << 7);
              unint64_t v50 = (v53 - 128);
              if (v52 < 0)
              {
                *(void *)v125 = sub_188C138(v49 + 1, (v53 - 128));
                if (!*(void *)v125) {
                  goto LABEL_265;
                }
                unint64_t v50 = v56;
                goto LABEL_100;
              }
              uint64_t v51 = (char *)(v49 + 3);
            }
            *(void *)v125 = v51;
LABEL_100:
            if (v50 > 7)
            {
              if (*v120) {
                unint64_t v57 = (std::string *)((*v120 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                unint64_t v57 = (std::string *)sub_188DBD8(v120);
              }
              sub_188C020(13, v50, v57);
            }
            else
            {
              uint64_t v54 = *(unsigned int *)(a1 + 88);
              if (v54 == *(_DWORD *)(a1 + 92))
              {
                int v55 = v54 + 1;
                sub_188C80C((unsigned int *)(a1 + 88), v54 + 1);
                *(_DWORD *)(*(void *)(a1 + 96) + 4 * v54) = v50;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 96) + 4 * v54) = v50;
                int v55 = v54 + 1;
              }
              *(_DWORD *)(a1 + 88) = v55;
            }
            uint64_t v49 = *(void *)v125;
            if (*(void *)a3 <= *(void *)v125 || **(unsigned char **)v125 != 104) {
              goto LABEL_236;
            }
          }
        }
        if (v8 != 106) {
          goto LABEL_251;
        }
        *(void *)&long long v126 = a1 + 88;
        *((void *)&v126 + 1) = sub_12850D8;
        uint64_t v127 = a1 + 8;
        int v116 = 13;
        goto LABEL_250;
      case 0xEu:
        if (v8 == 112)
        {
          uint64_t v58 = (uint64_t)(v7 - 1);
          while (1)
          {
            *(void *)v125 = v58 + 1;
            unint64_t v59 = *(unsigned __int8 *)(v58 + 1);
            uint64_t v60 = (char *)(v58 + 2);
            if (*(char *)(v58 + 1) < 0)
            {
              int v61 = *v60;
              int v62 = v59 + (v61 << 7);
              unint64_t v59 = (v62 - 128);
              if (v61 < 0)
              {
                *(void *)v125 = sub_188C138(v58 + 1, (v62 - 128));
                if (!*(void *)v125) {
                  goto LABEL_265;
                }
                unint64_t v59 = v66;
                goto LABEL_120;
              }
              uint64_t v60 = (char *)(v58 + 3);
            }
            *(void *)v125 = v60;
LABEL_120:
            if (v59 > 0x1F || ((1 << v59) & 0xFFF03FFF) == 0)
            {
              if (*v120) {
                uint64_t v67 = (std::string *)((*v120 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v67 = (std::string *)sub_188DBD8(v120);
              }
              sub_188C020(14, v59, v67);
            }
            else
            {
              uint64_t v64 = *(unsigned int *)(a1 + 104);
              if (v64 == *(_DWORD *)(a1 + 108))
              {
                int v65 = v64 + 1;
                sub_188C80C((unsigned int *)(a1 + 104), v64 + 1);
                *(_DWORD *)(*(void *)(a1 + 112) + 4 * v64) = v59;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 112) + 4 * v64) = v59;
                int v65 = v64 + 1;
              }
              *(_DWORD *)(a1 + 104) = v65;
            }
            uint64_t v58 = *(void *)v125;
            if (*(void *)a3 <= *(void *)v125 || **(unsigned char **)v125 != 112) {
              goto LABEL_236;
            }
          }
        }
        if (v8 == 114)
        {
          *(void *)&long long v126 = a1 + 104;
          *((void *)&v126 + 1) = sub_12850E4;
          uint64_t v127 = a1 + 8;
          int v116 = 14;
LABEL_250:
          int v128 = v116;
          uint64_t v16 = (uint64_t)sub_1112E88((uint64_t)a3, (char *)v7, &v126);
LABEL_235:
          *(void *)v125 = v16;
          if (!v16) {
            goto LABEL_265;
          }
LABEL_236:
          if (sub_11947B8((uint64_t)a3, (char **)v125, a3[11].i32[1])) {
            goto LABEL_3;
          }
          continue;
        }
LABEL_251:
        if (v8) {
          BOOL v117 = (v8 & 7) == 4;
        }
        else {
          BOOL v117 = 1;
        }
        if (!v117)
        {
          if (*v120)
          {
            uint64_t v118 = (std::string *)((*v120 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v118 = (std::string *)sub_188DBD8(v120);
            char v7 = *(unsigned __int8 **)v125;
          }
          uint64_t v16 = (uint64_t)sub_1885AC0(v8, v118, (char *)v7, a3);
          goto LABEL_235;
        }
        if (v7) {
          a3[10].i32[0] = v8 - 1;
        }
        else {
LABEL_265:
        }
          *(void *)v125 = 0;
LABEL_3:
        *(_DWORD *)(a1 + 16) |= v121;
        return *(void *)v125;
      case 0xFu:
        if (v8 != 122) {
          goto LABEL_251;
        }
        uint64_t v68 = v7 - 1;
        while (1)
        {
          BOOL v69 = v68 + 1;
          *(void *)v125 = v68 + 1;
          uint64_t v70 = *(_DWORD **)(a1 + 136);
          if (v70 && (uint64_t v71 = *(int *)(a1 + 128), (int)v71 < *v70))
          {
            *(_DWORD *)(a1 + 128) = v71 + 1;
            uint64_t v72 = *(void *)&v70[2 * v71 + 2];
          }
          else
          {
            uint64_t v73 = sub_128DC08(*v122);
            uint64_t v72 = sub_188CDC8((uint64_t)v122, v73);
            BOOL v69 = *(unsigned __int8 **)v125;
          }
          uint64_t v68 = (unsigned __int8 *)sub_128A8F0(a3, v72, v69);
          *(void *)v125 = v68;
          if (!v68) {
            goto LABEL_265;
          }
          if (*(void *)a3 <= (unint64_t)v68 || *v68 != 122) {
            goto LABEL_236;
          }
        }
      case 0x10u:
        if (v8 != 130) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 0x4000u;
        uint64_t v47 = *(void *)(a1 + 304);
        if (v47) {
          goto LABEL_153;
        }
        int v74 = (void *)(*v120 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v120) {
          int v74 = (void *)*v74;
        }
        uint64_t v47 = sub_15C1918((uint64_t)v74);
        *(void *)(a1 + 304) = v47;
LABEL_152:
        char v7 = *(unsigned __int8 **)v125;
LABEL_153:
        uint64_t v16 = (uint64_t)sub_1198F14(a3, v47, v7);
        goto LABEL_235;
      case 0x11u:
        if (v8 != 138) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 0x8000u;
        uint64_t v75 = *(void *)(a1 + 312);
        if (!v75)
        {
          uint64_t v76 = (void *)(*v120 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v120) {
            uint64_t v76 = (void *)*v76;
          }
          sub_1478F54((uint64_t)v76);
          uint64_t v75 = v77;
          *(void *)(a1 + 312) = v77;
          char v7 = *(unsigned __int8 **)v125;
        }
        uint64_t v16 = sub_11793D8(a3, v75, v7);
        goto LABEL_235;
      case 0x12u:
        if (v8 != 146) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 0x10000u;
        uint64_t v78 = *(void *)(a1 + 320);
        if (!v78)
        {
          unsigned int v79 = (void *)(*v120 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v120) {
            unsigned int v79 = (void *)*v79;
          }
          sub_147937C((uint64_t)v79);
          uint64_t v78 = v80;
          *(void *)(a1 + 320) = v80;
          char v7 = *(unsigned __int8 **)v125;
        }
        uint64_t v16 = sub_1179468(a3, v78, v7);
        goto LABEL_235;
      case 0x13u:
        if (v8 != 154) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v81 = *(void *)(a1 + 8);
        unint64_t v28 = (uint64_t *)(v81 & 0xFFFFFFFFFFFFFFFCLL);
        if (v81) {
          unint64_t v28 = (uint64_t *)*v28;
        }
        uint64_t v29 = (void *)(a1 + 216);
        goto LABEL_234;
      case 0x14u:
        if (v8 != 160) {
          goto LABEL_251;
        }
        unsigned int v82 = (char *)(v7 + 1);
        unint64_t v83 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_174;
        }
        int v84 = *v82;
        int v85 = v83 + (v84 << 7);
        unint64_t v83 = (v85 - 128);
        if (v84 < 0)
        {
          *(void *)v125 = sub_188C138((uint64_t)v7, (v85 - 128));
          if (!*(void *)v125) {
            goto LABEL_265;
          }
          unint64_t v83 = v111;
        }
        else
        {
          unsigned int v82 = (char *)(v7 + 2);
LABEL_174:
          *(void *)v125 = v82;
        }
        if (v83 > 4)
        {
          if (*v120) {
            int v119 = (std::string *)((*v120 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v119 = (std::string *)sub_188DBD8(v120);
          }
          sub_188C020(20, v83, v119);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x80000u;
          *(_DWORD *)(a1 + 340) = v83;
        }
        goto LABEL_236;
      case 0x15u:
        if (v8 != 170) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v86 = *(void *)(a1 + 8);
        unint64_t v28 = (uint64_t *)(v86 & 0xFFFFFFFFFFFFFFFCLL);
        if (v86) {
          unint64_t v28 = (uint64_t *)*v28;
        }
        uint64_t v29 = (void *)(a1 + 224);
        goto LABEL_234;
      case 0x16u:
        if (v8 != 178) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v87 = *(void *)(a1 + 8);
        unint64_t v28 = (uint64_t *)(v87 & 0xFFFFFFFFFFFFFFFCLL);
        if (v87) {
          unint64_t v28 = (uint64_t *)*v28;
        }
        uint64_t v29 = (void *)(a1 + 232);
        goto LABEL_234;
      case 0x17u:
        if (v8 != 186) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v88 = *(void *)(a1 + 8);
        unint64_t v28 = (uint64_t *)(v88 & 0xFFFFFFFFFFFFFFFCLL);
        if (v88) {
          unint64_t v28 = (uint64_t *)*v28;
        }
        uint64_t v29 = (void *)(a1 + 240);
        goto LABEL_234;
      case 0x18u:
        if (v8 != 194) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v89 = *(void *)(a1 + 8);
        unint64_t v28 = (uint64_t *)(v89 & 0xFFFFFFFFFFFFFFFCLL);
        if (v89) {
          unint64_t v28 = (uint64_t *)*v28;
        }
        uint64_t v29 = (void *)(a1 + 248);
        goto LABEL_234;
      case 0x19u:
        if (v8 != 202) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 0x20000u;
        uint64_t v31 = *(void *)(a1 + 328);
        if (v31) {
          goto LABEL_199;
        }
        uint64_t v90 = (void *)(*v120 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v120) {
          uint64_t v90 = (void *)*v90;
        }
        uint64_t v31 = sub_15C19EC((uint64_t)v90);
        *(void *)(a1 + 328) = v31;
LABEL_198:
        char v7 = *(unsigned __int8 **)v125;
LABEL_199:
        uint64_t v16 = (uint64_t)sub_11E1C60(a3, v31, v7);
        goto LABEL_235;
      case 0x1Au:
        if (v8 != 210) {
          goto LABEL_251;
        }
        unsigned int v91 = (char *)(v7 - 2);
        while (1)
        {
          uint64_t v92 = (unsigned __int8 *)(v91 + 2);
          *(void *)v125 = v91 + 2;
          uint64_t v93 = *(_DWORD **)(a1 + 160);
          if (v93 && (uint64_t v94 = *(int *)(a1 + 152), (int)v94 < *v93))
          {
            *(_DWORD *)(a1 + 152) = v94 + 1;
            uint64_t v95 = *(void *)&v93[2 * v94 + 2];
          }
          else
          {
            uint64_t v96 = sub_128DC90(*v123);
            uint64_t v95 = sub_188CDC8((uint64_t)v123, (uint64_t)v96);
            uint64_t v92 = *(unsigned __int8 **)v125;
          }
          unsigned int v91 = sub_128A980(a3, v95, v92);
          *(void *)v125 = v91;
          if (!v91) {
            goto LABEL_265;
          }
          if (*(void *)a3 <= (unint64_t)v91 || *(_WORD *)v91 != 466) {
            goto LABEL_236;
          }
        }
      case 0x1Eu:
        if (v8 != 242) {
          goto LABEL_251;
        }
        uint64_t v97 = v7 - 2;
        while (1)
        {
          uint64_t v98 = v97 + 2;
          *(void *)v125 = v97 + 2;
          uint64_t v99 = *(_DWORD **)(a1 + 184);
          if (v99 && (uint64_t v100 = *(int *)(a1 + 176), (int)v100 < *v99))
          {
            *(_DWORD *)(a1 + 176) = v100 + 1;
            uint64_t v101 = *(void *)&v99[2 * v100 + 2];
          }
          else
          {
            uint64_t v102 = sub_128DDA8(*v124);
            uint64_t v101 = sub_188CDC8((uint64_t)v124, (uint64_t)v102);
            uint64_t v98 = *(unsigned __int8 **)v125;
          }
          uint64_t v97 = (unsigned __int8 *)sub_128AA10(a3, v101, v98);
          *(void *)v125 = v97;
          if (!v97) {
            goto LABEL_265;
          }
          if (*(void *)a3 <= (unint64_t)v97 || *(_WORD *)v97 != 498) {
            goto LABEL_236;
          }
        }
      case 0x1Fu:
        if (v8 != 248) {
          goto LABEL_251;
        }
        v121 |= 0x100000u;
        uint64_t v103 = (char *)(v7 + 1);
        int v104 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_224;
        }
        int v105 = *v103;
        int v104 = v104 + (v105 << 7) - 128;
        if (v105 < 0)
        {
          uint64_t v112 = sub_188C0D0((uint64_t)v7, v104);
          *(void *)v125 = v112;
          *(_DWORD *)(a1 + 344) = v113;
          if (!v112) {
            goto LABEL_265;
          }
        }
        else
        {
          uint64_t v103 = (char *)(v7 + 2);
LABEL_224:
          *(void *)v125 = v103;
          *(_DWORD *)(a1 + 344) = v104;
        }
        goto LABEL_236;
      case 0x20u:
        if ((_BYTE)v8) {
          goto LABEL_251;
        }
        v121 |= 0x200000u;
        int v106 = (char *)(v7 + 1);
        int v107 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_229;
        }
        int v108 = *v106;
        int v107 = v107 + (v108 << 7) - 128;
        if (v108 < 0)
        {
          uint64_t v114 = sub_188C0D0((uint64_t)v7, v107);
          *(void *)v125 = v114;
          *(_DWORD *)(a1 + 348) = v115;
          if (!v114) {
            goto LABEL_265;
          }
        }
        else
        {
          int v106 = (char *)(v7 + 2);
LABEL_229:
          *(void *)v125 = v106;
          *(_DWORD *)(a1 + 348) = v107;
        }
        goto LABEL_236;
      case 0x21u:
        if (v8 != 10) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        uint64_t v109 = *(void *)(a1 + 8);
        unint64_t v28 = (uint64_t *)(v109 & 0xFFFFFFFFFFFFFFFCLL);
        if (v109) {
          unint64_t v28 = (uint64_t *)*v28;
        }
        uint64_t v29 = (void *)(a1 + 256);
LABEL_234:
        v110 = (std::string *)sub_1880F84(v29, v28);
        uint64_t v16 = (uint64_t)sub_188C244(v110, *(char **)v125, (uint64_t)a3);
        goto LABEL_235;
      default:
        goto LABEL_251;
    }
  }
}

char *sub_128A860(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1285908(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_128A8F0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1286344(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_128A980(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1286A68(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_128AA10(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1288328(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_128AAA0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 264);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      int v9 = v4 + 2;
    }
    uint64_t v4 = sub_144E240(v7, v9, a3);
  }
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 272);
    *uint64_t v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    uint64_t v4 = sub_15BA180(v10, (unint64_t)v12, a3);
  }
  uint64_t v13 = *(unsigned int *)(a1 + 24);
  if ((int)v13 >= 1)
  {
    for (uint64_t i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v15 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *uint64_t v4 = 24;
      v4[1] = v15;
      if (v15 > 0x7F)
      {
        v4[1] = v15 | 0x80;
        unint64_t v16 = v15 >> 7;
        v4[2] = v15 >> 7;
        v4 += 3;
        if (v15 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v17 = v16 >> 14;
            v16 >>= 7;
            *v4++ = v16;
          }
          while (v17);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v18 = *(void *)(a1 + 280);
    *uint64_t v4 = 34;
    unsigned int v19 = *(_DWORD *)(v18 + 44);
    v4[1] = v19;
    if (v19 > 0x7F) {
      int v20 = sub_188A9CC(v19, v4 + 1);
    }
    else {
      int v20 = v4 + 2;
    }
    uint64_t v4 = sub_144E240(v18, v20, a3);
    if ((v6 & 1) == 0)
    {
LABEL_26:
      if ((v6 & 2) == 0) {
        goto LABEL_27;
      }
      goto LABEL_37;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_26;
  }
  uint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 192) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 2) == 0)
  {
LABEL_27:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 200) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x1000) == 0)
  {
LABEL_28:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_44;
  }
LABEL_38:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v21 = *(void *)(a1 + 288);
  *uint64_t v4 = 58;
  unsigned int v22 = *(_DWORD *)(v21 + 20);
  v4[1] = v22;
  if (v22 > 0x7F) {
    int v23 = sub_188A9CC(v22, v4 + 1);
  }
  else {
    int v23 = v4 + 2;
  }
  uint64_t v4 = sub_15B1A68(v21, (unint64_t)v23, a3);
  if ((v6 & 0x40000) != 0)
  {
LABEL_44:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v24 = *(_DWORD *)(a1 + 336);
    *uint64_t v4 = 69;
    *(_DWORD *)(v4 + 1) = v24;
    v4 += 5;
  }
LABEL_47:
  int v25 = *(_DWORD *)(a1 + 48);
  if (v25)
  {
    for (int j = 0; j != v25; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v27 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      *uint64_t v4 = 74;
      unsigned int v28 = *(_DWORD *)(v27 + 20);
      v4[1] = v28;
      if (v28 > 0x7F) {
        uint64_t v29 = sub_188A9CC(v28, v4 + 1);
      }
      else {
        uint64_t v29 = v4 + 2;
      }
      uint64_t v4 = sub_1285C68(v27, (unint64_t)v29, a3);
    }
  }
  uint64_t v30 = *(unsigned int *)(a1 + 72);
  if ((int)v30 >= 1)
  {
    uint64_t v31 = 0;
    uint64_t v32 = 8 * v30;
    do
    {
      uint64_t v4 = (unsigned char *)sub_125CE58(a3, 10, *(void *)(*(void *)(a1 + 80) + v31 + 8), v4);
      v31 += 8;
    }
    while (v32 != v31);
  }
  if ((v6 & 4) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 11, (const void **)(*(void *)(a1 + 208) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v33 = *(void *)(a1 + 296);
    *uint64_t v4 = 98;
    unsigned int v34 = *(_DWORD *)(v33 + 44);
    v4[1] = v34;
    if (v34 > 0x7F) {
      uint64_t v35 = sub_188A9CC(v34, v4 + 1);
    }
    else {
      uint64_t v35 = v4 + 2;
    }
    uint64_t v4 = sub_15B0C0C(v33, v35, a3);
  }
  uint64_t v36 = *(unsigned int *)(a1 + 88);
  if ((int)v36 >= 1)
  {
    for (uint64_t k = 0; k != v36; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v38 = *(int *)(*(void *)(a1 + 96) + 4 * k);
      *uint64_t v4 = 104;
      v4[1] = v38;
      if (v38 > 0x7F)
      {
        v4[1] = v38 | 0x80;
        unint64_t v39 = v38 >> 7;
        v4[2] = v38 >> 7;
        v4 += 3;
        if (v38 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v40 = v39 >> 14;
            v39 >>= 7;
            *v4++ = v39;
          }
          while (v40);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v41 = *(unsigned int *)(a1 + 104);
  if ((int)v41 >= 1)
  {
    for (uint64_t m = 0; m != v41; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v43 = *(int *)(*(void *)(a1 + 112) + 4 * m);
      *uint64_t v4 = 112;
      v4[1] = v43;
      if (v43 > 0x7F)
      {
        v4[1] = v43 | 0x80;
        unint64_t v44 = v43 >> 7;
        v4[2] = v43 >> 7;
        v4 += 3;
        if (v43 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v45 = v44 >> 14;
            v44 >>= 7;
            *v4++ = v44;
          }
          while (v45);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  int v46 = *(_DWORD *)(a1 + 128);
  if (v46)
  {
    for (int n = 0; n != v46; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v48 = *(void *)(*(void *)(a1 + 136) + 8 * n + 8);
      *uint64_t v4 = 122;
      unsigned int v49 = *(_DWORD *)(v48 + 20);
      v4[1] = v49;
      if (v49 > 0x7F) {
        unint64_t v50 = sub_188A9CC(v49, v4 + 1);
      }
      else {
        unint64_t v50 = v4 + 2;
      }
      uint64_t v4 = sub_12865D8(v48, v50, a3);
    }
  }
  if ((v6 & 0x4000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v51 = *(void *)(a1 + 304);
    *(_WORD *)uint64_t v4 = 386;
    unsigned int v52 = *(_DWORD *)(v51 + 44);
    v4[2] = v52;
    if (v52 > 0x7F) {
      int v53 = sub_188A9CC(v52, v4 + 2);
    }
    else {
      int v53 = v4 + 3;
    }
    uint64_t v4 = sub_15B0C0C(v51, v53, a3);
    if ((v6 & 0x8000) == 0)
    {
LABEL_95:
      if ((v6 & 0x10000) == 0) {
        goto LABEL_96;
      }
      goto LABEL_111;
    }
  }
  else if ((v6 & 0x8000) == 0)
  {
    goto LABEL_95;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v54 = *(void *)(a1 + 312);
  *(_WORD *)uint64_t v4 = 394;
  unsigned int v55 = *(_DWORD *)(v54 + 28);
  v4[2] = v55;
  if (v55 > 0x7F) {
    unint64_t v56 = sub_188A9CC(v55, v4 + 2);
  }
  else {
    unint64_t v56 = v4 + 3;
  }
  uint64_t v4 = sub_1466BF0(v54, v56, a3);
  if ((v6 & 0x10000) == 0)
  {
LABEL_96:
    if ((v6 & 8) == 0) {
      goto LABEL_97;
    }
    goto LABEL_117;
  }
LABEL_111:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v57 = *(void *)(a1 + 320);
  *(_WORD *)uint64_t v4 = 402;
  unsigned int v58 = *(_DWORD *)(v57 + 20);
  v4[2] = v58;
  if (v58 > 0x7F) {
    unint64_t v59 = sub_188A9CC(v58, v4 + 2);
  }
  else {
    unint64_t v59 = v4 + 3;
  }
  uint64_t v4 = sub_146ECEC(v57, (unint64_t)v59, a3);
  if ((v6 & 8) == 0)
  {
LABEL_97:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_124;
    }
    goto LABEL_118;
  }
LABEL_117:
  uint64_t v4 = sub_117A0AC(a3, 19, (const void **)(*(void *)(a1 + 216) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x80000) == 0) {
    goto LABEL_124;
  }
LABEL_118:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v60 = *(int *)(a1 + 340);
  *(_WORD *)uint64_t v4 = 416;
  v4[2] = v60;
  if (v60 > 0x7F)
  {
    v4[2] = v60 | 0x80;
    unint64_t v61 = v60 >> 7;
    v4[3] = v60 >> 7;
    v4 += 4;
    if (v60 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v62 = v61 >> 14;
        v61 >>= 7;
        *v4++ = v61;
      }
      while (v62);
    }
  }
  else
  {
    v4 += 3;
  }
LABEL_124:
  if ((v6 & 0x10) != 0)
  {
    uint64_t v4 = sub_117A0AC(a3, 21, (const void **)(*(void *)(a1 + 224) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 0x20) == 0)
    {
LABEL_126:
      if ((v6 & 0x40) == 0) {
        goto LABEL_127;
      }
      goto LABEL_132;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_126;
  }
  uint64_t v4 = sub_117A0AC(a3, 22, (const void **)(*(void *)(a1 + 232) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x40) == 0)
  {
LABEL_127:
    if ((v6 & 0x80) == 0) {
      goto LABEL_128;
    }
    goto LABEL_133;
  }
LABEL_132:
  uint64_t v4 = sub_117A0AC(a3, 23, (const void **)(*(void *)(a1 + 240) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x80) == 0)
  {
LABEL_128:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_140;
    }
    goto LABEL_134;
  }
LABEL_133:
  uint64_t v4 = sub_117A0AC(a3, 24, (const void **)(*(void *)(a1 + 248) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20000) == 0) {
    goto LABEL_140;
  }
LABEL_134:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v63 = *(void *)(a1 + 328);
  *(_WORD *)uint64_t v4 = 458;
  unsigned int v64 = *(_DWORD *)(v63 + 20);
  v4[2] = v64;
  if (v64 > 0x7F) {
    int v65 = sub_188A9CC(v64, v4 + 2);
  }
  else {
    int v65 = v4 + 3;
  }
  uint64_t v4 = sub_15B1A68(v63, (unint64_t)v65, a3);
LABEL_140:
  int v66 = *(_DWORD *)(a1 + 152);
  if (v66)
  {
    for (iuint64_t i = 0; ii != v66; ++ii)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v68 = *(void *)(*(void *)(a1 + 160) + 8 * ii + 8);
      *(_WORD *)uint64_t v4 = 466;
      unsigned int v69 = *(_DWORD *)(v68 + 20);
      v4[2] = v69;
      if (v69 > 0x7F) {
        uint64_t v70 = sub_188A9CC(v69, v4 + 2);
      }
      else {
        uint64_t v70 = v4 + 3;
      }
      uint64_t v4 = sub_1286D40(v68, (unint64_t)v70, a3);
    }
  }
  int v71 = *(_DWORD *)(a1 + 176);
  if (v71)
  {
    for (jint j = 0; jj != v71; ++jj)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v73 = *(void *)(*(void *)(a1 + 184) + 8 * jj + 8);
      *(_WORD *)uint64_t v4 = 498;
      unsigned int v74 = *(_DWORD *)(v73 + 20);
      v4[2] = v74;
      if (v74 > 0x7F) {
        uint64_t v75 = sub_188A9CC(v74, v4 + 2);
      }
      else {
        uint64_t v75 = v4 + 3;
      }
      uint64_t v4 = sub_1288884(v73, v75, a3);
    }
  }
  if ((v6 & 0x100000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v76 = *(_DWORD *)(a1 + 344);
    *(_WORD *)uint64_t v4 = 504;
    v4[2] = v76;
    if (v76 > 0x7F)
    {
      v4[2] = v76 | 0x80;
      unsigned int v77 = v76 >> 7;
      v4[3] = v76 >> 7;
      v4 += 4;
      if (v76 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v78 = v77 >> 14;
          v77 >>= 7;
          *v4++ = v77;
        }
        while (v78);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x200000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v79 = *(_DWORD *)(a1 + 348);
    *(_WORD *)uint64_t v4 = 640;
    v4[2] = v79;
    if (v79 > 0x7F)
    {
      v4[2] = v79 | 0x80;
      unsigned int v80 = v79 >> 7;
      v4[3] = v79 >> 7;
      v4 += 4;
      if (v79 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v81 = v80 >> 14;
          v80 >>= 7;
          *v4++ = v80;
        }
        while (v81);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x100) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 33, (const void **)(*(void *)(a1 + 256) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v82 = *(void *)(a1 + 8);
  if ((v82 & 1) == 0) {
    return v4;
  }
  unint64_t v84 = v82 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v84 + 31) < 0)
  {
    int v85 = *(void **)(v84 + 8);
    uint64_t v86 = *(void *)(v84 + 16);
  }
  else
  {
    int v85 = (void *)(v84 + 8);
    LODWORD(v86) = *(unsigned __int8 *)(v84 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v86)
  {
    uint64_t v87 = (int)v86;
    memcpy(v4, v85, (int)v86);
    v4 += v87;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v85, v86, v4);
}

uint64_t sub_128B614(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    uint64_t v3 = 0;
    int v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v4);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v3 += v6;
      ++v4;
    }
    while (v2 != v4);
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v7 = v3 + v2;
  uint64_t v8 = *(int *)(a1 + 48);
  uint64_t v9 = v7 + v8;
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1285F1C(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(unsigned int *)(a1 + 72);
  uint64_t v16 = v9 + v15;
  if ((int)v15 >= 1)
  {
    unint64_t v17 = (uint64_t *)(*(void *)(a1 + 80) + 8);
    do
    {
      uint64_t v18 = *v17++;
      uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
      uint64_t v20 = *(void *)(v18 + 8);
      if ((v19 & 0x80u) == 0) {
        uint64_t v20 = v19;
      }
      v16 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6);
      --v15;
    }
    while (v15);
  }
  uint64_t v21 = *(unsigned int *)(a1 + 88);
  if (v21)
  {
    int v22 = 0;
    uint64_t v23 = 0;
    do
    {
      int v24 = *(_DWORD *)(*(void *)(a1 + 96) + 4 * v22);
      if (v24 < 0) {
        uint64_t v25 = 10;
      }
      else {
        uint64_t v25 = (9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6;
      }
      v23 += v25;
      ++v22;
    }
    while (v21 != v22);
  }
  else
  {
    uint64_t v23 = 0;
  }
  uint64_t v26 = *(unsigned int *)(a1 + 104);
  if (v26)
  {
    int v27 = 0;
    uint64_t v28 = 0;
    do
    {
      int v29 = *(_DWORD *)(*(void *)(a1 + 112) + 4 * v27);
      if (v29 < 0) {
        uint64_t v30 = 10;
      }
      else {
        uint64_t v30 = (9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6;
      }
      v28 += v30;
      ++v27;
    }
    while (v26 != v27);
  }
  else
  {
    uint64_t v28 = 0;
  }
  uint64_t v31 = *(int *)(a1 + 128);
  uint64_t v32 = v16 + v21 + v23 + v26 + v28 + v31;
  uint64_t v33 = *(void *)(a1 + 136);
  if (v33) {
    unsigned int v34 = (uint64_t *)(v33 + 8);
  }
  else {
    unsigned int v34 = 0;
  }
  if (v31)
  {
    uint64_t v35 = 8 * v31;
    do
    {
      uint64_t v36 = *v34++;
      uint64_t v37 = sub_128672C(v36);
      v32 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6);
      v35 -= 8;
    }
    while (v35);
  }
  uint64_t v38 = *(int *)(a1 + 152);
  uint64_t v39 = v32 + 2 * v38;
  uint64_t v40 = *(void *)(a1 + 160);
  if (v40) {
    uint64_t v41 = (uint64_t *)(v40 + 8);
  }
  else {
    uint64_t v41 = 0;
  }
  if (v38)
  {
    uint64_t v42 = 8 * v38;
    do
    {
      uint64_t v43 = *v41++;
      uint64_t v44 = sub_1286FDC(v43);
      v39 += v44 + ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6);
      v42 -= 8;
    }
    while (v42);
  }
  uint64_t v45 = *(int *)(a1 + 176);
  uint64_t v46 = v39 + 2 * v45;
  uint64_t v47 = *(void *)(a1 + 184);
  if (v47) {
    uint64_t v48 = (uint64_t *)(v47 + 8);
  }
  else {
    uint64_t v48 = 0;
  }
  if (v45)
  {
    uint64_t v49 = 8 * v45;
    do
    {
      uint64_t v50 = *v48++;
      uint64_t v51 = sub_1288C88(v50);
      v46 += v51 + ((9 * (__clz(v51 | 1) ^ 0x1F) + 73) >> 6);
      v49 -= 8;
    }
    while (v49);
  }
  int v52 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v52) {
    goto LABEL_66;
  }
  if (v52)
  {
    unint64_t v61 = *(void *)(a1 + 192) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v62 = *(unsigned __int8 *)(v61 + 23);
    uint64_t v63 = *(void *)(v61 + 8);
    if ((v62 & 0x80u) == 0) {
      uint64_t v63 = v62;
    }
    v46 += v63 + ((9 * (__clz(v63 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v52 & 2) == 0)
    {
LABEL_57:
      if ((v52 & 4) == 0) {
        goto LABEL_58;
      }
      goto LABEL_95;
    }
  }
  else if ((v52 & 2) == 0)
  {
    goto LABEL_57;
  }
  unint64_t v64 = *(void *)(a1 + 200) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v65 = *(unsigned __int8 *)(v64 + 23);
  uint64_t v66 = *(void *)(v64 + 8);
  if ((v65 & 0x80u) == 0) {
    uint64_t v66 = v65;
  }
  v46 += v66 + ((9 * (__clz(v66 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v52 & 4) == 0)
  {
LABEL_58:
    if ((v52 & 8) == 0) {
      goto LABEL_59;
    }
    goto LABEL_98;
  }
LABEL_95:
  unint64_t v67 = *(void *)(a1 + 208) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v68 = *(unsigned __int8 *)(v67 + 23);
  uint64_t v69 = *(void *)(v67 + 8);
  if ((v68 & 0x80u) == 0) {
    uint64_t v69 = v68;
  }
  v46 += v69 + ((9 * (__clz(v69 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v52 & 8) == 0)
  {
LABEL_59:
    if ((v52 & 0x10) == 0) {
      goto LABEL_60;
    }
    goto LABEL_101;
  }
LABEL_98:
  unint64_t v70 = *(void *)(a1 + 216) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v71 = *(unsigned __int8 *)(v70 + 23);
  uint64_t v72 = *(void *)(v70 + 8);
  if ((v71 & 0x80u) == 0) {
    uint64_t v72 = v71;
  }
  v46 += v72 + ((9 * (__clz(v72 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v52 & 0x10) == 0)
  {
LABEL_60:
    if ((v52 & 0x20) == 0) {
      goto LABEL_61;
    }
LABEL_104:
    unint64_t v76 = *(void *)(a1 + 232) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v77 = *(unsigned __int8 *)(v76 + 23);
    uint64_t v78 = *(void *)(v76 + 8);
    if ((v77 & 0x80u) == 0) {
      uint64_t v78 = v77;
    }
    v46 += v78 + ((9 * (__clz(v78 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v52 & 0x40) == 0)
    {
LABEL_62:
      if ((v52 & 0x80) == 0) {
        goto LABEL_66;
      }
      goto LABEL_63;
    }
    goto LABEL_107;
  }
LABEL_101:
  unint64_t v73 = *(void *)(a1 + 224) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v74 = *(unsigned __int8 *)(v73 + 23);
  uint64_t v75 = *(void *)(v73 + 8);
  if ((v74 & 0x80u) == 0) {
    uint64_t v75 = v74;
  }
  v46 += v75 + ((9 * (__clz(v75 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v52 & 0x20) != 0) {
    goto LABEL_104;
  }
LABEL_61:
  if ((v52 & 0x40) == 0) {
    goto LABEL_62;
  }
LABEL_107:
  unint64_t v79 = *(void *)(a1 + 240) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v80 = *(unsigned __int8 *)(v79 + 23);
  uint64_t v81 = *(void *)(v79 + 8);
  if ((v80 & 0x80u) == 0) {
    uint64_t v81 = v80;
  }
  v46 += v81 + ((9 * (__clz(v81 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v52 & 0x80) != 0)
  {
LABEL_63:
    unint64_t v53 = *(void *)(a1 + 248) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v54 = *(unsigned __int8 *)(v53 + 23);
    uint64_t v55 = *(void *)(v53 + 8);
    if ((v54 & 0x80u) == 0) {
      uint64_t v55 = v54;
    }
    v46 += v55 + ((9 * (__clz(v55 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_66:
  if ((v52 & 0xFF00) == 0) {
    goto LABEL_76;
  }
  if ((v52 & 0x100) != 0)
  {
    unint64_t v82 = *(void *)(a1 + 256) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v83 = *(unsigned __int8 *)(v82 + 23);
    uint64_t v84 = *(void *)(v82 + 8);
    if ((v83 & 0x80u) == 0) {
      uint64_t v84 = v83;
    }
    v46 += v84 + ((9 * (__clz(v84 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v52 & 0x200) == 0)
    {
LABEL_69:
      if ((v52 & 0x400) == 0) {
        goto LABEL_70;
      }
      goto LABEL_115;
    }
  }
  else if ((v52 & 0x200) == 0)
  {
    goto LABEL_69;
  }
  uint64_t v85 = sub_144EC20(*(void *)(a1 + 264));
  v46 += v85 + ((9 * (__clz(v85 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v52 & 0x400) == 0)
  {
LABEL_70:
    if ((v52 & 0x800) == 0) {
      goto LABEL_71;
    }
    goto LABEL_116;
  }
LABEL_115:
  unint64_t v86 = sub_15BA324(*(void *)(a1 + 272));
  v46 += v86 + ((9 * (__clz(v86 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v52 & 0x800) == 0)
  {
LABEL_71:
    if ((v52 & 0x1000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_117;
  }
LABEL_116:
  uint64_t v87 = sub_144EC20(*(void *)(a1 + 280));
  v46 += v87 + ((9 * (__clz(v87 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v52 & 0x1000) == 0)
  {
LABEL_72:
    if ((v52 & 0x2000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_118;
  }
LABEL_117:
  uint64_t v88 = sub_15B1D1C(*(void *)(a1 + 288));
  v46 += v88 + ((9 * (__clz(v88 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v52 & 0x2000) == 0)
  {
LABEL_73:
    if ((v52 & 0x4000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_119;
  }
LABEL_118:
  uint64_t v89 = sub_15B0D90(*(void *)(a1 + 296));
  v46 += v89 + ((9 * (__clz(v89 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v52 & 0x4000) == 0)
  {
LABEL_74:
    if ((v52 & 0x8000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_75;
  }
LABEL_119:
  uint64_t v90 = sub_15B0D90(*(void *)(a1 + 304));
  v46 += v90 + ((9 * (__clz(v90 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v52 & 0x8000) != 0)
  {
LABEL_75:
    uint64_t v56 = sub_1468738(*(void *)(a1 + 312));
    v46 += v56 + ((9 * (__clz(v56 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_76:
  if ((v52 & 0x3F0000) == 0) {
    goto LABEL_87;
  }
  if ((v52 & 0x10000) != 0)
  {
    uint64_t v57 = sub_146F320(*(void *)(a1 + 320));
    v46 += v57 + ((9 * (__clz(v57 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  if ((v52 & 0x20000) != 0)
  {
    uint64_t v58 = sub_15B1D1C(*(void *)(a1 + 328));
    v46 += v58 + ((9 * (__clz(v58 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  if ((v52 & 0x40000) != 0) {
    v46 += 5;
  }
  if ((v52 & 0x80000) != 0)
  {
    int v91 = *(_DWORD *)(a1 + 340);
    uint64_t v92 = ((9 * (__clz(v91 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v91 >= 0) {
      uint64_t v93 = v92;
    }
    else {
      uint64_t v93 = 12;
    }
    v46 += v93;
    if ((v52 & 0x100000) == 0)
    {
LABEL_85:
      if ((v52 & 0x200000) == 0) {
        goto LABEL_87;
      }
      goto LABEL_86;
    }
  }
  else if ((v52 & 0x100000) == 0)
  {
    goto LABEL_85;
  }
  v46 += ((9 * (__clz(*(_DWORD *)(a1 + 344) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v52 & 0x200000) != 0) {
LABEL_86:
  }
    v46 += ((9 * (__clz(*(_DWORD *)(a1 + 348) | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_87:
  uint64_t v59 = *(void *)(a1 + 8);
  if (v59)
  {
    unint64_t v94 = v59 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v94 + 31) < 0) {
      uint64_t v95 = *(void *)(v94 + 16);
    }
    else {
      uint64_t v95 = *(unsigned __int8 *)(v94 + 31);
    }
    v46 += v95;
  }
  *(_DWORD *)(a1 + 20) = v46;
  return v46;
}

void sub_128BE24(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188C80C((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 48);
  if (v8)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    uint64_t v10 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_12C3BBC((std::string *)(a1 + 40), v10, v9, v8, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v11 = *(_DWORD *)(a1 + 48) + v8;
    *(_DWORD *)(a1 + 48) = v11;
    uint64_t v12 = *(int **)(a1 + 56);
    if (*v12 < v11) {
      *uint64_t v12 = v11;
    }
  }
  int v13 = *(_DWORD *)(a2 + 72);
  if (v13)
  {
    uint64_t v14 = (const std::string **)(*(void *)(a2 + 80) + 8);
    uint64_t v15 = (std::string **)sub_188CCE4(a1 + 64, *(_DWORD *)(a2 + 72));
    sub_188FB98(a1 + 64, v15, v14, v13, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v16 = *(_DWORD *)(a1 + 72) + v13;
    *(_DWORD *)(a1 + 72) = v16;
    unint64_t v17 = *(int **)(a1 + 80);
    if (*v17 < v16) {
      int *v17 = v16;
    }
  }
  int v18 = *(_DWORD *)(a2 + 88);
  if (v18)
  {
    uint64_t v19 = *(int *)(a1 + 88);
    sub_188C80C((unsigned int *)(a1 + 88), v19 + v18);
    uint64_t v20 = *(void *)(a1 + 96);
    *(_DWORD *)(a1 + 88) += *(_DWORD *)(a2 + 88);
    memcpy((void *)(v20 + 4 * v19), *(const void **)(a2 + 96), 4 * *(int *)(a2 + 88));
  }
  int v21 = *(_DWORD *)(a2 + 104);
  if (v21)
  {
    uint64_t v22 = *(int *)(a1 + 104);
    sub_188C80C((unsigned int *)(a1 + 104), v22 + v21);
    uint64_t v23 = *(void *)(a1 + 112);
    *(_DWORD *)(a1 + 104) += *(_DWORD *)(a2 + 104);
    memcpy((void *)(v23 + 4 * v22), *(const void **)(a2 + 112), 4 * *(int *)(a2 + 104));
  }
  int v24 = *(_DWORD *)(a2 + 128);
  if (v24)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    uint64_t v26 = (std::string **)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_12C3C48((uint64_t *)(a1 + 120), v26, v25, v24, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v27 = *(_DWORD *)(a1 + 128) + v24;
    *(_DWORD *)(a1 + 128) = v27;
    uint64_t v28 = *(int **)(a1 + 136);
    if (*v28 < v27) {
      int *v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 152);
  if (v29)
  {
    uint64_t v30 = (uint64_t *)(*(void *)(a2 + 160) + 8);
    uint64_t v31 = (std::string **)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_12C3CD4((std::string *)(a1 + 144), v31, v30, v29, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v32 = *(_DWORD *)(a1 + 152) + v29;
    *(_DWORD *)(a1 + 152) = v32;
    uint64_t v33 = *(int **)(a1 + 160);
    if (*v33 < v32) {
      int *v33 = v32;
    }
  }
  int v34 = *(_DWORD *)(a2 + 176);
  if (v34)
  {
    uint64_t v35 = (uint64_t *)(*(void *)(a2 + 184) + 8);
    uint64_t v36 = (uint64_t *)sub_188CCE4(a1 + 168, *(_DWORD *)(a2 + 176));
    sub_12C3D50((uint64_t *)(a1 + 168), v36, v35, v34, **(_DWORD **)(a1 + 184) - *(_DWORD *)(a1 + 176));
    int v37 = *(_DWORD *)(a1 + 176) + v34;
    *(_DWORD *)(a1 + 176) = v37;
    uint64_t v38 = *(int **)(a1 + 184);
    if (*v38 < v37) {
      *uint64_t v38 = v37;
    }
  }
  int v39 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v39) {
    goto LABEL_56;
  }
  if (v39)
  {
    uint64_t v40 = (long long *)(*(void *)(a2 + 192) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v41 = *(void *)(a1 + 8);
    uint64_t v42 = (uint64_t *)(v41 & 0xFFFFFFFFFFFFFFFCLL);
    if (v41) {
      uint64_t v42 = (uint64_t *)*v42;
    }
    sub_1881DF4((std::string **)(a1 + 192), v40, v42);
    if ((v39 & 2) == 0)
    {
LABEL_25:
      if ((v39 & 4) == 0) {
        goto LABEL_26;
      }
      goto LABEL_38;
    }
  }
  else if ((v39 & 2) == 0)
  {
    goto LABEL_25;
  }
  uint64_t v43 = (long long *)(*(void *)(a2 + 200) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v44 = *(void *)(a1 + 8);
  uint64_t v45 = (uint64_t *)(v44 & 0xFFFFFFFFFFFFFFFCLL);
  if (v44) {
    uint64_t v45 = (uint64_t *)*v45;
  }
  sub_1881DF4((std::string **)(a1 + 200), v43, v45);
  if ((v39 & 4) == 0)
  {
LABEL_26:
    if ((v39 & 8) == 0) {
      goto LABEL_27;
    }
    goto LABEL_41;
  }
LABEL_38:
  uint64_t v46 = (long long *)(*(void *)(a2 + 208) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v47 = *(void *)(a1 + 8);
  uint64_t v48 = (uint64_t *)(v47 & 0xFFFFFFFFFFFFFFFCLL);
  if (v47) {
    uint64_t v48 = (uint64_t *)*v48;
  }
  sub_1881DF4((std::string **)(a1 + 208), v46, v48);
  if ((v39 & 8) == 0)
  {
LABEL_27:
    if ((v39 & 0x10) == 0) {
      goto LABEL_28;
    }
    goto LABEL_44;
  }
LABEL_41:
  uint64_t v49 = (long long *)(*(void *)(a2 + 216) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v50 = *(void *)(a1 + 8);
  uint64_t v51 = (uint64_t *)(v50 & 0xFFFFFFFFFFFFFFFCLL);
  if (v50) {
    uint64_t v51 = (uint64_t *)*v51;
  }
  sub_1881DF4((std::string **)(a1 + 216), v49, v51);
  if ((v39 & 0x10) == 0)
  {
LABEL_28:
    if ((v39 & 0x20) == 0) {
      goto LABEL_29;
    }
LABEL_47:
    uint64_t v55 = (long long *)(*(void *)(a2 + 232) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v56 = *(void *)(a1 + 8);
    uint64_t v57 = (uint64_t *)(v56 & 0xFFFFFFFFFFFFFFFCLL);
    if (v56) {
      uint64_t v57 = (uint64_t *)*v57;
    }
    sub_1881DF4((std::string **)(a1 + 232), v55, v57);
    if ((v39 & 0x40) == 0)
    {
LABEL_30:
      if ((v39 & 0x80) == 0) {
        goto LABEL_56;
      }
      goto LABEL_53;
    }
    goto LABEL_50;
  }
LABEL_44:
  int v52 = (long long *)(*(void *)(a2 + 224) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x10u;
  uint64_t v53 = *(void *)(a1 + 8);
  uint64_t v54 = (uint64_t *)(v53 & 0xFFFFFFFFFFFFFFFCLL);
  if (v53) {
    uint64_t v54 = (uint64_t *)*v54;
  }
  sub_1881DF4((std::string **)(a1 + 224), v52, v54);
  if ((v39 & 0x20) != 0) {
    goto LABEL_47;
  }
LABEL_29:
  if ((v39 & 0x40) == 0) {
    goto LABEL_30;
  }
LABEL_50:
  uint64_t v58 = (long long *)(*(void *)(a2 + 240) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x40u;
  uint64_t v59 = *(void *)(a1 + 8);
  unint64_t v60 = (uint64_t *)(v59 & 0xFFFFFFFFFFFFFFFCLL);
  if (v59) {
    unint64_t v60 = (uint64_t *)*v60;
  }
  sub_1881DF4((std::string **)(a1 + 240), v58, v60);
  if ((v39 & 0x80) != 0)
  {
LABEL_53:
    unint64_t v61 = (long long *)(*(void *)(a2 + 248) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 0x80u;
    uint64_t v62 = *(void *)(a1 + 8);
    uint64_t v63 = (uint64_t *)(v62 & 0xFFFFFFFFFFFFFFFCLL);
    if (v62) {
      uint64_t v63 = (uint64_t *)*v63;
    }
    sub_1881DF4((std::string **)(a1 + 248), v61, v63);
  }
LABEL_56:
  if ((v39 & 0xFF00) == 0) {
    goto LABEL_126;
  }
  if ((v39 & 0x100) != 0)
  {
    unint64_t v64 = (long long *)(*(void *)(a2 + 256) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 0x100u;
    uint64_t v65 = *(void *)(a1 + 8);
    uint64_t v66 = (uint64_t *)(v65 & 0xFFFFFFFFFFFFFFFCLL);
    if (v65) {
      uint64_t v66 = (uint64_t *)*v66;
    }
    sub_1881DF4((std::string **)(a1 + 256), v64, v66);
  }
  if ((v39 & 0x200) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x200u;
    uint64_t v67 = *(void *)(a1 + 264);
    if (!v67)
    {
      uint64_t v68 = *(void *)(a1 + 8);
      uint64_t v69 = (void *)(v68 & 0xFFFFFFFFFFFFFFFCLL);
      if (v68) {
        uint64_t v69 = (void *)*v69;
      }
      uint64_t v67 = sub_147818C((uint64_t)v69);
      *(void *)(a1 + 264) = v67;
    }
    if (*(void *)(a2 + 264)) {
      unint64_t v70 = *(uint64_t (****)())(a2 + 264);
    }
    else {
      unint64_t v70 = &off_2538EE0;
    }
    sub_144F19C(v67, (uint64_t)v70);
    if ((v39 & 0x400) == 0)
    {
LABEL_63:
      if ((v39 & 0x800) == 0) {
        goto LABEL_64;
      }
      goto LABEL_82;
    }
  }
  else if ((v39 & 0x400) == 0)
  {
    goto LABEL_63;
  }
  *(_DWORD *)(a1 + 16) |= 0x400u;
  uint64_t v71 = *(std::string **)(a1 + 272);
  if (!v71)
  {
    uint64_t v72 = *(void *)(a1 + 8);
    unint64_t v73 = (void *)(v72 & 0xFFFFFFFFFFFFFFFCLL);
    if (v72) {
      unint64_t v73 = (void *)*v73;
    }
    uint64_t v71 = (std::string *)sub_15C2014((uint64_t)v73);
    *(void *)(a1 + 272) = v71;
  }
  if (*(void *)(a2 + 272)) {
    uint64_t v74 = *(uint64_t (****)())(a2 + 272);
  }
  else {
    uint64_t v74 = &off_253F530;
  }
  sub_1113E40(v71, (uint64_t)v74);
  if ((v39 & 0x800) == 0)
  {
LABEL_64:
    if ((v39 & 0x1000) == 0) {
      goto LABEL_98;
    }
    goto LABEL_90;
  }
LABEL_82:
  *(_DWORD *)(a1 + 16) |= 0x800u;
  uint64_t v75 = *(void *)(a1 + 280);
  if (!v75)
  {
    uint64_t v76 = *(void *)(a1 + 8);
    uint64_t v77 = (void *)(v76 & 0xFFFFFFFFFFFFFFFCLL);
    if (v76) {
      uint64_t v77 = (void *)*v77;
    }
    uint64_t v75 = sub_147818C((uint64_t)v77);
    *(void *)(a1 + 280) = v75;
  }
  if (*(void *)(a2 + 280)) {
    uint64_t v78 = *(uint64_t (****)())(a2 + 280);
  }
  else {
    uint64_t v78 = &off_2538EE0;
  }
  sub_144F19C(v75, (uint64_t)v78);
  if ((v39 & 0x1000) != 0)
  {
LABEL_90:
    *(_DWORD *)(a1 + 16) |= 0x1000u;
    uint64_t v79 = *(void *)(a1 + 288);
    if (!v79)
    {
      uint64_t v80 = *(void *)(a1 + 8);
      uint64_t v81 = (void *)(v80 & 0xFFFFFFFFFFFFFFFCLL);
      if (v80) {
        uint64_t v81 = (void *)*v81;
      }
      uint64_t v79 = sub_15C19EC((uint64_t)v81);
      *(void *)(a1 + 288) = v79;
    }
    if (*(void *)(a2 + 288)) {
      unint64_t v82 = *(uint64_t (****)())(a2 + 288);
    }
    else {
      unint64_t v82 = &off_253F208;
    }
    sub_15B1E3C(v79, (uint64_t)v82);
  }
LABEL_98:
  if ((v39 & 0x2000) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x2000u;
    uint64_t v83 = *(void *)(a1 + 296);
    if (!v83)
    {
      uint64_t v84 = *(void *)(a1 + 8);
      uint64_t v85 = (void *)(v84 & 0xFFFFFFFFFFFFFFFCLL);
      if (v84) {
        uint64_t v85 = (void *)*v85;
      }
      uint64_t v83 = sub_15C1918((uint64_t)v85);
      *(void *)(a1 + 296) = v83;
    }
    if (*(void *)(a2 + 296)) {
      unint64_t v86 = *(uint64_t (****)())(a2 + 296);
    }
    else {
      unint64_t v86 = &off_253F1A0;
    }
    sub_15B0E24(v83, (uint64_t)v86);
    if ((v39 & 0x4000) == 0)
    {
LABEL_100:
      if ((v39 & 0x8000) == 0) {
        goto LABEL_126;
      }
      goto LABEL_118;
    }
  }
  else if ((v39 & 0x4000) == 0)
  {
    goto LABEL_100;
  }
  *(_DWORD *)(a1 + 16) |= 0x4000u;
  uint64_t v87 = *(void *)(a1 + 304);
  if (!v87)
  {
    uint64_t v88 = *(void *)(a1 + 8);
    uint64_t v89 = (void *)(v88 & 0xFFFFFFFFFFFFFFFCLL);
    if (v88) {
      uint64_t v89 = (void *)*v89;
    }
    uint64_t v87 = sub_15C1918((uint64_t)v89);
    *(void *)(a1 + 304) = v87;
  }
  if (*(void *)(a2 + 304)) {
    uint64_t v90 = *(uint64_t (****)())(a2 + 304);
  }
  else {
    uint64_t v90 = &off_253F1A0;
  }
  sub_15B0E24(v87, (uint64_t)v90);
  if ((v39 & 0x8000) != 0)
  {
LABEL_118:
    *(_DWORD *)(a1 + 16) |= 0x8000u;
    uint64_t v91 = *(void *)(a1 + 312);
    if (!v91)
    {
      uint64_t v92 = *(void *)(a1 + 8);
      uint64_t v93 = (void *)(v92 & 0xFFFFFFFFFFFFFFFCLL);
      if (v92) {
        uint64_t v93 = (void *)*v93;
      }
      sub_1478F54((uint64_t)v93);
      *(void *)(a1 + 312) = v91;
    }
    if (*(void *)(a2 + 312)) {
      unint64_t v94 = *(uint64_t (****)())(a2 + 312);
    }
    else {
      unint64_t v94 = &off_2539528;
    }
    sub_146945C(v91, (uint64_t)v94);
  }
LABEL_126:
  if ((v39 & 0x3F0000) == 0) {
    goto LABEL_135;
  }
  if ((v39 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x10000u;
    uint64_t v96 = *(void *)(a1 + 320);
    if (!v96)
    {
      uint64_t v97 = *(void *)(a1 + 8);
      uint64_t v98 = (void *)(v97 & 0xFFFFFFFFFFFFFFFCLL);
      if (v97) {
        uint64_t v98 = (void *)*v98;
      }
      sub_147937C((uint64_t)v98);
      *(void *)(a1 + 320) = v96;
    }
    if (*(void *)(a2 + 320)) {
      uint64_t v99 = *(uint64_t (****)())(a2 + 320);
    }
    else {
      uint64_t v99 = &off_25398D0;
    }
    sub_13F17EC(v96, (uint64_t)v99);
    if ((v39 & 0x20000) == 0)
    {
LABEL_129:
      if ((v39 & 0x40000) == 0) {
        goto LABEL_130;
      }
      goto LABEL_155;
    }
  }
  else if ((v39 & 0x20000) == 0)
  {
    goto LABEL_129;
  }
  *(_DWORD *)(a1 + 16) |= 0x20000u;
  uint64_t v100 = *(void *)(a1 + 328);
  if (!v100)
  {
    uint64_t v101 = *(void *)(a1 + 8);
    uint64_t v102 = (void *)(v101 & 0xFFFFFFFFFFFFFFFCLL);
    if (v101) {
      uint64_t v102 = (void *)*v102;
    }
    uint64_t v100 = sub_15C19EC((uint64_t)v102);
    *(void *)(a1 + 328) = v100;
  }
  if (*(void *)(a2 + 328)) {
    uint64_t v103 = *(uint64_t (****)())(a2 + 328);
  }
  else {
    uint64_t v103 = &off_253F208;
  }
  sub_15B1E3C(v100, (uint64_t)v103);
  if ((v39 & 0x40000) == 0)
  {
LABEL_130:
    if ((v39 & 0x80000) == 0) {
      goto LABEL_131;
    }
    goto LABEL_156;
  }
LABEL_155:
  *(_DWORD *)(a1 + 336) = *(_DWORD *)(a2 + 336);
  if ((v39 & 0x80000) == 0)
  {
LABEL_131:
    if ((v39 & 0x100000) == 0) {
      goto LABEL_132;
    }
LABEL_157:
    *(_DWORD *)(a1 + 344) = *(_DWORD *)(a2 + 344);
    if ((v39 & 0x200000) == 0) {
      goto LABEL_134;
    }
    goto LABEL_133;
  }
LABEL_156:
  *(_DWORD *)(a1 + 340) = *(_DWORD *)(a2 + 340);
  if ((v39 & 0x100000) != 0) {
    goto LABEL_157;
  }
LABEL_132:
  if ((v39 & 0x200000) != 0) {
LABEL_133:
  }
    *(_DWORD *)(a1 + 348) = *(_DWORD *)(a2 + 348);
LABEL_134:
  *(_DWORD *)(a1 + 16) |= v39;
LABEL_135:
  uint64_t v95 = *(void *)(a2 + 8);
  if (v95)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v95 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_128C66C(uint64_t a1)
{
  uint64_t result = sub_128C7A0(a1 + 40);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 128);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = *(void *)(*(void *)(a1 + 136) + 8 * v3--);
      if ((*(unsigned char *)(v4 + 16) & 1) == 0) {
        return 0;
      }
    }
    uint64_t v5 = *(unsigned int *)(a1 + 176);
    while ((int)v5 >= 1)
    {
      uint64_t v6 = v5 - 1;
      char v7 = sub_1289144(*(void *)(*(void *)(a1 + 184) + 8 * v5));
      uint64_t v5 = v6;
      if ((v7 & 1) == 0) {
        return 0;
      }
    }
    int v8 = *(_DWORD *)(a1 + 16);
    if ((v8 & 0x200) != 0)
    {
      uint64_t result = sub_144F8A4(*(void *)(a1 + 264));
      if (!result) {
        return result;
      }
      int v8 = *(_DWORD *)(a1 + 16);
    }
    if ((v8 & 0x400) != 0)
    {
      uint64_t result = sub_15BA3C8(*(void *)(a1 + 272));
      if (!result) {
        return result;
      }
      int v8 = *(_DWORD *)(a1 + 16);
    }
    if ((v8 & 0x800) != 0)
    {
      uint64_t result = sub_144F8A4(*(void *)(a1 + 280));
      if (!result) {
        return result;
      }
      int v8 = *(_DWORD *)(a1 + 16);
    }
    if ((v8 & 0x1000) != 0)
    {
      uint64_t result = sub_15B1FC0(*(void *)(a1 + 288));
      if (!result) {
        return result;
      }
      int v8 = *(_DWORD *)(a1 + 16);
    }
    if ((v8 & 0x2000) != 0)
    {
      uint64_t result = sub_15B0F18(*(void *)(a1 + 296));
      if (!result) {
        return result;
      }
      int v8 = *(_DWORD *)(a1 + 16);
    }
    if ((v8 & 0x4000) != 0)
    {
      uint64_t result = sub_15B0F18(*(void *)(a1 + 304));
      if (!result) {
        return result;
      }
      int v8 = *(_DWORD *)(a1 + 16);
    }
    if ((v8 & 0x8000) != 0)
    {
      uint64_t result = sub_146A1C8(*(void *)(a1 + 312));
      if (!result) {
        return result;
      }
      int v8 = *(_DWORD *)(a1 + 16);
    }
    if ((v8 & 0x10000) != 0)
    {
      uint64_t result = sub_13F1C1C(*(void *)(a1 + 320));
      if (!result) {
        return result;
      }
      int v8 = *(_DWORD *)(a1 + 16);
    }
    if ((v8 & 0x20000) == 0) {
      return 1;
    }
    uint64_t result = sub_15B1FC0(*(void *)(a1 + 328));
    if (result) {
      return 1;
    }
  }
  return result;
}

BOOL sub_128C7A0(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v2 = *(void *)(a1 + 16);
  do
  {
    uint64_t v3 = *(void *)(v2 + 8 * (v1 - 1) + 8);
    BOOL result = (*(_DWORD *)(v3 + 16) & 3) == 3;
    if ((*(_DWORD *)(v3 + 16) & 3) != 3) {
      break;
    }
    uint64_t v5 = *(unsigned int *)(v3 + 32);
    uint64_t v6 = *(void *)(v3 + 40);
    while ((int)v5 >= 1)
    {
      uint64_t v7 = *(void *)(v6 + 8 * v5--);
      if ((~*(_DWORD *)(v7 + 16) & 7) != 0) {
        return 0;
      }
    }
    BOOL v9 = __OFSUB__(v1, 2);
    BOOL v8 = v1 - 2 < 0;
    --v1;
  }
  while (v8 == v9);
  return result;
}

void *sub_128C81C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Problem");
}

void *sub_128C82C(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = &off_24A22A8;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = a2;
  a1[7] = 0;
  a1[8] = 0;
  a1[9] = &qword_2550250;
  a1[10] = &qword_2550250;
  a1[11] = &qword_2550250;
  a1[12] = 0;
  return a1;
}

void sub_128C8AC(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_128C8DC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(uint64_t **)(a1 + 88) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 88));
  }
  if ((uint64_t (***)())a1 != &off_25301D0 && *(void *)(a1 + 96))
  {
    sub_15C4DB0();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  sub_12C3A44((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_128C9EC(uint64_t a1)
{
  sub_128C8DC(a1);

  operator delete();
}

uint64_t sub_128CA24(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_12895A0(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0xF) == 0) {
    goto LABEL_11;
  }
  if (v6)
  {
    unint64_t v9 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)unint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_19;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_19;
      }
    }
LABEL_8:
    if ((v6 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_8;
  }
LABEL_19:
  unint64_t v10 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v10 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v10 = 0;
    *(unsigned char *)(v10 + 23) = 0;
    if ((v6 & 4) != 0) {
      goto LABEL_23;
    }
LABEL_9:
    if ((v6 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  **(unsigned char **)unint64_t v10 = 0;
  *(void *)(v10 + 8) = 0;
  if ((v6 & 4) == 0) {
    goto LABEL_9;
  }
LABEL_23:
  unint64_t v11 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v11 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v11 = 0;
    *(unsigned char *)(v11 + 23) = 0;
    if ((v6 & 8) == 0) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t result = sub_15C4DEC(*(void *)(a1 + 96));
    goto LABEL_11;
  }
  **(unsigned char **)unint64_t v11 = 0;
  *(void *)(v11 + 8) = 0;
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_11:
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 32) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_128CB64(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v28 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
    return *(void *)v28;
  }
  int v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v28 + 1);
    unsigned int v8 = **(unsigned char **)v28;
    if ((char)**(unsigned char **)v28 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v28, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v28 + 2);
      }
    }
    *(void *)uint64_t v28 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_42;
        }
        unint64_t v11 = v7 - 1;
        while (1)
        {
          uint64_t v12 = v11 + 1;
          *(void *)uint64_t v28 = v11 + 1;
          int v13 = *(_DWORD **)(a1 + 64);
          if (v13 && (uint64_t v14 = *(int *)(a1 + 56), (int)v14 < *v13))
          {
            *(_DWORD *)(a1 + 56) = v14 + 1;
            uint64_t v15 = *(void *)&v13[2 * v14 + 2];
          }
          else
          {
            sub_128DE64(*(void *)(a1 + 48));
            uint64_t v15 = sub_188CDC8(a1 + 48, v16);
            uint64_t v12 = *(unsigned __int8 **)v28;
          }
          unint64_t v11 = (unsigned __int8 *)sub_128CEA0(a3, v15, v12);
          *(void *)uint64_t v28 = v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *v11 != 10) {
            goto LABEL_40;
          }
        }
      case 2u:
        if (v8 != 18) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v20 = *(void *)(a1 + 8);
        int v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
        if (v20) {
          int v21 = (uint64_t *)*v21;
        }
        uint64_t v22 = (void *)(a1 + 72);
        goto LABEL_38;
      case 3u:
        if (v8 != 26) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v23 = *(void *)(a1 + 8);
        int v21 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
        if (v23) {
          int v21 = (uint64_t *)*v21;
        }
        uint64_t v22 = (void *)(a1 + 80);
        goto LABEL_38;
      case 4u:
        if (v8 != 34) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v24 = *(void *)(a1 + 8);
        int v21 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
        if (v24) {
          int v21 = (uint64_t *)*v21;
        }
        uint64_t v22 = (void *)(a1 + 88);
LABEL_38:
        uint64_t v25 = (std::string *)sub_1880F84(v22, v21);
        uint64_t v19 = (uint64_t)sub_188C244(v25, *(char **)v28, (uint64_t)a3);
        goto LABEL_39;
      default:
        if (v8 >> 3 == 201 && v8 == 74)
        {
          *(_DWORD *)(a1 + 40) |= 8u;
          uint64_t v17 = *(void *)(a1 + 96);
          if (!v17)
          {
            int v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v6) {
              int v18 = (void *)*v18;
            }
            uint64_t v17 = sub_15C6344((uint64_t)v18);
            *(void *)(a1 + 96) = v17;
            uint64_t v7 = *(unsigned __int8 **)v28;
          }
          uint64_t v19 = sub_1279B7C(a3, v17, v7);
          goto LABEL_39;
        }
LABEL_42:
        if (v8) {
          BOOL v26 = (v8 & 7) == 4;
        }
        else {
          BOOL v26 = 1;
        }
        if (!v26)
        {
          if (v8 - 800 > 0x31F)
          {
            if (*v6)
            {
              int v27 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              int v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v7 = *(unsigned __int8 **)v28;
            }
            uint64_t v19 = (uint64_t)sub_1885AC0(v8, v27, (char *)v7, a3);
          }
          else
          {
            uint64_t v19 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v8, (char *)v7, (uint64_t)&off_25301D0, (uint64_t *)(a1 + 8), a3);
          }
LABEL_39:
          *(void *)uint64_t v28 = v19;
          if (!v19) {
            return 0;
          }
LABEL_40:
          if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
            return *(void *)v28;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v28;
    }
  }
}

uint64_t sub_128CEA0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_128992C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_128CF30(uint64_t a1, char *a2, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_128AAA0(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 40);
  if (v11)
  {
    a2 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v11 & 2) == 0)
    {
LABEL_11:
      if ((v11 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
  }
  else if ((v11 & 2) == 0)
  {
    goto LABEL_11;
  }
  a2 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), a2);
  if ((v11 & 4) != 0) {
LABEL_12:
  }
    a2 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL), a2);
LABEL_13:
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 100, 200, a2, a3);
  }
  if ((v11 & 8) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v12 = *(void *)(a1 + 96);
    *(_WORD *)a2 = 3274;
    unsigned int v13 = *(_DWORD *)(v12 + 20);
    a2[2] = v13;
    if (v13 > 0x7F) {
      uint64_t v14 = sub_188A9CC(v13, a2 + 2);
    }
    else {
      uint64_t v14 = a2 + 3;
    }
    a2 = sub_15C50E8(v12, (unint64_t)v14, a3);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return a2;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    int v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    int v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if ((uint64_t)(*a3 - (void)a2) >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(a2, v18, (int)v19);
    a2 += v20;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v18, v19, a2);
}

uint64_t sub_128D16C(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_128B614(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  if ((v10 & 0xF) == 0) {
    goto LABEL_13;
  }
  if ((v10 & 1) == 0)
  {
    if ((v10 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_18:
    unint64_t v17 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
    uint64_t v19 = *(void *)(v17 + 8);
    if ((v18 & 0x80u) == 0) {
      uint64_t v19 = v18;
    }
    v4 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 4) == 0)
    {
LABEL_11:
      if ((v10 & 8) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_21;
  }
  unint64_t v14 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
  uint64_t v16 = *(void *)(v14 + 8);
  if ((v15 & 0x80u) == 0) {
    uint64_t v16 = v15;
  }
  v4 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 2) != 0) {
    goto LABEL_18;
  }
LABEL_10:
  if ((v10 & 4) == 0) {
    goto LABEL_11;
  }
LABEL_21:
  unint64_t v20 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v21 = *(unsigned __int8 *)(v20 + 23);
  uint64_t v22 = *(void *)(v20 + 8);
  if ((v21 & 0x80u) == 0) {
    uint64_t v22 = v21;
  }
  v4 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 8) != 0)
  {
LABEL_12:
    uint64_t v11 = sub_15C52D0(*(void *)(a1 + 96));
    v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_13:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v23 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v23 + 31) < 0) {
      uint64_t v24 = *(void *)(v23 + 16);
    }
    else {
      uint64_t v24 = *(unsigned __int8 *)(v23 + 31);
    }
    v4 += v24;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_128D338(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C3DDC((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((v9 & 0xF) == 0) {
    goto LABEL_27;
  }
  if ((v9 & 1) == 0)
  {
    if ((v9 & 2) == 0) {
      goto LABEL_7;
    }
LABEL_13:
    unsigned int v13 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v14 = *(void *)(a1 + 8);
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    sub_1881DF4((std::string **)(a1 + 80), v13, v15);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_27;
      }
      goto LABEL_19;
    }
    goto LABEL_16;
  }
  int v10 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 1u;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
  if (v11) {
    uint64_t v12 = (uint64_t *)*v12;
  }
  sub_1881DF4((std::string **)(a1 + 72), v10, v12);
  if ((v9 & 2) != 0) {
    goto LABEL_13;
  }
LABEL_7:
  if ((v9 & 4) == 0) {
    goto LABEL_8;
  }
LABEL_16:
  uint64_t v16 = (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v17 = *(void *)(a1 + 8);
  uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
  if (v17) {
    uint64_t v18 = (uint64_t *)*v18;
  }
  sub_1881DF4((std::string **)(a1 + 88), v16, v18);
  if ((v9 & 8) != 0)
  {
LABEL_19:
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v19 = *(std::string **)(a1 + 96);
    if (!v19)
    {
      uint64_t v20 = *(void *)(a1 + 8);
      uint64_t v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        uint64_t v21 = (void *)*v21;
      }
      uint64_t v19 = (std::string *)sub_15C6344((uint64_t)v21);
      *(void *)(a1 + 96) = v19;
    }
    if (*(void *)(a2 + 96)) {
      uint64_t v22 = *(uint64_t (****)())(a2 + 96);
    }
    else {
      uint64_t v22 = &off_253F8C0;
    }
    sub_121627C(v19, (uint64_t)v22);
  }
LABEL_27:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v23 = *(void *)(a2 + 8);
  if (v23)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v23 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_128D518(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  do
  {
    BOOL v3 = (int)v2 < 1;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_128C66C(*(void *)(*(void *)(a1 + 64) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3;
}

void *sub_128D580@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ProblemCollectionRequest");
}

uint64_t sub_128D590(uint64_t a1)
{
  BOOL v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  char v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_128D630(uint64_t a1)
{
  sub_128D590(a1);

  operator delete();
}

uint64_t sub_128D668(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_128D6B0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)uint64_t v24 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
    uint64_t v14 = (void *)sub_188C244(v17, *(char **)v24, (uint64_t)a3);
LABEL_24:
    *(void *)uint64_t v24 = v14;
    if (!v14) {
      goto LABEL_43;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 >> 3 == 1 && v8 == 8)
  {
    uint64_t v18 = v7 + 1;
    unint64_t v19 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v21 = v19 + (v20 << 7);
    unint64_t v19 = (v21 - 128);
    if (v20 < 0)
    {
      *(void *)uint64_t v24 = sub_188C138((uint64_t)v7, (v21 - 128));
      if (!*(void *)v24) {
        goto LABEL_43;
      }
      unint64_t v19 = v22;
    }
    else
    {
      uint64_t v18 = v7 + 2;
LABEL_29:
      *(void *)uint64_t v24 = v18;
    }
    if (sub_13E78E4(v19))
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v19;
    }
    else
    {
      if (*v6) {
        uint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v19, v23);
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      unsigned int v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v24;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_24;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_43:
  *(void *)uint64_t v24 = 0;
  return *(void *)v24;
}

unsigned char *sub_128D8C4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    unsigned int v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    unsigned int v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_128DA0C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_13;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    int v6 = *(_DWORD *)(a1 + 32);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v7;
  }
LABEL_13:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_128DAD8()
{
  return 1;
}

void *sub_128DAE0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ProblemCollectionResponse");
}

uint64_t sub_128DAF0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24A1F28;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_128DB6C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_24A1FA8;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_128DC08(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24A2028;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(void *)(result + 40) = &qword_2550250;
  *(unsigned char *)(result + 48) = 0;
  return result;
}

void *sub_128DC90(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24A20A8;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

double sub_128DD0C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24A2128;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  *(void *)(v2 + 32) = &qword_2550250;
  *(void *)(v2 + 40) = &qword_2550250;
  *(void *)(v2 + 48) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_DWORD *)(v2 + 88) = 1;
  return result;
}

void *sub_128DDA8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = &off_24A21A8;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = a1;
  result[10] = 0;
  result[11] = 0;
  result[12] = &qword_2550250;
  result[13] = &qword_2550250;
  result[14] = 0;
  result[15] = 0;
  return result;
}

double sub_128DE64(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  return sub_12891E4(v2, a1, 0);
}

void *sub_128DEC4(uint64_t a1)
{
  if (!a1)
  {
    sub_12C3E68();
  }

  return sub_128C82C(v3, a1, 0);
}

uint64_t sub_128DF20(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24A2328;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_128DFA8(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_15;
    }
  }
  else if (v4)
  {
    goto LABEL_15;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_15:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_128E09C(uint64_t a1)
{
  sub_128DFA8(a1);

  operator delete();
}

uint64_t sub_128E0D4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x1F) == 0) {
    goto LABEL_27;
  }
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_12;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_12;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_16:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      if ((v1 & 8) != 0) {
        goto LABEL_20;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v1 & 8) != 0) {
        goto LABEL_20;
      }
    }
LABEL_6:
    if ((v1 & 0x10) == 0) {
      goto LABEL_27;
    }
LABEL_24:
    unint64_t v6 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
    goto LABEL_27;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_12:
  unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) != 0) {
      goto LABEL_16;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v3 = 0;
    *(unsigned char *)(v3 + 23) = 0;
    if ((v1 & 4) != 0) {
      goto LABEL_16;
    }
  }
LABEL_5:
  if ((v1 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_20:
  unint64_t v5 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v1 & 0x10) == 0) {
      goto LABEL_27;
    }
    goto LABEL_24;
  }
  *(unsigned char *)unint64_t v5 = 0;
  *(unsigned char *)(v5 + 23) = 0;
  if ((v1 & 0x10) != 0) {
    goto LABEL_24;
  }
LABEL_27:
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v8) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_128E1F4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v22 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
    return *(void *)v22;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (char *)(*(void *)v22 + 1);
    unsigned int v8 = **(unsigned char **)v22;
    if ((char)**(unsigned char **)v22 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v22, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v22 + 2);
      }
    }
    *(void *)unint64_t v22 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        unsigned int v13 = (void *)(a1 + 24);
        goto LABEL_29;
      case 2u:
        if (v8 != 18) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        unsigned int v13 = (void *)(a1 + 32);
        goto LABEL_29;
      case 3u:
        if (v8 != 26) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        unsigned int v13 = (void *)(a1 + 40);
        goto LABEL_29;
      case 4u:
        if (v8 != 34) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v16 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        unsigned int v13 = (void *)(a1 + 48);
        goto LABEL_29;
      case 5u:
        if (v8 != 42) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v17 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        unsigned int v13 = (void *)(a1 + 56);
LABEL_29:
        uint64_t v18 = (std::string *)sub_1880F84(v13, v12);
        unint64_t v19 = (void *)sub_188C244(v18, *(char **)v22, (uint64_t)a3);
        goto LABEL_30;
      default:
LABEL_33:
        if (v8) {
          BOOL v20 = (v8 & 7) == 4;
        }
        else {
          BOOL v20 = 1;
        }
        if (!v20)
        {
          if (*v6)
          {
            int v21 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v21 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = *(char **)v22;
          }
          unint64_t v19 = sub_1885AC0(v8, v21, v7, a3);
LABEL_30:
          *(void *)unint64_t v22 = v19;
          if (!v19) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
            return *(void *)v22;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v22;
    }
  }
}

char *sub_128E488(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_12:
  unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) != 0) {
LABEL_6:
  }
    unint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_7:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_128E5E8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x1F) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_18;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v14 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
    uint64_t v16 = *(void *)(v14 + 8);
    if ((v15 & 0x80u) == 0) {
      uint64_t v16 = v15;
    }
    v2 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0)
    {
LABEL_14:
      if ((v1 & 0x10) == 0) {
        goto LABEL_18;
      }
      goto LABEL_15;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_14;
  }
  unint64_t v17 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
  uint64_t v19 = *(void *)(v17 + 8);
  if ((v18 & 0x80u) == 0) {
    uint64_t v19 = v18;
  }
  v2 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x10) != 0)
  {
LABEL_15:
    unint64_t v9 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_18:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v20 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v2 += v21;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_128E79C(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) == 0) {
    goto LABEL_23;
  }
  if (v4)
  {
    uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    unint64_t v6 = (std::string **)&result[1];
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    uint64_t v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    uint64_t result = sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_14;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  unint64_t v9 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
  std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
  uint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
  if (v10) {
    uint64_t v11 = (uint64_t *)*v11;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v9, v11);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_14:
  uint64_t v12 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
  std::string::size_type v13 = v3->__r_.__value_.__l.__size_;
  unint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
  if (v13) {
    unint64_t v14 = (uint64_t *)*v14;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v12, v14);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_23;
    }
    goto LABEL_20;
  }
LABEL_17:
  uint64_t v15 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
  std::string::size_type v16 = v3->__r_.__value_.__l.__size_;
  unint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
  if (v16) {
    unint64_t v17 = (uint64_t *)*v17;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[2], v15, v17);
  if ((v4 & 0x10) != 0)
  {
LABEL_20:
    uint64_t v18 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
    std::string::size_type v19 = v3->__r_.__value_.__l.__size_;
    unint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
    if (v19) {
      unint64_t v20 = (uint64_t *)*v20;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v18, v20);
  }
LABEL_23:
  uint64_t v21 = *(void *)(a2 + 8);
  if (v21)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v21 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_128E920(std::string *result, uint64_t a2)
{
  if ((std::string *)a2 != result)
  {
    int v4 = result;
    sub_128E0D4((uint64_t)result);
    return sub_128E79C(v4, a2);
  }
  return result;
}

uint64_t sub_128E96C()
{
  return 1;
}

void *sub_128E974@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RegionLocalization");
}

void *sub_128E984(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A23A8;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  return result;
}

BOOL sub_128EA10(unsigned int a1)
{
  return a1 < 3;
}

uint64_t sub_128EA1C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24A2428;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

void sub_128EA98(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_128EACC(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_128EB40(void *a1)
{
  sub_128EACC(a1);

  operator delete();
}

uint64_t sub_128EB78(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_128EB9C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    return v25;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v25 + 1;
    unsigned int v8 = *v25;
    if (*v25 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v25, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v25 + 2;
      }
    }
    uint64_t v25 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 16) {
      goto LABEL_13;
    }
    unint64_t v14 = v7 + 1;
    unint64_t v15 = *v7;
    if (*v7 < 0)
    {
      int v16 = *v14;
      int v17 = v15 + (v16 << 7);
      unint64_t v15 = (v17 - 128);
      if (v16 < 0)
      {
        uint64_t v25 = (char *)sub_188C138((uint64_t)v7, (v17 - 128));
        if (!v25) {
          return 0;
        }
        unint64_t v15 = v21;
        goto LABEL_26;
      }
      unint64_t v14 = v7 + 2;
    }
    uint64_t v25 = v14;
LABEL_26:
    if (v15 > 3)
    {
      if (*v6) {
        uint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      int v24 = 2;
      goto LABEL_46;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    *(_DWORD *)(a1 + 28) = v15;
LABEL_34:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      return v25;
    }
  }
  if (v8 >> 3 == 1 && v8 == 8)
  {
    uint64_t v18 = v7 + 1;
    unint64_t v15 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v19 = *v18;
    int v20 = v15 + (v19 << 7);
    unint64_t v15 = (v20 - 128);
    if (v19 < 0)
    {
      uint64_t v25 = (char *)sub_188C138((uint64_t)v7, (v20 - 128));
      if (!v25) {
        return 0;
      }
      unint64_t v15 = v22;
    }
    else
    {
      uint64_t v18 = v7 + 2;
LABEL_31:
      uint64_t v25 = v18;
    }
    if (v15 <= 1)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_DWORD *)(a1 + 24) = v15;
      goto LABEL_34;
    }
    if (*v6) {
      uint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else {
      uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
    }
    int v24 = 1;
LABEL_46:
    sub_188C020(v24, v15, v23);
    goto LABEL_34;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      std::string::size_type v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      std::string::size_type v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v25) {
      return 0;
    }
    goto LABEL_34;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v25;
  }
  return 0;
}

unsigned char *sub_128EDF4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 28);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_128EF98(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_14;
  }
  if (v1)
  {
    int v3 = *(_DWORD *)(a1 + 24);
    if (v3 < 0)
    {
      uint64_t v2 = 11;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v4 = *(_DWORD *)(a1 + 28);
  if (v4 < 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v5;
LABEL_14:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_128F058()
{
  return 1;
}

void *sub_128F060@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchStructureIntentRequestType");
}

uint64_t sub_128F070(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24A24A8;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

void sub_128F0EC(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_128F11C(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_128F190(void *a1)
{
  sub_128F11C(a1);

  operator delete();
}

uint64_t sub_128F1C8(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_128F1E0(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    return v19;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v19 + 1;
    unsigned int v7 = *v19;
    if (*v19 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v19 + 2;
      }
    }
    int v19 = v6;
    if (v7 == 8)
    {
      unint64_t v12 = v6 + 1;
      unint64_t v13 = *v6;
      if (*v6 < 0)
      {
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          int v19 = (char *)sub_188C138((uint64_t)v6, (v15 - 128));
          if (!v19) {
            return 0;
          }
          unint64_t v13 = v16;
          goto LABEL_20;
        }
        unint64_t v12 = v6 + 2;
      }
      int v19 = v12;
LABEL_20:
      if (sub_138DE04(v13))
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 24) = v13;
      }
      else
      {
        if (*v5) {
          uint64_t v17 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v17 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v13, v17);
      }
      goto LABEL_22;
    }
    if (!v7 || (v7 & 7) == 4) {
      break;
    }
    if (*v5)
    {
      unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v19;
    }
    int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
    if (!v19) {
      return 0;
    }
LABEL_22:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      return v19;
    }
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v19;
  }
  return 0;
}

unsigned char *sub_128F38C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_128F4B4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    int v2 = *(_DWORD *)(a1 + 24);
    if (v2 < 0) {
      uint64_t v1 = 11;
    }
    else {
      uint64_t v1 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v1 += v6;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_128F528()
{
  return 1;
}

void *sub_128F530@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchLocationParameters.TransportHint");
}

uint64_t sub_128F540(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24A2528;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  return a1;
}

void sub_128F5F4()
{
}

uint64_t sub_128F648(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_25302E0)
  {
    uint64_t v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_128F11C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_128F700(uint64_t a1)
{
  sub_128F648(a1);

  operator delete();
}

uint64_t sub_128F738(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16))
  {
    uint64_t v2 = *(void *)(result + 24);
    char v3 = *(unsigned char *)(v2 + 8);
    uint64_t result = v2 + 8;
    *(_DWORD *)(result + 16) = 0;
    *(_DWORD *)(result + 8) = 0;
    if (v3) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
  }
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 24) = 0;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

char *sub_128F7A8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = v23 + 2;
      }
    }
    uint64_t v23 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 24);
    if (!v15)
    {
      unint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unint64_t v16 = (void *)*v16;
      }
      uint64_t v15 = sub_129DDB8((uint64_t)v16);
      *(void *)(a1 + 24) = v15;
      unint64_t v7 = v23;
    }
    uint64_t v14 = sub_128F9B8(a3, v15, (unsigned __int8 *)v7);
LABEL_26:
    uint64_t v23 = v14;
    if (!v14) {
      return 0;
    }
LABEL_34:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 >> 3 == 1 && v8 == 8)
  {
    uint64_t v17 = v7 + 1;
    unint64_t v18 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v19 = *v17;
    int v20 = v18 + (v19 << 7);
    unint64_t v18 = (v20 - 128);
    if (v19 < 0)
    {
      uint64_t v23 = (char *)sub_188C138((uint64_t)v7, (v20 - 128));
      if (!v23) {
        return 0;
      }
      unint64_t v18 = v21;
    }
    else
    {
      uint64_t v17 = v7 + 2;
LABEL_31:
      uint64_t v23 = v17;
    }
    if (v18 > 1)
    {
      if (*v6) {
        unint64_t v22 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        unint64_t v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v18, v22);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v18;
    }
    goto LABEL_34;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = v23;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_26;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

char *sub_128F9B8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_128F1E0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_128FA48(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    *uint64_t v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      BOOL v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      BOOL v12 = v4 + 2;
    }
    uint64_t v4 = sub_128F38C(v10, (unint64_t)v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_128FBD4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_128F4B4(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_11:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_128FCA4(std::string *result, uint64_t a2)
{
  char v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v7 = (void *)*v7;
        }
        data = (std::string *)sub_129DDB8((uint64_t)v7);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v8 = &off_25302C0;
      }
      uint64_t result = sub_11A7934(data, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_128FD74()
{
  return 1;
}

void *sub_128FD7C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchLocationParameters");
}

uint64_t sub_128FD8C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24A25A8;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

void sub_128FE08(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_128FE38(void *a1)
{
  char v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_128FEAC(void *a1)
{
  sub_128FE38(a1);

  operator delete();
}

uint64_t sub_128FEE4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_128FF08(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    unint64_t v15 = v8 + 1;
    int v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    int v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      unint64_t v15 = v8 + 2;
LABEL_25:
      uint64_t v25 = v15;
      *(_DWORD *)(a1 + 28) = v16;
      goto LABEL_30;
    }
    unint64_t v21 = (char *)sub_188C0D0((uint64_t)v8, v16);
    uint64_t v25 = v21;
    *(_DWORD *)(a1 + 28) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v18 = v8 + 1;
    int v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      uint64_t v25 = v18;
      *(_DWORD *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    uint64_t v23 = (char *)sub_188C0D0((uint64_t)v8, v19);
    uint64_t v25 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_12900F8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_129029C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_8;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1290340()
{
  return 1;
}

void *sub_1290348@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.InferredInfo.InferredValue.RawAttribute");
}

uint64_t sub_1290358(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24A2628;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  uint64_t v5 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v5;
  return a1;
}

void sub_1290414()
{
}

uint64_t sub_1290464(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2530328)
  {
    uint64_t v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_128FE38(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_129051C(uint64_t a1)
{
  sub_1290464(a1);

  operator delete();
}

uint64_t sub_1290554(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    uint64_t result = sub_128FEE4(*(void *)(result + 24));
  }
  if ((v2 & 0xE) != 0)
  {
    *(unsigned char *)(v1 + 40) = 0;
    *(void *)(v1 + 32) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_12905C0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = v33 + 1;
    unsigned int v9 = *v33;
    if (*v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v33 + 2;
      }
    }
    uint64_t v33 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_34;
        }
        unsigned int v12 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          uint64_t v33 = (char *)sub_188C138((uint64_t)v8, (v15 - 128));
          if (!v33) {
            goto LABEL_62;
          }
          unint64_t v13 = v27;
        }
        else
        {
          unsigned int v12 = v8 + 2;
LABEL_13:
          uint64_t v33 = v12;
        }
        if (v13 <= 4)
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          *(_DWORD *)(a1 + 32) = v13;
          goto LABEL_42;
        }
        if (*v7) {
          uint64_t v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v32 = 1;
        goto LABEL_56;
      case 2u:
        if (v9 != 16) {
          goto LABEL_34;
        }
        int v16 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v17 = *v16;
        int v18 = v13 + (v17 << 7);
        unint64_t v13 = (v18 - 128);
        if (v17 < 0)
        {
          uint64_t v33 = (char *)sub_188C138((uint64_t)v8, (v18 - 128));
          if (!v33) {
            goto LABEL_62;
          }
          unint64_t v13 = v28;
        }
        else
        {
          int v16 = v8 + 2;
LABEL_20:
          uint64_t v33 = v16;
        }
        if (v13 > 3)
        {
          if (*v7) {
            uint64_t v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v32 = 2;
LABEL_56:
          sub_188C020(v32, v13, v31);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 36) = v13;
        }
        goto LABEL_42;
      case 3u:
        if (v9 != 26) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        int v19 = *(void **)(a1 + 24);
        if (!v19)
        {
          int v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v20 = (void *)*v20;
          }
          int v19 = sub_129DEB0((uint64_t)v20);
          *(void *)(a1 + 24) = v19;
          unsigned int v8 = v33;
        }
        unint64_t v21 = sub_129091C(a3, (uint64_t)v19, (unsigned __int8 *)v8);
        goto LABEL_41;
      case 4u:
        if (v9 != 32) {
          goto LABEL_34;
        }
        v5 |= 8u;
        int v22 = v8 + 1;
        uint64_t v23 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v24 = *v22;
        uint64_t v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          int v29 = (char *)sub_188C138((uint64_t)v8, v23);
          uint64_t v33 = v29;
          *(unsigned char *)(a1 + 40) = v30 != 0;
          if (!v29) {
            goto LABEL_62;
          }
        }
        else
        {
          int v22 = v8 + 2;
LABEL_33:
          uint64_t v33 = v22;
          *(unsigned char *)(a1 + 40) = v23 != 0;
        }
        goto LABEL_42;
      default:
LABEL_34:
        if (v9) {
          BOOL v25 = (v9 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          if (*v7)
          {
            BOOL v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            BOOL v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = v33;
          }
          unint64_t v21 = (char *)sub_1885AC0(v9, v26, v8, a3);
LABEL_41:
          uint64_t v33 = v21;
          if (!v21) {
            goto LABEL_62;
          }
LABEL_42:
          if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_62:
        }
          uint64_t v33 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v33;
    }
  }
}

char *sub_129091C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_128FF08(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_12909AC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 36);
    *char v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 24);
    *char v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      int v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      int v15 = v4 + 2;
    }
    char v4 = sub_12900F8(v13, (unint64_t)v15, a3);
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v16 = *(unsigned char *)(a1 + 40);
    *char v4 = 32;
    v4[1] = v16;
    v4 += 2;
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if ((v17 & 1) == 0) {
    return v4;
  }
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v19 + 31) < 0)
  {
    int v20 = *(void **)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
  }
  else
  {
    int v20 = (void *)(v19 + 8);
    LODWORD(v21) = *(unsigned __int8 *)(v19 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v21)
  {
    uint64_t v22 = (int)v21;
    memcpy(v4, v20, (int)v21);
    v4 += v22;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v20, v21, v4);
}

uint64_t sub_1290BF8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t result = 0;
    goto LABEL_19;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_7:
    int v6 = *(_DWORD *)(a1 + 32);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v7;
    goto LABEL_11;
  }
  uint64_t v5 = sub_129029C(*(void *)(a1 + 24));
  uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_7;
  }
LABEL_11:
  if ((v2 & 4) != 0)
  {
    int v8 = *(_DWORD *)(a1 + 36);
    if (v8 < 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v9;
  }
  if ((v2 & 8) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
LABEL_19:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v11 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    result += v12;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_1290D08(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        int v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          int v8 = (void *)*v8;
        }
        data = (std::string *)sub_129DEB0((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v9 = &off_2530308;
      }
      uint64_t result = sub_117EF04(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_21;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      v3[1].__r_.__value_.__s.__data_[16] = *(unsigned char *)(a2 + 40);
      goto LABEL_7;
    }
LABEL_21:
    HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1290E00()
{
  return 1;
}

void *sub_1290E08@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.InferredInfo.InferredValue");
}

uint64_t sub_1290E18(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24A26A8;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    int v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C4260(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

void sub_1290F44()
{
}

uint64_t sub_1290FA8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2530358)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_1290464(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_12C3FE0(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_129106C(uint64_t a1)
{
  sub_1290FA8(a1);

  operator delete();
}

uint64_t sub_12910A4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_12910A4(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if (v5) {
    uint64_t result = sub_1290554(*(void *)(v1 + 48));
  }
  if ((v5 & 6) != 0) {
    *(void *)(v1 + 56) = 0;
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_1291140(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v32 = a2;
  if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
    return v32;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    char v7 = v32 + 1;
    unsigned int v8 = *v32;
    if (*v32 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180((uint64_t)v32, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = v32 + 2;
      }
    }
    int v32 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_39;
        }
        uint64_t v11 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          int v32 = (char *)sub_188C138((uint64_t)v7, (v14 - 128));
          if (!v32) {
            return 0;
          }
          unint64_t v12 = v28;
        }
        else
        {
          uint64_t v11 = v7 + 2;
LABEL_13:
          int v32 = v11;
        }
        if (v12 <= 3)
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          *(_DWORD *)(a1 + 56) = v12;
          goto LABEL_47;
        }
        if (*v6) {
          uint64_t v30 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v31 = 1;
        goto LABEL_59;
      case 2u:
        if (v8 != 18) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 48);
        if (!v15)
        {
          char v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            char v16 = (void *)*v16;
          }
          uint64_t v15 = sub_129DF28((uint64_t)v16);
          *(void *)(a1 + 48) = v15;
          char v7 = v32;
        }
        uint64_t v17 = sub_12914B0(a3, v15, (unsigned __int8 *)v7);
        goto LABEL_46;
      case 3u:
        if (v8 != 24) {
          goto LABEL_39;
        }
        int v18 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_26;
        }
        int v19 = *v18;
        int v20 = v12 + (v19 << 7);
        unint64_t v12 = (v20 - 128);
        if (v19 < 0)
        {
          int v32 = (char *)sub_188C138((uint64_t)v7, (v20 - 128));
          if (!v32) {
            return 0;
          }
          unint64_t v12 = v29;
        }
        else
        {
          int v18 = v7 + 2;
LABEL_26:
          int v32 = v18;
        }
        if (v12 > 2)
        {
          if (*v6) {
            uint64_t v30 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v31 = 3;
LABEL_59:
          sub_188C020(v31, v12, v30);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 60) = v12;
        }
        goto LABEL_47;
      case 4u:
        if (v8 != 34) {
          goto LABEL_39;
        }
        uint64_t v21 = v7 - 1;
        while (1)
        {
          int v32 = v21 + 1;
          uint64_t v22 = *(_DWORD **)(a1 + 40);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 32), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 32) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            uint64_t v25 = sub_129DFA8(*(void *)(a1 + 24));
            uint64_t v24 = sub_188CDC8(a1 + 24, v25);
          }
          uint64_t v21 = (char *)sub_1291540(a3, v24);
          int v32 = v21;
          if (!v21) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *v21 != 34) {
            goto LABEL_47;
          }
        }
      default:
LABEL_39:
        if (v8) {
          BOOL v26 = (v8 & 7) == 4;
        }
        else {
          BOOL v26 = 1;
        }
        if (!v26)
        {
          if (*v6)
          {
            unint64_t v27 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v7 = v32;
          }
          uint64_t v17 = (char *)sub_1885AC0(v8, v27, v7, a3);
LABEL_46:
          int v32 = v17;
          if (!v17) {
            return 0;
          }
LABEL_47:
          if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
            return v32;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v32;
    }
  }
}

char *sub_12914B0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12905C0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1291540(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1291140(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12915D0(uint64_t a1, unsigned char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(int *)(a1 + 56);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 48);
    *uint64_t v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unint64_t v12 = v4 + 2;
    }
    uint64_t v4 = sub_12909AC(v10, (unint64_t)v12, a3);
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 60);
    *uint64_t v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v16 = *(_DWORD *)(a1 + 32);
  if (v16)
  {
    for (int i = 0; i != v16; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 34;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      v4[1] = v19;
      if (v19 > 0x7F) {
        int v20 = sub_188A9CC(v19, v4 + 1);
      }
      else {
        int v20 = v4 + 2;
      }
      uint64_t v4 = (unsigned char *)sub_12915D0(v18, v20, a3);
    }
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return (uint64_t)v4;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    uint64_t v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    uint64_t v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(v4, v24, (int)v25);
    v4 += v26;
    return (uint64_t)v4;
  }

  return sub_188A528(a3, (char *)v24, v25, v4);
}

uint64_t sub_1291874(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1291874(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) == 0) {
    goto LABEL_23;
  }
  if (v8)
  {
    uint64_t v9 = sub_1290BF8(*(void *)(a1 + 48));
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_23;
      }
      goto LABEL_19;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  int v10 = *(_DWORD *)(a1 + 56);
  if (v10 < 0) {
    uint64_t v11 = 11;
  }
  else {
    uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v11;
  if ((v8 & 4) != 0)
  {
LABEL_19:
    int v12 = *(_DWORD *)(a1 + 60);
    if (v12 < 0) {
      uint64_t v13 = 11;
    }
    else {
      uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v13;
  }
LABEL_23:
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v2 += v17;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_12919D4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_12C4260((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)v3[2].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v13 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v13 = (void *)*v13;
        }
        data = (std::string *)sub_129DF28((uint64_t)v13);
        v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v14 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v14 = &off_2530328;
      }
      uint64_t result = sub_1290D08(data, (uint64_t)v14);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        HIDWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 60);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1291B2C()
{
  return 1;
}

void *sub_1291B34@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.InferredInfo");
}

uint64_t sub_1291B44(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24A2728;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  return a1;
}

void sub_1291BF0()
{
}

uint64_t sub_1291C44(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2530398)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_1290FA8(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1291CFC(uint64_t a1)
{
  sub_1291C44(a1);

  operator delete();
}

uint64_t sub_1291D34(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_12910A4(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_1291D90(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    unint64_t v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13)
    {
      uint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v14 = (void *)*v14;
      }
      uint64_t v13 = sub_129DFA8((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      uint64_t v6 = v16;
    }
    int v12 = sub_1291540(a3, v13, (unsigned __int8 *)v6);
LABEL_20:
    unint64_t v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v16;
    }
    int v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

unsigned char *sub_1291EE8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *uint64_t v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = (unsigned char *)sub_12915D0(v6, v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1291FF8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_1291874(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_1292080(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    data = (std::string *)result[1].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unsigned int v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unsigned int v7 = (void *)*v7;
      }
      data = (std::string *)sub_129DFA8((uint64_t)v7);
      v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_2530358;
    }
    uint64_t result = sub_12919D4(data, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1292128()
{
  return 1;
}

void *sub_1292130@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.InferredSignals");
}

uint64_t sub_1292140(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 24) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1292158(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 24) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1292170(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24A27A8;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  *(void *)(a1 + 28) = 0;
  int v5 = *(_DWORD *)(a2 + 24);
  if (v5)
  {
    sub_188C80C((unsigned int *)(a1 + 24), v5);
    uint64_t v6 = *(void **)(a1 + 32);
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
    memcpy(v6, *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  uint64_t v7 = *(void *)(a2 + 8);
  if (v7) {
    sub_188B4F8(v4, (v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if (v8) {
    operator new();
  }
  *(void *)(a1 + 40) = 0;
  if ((v8 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  if ((v8 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  if ((v8 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  if ((v8 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  if ((v8 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 80) = 0;
  int v9 = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  *(_DWORD *)(a1 + 88) = v9;
  return a1;
}

void sub_1292390()
{
}

uint64_t sub_1292458(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_12924E4((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_12924E4(uint64_t (***result)()))()
{
  if (result != &off_25303B8)
  {
    uint64_t v1 = result;
    uint64_t v2 = (uint64_t)result[5];
    if (v2)
    {
      sub_1293F4C(v2);
      operator delete();
    }
    uint64_t v3 = (uint64_t)v1[6];
    if (v3)
    {
      sub_1294630(v3);
      operator delete();
    }
    uint64_t v4 = v1[7];
    if (v4)
    {
      sub_1294A74(v4);
      operator delete();
    }
    int v5 = v1[8];
    if (v5)
    {
      sub_12A1E58(v5);
      operator delete();
    }
    uint64_t v6 = (uint64_t)v1[9];
    if (v6)
    {
      sub_1294FEC(v6);
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[10];
    if (result)
    {
      sub_12A25BC(result);
      operator delete();
    }
  }
  return result;
}

void sub_12925F0(uint64_t a1)
{
  sub_1292458(a1);

  operator delete();
}

uint64_t sub_1292628(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x3F) == 0) {
    goto LABEL_18;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t result = sub_1292778(*(void *)(v1 + 48));
    if ((v2 & 4) == 0) {
      goto LABEL_10;
    }
LABEL_8:
    uint64_t v3 = *(void *)(v1 + 56);
    char v4 = *(unsigned char *)(v3 + 8);
    uint64_t result = v3 + 8;
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 8) = 0;
    if (v4) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
    goto LABEL_10;
  }
  uint64_t result = (uint64_t)sub_1292718(*(unsigned char **)(result + 40));
  if ((v2 & 2) != 0) {
    goto LABEL_7;
  }
LABEL_4:
  if ((v2 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_10:
  if ((v2 & 8) != 0)
  {
    uint64_t v5 = *(void *)(v1 + 64);
    char v6 = *(unsigned char *)(v5 + 8);
    uint64_t result = v5 + 8;
    *(_DWORD *)(result + 8) = 0;
    *(_DWORD *)(result + 24) = 0;
    if (v6) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
  }
  if ((v2 & 0x10) != 0) {
    uint64_t result = sub_12927D4(*(void *)(v1 + 72));
  }
  if ((v2 & 0x20) != 0)
  {
    uint64_t v7 = *(void *)(v1 + 80);
    char v8 = *(unsigned char *)(v7 + 8);
    uint64_t result = v7 + 8;
    *(_DWORD *)(result + 8) = 0;
    *(_DWORD *)(result + 24) = 0;
    if (v8) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
  }
LABEL_18:
  if ((v2 & 0xC0) != 0)
  {
    *(unsigned char *)(v1 + 92) = 0;
    *(_DWORD *)(v1 + 88) = 0;
  }
  char v10 = *(unsigned char *)(v1 + 8);
  uint64_t v9 = v1 + 8;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

unsigned char *sub_1292718(unsigned char *result)
{
  uint64_t v1 = result;
  if (result[16]) {
    uint64_t result = sub_13627B0(*((void *)result + 3));
  }
  char v3 = v1[8];
  int v2 = v1 + 8;
  *((_DWORD *)v2 + 6) = 0;
  *((_DWORD *)v2 + 2) = 0;
  if (v3)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

uint64_t sub_1292778(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_12927BC(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_12927D4(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) != 0)
  {
    if (v2)
    {
      uint64_t v3 = *(void *)(result + 24);
      char v4 = *(unsigned char *)(v3 + 8);
      uint64_t result = v3 + 8;
      *(void *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v4) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 2) != 0) {
      uint64_t result = (uint64_t)sub_129512C(*(unsigned char **)(v1 + 32));
    }
    if ((v2 & 4) != 0) {
      uint64_t result = (uint64_t)sub_12951C4(*(unsigned char **)(v1 + 40));
    }
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 40) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_1292864(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v49 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v49, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    char v8 = v49 + 1;
    unsigned int v9 = *v49;
    if (*v49 < 0)
    {
      int v10 = *v8;
      unsigned int v11 = v9 + (v10 << 7);
      unsigned int v9 = v11 - 128;
      if (v10 < 0)
      {
        char v8 = (char *)sub_188C180((uint64_t)v49, v11 - 128);
        unsigned int v9 = v12;
      }
      else
      {
        char v8 = v49 + 2;
      }
    }
    uint64_t v49 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_83;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v13 = *(void *)(a1 + 40);
        if (!v13)
        {
          uint64_t v14 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v14 = (void *)*v14;
          }
          uint64_t v13 = sub_129E170((uint64_t)v14);
          *(void *)(a1 + 40) = v13;
          char v8 = v49;
        }
        unint64_t v15 = sub_1292E20(a3, v13, (unsigned __int8 *)v8);
        goto LABEL_90;
      case 2u:
        if (v9 != 18) {
          goto LABEL_83;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        unint64_t v16 = *(void **)(a1 + 48);
        if (!v16)
        {
          uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v17 = (void *)*v17;
          }
          unint64_t v16 = sub_129E1EC((uint64_t)v17);
          *(void *)(a1 + 48) = v16;
          char v8 = v49;
        }
        unint64_t v15 = (char *)sub_1292EB0(a3, (uint64_t)v16, (unsigned __int8 *)v8);
        goto LABEL_90;
      case 3u:
        if (v9 != 26) {
          goto LABEL_83;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v18 = *(void **)(a1 + 56);
        if (!v18)
        {
          unsigned int v19 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unsigned int v19 = (void *)*v19;
          }
          uint64_t v18 = sub_129E270((uint64_t)v19);
          *(void *)(a1 + 56) = v18;
          char v8 = v49;
        }
        unint64_t v15 = sub_1292F40(a3, (uint64_t)v18, (unsigned __int8 *)v8);
        goto LABEL_90;
      case 4u:
        if (v9 != 32) {
          goto LABEL_83;
        }
        int v20 = v8 + 1;
        unint64_t v21 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_31;
        }
        int v22 = *v20;
        int v23 = v21 + (v22 << 7);
        unint64_t v21 = (v23 - 128);
        if (v22 < 0)
        {
          uint64_t v49 = (char *)sub_188C138((uint64_t)v8, (v23 - 128));
          if (!v49) {
            goto LABEL_100;
          }
          unint64_t v21 = v43;
        }
        else
        {
          int v20 = v8 + 2;
LABEL_31:
          uint64_t v49 = v20;
        }
        if (v21 > 3)
        {
          if (*v7) {
            uint64_t v48 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v48 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(4, v21, v48);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x40u;
          *(_DWORD *)(a1 + 88) = v21;
        }
        goto LABEL_91;
      case 5u:
        if (v9 != 42) {
          goto LABEL_83;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v24 = *(void *)(a1 + 64);
        if (!v24)
        {
          uint64_t v25 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v25 = (void *)*v25;
          }
          uint64_t v24 = sub_12BBC50((uint64_t)v25);
          *(void *)(a1 + 64) = v24;
          char v8 = v49;
        }
        unint64_t v15 = sub_1292FD0(a3, v24, (unsigned __int8 *)v8);
        goto LABEL_90;
      case 6u:
        if (v9 != 50) {
          goto LABEL_83;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v26 = *(void *)(a1 + 72);
        if (!v26)
        {
          unint64_t v27 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v27 = (void *)*v27;
          }
          sub_129E2E8((uint64_t)v27);
          uint64_t v26 = v28;
          *(void *)(a1 + 72) = v28;
          char v8 = v49;
        }
        unint64_t v15 = sub_1293060(a3, v26, (unsigned __int8 *)v8);
        goto LABEL_90;
      case 7u:
        if (v9 != 56) {
          goto LABEL_83;
        }
        v5 |= 0x80u;
        unint64_t v29 = v8 + 1;
        uint64_t v30 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_50;
        }
        int v31 = *v29;
        uint64_t v30 = v30 + (v31 << 7) - 128;
        if (v31 < 0)
        {
          uint64_t v44 = (char *)sub_188C138((uint64_t)v8, v30);
          uint64_t v49 = v44;
          *(unsigned char *)(a1 + 92) = v45 != 0;
          if (!v44) {
            goto LABEL_100;
          }
        }
        else
        {
          unint64_t v29 = v8 + 2;
LABEL_50:
          uint64_t v49 = v29;
          *(unsigned char *)(a1 + 92) = v30 != 0;
        }
        goto LABEL_91;
      case 8u:
        if (v9 == 64)
        {
          int v32 = v8 - 1;
          while (1)
          {
            uint64_t v49 = v32 + 1;
            unint64_t v33 = v32[1];
            int v34 = v32 + 2;
            if (v32[1] < 0)
            {
              int v35 = *v34;
              int v36 = v33 + (v35 << 7);
              unint64_t v33 = (v36 - 128);
              if (v35 < 0)
              {
                uint64_t v49 = (char *)sub_188C138((uint64_t)(v32 + 1), (v36 - 128));
                if (!v49) {
                  goto LABEL_100;
                }
                unint64_t v33 = v39;
                goto LABEL_57;
              }
              int v34 = v32 + 3;
            }
            uint64_t v49 = v34;
LABEL_57:
            if (v33 > 3)
            {
              if (*v7) {
                uint64_t v40 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v40 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(8, v33, v40);
            }
            else
            {
              uint64_t v37 = *(unsigned int *)(a1 + 24);
              if (v37 == *(_DWORD *)(a1 + 28))
              {
                int v38 = v37 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v37 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v37) = v33;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v37) = v33;
                int v38 = v37 + 1;
              }
              *(_DWORD *)(a1 + 24) = v38;
            }
            int v32 = v49;
            if (*(void *)a3 <= (unint64_t)v49 || *v49 != 64) {
              goto LABEL_91;
            }
          }
        }
        if (v9 == 66)
        {
          *(void *)&long long v50 = a1 + 24;
          *((void *)&v50 + 1) = sub_12930F0;
          uint64_t v51 = a1 + 8;
          int v52 = 8;
          unint64_t v15 = sub_1112E88((uint64_t)a3, v8, &v50);
LABEL_90:
          uint64_t v49 = v15;
          if (!v15) {
            goto LABEL_100;
          }
LABEL_91:
          if (sub_11947B8((uint64_t)a3, &v49, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_83:
        if (v9) {
          BOOL v46 = (v9 & 7) == 4;
        }
        else {
          BOOL v46 = 1;
        }
        if (!v46)
        {
          if (*v7)
          {
            uint64_t v47 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v47 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v8 = v49;
          }
          unint64_t v15 = (char *)sub_1885AC0(v9, v47, v8, a3);
          goto LABEL_90;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_100:
        }
          uint64_t v49 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v49;
      case 9u:
        if (v9 != 74) {
          goto LABEL_83;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v41 = *(void *)(a1 + 80);
        if (!v41)
        {
          uint64_t v42 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v42 = (void *)*v42;
          }
          uint64_t v41 = sub_12BBCF8((uint64_t)v42);
          *(void *)(a1 + 80) = v41;
          char v8 = v49;
        }
        unint64_t v15 = sub_12930FC(a3, v41, (unsigned __int8 *)v8);
        goto LABEL_90;
      default:
        goto LABEL_83;
    }
  }
}

char *sub_1292E20(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_129403C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1292EB0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1294708(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1292F40(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1294B20(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1292FD0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12A1F14(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1293060(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1295224(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

BOOL sub_12930F0(unsigned int a1)
{
  return a1 < 4;
}

char *sub_12930FC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12A2678(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_129318C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 40);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_12942DC(v7, (unint64_t)v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 48);
  *char v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    unsigned int v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    unsigned int v12 = v4 + 2;
  }
  char v4 = sub_1294860(v10, v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 0x40) == 0) {
      goto LABEL_30;
    }
    goto LABEL_24;
  }
LABEL_18:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 56);
  *char v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    unint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    unint64_t v15 = v4 + 2;
  }
  char v4 = sub_1294CA0(v13, (unint64_t)v15, a3);
  if ((v6 & 0x40) != 0)
  {
LABEL_24:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 88);
    *char v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_30:
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v19 = *(void *)(a1 + 64);
    *char v4 = 42;
    unsigned int v20 = *(_DWORD *)(v19 + 48);
    v4[1] = v20;
    if (v20 > 0x7F) {
      unint64_t v21 = sub_188A9CC(v20, v4 + 1);
    }
    else {
      unint64_t v21 = v4 + 2;
    }
    char v4 = sub_12A21F4(v19, v21, a3);
    if ((v6 & 0x10) == 0)
    {
LABEL_32:
      if ((v6 & 0x80) == 0) {
        goto LABEL_49;
      }
      goto LABEL_46;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_32;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v22 = *(void *)(a1 + 72);
  *char v4 = 50;
  unsigned int v23 = *(_DWORD *)(v22 + 20);
  v4[1] = v23;
  if (v23 > 0x7F) {
    uint64_t v24 = sub_188A9CC(v23, v4 + 1);
  }
  else {
    uint64_t v24 = v4 + 2;
  }
  char v4 = sub_12956B4(v22, (unint64_t)v24, a3);
  if ((v6 & 0x80) != 0)
  {
LABEL_46:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v25 = *(unsigned char *)(a1 + 92);
    *char v4 = 56;
    v4[1] = v25;
    v4 += 2;
  }
LABEL_49:
  uint64_t v26 = *(unsigned int *)(a1 + 24);
  if ((int)v26 >= 1)
  {
    for (uint64_t i = 0; i != v26; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v28 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *char v4 = 64;
      v4[1] = v28;
      if (v28 > 0x7F)
      {
        v4[1] = v28 | 0x80;
        unint64_t v29 = v28 >> 7;
        v4[2] = v28 >> 7;
        v4 += 3;
        if (v28 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v30 = v29 >> 14;
            v29 >>= 7;
            *v4++ = v29;
          }
          while (v30);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v31 = *(void *)(a1 + 80);
    *char v4 = 74;
    unsigned int v32 = *(_DWORD *)(v31 + 48);
    v4[1] = v32;
    if (v32 > 0x7F) {
      unint64_t v33 = sub_188A9CC(v32, v4 + 1);
    }
    else {
      unint64_t v33 = v4 + 2;
    }
    char v4 = sub_12A29F8(v31, v33, a3);
  }
  uint64_t v34 = *(void *)(a1 + 8);
  if ((v34 & 1) == 0) {
    return v4;
  }
  unint64_t v36 = v34 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v36 + 31) < 0)
  {
    uint64_t v37 = *(void **)(v36 + 8);
    uint64_t v38 = *(void *)(v36 + 16);
  }
  else
  {
    uint64_t v37 = (void *)(v36 + 8);
    LODWORD(v38) = *(unsigned __int8 *)(v36 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v38)
  {
    uint64_t v39 = (int)v38;
    memcpy(v4, v37, (int)v38);
    v4 += v39;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v37, v38, v4);
}

uint64_t sub_1293614(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v3);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v4 += v6;
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v7 = v4 + v2;
  char v8 = *(unsigned char *)(a1 + 16);
  if (!v8) {
    goto LABEL_30;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v9 = sub_1294474(*(void *)(a1 + 40));
    v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_20;
    }
  }
  else if ((*(unsigned char *)(a1 + 16) & 2) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v10 = sub_129492C(*(void *)(a1 + 48));
  v7 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_21;
  }
LABEL_20:
  unint64_t v11 = sub_1294DC8(*(void *)(a1 + 56));
  v7 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) == 0)
  {
LABEL_14:
    if ((v8 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t v12 = sub_12A23E0(*(void *)(a1 + 64));
  v7 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x10) == 0)
  {
LABEL_15:
    if ((v8 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t v13 = sub_1295920(*(void *)(a1 + 72));
  v7 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x20) == 0)
  {
LABEL_16:
    if ((v8 & 0x40) == 0) {
      goto LABEL_28;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v14 = sub_12A2BE4(*(void *)(a1 + 80));
  v7 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x40) == 0) {
    goto LABEL_28;
  }
LABEL_24:
  int v15 = *(_DWORD *)(a1 + 88);
  if (v15 < 0) {
    uint64_t v16 = 11;
  }
  else {
    uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v7 += v16;
LABEL_28:
  if (v8 < 0) {
    v7 += 2;
  }
LABEL_30:
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v7 += v20;
  }
  *(_DWORD *)(a1 + 20) = v7;
  return v7;
}

void sub_129384C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188C80C((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v8)
  {
    if (v8)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v10 = *(void *)(a1 + 40);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (void *)*v12;
        }
        uint64_t v10 = sub_129E170((uint64_t)v12);
        *(void *)(a1 + 40) = v10;
      }
      if (*(void *)(a2 + 40)) {
        uint64_t v13 = *(uint64_t (****)())(a2 + 40);
      }
      else {
        uint64_t v13 = &off_2530418;
      }
      sub_1293B08(v10, (uint64_t)v13);
      if ((v8 & 2) == 0)
      {
LABEL_6:
        if ((v8 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_34;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_6;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v14 = *(std::string **)(a1 + 48);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = (std::string *)sub_129E1EC((uint64_t)v16);
      *(void *)(a1 + 48) = v14;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v17 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v17 = &off_2530440;
    }
    sub_12329D0(v14, (uint64_t)v17);
    if ((v8 & 4) == 0)
    {
LABEL_7:
      if ((v8 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_42;
    }
LABEL_34:
    *(_DWORD *)(a1 + 16) |= 4u;
    unint64_t v18 = *(std::string **)(a1 + 56);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        uint64_t v20 = (void *)*v20;
      }
      unint64_t v18 = (std::string *)sub_129E270((uint64_t)v20);
      *(void *)(a1 + 56) = v18;
    }
    if (*(void *)(a2 + 56)) {
      unint64_t v21 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      unint64_t v21 = &off_2530460;
    }
    sub_11A442C(v18, (uint64_t)v21);
    if ((v8 & 8) == 0)
    {
LABEL_8:
      if ((v8 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_50;
    }
LABEL_42:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v22 = *(std::string **)(a1 + 64);
    if (!v22)
    {
      uint64_t v23 = *(void *)(a1 + 8);
      uint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        uint64_t v24 = (void *)*v24;
      }
      uint64_t v22 = (std::string *)sub_12BBC50((uint64_t)v24);
      *(void *)(a1 + 64) = v22;
    }
    if (*(void *)(a2 + 64)) {
      char v25 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      char v25 = &off_25308E8;
    }
    sub_11D640C(v22, (uint64_t)v25);
    if ((v8 & 0x10) == 0)
    {
LABEL_9:
      if ((v8 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_58;
    }
LABEL_50:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v26 = *(void *)(a1 + 72);
    if (!v26)
    {
      uint64_t v27 = *(void *)(a1 + 8);
      unint64_t v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
      if (v27) {
        unint64_t v28 = (void *)*v28;
      }
      sub_129E2E8((uint64_t)v28);
      *(void *)(a1 + 72) = v26;
    }
    if (*(void *)(a2 + 72)) {
      unint64_t v29 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      unint64_t v29 = &off_2530480;
    }
    sub_1293BD8(v26, (uint64_t)v29);
    if ((v8 & 0x20) == 0)
    {
LABEL_10:
      if ((v8 & 0x40) == 0) {
        goto LABEL_11;
      }
      goto LABEL_66;
    }
LABEL_58:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    unint64_t v30 = *(std::string **)(a1 + 80);
    if (!v30)
    {
      uint64_t v31 = *(void *)(a1 + 8);
      unsigned int v32 = (void *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
      if (v31) {
        unsigned int v32 = (void *)*v32;
      }
      unint64_t v30 = (std::string *)sub_12BBCF8((uint64_t)v32);
      *(void *)(a1 + 80) = v30;
    }
    if (*(void *)(a2 + 80)) {
      unint64_t v33 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      unint64_t v33 = &off_2530920;
    }
    sub_11D640C(v30, (uint64_t)v33);
    if ((v8 & 0x40) == 0)
    {
LABEL_11:
      if ((v8 & 0x80) == 0)
      {
LABEL_13:
        *(_DWORD *)(a1 + 16) |= v8;
        goto LABEL_14;
      }
LABEL_12:
      *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
      goto LABEL_13;
    }
LABEL_66:
    *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
    if ((v8 & 0x80) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_14:
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_1293B08(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v5 = *(void *)(a1 + 24);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          uint64_t v7 = (void *)*v7;
        }
        uint64_t v5 = sub_1363A48((uint64_t)v7);
        *(void *)(a1 + 24) = v5;
      }
      if (*(void *)(a2 + 24)) {
        int v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        int v8 = &off_25343A8;
      }
      sub_1363878(v5, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
    }
    *(_DWORD *)(a1 + 16) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_1293BD8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(std::string **)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        int v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          int v8 = (void *)*v8;
        }
        uint64_t v6 = (std::string *)sub_129E46C((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v9 = &off_2530510;
      }
      sub_11A442C(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_28;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void **)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_129E368((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_25304B8;
    }
    sub_1295A64((uint64_t)v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
      goto LABEL_7;
    }
LABEL_28:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v14 = *(void **)(a1 + 40);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = sub_129E3F0((uint64_t)v16);
      *(void *)(a1 + 40) = v14;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v17 = &off_25304E8;
    }
    sub_1295B74((uint64_t)v14, (uint64_t)v17);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1293D50(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 40);
    if (*(unsigned char *)(v3 + 16))
    {
      uint64_t result = sub_1363A30(*(void *)(v3 + 24));
      if (!result) {
        return result;
      }
      int v2 = *(_DWORD *)(a1 + 16);
    }
  }
  if ((v2 & 0x10) == 0) {
    return 1;
  }
  uint64_t result = sub_1293DD4(*(void *)(a1 + 72));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_1293DA8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_1363A30(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_1293DD4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    if ((*(unsigned char *)(v3 + 16) & 2) != 0)
    {
      uint64_t result = sub_15B0F18(*(void *)(v3 + 32));
      if (!result) {
        return result;
      }
      int v2 = *(_DWORD *)(a1 + 16);
    }
  }
  if ((v2 & 4) == 0) {
    return 1;
  }
  uint64_t v5 = *(void *)(a1 + 40);
  if ((*(unsigned char *)(v5 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(v5 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1293E38@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchFilter");
}

uint64_t sub_1293E48(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24A2828;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  return a1;
}

void sub_1293EFC()
{
}

uint64_t sub_1293F4C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_2530418 && *(void *)(a1 + 24))
  {
    sub_1362774();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1294004(uint64_t a1)
{
  sub_1293F4C(a1);

  operator delete();
}

char *sub_129403C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v23 + 2;
      }
    }
    uint64_t v23 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v19 = *(void *)(a1 + 24);
    if (!v19)
    {
      uint64_t v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v20 = (void *)*v20;
      }
      uint64_t v19 = sub_1363A48((uint64_t)v20);
      *(void *)(a1 + 24) = v19;
      uint64_t v7 = v23;
    }
    uint64_t v14 = sub_129424C(a3, v19, (unsigned __int8 *)v7);
LABEL_32:
    uint64_t v23 = v14;
    if (!v14) {
      return 0;
    }
LABEL_33:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 == 16)
  {
    uint64_t v15 = v7 + 1;
    unint64_t v16 = *v7;
    if (*v7 < 0)
    {
      int v17 = *v15;
      int v18 = v16 + (v17 << 7);
      unint64_t v16 = (v18 - 128);
      if (v17 < 0)
      {
        uint64_t v23 = (char *)sub_188C138((uint64_t)v7, (v18 - 128));
        if (!v23) {
          return 0;
        }
        unint64_t v16 = v21;
        goto LABEL_25;
      }
      uint64_t v15 = v7 + 2;
    }
    uint64_t v23 = v15;
LABEL_25:
    if (v16 > 2)
    {
      if (*v6) {
        uint64_t v22 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v16, v22);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v16;
    }
    goto LABEL_33;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v23;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_32;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

char *sub_129424C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1362834(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12942DC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_1362F44(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 32);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1294474(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_136363C(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_11:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void *sub_1294544@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchVenueFilter");
}

uint64_t sub_1294554(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24A28A8;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v6 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v6 = (uint64_t *)*v6;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v6);
  }
  return a1;
}

void sub_1294600(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1294630(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12946D0(uint64_t a1)
{
  sub_1294630(a1);

  operator delete();
}

uint64_t sub_1294708(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v17 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
    return *(void *)v17;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = (char *)(*(void *)v17 + 1);
    unsigned int v7 = **(unsigned char **)v17;
    if ((char)**(unsigned char **)v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180(*(uint64_t *)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = (char *)(*(void *)v17 + 2);
      }
    }
    *(void *)uint64_t v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 8);
    uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
    if (v13) {
      uint64_t v14 = (uint64_t *)*v14;
    }
    unint64_t v15 = (std::string *)sub_1880F84((void *)(a1 + 24), v14);
    unint64_t v12 = (void *)sub_188C244(v15, *(char **)v17, (uint64_t)a3);
LABEL_18:
    *(void *)uint64_t v17 = v12;
    if (!v12) {
      goto LABEL_25;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
      return *(void *)v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = *(char **)v17;
    }
    unint64_t v12 = sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_18;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return *(void *)v17;
  }
LABEL_25:
  *(void *)uint64_t v17 = 0;
  return *(void *)v17;
}

char *sub_1294860(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_129492C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v1 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v1 += v8;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_12949B0()
{
  return 1;
}

void *sub_12949B8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.CategoryFilter");
}

uint64_t sub_12949C8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24A2928;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

void sub_1294A44(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1294A74(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1294AE8(void *a1)
{
  sub_1294A74(a1);

  operator delete();
}

char *sub_1294B20(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v13 = v7 + 1;
    uint64_t v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    uint64_t v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v7 + 2;
LABEL_19:
      uint64_t v19 = v13;
      *(void *)(a1 + 24) = v14;
      int v5 = 1;
      goto LABEL_20;
    }
    unint64_t v16 = (char *)sub_188C138((uint64_t)v7, v14);
    uint64_t v19 = v16;
    *(void *)(a1 + 24) = v17;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      unint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_1294CA0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(void *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

unint64_t sub_1294DC8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    unint64_t v1 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  else {
    unint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_1294E30()
{
  return 1;
}

void *sub_1294E38@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.BrandFilter");
}

uint64_t sub_1294E48(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24A29A8;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v5 = *(_DWORD *)(a2 + 16);
  if (v5) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  if ((v5 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  if ((v5 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  return a1;
}

void sub_1294F6C()
{
}

uint64_t sub_1294FEC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_2530480)
  {
    int v5 = *(void **)(a1 + 24);
    if (v5)
    {
      sub_1296AE8(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_1295DE4(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 40);
    if (v7)
    {
      sub_1296500(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12950DC(uint64_t a1)
{
  sub_1294FEC(a1);

  operator delete();
}

uint64_t sub_1295114(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

unsigned char *sub_129512C(unsigned char *result)
{
  unint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *((void *)result + 3) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_15B09D0(*((void *)result + 4));
  }
LABEL_7:
  char v5 = v1[8];
  uint64_t v4 = v1 + 8;
  *((void *)v4 + 4) = 0;
  *((_DWORD *)v4 + 2) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

unsigned char *sub_12951C4(unsigned char *result)
{
  unint64_t v1 = result;
  if (result[16]) {
    uint64_t result = sub_15B09D0(*((void *)result + 3));
  }
  char v3 = v1[8];
  int v2 = v1 + 8;
  *((void *)v2 + 3) = 0;
  *((_DWORD *)v2 + 2) = 0;
  if (v3)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_1295224(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v26 + 2;
      }
    }
    uint64_t v26 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_34;
        }
        unint64_t v11 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          uint64_t v26 = (char *)sub_188C138((uint64_t)v7, (v14 - 128));
          if (!v26) {
            return 0;
          }
          unint64_t v12 = v24;
        }
        else
        {
          unint64_t v11 = v7 + 2;
LABEL_13:
          uint64_t v26 = v11;
        }
        if (v12 > 4)
        {
          if (*v6) {
            char v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            char v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v12, v25);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 48) = v12;
        }
        goto LABEL_42;
      case 2u:
        if (v8 != 18) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        int v15 = *(void **)(a1 + 24);
        if (!v15)
        {
          unint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v16 = (void *)*v16;
          }
          int v15 = sub_129E46C((uint64_t)v16);
          *(void *)(a1 + 24) = v15;
          uint64_t v7 = v26;
        }
        uint64_t v17 = sub_1295504(a3, (uint64_t)v15, (unsigned __int8 *)v7);
        goto LABEL_41;
      case 3u:
        if (v8 != 26) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void **)(a1 + 32);
        if (!v18)
        {
          uint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v19 = (void *)*v19;
          }
          uint64_t v18 = sub_129E368((uint64_t)v19);
          *(void *)(a1 + 32) = v18;
          uint64_t v7 = v26;
        }
        uint64_t v17 = (char *)sub_1295594(a3, (uint64_t)v18, (unsigned __int8 *)v7);
        goto LABEL_41;
      case 4u:
        if (v8 != 34) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v20 = *(void **)(a1 + 40);
        if (!v20)
        {
          unint64_t v21 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v21 = (void *)*v21;
          }
          uint64_t v20 = sub_129E3F0((uint64_t)v21);
          *(void *)(a1 + 40) = v20;
          uint64_t v7 = v26;
        }
        uint64_t v17 = sub_1295624(a3, (uint64_t)v20, (unsigned __int8 *)v7);
        goto LABEL_41;
      default:
LABEL_34:
        if (v8) {
          BOOL v22 = (v8 & 7) == 4;
        }
        else {
          BOOL v22 = 1;
        }
        if (!v22)
        {
          if (*v6)
          {
            uint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v26;
          }
          uint64_t v17 = (char *)sub_1885AC0(v8, v23, v7, a3);
LABEL_41:
          uint64_t v26 = v17;
          if (!v17) {
            return 0;
          }
LABEL_42:
          if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
            return v26;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v26;
    }
  }
}

char *sub_1295504(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1296B94(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1295594(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1295EE8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1295624(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12965F0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_12956B4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 48);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    *uint64_t v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unint64_t v12 = v4 + 2;
    }
    uint64_t v4 = sub_1296D14(v10, (unint64_t)v12, a3);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_30;
      }
      goto LABEL_24;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 32);
  *uint64_t v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    int v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    int v15 = v4 + 2;
  }
  uint64_t v4 = sub_129611C(v13, v15, a3);
  if ((v6 & 4) != 0)
  {
LABEL_24:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 40);
    *uint64_t v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      uint64_t v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      uint64_t v18 = v4 + 2;
    }
    uint64_t v4 = sub_12967D4(v16, (unint64_t)v18, a3);
  }
LABEL_30:
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    BOOL v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    BOOL v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_1295920(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_16;
  }
  if (v2)
  {
    unint64_t v4 = sub_1296E3C(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_12962E0(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v6 = sub_129696C(*(void *)(a1 + 40));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0) {
      goto LABEL_16;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v7 = *(_DWORD *)(a1 + 48);
  if (v7 < 0) {
    uint64_t v8 = 11;
  }
  else {
    uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v8;
LABEL_16:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v3 += v12;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_1295A64(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      int v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          *(_DWORD *)(a1 + 16) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void *)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_15C1918((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_253F1A0;
    }
    sub_15B0E24(v10, (uint64_t)v13);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_1295B74(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v5 = *(void *)(a1 + 24);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        int v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          int v7 = (void *)*v7;
        }
        uint64_t v5 = sub_15C1918((uint64_t)v7);
        *(void *)(a1 + 24) = v5;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v8 = &off_253F1A0;
      }
      sub_15B0E24(v5, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
    }
    *(_DWORD *)(a1 + 16) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1295C44(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 32));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_1295C70(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1295C9C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ImplicitQueryCategoryFilter");
}

uint64_t sub_1295CAC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24A2A28;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    int v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 2) != 0) {
    operator new();
  }
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = v8;
  return a1;
}

void sub_1295D94()
{
}

uint64_t sub_1295DE4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_25304B8 && *(void *)(a1 + 32))
  {
    sub_15B0994();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1295EB0(uint64_t a1)
{
  sub_1295DE4(a1);

  operator delete();
}

uint64_t sub_1295EE8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v27 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v27 + 1);
    unsigned int v9 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v27, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v27 + 2);
      }
    }
    *(void *)uint64_t v27 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 != 3) {
      break;
    }
    if (v9 != 24) {
      goto LABEL_14;
    }
    v5 |= 4u;
    unsigned int v17 = (char *)(v8 + 1);
    uint64_t v18 = *v8;
    if (((char)*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v19 = *v17;
    uint64_t v18 = v18 + (v19 << 7) - 128;
    if ((v19 & 0x80000000) == 0)
    {
      unsigned int v17 = (char *)(v8 + 2);
LABEL_25:
      *(void *)uint64_t v27 = v17;
      *(void *)(a1 + 40) = v18;
      goto LABEL_36;
    }
    uint64_t v25 = sub_188C138((uint64_t)v8, v18);
    *(void *)uint64_t v27 = v25;
    *(void *)(a1 + 40) = v26;
    if (!v25) {
      goto LABEL_43;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 2)
  {
    if (v9 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v20 = *(void *)(a1 + 32);
    if (!v20)
    {
      unint64_t v21 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        unint64_t v21 = (void *)*v21;
      }
      uint64_t v20 = sub_15C1918((uint64_t)v21);
      *(void *)(a1 + 32) = v20;
      uint64_t v8 = *(unsigned __int8 **)v27;
    }
    uint64_t v16 = sub_1198F14(a3, v20, v8);
LABEL_35:
    *(void *)uint64_t v27 = v16;
    if (!v16) {
      goto LABEL_43;
    }
    goto LABEL_36;
  }
  if (v12 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v22 = *(void *)(a1 + 8);
    uint64_t v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
    if (v22) {
      uint64_t v23 = (uint64_t *)*v23;
    }
    uint64_t v24 = (std::string *)sub_1880F84((void *)(a1 + 24), v23);
    uint64_t v16 = (void *)sub_188C244(v24, *(char **)v27, (uint64_t)a3);
    goto LABEL_35;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      int v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(unsigned __int8 **)v27;
    }
    uint64_t v16 = sub_1885AC0(v9, v15, (char *)v8, a3);
    goto LABEL_35;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_43:
  *(void *)uint64_t v27 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v27;
}

char *sub_129611C(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_18;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  *int v4 = 18;
  unsigned int v8 = *(_DWORD *)(v7 + 44);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  int v4 = sub_15B0C0C(v7, v9, a3);
  if ((v6 & 4) != 0)
  {
LABEL_12:
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 40);
    *int v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_18:
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_12962E0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_12;
  }
  if (v2)
  {
    unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    uint64_t v7 = sub_15B0D90(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  if ((v2 & 4) != 0) {
    v3 += ((9 * (__clz(*(void *)(a1 + 40) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void *sub_12963F0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ImplicitQuerySearchAroundPOI");
}

uint64_t sub_1296400(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24A2AA8;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = v5;
  return a1;
}

void sub_12964B0()
{
}

uint64_t sub_1296500(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_25304E8 && *(void *)(a1 + 24))
  {
    sub_15B0994();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12965B8(uint64_t a1)
{
  sub_1296500(a1);

  operator delete();
}

char *sub_12965F0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v23 + 1;
    unsigned int v9 = *v23;
    if (*v23 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v23, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v23 + 2;
      }
    }
    uint64_t v23 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v16 = v8 + 1;
    uint64_t v17 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_24;
    }
    int v18 = *v16;
    uint64_t v17 = v17 + (v18 << 7) - 128;
    if ((v18 & 0x80000000) == 0)
    {
      uint64_t v16 = v8 + 2;
LABEL_24:
      uint64_t v23 = v16;
      *(void *)(a1 + 32) = v17;
      goto LABEL_31;
    }
    unint64_t v21 = (char *)sub_188C138((uint64_t)v8, v17);
    uint64_t v23 = v21;
    *(void *)(a1 + 32) = v22;
    if (!v21) {
      goto LABEL_38;
    }
LABEL_31:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v19 = *(void *)(a1 + 24);
    if (!v19)
    {
      uint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v20 = (void *)*v20;
      }
      uint64_t v19 = sub_15C1918((uint64_t)v20);
      *(void *)(a1 + 24) = v19;
      uint64_t v8 = v23;
    }
    unint64_t v15 = sub_1198F14(a3, v19, (unsigned __int8 *)v8);
LABEL_30:
    uint64_t v23 = v15;
    if (!v15) {
      goto LABEL_38;
    }
    goto LABEL_31;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      BOOL v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      BOOL v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v23;
    }
    unint64_t v15 = (char *)sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_38:
  uint64_t v23 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v23;
}

char *sub_12967D4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_15B0C0C(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 32);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_129696C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_15B0D90(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t result = 0;
  if ((v2 & 2) != 0) {
LABEL_7:
  }
    result += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    result += v7;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void *sub_1296A2C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ImplicitQueryIntroTipForHiking");
}

uint64_t sub_1296A3C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24A2B28;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

void sub_1296AB8(_Unwind_Exception *a1)
{
  *unint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1296AE8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1296B5C(void *a1)
{
  sub_1296AE8(a1);

  operator delete();
}

char *sub_1296B94(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v13 = v7 + 1;
    uint64_t v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    uint64_t v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v7 + 2;
LABEL_19:
      uint64_t v19 = v13;
      *(void *)(a1 + 24) = v14;
      int v5 = 1;
      goto LABEL_20;
    }
    uint64_t v16 = (char *)sub_188C138((uint64_t)v7, v14);
    uint64_t v19 = v16;
    *(void *)(a1 + 24) = v17;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      unint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_1296D14(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(void *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

unint64_t sub_1296E3C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    unint64_t v1 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  else {
    unint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_1296EA4()
{
  return 1;
}

void *sub_1296EAC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ImplicitQuerySearchForEVCharger");
}

uint64_t sub_1296EBC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if ((uint64_t (***)())a1 != &off_2530530 && *(void *)(a1 + 72))
  {
    sub_145FE08();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  sub_12C4060((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1296FC4(uint64_t a1)
{
  sub_1296EBC(a1);

  operator delete();
}

uint64_t sub_1296FFC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_17644B0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 0xF) == 0) {
    goto LABEL_11;
  }
  if (v5)
  {
    unint64_t v8 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_21;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_21;
      }
    }
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
  if ((v5 & 2) == 0) {
    goto LABEL_8;
  }
LABEL_21:
  unint64_t v9 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v9 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v9 = 0;
    *(unsigned char *)(v9 + 23) = 0;
    if ((v5 & 4) != 0) {
      goto LABEL_25;
    }
LABEL_9:
    if ((v5 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  **(unsigned char **)unint64_t v9 = 0;
  *(void *)(v9 + 8) = 0;
  if ((v5 & 4) == 0) {
    goto LABEL_9;
  }
LABEL_25:
  unint64_t v10 = *(void *)(v1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v10 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v10 = 0;
    *(unsigned char *)(v10 + 23) = 0;
    if ((v5 & 8) == 0) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t result = sub_1369BB4(*(void *)(v1 + 72));
    goto LABEL_11;
  }
  **(unsigned char **)unint64_t v10 = 0;
  *(void *)(v10 + 8) = 0;
  if ((v5 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_11:
  if ((v5 & 0x30) != 0) {
    *(void *)(v1 + 80) = 0;
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_1297140(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v39 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v39, a3[11].i32[1])) {
    return *(void *)v39;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    char v7 = (unsigned __int8 *)(*(void *)v39 + 1);
    unsigned int v8 = **(unsigned char **)v39;
    if ((char)**(unsigned char **)v39 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        char v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v39, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = (unsigned __int8 *)(*(void *)v39 + 2);
      }
    }
    *(void *)uint64_t v39 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_52;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 48);
        goto LABEL_51;
      case 2u:
        if (v8 != 18) {
          goto LABEL_52;
        }
        uint64_t v14 = v7 - 1;
        while (1)
        {
          int v15 = v14 + 1;
          *(void *)uint64_t v39 = v14 + 1;
          uint64_t v16 = *(_DWORD **)(a1 + 40);
          if (v16 && (uint64_t v17 = *(int *)(a1 + 32), (int)v17 < *v16))
          {
            *(_DWORD *)(a1 + 32) = v17 + 1;
            uint64_t v18 = *(void *)&v16[2 * v17 + 2];
          }
          else
          {
            uint64_t v19 = sub_178CE84(*(void *)(a1 + 24));
            uint64_t v18 = sub_188CDC8(a1 + 24, (uint64_t)v19);
            int v15 = *(unsigned __int8 **)v39;
          }
          uint64_t v14 = (unsigned __int8 *)sub_129757C(a3, v18, v15);
          *(void *)uint64_t v39 = v14;
          if (!v14) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
            goto LABEL_60;
          }
        }
      case 3u:
        if (v8 != 24) {
          goto LABEL_52;
        }
        uint64_t v20 = (char *)(v7 + 1);
        unint64_t v21 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        int v22 = *v20;
        int v23 = v21 + (v22 << 7);
        unint64_t v21 = (v23 - 128);
        if (v22 < 0)
        {
          *(void *)uint64_t v39 = sub_188C138((uint64_t)v7, (v23 - 128));
          if (!*(void *)v39) {
            return 0;
          }
          unint64_t v21 = v35;
        }
        else
        {
          uint64_t v20 = (char *)(v7 + 2);
LABEL_27:
          *(void *)uint64_t v39 = v20;
        }
        if (v21 <= 7)
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 80) = v21;
          goto LABEL_60;
        }
        if (*v6) {
          uint64_t v37 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v38 = 3;
        goto LABEL_72;
      case 4u:
        if (v8 != 34) {
          goto LABEL_52;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v24 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
        if (v24) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 56);
        goto LABEL_51;
      case 5u:
        if (v8 != 40) {
          goto LABEL_52;
        }
        uint64_t v25 = (char *)(v7 + 1);
        unint64_t v21 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v26 = *v25;
        int v27 = v21 + (v26 << 7);
        unint64_t v21 = (v27 - 128);
        if (v26 < 0)
        {
          *(void *)uint64_t v39 = sub_188C138((uint64_t)v7, (v27 - 128));
          if (!*(void *)v39) {
            return 0;
          }
          unint64_t v21 = v36;
        }
        else
        {
          uint64_t v25 = (char *)(v7 + 2);
LABEL_38:
          *(void *)uint64_t v39 = v25;
        }
        if (v21 > 1)
        {
          if (*v6) {
            uint64_t v37 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v38 = 5;
LABEL_72:
          sub_188C020(v38, v21, v37);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 84) = v21;
        }
        goto LABEL_60;
      case 6u:
        if (v8 != 50) {
          goto LABEL_52;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        unint64_t v28 = *(void **)(a1 + 72);
        if (!v28)
        {
          unint64_t v29 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v29 = (void *)*v29;
          }
          unint64_t v28 = sub_1478C60((uint64_t)v29);
          *(void *)(a1 + 72) = v28;
          char v7 = *(unsigned __int8 **)v39;
        }
        unint64_t v30 = sub_129760C(a3, (uint64_t)v28, v7);
        goto LABEL_59;
      case 7u:
        if (v8 != 58) {
          goto LABEL_52;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v31 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
        if (v31) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 64);
LABEL_51:
        unsigned int v32 = (std::string *)sub_1880F84(v13, v12);
        unint64_t v30 = (void *)sub_188C244(v32, *(char **)v39, (uint64_t)a3);
        goto LABEL_59;
      default:
LABEL_52:
        if (v8) {
          BOOL v33 = (v8 & 7) == 4;
        }
        else {
          BOOL v33 = 1;
        }
        if (!v33)
        {
          if (*v6)
          {
            uint64_t v34 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v7 = *(unsigned __int8 **)v39;
          }
          unint64_t v30 = sub_1885AC0(v8, v34, (char *)v7, a3);
LABEL_59:
          *(void *)uint64_t v39 = v30;
          if (!v30) {
            return 0;
          }
LABEL_60:
          if (sub_11947B8((uint64_t)a3, (char **)v39, a3[11].i32[1])) {
            return *(void *)v39;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v39;
    }
  }
}

uint64_t sub_129757C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1764D68(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_129760C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_145FE44(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_129769C(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v7 = *(_DWORD *)(a1 + 32);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v10 = *(_DWORD *)(v9 + 20);
      v4[1] = v10;
      if (v10 > 0x7F) {
        uint64_t v11 = sub_188A9CC(v10, v4 + 1);
      }
      else {
        uint64_t v11 = v4 + 2;
      }
      uint64_t v4 = sub_1764FF8(v9, v11, a3);
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v12 = *(int *)(a1 + 80);
    *uint64_t v4 = 24;
    v4[1] = v12;
    if (v12 > 0x7F)
    {
      v4[1] = v12 | 0x80;
      unint64_t v13 = v12 >> 7;
      v4[2] = v12 >> 7;
      v4 += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v14 = v13 >> 14;
          v13 >>= 7;
          *v4++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v15 = *(int *)(a1 + 84);
    *uint64_t v4 = 40;
    v4[1] = v15;
    if (v15 > 0x7F)
    {
      v4[1] = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      v4[2] = v15 >> 7;
      v4 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *v4++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v18 = *(void *)(a1 + 72);
    *uint64_t v4 = 50;
    unsigned int v19 = *(_DWORD *)(v18 + 44);
    v4[1] = v19;
    if (v19 > 0x7F) {
      uint64_t v20 = sub_188A9CC(v19, v4 + 1);
    }
    else {
      uint64_t v20 = v4 + 2;
    }
    uint64_t v4 = sub_1460138(v18, v20, a3);
  }
  if ((v6 & 4) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return v4;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    uint64_t v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    uint64_t v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if (*a3 - (void)v4 >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(v4, v24, (int)v25);
    v4 += v26;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v24, v25, v4);
}

uint64_t sub_12979A0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_17651BC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0x3F) == 0) {
    goto LABEL_35;
  }
  if (v8)
  {
    unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_23;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  unint64_t v12 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  uint64_t v14 = *(void *)(v12 + 8);
  if ((v13 & 0x80u) == 0) {
    uint64_t v14 = v13;
  }
  v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_26;
  }
LABEL_23:
  unint64_t v15 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
  uint64_t v17 = *(void *)(v15 + 8);
  if ((v16 & 0x80u) == 0) {
    uint64_t v17 = v16;
  }
  v2 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) == 0)
  {
LABEL_14:
    if ((v8 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v18 = sub_1460320(*(void *)(a1 + 72));
  v2 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x10) == 0)
  {
LABEL_15:
    if ((v8 & 0x20) == 0) {
      goto LABEL_35;
    }
    goto LABEL_31;
  }
LABEL_27:
  int v19 = *(_DWORD *)(a1 + 80);
  if (v19 < 0) {
    uint64_t v20 = 11;
  }
  else {
    uint64_t v20 = ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v20;
  if ((v8 & 0x20) != 0)
  {
LABEL_31:
    int v21 = *(_DWORD *)(a1 + 84);
    if (v21 < 0) {
      uint64_t v22 = 11;
    }
    else {
      uint64_t v22 = ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v22;
  }
LABEL_35:
  uint64_t v23 = *(void *)(a1 + 8);
  if (v23)
  {
    unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v25 + 31) < 0) {
      uint64_t v26 = *(void *)(v25 + 16);
    }
    else {
      uint64_t v26 = *(unsigned __int8 *)(v25 + 31);
    }
    v2 += v26;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_1297BD8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C42EC((std::string *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0x3F) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 48), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_23;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    uint64_t v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    sub_1881DF4((std::string **)(a1 + 56), v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_26;
    }
LABEL_23:
    uint64_t v17 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v18 = *(void *)(a1 + 8);
    int v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      int v19 = (uint64_t *)*v19;
    }
    sub_1881DF4((std::string **)(a1 + 64), v17, v19);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_34;
    }
LABEL_26:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v20 = *(void **)(a1 + 72);
    if (!v20)
    {
      uint64_t v21 = *(void *)(a1 + 8);
      uint64_t v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
      if (v21) {
        uint64_t v22 = (void *)*v22;
      }
      uint64_t v20 = sub_1478C60((uint64_t)v22);
      *(void *)(a1 + 72) = v20;
    }
    if (*(void *)(a2 + 72)) {
      uint64_t v23 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      uint64_t v23 = &off_2539400;
    }
    sub_136AC4C((uint64_t)v20, (uint64_t)v23);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0)
      {
LABEL_12:
        *(_DWORD *)(a1 + 16) |= v9;
        goto LABEL_13;
      }
LABEL_11:
      *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
      goto LABEL_12;
    }
LABEL_34:
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    if ((v9 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_13:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1297DD8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 8) == 0) {
    return 1;
  }
  uint64_t result = sub_136AEA0(*(void *)(a1 + 72));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1297E04@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchResultSection");
}

uint64_t sub_1297E14(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24A2C28;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    int v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 32) = &qword_2550250;
  if ((v6 & 2) != 0)
  {
    int v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 32), (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 40) = &qword_2550250;
  if ((v6 & 4) != 0)
  {
    int v9 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v9 = (uint64_t *)*v9;
    }
    sub_1881DF4((std::string **)(a1 + 40), (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL), v9);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  return a1;
}

void sub_1297F60()
{
}

uint64_t sub_1297FB4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if ((uint64_t (***)())a1 != &off_2530588 && *(void *)(a1 + 48))
  {
    sub_145FE08();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12980B0(uint64_t a1)
{
  sub_1297FB4(a1);

  operator delete();
}

uint64_t sub_12980E8(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_7;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_15:
  unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v6 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_19;
    }
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  **(unsigned char **)unint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_19:
  unint64_t v7 = *(void *)(result + 40) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v7 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    if ((v2 & 8) == 0) {
      goto LABEL_7;
    }
LABEL_6:
    uint64_t result = sub_1369BB4(*(void *)(result + 48));
    goto LABEL_7;
  }
  **(unsigned char **)unint64_t v7 = 0;
  *(void *)(v7 + 8) = 0;
  if ((v2 & 8) != 0) {
    goto LABEL_6;
  }
LABEL_7:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 48) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_12981F0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v28 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
    return *(void *)v28;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v7 = (unsigned __int8 *)(*(void *)v28 + 1);
    unsigned int v8 = **(unsigned char **)v28;
    if ((char)**(unsigned char **)v28 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        unint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v28, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (unsigned __int8 *)(*(void *)v28 + 2);
      }
    }
    *(void *)unint64_t v28 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 24);
        goto LABEL_34;
      case 2u:
        if (v8 != 18) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 32);
        goto LABEL_34;
      case 3u:
        if (v8 != 24) {
          goto LABEL_35;
        }
        uint64_t v15 = (char *)(v7 + 1);
        unint64_t v16 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_21;
        }
        int v17 = *v15;
        int v18 = v16 + (v17 << 7);
        unint64_t v16 = (v18 - 128);
        if (v17 < 0)
        {
          *(void *)unint64_t v28 = sub_188C138((uint64_t)v7, (v18 - 128));
          if (!*(void *)v28) {
            return 0;
          }
          unint64_t v16 = v26;
        }
        else
        {
          uint64_t v15 = (char *)(v7 + 2);
LABEL_21:
          *(void *)unint64_t v28 = v15;
        }
        if (v16 > 1)
        {
          if (*v6) {
            int v27 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(3, v16, v27);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 56) = v16;
        }
        goto LABEL_43;
      case 4u:
        if (v8 != 34) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        int v19 = *(void **)(a1 + 48);
        if (!v19)
        {
          uint64_t v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v20 = (void *)*v20;
          }
          int v19 = sub_1478C60((uint64_t)v20);
          *(void *)(a1 + 48) = v19;
          unint64_t v7 = *(unsigned __int8 **)v28;
        }
        uint64_t v21 = sub_129760C(a3, (uint64_t)v19, v7);
        goto LABEL_42;
      case 5u:
        if (v8 != 42) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v22 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 40);
LABEL_34:
        uint64_t v23 = (std::string *)sub_1880F84(v13, v12);
        uint64_t v21 = (void *)sub_188C244(v23, *(char **)v28, (uint64_t)a3);
        goto LABEL_42;
      default:
LABEL_35:
        if (v8) {
          BOOL v24 = (v8 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v6)
          {
            unint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v7 = *(unsigned __int8 **)v28;
          }
          uint64_t v21 = sub_1885AC0(v8, v25, (char *)v7, a3);
LABEL_42:
          *(void *)unint64_t v28 = v21;
          if (!v21) {
            return 0;
          }
LABEL_43:
          if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
            return *(void *)v28;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v28;
    }
  }
}

char *sub_12984FC(uint64_t a1, char *__dst, void *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_7;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  char v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0) {
    goto LABEL_13;
  }
LABEL_7:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v7 = *(int *)(a1 + 56);
  *char v4 = 24;
  v4[1] = v7;
  if (v7 > 0x7F)
  {
    v4[1] = v7 | 0x80;
    unint64_t v8 = v7 >> 7;
    v4[2] = v7 >> 7;
    v4 += 3;
    if (v7 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v9 = v8 >> 14;
        v8 >>= 7;
        *v4++ = v8;
      }
      while (v9);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_13:
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 48);
    *char v4 = 34;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    char v4 = sub_1460138(v10, v12, a3);
  }
  if ((v6 & 4) != 0) {
    char v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1298700(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x1F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_24;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    unint64_t v10 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
    uint64_t v12 = *(void *)(v10 + 8);
    if ((v11 & 0x80u) == 0) {
      uint64_t v12 = v11;
    }
    v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_24;
      }
      goto LABEL_20;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  uint64_t v13 = sub_1460320(*(void *)(a1 + 48));
  v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0) {
    goto LABEL_24;
  }
LABEL_20:
  int v14 = *(_DWORD *)(a1 + 56);
  if (v14 < 0) {
    uint64_t v15 = 11;
  }
  else {
    uint64_t v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v15;
LABEL_24:
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v18 + 31) < 0) {
      uint64_t v19 = *(void *)(v18 + 16);
    }
    else {
      uint64_t v19 = *(unsigned __int8 *)(v18 + 31);
    }
    v3 += v19;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_12988B4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      unint64_t v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_19;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    unint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v11 = *(void *)(a1 + 8);
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 32), v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_22;
    }
LABEL_19:
    uint64_t v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v14 = *(void *)(a1 + 8);
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    sub_1881DF4((std::string **)(a1 + 40), v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
      goto LABEL_8;
    }
LABEL_22:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v16 = *(void **)(a1 + 48);
    if (!v16)
    {
      uint64_t v17 = *(void *)(a1 + 8);
      unint64_t v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        unint64_t v18 = (void *)*v18;
      }
      uint64_t v16 = sub_1478C60((uint64_t)v18);
      *(void *)(a1 + 48) = v16;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v19 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v19 = &off_2539400;
    }
    sub_136AC4C((uint64_t)v16, (uint64_t)v19);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1298A34(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 8) == 0) {
    return 1;
  }
  uint64_t result = sub_136AEA0(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1298A60@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.CategorySearchResultSection");
}

uint64_t sub_1298A70(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = (uint64_t *)(a1 + 16);
  *(void *)a1 = off_24A2CA8;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_12C4368(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    unint64_t v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *unint64_t v10 = v9;
    }
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  int v11 = *(_DWORD *)(a2 + 48);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 56);
    uint64_t v13 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_188FB98(a1 + 40, v13, (const std::string **)(v12 + 8), v11, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v14 = *(_DWORD *)(a1 + 48) + v11;
    *(_DWORD *)(a1 + 48) = v14;
    uint64_t v15 = *(int **)(a1 + 56);
    if (*v15 < v14) {
      *uint64_t v15 = v14;
    }
  }
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  int v16 = *(_DWORD *)(a2 + 64);
  if (v16)
  {
    sub_188CA54((unsigned int *)(a1 + 64), v16);
    uint64_t v17 = *(void **)(a1 + 72);
    *(_DWORD *)(a1 + 64) += *(_DWORD *)(a2 + 64);
    memcpy(v17, *(const void **)(a2 + 72), 8 * *(int *)(a2 + 64));
  }
  *(_DWORD *)(a1 + 80) = 0;
  uint64_t v18 = *(void *)(a2 + 8);
  if (v18) {
    sub_188B4F8(v4, (v18 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_1298BFC(_Unwind_Exception *a1)
{
  sub_1889DA8(v5);
  sub_1889DE8(v4);
  sub_12C40E0(v3);
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1298C64(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 8));
  sub_1889DE8(a1 + 5);
  sub_12C40E0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1298CF4(void *a1)
{
  sub_1298C64(a1);

  operator delete();
}

uint64_t sub_1298D2C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_1765374(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 24) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 40);
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(_DWORD *)(v6 + 56) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_1298DB4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v36 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v36, a3[11].i32[1])) {
    return *(void *)v36;
  }
  uint64_t v6 = (uint64_t **)(a1 + 40);
  char v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v36 + 1);
    unsigned int v9 = **(unsigned char **)v36;
    if ((char)**(unsigned char **)v36 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v36, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v36 + 2);
      }
    }
    *(void *)unint64_t v36 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 == 24)
      {
        uint64_t v17 = v8 - 1;
        while (1)
        {
          *(void *)unint64_t v36 = v17 + 1;
          uint64_t v18 = v17[1];
          if ((char)v17[1] < 0)
          {
            int v19 = v18 + (v17[2] << 7);
            uint64_t v18 = (v19 - 128);
            if ((char)v17[2] < 0)
            {
              uint64_t v17 = (unsigned __int8 *)sub_188C138((uint64_t)(v17 + 1), (v19 - 128));
              uint64_t v18 = v20;
            }
            else
            {
              v17 += 3;
            }
          }
          else
          {
            v17 += 2;
          }
          *(void *)unint64_t v36 = v17;
          uint64_t v21 = *(unsigned int *)(a1 + 64);
          if (v21 == *(_DWORD *)(a1 + 68))
          {
            int v22 = v21 + 1;
            sub_188CA54((unsigned int *)(a1 + 64), v21 + 1);
            *(void *)(*(void *)(a1 + 72) + 8 * v21) = v18;
            uint64_t v17 = *(unsigned __int8 **)v36;
          }
          else
          {
            *(void *)(*(void *)(a1 + 72) + 8 * v21) = v18;
            int v22 = v21 + 1;
          }
          *(_DWORD *)(a1 + 64) = v22;
          if (!v17) {
            goto LABEL_64;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 24) {
            goto LABEL_57;
          }
        }
      }
      if (v9 == 26)
      {
        int v16 = sub_188C2EC((unsigned int *)(a1 + 64), v8, (uint64_t)a3);
        goto LABEL_21;
      }
    }
    else if (v12 == 2)
    {
      if (v9 == 18)
      {
        uint64_t v23 = (const std::string::value_type *)(v8 - 1);
        while (1)
        {
          BOOL v24 = (char *)(v23 + 1);
          *(void *)unint64_t v36 = v23 + 1;
          unint64_t v25 = *(_DWORD **)(a1 + 56);
          if (v25 && (uint64_t v26 = *(int *)(a1 + 48), (int)v26 < *v25))
          {
            *(_DWORD *)(a1 + 48) = v26 + 1;
            int v27 = *(std::string **)&v25[2 * v26 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            *unint64_t v29 = v28;
            v29[1] = sub_3A6EDC;
            void *v28 = 0;
            v28[1] = 0;
            int v28[2] = 0;
            int v27 = (std::string *)sub_188CDC8(a1 + 40, (uint64_t)v28);
            BOOL v24 = *(char **)v36;
          }
          uint64_t v23 = sub_188C244(v27, v24, (uint64_t)a3);
          *(void *)unint64_t v36 = v23;
          if (!v23) {
            goto LABEL_64;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 18) {
            goto LABEL_57;
          }
        }
      }
    }
    else if (v12 == 1 && v9 == 10)
    {
      unint64_t v30 = (char *)(v8 - 1);
      while (1)
      {
        uint64_t v31 = (unsigned __int8 *)(v30 + 1);
        *(void *)unint64_t v36 = v30 + 1;
        unsigned int v32 = *(_DWORD **)(a1 + 32);
        if (v32 && (uint64_t v33 = *(int *)(a1 + 24), (int)v33 < *v32))
        {
          *(_DWORD *)(a1 + 24) = v33 + 1;
          uint64_t v34 = *(void *)&v32[2 * v33 + 2];
        }
        else
        {
          uint64_t v35 = sub_178CF08(*(void *)(a1 + 16));
          uint64_t v34 = sub_188CDC8(a1 + 16, v35);
          uint64_t v31 = *(unsigned __int8 **)v36;
        }
        unint64_t v30 = sub_129913C(a3, v34, v31);
        *(void *)unint64_t v36 = v30;
        if (!v30) {
          goto LABEL_64;
        }
        if (*(void *)a3 <= (unint64_t)v30 || *v30 != 10) {
          goto LABEL_57;
        }
      }
    }
    if (!v9 || (v9 & 7) == 4) {
      break;
    }
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(unsigned __int8 **)v36;
    }
    int v16 = sub_1885AC0(v9, v15, (char *)v8, a3);
LABEL_21:
    *(void *)unint64_t v36 = v16;
    if (!v16) {
      goto LABEL_64;
    }
LABEL_57:
    if (sub_11947B8((uint64_t)a3, (char **)v36, a3[11].i32[1])) {
      return *(void *)v36;
    }
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    return *(void *)v36;
  }
LABEL_64:
  *(void *)unint64_t v36 = 0;
  return *(void *)v36;
}

char *sub_129913C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_176539C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12991CC(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_17657D4(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(unsigned int *)(a1 + 48);
  if ((int)v11 >= 1)
  {
    uint64_t v12 = 0;
    uint64_t v13 = 8 * v11;
    do
    {
      int v14 = *(void **)(*(void *)(a1 + 56) + v12 + 8);
      if (*((char *)v14 + 23) < 0)
      {
        int64_t v15 = v14[1];
        if (v15 > 127) {
          goto LABEL_20;
        }
      }
      else
      {
        int64_t v15 = *((unsigned __int8 *)v14 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v15)
      {
        *__dst = 18;
        __dst[1] = v15;
        if (*((char *)v14 + 23) < 0) {
          int v14 = (void *)*v14;
        }
        int v16 = __dst + 2;
        memcpy(v16, v14, v15);
        __dst = &v16[v15];
        goto LABEL_18;
      }
LABEL_20:
      __dst = (char *)sub_188A868(a3, 2, (uint64_t)v14, __dst);
LABEL_18:
      v12 += 8;
    }
    while (v13 != v12);
  }
  uint64_t v17 = *(unsigned int *)(a1 + 64);
  if ((int)v17 >= 1)
  {
    for (uint64_t j = 0; j != v17; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v19 = *(void *)(*(void *)(a1 + 72) + 8 * j);
      *__dst = 24;
      __dst[1] = v19;
      if (v19 > 0x7F)
      {
        __dst[1] = v19 | 0x80;
        unint64_t v20 = v19 >> 7;
        __dst[2] = v19 >> 7;
        __dst += 3;
        if (v19 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v21 = v20 >> 14;
            v20 >>= 7;
            *__dst++ = v20;
          }
          while (v21);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return __dst;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    unint64_t v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    unint64_t v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(__dst, v25, (int)v26);
    __dst += v27;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v25, v26, __dst);
}

uint64_t sub_1299454(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1765AEC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 48);
  uint64_t v9 = v2 + v8;
  if ((int)v8 >= 1)
  {
    unsigned int v10 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v9 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      --v8;
    }
    while (v8);
  }
  uint64_t result = sub_188D5A8((unsigned int *)(a1 + 64)) + v9 + *(unsigned int *)(a1 + 64);
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v16 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    result += v17;
  }
  *(_DWORD *)(a1 + 80) = result;
  return result;
}

std::string *sub_129956C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = (std::string *)sub_12C4368((uint64_t *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    unsigned int v10 = (const std::string **)(*(void *)(a2 + 56) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[1].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 48));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1].__r_.__value_.__r.__words[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    int v12 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v9;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__l.__size_;
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 64);
  if (v14)
  {
    uint64_t v15 = SLODWORD(v3[2].__r_.__value_.__r.__words[2]);
    sub_188CA54((unsigned int *)&v3[2].__r_.__value_.__r.__words[2], v15 + v14);
    std::string::pointer data = v3[3].__r_.__value_.__l.__data_;
    LODWORD(v3[2].__r_.__value_.__r.__words[2]) += *(_DWORD *)(a2 + 64);
    uint64_t result = (std::string *)memcpy(&data[8 * v15], *(const void **)(a2 + 72), 8 * *(int *)(a2 + 64));
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12996E4()
{
  return 1;
}

void *sub_12996EC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchEvChargingParameters");
}

void *sub_12996FC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1299770(void *a1)
{
  sub_12996FC(a1);

  operator delete();
}

uint64_t sub_12997A8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_12997D0(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v32 + 1;
    unsigned int v9 = *v32;
    if (*v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v32 + 2;
      }
    }
    unsigned int v32 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      unint64_t v16 = v8 + 1;
      int v17 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_26;
      }
      int v18 = *v16;
      int v17 = v17 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        unint64_t v16 = v8 + 2;
LABEL_26:
        unsigned int v32 = v16;
        *(_DWORD *)(a1 + 32) = v17;
        goto LABEL_38;
      }
      uint64_t v26 = (char *)sub_188C0D0((uint64_t)v8, v17);
      unsigned int v32 = v26;
      *(_DWORD *)(a1 + 32) = v27;
      if (!v26) {
        goto LABEL_53;
      }
      goto LABEL_38;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    unint64_t v19 = v8 + 1;
    int v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    int v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      unint64_t v19 = v8 + 2;
LABEL_31:
      unsigned int v32 = v19;
      *(_DWORD *)(a1 + 28) = v20;
      goto LABEL_38;
    }
    unint64_t v28 = (char *)sub_188C0D0((uint64_t)v8, v20);
    unsigned int v32 = v28;
    *(_DWORD *)(a1 + 28) = v29;
    if (!v28) {
      goto LABEL_53;
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 8)
  {
    uint64_t v22 = v8 + 1;
    unint64_t v23 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v24 = *v22;
    int v25 = v23 + (v24 << 7);
    unint64_t v23 = (v25 - 128);
    if (v24 < 0)
    {
      unsigned int v32 = (char *)sub_188C138((uint64_t)v8, (v25 - 128));
      if (!v32) {
        goto LABEL_53;
      }
      unint64_t v23 = v30;
    }
    else
    {
      uint64_t v22 = v8 + 2;
LABEL_35:
      unsigned int v32 = v22;
    }
    if (v23 > 2)
    {
      if (*v7) {
        uint64_t v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v23, v31);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_DWORD *)(a1 + 24) = v23;
    }
    goto LABEL_38;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v32;
    }
    unsigned int v32 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v32) {
      goto LABEL_53;
    }
    goto LABEL_38;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_53:
  unsigned int v32 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v32;
}

unsigned char *sub_1299A68(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    *int v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 32);
    *int v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    unint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    unint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_1299C88(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  int v3 = *(_DWORD *)(a1 + 24);
  if ((v3 & 0x80000000) == 0)
  {
    uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  uint64_t v2 = 11;
  if ((v1 & 2) != 0) {
LABEL_8:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_9:
  if ((v1 & 4) != 0) {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_11:
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v2 += v7;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1299D64()
{
  return 1;
}

void *sub_1299D6C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchTierMetadata");
}

uint64_t sub_1299D7C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24A2DA8;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  long long v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 36) = *(_OWORD *)(a2 + 36);
  *(_OWORD *)(a1 + 24) = v5;
  return a1;
}

void sub_1299E00(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1299E34(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1299EA8(void *a1)
{
  sub_1299E34(a1);

  operator delete();
}

uint64_t sub_1299EE0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0xF) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(_DWORD *)(a1 + 48) = 0;
    *(void *)(a1 + 40) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1299F0C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v23 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = v23 + 1;
    unsigned int v9 = *v23;
    if (*v23 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v23, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v23 + 2;
      }
    }
    unint64_t v23 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_21;
        }
        v5 |= 8u;
        unsigned int v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unsigned int v12 = v8 + 2;
LABEL_13:
          unint64_t v23 = v12;
          *(_DWORD *)(a1 + 48) = v13;
          goto LABEL_28;
        }
        uint64_t v21 = (char *)sub_188C0D0((uint64_t)v8, v13);
        unint64_t v23 = v21;
        *(_DWORD *)(a1 + 48) = v22;
        if (v21) {
          goto LABEL_28;
        }
        goto LABEL_35;
      case 2u:
        if (v9 != 17) {
          goto LABEL_21;
        }
        uint64_t v16 = *(void *)v8;
        unsigned int v15 = v8 + 8;
        v5 |= 1u;
        *(void *)(a1 + 24) = v16;
        goto LABEL_20;
      case 3u:
        if (v9 != 25) {
          goto LABEL_21;
        }
        uint64_t v17 = *(void *)v8;
        unsigned int v15 = v8 + 8;
        v5 |= 2u;
        *(void *)(a1 + 32) = v17;
        goto LABEL_20;
      case 4u:
        if (v9 != 33) {
          goto LABEL_21;
        }
        uint64_t v18 = *(void *)v8;
        unsigned int v15 = v8 + 8;
        v5 |= 4u;
        *(void *)(a1 + 40) = v18;
LABEL_20:
        unint64_t v23 = v15;
        goto LABEL_28;
      default:
LABEL_21:
        if (v9) {
          BOOL v19 = (v9 & 7) == 4;
        }
        else {
          BOOL v19 = 1;
        }
        if (!v19)
        {
          if (*v7)
          {
            uint64_t v20 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v20 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = v23;
          }
          unint64_t v23 = (char *)sub_1885AC0(v9, v20, v8, a3);
          if (!v23) {
            goto LABEL_35;
          }
LABEL_28:
          if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_35:
        }
          unint64_t v23 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v23;
    }
  }
}

unsigned char *sub_129A128(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 48);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    *uint64_t v4 = 17;
    *(void *)(v4 + 1) = v10;
    v4 += 9;
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_21;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v11 = *(void *)(a1 + 32);
  *uint64_t v4 = 25;
  *(void *)(v4 + 1) = v11;
  v4 += 9;
  if ((v6 & 4) != 0)
  {
LABEL_18:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v12 = *(void *)(a1 + 40);
    *uint64_t v4 = 33;
    *(void *)(v4 + 1) = v12;
    v4 += 9;
  }
LABEL_21:
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_129A304(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) != 0)
  {
    uint64_t v2 = 9;
    if ((v1 & 1) == 0) {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      v2 += 9;
    }
    if ((v1 & 8) != 0) {
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_129A39C(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_8;
  }
  if (v2)
  {
    result[1].__r_.__value_.__r.__words[0] = *(void *)(a2 + 24);
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
LABEL_12:
      result[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
      if ((v2 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  result[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
  if ((v2 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_5:
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    LODWORD(result[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
LABEL_7:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_8:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_129A410()
{
  return 1;
}

void *sub_129A418@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchAutoRedoThreshold");
}

uint64_t sub_129A428(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24A2E28;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  long long v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 36) = *(_OWORD *)(a2 + 36);
  *(_OWORD *)(a1 + 24) = v5;
  return a1;
}

void sub_129A4AC(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_129A4E0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_129A554(void *a1)
{
  sub_129A4E0(a1);

  operator delete();
}

uint64_t sub_129A58C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0xF) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(_DWORD *)(a1 + 48) = 0;
    *(void *)(a1 + 40) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_129A5B8(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v23 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = v23 + 1;
    unsigned int v9 = *v23;
    if (*v23 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v23, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v23 + 2;
      }
    }
    unint64_t v23 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_21;
        }
        v5 |= 8u;
        uint64_t v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          unint64_t v23 = v12;
          *(_DWORD *)(a1 + 48) = v13;
          goto LABEL_28;
        }
        uint64_t v21 = (char *)sub_188C0D0((uint64_t)v8, v13);
        unint64_t v23 = v21;
        *(_DWORD *)(a1 + 48) = v22;
        if (v21) {
          goto LABEL_28;
        }
        goto LABEL_35;
      case 2u:
        if (v9 != 17) {
          goto LABEL_21;
        }
        uint64_t v16 = *(void *)v8;
        unint64_t v15 = v8 + 8;
        v5 |= 1u;
        *(void *)(a1 + 24) = v16;
        goto LABEL_20;
      case 3u:
        if (v9 != 25) {
          goto LABEL_21;
        }
        uint64_t v17 = *(void *)v8;
        unint64_t v15 = v8 + 8;
        v5 |= 2u;
        *(void *)(a1 + 32) = v17;
        goto LABEL_20;
      case 4u:
        if (v9 != 33) {
          goto LABEL_21;
        }
        uint64_t v18 = *(void *)v8;
        unint64_t v15 = v8 + 8;
        v5 |= 4u;
        *(void *)(a1 + 40) = v18;
LABEL_20:
        unint64_t v23 = v15;
        goto LABEL_28;
      default:
LABEL_21:
        if (v9) {
          BOOL v19 = (v9 & 7) == 4;
        }
        else {
          BOOL v19 = 1;
        }
        if (!v19)
        {
          if (*v7)
          {
            uint64_t v20 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v20 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = v23;
          }
          unint64_t v23 = (char *)sub_1885AC0(v9, v20, v8, a3);
          if (!v23) {
            goto LABEL_35;
          }
LABEL_28:
          if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_35:
        }
          unint64_t v23 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v23;
    }
  }
}

unsigned char *sub_129A7D4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 48);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    *uint64_t v4 = 17;
    *(void *)(v4 + 1) = v10;
    v4 += 9;
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_21;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v11 = *(void *)(a1 + 32);
  *uint64_t v4 = 25;
  *(void *)(v4 + 1) = v11;
  v4 += 9;
  if ((v6 & 4) != 0)
  {
LABEL_18:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v12 = *(void *)(a1 + 40);
    *uint64_t v4 = 33;
    *(void *)(v4 + 1) = v12;
    v4 += 9;
  }
LABEL_21:
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_129A9B0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) != 0)
  {
    uint64_t v2 = 9;
    if ((v1 & 1) == 0) {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      v2 += 9;
    }
    if ((v1 & 8) != 0) {
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_129AA48()
{
  return 1;
}

void *sub_129AA50@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchRedoButtonThreshold");
}

uint64_t sub_129AA60(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24A2EA8;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_129AAC4(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_129AAF4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(void *)a1 = off_24A2EA8;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v4, a2 + 16);
  return a1;
}

void sub_129AB88(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_129ABC8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_129AC44(void *a1)
{
  sub_129ABC8(a1);

  operator delete();
}

unsigned char *sub_129AC7C(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

char *sub_129ACCC(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    uint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      unsigned int v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          unsigned int v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          unsigned int v7 = v15 + 2;
        }
      }
      unint64_t v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (v8 - 800 > 0x327)
      {
        if (*v5)
        {
          uint64_t v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          uint64_t v13 = (std::string *)sub_188DBD8(v5);
          unsigned int v7 = v15;
        }
        uint64_t v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        uint64_t v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_2530690, v5, a3);
      }
      unint64_t v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_129AE14(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 100, 201, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_129AEE0(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

void sub_129AF38(uint64_t a1, uint64_t a2)
{
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_129AF98(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_129AFA0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchSessionData");
}

uint64_t sub_129AFB0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24A2F28;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    unint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C43F4(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  int v12 = *(_DWORD *)(a2 + 16);
  if (v12)
  {
    uint64_t v13 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v13 = (uint64_t *)*v13;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v13);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  if ((v12 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  if ((v12 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  return a1;
}

void sub_129B144()
{
}

uint64_t sub_129B1C8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_25306C0)
  {
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_129CBB4(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 64);
    if (v7)
    {
      sub_129C23C(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_12C4160((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_129B2C0(uint64_t a1)
{
  sub_129B1C8(a1);

  operator delete();
}

uint64_t sub_129B2F8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (unsigned char **)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = (uint64_t)sub_129B454(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 7) == 0) {
    goto LABEL_10;
  }
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
  unint64_t v8 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v8 + 23) < 0)
  {
    **(unsigned char **)unint64_t v8 = 0;
    *(void *)(v8 + 8) = 0;
    if ((v5 & 2) != 0) {
      goto LABEL_18;
    }
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  *(unsigned char *)unint64_t v8 = 0;
  *(unsigned char *)(v8 + 23) = 0;
  if ((v5 & 2) == 0) {
    goto LABEL_8;
  }
LABEL_18:
  uint64_t result = sub_129B3D8(*(void *)(v1 + 56));
  if ((v5 & 4) != 0) {
LABEL_9:
  }
    uint64_t result = (uint64_t)sub_129B454(*(unsigned char **)(v1 + 64));
LABEL_10:
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_129B3D8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

unsigned char *sub_129B454(unsigned char *result)
{
  int v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if ((v2 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_16;
  }
  unint64_t v5 = *((void *)result + 3) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v5 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_16;
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v5 = 0;
  *(void *)(v5 + 8) = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_16:
  unint64_t v6 = *((void *)result + 4) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v6 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
LABEL_5:
    uint64_t result = sub_15B09D0(*((void *)result + 5));
    goto LABEL_6;
  }
  **(unsigned char **)unint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  if ((v2 & 4) != 0) {
    goto LABEL_5;
  }
LABEL_6:
  if ((v2 & 0x18) != 0)
  {
    *((_DWORD *)v1 + 14) = 0;
    *((void *)v1 + 6) = 0;
  }
  char v4 = v1[8];
  unint64_t v3 = v1 + 8;
  *((_DWORD *)v3 + 2) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_129B534(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v27 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    return *(void *)v27;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    char v7 = (unsigned __int8 *)(*(void *)v27 + 1);
    unsigned int v8 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        char v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = (unsigned __int8 *)(*(void *)v27 + 2);
      }
    }
    *(void *)int v27 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        int v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          int v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (std::string *)sub_1880F84((void *)(a1 + 48), v12);
        uint64_t v14 = (uint64_t)sub_188C244(v13, *(char **)v27, (uint64_t)a3);
        goto LABEL_42;
      case 2u:
        if (v8 != 18) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        unint64_t v15 = *(void **)(a1 + 56);
        if (!v15)
        {
          uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v16 = (void *)*v16;
          }
          unint64_t v15 = sub_129E9D0((uint64_t)v16);
          *(void *)(a1 + 56) = v15;
          char v7 = *(unsigned __int8 **)v27;
        }
        uint64_t v14 = sub_129B804(a3, (uint64_t)v15, v7);
        goto LABEL_42;
      case 3u:
        if (v8 != 26) {
          goto LABEL_35;
        }
        uint64_t v17 = v7 - 1;
        while (1)
        {
          uint64_t v18 = v17 + 1;
          *(void *)int v27 = v17 + 1;
          BOOL v19 = *(_DWORD **)(a1 + 40);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 32), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 32) = v20 + 1;
            uint64_t v21 = *(void *)&v19[2 * v20 + 2];
          }
          else
          {
            uint64_t v22 = sub_129E944(*(void *)(a1 + 24));
            uint64_t v21 = sub_188CDC8(a1 + 24, v22);
            uint64_t v18 = *(unsigned __int8 **)v27;
          }
          uint64_t v17 = (unsigned __int8 *)sub_129B894(a3, v21, v18);
          *(void *)int v27 = v17;
          if (!v17) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 26) {
            goto LABEL_43;
          }
        }
      case 4u:
        if (v8 != 34) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v23 = *(void *)(a1 + 64);
        if (!v23)
        {
          int v24 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v24 = (void *)*v24;
          }
          uint64_t v23 = sub_129E944((uint64_t)v24);
          *(void *)(a1 + 64) = v23;
          char v7 = *(unsigned __int8 **)v27;
        }
        uint64_t v14 = sub_129B894(a3, v23, v7);
        goto LABEL_42;
      default:
LABEL_35:
        if (v8) {
          BOOL v25 = (v8 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          if (*v6)
          {
            uint64_t v26 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v7 = *(unsigned __int8 **)v27;
          }
          uint64_t v14 = (uint64_t)sub_1885AC0(v8, v26, (char *)v7, a3);
LABEL_42:
          *(void *)int v27 = v14;
          if (!v14) {
            return 0;
          }
LABEL_43:
          if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
            return *(void *)v27;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v27;
    }
  }
}

uint64_t sub_129B804(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_129CCA4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_129B894(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_129C35C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_129B924(uint64_t a1, char *__dst, unint64_t *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v7 = *(void *)(a1 + 56);
    *char v4 = 18;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_129CE4C(v7, v9, a3);
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *char v4 = 26;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        uint64_t v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        uint64_t v14 = v4 + 2;
      }
      char v4 = sub_129C6A0(v12, (unint64_t)v14, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v15 = *(void *)(a1 + 64);
    *char v4 = 34;
    unsigned int v16 = *(_DWORD *)(v15 + 20);
    v4[1] = v16;
    if (v16 > 0x7F) {
      uint64_t v17 = sub_188A9CC(v16, v4 + 1);
    }
    else {
      uint64_t v17 = v4 + 2;
    }
    char v4 = sub_129C6A0(v15, (unint64_t)v17, a3);
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_129BB54(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    char v4 = (uint64_t *)(v3 + 8);
  }
  else {
    char v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_129C904(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      unint64_t v12 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
      uint64_t v14 = *(void *)(v12 + 8);
      if ((v13 & 0x80u) == 0) {
        uint64_t v14 = v13;
      }
      v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v8 & 2) == 0)
      {
LABEL_12:
        if ((v8 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_13;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_12;
    }
    uint64_t v15 = sub_129CF38(*(void *)(a1 + 56));
    v2 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 4) != 0)
    {
LABEL_13:
      uint64_t v9 = sub_129C904(*(void *)(a1 + 64));
      v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
LABEL_14:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v16 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v2 += v17;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_129BCC0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C43F4((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      uint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v11 = *(void *)(a1 + 8);
      unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (uint64_t *)*v12;
      }
      sub_1881DF4((std::string **)(a1 + 48), v10, v12);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_28;
        }
        goto LABEL_20;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v13 = *(std::string **)(a1 + 56);
    if (!v13)
    {
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (void *)*v15;
      }
      uint64_t v13 = (std::string *)sub_129E9D0((uint64_t)v15);
      *(void *)(a1 + 56) = v13;
    }
    if (*(void *)(a2 + 56)) {
      unint64_t v16 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      unint64_t v16 = &off_2530748;
    }
    sub_11EC100(v13, (uint64_t)v16);
    if ((v9 & 4) != 0)
    {
LABEL_20:
      *(_DWORD *)(a1 + 16) |= 4u;
      uint64_t v17 = *(void *)(a1 + 64);
      if (!v17)
      {
        uint64_t v18 = *(void *)(a1 + 8);
        BOOL v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          BOOL v19 = (void *)*v19;
        }
        uint64_t v17 = sub_129E944((uint64_t)v19);
        *(void *)(a1 + 64) = v17;
      }
      if (*(void *)(a2 + 64)) {
        unint64_t v20 = *(uint64_t (****)())(a2 + 64);
      }
      else {
        unint64_t v20 = &off_2530708;
      }
      sub_129BE74(v17, (uint64_t)v20);
    }
  }
LABEL_28:
  uint64_t v21 = *(void *)(a2 + 8);
  if (v21)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v21 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_129BE74(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      int v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      int v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        int v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_19;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v11 = *(void *)(a1 + 8);
    unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      unint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 32), v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_27;
    }
LABEL_19:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v13 = *(void *)(a1 + 40);
    if (!v13)
    {
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (void *)*v15;
      }
      uint64_t v13 = sub_15C1918((uint64_t)v15);
      *(void *)(a1 + 40) = v13;
    }
    if (*(void *)(a2 + 40)) {
      unint64_t v16 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      unint64_t v16 = &off_253F1A0;
    }
    sub_15B0E24(v13, (uint64_t)v16);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
      goto LABEL_8;
    }
LABEL_27:
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_129BFCC(uint64_t a1)
{
  uint64_t result = sub_129C01C(a1 + 24);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 16) & 4) == 0) {
      return 1;
    }
    uint64_t v3 = *(void *)(a1 + 64);
    if ((*(unsigned char *)(v3 + 16) & 4) == 0) {
      return 1;
    }
    uint64_t result = sub_15B0F18(*(void *)(v3 + 40));
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_129C01C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if ((*(unsigned char *)(v5 + 16) & 4) != 0)
    {
      uint64_t result = sub_15B0F18(*(void *)(v5 + 40));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_129C08C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 4) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 40));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_129C0B8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PunchInHints");
}

uint64_t sub_129C0C8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24A2FA8;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    int v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 32) = &qword_2550250;
  if ((v6 & 2) != 0)
  {
    uint64_t v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 32), (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 40) = 0;
  uint64_t v9 = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(void *)(a1 + 48) = v9;
  return a1;
}

void sub_129C1EC()
{
}

uint64_t sub_129C23C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if ((uint64_t (***)())a1 != &off_2530708 && *(void *)(a1 + 40))
  {
    sub_15B0994();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_129C324(uint64_t a1)
{
  sub_129C23C(a1);

  operator delete();
}

uint64_t sub_129C35C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v33 + 1);
    unsigned int v9 = **(unsigned char **)v33;
    if ((char)**(unsigned char **)v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v33 + 2);
      }
    }
    *(void *)uint64_t v33 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_36;
        }
        v5 |= 8u;
        unint64_t v12 = (char *)(v8 + 1);
        uint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)uint64_t v33 = v12;
          *(void *)(a1 + 48) = v13;
          goto LABEL_44;
        }
        uint64_t v29 = sub_188C138((uint64_t)v8, v13);
        *(void *)uint64_t v33 = v29;
        *(void *)(a1 + 48) = v30;
        if (v29) {
          goto LABEL_44;
        }
        goto LABEL_57;
      case 2u:
        if (v9 != 18) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 24);
        goto LABEL_22;
      case 3u:
        if (v9 != 26) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 8);
        unint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          unint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
LABEL_22:
        BOOL v19 = (std::string *)sub_1880F84(v17, v16);
        unint64_t v20 = (void *)sub_188C244(v19, *(char **)v33, (uint64_t)a3);
        goto LABEL_43;
      case 4u:
        if (v9 != 34) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v21 = *(void *)(a1 + 40);
        if (!v21)
        {
          uint64_t v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v22 = (void *)*v22;
          }
          uint64_t v21 = sub_15C1918((uint64_t)v22);
          *(void *)(a1 + 40) = v21;
          uint64_t v8 = *(unsigned __int8 **)v33;
        }
        unint64_t v20 = sub_1198F14(a3, v21, v8);
        goto LABEL_43;
      case 5u:
        if (v9 != 40) {
          goto LABEL_36;
        }
        uint64_t v23 = (char *)(v8 + 1);
        unint64_t v24 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v25 = *v23;
        int v26 = v24 + (v25 << 7);
        unint64_t v24 = (v26 - 128);
        if (v25 < 0)
        {
          *(void *)uint64_t v33 = sub_188C138((uint64_t)v8, (v26 - 128));
          if (!*(void *)v33) {
            goto LABEL_57;
          }
          unint64_t v24 = v31;
        }
        else
        {
          uint64_t v23 = (char *)(v8 + 2);
LABEL_33:
          *(void *)uint64_t v33 = v23;
        }
        if (sub_16BAF04(v24))
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 56) = v24;
        }
        else
        {
          if (*v7) {
            unsigned int v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unsigned int v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(5, v24, v32);
        }
        goto LABEL_44;
      default:
LABEL_36:
        if (v9) {
          BOOL v27 = (v9 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (*v7)
          {
            unint64_t v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v33;
          }
          unint64_t v20 = sub_1885AC0(v9, v28, (char *)v8, a3);
LABEL_43:
          *(void *)uint64_t v33 = v20;
          if (!v20) {
            goto LABEL_57;
          }
LABEL_44:
          if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_57:
        }
          *(void *)uint64_t v33 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v33;
    }
  }
}

char *sub_129C6A0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= __dst) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 48);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  int v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_11:
    if ((v6 & 0x10) == 0) {
      goto LABEL_27;
    }
    goto LABEL_21;
  }
LABEL_15:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 40);
  *int v4 = 34;
  unsigned int v11 = *(_DWORD *)(v10 + 44);
  v4[1] = v11;
  if (v11 > 0x7F) {
    unint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    unint64_t v12 = v4 + 2;
  }
  int v4 = sub_15B0C0C(v10, v12, a3);
  if ((v6 & 0x10) != 0)
  {
LABEL_21:
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 56);
    *int v4 = 40;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_27:
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    BOOL v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    BOOL v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_129C904(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x1F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_22;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    uint64_t v10 = sub_15B0D90(*(void *)(a1 + 40));
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_22;
      }
      goto LABEL_18;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  v3 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0) {
    goto LABEL_22;
  }
LABEL_18:
  int v11 = *(_DWORD *)(a1 + 56);
  if (v11 < 0) {
    uint64_t v12 = 11;
  }
  else {
    uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v12;
LABEL_22:
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v3 += v16;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void *sub_129CA98@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PunchInResultHints");
}

uint64_t sub_129CAA8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24A3028;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    unint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 32) = &qword_2550250;
  if ((v6 & 2) != 0)
  {
    uint64_t v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 32), (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL), v8);
  }
  return a1;
}

void sub_129CB84(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_129CBB4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_129CC6C(uint64_t a1)
{
  sub_129CBB4(a1);

  operator delete();
}

uint64_t sub_129CCA4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)uint64_t v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v16 = (uint64_t *)*v16;
      }
      uint64_t v17 = (void *)(a1 + 24);
LABEL_27:
      BOOL v19 = (std::string *)sub_1880F84(v17, v16);
      unint64_t v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = *(char **)v20;
    }
    unint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)uint64_t v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)uint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_129CE4C(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_129CF38(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_129D014()
{
  return 1;
}

void *sub_129D01C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PunchInQueryHints");
}

void *sub_129D02C(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_129D0A0(void *a1)
{
  sub_129D02C(a1);

  operator delete();
}

uint64_t sub_129D0D8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_129D0FC(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v25 = a2;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    return v25;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v25 + 1;
    unsigned int v8 = *v25;
    if (*v25 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v25, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v25 + 2;
      }
    }
    int v25 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 16) {
      goto LABEL_13;
    }
    unint64_t v14 = v7 + 1;
    unint64_t v15 = *v7;
    if (*v7 < 0)
    {
      int v16 = *v14;
      int v17 = v15 + (v16 << 7);
      unint64_t v15 = (v17 - 128);
      if (v16 < 0)
      {
        int v25 = (char *)sub_188C138((uint64_t)v7, (v17 - 128));
        if (!v25) {
          return 0;
        }
        unint64_t v15 = v21;
        goto LABEL_26;
      }
      unint64_t v14 = v7 + 2;
    }
    int v25 = v14;
LABEL_26:
    if (!sub_13556D8(v15))
    {
      if (*v6) {
        uint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      int v24 = 2;
      goto LABEL_46;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    *(_DWORD *)(a1 + 28) = v15;
LABEL_34:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      return v25;
    }
  }
  if (v8 >> 3 == 1 && v8 == 8)
  {
    uint64_t v18 = v7 + 1;
    unint64_t v15 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v19 = *v18;
    int v20 = v15 + (v19 << 7);
    unint64_t v15 = (v20 - 128);
    if (v19 < 0)
    {
      int v25 = (char *)sub_188C138((uint64_t)v7, (v20 - 128));
      if (!v25) {
        return 0;
      }
      unint64_t v15 = v22;
    }
    else
    {
      uint64_t v18 = v7 + 2;
LABEL_31:
      int v25 = v18;
    }
    if (sub_135691C(v15))
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_DWORD *)(a1 + 24) = v15;
      goto LABEL_34;
    }
    if (*v6) {
      uint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else {
      uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
    }
    int v24 = 1;
LABEL_46:
    sub_188C020(v24, v15, v23);
    goto LABEL_34;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v25;
    }
    int v25 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v25) {
      return 0;
    }
    goto LABEL_34;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v25;
  }
  return 0;
}

unsigned char *sub_129D35C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 28);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_129D500(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_14;
  }
  if (v1)
  {
    int v3 = *(_DWORD *)(a1 + 24);
    if (v3 < 0)
    {
      uint64_t v2 = 11;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v4 = *(_DWORD *)(a1 + 28);
  if (v4 < 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v5;
LABEL_14:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_129D5C0()
{
  return 1;
}

void *sub_129D5C8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.UserActionMetadataElement");
}

uint64_t sub_129D5D8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = (std::string *)(a1 + 16);
  *(void *)a1 = off_24A3128;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    unint64_t v8 = (std::string **)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_12C4480(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    unint64_t v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *unint64_t v10 = v9;
    }
  }
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_129D6B8(_Unwind_Exception *a1)
{
  sub_12C41E0(v3);
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_129D700(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C41E0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_129D780(void *a1)
{
  sub_129D700(a1);

  operator delete();
}

uint64_t sub_129D7B8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_129D0D8(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_129D834(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      int v19 = v6;
      if (v7 == 10)
      {
        unint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          int v19 = v12 + 1;
          unint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_129EA54(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          unint64_t v12 = sub_129D9D4(a3, v16, v13);
          int v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_129D9D4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_129D0FC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_129DA64(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unint64_t v10 = __dst + 2;
      }
      __dst = sub_129D35C(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_129DBA8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_129D500(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

std::string *sub_129DC58(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_12C4480((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_129DD28()
{
  return 1;
}

void *sub_129DD30@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SessionUserActionMetadata");
}

void *sub_129DD40(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A2428;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_129DDB8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A24A8;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_129DE34(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A2528;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_129DEB0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A25A8;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_129DF28(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A2628;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(unsigned char *)(result + 40) = 0;
  return result;
}

uint64_t sub_129DFA8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24A26A8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  return result;
}

void *sub_129E044(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A2728;
  result[2] = 0;
  result[3] = 0;
  return result;
}

double sub_129E0BC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24A27A8;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = a1;
  double result = 0.0;
  *(_OWORD *)(v2 + 40) = 0u;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(void *)(v2 + 85) = 0;
  return result;
}

uint64_t sub_129E170(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A2828;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_129E1EC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A28A8;
  result[2] = 0;
  result[3] = &qword_2550250;
  return result;
}

void *sub_129E270(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A2928;
  result[2] = 0;
  result[3] = 0;
  return result;
}

double sub_129E2E8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24A29A8;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_DWORD *)(v2 + 48) = 0;
  return result;
}

void *sub_129E368(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24A2A28;
  result[2] = 0;
  result[4] = 0;
  result[5] = 0;
  result[3] = &qword_2550250;
  return result;
}

void *sub_129E3F0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24A2AA8;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

void *sub_129E46C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24A2B28;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_129E4E4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = off_24A2BA8;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  result[9] = 0;
  result[10] = 0;
  result[8] = &qword_2550250;
  return result;
}

uint64_t sub_129E590(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A2C28;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(void *)(result + 40) = &qword_2550250;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_129E61C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24A2CA8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(_DWORD *)(result + 80) = 0;
  return result;
}

uint64_t sub_129E6C4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A2D28;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_129E740(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24A2DA8;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_DWORD *)(v2 + 48) = 0;
  return result;
}

double sub_129E7C0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24A2E28;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_DWORD *)(v2 + 48) = 0;
  return result;
}

uint64_t sub_129E840(uint64_t a1)
{
  if (!a1)
  {
    sub_12C44FC();
  }

  return sub_129AA60(v3, a1, 0);
}

void *sub_129E89C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = off_24A2F28;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[7] = 0;
  result[8] = 0;
  result[6] = &qword_2550250;
  return result;
}

uint64_t sub_129E944(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A2FA8;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

void *sub_129E9D0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A3028;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

void *sub_129EA54(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A30A8;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_129EACC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24A3128;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

BOOL sub_129EB6C(unsigned int a1)
{
  return a1 < 5;
}

BOOL sub_129EB78(unsigned int a1)
{
  return a1 < 5;
}

BOOL sub_129EB84(unsigned int a1)
{
  return a1 < 7;
}

BOOL sub_129EB90(unsigned int a1)
{
  return a1 < 2;
}

BOOL sub_129EB9C(unsigned int a1)
{
  return a1 < 6;
}

BOOL sub_129EBA8(unsigned int a1)
{
  return a1 < 2;
}

BOOL sub_129EBB4(unsigned int a1)
{
  return a1 < 3;
}

BOOL sub_129EBC0(unsigned int a1)
{
  return a1 < 7;
}

uint64_t sub_129EBCC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = (uint64_t *)(a1 + 16);
  *(void *)a1 = off_24A31A8;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_12C4AE8(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    unint64_t v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *unint64_t v10 = v9;
    }
  }
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_129ECAC(_Unwind_Exception *a1)
{
  sub_12C4568(v3);
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_129ECF4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C4568(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_129ED74(void *a1)
{
  sub_129ECF4(a1);

  operator delete();
}

uint64_t sub_129EDAC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_129FB6C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_129EE28(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      int v19 = v6;
      if (v7 == 10)
      {
        unint64_t v12 = v6 - 1;
        while (1)
        {
          unint64_t v13 = (unsigned __int8 *)(v12 + 1);
          int v19 = v12 + 1;
          unint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_12BBAE4(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            unint64_t v13 = (unsigned __int8 *)v19;
          }
          unint64_t v12 = (char *)sub_129EFC8(a3, v16, v13);
          int v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

uint64_t sub_129EFC8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_129FD00(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_129F058(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unint64_t v10 = __dst + 2;
      }
      __dst = (char *)sub_12A03B8(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_129F19C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12A0848(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void sub_129F24C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_12C4AE8((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_129F31C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_12A0DC4(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

BOOL sub_129F374(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 8);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_12A0DC4(*(void *)(*(void *)(a1 + 16) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_129F3CC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.BrowseCategories");
}

uint64_t sub_129F3DC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24A3228;
  sub_1882BC4(a1 + 16, a2);
  *(unsigned char *)(a1 + 48) = 0;
  *(void *)(a1 + 40) = 0;
  return a1;
}

void sub_129F444(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_129F474(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_129F4F0(void *a1)
{
  sub_129F474(a1);

  operator delete();
}

unsigned char *sub_129F528(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(unsigned char *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_129F580(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v20 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    goto LABEL_29;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v20 + 1;
    unsigned int v8 = *v20;
    if (*v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v20 + 2;
      }
    }
    int v20 = v7;
    if (v8 != 8) {
      break;
    }
    unint64_t v13 = v7 + 1;
    uint64_t v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_17;
    }
    int v15 = *v13;
    uint64_t v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      unint64_t v13 = v7 + 2;
LABEL_17:
      int v20 = v13;
      *(unsigned char *)(a1 + 48) = v14 != 0;
      int v5 = 1;
      goto LABEL_22;
    }
    uint64_t v17 = (char *)sub_188C138((uint64_t)v7, v14);
    int v20 = v17;
    *(unsigned char *)(a1 + 48) = v18 != 0;
    int v5 = 1;
    if (!v17) {
      goto LABEL_30;
    }
LABEL_22:
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      goto LABEL_29;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if ((v8 - 8000) >> 6 > 0x7C)
    {
      if (*v6)
      {
        uint64_t v16 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v16 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        int v7 = v20;
      }
      unint64_t v12 = sub_1885AC0(v8, v16, v7, a3);
    }
    else
    {
      unint64_t v12 = sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_25307D0, (uint64_t *)(a1 + 8), a3);
    }
    int v20 = (char *)v12;
    if (!v12) {
      goto LABEL_30;
    }
    goto LABEL_22;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_29;
  }
LABEL_30:
  int v20 = 0;
LABEL_29:
  *(_DWORD *)(a1 + 40) |= v5;
  return v20;
}

char *sub_129F754(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  if (*(unsigned char *)(a1 + 40))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    char v6 = *(unsigned char *)(a1 + 48);
    *char v4 = 8;
    v4[1] = v6;
    v4 += 2;
  }
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_129F85C(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  if (*(unsigned char *)(a1 + 40)) {
    result += 2;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_129F8C4(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 40))
  {
    char v4 = *(unsigned char *)(a2 + 48);
    *(_DWORD *)(a1 + 40) |= 1u;
    *(unsigned char *)(a1 + 48) = v4;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_129F940(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_129F948@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.BrowseCategoriesFilter");
}

void *sub_129F958(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = off_24A32A8;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = a2;
  a1[7] = 0;
  a1[8] = 0;
  a1[9] = &qword_2550250;
  a1[10] = &qword_2550250;
  a1[11] = &qword_2550250;
  a1[13] = 0;
  a1[14] = 0;
  a1[12] = &qword_2550250;
  *(void *)((char *)a1 + 119) = 0;
  return a1;
}

void sub_129F9E0(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_129FA10(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_16;
    }
  }
  else if (v4)
  {
    goto LABEL_16;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(uint64_t **)(a1 + 88) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 88));
  }
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 96));
  }
  if ((uint64_t (***)())a1 != &off_2530808 && *(void *)(a1 + 104))
  {
    sub_145FE08();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_16:
  sub_12C4568(a1 + 48);
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_129FB34(uint64_t a1)
{
  sub_129FA10(a1);

  operator delete();
}

uint64_t sub_129FB6C(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    char v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_129FB6C(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x1F) == 0) {
    goto LABEL_12;
  }
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_8;
    }
LABEL_24:
    unint64_t v10 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v10 + 23) < 0)
    {
      **(unsigned char **)unint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
      if ((v6 & 4) != 0) {
        goto LABEL_28;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v10 = 0;
      *(unsigned char *)(v10 + 23) = 0;
      if ((v6 & 4) != 0) {
        goto LABEL_28;
      }
    }
LABEL_9:
    if ((v6 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_32;
  }
  unint64_t v9 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v9 + 23) < 0)
  {
    **(unsigned char **)unint64_t v9 = 0;
    *(void *)(v9 + 8) = 0;
    if ((v6 & 2) != 0) {
      goto LABEL_24;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v9 = 0;
    *(unsigned char *)(v9 + 23) = 0;
    if ((v6 & 2) != 0) {
      goto LABEL_24;
    }
  }
LABEL_8:
  if ((v6 & 4) == 0) {
    goto LABEL_9;
  }
LABEL_28:
  unint64_t v11 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v11 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v11 = 0;
    *(unsigned char *)(v11 + 23) = 0;
    if ((v6 & 8) != 0) {
      goto LABEL_32;
    }
LABEL_10:
    if ((v6 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  **(unsigned char **)unint64_t v11 = 0;
  *(void *)(v11 + 8) = 0;
  if ((v6 & 8) == 0) {
    goto LABEL_10;
  }
LABEL_32:
  unint64_t v12 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v12 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v12 = 0;
    *(unsigned char *)(v12 + 23) = 0;
    if ((v6 & 0x10) == 0) {
      goto LABEL_12;
    }
LABEL_11:
    uint64_t result = sub_1369BB4(*(void *)(a1 + 104));
    goto LABEL_12;
  }
  **(unsigned char **)unint64_t v12 = 0;
  *(void *)(v12 + 8) = 0;
  if ((v6 & 0x10) != 0) {
    goto LABEL_11;
  }
LABEL_12:
  if ((v6 & 0xE0) != 0)
  {
    *(_DWORD *)(a1 + 120) = 0;
    *(void *)(a1 + 112) = 0;
  }
  if ((v6 & 0x700) != 0)
  {
    *(unsigned char *)(a1 + 126) = 0;
    *(_WORD *)(a1 + 124) = 0;
  }
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 32) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_129FD00(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v59 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v59, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    char v8 = (unsigned __int8 *)(*(void *)v59 + 1);
    unsigned int v9 = **(unsigned char **)v59;
    if ((char)**(unsigned char **)v59 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        char v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v59, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = (unsigned __int8 *)(*(void *)v59 + 2);
      }
    }
    *(void *)uint64_t v59 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_81;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 72);
        goto LABEL_41;
      case 2u:
        if (v9 != 18) {
          goto LABEL_81;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 80);
        goto LABEL_41;
      case 3u:
        if (v9 != 26) {
          goto LABEL_81;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v16 = *(void **)(a1 + 104);
        if (!v16)
        {
          uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v17 = (void *)*v17;
          }
          uint64_t v16 = sub_1478C60((uint64_t)v17);
          *(void *)(a1 + 104) = v16;
          char v8 = *(unsigned __int8 **)v59;
        }
        uint64_t v18 = sub_129760C(a3, (uint64_t)v16, v8);
        goto LABEL_42;
      case 4u:
        if (v9 != 34) {
          goto LABEL_81;
        }
        int v19 = v8 - 1;
        while (1)
        {
          *(void *)uint64_t v59 = v19 + 1;
          int v20 = *(_DWORD **)(a1 + 64);
          if (v20 && (uint64_t v21 = *(int *)(a1 + 56), (int)v21 < *v20))
          {
            *(_DWORD *)(a1 + 56) = v21 + 1;
            uint64_t v22 = *(void *)&v20[2 * v21 + 2];
          }
          else
          {
            uint64_t v23 = sub_12BBAE4(*(void *)(a1 + 48));
            uint64_t v22 = sub_188CDC8(a1 + 48, (uint64_t)v23);
          }
          int v19 = (unsigned __int8 *)sub_129EFC8(a3, v22);
          *(void *)uint64_t v59 = v19;
          if (!v19) {
            goto LABEL_118;
          }
          if (*(void *)a3 <= (unint64_t)v19 || *v19 != 34) {
            goto LABEL_43;
          }
        }
      case 5u:
        if (v9 != 42) {
          goto LABEL_81;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v24 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
        if (v24) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 88);
        goto LABEL_41;
      case 6u:
        if (v9 != 50) {
          goto LABEL_81;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v25 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
        if (v25) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 96);
LABEL_41:
        int v26 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v18 = (void *)sub_188C244(v26, *(char **)v59, (uint64_t)a3);
        goto LABEL_42;
      case 7u:
        if (v9 != 56) {
          goto LABEL_81;
        }
        BOOL v27 = (char *)(v8 + 1);
        unint64_t v28 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_49;
        }
        int v29 = *v27;
        int v30 = v28 + (v29 << 7);
        unint64_t v28 = (v30 - 128);
        if (v29 < 0)
        {
          *(void *)uint64_t v59 = sub_188C138((uint64_t)v8, (v30 - 128));
          if (!*(void *)v59) {
            goto LABEL_118;
          }
          unint64_t v28 = v48;
        }
        else
        {
          BOOL v27 = (char *)(v8 + 2);
LABEL_49:
          *(void *)uint64_t v59 = v27;
        }
        if (v28 <= 2)
        {
          *(_DWORD *)(a1 + 40) |= 0x20u;
          *(_DWORD *)(a1 + 112) = v28;
          goto LABEL_43;
        }
        if (*v7) {
          uint64_t v57 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v57 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v58 = 7;
        goto LABEL_111;
      case 8u:
        if (v9 != 64) {
          goto LABEL_81;
        }
        unint64_t v31 = (char *)(v8 + 1);
        unint64_t v28 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_56;
        }
        int v32 = *v31;
        int v33 = v28 + (v32 << 7);
        unint64_t v28 = (v33 - 128);
        if (v32 < 0)
        {
          *(void *)uint64_t v59 = sub_188C138((uint64_t)v8, (v33 - 128));
          if (!*(void *)v59) {
            goto LABEL_118;
          }
          unint64_t v28 = v49;
        }
        else
        {
          unint64_t v31 = (char *)(v8 + 2);
LABEL_56:
          *(void *)uint64_t v59 = v31;
        }
        if (v28 <= 2)
        {
          *(_DWORD *)(a1 + 40) |= 0x40u;
          *(_DWORD *)(a1 + 116) = v28;
          goto LABEL_43;
        }
        if (*v7) {
          uint64_t v57 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v57 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v58 = 8;
        goto LABEL_111;
      case 9u:
        if (v9 != 72) {
          goto LABEL_81;
        }
        uint64_t v34 = (char *)(v8 + 1);
        unint64_t v28 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_63;
        }
        int v35 = *v34;
        int v36 = v28 + (v35 << 7);
        unint64_t v28 = (v36 - 128);
        if (v35 < 0)
        {
          *(void *)uint64_t v59 = sub_188C138((uint64_t)v8, (v36 - 128));
          if (!*(void *)v59) {
            goto LABEL_118;
          }
          unint64_t v28 = v50;
        }
        else
        {
          uint64_t v34 = (char *)(v8 + 2);
LABEL_63:
          *(void *)uint64_t v59 = v34;
        }
        if (v28 > 2)
        {
          if (*v7) {
            uint64_t v57 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v57 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v58 = 9;
LABEL_111:
          sub_188C020(v58, v28, v57);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x80u;
          *(_DWORD *)(a1 + 120) = v28;
        }
        goto LABEL_43;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_81;
        }
        v5 |= 0x100u;
        uint64_t v37 = (char *)(v8 + 1);
        uint64_t v38 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_70;
        }
        int v39 = *v37;
        uint64_t v38 = v38 + (v39 << 7) - 128;
        if (v39 < 0)
        {
          uint64_t v51 = sub_188C138((uint64_t)v8, v38);
          *(void *)uint64_t v59 = v51;
          *(unsigned char *)(a1 + 124) = v52 != 0;
          if (!v51) {
            goto LABEL_118;
          }
        }
        else
        {
          uint64_t v37 = (char *)(v8 + 2);
LABEL_70:
          *(void *)uint64_t v59 = v37;
          *(unsigned char *)(a1 + 124) = v38 != 0;
        }
        goto LABEL_43;
      case 0xBu:
        if (v9 != 88) {
          goto LABEL_81;
        }
        v5 |= 0x200u;
        uint64_t v40 = (char *)(v8 + 1);
        uint64_t v41 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_75;
        }
        int v42 = *v40;
        uint64_t v41 = v41 + (v42 << 7) - 128;
        if (v42 < 0)
        {
          uint64_t v53 = sub_188C138((uint64_t)v8, v41);
          *(void *)uint64_t v59 = v53;
          *(unsigned char *)(a1 + 125) = v54 != 0;
          if (!v53) {
            goto LABEL_118;
          }
        }
        else
        {
          uint64_t v40 = (char *)(v8 + 2);
LABEL_75:
          *(void *)uint64_t v59 = v40;
          *(unsigned char *)(a1 + 125) = v41 != 0;
        }
        goto LABEL_43;
      case 0xCu:
        if (v9 != 96) {
          goto LABEL_81;
        }
        v5 |= 0x400u;
        unint64_t v43 = (char *)(v8 + 1);
        uint64_t v44 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_80;
        }
        int v45 = *v43;
        uint64_t v44 = v44 + (v45 << 7) - 128;
        if (v45 < 0)
        {
          uint64_t v55 = sub_188C138((uint64_t)v8, v44);
          *(void *)uint64_t v59 = v55;
          *(unsigned char *)(a1 + 126) = v56 != 0;
          if (!v55) {
            goto LABEL_118;
          }
        }
        else
        {
          unint64_t v43 = (char *)(v8 + 2);
LABEL_80:
          *(void *)uint64_t v59 = v43;
          *(unsigned char *)(a1 + 126) = v44 != 0;
        }
        goto LABEL_43;
      default:
LABEL_81:
        if (v9) {
          BOOL v46 = (v9 & 7) == 4;
        }
        else {
          BOOL v46 = 1;
        }
        if (!v46)
        {
          if ((v9 - 8000) >> 6 > 0x7C)
          {
            if (*v7)
            {
              uint64_t v47 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v47 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              char v8 = *(unsigned __int8 **)v59;
            }
            uint64_t v18 = sub_1885AC0(v9, v47, (char *)v8, a3);
          }
          else
          {
            uint64_t v18 = sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_2530808, (uint64_t *)(a1 + 8), a3);
          }
LABEL_42:
          *(void *)uint64_t v59 = v18;
          if (!v18) {
            goto LABEL_118;
          }
LABEL_43:
          if (sub_11947B8((uint64_t)a3, (char **)v59, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_118:
        }
          *(void *)uint64_t v59 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v59;
    }
  }
}

uint64_t sub_12A03B8(uint64_t a1, char *a2, void *a3)
{
  char v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_7;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  char v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0) {
    goto LABEL_13;
  }
LABEL_7:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 104);
  *char v4 = 26;
  unsigned int v8 = *(_DWORD *)(v7 + 44);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  char v4 = sub_1460138(v7, v9, a3);
LABEL_13:
  int v10 = *(_DWORD *)(a1 + 56);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *char v4 = 34;
      unsigned int v13 = *(_DWORD *)(v12 + 44);
      v4[1] = v13;
      if (v13 > 0x7F) {
        uint64_t v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        uint64_t v14 = v4 + 2;
      }
      char v4 = (char *)sub_12A03B8(v12, v14, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    char v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 8) == 0)
    {
LABEL_23:
      if ((v6 & 0x20) == 0) {
        goto LABEL_33;
      }
      goto LABEL_27;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_23;
  }
  char v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0) {
    goto LABEL_33;
  }
LABEL_27:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v15 = *(int *)(a1 + 112);
  *char v4 = 56;
  v4[1] = v15;
  if (v15 > 0x7F)
  {
    v4[1] = v15 | 0x80;
    unint64_t v16 = v15 >> 7;
    v4[2] = v15 >> 7;
    v4 += 3;
    if (v15 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v17 = v16 >> 14;
        v16 >>= 7;
        *v4++ = v16;
      }
      while (v17);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_33:
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v18 = *(int *)(a1 + 116);
    *char v4 = 64;
    v4[1] = v18;
    if (v18 > 0x7F)
    {
      v4[1] = v18 | 0x80;
      unint64_t v19 = v18 >> 7;
      v4[2] = v18 >> 7;
      v4 += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v20 = v19 >> 14;
          v19 >>= 7;
          *v4++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v21 = *(int *)(a1 + 120);
    *char v4 = 72;
    v4[1] = v21;
    if (v21 > 0x7F)
    {
      v4[1] = v21 | 0x80;
      unint64_t v22 = v21 >> 7;
      v4[2] = v21 >> 7;
      v4 += 3;
      if (v21 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v23 = v22 >> 14;
          v22 >>= 7;
          *v4++ = v22;
        }
        while (v23);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v24 = *(unsigned char *)(a1 + 124);
    *char v4 = 80;
    v4[1] = v24;
    v4 += 2;
    if ((v6 & 0x200) == 0)
    {
LABEL_49:
      if ((v6 & 0x400) == 0) {
        goto LABEL_60;
      }
      goto LABEL_57;
    }
  }
  else if ((v6 & 0x200) == 0)
  {
    goto LABEL_49;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v25 = *(unsigned char *)(a1 + 125);
  *char v4 = 88;
  v4[1] = v25;
  v4 += 2;
  if ((v6 & 0x400) != 0)
  {
LABEL_57:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v26 = *(unsigned char *)(a1 + 126);
    *char v4 = 96;
    v4[1] = v26;
    v4 += 2;
  }
LABEL_60:
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v27 = *(void *)(a1 + 8);
  if ((v27 & 1) == 0) {
    return (uint64_t)v4;
  }
  unint64_t v29 = v27 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v29 + 31) < 0)
  {
    int v30 = *(void **)(v29 + 8);
    uint64_t v31 = *(void *)(v29 + 16);
  }
  else
  {
    int v30 = (void *)(v29 + 8);
    LODWORD(v31) = *(unsigned __int8 *)(v29 + 31);
  }
  if (*a3 - (void)v4 >= (int)v31)
  {
    uint64_t v32 = (int)v31;
    memcpy(v4, v30, (int)v31);
    v4 += v32;
    return (uint64_t)v4;
  }

  return sub_188A528(a3, (char *)v30, v31, v4);
}

uint64_t sub_12A0848(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_12A0848(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v10) {
    goto LABEL_42;
  }
  if (v10)
  {
    unint64_t v11 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
    uint64_t v13 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      uint64_t v13 = v12;
    }
    v4 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 2) == 0)
    {
LABEL_10:
      if ((v10 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_23;
    }
  }
  else if ((v10 & 2) == 0)
  {
    goto LABEL_10;
  }
  unint64_t v14 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
  uint64_t v16 = *(void *)(v14 + 8);
  if ((v15 & 0x80u) == 0) {
    uint64_t v16 = v15;
  }
  v4 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 4) == 0)
  {
LABEL_11:
    if ((v10 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_23:
  unint64_t v17 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
  uint64_t v19 = *(void *)(v17 + 8);
  if ((v18 & 0x80u) == 0) {
    uint64_t v19 = v18;
  }
  v4 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 8) == 0)
  {
LABEL_12:
    if ((v10 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_26:
  unint64_t v20 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v21 = *(unsigned __int8 *)(v20 + 23);
  uint64_t v22 = *(void *)(v20 + 8);
  if ((v21 & 0x80u) == 0) {
    uint64_t v22 = v21;
  }
  v4 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 0x10) == 0)
  {
LABEL_13:
    if ((v10 & 0x20) == 0) {
      goto LABEL_14;
    }
LABEL_30:
    int v24 = *(_DWORD *)(a1 + 112);
    if (v24 < 0) {
      uint64_t v25 = 11;
    }
    else {
      uint64_t v25 = ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v25;
    if ((v10 & 0x40) == 0)
    {
LABEL_15:
      if ((v10 & 0x80) == 0) {
        goto LABEL_42;
      }
      goto LABEL_38;
    }
    goto LABEL_34;
  }
LABEL_29:
  uint64_t v23 = sub_1460320(*(void *)(a1 + 104));
  v4 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 0x20) != 0) {
    goto LABEL_30;
  }
LABEL_14:
  if ((v10 & 0x40) == 0) {
    goto LABEL_15;
  }
LABEL_34:
  int v26 = *(_DWORD *)(a1 + 116);
  if (v26 < 0) {
    uint64_t v27 = 11;
  }
  else {
    uint64_t v27 = ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v4 += v27;
  if ((v10 & 0x80) != 0)
  {
LABEL_38:
    int v28 = *(_DWORD *)(a1 + 120);
    if (v28 < 0) {
      uint64_t v29 = 11;
    }
    else {
      uint64_t v29 = ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v29;
  }
LABEL_42:
  uint64_t v30 = v4 + 2;
  if ((v10 & 0x100) == 0) {
    uint64_t v30 = v4;
  }
  if ((v10 & 0x200) != 0) {
    v30 += 2;
  }
  if ((v10 & 0x400) != 0) {
    v30 += 2;
  }
  if ((v10 & 0x700) != 0) {
    uint64_t result = v30;
  }
  else {
    uint64_t result = v4;
  }
  uint64_t v32 = *(void *)(a1 + 8);
  if (v32)
  {
    unint64_t v33 = v32 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v33 + 31) < 0) {
      uint64_t v34 = *(void *)(v33 + 16);
    }
    else {
      uint64_t v34 = *(unsigned __int8 *)(v33 + 31);
    }
    result += v34;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_12A0B2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(unsigned int *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 64) + 8;
    uint64_t v6 = sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C4AE8(a1 + 48, v6, v5, v4, (**(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56)));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(_DWORD **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((_BYTE)v9)
  {
    if (v9)
    {
      unint64_t v11 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 72), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_31;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    unint64_t v14 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    sub_1881DF4((std::string **)(a1 + 80), v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_34;
    }
LABEL_31:
    unint64_t v17 = (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v18 = *(void *)(a1 + 8);
    uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (uint64_t *)*v19;
    }
    sub_1881DF4((std::string **)(a1 + 88), v17, v19);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_37;
    }
LABEL_34:
    unint64_t v20 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v21 = *(void *)(a1 + 8);
    uint64_t v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      uint64_t v22 = (uint64_t *)*v22;
    }
    sub_1881DF4((std::string **)(a1 + 96), v20, v22);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0) {
        goto LABEL_11;
      }
      goto LABEL_45;
    }
LABEL_37:
    *(_DWORD *)(a1 + 40) |= 0x10u;
    uint64_t v23 = *(void **)(a1 + 104);
    if (!v23)
    {
      uint64_t v24 = *(void *)(a1 + 8);
      uint64_t v25 = (void *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
      if (v24) {
        uint64_t v25 = (void *)*v25;
      }
      uint64_t v23 = sub_1478C60((uint64_t)v25);
      *(void *)(a1 + 104) = v23;
    }
    if (*(void *)(a2 + 104)) {
      int v26 = *(uint64_t (****)())(a2 + 104);
    }
    else {
      int v26 = &off_2539400;
    }
    sub_136AC4C((uint64_t)v23, (uint64_t)v26);
    if ((v9 & 0x20) == 0)
    {
LABEL_11:
      if ((v9 & 0x40) == 0) {
        goto LABEL_12;
      }
      goto LABEL_46;
    }
LABEL_45:
    *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
    if ((v9 & 0x40) == 0)
    {
LABEL_12:
      if ((v9 & 0x80) == 0)
      {
LABEL_14:
        *(_DWORD *)(a1 + 40) |= v9;
        goto LABEL_15;
      }
LABEL_13:
      *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
      goto LABEL_14;
    }
LABEL_46:
    *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
    if ((v9 & 0x80) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_15:
  if ((v9 & 0x700) == 0) {
    goto LABEL_21;
  }
  if ((v9 & 0x100) == 0)
  {
    if ((v9 & 0x200) == 0) {
      goto LABEL_18;
    }
LABEL_49:
    *(unsigned char *)(a1 + 125) = *(unsigned char *)(a2 + 125);
    if ((v9 & 0x400) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  *(unsigned char *)(a1 + 124) = *(unsigned char *)(a2 + 124);
  if ((v9 & 0x200) != 0) {
    goto LABEL_49;
  }
LABEL_18:
  if ((v9 & 0x400) != 0) {
LABEL_19:
  }
    *(unsigned char *)(a1 + 126) = *(unsigned char *)(a2 + 126);
LABEL_20:
  *(_DWORD *)(a1 + 40) |= v9;
LABEL_21:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_12A0DC4(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t result = sub_129F374(a1 + 48);
    if (result)
    {
      if ((*(unsigned char *)(a1 + 40) & 0x10) == 0) {
        return 1;
      }
      uint64_t result = sub_136AEA0(*(void *)(a1 + 104));
      if (result) {
        return 1;
      }
    }
  }
  return result;
}

void *sub_12A0E14@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.BrowseCategory");
}

uint64_t sub_12A0E24(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24A3328;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    int v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 32) = &qword_2550250;
  if ((v6 & 2) != 0)
  {
    uint64_t v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 32), (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL), v8);
  }
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  return a1;
}

void sub_12A0F08(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_12A0F3C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12A0FF4(uint64_t a1)
{
  sub_12A0F3C(a1);

  operator delete();
}

uint64_t sub_12A102C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_12A10AC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v27 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    return *(void *)v27;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v27 + 1);
    unsigned int v8 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v27 + 2);
      }
    }
    *(void *)uint64_t v27 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 != 3)
    {
      if (v11 != 2)
      {
        if (v11 == 1 && v8 == 10)
        {
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v23 = *(void *)(a1 + 8);
          unint64_t v17 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
          if (v23) {
            unint64_t v17 = (uint64_t *)*v17;
          }
          uint64_t v18 = (void *)(a1 + 24);
LABEL_35:
          uint64_t v24 = (std::string *)sub_1880F84(v18, v17);
          uint64_t v15 = (void *)sub_188C244(v24, *(char **)v27, (uint64_t)a3);
          goto LABEL_36;
        }
        goto LABEL_14;
      }
      if (v8 != 16) {
        goto LABEL_14;
      }
      uint64_t v19 = v7 + 1;
      unint64_t v20 = *v7;
      if (*v7 < 0)
      {
        int v21 = *v19;
        int v22 = v20 + (v21 << 7);
        unint64_t v20 = (v22 - 128);
        if (v21 < 0)
        {
          *(void *)uint64_t v27 = sub_188C138((uint64_t)v7, (v22 - 128));
          if (!*(void *)v27) {
            goto LABEL_48;
          }
          unint64_t v20 = v25;
          goto LABEL_30;
        }
        uint64_t v19 = v7 + 2;
      }
      *(void *)uint64_t v27 = v19;
LABEL_30:
      if (v20 > 2)
      {
        if (*v6) {
          int v26 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          int v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(2, v20, v26);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        *(_DWORD *)(a1 + 40) = v20;
      }
      goto LABEL_37;
    }
    if (v8 == 26)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v16 = *(void *)(a1 + 8);
      unint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        unint64_t v17 = (uint64_t *)*v17;
      }
      uint64_t v18 = (void *)(a1 + 32);
      goto LABEL_35;
    }
LABEL_14:
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      unint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v27;
    }
    uint64_t v15 = sub_1885AC0(v8, v14, v7, a3);
LABEL_36:
    *(void *)uint64_t v27 = v15;
    if (!v15) {
      goto LABEL_48;
    }
LABEL_37:
    if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
      return *(void *)v27;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v27;
  }
LABEL_48:
  *(void *)uint64_t v27 = 0;
  return *(void *)v27;
}

unsigned char *sub_12A12FC(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    *uint64_t v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_12A1464(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    int v9 = *(_DWORD *)(a1 + 40);
    if (v9 < 0) {
      uint64_t v10 = 11;
    }
    else {
      uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v10;
  }
LABEL_17:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_12A1574(std::string *result, uint64_t a2)
{
  if ((std::string *)a2 != result)
  {
    uint64_t v4 = result;
    sub_12A102C((uint64_t)result);
    return sub_117DA78(v4, a2);
  }
  return result;
}

uint64_t sub_12A15C0()
{
  return 1;
}

void *sub_12A15C8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.RetainedSearchMetadata");
}

uint64_t sub_12A15D8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24A33A8;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 32) = &qword_2550250;
  if ((v6 & 2) != 0)
  {
    uint64_t v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 32), (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 40) = &qword_2550250;
  if ((v6 & 4) != 0)
  {
    int v9 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v9 = (uint64_t *)*v9;
    }
    sub_1881DF4((std::string **)(a1 + 40), (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL), v9);
  }
  return a1;
}

void sub_12A16E4(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_12A1718(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12A17E4(uint64_t a1)
{
  sub_12A1718(a1);

  operator delete();
}

uint64_t sub_12A181C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0) {
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    goto LABEL_17;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  *(unsigned char *)unint64_t v3 = 0;
  *(unsigned char *)(v3 + 23) = 0;
  if ((v1 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_17:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_12A18D4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v22 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
    return *(void *)v22;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v22 + 1);
    unsigned int v8 = **(unsigned char **)v22;
    if ((char)**(unsigned char **)v22 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v22, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v22 + 2);
      }
    }
    *(void *)int v22 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 == 26)
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 8);
        unint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          unint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 40);
        goto LABEL_32;
      }
    }
    else if (v11 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 8);
        unint64_t v17 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          unint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 32);
        goto LABEL_32;
      }
    }
    else if (v11 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v20 = *(void *)(a1 + 8);
      unint64_t v17 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        unint64_t v17 = (uint64_t *)*v17;
      }
      uint64_t v18 = (void *)(a1 + 24);
LABEL_32:
      int v21 = (std::string *)sub_1880F84(v18, v17);
      uint64_t v15 = (void *)sub_188C244(v21, *(char **)v22, (uint64_t)a3);
      goto LABEL_33;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v22;
    }
    uint64_t v15 = sub_1885AC0(v8, v14, v7, a3);
LABEL_33:
    *(void *)int v22 = v15;
    if (!v15) {
      goto LABEL_39;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
      return *(void *)v22;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v22;
  }
LABEL_39:
  *(void *)int v22 = 0;
  return *(void *)v22;
}

char *sub_12A1AC4(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_5:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_12A1BDC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_16;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v9 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_16:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_12A1CFC()
{
  return 1;
}

void *sub_12A1D04@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.RelatedSearchSuggestion");
}

uint64_t sub_12A1D14(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = off_24A3428;
  *(void *)(a1 + 24) = 0;
  int v5 = *(_DWORD *)(a2 + 16);
  if (v5)
  {
    sub_188C80C((unsigned int *)(a1 + 16), v5);
    unint64_t v6 = *(void **)(a1 + 24);
    *(_DWORD *)(a1 + 16) += *(_DWORD *)(a2 + 16);
    memcpy(v6, *(const void **)(a2 + 24), 4 * *(int *)(a2 + 16));
  }
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  int v7 = *(_DWORD *)(a2 + 32);
  if (v7)
  {
    sub_188C80C((unsigned int *)(a1 + 32), v7);
    uint64_t v8 = *(void **)(a1 + 40);
    *(_DWORD *)(a1 + 32) += *(_DWORD *)(a2 + 32);
    memcpy(v8, *(const void **)(a2 + 40), 4 * *(int *)(a2 + 32));
  }
  *(_DWORD *)(a1 + 48) = 0;
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9) {
    sub_188B4F8(v4, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_12A1E08(_Unwind_Exception *a1)
{
  sub_1889DA8(v4);
  sub_1889DA8(v3);
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_12A1E58(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 4));
  sub_1889DA8((uint64_t)(a1 + 2));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12A1EDC(void *a1)
{
  sub_12A1E58(a1);

  operator delete();
}

char *sub_12A1F14(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v27 = a2;
  if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
    return v27;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v27 + 1;
    unsigned int v8 = *v27;
    if (*v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v27 + 2;
      }
    }
    uint64_t v27 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 16)
      {
        unint64_t v17 = v7 - 1;
        while (1)
        {
          uint64_t v27 = v17 + 1;
          int v18 = v17[1];
          if (v17[1] < 0)
          {
            int v19 = v18 + (v17[2] << 7);
            int v18 = v19 - 128;
            if (v17[2] < 0)
            {
              unint64_t v17 = (char *)sub_188C0D0((uint64_t)(v17 + 1), v19 - 128);
              int v18 = v20;
            }
            else
            {
              v17 += 3;
            }
          }
          else
          {
            v17 += 2;
          }
          uint64_t v27 = v17;
          uint64_t v21 = *(unsigned int *)(a1 + 32);
          if (v21 == *(_DWORD *)(a1 + 36))
          {
            int v22 = v21 + 1;
            sub_188C80C((unsigned int *)(a1 + 32), v21 + 1);
            *(_DWORD *)(*(void *)(a1 + 40) + 4 * v21) = v18;
            unint64_t v17 = v27;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 40) + 4 * v21) = v18;
            int v22 = v21 + 1;
          }
          *(_DWORD *)(a1 + 32) = v22;
          if (!v17) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 16) {
            goto LABEL_51;
          }
        }
      }
      if (v8 == 18)
      {
        uint64_t v23 = (unsigned int *)(a1 + 32);
        goto LABEL_42;
      }
    }
    else if (v8 >> 3 == 1)
    {
      if (v8 == 8)
      {
        uint64_t v11 = v7 - 1;
        while (1)
        {
          uint64_t v27 = v11 + 1;
          int v12 = v11[1];
          if (v11[1] < 0)
          {
            int v13 = v12 + (v11[2] << 7);
            int v12 = v13 - 128;
            if (v11[2] < 0)
            {
              uint64_t v11 = (char *)sub_188C0D0((uint64_t)(v11 + 1), v13 - 128);
              int v12 = v14;
            }
            else
            {
              v11 += 3;
            }
          }
          else
          {
            v11 += 2;
          }
          uint64_t v27 = v11;
          uint64_t v15 = *(unsigned int *)(a1 + 16);
          if (v15 == *(_DWORD *)(a1 + 20))
          {
            int v16 = v15 + 1;
            sub_188C80C((unsigned int *)(a1 + 16), v15 + 1);
            *(_DWORD *)(*(void *)(a1 + 24) + 4 * v15) = v12;
            uint64_t v11 = v27;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 24) + 4 * v15) = v12;
            int v16 = v15 + 1;
          }
          *(_DWORD *)(a1 + 16) = v16;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *v11 != 8) {
            goto LABEL_51;
          }
        }
      }
      if (v8 == 10)
      {
        uint64_t v23 = (unsigned int *)(a1 + 16);
LABEL_42:
        uint64_t v24 = sub_188C2CC(v23, (unsigned __int8 *)v7, (uint64_t)a3);
        goto LABEL_50;
      }
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      int v26 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v27;
    }
    uint64_t v24 = sub_1885AC0(v8, v26, v7, a3);
LABEL_50:
    uint64_t v27 = (char *)v24;
    if (!v24) {
      return 0;
    }
LABEL_51:
    if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
      return v27;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v27;
  }
  return 0;
}

char *sub_12A21F4(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 16);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unsigned int v8 = *(_DWORD *)(*(void *)(a1 + 24) + 4 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unsigned int v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unsigned int v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  uint64_t v11 = *(unsigned int *)(a1 + 32);
  if ((int)v11 >= 1)
  {
    for (uint64_t j = 0; j != v11; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unsigned int v13 = *(_DWORD *)(*(void *)(a1 + 40) + 4 * j);
      *__dst = 16;
      __dst[1] = v13;
      if (v13 > 0x7F)
      {
        __dst[1] = v13 | 0x80;
        unsigned int v14 = v13 >> 7;
        __dst[2] = v13 >> 7;
        __dst += 3;
        if (v13 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unsigned int v15 = v14 >> 14;
            v14 >>= 7;
            *__dst++ = v14;
          }
          while (v15);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return __dst;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(__dst, v19, (int)v20);
    __dst += v21;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, __dst);
}

uint64_t sub_12A23E0(uint64_t a1)
{
  uint64_t v2 = sub_188D4F0((unsigned int *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 16);
  uint64_t result = v2 + sub_188D4F0((unsigned int *)(a1 + 32)) + v3 + *(unsigned int *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    result += v7;
  }
  *(_DWORD *)(a1 + 48) = result;
  return result;
}

uint64_t sub_12A2460()
{
  return 1;
}

void *sub_12A2468@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PoiIconCategoryFilter");
}

uint64_t sub_12A2478(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = off_24A34A8;
  *(void *)(a1 + 24) = 0;
  int v5 = *(_DWORD *)(a2 + 16);
  if (v5)
  {
    sub_188C80C((unsigned int *)(a1 + 16), v5);
    unint64_t v6 = *(void **)(a1 + 24);
    *(_DWORD *)(a1 + 16) += *(_DWORD *)(a2 + 16);
    memcpy(v6, *(const void **)(a2 + 24), 4 * *(int *)(a2 + 16));
  }
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  int v7 = *(_DWORD *)(a2 + 32);
  if (v7)
  {
    sub_188C80C((unsigned int *)(a1 + 32), v7);
    unsigned int v8 = *(void **)(a1 + 40);
    *(_DWORD *)(a1 + 32) += *(_DWORD *)(a2 + 32);
    memcpy(v8, *(const void **)(a2 + 40), 4 * *(int *)(a2 + 32));
  }
  *(_DWORD *)(a1 + 48) = 0;
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9) {
    sub_188B4F8(v4, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_12A256C(_Unwind_Exception *a1)
{
  sub_1889DA8(v4);
  sub_1889DA8(v3);
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_12A25BC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 4));
  sub_1889DA8((uint64_t)(a1 + 2));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12A2640(void *a1)
{
  sub_12A25BC(a1);

  operator delete();
}

char *sub_12A2678(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v33 = a2;
  if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
    return v33;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v33 + 1;
    unsigned int v8 = *v33;
    if (*v33 < 0)
    {
      int v9 = *v7;
      unsigned int v10 = v8 + (v9 << 7);
      unsigned int v8 = v10 - 128;
      if (v9 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v33, v10 - 128);
        unsigned int v8 = v11;
      }
      else
      {
        int v7 = v33 + 2;
      }
    }
    unint64_t v33 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 == 16)
    {
      uint64_t v21 = v7 - 1;
      while (1)
      {
        unint64_t v33 = v21 + 1;
        unint64_t v22 = v21[1];
        uint64_t v23 = v21 + 2;
        if (v21[1] < 0)
        {
          int v24 = *v23;
          int v25 = v22 + (v24 << 7);
          unint64_t v22 = (v25 - 128);
          if (v24 < 0)
          {
            unint64_t v33 = (char *)sub_188C138((uint64_t)(v21 + 1), (v25 - 128));
            if (!v33) {
              return 0;
            }
            unint64_t v22 = v28;
            goto LABEL_36;
          }
          uint64_t v23 = v21 + 3;
        }
        unint64_t v33 = v23;
LABEL_36:
        if (v22 > 6)
        {
          if (*v6) {
            uint64_t v29 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(2, v22, v29);
        }
        else
        {
          uint64_t v26 = *(unsigned int *)(a1 + 32);
          if (v26 == *(_DWORD *)(a1 + 36))
          {
            int v27 = v26 + 1;
            sub_188C80C((unsigned int *)(a1 + 32), v26 + 1);
            *(_DWORD *)(*(void *)(a1 + 40) + 4 * v26) = v22;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 40) + 4 * v26) = v22;
            int v27 = v26 + 1;
          }
          *(_DWORD *)(a1 + 32) = v27;
        }
        uint64_t v21 = v33;
        if (*(void *)a3 <= (unint64_t)v33 || *v33 != 16) {
          goto LABEL_63;
        }
      }
    }
    if (v8 != 18) {
      goto LABEL_55;
    }
    *(void *)&long long v34 = a1 + 32;
    *((void *)&v34 + 1) = sub_129EB84;
    uint64_t v35 = a1 + 8;
    int v36 = 2;
LABEL_54:
    uint64_t v30 = sub_1112E88((uint64_t)a3, v7, &v34);
LABEL_62:
    unint64_t v33 = v30;
    if (!v30) {
      return 0;
    }
LABEL_63:
    if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
      return v33;
    }
  }
  if (v8 >> 3 == 1)
  {
    if (v8 == 8)
    {
      int v12 = v7 - 1;
      while (1)
      {
        unint64_t v33 = v12 + 1;
        unint64_t v13 = v12[1];
        unsigned int v14 = v12 + 2;
        if (v12[1] < 0)
        {
          int v15 = *v14;
          int v16 = v13 + (v15 << 7);
          unint64_t v13 = (v16 - 128);
          if (v15 < 0)
          {
            unint64_t v33 = (char *)sub_188C138((uint64_t)(v12 + 1), (v16 - 128));
            if (!v33) {
              return 0;
            }
            unint64_t v13 = v19;
            goto LABEL_16;
          }
          unsigned int v14 = v12 + 3;
        }
        unint64_t v33 = v14;
LABEL_16:
        if (v13 > 6)
        {
          if (*v6) {
            uint64_t v20 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v20 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v13, v20);
        }
        else
        {
          uint64_t v17 = *(unsigned int *)(a1 + 16);
          if (v17 == *(_DWORD *)(a1 + 20))
          {
            int v18 = v17 + 1;
            sub_188C80C((unsigned int *)(a1 + 16), v17 + 1);
            *(_DWORD *)(*(void *)(a1 + 24) + 4 * v17) = v13;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 24) + 4 * v17) = v13;
            int v18 = v17 + 1;
          }
          *(_DWORD *)(a1 + 16) = v18;
        }
        int v12 = v33;
        if (*(void *)a3 <= (unint64_t)v33 || *v33 != 8) {
          goto LABEL_63;
        }
      }
    }
    if (v8 == 10)
    {
      *(void *)&long long v34 = a1 + 16;
      *((void *)&v34 + 1) = sub_129EB84;
      uint64_t v35 = a1 + 8;
      int v36 = 1;
      goto LABEL_54;
    }
  }
LABEL_55:
  if (v8) {
    BOOL v31 = (v8 & 7) == 4;
  }
  else {
    BOOL v31 = 1;
  }
  if (!v31)
  {
    if (*v6)
    {
      uint64_t v32 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v33;
    }
    uint64_t v30 = (char *)sub_1885AC0(v8, v32, v7, a3);
    goto LABEL_62;
  }
  if (!v7) {
    return 0;
  }
  a3[10].i32[0] = v8 - 1;
  return v33;
}

char *sub_12A29F8(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 16);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v8 = *(int *)(*(void *)(a1 + 24) + 4 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  uint64_t v11 = *(unsigned int *)(a1 + 32);
  if ((int)v11 >= 1)
  {
    for (uint64_t j = 0; j != v11; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v13 = *(int *)(*(void *)(a1 + 40) + 4 * j);
      *__dst = 16;
      __dst[1] = v13;
      if (v13 > 0x7F)
      {
        __dst[1] = v13 | 0x80;
        unint64_t v14 = v13 >> 7;
        __dst[2] = v13 >> 7;
        __dst += 3;
        if (v13 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v15 = v14 >> 14;
            v14 >>= 7;
            *__dst++ = v14;
          }
          while (v15);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return __dst;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    unint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    unint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(__dst, v19, (int)v20);
    __dst += v21;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, __dst);
}

uint64_t sub_12A2BE4(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 16);
  if (v1)
  {
    int v2 = 0;
    uint64_t v3 = 0;
    do
    {
      int v4 = *(_DWORD *)(*(void *)(a1 + 24) + 4 * v2);
      if (v4 < 0) {
        uint64_t v5 = 10;
      }
      else {
        uint64_t v5 = (9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6;
      }
      v3 += v5;
      ++v2;
    }
    while (v1 != v2);
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if (v6)
  {
    int v7 = 0;
    uint64_t v8 = 0;
    do
    {
      int v9 = *(_DWORD *)(*(void *)(a1 + 40) + 4 * v7);
      if (v9 < 0) {
        uint64_t v10 = 10;
      }
      else {
        uint64_t v10 = (9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6;
      }
      v8 += v10;
      ++v7;
    }
    while (v6 != v7);
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v11 = v3 + v1 + v6 + v8;
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v11 += v15;
  }
  *(_DWORD *)(a1 + 48) = v11;
  return v11;
}

uint64_t sub_12A2CD0()
{
  return 1;
}

void *sub_12A2CD8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AddressResultSubTypeFilter");
}

uint64_t sub_12A2CE8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2530958)
  {
    uint64_t v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_12A38C8(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12A2DB4(uint64_t a1)
{
  sub_12A2CE8(a1);

  operator delete();
}

unsigned char *sub_12A2DEC(unsigned char *result)
{
  uint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *((void *)result + 3) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_12A2E8C(*((unsigned char **)result + 4));
  }
LABEL_7:
  if ((v2 & 0xC) != 0) {
    *((void *)v1 + 5) = 0;
  }
  char v5 = v1[8];
  int v4 = v1 + 8;
  *((_DWORD *)v4 + 2) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

unsigned char *sub_12A2E8C(unsigned char *result)
{
  uint64_t v1 = result;
  uint64_t v2 = *((unsigned int *)result + 6);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*((void *)result + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_16CD894(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 6) = 0;
  }
  char v6 = v1[8];
  char v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return (unsigned char *)sub_188B4AC(v5);
  }
  return result;
}

uint64_t sub_12A2F08(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)BOOL v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v31 + 1);
    unsigned int v9 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v31 + 2);
      }
    }
    *(void *)BOOL v31 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (std::string *)sub_1880F84((void *)(a1 + 24), v13);
        uint64_t v15 = (void *)sub_188C244(v14, *(char **)v31, (uint64_t)a3);
        goto LABEL_38;
      case 2u:
        if (v9 != 16) {
          goto LABEL_31;
        }
        v5 |= 4u;
        uint64_t v16 = (char *)(v8 + 1);
        int v17 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v18 = *v16;
        int v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v27 = sub_188C0D0((uint64_t)v8, v17);
          *(void *)BOOL v31 = v27;
          *(_DWORD *)(a1 + 40) = v28;
          if (!v27) {
            goto LABEL_52;
          }
        }
        else
        {
          uint64_t v16 = (char *)(v8 + 2);
LABEL_17:
          *(void *)BOOL v31 = v16;
          *(_DWORD *)(a1 + 40) = v17;
        }
        goto LABEL_39;
      case 3u:
        if (v9 != 24) {
          goto LABEL_31;
        }
        unint64_t v19 = (char *)(v8 + 1);
        unint64_t v20 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        int v21 = *v19;
        int v22 = v20 + (v21 << 7);
        unint64_t v20 = (v22 - 128);
        if (v21 < 0)
        {
          *(void *)BOOL v31 = sub_188C138((uint64_t)v8, (v22 - 128));
          if (!*(void *)v31) {
            goto LABEL_52;
          }
          unint64_t v20 = v29;
        }
        else
        {
          unint64_t v19 = (char *)(v8 + 2);
LABEL_22:
          *(void *)BOOL v31 = v19;
        }
        if (v20 > 1)
        {
          if (*v7) {
            uint64_t v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(3, v20, v30);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 44) = v20;
        }
        goto LABEL_39;
      case 4u:
        if (v9 != 34) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v23 = *(void *)(a1 + 32);
        if (!v23)
        {
          int v24 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v24 = (void *)*v24;
          }
          uint64_t v23 = sub_12BBE28((uint64_t)v24);
          *(void *)(a1 + 32) = v23;
          uint64_t v8 = *(unsigned __int8 **)v31;
        }
        uint64_t v15 = sub_12A3204(a3, v23, v8);
        goto LABEL_38;
      default:
LABEL_31:
        if (v9) {
          BOOL v25 = (v9 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          if (*v7)
          {
            uint64_t v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v31;
          }
          uint64_t v15 = sub_1885AC0(v9, v26, (char *)v8, a3);
LABEL_38:
          *(void *)BOOL v31 = v15;
          if (!v15) {
            goto LABEL_52;
          }
LABEL_39:
          if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_52:
        }
          *(void *)BOOL v31 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v31;
    }
  }
}

char *sub_12A3204(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12A3980(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12A3294(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 40);
    *uint64_t v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 44);
    *uint64_t v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 32);
    *uint64_t v4 = 34;
    unsigned int v14 = *(_DWORD *)(v13 + 40);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    uint64_t v4 = sub_12A3B20(v13, v15, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    unint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    unint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_12A34BC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_18;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_12A3C64(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0) {
      goto LABEL_18;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  int v8 = *(_DWORD *)(a1 + 44);
  if (v8 < 0) {
    uint64_t v9 = 11;
  }
  else {
    uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v9;
LABEL_18:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_12A360C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_23;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void *)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_12BBE28((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_2530988;
    }
    sub_12A372C(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
      goto LABEL_7;
    }
LABEL_23:
    *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_12A372C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_12C4B74((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_12A37FC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(unsigned int *)(v2 + 24);
  do
  {
    BOOL v1 = (int)v3 < 1;
    if ((int)v3 < 1) {
      break;
    }
    uint64_t v4 = v3 - 1;
    char v5 = sub_16CE508(*(void *)(*(void *)(v2 + 32) + 8 * v3));
    uint64_t v3 = v4;
  }
  while ((v5 & 1) != 0);
  return v1;
}

BOOL sub_12A3860(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_16CE508(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_12A38B8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.RelatedEntitySection");
}

void *sub_12A38C8(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C45E8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12A3948(void *a1)
{
  sub_12A38C8(a1);

  operator delete();
}

char *sub_12A3980(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    char v5 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          uint64_t v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          uint64_t v6 = v19 + 2;
        }
      }
      unint64_t v19 = v6;
      if (v7 == 18)
      {
        unint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          unint64_t v19 = v12 + 1;
          unsigned int v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_185089C(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          unint64_t v12 = sub_12688D0(a3, v16, v13);
          unint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 18) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v6 = v19;
      }
      unint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_12A3B20(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 18;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_184B3AC(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unsigned int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unsigned int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_12A3C64(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_184B568(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void *sub_12A3D14@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.RelatedCollectionSection");
}

unsigned char *sub_12A3D24(uint64_t a1)
{
  uint64_t result = *(unsigned char **)(a1 + 24);
  if (result) {
    uint64_t result = sub_15B09D0((uint64_t)result);
  }
  *(_DWORD *)(a1 + 16) &= ~1u;
  return result;
}

uint64_t sub_12A3D5C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24A3628;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

void sub_12A3E10()
{
}

uint64_t sub_12A3E60(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_25309B8 && *(void *)(a1 + 24))
  {
    sub_15B0994();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12A3F18(uint64_t a1)
{
  sub_12A3E60(a1);

  operator delete();
}

unsigned char *sub_12A3F50(unsigned char *result)
{
  BOOL v1 = result;
  if (result[16]) {
    uint64_t result = sub_15B09D0(*((void *)result + 3));
  }
  char v3 = v1[8];
  uint64_t v2 = v1 + 8;
  v2[24] = 0;
  *((_DWORD *)v2 + 2) = 0;
  if (v3)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_12A3FB0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v23 + 1;
    unsigned int v9 = *v23;
    if (*v23 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v23, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v23 + 2;
      }
    }
    uint64_t v23 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v16 = v8 + 1;
    uint64_t v17 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_24;
    }
    int v18 = *v16;
    uint64_t v17 = v17 + (v18 << 7) - 128;
    if ((v18 & 0x80000000) == 0)
    {
      uint64_t v16 = v8 + 2;
LABEL_24:
      uint64_t v23 = v16;
      *(unsigned char *)(a1 + 32) = v17 != 0;
      goto LABEL_31;
    }
    uint64_t v21 = (char *)sub_188C138((uint64_t)v8, v17);
    uint64_t v23 = v21;
    *(unsigned char *)(a1 + 32) = v22 != 0;
    if (!v21) {
      goto LABEL_38;
    }
LABEL_31:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v19 = *(void *)(a1 + 24);
    if (!v19)
    {
      uint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v20 = (void *)*v20;
      }
      uint64_t v19 = sub_15C1918((uint64_t)v20);
      *(void *)(a1 + 24) = v19;
      uint64_t v8 = v23;
    }
    uint64_t v15 = sub_1198F14(a3, v19, (unsigned __int8 *)v8);
LABEL_30:
    uint64_t v23 = v15;
    if (!v15) {
      goto LABEL_38;
    }
    goto LABEL_31;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      unsigned int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v23;
    }
    uint64_t v15 = (char *)sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_38:
  uint64_t v23 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v23;
}

char *sub_12A41A4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_15B0C0C(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 32);
    *uint64_t v4 = 16;
    v4[1] = v10;
    v4 += 2;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unsigned int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unsigned int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_12A42F8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) != 0)
  {
    if (v2)
    {
      uint64_t v5 = sub_15B0D90(*(void *)(a1 + 24));
      uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v3 = 0;
    }
    if ((v2 & 2) != 0) {
      uint64_t result = v3 + 2;
    }
    else {
      uint64_t result = v3;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    result += v8;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_12A439C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v5 = *(void *)(a1 + 24);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        unint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          unint64_t v7 = (void *)*v7;
        }
        uint64_t v5 = sub_15C1918((uint64_t)v7);
        *(void *)(a1 + 24) = v5;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v8 = &off_253F1A0;
      }
      sub_15B0E24(v5, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    }
    *(_DWORD *)(a1 + 16) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_12A446C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_12A4498@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchOriginationInfo.SearchOriginationRoutePlanningParameters");
}

uint64_t sub_12A44A8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24A36A8;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  *(void *)(a1 + 28) = 0;
  int v5 = *(_DWORD *)(a2 + 24);
  if (v5)
  {
    sub_188C80C((unsigned int *)(a1 + 24), v5);
    uint64_t v6 = *(void **)(a1 + 32);
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
    memcpy(v6, *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  uint64_t v7 = *(void *)(a2 + 8);
  if (v7) {
    sub_188B4F8(v4, (v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

void sub_12A45A8()
{
}

uint64_t sub_12A460C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_25309E0)
  {
    uint64_t v6 = *(void *)(a1 + 40);
    if (v6)
    {
      sub_12A3E60(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12A46CC(uint64_t a1)
{
  sub_12A460C(a1);

  operator delete();
}

unsigned char *sub_12A4704(unsigned char *result)
{
  BOOL v1 = result;
  *((_DWORD *)result + 6) = 0;
  int v2 = *((_DWORD *)result + 4);
  if (v2) {
    uint64_t result = sub_12A3F50(*((unsigned char **)result + 5));
  }
  if ((v2 & 6) != 0) {
    *((void *)v1 + 6) = 0;
  }
  char v4 = v1[8];
  uint64_t v3 = v1 + 8;
  *((_DWORD *)v3 + 2) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_12A4770(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v37 = a2;
  if (sub_11947B8((uint64_t)a3, &v37, a3[11].i32[1])) {
    return v37;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v37 + 1;
    unsigned int v8 = *v37;
    if (*v37 < 0)
    {
      int v9 = *v7;
      unsigned int v10 = v8 + (v9 << 7);
      unsigned int v8 = v10 - 128;
      if (v9 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v37, v10 - 128);
        unsigned int v8 = v11;
      }
      else
      {
        uint64_t v7 = v37 + 2;
      }
    }
    uint64_t v37 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_55;
        }
        unint64_t v12 = v7 + 1;
        unint64_t v13 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          uint64_t v37 = (char *)sub_188C138((uint64_t)v7, (v15 - 128));
          if (!v37) {
            return 0;
          }
          unint64_t v13 = v31;
        }
        else
        {
          unint64_t v12 = v7 + 2;
LABEL_13:
          uint64_t v37 = v12;
        }
        if (v13 <= 3)
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          *(_DWORD *)(a1 + 48) = v13;
          goto LABEL_63;
        }
        if (*v6) {
          uint64_t v35 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v36 = 1;
        goto LABEL_71;
      case 2u:
        if (v8 != 18) {
          goto LABEL_55;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v16 = *(void *)(a1 + 40);
        if (!v16)
        {
          uint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v17 = (void *)*v17;
          }
          uint64_t v16 = sub_12BBEC8((uint64_t)v17);
          *(void *)(a1 + 40) = v16;
          uint64_t v7 = v37;
        }
        int v18 = sub_12A4B88(a3, v16, (unsigned __int8 *)v7);
        goto LABEL_62;
      case 3u:
        if (v8 == 24)
        {
          uint64_t v19 = v7 - 1;
          while (1)
          {
            uint64_t v37 = v19 + 1;
            unint64_t v20 = v19[1];
            uint64_t v21 = v19 + 2;
            if (v19[1] < 0)
            {
              int v22 = *v21;
              int v23 = v20 + (v22 << 7);
              unint64_t v20 = (v23 - 128);
              if (v22 < 0)
              {
                uint64_t v37 = (char *)sub_188C138((uint64_t)(v19 + 1), (v23 - 128));
                if (!v37) {
                  return 0;
                }
                unint64_t v20 = v26;
                goto LABEL_28;
              }
              uint64_t v21 = v19 + 3;
            }
            uint64_t v37 = v21;
LABEL_28:
            if (v20 > 1)
            {
              if (*v6) {
                uint64_t v27 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(3, v20, v27);
            }
            else
            {
              uint64_t v24 = *(unsigned int *)(a1 + 24);
              if (v24 == *(_DWORD *)(a1 + 28))
              {
                int v25 = v24 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v24 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v24) = v20;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v24) = v20;
                int v25 = v24 + 1;
              }
              *(_DWORD *)(a1 + 24) = v25;
            }
            uint64_t v19 = v37;
            if (*(void *)a3 <= (unint64_t)v37 || *v37 != 24) {
              goto LABEL_63;
            }
          }
        }
        if (v8 == 26)
        {
          *(void *)&long long v38 = a1 + 24;
          *((void *)&v38 + 1) = sub_129EBA8;
          uint64_t v39 = a1 + 8;
          int v40 = 3;
          int v18 = sub_1112E88((uint64_t)a3, v7, &v38);
LABEL_62:
          uint64_t v37 = v18;
          if (!v18) {
            return 0;
          }
LABEL_63:
          if (sub_11947B8((uint64_t)a3, &v37, a3[11].i32[1])) {
            return v37;
          }
          continue;
        }
LABEL_55:
        if (v8) {
          BOOL v33 = (v8 & 7) == 4;
        }
        else {
          BOOL v33 = 1;
        }
        if (!v33)
        {
          if (*v6)
          {
            long long v34 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            long long v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v37;
          }
          int v18 = (char *)sub_1885AC0(v8, v34, v7, a3);
          goto LABEL_62;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v37;
      case 4u:
        if (v8 != 32) {
          goto LABEL_55;
        }
        int v28 = v7 + 1;
        unint64_t v13 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_46;
        }
        int v29 = *v28;
        int v30 = v13 + (v29 << 7);
        unint64_t v13 = (v30 - 128);
        if (v29 < 0)
        {
          uint64_t v37 = (char *)sub_188C138((uint64_t)v7, (v30 - 128));
          if (!v37) {
            return 0;
          }
          unint64_t v13 = v32;
        }
        else
        {
          int v28 = v7 + 2;
LABEL_46:
          uint64_t v37 = v28;
        }
        if (v13 > 5)
        {
          if (*v6) {
            uint64_t v35 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v36 = 4;
LABEL_71:
          sub_188C020(v36, v13, v35);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 52) = v13;
        }
        goto LABEL_63;
      default:
        goto LABEL_55;
    }
  }
}

char *sub_12A4B88(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12A3FB0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_12A4C18(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 48);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 40);
    *char v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unint64_t v12 = v4 + 2;
    }
    char v4 = sub_12A41A4(v10, (unint64_t)v12, a3);
  }
  uint64_t v13 = *(unsigned int *)(a1 + 24);
  if ((int)v13 >= 1)
  {
    for (uint64_t i = 0; i != v13; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v15 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *char v4 = 24;
      v4[1] = v15;
      if (v15 > 0x7F)
      {
        v4[1] = v15 | 0x80;
        unint64_t v16 = v15 >> 7;
        v4[2] = v15 >> 7;
        v4 += 3;
        if (v15 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v17 = v16 >> 14;
            v16 >>= 7;
            *v4++ = v16;
          }
          while (v17);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v18 = *(int *)(a1 + 52);
    *char v4 = 32;
    v4[1] = v18;
    if (v18 > 0x7F)
    {
      v4[1] = v18 | 0x80;
      unint64_t v19 = v18 >> 7;
      v4[2] = v18 >> 7;
      v4 += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v20 = v19 >> 14;
          v19 >>= 7;
          *v4++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return v4;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    uint64_t v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    uint64_t v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(v4, v24, (int)v25);
    v4 += v26;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v24, v25, v4);
}

uint64_t sub_12A4ED4(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v3);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v4 += v6;
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v7 = v4 + v2;
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      uint64_t v9 = sub_12A42F8(*(void *)(a1 + 40));
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v8 & 2) == 0)
      {
LABEL_12:
        if ((v8 & 4) == 0) {
          goto LABEL_23;
        }
        goto LABEL_19;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_12;
    }
    int v10 = *(_DWORD *)(a1 + 48);
    if (v10 < 0) {
      uint64_t v11 = 11;
    }
    else {
      uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v7 += v11;
    if ((v8 & 4) != 0)
    {
LABEL_19:
      int v12 = *(_DWORD *)(a1 + 52);
      if (v12 < 0) {
        uint64_t v13 = 11;
      }
      else {
        uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v7 += v13;
    }
  }
LABEL_23:
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v7 += v17;
  }
  *(_DWORD *)(a1 + 20) = v7;
  return v7;
}

void sub_12A5038(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188C80C((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v10 = *(void *)(a1 + 40);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          int v12 = (void *)*v12;
        }
        uint64_t v10 = sub_12BBEC8((uint64_t)v12);
        *(void *)(a1 + 40) = v10;
      }
      if (*(void *)(a2 + 40)) {
        uint64_t v13 = *(uint64_t (****)())(a2 + 40);
      }
      else {
        uint64_t v13 = &off_25309B8;
      }
      sub_12A439C(v10, (uint64_t)v13);
      if ((v8 & 2) == 0)
      {
LABEL_6:
        if ((v8 & 4) == 0)
        {
LABEL_8:
          *(_DWORD *)(a1 + 16) |= v8;
          goto LABEL_9;
        }
LABEL_7:
        *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
        goto LABEL_8;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_6;
    }
    *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
    if ((v8 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_12A5164(unsigned char *a1, uint64_t a2)
{
  if ((unsigned char *)a2 != a1)
  {
    sub_12A4704(a1);
    sub_12A5038((uint64_t)a1, a2);
  }
}

uint64_t sub_12A51B0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t v1 = *(void *)(a1 + 40);
  if ((*(unsigned char *)(v1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(v1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_12A51E8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchOriginationInfo");
}

uint64_t sub_12A51F8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  int v5 = (uint64_t *)(a1 + 16);
  *(void *)a1 = off_24A3728;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    int v8 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_12C4B74(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    uint64_t v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_12A52D8(_Unwind_Exception *a1)
{
  sub_12C45E8(v3);
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_12A531C(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C45E8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12A539C(void *a1)
{
  sub_12A531C(a1);

  operator delete();
}

unsigned char *sub_12A53D4(unsigned char *result)
{
  uint64_t v1 = result;
  uint64_t v2 = *((unsigned int *)result + 6);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*((void *)result + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_16CD894(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 6) = 0;
  }
  char v6 = v1[8];
  int v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return (unsigned char *)sub_188B4AC(v5);
  }
  return result;
}

char *sub_12A5450(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    int v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      unint64_t v19 = v6;
      if (v7 == 10)
      {
        int v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          unint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_185089C(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          int v12 = sub_12688D0(a3, v16, v13);
          unint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      unint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_12A55F0(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_184B3AC(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_12A5734(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_184B568(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

BOOL sub_12A57E4(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_16CE508(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_12A583C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchSectionPlace");
}

uint64_t sub_12A584C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  char v5 = (uint64_t *)(a1 + 16);
  *(void *)a1 = off_24A37A8;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_12C4B74(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    unint64_t v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *unint64_t v10 = v9;
    }
  }
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_12A592C(_Unwind_Exception *a1)
{
  sub_12C45E8(v3);
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_12A5970(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C45E8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12A59F0(void *a1)
{
  sub_12A5970(a1);

  operator delete();
}

unsigned char *sub_12A5A28(unsigned char *result)
{
  uint64_t v1 = result;
  uint64_t v2 = *((unsigned int *)result + 6);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*((void *)result + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_16CD894(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 6) = 0;
  }
  char v6 = v1[8];
  char v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return (unsigned char *)sub_188B4AC(v5);
  }
  return result;
}

char *sub_12A5AA4(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    char v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      unint64_t v19 = v6;
      if (v7 == 10)
      {
        int v12 = v6 - 1;
        while (1)
        {
          unint64_t v13 = (unsigned __int8 *)(v12 + 1);
          unint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_185089C(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            unint64_t v13 = (unsigned __int8 *)v19;
          }
          int v12 = sub_12688D0(a3, v16, v13);
          unint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      unint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_12A5C44(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unint64_t v10 = __dst + 2;
      }
      __dst = sub_184B3AC(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_12A5D88(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_184B568(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

BOOL sub_12A5E38(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_16CE508(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_12A5E90@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchSectionGuide");
}

uint64_t sub_12A5EA0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24A3828;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  if ((v6 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  return a1;
}

void sub_12A5FC4()
{
}

uint64_t sub_12A601C(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2530A78)
  {
    int v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_12A531C(v6);
      operator delete();
    }
    uint64_t v7 = *(void **)(a1 + 40);
    if (v7)
    {
      sub_12A5970(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12A6108(uint64_t a1)
{
  sub_12A601C(a1);

  operator delete();
}

unsigned char *sub_12A6140(unsigned char *result)
{
  uint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if ((v2 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_16;
  }
  unint64_t v5 = *((void *)result + 3) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_16;
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  *(unsigned char *)unint64_t v5 = 0;
  *(unsigned char *)(v5 + 23) = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_16:
  uint64_t result = sub_12A53D4(*((unsigned char **)result + 4));
  if ((v2 & 4) != 0) {
LABEL_5:
  }
    uint64_t result = sub_12A5A28(*((unsigned char **)v1 + 5));
LABEL_6:
  if ((v2 & 0x78) != 0)
  {
    *((void *)v1 + 6) = 0;
    *((void *)v1 + 7) = 0;
  }
  char v4 = v1[8];
  int v3 = v1 + 8;
  *((_DWORD *)v3 + 2) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_12A61F8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v43 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v43, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v43 + 1);
    unsigned int v9 = **(unsigned char **)v43;
    if ((char)**(unsigned char **)v43 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v43, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v43 + 2);
      }
    }
    *(void *)unint64_t v43 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_49;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (std::string *)sub_1880F84((void *)(a1 + 24), v13);
        uint64_t v15 = (void *)sub_188C244(v14, *(char **)v43, (uint64_t)a3);
        goto LABEL_56;
      case 2u:
        if (v9 != 16) {
          goto LABEL_49;
        }
        uint64_t v16 = (char *)(v8 + 1);
        unint64_t v17 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v18 = *v16;
        int v19 = v17 + (v18 << 7);
        unint64_t v17 = (v19 - 128);
        if (v18 < 0)
        {
          *(void *)unint64_t v43 = sub_188C138((uint64_t)v8, (v19 - 128));
          if (!*(void *)v43) {
            goto LABEL_79;
          }
          unint64_t v17 = v35;
        }
        else
        {
          uint64_t v16 = (char *)(v8 + 2);
LABEL_17:
          *(void *)unint64_t v43 = v16;
        }
        if (v17 <= 2)
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 48) = v17;
          goto LABEL_57;
        }
        if (*v7) {
          uint64_t v41 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v41 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v42 = 2;
        goto LABEL_73;
      case 3u:
        if (v9 != 26) {
          goto LABEL_49;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v20 = *(void *)(a1 + 32);
        if (!v20)
        {
          uint64_t v21 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v21 = (void *)*v21;
          }
          uint64_t v20 = sub_12BBFE4((uint64_t)v21);
          *(void *)(a1 + 32) = v20;
          uint64_t v8 = *(unsigned __int8 **)v43;
        }
        uint64_t v15 = sub_12A6644(a3, v20, v8);
        goto LABEL_56;
      case 4u:
        if (v9 != 34) {
          goto LABEL_49;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v22 = *(void *)(a1 + 40);
        if (!v22)
        {
          unint64_t v23 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v23 = (void *)*v23;
          }
          uint64_t v22 = sub_12BC084((uint64_t)v23);
          *(void *)(a1 + 40) = v22;
          uint64_t v8 = *(unsigned __int8 **)v43;
        }
        uint64_t v15 = sub_12A66D4(a3, v22, v8);
        goto LABEL_56;
      case 5u:
        if (v9 != 40) {
          goto LABEL_49;
        }
        v5 |= 0x10u;
        uint64_t v24 = (char *)(v8 + 1);
        int v25 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_36;
        }
        int v26 = *v24;
        int v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v36 = sub_188C0D0((uint64_t)v8, v25);
          *(void *)unint64_t v43 = v36;
          *(_DWORD *)(a1 + 52) = v37;
          if (!v36) {
            goto LABEL_79;
          }
        }
        else
        {
          uint64_t v24 = (char *)(v8 + 2);
LABEL_36:
          *(void *)unint64_t v43 = v24;
          *(_DWORD *)(a1 + 52) = v25;
        }
        goto LABEL_57;
      case 6u:
        if (v9 != 48) {
          goto LABEL_49;
        }
        v5 |= 0x20u;
        uint64_t v27 = (char *)(v8 + 1);
        int v28 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_41;
        }
        int v29 = *v27;
        int v28 = v28 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          uint64_t v38 = sub_188C0D0((uint64_t)v8, v28);
          *(void *)unint64_t v43 = v38;
          *(_DWORD *)(a1 + 56) = v39;
          if (!v38) {
            goto LABEL_79;
          }
        }
        else
        {
          uint64_t v27 = (char *)(v8 + 2);
LABEL_41:
          *(void *)unint64_t v43 = v27;
          *(_DWORD *)(a1 + 56) = v28;
        }
        goto LABEL_57;
      case 7u:
        if (v9 != 56) {
          goto LABEL_49;
        }
        int v30 = (char *)(v8 + 1);
        unint64_t v17 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_46;
        }
        int v31 = *v30;
        int v32 = v17 + (v31 << 7);
        unint64_t v17 = (v32 - 128);
        if (v31 < 0)
        {
          *(void *)unint64_t v43 = sub_188C138((uint64_t)v8, (v32 - 128));
          if (!*(void *)v43) {
            goto LABEL_79;
          }
          unint64_t v17 = v40;
        }
        else
        {
          int v30 = (char *)(v8 + 2);
LABEL_46:
          *(void *)unint64_t v43 = v30;
        }
        if (v17 > 8)
        {
          if (*v7) {
            uint64_t v41 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v41 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v42 = 7;
LABEL_73:
          sub_188C020(v42, v17, v41);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x40u;
          *(_DWORD *)(a1 + 60) = v17;
        }
        goto LABEL_57;
      default:
LABEL_49:
        if (v9) {
          BOOL v33 = (v9 & 7) == 4;
        }
        else {
          BOOL v33 = 1;
        }
        if (!v33)
        {
          if (*v7)
          {
            long long v34 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            long long v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v43;
          }
          uint64_t v15 = sub_1885AC0(v9, v34, (char *)v8, a3);
LABEL_56:
          *(void *)unint64_t v43 = v15;
          if (!v15) {
            goto LABEL_79;
          }
LABEL_57:
          if (sub_11947B8((uint64_t)a3, (char **)v43, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_79:
        }
          *(void *)unint64_t v43 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v43;
    }
  }
}

char *sub_12A6644(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12A5450(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12A66D4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12A5AA4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12A6764(uint64_t a1, char *__dst, void *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 48);
    *char v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    *char v4 = 26;
    unsigned int v11 = *(_DWORD *)(v10 + 40);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    char v4 = sub_12A55F0(v10, v12, a3);
    if ((v6 & 4) == 0)
    {
LABEL_12:
      if ((v6 & 0x10) == 0) {
        goto LABEL_32;
      }
      goto LABEL_26;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_12;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 40);
  *char v4 = 34;
  unsigned int v14 = *(_DWORD *)(v13 + 40);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  char v4 = sub_12A5C44(v13, v15, a3);
  if ((v6 & 0x10) != 0)
  {
LABEL_26:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 52);
    *char v4 = 40;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_32:
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 56);
    *char v4 = 48;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v22 = *(int *)(a1 + 60);
    *char v4 = 56;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unint64_t v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v25 = *(void *)(a1 + 8);
  if ((v25 & 1) == 0) {
    return v4;
  }
  unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v27 + 31) < 0)
  {
    int v28 = *(void **)(v27 + 8);
    uint64_t v29 = *(void *)(v27 + 16);
  }
  else
  {
    int v28 = (void *)(v27 + 8);
    LODWORD(v29) = *(unsigned __int8 *)(v27 + 31);
  }
  if (*a3 - (void)v4 >= (int)v29)
  {
    uint64_t v30 = (int)v29;
    memcpy(v4, v28, (int)v29);
    v4 += v30;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v28, v29, v4);
}

uint64_t sub_12A6B00(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x7F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_27;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_12A5734(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    uint64_t v8 = sub_12A5D88(*(void *)(a1 + 40));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_12:
      if ((v2 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_21;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_12;
  }
  int v9 = *(_DWORD *)(a1 + 48);
  if (v9 < 0) {
    uint64_t v10 = 11;
  }
  else {
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v10;
  if ((v2 & 0x10) == 0)
  {
LABEL_13:
    if ((v2 & 0x20) == 0) {
      goto LABEL_14;
    }
    goto LABEL_22;
  }
LABEL_21:
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 52) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_14:
    if ((v2 & 0x40) == 0) {
      goto LABEL_27;
    }
    goto LABEL_23;
  }
LABEL_22:
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x40) == 0) {
    goto LABEL_27;
  }
LABEL_23:
  int v11 = *(_DWORD *)(a1 + 60);
  if (v11 < 0) {
    uint64_t v12 = 11;
  }
  else {
    uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v12;
LABEL_27:
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v3 += v16;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_12A6CE8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x7F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      int v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        int v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_26;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void *)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_12BBFE4((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_2530A18;
    }
    sub_12A372C(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_34;
    }
LABEL_26:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v14 = *(void *)(a1 + 40);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = sub_12BC084((uint64_t)v16);
      *(void *)(a1 + 40) = v14;
    }
    if (*(void *)(a2 + 40)) {
      unsigned int v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      unsigned int v17 = &off_2530A48;
    }
    sub_12A372C(v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_35;
    }
LABEL_34:
    *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_36;
    }
LABEL_35:
    *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0)
      {
LABEL_10:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_11;
      }
LABEL_9:
      *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
      goto LABEL_10;
    }
LABEL_36:
    *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
    if ((v4 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_12A6E78(unsigned char *a1, uint64_t a2)
{
  if ((unsigned char *)a2 != a1)
  {
    sub_12A6140(a1);
    sub_12A6CE8((uint64_t)a1, a2);
  }
}

uint64_t sub_12A6EC4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(unsigned int *)(v3 + 24);
    while ((int)v4 >= 1)
    {
      uint64_t v5 = v4 - 1;
      char v6 = sub_16CE508(*(void *)(*(void *)(v3 + 32) + 8 * v4));
      uint64_t v4 = v5;
      if ((v6 & 1) == 0) {
        return 0;
      }
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) == 0) {
    return 1;
  }
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(unsigned int *)(v8 + 24);
  do
  {
    BOOL v7 = (int)v9 < 1;
    if ((int)v9 < 1) {
      break;
    }
    uint64_t v10 = v9 - 1;
    char v11 = sub_16CE508(*(void *)(*(void *)(v8 + 32) + 8 * v9));
    uint64_t v9 = v10;
  }
  while ((v11 & 1) != 0);
  return v7;
}

void *sub_12A6F64@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchSection");
}

uint64_t sub_12A6F74(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = (uint64_t *)(a1 + 16);
  *(void *)a1 = off_24A38A8;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_12C4C00(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    uint64_t v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_12A7054(_Unwind_Exception *a1)
{
  sub_12C4668(v3);
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_12A709C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C4668(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12A711C(void *a1)
{
  sub_12A709C(a1);

  operator delete();
}

unsigned char *sub_12A7154(unsigned char *result)
{
  uint64_t v1 = result;
  uint64_t v2 = *((unsigned int *)result + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (unsigned char **)(*((void *)result + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_12A6140(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 6) = 0;
  }
  char v6 = v1[8];
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return (unsigned char *)sub_188B4AC(v5);
  }
  return result;
}

char *sub_12A71D0(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      unsigned int v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          unsigned int v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            sub_12BC124(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = (char *)sub_12A7370(a3, v16, v13);
          unsigned int v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      unsigned int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

uint64_t sub_12A7370(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12A61F8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12A7400(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_12A6764(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_12A7544(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12A6B00(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void sub_12A75F4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_12C4C00((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_12A76C4(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_12A6EC4(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_12A771C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchSectionList");
}

uint64_t sub_12A772C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24A3928;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    int v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 32) = &qword_2550250;
  if ((v6 & 2) != 0)
  {
    uint64_t v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 32), (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 40) = &qword_2550250;
  if ((v6 & 4) != 0)
  {
    uint64_t v9 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v9 = (uint64_t *)*v9;
    }
    sub_1881DF4((std::string **)(a1 + 40), (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL), v9);
  }
  uint64_t v10 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v10;
  return a1;
}

void sub_12A7848(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_12A7878(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12A7944(uint64_t a1)
{
  sub_12A7878(a1);

  operator delete();
}

uint64_t sub_12A797C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) != 0)
  {
    if ((v1 & 1) == 0)
    {
      if ((v1 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_10:
      unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v3 + 23) < 0)
      {
        **(unsigned char **)unint64_t v3 = 0;
        *(void *)(v3 + 8) = 0;
        if ((v1 & 4) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v3 = 0;
        *(unsigned char *)(v3 + 23) = 0;
        if ((v1 & 4) == 0) {
          goto LABEL_17;
        }
      }
      goto LABEL_14;
    }
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
  }
LABEL_17:
  if ((v1 & 0x38) != 0)
  {
    *(unsigned char *)(a1 + 56) = 0;
    *(void *)(a1 + 48) = 0;
  }
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_12A7A44(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v37 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v37, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v37 + 1);
    unsigned int v9 = **(unsigned char **)v37;
    if ((char)**(unsigned char **)v37 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v37, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v37 + 2);
      }
    }
    *(void *)int v37 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 24);
        goto LABEL_28;
      case 2u:
        if (v9 != 16) {
          goto LABEL_39;
        }
        uint64_t v15 = v8 + 1;
        unint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v17 = *v15;
        int v18 = v16 + (v17 << 7);
        unint64_t v16 = (v18 - 128);
        if (v17 < 0)
        {
          *(void *)int v37 = sub_188C138((uint64_t)v8, (v18 - 128));
          if (!*(void *)v37) {
            goto LABEL_62;
          }
          unint64_t v16 = v31;
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_17:
          *(void *)int v37 = v15;
        }
        if (v16 > 2)
        {
          if (*v7) {
            uint64_t v36 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(2, v16, v36);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 48) = v16;
        }
        goto LABEL_47;
      case 3u:
        if (v9 != 26) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 32);
        goto LABEL_28;
      case 4u:
        if (v9 != 34) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v20 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
        if (v20) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 40);
LABEL_28:
        unsigned int v21 = (std::string *)sub_1880F84(v14, v13);
        unint64_t v22 = (void *)sub_188C244(v21, *(char **)v37, (uint64_t)a3);
        goto LABEL_46;
      case 5u:
        if (v9 != 40) {
          goto LABEL_39;
        }
        v5 |= 0x10u;
        unint64_t v23 = v8 + 1;
        int v24 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v25 = *v23;
        int v24 = v24 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          uint64_t v32 = sub_188C0D0((uint64_t)v8, v24);
          *(void *)int v37 = v32;
          *(_DWORD *)(a1 + 52) = v33;
          if (!v32) {
            goto LABEL_62;
          }
        }
        else
        {
          unint64_t v23 = v8 + 2;
LABEL_33:
          *(void *)int v37 = v23;
          *(_DWORD *)(a1 + 52) = v24;
        }
        goto LABEL_47;
      case 6u:
        if (v9 != 48) {
          goto LABEL_39;
        }
        v5 |= 0x20u;
        int v26 = v8 + 1;
        uint64_t v27 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v28 = *v26;
        uint64_t v27 = v27 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          uint64_t v34 = sub_188C138((uint64_t)v8, v27);
          *(void *)int v37 = v34;
          *(unsigned char *)(a1 + 56) = v35 != 0;
          if (!v34) {
            goto LABEL_62;
          }
        }
        else
        {
          int v26 = v8 + 2;
LABEL_38:
          *(void *)int v37 = v26;
          *(unsigned char *)(a1 + 56) = v27 != 0;
        }
        goto LABEL_47;
      default:
LABEL_39:
        if (v9) {
          BOOL v29 = (v9 & 7) == 4;
        }
        else {
          BOOL v29 = 1;
        }
        if (!v29)
        {
          if (*v7)
          {
            uint64_t v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v37;
          }
          unint64_t v22 = sub_1885AC0(v9, v30, v8, a3);
LABEL_46:
          *(void *)int v37 = v22;
          if (!v22) {
            goto LABEL_62;
          }
LABEL_47:
          if (sub_11947B8((uint64_t)a3, (char **)v37, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_62:
        }
          *(void *)int v37 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v37;
    }
  }
}

unsigned char *sub_12A7DDC(uint64_t a1, unsigned char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 48);
    *unint64_t v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 4) == 0)
    {
LABEL_12:
      if ((v6 & 0x10) == 0) {
        goto LABEL_22;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_12;
  }
  unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0) {
    goto LABEL_22;
  }
LABEL_16:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unsigned int v10 = *(_DWORD *)(a1 + 52);
  *unint64_t v4 = 40;
  v4[1] = v10;
  if (v10 > 0x7F)
  {
    v4[1] = v10 | 0x80;
    unsigned int v11 = v10 >> 7;
    v4[2] = v10 >> 7;
    v4 += 3;
    if (v10 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unsigned int v12 = v11 >> 14;
        v11 >>= 7;
        *v4++ = v11;
      }
      while (v12);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_22:
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v13 = *(unsigned char *)(a1 + 56);
    *unint64_t v4 = 48;
    v4[1] = v13;
    v4 += 2;
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_12A8024(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x3F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_19;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v12 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
    uint64_t v14 = *(void *)(v12 + 8);
    if ((v13 & 0x80u) == 0) {
      uint64_t v14 = v13;
    }
    v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0)
    {
LABEL_14:
      if ((v1 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_15;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_14;
  }
  int v15 = *(_DWORD *)(a1 + 48);
  if (v15 < 0) {
    uint64_t v16 = 11;
  }
  else {
    uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v16;
  if ((v1 & 0x10) == 0) {
    goto LABEL_16;
  }
LABEL_15:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 52) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_16:
  if ((v1 & 0x20) != 0) {
    uint64_t v3 = v2 + 2;
  }
  else {
    uint64_t v3 = v2;
  }
LABEL_19:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v17 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v3 += v18;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_12A81B8(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      unint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_20;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      unint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_23;
    }
LABEL_20:
    uint64_t v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    int v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      int v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_24;
    }
LABEL_23:
    LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0)
      {
LABEL_9:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_10;
      }
LABEL_8:
      v3[2].__r_.__value_.__s.__data_[8] = *(unsigned char *)(a2 + 56);
      goto LABEL_9;
    }
LABEL_24:
    HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12A8308()
{
  return 1;
}

void *sub_12A8310@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ResultRefinementMetadata.ResultRefinementMetadataDefault");
}

uint64_t sub_12A8320(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24A39A8;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v6 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v6 = (uint64_t *)*v6;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v6);
  }
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 38) = *(void *)(a2 + 38);
  *(void *)(a1 + 32) = v7;
  return a1;
}

void sub_12A83DC(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_12A840C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12A84AC(uint64_t a1)
{
  sub_12A840C(a1);

  operator delete();
}

uint64_t sub_12A84E4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 0x3E) != 0)
  {
    *(void *)(a1 + 38) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v4) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_12A8538(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v44 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v44, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v44 + 1);
    unsigned int v9 = **(unsigned char **)v44;
    if ((char)**(unsigned char **)v44 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v44, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v44 + 2);
      }
    }
    *(void *)uint64_t v44 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_40;
        }
        unint64_t v12 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          *(void *)uint64_t v44 = sub_188C138((uint64_t)v8, (v15 - 128));
          if (!*(void *)v44) {
            goto LABEL_67;
          }
          unint64_t v13 = v34;
        }
        else
        {
          unint64_t v12 = v8 + 2;
LABEL_13:
          *(void *)uint64_t v44 = v12;
        }
        if (v13 > 3)
        {
          if (*v7) {
            unint64_t v43 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v43 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v13, v43);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          *(_DWORD *)(a1 + 32) = v13;
        }
        goto LABEL_48;
      case 2u:
        if (v9 != 18) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v16 = *(void *)(a1 + 8);
        unint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          unint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (std::string *)sub_1880F84((void *)(a1 + 24), v17);
        uint64_t v19 = (void *)sub_188C244(v18, *(char **)v44, (uint64_t)a3);
        goto LABEL_47;
      case 3u:
        if (v9 != 24) {
          goto LABEL_40;
        }
        v5 |= 4u;
        uint64_t v20 = v8 + 1;
        int v21 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_24;
        }
        int v22 = *v20;
        int v21 = v21 + (v22 << 7) - 128;
        if (v22 < 0)
        {
          uint64_t v35 = sub_188C0D0((uint64_t)v8, v21);
          *(void *)uint64_t v44 = v35;
          *(_DWORD *)(a1 + 36) = v36;
          if (!v35) {
            goto LABEL_67;
          }
        }
        else
        {
          uint64_t v20 = v8 + 2;
LABEL_24:
          *(void *)uint64_t v44 = v20;
          *(_DWORD *)(a1 + 36) = v21;
        }
        goto LABEL_48;
      case 4u:
        if (v9 != 32) {
          goto LABEL_40;
        }
        v5 |= 0x10u;
        unint64_t v23 = v8 + 1;
        uint64_t v24 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_29;
        }
        int v25 = *v23;
        uint64_t v24 = v24 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          uint64_t v37 = sub_188C138((uint64_t)v8, v24);
          *(void *)uint64_t v44 = v37;
          *(unsigned char *)(a1 + 44) = v38 != 0;
          if (!v37) {
            goto LABEL_67;
          }
        }
        else
        {
          unint64_t v23 = v8 + 2;
LABEL_29:
          *(void *)uint64_t v44 = v23;
          *(unsigned char *)(a1 + 44) = v24 != 0;
        }
        goto LABEL_48;
      case 5u:
        if (v9 != 40) {
          goto LABEL_40;
        }
        v5 |= 8u;
        int v26 = v8 + 1;
        int v27 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_34;
        }
        int v28 = *v26;
        int v27 = v27 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          uint64_t v39 = sub_188C0D0((uint64_t)v8, v27);
          *(void *)uint64_t v44 = v39;
          *(_DWORD *)(a1 + 40) = v40;
          if (!v39) {
            goto LABEL_67;
          }
        }
        else
        {
          int v26 = v8 + 2;
LABEL_34:
          *(void *)uint64_t v44 = v26;
          *(_DWORD *)(a1 + 40) = v27;
        }
        goto LABEL_48;
      case 6u:
        if (v9 != 48) {
          goto LABEL_40;
        }
        v5 |= 0x20u;
        BOOL v29 = v8 + 1;
        uint64_t v30 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_39;
        }
        int v31 = *v29;
        uint64_t v30 = v30 + (v31 << 7) - 128;
        if (v31 < 0)
        {
          uint64_t v41 = sub_188C138((uint64_t)v8, v30);
          *(void *)uint64_t v44 = v41;
          *(unsigned char *)(a1 + 45) = v42 != 0;
          if (!v41) {
            goto LABEL_67;
          }
        }
        else
        {
          BOOL v29 = v8 + 2;
LABEL_39:
          *(void *)uint64_t v44 = v29;
          *(unsigned char *)(a1 + 45) = v30 != 0;
        }
        goto LABEL_48;
      default:
LABEL_40:
        if (v9) {
          BOOL v32 = (v9 & 7) == 4;
        }
        else {
          BOOL v32 = 1;
        }
        if (!v32)
        {
          if (*v7)
          {
            int v33 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v44;
          }
          uint64_t v19 = sub_1885AC0(v9, v33, v8, a3);
LABEL_47:
          *(void *)uint64_t v44 = v19;
          if (!v19) {
            goto LABEL_67;
          }
LABEL_48:
          if (sub_11947B8((uint64_t)a3, (char **)v44, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_67:
        }
          *(void *)uint64_t v44 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v44;
    }
  }
}

unsigned char *sub_12A8920(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    char v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 36);
    *char v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v13 = *(unsigned char *)(a1 + 44);
    *char v4 = 32;
    v4[1] = v13;
    v4 += 2;
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v14 = *(_DWORD *)(a1 + 40);
    *char v4 = 40;
    v4[1] = v14;
    if (v14 > 0x7F)
    {
      v4[1] = v14 | 0x80;
      unsigned int v15 = v14 >> 7;
      v4[2] = v14 >> 7;
      v4 += 3;
      if (v14 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v16 = v15 >> 14;
          v15 >>= 7;
          *v4++ = v15;
        }
        while (v16);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v17 = *(unsigned char *)(a1 + 45);
    *char v4 = 48;
    v4[1] = v17;
    v4 += 2;
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    int v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    int v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_12A8BD0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x3F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_21;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    int v7 = *(_DWORD *)(a1 + 32);
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v8;
  }
LABEL_13:
  if ((v1 & 4) != 0)
  {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
  if ((v1 & 8) != 0) {
LABEL_15:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_16:
  if ((v1 & 0x10) != 0) {
    v2 += 2;
  }
  if ((v1 & 0x20) != 0) {
    uint64_t v3 = v2 + 2;
  }
  else {
    uint64_t v3 = v2;
  }
LABEL_21:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v3 += v12;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_12A8D0C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      int v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_18;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_19;
    }
LABEL_18:
    HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_20;
    }
LABEL_19:
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0)
      {
LABEL_9:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_10;
      }
LABEL_8:
      v3[1].__r_.__value_.__s.__data_[21] = *(unsigned char *)(a2 + 45);
      goto LABEL_9;
    }
LABEL_20:
    v3[1].__r_.__value_.__s.__data_[20] = *(unsigned char *)(a2 + 44);
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12A8E0C()
{
  return 1;
}

void *sub_12A8E14@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ResultRefinementMetadata.ResultRefinementMetadataSort");
}

uint64_t sub_12A8E24(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24A3A28;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v5 = *(_DWORD *)(a2 + 16);
  if (v5) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  if ((v5 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  return a1;
}

void sub_12A8F10()
{
}

uint64_t sub_12A8F74(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2530B58)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_12A7878(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_12A840C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12A9044(uint64_t a1)
{
  sub_12A8F74(a1);

  operator delete();
}

uint64_t sub_12A907C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_12A797C(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_12A84E4(*(void *)(v1 + 32));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 32) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_12A90F0(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v26 + 2;
      }
    }
    int v26 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 2u;
      unsigned int v16 = *(void **)(a1 + 32);
      if (!v16)
      {
        char v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          char v17 = (void *)*v17;
        }
        unsigned int v16 = sub_12BC2D8((uint64_t)v17);
        *(void *)(a1 + 32) = v16;
        int v7 = v26;
      }
      unsigned int v15 = (char *)sub_12A93E8(a3, (uint64_t)v16, (unsigned __int8 *)v7);
      goto LABEL_33;
    }
    if (v11 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v18 = *(void *)(a1 + 24);
    if (!v18)
    {
      uint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v19 = (void *)*v19;
      }
      uint64_t v18 = sub_12BC24C((uint64_t)v19);
      *(void *)(a1 + 24) = v18;
      int v7 = v26;
    }
    unsigned int v15 = (char *)sub_12A9358(a3, v18, (unsigned __int8 *)v7);
LABEL_33:
    int v26 = v15;
    if (!v15) {
      return 0;
    }
LABEL_41:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      return v26;
    }
  }
  if (v11 == 1 && v8 == 8)
  {
    unint64_t v20 = v7 + 1;
    unint64_t v21 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_38;
    }
    int v22 = *v20;
    int v23 = v21 + (v22 << 7);
    unint64_t v21 = (v23 - 128);
    if (v22 < 0)
    {
      int v26 = (char *)sub_188C138((uint64_t)v7, (v23 - 128));
      if (!v26) {
        return 0;
      }
      unint64_t v21 = v24;
    }
    else
    {
      unint64_t v20 = v7 + 2;
LABEL_38:
      int v26 = v20;
    }
    if (v21 > 2)
    {
      if (*v6) {
        int v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        int v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v21, v25);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 4u;
      *(_DWORD *)(a1 + 40) = v21;
    }
    goto LABEL_41;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      unsigned int v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v26;
    }
    unsigned int v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_33;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v26;
  }
  return 0;
}

uint64_t sub_12A9358(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12A7A44(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12A93E8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12A8538(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_12A9478(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    *char v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    char v4 = sub_12A7DDC(v10, v12, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 32);
    *char v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      unsigned int v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      unsigned int v15 = v4 + 2;
    }
    char v4 = sub_12A8920(v13, (unint64_t)v15, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_12A9674(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_13;
  }
  if (v2)
  {
    uint64_t v4 = sub_12A8024(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_12A8BD0(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    int v6 = *(_DWORD *)(a1 + 40);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v7;
  }
LABEL_13:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_12A9780(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v8 = (void *)*v8;
        }
        std::string::pointer data = (std::string *)sub_12BC24C((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v9 = &off_2530AE8;
      }
      uint64_t result = sub_12A81B8(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    unint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      unint64_t v10 = (std::string *)sub_12BC2D8((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_2530B28;
    }
    uint64_t result = sub_12A8D0C(v10, (uint64_t)v13);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_12A98A8(std::string *result, uint64_t a2)
{
  if ((std::string *)a2 != result)
  {
    int v4 = result;
    sub_12A907C((uint64_t)result);
    return sub_12A9780(v4, a2);
  }
  return result;
}

uint64_t sub_12A98F4()
{
  return 1;
}

void *sub_12A98FC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ResultRefinementMetadata");
}

uint64_t sub_12A990C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24A3AA8;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

void sub_12A99F8()
{
}

uint64_t sub_12A9A48(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2530B88)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_12A8F74(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12A9B14(uint64_t a1)
{
  sub_12A9A48(a1);

  operator delete();
}

uint64_t sub_12A9B4C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_12A907C(*(void *)(result + 32));
  }
LABEL_7:
  if ((v2 & 0xFC) != 0)
  {
    *(void *)(v1 + 40) = 0;
    *(void *)(v1 + 48) = 0;
  }
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_12A9BEC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v51 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v51, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v51 + 1);
    unsigned int v9 = **(unsigned char **)v51;
    if ((char)**(unsigned char **)v51 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v51, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v51 + 2);
      }
    }
    *(void *)uint64_t v51 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_53;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        unsigned int v14 = (std::string *)sub_1880F84((void *)(a1 + 24), v13);
        unsigned int v15 = (void *)sub_188C244(v14, *(char **)v51, (uint64_t)a3);
        goto LABEL_60;
      case 2u:
        if (v9 != 16) {
          goto LABEL_53;
        }
        v5 |= 0x10u;
        uint64_t v16 = (char *)(v8 + 1);
        uint64_t v17 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v18 = *v16;
        uint64_t v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v39 = sub_188C138((uint64_t)v8, v17);
          *(void *)uint64_t v51 = v39;
          *(unsigned char *)(a1 + 48) = v40 != 0;
          if (!v39) {
            goto LABEL_87;
          }
        }
        else
        {
          uint64_t v16 = (char *)(v8 + 2);
LABEL_17:
          *(void *)uint64_t v51 = v16;
          *(unsigned char *)(a1 + 48) = v17 != 0;
        }
        goto LABEL_61;
      case 3u:
        if (v9 != 26) {
          goto LABEL_53;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 32);
        if (!v19)
        {
          uint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v20 = (void *)*v20;
          }
          uint64_t v19 = sub_12BC360((uint64_t)v20);
          *(void *)(a1 + 32) = v19;
          uint64_t v8 = *(unsigned __int8 **)v51;
        }
        unsigned int v15 = sub_12AA0D8(a3, v19, v8);
        goto LABEL_60;
      case 4u:
        if (v9 != 32) {
          goto LABEL_53;
        }
        uint64_t v21 = (char *)(v8 + 1);
        unint64_t v22 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v24 = v22 + (v23 << 7);
        unint64_t v22 = (v24 - 128);
        if (v23 < 0)
        {
          *(void *)uint64_t v51 = sub_188C138((uint64_t)v8, (v24 - 128));
          if (!*(void *)v51) {
            goto LABEL_87;
          }
          unint64_t v22 = v41;
        }
        else
        {
          uint64_t v21 = (char *)(v8 + 2);
LABEL_28:
          *(void *)uint64_t v51 = v21;
        }
        if (v22 <= 2)
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 40) = v22;
          goto LABEL_61;
        }
        if (*v7) {
          unint64_t v49 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unint64_t v49 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v50 = 4;
        goto LABEL_81;
      case 5u:
        if (v9 != 40) {
          goto LABEL_53;
        }
        int v25 = (char *)(v8 + 1);
        unint64_t v22 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_35;
        }
        int v26 = *v25;
        int v27 = v22 + (v26 << 7);
        unint64_t v22 = (v27 - 128);
        if (v26 < 0)
        {
          *(void *)uint64_t v51 = sub_188C138((uint64_t)v8, (v27 - 128));
          if (!*(void *)v51) {
            goto LABEL_87;
          }
          unint64_t v22 = v42;
        }
        else
        {
          int v25 = (char *)(v8 + 2);
LABEL_35:
          *(void *)uint64_t v51 = v25;
        }
        if (sub_13942C0(v22))
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 44) = v22;
        }
        else
        {
          if (*v7) {
            unint64_t v49 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v49 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v50 = 5;
LABEL_81:
          sub_188C020(v50, v22, v49);
        }
        goto LABEL_61;
      case 6u:
        if (v9 != 48) {
          goto LABEL_53;
        }
        v5 |= 0x80u;
        int v28 = (char *)(v8 + 1);
        int v29 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_42;
        }
        int v30 = *v28;
        int v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          uint64_t v43 = sub_188C0D0((uint64_t)v8, v29);
          *(void *)uint64_t v51 = v43;
          *(_DWORD *)(a1 + 52) = v44;
          if (!v43) {
            goto LABEL_87;
          }
        }
        else
        {
          int v28 = (char *)(v8 + 2);
LABEL_42:
          *(void *)uint64_t v51 = v28;
          *(_DWORD *)(a1 + 52) = v29;
        }
        goto LABEL_61;
      case 7u:
        if (v9 != 56) {
          goto LABEL_53;
        }
        v5 |= 0x20u;
        int v31 = (char *)(v8 + 1);
        uint64_t v32 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_47;
        }
        int v33 = *v31;
        uint64_t v32 = v32 + (v33 << 7) - 128;
        if (v33 < 0)
        {
          uint64_t v45 = sub_188C138((uint64_t)v8, v32);
          *(void *)uint64_t v51 = v45;
          *(unsigned char *)(a1 + 49) = v46 != 0;
          if (!v45) {
            goto LABEL_87;
          }
        }
        else
        {
          int v31 = (char *)(v8 + 2);
LABEL_47:
          *(void *)uint64_t v51 = v31;
          *(unsigned char *)(a1 + 49) = v32 != 0;
        }
        goto LABEL_61;
      case 8u:
        if (v9 != 64) {
          goto LABEL_53;
        }
        v5 |= 0x40u;
        unint64_t v34 = (char *)(v8 + 1);
        uint64_t v35 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_52;
        }
        int v36 = *v34;
        uint64_t v35 = v35 + (v36 << 7) - 128;
        if (v36 < 0)
        {
          uint64_t v47 = sub_188C138((uint64_t)v8, v35);
          *(void *)uint64_t v51 = v47;
          *(unsigned char *)(a1 + 50) = v48 != 0;
          if (!v47) {
            goto LABEL_87;
          }
        }
        else
        {
          unint64_t v34 = (char *)(v8 + 2);
LABEL_52:
          *(void *)uint64_t v51 = v34;
          *(unsigned char *)(a1 + 50) = v35 != 0;
        }
        goto LABEL_61;
      default:
LABEL_53:
        if (v9) {
          BOOL v37 = (v9 & 7) == 4;
        }
        else {
          BOOL v37 = 1;
        }
        if (!v37)
        {
          if (*v7)
          {
            uint64_t v38 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v38 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v51;
          }
          unsigned int v15 = sub_1885AC0(v9, v38, (char *)v8, a3);
LABEL_60:
          *(void *)uint64_t v51 = v15;
          if (!v15) {
            goto LABEL_87;
          }
LABEL_61:
          if (sub_11947B8((uint64_t)a3, (char **)v51, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_87:
        }
          *(void *)uint64_t v51 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v51;
    }
  }
}

char *sub_12AA0D8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12A90F0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_12AA168(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 0x10) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v7 = *(unsigned char *)(a1 + 48);
  *uint64_t v4 = 16;
  v4[1] = v7;
  v4 += 2;
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0) {
      goto LABEL_22;
    }
    goto LABEL_16;
  }
LABEL_10:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v8 = *(void *)(a1 + 32);
  *uint64_t v4 = 26;
  unsigned int v9 = *(_DWORD *)(v8 + 20);
  v4[1] = v9;
  if (v9 > 0x7F) {
    unsigned int v10 = sub_188A9CC(v9, v4 + 1);
  }
  else {
    unsigned int v10 = v4 + 2;
  }
  uint64_t v4 = sub_12A9478(v8, (unint64_t)v10, a3);
  if ((v6 & 4) != 0)
  {
LABEL_16:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v11 = *(int *)(a1 + 40);
    *uint64_t v4 = 32;
    v4[1] = v11;
    if (v11 > 0x7F)
    {
      v4[1] = v11 | 0x80;
      unint64_t v12 = v11 >> 7;
      v4[2] = v11 >> 7;
      v4 += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v13 = v12 >> 14;
          v12 >>= 7;
          *v4++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_22:
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v14 = *(int *)(a1 + 44);
    *uint64_t v4 = 40;
    v4[1] = v14;
    if (v14 > 0x7F)
    {
      v4[1] = v14 | 0x80;
      unint64_t v15 = v14 >> 7;
      v4[2] = v14 >> 7;
      v4 += 3;
      if (v14 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v16 = v15 >> 14;
          v15 >>= 7;
          *v4++ = v15;
        }
        while (v16);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v17 = *(_DWORD *)(a1 + 52);
    *uint64_t v4 = 48;
    v4[1] = v17;
    if (v17 > 0x7F)
    {
      v4[1] = v17 | 0x80;
      unsigned int v18 = v17 >> 7;
      v4[2] = v17 >> 7;
      v4 += 3;
      if (v17 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v19 = v18 >> 14;
          v18 >>= 7;
          *v4++ = v18;
        }
        while (v19);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v20 = *(unsigned char *)(a1 + 49);
    *uint64_t v4 = 56;
    v4[1] = v20;
    v4 += 2;
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v21 = *(unsigned char *)(a1 + 50);
    *uint64_t v4 = 64;
    v4[1] = v21;
    v4 += 2;
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return v4;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    int v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    int v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(v4, v25, (int)v26);
    v4 += v27;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v25, v26, v4);
}

uint64_t sub_12AA4D0(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 16);
  if (!v2)
  {
    uint64_t result = 0;
    goto LABEL_30;
  }
  if ((*(unsigned char *)(a1 + 16) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v8 = sub_12A9674(*(void *)(a1 + 32));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  uint64_t v7 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    uint64_t v7 = v6;
  }
  uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((*(unsigned char *)(a1 + 16) & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    int v9 = *(_DWORD *)(a1 + 40);
    if (v9 < 0) {
      uint64_t v10 = 11;
    }
    else {
      uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v10;
    if ((v2 & 8) == 0) {
      goto LABEL_21;
    }
    goto LABEL_17;
  }
  if ((v2 & 8) != 0)
  {
LABEL_17:
    int v11 = *(_DWORD *)(a1 + 44);
    if (v11 < 0) {
      uint64_t v12 = 11;
    }
    else {
      uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v12;
  }
LABEL_21:
  uint64_t v13 = v3 + 2;
  if ((v2 & 0x10) == 0) {
    uint64_t v13 = v3;
  }
  if ((v2 & 0x20) != 0) {
    v13 += 2;
  }
  if ((v2 & 0x40) != 0) {
    uint64_t result = v13 + 2;
  }
  else {
    uint64_t result = v13;
  }
  if (v2 < 0) {
    result += ((9 * (__clz(*(_DWORD *)(a1 + 52) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_30:
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v15 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    result += v16;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_12AA670(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      int v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        int v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_27;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_12BC360((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_2530B58;
    }
    uint64_t result = sub_12A9780(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_28;
    }
LABEL_27:
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_29;
    }
LABEL_28:
    HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_30;
    }
LABEL_29:
    v3[2].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 48);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_31;
    }
LABEL_30:
    v3[2].__r_.__value_.__s.__data_[1] = *(unsigned char *)(a2 + 49);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
      goto LABEL_11;
    }
LABEL_31:
    v3[2].__r_.__value_.__s.__data_[2] = *(unsigned char *)(a2 + 50);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12AA7D0()
{
  return 1;
}

void *sub_12AA7D8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ResultRefinementToggle");
}

uint64_t sub_12AA7E8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24A3B28;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 32) = &qword_2550250;
  if ((v6 & 2) != 0)
  {
    uint64_t v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 32), (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 40) = &qword_2550250;
  if ((v6 & 4) != 0)
  {
    int v9 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v9 = (uint64_t *)*v9;
    }
    sub_1881DF4((std::string **)(a1 + 40), (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL), v9);
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  return a1;
}

void sub_12AA8FC(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_12AA92C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12AA9F8(uint64_t a1)
{
  sub_12AA92C(a1);

  operator delete();
}

uint64_t sub_12AAA30(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) != 0)
  {
    if ((v1 & 1) == 0)
    {
      if ((v1 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_10:
      unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v3 + 23) < 0)
      {
        **(unsigned char **)unint64_t v3 = 0;
        *(void *)(v3 + 8) = 0;
        if ((v1 & 4) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v3 = 0;
        *(unsigned char *)(v3 + 23) = 0;
        if ((v1 & 4) == 0) {
          goto LABEL_17;
        }
      }
      goto LABEL_14;
    }
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
  }
LABEL_17:
  if ((v1 & 0x38) != 0)
  {
    *(void *)(a1 + 48) = 0;
    *(void *)(a1 + 56) = 0;
  }
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_12AAAF4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v32 + 1);
    unsigned int v9 = **(unsigned char **)v32;
    if ((char)**(unsigned char **)v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v32 + 2);
      }
    }
    *(void *)uint64_t v32 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 24);
        goto LABEL_28;
      case 2u:
        if (v9 != 17) {
          goto LABEL_36;
        }
        v5 |= 8u;
        *(void *)(a1 + 48) = *(void *)v8;
        *(void *)uint64_t v32 = v8 + 8;
        goto LABEL_44;
      case 3u:
        if (v9 != 24) {
          goto LABEL_36;
        }
        v5 |= 0x10u;
        unint64_t v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v28 = sub_188C138((uint64_t)v8, v16);
          *(void *)uint64_t v32 = v28;
          *(unsigned char *)(a1 + 56) = v29 != 0;
          if (!v28) {
            goto LABEL_57;
          }
        }
        else
        {
          unint64_t v15 = v8 + 2;
LABEL_19:
          *(void *)uint64_t v32 = v15;
          *(unsigned char *)(a1 + 56) = v16 != 0;
        }
        goto LABEL_44;
      case 4u:
        if (v9 != 34) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 32);
        goto LABEL_28;
      case 5u:
        if (v9 != 42) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 40);
LABEL_28:
        char v20 = (std::string *)sub_1880F84(v14, v13);
        char v21 = (void *)sub_188C244(v20, *(char **)v32, (uint64_t)a3);
        goto LABEL_43;
      case 6u:
        if (v9 != 48) {
          goto LABEL_36;
        }
        uint64_t v22 = v8 + 1;
        unint64_t v23 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v24 = *v22;
        int v25 = v23 + (v24 << 7);
        unint64_t v23 = (v25 - 128);
        if (v24 < 0)
        {
          *(void *)uint64_t v32 = sub_188C138((uint64_t)v8, (v25 - 128));
          if (!*(void *)v32) {
            goto LABEL_57;
          }
          unint64_t v23 = v30;
        }
        else
        {
          uint64_t v22 = v8 + 2;
LABEL_33:
          *(void *)uint64_t v32 = v22;
        }
        if (v23 > 1)
        {
          if (*v7) {
            int v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(6, v23, v31);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 60) = v23;
        }
        goto LABEL_44;
      default:
LABEL_36:
        if (v9) {
          BOOL v26 = (v9 & 7) == 4;
        }
        else {
          BOOL v26 = 1;
        }
        if (!v26)
        {
          if (*v7)
          {
            uint64_t v27 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v32;
          }
          char v21 = sub_1885AC0(v9, v27, v8, a3);
LABEL_43:
          *(void *)uint64_t v32 = v21;
          if (!v21) {
            goto LABEL_57;
          }
LABEL_44:
          if (sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_57:
        }
          *(void *)uint64_t v32 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v32;
    }
  }
}

unsigned char *sub_12AAE50(uint64_t a1, unsigned char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 8) == 0)
    {
LABEL_3:
      if ((v6 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 48);
  *unint64_t v4 = 17;
  *(void *)(v4 + 1) = v7;
  v4 += 9;
  if ((v6 & 0x10) == 0)
  {
LABEL_4:
    if ((v6 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_12:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v8 = *(unsigned char *)(a1 + 56);
  *unint64_t v4 = 24;
  v4[1] = v8;
  v4 += 2;
  if ((v6 & 2) == 0)
  {
LABEL_5:
    if ((v6 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_23;
    }
    goto LABEL_17;
  }
LABEL_16:
  unint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0) {
    goto LABEL_23;
  }
LABEL_17:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v9 = *(int *)(a1 + 60);
  *unint64_t v4 = 48;
  v4[1] = v9;
  if (v9 > 0x7F)
  {
    v4[1] = v9 | 0x80;
    unint64_t v10 = v9 >> 7;
    v4[2] = v9 >> 7;
    v4 += 3;
    if (v9 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v11 = v10 >> 14;
        v10 >>= 7;
        *v4++ = v10;
      }
      while (v11);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_23:
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    unint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    unint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*a3 - (void)v4 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    v4 += v17;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_12AB060(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x3F) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_25;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v9 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  if ((v1 & 8) != 0) {
    v2 += 9;
  }
  if ((v1 & 0x10) != 0) {
    v2 += 2;
  }
  if ((v1 & 0x20) != 0)
  {
    int v12 = *(_DWORD *)(a1 + 60);
    uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v12 >= 0) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = 11;
    }
    v2 += v14;
  }
LABEL_25:
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v2 += v18;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_12AB1CC(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      unint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_20;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    int v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      int v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_23;
    }
LABEL_20:
    uint64_t v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_24;
    }
LABEL_23:
    v3[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0)
      {
LABEL_9:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_10;
      }
LABEL_8:
      HIDWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 60);
      goto LABEL_9;
    }
LABEL_24:
    v3[2].__r_.__value_.__s.__data_[8] = *(unsigned char *)(a2 + 56);
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12AB31C()
{
  return 1;
}

void *sub_12AB324@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ResultRefinementRange.ResultRefinementRangeElement");
}

uint64_t sub_12AB334(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24A3BA8;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v5 = *(_DWORD *)(a2 + 16);
  if (v5) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  if ((v5 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  long long v6 = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v6;
  return a1;
}

void sub_12AB428()
{
}

uint64_t sub_12AB47C(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2530C00)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_12AA92C(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_12AA92C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12AB54C(uint64_t a1)
{
  sub_12AB47C(a1);

  operator delete();
}

uint64_t sub_12AB584(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_12AAA30(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_12AAA30(*(void *)(v1 + 32));
    }
  }
  if ((v2 & 0x1C) != 0)
  {
    *(void *)(v1 + 40) = 0;
    *(void *)(v1 + 48) = 0;
    *(void *)(v1 + 56) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_12AB604(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v22 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v22, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v22 + 1;
    unsigned int v9 = *v22;
    if (*v22 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v22, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v22 + 2;
      }
    }
    uint64_t v22 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        int v12 = *(void **)(a1 + 24);
        if (v12) {
          goto LABEL_20;
        }
        uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v13 = (void *)*v13;
        }
        int v12 = sub_12BC468((uint64_t)v13);
        *(void *)(a1 + 24) = v12;
        goto LABEL_19;
      case 2u:
        if (v9 != 18) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        int v12 = *(void **)(a1 + 32);
        if (!v12)
        {
          std::string::size_type v14 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            std::string::size_type v14 = (void *)*v14;
          }
          int v12 = sub_12BC468((uint64_t)v14);
          *(void *)(a1 + 32) = v12;
LABEL_19:
          uint64_t v8 = v22;
        }
LABEL_20:
        uint64_t v15 = (char *)sub_12AB85C(a3, (uint64_t)v12, (unsigned __int8 *)v8);
        goto LABEL_35;
      case 3u:
        if (v9 != 25) {
          goto LABEL_28;
        }
        uint64_t v17 = *(void *)v8;
        uint64_t v16 = v8 + 8;
        v5 |= 4u;
        *(void *)(a1 + 40) = v17;
        goto LABEL_27;
      case 4u:
        if (v9 != 33) {
          goto LABEL_28;
        }
        uint64_t v18 = *(void *)v8;
        uint64_t v16 = v8 + 8;
        v5 |= 8u;
        *(void *)(a1 + 48) = v18;
        goto LABEL_27;
      case 5u:
        if (v9 != 41) {
          goto LABEL_28;
        }
        uint64_t v19 = *(void *)v8;
        uint64_t v16 = v8 + 8;
        v5 |= 0x10u;
        *(void *)(a1 + 56) = v19;
LABEL_27:
        uint64_t v22 = v16;
        goto LABEL_36;
      default:
LABEL_28:
        if (v9) {
          BOOL v20 = (v9 & 7) == 4;
        }
        else {
          BOOL v20 = 1;
        }
        if (!v20)
        {
          if (*v7)
          {
            char v21 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            char v21 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v22;
          }
          uint64_t v15 = (char *)sub_1885AC0(v9, v21, v8, a3);
LABEL_35:
          uint64_t v22 = v15;
          if (!v15) {
            goto LABEL_41;
          }
LABEL_36:
          if (sub_11947B8((uint64_t)a3, &v22, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_41:
        }
          uint64_t v22 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v22;
    }
  }
}

uint64_t sub_12AB85C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12AAAF4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_12AB8EC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_12AAE50(v7, v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  *char v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    int v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    int v12 = v4 + 2;
  }
  char v4 = sub_12AAE50(v10, v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }
LABEL_19:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 40);
  *char v4 = 25;
  *(void *)(v4 + 1) = v13;
  v4 += 9;
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_28;
    }
    goto LABEL_25;
  }
LABEL_22:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v14 = *(void *)(a1 + 48);
  *char v4 = 33;
  *(void *)(v4 + 1) = v14;
  v4 += 9;
  if ((v6 & 0x10) != 0)
  {
LABEL_25:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v15 = *(void *)(a1 + 56);
    *char v4 = 41;
    *(void *)(v4 + 1) = v15;
    v4 += 9;
  }
LABEL_28:
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_12ABB28(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x1F) == 0)
  {
    uint64_t result = 0;
    goto LABEL_15;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v5 = sub_12AB060(*(void *)(a1 + 24));
  uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v6 = sub_12AB060(*(void *)(a1 + 32));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v7 = v3 + 9;
  if ((v2 & 4) == 0) {
    uint64_t v7 = v3;
  }
  if ((v2 & 8) != 0) {
    v7 += 9;
  }
  if ((v2 & 0x10) != 0) {
    uint64_t result = v7 + 9;
  }
  else {
    uint64_t result = v7;
  }
LABEL_15:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    result += v10;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_12ABC20(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v8 = (void *)*v8;
        }
        std::string::pointer data = (std::string *)sub_12BC468((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v9 = &off_2530BC0;
      }
      uint64_t result = sub_12AB1CC(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_29;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        int v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_12BC468((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_2530BC0;
    }
    uint64_t result = sub_12AB1CC(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_30;
    }
LABEL_29:
    v3[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      v3[2].__r_.__value_.__l.__size_ = *(void *)(a2 + 56);
      goto LABEL_8;
    }
LABEL_30:
    v3[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12ABD60()
{
  return 1;
}

void *sub_12ABD68@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ResultRefinementRange.ResultRefinementRangeContinuous");
}

uint64_t sub_12ABD78(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24A3C28;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (std::string *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C4C8C(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

void sub_12ABE6C(_Unwind_Exception *a1)
{
  sub_12C46E8(v3);
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_12ABEB0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C46E8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12ABF30(void *a1)
{
  sub_12ABEB0(a1);

  operator delete();
}

uint64_t sub_12ABF68(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_12AAA30(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if ((*(unsigned char *)(v1 + 16) & 3) != 0) {
    *(void *)(v1 + 48) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_12ABFF8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v32 + 1;
    unsigned int v9 = *v32;
    if (*v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v32 + 2;
      }
    }
    uint64_t v32 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 2u;
      uint64_t v16 = v8 + 1;
      int v17 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_26;
      }
      int v18 = *v16;
      int v17 = v17 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        uint64_t v16 = v8 + 2;
LABEL_26:
        uint64_t v32 = v16;
        *(_DWORD *)(a1 + 52) = v17;
        goto LABEL_44;
      }
      uint64_t v28 = (char *)sub_188C0D0((uint64_t)v8, v17);
      uint64_t v32 = v28;
      *(_DWORD *)(a1 + 52) = v29;
      if (!v28) {
        goto LABEL_49;
      }
      goto LABEL_44;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 1u;
    uint64_t v19 = v8 + 1;
    int v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    int v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_31:
      uint64_t v32 = v19;
      *(_DWORD *)(a1 + 48) = v20;
      goto LABEL_44;
    }
    unint64_t v30 = (char *)sub_188C0D0((uint64_t)v8, v20);
    uint64_t v32 = v30;
    *(_DWORD *)(a1 + 48) = v31;
    if (!v30) {
      goto LABEL_49;
    }
LABEL_44:
    if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 10)
  {
    uint64_t v22 = v8 - 1;
    while (1)
    {
      unint64_t v23 = (unsigned __int8 *)(v22 + 1);
      uint64_t v32 = v22 + 1;
      int v24 = *(_DWORD **)(a1 + 40);
      if (v24 && (uint64_t v25 = *(int *)(a1 + 32), (int)v25 < *v24))
      {
        *(_DWORD *)(a1 + 32) = v25 + 1;
        uint64_t v26 = *(void *)&v24[2 * v25 + 2];
      }
      else
      {
        uint64_t v27 = sub_12BC468(*(void *)(a1 + 24));
        uint64_t v26 = sub_188CDC8(a1 + 24, (uint64_t)v27);
        unint64_t v23 = (unsigned __int8 *)v32;
      }
      uint64_t v22 = (char *)sub_12AB85C(a3, v26, v23);
      uint64_t v32 = v22;
      if (!v22) {
        goto LABEL_49;
      }
      if (*(void *)a3 <= (unint64_t)v22 || *v22 != 10) {
        goto LABEL_44;
      }
    }
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v32;
    }
    uint64_t v32 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v32) {
      goto LABEL_49;
    }
    goto LABEL_44;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_49:
  uint64_t v32 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v32;
}

char *sub_12AC280(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_12AAE50(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if (v11)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v12 = *(_DWORD *)(a1 + 48);
    *__dst = 16;
    __dst[1] = v12;
    if (v12 > 0x7F)
    {
      __dst[1] = v12 | 0x80;
      unsigned int v13 = v12 >> 7;
      __dst[2] = v12 >> 7;
      __dst += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v14 = v13 >> 14;
          v13 >>= 7;
          *__dst++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v11 & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v15 = *(_DWORD *)(a1 + 52);
    *__dst = 24;
    __dst[1] = v15;
    if (v15 > 0x7F)
    {
      __dst[1] = v15 | 0x80;
      unsigned int v16 = v15 >> 7;
      __dst[2] = v15 >> 7;
      __dst += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v17 = v16 >> 14;
          v16 >>= 7;
          *__dst++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return __dst;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    int v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    int v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*a3 - (void)__dst >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(__dst, v21, (int)v22);
    __dst += v23;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, __dst);
}

uint64_t sub_12AC4C0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12AB060(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8) {
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0) {
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 52) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_12AC5CC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_12C4C8C(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9) {
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    }
    if ((v9 & 2) != 0) {
      HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12AC6CC()
{
  return 1;
}

void *sub_12AC6D4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ResultRefinementRange.ResultRefinementRangeDiscrete");
}

uint64_t sub_12AC6E4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24A3CA8;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    int v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  if ((v6 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  return a1;
}

void sub_12AC808()
{
}

uint64_t sub_12AC86C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2530C78)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_12AB47C(v6);
      operator delete();
    }
    int v7 = *(void **)(a1 + 40);
    if (v7)
    {
      sub_12ABEB0(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12AC958(uint64_t a1)
{
  sub_12AC86C(a1);

  operator delete();
}

uint64_t sub_12AC990(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_14;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_14;
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  *(unsigned char *)unint64_t v5 = 0;
  *(unsigned char *)(v5 + 23) = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_14:
  uint64_t result = sub_12AB584(*(void *)(result + 32));
  if ((v2 & 4) != 0) {
LABEL_5:
  }
    uint64_t result = sub_12ABF68(*(void *)(v1 + 40));
LABEL_6:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_12ACA40(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v28 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
    return *(void *)v28;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    int v7 = (unsigned __int8 *)(*(void *)v28 + 1);
    unsigned int v8 = **(unsigned char **)v28;
    if ((char)**(unsigned char **)v28 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        int v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v28, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (unsigned __int8 *)(*(void *)v28 + 2);
      }
    }
    *(void *)uint64_t v28 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_32;
        }
        unint64_t v11 = (char *)(v7 + 1);
        unint64_t v12 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          *(void *)uint64_t v28 = sub_188C138((uint64_t)v7, (v14 - 128));
          if (!*(void *)v28) {
            return 0;
          }
          unint64_t v12 = v26;
        }
        else
        {
          unint64_t v11 = (char *)(v7 + 2);
LABEL_13:
          *(void *)uint64_t v28 = v11;
        }
        if (v12 > 2)
        {
          if (*v6) {
            uint64_t v27 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v12, v27);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 48) = v12;
        }
        goto LABEL_40;
      case 2u:
        if (v8 != 18) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        unsigned int v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unsigned int v16 = (uint64_t *)*v16;
        }
        unsigned int v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
        uint64_t v18 = (void *)sub_188C244(v17, *(char **)v28, (uint64_t)a3);
        goto LABEL_39;
      case 3u:
        if (v8 != 26) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 32);
        if (!v19)
        {
          unint64_t v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v20 = (void *)*v20;
          }
          sub_12BC4F4((uint64_t)v20);
          uint64_t v19 = v21;
          *(void *)(a1 + 32) = v21;
          int v7 = *(unsigned __int8 **)v28;
        }
        uint64_t v18 = sub_12ACD20(a3, v19, v7);
        goto LABEL_39;
      case 4u:
        if (v8 != 34) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v22 = *(void **)(a1 + 40);
        if (!v22)
        {
          uint64_t v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v23 = (void *)*v23;
          }
          uint64_t v22 = sub_12BC574((uint64_t)v23);
          *(void *)(a1 + 40) = v22;
          int v7 = *(unsigned __int8 **)v28;
        }
        uint64_t v18 = sub_12ACDB0(a3, (uint64_t)v22, v7);
        goto LABEL_39;
      default:
LABEL_32:
        if (v8) {
          BOOL v24 = (v8 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v6)
          {
            uint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v7 = *(unsigned __int8 **)v28;
          }
          uint64_t v18 = sub_1885AC0(v8, v25, (char *)v7, a3);
LABEL_39:
          *(void *)uint64_t v28 = v18;
          if (!v18) {
            return 0;
          }
LABEL_40:
          if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
            return *(void *)v28;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v28;
    }
  }
}

char *sub_12ACD20(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12AB604(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12ACDB0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12ABFF8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_12ACE40(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 48);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_25;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  *char v4 = 26;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    unint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    unint64_t v12 = v4 + 2;
  }
  char v4 = sub_12AB8EC(v10, (unint64_t)v12, a3);
  if ((v6 & 4) != 0)
  {
LABEL_19:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 40);
    *char v4 = 34;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    char v4 = sub_12AC280(v13, v15, a3);
  }
LABEL_25:
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_12AD068(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_18;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_12ABB28(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    uint64_t v8 = sub_12AC4C0(*(void *)(a1 + 40));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0) {
      goto LABEL_18;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  int v9 = *(_DWORD *)(a1 + 48);
  if (v9 < 0) {
    uint64_t v10 = 11;
  }
  else {
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v10;
LABEL_18:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v3 += v14;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_12AD1C0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      int v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        int v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_23;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (void *)*v12;
      }
      sub_12BC4F4((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      unint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      unint64_t v13 = &off_2530C00;
    }
    uint64_t result = sub_12ABC20(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
      goto LABEL_7;
    }
LABEL_23:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    uint64_t v14 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
    if (!v14)
    {
      std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = (std::string *)sub_12BC574((uint64_t)v16);
      v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v14;
    }
    if (*(void *)(a2 + 40)) {
      unsigned int v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      unsigned int v17 = &off_2530C40;
    }
    uint64_t result = sub_12AC5CC(v14, (uint64_t)v17);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12AD320()
{
  return 1;
}

void *sub_12AD328@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ResultRefinementRange");
}

double sub_12AD338(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)a1 = off_24A3D28;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  return result;
}

uint64_t sub_12AD378(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24A3D28;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  if ((v6 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  return a1;
}

void sub_12AD49C()
{
}

uint64_t sub_12AD504(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2530CB0)
  {
    if (*(void *)(a1 + 32))
    {
      sub_145FE08();
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 40);
    if (v6)
    {
      sub_12A8F74(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12AD5F0(uint64_t a1)
{
  sub_12AD504(a1);

  operator delete();
}

uint64_t sub_12AD628(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_16;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_16;
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  *(unsigned char *)unint64_t v5 = 0;
  *(unsigned char *)(v5 + 23) = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_16:
  double result = sub_1369BB4(*(void *)(result + 32));
  if ((v2 & 4) != 0) {
LABEL_5:
  }
    double result = sub_12A907C(*(void *)(v1 + 40));
LABEL_6:
  if ((v2 & 0x78) != 0)
  {
    *(void *)(v1 + 48) = 0;
    *(void *)(v1 + 56) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_12AD6E0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v43 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v43, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v43 + 1);
    unsigned int v9 = **(unsigned char **)v43;
    if ((char)**(unsigned char **)v43 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v43, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v43 + 2);
      }
    }
    *(void *)uint64_t v43 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_49;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (std::string *)sub_1880F84((void *)(a1 + 24), v13);
        std::string::size_type v15 = (void *)sub_188C244(v14, *(char **)v43, (uint64_t)a3);
        goto LABEL_56;
      case 2u:
        if (v9 != 16) {
          goto LABEL_49;
        }
        v5 |= 8u;
        uint64_t v16 = (char *)(v8 + 1);
        uint64_t v17 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v18 = *v16;
        uint64_t v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v35 = sub_188C138((uint64_t)v8, v17);
          *(void *)uint64_t v43 = v35;
          *(unsigned char *)(a1 + 48) = v36 != 0;
          if (!v35) {
            goto LABEL_79;
          }
        }
        else
        {
          uint64_t v16 = (char *)(v8 + 2);
LABEL_17:
          *(void *)uint64_t v43 = v16;
          *(unsigned char *)(a1 + 48) = v17 != 0;
        }
        goto LABEL_57;
      case 3u:
        if (v9 != 26) {
          goto LABEL_49;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void **)(a1 + 32);
        if (!v19)
        {
          uint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v20 = (void *)*v20;
          }
          uint64_t v19 = sub_1478C60((uint64_t)v20);
          *(void *)(a1 + 32) = v19;
          uint64_t v8 = *(unsigned __int8 **)v43;
        }
        std::string::size_type v15 = sub_129760C(a3, (uint64_t)v19, v8);
        goto LABEL_56;
      case 4u:
        if (v9 != 34) {
          goto LABEL_49;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v21 = *(void *)(a1 + 40);
        if (!v21)
        {
          uint64_t v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v22 = (void *)*v22;
          }
          uint64_t v21 = sub_12BC360((uint64_t)v22);
          *(void *)(a1 + 40) = v21;
          uint64_t v8 = *(unsigned __int8 **)v43;
        }
        std::string::size_type v15 = sub_12AA0D8(a3, v21, v8);
        goto LABEL_56;
      case 5u:
        if (v9 != 40) {
          goto LABEL_49;
        }
        uint64_t v23 = (char *)(v8 + 1);
        unint64_t v24 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_34;
        }
        int v25 = *v23;
        int v26 = v24 + (v25 << 7);
        unint64_t v24 = (v26 - 128);
        if (v25 < 0)
        {
          *(void *)uint64_t v43 = sub_188C138((uint64_t)v8, (v26 - 128));
          if (!*(void *)v43) {
            goto LABEL_79;
          }
          unint64_t v24 = v37;
        }
        else
        {
          uint64_t v23 = (char *)(v8 + 2);
LABEL_34:
          *(void *)uint64_t v43 = v23;
        }
        if (v24 <= 1)
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 52) = v24;
          goto LABEL_57;
        }
        if (*v7) {
          unint64_t v41 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unint64_t v41 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v42 = 5;
        goto LABEL_73;
      case 6u:
        if (v9 != 48) {
          goto LABEL_49;
        }
        uint64_t v27 = (char *)(v8 + 1);
        unint64_t v24 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_41;
        }
        int v28 = *v27;
        int v29 = v24 + (v28 << 7);
        unint64_t v24 = (v29 - 128);
        if (v28 < 0)
        {
          *(void *)uint64_t v43 = sub_188C138((uint64_t)v8, (v29 - 128));
          if (!*(void *)v43) {
            goto LABEL_79;
          }
          unint64_t v24 = v38;
        }
        else
        {
          uint64_t v27 = (char *)(v8 + 2);
LABEL_41:
          *(void *)uint64_t v43 = v27;
        }
        if (sub_13942C0(v24))
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 56) = v24;
        }
        else
        {
          if (*v7) {
            unint64_t v41 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v41 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v42 = 6;
LABEL_73:
          sub_188C020(v42, v24, v41);
        }
        goto LABEL_57;
      case 7u:
        if (v9 != 56) {
          goto LABEL_49;
        }
        v5 |= 0x40u;
        unint64_t v30 = (char *)(v8 + 1);
        int v31 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_48;
        }
        int v32 = *v30;
        int v31 = v31 + (v32 << 7) - 128;
        if (v32 < 0)
        {
          uint64_t v39 = sub_188C0D0((uint64_t)v8, v31);
          *(void *)uint64_t v43 = v39;
          *(_DWORD *)(a1 + 60) = v40;
          if (!v39) {
            goto LABEL_79;
          }
        }
        else
        {
          unint64_t v30 = (char *)(v8 + 2);
LABEL_48:
          *(void *)uint64_t v43 = v30;
          *(_DWORD *)(a1 + 60) = v31;
        }
        goto LABEL_57;
      default:
LABEL_49:
        if (v9) {
          BOOL v33 = (v9 & 7) == 4;
        }
        else {
          BOOL v33 = 1;
        }
        if (!v33)
        {
          if (*v7)
          {
            unint64_t v34 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v43;
          }
          std::string::size_type v15 = sub_1885AC0(v9, v34, (char *)v8, a3);
LABEL_56:
          *(void *)uint64_t v43 = v15;
          if (!v15) {
            goto LABEL_79;
          }
LABEL_57:
          if (sub_11947B8((uint64_t)a3, (char **)v43, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_79:
        }
          *(void *)uint64_t v43 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v43;
    }
  }
}

char *sub_12ADB40(uint64_t a1, char *__dst, unint64_t *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 8) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v7 = *(unsigned char *)(a1 + 48);
  *char v4 = 16;
  v4[1] = v7;
  v4 += 2;
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_11:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v8 = *(void *)(a1 + 32);
  *char v4 = 26;
  unsigned int v9 = *(_DWORD *)(v8 + 44);
  v4[1] = v9;
  if (v9 > 0x7F) {
    unsigned int v10 = sub_188A9CC(v9, v4 + 1);
  }
  else {
    unsigned int v10 = v4 + 2;
  }
  char v4 = sub_1460138(v8, v10, a3);
  if ((v6 & 4) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_29;
    }
    goto LABEL_23;
  }
LABEL_17:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v11 = *(void *)(a1 + 40);
  *char v4 = 34;
  unsigned int v12 = *(_DWORD *)(v11 + 20);
  v4[1] = v12;
  if (v12 > 0x7F) {
    unint64_t v13 = sub_188A9CC(v12, v4 + 1);
  }
  else {
    unint64_t v13 = v4 + 2;
  }
  char v4 = sub_12A9478(v11, (unint64_t)v13, a3);
  if ((v6 & 0x10) != 0)
  {
LABEL_23:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v14 = *(int *)(a1 + 52);
    *char v4 = 40;
    v4[1] = v14;
    if (v14 > 0x7F)
    {
      v4[1] = v14 | 0x80;
      unint64_t v15 = v14 >> 7;
      v4[2] = v14 >> 7;
      v4 += 3;
      if (v14 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v16 = v15 >> 14;
          v15 >>= 7;
          *v4++ = v15;
        }
        while (v16);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_29:
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v17 = *(int *)(a1 + 56);
    *char v4 = 48;
    v4[1] = v17;
    if (v17 > 0x7F)
    {
      v4[1] = v17 | 0x80;
      unint64_t v18 = v17 >> 7;
      v4[2] = v17 >> 7;
      v4 += 3;
      if (v17 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v19 = v18 >> 14;
          v18 >>= 7;
          *v4++ = v18;
        }
        while (v19);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v20 = *(_DWORD *)(a1 + 60);
    *char v4 = 56;
    v4[1] = v20;
    if (v20 > 0x7F)
    {
      v4[1] = v20 | 0x80;
      unsigned int v21 = v20 >> 7;
      v4[2] = v20 >> 7;
      v4 += 3;
      if (v20 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v22 = v21 >> 14;
          v21 >>= 7;
          *v4++ = v21;
        }
        while (v22);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if ((v23 & 1) == 0) {
    return v4;
  }
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v25 + 31) < 0)
  {
    int v26 = *(void **)(v25 + 8);
    uint64_t v27 = *(void *)(v25 + 16);
  }
  else
  {
    int v26 = (void *)(v25 + 8);
    LODWORD(v27) = *(unsigned __int8 *)(v25 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v27)
  {
    uint64_t v28 = (int)v27;
    memcpy(v4, v26, (int)v27);
    v4 += v28;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v26, v27, v4);
}

uint64_t sub_12ADEA0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x7F) == 0)
  {
    uint64_t result = 0;
    goto LABEL_19;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v8 = sub_1460320(*(void *)(a1 + 32));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  uint64_t v7 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    uint64_t v7 = v6;
  }
  uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    uint64_t v9 = sub_12A9674(*(void *)(a1 + 40));
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  if ((v2 & 8) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
  if ((v2 & 0x10) != 0)
  {
    int v11 = *(_DWORD *)(a1 + 52);
    uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v11 >= 0) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 11;
    }
    result += v13;
    if ((v2 & 0x20) == 0)
    {
LABEL_17:
      if ((v2 & 0x40) == 0) {
        goto LABEL_19;
      }
      goto LABEL_18;
    }
  }
  else if ((v2 & 0x20) == 0)
  {
    goto LABEL_17;
  }
  int v14 = *(_DWORD *)(a1 + 56);
  uint64_t v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v14 >= 0) {
    uint64_t v16 = v15;
  }
  else {
    uint64_t v16 = 11;
  }
  result += v16;
  if ((v2 & 0x40) != 0) {
LABEL_18:
  }
    result += ((9 * (__clz(*(_DWORD *)(a1 + 60) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_19:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v17 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    result += v18;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_12AE060(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x7F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_26;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void **)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_1478C60((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_2539400;
    }
    sub_136AC4C((uint64_t)v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_34;
    }
LABEL_26:
    *(_DWORD *)(a1 + 16) |= 4u;
    int v14 = *(std::string **)(a1 + 40);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      int v14 = (std::string *)sub_12BC360((uint64_t)v16);
      *(void *)(a1 + 40) = v14;
    }
    if (*(void *)(a2 + 40)) {
      unint64_t v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      unint64_t v17 = &off_2530B58;
    }
    sub_12A9780(v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_35;
    }
LABEL_34:
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_36;
    }
LABEL_35:
    *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0)
      {
LABEL_10:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_11;
      }
LABEL_9:
      *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
      goto LABEL_10;
    }
LABEL_36:
    *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
    if ((v4 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_12AE1F0(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_12AD628(a1);
    sub_12AE060(a1, a2);
  }
}

uint64_t sub_12AE23C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_136AEA0(*(void *)(a1 + 32));
  if (result) {
    return 1;
  }
  return result;
}

__n128 sub_12AE268(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v2;
  LODWORD(v2) = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a2 + 16) = v2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a2 + 32) = v4;
  *(void *)(a2 + 40) = v5;
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  __n128 result = *(__n128 *)(a2 + 48);
  *(__n128 *)(a1 + 48) = result;
  *(void *)(a2 + 48) = v6;
  *(void *)(a2 + 56) = v7;
  return result;
}

void *sub_12AE2BC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ResultRefinementMultiSelect.ResultRefinementMultiSelectElement");
}

uint64_t sub_12AE2CC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24A3DA8;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C4D18(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  int v12 = *(_DWORD *)(a2 + 16);
  if (v12)
  {
    uint64_t v13 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v13 = (uint64_t *)*v13;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v13);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 56) = &qword_2550250;
  if ((v12 & 2) != 0)
  {
    int v14 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v14 = (uint64_t *)*v14;
    }
    sub_1881DF4((std::string **)(a1 + 56), (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL), v14);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 64) = &qword_2550250;
  if ((v12 & 4) != 0)
  {
    uint64_t v15 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    sub_1881DF4((std::string **)(a1 + 64), (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL), v15);
  }
  uint64_t v16 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = v16;
  return a1;
}

void sub_12AE460(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_12AE4A4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  sub_12C4768((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12AE57C(uint64_t a1)
{
  sub_12AE4A4(a1);

  operator delete();
}

uint64_t sub_12AE5B4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      __n128 result = sub_12AD628(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 7) != 0)
  {
    if ((v5 & 1) == 0)
    {
      if ((v5 & 2) == 0) {
        goto LABEL_8;
      }
LABEL_14:
      unint64_t v7 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v7 + 23) < 0)
      {
        **(unsigned char **)unint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
        if ((v5 & 4) == 0) {
          goto LABEL_21;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v7 = 0;
        *(unsigned char *)(v7 + 23) = 0;
        if ((v5 & 4) == 0) {
          goto LABEL_21;
        }
      }
      goto LABEL_18;
    }
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_14;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_14;
      }
    }
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_21;
    }
LABEL_18:
    unint64_t v8 = *(void *)(v1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
    }
  }
LABEL_21:
  if ((v5 & 0x38) != 0)
  {
    *(unsigned char *)(v1 + 80) = 0;
    *(void *)(v1 + 72) = 0;
  }
  char v10 = *(unsigned char *)(v1 + 8);
  uint64_t v9 = v1 + 8;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

uint64_t sub_12AE6E8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v43 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v43, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (char *)(*(void *)v43 + 1);
    unsigned int v9 = **(unsigned char **)v43;
    if ((char)**(unsigned char **)v43 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180(*(uint64_t *)v43, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (char *)(*(void *)v43 + 2);
      }
    }
    *(void *)uint64_t v43 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_49;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 48);
        goto LABEL_48;
      case 2u:
        if (v9 != 18) {
          goto LABEL_49;
        }
        uint64_t v15 = v8 - 1;
        while (1)
        {
          uint64_t v16 = (unsigned __int8 *)(v15 + 1);
          *(void *)uint64_t v43 = v15 + 1;
          unint64_t v17 = *(_DWORD **)(a1 + 40);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 32) = v18 + 1;
            uint64_t v19 = *(void *)&v17[2 * v18 + 2];
          }
          else
          {
            sub_12BC698(*(void *)(a1 + 24));
            uint64_t v19 = sub_188CDC8(a1 + 24, v20);
            uint64_t v16 = *(unsigned __int8 **)v43;
          }
          uint64_t v15 = (char *)sub_12AEB1C(a3, v19, v16);
          *(void *)uint64_t v43 = v15;
          if (!v15) {
            goto LABEL_72;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
            goto LABEL_57;
          }
        }
      case 3u:
        if (v9 != 24) {
          goto LABEL_49;
        }
        v5 |= 8u;
        unsigned int v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v37 = sub_188C0D0((uint64_t)v8, v22);
          *(void *)uint64_t v43 = v37;
          *(_DWORD *)(a1 + 72) = v38;
          if (!v37) {
            goto LABEL_72;
          }
        }
        else
        {
          unsigned int v21 = v8 + 2;
LABEL_27:
          *(void *)uint64_t v43 = v21;
          *(_DWORD *)(a1 + 72) = v22;
        }
        goto LABEL_57;
      case 4u:
        if (v9 != 32) {
          goto LABEL_49;
        }
        unint64_t v24 = v8 + 1;
        unint64_t v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_32;
        }
        int v26 = *v24;
        int v27 = v25 + (v26 << 7);
        unint64_t v25 = (v27 - 128);
        if (v26 < 0)
        {
          *(void *)uint64_t v43 = sub_188C138((uint64_t)v8, (v27 - 128));
          if (!*(void *)v43) {
            goto LABEL_72;
          }
          unint64_t v25 = v39;
        }
        else
        {
          unint64_t v24 = v8 + 2;
LABEL_32:
          *(void *)uint64_t v43 = v24;
        }
        if (v25 > 1)
        {
          if (*v7) {
            int v42 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v42 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(4, v25, v42);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 76) = v25;
        }
        goto LABEL_57;
      case 5u:
        if (v9 != 40) {
          goto LABEL_49;
        }
        v5 |= 0x20u;
        uint64_t v28 = v8 + 1;
        uint64_t v29 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_39;
        }
        int v30 = *v28;
        uint64_t v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          uint64_t v40 = sub_188C138((uint64_t)v8, v29);
          *(void *)uint64_t v43 = v40;
          *(unsigned char *)(a1 + 80) = v41 != 0;
          if (!v40) {
            goto LABEL_72;
          }
        }
        else
        {
          uint64_t v28 = v8 + 2;
LABEL_39:
          *(void *)uint64_t v43 = v28;
          *(unsigned char *)(a1 + 80) = v29 != 0;
        }
        goto LABEL_57;
      case 6u:
        if (v9 != 50) {
          goto LABEL_49;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v31 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
        if (v31) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 56);
        goto LABEL_48;
      case 7u:
        if (v9 != 58) {
          goto LABEL_49;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v32 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
        if (v32) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 64);
LABEL_48:
        BOOL v33 = (std::string *)sub_1880F84(v14, v13);
        unint64_t v34 = (void *)sub_188C244(v33, *(char **)v43, (uint64_t)a3);
        goto LABEL_56;
      default:
LABEL_49:
        if (v9) {
          BOOL v35 = (v9 & 7) == 4;
        }
        else {
          BOOL v35 = 1;
        }
        if (!v35)
        {
          if (*v7)
          {
            uint64_t v36 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(char **)v43;
          }
          unint64_t v34 = sub_1885AC0(v9, v36, v8, a3);
LABEL_56:
          *(void *)uint64_t v43 = v34;
          if (!v34) {
            goto LABEL_72;
          }
LABEL_57:
          if (sub_11947B8((uint64_t)a3, (char **)v43, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_72:
        }
          *(void *)uint64_t v43 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v43;
    }
  }
}

uint64_t sub_12AEB1C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12AD6E0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12AEBAC(uint64_t a1, char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v7 = *(_DWORD *)(a1 + 32);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v10 = *(_DWORD *)(v9 + 20);
      v4[1] = v10;
      if (v10 > 0x7F) {
        unsigned int v11 = sub_188A9CC(v10, v4 + 1);
      }
      else {
        unsigned int v11 = v4 + 2;
      }
      uint64_t v4 = sub_12ADB40(v9, v11, a3);
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v12 = *(_DWORD *)(a1 + 72);
    *uint64_t v4 = 24;
    v4[1] = v12;
    if (v12 > 0x7F)
    {
      v4[1] = v12 | 0x80;
      unsigned int v13 = v12 >> 7;
      v4[2] = v12 >> 7;
      v4 += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v14 = v13 >> 14;
          v13 >>= 7;
          *v4++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v15 = *(int *)(a1 + 76);
    *uint64_t v4 = 32;
    v4[1] = v15;
    if (v15 > 0x7F)
    {
      v4[1] = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      v4[2] = v15 >> 7;
      v4 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *v4++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v20 = *(unsigned char *)(a1 + 80);
    *uint64_t v4 = 40;
    v4[1] = v20;
    v4 += 2;
    if ((v6 & 2) == 0)
    {
LABEL_27:
      if ((v6 & 4) == 0) {
        goto LABEL_29;
      }
      goto LABEL_28;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_27;
  }
  uint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_28:
  }
    uint64_t v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_29:
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_12AEE90(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12ADEA0(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0x3F) == 0) {
    goto LABEL_32;
  }
  if (v8)
  {
    unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_22;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  unint64_t v12 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  uint64_t v14 = *(void *)(v12 + 8);
  if ((v13 & 0x80u) == 0) {
    uint64_t v14 = v13;
  }
  v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_25;
  }
LABEL_22:
  unint64_t v15 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
  uint64_t v17 = *(void *)(v15 + 8);
  if ((v16 & 0x80u) == 0) {
    uint64_t v17 = v16;
  }
  v2 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) == 0)
  {
LABEL_14:
    if ((v8 & 0x10) == 0) {
      goto LABEL_30;
    }
    goto LABEL_26;
  }
LABEL_25:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 72) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x10) == 0) {
    goto LABEL_30;
  }
LABEL_26:
  int v18 = *(_DWORD *)(a1 + 76);
  if (v18 < 0) {
    uint64_t v19 = 11;
  }
  else {
    uint64_t v19 = ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v19;
LABEL_30:
  if ((v8 & 0x20) != 0) {
    v2 += 2;
  }
LABEL_32:
  uint64_t v20 = *(void *)(a1 + 8);
  if (v20)
  {
    unint64_t v22 = v20 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v22 + 31) < 0) {
      uint64_t v23 = *(void *)(v22 + 16);
    }
    else {
      uint64_t v23 = *(unsigned __int8 *)(v22 + 31);
    }
    v2 += v23;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_12AF094(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C4D18((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0x3F) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 48), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_23;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    uint64_t v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    sub_1881DF4((std::string **)(a1 + 56), v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_26;
    }
LABEL_23:
    uint64_t v17 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v18 = *(void *)(a1 + 8);
    uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (uint64_t *)*v19;
    }
    sub_1881DF4((std::string **)(a1 + 64), v17, v19);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_27;
    }
LABEL_26:
    *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0)
      {
LABEL_12:
        *(_DWORD *)(a1 + 16) |= v9;
        goto LABEL_13;
      }
LABEL_11:
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      goto LABEL_12;
    }
LABEL_27:
    *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
    if ((v9 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_13:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_12AF254(uint64_t a1)
{
  return sub_12AF25C(a1 + 24);
}

uint64_t sub_12AF25C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if ((*(unsigned char *)(v5 + 16) & 2) != 0)
    {
      uint64_t result = sub_136AEA0(*(void *)(v5 + 32));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

void *sub_12AF2CC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ResultRefinementMultiSelect");
}

uint64_t sub_12AF2DC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if ((uint64_t (***)())a1 != &off_2530D48)
  {
    if (*(void *)(a1 + 40))
    {
      sub_145FE08();
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_12A8F74(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12AF3E4(uint64_t a1)
{
  sub_12AF2DC(a1);

  operator delete();
}

uint64_t sub_12AF41C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_7;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_15:
  unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_19;
    }
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  *(unsigned char *)unint64_t v6 = 0;
  *(unsigned char *)(v6 + 23) = 0;
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_19:
  uint64_t result = sub_1369BB4(*(void *)(result + 40));
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    uint64_t result = sub_12A907C(*(void *)(v1 + 48));
LABEL_7:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_12AF4FC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
    return *(void *)v23;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    int v7 = (unsigned __int8 *)(*(void *)v23 + 1);
    unsigned int v8 = **(unsigned char **)v23;
    if ((char)**(unsigned char **)v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        int v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (unsigned __int8 *)(*(void *)v23 + 2);
      }
    }
    *(void *)uint64_t v23 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 24);
        goto LABEL_29;
      case 2u:
        if (v8 != 18) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v14 = *(void **)(a1 + 40);
        if (!v14)
        {
          uint64_t v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v15 = (void *)*v15;
          }
          uint64_t v14 = sub_1478C60((uint64_t)v15);
          *(void *)(a1 + 40) = v14;
          int v7 = *(unsigned __int8 **)v23;
        }
        uint64_t v16 = sub_129760C(a3, (uint64_t)v14, v7);
        goto LABEL_37;
      case 3u:
        if (v8 != 26) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v17 = *(void *)(a1 + 48);
        if (!v17)
        {
          uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v18 = (void *)*v18;
          }
          uint64_t v17 = sub_12BC360((uint64_t)v18);
          *(void *)(a1 + 48) = v17;
          int v7 = *(unsigned __int8 **)v23;
        }
        uint64_t v16 = sub_12AA0D8(a3, v17, v7);
        goto LABEL_37;
      case 4u:
        if (v8 != 34) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 32);
LABEL_29:
        uint64_t v20 = (std::string *)sub_1880F84(v13, v12);
        uint64_t v16 = (void *)sub_188C244(v20, *(char **)v23, (uint64_t)a3);
        goto LABEL_37;
      default:
LABEL_30:
        if (v8) {
          BOOL v21 = (v8 & 7) == 4;
        }
        else {
          BOOL v21 = 1;
        }
        if (!v21)
        {
          if (*v6)
          {
            unint64_t v22 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v7 = *(unsigned __int8 **)v23;
          }
          uint64_t v16 = sub_1885AC0(v8, v22, (char *)v7, a3);
LABEL_37:
          *(void *)uint64_t v23 = v16;
          if (!v16) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
            return *(void *)v23;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v23;
    }
  }
}

char *sub_12AF774(uint64_t a1, char *__dst, unint64_t *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v9 = *(void *)(a1 + 40);
  *char v4 = 18;
  unsigned int v10 = *(_DWORD *)(v9 + 44);
  v4[1] = v10;
  if (v10 > 0x7F) {
    uint64_t v11 = sub_188A9CC(v10, v4 + 1);
  }
  else {
    uint64_t v11 = v4 + 2;
  }
  char v4 = sub_1460138(v9, v11, a3);
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_15:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v12 = *(void *)(a1 + 48);
  *char v4 = 26;
  unsigned int v13 = *(_DWORD *)(v12 + 20);
  v4[1] = v13;
  if (v13 > 0x7F) {
    uint64_t v14 = sub_188A9CC(v13, v4 + 1);
  }
  else {
    uint64_t v14 = v4 + 2;
  }
  char v4 = sub_12A9478(v12, (unint64_t)v14, a3);
  if ((v6 & 2) != 0) {
LABEL_5:
  }
    char v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_6:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_12AF944(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_15;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  uint64_t v13 = sub_1460320(*(void *)(a1 + 40));
  v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0)
  {
LABEL_14:
    uint64_t v10 = sub_12A9674(*(void *)(a1 + 48));
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_15:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v14 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v3 += v15;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_12AFAAC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) == 0) {
    goto LABEL_29;
  }
  if (v4)
  {
    uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v6 = (std::string **)(a1 + 24);
    uint64_t v7 = *(void *)(a1 + 8);
    uint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
    if (v7) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_13;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v9 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
  if (v10) {
    uint64_t v11 = (uint64_t *)*v11;
  }
  sub_1881DF4((std::string **)(a1 + 32), v9, v11);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_29;
    }
    goto LABEL_21;
  }
LABEL_13:
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v12 = *(void **)(a1 + 40);
  if (!v12)
  {
    uint64_t v13 = *(void *)(a1 + 8);
    unint64_t v14 = (void *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
    if (v13) {
      unint64_t v14 = (void *)*v14;
    }
    uint64_t v12 = sub_1478C60((uint64_t)v14);
    *(void *)(a1 + 40) = v12;
  }
  if (*(void *)(a2 + 40)) {
    uint64_t v15 = *(uint64_t (****)())(a2 + 40);
  }
  else {
    uint64_t v15 = &off_2539400;
  }
  sub_136AC4C((uint64_t)v12, (uint64_t)v15);
  if ((v4 & 8) != 0)
  {
LABEL_21:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v16 = *(std::string **)(a1 + 48);
    if (!v16)
    {
      uint64_t v17 = *(void *)(a1 + 8);
      uint64_t v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        uint64_t v18 = (void *)*v18;
      }
      uint64_t v16 = (std::string *)sub_12BC360((uint64_t)v18);
      *(void *)(a1 + 48) = v16;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v19 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v19 = &off_2530B58;
    }
    sub_12A9780(v16, (uint64_t)v19);
  }
LABEL_29:
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_12AFC28(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 4) == 0) {
    return 1;
  }
  uint64_t result = sub_136AEA0(*(void *)(a1 + 40));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_12AFC54@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ResultRefinementSort.ResultRefinementSortElement");
}

uint64_t sub_12AFC64(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24A3EA8;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C4DA4(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v12 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v12);
  }
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

void sub_12AFD90(_Unwind_Exception *a1)
{
  sub_12C47E8(v3);
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_12AFDD4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_12C47E8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12AFE80(uint64_t a1)
{
  sub_12AFDD4(a1);

  operator delete();
}

uint64_t sub_12AFEB8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_12AF41C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if (v5)
  {
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
  }
  if ((v5 & 6) != 0) {
    *(void *)(v1 + 56) = 0;
  }
  char v8 = *(unsigned char *)(v1 + 8);
  uint64_t v7 = v1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_12AFF74(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v34 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v34, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    char v8 = (char *)(*(void *)v34 + 1);
    unsigned int v9 = **(unsigned char **)v34;
    if ((char)**(unsigned char **)v34 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        char v8 = (char *)sub_188C180(*(uint64_t *)v34, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = (char *)(*(void *)v34 + 2);
      }
    }
    *(void *)unint64_t v34 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (std::string *)sub_1880F84((void *)(a1 + 48), v13);
        uint64_t v15 = (void *)sub_188C244(v14, *(char **)v34, (uint64_t)a3);
        goto LABEL_40;
      case 2u:
        if (v9 != 18) {
          goto LABEL_33;
        }
        uint64_t v16 = v8 - 1;
        while (1)
        {
          uint64_t v17 = (unsigned __int8 *)(v16 + 1);
          *(void *)unint64_t v34 = v16 + 1;
          uint64_t v18 = *(_DWORD **)(a1 + 40);
          if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
          {
            *(_DWORD *)(a1 + 32) = v19 + 1;
            uint64_t v20 = *(void *)&v18[2 * v19 + 2];
          }
          else
          {
            BOOL v21 = sub_12BC7CC(*(void *)(a1 + 24));
            uint64_t v20 = sub_188CDC8(a1 + 24, (uint64_t)v21);
            uint64_t v17 = *(unsigned __int8 **)v34;
          }
          uint64_t v16 = (char *)sub_12B0274(a3, v20, v17);
          *(void *)unint64_t v34 = v16;
          if (!v16) {
            goto LABEL_50;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
            goto LABEL_41;
          }
        }
      case 3u:
        if (v9 != 24) {
          goto LABEL_33;
        }
        v5 |= 2u;
        unint64_t v22 = v8 + 1;
        int v23 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        int v24 = *v22;
        int v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v30 = sub_188C0D0((uint64_t)v8, v23);
          *(void *)unint64_t v34 = v30;
          *(_DWORD *)(a1 + 56) = v31;
          if (!v30) {
            goto LABEL_50;
          }
        }
        else
        {
          unint64_t v22 = v8 + 2;
LABEL_27:
          *(void *)unint64_t v34 = v22;
          *(_DWORD *)(a1 + 56) = v23;
        }
        goto LABEL_41;
      case 4u:
        if (v9 != 32) {
          goto LABEL_33;
        }
        v5 |= 4u;
        unint64_t v25 = v8 + 1;
        int v26 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_32;
        }
        int v27 = *v25;
        int v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          uint64_t v32 = sub_188C0D0((uint64_t)v8, v26);
          *(void *)unint64_t v34 = v32;
          *(_DWORD *)(a1 + 60) = v33;
          if (!v32) {
            goto LABEL_50;
          }
        }
        else
        {
          unint64_t v25 = v8 + 2;
LABEL_32:
          *(void *)unint64_t v34 = v25;
          *(_DWORD *)(a1 + 60) = v26;
        }
        goto LABEL_41;
      default:
LABEL_33:
        if (v9) {
          BOOL v28 = (v9 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if (*v7)
          {
            uint64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v8 = *(char **)v34;
          }
          uint64_t v15 = sub_1885AC0(v9, v29, v8, a3);
LABEL_40:
          *(void *)unint64_t v34 = v15;
          if (!v15) {
            goto LABEL_50;
          }
LABEL_41:
          if (sub_11947B8((uint64_t)a3, (char **)v34, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_50:
        }
          *(void *)unint64_t v34 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v34;
    }
  }
}

uint64_t sub_12B0274(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12AF4FC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12B0304(uint64_t a1, char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v7 = *(_DWORD *)(a1 + 32);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v10 = *(_DWORD *)(v9 + 20);
      v4[1] = v10;
      if (v10 > 0x7F) {
        unsigned int v11 = sub_188A9CC(v10, v4 + 1);
      }
      else {
        unsigned int v11 = v4 + 2;
      }
      uint64_t v4 = sub_12AF774(v9, v11, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v12 = *(_DWORD *)(a1 + 56);
    *uint64_t v4 = 24;
    v4[1] = v12;
    if (v12 > 0x7F)
    {
      v4[1] = v12 | 0x80;
      unsigned int v13 = v12 >> 7;
      v4[2] = v12 >> 7;
      v4 += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v14 = v13 >> 14;
          v13 >>= 7;
          *v4++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v15 = *(_DWORD *)(a1 + 60);
    *uint64_t v4 = 32;
    v4[1] = v15;
    if (v15 > 0x7F)
    {
      v4[1] = v15 | 0x80;
      unsigned int v16 = v15 >> 7;
      v4[2] = v15 >> 7;
      v4 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v17 = v16 >> 14;
          v16 >>= 7;
          *v4++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    BOOL v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    BOOL v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_12B0564(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12AF944(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      unint64_t v11 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v2 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v8 & 2) == 0)
      {
LABEL_12:
        if ((v8 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_13;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_12;
    }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 4) != 0) {
LABEL_13:
    }
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 60) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_14:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v14 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_12B06C0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C4DA4((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      unint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 48), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          *(_DWORD *)(a1 + 16) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_12B0800(uint64_t a1)
{
  return sub_12B0808(a1 + 24);
}

uint64_t sub_12B0808(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if ((*(unsigned char *)(v5 + 16) & 4) != 0)
    {
      uint64_t result = sub_136AEA0(*(void *)(v5 + 40));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

void *sub_12B0878@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ResultRefinementSort");
}

uint64_t sub_12B0888(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24A3F28;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    int v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  if ((v6 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 40) = 0;
  if ((v6 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  if ((v6 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  if ((v6 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  return a1;
}

void sub_12B0A54()
{
}

void *sub_12B0B00(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_12B0B84((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_12B0B84(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 24);
  uint64_t result = (void ***)(a1 + 24);
  if (v3 != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2530DC0)
  {
    if (*(void *)(a1 + 32))
    {
      sub_184B078();
      operator delete();
    }
    uint64_t v4 = *(void *)(a1 + 40);
    if (v4)
    {
      sub_15B1678(v4);
      operator delete();
    }
    if (*(void *)(a1 + 48))
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t v5 = *(void *)(a1 + 56);
    if (v5)
    {
      sub_12A1718(v5);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 64);
    if (result)
    {
      sub_12A8F74((uint64_t)result);
      operator delete();
    }
  }
  return result;
}

void sub_12B0C88(void *a1)
{
  sub_12B0B00(a1);

  operator delete();
}

uint64_t sub_12B0CC0(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x3F) == 0) {
    goto LABEL_9;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_17;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_17;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_17:
  uint64_t result = (uint64_t)sub_16CD894(*(void *)(result + 32));
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_19:
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(v1 + 48));
    if ((v2 & 0x10) == 0)
    {
LABEL_7:
      if ((v2 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_18:
  uint64_t result = (uint64_t)sub_15B16B4(*(unsigned char **)(v1 + 40));
  if ((v2 & 8) != 0) {
    goto LABEL_19;
  }
LABEL_6:
  if ((v2 & 0x10) == 0) {
    goto LABEL_7;
  }
LABEL_20:
  uint64_t result = sub_12A181C(*(void *)(v1 + 56));
  if ((v2 & 0x20) != 0) {
LABEL_8:
  }
    uint64_t result = sub_12A907C(*(void *)(v1 + 64));
LABEL_9:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 64) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_12B0DA0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v33 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
    return *(void *)v33;
  }
  int v6 = (void *)(a1 + 8);
  while (2)
  {
    int v7 = (unsigned __int8 *)(*(void *)v33 + 1);
    unsigned int v8 = **(unsigned char **)v33;
    if ((char)**(unsigned char **)v33 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        int v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v33, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (unsigned __int8 *)(*(void *)v33 + 2);
      }
    }
    *(void *)int v33 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_50;
        }
        unint64_t v11 = (char *)(v7 + 1);
        unint64_t v12 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          *(void *)int v33 = sub_188C138((uint64_t)v7, (v14 - 128));
          if (!*(void *)v33) {
            return 0;
          }
          unint64_t v12 = v31;
        }
        else
        {
          unint64_t v11 = (char *)(v7 + 2);
LABEL_13:
          *(void *)int v33 = v11;
        }
        if (v12 > 2)
        {
          if (*v6) {
            uint64_t v32 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v12, v32);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x40u;
          *(_DWORD *)(a1 + 72) = v12;
        }
        goto LABEL_58;
      case 2u:
        if (v8 != 18) {
          goto LABEL_50;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 32);
        if (!v15)
        {
          unsigned int v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unsigned int v16 = (void *)*v16;
          }
          uint64_t v15 = sub_185089C((uint64_t)v16);
          *(void *)(a1 + 32) = v15;
          int v7 = *(unsigned __int8 **)v33;
        }
        uint64_t v17 = (uint64_t)sub_12688D0(a3, v15, v7);
        goto LABEL_57;
      case 3u:
        if (v8 != 26) {
          goto LABEL_50;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v18 = *(void *)(a1 + 40);
        if (!v18)
        {
          uint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v19 = (void *)*v19;
          }
          uint64_t v18 = sub_15C19EC((uint64_t)v19);
          *(void *)(a1 + 40) = v18;
          int v7 = *(unsigned __int8 **)v33;
        }
        uint64_t v17 = (uint64_t)sub_11E1C60(a3, v18, v7);
        goto LABEL_57;
      case 4u:
        if (v8 != 34) {
          goto LABEL_50;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v20 = *(void *)(a1 + 48);
        if (!v20)
        {
          BOOL v21 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            BOOL v21 = (void *)*v21;
          }
          uint64_t v20 = sub_15C1918((uint64_t)v21);
          *(void *)(a1 + 48) = v20;
          int v7 = *(unsigned __int8 **)v33;
        }
        uint64_t v17 = (uint64_t)sub_1198F14(a3, v20, v7);
        goto LABEL_57;
      case 5u:
        if (v8 != 42) {
          goto LABEL_50;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v22 = *(void **)(a1 + 56);
        if (!v22)
        {
          uint64_t v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v23 = (void *)*v23;
          }
          uint64_t v22 = sub_12BBBC8((uint64_t)v23);
          *(void *)(a1 + 56) = v22;
          int v7 = *(unsigned __int8 **)v33;
        }
        uint64_t v17 = sub_12B117C(a3, (uint64_t)v22, v7);
        goto LABEL_57;
      case 6u:
        if (v8 != 50) {
          goto LABEL_50;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v24 = *(void *)(a1 + 8);
        unint64_t v25 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
        if (v24) {
          unint64_t v25 = (uint64_t *)*v25;
        }
        int v26 = (std::string *)sub_1880F84((void *)(a1 + 24), v25);
        uint64_t v17 = (uint64_t)sub_188C244(v26, *(char **)v33, (uint64_t)a3);
        goto LABEL_57;
      case 7u:
        if (v8 != 58) {
          goto LABEL_50;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v27 = *(void *)(a1 + 64);
        if (!v27)
        {
          BOOL v28 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            BOOL v28 = (void *)*v28;
          }
          uint64_t v27 = sub_12BC360((uint64_t)v28);
          *(void *)(a1 + 64) = v27;
          int v7 = *(unsigned __int8 **)v33;
        }
        uint64_t v17 = (uint64_t)sub_12AA0D8(a3, v27, v7);
        goto LABEL_57;
      default:
LABEL_50:
        if (v8) {
          BOOL v29 = (v8 & 7) == 4;
        }
        else {
          BOOL v29 = 1;
        }
        if (!v29)
        {
          if (*v6)
          {
            uint64_t v30 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v7 = *(unsigned __int8 **)v33;
          }
          uint64_t v17 = (uint64_t)sub_1885AC0(v8, v30, (char *)v7, a3);
LABEL_57:
          *(void *)int v33 = v17;
          if (!v17) {
            return 0;
          }
LABEL_58:
          if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
            return *(void *)v33;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v33;
    }
  }
}

uint64_t sub_12B117C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12A18D4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12B120C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 72);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    *char v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unint64_t v12 = v4 + 2;
    }
    char v4 = sub_184B3AC(v10, v12, a3);
    if ((v6 & 4) == 0)
    {
LABEL_10:
      if ((v6 & 8) == 0) {
        goto LABEL_11;
      }
      goto LABEL_27;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 40);
  *char v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  char v4 = sub_15B1A68(v13, (unint64_t)v15, a3);
  if ((v6 & 8) == 0)
  {
LABEL_11:
    if ((v6 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_33;
  }
LABEL_27:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 48);
  *char v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 44);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  char v4 = sub_15B0C0C(v16, v18, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_12:
    if ((v6 & 1) == 0) {
      goto LABEL_13;
    }
    goto LABEL_39;
  }
LABEL_33:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 56);
  *char v4 = 42;
  unsigned int v20 = *(_DWORD *)(v19 + 20);
  v4[1] = v20;
  if (v20 > 0x7F) {
    BOOL v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    BOOL v21 = v4 + 2;
  }
  char v4 = sub_12A1AC4(v19, v21, a3);
  if ((v6 & 1) == 0)
  {
LABEL_13:
    if ((v6 & 0x20) == 0) {
      goto LABEL_46;
    }
    goto LABEL_40;
  }
LABEL_39:
  char v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0) {
    goto LABEL_46;
  }
LABEL_40:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v22 = *(void *)(a1 + 64);
  *char v4 = 58;
  unsigned int v23 = *(_DWORD *)(v22 + 20);
  v4[1] = v23;
  if (v23 > 0x7F) {
    uint64_t v24 = sub_188A9CC(v23, v4 + 1);
  }
  else {
    uint64_t v24 = v4 + 2;
  }
  char v4 = sub_12A9478(v22, (unint64_t)v24, a3);
LABEL_46:
  uint64_t v25 = *(void *)(a1 + 8);
  if ((v25 & 1) == 0) {
    return v4;
  }
  unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v27 + 31) < 0)
  {
    BOOL v28 = *(void **)(v27 + 8);
    uint64_t v29 = *(void *)(v27 + 16);
  }
  else
  {
    BOOL v28 = (void *)(v27 + 8);
    LODWORD(v29) = *(unsigned __int8 *)(v27 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v29)
  {
    uint64_t v30 = (int)v29;
    memcpy(v4, v28, (int)v29);
    v4 += v30;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v28, v29, v4);
}

uint64_t sub_12B156C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x7F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_24;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_184B568(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    uint64_t v8 = sub_15B1D1C(*(void *)(a1 + 40));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_12:
      if ((v2 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_18;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v9 = sub_15B0D90(*(void *)(a1 + 48));
  v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_13:
    if ((v2 & 0x20) == 0) {
      goto LABEL_14;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t v10 = sub_12A1BDC(*(void *)(a1 + 56));
  v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_14:
    if ((v2 & 0x40) == 0) {
      goto LABEL_24;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v11 = sub_12A9674(*(void *)(a1 + 64));
  v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x40) == 0) {
    goto LABEL_24;
  }
LABEL_20:
  int v12 = *(_DWORD *)(a1 + 72);
  if (v12 < 0) {
    uint64_t v13 = 11;
  }
  else {
    uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v13;
LABEL_24:
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v3 += v17;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_12B1760(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x7F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_26;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void *)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        int v12 = (void *)*v12;
      }
      uint64_t v10 = sub_185089C((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_254D2B0;
    }
    sub_16CE3CC(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_34;
    }
LABEL_26:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v14 = *(void *)(a1 + 40);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      unint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        unint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = sub_15C19EC((uint64_t)v16);
      *(void *)(a1 + 40) = v14;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v17 = &off_253F208;
    }
    sub_15B1E3C(v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_42;
    }
LABEL_34:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v18 = *(void *)(a1 + 48);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      unsigned int v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        unsigned int v20 = (void *)*v20;
      }
      uint64_t v18 = sub_15C1918((uint64_t)v20);
      *(void *)(a1 + 48) = v18;
    }
    if (*(void *)(a2 + 48)) {
      BOOL v21 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      BOOL v21 = &off_253F1A0;
    }
    sub_15B0E24(v18, (uint64_t)v21);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_50;
    }
LABEL_42:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v22 = *(std::string **)(a1 + 56);
    if (!v22)
    {
      uint64_t v23 = *(void *)(a1 + 8);
      uint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        uint64_t v24 = (void *)*v24;
      }
      uint64_t v22 = (std::string *)sub_12BBBC8((uint64_t)v24);
      *(void *)(a1 + 56) = v22;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v25 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v25 = &off_25308B8;
    }
    sub_11D2930(v22, (uint64_t)v25);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0)
      {
LABEL_10:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_11;
      }
LABEL_9:
      *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
      goto LABEL_10;
    }
LABEL_50:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    int v26 = *(std::string **)(a1 + 64);
    if (!v26)
    {
      uint64_t v27 = *(void *)(a1 + 8);
      BOOL v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
      if (v27) {
        BOOL v28 = (void *)*v28;
      }
      int v26 = (std::string *)sub_12BC360((uint64_t)v28);
      *(void *)(a1 + 64) = v26;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v29 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      uint64_t v29 = &off_2530B58;
    }
    sub_12A9780(v26, (uint64_t)v29);
    if ((v4 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_12B19B0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_16CE508(*(void *)(a1 + 32));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_15B1FC0(*(void *)(a1 + 40));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_12B1A10@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ResultRefinementGuidesHome");
}

uint64_t sub_12B1A20(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24A3FA8;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  uint64_t v8 = *(void *)(a2 + 40);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(void *)(a1 + 40) = v8;
  return a1;
}

void sub_12B1B14()
{
}

uint64_t sub_12B1B64(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2530E10)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_12A8F74(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12B1C30(uint64_t a1)
{
  sub_12B1B64(a1);

  operator delete();
}

uint64_t sub_12B1C68(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_12A907C(*(void *)(result + 32));
  }
LABEL_7:
  if ((v2 & 0x1C) != 0)
  {
    *(_WORD *)(v1 + 48) = 0;
    *(void *)(v1 + 40) = 0;
  }
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_12B1D0C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v30 + 1);
    unsigned int v9 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v30 + 2);
      }
    }
    *(void *)uint64_t v30 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (std::string *)sub_1880F84((void *)(a1 + 24), v13);
        uint64_t v15 = (void *)sub_188C244(v14, *(char **)v30, (uint64_t)a3);
        goto LABEL_38;
      case 2u:
        if (v9 != 17) {
          goto LABEL_31;
        }
        v5 |= 4u;
        *(void *)(a1 + 40) = *(void *)v8;
        *(void *)uint64_t v30 = v8 + 8;
        goto LABEL_39;
      case 3u:
        if (v9 != 24) {
          goto LABEL_31;
        }
        v5 |= 8u;
        unint64_t v16 = (char *)(v8 + 1);
        uint64_t v17 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v18 = *v16;
        uint64_t v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v26 = sub_188C138((uint64_t)v8, v17);
          *(void *)uint64_t v30 = v26;
          *(unsigned char *)(a1 + 48) = v27 != 0;
          if (!v26) {
            goto LABEL_48;
          }
        }
        else
        {
          unint64_t v16 = (char *)(v8 + 2);
LABEL_19:
          *(void *)uint64_t v30 = v16;
          *(unsigned char *)(a1 + 48) = v17 != 0;
        }
        goto LABEL_39;
      case 4u:
        if (v9 != 34) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 32);
        if (!v19)
        {
          unsigned int v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unsigned int v20 = (void *)*v20;
          }
          uint64_t v19 = sub_12BC360((uint64_t)v20);
          *(void *)(a1 + 32) = v19;
          uint64_t v8 = *(unsigned __int8 **)v30;
        }
        uint64_t v15 = sub_12AA0D8(a3, v19, v8);
        goto LABEL_38;
      case 5u:
        if (v9 != 40) {
          goto LABEL_31;
        }
        v5 |= 0x10u;
        BOOL v21 = (char *)(v8 + 1);
        uint64_t v22 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v28 = sub_188C138((uint64_t)v8, v22);
          *(void *)uint64_t v30 = v28;
          *(unsigned char *)(a1 + 49) = v29 != 0;
          if (!v28) {
            goto LABEL_48;
          }
        }
        else
        {
          BOOL v21 = (char *)(v8 + 2);
LABEL_30:
          *(void *)uint64_t v30 = v21;
          *(unsigned char *)(a1 + 49) = v22 != 0;
        }
        goto LABEL_39;
      default:
LABEL_31:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            uint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v30;
          }
          uint64_t v15 = sub_1885AC0(v9, v25, (char *)v8, a3);
LABEL_38:
          *(void *)uint64_t v30 = v15;
          if (!v15) {
            goto LABEL_48;
          }
LABEL_39:
          if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_48:
        }
          *(void *)uint64_t v30 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v30;
    }
  }
}

unsigned char *sub_12B2008(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 40);
  *uint64_t v4 = 17;
  *(void *)(v4 + 1) = v7;
  v4 += 9;
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_11:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v8 = *(unsigned char *)(a1 + 48);
  *uint64_t v4 = 24;
  v4[1] = v8;
  v4 += 2;
  if ((v6 & 2) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_23;
    }
    goto LABEL_20;
  }
LABEL_14:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v9 = *(void *)(a1 + 32);
  *uint64_t v4 = 34;
  unsigned int v10 = *(_DWORD *)(v9 + 20);
  v4[1] = v10;
  if (v10 > 0x7F) {
    unsigned int v11 = sub_188A9CC(v10, v4 + 1);
  }
  else {
    unsigned int v11 = v4 + 2;
  }
  uint64_t v4 = sub_12A9478(v9, (unint64_t)v11, a3);
  if ((v6 & 0x10) != 0)
  {
LABEL_20:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v12 = *(unsigned char *)(a1 + 49);
    *uint64_t v4 = 40;
    v4[1] = v12;
    v4 += 2;
  }
LABEL_23:
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_12B2200(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x1F) == 0)
  {
    uint64_t result = 0;
    goto LABEL_17;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v7 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      uint64_t v7 = v6;
    }
    uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
  }
  uint64_t v8 = sub_12A9674(*(void *)(a1 + 32));
  v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  uint64_t v9 = v3 + 9;
  if ((v2 & 4) == 0) {
    uint64_t v9 = v3;
  }
  if ((v2 & 8) != 0) {
    v9 += 2;
  }
  if ((v2 & 0x10) != 0) {
    uint64_t result = v9 + 2;
  }
  else {
    uint64_t result = v9;
  }
LABEL_17:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v11 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    result += v12;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_12B230C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_24;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_12BC360((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_2530B58;
    }
    uint64_t result = sub_12A9780(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_25;
    }
LABEL_24:
    v3[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      v3[2].__r_.__value_.__s.__data_[1] = *(unsigned char *)(a2 + 49);
      goto LABEL_8;
    }
LABEL_25:
    v3[2].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 48);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12B243C()
{
  return 1;
}

void *sub_12B2444@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ResultRefinementTime");
}

uint64_t sub_12B2454(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24A4028;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  if ((v6 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 40) = 0;
  return a1;
}

void sub_12B2570()
{
}

uint64_t sub_12B25D4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2530E48)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_12A9A48(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 40);
    if (v7)
    {
      sub_12B1B64(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12B26C0(uint64_t a1)
{
  sub_12B25D4(a1);

  operator delete();
}

uint64_t sub_12B26F8(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_14;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_14;
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  *(unsigned char *)unint64_t v5 = 0;
  *(unsigned char *)(v5 + 23) = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_14:
  uint64_t result = sub_12A9B4C(*(void *)(result + 32));
  if ((v2 & 4) != 0) {
LABEL_5:
  }
    uint64_t result = sub_12B1C68(*(void *)(v1 + 40));
LABEL_6:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_12B27A4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v23 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
    return *(void *)v23;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v23 + 1);
    unsigned int v8 = **(unsigned char **)v23;
    if ((char)**(unsigned char **)v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v23 + 2);
      }
    }
    *(void *)int v23 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 4u;
      uint64_t v16 = *(void *)(a1 + 40);
      if (!v16)
      {
        uint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v17 = (void *)*v17;
        }
        uint64_t v16 = sub_12BC988((uint64_t)v17);
        *(void *)(a1 + 40) = v16;
        uint64_t v7 = *(unsigned __int8 **)v23;
      }
      uint64_t v15 = sub_12B2A4C(a3, v16, v7);
      goto LABEL_36;
    }
    if (v11 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v18 = *(void **)(a1 + 32);
    if (!v18)
    {
      uint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v19 = (void *)*v19;
      }
      uint64_t v18 = sub_12BC3E0((uint64_t)v19);
      *(void *)(a1 + 32) = v18;
      uint64_t v7 = *(unsigned __int8 **)v23;
    }
    uint64_t v15 = sub_12B29BC(a3, (uint64_t)v18, v7);
LABEL_36:
    *(void *)int v23 = v15;
    if (!v15) {
      goto LABEL_42;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
      return *(void *)v23;
    }
  }
  if (v11 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v20 = *(void *)(a1 + 8);
    BOOL v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      BOOL v21 = (uint64_t *)*v21;
    }
    uint64_t v22 = (std::string *)sub_1880F84((void *)(a1 + 24), v21);
    uint64_t v15 = (uint64_t)sub_188C244(v22, *(char **)v23, (uint64_t)a3);
    goto LABEL_36;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v23;
    }
    uint64_t v15 = (uint64_t)sub_1885AC0(v8, v14, (char *)v7, a3);
    goto LABEL_36;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v23;
  }
LABEL_42:
  *(void *)int v23 = 0;
  return *(void *)v23;
}

uint64_t sub_12B29BC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12A9BEC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12B2A4C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12B1D0C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_12B2ADC(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_18;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  *char v4 = 18;
  unsigned int v8 = *(_DWORD *)(v7 + 20);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  char v4 = sub_12AA168(v7, v9, a3);
  if ((v6 & 4) != 0)
  {
LABEL_12:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 40);
    *char v4 = 26;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    char v4 = sub_12B2008(v10, v12, a3);
  }
LABEL_18:
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_12B2C88(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_12;
  }
  if (v2)
  {
    unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    uint64_t v7 = sub_12AA4D0(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    uint64_t v8 = sub_12B2200(*(void *)(a1 + 40));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v3 += v12;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_12B2DA4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) == 0) {
    goto LABEL_25;
  }
  if (v4)
  {
    uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    uint64_t v6 = (std::string **)&result[1];
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    uint64_t v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    uint64_t result = sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
  uint64_t v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
  if (!v9)
  {
    std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
    unint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      unint64_t v11 = (void *)*v11;
    }
    uint64_t v9 = (std::string *)sub_12BC3E0((uint64_t)v11);
    v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
  }
  if (*(void *)(a2 + 32)) {
    uint64_t v12 = *(uint64_t (****)())(a2 + 32);
  }
  else {
    uint64_t v12 = &off_2530B88;
  }
  uint64_t result = sub_12AA670(v9, (uint64_t)v12);
  if ((v4 & 4) != 0)
  {
LABEL_17:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    uint64_t v13 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
    if (!v13)
    {
      std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
      unint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        unint64_t v15 = (void *)*v15;
      }
      uint64_t v13 = (std::string *)sub_12BC988((uint64_t)v15);
      v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v13;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v16 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v16 = &off_2530E10;
    }
    uint64_t result = sub_12B230C(v13, (uint64_t)v16);
  }
LABEL_25:
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12B2EE8()
{
  return 1;
}

void *sub_12B2EF0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ResultRefinementOpenOptions");
}

double sub_12B2F00(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)a1 = off_24A40A8;
  *(void *)(a1 + 8) = v3;
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 60) = 0u;
  return result;
}

uint64_t sub_12B2F3C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24A40A8;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v5 = *(_DWORD *)(a2 + 16);
  if (v5) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  if ((v5 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  if ((v5 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 40) = 0;
  if ((v5 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  if ((v5 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  if ((v5 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  return a1;
}

void sub_12B3108()
{
}

void *sub_12B31C0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_12B3244((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_12B3244(uint64_t result)
{
  if ((uint64_t (***)())result != &off_2530E78)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = *(void *)(result + 24);
    if (v2)
    {
      sub_12A9A48(v2);
      operator delete();
    }
    uint64_t v3 = v1[4];
    if (v3)
    {
      sub_12AC86C(v3);
      operator delete();
    }
    uint64_t v4 = v1[5];
    if (v4)
    {
      sub_12AE4A4(v4);
      operator delete();
    }
    uint64_t v5 = v1[6];
    if (v5)
    {
      sub_12AFDD4(v5);
      operator delete();
    }
    uint64_t v6 = (void *)v1[7];
    if (v6)
    {
      sub_12B0B00(v6);
      operator delete();
    }
    double result = v1[8];
    if (result)
    {
      sub_12B25D4(result);
      operator delete();
    }
  }
  return result;
}

void sub_12B3350(void *a1)
{
  sub_12B31C0(a1);

  operator delete();
}

uint64_t sub_12B3388(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x3F) == 0) {
    goto LABEL_9;
  }
  if (v2)
  {
    double result = sub_12A9B4C(*(void *)(result + 24));
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_15;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  double result = sub_12AC990(*(void *)(v1 + 32));
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_16:
    double result = sub_12AFEB8(*(void *)(v1 + 48));
    if ((v2 & 0x10) == 0)
    {
LABEL_7:
      if ((v2 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_15:
  double result = sub_12AE5B4(*(void *)(v1 + 40));
  if ((v2 & 8) != 0) {
    goto LABEL_16;
  }
LABEL_6:
  if ((v2 & 0x10) == 0) {
    goto LABEL_7;
  }
LABEL_17:
  double result = sub_12B0CC0(*(void *)(v1 + 56));
  if ((v2 & 0x20) != 0) {
LABEL_8:
  }
    double result = sub_12B26F8(*(void *)(v1 + 64));
LABEL_9:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 64) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_12B3444(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v33 = a2;
  if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
    return v33;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v33 + 1;
    unsigned int v8 = *v33;
    if (*v33 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v33, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v33 + 2;
      }
    }
    int v33 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_52;
        }
        unint64_t v11 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          int v33 = (char *)sub_188C138((uint64_t)v7, (v14 - 128));
          if (!v33) {
            return 0;
          }
          unint64_t v12 = v31;
        }
        else
        {
          unint64_t v11 = v7 + 2;
LABEL_13:
          int v33 = v11;
        }
        if (v12 > 6)
        {
          if (*v6) {
            uint64_t v32 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v12, v32);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x40u;
          *(_DWORD *)(a1 + 72) = v12;
        }
        goto LABEL_60;
      case 2u:
        if (v8 != 18) {
          goto LABEL_52;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        unint64_t v15 = *(void **)(a1 + 24);
        if (!v15)
        {
          uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v16 = (void *)*v16;
          }
          unint64_t v15 = sub_12BC3E0((uint64_t)v16);
          *(void *)(a1 + 24) = v15;
          uint64_t v7 = v33;
        }
        uint64_t v17 = (char *)sub_12B29BC(a3, (uint64_t)v15, (unsigned __int8 *)v7);
        goto LABEL_59;
      case 3u:
        if (v8 != 26) {
          goto LABEL_52;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 32);
        if (!v18)
        {
          uint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v19 = (void *)*v19;
          }
          uint64_t v18 = sub_12BC610((uint64_t)v19);
          *(void *)(a1 + 32) = v18;
          uint64_t v7 = v33;
        }
        uint64_t v17 = (char *)sub_12B3820(a3, v18, (unsigned __int8 *)v7);
        goto LABEL_59;
      case 4u:
        if (v8 != 34) {
          goto LABEL_52;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v20 = *(void *)(a1 + 40);
        if (!v20)
        {
          BOOL v21 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            BOOL v21 = (void *)*v21;
          }
          uint64_t v20 = sub_12BC720((uint64_t)v21);
          *(void *)(a1 + 40) = v20;
          uint64_t v7 = v33;
        }
        uint64_t v17 = (char *)sub_12B38B0(a3, v20, (unsigned __int8 *)v7);
        goto LABEL_59;
      case 5u:
        if (v8 != 42) {
          goto LABEL_52;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v22 = *(void **)(a1 + 48);
        if (!v22)
        {
          int v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v23 = (void *)*v23;
          }
          uint64_t v22 = sub_12BC854((uint64_t)v23);
          *(void *)(a1 + 48) = v22;
          uint64_t v7 = v33;
        }
        uint64_t v17 = (char *)sub_12B3940(a3, (uint64_t)v22, (unsigned __int8 *)v7);
        goto LABEL_59;
      case 6u:
        if (v8 != 50) {
          goto LABEL_52;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v24 = *(void *)(a1 + 56);
        if (!v24)
        {
          uint64_t v25 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v25 = (void *)*v25;
          }
          sub_12BC8F8((uint64_t)v25);
          uint64_t v24 = v26;
          *(void *)(a1 + 56) = v26;
          uint64_t v7 = v33;
        }
        uint64_t v17 = (char *)sub_12B39D0(a3, v24, (unsigned __int8 *)v7);
        goto LABEL_59;
      case 7u:
        if (v8 != 58) {
          goto LABEL_52;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v27 = *(void **)(a1 + 64);
        if (!v27)
        {
          uint64_t v28 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v28 = (void *)*v28;
          }
          uint64_t v27 = sub_12BCA10((uint64_t)v28);
          *(void *)(a1 + 64) = v27;
          uint64_t v7 = v33;
        }
        uint64_t v17 = (char *)sub_12B3A60(a3, (uint64_t)v27, (unsigned __int8 *)v7);
        goto LABEL_59;
      default:
LABEL_52:
        if (v8) {
          BOOL v29 = (v8 & 7) == 4;
        }
        else {
          BOOL v29 = 1;
        }
        if (!v29)
        {
          if (*v6)
          {
            uint64_t v30 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v33;
          }
          uint64_t v17 = (char *)sub_1885AC0(v8, v30, v7, a3);
LABEL_59:
          int v33 = v17;
          if (!v17) {
            return 0;
          }
LABEL_60:
          if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
            return v33;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v33;
    }
  }
}